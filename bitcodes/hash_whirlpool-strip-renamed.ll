; ModuleID = 'hash_whirlpool-strip-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/ext/hash/hash_whirlpool.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { void (i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i8*, i8*)*, i32, i32, i32, i8 }
%1 = type { [8 x i64], [32 x i8], %2 }
%2 = type { i32, i32, [64 x i8] }

@php_hash_whirlpool_ops = hidden constant %0 { void (i8*)* bitcast (void (%1*)* @PHP_WHIRLPOOLInit to void (i8*)*), void (i8*, i8*, i32)* bitcast (void (%1*, i8*, i64)* @PHP_WHIRLPOOLUpdate to void (i8*, i8*, i32)*), void (i8*, i8*)* bitcast (void (i8*, %1*)* @PHP_WHIRLPOOLFinal to void (i8*, i8*)*), i32 (i8*, i8*, i8*)* @php_hash_copy, i32 64, i32 64, i32 168, i8 1 }, align 8
@0 = internal constant [256 x i64] [i64 1736243315775910104, i64 2532021497559467558, i64 -4123538287044750920, i64 -1663930631485141509, i64 -8680927394185276469, i64 -5136114888365413103, i64 72343471490662921, i64 5714823076457127437, i64 3906547456148401307, i64 -6438279781937819137, i64 -3255416629164656372, i64 -723403927319021810, i64 8753301652875834006, i64 8029814160345718320, i64 -7957439901108060307, i64 5931897472728671480, i64 6944723661718667335, i64 -4846776187848596171, i64 -7234093149821523145, i64 -8174593464645975670, i64 -6655275011230311470, i64 868121657887955052, i64 8897971003671115396, i64 3834203984925649536, i64 2097960673226603253, i64 -2242608032518775373, i64 -2893708068075556063, i64 -4412912173006874212, i64 3327799684219952195, i64 5425484375942403625, i64 -72374259239755427, i64 6293570848374042325, i64 1519212901301299901, i64 8608561932266827496, i64 3978890927370104466, i64 -1880899471159142498, i64 -6944754449305230573, i64 -1085112488676557533, i64 5353149700813853728, i64 -2676739228136265404, i64 6365975894395564194, i64 -3906587039829946417, i64 2966082327036121724, i64 723434714905580634, i64 -5642448818175770800, i64 -6872287833246507575, i64 7740475459830994452, i64 -8825596744442374183, i64 -4774432716626892996, i64 6727649270040935055, i64 1157495543850606736, i64 -795738602716531449, i64 -3761900096849933347, i64 4485295228068461779, i64 361717357452790317, i64 7451066388424609400, i64 -1953234146556652137, i64 2821395383521594882, i64 4702067253759738483, i64 -8391588693670032473, i64 -6365936310716115978, i64 9042640353392655026, i64 -7668101200591767735, i64 -2821426171116278442, i64 -289413469802796176, i64 -1229869803079876147, i64 8970305677995145403, i64 7378731713027099761, i64 -2459717610027178117, i64 1663899844282625711, i64 5136075304531824197, i64 -7017097920795369190, i64 -3834234771978483244, i64 3255456212998249048, i64 -4629763365831875794, i64 506404300434116159, i64 -5931928260477499476, i64 6510645244653974704, i64 -8970266094699471889, i64 3689517041410074294, i64 7161727687909885532, i64 144686942981325842, i64 -6148941081418905197, i64 8174553880955773662, i64 -3978921714958496314, i64 1808586787266573009, i64 5280815025683993147, i64 -2749091495987728545, i64 -940425546232366799, i64 -2025586414677599320, i64 6582979919782524601, i64 -8608601515418841668, i64 -7306436621312186050, i64 2749051912299891723, i64 3617173570187846847, i64 -5714792289397998247, i64 -1591595956088156174, i64 1085152072358370935, i64 -3038395011056617677, i64 -9187278916447232524, i64 -4702106837053578969, i64 -3617213153867298837, i64 3761860513703946377, i64 5208480350555443250, i64 -39583842245804, i64 8825636328274130061, i64 -8029783372598723228, i64 6872318620299345565, i64 2314991083892785213, i64 7523471433638727695, i64 1880930258756187338, i64 -5859602380904185417, i64 -5425453588881181315, i64 6076566822987606222, i64 -7812770550850962561, i64 2459678026337240111, i64 7234062362232866915, i64 -1012777813279572182, i64 8319223231750006476, i64 1302182486831932546, i64 4629732578631188602, i64 578747771925303368, i64 -4340577497878324331, i64 -1374556745523018273, i64 -2604404553007715507, i64 -6799944362024280128, i64 -8246919343413983343, i64 4412951756846758600, i64 -7523431850334669989, i64 0, i64 -3472526210887285767, i64 3110769269479528046, i64 8536227256869317857, i64 -9042609566190134810, i64 -2966042743204630232, i64 1953273730246850243, i64 -5353110117659478156, i64 -5787258909682482242, i64 7668140784434009117, i64 5787228122471309546, i64 4991405954274462295, i64 -868090870835381448, i64 3472486627743391917, i64 -1157535127682366524, i64 4557638699290164954, i64 6148901498116680391, i64 -6727618482452538917, i64 -1519243689041999383, i64 7306397037630376554, i64 -4991445537570395901, i64 3400143155441655370, i64 -4557599115987935858, i64 -2387365342176239264, i64 2025617201736464636, i64 -144726526285387962, i64 5570153726198716959, i64 -7885114022341625482, i64 8463892581472594682, i64 434060828943977526, i64 -8463932165160695378, i64 -5570122938604029621, i64 -1808547204112461435, i64 1012808600868232318, i64 2242647616206880487, i64 7089393012512900181, i64 -3110729686185691846, i64 -6293610432213922431, i64 -7595775321824808622, i64 -434100412245938334, i64 -4195890554896738397, i64 2676708441077139984, i64 6438310569524114091, i64 -8897940215932512816, i64 8246888556353021125, i64 4123577870886728428, i64 5497819051069642774, i64 6799983945170271380, i64 8680966977478848671, i64 4051234399664500965, i64 -8319262814904121960, i64 -3327768897017168105, i64 -6510605661510084636, i64 -2097921090074584671, i64 7017058337115652686, i64 -5497779467381802174, i64 2387334555115012660, i64 -7161767271053515512, i64 2170304144716741870, i64 4846736604017100385, i64 -4051203611915676751, i64 -217061201682897585, i64 289373885962651684, i64 5859562797599859427, i64 -7378762500079669467, i64 7885144809550436898, i64 940465129378093669, i64 -361748145199781511, i64 -2315030667047165079, i64 9114975028790426793, i64 2604364969855436825, i64 4268264813330134782, i64 -6076597610196677734, i64 -3544860886016359952, i64 1229839015341269657, i64 -8102249993155837053, i64 5642488401328053252, i64 -5208440766865509530, i64 -1446909013645014048, i64 4340608285625055425, i64 -9114935444956569603, i64 -7740444672081906368, i64 -578716984874831076, i64 -5063771417143185640, i64 1374525958322595467, i64 3183112741776545873, i64 -3183081954036106491, i64 -1736212528714951796, i64 7957479484948208697, i64 -4268225230025812566, i64 217030414471988763, i64 6221236173244968156, i64 4919071279145388126, i64 9187309704187936416, i64 -6221266960991694968, i64 3038425798257300583, i64 -4919102066348168438, i64 -4485264440859385977, i64 6004232147857221361, i64 -2532052285156252302, i64 795778186396243539, i64 -7089423799563376895, i64 7812810134152927275, i64 3544830098965619364, i64 8391557906075085043, i64 -651051660272340715, i64 5063740629402750028, i64 -6004271731699202651, i64 -8536258043928178763, i64 1446869429811161268, i64 -2170273357121790022, i64 1591556372792487078, i64 4195921342107907319, i64 7595806109035713030, i64 651091243415966273, i64 8102219205558788311, i64 -5280784238087212689, i64 -3400103572145717986, i64 -1302222070125508650, i64 -3689547828996373022, i64 4774401928888550504, i64 -7451105971570332372, i64 -6582949132731787795, i64 2893738855813894261, i64 6655314594911860870, i64 -506435087642923669, i64 -8753270865675415102], align 16
@1 = internal constant [256 x i64] [i64 -2875521561064867792, i64 2748079282416103238, i64 -5132196748126652015, i64 -294730105180950579, i64 -3780904762605788909, i64 1276973743900025453, i64 648800938026861826, i64 959072250135473822, i64 -7262557046830141844, i64 -25149530398194607, i64 924032251285388729, i64 1078038113977829111, i64 -7603912383438814990, i64 3490130975384391390, i64 7895251594558369599, i64 -553289277800577116, i64 5143217003496472000, i64 3872177358564324965, i64 4006967089757474091, i64 -8462670508158841855, i64 -3268588899719375525, i64 7785611256322341912, i64 -8900383961469973770, i64 -9208394677538659990, i64 -784438375537415878, i64 -5485137334509549603, i64 2438654650148629683, i64 -7150939747930673767, i64 4840858018057655900, i64 2975554653898570390, i64 6773131127615070689, i64 -3073892282504440146, i64 -4821924375145463510, i64 -1695755061862353170, i64 -7910792801487033490, i64 -6996933885238225193, i64 1414023933690960163, i64 2589834664706512893, i64 2326753750232498068, i64 4961517976007120297, i64 -6748546746227743312, i64 -3474024619444876657, i64 8946727919793048914, i64 6488009380268614164, i64 5814624301376163711, i64 -3917954952396727715, i64 1471388113023523542, i64 -2772663560724239593, i64 4376863108514280295, i64 -8116228246324759366, i64 -8065929065279762400, i64 573352398386562037, i64 -2464653119542869877, i64 -3225071047222114692, i64 3244004690134307082, i64 8676017012631135950, i64 -7501619600829492267, i64 155136263792737102, i64 8304990764571711618, i64 -6373847918672306933, i64 -673385285055086253, i64 -5585169521077938950, i64 5302308438491855671, i64 6257989485318807469, i64 8141377604919439595, i64 -3607683880814677567, i64 -4936933732062359048, i64 8171331297039868876, i64 8925533388788895399, i64 -5830165508305433810, i64 4992036782775355022, i64 1918144500270947361, i64 -3113454023208942199, i64 6353784901169682778, i64 3368621906634832227, i64 4541606566188030734, i64 -6003951899915508921, i64 -5739175315047305292, i64 -1187961606539266789, i64 -5317849782863659162, i64 6657274150270268102, i64 1297601876053723652, i64 -7806239457195509687, i64 -2418026346192066334, i64 -4122825523110948979, i64 -3379642127644852942, i64 4272026231931826322, i64 6906790388984879791, i64 3599206164606426617, i64 -6276923128232064805, i64 -5090374411381232970, i64 -4861486150210776563, i64 4511087656337459241, i64 803372018449628748, i64 -4669614028206769564, i64 6462860056033053309, i64 -942965894196532529, i64 8579092565796074270, i64 3735126159460312759, i64 -828521342684579299, i64 2863936156684876897, i64 -1455281619640852857, i64 -8560158922881768344, i64 3623225328265754000, i64 6124895338599490787, i64 -8252148172454391820, i64 7246450656531507773, i64 -7106856815144321346, i64 4404556170235060288, i64 1110252470856570320, i64 -3883762694224842188, i64 -5211035842531218367, i64 9058063670697352821, i64 -3579143112744101464, i64 9192853401890514235, i64 3396315037072992836, i64 7161959865857337800, i64 3094520380297777919, i64 -3714497924223229210, i64 -9074170198439732700, i64 8809111365512486272, i64 5190407504214894608, i64 -7655060348871448421, i64 -2311212371500893243, i64 5610318879673192619, i64 -4566190707053617313, i64 -7958549872857283833, i64 -4017987173323781766, i64 6599910245824000307, i64 0, i64 -445910119738846077, i64 7938486786630977366, i64 -2200440777453620244, i64 -1836762544566128615, i64 2942775251089402289, i64 -4387883260804827338, i64 8409827916040461175, i64 -4706350092581263037, i64 2119623902039105492, i64 -1562660708981011040, i64 6288508360808615050, i64 4103891880197691643, i64 -5967215904258396064, i64 -4255919669830257469, i64 -2720385297272159362, i64 -4083263713684874070, i64 -2620353145062485927, i64 -1591201614494734903, i64 7666645581448604874, i64 268732542020577385, i64 5345543768007611230, i64 -8160311247832684643, i64 6980260975811133857, i64 -280317808957428680, i64 5115523838699581159, i64 2255543828168729754, i64 8544052463863652409, i64 -399283483831190294, i64 3892805628161170956, i64 -5869727352092321783, i64 5454618854153601145, i64 -8798091110143272495, i64 9083213132376061468, i64 -1792679508697390274, i64 6152588434679003076, i64 4239246760401085365, i64 -9103841264529755571, i64 5951109307797140529, i64 7132006105019529967, i64 -6645688848969435497, i64 1163377396954804554, i64 -6099745842561670990, i64 -3421464498751099371, i64 -4219183639814494236, i64 -1425044154700407438, i64 1606742924502655384, i64 -7755657718810395716, i64 -6955676594423233040, i64 -1929729904650364816, i64 -7454429306277296635, i64 1716383159656297151, i64 -1970987092389328041, i64 -6781608843823329831, i64 5647902719087737026, i64 4806383099496711547, i64 3756320415578170690, i64 620542692938798629, i64 -1288558942117403076, i64 7008519186538451590, i64 -5636317349067424621, i64 5763759627715161061, i64 2595203752107447304, i64 -2066781309921785694, i64 2709365282425325359, i64 2480759544201856218, i64 7281490689742354714, i64 8789613393935021545, i64 7629061879477208227, i64 -6233405310093517828, i64 1811613151611696200, i64 -127442278648785034, i64 -7301553707245552309, i64 -1094711023404920447, i64 -7417128127252900574, i64 -8966791074738829053, i64 310271346469399452, i64 7401586714161009011, i64 -2239437403510316853, i64 -4522672923273737096, i64 -179720404657717473, i64 4653507500464995893, i64 2087409613877742835, i64 1781659493849982831, i64 -8425369260412870874, i64 5849099151219727448, i64 419911650344614075, i64 -8293405394552005421, i64 4138366764399971292, i64 -6141568248028662891, i64 1946402814080585478, i64 -2569771681563667540, i64 6792628961749387656, i64 -6881641099109097730, i64 -8599155514579798193, i64 7433801036681019988, i64 773418291970534763, i64 -8664431848773459297, i64 -1057409878741351770, i64 8276732485122821029, i64 5983888813688629014, i64 116422126358811431, i64 3128995333217436120, i64 -6615451658915285662, i64 -903969199422457368, i64 1582723898286475761, i64 5496157383716127628, i64 -6508637649865464251, i64 -5365606716790761713, i64 -5470725313172323288, i64 -4980451618918284577, i64 -6478966446332293588, i64 -632128028598742412, i64 462016681840988370, i64 4686286937634909458, i64 -2922712061783331360, i64 8049822468817900657, i64 2220503760597071805, i64 -2959448160516473145, i64 -2104082523306927227, i64 7512639787479226244, i64 3213485849005310509, i64 -1322751337732436395, i64 8442042169843091536, i64 -8765029149990833736, i64 7780241894035111917, i64 -4429705700632648687], align 16
@2 = internal constant [256 x i64] [i64 3519589601760559224, i64 5054766267351893423, i64 -7946382987719442695, i64 -3604030991369759889, i64 1426382721529629857, i64 7859265928821254498, i64 146649566740023301, i64 -7057897839739846034, i64 7825908386669964782, i64 5908624470756972804, i64 -5112479675711299907, i64 -644307259958625530, i64 -966451505240871040, i64 -2436324873166954546, i64 4570469250930703599, i64 -6559402343692850681, i64 -4591595327007479811, i64 7292942690637613430, i64 3114128758825266381, i64 111057881403360396, i64 6616530726099841301, i64 1759794800880279612, i64 -683285471190843510, i64 7674192270349153761, i64 4248333835833305193, i64 -2471384515002477753, i64 -5538908746193307988, i64 -7377807950259003667, i64 6648208253122407830, i64 -7626481707653569926, i64 -2207327871708519647, i64 -5848672508800695786, i64 3079640901540489281, i64 -1231603141855174730, i64 7967491403829192171, i64 -2909635534506329258, i64 2527539322318458073, i64 -206056240454773993, i64 -7773131274259371393, i64 -6249629751705952619, i64 -5718911439723759067, i64 -8084020940917635382, i64 5943670867046782349, i64 1466495667400232994, i64 9174027818994098511, i64 6758109328032426266, i64 -3020671339776475174, i64 1718551539876191403, i64 7439029307424211315, i64 -5003678005204233676, i64 2346393067840372816, i64 -790393876611009789, i64 -8368308459647854912, i64 8994601320962780614, i64 733247833700116497, i64 -3568989010440806426, i64 -3055722151158713517, i64 5621098335988819387, i64 -9046815478604811688, i64 839793285022821533, i64 6050207487916200193, i64 -382105038631350380, i64 3983879814423895291, i64 -5956335033720992097, i64 -1481407218527270096, i64 -4481663345510964367, i64 -523688055656364143, i64 -3715075627093190685, i64 -6378260504575629682, i64 3363932835765794891, i64 -8195065576641068474, i64 2385393355205805276, i64 -8514958026253656379, i64 6510002935683708313, i64 7146860489077657977, i64 1026546967180163099, i64 5164693833621766435, i64 -5426738206418998737, i64 2012972158036438197, i64 7401159335192266239, i64 -4153335477050327054, i64 293299133480046602, i64 5301768835926997304, i64 -2099115642514722904, i64 -8230670507523436849, i64 3661735568873212029, i64 -7909647741703589264, i64 -5809685467115190630, i64 -490343759185001699, i64 -2618592616335062200, i64 -5280088639813197270, i64 989816136256730258, i64 2971982791712613576, i64 5479515318829591998, i64 7259576318033038842, i64 9032444801834871114, i64 -3462447974344746134, i64 2195239901472978995, i64 -5245614028208347482, i64 2158491409642976442, i64 7000773872291060092, i64 -8652595978378074402, i64 7532609253189926372, i64 -8056297308309390731, i64 -2065744854683505884, i64 -824868488215857265, i64 4423819684190680298, i64 -4711504771899473346, i64 4628891315967368608, i64 -3454427590106257451, i64 3803881535985864818, i64 4735445597743356204, i64 8466121563651230046, i64 -6282991709083887079, i64 4287307631838883045, i64 4913183250192666026, i64 -4007248860397959191, i64 -59969623802389742, i64 -1815949608464695390, i64 2630685002065678426, i64 -9188961445583242659, i64 1173196533920186408, i64 -7235661983280572696, i64 -4188368627525995653, i64 -6102980185100151152, i64 6899692345191653663, i64 545372666862574723, i64 8847388804269340105, i64 3700718195332074737, i64 0, i64 -8936883497108293932, i64 6227962801272079751, i64 -1377689758507558989, i64 1866322591296414896, i64 -5681054713171738967, i64 3946027503098517623, i64 8607704580810457435, i64 4881532214529954089, i64 -3162254356801488929, i64 -6851575576997610995, i64 -8478231610691087796, i64 -344257142532617448, i64 6966277184553000432, i64 -4340080328485950604, i64 9140687937749378499, i64 -6140845742105456100, i64 6474947708940613904, i64 -3897325709354728603, i64 -3861162243745574932, i64 7567097110474701160, i64 6794294869909005715, i64 -7093520431528784153, i64 -6818204789166391679, i64 4106187868720652396, i64 -1781457335953278162, i64 -7341063873789865372, i64 4140658065098859744, i64 -1514769175905202244, i64 879897400440139806, i64 697647317910168728, i64 8740275983488317760, i64 -3349016869143682215, i64 2053093934360326198, i64 4532625770058610787, i64 -4299422093702711305, i64 -5387759995186778461, i64 5584930455018809650, i64 3554068628592051444, i64 -1197119699797042374, i64 -7519949502010792202, i64 5336806401763521969, i64 -5572261873117957600, i64 1571901973136168110, i64 -1962036225117079641, i64 8281056735632414173, i64 -7487713440395666847, i64 -4858154338505274821, i64 -1108034522265884795, i64 8134970118845816280, i64 403226699749921926, i64 -4677038990747908430, i64 6333369107008012555, i64 -2764679232987446451, i64 -4445508710355095560, i64 8881859000647545157, i64 4770474333126596005, i64 2668554974297625814, i64 4390479802945957990, i64 -8763649444554792366, i64 -7804237020741011716, i64 -1923040352978291925, i64 586598266960093204, i64 -6709429610019180024, i64 3397290377917086919, i64 -2728498106471723068, i64 1901940767992932409, i64 -1622990235552283851, i64 -6671555222560590204, i64 -240522021606336613, i64 5195223384604294580, i64 8574355869112452567, i64 5447855452713595197, i64 -9083533063714095407, i64 2493042634580396117, i64 253203848516013193, i64 -7204547406345647509, i64 8315535762463904081, i64 -3755742692329714848, i64 8701302187482742220, i64 2305140976382999743, i64 3837230247683871998, i64 -928594778688853236, i64 8005352545607852391, i64 2777334568805701727, i64 6363916318897110428, i64 -4970333708732868936, i64 -3202930252491297956, i64 -2577907890191968309, i64 -7662095468989223181, i64 439948700220069903, i64 -5990818475779126765, i64 -8620377577669518775, i64 -98939004581322850, i64 5731017071805407543, i64 6081876184485481858, i64 7713183727261299053, i64 -6951374464550353182, i64 -6417256376714419710, i64 -6524910071181431157, i64 1608641634512885799, i64 2810700941410278611, i64 -2870081123496736831, i64 7107860201712227829, i64 -1660855792557586503, i64 -1074681395341237495, i64 -8337211543619499453, i64 5018607216835168550, i64 1131962103369383063, i64 2932991334800465988, i64 -2325297898350093502, i64 3217283269025771598, i64 8428269252325854674, i64 -3312844573081243696, i64 1315342501032839213, i64 -2245202259167107155, i64 8173952745304676692, i64 -4819184957726339401, i64 -4046785610500981890, i64 -8799245544983875877, i64 -8905795411533223337, i64 3255144410804434114, i64 6191786089848785166, i64 5797584250260184456, i64 -5150327571810035151, i64 -1338702716822056129, i64 1279733154789606564], align 16
@3 = internal constant [256 x i64] [i64 8660659681433229504, i64 -5816919936340319483, i64 -463386122773346690, i64 8056372286187890707, i64 -6839899626097178804, i64 7092344473251395753, i64 360860820059717896, i64 7970823024773517122, i64 -1266466738047273299, i64 311310940490606169, i64 -4775771830236491042, i64 501886333031282171, i64 -9155089644009195025, i64 -3540339001894277281, i64 -1207125703133326852, i64 550838086898373290, i64 -162051107321978841, i64 8531284153860799625, i64 -3662772730470163540, i64 -8358247088550408700, i64 1539055297945314161, i64 4330329840716614752, i64 -8433407586309407745, i64 -2203808101619714635, i64 7582642428028657128, i64 5178492924969082963, i64 -6002416667437836298, i64 -1325856254988402082, i64 -7612135404531601811, i64 8833293122494614370, i64 2441335822790688419, i64 1634478285884839810, i64 4695773459736958376, i64 -5265015314541611105, i64 -1482086461500278875, i64 6257644917493065083, i64 -2800372967001383028, i64 1728577349720994003, i64 9193008242814700138, i64 -7662517584237962594, i64 2715849075629840634, i64 -3850630690810640122, i64 -8263405850037311147, i64 2455686695990331984, i64 5728385975164252641, i64 1899896309548753001, i64 -2677930476824335489, i64 -6118182401271233188, i64 8315682022593838465, i64 3799506866802351570, i64 5773773120955486336, i64 285142900071199987, i64 -4572317129309959402, i64 -4144205292789809427, i64 1227843347995165992, i64 -1815381214270232801, i64 6040901484532982899, i64 -4950016573242071259, i64 6377786746412286258, i64 -7130421367235245268, i64 95691217037600593, i64 -7711655159865442865, i64 -344725939664546340, i64 -6940795961366554482, i64 3525035360911096715, i64 8197059222880382499, i64 -7928381000639480633, i64 -2032124647230314985, i64 -8167423206381855322, i64 5417459915484305336, i64 5084077201784129282, i64 -2584755442571633020, i64 -4212602008989873634, i64 -7396502486939062923, i64 8746886302374739857, i64 1949564988114601784, i64 2542190376615062785, i64 3437566317701716714, i64 -5396456380352265364, i64 -43146815384833147, i64 -952972689200291009, i64 721721640119435792, i64 4055935300639304249, i64 -6277210351778303569, i64 -3490915570490554354, i64 9021502909306902984, i64 8111611064794827122, i64 -7300511081686640250, i64 2159812415828521667, i64 5249975487361180491, i64 3077851197381630946, i64 -7922468874889820108, i64 -4023615958343837020, i64 -4734396849789065683, i64 -403987844235251059, i64 5367544946313834729, i64 7696637374658504987, i64 3683512451799453560, i64 -6433616549173275162, i64 -5035599975586037644, i64 8962488433641701017, i64 -2411699806292161242, i64 -1988188378166709059, i64 8471326185114912890, i64 2658061663564726187, i64 -8073672674780022025, i64 -1567986523193044748, i64 4521224108874227650, i64 -6899447420938084323, i64 -3039912807366825881, i64 8229424632573729488, i64 3189031972035014169, i64 6806484626923238601, i64 1848954508622517402, i64 -1928807743587183636, i64 -6177760965190737395, i64 -1600920384695344121, i64 1368860030377652699, i64 -6708449798685363265, i64 6495459576702833296, i64 6737519458918416442, i64 2886886560477743168, i64 -1685588967494532266, i64 8918780845751790643, i64 -8022232704558048362, i64 2260737338399170913, i64 -9005068892761060068, i64 -3928607559569359371, i64 -1066407980118403124, i64 0, i64 -3133386244791480522, i64 -8694640898896811195, i64 -5481758747501693289, i64 -5757317200411983260, i64 -6219144707235129602, i64 8590267860447402968, i64 6590864903470233025, i64 2973429840768053009, i64 -2318195565294949769, i64 982042349433344186, i64 5515316648691189010, i64 1800095096485180363, i64 -1125709484354686819, i64 8413785063654420267, i64 -4359807424056770587, i64 2065682548419810706, i64 1178214269094896249, i64 7334650663316482563, i64 -1384176951735261937, i64 7523548753032297145, i64 -7827737535798562971, i64 -1757091321095929778, i64 -9105890461236601154, i64 7798259952458407136, i64 3379748102064045499, i64 7249140967073729874, i64 -2289668563646901532, i64 -4833775867634551409, i64 2165164920358307376, i64 -7491264595108918748, i64 4645827721487889145, i64 6472101366268421731, i64 3899129976229203568, i64 7151407379169157112, i64 -593255369856949705, i64 -6650344588970568466, i64 3624695836486314025, i64 -850808047874697532, i64 4246721799410416027, i64 -677893149083581082, i64 -5671703028989418187, i64 2356133955309754866, i64 -5902582469027527596, i64 -6348732479342021961, i64 -2489667913453913643, i64 7032395335090392154, i64 4304478476890889930, i64 -8795354732479809305, i64 -2850526534490375971, i64 -8789451368331310060, i64 -5566704424478060090, i64 817373257491457345, i64 5609692806704521795, i64 -521768426665320145, i64 5006668750338307057, i64 -6538606392087666411, i64 -3015994906724623212, i64 7367024903598907120, i64 5946547299505226530, i64 -246658082976053386, i64 3163022261290007731, i64 1443443280238871584, i64 622309636927214002, i64 -4094012194623153732, i64 -4262056243966153393, i64 4114712316286864744, i64 3884770272440482435, i64 -8889144829253263434, i64 -7206698942939693353, i64 -5456083305536412611, i64 -2920867777941324859, i64 4416793921675766577, i64 -3350131876774818242, i64 6134633941015204232, i64 -8573864612980158708, i64 7754077392790179402, i64 5869147678644287441, i64 6974915751787096843, i64 -3713005428302398211, i64 -4674739155526319748, i64 -129126007420840748, i64 933121399138809835, i64 7453203094287858081, i64 6856320396762551192, i64 -7180900355672101763, i64 -5135504542742621226, i64 6688844799228503915, i64 -3757064842668315049, i64 -894621188880874386, i64 1082582460179153688, i64 1417750246087546506, i64 5298588608893895706, i64 -6989973102165655585, i64 3985554457522776353, i64 -9055499519933273523, i64 7884407374068759473, i64 -2116824033602059962, i64 191105374392243106, i64 -8384168838365193042, i64 2816529923864005464, i64 -3231612431154373220, i64 -4478782084740191161, i64 -764868455504268907, i64 -5050519300594633593, i64 716377966178727651, i64 4867349161986835978, i64 2757792507882023945, i64 -7561625647016146628, i64 4911373391980663968, i64 4818775605625741659, i64 5633059847728010928, i64 -3281726398977787187, i64 -3399647718896211601, i64 3247729788351416648, i64 -5917493032434962265, i64 6084767402097293017, i64 -5206971711971929906, i64 9135506686525828411, i64 -2628445438275498962, i64 6306280012011356714, i64 -4454855422496827212, i64 1032992980944462921, i64 -8624264471073773475, i64 3582761234819013850, i64 4606456710939801747, i64 -6624299693853473212], align 16
@4 = internal constant [256 x i64] [i64 -4577855316546789352, i64 409623220726238243, i64 9149504340774764486, i64 1400564490963552232, i64 5521716383006008967, i64 -6241306210701092168, i64 577870364881781761, i64 4786937233943765327, i64 -5913669846805587914, i64 6414341927736877734, i64 -2396555961963483182, i64 -358327476701236235, i64 -1188683573528757895, i64 6903699578414932335, i64 -220888116891648367, i64 -6194801375984855726, i64 2881670749379140960, i64 -8541528361787405636, i64 -5995088011126417765, i64 327638567499989646, i64 8148520061043455651, i64 6934444378581381132, i64 -32942998384021125, i64 -5340870584203619275, i64 -1699762559925783523, i64 6001008793136179168, i64 -671965286448530473, i64 6840292307607105474, i64 7896600440248121390, i64 7096149266976682315, i64 -6691819777469521922, i64 -9072872167974682281, i64 -6322725410260560875, i64 -6938095493713510025, i64 -6490972863653749705, i64 8887527992124093413, i64 -8297562271264061793, i64 -3235839476434409488, i64 7674015156468856138, i64 -7019518330992439334, i64 -421736778775888552, i64 489361632129516489, i64 6164674158160094249, i64 5774200049190447114, i64 -2211408907460280655, i64 7573468843941608096, i64 9212911370929680747, i64 6677457095522332293, i64 -9118831309916090691, i64 -3299807502046238371, i64 -9200818235601043440, i64 -935634883039660044, i64 1639464049085975499, i64 -1313224994607663042, i64 2887100024595223557, i64 2298751676345450855, i64 8310220585785669604, i64 2718852571202034727, i64 3627792931374569793, i64 3214738523240994443, i64 5837038910888715943, i64 -3488888166788765315, i64 -2523362377029292395, i64 -8169620610509944872, i64 -8416968833059009541, i64 2554035553916854254, i64 -4066195504407712388, i64 1721444270007027046, i64 -6445029866275515427, i64 -5166984817935950825, i64 163974864645325127, i64 -8873180767612681570, i64 2217329938578149322, i64 8473903508635890733, i64 -7964225413591349569, i64 4042840754358787079, i64 81988025196580525, i64 -1571839075405892262, i64 7833197842398393987, i64 -8791195014874805197, i64 4607963468860199267, i64 1155740729763563522, i64 4123126357430014634, i64 -5789127875970868879, i64 1067227521621690312, i64 -3999985020384484327, i64 8246251701045639497, i64 -8747486500002118695, i64 -4387076469064273934, i64 5424827269592099811, i64 -2149704964898066085, i64 3788105339967642248, i64 -6572958307288722790, i64 3296155588050196518, i64 -8216143797840328654, i64 -1636357690425804112, i64 1975620028768814057, i64 8661300005066193935, i64 -1826571165593406507, i64 8411068190032935552, i64 -7386922465462664514, i64 2800825465110860749, i64 -4763567567355457484, i64 8824117590537813320, i64 -6114512439850574849, i64 -607998536189282950, i64 -798758481773430128, i64 -4449909798676242081, i64 2134776854649798688, i64 7482115120540728680, i64 -3426618323849549798, i64 1813897007088960174, i64 -3936579841512117580, i64 -7342652113319342764, i64 -1376628691969018221, i64 984674437760714786, i64 570207157050707300, i64 -2660783869909670927, i64 -4637890900453502605, i64 -8045077643276433390, i64 4205658889586220352, i64 4622962919054254088, i64 6262426349395454915, i64 3709776283613042668, i64 -7597384220484613157, i64 6998417626907131553, i64 2054494176737562253, i64 -735922063658847171, i64 -3679102952106662249, i64 0, i64 3950927882067319759, i64 5010068141643639851, i64 -7515402900051933834, i64 7255327477516612226, i64 -96351128050565162, i64 -2848748027687244773, i64 -4513882858360279371, i64 1236594058960275119, i64 8637855833124418922, i64 -5040195479727481520, i64 1318580898341652805, i64 -3812020862539535373, i64 -7066041518390198224, i64 3131342891535801327, i64 -1890527942736348097, i64 -7918266271717308075, i64 8723571278077932194, i64 244823761267363818, i64 1147514563389131109, i64 -5086700314376351046, i64 7319297492119436335, i64 5685686291023275968, i64 -4719313497079521314, i64 -2275381056274403300, i64 -4958771847593339907, i64 5937039668012722509, i64 -1954499056850799982, i64 -8089332469230876299, i64 3467222189290690566, i64 2636868227078689418, i64 -486255393728433486, i64 7158983455716851686, i64 8085681508717574158, i64 -548525567228543969, i64 4032907862335460706, i64 -1250957007195441196, i64 2968520323666320040, i64 -4254721517174758762, i64 -7261228240801774599, i64 7419284165792969669, i64 3868954988091118629, i64 -999602668268062375, i64 6101838530454235780, i64 -5212946506978241166, i64 -3036144214879902663, i64 6512653757691211084, i64 -3874295708997753506, i64 -1763739111334019720, i64 -2461093066564902856, i64 1478875680388942476, i64 -4129027799320009775, i64 4686936476752391845, i64 4849771663067361250, i64 3456726355903879521, i64 -1061306610762910029, i64 1559725637615322145, i64 -7721943792162682212, i64 -1124144063577163746, i64 2473186897678242115, i64 8573890182376799175, i64 -5536079185212286980, i64 2311481459527127044, i64 -5618061437939132079, i64 -4843851035676418407, i64 5747958865831242093, i64 7510062874930000909, i64 -8992024370864271366, i64 -5294927586758009889, i64 -2910454929262975618, i64 4446258004939280420, i64 -4190750093957403589, i64 3548075209115014827, i64 4526541971745808334, i64 -8622947870719261679, i64 903257063848609423, i64 5362551323622253902, i64 -3363780561662908745, i64 819879299072625643, i64 -158619115530162116, i64 8988938554914717313, i64 -3098980942097388908, i64 -1509564469331100681, i64 -6816357359016091975, i64 -7467207278394651629, i64 9051206456764575788, i64 -2974421920175133741, i64 7736290862055275495, i64 6326392240795985262, i64 7994898324190934980, i64 1733611094645345283, i64 -8497258009576716970, i64 1894195056739618116, i64 -2333147591644028545, i64 2393469175351320233, i64 5585119289958639658, i64 -5661751462691350853, i64 5107820332811625409, i64 -6772667334196506285, i64 -5869415776597026852, i64 6352070345352752139, i64 -7146325295814062435, i64 5170651528212295020, i64 -7641092735424674767, i64 -8666639875569300108, i64 -2086871875669524490, i64 739589023043290438, i64 659290973325265580, i64 4365975636129947273, i64 -6898343975328657388, i64 6576064399660917729, i64 -5742603383004047338, i64 -3615698945642403782, i64 8057170658345990505, i64 5200833215216559113, i64 -6364183482495607440, i64 -2786477544814746954, i64 -3551161841108359216, i64 4287083621231989741, i64 3376439554789349324, i64 3051052855889892674, i64 -5421721331838723432, i64 5264239493600553636, i64 6739725306475094056, i64 -2724193412367749796, i64 -7836283778607036424, i64 4946097817937912454], align 16
@5 = internal constant [256 x i64] [i64 1783557603617937504, i64 2523615882033439628, i64 -4143600202868668865, i64 -1723911301867444089, i64 -8697399673968163034, i64 -5140469279078434598, i64 74314900150747396, i64 5711248902566399777, i64 3940067399246952152, i64 -6460127440258292062, i64 -3251953278433176977, i64 -721975657085143565, i64 8786383177418111481, i64 8025360514688184225, i64 -7927198188378680962, i64 5956581862273077845, i64 6928785554005844125, i64 -4861224145704403766, i64 -7229177716336256170, i64 -8213285882169487870, i64 -6669526089038847050, i64 891778801808968752, i64 8935012977115626481, i64 3870247302328563156, i64 2155088123638127988, i64 -2282401568615505753, i64 -2884928625917307013, i64 -4440850938524941777, i64 3345495421214404280, i64 5432038885918722865, i64 -98197515043668257, i64 6305627368431507265, i64 1560568922700584276, i64 8619809349029033921, i64 4009869903375316956, i64 -1910838132804819533, i64 -6949941380263207098, i64 -1093503908523740953, i64 5362238580511623733, i64 -2693550972883772849, i64 6411478460083492989, i64 -3961256103210530557, i64 2978442113985358244, i64 743131409321429544, i64 -5629130651003145730, i64 -6887945164969434950, i64 7746150497100983217, i64 -8837000249885752018, i64 -4791421641307603506, i64 6760523966510357865, i64 1189038402411958336, i64 -796288358179080969, i64 -3812648327568438517, i64 4534498639254273784, i64 371565704660714772, i64 7430911684642301825, i64 -1985150833898756937, i64 2820866685335447452, i64 4697914678603497753, i64 -8418180930081158378, i64 -6390324936129927258, i64 9065628379377401321, i64 -7647961852305631890, i64 -2842158747988993977, i64 -321109160655848501, i64 -1287059991300215137, i64 8991315678551899373, i64 7356598983548364421, i64 -2475134095204688557, i64 1709198722465208156, i64 5116729703507904257, i64 -7024247484052496830, i64 -3882448632975537649, i64 3275692917287366068, i64 -4642796273949229114, i64 520195504962209564, i64 -5980460039424594546, i64 6551101061063137909, i64 -8976600825669123274, i64 3712654284445397964, i64 7151701667055100817, i64 148629800301494792, i64 -6180847124928091502, i64 8191951939558273497, i64 -4031056408617629689, i64 1857872503500249444, i64 5292416285475948857, i64 -2772358442581894845, i64 -953885739950345489, i64 -2068479495578066005, i64 6620901366470237041, i64 -8632113998067103718, i64 -7303492616218568110, i64 2751064181207082648, i64 3642842984224010952, i64 -5698941951224532742, i64 -1649607397134964349, i64 1114697113713708860, i64 -3033553993208572557, i64 -9190516301737459654, i64 -4712598778346029374, i64 -3663996571461235437, i64 3800444798200198352, i64 5222615980068849725, i64 -23884814218166309, i64 8860709072383146741, i64 -8001513088529428358, i64 6900146567490002785, i64 2314181981302169728, i64 7523216792134117565, i64 1932169811196516968, i64 -5901637175926149502, i64 -5419696817850501910, i64 6096213258406220877, i64 -7787597611924221066, i64 2453804581812052616, i64 7207986775500022925, i64 -1019200003522825757, i64 8340564147069744081, i64 1337668202176582216, i64 4628114373464834077, i64 594519201205979168, i64 -4371050633386278101, i64 -1426660567150695273, i64 -2623750667476673717, i64 -6818133864748047938, i64 -8278597946483831538, i64 4464696134790364660, i64 -7508361275851171994, i64 0, i64 -3515388795819143397, i64 3118047122309196716, i64 8545496647935096517, i64 -9050915725819870670, i64 -2954737727148992897, i64 2006484711078828908, i64 -5349894313722137106, i64 -5831834671529349242, i64 7671846592368503477, i64 5816976853479477341, i64 4977124695251174665, i64 -879581834949430293, i64 3503220383177257152, i64 -1212747290474713189, i64 4604301143651074044, i64 6166022359637906761, i64 -6739337389260234062, i64 -1584310726016963953, i64 7282299476593960329, i64 -4991843911720060206, i64 3415297925611204540, i64 -4589476306353078233, i64 -2396335421599588769, i64 2080782019848838256, i64 -163485390605517357, i64 5571626302123625769, i64 -7861912512074968462, i64 8471197141517563337, i64 445889400904484376, i64 -8492495829963470318, i64 -5550334176052202766, i64 -1845532665862232385, i64 1040391009924419128, i64 2303700331216707452, i64 7077397762054185621, i64 -3103363094440258441, i64 -6329472492823336806, i64 -7582667379908897182, i64 -460709737043199549, i64 -4222416469465119437, i64 2681244084825564564, i64 6481278765490592121, i64 -8911306353943477206, i64 8266260242068828885, i64 4167480515860445668, i64 5501817200623504429, i64 6830337465989881445, i64 8712079272685631741, i64 4097669215370623200, i64 -8352904050273121270, i64 -3330778340585778845, i64 -6538932711839128146, i64 -2142783400578981201, i64 7003089459006759321, i64 -5480522875830815754, i64 2383993281523556740, i64 -7163865652693001142, i64 2229394227427417720, i64 4837519686860227345, i64 -4073791101636982981, i64 -237798091431019305, i64 297259600602989584, i64 5886777158618141017, i64 -7368795884976760482, i64 7876730714453798313, i64 966084905598258484, i64 -395413065388328241, i64 -2326526320099467429, i64 9139945478249414373, i64 2611441580697199760, i64 4307085524721155052, i64 -6111035824438269034, i64 -3585197897319264737, i64 1263353302562705732, i64 -8138979778380198138, i64 5641439801066278437, i64 -5201286538549807130, i64 -1510006821284484213, i64 4394893630393564400, i64 -9116201401586712258, i64 -7722267956363357078, i64 -582357488511748101, i64 -5070657978588612130, i64 1411983102327329612, i64 3205890412890565808, i64 -3182152973294513301, i64 -1771219964768294981, i64 7951047813862682277, i64 -4292225570696805321, i64 222944700452242188, i64 6235818267199821381, i64 4907315594019488781, i64 9214258179074916321, i64 -6259661192333514338, i64 3048235821819374248, i64 -4922032611230237738, i64 -4519676001214414557, i64 6026382167411741521, i64 -2544943196704809897, i64 817446309203741484, i64 -7089559548903711410, i64 7802418013628296365, i64 3573031683398644164, i64 8396884440423625933, i64 -656670189605685505, i64 5046920602276218373, i64 -6050262543821394806, i64 -8557799098184791778, i64 1486262818642859088, i64 -2208097663614590557, i64 1634892618407482968, i64 4237274224231332584, i64 7597520696866597305, i64 668834101088291108, i64 8117648034557358301, i64 -5271089042678171934, i64 -3400578645724442521, i64 -1352347866325193325, i64 -3733805672961356777, i64 4767719381721563669, i64 -7443110784859072422, i64 -6608735215967492950, i64 2908630813495535776, i64 6690714865010236525, i64 -535013641775679289, i64 -8771705778025888222], align 16
@6 = internal constant [256 x i64] [i64 6924496049530214424, i64 -8348823033860447453, i64 4595500080134932166, i64 -8653645313074272024, i64 2776271950002751367, i64 -2686210937524733768, i64 288520668730425601, i64 2400210169277271887, i64 -2866912873238809034, i64 -6726591118340807002, i64 8057747589754049234, i64 -867511345865624075, i64 -470081348978706055, i64 -6814122369092653201, i64 9120348824893493649, i64 6148163391123378770, i64 -7106636241184530336, i64 -3838041640829338436, i64 6240771705845291931, i64 184089634136559246, i64 -5286257201054047325, i64 3462248024765107212, i64 -1045961516127061125, i64 -3155415984144108235, i64 8367099221382602013, i64 -6349983906465062688, i64 8923872408258074583, i64 3441417439841927874, i64 -5175078429241692626, i64 3552041009756588875, i64 -2306226593256833282, i64 4708374969373251415, i64 6058933871540245781, i64 -4505957294119815305, i64 -2578409831055345865, i64 -5483841358338791963, i64 5088940968176230303, i64 -1733653756552941328, i64 3839998728465304138, i64 5754085839546407642, i64 9032244092475693144, i64 272756719498545609, i64 -6617664111981614807, i64 2885206618584779274, i64 -94046385643408975, i64 -4998880024417689440, i64 -5662291528617006229, i64 3352187387556496773, i64 -3549538598644826691, i64 7592455670726614365, i64 4616330699686809616, i64 -579571253702560524, i64 849797970925571019, i64 -558747866993836482, i64 1442603309292389637, i64 -9122287444048713881, i64 -5195901266175728412, i64 -7194740393303202009, i64 1819791080161493313, i64 1624441143614213003, i64 -6438088076157343833, i64 -1621912052015399555, i64 7968518087224432021, i64 5177044588121479384, i64 -3748249222631064581, i64 -6922556605732098322, i64 -1333971959851287428, i64 -8834347351885650330, i64 6043169406626553309, i64 6635975208998999831, i64 92044819442255687, i64 4800420333806591646, i64 1137755689634286282, i64 -5463581471424369363, i64 -4125418783107006529, i64 2019644646753240839, i64 -8165869298314859091, i64 8456328740957346394, i64 3928102825110766467, i64 -3732492334173637837, i64 -7970456603573066909, i64 577041337460851202, i64 -7878421684215895382, i64 -2778246355215289999, i64 560714438207260872, i64 7213016718259591449, i64 4127956361277032777, i64 4889086869412764121, i64 -1156647620778528014, i64 -6060917897215548445, i64 8168371022248631131, i64 1911835843719104648, i64 5952251037115914906, i64 -7483243435486665178, i64 -4020995410716839374, i64 -382549462186610512, i64 -8941585439598122519, i64 4327809927876120335, i64 8346831088113669589, i64 4215497593934086272, i64 -4413921825291518274, i64 1426839394151288269, i64 -3443919026327571404, i64 4415914079985748040, i64 -2594166685420945409, i64 -758021389603210630, i64 8831828156163068048, i64 7016540319208267615, i64 -9214332263490314208, i64 -4798471234946897816, i64 7501537318269491738, i64 -9030252524959453522, i64 -1534380165491215180, i64 5572248073961100372, i64 8544433387341845395, i64 -8637326110403648990, i64 -8258467116019915676, i64 -2021593883075743247, i64 -3354126591083121805, i64 5193372037145563666, i64 2107748798871257152, i64 2308165349843404808, i64 3153459721132164035, i64 -7499562672784937748, i64 5466128120837692379, i64 -4710376947874487903, i64 1048525637340466573, i64 -847250909178610371, i64 7392602649672783767, i64 0, i64 2003880645578313679, i64 -6040658027614426325, i64 -4218017201956751754, i64 3639582156380340866, i64 9211830092608100054, i64 7790057986998868763, i64 -1245877123307752011, i64 -8741749482774941777, i64 -5374351402093155734, i64 6724078811361202256, i64 667960239682176325, i64 -1444587747301329933, i64 -4598001563805601744, i64 -7210496697896210449, i64 -270244824809324737, i64 5284290389611074901, i64 -5574760277597248862, i64 -8076639246021432598, i64 -8546407208182979227, i64 -3262091121986913606, i64 -4886575387057180881, i64 2864376119695425728, i64 6908168342400458462, i64 8078578587012963356, i64 -3171172752475881987, i64 2976125520797715789, i64 8255912718611419794, i64 -3930077058251983499, i64 1731124012382553606, i64 1335920474884835978, i64 -958429715368267086, i64 -4618895130403412250, i64 4039289293506481678, i64 8944140490121879327, i64 -7682516477050264990, i64 8634788772463695060, i64 -7302541499755812696, i64 7104082015302096534, i64 -4325255289686001159, i64 3730501075638404549, i64 -7771746546389867227, i64 8744286373766977881, i64 3063666753185809540, i64 -3066186464560319886, i64 -2001333412296902343, i64 3264083205146692684, i64 7304498003557244510, i64 -182141222454855560, i64 -2289836488841152456, i64 760005002970827916, i64 7192748550899880401, i64 -5862207822977784411, i64 -5772977770692746526, i64 -7394576367707332255, i64 -669926638825065549, i64 -8925829186947112671, i64 5376335702638763164, i64 8655619855752240670, i64 1243875659921572675, i64 4307542395784906695, i64 -2883232660311769860, i64 1154082674921702404, i64 6436121092651438417, i64 6816687074677463449, i64 -6238242201946395283, i64 3750768659134745869, i64 -3460309096107214086, i64 6620210658051481567, i64 -1909852126999642498, i64 -8060249588573330396, i64 -1424327327927616709, i64 -7589918607671645269, i64 2291838329927290574, i64 4904851368417235217, i64 472610268506197903, i64 2688167853626248782, i64 -1821757376489408585, i64 -8364579372545283093, i64 -1135753951363122116, i64 4504018262664511873, i64 7679997452853744788, i64 -290505210091210761, i64 -2397707860980483655, i64 5481892705875989267, i64 -5752084513608881108, i64 7769789871044285395, i64 -4906835222566475801, i64 -6526182276928541074, i64 4018458759988430020, i64 865562006191276803, i64 4996332653723276886, i64 955917924032201796, i64 -2197792219163754625, i64 -7014038423211562583, i64 -6329161104158676438, i64 -2973588045442663493, i64 2576418400985661889, i64 5860205672413614931, i64 6331127090975530204, i64 3173727287314156299, i64 5664856337008401821, i64 -5950302109782283156, i64 -4309498487262400207, i64 -3642136966088919948, i64 -2565117928147210, i64 380002503792281158, i64 -8454372340499370836, i64 2200356512448481673, i64 5770413237169558548, i64 -6637924032987864607, i64 6347454574628312598, i64 -1712830404471866822, i64 -5086411361470748311, i64 2596686018572781833, i64 -2490306228692488080, i64 -2110260418672871754, i64 7480706269609644240, i64 -7787502764949049875, i64 1714797078500265164, i64 1531833378631336514, i64 6528166405948086424, i64 -6150710865161247580, i64 -6906167188525864920, i64 7880413355075591260, i64 -4037315163162150664, i64 2487751315632064134], align 16
@7 = internal constant [256 x i64] [i64 1756431069603747864, i64 2561460795389388323, i64 -4161389282011793210, i64 -1691127964876538904, i64 -8708124066284582009, i64 -5126582188167589448, i64 73184627900156161, i64 5701925749970046287, i64 3951968793674947382, i64 -6439401615931605082, i64 -3283173749222208302, i64 -723964656574066955, i64 8789190217357760121, i64 8043832866743660655, i64 -7962766575612760687, i64 5932738974356666450, i64 6961826323861882720, i64 -4842851150700661316, i64 -7253438983354763365, i64 -8213846620190438770, i64 -6649948093680987485, i64 878215534801873932, i64 8931055873530692731, i64 3878784234360045621, i64 2122354208433435933, i64 -2258590039810395168, i64 -2919502478960287273, i64 -4454127793477149502, i64 3366491769668387630, i64 5418194713038956875, i64 -81066291667837442, i64 6287402771023844695, i64 1536877185232190741, i64 8629309888871196791, i64 4025153352721404471, i64 -1894918700292137243, i64 -6969707946022071393, i64 -1087635995555453968, i64 5347261953839734858, i64 -2715711675630533414, i64 6376350478823891544, i64 -3962102216150495287, i64 3000568699155545129, i64 731846278733126154, i64 -5620859703652298575, i64 -6864998308698535520, i64 7760101829812556907, i64 -8849989584682493563, i64 -4769666591654200131, i64 6731014275491073885, i64 1170954046402498576, i64 -794897484626982924, i64 -3815732960686252597, i64 4537445815534015294, i64 365923139366563077, i64 7458355844616190055, i64 -1965851528345053212, i64 2854199306855776807, i64 4690852171372196673, i64 -8424393029220325493, i64 -6366217056885147993, i64 9072921254825734781, i64 -7679035538280068715, i64 -2862080931094767912, i64 -302871974677614341, i64 -1252020335385915922, i64 9001988426772822908, i64 7387423016563274086, i64 -2498409660832842787, i64 1683246441032494871, i64 5116448726768829767, i64 -7042892573788005730, i64 -3886665719885474614, i64 3293307210621933613, i64 -4627800935548899649, i64 512292395166875399, i64 -5940620638056633171, i64 6518215997557878874, i64 -8991855103080403069, i64 3732414841791886899, i64 7174624807685086307, i64 146369255800312322, i64 -6155670577927842902, i64 8203713195498724977, i64 -4033034975349717304, i64 1829615697503899929, i64 5276329194304977737, i64 -2791148171895545895, i64 -941266877261729294, i64 -2041288093597980445, i64 6589148756757100891, i64 -8639443175786824568, i64 -7326623611254915430, i64 2781014747809319718, i64 3659230282611212082, i64 -5694044262832973392, i64 -1620195136957844759, i64 1097769418099685135, i64 -3065871734692957227, i64 -9206905249378470784, i64 -4700985494595360834, i64 -3669363704550921267, i64 3805599675313588532, i64 5205396435105755720, i64 -10133463614925569, i64 8860123045611998586, i64 -8035951203512916848, i64 6872879794225061215, i64 2341907117847362848, i64 7547303345720921960, i64 1902800325135616538, i64 -5871939540997785682, i64 -5410313225366045260, i64 6074604493224857172, i64 -7820901057214840941, i64 2488276236208713506, i64 7245557360658768740, i64 -1016703167636755727, i64 8345578851403222131, i64 1317323302202802706, i64 4619919412172978752, i64 585477023201249288, i64 -4383195034277931581, i64 -1398389453411196948, i64 -2644778916431311397, i64 -6791813749517860703, i64 -8282527511090851443, i64 4464261256487553085, i64 -7537170019882148969, i64 0, i64 -3522994449086678577, i64 3146937817248460331, i64 8558377060818280822, i64 -9065039730980559230, i64 -2990435238293722922, i64 1975984953035768603, i64 -5337128666319588171, i64 -5798754981951324497, i64 7689169001893862762, i64 5790873455891114576, i64 4974583208303286085, i64 -870334049343031053, i64 3512861164249853232, i64 -1181087507333004049, i64 4610630374580476479, i64 6145537252558292821, i64 -6723132652861662302, i64 -1544758846851257878, i64 7316490188711684709, i64 -4984716532062288966, i64 3439676328714848815, i64 -4600497049209827648, i64 -2422973164702048034, i64 2049169580667501596, i64 -156502581640214787, i64 5560060231236067149, i64 -7894085685114997102, i64 8487444232966699637, i64 439107767400936966, i64 -8497577657120477558, i64 -5552178606996108366, i64 -1819482410051336730, i64 1024584790333750798, i64 2268723463965304607, i64 7103691979766388066, i64 -3136804494026392876, i64 -6297536234033151576, i64 -7610354647648087402, i64 -449241092702903559, i64 -4236825778411035707, i64 2707830188494426149, i64 6447283238023113561, i64 -8923174212448431996, i64 8274646023484523890, i64 4171522745558035513, i64 5489127471902627404, i64 6801947034891621470, i64 8718257389439065976, i64 4098338186377356600, i64 -8355712138856785780, i64 -3358610245755660335, i64 -6508082712722021211, i64 -2112220921516678686, i64 7032759151780580961, i64 -5478994047815433549, i64 2415091677028037665, i64 -7184758092454360932, i64 2195538836199370270, i64 4832717689837740355, i64 -4090456522678357561, i64 -227435409693126660, i64 292738511600624644, i64 5861806215090332497, i64 -7395304502021118567, i64 7901967210570719853, i64 951400162567808269, i64 -373804802596308486, i64 -2352040405368608289, i64 9143854082945755518, i64 2634645629447969060, i64 4317891863650958907, i64 -6082486018747163989, i64 -3593927208420118322, i64 1244138674302654737, i64 -8140661992424504433, i64 5630992990636606542, i64 -5195263010482723145, i64 -1473826018932563733, i64 4391076697441091900, i64 -9133720621478314623, i64 -7752220166046007148, i64 -577595538280342281, i64 -5053397628986910535, i64 1390507930102958867, i64 3220122651575472428, i64 -3212240990022990381, i64 -1748549581998420761, i64 7972900038690748782, i64 -4307758537744471356, i64 219553883700468483, i64 6216470011690409046, i64 4903650448969850436, i64 9214786910998667391, i64 -6224351674852472663, i64 3073753258067781418, i64 -4911531972881610053, i64 -4529564290010609727, i64 6003671733555884371, i64 -2569342420166282532, i64 805030906633278219, i64 -7111573464688426595, i64 7831034382517807980, i64 3586045723430528049, i64 8416511404913783668, i64 -648528366333258250, i64 5045515967435394118, i64 -6013805197103094356, i64 -8566258547886672503, i64 1463692557466252308, i64 -2187657211891696927, i64 1610061813266556438, i64 4244707304470279994, i64 7618236173639616105, i64 658661651101401353, i64 8132780367580026736, i64 -5268447569529180234, i64 -3429543004954878256, i64 -1327456625358285075, i64 -3740296463884361012, i64 4761784930638522434, i64 -7468489129921270632, i64 -6581267271768478300, i64 2927384139974866216, i64 6660081516157634140, i64 -520173920621597704, i64 -8781308694050520442], align 16
@8 = internal constant [11 x i64] [i64 0, i64 1739452583106838863, i64 3938066875928252754, i64 6970617360185850677, i64 2152957850883456599, i64 1546766456395418330, i64 6397689871562992517, i64 -4801662984139176601, i64 -2006563040903981608, i64 -293160144494704738, i64 -3878233664402062541], align 16

; Function Attrs: nounwind uwtable
define dso_local void @PHP_WHIRLPOOLInit(%1* %0) #0 {
  %2 = alloca %1*, align 8
  store %1* %0, %1** %2, align 8
  %3 = load %1*, %1** %2, align 8
  %4 = bitcast %1* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 168, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind uwtable
define dso_local void @PHP_WHIRLPOOLUpdate(%1* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %1*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  store %1* %0, %1** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %20 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #5
  %21 = load i64, i64* %6, align 8
  %22 = mul i64 %21, 8
  store i64 %22, i64* %7, align 8
  %23 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #5
  store i32 0, i32* %8, align 4
  %24 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #5
  %25 = load i64, i64* %7, align 8
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 7
  %28 = sub nsw i32 8, %27
  %29 = and i32 %28, 7
  store i32 %29, i32* %9, align 4
  %30 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #5
  %31 = load %1*, %1** %4, align 8
  %32 = getelementptr inbounds %1, %1* %31, i32 0, i32 2
  %33 = getelementptr inbounds %2, %2* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 7
  store i32 %35, i32* %10, align 4
  %36 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #5
  %37 = load i8*, i8** %5, align 8
  store i8* %37, i8** %11, align 8
  %38 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #5
  %39 = load %1*, %1** %4, align 8
  %40 = getelementptr inbounds %1, %1* %39, i32 0, i32 2
  %41 = getelementptr inbounds %2, %2* %40, i32 0, i32 2
  %42 = getelementptr inbounds [64 x i8], [64 x i8]* %41, i32 0, i32 0
  store i8* %42, i8** %12, align 8
  %43 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #5
  %44 = load %1*, %1** %4, align 8
  %45 = getelementptr inbounds %1, %1* %44, i32 0, i32 1
  %46 = getelementptr inbounds [32 x i8], [32 x i8]* %45, i32 0, i32 0
  store i8* %46, i8** %13, align 8
  %47 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #5
  %48 = load %1*, %1** %4, align 8
  %49 = getelementptr inbounds %1, %1* %48, i32 0, i32 2
  %50 = getelementptr inbounds %2, %2* %49, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %14, align 4
  %52 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #5
  %53 = load %1*, %1** %4, align 8
  %54 = getelementptr inbounds %1, %1* %53, i32 0, i32 2
  %55 = getelementptr inbounds %2, %2* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %15, align 4
  %57 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #5
  %58 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #5
  %59 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #5
  %60 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #5
  %61 = load i64, i64* %7, align 8
  store i64 %61, i64* %19, align 8
  store i32 31, i32* %18, align 4
  store i32 0, i32* %17, align 4
  br label %62

62:                                               ; preds = %98, %3
  %63 = load i32, i32* %18, align 4
  %64 = icmp sge i32 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %62
  %66 = load i32, i32* %17, align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = load i64, i64* %19, align 8
  %70 = icmp ne i64 %69, 0
  br label %71

71:                                               ; preds = %68, %65
  %72 = phi i1 [ true, %65 ], [ %70, %68 ]
  br label %73

73:                                               ; preds = %71, %62
  %74 = phi i1 [ false, %62 ], [ %72, %71 ]
  br i1 %74, label %75, label %101

75:                                               ; preds = %73
  %76 = load i8*, i8** %13, align 8
  %77 = load i32, i32* %18, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = load i64, i64* %19, align 8
  %83 = trunc i64 %82 to i32
  %84 = and i32 %83, 255
  %85 = add i32 %81, %84
  %86 = load i32, i32* %17, align 4
  %87 = add i32 %86, %85
  store i32 %87, i32* %17, align 4
  %88 = load i32, i32* %17, align 4
  %89 = trunc i32 %88 to i8
  %90 = load i8*, i8** %13, align 8
  %91 = load i32, i32* %18, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  store i8 %89, i8* %93, align 1
  %94 = load i32, i32* %17, align 4
  %95 = lshr i32 %94, 8
  store i32 %95, i32* %17, align 4
  %96 = load i64, i64* %19, align 8
  %97 = lshr i64 %96, 8
  store i64 %97, i64* %19, align 8
  br label %98

98:                                               ; preds = %75
  %99 = load i32, i32* %18, align 4
  %100 = add nsw i32 %99, -1
  store i32 %100, i32* %18, align 4
  br label %62

101:                                              ; preds = %73
  br label %102

102:                                              ; preds = %149, %101
  %103 = load i64, i64* %7, align 8
  %104 = icmp ugt i64 %103, 8
  br i1 %104, label %105, label %166

105:                                              ; preds = %102
  %106 = load i8*, i8** %11, align 8
  %107 = load i32, i32* %8, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = load i32, i32* %9, align 4
  %113 = shl i32 %111, %112
  %114 = and i32 %113, 255
  %115 = load i8*, i8** %11, align 8
  %116 = load i32, i32* %8, align 4
  %117 = add nsw i32 %116, 1
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %115, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = and i32 %121, 255
  %123 = load i32, i32* %9, align 4
  %124 = sub nsw i32 8, %123
  %125 = ashr i32 %122, %124
  %126 = or i32 %114, %125
  store i32 %126, i32* %16, align 4
  %127 = load i32, i32* %16, align 4
  %128 = load i32, i32* %10, align 4
  %129 = lshr i32 %127, %128
  %130 = trunc i32 %129 to i8
  %131 = zext i8 %130 to i32
  %132 = load i8*, i8** %12, align 8
  %133 = load i32, i32* %15, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %15, align 4
  %135 = sext i32 %133 to i64
  %136 = getelementptr inbounds i8, i8* %132, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = or i32 %138, %131
  %140 = trunc i32 %139 to i8
  store i8 %140, i8* %136, align 1
  %141 = load i32, i32* %10, align 4
  %142 = sub nsw i32 8, %141
  %143 = load i32, i32* %14, align 4
  %144 = add nsw i32 %143, %142
  store i32 %144, i32* %14, align 4
  %145 = load i32, i32* %14, align 4
  %146 = icmp eq i32 %145, 512
  br i1 %146, label %147, label %149

147:                                              ; preds = %105
  %148 = load %1*, %1** %4, align 8
  call void @9(%1* %148)
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  br label %149

149:                                              ; preds = %147, %105
  %150 = load i32, i32* %16, align 4
  %151 = load i32, i32* %10, align 4
  %152 = sub nsw i32 8, %151
  %153 = shl i32 %150, %152
  %154 = trunc i32 %153 to i8
  %155 = load i8*, i8** %12, align 8
  %156 = load i32, i32* %15, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %155, i64 %157
  store i8 %154, i8* %158, align 1
  %159 = load i32, i32* %10, align 4
  %160 = load i32, i32* %14, align 4
  %161 = add nsw i32 %160, %159
  store i32 %161, i32* %14, align 4
  %162 = load i64, i64* %7, align 8
  %163 = sub i64 %162, 8
  store i64 %163, i64* %7, align 8
  %164 = load i32, i32* %8, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %8, align 4
  br label %102

166:                                              ; preds = %102
  %167 = load i64, i64* %7, align 8
  %168 = icmp ugt i64 %167, 0
  br i1 %168, label %169, label %190

169:                                              ; preds = %166
  %170 = load i8*, i8** %11, align 8
  %171 = load i32, i32* %8, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, i8* %170, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = load i32, i32* %9, align 4
  %177 = shl i32 %175, %176
  %178 = and i32 %177, 255
  store i32 %178, i32* %16, align 4
  %179 = load i32, i32* %16, align 4
  %180 = load i32, i32* %10, align 4
  %181 = lshr i32 %179, %180
  %182 = load i8*, i8** %12, align 8
  %183 = load i32, i32* %15, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8, i8* %182, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = or i32 %187, %181
  %189 = trunc i32 %188 to i8
  store i8 %189, i8* %185, align 1
  br label %191

190:                                              ; preds = %166
  store i32 0, i32* %16, align 4
  br label %191

191:                                              ; preds = %190, %169
  %192 = load i32, i32* %10, align 4
  %193 = sext i32 %192 to i64
  %194 = load i64, i64* %7, align 8
  %195 = add i64 %193, %194
  %196 = icmp ult i64 %195, 8
  br i1 %196, label %197, label %202

197:                                              ; preds = %191
  %198 = load i64, i64* %7, align 8
  %199 = trunc i64 %198 to i32
  %200 = load i32, i32* %14, align 4
  %201 = add nsw i32 %200, %199
  store i32 %201, i32* %14, align 4
  br label %232

202:                                              ; preds = %191
  %203 = load i32, i32* %15, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %15, align 4
  %205 = load i32, i32* %10, align 4
  %206 = sub nsw i32 8, %205
  %207 = load i32, i32* %14, align 4
  %208 = add nsw i32 %207, %206
  store i32 %208, i32* %14, align 4
  %209 = load i32, i32* %10, align 4
  %210 = sub nsw i32 8, %209
  %211 = sext i32 %210 to i64
  %212 = load i64, i64* %7, align 8
  %213 = sub i64 %212, %211
  store i64 %213, i64* %7, align 8
  %214 = load i32, i32* %14, align 4
  %215 = icmp eq i32 %214, 512
  br i1 %215, label %216, label %218

216:                                              ; preds = %202
  %217 = load %1*, %1** %4, align 8
  call void @9(%1* %217)
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  br label %218

218:                                              ; preds = %216, %202
  %219 = load i32, i32* %16, align 4
  %220 = load i32, i32* %10, align 4
  %221 = sub nsw i32 8, %220
  %222 = shl i32 %219, %221
  %223 = trunc i32 %222 to i8
  %224 = load i8*, i8** %12, align 8
  %225 = load i32, i32* %15, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i8, i8* %224, i64 %226
  store i8 %223, i8* %227, align 1
  %228 = load i64, i64* %7, align 8
  %229 = trunc i64 %228 to i32
  %230 = load i32, i32* %14, align 4
  %231 = add nsw i32 %230, %229
  store i32 %231, i32* %14, align 4
  br label %232

232:                                              ; preds = %218, %197
  %233 = load i32, i32* %14, align 4
  %234 = load %1*, %1** %4, align 8
  %235 = getelementptr inbounds %1, %1* %234, i32 0, i32 2
  %236 = getelementptr inbounds %2, %2* %235, i32 0, i32 1
  store i32 %233, i32* %236, align 4
  %237 = load i32, i32* %15, align 4
  %238 = load %1*, %1** %4, align 8
  %239 = getelementptr inbounds %1, %1* %238, i32 0, i32 2
  %240 = getelementptr inbounds %2, %2* %239, i32 0, i32 0
  store i32 %237, i32* %240, align 8
  %241 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #5
  %242 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %242) #5
  %243 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %243) #5
  %244 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %244) #5
  %245 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %245) #5
  %246 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %246) #5
  %247 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #5
  %248 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #5
  %249 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %249) #5
  %250 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %250) #5
  %251 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %251) #5
  %252 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %252) #5
  %253 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %253) #5
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define internal void @9(%1* %0) #0 {
  %2 = alloca %1*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [8 x i64], align 16
  %6 = alloca [8 x i64], align 16
  %7 = alloca [8 x i64], align 16
  %8 = alloca [8 x i64], align 16
  %9 = alloca i8*, align 8
  store %1* %0, %1** %2, align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #5
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #5
  %12 = bitcast [8 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %12) #5
  %13 = bitcast [8 x i64]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %13) #5
  %14 = bitcast [8 x i64]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %14) #5
  %15 = bitcast [8 x i64]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %15) #5
  %16 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #5
  %17 = load %1*, %1** %2, align 8
  %18 = getelementptr inbounds %1, %1* %17, i32 0, i32 2
  %19 = getelementptr inbounds %2, %2* %18, i32 0, i32 2
  %20 = getelementptr inbounds [64 x i8], [64 x i8]* %19, i32 0, i32 0
  store i8* %20, i8** %9, align 8
  store i32 0, i32* %3, align 4
  br label %21

21:                                               ; preds = %81, %1
  %22 = load i32, i32* %3, align 4
  %23 = icmp slt i32 %22, 8
  br i1 %23, label %24, label %86

24:                                               ; preds = %21
  %25 = load i8*, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = shl i64 %28, 56
  %30 = load i8*, i8** %9, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = and i64 %33, 255
  %35 = shl i64 %34, 48
  %36 = xor i64 %29, %35
  %37 = load i8*, i8** %9, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = and i64 %40, 255
  %42 = shl i64 %41, 40
  %43 = xor i64 %36, %42
  %44 = load i8*, i8** %9, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 3
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = and i64 %47, 255
  %49 = shl i64 %48, 32
  %50 = xor i64 %43, %49
  %51 = load i8*, i8** %9, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 4
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = and i64 %54, 255
  %56 = shl i64 %55, 24
  %57 = xor i64 %50, %56
  %58 = load i8*, i8** %9, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 5
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i64
  %62 = and i64 %61, 255
  %63 = shl i64 %62, 16
  %64 = xor i64 %57, %63
  %65 = load i8*, i8** %9, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 6
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = and i64 %68, 255
  %70 = shl i64 %69, 8
  %71 = xor i64 %64, %70
  %72 = load i8*, i8** %9, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 7
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i64
  %76 = and i64 %75, 255
  %77 = xor i64 %71, %76
  %78 = load i32, i32* %3, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 %79
  store i64 %77, i64* %80, align 8
  br label %81

81:                                               ; preds = %24
  %82 = load i32, i32* %3, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %3, align 4
  %84 = load i8*, i8** %9, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 8
  store i8* %85, i8** %9, align 8
  br label %21

86:                                               ; preds = %21
  %87 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 0
  %88 = load i64, i64* %87, align 16
  %89 = load %1*, %1** %2, align 8
  %90 = getelementptr inbounds %1, %1* %89, i32 0, i32 0
  %91 = getelementptr inbounds [8 x i64], [8 x i64]* %90, i64 0, i64 0
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  store i64 %92, i64* %93, align 16
  %94 = xor i64 %88, %92
  %95 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  store i64 %94, i64* %95, align 16
  %96 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 1
  %97 = load i64, i64* %96, align 8
  %98 = load %1*, %1** %2, align 8
  %99 = getelementptr inbounds %1, %1* %98, i32 0, i32 0
  %100 = getelementptr inbounds [8 x i64], [8 x i64]* %99, i64 0, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  store i64 %101, i64* %102, align 8
  %103 = xor i64 %97, %101
  %104 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 2
  %106 = load i64, i64* %105, align 16
  %107 = load %1*, %1** %2, align 8
  %108 = getelementptr inbounds %1, %1* %107, i32 0, i32 0
  %109 = getelementptr inbounds [8 x i64], [8 x i64]* %108, i64 0, i64 2
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  store i64 %110, i64* %111, align 16
  %112 = xor i64 %106, %110
  %113 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  store i64 %112, i64* %113, align 16
  %114 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 3
  %115 = load i64, i64* %114, align 8
  %116 = load %1*, %1** %2, align 8
  %117 = getelementptr inbounds %1, %1* %116, i32 0, i32 0
  %118 = getelementptr inbounds [8 x i64], [8 x i64]* %117, i64 0, i64 3
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  store i64 %119, i64* %120, align 8
  %121 = xor i64 %115, %119
  %122 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 4
  %124 = load i64, i64* %123, align 16
  %125 = load %1*, %1** %2, align 8
  %126 = getelementptr inbounds %1, %1* %125, i32 0, i32 0
  %127 = getelementptr inbounds [8 x i64], [8 x i64]* %126, i64 0, i64 4
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  store i64 %128, i64* %129, align 16
  %130 = xor i64 %124, %128
  %131 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  store i64 %130, i64* %131, align 16
  %132 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 5
  %133 = load i64, i64* %132, align 8
  %134 = load %1*, %1** %2, align 8
  %135 = getelementptr inbounds %1, %1* %134, i32 0, i32 0
  %136 = getelementptr inbounds [8 x i64], [8 x i64]* %135, i64 0, i64 5
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  store i64 %137, i64* %138, align 8
  %139 = xor i64 %133, %137
  %140 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 6
  %142 = load i64, i64* %141, align 16
  %143 = load %1*, %1** %2, align 8
  %144 = getelementptr inbounds %1, %1* %143, i32 0, i32 0
  %145 = getelementptr inbounds [8 x i64], [8 x i64]* %144, i64 0, i64 6
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  store i64 %146, i64* %147, align 16
  %148 = xor i64 %142, %146
  %149 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  store i64 %148, i64* %149, align 16
  %150 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 7
  %151 = load i64, i64* %150, align 8
  %152 = load %1*, %1** %2, align 8
  %153 = getelementptr inbounds %1, %1* %152, i32 0, i32 0
  %154 = getelementptr inbounds [8 x i64], [8 x i64]* %153, i64 0, i64 7
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  store i64 %155, i64* %156, align 8
  %157 = xor i64 %151, %155
  %158 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  store i64 %157, i64* %158, align 8
  store i32 1, i32* %4, align 4
  br label %159

159:                                              ; preds = %1360, %86
  %160 = load i32, i32* %4, align 4
  %161 = icmp sle i32 %160, 10
  br i1 %161, label %162, label %1363

162:                                              ; preds = %159
  %163 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  %164 = load i64, i64* %163, align 16
  %165 = lshr i64 %164, 56
  %166 = trunc i64 %165 to i32
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %167
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  %171 = load i64, i64* %170, align 8
  %172 = lshr i64 %171, 48
  %173 = trunc i64 %172 to i32
  %174 = and i32 %173, 255
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %175
  %177 = load i64, i64* %176, align 8
  %178 = xor i64 %169, %177
  %179 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  %180 = load i64, i64* %179, align 16
  %181 = lshr i64 %180, 40
  %182 = trunc i64 %181 to i32
  %183 = and i32 %182, 255
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %184
  %186 = load i64, i64* %185, align 8
  %187 = xor i64 %178, %186
  %188 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  %189 = load i64, i64* %188, align 8
  %190 = lshr i64 %189, 32
  %191 = trunc i64 %190 to i32
  %192 = and i32 %191, 255
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %193
  %195 = load i64, i64* %194, align 8
  %196 = xor i64 %187, %195
  %197 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  %198 = load i64, i64* %197, align 16
  %199 = lshr i64 %198, 24
  %200 = trunc i64 %199 to i32
  %201 = and i32 %200, 255
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %202
  %204 = load i64, i64* %203, align 8
  %205 = xor i64 %196, %204
  %206 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  %207 = load i64, i64* %206, align 8
  %208 = lshr i64 %207, 16
  %209 = trunc i64 %208 to i32
  %210 = and i32 %209, 255
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %211
  %213 = load i64, i64* %212, align 8
  %214 = xor i64 %205, %213
  %215 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  %216 = load i64, i64* %215, align 16
  %217 = lshr i64 %216, 8
  %218 = trunc i64 %217 to i32
  %219 = and i32 %218, 255
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %220
  %222 = load i64, i64* %221, align 8
  %223 = xor i64 %214, %222
  %224 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  %225 = load i64, i64* %224, align 8
  %226 = trunc i64 %225 to i32
  %227 = and i32 %226, 255
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %228
  %230 = load i64, i64* %229, align 8
  %231 = xor i64 %223, %230
  %232 = load i32, i32* %4, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [11 x i64], [11 x i64]* @8, i64 0, i64 %233
  %235 = load i64, i64* %234, align 8
  %236 = xor i64 %231, %235
  %237 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 0
  store i64 %236, i64* %237, align 16
  %238 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  %239 = load i64, i64* %238, align 8
  %240 = lshr i64 %239, 56
  %241 = trunc i64 %240 to i32
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %242
  %244 = load i64, i64* %243, align 8
  %245 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  %246 = load i64, i64* %245, align 16
  %247 = lshr i64 %246, 48
  %248 = trunc i64 %247 to i32
  %249 = and i32 %248, 255
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %250
  %252 = load i64, i64* %251, align 8
  %253 = xor i64 %244, %252
  %254 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  %255 = load i64, i64* %254, align 8
  %256 = lshr i64 %255, 40
  %257 = trunc i64 %256 to i32
  %258 = and i32 %257, 255
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %259
  %261 = load i64, i64* %260, align 8
  %262 = xor i64 %253, %261
  %263 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  %264 = load i64, i64* %263, align 16
  %265 = lshr i64 %264, 32
  %266 = trunc i64 %265 to i32
  %267 = and i32 %266, 255
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %268
  %270 = load i64, i64* %269, align 8
  %271 = xor i64 %262, %270
  %272 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  %273 = load i64, i64* %272, align 8
  %274 = lshr i64 %273, 24
  %275 = trunc i64 %274 to i32
  %276 = and i32 %275, 255
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %277
  %279 = load i64, i64* %278, align 8
  %280 = xor i64 %271, %279
  %281 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  %282 = load i64, i64* %281, align 16
  %283 = lshr i64 %282, 16
  %284 = trunc i64 %283 to i32
  %285 = and i32 %284, 255
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %286
  %288 = load i64, i64* %287, align 8
  %289 = xor i64 %280, %288
  %290 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  %291 = load i64, i64* %290, align 8
  %292 = lshr i64 %291, 8
  %293 = trunc i64 %292 to i32
  %294 = and i32 %293, 255
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %295
  %297 = load i64, i64* %296, align 8
  %298 = xor i64 %289, %297
  %299 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  %300 = load i64, i64* %299, align 16
  %301 = trunc i64 %300 to i32
  %302 = and i32 %301, 255
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %303
  %305 = load i64, i64* %304, align 8
  %306 = xor i64 %298, %305
  %307 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 1
  store i64 %306, i64* %307, align 8
  %308 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  %309 = load i64, i64* %308, align 16
  %310 = lshr i64 %309, 56
  %311 = trunc i64 %310 to i32
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %312
  %314 = load i64, i64* %313, align 8
  %315 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  %316 = load i64, i64* %315, align 8
  %317 = lshr i64 %316, 48
  %318 = trunc i64 %317 to i32
  %319 = and i32 %318, 255
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %320
  %322 = load i64, i64* %321, align 8
  %323 = xor i64 %314, %322
  %324 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  %325 = load i64, i64* %324, align 16
  %326 = lshr i64 %325, 40
  %327 = trunc i64 %326 to i32
  %328 = and i32 %327, 255
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %329
  %331 = load i64, i64* %330, align 8
  %332 = xor i64 %323, %331
  %333 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  %334 = load i64, i64* %333, align 8
  %335 = lshr i64 %334, 32
  %336 = trunc i64 %335 to i32
  %337 = and i32 %336, 255
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %338
  %340 = load i64, i64* %339, align 8
  %341 = xor i64 %332, %340
  %342 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  %343 = load i64, i64* %342, align 16
  %344 = lshr i64 %343, 24
  %345 = trunc i64 %344 to i32
  %346 = and i32 %345, 255
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %347
  %349 = load i64, i64* %348, align 8
  %350 = xor i64 %341, %349
  %351 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  %352 = load i64, i64* %351, align 8
  %353 = lshr i64 %352, 16
  %354 = trunc i64 %353 to i32
  %355 = and i32 %354, 255
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %356
  %358 = load i64, i64* %357, align 8
  %359 = xor i64 %350, %358
  %360 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  %361 = load i64, i64* %360, align 16
  %362 = lshr i64 %361, 8
  %363 = trunc i64 %362 to i32
  %364 = and i32 %363, 255
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %365
  %367 = load i64, i64* %366, align 8
  %368 = xor i64 %359, %367
  %369 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  %370 = load i64, i64* %369, align 8
  %371 = trunc i64 %370 to i32
  %372 = and i32 %371, 255
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %373
  %375 = load i64, i64* %374, align 8
  %376 = xor i64 %368, %375
  %377 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 2
  store i64 %376, i64* %377, align 16
  %378 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  %379 = load i64, i64* %378, align 8
  %380 = lshr i64 %379, 56
  %381 = trunc i64 %380 to i32
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %382
  %384 = load i64, i64* %383, align 8
  %385 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  %386 = load i64, i64* %385, align 16
  %387 = lshr i64 %386, 48
  %388 = trunc i64 %387 to i32
  %389 = and i32 %388, 255
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %390
  %392 = load i64, i64* %391, align 8
  %393 = xor i64 %384, %392
  %394 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  %395 = load i64, i64* %394, align 8
  %396 = lshr i64 %395, 40
  %397 = trunc i64 %396 to i32
  %398 = and i32 %397, 255
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %399
  %401 = load i64, i64* %400, align 8
  %402 = xor i64 %393, %401
  %403 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  %404 = load i64, i64* %403, align 16
  %405 = lshr i64 %404, 32
  %406 = trunc i64 %405 to i32
  %407 = and i32 %406, 255
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %408
  %410 = load i64, i64* %409, align 8
  %411 = xor i64 %402, %410
  %412 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  %413 = load i64, i64* %412, align 8
  %414 = lshr i64 %413, 24
  %415 = trunc i64 %414 to i32
  %416 = and i32 %415, 255
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %417
  %419 = load i64, i64* %418, align 8
  %420 = xor i64 %411, %419
  %421 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  %422 = load i64, i64* %421, align 16
  %423 = lshr i64 %422, 16
  %424 = trunc i64 %423 to i32
  %425 = and i32 %424, 255
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %426
  %428 = load i64, i64* %427, align 8
  %429 = xor i64 %420, %428
  %430 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  %431 = load i64, i64* %430, align 8
  %432 = lshr i64 %431, 8
  %433 = trunc i64 %432 to i32
  %434 = and i32 %433, 255
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %435
  %437 = load i64, i64* %436, align 8
  %438 = xor i64 %429, %437
  %439 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  %440 = load i64, i64* %439, align 16
  %441 = trunc i64 %440 to i32
  %442 = and i32 %441, 255
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %443
  %445 = load i64, i64* %444, align 8
  %446 = xor i64 %438, %445
  %447 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 3
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  %449 = load i64, i64* %448, align 16
  %450 = lshr i64 %449, 56
  %451 = trunc i64 %450 to i32
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %452
  %454 = load i64, i64* %453, align 8
  %455 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  %456 = load i64, i64* %455, align 8
  %457 = lshr i64 %456, 48
  %458 = trunc i64 %457 to i32
  %459 = and i32 %458, 255
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %460
  %462 = load i64, i64* %461, align 8
  %463 = xor i64 %454, %462
  %464 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  %465 = load i64, i64* %464, align 16
  %466 = lshr i64 %465, 40
  %467 = trunc i64 %466 to i32
  %468 = and i32 %467, 255
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %469
  %471 = load i64, i64* %470, align 8
  %472 = xor i64 %463, %471
  %473 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  %474 = load i64, i64* %473, align 8
  %475 = lshr i64 %474, 32
  %476 = trunc i64 %475 to i32
  %477 = and i32 %476, 255
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %478
  %480 = load i64, i64* %479, align 8
  %481 = xor i64 %472, %480
  %482 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  %483 = load i64, i64* %482, align 16
  %484 = lshr i64 %483, 24
  %485 = trunc i64 %484 to i32
  %486 = and i32 %485, 255
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %487
  %489 = load i64, i64* %488, align 8
  %490 = xor i64 %481, %489
  %491 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  %492 = load i64, i64* %491, align 8
  %493 = lshr i64 %492, 16
  %494 = trunc i64 %493 to i32
  %495 = and i32 %494, 255
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %496
  %498 = load i64, i64* %497, align 8
  %499 = xor i64 %490, %498
  %500 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  %501 = load i64, i64* %500, align 16
  %502 = lshr i64 %501, 8
  %503 = trunc i64 %502 to i32
  %504 = and i32 %503, 255
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %505
  %507 = load i64, i64* %506, align 8
  %508 = xor i64 %499, %507
  %509 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  %510 = load i64, i64* %509, align 8
  %511 = trunc i64 %510 to i32
  %512 = and i32 %511, 255
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %513
  %515 = load i64, i64* %514, align 8
  %516 = xor i64 %508, %515
  %517 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 4
  store i64 %516, i64* %517, align 16
  %518 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  %519 = load i64, i64* %518, align 8
  %520 = lshr i64 %519, 56
  %521 = trunc i64 %520 to i32
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %522
  %524 = load i64, i64* %523, align 8
  %525 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  %526 = load i64, i64* %525, align 16
  %527 = lshr i64 %526, 48
  %528 = trunc i64 %527 to i32
  %529 = and i32 %528, 255
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %530
  %532 = load i64, i64* %531, align 8
  %533 = xor i64 %524, %532
  %534 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  %535 = load i64, i64* %534, align 8
  %536 = lshr i64 %535, 40
  %537 = trunc i64 %536 to i32
  %538 = and i32 %537, 255
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %539
  %541 = load i64, i64* %540, align 8
  %542 = xor i64 %533, %541
  %543 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  %544 = load i64, i64* %543, align 16
  %545 = lshr i64 %544, 32
  %546 = trunc i64 %545 to i32
  %547 = and i32 %546, 255
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %548
  %550 = load i64, i64* %549, align 8
  %551 = xor i64 %542, %550
  %552 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  %553 = load i64, i64* %552, align 8
  %554 = lshr i64 %553, 24
  %555 = trunc i64 %554 to i32
  %556 = and i32 %555, 255
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %557
  %559 = load i64, i64* %558, align 8
  %560 = xor i64 %551, %559
  %561 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  %562 = load i64, i64* %561, align 16
  %563 = lshr i64 %562, 16
  %564 = trunc i64 %563 to i32
  %565 = and i32 %564, 255
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %566
  %568 = load i64, i64* %567, align 8
  %569 = xor i64 %560, %568
  %570 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  %571 = load i64, i64* %570, align 8
  %572 = lshr i64 %571, 8
  %573 = trunc i64 %572 to i32
  %574 = and i32 %573, 255
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %575
  %577 = load i64, i64* %576, align 8
  %578 = xor i64 %569, %577
  %579 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  %580 = load i64, i64* %579, align 16
  %581 = trunc i64 %580 to i32
  %582 = and i32 %581, 255
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %583
  %585 = load i64, i64* %584, align 8
  %586 = xor i64 %578, %585
  %587 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 5
  store i64 %586, i64* %587, align 8
  %588 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  %589 = load i64, i64* %588, align 16
  %590 = lshr i64 %589, 56
  %591 = trunc i64 %590 to i32
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %592
  %594 = load i64, i64* %593, align 8
  %595 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  %596 = load i64, i64* %595, align 8
  %597 = lshr i64 %596, 48
  %598 = trunc i64 %597 to i32
  %599 = and i32 %598, 255
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %600
  %602 = load i64, i64* %601, align 8
  %603 = xor i64 %594, %602
  %604 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  %605 = load i64, i64* %604, align 16
  %606 = lshr i64 %605, 40
  %607 = trunc i64 %606 to i32
  %608 = and i32 %607, 255
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %609
  %611 = load i64, i64* %610, align 8
  %612 = xor i64 %603, %611
  %613 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  %614 = load i64, i64* %613, align 8
  %615 = lshr i64 %614, 32
  %616 = trunc i64 %615 to i32
  %617 = and i32 %616, 255
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %618
  %620 = load i64, i64* %619, align 8
  %621 = xor i64 %612, %620
  %622 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  %623 = load i64, i64* %622, align 16
  %624 = lshr i64 %623, 24
  %625 = trunc i64 %624 to i32
  %626 = and i32 %625, 255
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %627
  %629 = load i64, i64* %628, align 8
  %630 = xor i64 %621, %629
  %631 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  %632 = load i64, i64* %631, align 8
  %633 = lshr i64 %632, 16
  %634 = trunc i64 %633 to i32
  %635 = and i32 %634, 255
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %636
  %638 = load i64, i64* %637, align 8
  %639 = xor i64 %630, %638
  %640 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  %641 = load i64, i64* %640, align 16
  %642 = lshr i64 %641, 8
  %643 = trunc i64 %642 to i32
  %644 = and i32 %643, 255
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %645
  %647 = load i64, i64* %646, align 8
  %648 = xor i64 %639, %647
  %649 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  %650 = load i64, i64* %649, align 8
  %651 = trunc i64 %650 to i32
  %652 = and i32 %651, 255
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %653
  %655 = load i64, i64* %654, align 8
  %656 = xor i64 %648, %655
  %657 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 6
  store i64 %656, i64* %657, align 16
  %658 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  %659 = load i64, i64* %658, align 8
  %660 = lshr i64 %659, 56
  %661 = trunc i64 %660 to i32
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %662
  %664 = load i64, i64* %663, align 8
  %665 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  %666 = load i64, i64* %665, align 16
  %667 = lshr i64 %666, 48
  %668 = trunc i64 %667 to i32
  %669 = and i32 %668, 255
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %670
  %672 = load i64, i64* %671, align 8
  %673 = xor i64 %664, %672
  %674 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  %675 = load i64, i64* %674, align 8
  %676 = lshr i64 %675, 40
  %677 = trunc i64 %676 to i32
  %678 = and i32 %677, 255
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %679
  %681 = load i64, i64* %680, align 8
  %682 = xor i64 %673, %681
  %683 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  %684 = load i64, i64* %683, align 16
  %685 = lshr i64 %684, 32
  %686 = trunc i64 %685 to i32
  %687 = and i32 %686, 255
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %688
  %690 = load i64, i64* %689, align 8
  %691 = xor i64 %682, %690
  %692 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  %693 = load i64, i64* %692, align 8
  %694 = lshr i64 %693, 24
  %695 = trunc i64 %694 to i32
  %696 = and i32 %695, 255
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %697
  %699 = load i64, i64* %698, align 8
  %700 = xor i64 %691, %699
  %701 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  %702 = load i64, i64* %701, align 16
  %703 = lshr i64 %702, 16
  %704 = trunc i64 %703 to i32
  %705 = and i32 %704, 255
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %706
  %708 = load i64, i64* %707, align 8
  %709 = xor i64 %700, %708
  %710 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  %711 = load i64, i64* %710, align 8
  %712 = lshr i64 %711, 8
  %713 = trunc i64 %712 to i32
  %714 = and i32 %713, 255
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %715
  %717 = load i64, i64* %716, align 8
  %718 = xor i64 %709, %717
  %719 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  %720 = load i64, i64* %719, align 16
  %721 = trunc i64 %720 to i32
  %722 = and i32 %721, 255
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %723
  %725 = load i64, i64* %724, align 8
  %726 = xor i64 %718, %725
  %727 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 7
  store i64 %726, i64* %727, align 8
  %728 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 0
  %729 = load i64, i64* %728, align 16
  %730 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  store i64 %729, i64* %730, align 16
  %731 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 1
  %732 = load i64, i64* %731, align 8
  %733 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  store i64 %732, i64* %733, align 8
  %734 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 2
  %735 = load i64, i64* %734, align 16
  %736 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  store i64 %735, i64* %736, align 16
  %737 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 3
  %738 = load i64, i64* %737, align 8
  %739 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  store i64 %738, i64* %739, align 8
  %740 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 4
  %741 = load i64, i64* %740, align 16
  %742 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  store i64 %741, i64* %742, align 16
  %743 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 5
  %744 = load i64, i64* %743, align 8
  %745 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  store i64 %744, i64* %745, align 8
  %746 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 6
  %747 = load i64, i64* %746, align 16
  %748 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  store i64 %747, i64* %748, align 16
  %749 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 7
  %750 = load i64, i64* %749, align 8
  %751 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  store i64 %750, i64* %751, align 8
  %752 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  %753 = load i64, i64* %752, align 16
  %754 = lshr i64 %753, 56
  %755 = trunc i64 %754 to i32
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %756
  %758 = load i64, i64* %757, align 8
  %759 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  %760 = load i64, i64* %759, align 8
  %761 = lshr i64 %760, 48
  %762 = trunc i64 %761 to i32
  %763 = and i32 %762, 255
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %764
  %766 = load i64, i64* %765, align 8
  %767 = xor i64 %758, %766
  %768 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  %769 = load i64, i64* %768, align 16
  %770 = lshr i64 %769, 40
  %771 = trunc i64 %770 to i32
  %772 = and i32 %771, 255
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %773
  %775 = load i64, i64* %774, align 8
  %776 = xor i64 %767, %775
  %777 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  %778 = load i64, i64* %777, align 8
  %779 = lshr i64 %778, 32
  %780 = trunc i64 %779 to i32
  %781 = and i32 %780, 255
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %782
  %784 = load i64, i64* %783, align 8
  %785 = xor i64 %776, %784
  %786 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  %787 = load i64, i64* %786, align 16
  %788 = lshr i64 %787, 24
  %789 = trunc i64 %788 to i32
  %790 = and i32 %789, 255
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %791
  %793 = load i64, i64* %792, align 8
  %794 = xor i64 %785, %793
  %795 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  %796 = load i64, i64* %795, align 8
  %797 = lshr i64 %796, 16
  %798 = trunc i64 %797 to i32
  %799 = and i32 %798, 255
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %800
  %802 = load i64, i64* %801, align 8
  %803 = xor i64 %794, %802
  %804 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  %805 = load i64, i64* %804, align 16
  %806 = lshr i64 %805, 8
  %807 = trunc i64 %806 to i32
  %808 = and i32 %807, 255
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %809
  %811 = load i64, i64* %810, align 8
  %812 = xor i64 %803, %811
  %813 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  %814 = load i64, i64* %813, align 8
  %815 = trunc i64 %814 to i32
  %816 = and i32 %815, 255
  %817 = sext i32 %816 to i64
  %818 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %817
  %819 = load i64, i64* %818, align 8
  %820 = xor i64 %812, %819
  %821 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 0
  %822 = load i64, i64* %821, align 16
  %823 = xor i64 %820, %822
  %824 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 0
  store i64 %823, i64* %824, align 16
  %825 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  %826 = load i64, i64* %825, align 8
  %827 = lshr i64 %826, 56
  %828 = trunc i64 %827 to i32
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %829
  %831 = load i64, i64* %830, align 8
  %832 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  %833 = load i64, i64* %832, align 16
  %834 = lshr i64 %833, 48
  %835 = trunc i64 %834 to i32
  %836 = and i32 %835, 255
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %837
  %839 = load i64, i64* %838, align 8
  %840 = xor i64 %831, %839
  %841 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  %842 = load i64, i64* %841, align 8
  %843 = lshr i64 %842, 40
  %844 = trunc i64 %843 to i32
  %845 = and i32 %844, 255
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %846
  %848 = load i64, i64* %847, align 8
  %849 = xor i64 %840, %848
  %850 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  %851 = load i64, i64* %850, align 16
  %852 = lshr i64 %851, 32
  %853 = trunc i64 %852 to i32
  %854 = and i32 %853, 255
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %855
  %857 = load i64, i64* %856, align 8
  %858 = xor i64 %849, %857
  %859 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  %860 = load i64, i64* %859, align 8
  %861 = lshr i64 %860, 24
  %862 = trunc i64 %861 to i32
  %863 = and i32 %862, 255
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %864
  %866 = load i64, i64* %865, align 8
  %867 = xor i64 %858, %866
  %868 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  %869 = load i64, i64* %868, align 16
  %870 = lshr i64 %869, 16
  %871 = trunc i64 %870 to i32
  %872 = and i32 %871, 255
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %873
  %875 = load i64, i64* %874, align 8
  %876 = xor i64 %867, %875
  %877 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  %878 = load i64, i64* %877, align 8
  %879 = lshr i64 %878, 8
  %880 = trunc i64 %879 to i32
  %881 = and i32 %880, 255
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %882
  %884 = load i64, i64* %883, align 8
  %885 = xor i64 %876, %884
  %886 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  %887 = load i64, i64* %886, align 16
  %888 = trunc i64 %887 to i32
  %889 = and i32 %888, 255
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %890
  %892 = load i64, i64* %891, align 8
  %893 = xor i64 %885, %892
  %894 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 1
  %895 = load i64, i64* %894, align 8
  %896 = xor i64 %893, %895
  %897 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 1
  store i64 %896, i64* %897, align 8
  %898 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  %899 = load i64, i64* %898, align 16
  %900 = lshr i64 %899, 56
  %901 = trunc i64 %900 to i32
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %902
  %904 = load i64, i64* %903, align 8
  %905 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  %906 = load i64, i64* %905, align 8
  %907 = lshr i64 %906, 48
  %908 = trunc i64 %907 to i32
  %909 = and i32 %908, 255
  %910 = sext i32 %909 to i64
  %911 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %910
  %912 = load i64, i64* %911, align 8
  %913 = xor i64 %904, %912
  %914 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  %915 = load i64, i64* %914, align 16
  %916 = lshr i64 %915, 40
  %917 = trunc i64 %916 to i32
  %918 = and i32 %917, 255
  %919 = sext i32 %918 to i64
  %920 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %919
  %921 = load i64, i64* %920, align 8
  %922 = xor i64 %913, %921
  %923 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  %924 = load i64, i64* %923, align 8
  %925 = lshr i64 %924, 32
  %926 = trunc i64 %925 to i32
  %927 = and i32 %926, 255
  %928 = sext i32 %927 to i64
  %929 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %928
  %930 = load i64, i64* %929, align 8
  %931 = xor i64 %922, %930
  %932 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  %933 = load i64, i64* %932, align 16
  %934 = lshr i64 %933, 24
  %935 = trunc i64 %934 to i32
  %936 = and i32 %935, 255
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %937
  %939 = load i64, i64* %938, align 8
  %940 = xor i64 %931, %939
  %941 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  %942 = load i64, i64* %941, align 8
  %943 = lshr i64 %942, 16
  %944 = trunc i64 %943 to i32
  %945 = and i32 %944, 255
  %946 = sext i32 %945 to i64
  %947 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %946
  %948 = load i64, i64* %947, align 8
  %949 = xor i64 %940, %948
  %950 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  %951 = load i64, i64* %950, align 16
  %952 = lshr i64 %951, 8
  %953 = trunc i64 %952 to i32
  %954 = and i32 %953, 255
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %955
  %957 = load i64, i64* %956, align 8
  %958 = xor i64 %949, %957
  %959 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  %960 = load i64, i64* %959, align 8
  %961 = trunc i64 %960 to i32
  %962 = and i32 %961, 255
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %963
  %965 = load i64, i64* %964, align 8
  %966 = xor i64 %958, %965
  %967 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 2
  %968 = load i64, i64* %967, align 16
  %969 = xor i64 %966, %968
  %970 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 2
  store i64 %969, i64* %970, align 16
  %971 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  %972 = load i64, i64* %971, align 8
  %973 = lshr i64 %972, 56
  %974 = trunc i64 %973 to i32
  %975 = sext i32 %974 to i64
  %976 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %975
  %977 = load i64, i64* %976, align 8
  %978 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  %979 = load i64, i64* %978, align 16
  %980 = lshr i64 %979, 48
  %981 = trunc i64 %980 to i32
  %982 = and i32 %981, 255
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %983
  %985 = load i64, i64* %984, align 8
  %986 = xor i64 %977, %985
  %987 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  %988 = load i64, i64* %987, align 8
  %989 = lshr i64 %988, 40
  %990 = trunc i64 %989 to i32
  %991 = and i32 %990, 255
  %992 = sext i32 %991 to i64
  %993 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %992
  %994 = load i64, i64* %993, align 8
  %995 = xor i64 %986, %994
  %996 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  %997 = load i64, i64* %996, align 16
  %998 = lshr i64 %997, 32
  %999 = trunc i64 %998 to i32
  %1000 = and i32 %999, 255
  %1001 = sext i32 %1000 to i64
  %1002 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %1001
  %1003 = load i64, i64* %1002, align 8
  %1004 = xor i64 %995, %1003
  %1005 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  %1006 = load i64, i64* %1005, align 8
  %1007 = lshr i64 %1006, 24
  %1008 = trunc i64 %1007 to i32
  %1009 = and i32 %1008, 255
  %1010 = sext i32 %1009 to i64
  %1011 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %1010
  %1012 = load i64, i64* %1011, align 8
  %1013 = xor i64 %1004, %1012
  %1014 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  %1015 = load i64, i64* %1014, align 16
  %1016 = lshr i64 %1015, 16
  %1017 = trunc i64 %1016 to i32
  %1018 = and i32 %1017, 255
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %1019
  %1021 = load i64, i64* %1020, align 8
  %1022 = xor i64 %1013, %1021
  %1023 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  %1024 = load i64, i64* %1023, align 8
  %1025 = lshr i64 %1024, 8
  %1026 = trunc i64 %1025 to i32
  %1027 = and i32 %1026, 255
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %1028
  %1030 = load i64, i64* %1029, align 8
  %1031 = xor i64 %1022, %1030
  %1032 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  %1033 = load i64, i64* %1032, align 16
  %1034 = trunc i64 %1033 to i32
  %1035 = and i32 %1034, 255
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %1036
  %1038 = load i64, i64* %1037, align 8
  %1039 = xor i64 %1031, %1038
  %1040 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 3
  %1041 = load i64, i64* %1040, align 8
  %1042 = xor i64 %1039, %1041
  %1043 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 3
  store i64 %1042, i64* %1043, align 8
  %1044 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  %1045 = load i64, i64* %1044, align 16
  %1046 = lshr i64 %1045, 56
  %1047 = trunc i64 %1046 to i32
  %1048 = sext i32 %1047 to i64
  %1049 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %1048
  %1050 = load i64, i64* %1049, align 8
  %1051 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  %1052 = load i64, i64* %1051, align 8
  %1053 = lshr i64 %1052, 48
  %1054 = trunc i64 %1053 to i32
  %1055 = and i32 %1054, 255
  %1056 = sext i32 %1055 to i64
  %1057 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %1056
  %1058 = load i64, i64* %1057, align 8
  %1059 = xor i64 %1050, %1058
  %1060 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  %1061 = load i64, i64* %1060, align 16
  %1062 = lshr i64 %1061, 40
  %1063 = trunc i64 %1062 to i32
  %1064 = and i32 %1063, 255
  %1065 = sext i32 %1064 to i64
  %1066 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %1065
  %1067 = load i64, i64* %1066, align 8
  %1068 = xor i64 %1059, %1067
  %1069 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  %1070 = load i64, i64* %1069, align 8
  %1071 = lshr i64 %1070, 32
  %1072 = trunc i64 %1071 to i32
  %1073 = and i32 %1072, 255
  %1074 = sext i32 %1073 to i64
  %1075 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %1074
  %1076 = load i64, i64* %1075, align 8
  %1077 = xor i64 %1068, %1076
  %1078 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  %1079 = load i64, i64* %1078, align 16
  %1080 = lshr i64 %1079, 24
  %1081 = trunc i64 %1080 to i32
  %1082 = and i32 %1081, 255
  %1083 = sext i32 %1082 to i64
  %1084 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %1083
  %1085 = load i64, i64* %1084, align 8
  %1086 = xor i64 %1077, %1085
  %1087 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  %1088 = load i64, i64* %1087, align 8
  %1089 = lshr i64 %1088, 16
  %1090 = trunc i64 %1089 to i32
  %1091 = and i32 %1090, 255
  %1092 = sext i32 %1091 to i64
  %1093 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %1092
  %1094 = load i64, i64* %1093, align 8
  %1095 = xor i64 %1086, %1094
  %1096 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  %1097 = load i64, i64* %1096, align 16
  %1098 = lshr i64 %1097, 8
  %1099 = trunc i64 %1098 to i32
  %1100 = and i32 %1099, 255
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %1101
  %1103 = load i64, i64* %1102, align 8
  %1104 = xor i64 %1095, %1103
  %1105 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  %1106 = load i64, i64* %1105, align 8
  %1107 = trunc i64 %1106 to i32
  %1108 = and i32 %1107, 255
  %1109 = sext i32 %1108 to i64
  %1110 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %1109
  %1111 = load i64, i64* %1110, align 8
  %1112 = xor i64 %1104, %1111
  %1113 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 4
  %1114 = load i64, i64* %1113, align 16
  %1115 = xor i64 %1112, %1114
  %1116 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 4
  store i64 %1115, i64* %1116, align 16
  %1117 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  %1118 = load i64, i64* %1117, align 8
  %1119 = lshr i64 %1118, 56
  %1120 = trunc i64 %1119 to i32
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %1121
  %1123 = load i64, i64* %1122, align 8
  %1124 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  %1125 = load i64, i64* %1124, align 16
  %1126 = lshr i64 %1125, 48
  %1127 = trunc i64 %1126 to i32
  %1128 = and i32 %1127, 255
  %1129 = sext i32 %1128 to i64
  %1130 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %1129
  %1131 = load i64, i64* %1130, align 8
  %1132 = xor i64 %1123, %1131
  %1133 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  %1134 = load i64, i64* %1133, align 8
  %1135 = lshr i64 %1134, 40
  %1136 = trunc i64 %1135 to i32
  %1137 = and i32 %1136, 255
  %1138 = sext i32 %1137 to i64
  %1139 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %1138
  %1140 = load i64, i64* %1139, align 8
  %1141 = xor i64 %1132, %1140
  %1142 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  %1143 = load i64, i64* %1142, align 16
  %1144 = lshr i64 %1143, 32
  %1145 = trunc i64 %1144 to i32
  %1146 = and i32 %1145, 255
  %1147 = sext i32 %1146 to i64
  %1148 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %1147
  %1149 = load i64, i64* %1148, align 8
  %1150 = xor i64 %1141, %1149
  %1151 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  %1152 = load i64, i64* %1151, align 8
  %1153 = lshr i64 %1152, 24
  %1154 = trunc i64 %1153 to i32
  %1155 = and i32 %1154, 255
  %1156 = sext i32 %1155 to i64
  %1157 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %1156
  %1158 = load i64, i64* %1157, align 8
  %1159 = xor i64 %1150, %1158
  %1160 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  %1161 = load i64, i64* %1160, align 16
  %1162 = lshr i64 %1161, 16
  %1163 = trunc i64 %1162 to i32
  %1164 = and i32 %1163, 255
  %1165 = sext i32 %1164 to i64
  %1166 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %1165
  %1167 = load i64, i64* %1166, align 8
  %1168 = xor i64 %1159, %1167
  %1169 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  %1170 = load i64, i64* %1169, align 8
  %1171 = lshr i64 %1170, 8
  %1172 = trunc i64 %1171 to i32
  %1173 = and i32 %1172, 255
  %1174 = sext i32 %1173 to i64
  %1175 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %1174
  %1176 = load i64, i64* %1175, align 8
  %1177 = xor i64 %1168, %1176
  %1178 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  %1179 = load i64, i64* %1178, align 16
  %1180 = trunc i64 %1179 to i32
  %1181 = and i32 %1180, 255
  %1182 = sext i32 %1181 to i64
  %1183 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %1182
  %1184 = load i64, i64* %1183, align 8
  %1185 = xor i64 %1177, %1184
  %1186 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 5
  %1187 = load i64, i64* %1186, align 8
  %1188 = xor i64 %1185, %1187
  %1189 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 5
  store i64 %1188, i64* %1189, align 8
  %1190 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  %1191 = load i64, i64* %1190, align 16
  %1192 = lshr i64 %1191, 56
  %1193 = trunc i64 %1192 to i32
  %1194 = sext i32 %1193 to i64
  %1195 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %1194
  %1196 = load i64, i64* %1195, align 8
  %1197 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  %1198 = load i64, i64* %1197, align 8
  %1199 = lshr i64 %1198, 48
  %1200 = trunc i64 %1199 to i32
  %1201 = and i32 %1200, 255
  %1202 = sext i32 %1201 to i64
  %1203 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %1202
  %1204 = load i64, i64* %1203, align 8
  %1205 = xor i64 %1196, %1204
  %1206 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  %1207 = load i64, i64* %1206, align 16
  %1208 = lshr i64 %1207, 40
  %1209 = trunc i64 %1208 to i32
  %1210 = and i32 %1209, 255
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %1211
  %1213 = load i64, i64* %1212, align 8
  %1214 = xor i64 %1205, %1213
  %1215 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  %1216 = load i64, i64* %1215, align 8
  %1217 = lshr i64 %1216, 32
  %1218 = trunc i64 %1217 to i32
  %1219 = and i32 %1218, 255
  %1220 = sext i32 %1219 to i64
  %1221 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %1220
  %1222 = load i64, i64* %1221, align 8
  %1223 = xor i64 %1214, %1222
  %1224 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  %1225 = load i64, i64* %1224, align 16
  %1226 = lshr i64 %1225, 24
  %1227 = trunc i64 %1226 to i32
  %1228 = and i32 %1227, 255
  %1229 = sext i32 %1228 to i64
  %1230 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %1229
  %1231 = load i64, i64* %1230, align 8
  %1232 = xor i64 %1223, %1231
  %1233 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  %1234 = load i64, i64* %1233, align 8
  %1235 = lshr i64 %1234, 16
  %1236 = trunc i64 %1235 to i32
  %1237 = and i32 %1236, 255
  %1238 = sext i32 %1237 to i64
  %1239 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %1238
  %1240 = load i64, i64* %1239, align 8
  %1241 = xor i64 %1232, %1240
  %1242 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  %1243 = load i64, i64* %1242, align 16
  %1244 = lshr i64 %1243, 8
  %1245 = trunc i64 %1244 to i32
  %1246 = and i32 %1245, 255
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %1247
  %1249 = load i64, i64* %1248, align 8
  %1250 = xor i64 %1241, %1249
  %1251 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  %1252 = load i64, i64* %1251, align 8
  %1253 = trunc i64 %1252 to i32
  %1254 = and i32 %1253, 255
  %1255 = sext i32 %1254 to i64
  %1256 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %1255
  %1257 = load i64, i64* %1256, align 8
  %1258 = xor i64 %1250, %1257
  %1259 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 6
  %1260 = load i64, i64* %1259, align 16
  %1261 = xor i64 %1258, %1260
  %1262 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 6
  store i64 %1261, i64* %1262, align 16
  %1263 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  %1264 = load i64, i64* %1263, align 8
  %1265 = lshr i64 %1264, 56
  %1266 = trunc i64 %1265 to i32
  %1267 = sext i32 %1266 to i64
  %1268 = getelementptr inbounds [256 x i64], [256 x i64]* @0, i64 0, i64 %1267
  %1269 = load i64, i64* %1268, align 8
  %1270 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  %1271 = load i64, i64* %1270, align 16
  %1272 = lshr i64 %1271, 48
  %1273 = trunc i64 %1272 to i32
  %1274 = and i32 %1273, 255
  %1275 = sext i32 %1274 to i64
  %1276 = getelementptr inbounds [256 x i64], [256 x i64]* @1, i64 0, i64 %1275
  %1277 = load i64, i64* %1276, align 8
  %1278 = xor i64 %1269, %1277
  %1279 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  %1280 = load i64, i64* %1279, align 8
  %1281 = lshr i64 %1280, 40
  %1282 = trunc i64 %1281 to i32
  %1283 = and i32 %1282, 255
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds [256 x i64], [256 x i64]* @2, i64 0, i64 %1284
  %1286 = load i64, i64* %1285, align 8
  %1287 = xor i64 %1278, %1286
  %1288 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  %1289 = load i64, i64* %1288, align 16
  %1290 = lshr i64 %1289, 32
  %1291 = trunc i64 %1290 to i32
  %1292 = and i32 %1291, 255
  %1293 = sext i32 %1292 to i64
  %1294 = getelementptr inbounds [256 x i64], [256 x i64]* @3, i64 0, i64 %1293
  %1295 = load i64, i64* %1294, align 8
  %1296 = xor i64 %1287, %1295
  %1297 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  %1298 = load i64, i64* %1297, align 8
  %1299 = lshr i64 %1298, 24
  %1300 = trunc i64 %1299 to i32
  %1301 = and i32 %1300, 255
  %1302 = sext i32 %1301 to i64
  %1303 = getelementptr inbounds [256 x i64], [256 x i64]* @4, i64 0, i64 %1302
  %1304 = load i64, i64* %1303, align 8
  %1305 = xor i64 %1296, %1304
  %1306 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  %1307 = load i64, i64* %1306, align 16
  %1308 = lshr i64 %1307, 16
  %1309 = trunc i64 %1308 to i32
  %1310 = and i32 %1309, 255
  %1311 = sext i32 %1310 to i64
  %1312 = getelementptr inbounds [256 x i64], [256 x i64]* @5, i64 0, i64 %1311
  %1313 = load i64, i64* %1312, align 8
  %1314 = xor i64 %1305, %1313
  %1315 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  %1316 = load i64, i64* %1315, align 8
  %1317 = lshr i64 %1316, 8
  %1318 = trunc i64 %1317 to i32
  %1319 = and i32 %1318, 255
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds [256 x i64], [256 x i64]* @6, i64 0, i64 %1320
  %1322 = load i64, i64* %1321, align 8
  %1323 = xor i64 %1314, %1322
  %1324 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  %1325 = load i64, i64* %1324, align 16
  %1326 = trunc i64 %1325 to i32
  %1327 = and i32 %1326, 255
  %1328 = sext i32 %1327 to i64
  %1329 = getelementptr inbounds [256 x i64], [256 x i64]* @7, i64 0, i64 %1328
  %1330 = load i64, i64* %1329, align 8
  %1331 = xor i64 %1323, %1330
  %1332 = getelementptr inbounds [8 x i64], [8 x i64]* %5, i64 0, i64 7
  %1333 = load i64, i64* %1332, align 8
  %1334 = xor i64 %1331, %1333
  %1335 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 7
  store i64 %1334, i64* %1335, align 8
  %1336 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 0
  %1337 = load i64, i64* %1336, align 16
  %1338 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  store i64 %1337, i64* %1338, align 16
  %1339 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 1
  %1340 = load i64, i64* %1339, align 8
  %1341 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  store i64 %1340, i64* %1341, align 8
  %1342 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 2
  %1343 = load i64, i64* %1342, align 16
  %1344 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  store i64 %1343, i64* %1344, align 16
  %1345 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 3
  %1346 = load i64, i64* %1345, align 8
  %1347 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  store i64 %1346, i64* %1347, align 8
  %1348 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 4
  %1349 = load i64, i64* %1348, align 16
  %1350 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  store i64 %1349, i64* %1350, align 16
  %1351 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 5
  %1352 = load i64, i64* %1351, align 8
  %1353 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  store i64 %1352, i64* %1353, align 8
  %1354 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 6
  %1355 = load i64, i64* %1354, align 16
  %1356 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  store i64 %1355, i64* %1356, align 16
  %1357 = getelementptr inbounds [8 x i64], [8 x i64]* %8, i64 0, i64 7
  %1358 = load i64, i64* %1357, align 8
  %1359 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  store i64 %1358, i64* %1359, align 8
  br label %1360

1360:                                             ; preds = %162
  %1361 = load i32, i32* %4, align 4
  %1362 = add nsw i32 %1361, 1
  store i32 %1362, i32* %4, align 4
  br label %159

1363:                                             ; preds = %159
  %1364 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 0
  %1365 = load i64, i64* %1364, align 16
  %1366 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 0
  %1367 = load i64, i64* %1366, align 16
  %1368 = xor i64 %1365, %1367
  %1369 = load %1*, %1** %2, align 8
  %1370 = getelementptr inbounds %1, %1* %1369, i32 0, i32 0
  %1371 = getelementptr inbounds [8 x i64], [8 x i64]* %1370, i64 0, i64 0
  %1372 = load i64, i64* %1371, align 8
  %1373 = xor i64 %1372, %1368
  store i64 %1373, i64* %1371, align 8
  %1374 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 1
  %1375 = load i64, i64* %1374, align 8
  %1376 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 1
  %1377 = load i64, i64* %1376, align 8
  %1378 = xor i64 %1375, %1377
  %1379 = load %1*, %1** %2, align 8
  %1380 = getelementptr inbounds %1, %1* %1379, i32 0, i32 0
  %1381 = getelementptr inbounds [8 x i64], [8 x i64]* %1380, i64 0, i64 1
  %1382 = load i64, i64* %1381, align 8
  %1383 = xor i64 %1382, %1378
  store i64 %1383, i64* %1381, align 8
  %1384 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 2
  %1385 = load i64, i64* %1384, align 16
  %1386 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 2
  %1387 = load i64, i64* %1386, align 16
  %1388 = xor i64 %1385, %1387
  %1389 = load %1*, %1** %2, align 8
  %1390 = getelementptr inbounds %1, %1* %1389, i32 0, i32 0
  %1391 = getelementptr inbounds [8 x i64], [8 x i64]* %1390, i64 0, i64 2
  %1392 = load i64, i64* %1391, align 8
  %1393 = xor i64 %1392, %1388
  store i64 %1393, i64* %1391, align 8
  %1394 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 3
  %1395 = load i64, i64* %1394, align 8
  %1396 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 3
  %1397 = load i64, i64* %1396, align 8
  %1398 = xor i64 %1395, %1397
  %1399 = load %1*, %1** %2, align 8
  %1400 = getelementptr inbounds %1, %1* %1399, i32 0, i32 0
  %1401 = getelementptr inbounds [8 x i64], [8 x i64]* %1400, i64 0, i64 3
  %1402 = load i64, i64* %1401, align 8
  %1403 = xor i64 %1402, %1398
  store i64 %1403, i64* %1401, align 8
  %1404 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 4
  %1405 = load i64, i64* %1404, align 16
  %1406 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 4
  %1407 = load i64, i64* %1406, align 16
  %1408 = xor i64 %1405, %1407
  %1409 = load %1*, %1** %2, align 8
  %1410 = getelementptr inbounds %1, %1* %1409, i32 0, i32 0
  %1411 = getelementptr inbounds [8 x i64], [8 x i64]* %1410, i64 0, i64 4
  %1412 = load i64, i64* %1411, align 8
  %1413 = xor i64 %1412, %1408
  store i64 %1413, i64* %1411, align 8
  %1414 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 5
  %1415 = load i64, i64* %1414, align 8
  %1416 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 5
  %1417 = load i64, i64* %1416, align 8
  %1418 = xor i64 %1415, %1417
  %1419 = load %1*, %1** %2, align 8
  %1420 = getelementptr inbounds %1, %1* %1419, i32 0, i32 0
  %1421 = getelementptr inbounds [8 x i64], [8 x i64]* %1420, i64 0, i64 5
  %1422 = load i64, i64* %1421, align 8
  %1423 = xor i64 %1422, %1418
  store i64 %1423, i64* %1421, align 8
  %1424 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 6
  %1425 = load i64, i64* %1424, align 16
  %1426 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 6
  %1427 = load i64, i64* %1426, align 16
  %1428 = xor i64 %1425, %1427
  %1429 = load %1*, %1** %2, align 8
  %1430 = getelementptr inbounds %1, %1* %1429, i32 0, i32 0
  %1431 = getelementptr inbounds [8 x i64], [8 x i64]* %1430, i64 0, i64 6
  %1432 = load i64, i64* %1431, align 8
  %1433 = xor i64 %1432, %1428
  store i64 %1433, i64* %1431, align 8
  %1434 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i64 0, i64 7
  %1435 = load i64, i64* %1434, align 8
  %1436 = getelementptr inbounds [8 x i64], [8 x i64]* %6, i64 0, i64 7
  %1437 = load i64, i64* %1436, align 8
  %1438 = xor i64 %1435, %1437
  %1439 = load %1*, %1** %2, align 8
  %1440 = getelementptr inbounds %1, %1* %1439, i32 0, i32 0
  %1441 = getelementptr inbounds [8 x i64], [8 x i64]* %1440, i64 0, i64 7
  %1442 = load i64, i64* %1441, align 8
  %1443 = xor i64 %1442, %1438
  store i64 %1443, i64* %1441, align 8
  %1444 = getelementptr inbounds [8 x i64], [8 x i64]* %7, i32 0, i32 0
  %1445 = bitcast i64* %1444 to i8*
  call void @explicit_bzero(i8* %1445, i64 64) #5
  %1446 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1446) #5
  %1447 = bitcast [8 x i64]* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %1447) #5
  %1448 = bitcast [8 x i64]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %1448) #5
  %1449 = bitcast [8 x i64]* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %1449) #5
  %1450 = bitcast [8 x i64]* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %1450) #5
  %1451 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1451) #5
  %1452 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1452) #5
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define dso_local void @PHP_WHIRLPOOLFinal(i8* %0, %1* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %1*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store %1* %1, %1** %4, align 8
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #5
  %11 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #5
  %12 = load %1*, %1** %4, align 8
  %13 = getelementptr inbounds %1, %1* %12, i32 0, i32 2
  %14 = getelementptr inbounds %2, %2* %13, i32 0, i32 2
  %15 = getelementptr inbounds [64 x i8], [64 x i8]* %14, i32 0, i32 0
  store i8* %15, i8** %6, align 8
  %16 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #5
  %17 = load %1*, %1** %4, align 8
  %18 = getelementptr inbounds %1, %1* %17, i32 0, i32 1
  %19 = getelementptr inbounds [32 x i8], [32 x i8]* %18, i32 0, i32 0
  store i8* %19, i8** %7, align 8
  %20 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #5
  %21 = load %1*, %1** %4, align 8
  %22 = getelementptr inbounds %1, %1* %21, i32 0, i32 2
  %23 = getelementptr inbounds %2, %2* %22, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %8, align 4
  %25 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #5
  %26 = load %1*, %1** %4, align 8
  %27 = getelementptr inbounds %1, %1* %26, i32 0, i32 2
  %28 = getelementptr inbounds %2, %2* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %9, align 4
  %30 = load i32, i32* %8, align 4
  %31 = and i32 %30, 7
  %32 = lshr i32 128, %31
  %33 = load i8*, i8** %6, align 8
  %34 = load i32, i32* %9, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = or i32 %38, %32
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %36, align 1
  %41 = load i32, i32* %9, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %9, align 4
  %43 = load i32, i32* %9, align 4
  %44 = icmp sgt i32 %43, 32
  br i1 %44, label %45, label %58

45:                                               ; preds = %2
  %46 = load i32, i32* %9, align 4
  %47 = icmp slt i32 %46, 64
  br i1 %47, label %48, label %56

48:                                               ; preds = %45
  %49 = load i8*, i8** %6, align 8
  %50 = load i32, i32* %9, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = load i32, i32* %9, align 4
  %54 = sub nsw i32 64, %53
  %55 = sext i32 %54 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %52, i8 0, i64 %55, i1 false)
  br label %56

56:                                               ; preds = %48, %45
  %57 = load %1*, %1** %4, align 8
  call void @9(%1* %57)
  store i32 0, i32* %9, align 4
  br label %58

58:                                               ; preds = %56, %2
  %59 = load i32, i32* %9, align 4
  %60 = icmp slt i32 %59, 32
  br i1 %60, label %61, label %69

61:                                               ; preds = %58
  %62 = load i8*, i8** %6, align 8
  %63 = load i32, i32* %9, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  %66 = load i32, i32* %9, align 4
  %67 = sub nsw i32 32, %66
  %68 = sext i32 %67 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %65, i8 0, i64 %68, i1 false)
  br label %69

69:                                               ; preds = %61, %58
  store i32 32, i32* %9, align 4
  %70 = load i8*, i8** %6, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 32
  %72 = load i8*, i8** %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %72, i64 32, i1 false)
  %73 = load %1*, %1** %4, align 8
  call void @9(%1* %73)
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %159, %69
  %75 = load i32, i32* %5, align 4
  %76 = icmp slt i32 %75, 8
  br i1 %76, label %77, label %162

77:                                               ; preds = %74
  %78 = load %1*, %1** %4, align 8
  %79 = getelementptr inbounds %1, %1* %78, i32 0, i32 0
  %80 = load i32, i32* %5, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [8 x i64], [8 x i64]* %79, i64 0, i64 %81
  %83 = load i64, i64* %82, align 8
  %84 = lshr i64 %83, 56
  %85 = trunc i64 %84 to i8
  %86 = load i8*, i8** %3, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 0
  store i8 %85, i8* %87, align 1
  %88 = load %1*, %1** %4, align 8
  %89 = getelementptr inbounds %1, %1* %88, i32 0, i32 0
  %90 = load i32, i32* %5, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [8 x i64], [8 x i64]* %89, i64 0, i64 %91
  %93 = load i64, i64* %92, align 8
  %94 = lshr i64 %93, 48
  %95 = trunc i64 %94 to i8
  %96 = load i8*, i8** %3, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 1
  store i8 %95, i8* %97, align 1
  %98 = load %1*, %1** %4, align 8
  %99 = getelementptr inbounds %1, %1* %98, i32 0, i32 0
  %100 = load i32, i32* %5, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [8 x i64], [8 x i64]* %99, i64 0, i64 %101
  %103 = load i64, i64* %102, align 8
  %104 = lshr i64 %103, 40
  %105 = trunc i64 %104 to i8
  %106 = load i8*, i8** %3, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 2
  store i8 %105, i8* %107, align 1
  %108 = load %1*, %1** %4, align 8
  %109 = getelementptr inbounds %1, %1* %108, i32 0, i32 0
  %110 = load i32, i32* %5, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [8 x i64], [8 x i64]* %109, i64 0, i64 %111
  %113 = load i64, i64* %112, align 8
  %114 = lshr i64 %113, 32
  %115 = trunc i64 %114 to i8
  %116 = load i8*, i8** %3, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 3
  store i8 %115, i8* %117, align 1
  %118 = load %1*, %1** %4, align 8
  %119 = getelementptr inbounds %1, %1* %118, i32 0, i32 0
  %120 = load i32, i32* %5, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [8 x i64], [8 x i64]* %119, i64 0, i64 %121
  %123 = load i64, i64* %122, align 8
  %124 = lshr i64 %123, 24
  %125 = trunc i64 %124 to i8
  %126 = load i8*, i8** %3, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 4
  store i8 %125, i8* %127, align 1
  %128 = load %1*, %1** %4, align 8
  %129 = getelementptr inbounds %1, %1* %128, i32 0, i32 0
  %130 = load i32, i32* %5, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [8 x i64], [8 x i64]* %129, i64 0, i64 %131
  %133 = load i64, i64* %132, align 8
  %134 = lshr i64 %133, 16
  %135 = trunc i64 %134 to i8
  %136 = load i8*, i8** %3, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 5
  store i8 %135, i8* %137, align 1
  %138 = load %1*, %1** %4, align 8
  %139 = getelementptr inbounds %1, %1* %138, i32 0, i32 0
  %140 = load i32, i32* %5, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [8 x i64], [8 x i64]* %139, i64 0, i64 %141
  %143 = load i64, i64* %142, align 8
  %144 = lshr i64 %143, 8
  %145 = trunc i64 %144 to i8
  %146 = load i8*, i8** %3, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 6
  store i8 %145, i8* %147, align 1
  %148 = load %1*, %1** %4, align 8
  %149 = getelementptr inbounds %1, %1* %148, i32 0, i32 0
  %150 = load i32, i32* %5, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [8 x i64], [8 x i64]* %149, i64 0, i64 %151
  %153 = load i64, i64* %152, align 8
  %154 = trunc i64 %153 to i8
  %155 = load i8*, i8** %3, align 8
  %156 = getelementptr inbounds i8, i8* %155, i64 7
  store i8 %154, i8* %156, align 1
  %157 = load i8*, i8** %3, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 8
  store i8* %158, i8** %3, align 8
  br label %159

159:                                              ; preds = %77
  %160 = load i32, i32* %5, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %5, align 4
  br label %74

162:                                              ; preds = %74
  %163 = load %1*, %1** %4, align 8
  %164 = bitcast %1* %163 to i8*
  call void @explicit_bzero(i8* %164, i64 168) #5
  %165 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %165) #5
  %166 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %166) #5
  %167 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #5
  %168 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %168) #5
  %169 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %169) #5
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #3

declare dso_local i32 @php_hash_copy(i8*, i8*, i8*) #4

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn writeonly }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
