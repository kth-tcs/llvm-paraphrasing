; ModuleID = 'zend_vm_opcodes-strip-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/Zend/zend_vm_opcodes.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@0 = internal global [198 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @19, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @22, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @24, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @34, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @37, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @40, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @42, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @46, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @48, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @50, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @53, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @54, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @57, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @58, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @59, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @61, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @62, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @63, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @64, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @65, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @66, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @67, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @68, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @69, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @70, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @71, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @72, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @73, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @74, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @76, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @77, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @78, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @80, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @81, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @82, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @83, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @84, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @85, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @86, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @88, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @89, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @90, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @91, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @92, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @93, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @94, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @95, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @96, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @97, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @98, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @99, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @100, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @101, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @102, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @103, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @104, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @105, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @106, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @107, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @108, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @109, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @111, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @112, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @113, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @114, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @115, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @116, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @117, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @118, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @119, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @120, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @121, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @122, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @123, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @124, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @125, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @126, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @127, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @128, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @129, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @131, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @132, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @133, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @134, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @135, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @136, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @137, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @138, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @139, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @140, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @141, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @142, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @143, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @144, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @145, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @146, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @147, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @148, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @149, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @150, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @151, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @152, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @153, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @154, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @155, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @156, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @157, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @158, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @159, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @160, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @161, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @162, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @163, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @164, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @165, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @166, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @167, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @168, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @169, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @170, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @171, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @172, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @173, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @174, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @175, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @176, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @177, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @178, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @179, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @180, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @181, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @182, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @183, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @184, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @185, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @186, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @187, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @188, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @189, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @191, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @192, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @193, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @194, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @195, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @196, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @197, i32 0, i32 0)], align 16
@1 = internal global [198 x i32] [i32 0, i32 1799, i32 1799, i32 1799, i32 1799, i32 1799, i32 1799, i32 1799, i32 1799, i32 1799, i32 1799, i32 1799, i32 7, i32 7, i32 1799, i32 771, i32 771, i32 1799, i32 1799, i32 1799, i32 1799, i32 117440515, i32 3, i32 67135313, i32 67135313, i32 67135313, i32 67135313, i32 67135313, i32 67135313, i32 67135313, i32 67135313, i32 67135313, i32 67135313, i32 67135313, i32 1, i32 1, i32 1, i32 1, i32 769, i32 184549633, i32 7, i32 0, i32 32, i32 8199, i32 8199, i32 50339847, i32 8199, i32 8199, i32 1799, i32 257, i32 4097, i32 257, i32 7, i32 1799, i32 16779009, i32 16779009, i32 16779009, i32 0, i32 1, i32 16777984, i32 0, i32 16778000, i32 3, i32 16, i32 784, i32 4103, i32 4097, i32 4097, i32 16777331, i32 16777984, i32 16389, i32 1599235, i32 1074947, i32 134217735, i32 65799, i32 1793, i32 1873, i32 8195, i32 50331649, i32 7, i32 65799, i32 1799, i32 1875, i32 65799, i32 26369, i32 1873, i32 65799, i32 26369, i32 1873, i32 65799, i32 1799, i32 1879, i32 327943, i32 16803587, i32 16779091, i32 65799, i32 1793, i32 1873, i32 1799, i32 100664065, i32 0, i32 0, i32 0, i32 0, i32 0, i32 16777216, i32 4097, i32 50331907, i32 3, i32 83887872, i32 87, i32 184549379, i32 16779095, i32 16811891, i32 196871, i32 132871, i32 4099, i32 4097, i32 16779011, i32 16777216, i32 4099, i32 7, i32 3, i32 117440515, i32 259, i32 8195, i32 50331649, i32 16389, i32 16779008, i32 0, i32 0, i32 0, i32 1873, i32 1873, i32 1873, i32 1873, i32 1873, i32 0, i32 29445, i32 0, i32 256, i32 0, i32 3, i32 771, i32 768, i32 256, i32 0, i32 26369, i32 132951, i32 0, i32 0, i32 8192, i32 8195, i32 259, i32 0, i32 0, i32 257, i32 83886080, i32 0, i32 0, i32 184550147, i32 3, i32 32, i32 12288, i32 16, i32 0, i32 1799, i32 67135313, i32 769, i32 8195, i32 1799, i32 50331648, i32 50331904, i32 29447, i32 29447, i32 29447, i32 29447, i32 16806663, i32 29447, i32 29447, i32 160519, i32 883, i32 1048833, i32 1049345, i32 257, i32 0, i32 257, i32 50332423, i32 50332423, i32 16777987, i32 259, i32 259, i32 257, i32 259, i32 257, i32 259, i32 257, i32 131329], align 16
@2 = private unnamed_addr constant [9 x i8] c"ZEND_NOP\00", align 1
@3 = private unnamed_addr constant [9 x i8] c"ZEND_ADD\00", align 1
@4 = private unnamed_addr constant [9 x i8] c"ZEND_SUB\00", align 1
@5 = private unnamed_addr constant [9 x i8] c"ZEND_MUL\00", align 1
@6 = private unnamed_addr constant [9 x i8] c"ZEND_DIV\00", align 1
@7 = private unnamed_addr constant [9 x i8] c"ZEND_MOD\00", align 1
@8 = private unnamed_addr constant [8 x i8] c"ZEND_SL\00", align 1
@9 = private unnamed_addr constant [8 x i8] c"ZEND_SR\00", align 1
@10 = private unnamed_addr constant [12 x i8] c"ZEND_CONCAT\00", align 1
@11 = private unnamed_addr constant [11 x i8] c"ZEND_BW_OR\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"ZEND_BW_AND\00", align 1
@13 = private unnamed_addr constant [12 x i8] c"ZEND_BW_XOR\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"ZEND_BW_NOT\00", align 1
@15 = private unnamed_addr constant [14 x i8] c"ZEND_BOOL_NOT\00", align 1
@16 = private unnamed_addr constant [14 x i8] c"ZEND_BOOL_XOR\00", align 1
@17 = private unnamed_addr constant [18 x i8] c"ZEND_IS_IDENTICAL\00", align 1
@18 = private unnamed_addr constant [22 x i8] c"ZEND_IS_NOT_IDENTICAL\00", align 1
@19 = private unnamed_addr constant [14 x i8] c"ZEND_IS_EQUAL\00", align 1
@20 = private unnamed_addr constant [18 x i8] c"ZEND_IS_NOT_EQUAL\00", align 1
@21 = private unnamed_addr constant [16 x i8] c"ZEND_IS_SMALLER\00", align 1
@22 = private unnamed_addr constant [25 x i8] c"ZEND_IS_SMALLER_OR_EQUAL\00", align 1
@23 = private unnamed_addr constant [10 x i8] c"ZEND_CAST\00", align 1
@24 = private unnamed_addr constant [15 x i8] c"ZEND_QM_ASSIGN\00", align 1
@25 = private unnamed_addr constant [16 x i8] c"ZEND_ASSIGN_ADD\00", align 1
@26 = private unnamed_addr constant [16 x i8] c"ZEND_ASSIGN_SUB\00", align 1
@27 = private unnamed_addr constant [16 x i8] c"ZEND_ASSIGN_MUL\00", align 1
@28 = private unnamed_addr constant [16 x i8] c"ZEND_ASSIGN_DIV\00", align 1
@29 = private unnamed_addr constant [16 x i8] c"ZEND_ASSIGN_MOD\00", align 1
@30 = private unnamed_addr constant [15 x i8] c"ZEND_ASSIGN_SL\00", align 1
@31 = private unnamed_addr constant [15 x i8] c"ZEND_ASSIGN_SR\00", align 1
@32 = private unnamed_addr constant [19 x i8] c"ZEND_ASSIGN_CONCAT\00", align 1
@33 = private unnamed_addr constant [18 x i8] c"ZEND_ASSIGN_BW_OR\00", align 1
@34 = private unnamed_addr constant [19 x i8] c"ZEND_ASSIGN_BW_AND\00", align 1
@35 = private unnamed_addr constant [19 x i8] c"ZEND_ASSIGN_BW_XOR\00", align 1
@36 = private unnamed_addr constant [13 x i8] c"ZEND_PRE_INC\00", align 1
@37 = private unnamed_addr constant [13 x i8] c"ZEND_PRE_DEC\00", align 1
@38 = private unnamed_addr constant [14 x i8] c"ZEND_POST_INC\00", align 1
@39 = private unnamed_addr constant [14 x i8] c"ZEND_POST_DEC\00", align 1
@40 = private unnamed_addr constant [12 x i8] c"ZEND_ASSIGN\00", align 1
@41 = private unnamed_addr constant [16 x i8] c"ZEND_ASSIGN_REF\00", align 1
@42 = private unnamed_addr constant [10 x i8] c"ZEND_ECHO\00", align 1
@43 = private unnamed_addr constant [22 x i8] c"ZEND_GENERATOR_CREATE\00", align 1
@44 = private unnamed_addr constant [9 x i8] c"ZEND_JMP\00", align 1
@45 = private unnamed_addr constant [10 x i8] c"ZEND_JMPZ\00", align 1
@46 = private unnamed_addr constant [11 x i8] c"ZEND_JMPNZ\00", align 1
@47 = private unnamed_addr constant [12 x i8] c"ZEND_JMPZNZ\00", align 1
@48 = private unnamed_addr constant [13 x i8] c"ZEND_JMPZ_EX\00", align 1
@49 = private unnamed_addr constant [14 x i8] c"ZEND_JMPNZ_EX\00", align 1
@50 = private unnamed_addr constant [10 x i8] c"ZEND_CASE\00", align 1
@51 = private unnamed_addr constant [15 x i8] c"ZEND_CHECK_VAR\00", align 1
@52 = private unnamed_addr constant [24 x i8] c"ZEND_SEND_VAR_NO_REF_EX\00", align 1
@53 = private unnamed_addr constant [14 x i8] c"ZEND_MAKE_REF\00", align 1
@54 = private unnamed_addr constant [10 x i8] c"ZEND_BOOL\00", align 1
@55 = private unnamed_addr constant [17 x i8] c"ZEND_FAST_CONCAT\00", align 1
@56 = private unnamed_addr constant [15 x i8] c"ZEND_ROPE_INIT\00", align 1
@57 = private unnamed_addr constant [14 x i8] c"ZEND_ROPE_ADD\00", align 1
@58 = private unnamed_addr constant [14 x i8] c"ZEND_ROPE_END\00", align 1
@59 = private unnamed_addr constant [19 x i8] c"ZEND_BEGIN_SILENCE\00", align 1
@60 = private unnamed_addr constant [17 x i8] c"ZEND_END_SILENCE\00", align 1
@61 = private unnamed_addr constant [24 x i8] c"ZEND_INIT_FCALL_BY_NAME\00", align 1
@62 = private unnamed_addr constant [14 x i8] c"ZEND_DO_FCALL\00", align 1
@63 = private unnamed_addr constant [16 x i8] c"ZEND_INIT_FCALL\00", align 1
@64 = private unnamed_addr constant [12 x i8] c"ZEND_RETURN\00", align 1
@65 = private unnamed_addr constant [10 x i8] c"ZEND_RECV\00", align 1
@66 = private unnamed_addr constant [15 x i8] c"ZEND_RECV_INIT\00", align 1
@67 = private unnamed_addr constant [14 x i8] c"ZEND_SEND_VAL\00", align 1
@68 = private unnamed_addr constant [17 x i8] c"ZEND_SEND_VAR_EX\00", align 1
@69 = private unnamed_addr constant [14 x i8] c"ZEND_SEND_REF\00", align 1
@70 = private unnamed_addr constant [9 x i8] c"ZEND_NEW\00", align 1
@71 = private unnamed_addr constant [27 x i8] c"ZEND_INIT_NS_FCALL_BY_NAME\00", align 1
@72 = private unnamed_addr constant [10 x i8] c"ZEND_FREE\00", align 1
@73 = private unnamed_addr constant [16 x i8] c"ZEND_INIT_ARRAY\00", align 1
@74 = private unnamed_addr constant [23 x i8] c"ZEND_ADD_ARRAY_ELEMENT\00", align 1
@75 = private unnamed_addr constant [21 x i8] c"ZEND_INCLUDE_OR_EVAL\00", align 1
@76 = private unnamed_addr constant [15 x i8] c"ZEND_UNSET_VAR\00", align 1
@77 = private unnamed_addr constant [15 x i8] c"ZEND_UNSET_DIM\00", align 1
@78 = private unnamed_addr constant [15 x i8] c"ZEND_UNSET_OBJ\00", align 1
@79 = private unnamed_addr constant [16 x i8] c"ZEND_FE_RESET_R\00", align 1
@80 = private unnamed_addr constant [16 x i8] c"ZEND_FE_FETCH_R\00", align 1
@81 = private unnamed_addr constant [10 x i8] c"ZEND_EXIT\00", align 1
@82 = private unnamed_addr constant [13 x i8] c"ZEND_FETCH_R\00", align 1
@83 = private unnamed_addr constant [17 x i8] c"ZEND_FETCH_DIM_R\00", align 1
@84 = private unnamed_addr constant [17 x i8] c"ZEND_FETCH_OBJ_R\00", align 1
@85 = private unnamed_addr constant [13 x i8] c"ZEND_FETCH_W\00", align 1
@86 = private unnamed_addr constant [17 x i8] c"ZEND_FETCH_DIM_W\00", align 1
@87 = private unnamed_addr constant [17 x i8] c"ZEND_FETCH_OBJ_W\00", align 1
@88 = private unnamed_addr constant [14 x i8] c"ZEND_FETCH_RW\00", align 1
@89 = private unnamed_addr constant [18 x i8] c"ZEND_FETCH_DIM_RW\00", align 1
@90 = private unnamed_addr constant [18 x i8] c"ZEND_FETCH_OBJ_RW\00", align 1
@91 = private unnamed_addr constant [14 x i8] c"ZEND_FETCH_IS\00", align 1
@92 = private unnamed_addr constant [18 x i8] c"ZEND_FETCH_DIM_IS\00", align 1
@93 = private unnamed_addr constant [18 x i8] c"ZEND_FETCH_OBJ_IS\00", align 1
@94 = private unnamed_addr constant [20 x i8] c"ZEND_FETCH_FUNC_ARG\00", align 1
@95 = private unnamed_addr constant [24 x i8] c"ZEND_FETCH_DIM_FUNC_ARG\00", align 1
@96 = private unnamed_addr constant [24 x i8] c"ZEND_FETCH_OBJ_FUNC_ARG\00", align 1
@97 = private unnamed_addr constant [17 x i8] c"ZEND_FETCH_UNSET\00", align 1
@98 = private unnamed_addr constant [21 x i8] c"ZEND_FETCH_DIM_UNSET\00", align 1
@99 = private unnamed_addr constant [21 x i8] c"ZEND_FETCH_OBJ_UNSET\00", align 1
@100 = private unnamed_addr constant [16 x i8] c"ZEND_FETCH_LIST\00", align 1
@101 = private unnamed_addr constant [20 x i8] c"ZEND_FETCH_CONSTANT\00", align 1
@102 = private unnamed_addr constant [14 x i8] c"ZEND_EXT_STMT\00", align 1
@103 = private unnamed_addr constant [21 x i8] c"ZEND_EXT_FCALL_BEGIN\00", align 1
@104 = private unnamed_addr constant [19 x i8] c"ZEND_EXT_FCALL_END\00", align 1
@105 = private unnamed_addr constant [13 x i8] c"ZEND_EXT_NOP\00", align 1
@106 = private unnamed_addr constant [11 x i8] c"ZEND_TICKS\00", align 1
@107 = private unnamed_addr constant [21 x i8] c"ZEND_SEND_VAR_NO_REF\00", align 1
@108 = private unnamed_addr constant [11 x i8] c"ZEND_CATCH\00", align 1
@109 = private unnamed_addr constant [11 x i8] c"ZEND_THROW\00", align 1
@110 = private unnamed_addr constant [17 x i8] c"ZEND_FETCH_CLASS\00", align 1
@111 = private unnamed_addr constant [11 x i8] c"ZEND_CLONE\00", align 1
@112 = private unnamed_addr constant [19 x i8] c"ZEND_RETURN_BY_REF\00", align 1
@113 = private unnamed_addr constant [22 x i8] c"ZEND_INIT_METHOD_CALL\00", align 1
@114 = private unnamed_addr constant [29 x i8] c"ZEND_INIT_STATIC_METHOD_CALL\00", align 1
@115 = private unnamed_addr constant [23 x i8] c"ZEND_ISSET_ISEMPTY_VAR\00", align 1
@116 = private unnamed_addr constant [27 x i8] c"ZEND_ISSET_ISEMPTY_DIM_OBJ\00", align 1
@117 = private unnamed_addr constant [17 x i8] c"ZEND_SEND_VAL_EX\00", align 1
@118 = private unnamed_addr constant [14 x i8] c"ZEND_SEND_VAR\00", align 1
@119 = private unnamed_addr constant [20 x i8] c"ZEND_INIT_USER_CALL\00", align 1
@120 = private unnamed_addr constant [16 x i8] c"ZEND_SEND_ARRAY\00", align 1
@121 = private unnamed_addr constant [15 x i8] c"ZEND_SEND_USER\00", align 1
@122 = private unnamed_addr constant [12 x i8] c"ZEND_STRLEN\00", align 1
@123 = private unnamed_addr constant [13 x i8] c"ZEND_DEFINED\00", align 1
@124 = private unnamed_addr constant [16 x i8] c"ZEND_TYPE_CHECK\00", align 1
@125 = private unnamed_addr constant [24 x i8] c"ZEND_VERIFY_RETURN_TYPE\00", align 1
@126 = private unnamed_addr constant [17 x i8] c"ZEND_FE_RESET_RW\00", align 1
@127 = private unnamed_addr constant [17 x i8] c"ZEND_FE_FETCH_RW\00", align 1
@128 = private unnamed_addr constant [13 x i8] c"ZEND_FE_FREE\00", align 1
@129 = private unnamed_addr constant [23 x i8] c"ZEND_INIT_DYNAMIC_CALL\00", align 1
@130 = private unnamed_addr constant [14 x i8] c"ZEND_DO_ICALL\00", align 1
@131 = private unnamed_addr constant [14 x i8] c"ZEND_DO_UCALL\00", align 1
@132 = private unnamed_addr constant [22 x i8] c"ZEND_DO_FCALL_BY_NAME\00", align 1
@133 = private unnamed_addr constant [17 x i8] c"ZEND_PRE_INC_OBJ\00", align 1
@134 = private unnamed_addr constant [17 x i8] c"ZEND_PRE_DEC_OBJ\00", align 1
@135 = private unnamed_addr constant [18 x i8] c"ZEND_POST_INC_OBJ\00", align 1
@136 = private unnamed_addr constant [18 x i8] c"ZEND_POST_DEC_OBJ\00", align 1
@137 = private unnamed_addr constant [16 x i8] c"ZEND_ASSIGN_OBJ\00", align 1
@138 = private unnamed_addr constant [13 x i8] c"ZEND_OP_DATA\00", align 1
@139 = private unnamed_addr constant [16 x i8] c"ZEND_INSTANCEOF\00", align 1
@140 = private unnamed_addr constant [19 x i8] c"ZEND_DECLARE_CLASS\00", align 1
@141 = private unnamed_addr constant [29 x i8] c"ZEND_DECLARE_INHERITED_CLASS\00", align 1
@142 = private unnamed_addr constant [22 x i8] c"ZEND_DECLARE_FUNCTION\00", align 1
@143 = private unnamed_addr constant [16 x i8] c"ZEND_YIELD_FROM\00", align 1
@144 = private unnamed_addr constant [19 x i8] c"ZEND_DECLARE_CONST\00", align 1
@145 = private unnamed_addr constant [19 x i8] c"ZEND_ADD_INTERFACE\00", align 1
@146 = private unnamed_addr constant [37 x i8] c"ZEND_DECLARE_INHERITED_CLASS_DELAYED\00", align 1
@147 = private unnamed_addr constant [27 x i8] c"ZEND_VERIFY_ABSTRACT_CLASS\00", align 1
@148 = private unnamed_addr constant [16 x i8] c"ZEND_ASSIGN_DIM\00", align 1
@149 = private unnamed_addr constant [28 x i8] c"ZEND_ISSET_ISEMPTY_PROP_OBJ\00", align 1
@150 = private unnamed_addr constant [22 x i8] c"ZEND_HANDLE_EXCEPTION\00", align 1
@151 = private unnamed_addr constant [17 x i8] c"ZEND_USER_OPCODE\00", align 1
@152 = private unnamed_addr constant [18 x i8] c"ZEND_ASSERT_CHECK\00", align 1
@153 = private unnamed_addr constant [13 x i8] c"ZEND_JMP_SET\00", align 1
@154 = private unnamed_addr constant [29 x i8] c"ZEND_DECLARE_LAMBDA_FUNCTION\00", align 1
@155 = private unnamed_addr constant [15 x i8] c"ZEND_ADD_TRAIT\00", align 1
@156 = private unnamed_addr constant [17 x i8] c"ZEND_BIND_TRAITS\00", align 1
@157 = private unnamed_addr constant [14 x i8] c"ZEND_SEPARATE\00", align 1
@158 = private unnamed_addr constant [22 x i8] c"ZEND_FETCH_CLASS_NAME\00", align 1
@159 = private unnamed_addr constant [21 x i8] c"ZEND_CALL_TRAMPOLINE\00", align 1
@160 = private unnamed_addr constant [23 x i8] c"ZEND_DISCARD_EXCEPTION\00", align 1
@161 = private unnamed_addr constant [11 x i8] c"ZEND_YIELD\00", align 1
@162 = private unnamed_addr constant [22 x i8] c"ZEND_GENERATOR_RETURN\00", align 1
@163 = private unnamed_addr constant [15 x i8] c"ZEND_FAST_CALL\00", align 1
@164 = private unnamed_addr constant [14 x i8] c"ZEND_FAST_RET\00", align 1
@165 = private unnamed_addr constant [19 x i8] c"ZEND_RECV_VARIADIC\00", align 1
@166 = private unnamed_addr constant [17 x i8] c"ZEND_SEND_UNPACK\00", align 1
@167 = private unnamed_addr constant [9 x i8] c"ZEND_POW\00", align 1
@168 = private unnamed_addr constant [16 x i8] c"ZEND_ASSIGN_POW\00", align 1
@169 = private unnamed_addr constant [17 x i8] c"ZEND_BIND_GLOBAL\00", align 1
@170 = private unnamed_addr constant [14 x i8] c"ZEND_COALESCE\00", align 1
@171 = private unnamed_addr constant [15 x i8] c"ZEND_SPACESHIP\00", align 1
@172 = private unnamed_addr constant [24 x i8] c"ZEND_DECLARE_ANON_CLASS\00", align 1
@173 = private unnamed_addr constant [34 x i8] c"ZEND_DECLARE_ANON_INHERITED_CLASS\00", align 1
@174 = private unnamed_addr constant [25 x i8] c"ZEND_FETCH_STATIC_PROP_R\00", align 1
@175 = private unnamed_addr constant [25 x i8] c"ZEND_FETCH_STATIC_PROP_W\00", align 1
@176 = private unnamed_addr constant [26 x i8] c"ZEND_FETCH_STATIC_PROP_RW\00", align 1
@177 = private unnamed_addr constant [26 x i8] c"ZEND_FETCH_STATIC_PROP_IS\00", align 1
@178 = private unnamed_addr constant [32 x i8] c"ZEND_FETCH_STATIC_PROP_FUNC_ARG\00", align 1
@179 = private unnamed_addr constant [29 x i8] c"ZEND_FETCH_STATIC_PROP_UNSET\00", align 1
@180 = private unnamed_addr constant [23 x i8] c"ZEND_UNSET_STATIC_PROP\00", align 1
@181 = private unnamed_addr constant [31 x i8] c"ZEND_ISSET_ISEMPTY_STATIC_PROP\00", align 1
@182 = private unnamed_addr constant [26 x i8] c"ZEND_FETCH_CLASS_CONSTANT\00", align 1
@183 = private unnamed_addr constant [18 x i8] c"ZEND_BIND_LEXICAL\00", align 1
@184 = private unnamed_addr constant [17 x i8] c"ZEND_BIND_STATIC\00", align 1
@185 = private unnamed_addr constant [16 x i8] c"ZEND_FETCH_THIS\00", align 1
@186 = private unnamed_addr constant [24 x i8] c"ZEND_ISSET_ISEMPTY_THIS\00", align 1
@187 = private unnamed_addr constant [17 x i8] c"ZEND_SWITCH_LONG\00", align 1
@188 = private unnamed_addr constant [19 x i8] c"ZEND_SWITCH_STRING\00", align 1
@189 = private unnamed_addr constant [14 x i8] c"ZEND_IN_ARRAY\00", align 1
@190 = private unnamed_addr constant [11 x i8] c"ZEND_COUNT\00", align 1
@191 = private unnamed_addr constant [15 x i8] c"ZEND_GET_CLASS\00", align 1
@192 = private unnamed_addr constant [22 x i8] c"ZEND_GET_CALLED_CLASS\00", align 1
@193 = private unnamed_addr constant [14 x i8] c"ZEND_GET_TYPE\00", align 1
@194 = private unnamed_addr constant [19 x i8] c"ZEND_FUNC_NUM_ARGS\00", align 1
@195 = private unnamed_addr constant [19 x i8] c"ZEND_FUNC_GET_ARGS\00", align 1
@196 = private unnamed_addr constant [14 x i8] c"ZEND_UNSET_CV\00", align 1
@197 = private unnamed_addr constant [22 x i8] c"ZEND_ISSET_ISEMPTY_CV\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i8* @zend_get_opcode_name(i8 zeroext %0) #0 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i64
  %5 = getelementptr inbounds [198 x i8*], [198 x i8*]* @0, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_get_opcode_flags(i8 zeroext %0) #0 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i64
  %5 = getelementptr inbounds [198 x i32], [198 x i32]* @1, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
