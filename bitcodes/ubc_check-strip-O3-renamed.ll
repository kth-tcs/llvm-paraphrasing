; ModuleID = 'ubc_check-strip-O3-renamed.bc'
source_filename = "sha1dc/ubc_check.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i32, i32, i32, i32, i32, i32, [80 x i32] }

@sha1_dvs = dso_local local_unnamed_addr global [33 x %0] [%0 { i32 1, i32 43, i32 0, i32 58, i32 0, i32 0, [80 x i32] [i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630, i32 -2147483134, i32 24, i32 356, i32 1032, i32 -2147483418, i32 -2147483572, i32 2051, i32 -2147483295, i32 -2147482215] }, %0 { i32 1, i32 44, i32 0, i32 58, i32 0, i32 1, [80 x i32] [i32 -1275068408, i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630, i32 -2147483134, i32 24, i32 356, i32 1032, i32 -2147483418, i32 -2147483572, i32 2051, i32 -2147483295] }, %0 { i32 1, i32 45, i32 0, i32 58, i32 0, i32 2, [80 x i32] [i32 -201326572, i32 -1275068408, i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630, i32 -2147483134, i32 24, i32 356, i32 1032, i32 -2147483418, i32 -2147483572, i32 2051] }, %0 { i32 1, i32 46, i32 0, i32 58, i32 0, i32 3, [80 x i32] [i32 738197520, i32 -201326572, i32 -1275068408, i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630, i32 -2147483134, i32 24, i32 356, i32 1032, i32 -2147483418, i32 -2147483572] }, %0 { i32 1, i32 46, i32 2, i32 58, i32 0, i32 4, [80 x i32] [i32 -1342177216, i32 -805306285, i32 -805306334, i32 536870912, i32 1610612786, i32 1610612803, i32 536870976, i32 -536870846, i32 1610612738, i32 -2147483647, i32 32, i32 3, i32 1073741906, i32 1073741888, i32 -536870830, i32 -1610612736, i32 -2147483584, i32 536870913, i32 536871008, i32 -2147483647, i32 1073741890, i32 -1073741757, i32 1073741858, i32 3, i32 1073741890, i32 -1073741757, i32 -1073741790, i32 1, i32 1073741826, i32 -1073741757, i32 1073741922, i32 -2147483647, i32 1073741890, i32 1073741890, i32 1073741826, i32 2, i32 64, i32 -2147483646, i32 -2147483648, i32 -2147483646, i32 -2147483584, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483648, i32 64, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 257, i32 9, i32 18, i32 514, i32 26, i32 292, i32 1036, i32 38, i32 74, i32 2058, i32 96, i32 1424, i32 4128, i32 922, i32 306] }, %0 { i32 1, i32 47, i32 0, i32 58, i32 0, i32 5, [80 x i32] [i32 -939524080, i32 738197520, i32 -201326572, i32 -1275068408, i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630, i32 -2147483134, i32 24, i32 356, i32 1032, i32 -2147483418] }, %0 { i32 1, i32 47, i32 2, i32 58, i32 0, i32 6, [80 x i32] [i32 536870979, i32 -1342177216, i32 -805306285, i32 -805306334, i32 536870912, i32 1610612786, i32 1610612803, i32 536870976, i32 -536870846, i32 1610612738, i32 -2147483647, i32 32, i32 3, i32 1073741906, i32 1073741888, i32 -536870830, i32 -1610612736, i32 -2147483584, i32 536870913, i32 536871008, i32 -2147483647, i32 1073741890, i32 -1073741757, i32 1073741858, i32 3, i32 1073741890, i32 -1073741757, i32 -1073741790, i32 1, i32 1073741826, i32 -1073741757, i32 1073741922, i32 -2147483647, i32 1073741890, i32 1073741890, i32 1073741826, i32 2, i32 64, i32 -2147483646, i32 -2147483648, i32 -2147483646, i32 -2147483584, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483648, i32 64, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 257, i32 9, i32 18, i32 514, i32 26, i32 292, i32 1036, i32 38, i32 74, i32 2058, i32 96, i32 1424, i32 4128, i32 922] }, %0 { i32 1, i32 48, i32 0, i32 58, i32 0, i32 7, [80 x i32] [i32 -1207959542, i32 -939524080, i32 738197520, i32 -201326572, i32 -1275068408, i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630, i32 -2147483134, i32 24, i32 356, i32 1032] }, %0 { i32 1, i32 48, i32 2, i32 58, i32 0, i32 8, [80 x i32] [i32 -536870870, i32 536870979, i32 -1342177216, i32 -805306285, i32 -805306334, i32 536870912, i32 1610612786, i32 1610612803, i32 536870976, i32 -536870846, i32 1610612738, i32 -2147483647, i32 32, i32 3, i32 1073741906, i32 1073741888, i32 -536870830, i32 -1610612736, i32 -2147483584, i32 536870913, i32 536871008, i32 -2147483647, i32 1073741890, i32 -1073741757, i32 1073741858, i32 3, i32 1073741890, i32 -1073741757, i32 -1073741790, i32 1, i32 1073741826, i32 -1073741757, i32 1073741922, i32 -2147483647, i32 1073741890, i32 1073741890, i32 1073741826, i32 2, i32 64, i32 -2147483646, i32 -2147483648, i32 -2147483646, i32 -2147483584, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483648, i32 64, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 257, i32 9, i32 18, i32 514, i32 26, i32 292, i32 1036, i32 38, i32 74, i32 2058, i32 96, i32 1424, i32 4128] }, %0 { i32 1, i32 49, i32 0, i32 58, i32 0, i32 9, [80 x i32] [i32 402653184, i32 -1207959542, i32 -939524080, i32 738197520, i32 -201326572, i32 -1275068408, i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630, i32 -2147483134, i32 24, i32 356] }, %0 { i32 1, i32 49, i32 2, i32 58, i32 0, i32 10, [80 x i32] [i32 1610612736, i32 -536870870, i32 536870979, i32 -1342177216, i32 -805306285, i32 -805306334, i32 536870912, i32 1610612786, i32 1610612803, i32 536870976, i32 -536870846, i32 1610612738, i32 -2147483647, i32 32, i32 3, i32 1073741906, i32 1073741888, i32 -536870830, i32 -1610612736, i32 -2147483584, i32 536870913, i32 536871008, i32 -2147483647, i32 1073741890, i32 -1073741757, i32 1073741858, i32 3, i32 1073741890, i32 -1073741757, i32 -1073741790, i32 1, i32 1073741826, i32 -1073741757, i32 1073741922, i32 -2147483647, i32 1073741890, i32 1073741890, i32 1073741826, i32 2, i32 64, i32 -2147483646, i32 -2147483648, i32 -2147483646, i32 -2147483584, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483648, i32 64, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 257, i32 9, i32 18, i32 514, i32 26, i32 292, i32 1036, i32 38, i32 74, i32 2058, i32 96, i32 1424] }, %0 { i32 1, i32 50, i32 0, i32 65, i32 0, i32 11, [80 x i32] [i32 134217740, i32 402653184, i32 -1207959542, i32 -939524080, i32 738197520, i32 -201326572, i32 -1275068408, i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630, i32 -2147483134, i32 24] }, %0 { i32 1, i32 50, i32 2, i32 65, i32 0, i32 12, [80 x i32] [i32 536870960, i32 1610612736, i32 -536870870, i32 536870979, i32 -1342177216, i32 -805306285, i32 -805306334, i32 536870912, i32 1610612786, i32 1610612803, i32 536870976, i32 -536870846, i32 1610612738, i32 -2147483647, i32 32, i32 3, i32 1073741906, i32 1073741888, i32 -536870830, i32 -1610612736, i32 -2147483584, i32 536870913, i32 536871008, i32 -2147483647, i32 1073741890, i32 -1073741757, i32 1073741858, i32 3, i32 1073741890, i32 -1073741757, i32 -1073741790, i32 1, i32 1073741826, i32 -1073741757, i32 1073741922, i32 -2147483647, i32 1073741890, i32 1073741890, i32 1073741826, i32 2, i32 64, i32 -2147483646, i32 -2147483648, i32 -2147483646, i32 -2147483584, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483648, i32 64, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 257, i32 9, i32 18, i32 514, i32 26, i32 292, i32 1036, i32 38, i32 74, i32 2058, i32 96] }, %0 { i32 1, i32 51, i32 0, i32 65, i32 0, i32 13, [80 x i32] [i32 -402653184, i32 134217740, i32 402653184, i32 -1207959542, i32 -939524080, i32 738197520, i32 -201326572, i32 -1275068408, i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630, i32 -2147483134] }, %0 { i32 1, i32 51, i32 2, i32 65, i32 0, i32 14, [80 x i32] [i32 -1610612733, i32 536870960, i32 1610612736, i32 -536870870, i32 536870979, i32 -1342177216, i32 -805306285, i32 -805306334, i32 536870912, i32 1610612786, i32 1610612803, i32 536870976, i32 -536870846, i32 1610612738, i32 -2147483647, i32 32, i32 3, i32 1073741906, i32 1073741888, i32 -536870830, i32 -1610612736, i32 -2147483584, i32 536870913, i32 536871008, i32 -2147483647, i32 1073741890, i32 -1073741757, i32 1073741858, i32 3, i32 1073741890, i32 -1073741757, i32 -1073741790, i32 1, i32 1073741826, i32 -1073741757, i32 1073741922, i32 -2147483647, i32 1073741890, i32 1073741890, i32 1073741826, i32 2, i32 64, i32 -2147483646, i32 -2147483648, i32 -2147483646, i32 -2147483584, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483648, i32 64, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 257, i32 9, i32 18, i32 514, i32 26, i32 292, i32 1036, i32 38, i32 74, i32 2058] }, %0 { i32 1, i32 52, i32 0, i32 65, i32 0, i32 15, [80 x i32] [i32 67108880, i32 -402653184, i32 134217740, i32 402653184, i32 -1207959542, i32 -939524080, i32 738197520, i32 -201326572, i32 -1275068408, i32 134217728, i32 -1744830452, i32 -671088624, i32 134217744, i32 -1207959536, i32 -1744830464, i32 1610612736, i32 8, i32 -1073741824, i32 -1879048172, i32 268435472, i32 -1207959532, i32 671088640, i32 536870928, i32 1207959552, i32 134217752, i32 1610612736, i32 -1879048176, i32 -268435440, i32 -1879048184, i32 -1073741824, i32 -1879048176, i32 -268435440, i32 -1342177272, i32 1073741824, i32 -1879048192, i32 -268435440, i32 -1879048168, i32 1610612736, i32 -1879048176, i32 -1879048176, i32 -1879048192, i32 -2147483648, i32 16, i32 -1610612736, i32 536870912, i32 -1610612736, i32 536870928, i32 0, i32 536870928, i32 536870912, i32 16, i32 536870912, i32 16, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741888, i32 1073741826, i32 -2147483644, i32 -2147483520, i32 -2147483642, i32 73, i32 259, i32 -2147483639, i32 -2147483630] }, %0 { i32 2, i32 45, i32 0, i32 58, i32 0, i32 16, [80 x i32] [i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385, i32 137, i32 20, i32 -2147483061, i32 283, i32 -2147483283, i32 -2147482598, i32 740, i32 -2147483564, i32 2407] }, %0 { i32 2, i32 46, i32 0, i32 58, i32 0, i32 17, [80 x i32] [i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385, i32 137, i32 20, i32 -2147483061, i32 283, i32 -2147483283, i32 -2147482598, i32 740, i32 -2147483564] }, %0 { i32 2, i32 46, i32 2, i32 58, i32 0, i32 18, [80 x i32] [i32 -1879048080, i32 -1342177197, i32 805306376, i32 67, i32 -805306254, i32 -1342177264, i32 -268435358, i32 -1073741758, i32 48, i32 -536870846, i32 536871008, i32 -536870847, i32 536870992, i32 -1073741759, i32 -536870798, i32 -1610612733, i32 -1073741806, i32 1610612801, i32 -1073741774, i32 536870913, i32 -1073741822, i32 -536870846, i32 1610612802, i32 -2147483646, i32 0, i32 0, i32 -2147483648, i32 2, i32 64, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483647, i32 96, i32 -2147483645, i32 1073741826, i32 -1073741760, i32 -1073741822, i32 -2147483648, i32 -2147483648, i32 -2147483646, i32 64, i32 2, i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 2, i32 64, i32 0, i32 -2147483584, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 261, i32 137, i32 22, i32 523, i32 283, i32 301, i32 1054, i32 548, i32 80, i32 2350, i32 1132, i32 1462, i32 4202, i32 2960, i32 338] }, %0 { i32 2, i32 47, i32 0, i32 58, i32 0, i32 19, [80 x i32] [i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385, i32 137, i32 20, i32 -2147483061, i32 283, i32 -2147483283, i32 -2147482598, i32 740] }, %0 { i32 2, i32 48, i32 0, i32 58, i32 0, i32 20, [80 x i32] [i32 -1140850662, i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385, i32 137, i32 20, i32 -2147483061, i32 283, i32 -2147483283, i32 -2147482598] }, %0 { i32 2, i32 49, i32 0, i32 58, i32 0, i32 21, [80 x i32] [i32 1006632964, i32 -1140850662, i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385, i32 137, i32 20, i32 -2147483061, i32 283, i32 -2147483283] }, %0 { i32 2, i32 49, i32 2, i32 58, i32 0, i32 22, [80 x i32] [i32 -268435440, i32 -268435350, i32 -2147483584, i32 -1879048080, i32 -1342177197, i32 805306376, i32 67, i32 -805306254, i32 -1342177264, i32 -268435358, i32 -1073741758, i32 48, i32 -536870846, i32 536871008, i32 -536870847, i32 536870992, i32 -1073741759, i32 -536870798, i32 -1610612733, i32 -1073741806, i32 1610612801, i32 -1073741774, i32 536870913, i32 -1073741822, i32 -536870846, i32 1610612802, i32 -2147483646, i32 0, i32 0, i32 -2147483648, i32 2, i32 64, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483647, i32 96, i32 -2147483645, i32 1073741826, i32 -1073741760, i32 -1073741822, i32 -2147483648, i32 -2147483648, i32 -2147483646, i32 64, i32 2, i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 2, i32 64, i32 0, i32 -2147483584, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 261, i32 137, i32 22, i32 523, i32 283, i32 301, i32 1054, i32 548, i32 80, i32 2350, i32 1132, i32 1462] }, %0 { i32 2, i32 50, i32 0, i32 65, i32 0, i32 23, [80 x i32] [i32 -1275068388, i32 1006632964, i32 -1140850662, i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385, i32 137, i32 20, i32 -2147483061, i32 283] }, %0 { i32 2, i32 50, i32 2, i32 65, i32 0, i32 24, [80 x i32] [i32 -805306254, i32 -268435440, i32 -268435350, i32 -2147483584, i32 -1879048080, i32 -1342177197, i32 805306376, i32 67, i32 -805306254, i32 -1342177264, i32 -268435358, i32 -1073741758, i32 48, i32 -536870846, i32 536871008, i32 -536870847, i32 536870992, i32 -1073741759, i32 -536870798, i32 -1610612733, i32 -1073741806, i32 1610612801, i32 -1073741774, i32 536870913, i32 -1073741822, i32 -536870846, i32 1610612802, i32 -2147483646, i32 0, i32 0, i32 -2147483648, i32 2, i32 64, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483647, i32 96, i32 -2147483645, i32 1073741826, i32 -1073741760, i32 -1073741822, i32 -2147483648, i32 -2147483648, i32 -2147483646, i32 64, i32 2, i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 2, i32 64, i32 0, i32 -2147483584, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 261, i32 137, i32 22, i32 523, i32 283, i32 301, i32 1054, i32 548, i32 80, i32 2350, i32 1132] }, %0 { i32 2, i32 51, i32 0, i32 65, i32 0, i32 25, [80 x i32] [i32 -1073741808, i32 -1275068388, i32 1006632964, i32 -1140850662, i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385, i32 137, i32 20, i32 -2147483061] }, %0 { i32 2, i32 51, i32 2, i32 65, i32 0, i32 26, [80 x i32] [i32 67, i32 -805306254, i32 -268435440, i32 -268435350, i32 -2147483584, i32 -1879048080, i32 -1342177197, i32 805306376, i32 67, i32 -805306254, i32 -1342177264, i32 -268435358, i32 -1073741758, i32 48, i32 -536870846, i32 536871008, i32 -536870847, i32 536870992, i32 -1073741759, i32 -536870798, i32 -1610612733, i32 -1073741806, i32 1610612801, i32 -1073741774, i32 536870913, i32 -1073741822, i32 -536870846, i32 1610612802, i32 -2147483646, i32 0, i32 0, i32 -2147483648, i32 2, i32 64, i32 0, i32 -2147483584, i32 -2147483648, i32 64, i32 -2147483647, i32 96, i32 -2147483645, i32 1073741826, i32 -1073741760, i32 -1073741822, i32 -2147483648, i32 -2147483648, i32 -2147483646, i32 64, i32 2, i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 2, i32 64, i32 0, i32 -2147483584, i32 -2147483646, i32 0, i32 -2147483648, i32 -2147483648, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 128, i32 4, i32 9, i32 261, i32 137, i32 22, i32 523, i32 283, i32 301, i32 1054, i32 548, i32 80, i32 2350] }, %0 { i32 2, i32 52, i32 0, i32 65, i32 0, i32 27, [80 x i32] [i32 201326594, i32 -1073741808, i32 -1275068388, i32 1006632964, i32 -1140850662, i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385, i32 137, i32 20] }, %0 { i32 2, i32 53, i32 0, i32 65, i32 0, i32 28, [80 x i32] [i32 -872415212, i32 201326594, i32 -1073741808, i32 -1275068388, i32 1006632964, i32 -1140850662, i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385, i32 137] }, %0 { i32 2, i32 54, i32 0, i32 65, i32 0, i32 29, [80 x i32] [i32 67108892, i32 -872415212, i32 201326594, i32 -1073741808, i32 -1275068388, i32 1006632964, i32 -1140850662, i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899, i32 -2147483385] }, %0 { i32 2, i32 55, i32 0, i32 65, i32 0, i32 30, [80 x i32] [i32 16, i32 67108892, i32 -872415212, i32 201326594, i32 -1073741808, i32 -1275068388, i32 1006632964, i32 -1140850662, i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754, i32 1073741899] }, %0 { i32 2, i32 56, i32 0, i32 65, i32 0, i32 31, [80 x i32] [i32 637534234, i32 16, i32 67108892, i32 -872415212, i32 201326594, i32 -1073741808, i32 -1275068388, i32 1006632964, i32 -1140850662, i32 536870928, i32 603979804, i32 -335544300, i32 201326594, i32 -1073741808, i32 -1275068388, i32 738197508, i32 -1140850664, i32 -1342177264, i32 12, i32 -1207959536, i32 134217752, i32 2013265936, i32 134217748, i32 1879048208, i32 -1207959524, i32 -402653184, i32 -1342177276, i32 1476395024, i32 -1342177268, i32 1207959552, i32 -1342177280, i32 -1207959536, i32 -1744830448, i32 -1610612736, i32 0, i32 0, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 536870912, i32 16, i32 1610612736, i32 24, i32 -536870912, i32 -1879048192, i32 805306384, i32 -1342177280, i32 536870912, i32 536870912, i32 -1610612736, i32 16, i32 -2147483648, i32 536870912, i32 536870912, i32 536870912, i32 -2147483648, i32 16, i32 0, i32 536870928, i32 -1610612736, i32 0, i32 536870912, i32 536870912, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 32, i32 1, i32 1073741826, i32 1073741889, i32 1073741858, i32 -2147483643, i32 -1073741694, i32 -1073741754] }, %0 zeroinitializer], align 16

; Function Attrs: norecurse nounwind uwtable
define dso_local void @ubc_check(i32* readonly %0, i32* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds i32, i32* %0, i64 44
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds i32, i32* %0, i64 45
  %6 = load i32, i32* %5, align 4
  %7 = xor i32 %6, %4
  %8 = lshr i32 %7, 29
  %9 = and i32 %8, 1
  %10 = add nuw nsw i32 %9, 67108863
  %11 = or i32 %10, -42180737
  %12 = getelementptr inbounds i32, i32* %0, i64 49
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %0, i64 50
  %15 = load i32, i32* %14, align 4
  %16 = xor i32 %15, %13
  %17 = lshr i32 %16, 29
  %18 = and i32 %17, 1
  %19 = add nsw i32 %18, -1
  %20 = or i32 %19, 1031733239
  %21 = and i32 %20, %11
  %22 = getelementptr inbounds i32, i32* %0, i64 48
  %23 = load i32, i32* %22, align 4
  %24 = xor i32 %23, %13
  %25 = lshr i32 %24, 29
  %26 = and i32 %25, 1
  %27 = add nuw i32 %26, 2147483647
  %28 = or i32 %27, -1621131269
  %29 = and i32 %21, %28
  %30 = getelementptr inbounds i32, i32* %0, i64 47
  %31 = load i32, i32* %30, align 4
  %32 = lshr i32 %15, 25
  %33 = xor i32 %31, %32
  %34 = and i32 %33, 16
  %35 = add nsw i32 %34, -16
  %36 = or i32 %35, 2113854943
  %37 = and i32 %29, %36
  %38 = xor i32 %31, %23
  %39 = lshr i32 %38, 29
  %40 = and i32 %39, 1
  %41 = add nuw nsw i32 %40, 1073741823
  %42 = or i32 %41, -808460291
  %43 = getelementptr inbounds i32, i32* %0, i64 46
  %44 = load i32, i32* %43, align 4
  %45 = lshr i32 %44, 4
  %46 = lshr i32 %13, 29
  %47 = xor i32 %45, %46
  %48 = and i32 %47, 1
  %49 = add nuw i32 %48, 2147483647
  %50 = or i32 %49, -1082165385
  %51 = xor i32 %44, %31
  %52 = lshr i32 %51, 29
  %53 = and i32 %52, 1
  %54 = add nuw nsw i32 %53, 536870911
  %55 = or i32 %54, -404228098
  %56 = lshr i32 %6, 4
  %57 = lshr i32 %23, 29
  %58 = xor i32 %57, %56
  %59 = and i32 %58, 1
  %60 = add nuw nsw i32 %59, 1073741823
  %61 = or i32 %60, -538976805
  %62 = xor i32 %44, %6
  %63 = lshr i32 %62, 29
  %64 = and i32 %63, 1
  %65 = add nuw nsw i32 %64, 268435455
  %66 = or i32 %65, -168460801
  %67 = lshr i32 %4, 4
  %68 = lshr i32 %31, 29
  %69 = xor i32 %68, %67
  %70 = and i32 %69, 1
  %71 = add nuw nsw i32 %70, 536870911
  %72 = or i32 %71, -269486219
  %73 = getelementptr inbounds i32, i32* %0, i64 43
  %74 = load i32, i32* %73, align 4
  %75 = lshr i32 %74, 4
  %76 = lshr i32 %44, 29
  %77 = xor i32 %75, %76
  %78 = and i32 %77, 1
  %79 = add nuw nsw i32 %78, 268435455
  %80 = or i32 %79, -134742566
  %81 = xor i32 %74, %4
  %82 = lshr i32 %81, 29
  %83 = and i32 %82, 1
  %84 = add nuw nsw i32 %83, 16777215
  %85 = or i32 %84, -10561569
  %86 = getelementptr inbounds i32, i32* %0, i64 42
  %87 = load i32, i32* %86, align 4
  %88 = lshr i32 %87, 4
  %89 = lshr i32 %6, 29
  %90 = xor i32 %88, %89
  %91 = and i32 %90, 1
  %92 = add nuw nsw i32 %91, 67108863
  %93 = or i32 %92, -33718411
  %94 = getelementptr inbounds i32, i32* %0, i64 41
  %95 = load i32, i32* %94, align 4
  %96 = lshr i32 %95, 4
  %97 = lshr i32 %4, 29
  %98 = xor i32 %96, %97
  %99 = and i32 %98, 1
  %100 = add nuw nsw i32 %99, 16777215
  %101 = or i32 %100, -8462374
  %102 = getelementptr inbounds i32, i32* %0, i64 40
  %103 = load i32, i32* %102, align 4
  %104 = xor i32 %103, %95
  %105 = lshr i32 %104, 29
  %106 = and i32 %105, 1
  %107 = add nsw i32 %106, -1
  %108 = or i32 %107, 2146828125
  %109 = getelementptr inbounds i32, i32* %0, i64 54
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds i32, i32* %0, i64 55
  %112 = load i32, i32* %111, align 4
  %113 = xor i32 %112, %110
  %114 = lshr i32 %113, 29
  %115 = and i32 %114, 1
  %116 = add nsw i32 %115, -1
  %117 = or i32 %116, 1064820735
  %118 = getelementptr inbounds i32, i32* %0, i64 53
  %119 = load i32, i32* %118, align 4
  %120 = xor i32 %119, %110
  %121 = lshr i32 %120, 29
  %122 = and i32 %121, 1
  %123 = add nuw i32 %122, 2147483647
  %124 = or i32 %123, -1612843009
  %125 = getelementptr inbounds i32, i32* %0, i64 52
  %126 = load i32, i32* %125, align 4
  %127 = xor i32 %126, %119
  %128 = lshr i32 %127, 29
  %129 = and i32 %128, 1
  %130 = add nuw nsw i32 %129, 1073741823
  %131 = or i32 %130, -806420993
  %132 = lshr i32 %119, 25
  %133 = xor i32 %132, %15
  %134 = and i32 %133, 16
  %135 = add nuw nsw i32 %134, 1073741808
  %136 = or i32 %135, -538085377
  %137 = getelementptr inbounds i32, i32* %0, i64 51
  %138 = load i32, i32* %137, align 4
  %139 = xor i32 %138, %15
  %140 = lshr i32 %139, 29
  %141 = and i32 %140, 1
  %142 = add nsw i32 %141, -1
  %143 = or i32 %142, 1979580383
  %144 = lshr i32 %126, 25
  %145 = xor i32 %144, %13
  %146 = and i32 %145, 16
  %147 = add nuw nsw i32 %146, 536870896
  %148 = or i32 %147, -269033985
  %149 = lshr i32 %138, 25
  %150 = xor i32 %149, %23
  %151 = and i32 %150, 16
  %152 = add nuw nsw i32 %151, 268435440
  %153 = or i32 %152, -134383745
  %154 = xor i32 %87, %74
  %155 = lshr i32 %154, 29
  %156 = and i32 %155, 1
  %157 = add nuw nsw i32 %156, 4194303
  %158 = or i32 %157, -3148297
  %159 = xor i32 %95, %87
  %160 = lshr i32 %159, 29
  %161 = and i32 %160, 1
  %162 = add nuw nsw i32 %161, 2097151
  %163 = or i32 %162, -1573509
  %164 = lshr i32 %103, 4
  %165 = lshr i32 %74, 29
  %166 = xor i32 %164, %165
  %167 = and i32 %166, 1
  %168 = add nsw i32 %167, -1
  %169 = or i32 %168, 2145384437
  %170 = and i32 %37, %61
  %171 = and i32 %170, %42
  %172 = and i32 %171, %72
  %173 = and i32 %172, %50
  %174 = and i32 %173, %55
  %175 = and i32 %174, %66
  %176 = and i32 %175, %80
  %177 = and i32 %176, %85
  %178 = and i32 %177, %93
  %179 = and i32 %178, %158
  %180 = and i32 %179, %101
  %181 = and i32 %180, %163
  %182 = and i32 %181, %108
  %183 = and i32 %182, %169
  %184 = and i32 %183, %117
  %185 = and i32 %184, %124
  %186 = and i32 %185, %136
  %187 = and i32 %186, %131
  %188 = and i32 %187, %148
  %189 = and i32 %188, %143
  %190 = and i32 %189, %153
  %191 = getelementptr inbounds i32, i32* %0, i64 39
  %192 = load i32, i32* %191, align 4
  %193 = lshr i32 %192, 4
  %194 = lshr i32 %87, 29
  %195 = xor i32 %193, %194
  %196 = and i32 %195, 1
  %197 = add nuw i32 %196, 2147483647
  %198 = or i32 %197, -1074790918
  %199 = and i32 %190, %198
  %200 = and i32 %190, -1610088318
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %212, label %202

202:                                              ; preds = %2
  %203 = getelementptr inbounds i32, i32* %0, i64 38
  %204 = load i32, i32* %203, align 4
  %205 = lshr i32 %204, 4
  %206 = lshr i32 %95, 29
  %207 = xor i32 %205, %206
  %208 = and i32 %207, 1
  %209 = add nsw i32 %208, -1
  %210 = or i32 %209, 1610088317
  %211 = and i32 %210, %199
  br label %212

212:                                              ; preds = %2, %202
  %213 = phi i32 [ %211, %202 ], [ %199, %2 ]
  %214 = getelementptr inbounds i32, i32* %0, i64 37
  %215 = load i32, i32* %214, align 4
  %216 = lshr i32 %215, 4
  %217 = lshr i32 %103, 29
  %218 = xor i32 %216, %217
  %219 = and i32 %218, 1
  %220 = add nuw i32 %219, 2147483647
  %221 = or i32 %220, -1342308386
  %222 = and i32 %221, %213
  %223 = and i32 %213, -2112847872
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %234, label %225

225:                                              ; preds = %212
  %226 = getelementptr inbounds i32, i32* %0, i64 56
  %227 = load i32, i32* %226, align 4
  %228 = xor i32 %227, %112
  %229 = lshr i32 %228, 29
  %230 = and i32 %229, 1
  %231 = add nsw i32 %230, -1
  %232 = or i32 %231, 2112847871
  %233 = and i32 %232, %222
  br label %234

234:                                              ; preds = %212, %225
  %235 = phi i32 [ %233, %225 ], [ %222, %212 ]
  %236 = and i32 %235, -2138013696
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %245, label %238

238:                                              ; preds = %234
  %239 = lshr i32 %112, 25
  %240 = xor i32 %126, %239
  %241 = and i32 %240, 16
  %242 = add nsw i32 %241, -16
  %243 = or i32 %242, 2138013695
  %244 = and i32 %235, %243
  br label %245

245:                                              ; preds = %234, %238
  %246 = phi i32 [ %244, %238 ], [ %235, %234 ]
  %247 = and i32 %246, 1076371456
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %256, label %249

249:                                              ; preds = %245
  %250 = lshr i32 %110, 25
  %251 = xor i32 %138, %250
  %252 = and i32 %251, 16
  %253 = add nuw i32 %252, 2147483632
  %254 = or i32 %253, -1076371457
  %255 = and i32 %246, %254
  br label %256

256:                                              ; preds = %245, %249
  %257 = phi i32 [ %255, %249 ], [ %246, %245 ]
  %258 = and i32 %257, 403177600
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %267, label %260

260:                                              ; preds = %256
  %261 = xor i32 %138, %126
  %262 = lshr i32 %261, 29
  %263 = and i32 %262, 1
  %264 = add nuw nsw i32 %263, 536870911
  %265 = or i32 %264, -403177601
  %266 = and i32 %257, %265
  br label %267

267:                                              ; preds = %256, %260
  %268 = phi i32 [ %266, %260 ], [ %257, %256 ]
  %269 = and i32 %268, 1114632
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %280, label %271

271:                                              ; preds = %267
  %272 = getelementptr inbounds i32, i32* %0, i64 36
  %273 = load i32, i32* %272, align 4
  %274 = lshr i32 %273, 4
  %275 = xor i32 %274, %217
  %276 = and i32 %275, 1
  %277 = add nuw nsw i32 %276, 2097151
  %278 = or i32 %277, -1114633
  %279 = and i32 %278, %268
  br label %280

280:                                              ; preds = %267, %271
  %281 = phi i32 [ %279, %271 ], [ %268, %267 ]
  %282 = and i32 %281, 3178496
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %293, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds i32, i32* %0, i64 56
  %286 = load i32, i32* %285, align 4
  %287 = xor i32 %286, %119
  %288 = lshr i32 %287, 29
  %289 = and i32 %288, 1
  %290 = sub nsw i32 0, %289
  %291 = or i32 %290, -3178497
  %292 = and i32 %291, %281
  br label %293

293:                                              ; preds = %280, %284
  %294 = phi i32 [ %292, %284 ], [ %281, %280 ]
  %295 = and i32 %294, 657408
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %304, label %297

297:                                              ; preds = %293
  %298 = xor i32 %138, %110
  %299 = lshr i32 %298, 29
  %300 = and i32 %299, 1
  %301 = sub nsw i32 0, %300
  %302 = or i32 %301, -657409
  %303 = and i32 %294, %302
  br label %304

304:                                              ; preds = %293, %297
  %305 = phi i32 [ %303, %297 ], [ %294, %293 ]
  %306 = and i32 %305, 74240
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %315, label %308

308:                                              ; preds = %304
  %309 = xor i32 %126, %15
  %310 = lshr i32 %309, 29
  %311 = and i32 %310, 1
  %312 = sub nsw i32 0, %311
  %313 = or i32 %312, -74241
  %314 = and i32 %305, %313
  br label %315

315:                                              ; preds = %304, %308
  %316 = phi i32 [ %314, %308 ], [ %305, %304 ]
  %317 = and i32 %316, 34944
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %326, label %319

319:                                              ; preds = %315
  %320 = xor i32 %138, %13
  %321 = lshr i32 %320, 29
  %322 = and i32 %321, 1
  %323 = sub nsw i32 0, %322
  %324 = or i32 %323, -34945
  %325 = and i32 %316, %324
  br label %326

326:                                              ; preds = %315, %319
  %327 = phi i32 [ %325, %319 ], [ %316, %315 ]
  %328 = and i32 %327, 8736
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %337, label %330

330:                                              ; preds = %326
  %331 = xor i32 %23, %15
  %332 = lshr i32 %331, 29
  %333 = and i32 %332, 1
  %334 = sub nsw i32 0, %333
  %335 = or i32 %334, -8737
  %336 = and i32 %327, %335
  br label %337

337:                                              ; preds = %326, %330
  %338 = phi i32 [ %336, %330 ], [ %327, %326 ]
  %339 = and i32 %338, 2184
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %348, label %341

341:                                              ; preds = %337
  %342 = xor i32 %31, %13
  %343 = lshr i32 %342, 29
  %344 = and i32 %343, 1
  %345 = sub nsw i32 0, %344
  %346 = or i32 %345, -2185
  %347 = and i32 %338, %346
  br label %348

348:                                              ; preds = %337, %341
  %349 = phi i32 [ %347, %341 ], [ %338, %337 ]
  %350 = and i32 %349, 548
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %359, label %352

352:                                              ; preds = %348
  %353 = xor i32 %44, %23
  %354 = lshr i32 %353, 29
  %355 = and i32 %354, 1
  %356 = sub nsw i32 0, %355
  %357 = or i32 %356, -549
  %358 = and i32 %349, %357
  br label %359

359:                                              ; preds = %348, %352
  %360 = phi i32 [ %358, %352 ], [ %349, %348 ]
  %361 = xor i32 %31, %6
  %362 = and i32 %361, 64
  %363 = add nuw nsw i32 %362, 32704
  %364 = or i32 %363, -17473
  %365 = and i32 %360, %364
  %366 = and i32 %360, 138
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %374, label %368

368:                                              ; preds = %359
  %369 = lshr i32 %361, 29
  %370 = and i32 %369, 1
  %371 = sub nsw i32 0, %370
  %372 = or i32 %371, -139
  %373 = and i32 %365, %372
  br label %374

374:                                              ; preds = %359, %368
  %375 = phi i32 [ %373, %368 ], [ %365, %359 ]
  %376 = xor i32 %44, %4
  %377 = lshr i32 %376, 6
  %378 = and i32 %377, 1
  %379 = add nuw nsw i32 %378, 8191
  %380 = or i32 %379, -4369
  %381 = and i32 %375, %380
  %382 = and i32 %375, 37
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %390, label %384

384:                                              ; preds = %374
  %385 = lshr i32 %376, 29
  %386 = and i32 %385, 1
  %387 = sub nsw i32 0, %386
  %388 = or i32 %387, -38
  %389 = and i32 %381, %388
  br label %390

390:                                              ; preds = %374, %384
  %391 = phi i32 [ %389, %384 ], [ %381, %374 ]
  %392 = lshr i32 %87, 5
  %393 = xor i32 %95, %392
  %394 = and i32 %393, 2
  %395 = sub nsw i32 0, %394
  %396 = or i32 %395, -67371265
  %397 = lshr i32 %95, 5
  %398 = xor i32 %103, %397
  %399 = and i32 %398, 2
  %400 = sub nsw i32 0, %399
  %401 = or i32 %400, -16793665
  %402 = and i32 %401, %396
  %403 = and i32 %402, %391
  %404 = and i32 %391, -2147483638
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %413, label %406

406:                                              ; preds = %390
  %407 = xor i32 %103, %87
  %408 = lshr i32 %407, 4
  %409 = and i32 %408, 1
  %410 = sub nsw i32 0, %409
  %411 = or i32 %410, 2147483637
  %412 = and i32 %403, %411
  br label %413

413:                                              ; preds = %390, %406
  %414 = phi i32 [ %412, %406 ], [ %403, %390 ]
  %415 = lshr i32 %103, 5
  %416 = xor i32 %192, %415
  %417 = and i32 %416, 2
  %418 = sub nsw i32 0, %417
  %419 = or i32 %418, -4198417
  %420 = and i32 %414, %419
  %421 = and i32 %414, 1073741829
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %430, label %423

423:                                              ; preds = %413
  %424 = xor i32 %192, %95
  %425 = lshr i32 %424, 4
  %426 = and i32 %425, 1
  %427 = sub nsw i32 0, %426
  %428 = or i32 %427, -1073741830
  %429 = and i32 %420, %428
  br label %430

430:                                              ; preds = %413, %423
  %431 = phi i32 [ %429, %423 ], [ %420, %413 ]
  %432 = and i32 %431, -1610612734
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %443, label %434

434:                                              ; preds = %430
  %435 = getelementptr inbounds i32, i32* %0, i64 38
  %436 = load i32, i32* %435, align 4
  %437 = xor i32 %436, %103
  %438 = lshr i32 %437, 4
  %439 = and i32 %438, 1
  %440 = sub nsw i32 0, %439
  %441 = or i32 %440, 1610612733
  %442 = and i32 %441, %431
  br label %443

443:                                              ; preds = %430, %434
  %444 = phi i32 [ %442, %434 ], [ %431, %430 ]
  %445 = and i32 %444, 1342177281
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %454, label %447

447:                                              ; preds = %443
  %448 = xor i32 %215, %192
  %449 = lshr i32 %448, 4
  %450 = and i32 %449, 1
  %451 = sub nsw i32 0, %450
  %452 = or i32 %451, -1342177282
  %453 = and i32 %444, %452
  br label %454

454:                                              ; preds = %443, %447
  %455 = phi i32 [ %453, %447 ], [ %444, %443 ]
  %456 = getelementptr inbounds i32, i32* %0, i64 36
  %457 = load i32, i32* %456, align 4
  %458 = lshr i32 %215, 5
  %459 = xor i32 %457, %458
  %460 = and i32 %459, 2
  %461 = sub nsw i32 0, %460
  %462 = or i32 %461, -266305
  %463 = and i32 %462, %455
  %464 = and i32 %455, 524420
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %476, label %466

466:                                              ; preds = %454
  %467 = getelementptr inbounds i32, i32* %0, i64 35
  %468 = load i32, i32* %467, align 4
  %469 = lshr i32 %468, 4
  %470 = lshr i32 %192, 29
  %471 = xor i32 %469, %470
  %472 = and i32 %471, 1
  %473 = add nuw nsw i32 %472, 1048575
  %474 = or i32 %473, -524421
  %475 = and i32 %474, %463
  br label %476

476:                                              ; preds = %454, %466
  %477 = phi i32 [ %475, %466 ], [ %463, %454 ]
  %478 = and i32 %477, 1048704
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %491, label %480

480:                                              ; preds = %476
  %481 = getelementptr inbounds i32, i32* %0, i64 63
  %482 = load i32, i32* %481, align 4
  %483 = getelementptr inbounds i32, i32* %0, i64 64
  %484 = load i32, i32* %483, align 4
  %485 = lshr i32 %484, 5
  %486 = xor i32 %485, %482
  %487 = and i32 %486, 1
  %488 = sub nsw i32 0, %487
  %489 = or i32 %488, -1048705
  %490 = and i32 %489, %477
  br label %491

491:                                              ; preds = %476, %480
  %492 = phi i32 [ %490, %480 ], [ %477, %476 ]
  %493 = and i32 %492, 65540
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %506, label %495

495:                                              ; preds = %491
  %496 = getelementptr inbounds i32, i32* %0, i64 63
  %497 = load i32, i32* %496, align 4
  %498 = getelementptr inbounds i32, i32* %0, i64 64
  %499 = load i32, i32* %498, align 4
  %500 = lshr i32 %499, 5
  %501 = xor i32 %500, %497
  %502 = and i32 %501, 2
  %503 = sub nsw i32 0, %502
  %504 = or i32 %503, -65541
  %505 = and i32 %504, %492
  br label %506

506:                                              ; preds = %491, %495
  %507 = phi i32 [ %505, %495 ], [ %492, %491 ]
  %508 = and i32 %507, 524320
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %521, label %510

510:                                              ; preds = %506
  %511 = getelementptr inbounds i32, i32* %0, i64 62
  %512 = load i32, i32* %511, align 4
  %513 = getelementptr inbounds i32, i32* %0, i64 63
  %514 = load i32, i32* %513, align 4
  %515 = lshr i32 %514, 5
  %516 = xor i32 %515, %512
  %517 = and i32 %516, 1
  %518 = sub nsw i32 0, %517
  %519 = or i32 %518, -524321
  %520 = and i32 %519, %507
  br label %521

521:                                              ; preds = %506, %510
  %522 = phi i32 [ %520, %510 ], [ %507, %506 ]
  %523 = and i32 %522, 131080
  %524 = icmp eq i32 %523, 0
  %525 = getelementptr inbounds i32, i32* %0, i64 61
  %526 = load i32, i32* %525, align 4
  %527 = getelementptr inbounds i32, i32* %0, i64 62
  %528 = load i32, i32* %527, align 4
  %529 = lshr i32 %528, 5
  %530 = xor i32 %529, %526
  br i1 %524, label %536, label %531

531:                                              ; preds = %521
  %532 = and i32 %530, 1
  %533 = sub nsw i32 0, %532
  %534 = or i32 %533, -131081
  %535 = and i32 %534, %522
  br label %536

536:                                              ; preds = %521, %531
  %537 = phi i32 [ %535, %531 ], [ %522, %521 ]
  %538 = and i32 %530, 4
  %539 = sub nsw i32 0, %538
  %540 = or i32 %539, -262161
  %541 = and i32 %540, %537
  %542 = and i32 %537, 65540
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %553, label %544

544:                                              ; preds = %536
  %545 = getelementptr inbounds i32, i32* %0, i64 60
  %546 = load i32, i32* %545, align 4
  %547 = lshr i32 %526, 5
  %548 = xor i32 %546, %547
  %549 = and i32 %548, 1
  %550 = sub nsw i32 0, %549
  %551 = or i32 %550, -65541
  %552 = and i32 %551, %541
  br label %553

553:                                              ; preds = %536, %544
  %554 = phi i32 [ %552, %544 ], [ %541, %536 ]
  %555 = and i32 %554, 570425344
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %568, label %557

557:                                              ; preds = %553
  %558 = getelementptr inbounds i32, i32* %0, i64 58
  %559 = load i32, i32* %558, align 4
  %560 = getelementptr inbounds i32, i32* %0, i64 59
  %561 = load i32, i32* %560, align 4
  %562 = xor i32 %561, %559
  %563 = lshr i32 %562, 29
  %564 = and i32 %563, 1
  %565 = add nuw nsw i32 %564, 1073741823
  %566 = or i32 %565, -570425345
  %567 = and i32 %566, %554
  br label %568

568:                                              ; preds = %553, %557
  %569 = phi i32 [ %567, %557 ], [ %554, %553 ]
  %570 = and i32 %569, 276824064
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %583, label %572

572:                                              ; preds = %568
  %573 = getelementptr inbounds i32, i32* %0, i64 57
  %574 = load i32, i32* %573, align 4
  %575 = getelementptr inbounds i32, i32* %0, i64 58
  %576 = load i32, i32* %575, align 4
  %577 = xor i32 %576, %574
  %578 = lshr i32 %577, 29
  %579 = and i32 %578, 1
  %580 = add nuw nsw i32 %579, 536870911
  %581 = or i32 %580, -276824065
  %582 = and i32 %581, %569
  br label %583

583:                                              ; preds = %568, %572
  %584 = phi i32 [ %582, %572 ], [ %569, %568 ]
  %585 = and i32 %584, 671088640
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %598, label %587

587:                                              ; preds = %583
  %588 = getelementptr inbounds i32, i32* %0, i64 56
  %589 = load i32, i32* %588, align 4
  %590 = getelementptr inbounds i32, i32* %0, i64 59
  %591 = load i32, i32* %590, align 4
  %592 = lshr i32 %591, 25
  %593 = xor i32 %592, %589
  %594 = and i32 %593, 16
  %595 = add nuw nsw i32 %594, 1073741808
  %596 = or i32 %595, -671088641
  %597 = and i32 %596, %584
  br label %598

598:                                              ; preds = %583, %587
  %599 = phi i32 [ %597, %587 ], [ %584, %583 ]
  %600 = and i32 %599, 167772160
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %613, label %602

602:                                              ; preds = %598
  %603 = getelementptr inbounds i32, i32* %0, i64 56
  %604 = load i32, i32* %603, align 4
  %605 = getelementptr inbounds i32, i32* %0, i64 59
  %606 = load i32, i32* %605, align 4
  %607 = xor i32 %606, %604
  %608 = lshr i32 %607, 29
  %609 = and i32 %608, 1
  %610 = sub nsw i32 0, %609
  %611 = or i32 %610, -167772161
  %612 = and i32 %611, %599
  br label %613

613:                                              ; preds = %598, %602
  %614 = phi i32 [ %612, %602 ], [ %599, %598 ]
  %615 = and i32 %614, 136314880
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %628, label %617

617:                                              ; preds = %613
  %618 = getelementptr inbounds i32, i32* %0, i64 56
  %619 = load i32, i32* %618, align 4
  %620 = getelementptr inbounds i32, i32* %0, i64 57
  %621 = load i32, i32* %620, align 4
  %622 = xor i32 %621, %619
  %623 = lshr i32 %622, 29
  %624 = and i32 %623, 1
  %625 = add nuw nsw i32 %624, 268435455
  %626 = or i32 %625, -136314881
  %627 = and i32 %626, %614
  br label %628

628:                                              ; preds = %613, %617
  %629 = phi i32 [ %627, %617 ], [ %614, %613 ]
  %630 = and i32 %629, 301989888
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %641, label %632

632:                                              ; preds = %628
  %633 = getelementptr inbounds i32, i32* %0, i64 58
  %634 = load i32, i32* %633, align 4
  %635 = lshr i32 %634, 25
  %636 = xor i32 %635, %112
  %637 = and i32 %636, 16
  %638 = add nuw nsw i32 %637, 536870896
  %639 = or i32 %638, -301989889
  %640 = and i32 %639, %629
  br label %641

641:                                              ; preds = %628, %632
  %642 = phi i32 [ %640, %632 ], [ %629, %628 ]
  %643 = and i32 %642, 142606336
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %654, label %645

645:                                              ; preds = %641
  %646 = getelementptr inbounds i32, i32* %0, i64 57
  %647 = load i32, i32* %646, align 4
  %648 = lshr i32 %647, 25
  %649 = xor i32 %648, %110
  %650 = and i32 %649, 16
  %651 = add nuw nsw i32 %650, 268435440
  %652 = or i32 %651, -142606337
  %653 = and i32 %652, %642
  br label %654

654:                                              ; preds = %641, %645
  %655 = phi i32 [ %653, %645 ], [ %642, %641 ]
  %656 = and i32 %655, 35651584
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %667, label %658

658:                                              ; preds = %654
  %659 = getelementptr inbounds i32, i32* %0, i64 56
  %660 = load i32, i32* %659, align 4
  %661 = lshr i32 %660, 25
  %662 = xor i32 %661, %119
  %663 = and i32 %662, 16
  %664 = add nuw nsw i32 %663, 67108848
  %665 = or i32 %664, -35651585
  %666 = and i32 %665, %655
  br label %667

667:                                              ; preds = %654, %658
  %668 = phi i32 [ %666, %658 ], [ %655, %654 ]
  %669 = lshr i32 %15, 5
  %670 = xor i32 %138, %669
  %671 = and i32 %670, 2
  %672 = add nuw nsw i32 %671, 524286
  %673 = xor i32 %23, %15
  %674 = and i32 %673, 64
  %675 = add nuw nsw i32 %674, 524224
  %676 = and i32 %672, %675
  %677 = or i32 %676, -266241
  %678 = and i32 %677, %668
  %679 = and i32 %668, 40960
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %688, label %681

681:                                              ; preds = %667
  %682 = xor i32 %112, %23
  %683 = lshr i32 %682, 29
  %684 = and i32 %683, 1
  %685 = sub nsw i32 0, %684
  %686 = or i32 %685, -40961
  %687 = and i32 %678, %686
  br label %688

688:                                              ; preds = %667, %681
  %689 = phi i32 [ %687, %681 ], [ %678, %667 ]
  %690 = xor i32 %31, %13
  %691 = and i32 %690, 64
  %692 = add nuw nsw i32 %691, 32704
  %693 = or i32 %692, -17409
  %694 = lshr i32 %31, 5
  %695 = xor i32 %694, %23
  %696 = and i32 %695, 2
  %697 = add nuw nsw i32 %696, 134217726
  %698 = or i32 %697, -67108929
  %699 = xor i32 %44, %23
  %700 = and i32 %699, 64
  %701 = add nuw nsw i32 %700, 8128
  %702 = or i32 %701, -4353
  %703 = lshr i32 %44, 5
  %704 = xor i32 %703, %31
  %705 = and i32 %704, 2
  %706 = add nuw nsw i32 %705, 33554430
  %707 = or i32 %706, -16777233
  %708 = lshr i32 %6, 5
  %709 = xor i32 %708, %4
  %710 = and i32 %709, 2
  %711 = sub nsw i32 0, %710
  %712 = or i32 %711, -4210689
  %713 = xor i32 %74, %6
  %714 = and i32 %713, 64
  %715 = add nuw nsw i32 %714, 1984
  %716 = or i32 %715, -1089
  %717 = xor i32 %87, %4
  %718 = lshr i32 %717, 6
  %719 = and i32 %718, 1
  %720 = add nuw nsw i32 %719, 511
  %721 = or i32 %720, -273
  %722 = xor i32 %392, %74
  %723 = and i32 %722, 2
  %724 = add nuw nsw i32 %723, 134217726
  %725 = or i32 %724, -67371009
  %726 = xor i32 %397, %87
  %727 = and i32 %726, 2
  %728 = add nuw nsw i32 %727, 33554430
  %729 = or i32 %728, -16793601
  %730 = xor i32 %415, %95
  %731 = and i32 %730, 2
  %732 = add nuw nsw i32 %731, 8388606
  %733 = or i32 %732, -4198401
  %734 = and i32 %693, %712
  %735 = and i32 %734, %698
  %736 = and i32 %735, %702
  %737 = and i32 %736, %707
  %738 = and i32 %737, %716
  %739 = and i32 %738, %721
  %740 = and i32 %739, %725
  %741 = and i32 %740, %729
  %742 = and i32 %741, %733
  %743 = and i32 %742, %689
  %744 = and i32 %689, 33587200
  %745 = icmp eq i32 %744, 0
  br i1 %745, label %753, label %746

746:                                              ; preds = %688
  %747 = lshr i32 %74, 25
  %748 = xor i32 %192, %747
  %749 = and i32 %748, 16
  %750 = add nuw nsw i32 %749, 67108848
  %751 = or i32 %750, -33587201
  %752 = and i32 %743, %751
  br label %753

753:                                              ; preds = %688, %746
  %754 = phi i32 [ %752, %746 ], [ %743, %688 ]
  %755 = and i32 %754, 8396800
  %756 = icmp eq i32 %755, 0
  br i1 %756, label %766, label %757

757:                                              ; preds = %753
  %758 = getelementptr inbounds i32, i32* %0, i64 38
  %759 = load i32, i32* %758, align 4
  %760 = lshr i32 %87, 25
  %761 = xor i32 %759, %760
  %762 = and i32 %761, 16
  %763 = add nuw nsw i32 %762, 16777200
  %764 = or i32 %763, -8396801
  %765 = and i32 %764, %754
  br label %766

766:                                              ; preds = %753, %757
  %767 = phi i32 [ %765, %757 ], [ %754, %753 ]
  %768 = and i32 %767, 16640
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %779, label %770

770:                                              ; preds = %766
  %771 = getelementptr inbounds i32, i32* %0, i64 38
  %772 = load i32, i32* %771, align 4
  %773 = lshr i32 %772, 5
  %774 = xor i32 %773, %215
  %775 = and i32 %774, 2
  %776 = sub nsw i32 0, %775
  %777 = or i32 %776, -16641
  %778 = and i32 %777, %767
  br label %779

779:                                              ; preds = %766, %770
  %780 = phi i32 [ %778, %770 ], [ %767, %766 ]
  %781 = and i32 %780, 2099200
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %790, label %783

783:                                              ; preds = %779
  %784 = lshr i32 %95, 25
  %785 = xor i32 %215, %784
  %786 = and i32 %785, 16
  %787 = add nuw nsw i32 %786, 4194288
  %788 = or i32 %787, -2099201
  %789 = and i32 %780, %788
  br label %790

790:                                              ; preds = %779, %783
  %791 = phi i32 [ %789, %783 ], [ %780, %779 ]
  %792 = and i32 %791, 671088640
  %793 = icmp eq i32 %792, 0
  br i1 %793, label %802, label %794

794:                                              ; preds = %790
  %795 = getelementptr inbounds i32, i32* %0, i64 38
  %796 = load i32, i32* %795, align 4
  %797 = xor i32 %796, %457
  %798 = and i32 %797, 16
  %799 = sub nsw i32 0, %798
  %800 = or i32 %799, -671088641
  %801 = and i32 %800, %791
  br label %802

802:                                              ; preds = %790, %794
  %803 = phi i32 [ %801, %794 ], [ %791, %790 ]
  %804 = getelementptr inbounds i32, i32* %0, i64 35
  %805 = load i32, i32* %804, align 4
  %806 = lshr i32 %457, 5
  %807 = xor i32 %805, %806
  %808 = and i32 %807, 2
  %809 = sub nsw i32 0, %808
  %810 = or i32 %809, -1041
  %811 = and i32 %810, %803
  %812 = and i32 %803, 532480
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %821, label %814

814:                                              ; preds = %802
  %815 = lshr i32 %192, 25
  %816 = xor i32 %805, %815
  %817 = and i32 %816, 8
  %818 = add nuw nsw i32 %817, 1048568
  %819 = or i32 %818, -532481
  %820 = and i32 %811, %819
  br label %821

821:                                              ; preds = %802, %814
  %822 = phi i32 [ %820, %814 ], [ %811, %802 ]
  %823 = icmp eq i32 %822, 0
  br i1 %823, label %1309, label %824

824:                                              ; preds = %821
  %825 = and i32 %822, 1
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %848, label %827

827:                                              ; preds = %824
  %828 = and i32 %530, 2
  %829 = icmp eq i32 %828, 0
  br i1 %829, label %846, label %830

830:                                              ; preds = %827
  %831 = getelementptr inbounds i32, i32* %0, i64 59
  %832 = load i32, i32* %831, align 4
  %833 = getelementptr inbounds i32, i32* %0, i64 63
  %834 = load i32, i32* %833, align 4
  %835 = lshr i32 %834, 25
  %836 = xor i32 %835, %832
  %837 = and i32 %836, 32
  %838 = icmp eq i32 %837, 0
  br i1 %838, label %839, label %846

839:                                              ; preds = %830
  %840 = getelementptr inbounds i32, i32* %0, i64 58
  %841 = load i32, i32* %840, align 4
  %842 = lshr i32 %834, 30
  %843 = xor i32 %841, %842
  %844 = and i32 %843, 1
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %846, label %848

846:                                              ; preds = %839, %830, %827
  %847 = and i32 %822, -2
  br label %848

848:                                              ; preds = %839, %824, %846
  %849 = phi i32 [ %847, %846 ], [ %822, %839 ], [ %822, %824 ]
  %850 = and i32 %849, 2
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %877, label %852

852:                                              ; preds = %848
  %853 = getelementptr inbounds i32, i32* %0, i64 63
  %854 = load i32, i32* %853, align 4
  %855 = lshr i32 %854, 5
  %856 = xor i32 %855, %528
  %857 = and i32 %856, 2
  %858 = icmp eq i32 %857, 0
  br i1 %858, label %875, label %859

859:                                              ; preds = %852
  %860 = getelementptr inbounds i32, i32* %0, i64 60
  %861 = load i32, i32* %860, align 4
  %862 = getelementptr inbounds i32, i32* %0, i64 64
  %863 = load i32, i32* %862, align 4
  %864 = lshr i32 %863, 25
  %865 = xor i32 %864, %861
  %866 = and i32 %865, 32
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %868, label %875

868:                                              ; preds = %859
  %869 = getelementptr inbounds i32, i32* %0, i64 59
  %870 = load i32, i32* %869, align 4
  %871 = lshr i32 %863, 30
  %872 = xor i32 %870, %871
  %873 = and i32 %872, 1
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %877

875:                                              ; preds = %868, %859, %852
  %876 = and i32 %849, -3
  br label %877

877:                                              ; preds = %868, %848, %875
  %878 = phi i32 [ %876, %875 ], [ %849, %868 ], [ %849, %848 ]
  %879 = and i32 %878, 16
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %887, label %881

881:                                              ; preds = %877
  %882 = xor i32 %103, %87
  %883 = lshr i32 %882, 2
  %884 = or i32 %883, -17
  %885 = xor i32 %884, 16
  %886 = and i32 %878, %885
  br label %887

887:                                              ; preds = %877, %881
  %888 = phi i32 [ %886, %881 ], [ %878, %877 ]
  %889 = and i32 %888, 64
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %904, label %891

891:                                              ; preds = %887
  %892 = getelementptr inbounds i32, i32* %0, i64 63
  %893 = load i32, i32* %892, align 4
  %894 = lshr i32 %893, 5
  %895 = xor i32 %894, %528
  %896 = and i32 %895, 4
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %902, label %898

898:                                              ; preds = %891
  %899 = xor i32 %95, %74
  %900 = and i32 %899, 64
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %904, label %902

902:                                              ; preds = %898, %891
  %903 = and i32 %888, -65
  br label %904

904:                                              ; preds = %898, %887, %902
  %905 = phi i32 [ %903, %902 ], [ %888, %898 ], [ %888, %887 ]
  %906 = and i32 %905, 256
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %924, label %908

908:                                              ; preds = %904
  %909 = getelementptr inbounds i32, i32* %0, i64 63
  %910 = load i32, i32* %909, align 4
  %911 = getelementptr inbounds i32, i32* %0, i64 64
  %912 = load i32, i32* %911, align 4
  %913 = lshr i32 %912, 5
  %914 = xor i32 %913, %910
  %915 = and i32 %914, 4
  %916 = icmp eq i32 %915, 0
  br i1 %916, label %922, label %917

917:                                              ; preds = %908
  %918 = shl i32 %13, 5
  %919 = xor i32 %23, %918
  %920 = and i32 %919, 64
  %921 = icmp eq i32 %920, 0
  br i1 %921, label %924, label %922

922:                                              ; preds = %917, %908
  %923 = and i32 %905, -257
  br label %924

924:                                              ; preds = %917, %904, %922
  %925 = phi i32 [ %923, %922 ], [ %905, %917 ], [ %905, %904 ]
  %926 = and i32 %925, 1024
  %927 = icmp eq i32 %926, 0
  br i1 %927, label %950, label %928

928:                                              ; preds = %924
  %929 = shl i32 %15, 5
  %930 = xor i32 %929, %13
  %931 = and i32 %930, 64
  %932 = icmp eq i32 %931, 0
  br i1 %932, label %933, label %948

933:                                              ; preds = %928
  %934 = xor i32 %87, %15
  %935 = and i32 %934, 2
  %936 = icmp eq i32 %935, 0
  br i1 %936, label %948, label %937

937:                                              ; preds = %933
  %938 = shl i32 %103, 5
  %939 = xor i32 %192, %938
  %940 = and i32 %939, 64
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %942, label %948

942:                                              ; preds = %937
  %943 = getelementptr inbounds i32, i32* %0, i64 38
  %944 = load i32, i32* %943, align 4
  %945 = xor i32 %944, %103
  %946 = and i32 %945, 2
  %947 = icmp eq i32 %946, 0
  br i1 %947, label %948, label %950

948:                                              ; preds = %942, %937, %933, %928
  %949 = and i32 %925, -1025
  br label %950

950:                                              ; preds = %942, %924, %948
  %951 = phi i32 [ %949, %948 ], [ %925, %942 ], [ %925, %924 ]
  %952 = and i32 %951, 2048
  %953 = icmp eq i32 %952, 0
  br i1 %953, label %959, label %954

954:                                              ; preds = %950
  %955 = xor i32 %457, %215
  %956 = shl i32 %955, 7
  %957 = or i32 %956, -2049
  %958 = and i32 %951, %957
  br label %959

959:                                              ; preds = %950, %954
  %960 = phi i32 [ %958, %954 ], [ %951, %950 ]
  %961 = and i32 %960, 4096
  %962 = icmp eq i32 %961, 0
  br i1 %962, label %968, label %963

963:                                              ; preds = %959
  %964 = xor i32 %138, %74
  %965 = shl i32 %964, 11
  %966 = or i32 %965, -4097
  %967 = and i32 %960, %966
  br label %968

968:                                              ; preds = %959, %963
  %969 = phi i32 [ %967, %963 ], [ %960, %959 ]
  %970 = and i32 %969, 8192
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %979, label %972

972:                                              ; preds = %968
  %973 = getelementptr inbounds i32, i32* %0, i64 38
  %974 = load i32, i32* %973, align 4
  %975 = xor i32 %974, %215
  %976 = shl i32 %975, 9
  %977 = or i32 %976, -8193
  %978 = and i32 %977, %969
  br label %979

979:                                              ; preds = %968, %972
  %980 = phi i32 [ %978, %972 ], [ %969, %968 ]
  %981 = and i32 %980, 16384
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %1003, label %983

983:                                              ; preds = %979
  %984 = shl i32 %126, 5
  %985 = xor i32 %138, %984
  %986 = and i32 %985, 64
  %987 = icmp eq i32 %986, 0
  br i1 %987, label %988, label %1001

988:                                              ; preds = %983
  %989 = xor i32 %138, %13
  %990 = and i32 %989, 64
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %992, label %1001

992:                                              ; preds = %988
  %993 = xor i32 %458, %215
  %994 = and i32 %993, 2
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %996, label %1001

996:                                              ; preds = %992
  %997 = lshr i32 %192, 25
  %998 = xor i32 %805, %997
  %999 = and i32 %998, 32
  %1000 = icmp eq i32 %999, 0
  br i1 %1000, label %1003, label %1001

1001:                                             ; preds = %996, %992, %988, %983
  %1002 = and i32 %980, -16385
  br label %1003

1003:                                             ; preds = %996, %979, %1001
  %1004 = phi i32 [ %1002, %1001 ], [ %980, %996 ], [ %980, %979 ]
  %1005 = trunc i32 %1004 to i16
  %1006 = icmp slt i16 %1005, 0
  br i1 %1006, label %1007, label %1014

1007:                                             ; preds = %1003
  %1008 = getelementptr inbounds i32, i32* %0, i64 38
  %1009 = load i32, i32* %1008, align 4
  %1010 = xor i32 %1009, %192
  %1011 = shl i32 %1010, 11
  %1012 = or i32 %1011, -32769
  %1013 = and i32 %1012, %1004
  br label %1014

1014:                                             ; preds = %1007, %1003
  %1015 = phi i32 [ %1013, %1007 ], [ %1004, %1003 ]
  %1016 = and i32 %1015, 262144
  %1017 = icmp eq i32 %1016, 0
  br i1 %1017, label %1023, label %1018

1018:                                             ; preds = %1014
  %1019 = xor i32 %138, %31
  %1020 = shl i32 %1019, 17
  %1021 = or i32 %1020, -262145
  %1022 = and i32 %1015, %1021
  br label %1023

1023:                                             ; preds = %1014, %1018
  %1024 = phi i32 [ %1022, %1018 ], [ %1015, %1014 ]
  %1025 = and i32 %1024, 1048576
  %1026 = icmp eq i32 %1025, 0
  br i1 %1026, label %1039, label %1027

1027:                                             ; preds = %1023
  %1028 = lshr i32 %103, 25
  %1029 = xor i32 %457, %1028
  %1030 = and i32 %1029, 8
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %1032, label %1037

1032:                                             ; preds = %1027
  %1033 = shl i32 %103, 2
  %1034 = xor i32 %805, %1033
  %1035 = and i32 %1034, 1073741824
  %1036 = icmp eq i32 %1035, 0
  br i1 %1036, label %1037, label %1039

1037:                                             ; preds = %1032, %1027
  %1038 = and i32 %1024, -1048577
  br label %1039

1039:                                             ; preds = %1032, %1023, %1037
  %1040 = phi i32 [ %1038, %1037 ], [ %1024, %1032 ], [ %1024, %1023 ]
  %1041 = and i32 %1040, 2097152
  %1042 = icmp eq i32 %1041, 0
  br i1 %1042, label %1055, label %1043

1043:                                             ; preds = %1039
  %1044 = lshr i32 %95, 25
  %1045 = xor i32 %215, %1044
  %1046 = and i32 %1045, 8
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1048, label %1053

1048:                                             ; preds = %1043
  %1049 = shl i32 %95, 2
  %1050 = xor i32 %457, %1049
  %1051 = and i32 %1050, 1073741824
  %1052 = icmp eq i32 %1051, 0
  br i1 %1052, label %1053, label %1055

1053:                                             ; preds = %1048, %1043
  %1054 = and i32 %1040, -2097153
  br label %1055

1055:                                             ; preds = %1048, %1039, %1053
  %1056 = phi i32 [ %1054, %1053 ], [ %1040, %1048 ], [ %1040, %1039 ]
  %1057 = and i32 %1056, 4194304
  %1058 = icmp eq i32 %1057, 0
  br i1 %1058, label %1089, label %1059

1059:                                             ; preds = %1055
  %1060 = shl i32 %110, 5
  %1061 = xor i32 %119, %1060
  %1062 = and i32 %1061, 64
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1064, label %1087

1064:                                             ; preds = %1059
  %1065 = xor i32 %138, %119
  %1066 = and i32 %1065, 64
  %1067 = icmp eq i32 %1066, 0
  br i1 %1067, label %1068, label %1087

1068:                                             ; preds = %1064
  %1069 = xor i32 %110, %15
  %1070 = and i32 %1069, 2
  %1071 = icmp eq i32 %1070, 0
  br i1 %1071, label %1087, label %1072

1072:                                             ; preds = %1068
  %1073 = shl i32 %44, 5
  %1074 = xor i32 %1073, %6
  %1075 = and i32 %1074, 64
  %1076 = icmp eq i32 %1075, 0
  br i1 %1076, label %1077, label %1087

1077:                                             ; preds = %1072
  %1078 = lshr i32 %95, 25
  %1079 = xor i32 %215, %1078
  %1080 = and i32 %1079, 32
  %1081 = icmp eq i32 %1080, 0
  br i1 %1081, label %1082, label %1087

1082:                                             ; preds = %1077
  %1083 = lshr i32 %95, 30
  %1084 = xor i32 %457, %1083
  %1085 = and i32 %1084, 1
  %1086 = icmp eq i32 %1085, 0
  br i1 %1086, label %1087, label %1089

1087:                                             ; preds = %1082, %1077, %1072, %1068, %1064, %1059
  %1088 = and i32 %1056, -4194305
  br label %1089

1089:                                             ; preds = %1082, %1055, %1087
  %1090 = phi i32 [ %1088, %1087 ], [ %1056, %1082 ], [ %1056, %1055 ]
  %1091 = and i32 %1090, 8388608
  %1092 = icmp eq i32 %1091, 0
  br i1 %1092, label %1113, label %1093

1093:                                             ; preds = %1089
  %1094 = getelementptr inbounds i32, i32* %0, i64 58
  %1095 = load i32, i32* %1094, align 4
  %1096 = xor i32 %1095, %112
  %1097 = and i32 %1096, 536870912
  %1098 = icmp eq i32 %1097, 0
  br i1 %1098, label %1111, label %1099

1099:                                             ; preds = %1093
  %1100 = getelementptr inbounds i32, i32* %0, i64 38
  %1101 = load i32, i32* %1100, align 4
  %1102 = lshr i32 %87, 25
  %1103 = xor i32 %1101, %1102
  %1104 = and i32 %1103, 8
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1106, label %1111

1106:                                             ; preds = %1099
  %1107 = shl i32 %87, 2
  %1108 = xor i32 %215, %1107
  %1109 = and i32 %1108, 1073741824
  %1110 = icmp eq i32 %1109, 0
  br i1 %1110, label %1111, label %1113

1111:                                             ; preds = %1106, %1099, %1093
  %1112 = and i32 %1090, -8388609
  br label %1113

1113:                                             ; preds = %1106, %1089, %1111
  %1114 = phi i32 [ %1112, %1111 ], [ %1090, %1106 ], [ %1090, %1089 ]
  %1115 = and i32 %1114, 16777216
  %1116 = icmp eq i32 %1115, 0
  br i1 %1116, label %1145, label %1117

1117:                                             ; preds = %1113
  %1118 = shl i32 %112, 5
  %1119 = xor i32 %1118, %110
  %1120 = and i32 %1119, 64
  %1121 = icmp eq i32 %1120, 0
  br i1 %1121, label %1122, label %1143

1122:                                             ; preds = %1117
  %1123 = xor i32 %126, %110
  %1124 = and i32 %1123, 64
  %1125 = icmp eq i32 %1124, 0
  br i1 %1125, label %1126, label %1143

1126:                                             ; preds = %1122
  %1127 = xor i32 %138, %112
  %1128 = and i32 %361, 2
  %1129 = and i32 %1128, %1127
  %1130 = icmp eq i32 %1129, 0
  br i1 %1130, label %1143, label %1131

1131:                                             ; preds = %1126
  %1132 = getelementptr inbounds i32, i32* %0, i64 38
  %1133 = load i32, i32* %1132, align 4
  %1134 = lshr i32 %87, 25
  %1135 = xor i32 %1133, %1134
  %1136 = and i32 %1135, 32
  %1137 = icmp eq i32 %1136, 0
  br i1 %1137, label %1138, label %1143

1138:                                             ; preds = %1131
  %1139 = lshr i32 %87, 30
  %1140 = xor i32 %215, %1139
  %1141 = and i32 %1140, 1
  %1142 = icmp eq i32 %1141, 0
  br i1 %1142, label %1143, label %1145

1143:                                             ; preds = %1138, %1131, %1126, %1122, %1117
  %1144 = and i32 %1114, -16777217
  br label %1145

1145:                                             ; preds = %1138, %1113, %1143
  %1146 = phi i32 [ %1144, %1143 ], [ %1114, %1138 ], [ %1114, %1113 ]
  %1147 = and i32 %1146, 33554432
  %1148 = icmp eq i32 %1147, 0
  br i1 %1148, label %1163, label %1149

1149:                                             ; preds = %1145
  %1150 = lshr i32 %74, 25
  %1151 = xor i32 %192, %1150
  %1152 = and i32 %1151, 8
  %1153 = icmp eq i32 %1152, 0
  br i1 %1153, label %1154, label %1161

1154:                                             ; preds = %1149
  %1155 = getelementptr inbounds i32, i32* %0, i64 38
  %1156 = load i32, i32* %1155, align 4
  %1157 = shl i32 %74, 2
  %1158 = xor i32 %1156, %1157
  %1159 = and i32 %1158, 1073741824
  %1160 = icmp eq i32 %1159, 0
  br i1 %1160, label %1161, label %1163

1161:                                             ; preds = %1154, %1149
  %1162 = and i32 %1146, -33554433
  br label %1163

1163:                                             ; preds = %1154, %1145, %1161
  %1164 = phi i32 [ %1162, %1161 ], [ %1146, %1154 ], [ %1146, %1145 ]
  %1165 = and i32 %1164, 67108864
  %1166 = icmp eq i32 %1165, 0
  br i1 %1166, label %1197, label %1167

1167:                                             ; preds = %1163
  %1168 = getelementptr inbounds i32, i32* %0, i64 56
  %1169 = load i32, i32* %1168, align 4
  %1170 = shl i32 %1169, 5
  %1171 = xor i32 %1170, %112
  %1172 = and i32 %1171, 64
  %1173 = icmp eq i32 %1172, 0
  br i1 %1173, label %1174, label %1195

1174:                                             ; preds = %1167
  %1175 = xor i32 %119, %112
  %1176 = and i32 %1175, 64
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1178, label %1195

1178:                                             ; preds = %1174
  %1179 = xor i32 %1169, %126
  %1180 = and i32 %699, 2
  %1181 = and i32 %1180, %1179
  %1182 = icmp eq i32 %1181, 0
  br i1 %1182, label %1195, label %1183

1183:                                             ; preds = %1178
  %1184 = lshr i32 %74, 25
  %1185 = xor i32 %192, %1184
  %1186 = and i32 %1185, 32
  %1187 = icmp eq i32 %1186, 0
  br i1 %1187, label %1188, label %1195

1188:                                             ; preds = %1183
  %1189 = getelementptr inbounds i32, i32* %0, i64 38
  %1190 = load i32, i32* %1189, align 4
  %1191 = lshr i32 %74, 30
  %1192 = xor i32 %1190, %1191
  %1193 = and i32 %1192, 1
  %1194 = icmp eq i32 %1193, 0
  br i1 %1194, label %1195, label %1197

1195:                                             ; preds = %1188, %1183, %1178, %1174, %1167
  %1196 = and i32 %1164, -67108865
  br label %1197

1197:                                             ; preds = %1188, %1163, %1195
  %1198 = phi i32 [ %1196, %1195 ], [ %1164, %1188 ], [ %1164, %1163 ]
  %1199 = and i32 %1198, 134217728
  %1200 = icmp eq i32 %1199, 0
  br i1 %1200, label %1221, label %1201

1201:                                             ; preds = %1197
  %1202 = getelementptr inbounds i32, i32* %0, i64 59
  %1203 = load i32, i32* %1202, align 4
  %1204 = getelementptr inbounds i32, i32* %0, i64 60
  %1205 = load i32, i32* %1204, align 4
  %1206 = xor i32 %1205, %1203
  %1207 = and i32 %1206, 536870912
  %1208 = icmp eq i32 %1207, 0
  br i1 %1208, label %1209, label %1219

1209:                                             ; preds = %1201
  %1210 = lshr i32 %4, 25
  %1211 = xor i32 %103, %1210
  %1212 = and i32 %1211, 24
  %1213 = icmp eq i32 %1212, 0
  br i1 %1213, label %1214, label %1219

1214:                                             ; preds = %1209
  %1215 = shl i32 %4, 2
  %1216 = xor i32 %192, %1215
  %1217 = and i32 %1216, 1073741824
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1219, label %1221

1219:                                             ; preds = %1214, %1209, %1201
  %1220 = and i32 %1198, -134217729
  br label %1221

1221:                                             ; preds = %1214, %1197, %1219
  %1222 = phi i32 [ %1220, %1219 ], [ %1198, %1214 ], [ %1198, %1197 ]
  %1223 = and i32 %1222, 268435456
  %1224 = icmp eq i32 %1223, 0
  br i1 %1224, label %1245, label %1225

1225:                                             ; preds = %1221
  %1226 = getelementptr inbounds i32, i32* %0, i64 58
  %1227 = load i32, i32* %1226, align 4
  %1228 = xor i32 %1227, %526
  %1229 = and i32 %1228, 536870912
  %1230 = icmp eq i32 %1229, 0
  br i1 %1230, label %1243, label %1231

1231:                                             ; preds = %1225
  %1232 = getelementptr inbounds i32, i32* %0, i64 57
  %1233 = load i32, i32* %1232, align 4
  %1234 = lshr i32 %526, 25
  %1235 = xor i32 %1233, %1234
  %1236 = and i32 %1235, 16
  %1237 = icmp eq i32 %1236, 0
  br i1 %1237, label %1238, label %1243

1238:                                             ; preds = %1231
  %1239 = lshr i32 %6, 25
  %1240 = xor i32 %95, %1239
  %1241 = and i32 %1240, 24
  %1242 = icmp eq i32 %1241, 0
  br i1 %1242, label %1245, label %1243

1243:                                             ; preds = %1238, %1231, %1225
  %1244 = and i32 %1222, -268435457
  br label %1245

1245:                                             ; preds = %1238, %1221, %1243
  %1246 = phi i32 [ %1244, %1243 ], [ %1222, %1221 ], [ %1222, %1238 ]
  %1247 = and i32 %1246, 536870912
  %1248 = icmp eq i32 %1247, 0
  br i1 %1248, label %1263, label %1249

1249:                                             ; preds = %1245
  %1250 = getelementptr inbounds i32, i32* %0, i64 58
  %1251 = load i32, i32* %1250, align 4
  %1252 = lshr i32 %528, 25
  %1253 = xor i32 %1251, %1252
  %1254 = and i32 %1253, 16
  %1255 = icmp eq i32 %1254, 0
  br i1 %1255, label %1256, label %1261

1256:                                             ; preds = %1249
  %1257 = lshr i32 %44, 25
  %1258 = xor i32 %87, %1257
  %1259 = and i32 %1258, 24
  %1260 = icmp eq i32 %1259, 0
  br i1 %1260, label %1263, label %1261

1261:                                             ; preds = %1256, %1249
  %1262 = and i32 %1246, -536870913
  br label %1263

1263:                                             ; preds = %1256, %1245, %1261
  %1264 = phi i32 [ %1262, %1261 ], [ %1246, %1245 ], [ %1246, %1256 ]
  %1265 = and i32 %1264, 1073741824
  %1266 = icmp eq i32 %1265, 0
  br i1 %1266, label %1290, label %1267

1267:                                             ; preds = %1263
  %1268 = getelementptr inbounds i32, i32* %0, i64 59
  %1269 = load i32, i32* %1268, align 4
  %1270 = getelementptr inbounds i32, i32* %0, i64 63
  %1271 = load i32, i32* %1270, align 4
  %1272 = lshr i32 %1271, 25
  %1273 = xor i32 %1272, %1269
  %1274 = and i32 %1273, 16
  %1275 = icmp eq i32 %1274, 0
  br i1 %1275, label %1276, label %1288

1276:                                             ; preds = %1267
  %1277 = getelementptr inbounds i32, i32* %0, i64 57
  %1278 = load i32, i32* %1277, align 4
  %1279 = lshr i32 %1269, 25
  %1280 = xor i32 %1278, %1279
  %1281 = and i32 %1280, 16
  %1282 = icmp eq i32 %1281, 0
  br i1 %1282, label %1283, label %1288

1283:                                             ; preds = %1276
  %1284 = lshr i32 %31, 25
  %1285 = xor i32 %74, %1284
  %1286 = and i32 %1285, 24
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1290, label %1288

1288:                                             ; preds = %1283, %1276, %1267
  %1289 = and i32 %1264, -1073741825
  br label %1290

1290:                                             ; preds = %1283, %1263, %1288
  %1291 = phi i32 [ %1289, %1288 ], [ %1264, %1263 ], [ %1264, %1283 ]
  %1292 = icmp slt i32 %1291, 0
  br i1 %1292, label %1293, label %1309

1293:                                             ; preds = %1290
  %1294 = getelementptr inbounds i32, i32* %0, i64 60
  %1295 = load i32, i32* %1294, align 4
  %1296 = getelementptr inbounds i32, i32* %0, i64 64
  %1297 = load i32, i32* %1296, align 4
  %1298 = lshr i32 %1297, 25
  %1299 = xor i32 %1298, %1295
  %1300 = and i32 %1299, 16
  %1301 = icmp eq i32 %1300, 0
  br i1 %1301, label %1302, label %1307

1302:                                             ; preds = %1293
  %1303 = lshr i32 %23, 25
  %1304 = xor i32 %1303, %4
  %1305 = and i32 %1304, 24
  %1306 = icmp eq i32 %1305, 0
  br i1 %1306, label %1309, label %1307

1307:                                             ; preds = %1302, %1293
  %1308 = and i32 %1291, 2147483647
  br label %1309

1309:                                             ; preds = %1302, %821, %1290, %1307
  %1310 = phi i32 [ %1308, %1307 ], [ %1291, %1290 ], [ 0, %821 ], [ %1291, %1302 ]
  store i32 %1310, i32* %1, align 4
  ret void
}

attributes #0 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
