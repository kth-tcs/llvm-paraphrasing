; ModuleID = 'zend_compile-strip-O2-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/Zend/zend_compile.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { %45, %1*, %32*, i32, %7*, %39*, %39*, %39, %39*, i8, i8, i8, i8, i8, %29, %31*, i32, i8, %32*, i32, i32, %33, %35, %44*, %39, %42**, i64, i8, i8, i8, %43*, %44*, %45 }
%1 = type { i8, %32*, %1*, i32, i32, i32, i32, %2*, %2*, %2*, %39, %39, %39, %6*, %6*, %6*, %6*, %6*, %6*, %6*, %6*, %6*, %6*, %6*, %6*, %6*, %13, %16* (%1*)*, %15* (%1*, %2*, i32)*, i32 (%1*, %1*)*, %6* (%1*, %32*)*, i32 (%2*, i8**, i64*, %21*)*, i32 (%2*, %1*, i8*, i64, %22*)*, i32, i32, %1**, %1**, %23**, %25**, %27 }
%2 = type { %3, %4, %5 }
%3 = type { i64 }
%4 = type { i32 }
%5 = type { i32 }
%6 = type { %7 }
%7 = type { i8, [3 x i8], i32, %32*, %1*, %6*, i32, i32, %8*, i32*, i32, %9*, i32, i32, %32**, i32, i32, %11*, %12*, %39*, %32*, i32, i32, %32*, i32, i32, %2*, i32, i8**, [6 x i8*] }
%8 = type { %32*, i64, i8, i8 }
%9 = type { i8*, %10, %10, %10, i32, i32, i8, i8, i8, i8 }
%10 = type { i32 }
%11 = type { i32, i32, i32 }
%12 = type { i32, i32, i32, i32 }
%13 = type { %14*, %6*, %6*, %6*, %6*, %6*, %6* }
%14 = type { void (%15*)*, i32 (%15*)*, %2* (%15*)*, void (%15*, %2*)*, void (%15*)*, void (%15*)*, void (%15*)* }
%15 = type { %16, %2, %14*, i64 }
%16 = type { %17, i32, %1*, %19*, %39*, [1 x %2] }
%17 = type { i32, %18 }
%18 = type { i32 }
%19 = type { i32, void (%16*)*, void (%16*)*, %16* (%2*)*, %2* (%2*, %2*, i32, i8**, %2*)*, void (%2*, %2*, %2*, i8**)*, %2* (%2*, %2*, i32, %2*)*, void (%2*, %2*, %2*)*, %2* (%2*, %2*, i32, i8**)*, %2* (%2*, %2*)*, void (%2*, %2*)*, i32 (%2*, %2*, i32, i8**)*, void (%2*, %2*, i8**)*, i32 (%2*, %2*, i32)*, void (%2*, %2*)*, %39* (%2*)*, %6* (%16**, %32*, %2*)*, i32 (%32*, %16*, %20*, %2*)*, %6* (%16*)*, %32* (%16*)*, i32 (%2*, %2*)*, i32 (%2*, %2*, i32)*, i32 (%2*, i64*)*, %39* (%2*, i32*)*, i32 (%2*, %1**, %6**, %16**)*, %39* (%2*, %2**, i32*)*, i32 (i8, %2*, %2*, %2*)*, i32 (%2*, %2*, %2*)* }
%20 = type { %9*, %20*, %2*, %6*, %2, %20*, %39*, i8**, %2* }
%21 = type opaque
%22 = type opaque
%23 = type { %24*, %32*, i32 }
%24 = type { %32*, %1*, %32* }
%25 = type { %24*, %26* }
%26 = type { %1* }
%27 = type { %28 }
%28 = type { %32*, i32, i32, %32* }
%29 = type { %30*, %30*, i64, i64, void (i8*)*, i8, %30* }
%30 = type { %30*, %30*, [1 x i8] }
%31 = type opaque
%32 = type { %17, i64, i64, [1 x i8] }
%33 = type { i32, i32, i32, i32, i32, i32, i32, i32, %34*, %39* }
%34 = type { i32, i32, i32, i32 }
%35 = type { %36, %37, %32*, i8, i8, %39*, %39*, %39*, %39 }
%36 = type { i64 }
%37 = type { i8, i8, %38 }
%38 = type { %2 }
%39 = type { %17, %40, i32, %41*, i32, i32, i32, i32, i64, void (%2*)* }
%40 = type { i32 }
%41 = type { %2, i64, %32* }
%42 = type opaque
%43 = type { i16, i16, i32, [1 x %43*] }
%44 = type { i8*, i8*, %44* }
%45 = type { i32, i32, i32, i8* }
%46 = type { %47*, %47*, i32, i8*, i8*, i8*, i8*, i8*, i32, %45, %51, i8*, i64, i8*, i64, i64 (i8**, i64*, i8*, i64)*, i64 (i8**, i64*, i8*, i64)*, %42*, i32, void (i32, i32, i32, i8*)*, i8* }
%47 = type { %48, i8*, %32*, i32, i8 }
%48 = type { %49 }
%49 = type { i8*, i32, %50, i64 (i8*, i8*, i64)*, i64 (i8*)*, void (i8*)* }
%50 = type { i64, i64, i8*, i8*, i8*, void (i8*)* }
%51 = type { i32, i32, i8**, i8**, i8 }
%52 = type { %2, %2, [32 x %39*], %39**, %39**, %39, %39, [1 x %53]*, i32, i32, %39*, %39*, %39*, %2*, %2*, %55*, %20*, %1*, i64, i32, %39*, %6*, i8, i8, i8, i8, i64, %39, %39, i32, %2, %2, %45, %45, %45, i32, %1*, i64, i32, %39*, %39*, %56*, %57, %16*, %16*, %9*, [3 x %9], %58*, i8, i8, i64, i32, i32, %62*, [16 x %62], i8*, i16, %6, %9, i8, [6 x i8*] }
%53 = type { [8 x i64], i32, %54 }
%54 = type { [16 x i64] }
%55 = type { %2*, %2*, %55* }
%56 = type opaque
%57 = type { %16**, i32, i32, i32 }
%58 = type { i16, i32, i8, i8, %56*, %59*, i8*, %60*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, void (%58*)*, i8*, i64, i8*, void (i8*)*, void (i8*)*, i32 ()*, i32, i8, i8*, i32, i8* }
%59 = type { i8*, i8*, i8*, i8 }
%60 = type { i8*, void (%20*, %2*)*, %61*, i32, i32 }
%61 = type { i8*, i64, i8, i8 }
%62 = type { %39*, i32 }
%63 = type { i8*, i64, i8 }
%64 = type { i8, i8, i16 }
%65 = type { i8, i8, i8, i8 }
%66 = type { %17 }
%67 = type { %32*, i8 (%32*)*, i8, i8 }
%68 = type { %43* }
%69 = type { i16, i16, i32, i32, [1 x %43*] }
%70 = type { i16, i16, i32, i32, i32, i8*, %32*, %32*, [4 x %43*] }
%71 = type { i8, [3 x i8], i32, %32*, %1*, %6*, i32, i32, %8* }
%72 = type { i8, i8, i32, %73 }
%73 = type { i32 }
%74 = type { i32, i32 }
%75 = type { %2, %32*, %1* }

@0 = private unnamed_addr constant [48 x i8] c"Cannot use '%s' as class name as it is reserved\00", align 1
@compiler_globals = common dso_local global %0 zeroinitializer, align 8
@language_scanner_globals = external dso_local local_unnamed_addr global %46, align 8
@1 = private unnamed_addr constant [44 x i8] c"Multiple abstract modifiers are not allowed\00", align 1
@2 = private unnamed_addr constant [41 x i8] c"Multiple final modifiers are not allowed\00", align 1
@3 = private unnamed_addr constant [51 x i8] c"Cannot use the final modifier on an abstract class\00", align 1
@4 = private unnamed_addr constant [47 x i8] c"Multiple access type modifiers are not allowed\00", align 1
@5 = private unnamed_addr constant [42 x i8] c"Multiple static modifiers are not allowed\00", align 1
@6 = private unnamed_addr constant [58 x i8] c"Cannot use the final modifier on an abstract class member\00", align 1
@7 = private unnamed_addr constant [31 x i8] c"'\\%s' is an invalid class name\00", align 1
@8 = private unnamed_addr constant [19 x i8] c"Illegal class name\00", align 1
@9 = private unnamed_addr constant [53 x i8] c"Cannot redeclare %s() (previously declared in %s:%d)\00", align 1
@10 = private unnamed_addr constant [22 x i8] c"Cannot redeclare %s()\00", align 1
@11 = private unnamed_addr constant [57 x i8] c"Cannot declare %s %s, because the name is already in use\00", align 1
@12 = private unnamed_addr constant [55 x i8] c"Cannot declare  %s, because the name is already in use\00", align 1
@13 = private unnamed_addr constant [21 x i8] c"Invalid binding type\00", align 1
@executor_globals = common dso_local local_unnamed_addr global %52 zeroinitializer, align 8
@14 = private unnamed_addr constant [29 x i8] c"Illegal member variable name\00", align 1
@15 = private unnamed_addr constant [29 x i8] c"Corrupt member variable name\00", align 1
@16 = private unnamed_addr constant [5 x i8] c"self\00", align 1
@17 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@18 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@zend_new_interned_string = external dso_local local_unnamed_addr global %32* (%32*)*, align 8
@19 = private unnamed_addr constant [42 x i8] c"No code may exist outside of namespace {}\00", align 1
@20 = private unnamed_addr constant [23 x i8] c"Cannot re-assign $this\00", align 1
@21 = private unnamed_addr constant [56 x i8] c"Cannot use result of built-in function in write context\00", align 1
@22 = private unnamed_addr constant [56 x i8] c"Cannot use positional argument after argument unpacking\00", align 1
@23 = private unnamed_addr constant [42 x i8] c"Only variables can be passed by reference\00", align 1
@zend_execute_internal = external dso_local local_unnamed_addr global void (%20*, %2*)*, align 8
@zend_execute_ex = external dso_local local_unnamed_addr global void (%20*)*, align 8
@zend_one_char_string = external dso_local local_unnamed_addr global [256 x %32*], align 16
@24 = private unnamed_addr constant [12 x i8] c"array_slice\00", align 1
@25 = private unnamed_addr constant [14 x i8] c"func_get_args\00", align 1
@26 = private unnamed_addr constant [7 x i8] c"strlen\00", align 1
@27 = private unnamed_addr constant [8 x i8] c"is_null\00", align 1
@28 = private unnamed_addr constant [8 x i8] c"is_bool\00", align 1
@29 = private unnamed_addr constant [8 x i8] c"is_long\00", align 1
@30 = private unnamed_addr constant [7 x i8] c"is_int\00", align 1
@31 = private unnamed_addr constant [11 x i8] c"is_integer\00", align 1
@32 = private unnamed_addr constant [9 x i8] c"is_float\00", align 1
@33 = private unnamed_addr constant [10 x i8] c"is_double\00", align 1
@34 = private unnamed_addr constant [8 x i8] c"is_real\00", align 1
@35 = private unnamed_addr constant [10 x i8] c"is_string\00", align 1
@36 = private unnamed_addr constant [9 x i8] c"is_array\00", align 1
@37 = private unnamed_addr constant [10 x i8] c"is_object\00", align 1
@38 = private unnamed_addr constant [12 x i8] c"is_resource\00", align 1
@39 = private unnamed_addr constant [8 x i8] c"boolval\00", align 1
@40 = private unnamed_addr constant [7 x i8] c"intval\00", align 1
@41 = private unnamed_addr constant [9 x i8] c"floatval\00", align 1
@42 = private unnamed_addr constant [10 x i8] c"doubleval\00", align 1
@43 = private unnamed_addr constant [7 x i8] c"strval\00", align 1
@44 = private unnamed_addr constant [8 x i8] c"defined\00", align 1
@45 = private unnamed_addr constant [4 x i8] c"chr\00", align 1
@46 = private unnamed_addr constant [4 x i8] c"ord\00", align 1
@47 = private unnamed_addr constant [21 x i8] c"call_user_func_array\00", align 1
@48 = private unnamed_addr constant [15 x i8] c"call_user_func\00", align 1
@49 = private unnamed_addr constant [9 x i8] c"in_array\00", align 1
@50 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@51 = private unnamed_addr constant [10 x i8] c"get_class\00", align 1
@52 = private unnamed_addr constant [17 x i8] c"get_called_class\00", align 1
@53 = private unnamed_addr constant [8 x i8] c"gettype\00", align 1
@54 = private unnamed_addr constant [14 x i8] c"func_num_args\00", align 1
@55 = private unnamed_addr constant [7 x i8] c"assert\00", align 1
@56 = private unnamed_addr constant [29 x i8] c"Method name must be a string\00", align 1
@57 = private unnamed_addr constant [36 x i8] c"Cannot use $this as global variable\00", align 1
@58 = private unnamed_addr constant [19 x i8] c"Cannot unset $this\00", align 1
@59 = private unnamed_addr constant [63 x i8] c"'%s' operator with non-constant operand is no longer supported\00", align 1
@60 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@61 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@62 = private unnamed_addr constant [44 x i8] c"'%s' operator accepts only positive numbers\00", align 1
@63 = private unnamed_addr constant [43 x i8] c"'%s' not in the 'loop' or 'switch' context\00", align 1
@64 = private unnamed_addr constant [24 x i8] c"Cannot '%s' %ld level%s\00", align 1
@65 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@66 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@67 = private unnamed_addr constant [31 x i8] c"'goto' to undefined label '%s'\00", align 1
@68 = private unnamed_addr constant [51 x i8] c"'goto' into loop or switch statement is disallowed\00", align 1
@69 = private unnamed_addr constant [27 x i8] c"Label '%s' already defined\00", align 1
@70 = private unnamed_addr constant [34 x i8] c"Key element cannot be a reference\00", align 1
@71 = private unnamed_addr constant [31 x i8] c"Cannot use list as key element\00", align 1
@72 = private unnamed_addr constant [54 x i8] c"Switch statements may only contain one default clause\00", align 1
@73 = private unnamed_addr constant [40 x i8] c"Cannot use try without catch or finally\00", align 1
@74 = private unnamed_addr constant [38 x i8] c"Bad class name in the catch statement\00", align 1
@75 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@76 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@77 = private unnamed_addr constant [27 x i8] c"Encoding must be a literal\00", align 1
@78 = private unnamed_addr constant [26 x i8] c"Unsupported encoding [%s]\00", align 1
@79 = private unnamed_addr constant [87 x i8] c"declare(encoding=...) ignored because Zend multibyte feature is turned off by settings\00", align 1
@80 = private unnamed_addr constant [36 x i8] c"declare(%s) value must be a literal\00", align 1
@81 = private unnamed_addr constant [6 x i8] c"ticks\00", align 1
@82 = private unnamed_addr constant [75 x i8] c"Encoding declaration pragma must be the very first statement in the script\00", align 1
@83 = private unnamed_addr constant [13 x i8] c"strict_types\00", align 1
@84 = private unnamed_addr constant [72 x i8] c"strict_types declaration must be the very first statement in the script\00", align 1
@85 = private unnamed_addr constant [49 x i8] c"strict_types declaration must not use block mode\00", align 1
@86 = private unnamed_addr constant [55 x i8] c"strict_types declaration must have 0 or 1 as its value\00", align 1
@87 = private unnamed_addr constant [25 x i8] c"Unsupported declare '%s'\00", align 1
@88 = private unnamed_addr constant [29 x i8] c"Void type cannot be nullable\00", align 1
@89 = private unnamed_addr constant [41 x i8] c"Cannot re-assign auto-global variable %s\00", align 1
@90 = private unnamed_addr constant [30 x i8] c"Redefinition of parameter $%s\00", align 1
@91 = private unnamed_addr constant [30 x i8] c"Cannot use $this as parameter\00", align 1
@92 = private unnamed_addr constant [40 x i8] c"Only the last parameter can be variadic\00", align 1
@93 = private unnamed_addr constant [47 x i8] c"Variadic parameter cannot have a default value\00", align 1
@94 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@95 = private unnamed_addr constant [40 x i8] c"void cannot be used as a parameter type\00", align 1
@96 = private unnamed_addr constant [74 x i8] c"Default value for parameters with array type can only be an array or NULL\00", align 1
@97 = private unnamed_addr constant [65 x i8] c"Default value for parameters with callable type can only be NULL\00", align 1
@98 = private unnamed_addr constant [64 x i8] c"Default value for parameters with a class type can only be NULL\00", align 1
@99 = private unnamed_addr constant [83 x i8] c"Default value for parameters with a float type can only be float, integer, or NULL\00", align 1
@100 = private unnamed_addr constant [77 x i8] c"Default value for parameters with iterable type can only be an array or NULL\00", align 1
@101 = private unnamed_addr constant [66 x i8] c"Default value for parameters with an object type can only be NULL\00", align 1
@102 = private unnamed_addr constant [67 x i8] c"Default value for parameters with a %s type can only be %s or NULL\00", align 1
@103 = private unnamed_addr constant [30 x i8] c"Cannot use variable $%s twice\00", align 1
@104 = private unnamed_addr constant [52 x i8] c"Cannot use lexical variable $%s as a parameter name\00", align 1
@105 = private unnamed_addr constant [58 x i8] c"Access type for interface method %s::%s() must be omitted\00", align 1
@106 = private unnamed_addr constant [48 x i8] c"%s function %s::%s() cannot be declared private\00", align 1
@107 = private unnamed_addr constant [10 x i8] c"Interface\00", align 1
@108 = private unnamed_addr constant [9 x i8] c"Abstract\00", align 1
@109 = private unnamed_addr constant [41 x i8] c"%s function %s::%s() cannot contain body\00", align 1
@110 = private unnamed_addr constant [47 x i8] c"Non-abstract method %s::%s() must contain body\00", align 1
@111 = private unnamed_addr constant [26 x i8] c"Cannot redeclare %s::%s()\00", align 1
@112 = private unnamed_addr constant [7 x i8] c"__call\00", align 1
@113 = private unnamed_addr constant [75 x i8] c"The magic method __call() must have public visibility and cannot be static\00", align 1
@114 = private unnamed_addr constant [13 x i8] c"__callstatic\00", align 1
@115 = private unnamed_addr constant [74 x i8] c"The magic method __callStatic() must have public visibility and be static\00", align 1
@116 = private unnamed_addr constant [6 x i8] c"__get\00", align 1
@117 = private unnamed_addr constant [74 x i8] c"The magic method __get() must have public visibility and cannot be static\00", align 1
@118 = private unnamed_addr constant [6 x i8] c"__set\00", align 1
@119 = private unnamed_addr constant [74 x i8] c"The magic method __set() must have public visibility and cannot be static\00", align 1
@120 = private unnamed_addr constant [8 x i8] c"__unset\00", align 1
@121 = private unnamed_addr constant [76 x i8] c"The magic method __unset() must have public visibility and cannot be static\00", align 1
@122 = private unnamed_addr constant [8 x i8] c"__isset\00", align 1
@123 = private unnamed_addr constant [76 x i8] c"The magic method __isset() must have public visibility and cannot be static\00", align 1
@124 = private unnamed_addr constant [11 x i8] c"__tostring\00", align 1
@125 = private unnamed_addr constant [79 x i8] c"The magic method __toString() must have public visibility and cannot be static\00", align 1
@126 = private unnamed_addr constant [9 x i8] c"__invoke\00", align 1
@127 = private unnamed_addr constant [77 x i8] c"The magic method __invoke() must have public visibility and cannot be static\00", align 1
@128 = private unnamed_addr constant [12 x i8] c"__debuginfo\00", align 1
@129 = private unnamed_addr constant [80 x i8] c"The magic method __debugInfo() must have public visibility and cannot be static\00", align 1
@130 = private unnamed_addr constant [12 x i8] c"__construct\00", align 1
@131 = private unnamed_addr constant [11 x i8] c"__destruct\00", align 1
@132 = private unnamed_addr constant [8 x i8] c"__clone\00", align 1
@133 = private unnamed_addr constant [44 x i8] c"Interfaces may not include member variables\00", align 1
@134 = private unnamed_addr constant [39 x i8] c"Properties cannot be declared abstract\00", align 1
@135 = private unnamed_addr constant [98 x i8] c"Cannot declare property %s::$%s final, the final modifier is allowed only for methods and classes\00", align 1
@136 = private unnamed_addr constant [25 x i8] c"Cannot redeclare %s::$%s\00", align 1
@137 = private unnamed_addr constant [29 x i8] c"Traits cannot have constants\00", align 1
@138 = private unnamed_addr constant [41 x i8] c"Cannot use 'static' as constant modifier\00", align 1
@139 = private unnamed_addr constant [43 x i8] c"Cannot use 'abstract' as constant modifier\00", align 1
@140 = private unnamed_addr constant [40 x i8] c"Cannot use 'final' as constant modifier\00", align 1
@141 = private unnamed_addr constant [57 x i8] c"Cannot use traits inside of interfaces. %s is used in %s\00", align 1
@142 = private unnamed_addr constant [48 x i8] c"Cannot use '%s' as trait name as it is reserved\00", align 1
@143 = private unnamed_addr constant [52 x i8] c"Cannot use '%s' as interface name as it is reserved\00", align 1
@144 = private unnamed_addr constant [37 x i8] c"Class declarations may not be nested\00", align 1
@145 = private unnamed_addr constant [59 x i8] c"Cannot declare class %s because the name is already in use\00", align 1
@146 = private unnamed_addr constant [38 x i8] c"Constructor %s::%s() cannot be static\00", align 1
@147 = private unnamed_addr constant [50 x i8] c"Constructor %s::%s() cannot declare a return type\00", align 1
@148 = private unnamed_addr constant [37 x i8] c"Destructor %s::%s() cannot be static\00", align 1
@149 = private unnamed_addr constant [49 x i8] c"Destructor %s::%s() cannot declare a return type\00", align 1
@150 = private unnamed_addr constant [39 x i8] c"Clone method %s::%s() cannot be static\00", align 1
@151 = private unnamed_addr constant [38 x i8] c"%s::%s() cannot declare a return type\00", align 1
@152 = private unnamed_addr constant [60 x i8] c"The use statement with non-compound name '%s' has no effect\00", align 1
@153 = private unnamed_addr constant [57 x i8] c"Cannot use %s as %s because '%s' is a special class name\00", align 1
@154 = private unnamed_addr constant [57 x i8] c"Cannot use%s %s as %s because the name is already in use\00", align 1
@155 = private unnamed_addr constant [31 x i8] c"Cannot redeclare constant '%s'\00", align 1
@156 = private unnamed_addr constant [59 x i8] c"Cannot declare const %s because the name is already in use\00", align 1
@157 = private unnamed_addr constant [84 x i8] c"Cannot mix bracketed namespace declarations with unbracketed namespace declarations\00", align 1
@158 = private unnamed_addr constant [40 x i8] c"Namespace declarations cannot be nested\00", align 1
@159 = private unnamed_addr constant [107 x i8] c"Namespace declaration statement has to be the very first statement or after any declare call in the script\00", align 1
@160 = private unnamed_addr constant [34 x i8] c"Cannot use '%s' as namespace name\00", align 1
@161 = private unnamed_addr constant [60 x i8] c"__HALT_COMPILER() can only be used from the outermost scope\00", align 1
@162 = private unnamed_addr constant [31 x i8] c"The (unset) cast is deprecated\00", align 1
@163 = private unnamed_addr constant [56 x i8] c"Cannot use \22yield from\22 inside a by-reference generator\00", align 1
@164 = private unnamed_addr constant [54 x i8] c"instanceof expects an object instance, constant given\00", align 1
@165 = private unnamed_addr constant [94 x i8] c"Cannot use isset() on the result of an expression (you can use \22null !== expression\22 instead)\00", align 1
@166 = private unnamed_addr constant [11 x i8] c"shell_exec\00", align 1
@167 = private unnamed_addr constant [42 x i8] c"Cannot use empty array elements in arrays\00", align 1
@168 = private unnamed_addr constant [25 x i8] c"__COMPILER_HALT_OFFSET__\00", align 16
@169 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@170 = private unnamed_addr constant [66 x i8] c"Dynamic class names are not allowed in compile-time ::class fetch\00", align 1
@171 = private unnamed_addr constant [78 x i8] c"Dynamic class names are not allowed in compile-time class constant references\00", align 1
@172 = private unnamed_addr constant [52 x i8] c"\22static::\22 is not allowed in compile-time constants\00", align 1
@173 = private unnamed_addr constant [10 x i8] c"__CLASS__\00", align 1
@174 = private unnamed_addr constant [48 x i8] c"Constant expression contains invalid operations\00", align 1
@175 = private unnamed_addr constant [49 x i8] c"Cannot use temporary expression in write context\00", align 1
@176 = private unnamed_addr constant [26 x i8] c"Cannot use [] for reading\00", align 1
@zend_compile_file = common dso_local local_unnamed_addr global %7* (%47*, i32)* null, align 8
@zend_compile_string = common dso_local local_unnamed_addr global %7* (%2*, i8*)* null, align 8
@177 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@178 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@179 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@180 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@181 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@182 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@183 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@184 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@185 = private unnamed_addr constant [9 x i8] c"iterable\00", align 1
@186 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@187 = private unnamed_addr constant [92 x i8] c"A void function must not return a value (did you mean \22return;\22 instead of \22return null;\22?)\00", align 1
@188 = private unnamed_addr constant [40 x i8] c"A void function must not return a value\00", align 1
@189 = private unnamed_addr constant [100 x i8] c"A function with return type must return a value (did you mean \22return null;\22 instead of \22return;\22?)\00", align 1
@190 = private unnamed_addr constant [48 x i8] c"A function with return type must return a value\00", align 1
@191 = private unnamed_addr constant [49 x i8] c"Can't use function return value in write context\00", align 1
@192 = private unnamed_addr constant [47 x i8] c"Can't use method return value in write context\00", align 1
@193 = private unnamed_addr constant [28 x i8] c"Cannot use [] for unsetting\00", align 1
@194 = private unnamed_addr constant [57 x i8] c"Cannot use empty array entries in keyed array assignment\00", align 1
@195 = private unnamed_addr constant [49 x i8] c"[] and list() assignments cannot be by reference\00", align 1
@196 = private unnamed_addr constant [58 x i8] c"Cannot mix keyed and unkeyed array entries in assignments\00", align 1
@197 = private unnamed_addr constant [22 x i8] c"Cannot use empty list\00", align 1
@198 = private unnamed_addr constant [41 x i8] c"Cannot assign to array(), use [] instead\00", align 1
@199 = private unnamed_addr constant [25 x i8] c"Cannot mix [] and list()\00", align 1
@200 = private unnamed_addr constant [47 x i8] c"Assignments can only happen to writable values\00", align 1
@201 = private unnamed_addr constant [8 x i8] c"assert(\00", align 1
@202 = private unnamed_addr constant [2 x i8] c")\00", align 1
@203 = private unnamed_addr constant [36 x i8] c"Cannot use $this as static variable\00", align 1
@204 = private unnamed_addr constant [49 x i8] c"Scalar type declaration '%s' must be unqualified\00", align 1
@205 = internal unnamed_addr constant [8 x %63] [%63 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @180, i32 0, i32 0), i64 3, i8 4 }, %63 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @179, i32 0, i32 0), i64 5, i8 5 }, %63 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @182, i32 0, i32 0), i64 6, i8 6 }, %63 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @177, i32 0, i32 0), i64 4, i8 13 }, %63 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @184, i32 0, i32 0), i64 4, i8 18 }, %63 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @185, i32 0, i32 0), i64 8, i8 19 }, %63 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @186, i32 0, i32 0), i64 6, i8 8 }, %63 zeroinitializer], align 16
@206 = private unnamed_addr constant [62 x i8] c"Cannot declare function %s because the name is already in use\00", align 1
@207 = private unnamed_addr constant [11 x i8] c"__autoload\00", align 1
@208 = private unnamed_addr constant [34 x i8] c"%s() must take exactly 1 argument\00", align 1
@209 = private unnamed_addr constant [64 x i8] c"__autoload() is deprecated, use spl_autoload_register() instead\00", align 1
@210 = private unnamed_addr constant [37 x i8] c"Cannot use $this as lexical variable\00", align 1
@211 = private unnamed_addr constant [43 x i8] c"Cannot use auto-global as lexical variable\00", align 1
@212 = private unnamed_addr constant [58 x i8] c"The \22yield\22 expression can only be used inside a function\00", align 1
@213 = private unnamed_addr constant [112 x i8] c"Generators may only declare a return type of Generator, Iterator, Traversable, or iterable, %s is not permitted\00", align 1
@214 = private unnamed_addr constant [12 x i8] c"Traversable\00", align 1
@215 = private unnamed_addr constant [9 x i8] c"Iterator\00", align 1
@216 = private unnamed_addr constant [10 x i8] c"Generator\00", align 1
@217 = private unnamed_addr constant [39 x i8] c"Cannot use 'static' as method modifier\00", align 1
@218 = private unnamed_addr constant [41 x i8] c"Cannot use 'abstract' as method modifier\00", align 1
@219 = private unnamed_addr constant [38 x i8] c"Cannot use 'final' as method modifier\00", align 1
@220 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@221 = private unnamed_addr constant [22 x i8] c"class@anonymous%c%s%s\00", align 1
@222 = private unnamed_addr constant [9 x i8] c"%c%s%s%s\00", align 1
@223 = private unnamed_addr constant [10 x i8] c" function\00", align 1
@224 = private unnamed_addr constant [7 x i8] c" const\00", align 1
@225 = private unnamed_addr constant [43 x i8] c"Cannot use list() as standalone expression\00", align 1
@zend_empty_string = external dso_local local_unnamed_addr global %32*, align 8
@226 = private unnamed_addr constant [20 x i8] c"Illegal offset type\00", align 1
@227 = private unnamed_addr constant [64 x i8] c"%s::class cannot be used for compile-time class name resolution\00", align 1
@228 = private unnamed_addr constant [46 x i8] c"Cannot use \22%s\22 when no class scope is active\00", align 1
@229 = private unnamed_addr constant [2 x i8] c".\00", align 1

; Function Attrs: nounwind uwtable
define hidden void @zend_assert_valid_class_name(%32* %0) local_unnamed_addr #0 {
  %2 = tail call fastcc zeroext i8 @230(%32* %0)
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @0, i64 0, i64 0), i8* nonnull %5) #15
  unreachable

6:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @230(%32* %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %68, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 %4
  br label %8

8:                                                ; preds = %12, %6
  %9 = phi i8* [ %7, %6 ], [ %10, %12 ]
  %10 = getelementptr inbounds i8, i8* %9, i64 -1
  %11 = icmp ult i8* %10, %2
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = load i8, i8* %10, align 1
  %14 = icmp eq i8 %13, 92
  br i1 %14, label %15, label %8

15:                                               ; preds = %12
  %16 = ptrtoint i8* %7 to i64
  %17 = ptrtoint i8* %9 to i64
  %18 = sub i64 %16, %17
  br label %19

19:                                               ; preds = %8, %15
  %20 = phi i8* [ %9, %15 ], [ %2, %8 ]
  %21 = phi i64 [ %18, %15 ], [ %4, %8 ]
  switch i64 %21, label %57 [
    i64 4, label %22
    i64 5, label %27
    i64 3, label %33
    i64 6, label %39
  ]

22:                                               ; preds = %19
  %23 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 4, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @177, i64 0, i64 0), i64 4) #16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %36

25:                                               ; preds = %68, %65, %61, %54, %51, %48, %45, %42, %39, %36, %33, %30, %27, %22
  %26 = phi i8 [ 1, %22 ], [ 1, %27 ], [ 1, %30 ], [ 1, %33 ], [ 1, %36 ], [ 1, %39 ], [ 1, %42 ], [ 1, %45 ], [ 1, %48 ], [ 1, %51 ], [ 1, %54 ], [ 1, %61 ], [ 1, %65 ], [ 0, %68 ]
  ret i8 %26

27:                                               ; preds = %19
  %28 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 5, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @178, i64 0, i64 0), i64 5) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %25, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 5, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @179, i64 0, i64 0), i64 5) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %25, label %68

33:                                               ; preds = %19
  %34 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 3, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @180, i64 0, i64 0), i64 3) #16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %25, label %68

36:                                               ; preds = %22
  %37 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 4, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @181, i64 0, i64 0), i64 4) #16
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %25, label %42

39:                                               ; preds = %19
  %40 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 6, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %25, label %45

42:                                               ; preds = %36
  %43 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 4, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %25, label %51

45:                                               ; preds = %39
  %46 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 6, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %25, label %48

48:                                               ; preds = %45
  %49 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 6, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @182, i64 0, i64 0), i64 6) #16
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %25, label %57

51:                                               ; preds = %42
  %52 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 4, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @183, i64 0, i64 0), i64 4) #16
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %25, label %54

54:                                               ; preds = %51
  %55 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 4, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @184, i64 0, i64 0), i64 4) #16
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %25, label %57

57:                                               ; preds = %48, %19, %54
  %58 = phi i64 [ 4, %54 ], [ %21, %19 ], [ 6, %48 ]
  %59 = phi i1 [ false, %54 ], [ false, %19 ], [ true, %48 ]
  %60 = icmp eq i64 %58, 8
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 8, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @185, i64 0, i64 0), i64 8) #16
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %25, label %64

64:                                               ; preds = %61, %57
  br i1 %59, label %65, label %68

65:                                               ; preds = %64
  %66 = tail call i32 @zend_binary_strcasecmp(i8* %20, i64 6, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @186, i64 0, i64 0), i64 6) #16
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %25, label %68

68:                                               ; preds = %1, %30, %33, %65, %64
  br label %25
}

; Function Attrs: noreturn
declare dso_local void @zend_error_noreturn(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define hidden void @zend_oparray_context_begin(%33* nocapture %0) local_unnamed_addr #0 {
  %2 = bitcast %33* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 bitcast (%33* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21) to i8*), i64 48, i1 false)
  store <4 x i32> <i32 64, i32 0, i32 0, i32 0>, <4 x i32>* bitcast (i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 0) to <4 x i32>*), align 8
  store i32 -1, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 4), align 8
  store i32 -1, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 5), align 4
  store i32 -1, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 bitcast (i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 7) to i8*), i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind uwtable
define hidden void @zend_oparray_context_end(%33* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = load %34*, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  %3 = icmp eq %34* %2, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = bitcast %34* %2 to i8*
  tail call void @_efree(i8* %5) #16
  store %34* null, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  br label %6

6:                                                ; preds = %1, %4
  %7 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9), align 8
  %8 = icmp eq %39* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  tail call void @zend_hash_destroy(%39* nonnull %7) #16
  %10 = load i8*, i8** bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9) to i8**), align 8
  tail call void @_efree_56(i8* %10) #16
  store %39* null, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9), align 8
  br label %11

11:                                               ; preds = %6, %9
  %12 = bitcast %33* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%33* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21) to i8*), i8* align 8 %12, i64 48, i1 false)
  ret void
}

declare dso_local void @_efree(i8*) local_unnamed_addr #3

declare dso_local void @zend_hash_destroy(%39*) local_unnamed_addr #3

declare dso_local void @_efree_56(i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_file_context_begin(%35* nocapture %0) local_unnamed_addr #0 {
  %2 = bitcast %35* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 bitcast (%35* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22) to i8*), i64 128, i1 false)
  store %32* null, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 3), align 8
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 4), align 1
  store i64 0, i64* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 0, i32 0), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5) to i8*), i8 0, i64 24, i1 false)
  tail call void @_zend_hash_init(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8), i32 8, void (%2*)* null, i8 zeroext 0) #16
  ret void
}

declare dso_local void @_zend_hash_init(%39*, i32, void (%2*)*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_file_context_end(%35* nocapture readonly %0) local_unnamed_addr #0 {
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 3), align 8
  tail call fastcc void @252() #16
  %2 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %3 = icmp eq %32* %2, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %32, %32* %2, i64 0, i32 0, i32 1
  %6 = bitcast %18* %5 to %64*
  %7 = getelementptr inbounds %64, %64* %6, i64 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = and i8 %8, 2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %4
  %12 = getelementptr inbounds %32, %32* %2, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = and i8 %8, 1
  %18 = icmp eq i8 %17, 0
  %19 = bitcast %32* %2 to i8*
  br i1 %18, label %21, label %20

20:                                               ; preds = %16
  tail call void @free(i8* %19) #16
  br label %22

21:                                               ; preds = %16
  tail call void @_efree(i8* %19) #16
  br label %22

22:                                               ; preds = %21, %20, %11, %4
  store %32* null, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  br label %23

23:                                               ; preds = %1, %22
  tail call void @zend_hash_destroy(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8)) #16
  %24 = bitcast %35* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%35* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22) to i8*), i8* align 8 %24, i64 128, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_init_compiler_data_structures() local_unnamed_addr #0 {
  %1 = tail call i32 @zend_stack_init(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i32 12) #16
  %2 = tail call i32 @zend_stack_init(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32), i32 32) #16
  store %1* null, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 10), align 1
  store i32 0, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 16), align 8
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 29), align 2
  ret void
}

declare dso_local i32 @zend_stack_init(%45*, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @file_handle_dtor(%47* %0) #0 {
  tail call void @zend_file_handle_dtor(%47* %0) #16
  ret void
}

declare dso_local void @zend_file_handle_dtor(%47*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @init_compiler() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @_emalloc(i64 65536) #17
  %2 = insertelement <2 x i8*> undef, i8* %1, i32 0
  %3 = shufflevector <2 x i8*> %2, <2 x i8*> undef, <2 x i32> zeroinitializer
  %4 = getelementptr i8, <2 x i8*> %3, <2 x i64> <i64 24, i64 65536>
  %5 = bitcast i8* %1 to <2 x i8*>*
  store <2 x i8*> %4, <2 x i8*>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 16
  %7 = bitcast i8* %6 to %44**
  store %44* null, %44** %7, align 8
  store i8* %1, i8** bitcast (%44** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 23) to i8**), align 8
  store %7* null, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%33* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21) to i8*), i8 0, i64 48, i1 false)
  %8 = tail call i32 @zend_stack_init(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i32 12) #16
  %9 = tail call i32 @zend_stack_init(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32), i32 32) #16
  store %1* null, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 10), align 1
  store i32 0, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 16), align 8
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 29), align 2
  %10 = tail call i32 @zend_init_rsrc_list() #16
  tail call void @_zend_hash_init(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 7), i32 8, void (%2*)* nonnull @_zval_ptr_dtor, i8 zeroext 0) #16
  tail call void @zend_llist_init(%29* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 14), i64 112, void (i8*)* bitcast (void (%47*)* @file_handle_dtor to void (i8*)*), i8 zeroext 0) #16
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 12), align 1
  ret void
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dso_local i32 @zend_init_rsrc_list() local_unnamed_addr #3

declare dso_local void @_zval_ptr_dtor(%2*) #3

declare dso_local void @zend_llist_init(%29*, i64, void (i8*)*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @shutdown_compiler() local_unnamed_addr #0 {
  %1 = tail call i32 @zend_stack_destroy(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %2 = tail call i32 @zend_stack_destroy(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  tail call void @zend_hash_destroy(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 7)) #16
  %3 = load %44*, %44** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 23), align 8
  br label %4

4:                                                ; preds = %4, %0
  %5 = phi %44* [ %3, %0 ], [ %7, %4 ]
  %6 = getelementptr inbounds %44, %44* %5, i64 0, i32 2
  %7 = load %44*, %44** %6, align 8
  %8 = bitcast %44* %5 to i8*
  tail call void @_efree(i8* %8) #16
  %9 = icmp eq %44* %7, null
  br i1 %9, label %10, label %4

10:                                               ; preds = %4
  ret void
}

declare dso_local i32 @zend_stack_destroy(%45*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local %32* @zend_set_compiled_filename(%32* %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = bitcast %2* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #16
  %4 = tail call %2* @zend_hash_find(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 7), %32* %0) #16
  %5 = icmp eq %2* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %2* %4 to %32**
  %8 = getelementptr inbounds %2, %2* %4, i64 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* bitcast (%32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 2) to i64*), align 8
  %10 = load %32*, %32** %7, align 8
  br label %27

11:                                               ; preds = %1
  %12 = bitcast %2* %2 to %32**
  store %32* %0, %32** %12, align 8
  %13 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 1
  %14 = bitcast %18* %13 to %64*
  %15 = getelementptr inbounds %64, %64* %14, i64 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %11
  %20 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = add i32 %21, 1
  store i32 %22, i32* %20, align 8
  br label %23

23:                                               ; preds = %11, %19
  %24 = phi i32 [ 5126, %19 ], [ 6, %11 ]
  %25 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  store i32 %24, i32* %25, align 8
  %26 = call %2* @_zend_hash_update(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 7), %32* nonnull %0, %2* nonnull %2) #16
  store %32* %0, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 2), align 8
  br label %27

27:                                               ; preds = %23, %6
  %28 = phi %32* [ %10, %6 ], [ %0, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #16
  ret %32* %28
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare dso_local %2* @zend_hash_find(%39*, %32*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dso_local %2* @_zend_hash_update(%39*, %32*, %2*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind uwtable
define dso_local void @zend_restore_compiled_filename(%32* %0) local_unnamed_addr #5 {
  store %32* %0, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 2), align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local %32* @zend_get_compiled_filename() local_unnamed_addr #6 {
  %1 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 2), align 8
  ret %32* %1
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i32 @zend_get_compiled_lineno() local_unnamed_addr #6 {
  %1 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  ret i32 %1
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local zeroext i8 @zend_is_compiling() local_unnamed_addr #6 {
  %1 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 10), align 1
  ret i8 %1
}

; Function Attrs: nounwind uwtable
define hidden void @zend_del_literal(%7* nocapture %0, i32 %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %7, %7* %0, i64 0, i32 26
  %4 = load %2*, %2** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %2, %2* %4, i64 %5, i32 1
  %7 = bitcast %4* %6 to %65*
  %8 = getelementptr inbounds %65, %65* %7, i64 0, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = and i8 %9, 4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %2, %2* %4, i64 %5
  %14 = bitcast %2* %13 to %66**
  %15 = load %66*, %66** %14, align 8
  %16 = getelementptr inbounds %66, %66* %15, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  store i32 %18, i32* %16, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %12
  %21 = load %66*, %66** %14, align 8
  tail call void @_zval_dtor_func(%66* %21) #16
  br label %22

22:                                               ; preds = %2, %12, %20
  %23 = add nsw i32 %1, 1
  %24 = getelementptr inbounds %7, %7* %0, i64 0, i32 25
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  store i32 %1, i32* %24, align 4
  br label %31

28:                                               ; preds = %22
  %29 = load %2*, %2** %3, align 8
  %30 = getelementptr inbounds %2, %2* %29, i64 %5, i32 1, i32 0
  store i32 0, i32* %30, align 8
  br label %31

31:                                               ; preds = %28, %27
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_add_literal(%7* nocapture %0, %2* nocapture %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %7, %7* %0, i64 0, i32 25
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 4
  %6 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 2), align 8
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %19, label %8

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %6, %2 ]
  %10 = add nsw i32 %9, 16
  %11 = icmp slt i32 %4, %10
  br i1 %11, label %12, label %8

12:                                               ; preds = %8
  store i32 %10, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 2), align 8
  %13 = sext i32 %10 to i64
  %14 = shl nsw i64 %13, 4
  %15 = getelementptr inbounds %7, %7* %0, i64 0, i32 26
  %16 = bitcast %2** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i8* @_erealloc(i8* %17, i64 %14) #18
  store i8* %18, i8** %16, align 8
  br label %19

19:                                               ; preds = %2, %12
  %20 = getelementptr inbounds %2, %2* %1, i64 0, i32 1
  %21 = bitcast %4* %20 to i8*
  %22 = load i8, i8* %21, align 8
  switch i8 %22, label %23 [
    i8 6, label %26
    i8 11, label %26
  ]

23:                                               ; preds = %19
  %24 = getelementptr inbounds %2, %2* %1, i64 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  br label %54

26:                                               ; preds = %19, %19
  %27 = bitcast %2* %1 to %32**
  %28 = load %32*, %32** %27, align 8
  %29 = getelementptr inbounds %32, %32* %28, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %26
  %33 = getelementptr inbounds %32, %32* %28, i64 0, i32 3, i64 0
  %34 = getelementptr inbounds %32, %32* %28, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = tail call i64 @zend_hash_func(i8* nonnull %33, i64 %35) #16
  store i64 %36, i64* %29, align 8
  %37 = load %32*, %32** %27, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi %32* [ %28, %26 ], [ %37, %32 ]
  %40 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %41 = tail call %32* %40(%32* %39) #16
  store %32* %41, %32** %27, align 8
  %42 = getelementptr inbounds %32, %32* %41, i64 0, i32 0, i32 1
  %43 = bitcast %18* %42 to %64*
  %44 = getelementptr inbounds %64, %64* %43, i64 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, 2
  %47 = icmp eq i8 %46, 0
  %48 = ptrtoint %32* %41 to i64
  br i1 %47, label %54, label %49

49:                                               ; preds = %38
  %50 = bitcast %4* %20 to %65*
  %51 = getelementptr inbounds %65, %65* %50, i64 0, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = and i8 %52, -21
  store i8 %53, i8* %51, align 1
  br label %54

54:                                               ; preds = %23, %38, %49
  %55 = phi i64 [ %25, %23 ], [ %48, %38 ], [ %48, %49 ]
  %56 = getelementptr inbounds %7, %7* %0, i64 0, i32 26
  %57 = load %2*, %2** %56, align 8
  %58 = sext i32 %4 to i64
  %59 = getelementptr inbounds %2, %2* %1, i64 0, i32 1, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %2, %2* %57, i64 %58, i32 0, i32 0
  store i64 %55, i64* %61, align 8
  %62 = getelementptr inbounds %2, %2* %57, i64 %58, i32 1, i32 0
  store i32 %60, i32* %62, align 8
  %63 = load %2*, %2** %56, align 8
  %64 = getelementptr inbounds %2, %2* %63, i64 %58, i32 2, i32 0
  store i32 -1, i32* %64, align 4
  ret i32 %4
}

; Function Attrs: allocsize(1)
declare dso_local i8* @_erealloc(i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define hidden void @zend_stop_lexing() local_unnamed_addr #0 {
  %1 = load void (i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)** getelementptr inbounds (%46, %46* @language_scanner_globals, i64 0, i32 19), align 8
  %2 = icmp eq void (i32, i32, i32, i8*)* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds (%46, %46* @language_scanner_globals, i64 0, i32 20), align 8
  tail call void %1(i32 2, i32 0, i32 0, i8* %4) #16
  br label %5

5:                                                ; preds = %0, %3
  %6 = load i64, i64* bitcast (i8** getelementptr inbounds (%46, %46* @language_scanner_globals, i64 0, i32 7) to i64*), align 8
  store i64 %6, i64* bitcast (i8** getelementptr inbounds (%46, %46* @language_scanner_globals, i64 0, i32 5) to i64*), align 8
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_do_free(%37* %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %53 [
    i8 2, label %4
    i8 4, label %54
    i8 1, label %167
  ]

4:                                                ; preds = %1
  %5 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %6 = getelementptr inbounds %7, %7* %5, i64 0, i32 11
  %7 = load %9*, %9** %6, align 8
  %8 = getelementptr inbounds %7, %7* %5, i64 0, i32 10
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %9, %9* %7, i64 %11
  br label %13

13:                                               ; preds = %13, %4
  %14 = phi %9* [ %12, %4 ], [ %18, %13 ]
  %15 = getelementptr inbounds %9, %9* %14, i64 0, i32 6
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 58
  %18 = getelementptr inbounds %9, %9* %14, i64 -1
  br i1 %17, label %13, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %9, %9* %14, i64 0, i32 9
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 2
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = getelementptr inbounds %9, %9* %14, i64 0, i32 3, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %27 = bitcast %38* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %25, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %23
  switch i8 %16, label %31 [
    i8 52, label %53
    i8 13, label %53
  ]

31:                                               ; preds = %30, %23, %19
  %32 = tail call %9* @get_next_op(%7* %5) #16
  %33 = getelementptr inbounds %9, %9* %32, i64 0, i32 6
  store i8 70, i8* %33, align 4
  %34 = icmp eq %37* %0, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %9, %9* %32, i64 0, i32 7
  store i8 8, i8* %36, align 1
  br label %51

37:                                               ; preds = %31
  %38 = load i8, i8* %2, align 8
  %39 = getelementptr inbounds %9, %9* %32, i64 0, i32 7
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i8 %38, 1
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %43 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %44 = tail call i32 @zend_add_literal(%7* %42, %2* nonnull %43) #16
  %45 = getelementptr inbounds %9, %9* %32, i64 0, i32 1, i32 0
  store i32 %44, i32* %45, align 8
  br label %51

46:                                               ; preds = %37
  %47 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %48 = bitcast %38* %47 to i32*
  %49 = getelementptr inbounds %9, %9* %32, i64 0, i32 1, i32 0
  %50 = load i32, i32* %48, align 8
  store i32 %50, i32* %49, align 8
  br label %51

51:                                               ; preds = %35, %41, %46
  %52 = getelementptr inbounds %9, %9* %32, i64 0, i32 8
  store i8 8, i8* %52, align 2
  tail call fastcc void @244(%9* nonnull %32) #16
  br label %53

53:                                               ; preds = %161, %100, %182, %174, %167, %1, %130, %157, %143, %94, %99, %98, %30, %30, %51
  ret void

54:                                               ; preds = %1
  %55 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %56 = getelementptr inbounds %7, %7* %55, i64 0, i32 11
  %57 = load %9*, %9** %56, align 8
  %58 = getelementptr inbounds %7, %7* %55, i64 0, i32 10
  %59 = load i32, i32* %58, align 8
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %9, %9* %57, i64 %61
  br label %63

63:                                               ; preds = %72, %54
  %64 = phi %9* [ %62, %54 ], [ %73, %72 ]
  %65 = getelementptr inbounds %9, %9* %64, i64 0, i32 6
  %66 = load i8, i8* %65, align 4
  switch i8 %66, label %67 [
    i8 58, label %72
    i8 103, label %72
    i8 -119, label %72
  ]

67:                                               ; preds = %63
  %68 = getelementptr inbounds %9, %9* %64, i64 0, i32 6
  %69 = getelementptr inbounds %9, %9* %64, i64 0, i32 9
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 4
  br i1 %71, label %74, label %100

72:                                               ; preds = %63, %63, %63
  %73 = getelementptr inbounds %9, %9* %64, i64 -1
  br label %63

74:                                               ; preds = %67
  %75 = getelementptr inbounds %9, %9* %64, i64 0, i32 3, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %78 = bitcast %38* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %76, %79
  br i1 %80, label %81, label %100

81:                                               ; preds = %74
  switch i8 %66, label %99 [
    i8 80, label %82
    i8 81, label %82
    i8 82, label %82
    i8 -83, label %82
    i8 -72, label %98
  ]

82:                                               ; preds = %81, %81, %81, %81
  %83 = tail call %9* @get_next_op(%7* %55) #16
  %84 = getelementptr inbounds %9, %9* %83, i64 0, i32 6
  store i8 70, i8* %84, align 4
  %85 = load i8, i8* %2, align 8
  %86 = getelementptr inbounds %9, %9* %83, i64 0, i32 7
  store i8 %85, i8* %86, align 1
  %87 = icmp eq i8 %85, 1
  br i1 %87, label %88, label %92

88:                                               ; preds = %82
  %89 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %90 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %91 = tail call i32 @zend_add_literal(%7* %89, %2* nonnull %90) #16
  br label %94

92:                                               ; preds = %82
  %93 = load i32, i32* %78, align 8
  br label %94

94:                                               ; preds = %88, %92
  %95 = phi i32 [ %91, %88 ], [ %93, %92 ]
  %96 = getelementptr inbounds %9, %9* %83, i64 0, i32 1, i32 0
  store i32 %95, i32* %96, align 8
  %97 = getelementptr inbounds %9, %9* %83, i64 0, i32 8
  store i8 8, i8* %97, align 2
  tail call fastcc void @244(%9* nonnull %83) #16
  br label %53

98:                                               ; preds = %81
  store i8 0, i8* %68, align 4
  store i8 8, i8* %69, align 1
  br label %53

99:                                               ; preds = %81
  store i8 8, i8* %69, align 1
  br label %53

100:                                              ; preds = %74, %67
  %101 = icmp ult %9* %64, %57
  br i1 %101, label %53, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %104 = bitcast %38* %103 to i32*
  br label %105

105:                                              ; preds = %164, %102
  %106 = phi i8 [ %66, %102 ], [ %166, %164 ]
  %107 = phi %9* [ %64, %102 ], [ %162, %164 ]
  %108 = icmp eq i8 %106, 98
  br i1 %108, label %109, label %134

109:                                              ; preds = %105
  %110 = getelementptr inbounds %9, %9* %107, i64 0, i32 7
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 4
  br i1 %112, label %113, label %134

113:                                              ; preds = %109
  %114 = getelementptr inbounds %9, %9* %107, i64 0, i32 1, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = load i32, i32* %104, align 8
  %117 = icmp eq i32 %115, %116
  br i1 %117, label %118, label %134

118:                                              ; preds = %113
  %119 = tail call %9* @get_next_op(%7* %55) #16
  %120 = getelementptr inbounds %9, %9* %119, i64 0, i32 6
  store i8 70, i8* %120, align 4
  %121 = load i8, i8* %2, align 8
  %122 = getelementptr inbounds %9, %9* %119, i64 0, i32 7
  store i8 %121, i8* %122, align 1
  %123 = icmp eq i8 %121, 1
  br i1 %123, label %124, label %128

124:                                              ; preds = %118
  %125 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %126 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %127 = tail call i32 @zend_add_literal(%7* %125, %2* nonnull %126) #16
  br label %130

128:                                              ; preds = %118
  %129 = load i32, i32* %104, align 8
  br label %130

130:                                              ; preds = %124, %128
  %131 = phi i32 [ %127, %124 ], [ %129, %128 ]
  %132 = getelementptr inbounds %9, %9* %119, i64 0, i32 1, i32 0
  store i32 %131, i32* %132, align 8
  %133 = getelementptr inbounds %9, %9* %119, i64 0, i32 8
  store i8 8, i8* %133, align 2
  tail call fastcc void @244(%9* nonnull %119) #16
  br label %53

134:                                              ; preds = %113, %109, %105
  %135 = getelementptr inbounds %9, %9* %107, i64 0, i32 9
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 4
  br i1 %137, label %138, label %161

138:                                              ; preds = %134
  %139 = getelementptr inbounds %9, %9* %107, i64 0, i32 3, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = load i32, i32* %104, align 8
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %143, label %161

143:                                              ; preds = %138
  %144 = icmp eq i8 %106, 68
  br i1 %144, label %145, label %53

145:                                              ; preds = %143
  %146 = tail call %9* @get_next_op(%7* %55) #16
  %147 = getelementptr inbounds %9, %9* %146, i64 0, i32 6
  store i8 70, i8* %147, align 4
  %148 = load i8, i8* %2, align 8
  %149 = getelementptr inbounds %9, %9* %146, i64 0, i32 7
  store i8 %148, i8* %149, align 1
  %150 = icmp eq i8 %148, 1
  br i1 %150, label %151, label %155

151:                                              ; preds = %145
  %152 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %153 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %154 = tail call i32 @zend_add_literal(%7* %152, %2* nonnull %153) #16
  br label %157

155:                                              ; preds = %145
  %156 = load i32, i32* %104, align 8
  br label %157

157:                                              ; preds = %151, %155
  %158 = phi i32 [ %154, %151 ], [ %156, %155 ]
  %159 = getelementptr inbounds %9, %9* %146, i64 0, i32 1, i32 0
  store i32 %158, i32* %159, align 8
  %160 = getelementptr inbounds %9, %9* %146, i64 0, i32 8
  store i8 8, i8* %160, align 2
  tail call fastcc void @244(%9* nonnull %146) #16
  br label %53

161:                                              ; preds = %138, %134
  %162 = getelementptr inbounds %9, %9* %107, i64 -1
  %163 = icmp ult %9* %162, %57
  br i1 %163, label %53, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %9, %9* %107, i64 -1, i32 6
  %166 = load i8, i8* %165, align 4
  br label %105

167:                                              ; preds = %1
  %168 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1
  %169 = bitcast %4* %168 to %65*
  %170 = getelementptr inbounds %65, %65* %169, i64 0, i32 1
  %171 = load i8, i8* %170, align 1
  %172 = and i8 %171, 4
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %53, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %176 = bitcast %2* %175 to %66**
  %177 = load %66*, %66** %176, align 8
  %178 = getelementptr inbounds %66, %66* %177, i64 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = add i32 %179, -1
  store i32 %180, i32* %178, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %53

182:                                              ; preds = %174
  %183 = load %66*, %66** %176, align 8
  tail call void @_zval_dtor_func(%66* %183) #16
  br label %53
}

; Function Attrs: nounwind uwtable
define internal fastcc %9* @231(%37* %0, i8 zeroext %1, %37* %2, %37* %3) unnamed_addr #0 {
  %5 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %6 = tail call %9* @get_next_op(%7* %5) #16
  %7 = getelementptr inbounds %9, %9* %6, i64 0, i32 6
  store i8 %1, i8* %7, align 4
  %8 = icmp eq %37* %2, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %9, %9* %6, i64 0, i32 7
  store i8 8, i8* %10, align 1
  br label %26

11:                                               ; preds = %4
  %12 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = getelementptr inbounds %9, %9* %6, i64 0, i32 7
  store i8 %13, i8* %14, align 1
  %15 = icmp eq i8 %13, 1
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %18 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %19 = tail call i32 @zend_add_literal(%7* %17, %2* nonnull %18)
  %20 = getelementptr inbounds %9, %9* %6, i64 0, i32 1, i32 0
  store i32 %19, i32* %20, align 8
  br label %26

21:                                               ; preds = %11
  %22 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %23 = bitcast %38* %22 to i32*
  %24 = getelementptr inbounds %9, %9* %6, i64 0, i32 1, i32 0
  %25 = load i32, i32* %23, align 8
  store i32 %25, i32* %24, align 8
  br label %26

26:                                               ; preds = %16, %21, %9
  %27 = icmp eq %37* %3, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = getelementptr inbounds %9, %9* %6, i64 0, i32 8
  store i8 8, i8* %29, align 2
  br label %45

30:                                               ; preds = %26
  %31 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  %32 = load i8, i8* %31, align 8
  %33 = getelementptr inbounds %9, %9* %6, i64 0, i32 8
  store i8 %32, i8* %33, align 2
  %34 = icmp eq i8 %32, 1
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %37 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %38 = tail call i32 @zend_add_literal(%7* %36, %2* nonnull %37)
  %39 = getelementptr inbounds %9, %9* %6, i64 0, i32 2, i32 0
  store i32 %38, i32* %39, align 4
  br label %45

40:                                               ; preds = %30
  %41 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %42 = bitcast %38* %41 to i32*
  %43 = getelementptr inbounds %9, %9* %6, i64 0, i32 2, i32 0
  %44 = load i32, i32* %42, align 8
  store i32 %44, i32* %43, align 4
  br label %45

45:                                               ; preds = %35, %40, %28
  tail call fastcc void @244(%9* nonnull %6)
  %46 = icmp eq %37* %0, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %9, %9* %6, i64 0, i32 9
  store i8 4, i8* %48, align 1
  %49 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %50 = getelementptr inbounds %7, %7* %49, i64 0, i32 13
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %50, align 4
  %53 = getelementptr inbounds %9, %9* %6, i64 0, i32 3, i32 0
  store i32 %51, i32* %53, align 8
  %54 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %54, align 8
  %55 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %56 = bitcast %38* %55 to i32*
  %57 = load i32, i32* %53, align 8
  store i32 %57, i32* %56, align 8
  br label %58

58:                                               ; preds = %45, %47
  ret %9* %6
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_add_class_modifier(i32 %0, i32 %1) local_unnamed_addr #0 {
  %3 = or i32 %1, %0
  %4 = and i32 %1, %0
  %5 = and i32 %4, 32
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @1, i64 0, i64 0)) #15
  unreachable

8:                                                ; preds = %2
  %9 = and i32 %4, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @2, i64 0, i64 0)) #15
  unreachable

12:                                               ; preds = %8
  %13 = and i32 %3, 36
  %14 = icmp eq i32 %13, 36
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @3, i64 0, i64 0)) #15
  unreachable

16:                                               ; preds = %12
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_add_member_modifier(i32 %0, i32 %1) local_unnamed_addr #0 {
  %3 = or i32 %1, %0
  %4 = and i32 %0, 1792
  %5 = icmp eq i32 %4, 0
  %6 = and i32 %1, 1792
  %7 = icmp eq i32 %6, 0
  %8 = or i1 %5, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @4, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %2
  %11 = and i32 %1, %0
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @1, i64 0, i64 0)) #15
  unreachable

15:                                               ; preds = %10
  %16 = and i32 %11, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @5, i64 0, i64 0)) #15
  unreachable

19:                                               ; preds = %15
  %20 = and i32 %11, 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @2, i64 0, i64 0)) #15
  unreachable

23:                                               ; preds = %19
  %24 = and i32 %3, 6
  %25 = icmp eq i32 %24, 6
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @6, i64 0, i64 0)) #15
  unreachable

27:                                               ; preds = %23
  ret i32 %3
}

; Function Attrs: nounwind uwtable
define hidden noalias %32* @zend_concat3(i8* nocapture readonly %0, i64 %1, i8* nocapture readonly %2, i64 %3, i8* nocapture readonly %4, i64 %5) local_unnamed_addr #0 {
  %7 = add i64 %3, %1
  %8 = add i64 %7, %5
  %9 = add i64 %8, 32
  %10 = and i64 %9, -8
  %11 = tail call noalias i8* @_emalloc(i64 %10) #17
  %12 = bitcast i8* %11 to %32*
  %13 = bitcast i8* %11 to i32*
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 6, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 1 %0, i64 %1, i1 false)
  %21 = getelementptr inbounds %32, %32* %12, i64 0, i32 3, i64 %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %2, i64 %3, i1 false)
  %22 = getelementptr inbounds i8, i8* %21, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* align 1 %4, i64 %5, i1 false)
  %23 = getelementptr inbounds %32, %32* %12, i64 0, i32 3, i64 %8
  store i8 0, i8* %23, align 1
  ret %32* %12
}

; Function Attrs: nounwind uwtable
define hidden noalias %32* @zend_concat_names(i8* nocapture readonly %0, i64 %1, i8* nocapture readonly %2, i64 %3) local_unnamed_addr #0 {
  %5 = add i64 %1, 1
  %6 = add i64 %5, %3
  %7 = add i64 %6, 32
  %8 = and i64 %7, -8
  %9 = tail call noalias i8* @_emalloc(i64 %8) #17
  %10 = bitcast i8* %9 to %32*
  %11 = bitcast i8* %9 to i32*
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 4
  %13 = bitcast i8* %12 to i32*
  store i32 6, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %6, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %9, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 %0, i64 %1, i1 false) #16
  %19 = getelementptr inbounds %32, %32* %10, i64 0, i32 3, i64 %1
  store i8 92, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %19, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %2, i64 %3, i1 false) #16
  %21 = getelementptr inbounds %32, %32* %10, i64 0, i32 3, i64 %6
  store i8 0, i8* %21, align 1
  ret %32* %10
}

; Function Attrs: nounwind uwtable
define hidden %32* @zend_prefix_with_ns(%32* %0) local_unnamed_addr #0 {
  %2 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %3 = icmp eq %32* %2, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %32, %32* %2, i64 0, i32 3, i64 0
  %6 = getelementptr inbounds %32, %32* %2, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %9 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %7, 1
  %12 = add i64 %11, %10
  %13 = add i64 %12, 32
  %14 = and i64 %13, -8
  %15 = tail call noalias i8* @_emalloc(i64 %14) #17
  %16 = bitcast i8* %15 to %32*
  %17 = bitcast i8* %15 to i32*
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 6, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %15, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 16
  %23 = bitcast i8* %22 to i64*
  store i64 %12, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %15, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* nonnull align 1 %5, i64 %7, i1 false) #16
  %25 = getelementptr inbounds %32, %32* %16, i64 0, i32 3, i64 %7
  store i8 92, i8* %25, align 1
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* nonnull align 1 %8, i64 %10, i1 false) #16
  %27 = getelementptr inbounds %32, %32* %16, i64 0, i32 3, i64 %12
  store i8 0, i8* %27, align 1
  br label %39

28:                                               ; preds = %1
  %29 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 1
  %30 = bitcast %18* %29 to %64*
  %31 = getelementptr inbounds %64, %64* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = add i32 %37, 1
  store i32 %38, i32* %36, align 8
  br label %39

39:                                               ; preds = %35, %28, %4
  %40 = phi %32* [ %16, %4 ], [ %0, %28 ], [ %0, %35 ]
  ret %32* %40
}

; Function Attrs: nounwind uwtable
define hidden i8* @zend_hash_find_ptr_lc(%39* %0, i8* %1, i64 %2) local_unnamed_addr #0 {
  %4 = add i64 %2, 32
  %5 = and i64 %4, -8
  %6 = icmp ugt i64 %5, 32768
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call noalias i8* @_emalloc(i64 %5) #17
  br label %11

9:                                                ; preds = %3
  %10 = alloca i8, i64 %5, align 16
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi i8* [ %8, %7 ], [ %10, %9 ]
  %13 = bitcast i8* %12 to %32*
  %14 = bitcast i8* %12 to i32*
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 6, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %12, i64 8
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 16
  %20 = bitcast i8* %19 to i64*
  store i64 %2, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %12, i64 24
  %22 = call i8* @zend_str_tolower_copy(i8* nonnull %21, i8* %1, i64 %2) #16
  %23 = call %2* @zend_hash_find(%39* %0, %32* %13) #16
  %24 = icmp eq %2* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %11
  %26 = bitcast %2* %23 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i8* [ %27, %25 ], [ null, %11 ]
  br i1 %6, label %30, label %31

30:                                               ; preds = %28
  call void @_efree(i8* %12) #16
  br label %31

31:                                               ; preds = %30, %28
  ret i8* %29
}

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @_emalloc(i64) local_unnamed_addr #8

declare dso_local i8* @zend_str_tolower_copy(i8*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden %32* @zend_resolve_non_class_name(%32* %0, i32 %1, i8* nocapture %2, i8 zeroext %3, %39* %4) local_unnamed_addr #0 {
  store i8 0, i8* %2, align 1
  %6 = getelementptr inbounds %32, %32* %0, i64 0, i32 3
  %7 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i64 0, i64 0
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 92
  br i1 %9, label %10, label %28

10:                                               ; preds = %5
  store i8 1, i8* %2, align 1
  %11 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 1
  %12 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -1
  %15 = add i64 %13, 31
  %16 = and i64 %15, -8
  %17 = tail call noalias i8* @_emalloc(i64 %16) #17
  %18 = bitcast i8* %17 to %32*
  %19 = bitcast i8* %17 to i32*
  store i32 1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 6, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %17, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 16
  %25 = bitcast i8* %24 to i64*
  store i64 %14, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 1 %11, i64 %14, i1 false) #16
  %27 = getelementptr inbounds %32, %32* %18, i64 0, i32 3, i64 %14
  store i8 0, i8* %27, align 1
  br label %182

28:                                               ; preds = %5
  switch i32 %1, label %78 [
    i32 0, label %29
    i32 2, label %40
  ]

29:                                               ; preds = %28
  store i8 1, i8* %2, align 1
  %30 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 1
  %31 = bitcast %18* %30 to %64*
  %32 = getelementptr inbounds %64, %64* %31, i64 0, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = and i8 %33, 2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %182

36:                                               ; preds = %29
  %37 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, 1
  store i32 %39, i32* %37, align 8
  br label %182

40:                                               ; preds = %28
  store i8 1, i8* %2, align 1
  %41 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %42 = icmp eq %32* %41, null
  br i1 %42, label %67, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %32, %32* %41, i64 0, i32 3, i64 0
  %45 = getelementptr inbounds %32, %32* %41, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %48 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %46, 1
  %51 = add i64 %50, %49
  %52 = add i64 %51, 32
  %53 = and i64 %52, -8
  %54 = tail call noalias i8* @_emalloc(i64 %53) #17
  %55 = bitcast i8* %54 to %32*
  %56 = bitcast i8* %54 to i32*
  store i32 1, i32* %56, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 4
  %58 = bitcast i8* %57 to i32*
  store i32 6, i32* %58, align 4
  %59 = getelementptr inbounds i8, i8* %54, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %54, i64 16
  %62 = bitcast i8* %61 to i64*
  store i64 %51, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %54, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* nonnull align 1 %44, i64 %46, i1 false) #16
  %64 = getelementptr inbounds %32, %32* %55, i64 0, i32 3, i64 %46
  store i8 92, i8* %64, align 1
  %65 = getelementptr inbounds i8, i8* %64, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* nonnull align 1 %47, i64 %49, i1 false) #16
  %66 = getelementptr inbounds %32, %32* %55, i64 0, i32 3, i64 %51
  store i8 0, i8* %66, align 1
  br label %182

67:                                               ; preds = %40
  %68 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 1
  %69 = bitcast %18* %68 to %64*
  %70 = getelementptr inbounds %64, %64* %69, i64 0, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = and i8 %71, 2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %182

74:                                               ; preds = %67
  %75 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  store i32 %77, i32* %75, align 8
  br label %182

78:                                               ; preds = %28
  %79 = icmp eq %39* %4, null
  br i1 %79, label %105, label %80

80:                                               ; preds = %78
  %81 = icmp eq i8 %3, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %80
  %83 = tail call %2* @zend_hash_find(%39* nonnull %4, %32* nonnull %0) #16
  %84 = icmp eq %2* %83, null
  br i1 %84, label %105, label %85

85:                                               ; preds = %82
  %86 = bitcast %2* %83 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %92

88:                                               ; preds = %80
  %89 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %90 = load i64, i64* %89, align 8
  %91 = tail call i8* @zend_hash_find_ptr_lc(%39* nonnull %4, i8* nonnull %7, i64 %90)
  br label %92

92:                                               ; preds = %85, %88
  %93 = phi i8* [ %91, %88 ], [ %87, %85 ]
  %94 = icmp eq i8* %93, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = bitcast i8* %93 to %32*
  store i8 1, i8* %2, align 1
  %97 = getelementptr inbounds i8, i8* %93, i64 5
  %98 = load i8, i8* %97, align 1
  %99 = and i8 %98, 2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %182

101:                                              ; preds = %95
  %102 = bitcast i8* %93 to i32*
  %103 = load i32, i32* %102, align 8
  %104 = add i32 %103, 1
  store i32 %104, i32* %102, align 8
  br label %182

105:                                              ; preds = %82, %92, %78
  %106 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %107 = load i64, i64* %106, align 8
  %108 = tail call i8* @memchr(i8* nonnull %7, i32 92, i64 %107) #19
  %109 = icmp eq i8* %108, null
  br i1 %109, label %145, label %110

110:                                              ; preds = %105
  store i8 1, i8* %2, align 1
  %111 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5), align 8
  %112 = icmp eq %39* %111, null
  br i1 %112, label %145, label %113

113:                                              ; preds = %110
  %114 = ptrtoint i8* %108 to i64
  %115 = ptrtoint [1 x i8]* %6 to i64
  %116 = sub i64 %114, %115
  %117 = tail call i8* @zend_hash_find_ptr_lc(%39* nonnull %111, i8* nonnull %7, i64 %116)
  %118 = icmp eq i8* %117, null
  br i1 %118, label %145, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds i8, i8* %117, i64 24
  %121 = getelementptr inbounds i8, i8* %117, i64 16
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds i8, i8* %108, i64 1
  %125 = load i64, i64* %106, align 8
  %126 = xor i64 %116, -1
  %127 = add i64 %125, %126
  %128 = add i64 %123, 1
  %129 = add i64 %128, %127
  %130 = add i64 %129, 32
  %131 = and i64 %130, -8
  %132 = tail call noalias i8* @_emalloc(i64 %131) #17
  %133 = bitcast i8* %132 to %32*
  %134 = bitcast i8* %132 to i32*
  store i32 1, i32* %134, align 8
  %135 = getelementptr inbounds i8, i8* %132, i64 4
  %136 = bitcast i8* %135 to i32*
  store i32 6, i32* %136, align 4
  %137 = getelementptr inbounds i8, i8* %132, i64 8
  %138 = bitcast i8* %137 to i64*
  store i64 0, i64* %138, align 8
  %139 = getelementptr inbounds i8, i8* %132, i64 16
  %140 = bitcast i8* %139 to i64*
  store i64 %129, i64* %140, align 8
  %141 = getelementptr inbounds i8, i8* %132, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* nonnull align 1 %120, i64 %123, i1 false) #16
  %142 = getelementptr inbounds %32, %32* %133, i64 0, i32 3, i64 %123
  store i8 92, i8* %142, align 1
  %143 = getelementptr inbounds i8, i8* %142, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %143, i8* nonnull align 1 %124, i64 %127, i1 false) #16
  %144 = getelementptr inbounds %32, %32* %133, i64 0, i32 3, i64 %129
  store i8 0, i8* %144, align 1
  br label %182

145:                                              ; preds = %110, %105, %113
  %146 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %147 = icmp eq %32* %146, null
  br i1 %147, label %171, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %32, %32* %146, i64 0, i32 3, i64 0
  %150 = getelementptr inbounds %32, %32* %146, i64 0, i32 2
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %153 = load i64, i64* %106, align 8
  %154 = add i64 %151, 1
  %155 = add i64 %154, %153
  %156 = add i64 %155, 32
  %157 = and i64 %156, -8
  %158 = tail call noalias i8* @_emalloc(i64 %157) #17
  %159 = bitcast i8* %158 to %32*
  %160 = bitcast i8* %158 to i32*
  store i32 1, i32* %160, align 8
  %161 = getelementptr inbounds i8, i8* %158, i64 4
  %162 = bitcast i8* %161 to i32*
  store i32 6, i32* %162, align 4
  %163 = getelementptr inbounds i8, i8* %158, i64 8
  %164 = bitcast i8* %163 to i64*
  store i64 0, i64* %164, align 8
  %165 = getelementptr inbounds i8, i8* %158, i64 16
  %166 = bitcast i8* %165 to i64*
  store i64 %155, i64* %166, align 8
  %167 = getelementptr inbounds i8, i8* %158, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* nonnull align 1 %149, i64 %151, i1 false) #16
  %168 = getelementptr inbounds %32, %32* %159, i64 0, i32 3, i64 %151
  store i8 92, i8* %168, align 1
  %169 = getelementptr inbounds i8, i8* %168, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* nonnull align 1 %152, i64 %153, i1 false) #16
  %170 = getelementptr inbounds %32, %32* %159, i64 0, i32 3, i64 %155
  store i8 0, i8* %170, align 1
  br label %182

171:                                              ; preds = %145
  %172 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 1
  %173 = bitcast %18* %172 to %64*
  %174 = getelementptr inbounds %64, %64* %173, i64 0, i32 1
  %175 = load i8, i8* %174, align 1
  %176 = and i8 %175, 2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %171
  %179 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = add i32 %180, 1
  store i32 %181, i32* %179, align 8
  br label %182

182:                                              ; preds = %178, %171, %148, %119, %95, %101, %74, %67, %43, %36, %29, %10
  %183 = phi %32* [ %18, %10 ], [ %133, %119 ], [ %0, %29 ], [ %0, %36 ], [ %55, %43 ], [ %0, %67 ], [ %0, %74 ], [ %96, %95 ], [ %96, %101 ], [ %159, %148 ], [ %0, %171 ], [ %0, %178 ]
  ret %32* %183
}

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

; Function Attrs: nounwind uwtable
define hidden %32* @zend_resolve_function_name(%32* %0, i32 %1, i8* nocapture %2) local_unnamed_addr #0 {
  %4 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), align 8
  %5 = tail call %32* @zend_resolve_non_class_name(%32* %0, i32 %1, i8* %2, i8 zeroext 0, %39* %4)
  ret %32* %5
}

; Function Attrs: nounwind uwtable
define hidden %32* @zend_resolve_const_name(%32* %0, i32 %1, i8* nocapture %2) local_unnamed_addr #0 {
  %4 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), align 8
  %5 = tail call %32* @zend_resolve_non_class_name(%32* %0, i32 %1, i8* %2, i8 zeroext 1, %39* %4)
  ret %32* %5
}

; Function Attrs: nounwind uwtable
define hidden %32* @zend_resolve_class_name(%32* %0, i32 %1) local_unnamed_addr #0 {
  switch i32 %1, label %41 [
    i32 2, label %3
    i32 0, label %46
  ]

3:                                                ; preds = %2
  %4 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %5 = icmp eq %32* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %32, %32* %4, i64 0, i32 3, i64 0
  %8 = getelementptr inbounds %32, %32* %4, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %11 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %9, 1
  %14 = add i64 %13, %12
  %15 = add i64 %14, 32
  %16 = and i64 %15, -8
  %17 = tail call noalias i8* @_emalloc(i64 %16) #17
  %18 = bitcast i8* %17 to %32*
  %19 = bitcast i8* %17 to i32*
  store i32 1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 6, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %17, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 16
  %25 = bitcast i8* %24 to i64*
  store i64 %14, i64* %25, align 8
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 1 %7, i64 %9, i1 false) #16
  %27 = getelementptr inbounds %32, %32* %18, i64 0, i32 3, i64 %9
  store i8 92, i8* %27, align 1
  %28 = getelementptr inbounds i8, i8* %27, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %10, i64 %12, i1 false) #16
  %29 = getelementptr inbounds %32, %32* %18, i64 0, i32 3, i64 %14
  store i8 0, i8* %29, align 1
  br label %196

30:                                               ; preds = %3
  %31 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 1
  %32 = bitcast %18* %31 to %64*
  %33 = getelementptr inbounds %64, %64* %32, i64 0, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, 2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %196

37:                                               ; preds = %30
  %38 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 8
  br label %196

41:                                               ; preds = %2
  %42 = getelementptr inbounds %32, %32* %0, i64 0, i32 3
  %43 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i64 0, i64 0
  %44 = load i8, i8* %43, align 8
  %45 = icmp eq i8 %44, 92
  br i1 %45, label %50, label %105

46:                                               ; preds = %2
  %47 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %48 = load i8, i8* %47, align 8
  %49 = icmp eq i8 %48, 92
  br i1 %49, label %50, label %68

50:                                               ; preds = %41, %46
  %51 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 1
  %52 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, -1
  %55 = add i64 %53, 31
  %56 = and i64 %55, -8
  %57 = tail call noalias i8* @_emalloc(i64 %56) #17
  %58 = bitcast i8* %57 to %32*
  %59 = bitcast i8* %57 to i32*
  store i32 1, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %57, i64 4
  %61 = bitcast i8* %60 to i32*
  store i32 6, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %57, i64 8
  %63 = bitcast i8* %62 to i64*
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds i8, i8* %57, i64 16
  %65 = bitcast i8* %64 to i64*
  store i64 %54, i64* %65, align 8
  %66 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* nonnull align 1 %51, i64 %54, i1 false) #16
  %67 = getelementptr inbounds %32, %32* %58, i64 0, i32 3, i64 %54
  store i8 0, i8* %67, align 1
  br label %79

68:                                               ; preds = %46
  %69 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 1
  %70 = bitcast %18* %69 to %64*
  %71 = getelementptr inbounds %64, %64* %70, i64 0, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = and i8 %72, 2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %68
  %76 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 8
  br label %79

79:                                               ; preds = %75, %68, %50
  %80 = phi %32* [ %58, %50 ], [ %0, %68 ], [ %0, %75 ]
  %81 = getelementptr inbounds %32, %32* %80, i64 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 4
  br i1 %83, label %84, label %90

84:                                               ; preds = %79
  %85 = getelementptr inbounds %32, %32* %80, i64 0, i32 3, i64 0
  %86 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %85, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %103, label %88

88:                                               ; preds = %84
  %89 = load i64, i64* %81, align 8
  br label %90

90:                                               ; preds = %88, %79
  %91 = phi i64 [ %89, %88 ], [ %82, %79 ]
  %92 = icmp eq i64 %91, 6
  br i1 %92, label %93, label %196

93:                                               ; preds = %90
  %94 = getelementptr inbounds %32, %32* %80, i64 0, i32 3, i64 0
  %95 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %94, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = load i64, i64* %81, align 8
  %99 = icmp eq i64 %98, 6
  br i1 %99, label %100, label %196

100:                                              ; preds = %97
  %101 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %94, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %196

103:                                              ; preds = %84, %93, %100
  %104 = phi i8* [ %85, %84 ], [ %94, %93 ], [ %94, %100 ]
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @7, i64 0, i64 0), i8* nonnull %104) #15
  unreachable

105:                                              ; preds = %41
  %106 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5), align 8
  %107 = icmp eq %39* %106, null
  br i1 %107, label %158, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %110 = load i64, i64* %109, align 8
  %111 = tail call i8* @memchr(i8* nonnull %43, i32 92, i64 %110) #19
  %112 = icmp eq i8* %111, null
  br i1 %112, label %145, label %113

113:                                              ; preds = %108
  %114 = ptrtoint i8* %111 to i64
  %115 = ptrtoint [1 x i8]* %42 to i64
  %116 = sub i64 %114, %115
  %117 = tail call i8* @zend_hash_find_ptr_lc(%39* nonnull %106, i8* nonnull %43, i64 %116)
  %118 = icmp eq i8* %117, null
  br i1 %118, label %158, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds i8, i8* %117, i64 24
  %121 = getelementptr inbounds i8, i8* %117, i64 16
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds i8, i8* %111, i64 1
  %125 = load i64, i64* %109, align 8
  %126 = xor i64 %116, -1
  %127 = add i64 %125, %126
  %128 = add i64 %123, 1
  %129 = add i64 %128, %127
  %130 = add i64 %129, 32
  %131 = and i64 %130, -8
  %132 = tail call noalias i8* @_emalloc(i64 %131) #17
  %133 = bitcast i8* %132 to %32*
  %134 = bitcast i8* %132 to i32*
  store i32 1, i32* %134, align 8
  %135 = getelementptr inbounds i8, i8* %132, i64 4
  %136 = bitcast i8* %135 to i32*
  store i32 6, i32* %136, align 4
  %137 = getelementptr inbounds i8, i8* %132, i64 8
  %138 = bitcast i8* %137 to i64*
  store i64 0, i64* %138, align 8
  %139 = getelementptr inbounds i8, i8* %132, i64 16
  %140 = bitcast i8* %139 to i64*
  store i64 %129, i64* %140, align 8
  %141 = getelementptr inbounds i8, i8* %132, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* nonnull align 1 %120, i64 %123, i1 false) #16
  %142 = getelementptr inbounds %32, %32* %133, i64 0, i32 3, i64 %123
  store i8 92, i8* %142, align 1
  %143 = getelementptr inbounds i8, i8* %142, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %143, i8* nonnull align 1 %124, i64 %127, i1 false) #16
  %144 = getelementptr inbounds %32, %32* %133, i64 0, i32 3, i64 %129
  store i8 0, i8* %144, align 1
  br label %196

145:                                              ; preds = %108
  %146 = tail call i8* @zend_hash_find_ptr_lc(%39* nonnull %106, i8* nonnull %43, i64 %110)
  %147 = icmp eq i8* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %145
  %149 = bitcast i8* %146 to %32*
  %150 = getelementptr inbounds i8, i8* %146, i64 5
  %151 = load i8, i8* %150, align 1
  %152 = and i8 %151, 2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %196

154:                                              ; preds = %148
  %155 = bitcast i8* %146 to i32*
  %156 = load i32, i32* %155, align 8
  %157 = add i32 %156, 1
  store i32 %157, i32* %155, align 8
  br label %196

158:                                              ; preds = %113, %145, %105
  %159 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %160 = icmp eq %32* %159, null
  br i1 %160, label %185, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %32, %32* %159, i64 0, i32 3, i64 0
  %163 = getelementptr inbounds %32, %32* %159, i64 0, i32 2
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %166 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %167 = load i64, i64* %166, align 8
  %168 = add i64 %164, 1
  %169 = add i64 %168, %167
  %170 = add i64 %169, 32
  %171 = and i64 %170, -8
  %172 = tail call noalias i8* @_emalloc(i64 %171) #17
  %173 = bitcast i8* %172 to %32*
  %174 = bitcast i8* %172 to i32*
  store i32 1, i32* %174, align 8
  %175 = getelementptr inbounds i8, i8* %172, i64 4
  %176 = bitcast i8* %175 to i32*
  store i32 6, i32* %176, align 4
  %177 = getelementptr inbounds i8, i8* %172, i64 8
  %178 = bitcast i8* %177 to i64*
  store i64 0, i64* %178, align 8
  %179 = getelementptr inbounds i8, i8* %172, i64 16
  %180 = bitcast i8* %179 to i64*
  store i64 %169, i64* %180, align 8
  %181 = getelementptr inbounds i8, i8* %172, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %181, i8* nonnull align 1 %162, i64 %164, i1 false) #16
  %182 = getelementptr inbounds %32, %32* %173, i64 0, i32 3, i64 %164
  store i8 92, i8* %182, align 1
  %183 = getelementptr inbounds i8, i8* %182, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %183, i8* nonnull align 1 %165, i64 %167, i1 false) #16
  %184 = getelementptr inbounds %32, %32* %173, i64 0, i32 3, i64 %169
  store i8 0, i8* %184, align 1
  br label %196

185:                                              ; preds = %158
  %186 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 1
  %187 = bitcast %18* %186 to %64*
  %188 = getelementptr inbounds %64, %64* %187, i64 0, i32 1
  %189 = load i8, i8* %188, align 1
  %190 = and i8 %189, 2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %185
  %193 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 0
  %194 = load i32, i32* %193, align 8
  %195 = add i32 %194, 1
  store i32 %195, i32* %193, align 8
  br label %196

196:                                              ; preds = %154, %148, %192, %185, %161, %119, %100, %97, %90, %37, %30, %6
  %197 = phi %32* [ %133, %119 ], [ %18, %6 ], [ %0, %30 ], [ %0, %37 ], [ %80, %90 ], [ %80, %97 ], [ %80, %100 ], [ %173, %161 ], [ %0, %185 ], [ %0, %192 ], [ %149, %148 ], [ %149, %154 ]
  ret %32* %197
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_get_class_fetch_type(%32* %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %7 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %6, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %5
  %10 = load i64, i64* %2, align 8
  br label %11

11:                                               ; preds = %9, %1
  %12 = phi i64 [ %10, %9 ], [ %3, %1 ]
  %13 = icmp eq i64 %12, 6
  br i1 %13, label %14, label %25

14:                                               ; preds = %11
  %15 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %16 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %15, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %14
  %19 = load i64, i64* %2, align 8
  %20 = icmp eq i64 %19, 6
  br i1 %20, label %21, label %25

21:                                               ; preds = %18
  %22 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  %23 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %22, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %11, %21, %18
  br label %26

26:                                               ; preds = %21, %14, %5, %25
  %27 = phi i32 [ 0, %25 ], [ 1, %5 ], [ 2, %14 ], [ 3, %21 ]
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define hidden %32* @zend_resolve_class_name_ast(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %3 = getelementptr inbounds [1 x %43*], [1 x %43*]* %2, i64 1
  %4 = bitcast [1 x %43*]* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 6
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

8:                                                ; preds = %1
  %9 = bitcast [1 x %43*]* %2 to %32**
  %10 = load %32*, %32** %9, align 8
  %11 = getelementptr inbounds %43, %43* %0, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  %14 = tail call %32* @zend_resolve_class_name(%32* %10, i32 %13)
  ret %32* %14
}

; Function Attrs: norecurse nounwind uwtable
define dso_local void @function_add_ref(%6* nocapture %0) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %43 [
    i8 2, label %4
    i8 1, label %28
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 9
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = load i32, i32* %6, align 4
  %10 = add i32 %9, 1
  store i32 %10, i32* %6, align 4
  br label %11

11:                                               ; preds = %4, %8
  %12 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 19
  %13 = load %39*, %39** %12, align 8
  %14 = icmp eq %39* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %39, %39* %13, i64 0, i32 0, i32 1
  %17 = bitcast %18* %16 to %64*
  %18 = getelementptr inbounds %64, %64* %17, i64 0, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = and i8 %19, 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %15
  %23 = getelementptr inbounds %39, %39* %13, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  store i32 %25, i32* %23, align 8
  br label %26

26:                                               ; preds = %15, %11, %22
  %27 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 28
  store i8** null, i8*** %27, align 8
  br label %43

28:                                               ; preds = %1
  %29 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 3
  %30 = load %32*, %32** %29, align 8
  %31 = icmp eq %32* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %32, %32* %30, i64 0, i32 0, i32 1
  %34 = bitcast %18* %33 to %64*
  %35 = getelementptr inbounds %64, %64* %34, i64 0, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = getelementptr inbounds %32, %32* %30, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, 1
  store i32 %42, i32* %40, align 8
  br label %43

43:                                               ; preds = %39, %32, %1, %28, %26
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @do_bind_function(%7* nocapture readonly %0, %9* nocapture readonly %1, %39* %2, i8 zeroext %3) local_unnamed_addr #0 {
  %5 = alloca %2, align 8
  %6 = icmp eq i8 %3, 0
  %7 = getelementptr inbounds %7, %7* %0, i64 0, i32 26
  %8 = load %2*, %2** %7, align 8
  br i1 %6, label %15, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %9, %9* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %2, %2* %8, i64 %12
  %14 = getelementptr inbounds %2, %2* %13, i64 1
  br label %24

15:                                               ; preds = %4
  %16 = bitcast %2* %8 to i8*
  %17 = getelementptr inbounds %9, %9* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  %21 = bitcast i8* %20 to %2*
  %22 = getelementptr inbounds i8, i8* %20, i64 16
  %23 = bitcast i8* %22 to %2*
  br label %24

24:                                               ; preds = %15, %9
  %25 = phi %2* [ %14, %9 ], [ %23, %15 ]
  %26 = phi %2* [ %13, %9 ], [ %21, %15 ]
  %27 = bitcast %2* %25 to %32**
  %28 = load %32*, %32** %27, align 8
  %29 = tail call %2* @zend_hash_find(%39* %2, %32* %28) #16
  %30 = icmp eq %2* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %2* %29 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %24, %31
  %35 = phi i8* [ %33, %31 ], [ null, %24 ]
  %36 = load %44*, %44** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 23), align 8
  %37 = getelementptr inbounds %44, %44* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %44, %44* %36, i64 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = ptrtoint i8* %38 to i64
  %43 = sub i64 %41, %42
  %44 = icmp ult i64 %43, 224
  br i1 %44, label %47, label %45

45:                                               ; preds = %34
  %46 = getelementptr inbounds i8, i8* %38, i64 224
  store i8* %46, i8** %37, align 8
  br label %61

47:                                               ; preds = %34
  %48 = ptrtoint %44* %36 to i64
  %49 = sub i64 %41, %48
  %50 = icmp ugt i64 %49, 248
  %51 = select i1 %50, i64 %49, i64 248
  %52 = tail call noalias i8* @_emalloc(i64 %51) #17
  %53 = getelementptr inbounds i8, i8* %52, i64 24
  %54 = getelementptr inbounds i8, i8* %52, i64 248
  %55 = bitcast i8* %52 to i8**
  store i8* %54, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %52, i64 %51
  %57 = getelementptr inbounds i8, i8* %52, i64 8
  %58 = bitcast i8* %57 to i8**
  store i8* %56, i8** %58, align 8
  %59 = getelementptr inbounds i8, i8* %52, i64 16
  %60 = bitcast i8* %59 to %44**
  store %44* %36, %44** %60, align 8
  store i8* %52, i8** bitcast (%44** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 23) to i8**), align 8
  br label %61

61:                                               ; preds = %45, %47
  %62 = phi i8* [ %38, %45 ], [ %53, %47 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %35, i64 224, i1 false)
  %63 = bitcast %2* %26 to %32**
  %64 = load %32*, %32** %63, align 8
  %65 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #16
  %66 = bitcast %2* %5 to i8**
  store i8* %62, i8** %66, align 8
  %67 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 17, i32* %67, align 8
  %68 = call %2* @_zend_hash_add(%39* %2, %32* %64, %2* nonnull %5) #16
  %69 = icmp eq %2* %68, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #16
  br label %75

71:                                               ; preds = %61
  %72 = bitcast %2* %68 to i8**
  %73 = load i8*, i8** %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #16
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %111

75:                                               ; preds = %70, %71
  %76 = select i1 %6, i32 1, i32 64
  %77 = load %32*, %32** %63, align 8
  %78 = call %2* @zend_hash_find(%39* %2, %32* %77) #16
  %79 = icmp eq %2* %78, null
  br i1 %79, label %106, label %80

80:                                               ; preds = %75
  %81 = bitcast %2* %78 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %106, label %84

84:                                               ; preds = %80
  %85 = load i8, i8* %82, align 8
  %86 = icmp eq i8 %85, 2
  br i1 %86, label %87, label %106

87:                                               ; preds = %84
  %88 = getelementptr inbounds i8, i8* %82, i64 56
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds i8, i8* %35, i64 8
  %94 = bitcast i8* %93 to %32**
  %95 = load %32*, %32** %94, align 8
  %96 = getelementptr inbounds %32, %32* %95, i64 0, i32 3, i64 0
  %97 = getelementptr inbounds i8, i8* %82, i64 120
  %98 = bitcast i8* %97 to %32**
  %99 = load %32*, %32** %98, align 8
  %100 = getelementptr inbounds %32, %32* %99, i64 0, i32 3, i64 0
  %101 = getelementptr inbounds i8, i8* %82, i64 64
  %102 = bitcast i8* %101 to %9**
  %103 = load %9*, %9** %102, align 8
  %104 = getelementptr inbounds %9, %9* %103, i64 0, i32 5
  %105 = load i32, i32* %104, align 8
  call void (i32, i8*, ...) @zend_error_noreturn(i32 %76, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @9, i64 0, i64 0), i8* nonnull %96, i8* nonnull %100, i32 %105) #15
  unreachable

106:                                              ; preds = %75, %87, %80, %84
  %107 = getelementptr inbounds i8, i8* %35, i64 8
  %108 = bitcast i8* %107 to %32**
  %109 = load %32*, %32** %108, align 8
  %110 = getelementptr inbounds %32, %32* %109, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 %76, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @10, i64 0, i64 0), i8* nonnull %110) #15
  unreachable

111:                                              ; preds = %71
  %112 = getelementptr inbounds i8, i8* %35, i64 48
  %113 = bitcast i8* %112 to i32**
  %114 = load i32*, i32** %113, align 8
  %115 = icmp eq i32* %114, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %111
  %117 = load i32, i32* %114, align 4
  %118 = add i32 %117, 1
  store i32 %118, i32* %114, align 4
  br label %119

119:                                              ; preds = %111, %116
  %120 = getelementptr inbounds i8, i8* %35, i64 112
  %121 = bitcast i8* %120 to %39**
  store %39* null, %39** %121, align 8
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local %1* @do_bind_class(%7* nocapture readonly %0, %9* nocapture readonly %1, %39* %2, i8 zeroext %3) local_unnamed_addr #0 {
  %5 = alloca %2, align 8
  %6 = icmp ne i8 %3, 0
  %7 = getelementptr inbounds %7, %7* %0, i64 0, i32 26
  %8 = load %2*, %2** %7, align 8
  br i1 %6, label %9, label %15

9:                                                ; preds = %4
  %10 = getelementptr inbounds %9, %9* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %2, %2* %8, i64 %12
  %14 = getelementptr inbounds %2, %2* %13, i64 1
  br label %24

15:                                               ; preds = %4
  %16 = bitcast %2* %8 to i8*
  %17 = getelementptr inbounds %9, %9* %1, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  %21 = bitcast i8* %20 to %2*
  %22 = getelementptr inbounds i8, i8* %20, i64 16
  %23 = bitcast i8* %22 to %2*
  br label %24

24:                                               ; preds = %15, %9
  %25 = phi %2* [ %13, %9 ], [ %21, %15 ]
  %26 = phi %2* [ %14, %9 ], [ %23, %15 ]
  %27 = bitcast %2* %26 to %32**
  %28 = load %32*, %32** %27, align 8
  %29 = tail call %2* @zend_hash_find(%39* %2, %32* %28) #16
  %30 = bitcast %2* %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast i8* %31 to %1*
  %33 = getelementptr inbounds i8, i8* %31, i64 24
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %34, align 8
  %37 = bitcast %2* %25 to %32**
  %38 = load %32*, %32** %37, align 8
  %39 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #16
  %40 = bitcast %2* %5 to i8**
  store i8* %31, i8** %40, align 8
  %41 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 17, i32* %41, align 8
  %42 = call %2* @_zend_hash_add(%39* %2, %32* %38, %2* nonnull %5) #16
  %43 = icmp eq %2* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #16
  br label %49

45:                                               ; preds = %24
  %46 = bitcast %2* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #16
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %58

49:                                               ; preds = %44, %45
  %50 = load i32, i32* %34, align 8
  %51 = add nsw i32 %50, -1
  store i32 %51, i32* %34, align 8
  br i1 %6, label %65, label %52

52:                                               ; preds = %49
  %53 = call i8* @zend_get_object_type(%1* nonnull %32) #16
  %54 = getelementptr inbounds i8, i8* %31, i64 8
  %55 = bitcast i8* %54 to %32**
  %56 = load %32*, %32** %55, align 8
  %57 = getelementptr inbounds %32, %32* %56, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @11, i64 0, i64 0), i8* %53, i8* nonnull %57) #15
  unreachable

58:                                               ; preds = %45
  %59 = getelementptr inbounds i8, i8* %31, i64 28
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 4718656
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %58
  call void @zend_verify_abstract_class(%1* nonnull %32) #16
  br label %65

65:                                               ; preds = %64, %58, %49
  %66 = phi %1* [ null, %49 ], [ %32, %58 ], [ %32, %64 ]
  ret %1* %66
}

declare dso_local i8* @zend_get_object_type(%1*) local_unnamed_addr #3

declare dso_local void @zend_verify_abstract_class(%1*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local %1* @do_bind_inherited_class(%7* nocapture readonly %0, %9* nocapture readonly %1, %39* %2, %1* %3, i8 zeroext %4) local_unnamed_addr #0 {
  %6 = alloca %2, align 8
  %7 = icmp ne i8 %4, 0
  %8 = getelementptr inbounds %7, %7* %0, i64 0, i32 26
  %9 = load %2*, %2** %8, align 8
  br i1 %7, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %9, %9* %1, i64 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %2, %2* %9, i64 %13
  %15 = getelementptr inbounds %2, %2* %14, i64 1
  br label %25

16:                                               ; preds = %5
  %17 = bitcast %2* %9 to i8*
  %18 = getelementptr inbounds %9, %9* %1, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %17, i64 %20
  %22 = bitcast i8* %21 to %2*
  %23 = getelementptr inbounds i8, i8* %21, i64 16
  %24 = bitcast i8* %23 to %2*
  br label %25

25:                                               ; preds = %16, %10
  %26 = phi %2* [ %14, %10 ], [ %22, %16 ]
  %27 = phi %2* [ %15, %10 ], [ %24, %16 ]
  %28 = bitcast %2* %27 to %32**
  %29 = load %32*, %32** %28, align 8
  %30 = tail call %2* @zend_hash_find(%39* %2, %32* %29) #16
  %31 = icmp eq %2* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %25
  %33 = bitcast %2* %30 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast i8* %34 to %1*
  %36 = icmp eq i8* %34, null
  br i1 %36, label %37, label %44

37:                                               ; preds = %25, %32
  br i1 %7, label %77, label %38

38:                                               ; preds = %37
  %39 = bitcast %2* %26 to %16**
  %40 = load %16*, %16** %39, align 8
  %41 = getelementptr inbounds %16, %16* %40, i64 0, i32 2
  %42 = load %1*, %1** %41, align 8
  %43 = tail call i8* @zend_get_object_type(%1* %42) #16
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @12, i64 0, i64 0), i8* %43) #15
  unreachable

44:                                               ; preds = %32
  %45 = bitcast %2* %26 to %32**
  %46 = load %32*, %32** %45, align 8
  %47 = tail call zeroext i8 @zend_hash_exists(%39* %2, %32* %46) #16
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = tail call i8* @zend_get_object_type(%1* %35) #16
  %51 = getelementptr inbounds i8, i8* %34, i64 8
  %52 = bitcast i8* %51 to %32**
  %53 = load %32*, %32** %52, align 8
  %54 = getelementptr inbounds %32, %32* %53, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @11, i64 0, i64 0), i8* %50, i8* nonnull %54) #15
  unreachable

55:                                               ; preds = %44
  tail call void @zend_do_inheritance(%1* %35, %1* %3) #16
  %56 = getelementptr inbounds i8, i8* %34, i64 24
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %57, align 8
  %60 = load %32*, %32** %45, align 8
  %61 = bitcast %2* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #16
  %62 = bitcast %2* %6 to i8**
  store i8* %34, i8** %62, align 8
  %63 = getelementptr inbounds %2, %2* %6, i64 0, i32 1, i32 0
  store i32 17, i32* %63, align 8
  %64 = call %2* @_zend_hash_add(%39* %2, %32* %60, %2* nonnull %6) #16
  %65 = icmp eq %2* %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #16
  br label %71

67:                                               ; preds = %55
  %68 = bitcast %2* %64 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #16
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %77

71:                                               ; preds = %66, %67
  %72 = call i8* @zend_get_object_type(%1* nonnull %35) #16
  %73 = getelementptr inbounds i8, i8* %34, i64 8
  %74 = bitcast i8* %73 to %32**
  %75 = load %32*, %32** %74, align 8
  %76 = getelementptr inbounds %32, %32* %75, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @11, i64 0, i64 0), i8* %72, i8* nonnull %76) #15
  unreachable

77:                                               ; preds = %67, %37
  %78 = phi %1* [ null, %37 ], [ %35, %67 ]
  ret %1* %78
}

declare dso_local zeroext i8 @zend_hash_exists(%39*, %32*) local_unnamed_addr #3

declare dso_local void @zend_do_inheritance(%1*, %1*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_do_early_binding() local_unnamed_addr #0 {
  %1 = alloca %2, align 8
  %2 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %3 = getelementptr inbounds %7, %7* %2, i64 0, i32 11
  %4 = load %9*, %9** %3, align 8
  %5 = getelementptr inbounds %7, %7* %2, i64 0, i32 10
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %9, %9* %4, i64 %8
  br label %10

10:                                               ; preds = %16, %0
  %11 = phi %9* [ %9, %0 ], [ %17, %16 ]
  %12 = getelementptr inbounds %9, %9* %11, i64 0, i32 6
  %13 = load i8, i8* %12, align 4
  switch i8 %13, label %158 [
    i8 105, label %14
    i8 -115, label %18
    i8 -117, label %22
    i8 -116, label %64
    i8 -110, label %242
    i8 -112, label %242
    i8 -102, label %242
    i8 -101, label %242
  ]

14:                                               ; preds = %10
  %15 = icmp ugt %9* %11, %4
  br i1 %15, label %16, label %158

16:                                               ; preds = %14
  %17 = getelementptr inbounds %9, %9* %11, i64 -1
  br label %10

18:                                               ; preds = %10
  %19 = getelementptr inbounds %9, %9* %11, i64 0, i32 6
  %20 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 5), align 8
  %21 = tail call i32 @do_bind_function(%7* %2, %9* %11, %39* %20, i8 zeroext 1)
  br label %159

22:                                               ; preds = %10
  %23 = getelementptr inbounds %9, %9* %11, i64 0, i32 6
  %24 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), align 8
  %25 = getelementptr inbounds %7, %7* %2, i64 0, i32 26
  %26 = load %2*, %2** %25, align 8
  %27 = getelementptr inbounds %9, %9* %11, i64 0, i32 1, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %2, %2* %26, i64 %29
  %31 = getelementptr inbounds %2, %2* %30, i64 1
  %32 = bitcast %2* %31 to %32**
  %33 = load %32*, %32** %32, align 8
  %34 = tail call %2* @zend_hash_find(%39* %24, %32* %33) #16
  %35 = bitcast %2* %34 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast i8* %36 to %1*
  %38 = getelementptr inbounds i8, i8* %36, i64 24
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %39, align 8
  %42 = bitcast %2* %30 to %32**
  %43 = load %32*, %32** %42, align 8
  %44 = bitcast %2* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #16
  %45 = bitcast %2* %1 to i8**
  store i8* %36, i8** %45, align 8
  %46 = getelementptr inbounds %2, %2* %1, i64 0, i32 1, i32 0
  store i32 17, i32* %46, align 8
  %47 = call %2* @_zend_hash_add(%39* %24, %32* %43, %2* nonnull %1) #16
  %48 = icmp eq %2* %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #16
  br label %61

50:                                               ; preds = %22
  %51 = bitcast %2* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #16
  %53 = icmp eq i8* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds i8, i8* %36, i64 28
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 4718656
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %159

60:                                               ; preds = %54
  call void @zend_verify_abstract_class(%1* nonnull %37) #16
  br label %159

61:                                               ; preds = %49, %50
  %62 = load i32, i32* %39, align 8
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %39, align 8
  br label %242

64:                                               ; preds = %10
  %65 = getelementptr inbounds %9, %9* %11, i64 0, i32 6
  %66 = getelementptr inbounds %7, %7* %2, i64 0, i32 26
  %67 = load %2*, %2** %66, align 8
  %68 = getelementptr inbounds %9, %9* %11, i64 -1, i32 2, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %2, %2* %67, i64 %70
  %72 = bitcast %2* %71 to %32**
  %73 = load %32*, %32** %72, align 8
  %74 = getelementptr inbounds %2, %2* %71, i64 1
  %75 = tail call %1* @zend_lookup_class_ex(%32* %73, %2* nonnull %74, i32 0) #16
  %76 = icmp eq %1* %75, null
  %77 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  br i1 %76, label %85, label %78

78:                                               ; preds = %64
  %79 = and i32 %77, 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %115, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %1, %1* %75, i64 0, i32 0
  %83 = load i8, i8* %82, align 8
  %84 = icmp eq i8 %83, 1
  br i1 %84, label %85, label %115

85:                                               ; preds = %64, %81
  %86 = and i32 %77, 16
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %242, label %88

88:                                               ; preds = %85
  %89 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %90 = getelementptr inbounds %7, %7* %89, i64 0, i32 24
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, -1
  %93 = getelementptr inbounds %7, %7* %89, i64 0, i32 11
  br i1 %92, label %94, label %97

94:                                               ; preds = %88
  %95 = bitcast %9** %93 to i64*
  %96 = load i64, i64* %95, align 8
  br label %106

97:                                               ; preds = %88
  %98 = load %9*, %9** %93, align 8
  %99 = ptrtoint %9* %98 to i64
  br label %100

100:                                              ; preds = %97, %100
  %101 = phi i32 [ %91, %97 ], [ %104, %100 ]
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %9, %9* %98, i64 %102, i32 3, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %106, label %100

106:                                              ; preds = %100, %94
  %107 = phi i64 [ %96, %94 ], [ %99, %100 ]
  %108 = phi i32* [ %90, %94 ], [ %103, %100 ]
  %109 = ptrtoint %9* %11 to i64
  %110 = sub i64 %109, %107
  %111 = lshr exact i64 %110, 5
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %108, align 4
  store i8 -111, i8* %65, align 4
  %113 = getelementptr inbounds %9, %9* %11, i64 0, i32 9
  store i8 8, i8* %113, align 1
  %114 = getelementptr inbounds %9, %9* %11, i64 0, i32 3, i32 0
  store i32 -1, i32* %114, align 8
  br label %242

115:                                              ; preds = %78, %81
  %116 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %117 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), align 8
  %118 = tail call %1* @do_bind_inherited_class(%7* %116, %9* nonnull %11, %39* %117, %1* nonnull %75, i8 zeroext 1)
  %119 = icmp eq %1* %118, null
  br i1 %119, label %242, label %120

120:                                              ; preds = %115
  %121 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %122 = load i32, i32* %68, align 4
  %123 = getelementptr inbounds %7, %7* %121, i64 0, i32 26
  %124 = load %2*, %2** %123, align 8
  %125 = sext i32 %122 to i64
  %126 = getelementptr inbounds %2, %2* %124, i64 %125, i32 1
  %127 = bitcast %4* %126 to %65*
  %128 = getelementptr inbounds %65, %65* %127, i64 0, i32 1
  %129 = load i8, i8* %128, align 1
  %130 = and i8 %129, 4
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %142, label %132

132:                                              ; preds = %120
  %133 = getelementptr inbounds %2, %2* %124, i64 %125
  %134 = bitcast %2* %133 to %66**
  %135 = load %66*, %66** %134, align 8
  %136 = getelementptr inbounds %66, %66* %135, i64 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, -1
  store i32 %138, i32* %136, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %132
  %141 = load %66*, %66** %134, align 8
  tail call void @_zval_dtor_func(%66* %141) #16
  br label %142

142:                                              ; preds = %140, %132, %120
  %143 = add nsw i32 %122, 1
  %144 = getelementptr inbounds %7, %7* %121, i64 0, i32 25
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %143, %145
  br i1 %146, label %147, label %148

147:                                              ; preds = %142
  store i32 %122, i32* %144, align 4
  br label %151

148:                                              ; preds = %142
  %149 = load %2*, %2** %123, align 8
  %150 = getelementptr inbounds %2, %2* %149, i64 %125, i32 1, i32 0
  store i32 0, i32* %150, align 8
  br label %151

151:                                              ; preds = %148, %147
  %152 = getelementptr inbounds %9, %9* %11, i64 -1, i32 1, i32 0
  store i32 0, i32* %152, align 8
  store i32 0, i32* %68, align 4
  %153 = getelementptr inbounds %9, %9* %11, i64 -1, i32 3, i32 0
  store i32 0, i32* %153, align 8
  %154 = getelementptr inbounds %9, %9* %11, i64 -1, i32 6
  store i8 0, i8* %154, align 4
  %155 = getelementptr inbounds %9, %9* %11, i64 -1, i32 7
  store i8 8, i8* %155, align 1
  %156 = getelementptr inbounds %9, %9* %11, i64 -1, i32 8
  store i8 8, i8* %156, align 2
  %157 = getelementptr inbounds %9, %9* %11, i64 -1, i32 9
  store i8 8, i8* %157, align 1
  br label %159

158:                                              ; preds = %10, %14
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @13, i64 0, i64 0)) #15
  unreachable

159:                                              ; preds = %60, %54, %151, %18
  %160 = phi i8* [ %65, %151 ], [ %19, %18 ], [ %23, %54 ], [ %23, %60 ]
  %161 = phi %39** [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), %151 ], [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 5), %18 ], [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), %54 ], [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), %60 ]
  %162 = load %39*, %39** %161, align 8
  %163 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %164 = getelementptr inbounds %7, %7* %163, i64 0, i32 26
  %165 = load %2*, %2** %164, align 8
  %166 = getelementptr inbounds %9, %9* %11, i64 0, i32 1, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds %2, %2* %165, i64 %168
  %170 = getelementptr inbounds %2, %2* %169, i64 1
  %171 = bitcast %2* %170 to %32**
  %172 = load %32*, %32** %171, align 8
  %173 = call i32 @zend_hash_del(%39* %162, %32* %172) #16
  %174 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %175 = load i32, i32* %166, align 8
  %176 = add i32 %175, 1
  %177 = getelementptr inbounds %7, %7* %174, i64 0, i32 26
  %178 = load %2*, %2** %177, align 8
  %179 = sext i32 %176 to i64
  %180 = getelementptr inbounds %2, %2* %178, i64 %179, i32 1
  %181 = bitcast %4* %180 to %65*
  %182 = getelementptr inbounds %65, %65* %181, i64 0, i32 1
  %183 = load i8, i8* %182, align 1
  %184 = and i8 %183, 4
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %196, label %186

186:                                              ; preds = %159
  %187 = getelementptr inbounds %2, %2* %178, i64 %179
  %188 = bitcast %2* %187 to %66**
  %189 = load %66*, %66** %188, align 8
  %190 = getelementptr inbounds %66, %66* %189, i64 0, i32 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = add i32 %191, -1
  store i32 %192, i32* %190, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %186
  %195 = load %66*, %66** %188, align 8
  call void @_zval_dtor_func(%66* %195) #16
  br label %196

196:                                              ; preds = %194, %186, %159
  %197 = add i32 %175, 2
  %198 = getelementptr inbounds %7, %7* %174, i64 0, i32 25
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %197, %199
  br i1 %200, label %201, label %202

201:                                              ; preds = %196
  store i32 %176, i32* %198, align 4
  br label %205

202:                                              ; preds = %196
  %203 = load %2*, %2** %177, align 8
  %204 = getelementptr inbounds %2, %2* %203, i64 %179, i32 1, i32 0
  store i32 0, i32* %204, align 8
  br label %205

205:                                              ; preds = %201, %202
  %206 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %207 = load i32, i32* %166, align 8
  %208 = getelementptr inbounds %7, %7* %206, i64 0, i32 26
  %209 = load %2*, %2** %208, align 8
  %210 = sext i32 %207 to i64
  %211 = getelementptr inbounds %2, %2* %209, i64 %210, i32 1
  %212 = bitcast %4* %211 to %65*
  %213 = getelementptr inbounds %65, %65* %212, i64 0, i32 1
  %214 = load i8, i8* %213, align 1
  %215 = and i8 %214, 4
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %205
  %218 = getelementptr inbounds %2, %2* %209, i64 %210
  %219 = bitcast %2* %218 to %66**
  %220 = load %66*, %66** %219, align 8
  %221 = getelementptr inbounds %66, %66* %220, i64 0, i32 0, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = add i32 %222, -1
  store i32 %223, i32* %221, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %217
  %226 = load %66*, %66** %219, align 8
  call void @_zval_dtor_func(%66* %226) #16
  br label %227

227:                                              ; preds = %225, %217, %205
  %228 = add nsw i32 %207, 1
  %229 = getelementptr inbounds %7, %7* %206, i64 0, i32 25
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %228, %230
  br i1 %231, label %232, label %233

232:                                              ; preds = %227
  store i32 %207, i32* %229, align 4
  br label %236

233:                                              ; preds = %227
  %234 = load %2*, %2** %208, align 8
  %235 = getelementptr inbounds %2, %2* %234, i64 %210, i32 1, i32 0
  store i32 0, i32* %235, align 8
  br label %236

236:                                              ; preds = %232, %233
  store i32 0, i32* %166, align 8
  %237 = getelementptr inbounds %9, %9* %11, i64 0, i32 2, i32 0
  store i32 0, i32* %237, align 4
  %238 = getelementptr inbounds %9, %9* %11, i64 0, i32 3, i32 0
  store i32 0, i32* %238, align 8
  store i8 0, i8* %160, align 4
  %239 = getelementptr inbounds %9, %9* %11, i64 0, i32 7
  store i8 8, i8* %239, align 1
  %240 = getelementptr inbounds %9, %9* %11, i64 0, i32 8
  store i8 8, i8* %240, align 2
  %241 = getelementptr inbounds %9, %9* %11, i64 0, i32 9
  store i8 8, i8* %241, align 1
  br label %242

242:                                              ; preds = %10, %10, %10, %10, %115, %106, %85, %61, %236
  ret void
}

declare dso_local %1* @zend_lookup_class_ex(%32*, %2*, i32) local_unnamed_addr #3

declare dso_local i32 @zend_hash_del(%39*, %32*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @zend_do_delayed_early_binding(%7* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %7, %7* %0, i64 0, i32 24
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %42, label %5

5:                                                ; preds = %1
  %6 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 10), align 1
  store i8 1, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 10), align 1
  %7 = getelementptr inbounds %7, %7* %0, i64 0, i32 26
  %8 = bitcast %2** %7 to i8**
  %9 = getelementptr inbounds %7, %7* %0, i64 0, i32 11
  %10 = load %9*, %9** %9, align 8
  br label %11

11:                                               ; preds = %5, %35
  %12 = phi %9* [ %10, %5 ], [ %37, %35 ]
  %13 = phi i32 [ %3, %5 ], [ %39, %35 ]
  %14 = load i8*, i8** %8, align 8
  %15 = add i32 %13, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %9, %9* %12, i64 %16, i32 2, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %14, i64 %19
  %21 = bitcast i8* %20 to %32**
  %22 = load %32*, %32** %21, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 16
  %24 = bitcast i8* %23 to %2*
  %25 = tail call %1* @zend_lookup_class_ex(%32* %22, %2* nonnull %24, i32 0) #16
  %26 = icmp eq %1* %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %11
  %28 = zext i32 %13 to i64
  br label %35

29:                                               ; preds = %11
  %30 = load %9*, %9** %9, align 8
  %31 = zext i32 %13 to i64
  %32 = getelementptr inbounds %9, %9* %30, i64 %31
  %33 = load %39*, %39** getelementptr inbounds (%52, %52* @executor_globals, i64 0, i32 11), align 8
  %34 = tail call %1* @do_bind_inherited_class(%7* nonnull %0, %9* %32, %39* %33, %1* nonnull %25, i8 zeroext 0)
  br label %35

35:                                               ; preds = %27, %29
  %36 = phi i64 [ %28, %27 ], [ %31, %29 ]
  %37 = load %9*, %9** %9, align 8
  %38 = getelementptr inbounds %9, %9* %37, i64 %36, i32 3, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %11

41:                                               ; preds = %35
  store i8 %6, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 10), align 1
  br label %42

42:                                               ; preds = %1, %41
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local noalias %32* @zend_mangle_property_name(i8* nocapture readonly %0, i64 %1, i8* nocapture readonly %2, i64 %3, i32 %4) local_unnamed_addr #0 {
  %6 = add i64 %1, 1
  %7 = add i64 %1, 2
  %8 = add i64 %7, %3
  %9 = icmp ne i32 %4, 0
  %10 = add i64 %8, 32
  %11 = and i64 %10, -8
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = tail call noalias i8* @__zend_malloc(i64 %11) #17
  br label %16

14:                                               ; preds = %5
  %15 = tail call noalias i8* @_emalloc(i64 %11) #17
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i8* [ %13, %12 ], [ %15, %14 ]
  %18 = bitcast i8* %17 to %32*
  %19 = bitcast i8* %17 to i32*
  store i32 1, i32* %19, align 8
  %20 = zext i1 %9 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, 6
  %23 = getelementptr inbounds i8, i8* %17, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %17, i64 8
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %17, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 %8, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %17, i64 24
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds i8, i8* %17, i64 25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 %0, i64 %6, i1 false)
  %31 = getelementptr inbounds i8, i8* %30, i64 %1
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = add i64 %3, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %2, i64 %33, i1 false)
  ret %32* %18
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_unmangle_property_name_ex(%32* %0, i8** nocapture %1, i8** nocapture %2, i64* %3) local_unnamed_addr #0 {
  store i8* null, i8** %1, align 8
  %5 = getelementptr inbounds %32, %32* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 0
  br i1 %7, label %12, label %9

9:                                                ; preds = %4
  %10 = load i8, i8* %8, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4, %9
  store i8* %8, i8** %2, align 8
  %13 = icmp eq i64* %3, null
  br i1 %13, label %91, label %14

14:                                               ; preds = %12
  store i64 %6, i64* %3, align 8
  br label %91

15:                                               ; preds = %9
  %16 = icmp ult i64 %6, 3
  br i1 %16, label %21, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17, %15
  tail call void (i32, i8*, ...) @zend_error(i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @14, i64 0, i64 0)) #16
  store i8* %8, i8** %2, align 8
  %22 = icmp eq i64* %3, null
  br i1 %22, label %91, label %23

23:                                               ; preds = %21
  %24 = load i64, i64* %5, align 8
  store i64 %24, i64* %3, align 8
  br label %91

25:                                               ; preds = %17
  %26 = add i64 %6, -2
  br label %27

27:                                               ; preds = %25, %27
  %28 = phi i1 [ %38, %27 ], [ false, %25 ]
  %29 = phi i64 [ %36, %27 ], [ 0, %25 ]
  %30 = phi i64 [ %34, %27 ], [ %26, %25 ]
  %31 = phi i8* [ %35, %27 ], [ %18, %25 ]
  %32 = xor i1 %28, true
  %33 = sext i1 %32 to i64
  %34 = add i64 %30, %33
  %35 = getelementptr inbounds i8, i8* %31, i64 1
  %36 = add i64 %29, 1
  %37 = load i8, i8* %35, align 1
  %38 = icmp eq i8 %37, 0
  %39 = icmp ne i64 %34, 0
  %40 = xor i1 %38, true
  %41 = and i1 %39, %40
  br i1 %41, label %27, label %42

42:                                               ; preds = %27
  %43 = icmp ult i64 %36, %26
  br i1 %43, label %44, label %49

44:                                               ; preds = %42
  %45 = add i64 %29, 2
  %46 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %44, %42
  tail call void (i32, i8*, ...) @zend_error(i32 8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @15, i64 0, i64 0)) #16
  store i8* %8, i8** %2, align 8
  %50 = icmp eq i64* %3, null
  br i1 %50, label %91, label %51

51:                                               ; preds = %49
  %52 = load i64, i64* %5, align 8
  store i64 %52, i64* %3, align 8
  br label %91

53:                                               ; preds = %44
  store i8* %18, i8** %1, align 8
  %54 = getelementptr inbounds i8, i8* %18, i64 %36
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  %56 = sub i64 %6, %36
  %57 = add i64 %56, -2
  %58 = load i8, i8* %55, align 1
  %59 = icmp eq i8 %58, 0
  %60 = icmp ne i64 %57, 0
  %61 = xor i1 %59, true
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %78

63:                                               ; preds = %53, %63
  %64 = phi i1 [ %74, %63 ], [ %59, %53 ]
  %65 = phi i64 [ %72, %63 ], [ 0, %53 ]
  %66 = phi i64 [ %70, %63 ], [ %57, %53 ]
  %67 = phi i8* [ %71, %63 ], [ %55, %53 ]
  %68 = xor i1 %64, true
  %69 = sext i1 %68 to i64
  %70 = add i64 %66, %69
  %71 = getelementptr inbounds i8, i8* %67, i64 1
  %72 = add i64 %65, 1
  %73 = load i8, i8* %71, align 1
  %74 = icmp eq i8 %73, 0
  %75 = icmp ne i64 %70, 0
  %76 = xor i1 %74, true
  %77 = and i1 %75, %76
  br i1 %77, label %63, label %78

78:                                               ; preds = %63, %53
  %79 = phi i64 [ 0, %53 ], [ %72, %63 ]
  %80 = add i64 %29, 3
  %81 = add i64 %80, %79
  %82 = icmp eq i64 %81, %6
  %83 = add i64 %79, 1
  %84 = select i1 %82, i64 0, i64 %83
  %85 = add i64 %84, %36
  %86 = getelementptr inbounds %32, %32* %0, i64 0, i32 3, i64 %85
  %87 = getelementptr inbounds i8, i8* %86, i64 2
  store i8* %87, i8** %2, align 8
  %88 = icmp eq i64* %3, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = sub i64 %26, %85
  store i64 %90, i64* %3, align 8
  br label %91

91:                                               ; preds = %89, %78, %51, %49, %23, %21, %14, %12
  %92 = phi i32 [ 0, %12 ], [ 0, %14 ], [ -1, %21 ], [ -1, %23 ], [ -1, %49 ], [ -1, %51 ], [ 0, %78 ], [ 0, %89 ]
  ret i32 %92
}

declare dso_local void @zend_error(i32, i8*, ...) local_unnamed_addr #3

declare dso_local i32 @zend_binary_strcasecmp(i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_do_extended_info() local_unnamed_addr #0 {
  %1 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %2 = and i32 %1, 1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %0
  %5 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %6 = tail call %9* @get_next_op(%7* %5) #16
  %7 = getelementptr inbounds %9, %9* %6, i64 0, i32 6
  store i8 101, i8* %7, align 4
  %8 = getelementptr inbounds %9, %9* %6, i64 0, i32 7
  store i8 8, i8* %8, align 1
  %9 = getelementptr inbounds %9, %9* %6, i64 0, i32 8
  store i8 8, i8* %9, align 2
  br label %10

10:                                               ; preds = %0, %4
  ret void
}

declare dso_local %9* @get_next_op(%7*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_do_extended_fcall_begin() local_unnamed_addr #0 {
  %1 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %2 = and i32 %1, 1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %0
  %5 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %6 = tail call %9* @get_next_op(%7* %5) #16
  %7 = getelementptr inbounds %9, %9* %6, i64 0, i32 6
  store i8 102, i8* %7, align 4
  %8 = getelementptr inbounds %9, %9* %6, i64 0, i32 7
  store i8 8, i8* %8, align 1
  %9 = getelementptr inbounds %9, %9* %6, i64 0, i32 8
  store i8 8, i8* %9, align 2
  br label %10

10:                                               ; preds = %0, %4
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_do_extended_fcall_end() local_unnamed_addr #0 {
  %1 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %2 = and i32 %1, 1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %0
  %5 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %6 = tail call %9* @get_next_op(%7* %5) #16
  %7 = getelementptr inbounds %9, %9* %6, i64 0, i32 6
  store i8 103, i8* %7, align 4
  %8 = getelementptr inbounds %9, %9* %6, i64 0, i32 7
  store i8 8, i8* %8, align 1
  %9 = getelementptr inbounds %9, %9* %6, i64 0, i32 8
  store i8 8, i8* %9, align 2
  br label %10

10:                                               ; preds = %0, %4
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @zend_is_auto_global_str(i8* %0, i64 %1) local_unnamed_addr #0 {
  %3 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 8), align 8
  %4 = tail call %2* @zend_hash_str_find(%39* %3, i8* %0, i64 %1) #16
  %5 = icmp eq %2* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  %7 = bitcast %2* %4 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, i8* %8, i64 17
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to i8 (%32*)**
  %17 = load i8 (%32*)*, i8 (%32*)** %16, align 8
  %18 = bitcast i8* %8 to %32**
  %19 = load %32*, %32** %18, align 8
  %20 = tail call zeroext i8 %17(%32* %19) #16
  store i8 %20, i8* %11, align 1
  br label %21

21:                                               ; preds = %2, %6, %14, %10
  %22 = phi i8 [ 1, %10 ], [ 1, %14 ], [ 0, %6 ], [ 0, %2 ]
  ret i8 %22
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @zend_is_auto_global(%32* %0) local_unnamed_addr #0 {
  %2 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 8), align 8
  %3 = tail call %2* @zend_hash_find(%39* %2, %32* %0) #16
  %4 = icmp eq %2* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = bitcast %2* %3 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds i8, i8* %7, i64 17
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %7, i64 8
  %15 = bitcast i8* %14 to i8 (%32*)**
  %16 = load i8 (%32*)*, i8 (%32*)** %15, align 8
  %17 = bitcast i8* %7 to %32**
  %18 = load %32*, %32** %17, align 8
  %19 = tail call zeroext i8 %16(%32* %18) #16
  store i8 %19, i8* %10, align 1
  br label %20

20:                                               ; preds = %1, %5, %13, %9
  %21 = phi i8 [ 1, %9 ], [ 1, %13 ], [ 0, %5 ], [ 0, %1 ]
  ret i8 %21
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_register_auto_global(%32* %0, i8 zeroext %1, i8 (%32*)* %2) local_unnamed_addr #0 {
  %4 = alloca %2, align 8
  %5 = alloca [7 x i8], align 1
  %6 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %6)
  %7 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %8 = tail call %32* %7(%32* %0) #16
  %9 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 8), align 8
  %10 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = bitcast %2* %4 to i8**
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 17, i32* %12, align 8
  %13 = call %2* @_zend_hash_add(%39* %9, %32* %8, %2* nonnull %4) #16
  %14 = icmp eq %2* %13, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %39, %39* %9, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = call noalias i8* @__zend_malloc(i64 24) #17
  br label %24

22:                                               ; preds = %15
  %23 = call noalias i8* @_emalloc(i64 24) #17
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi i8* [ %21, %20 ], [ %23, %22 ]
  %26 = bitcast %2* %13 to i8**
  store i8* %25, i8** %26, align 8
  %27 = bitcast i8* %25 to %32**
  store %32* %8, %32** %27, align 1
  %28 = getelementptr inbounds i8, i8* %25, i64 8
  %29 = bitcast i8* %28 to i8 (%32*)**
  store i8 (%32*)* %2, i8 (%32*)** %29, align 1
  %30 = getelementptr inbounds i8, i8* %25, i64 16
  store i8 %1, i8* %30, align 1
  %31 = getelementptr inbounds i8, i8* %25, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* nonnull align 1 %6, i64 7, i1 false)
  %32 = load i8*, i8** %26, align 8
  %33 = icmp eq i8* %32, null
  %34 = sext i1 %33 to i32
  br label %35

35:                                               ; preds = %3, %24
  %36 = phi i32 [ %34, %24 ], [ -1, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  %37 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 1
  %38 = bitcast %18* %37 to %64*
  %39 = getelementptr inbounds %64, %64* %38, i64 0, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = and i8 %40, 2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %35
  %44 = getelementptr inbounds %32, %32* %0, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = add i32 %45, -1
  store i32 %46, i32* %44, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = and i8 %40, 1
  %50 = icmp eq i8 %49, 0
  %51 = bitcast %32* %0 to i8*
  br i1 %50, label %53, label %52

52:                                               ; preds = %48
  call void @free(i8* %51) #16
  br label %54

53:                                               ; preds = %48
  call void @_efree(i8* %51) #16
  br label %54

54:                                               ; preds = %35, %43, %52, %53
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %6)
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_activate_auto_globals() local_unnamed_addr #0 {
  %1 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 8), align 8
  %2 = getelementptr inbounds %39, %39* %1, i64 0, i32 3
  %3 = load %41*, %41** %2, align 8
  %4 = getelementptr inbounds %39, %39* %1, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %41, %41* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %0, %32
  %10 = phi %41* [ %33, %32 ], [ %3, %0 ]
  %11 = getelementptr inbounds %41, %41* %10, i64 0, i32 0, i32 1
  %12 = bitcast %4* %11 to i8*
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %32, label %15

15:                                               ; preds = %9
  %16 = bitcast %41* %10 to %67**
  %17 = load %67*, %67** %16, align 8
  %18 = getelementptr inbounds %67, %67* %17, i64 0, i32 2
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %15
  %22 = getelementptr inbounds %67, %67* %17, i64 0, i32 1
  %23 = load i8 (%32*)*, i8 (%32*)** %22, align 8
  %24 = icmp eq i8 (%32*)* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %67, %67* %17, i64 0, i32 0
  %27 = load %32*, %32** %26, align 8
  %28 = tail call zeroext i8 %23(%32* %27) #16
  br label %29

29:                                               ; preds = %21, %15, %25
  %30 = phi i8 [ %28, %25 ], [ 1, %15 ], [ 0, %21 ]
  %31 = getelementptr inbounds %67, %67* %17, i64 0, i32 3
  store i8 %30, i8* %31, align 1
  br label %32

32:                                               ; preds = %29, %9
  %33 = getelementptr inbounds %41, %41* %10, i64 1
  %34 = icmp eq %41* %33, %7
  br i1 %34, label %35, label %9

35:                                               ; preds = %32, %0
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @zendlex(%68* nocapture %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = bitcast %2* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #16
  %4 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 17), align 4
  %5 = icmp eq i8 %4, 0
  %6 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  br i1 %5, label %9, label %7

7:                                                ; preds = %1
  %8 = add nsw i32 %6, 1
  store i32 %8, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 17), align 4
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ %6, %1 ]
  %11 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  store i32 0, i32* %11, align 8
  %12 = call i32 @lex_scan(%2* nonnull %2) #16
  %13 = load %16*, %16** getelementptr inbounds (%52, %52* @executor_globals, i64 0, i32 43), align 8
  %14 = icmp eq %16* %13, null
  br i1 %14, label %15, label %34

15:                                               ; preds = %9, %18
  %16 = phi i32 [ %20, %18 ], [ %12, %9 ]
  %17 = phi i32 [ %19, %18 ], [ %10, %9 ]
  switch i32 %16, label %23 [
    i32 377, label %18
    i32 378, label %18
    i32 379, label %18
    i32 382, label %18
    i32 381, label %24
    i32 380, label %25
  ]

18:                                               ; preds = %15, %15, %15, %15
  store i32 0, i32* %11, align 8
  %19 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  %20 = call i32 @lex_scan(%2* nonnull %2) #16
  %21 = load %16*, %16** getelementptr inbounds (%52, %52* @executor_globals, i64 0, i32 43), align 8
  %22 = icmp eq %16* %21, null
  br i1 %22, label %15, label %34

23:                                               ; preds = %15
  br label %25

24:                                               ; preds = %15
  br label %25

25:                                               ; preds = %15, %24, %23
  %26 = phi i32 [ %16, %23 ], [ 59, %24 ], [ 328, %15 ]
  %27 = getelementptr inbounds %2, %2* %2, i64 0, i32 1
  %28 = bitcast %4* %27 to i8*
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = call %43* @zend_ast_create_zval_with_lineno(%2* nonnull %2, i16 zeroext 0, i32 %17) #16
  %33 = getelementptr inbounds %68, %68* %0, i64 0, i32 0
  store %43* %32, %43** %33, align 8
  br label %34

34:                                               ; preds = %18, %9, %31, %25
  %35 = phi i32 [ %26, %25 ], [ %26, %31 ], [ 392, %9 ], [ 392, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #16
  ret i32 %35
}

declare dso_local i32 @lex_scan(%2*) local_unnamed_addr #3

declare dso_local %43* @zend_ast_create_zval_with_lineno(%2*, i16 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @zend_initialize_class_data(%1* %0, i8 zeroext %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %1, %1* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 1
  %6 = zext i1 %5 to i8
  %7 = getelementptr inbounds %1, %1* %0, i64 0, i32 3
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %1, %1* %0, i64 0, i32 4
  store i32 1048576, i32* %8, align 4
  %9 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %10 = and i32 %9, 512
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i32 1048576, i32 17825792
  store i32 %12, i32* %8, align 4
  %13 = getelementptr inbounds %1, %1* %0, i64 0, i32 7
  %14 = getelementptr inbounds %1, %1* %0, i64 0, i32 11
  %15 = select i1 %5, void (%2*)* @232, void (%2*)* null
  %16 = bitcast %2** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false)
  tail call void @_zend_hash_init_ex(%39* nonnull %14, i32 8, void (%2*)* %15, i8 zeroext %6, i8 zeroext 0) #16
  %17 = getelementptr inbounds %1, %1* %0, i64 0, i32 12
  %18 = select i1 %5, void (%2*)* @233, void (%2*)* null
  tail call void @_zend_hash_init_ex(%39* nonnull %17, i32 8, void (%2*)* %18, i8 zeroext %6, i8 zeroext 0) #16
  %19 = getelementptr inbounds %1, %1* %0, i64 0, i32 10
  tail call void @_zend_hash_init_ex(%39* nonnull %19, i32 8, void (%2*)* nonnull @zend_function_dtor, i8 zeroext %6, i8 zeroext 0) #16
  %20 = load i8, i8* %3, align 8
  %21 = icmp eq i8 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = getelementptr inbounds %1, %1* %0, i64 0, i32 9
  store %2* null, %2** %23, align 8
  br label %31

24:                                               ; preds = %2
  %25 = getelementptr inbounds %1, %1* %0, i64 0, i32 8
  %26 = bitcast %2** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %1, %1* %0, i64 0, i32 9
  %29 = bitcast %2** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %1, %1* %0, i64 0, i32 39, i32 0, i32 3
  store %32* null, %32** %30, align 8
  br label %31

31:                                               ; preds = %24, %22
  %32 = getelementptr inbounds %1, %1* %0, i64 0, i32 5
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %1, %1* %0, i64 0, i32 6
  store i32 0, i32* %33, align 4
  %34 = icmp eq i8 %1, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %1, %1* %0, i64 0, i32 13
  %37 = getelementptr inbounds %1, %1* %0, i64 0, i32 27
  %38 = getelementptr inbounds %1, %1* %0, i64 0, i32 2
  store %1* null, %1** %38, align 8
  %39 = bitcast %6** %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 112, i1 false)
  %40 = bitcast %16* (%1*)** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 88, i1 false)
  br i1 %21, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %1, %1* %0, i64 0, i32 39
  %43 = bitcast %27* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false)
  br label %44

44:                                               ; preds = %31, %35, %41
  ret void
}

declare dso_local void @_zend_hash_init_ex(%39*, i32, void (%2*)*, i8 zeroext, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal void @232(%2* nocapture readonly %0) #0 {
  %2 = bitcast %2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 8
  %5 = bitcast i8* %4 to %32**
  %6 = load %32*, %32** %5, align 8
  %7 = getelementptr inbounds %32, %32* %6, i64 0, i32 0, i32 1
  %8 = bitcast %18* %7 to %64*
  %9 = getelementptr inbounds %64, %64* %8, i64 0, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = and i8 %10, 2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %24

13:                                               ; preds = %1
  %14 = getelementptr inbounds %32, %32* %6, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  store i32 %16, i32* %14, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %13
  %19 = and i8 %10, 1
  %20 = icmp eq i8 %19, 0
  %21 = bitcast %32* %6 to i8*
  br i1 %20, label %23, label %22

22:                                               ; preds = %18
  tail call void @free(i8* %21) #16
  br label %24

23:                                               ; preds = %18
  tail call void @_efree(i8* %21) #16
  br label %24

24:                                               ; preds = %1, %13, %22, %23
  tail call void @free(i8* %3) #16
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @233(%2* nocapture readonly %0) #0 {
  %2 = bitcast %2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  tail call void @free(i8* %3) #16
  ret void
}

declare dso_local void @zend_function_dtor(%2*) #3

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local %32* @zend_get_compiled_variable_name(%7* nocapture readonly %0, i32 %1) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %7, %7* %0, i64 0, i32 14
  %4 = load %32**, %32*** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = add nuw nsw i64 %5, 68719476656
  %7 = lshr exact i64 %6, 4
  %8 = and i64 %7, 4294967295
  %9 = getelementptr inbounds %32*, %32** %4, i64 %8
  %10 = load %32*, %32** %9, align 8
  ret %32* %10
}

; Function Attrs: nounwind uwtable
define hidden %43* @zend_ast_append_str(%43* returned %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %4 = bitcast [1 x %43*]* %3 to %32**
  %5 = load %32*, %32** %4, align 8
  %6 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %7 = bitcast [1 x %43*]* %6 to %32**
  %8 = load %32*, %32** %7, align 8
  %9 = getelementptr inbounds %32, %32* %5, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %32, %32* %8, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  %14 = add i64 %13, 1
  %15 = getelementptr inbounds %32, %32* %5, i64 0, i32 0, i32 1
  %16 = bitcast %18* %15 to %64*
  %17 = getelementptr inbounds %64, %64* %16, i64 0, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %2
  %22 = getelementptr inbounds %32, %32* %5, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %34

25:                                               ; preds = %21
  %26 = add i64 %13, 33
  %27 = and i64 %26, -8
  %28 = bitcast %32* %5 to i8*
  %29 = tail call i8* @_erealloc(i8* %28, i64 %27) #18
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %14, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 0, i64* %33, align 8
  br label %51

34:                                               ; preds = %21
  %35 = add i32 %23, -1
  store i32 %35, i32* %22, align 8
  br label %36

36:                                               ; preds = %34, %2
  %37 = add i64 %13, 33
  %38 = and i64 %37, -8
  %39 = tail call noalias i8* @_emalloc(i64 %38) #17
  %40 = bitcast i8* %39 to i32*
  store i32 1, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 4
  %42 = bitcast i8* %41 to i32*
  store i32 6, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %39, i64 8
  %44 = bitcast i8* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %39, i64 16
  %46 = bitcast i8* %45 to i64*
  store i64 %14, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %39, i64 24
  %48 = getelementptr inbounds %32, %32* %5, i64 0, i32 3, i64 0
  %49 = load i64, i64* %9, align 8
  %50 = add i64 %49, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* nonnull align 8 %48, i64 %50, i1 false) #16
  br label %51

51:                                               ; preds = %25, %36
  %52 = phi i8* [ %39, %36 ], [ %29, %25 ]
  %53 = bitcast i8* %52 to %32*
  %54 = getelementptr inbounds %32, %32* %53, i64 0, i32 3, i64 %10
  store i8 92, i8* %54, align 1
  %55 = add i64 %10, 1
  %56 = getelementptr inbounds %32, %32* %53, i64 0, i32 3, i64 %55
  %57 = getelementptr inbounds %32, %32* %8, i64 0, i32 3, i64 0
  %58 = load i64, i64* %11, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* nonnull align 8 %57, i64 %58, i1 false)
  %59 = getelementptr inbounds %32, %32* %53, i64 0, i32 3, i64 %14
  store i8 0, i8* %59, align 1
  %60 = getelementptr inbounds %32, %32* %8, i64 0, i32 0, i32 1
  %61 = bitcast %18* %60 to %64*
  %62 = getelementptr inbounds %64, %64* %61, i64 0, i32 1
  %63 = load i8, i8* %62, align 1
  %64 = and i8 %63, 2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %77

66:                                               ; preds = %51
  %67 = getelementptr inbounds %32, %32* %8, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, -1
  store i32 %69, i32* %67, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %66
  %72 = and i8 %63, 1
  %73 = icmp eq i8 %72, 0
  %74 = bitcast %32* %8 to i8*
  br i1 %73, label %76, label %75

75:                                               ; preds = %71
  tail call void @free(i8* %74) #16
  br label %77

76:                                               ; preds = %71
  tail call void @_efree(i8* %74) #16
  br label %77

77:                                               ; preds = %51, %66, %75, %76
  %78 = bitcast [1 x %43*]* %3 to i8**
  store i8* %52, i8** %78, align 8
  %79 = getelementptr inbounds i8, i8* %52, i64 5
  %80 = load i8, i8* %79, align 1
  %81 = and i8 %80, 2
  %82 = icmp eq i8 %81, 0
  %83 = select i1 %82, i32 5126, i32 6
  %84 = getelementptr inbounds [1 x %43*], [1 x %43*]* %3, i64 1
  %85 = bitcast [1 x %43*]* %84 to i32*
  store i32 %83, i32* %85, align 8
  ret %43* %0
}

; Function Attrs: nounwind uwtable
define hidden %43* @zend_negate_num_string(%43* returned %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %3 = getelementptr inbounds [1 x %43*], [1 x %43*]* %2, i64 1
  %4 = bitcast [1 x %43*]* %3 to i8*
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 4
  br i1 %6, label %7, label %25

7:                                                ; preds = %1
  %8 = bitcast [1 x %43*]* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %7
  %12 = tail call noalias i8* @_emalloc(i64 32) #17
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 6, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %12, i64 8
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 0, i64 2>, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds i8, i8* %12, i64 24
  %19 = bitcast i8* %18 to i16*
  store i16 12333, i16* %19, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 26
  store i8 0, i8* %20, align 1
  %21 = bitcast [1 x %43*]* %2 to i8**
  store i8* %12, i8** %21, align 8
  %22 = bitcast [1 x %43*]* %3 to i32*
  store i32 5126, i32* %22, align 8
  br label %75

23:                                               ; preds = %7
  %24 = sub nsw i64 0, %9
  store i64 %24, i64* %8, align 8
  br label %75

25:                                               ; preds = %1
  %26 = bitcast [1 x %43*]* %2 to %32**
  %27 = load %32*, %32** %26, align 8
  %28 = getelementptr inbounds %32, %32* %27, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  %31 = getelementptr inbounds %32, %32* %27, i64 0, i32 0, i32 1
  %32 = bitcast %18* %31 to %64*
  %33 = getelementptr inbounds %64, %64* %32, i64 0, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, 2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %25
  %38 = getelementptr inbounds %32, %32* %27, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %51

41:                                               ; preds = %37
  %42 = add i64 %29, 33
  %43 = and i64 %42, -8
  %44 = bitcast %32* %27 to i8*
  %45 = tail call i8* @_erealloc(i8* %44, i64 %43) #18
  %46 = getelementptr inbounds i8, i8* %45, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 %30, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %45, i64 8
  %49 = bitcast i8* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %45, i64 24
  br label %68

51:                                               ; preds = %37
  %52 = add i32 %39, -1
  store i32 %52, i32* %38, align 8
  br label %53

53:                                               ; preds = %51, %25
  %54 = add i64 %29, 33
  %55 = and i64 %54, -8
  %56 = tail call noalias i8* @_emalloc(i64 %55) #17
  %57 = bitcast i8* %56 to i32*
  store i32 1, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %56, i64 4
  %59 = bitcast i8* %58 to i32*
  store i32 6, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 8
  %61 = bitcast i8* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %56, i64 16
  %63 = bitcast i8* %62 to i64*
  store i64 %30, i64* %63, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 24
  %65 = getelementptr inbounds %32, %32* %27, i64 0, i32 3, i64 0
  %66 = load i64, i64* %28, align 8
  %67 = add i64 %66, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %65, i64 %67, i1 false) #16
  br label %68

68:                                               ; preds = %41, %53
  %69 = phi i8* [ %50, %41 ], [ %64, %53 ]
  %70 = phi i8* [ %45, %41 ], [ %56, %53 ]
  %71 = bitcast [1 x %43*]* %2 to i8**
  store i8* %70, i8** %71, align 8
  %72 = getelementptr inbounds i8, i8* %70, i64 25
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %72, i8* nonnull align 8 %69, i64 %30, i1 false)
  %73 = load %32*, %32** %26, align 8
  %74 = getelementptr inbounds %32, %32* %73, i64 0, i32 3, i64 0
  store i8 45, i8* %74, align 8
  br label %75

75:                                               ; preds = %11, %23, %68
  ret %43* %0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind uwtable
define hidden void @zend_verify_namespace() local_unnamed_addr #0 {
  %1 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 4), align 1
  %2 = icmp eq i8 %1, 0
  %3 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 3), align 8
  %4 = icmp ne i8 %3, 0
  %5 = or i1 %2, %4
  br i1 %5, label %7, label %6

6:                                                ; preds = %0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @19, i64 0, i64 0)) #15
  unreachable

7:                                                ; preds = %0
  ret void
}

; Function Attrs: norecurse nounwind uwtable
define dso_local i64 @zend_dirname(i8* %0, i64 %1) local_unnamed_addr #5 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %0, i64 %1
  br label %6

6:                                                ; preds = %4, %10
  %7 = phi i8* [ %8, %10 ], [ %5, %4 ]
  %8 = getelementptr inbounds i8, i8* %7, i64 -1
  %9 = icmp ult i8* %8, %0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = load i8, i8* %8, align 1
  %12 = icmp eq i8 %11, 47
  br i1 %12, label %6, label %17

13:                                               ; preds = %6
  store i8 47, i8* %0, align 1
  %14 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 0, i8* %14, align 1
  br label %39

15:                                               ; preds = %21
  %16 = icmp ult i8* %19, %0
  br i1 %16, label %33, label %26

17:                                               ; preds = %10, %21
  %18 = phi i8* [ %19, %21 ], [ %8, %10 ]
  %19 = getelementptr inbounds i8, i8* %18, i64 -1
  %20 = icmp ult i8* %19, %0
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = load i8, i8* %19, align 1
  %23 = icmp eq i8 %22, 47
  br i1 %23, label %15, label %17

24:                                               ; preds = %17
  store i8 46, i8* %0, align 1
  %25 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 0, i8* %25, align 1
  br label %39

26:                                               ; preds = %15, %30
  %27 = phi i8* [ %28, %30 ], [ %19, %15 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 -1
  %29 = icmp ult i8* %28, %0
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = load i8, i8* %28, align 1
  %32 = icmp eq i8 %31, 47
  br i1 %32, label %26, label %35

33:                                               ; preds = %26, %15
  store i8 47, i8* %0, align 1
  %34 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 0, i8* %34, align 1
  br label %39

35:                                               ; preds = %30
  store i8 0, i8* %27, align 1
  %36 = ptrtoint i8* %27 to i64
  %37 = ptrtoint i8* %0 to i64
  %38 = sub i64 %36, %37
  br label %39

39:                                               ; preds = %2, %35, %33, %24, %13
  %40 = phi i64 [ 1, %13 ], [ 1, %24 ], [ 1, %33 ], [ %38, %35 ], [ 0, %2 ]
  ret i64 %40
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local i32 @zend_is_smart_branch(%9* nocapture readonly %0) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %9, %9* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 4
  switch i8 %3, label %4 [
    i8 15, label %5
    i8 16, label %5
    i8 17, label %5
    i8 18, label %5
    i8 19, label %5
    i8 20, label %5
    i8 48, label %5
    i8 -59, label %5
    i8 114, label %5
    i8 115, label %5
    i8 -108, label %5
    i8 -76, label %5
    i8 -118, label %5
    i8 123, label %5
    i8 122, label %5
    i8 -67, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i32 [ 0, %4 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ]
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define hidden void @zend_emit_final_return(i32 %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #16
  %4 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %5 = getelementptr inbounds %7, %7* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 67108864
  %8 = and i32 %6, 1082130432
  %9 = icmp eq i32 %8, 1073741824
  br i1 %9, label %10, label %33

10:                                               ; preds = %1
  %11 = getelementptr inbounds %7, %7* %4, i64 0, i32 8
  %12 = load %8*, %8** %11, align 8
  %13 = getelementptr inbounds %8, %8* %12, i64 -1, i32 1
  %14 = load i64, i64* %13, align 8
  switch i64 %14, label %15 [
    i64 37, label %33
    i64 36, label %33
    i64 1, label %33
    i64 0, label %33
  ]

15:                                               ; preds = %10
  %16 = tail call %9* @get_next_op(%7* nonnull %4) #16
  %17 = getelementptr inbounds %9, %9* %16, i64 0, i32 6
  store i8 124, i8* %17, align 4
  %18 = getelementptr inbounds %9, %9* %16, i64 0, i32 7
  store i8 8, i8* %18, align 1
  %19 = getelementptr inbounds %9, %9* %16, i64 0, i32 8
  store i8 8, i8* %19, align 2
  tail call fastcc void @244(%9* nonnull %16) #16
  %20 = load i64, i64* %13, align 8
  %21 = icmp ugt i64 %20, 511
  br i1 %21, label %22, label %31

22:                                               ; preds = %15
  %23 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %24 = getelementptr inbounds %7, %7* %23, i64 0, i32 27
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %9, %9* %16, i64 0, i32 2, i32 0
  store i32 %25, i32* %26, align 4
  %27 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %28 = getelementptr inbounds %7, %7* %27, i64 0, i32 27
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 8
  store i32 %30, i32* %28, align 8
  br label %33

31:                                               ; preds = %15
  %32 = getelementptr inbounds %9, %9* %16, i64 0, i32 2, i32 0
  store i32 -1, i32* %32, align 4
  br label %33

33:                                               ; preds = %10, %10, %10, %10, %31, %22, %1
  store i8 1, i8* %3, align 8
  %34 = icmp eq i32 %0, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 1, i64* %36, align 8
  br label %37

37:                                               ; preds = %33, %35
  %38 = phi i32 [ 4, %35 ], [ 1, %33 ]
  %39 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %38, i32* %39, align 8
  %40 = icmp eq i32 %7, 0
  %41 = select i1 %40, i8 62, i8 111
  %42 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %43 = tail call %9* @get_next_op(%7* %42) #16
  %44 = getelementptr inbounds %9, %9* %43, i64 0, i32 6
  store i8 %41, i8* %44, align 4
  %45 = getelementptr inbounds %9, %9* %43, i64 0, i32 7
  store i8 1, i8* %45, align 1
  %46 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %47 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %48 = call i32 @zend_add_literal(%7* %46, %2* nonnull %47) #16
  %49 = getelementptr inbounds %9, %9* %43, i64 0, i32 1, i32 0
  store i32 %48, i32* %49, align 8
  %50 = getelementptr inbounds %9, %9* %43, i64 0, i32 8
  store i8 8, i8* %50, align 2
  tail call fastcc void @244(%9* nonnull %43) #16
  %51 = getelementptr inbounds %9, %9* %43, i64 0, i32 4
  store i32 -1, i32* %51, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_dim(%37* %0, %43* nocapture readonly %1, i32 %2) local_unnamed_addr #0 {
  %4 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %5 = tail call fastcc %9* @235(%37* %0, %43* %1, i32 %2) #16
  %6 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %7 = bitcast i8* %6 to %9*
  %8 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %9 = icmp ugt i32 %8, %4
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = zext i32 %4 to i64
  %12 = zext i32 %8 to i64
  br label %13

13:                                               ; preds = %13, %10
  %14 = phi i64 [ %11, %10 ], [ %20, %13 ]
  %15 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %16 = tail call %9* @get_next_op(%7* %15) #16
  %17 = bitcast %9* %16 to i8*
  %18 = getelementptr inbounds %9, %9* %7, i64 %14
  %19 = bitcast %9* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %19, i64 32, i1 false) #16
  tail call fastcc void @244(%9* %16) #16
  %20 = add nuw nsw i64 %14, 1
  %21 = icmp eq i64 %20, %12
  br i1 %21, label %22, label %13

22:                                               ; preds = %13, %3
  %23 = phi %9* [ null, %3 ], [ %16, %13 ]
  store i32 %4, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %24 = getelementptr inbounds %9, %9* %23, i64 0, i32 6
  %25 = load i8, i8* %24, align 4
  %26 = icmp eq i8 %25, -83
  %27 = select i1 %26, i8 1, i8 3
  %28 = icmp eq i8 %25, -72
  br i1 %28, label %50, label %29

29:                                               ; preds = %22
  %30 = trunc i32 %2 to i3
  switch i3 %30, label %49 [
    i3 0, label %50
    i3 1, label %31
    i3 2, label %33
    i3 3, label %36
    i3 -4, label %39
    i3 -3, label %46
  ]

31:                                               ; preds = %29
  %32 = add i8 %27, %25
  store i8 %32, i8* %24, align 4
  br label %50

33:                                               ; preds = %29
  %34 = shl nuw nsw i8 %27, 1
  %35 = add i8 %34, %25
  store i8 %35, i8* %24, align 4
  br label %50

36:                                               ; preds = %29
  %37 = mul nuw nsw i8 %27, 3
  %38 = add i8 %37, %25
  store i8 %38, i8* %24, align 4
  br label %50

39:                                               ; preds = %29
  %40 = shl nuw nsw i8 %27, 2
  %41 = add i8 %40, %25
  store i8 %41, i8* %24, align 4
  %42 = lshr i32 %2, 3
  %43 = getelementptr inbounds %9, %9* %23, i64 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = or i32 %44, %42
  store i32 %45, i32* %43, align 4
  br label %50

46:                                               ; preds = %29
  %47 = mul nuw nsw i8 %27, 5
  %48 = add i8 %47, %25
  store i8 %48, i8* %24, align 4
  br label %50

49:                                               ; preds = %29
  unreachable

50:                                               ; preds = %22, %29, %31, %33, %36, %39, %46
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_prop(%37* %0, %43* nocapture readonly %1, i32 %2) local_unnamed_addr #0 {
  %4 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %5 = tail call fastcc %9* @237(%37* %0, %43* %1, i32 %2) #16
  %6 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %7 = bitcast i8* %6 to %9*
  %8 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %9 = icmp ugt i32 %8, %4
  br i1 %9, label %10, label %22

10:                                               ; preds = %3
  %11 = zext i32 %4 to i64
  %12 = zext i32 %8 to i64
  br label %13

13:                                               ; preds = %13, %10
  %14 = phi i64 [ %11, %10 ], [ %20, %13 ]
  %15 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %16 = tail call %9* @get_next_op(%7* %15) #16
  %17 = bitcast %9* %16 to i8*
  %18 = getelementptr inbounds %9, %9* %7, i64 %14
  %19 = bitcast %9* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %19, i64 32, i1 false) #16
  tail call fastcc void @244(%9* %16) #16
  %20 = add nuw nsw i64 %14, 1
  %21 = icmp eq i64 %20, %12
  br i1 %21, label %22, label %13

22:                                               ; preds = %13, %3
  %23 = phi %9* [ null, %3 ], [ %16, %13 ]
  store i32 %4, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %24 = getelementptr inbounds %9, %9* %23, i64 0, i32 6
  %25 = load i8, i8* %24, align 4
  %26 = icmp eq i8 %25, -83
  %27 = select i1 %26, i8 1, i8 3
  %28 = icmp eq i8 %25, -72
  br i1 %28, label %50, label %29

29:                                               ; preds = %22
  %30 = trunc i32 %2 to i3
  switch i3 %30, label %49 [
    i3 0, label %50
    i3 1, label %31
    i3 2, label %33
    i3 3, label %36
    i3 -4, label %39
    i3 -3, label %46
  ]

31:                                               ; preds = %29
  %32 = add i8 %27, %25
  store i8 %32, i8* %24, align 4
  br label %50

33:                                               ; preds = %29
  %34 = shl nuw nsw i8 %27, 1
  %35 = add i8 %34, %25
  store i8 %35, i8* %24, align 4
  br label %50

36:                                               ; preds = %29
  %37 = mul nuw nsw i8 %27, 3
  %38 = add i8 %37, %25
  store i8 %38, i8* %24, align 4
  br label %50

39:                                               ; preds = %29
  %40 = shl nuw nsw i8 %27, 2
  %41 = add i8 %40, %25
  store i8 %41, i8* %24, align 4
  %42 = lshr i32 %2, 3
  %43 = getelementptr inbounds %9, %9* %23, i64 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = or i32 %44, %42
  store i32 %45, i32* %43, align 4
  br label %50

46:                                               ; preds = %29
  %47 = mul nuw nsw i8 %27, 5
  %48 = add i8 %47, %25
  store i8 %48, i8* %24, align 4
  br label %50

49:                                               ; preds = %29
  unreachable

50:                                               ; preds = %22, %29, %31, %33, %36, %39, %46
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %9* @zend_compile_static_prop_common(%37* %0, %43* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = alloca %9, align 8
  %6 = alloca %2, align 8
  %7 = alloca %2, align 8
  %8 = alloca %37, align 8
  %9 = alloca %37, align 8
  %10 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %11 = load %43*, %43** %10, align 8
  %12 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %13 = load %43*, %43** %12, align 8
  %14 = getelementptr inbounds %37, %37* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #16
  %15 = getelementptr inbounds %37, %37* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  call fastcc void @234(%37* nonnull %8, %43* %11, i32 512)
  call void @zend_compile_expr(%37* nonnull %9, %43* %13)
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %51, label %17

17:                                               ; preds = %4
  %18 = bitcast %9* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #16
  call void @init_op(%9* nonnull %5) #16
  %19 = getelementptr inbounds %9, %9* %5, i64 0, i32 6
  store i8 -83, i8* %19, align 4
  %20 = load i8, i8* %15, align 8
  %21 = getelementptr inbounds %9, %9* %5, i64 0, i32 7
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i8 %20, 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %25 = getelementptr inbounds %37, %37* %9, i64 0, i32 2, i32 0
  %26 = call i32 @zend_add_literal(%7* %24, %2* nonnull %25) #16
  br label %31

27:                                               ; preds = %17
  %28 = getelementptr inbounds %37, %37* %9, i64 0, i32 2
  %29 = bitcast %38* %28 to i32*
  %30 = load i32, i32* %29, align 8
  br label %31

31:                                               ; preds = %27, %23
  %32 = phi i32 [ %30, %27 ], [ %26, %23 ]
  %33 = getelementptr inbounds %9, %9* %5, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds %9, %9* %5, i64 0, i32 8
  store i8 8, i8* %34, align 2
  %35 = icmp eq %37* %0, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %9, %9* %5, i64 0, i32 9
  store i8 4, i8* %37, align 1
  %38 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %39 = getelementptr inbounds %7, %7* %38, i64 0, i32 13
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %39, align 4
  %42 = getelementptr inbounds %9, %9* %5, i64 0, i32 3, i32 0
  store i32 %40, i32* %42, align 8
  %43 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %43, align 8
  %44 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %45 = bitcast %38* %44 to i32*
  store i32 %40, i32* %45, align 8
  br label %46

46:                                               ; preds = %31, %36
  %47 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32), i8* nonnull %18) #16
  %48 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %49 = bitcast i8* %48 to %9*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #16
  %50 = getelementptr inbounds i8, i8* %48, i64 29
  br label %82

51:                                               ; preds = %4
  %52 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %53 = call %9* @get_next_op(%7* %52) #16
  %54 = getelementptr inbounds %9, %9* %53, i64 0, i32 6
  store i8 -83, i8* %54, align 4
  %55 = load i8, i8* %15, align 8
  %56 = getelementptr inbounds %9, %9* %53, i64 0, i32 7
  store i8 %55, i8* %56, align 1
  %57 = icmp eq i8 %55, 1
  br i1 %57, label %58, label %62

58:                                               ; preds = %51
  %59 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %60 = getelementptr inbounds %37, %37* %9, i64 0, i32 2, i32 0
  %61 = call i32 @zend_add_literal(%7* %59, %2* nonnull %60) #16
  br label %66

62:                                               ; preds = %51
  %63 = getelementptr inbounds %37, %37* %9, i64 0, i32 2
  %64 = bitcast %38* %63 to i32*
  %65 = load i32, i32* %64, align 8
  br label %66

66:                                               ; preds = %62, %58
  %67 = phi i32 [ %65, %62 ], [ %61, %58 ]
  %68 = getelementptr inbounds %9, %9* %53, i64 0, i32 1, i32 0
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %9, %9* %53, i64 0, i32 8
  store i8 8, i8* %69, align 2
  call fastcc void @244(%9* nonnull %53) #16
  %70 = icmp eq %37* %0, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %9, %9* %53, i64 0, i32 9
  store i8 4, i8* %72, align 1
  %73 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %74 = getelementptr inbounds %7, %7* %73, i64 0, i32 13
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %9, %9* %53, i64 0, i32 3, i32 0
  store i32 %75, i32* %77, align 8
  %78 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %78, align 8
  %79 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %80 = bitcast %38* %79 to i32*
  %81 = load i32, i32* %77, align 8
  store i32 %81, i32* %80, align 8
  br label %82

82:                                               ; preds = %71, %66, %46
  %83 = phi i8* [ %56, %71 ], [ %56, %66 ], [ %50, %46 ]
  %84 = phi %9* [ %53, %71 ], [ %53, %66 ], [ %49, %46 ]
  %85 = load i8, i8* %83, align 1
  %86 = icmp eq i8 %85, 1
  br i1 %86, label %87, label %114

87:                                               ; preds = %82
  %88 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %89 = getelementptr inbounds %7, %7* %88, i64 0, i32 26
  %90 = load %2*, %2** %89, align 8
  %91 = getelementptr inbounds %9, %9* %84, i64 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %2, %2* %90, i64 %93, i32 1
  %95 = bitcast %4* %94 to i8*
  %96 = load i8, i8* %95, align 8
  %97 = icmp eq i8 %96, 6
  br i1 %97, label %105, label %98

98:                                               ; preds = %87
  %99 = getelementptr inbounds %2, %2* %90, i64 %93
  call void @_convert_to_string(%2* %99) #16
  %100 = load i32, i32* %91, align 8
  %101 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %102 = getelementptr inbounds %7, %7* %101, i64 0, i32 26
  %103 = load %2*, %2** %102, align 8
  %104 = zext i32 %100 to i64
  br label %105

105:                                              ; preds = %87, %98
  %106 = phi i64 [ %93, %87 ], [ %104, %98 ]
  %107 = phi %2* [ %90, %87 ], [ %103, %98 ]
  %108 = phi %7* [ %88, %87 ], [ %101, %98 ]
  %109 = getelementptr inbounds %7, %7* %108, i64 0, i32 27
  %110 = load i32, i32* %109, align 8
  %111 = getelementptr inbounds %2, %2* %107, i64 %106, i32 2, i32 0
  store i32 %110, i32* %111, align 4
  %112 = load i32, i32* %109, align 8
  %113 = add i32 %112, 16
  store i32 %113, i32* %109, align 8
  br label %114

114:                                              ; preds = %105, %82
  %115 = load i8, i8* %14, align 8
  %116 = icmp eq i8 %115, 1
  %117 = getelementptr inbounds %9, %9* %84, i64 0, i32 8
  br i1 %116, label %118, label %156

118:                                              ; preds = %114
  store i8 1, i8* %117, align 2
  %119 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %120 = getelementptr inbounds %37, %37* %8, i64 0, i32 2, i32 0, i32 0
  %121 = bitcast %3* %120 to %32**
  %122 = load %32*, %32** %121, align 8
  %123 = bitcast %2* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #16
  %124 = bitcast %2* %7 to %32**
  store %32* %122, %32** %124, align 8
  %125 = getelementptr inbounds %32, %32* %122, i64 0, i32 0, i32 1
  %126 = bitcast %18* %125 to %64*
  %127 = getelementptr inbounds %64, %64* %126, i64 0, i32 1
  %128 = load i8, i8* %127, align 1
  %129 = and i8 %128, 2
  %130 = icmp eq i8 %129, 0
  %131 = select i1 %130, i32 5126, i32 6
  %132 = getelementptr inbounds %2, %2* %7, i64 0, i32 1, i32 0
  store i32 %131, i32* %132, align 8
  %133 = call i32 @zend_add_literal(%7* %119, %2* nonnull %7) #16
  %134 = load %32*, %32** %124, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #16
  %135 = call %32* @zend_string_tolower(%32* %134) #16
  %136 = bitcast %2* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #16
  %137 = bitcast %2* %6 to %32**
  store %32* %135, %32** %137, align 8
  %138 = getelementptr inbounds %32, %32* %135, i64 0, i32 0, i32 1
  %139 = bitcast %18* %138 to %64*
  %140 = getelementptr inbounds %64, %64* %139, i64 0, i32 1
  %141 = load i8, i8* %140, align 1
  %142 = and i8 %141, 2
  %143 = icmp eq i8 %142, 0
  %144 = select i1 %143, i32 5126, i32 6
  %145 = getelementptr inbounds %2, %2* %6, i64 0, i32 1, i32 0
  store i32 %144, i32* %145, align 8
  %146 = call i32 @zend_add_literal(%7* %119, %2* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #16
  %147 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %148 = getelementptr inbounds %7, %7* %147, i64 0, i32 27
  %149 = load i32, i32* %148, align 8
  %150 = getelementptr inbounds %7, %7* %147, i64 0, i32 26
  %151 = load %2*, %2** %150, align 8
  %152 = zext i32 %133 to i64
  %153 = getelementptr inbounds %2, %2* %151, i64 %152, i32 2, i32 0
  store i32 %149, i32* %153, align 4
  %154 = load i32, i32* %148, align 8
  %155 = add i32 %154, 8
  store i32 %155, i32* %148, align 8
  br label %160

156:                                              ; preds = %114
  store i8 %115, i8* %117, align 2
  %157 = getelementptr inbounds %37, %37* %8, i64 0, i32 2
  %158 = bitcast %38* %157 to i32*
  %159 = load i32, i32* %158, align 8
  br label %160

160:                                              ; preds = %156, %118
  %161 = phi i32 [ %159, %156 ], [ %133, %118 ]
  %162 = getelementptr inbounds %9, %9* %84, i64 0, i32 2, i32 0
  store i32 %161, i32* %162, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #16
  ret %9* %84
}

; Function Attrs: nounwind uwtable
define internal fastcc void @234(%37* %0, %43* %1, i32 %2) unnamed_addr #0 {
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 64
  br i1 %7, label %133, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  call void @zend_compile_expr(%37* nonnull %4, %43* nonnull %1)
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %99

12:                                               ; preds = %8
  %13 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast %4* %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 6
  br i1 %16, label %18, label %17

17:                                               ; preds = %12
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

18:                                               ; preds = %12
  %19 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %20 = bitcast %2* %19 to %32**
  %21 = load %32*, %32** %20, align 8
  %22 = getelementptr inbounds %32, %32* %21, i64 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 4
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = getelementptr inbounds %32, %32* %21, i64 0, i32 3, i64 0
  %27 = call i32 @zend_binary_strcasecmp(i8* nonnull %26, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %57, label %29

29:                                               ; preds = %25
  %30 = load i64, i64* %22, align 8
  br label %31

31:                                               ; preds = %29, %18
  %32 = phi i64 [ %30, %29 ], [ %23, %18 ]
  %33 = icmp eq i64 %32, 6
  br i1 %33, label %34, label %44

34:                                               ; preds = %31
  %35 = getelementptr inbounds %32, %32* %21, i64 0, i32 3, i64 0
  %36 = call i32 @zend_binary_strcasecmp(i8* nonnull %35, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %57, label %38

38:                                               ; preds = %34
  %39 = load i64, i64* %22, align 8
  %40 = icmp eq i64 %39, 6
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = call i32 @zend_binary_strcasecmp(i8* nonnull %35, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %57, label %44

44:                                               ; preds = %41, %38, %31
  %45 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %45, align 8
  %46 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %47 = call %32* @zend_resolve_class_name(%32* %21, i32 0)
  %48 = bitcast %2* %46 to %32**
  store %32* %47, %32** %48, align 8
  %49 = getelementptr inbounds %32, %32* %47, i64 0, i32 0, i32 1
  %50 = bitcast %18* %49 to %64*
  %51 = getelementptr inbounds %64, %64* %50, i64 0, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = and i8 %52, 2
  %54 = icmp eq i8 %53, 0
  %55 = select i1 %54, i32 5126, i32 6
  %56 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %55, i32* %56, align 8
  br label %81

57:                                               ; preds = %25, %34, %41
  %58 = phi i32 [ 3, %41 ], [ 2, %34 ], [ 1, %25 ]
  %59 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %60 = icmp eq %1* %59, null
  br i1 %60, label %61, label %76

61:                                               ; preds = %57
  %62 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %63 = getelementptr inbounds %7, %7* %62, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 1048576
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %76

67:                                               ; preds = %61
  %68 = getelementptr inbounds %7, %7* %62, i64 0, i32 3
  %69 = load %32*, %32** %68, align 8
  %70 = icmp eq %32* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = icmp eq i32 %58, 1
  %73 = icmp eq i32 %58, 2
  %74 = select i1 %73, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0)
  %75 = select i1 %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i8* %74
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @228, i64 0, i64 0), i8* %75) #15
  unreachable

76:                                               ; preds = %57, %61, %67
  %77 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 8, i8* %77, align 8
  %78 = or i32 %58, %2
  %79 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %80 = bitcast %38* %79 to i32*
  store i32 %78, i32* %80, align 8
  br label %81

81:                                               ; preds = %76, %44
  %82 = getelementptr inbounds %32, %32* %21, i64 0, i32 0, i32 1
  %83 = bitcast %18* %82 to %64*
  %84 = getelementptr inbounds %64, %64* %83, i64 0, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = and i8 %85, 2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %132

88:                                               ; preds = %81
  %89 = getelementptr inbounds %32, %32* %21, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, -1
  store i32 %91, i32* %89, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %132

93:                                               ; preds = %88
  %94 = and i8 %85, 1
  %95 = icmp eq i8 %94, 0
  %96 = bitcast %32* %21 to i8*
  br i1 %95, label %98, label %97

97:                                               ; preds = %93
  call void @free(i8* %96) #16
  br label %132

98:                                               ; preds = %93
  call void @_efree(i8* %96) #16
  br label %132

99:                                               ; preds = %8
  %100 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %101 = call %9* @get_next_op(%7* %100) #16
  %102 = getelementptr inbounds %9, %9* %101, i64 0, i32 6
  store i8 109, i8* %102, align 4
  %103 = getelementptr inbounds %9, %9* %101, i64 0, i32 7
  store i8 8, i8* %103, align 1
  %104 = load i8, i8* %9, align 8
  %105 = getelementptr inbounds %9, %9* %101, i64 0, i32 8
  store i8 %104, i8* %105, align 2
  %106 = icmp eq i8 %104, 1
  br i1 %106, label %107, label %111

107:                                              ; preds = %99
  %108 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %109 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %110 = call i32 @zend_add_literal(%7* %108, %2* nonnull %109) #16
  br label %115

111:                                              ; preds = %99
  %112 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %113 = bitcast %38* %112 to i32*
  %114 = load i32, i32* %113, align 8
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i32 [ %114, %111 ], [ %110, %107 ]
  %117 = getelementptr inbounds %9, %9* %101, i64 0, i32 2, i32 0
  store i32 %116, i32* %117, align 4
  call fastcc void @244(%9* nonnull %101) #16
  %118 = icmp eq %37* %0, null
  br i1 %118, label %130, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %9, %9* %101, i64 0, i32 9
  store i8 4, i8* %120, align 1
  %121 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %122 = getelementptr inbounds %7, %7* %121, i64 0, i32 13
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %9, %9* %101, i64 0, i32 3, i32 0
  store i32 %123, i32* %125, align 8
  %126 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %126, align 8
  %127 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %128 = bitcast %38* %127 to i32*
  %129 = load i32, i32* %125, align 8
  store i32 %129, i32* %128, align 8
  br label %130

130:                                              ; preds = %115, %119
  %131 = getelementptr inbounds %9, %9* %101, i64 0, i32 4
  store i32 %2, i32* %131, align 4
  br label %132

132:                                              ; preds = %98, %97, %88, %81, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  br label %231

133:                                              ; preds = %3
  %134 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %135 = load i16, i16* %134, align 2
  %136 = icmp eq i16 %135, 0
  br i1 %136, label %137, label %159

137:                                              ; preds = %133
  %138 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %138, align 8
  %139 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %140 = getelementptr inbounds [1 x %43*], [1 x %43*]* %139, i64 1
  %141 = bitcast [1 x %43*]* %140 to i8*
  %142 = load i8, i8* %141, align 8
  %143 = icmp eq i8 %142, 6
  br i1 %143, label %145, label %144

144:                                              ; preds = %137
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

145:                                              ; preds = %137
  %146 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %147 = bitcast [1 x %43*]* %139 to %32**
  %148 = load %32*, %32** %147, align 8
  %149 = tail call %32* @zend_resolve_class_name(%32* %148, i32 0) #16
  %150 = bitcast %2* %146 to %32**
  store %32* %149, %32** %150, align 8
  %151 = getelementptr inbounds %32, %32* %149, i64 0, i32 0, i32 1
  %152 = bitcast %18* %151 to %64*
  %153 = getelementptr inbounds %64, %64* %152, i64 0, i32 1
  %154 = load i8, i8* %153, align 1
  %155 = and i8 %154, 2
  %156 = icmp eq i8 %155, 0
  %157 = select i1 %156, i32 5126, i32 6
  %158 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %157, i32* %158, align 8
  br label %231

159:                                              ; preds = %133
  %160 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %161 = bitcast [1 x %43*]* %160 to %32**
  %162 = load %32*, %32** %161, align 8
  %163 = getelementptr inbounds %32, %32* %162, i64 0, i32 2
  %164 = load i64, i64* %163, align 8
  %165 = icmp eq i64 %164, 4
  br i1 %165, label %166, label %172

166:                                              ; preds = %159
  %167 = getelementptr inbounds %32, %32* %162, i64 0, i32 3, i64 0
  %168 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %167, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %207, label %170

170:                                              ; preds = %166
  %171 = load i64, i64* %163, align 8
  br label %172

172:                                              ; preds = %170, %159
  %173 = phi i64 [ %171, %170 ], [ %164, %159 ]
  %174 = icmp eq i64 %173, 6
  br i1 %174, label %175, label %185

175:                                              ; preds = %172
  %176 = getelementptr inbounds %32, %32* %162, i64 0, i32 3, i64 0
  %177 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %176, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %207, label %179

179:                                              ; preds = %175
  %180 = load i64, i64* %163, align 8
  %181 = icmp eq i64 %180, 6
  br i1 %181, label %182, label %185

182:                                              ; preds = %179
  %183 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %176, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %207, label %185

185:                                              ; preds = %182, %179, %172
  %186 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %186, align 8
  %187 = getelementptr inbounds [1 x %43*], [1 x %43*]* %160, i64 1
  %188 = bitcast [1 x %43*]* %187 to i8*
  %189 = load i8, i8* %188, align 8
  %190 = icmp eq i8 %189, 6
  br i1 %190, label %192, label %191

191:                                              ; preds = %185
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

192:                                              ; preds = %185
  %193 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %194 = load %32*, %32** %161, align 8
  %195 = load i16, i16* %134, align 2
  %196 = zext i16 %195 to i32
  %197 = tail call %32* @zend_resolve_class_name(%32* %194, i32 %196) #16
  %198 = bitcast %2* %193 to %32**
  store %32* %197, %32** %198, align 8
  %199 = getelementptr inbounds %32, %32* %197, i64 0, i32 0, i32 1
  %200 = bitcast %18* %199 to %64*
  %201 = getelementptr inbounds %64, %64* %200, i64 0, i32 1
  %202 = load i8, i8* %201, align 1
  %203 = and i8 %202, 2
  %204 = icmp eq i8 %203, 0
  %205 = select i1 %204, i32 5126, i32 6
  %206 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %205, i32* %206, align 8
  br label %231

207:                                              ; preds = %166, %175, %182
  %208 = phi i32 [ 3, %182 ], [ 2, %175 ], [ 1, %166 ]
  %209 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %210 = icmp eq %1* %209, null
  br i1 %210, label %211, label %226

211:                                              ; preds = %207
  %212 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %213 = getelementptr inbounds %7, %7* %212, i64 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = and i32 %214, 1048576
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %226

217:                                              ; preds = %211
  %218 = getelementptr inbounds %7, %7* %212, i64 0, i32 3
  %219 = load %32*, %32** %218, align 8
  %220 = icmp eq %32* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = icmp eq i32 %208, 1
  %223 = icmp eq i32 %208, 2
  %224 = select i1 %223, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0)
  %225 = select i1 %222, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i8* %224
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @228, i64 0, i64 0), i8* %225) #15
  unreachable

226:                                              ; preds = %207, %211, %217
  %227 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 8, i8* %227, align 8
  %228 = or i32 %208, %2
  %229 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %230 = bitcast %38* %229 to i32*
  store i32 %228, i32* %230, align 8
  br label %231

231:                                              ; preds = %192, %226, %145, %132
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_expr(%37* %0, %43* %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = alloca %2, align 8
  %6 = alloca %37, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %8 = load i16, i16* %7, align 8
  %9 = icmp eq i16 %8, 64
  %10 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %11 = bitcast [1 x %43*]* %10 to %2*
  %12 = getelementptr inbounds %2, %2* %11, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %43, %43* %1, i64 0, i32 2
  %14 = select i1 %9, i32* %12, i32* %13
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  switch i16 %8, label %483 [
    i16 64, label %16
    i16 65, label %33
    i16 256, label %36
    i16 512, label %36
    i16 513, label %36
    i16 514, label %36
    i16 515, label %36
    i16 768, label %36
    i16 769, label %36
    i16 517, label %37
    i16 518, label %38
    i16 526, label %39
    i16 266, label %40
    i16 519, label %41
    i16 520, label %42
    i16 521, label %43
    i16 522, label %43
    i16 270, label %44
    i16 259, label %45
    i16 260, label %45
    i16 523, label %46
    i16 524, label %46
    i16 273, label %47
    i16 274, label %47
    i16 271, label %48
    i16 272, label %48
    i16 261, label %49
    i16 770, label %50
    i16 529, label %51
    i16 268, label %52
    i16 267, label %78
    i16 528, label %79
    i16 275, label %80
    i16 527, label %81
    i16 269, label %82
    i16 263, label %83
    i16 262, label %83
    i16 264, label %84
    i16 265, label %85
    i16 129, label %102
    i16 257, label %103
    i16 516, label %104
    i16 130, label %105
    i16 0, label %456
    i16 67, label %482
  ]

16:                                               ; preds = %2
  %17 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %18 = bitcast [1 x %43*]* %10 to %66**
  %19 = load %66*, %66** %18, align 8
  %20 = getelementptr inbounds [1 x %43*], [1 x %43*]* %10, i64 1
  %21 = bitcast [1 x %43*]* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = bitcast %2* %17 to %66**
  store %66* %19, %66** %23, align 8
  %24 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %22, i32* %24, align 8
  %25 = and i32 %22, 1024
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %66, %66* %19, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 4
  br label %31

31:                                               ; preds = %16, %27
  %32 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %32, align 8
  br label %484

33:                                               ; preds = %2
  %34 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %35 = bitcast [1 x %43*]* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %35, i64 24, i1 false)
  br label %484

36:                                               ; preds = %2, %2, %2, %2, %2, %2, %2
  tail call void @zend_compile_var(%37* %0, %43* nonnull %1, i32 0)
  br label %484

37:                                               ; preds = %2
  tail call void @zend_compile_assign(%37* %0, %43* nonnull %1)
  br label %484

38:                                               ; preds = %2
  tail call void @zend_compile_assign_ref(%37* %0, %43* nonnull %1)
  br label %484

39:                                               ; preds = %2
  tail call void @zend_compile_new(%37* %0, %43* nonnull %1)
  br label %484

40:                                               ; preds = %2
  tail call void @zend_compile_clone(%37* %0, %43* nonnull %1)
  br label %484

41:                                               ; preds = %2
  tail call void @zend_compile_compound_assign(%37* %0, %43* nonnull %1)
  br label %484

42:                                               ; preds = %2
  tail call void @zend_compile_binary_op(%37* %0, %43* nonnull %1)
  br label %484

43:                                               ; preds = %2, %2
  tail call void @zend_compile_greater(%37* %0, %43* nonnull %1)
  br label %484

44:                                               ; preds = %2
  tail call void @zend_compile_unary_op(%37* %0, %43* nonnull %1)
  br label %484

45:                                               ; preds = %2, %2
  tail call void @zend_compile_unary_pm(%37* %0, %43* nonnull %1)
  br label %484

46:                                               ; preds = %2, %2
  tail call void @zend_compile_short_circuiting(%37* %0, %43* nonnull %1)
  br label %484

47:                                               ; preds = %2, %2
  tail call void @zend_compile_post_incdec(%37* %0, %43* nonnull %1)
  br label %484

48:                                               ; preds = %2, %2
  tail call void @zend_compile_pre_incdec(%37* %0, %43* nonnull %1)
  br label %484

49:                                               ; preds = %2
  tail call void @zend_compile_cast(%37* %0, %43* nonnull %1)
  br label %484

50:                                               ; preds = %2
  tail call void @zend_compile_conditional(%37* %0, %43* nonnull %1)
  br label %484

51:                                               ; preds = %2
  tail call void @zend_compile_coalesce(%37* %0, %43* nonnull %1)
  br label %484

52:                                               ; preds = %2
  %53 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %54 = load %43*, %43** %53, align 8
  %55 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #16
  call void @zend_compile_expr(%37* nonnull %6, %43* %54) #16
  %56 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %57 = call %9* @get_next_op(%7* %56) #16
  %58 = getelementptr inbounds %9, %9* %57, i64 0, i32 6
  store i8 40, i8* %58, align 4
  %59 = load i8, i8* %55, align 8
  %60 = getelementptr inbounds %9, %9* %57, i64 0, i32 7
  store i8 %59, i8* %60, align 1
  %61 = icmp eq i8 %59, 1
  br i1 %61, label %62, label %66

62:                                               ; preds = %52
  %63 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %64 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %65 = call i32 @zend_add_literal(%7* %63, %2* nonnull %64) #16
  br label %70

66:                                               ; preds = %52
  %67 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %68 = bitcast %38* %67 to i32*
  %69 = load i32, i32* %68, align 8
  br label %70

70:                                               ; preds = %62, %66
  %71 = phi i32 [ %65, %62 ], [ %69, %66 ]
  %72 = getelementptr inbounds %9, %9* %57, i64 0, i32 1, i32 0
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %9, %9* %57, i64 0, i32 8
  store i8 8, i8* %73, align 2
  call fastcc void @244(%9* nonnull %57) #16
  %74 = getelementptr inbounds %9, %9* %57, i64 0, i32 4
  store i32 1, i32* %74, align 4
  %75 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %75, align 8
  %76 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 1, i64* %76, align 8
  %77 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 4, i32* %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #16
  br label %484

78:                                               ; preds = %2
  tail call void @zend_compile_exit(%37* %0, %43* nonnull %1)
  br label %484

79:                                               ; preds = %2
  tail call void @zend_compile_yield(%37* %0, %43* nonnull %1)
  br label %484

80:                                               ; preds = %2
  tail call void @zend_compile_yield_from(%37* %0, %43* nonnull %1)
  br label %484

81:                                               ; preds = %2
  tail call void @zend_compile_instanceof(%37* %0, %43* nonnull %1)
  br label %484

82:                                               ; preds = %2
  tail call void @zend_compile_include_or_eval(%37* %0, %43* nonnull %1)
  br label %484

83:                                               ; preds = %2, %2
  tail call void @zend_compile_isset_or_empty(%37* %0, %43* nonnull %1)
  br label %484

84:                                               ; preds = %2
  tail call void @zend_compile_silence(%37* %0, %43* nonnull %1)
  br label %484

85:                                               ; preds = %2
  %86 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %87 = load %43*, %43** %86, align 8
  %88 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #16
  %89 = tail call noalias i8* @_emalloc(i64 40) #17
  %90 = bitcast i8* %89 to i32*
  store i32 1, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %89, i64 4
  %92 = bitcast i8* %91 to i32*
  store i32 6, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %89, i64 8
  %94 = bitcast i8* %93 to <2 x i64>*
  store <2 x i64> <i64 0, i64 10>, <2 x i64>* %94, align 8
  %95 = getelementptr inbounds i8, i8* %89, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %95, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @166, i64 0, i64 0), i64 10, i1 false) #16
  %96 = getelementptr inbounds i8, i8* %89, i64 34
  store i8 0, i8* %96, align 1
  %97 = bitcast %2* %5 to i8**
  store i8* %89, i8** %97, align 8
  %98 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 5126, i32* %98, align 8
  %99 = call %43* @zend_ast_create_zval_ex(%2* nonnull %5, i16 zeroext 0) #16
  %100 = call %43* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 128, %43* %87) #16
  %101 = call %43* (i16, ...) @zend_ast_create(i16 zeroext 515, %43* %99, %43* %100) #16
  call void @zend_compile_expr(%37* %0, %43* %101) #16
  call void @_zval_ptr_dtor(%2* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #16
  br label %484

102:                                              ; preds = %2
  tail call void @zend_compile_array(%37* %0, %43* nonnull %1)
  br label %484

103:                                              ; preds = %2
  tail call void @zend_compile_const(%37* %0, %43* nonnull %1)
  br label %484

104:                                              ; preds = %2
  tail call void @zend_compile_class_const(%37* %0, %43* nonnull %1)
  br label %484

105:                                              ; preds = %2
  %106 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #16
  %107 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #16
  %108 = bitcast %43* %1 to %69*
  store i8 8, i8* %107, align 8
  %109 = bitcast [1 x %43*]* %10 to i32*
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %105
  %113 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %113, align 8
  br label %187

114:                                              ; preds = %105
  %115 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %116 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0, i32 1
  %117 = bitcast %4* %116 to i8*
  %118 = bitcast %2* %115 to %32**
  %119 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %120 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0, i32 1, i32 0
  %121 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1, i32 0
  br label %123

123:                                              ; preds = %114, %166
  %124 = phi i64 [ 0, %114 ], [ %170, %166 ]
  %125 = phi i32 [ 0, %114 ], [ %169, %166 ]
  %126 = phi i32 [ -1, %114 ], [ %168, %166 ]
  %127 = phi %9* [ null, %114 ], [ %167, %166 ]
  %128 = getelementptr inbounds %69, %69* %108, i64 0, i32 4, i64 %124
  %129 = load %43*, %43** %128, align 8
  call void @zend_compile_expr(%37* nonnull %3, %43* %129) #16
  %130 = load i8, i8* %106, align 8
  %131 = icmp eq i8 %130, 1
  br i1 %131, label %132, label %150

132:                                              ; preds = %123
  %133 = load i8, i8* %117, align 8
  %134 = icmp eq i8 %133, 6
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  call void @_convert_to_string(%2* nonnull %115) #16
  br label %136

136:                                              ; preds = %135, %132
  %137 = load %32*, %32** %118, align 8
  %138 = getelementptr inbounds %32, %32* %137, i64 0, i32 2
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %139, 0
  %141 = ptrtoint %32* %137 to i64
  br i1 %140, label %142, label %143

142:                                              ; preds = %136
  call void @_zval_ptr_dtor(%2* nonnull %115) #16
  br label %166

143:                                              ; preds = %136
  %144 = load i8, i8* %107, align 8
  %145 = icmp eq i8 %144, 1
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = call i32 @concat_function(%2* nonnull %119, %2* nonnull %119, %2* nonnull %115) #16
  call void @_zval_ptr_dtor(%2* nonnull %115) #16
  br label %166

148:                                              ; preds = %143
  store i8 1, i8* %107, align 8
  %149 = load i32, i32* %120, align 8
  store i64 %141, i64* %121, align 8
  store i32 %149, i32* %122, align 8
  br label %166

150:                                              ; preds = %123
  %151 = icmp eq i32 %125, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %150
  %153 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %154 = call i32 @get_next_op_number(%7* %153) #16
  br label %155

155:                                              ; preds = %152, %150
  %156 = phi i32 [ %154, %152 ], [ %126, %150 ]
  %157 = load i8, i8* %107, align 8
  %158 = icmp eq i8 %157, 1
  br i1 %158, label %159, label %162

159:                                              ; preds = %155
  %160 = add i32 %125, 1
  %161 = call fastcc %9* @262(%37* %0, i32 %125, %37* nonnull %4) #16
  store i8 8, i8* %107, align 8
  br label %162

162:                                              ; preds = %159, %155
  %163 = phi i32 [ %160, %159 ], [ %125, %155 ]
  %164 = add i32 %163, 1
  %165 = call fastcc %9* @262(%37* %0, i32 %163, %37* nonnull %3) #16
  br label %166

166:                                              ; preds = %162, %148, %146, %142
  %167 = phi %9* [ %127, %142 ], [ %127, %146 ], [ %127, %148 ], [ %165, %162 ]
  %168 = phi i32 [ %126, %142 ], [ %126, %146 ], [ %126, %148 ], [ %156, %162 ]
  %169 = phi i32 [ %125, %142 ], [ %125, %146 ], [ %125, %148 ], [ %164, %162 ]
  %170 = add nuw nsw i64 %124, 1
  %171 = load i32, i32* %109, align 8
  %172 = zext i32 %171 to i64
  %173 = icmp ult i64 %170, %172
  br i1 %173, label %123, label %174

174:                                              ; preds = %166
  %175 = icmp eq i32 %169, 0
  %176 = load i8, i8* %107, align 8
  br i1 %175, label %177, label %191

177:                                              ; preds = %174
  %178 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %178, align 8
  %179 = icmp eq i8 %176, 1
  br i1 %179, label %180, label %187

180:                                              ; preds = %177
  %181 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1, i32 0
  %184 = load i32, i32* %183, align 8
  %185 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %182, i64* %185, align 8
  %186 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %184, i32* %186, align 8
  br label %455

187:                                              ; preds = %112, %177
  %188 = load i64, i64* bitcast (%32** @zend_empty_string to i64*), align 8
  %189 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 6, i32* %190, align 8
  br label %455

191:                                              ; preds = %174
  %192 = icmp eq i8 %176, 1
  br i1 %192, label %193, label %196

193:                                              ; preds = %191
  %194 = add i32 %169, 1
  %195 = call fastcc %9* @262(%37* %0, i32 %169, %37* nonnull %4) #16
  br label %196

196:                                              ; preds = %193, %191
  %197 = phi %9* [ %195, %193 ], [ %167, %191 ]
  %198 = phi i32 [ %194, %193 ], [ %169, %191 ]
  %199 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %200 = getelementptr inbounds %7, %7* %199, i64 0, i32 11
  %201 = load %9*, %9** %200, align 8
  %202 = ptrtoint %9* %201 to i64
  %203 = zext i32 %168 to i64
  %204 = getelementptr inbounds %9, %9* %201, i64 %203
  switch i32 %198, label %283 [
    i32 1, label %205
    i32 2, label %244
  ]

205:                                              ; preds = %196
  %206 = getelementptr inbounds %9, %9* %197, i64 0, i32 8
  %207 = load i8, i8* %206, align 2
  %208 = icmp eq i8 %207, 1
  br i1 %208, label %209, label %227

209:                                              ; preds = %205
  %210 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %210, align 8
  %211 = getelementptr inbounds %7, %7* %199, i64 0, i32 26
  %212 = load %2*, %2** %211, align 8
  %213 = getelementptr inbounds %9, %9* %197, i64 0, i32 2, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds %2, %2* %212, i64 %215, i32 0, i32 0
  %217 = load i64, i64* %216, align 8
  %218 = getelementptr inbounds %2, %2* %212, i64 %215, i32 1, i32 0
  %219 = load i32, i32* %218, align 8
  %220 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %217, i64* %220, align 8
  %221 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %219, i32* %221, align 8
  %222 = getelementptr inbounds %9, %9* %197, i64 0, i32 1, i32 0
  store i32 0, i32* %222, align 8
  store i32 0, i32* %213, align 4
  %223 = getelementptr inbounds %9, %9* %197, i64 0, i32 3, i32 0
  store i32 0, i32* %223, align 8
  %224 = getelementptr inbounds %9, %9* %197, i64 0, i32 6
  store i8 0, i8* %224, align 4
  %225 = getelementptr inbounds %9, %9* %197, i64 0, i32 7
  store i8 8, i8* %225, align 1
  store i8 8, i8* %206, align 2
  %226 = getelementptr inbounds %9, %9* %197, i64 0, i32 9
  store i8 8, i8* %226, align 1
  br label %455

227:                                              ; preds = %205
  %228 = getelementptr inbounds %9, %9* %197, i64 0, i32 6
  store i8 21, i8* %228, align 4
  %229 = getelementptr inbounds %9, %9* %197, i64 0, i32 4
  store i32 6, i32* %229, align 4
  %230 = getelementptr inbounds %9, %9* %197, i64 0, i32 7
  store i8 %207, i8* %230, align 1
  %231 = getelementptr inbounds %9, %9* %197, i64 0, i32 2, i32 0
  %232 = getelementptr inbounds %9, %9* %197, i64 0, i32 1, i32 0
  %233 = load i32, i32* %231, align 4
  store i32 %233, i32* %232, align 8
  %234 = getelementptr inbounds %9, %9* %197, i64 0, i32 9
  store i8 2, i8* %234, align 1
  %235 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %236 = getelementptr inbounds %7, %7* %235, i64 0, i32 13
  %237 = load i32, i32* %236, align 4
  %238 = add i32 %237, 1
  store i32 %238, i32* %236, align 4
  %239 = getelementptr inbounds %9, %9* %197, i64 0, i32 3, i32 0
  store i32 %237, i32* %239, align 8
  store i8 8, i8* %206, align 2
  %240 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %240, align 8
  %241 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %242 = bitcast %38* %241 to i32*
  %243 = load i32, i32* %239, align 8
  store i32 %243, i32* %242, align 8
  br label %455

244:                                              ; preds = %196
  %245 = getelementptr inbounds %9, %9* %197, i64 0, i32 6
  store i8 53, i8* %245, align 4
  %246 = getelementptr inbounds %9, %9* %197, i64 0, i32 4
  store i32 0, i32* %246, align 4
  %247 = getelementptr inbounds %9, %9* %201, i64 %203, i32 8
  %248 = load i8, i8* %247, align 2
  %249 = getelementptr inbounds %9, %9* %197, i64 0, i32 7
  store i8 %248, i8* %249, align 1
  %250 = getelementptr inbounds %9, %9* %201, i64 %203, i32 2, i32 0
  %251 = getelementptr inbounds %9, %9* %197, i64 0, i32 1, i32 0
  %252 = load i32, i32* %250, align 4
  store i32 %252, i32* %251, align 8
  %253 = getelementptr inbounds %9, %9* %197, i64 0, i32 9
  store i8 2, i8* %253, align 1
  %254 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %255 = getelementptr inbounds %7, %7* %254, i64 0, i32 13
  %256 = load i32, i32* %255, align 4
  %257 = add i32 %256, 1
  store i32 %257, i32* %255, align 4
  %258 = getelementptr inbounds %9, %9* %197, i64 0, i32 3, i32 0
  store i32 %256, i32* %258, align 8
  %259 = getelementptr inbounds %9, %9* %201, i64 %203, i32 1, i32 0
  store i32 0, i32* %259, align 8
  store i32 0, i32* %250, align 4
  %260 = getelementptr inbounds %9, %9* %201, i64 %203, i32 3, i32 0
  store i32 0, i32* %260, align 8
  %261 = getelementptr inbounds %9, %9* %201, i64 %203, i32 6
  store i8 0, i8* %261, align 4
  %262 = getelementptr inbounds %9, %9* %201, i64 %203, i32 7
  store i8 8, i8* %262, align 1
  store i8 8, i8* %247, align 2
  %263 = getelementptr inbounds %9, %9* %201, i64 %203, i32 9
  store i8 8, i8* %263, align 1
  %264 = load i8, i8* %253, align 1
  %265 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 %264, i8* %265, align 8
  %266 = icmp eq i8 %264, 1
  br i1 %266, label %267, label %279

267:                                              ; preds = %244
  %268 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %269 = getelementptr inbounds %7, %7* %268, i64 0, i32 26
  %270 = load %2*, %2** %269, align 8
  %271 = load i32, i32* %258, align 8
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds %2, %2* %270, i64 %272, i32 0, i32 0
  %274 = load i64, i64* %273, align 8
  %275 = getelementptr inbounds %2, %2* %270, i64 %272, i32 1, i32 0
  %276 = load i32, i32* %275, align 8
  %277 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %274, i64* %277, align 8
  %278 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %276, i32* %278, align 8
  br label %455

279:                                              ; preds = %244
  %280 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %281 = bitcast %38* %280 to i32*
  %282 = load i32, i32* %258, align 8
  store i32 %282, i32* %281, align 8
  br label %455

283:                                              ; preds = %196
  %284 = call fastcc i32 @259(%7* %199, i32 %168) #16
  %285 = getelementptr inbounds %9, %9* %201, i64 %203, i32 4
  store i32 %198, i32* %285, align 4
  %286 = getelementptr inbounds %9, %9* %197, i64 0, i32 6
  store i8 56, i8* %286, align 4
  %287 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %288 = getelementptr inbounds %7, %7* %287, i64 0, i32 13
  %289 = load i32, i32* %288, align 4
  %290 = add i32 %289, 1
  store i32 %290, i32* %288, align 4
  %291 = getelementptr inbounds %9, %9* %197, i64 0, i32 3, i32 0
  store i32 %289, i32* %291, align 8
  %292 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %293 = getelementptr inbounds %7, %7* %292, i64 0, i32 13
  %294 = load i32, i32* %293, align 4
  %295 = add i32 %294, 1
  store i32 %295, i32* %293, align 4
  %296 = getelementptr inbounds %9, %9* %197, i64 0, i32 1, i32 0
  store i32 %294, i32* %296, align 8
  %297 = getelementptr inbounds %9, %9* %197, i64 0, i32 9
  %298 = load i8, i8* %297, align 1
  %299 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 %298, i8* %299, align 8
  %300 = icmp eq i8 %298, 1
  br i1 %300, label %301, label %313

301:                                              ; preds = %283
  %302 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %303 = getelementptr inbounds %7, %7* %302, i64 0, i32 26
  %304 = load %2*, %2** %303, align 8
  %305 = load i32, i32* %291, align 8
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds %2, %2* %304, i64 %306, i32 0, i32 0
  %308 = load i64, i64* %307, align 8
  %309 = getelementptr inbounds %2, %2* %304, i64 %306, i32 1, i32 0
  %310 = load i32, i32* %309, align 8
  %311 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %308, i64* %311, align 8
  %312 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %310, i32* %312, align 8
  br label %317

313:                                              ; preds = %283
  %314 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %315 = bitcast %38* %314 to i32*
  %316 = load i32, i32* %291, align 8
  store i32 %316, i32* %315, align 8
  br label %317

317:                                              ; preds = %313, %301
  %318 = zext i32 %198 to i64
  %319 = shl nuw nsw i64 %318, 3
  %320 = add nuw nsw i64 %319, 15
  %321 = lshr i64 %320, 4
  %322 = trunc i64 %321 to i32
  %323 = icmp ugt i32 %322, 1
  %324 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  br i1 %323, label %325, label %384

325:                                              ; preds = %317
  %326 = getelementptr inbounds %7, %7* %324, i64 0, i32 13
  %327 = load i32, i32* %326, align 4
  %328 = add i32 %322, -1
  %329 = icmp ult i32 %328, 8
  br i1 %329, label %373, label %330

330:                                              ; preds = %325
  %331 = and i32 %328, -8
  %332 = sub i32 %322, %331
  %333 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %327, i32 0
  %334 = add i32 %331, -8
  %335 = lshr exact i32 %334, 3
  %336 = add nuw nsw i32 %335, 1
  %337 = and i32 %336, 7
  %338 = icmp ult i32 %334, 56
  br i1 %338, label %349, label %339

339:                                              ; preds = %330
  %340 = sub nsw i32 %336, %337
  br label %341

341:                                              ; preds = %341, %339
  %342 = phi <4 x i32> [ %333, %339 ], [ %345, %341 ]
  %343 = phi <4 x i32> [ zeroinitializer, %339 ], [ %346, %341 ]
  %344 = phi i32 [ %340, %339 ], [ %347, %341 ]
  %345 = add <4 x i32> %342, <i32 8, i32 8, i32 8, i32 8>
  %346 = add <4 x i32> %343, <i32 8, i32 8, i32 8, i32 8>
  %347 = add i32 %344, -8
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %341

349:                                              ; preds = %341, %330
  %350 = phi <4 x i32> [ undef, %330 ], [ %345, %341 ]
  %351 = phi <4 x i32> [ undef, %330 ], [ %346, %341 ]
  %352 = phi <4 x i32> [ %333, %330 ], [ %345, %341 ]
  %353 = phi <4 x i32> [ zeroinitializer, %330 ], [ %346, %341 ]
  %354 = icmp eq i32 %337, 0
  br i1 %354, label %363, label %355

355:                                              ; preds = %349, %355
  %356 = phi <4 x i32> [ %359, %355 ], [ %352, %349 ]
  %357 = phi <4 x i32> [ %360, %355 ], [ %353, %349 ]
  %358 = phi i32 [ %361, %355 ], [ %337, %349 ]
  %359 = add <4 x i32> %356, <i32 1, i32 1, i32 1, i32 1>
  %360 = add <4 x i32> %357, <i32 1, i32 1, i32 1, i32 1>
  %361 = add i32 %358, -1
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %355

363:                                              ; preds = %355, %349
  %364 = phi <4 x i32> [ %350, %349 ], [ %359, %355 ]
  %365 = phi <4 x i32> [ %351, %349 ], [ %360, %355 ]
  %366 = add <4 x i32> %365, %364
  %367 = shufflevector <4 x i32> %366, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %368 = add <4 x i32> %366, %367
  %369 = shufflevector <4 x i32> %368, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %370 = add <4 x i32> %368, %369
  %371 = extractelement <4 x i32> %370, i32 0
  %372 = icmp eq i32 %328, %331
  br i1 %372, label %382, label %373

373:                                              ; preds = %363, %325
  %374 = phi i32 [ %327, %325 ], [ %371, %363 ]
  %375 = phi i32 [ %322, %325 ], [ %332, %363 ]
  br label %376

376:                                              ; preds = %373, %376
  %377 = phi i32 [ %379, %376 ], [ %374, %373 ]
  %378 = phi i32 [ %380, %376 ], [ %375, %373 ]
  %379 = add i32 %377, 1
  %380 = add i32 %378, -1
  %381 = icmp ugt i32 %380, 1
  br i1 %381, label %376, label %382

382:                                              ; preds = %376, %363
  %383 = phi i32 [ %371, %363 ], [ %379, %376 ]
  store i32 %383, i32* %326, align 4
  br label %384

384:                                              ; preds = %382, %317
  %385 = getelementptr inbounds %7, %7* %324, i64 0, i32 11
  %386 = bitcast %9** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = ptrtoint %9* %197 to i64
  %389 = sub i64 %388, %387
  %390 = lshr exact i64 %389, 5
  %391 = trunc i64 %390 to i32
  %392 = getelementptr inbounds %7, %7* %324, i64 0, i32 17
  %393 = load %11*, %11** %392, align 8
  %394 = zext i32 %284 to i64
  %395 = getelementptr inbounds %11, %11* %393, i64 %394, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = icmp eq i32 %396, %391
  br i1 %397, label %398, label %404

398:                                              ; preds = %384
  %399 = getelementptr inbounds %7, %7* %324, i64 0, i32 15
  %400 = load i32, i32* %399, align 8
  %401 = add i32 %400, -1
  %402 = icmp eq i32 %401, %284
  br i1 %402, label %403, label %404

403:                                              ; preds = %398
  store i32 %284, i32* %399, align 8
  br label %409

404:                                              ; preds = %398, %384
  %405 = getelementptr inbounds %11, %11* %393, i64 %394, i32 2
  store i32 %391, i32* %405, align 4
  %406 = shl i32 %294, 4
  %407 = or i32 %406, 3
  %408 = getelementptr inbounds %11, %11* %393, i64 %394, i32 0
  store i32 %407, i32* %408, align 4
  br label %409

409:                                              ; preds = %404, %403
  %410 = icmp eq %9* %197, %204
  br i1 %410, label %455, label %411

411:                                              ; preds = %409
  %412 = xor i64 %203, -1
  %413 = getelementptr %9, %9* %197, i64 %412, i32 0
  %414 = ptrtoint i8** %413 to i64
  %415 = sub i64 %414, %202
  %416 = and i64 %415, 32
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %418, label %433

418:                                              ; preds = %411
  %419 = getelementptr inbounds %9, %9* %197, i64 -1
  %420 = getelementptr inbounds %9, %9* %197, i64 -1, i32 6
  %421 = load i8, i8* %420, align 4
  switch i8 %421, label %433 [
    i8 55, label %427
    i8 54, label %422
  ]

422:                                              ; preds = %418
  %423 = getelementptr inbounds %9, %9* %197, i64 -1, i32 3, i32 0
  %424 = load i32, i32* %423, align 8
  %425 = icmp eq i32 %424, -1
  br i1 %425, label %426, label %433

426:                                              ; preds = %422
  store i32 %294, i32* %423, align 8
  br label %433

427:                                              ; preds = %418
  %428 = getelementptr inbounds %9, %9* %197, i64 -1, i32 3, i32 0
  %429 = load i32, i32* %428, align 8
  %430 = icmp eq i32 %429, -1
  br i1 %430, label %431, label %433

431:                                              ; preds = %427
  %432 = getelementptr inbounds %9, %9* %197, i64 -1, i32 1, i32 0
  store i32 %294, i32* %432, align 8
  store i32 %294, i32* %428, align 8
  br label %433

433:                                              ; preds = %418, %422, %426, %427, %431, %411
  %434 = phi %9* [ %197, %411 ], [ %419, %431 ], [ %419, %427 ], [ %419, %426 ], [ %419, %422 ], [ %419, %418 ]
  %435 = icmp ult i64 %415, 32
  br i1 %435, label %455, label %436

436:                                              ; preds = %433, %496
  %437 = phi %9* [ %452, %496 ], [ %434, %433 ]
  %438 = getelementptr inbounds %9, %9* %437, i64 -1, i32 6
  %439 = load i8, i8* %438, align 4
  switch i8 %439, label %451 [
    i8 55, label %440
    i8 54, label %446
  ]

440:                                              ; preds = %436
  %441 = getelementptr inbounds %9, %9* %437, i64 -1, i32 3, i32 0
  %442 = load i32, i32* %441, align 8
  %443 = icmp eq i32 %442, -1
  br i1 %443, label %444, label %451

444:                                              ; preds = %440
  %445 = getelementptr inbounds %9, %9* %437, i64 -1, i32 1, i32 0
  store i32 %294, i32* %445, align 8
  store i32 %294, i32* %441, align 8
  br label %451

446:                                              ; preds = %436
  %447 = getelementptr inbounds %9, %9* %437, i64 -1, i32 3, i32 0
  %448 = load i32, i32* %447, align 8
  %449 = icmp eq i32 %448, -1
  br i1 %449, label %450, label %451

450:                                              ; preds = %446
  store i32 %294, i32* %447, align 8
  br label %451

451:                                              ; preds = %436, %440, %450, %446, %444
  %452 = getelementptr inbounds %9, %9* %437, i64 -2
  %453 = getelementptr inbounds %9, %9* %437, i64 -2, i32 6
  %454 = load i8, i8* %453, align 4
  switch i8 %454, label %496 [
    i8 55, label %490
    i8 54, label %485
  ]

455:                                              ; preds = %433, %496, %409, %180, %187, %209, %227, %267, %279
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #16
  br label %484

456:                                              ; preds = %2
  %457 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %458 = tail call fastcc zeroext i8 @257(%2* nonnull %457, %43* nonnull %1) #16
  %459 = icmp eq i8 %458, 0
  br i1 %459, label %462, label %460

460:                                              ; preds = %456
  %461 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %461, align 8
  br label %484

462:                                              ; preds = %456
  %463 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %464 = tail call %9* @get_next_op(%7* %463) #16
  %465 = getelementptr inbounds %9, %9* %464, i64 0, i32 6
  store i8 -99, i8* %465, align 4
  %466 = getelementptr inbounds %9, %9* %464, i64 0, i32 7
  store i8 8, i8* %466, align 1
  %467 = getelementptr inbounds %9, %9* %464, i64 0, i32 8
  store i8 8, i8* %467, align 2
  tail call fastcc void @244(%9* nonnull %464) #16
  %468 = icmp eq %37* %0, null
  br i1 %468, label %480, label %469

469:                                              ; preds = %462
  %470 = getelementptr inbounds %9, %9* %464, i64 0, i32 9
  store i8 2, i8* %470, align 1
  %471 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %472 = getelementptr inbounds %7, %7* %471, i64 0, i32 13
  %473 = load i32, i32* %472, align 4
  %474 = add i32 %473, 1
  store i32 %474, i32* %472, align 4
  %475 = getelementptr inbounds %9, %9* %464, i64 0, i32 3, i32 0
  store i32 %473, i32* %475, align 8
  %476 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %476, align 8
  %477 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %478 = bitcast %38* %477 to i32*
  %479 = load i32, i32* %475, align 8
  store i32 %479, i32* %478, align 8
  br label %480

480:                                              ; preds = %469, %462
  %481 = getelementptr inbounds %9, %9* %464, i64 0, i32 4
  store i32 1, i32* %481, align 4
  br label %484

482:                                              ; preds = %2
  tail call void @zend_compile_func_decl(%37* %0, %43* nonnull %1)
  br label %484

483:                                              ; preds = %2
  unreachable

484:                                              ; preds = %480, %460, %31, %33, %36, %37, %38, %39, %40, %41, %42, %43, %44, %45, %46, %47, %48, %49, %50, %51, %70, %78, %79, %80, %81, %82, %83, %84, %85, %102, %103, %104, %455, %482
  ret void

485:                                              ; preds = %451
  %486 = getelementptr inbounds %9, %9* %437, i64 -2, i32 3, i32 0
  %487 = load i32, i32* %486, align 8
  %488 = icmp eq i32 %487, -1
  br i1 %488, label %489, label %496

489:                                              ; preds = %485
  store i32 %294, i32* %486, align 8
  br label %496

490:                                              ; preds = %451
  %491 = getelementptr inbounds %9, %9* %437, i64 -2, i32 3, i32 0
  %492 = load i32, i32* %491, align 8
  %493 = icmp eq i32 %492, -1
  br i1 %493, label %494, label %496

494:                                              ; preds = %490
  %495 = getelementptr inbounds %9, %9* %437, i64 -2, i32 1, i32 0
  store i32 %294, i32* %495, align 8
  store i32 %294, i32* %491, align 8
  br label %496

496:                                              ; preds = %494, %490, %489, %485, %451
  %497 = icmp eq %9* %452, %204
  br i1 %497, label %455, label %436
}

declare dso_local void @_convert_to_string(%2*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_static_prop(%37* %0, %43* nocapture readonly %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = tail call %9* @zend_compile_static_prop_common(%37* %0, %43* %1, i32 undef, i32 %3)
  %6 = getelementptr inbounds %9, %9* %5, i64 0, i32 6
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, -83
  %9 = select i1 %8, i8 1, i8 3
  %10 = icmp eq i8 %7, -72
  br i1 %10, label %32, label %11

11:                                               ; preds = %4
  %12 = trunc i32 %2 to i3
  switch i3 %12, label %31 [
    i3 0, label %32
    i3 1, label %13
    i3 2, label %15
    i3 3, label %18
    i3 -4, label %21
    i3 -3, label %28
  ]

13:                                               ; preds = %11
  %14 = add i8 %9, %7
  store i8 %14, i8* %6, align 4
  br label %32

15:                                               ; preds = %11
  %16 = shl nuw nsw i8 %9, 1
  %17 = add i8 %16, %7
  store i8 %17, i8* %6, align 4
  br label %32

18:                                               ; preds = %11
  %19 = mul nuw nsw i8 %9, 3
  %20 = add i8 %19, %7
  store i8 %20, i8* %6, align 4
  br label %32

21:                                               ; preds = %11
  %22 = shl nuw nsw i8 %9, 2
  %23 = add i8 %22, %7
  store i8 %23, i8* %6, align 4
  %24 = lshr i32 %2, 3
  %25 = getelementptr inbounds %9, %9* %5, i64 0, i32 4
  %26 = load i32, i32* %25, align 4
  %27 = or i32 %26, %24
  store i32 %27, i32* %25, align 4
  br label %32

28:                                               ; preds = %11
  %29 = mul nuw nsw i8 %9, 5
  %30 = add i8 %29, %7
  store i8 %30, i8* %6, align 4
  br label %32

31:                                               ; preds = %11
  unreachable

32:                                               ; preds = %4, %11, %13, %15, %18, %21, %28
  ret void
}

; Function Attrs: nounwind uwtable
define hidden zeroext i8 @zend_is_assign_to_self(%43* nocapture readonly %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %4 = load i16, i16* %3, align 8
  %5 = icmp eq i16 %4, 256
  br i1 %5, label %6, label %124

6:                                                ; preds = %2
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %8, i64 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 64
  br i1 %11, label %12, label %124

12:                                               ; preds = %6, %16
  %13 = phi %43* [ %18, %16 ], [ %0, %6 ]
  %14 = getelementptr inbounds %43, %43* %13, i64 0, i32 0
  %15 = load i16, i16* %14, align 8
  switch i16 %15, label %124 [
    i16 256, label %19
    i16 512, label %16
    i16 513, label %16
    i16 514, label %16
    i16 515, label %16
    i16 768, label %16
    i16 769, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12, %12
  %17 = getelementptr inbounds %43, %43* %13, i64 0, i32 3, i64 0
  %18 = load %43*, %43** %17, align 8
  br label %12

19:                                               ; preds = %12
  %20 = getelementptr inbounds %43, %43* %13, i64 0, i32 3, i64 0
  %21 = load %43*, %43** %20, align 8
  %22 = getelementptr inbounds %43, %43* %21, i64 0, i32 0
  %23 = load i16, i16* %22, align 8
  %24 = icmp eq i16 %23, 64
  br i1 %24, label %25, label %124

25:                                               ; preds = %19
  %26 = getelementptr inbounds %43, %43* %21, i64 0, i32 3
  %27 = getelementptr inbounds [1 x %43*], [1 x %43*]* %26, i64 1
  %28 = bitcast [1 x %43*]* %27 to i8*
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 6
  br i1 %30, label %31, label %44

31:                                               ; preds = %25
  %32 = bitcast [1 x %43*]* %26 to %32**
  %33 = load %32*, %32** %32, align 8
  %34 = getelementptr inbounds %32, %32* %33, i64 0, i32 0, i32 1
  %35 = bitcast %18* %34 to %64*
  %36 = getelementptr inbounds %64, %64* %35, i64 0, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, 2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %48

40:                                               ; preds = %31
  %41 = getelementptr inbounds %32, %32* %33, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = add i32 %42, 1
  store i32 %43, i32* %41, align 8
  br label %48

44:                                               ; preds = %25
  %45 = bitcast [1 x %43*]* %26 to %2*
  %46 = tail call %32* @_zval_get_string_func(%2* nonnull %45) #16
  %47 = load %43*, %43** %7, align 8
  br label %48

48:                                               ; preds = %31, %40, %44
  %49 = phi %43* [ %47, %44 ], [ %8, %31 ], [ %8, %40 ]
  %50 = phi %32* [ %46, %44 ], [ %33, %31 ], [ %33, %40 ]
  %51 = getelementptr inbounds %43, %43* %49, i64 0, i32 3
  %52 = getelementptr inbounds [1 x %43*], [1 x %43*]* %51, i64 1
  %53 = bitcast [1 x %43*]* %52 to i8*
  %54 = load i8, i8* %53, align 8
  %55 = icmp eq i8 %54, 6
  br i1 %55, label %56, label %69

56:                                               ; preds = %48
  %57 = bitcast [1 x %43*]* %51 to %32**
  %58 = load %32*, %32** %57, align 8
  %59 = getelementptr inbounds %32, %32* %58, i64 0, i32 0, i32 1
  %60 = bitcast %18* %59 to %64*
  %61 = getelementptr inbounds %64, %64* %60, i64 0, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = and i8 %62, 2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %56
  %66 = getelementptr inbounds %32, %32* %58, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 1
  store i32 %68, i32* %66, align 8
  br label %72

69:                                               ; preds = %48
  %70 = bitcast [1 x %43*]* %51 to %2*
  %71 = tail call %32* @_zval_get_string_func(%2* nonnull %70) #16
  br label %72

72:                                               ; preds = %56, %65, %69
  %73 = phi %32* [ %71, %69 ], [ %58, %56 ], [ %58, %65 ]
  %74 = icmp eq %32* %50, %73
  br i1 %74, label %87, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %32, %32* %50, i64 0, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %32, %32* %73, i64 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %77, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %75
  %82 = getelementptr inbounds %32, %32* %50, i64 0, i32 3, i64 0
  %83 = getelementptr inbounds %32, %32* %73, i64 0, i32 3, i64 0
  %84 = tail call i32 @memcmp(i8* nonnull %82, i8* nonnull %83, i64 %77) #19
  %85 = icmp eq i32 %84, 0
  %86 = zext i1 %85 to i8
  br label %87

87:                                               ; preds = %72, %75, %81
  %88 = phi i8 [ 1, %72 ], [ 0, %75 ], [ %86, %81 ]
  %89 = getelementptr inbounds %32, %32* %50, i64 0, i32 0, i32 1
  %90 = bitcast %18* %89 to %64*
  %91 = getelementptr inbounds %64, %64* %90, i64 0, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = and i8 %92, 2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %106

95:                                               ; preds = %87
  %96 = getelementptr inbounds %32, %32* %50, i64 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, -1
  store i32 %98, i32* %96, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %95
  %101 = and i8 %92, 1
  %102 = icmp eq i8 %101, 0
  %103 = bitcast %32* %50 to i8*
  br i1 %102, label %105, label %104

104:                                              ; preds = %100
  tail call void @free(i8* %103) #16
  br label %106

105:                                              ; preds = %100
  tail call void @_efree(i8* %103) #16
  br label %106

106:                                              ; preds = %87, %95, %104, %105
  %107 = getelementptr inbounds %32, %32* %73, i64 0, i32 0, i32 1
  %108 = bitcast %18* %107 to %64*
  %109 = getelementptr inbounds %64, %64* %108, i64 0, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = and i8 %110, 2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %124

113:                                              ; preds = %106
  %114 = getelementptr inbounds %32, %32* %73, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = add i32 %115, -1
  store i32 %116, i32* %114, align 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %124

118:                                              ; preds = %113
  %119 = and i8 %110, 1
  %120 = icmp eq i8 %119, 0
  %121 = bitcast %32* %73 to i8*
  br i1 %120, label %123, label %122

122:                                              ; preds = %118
  tail call void @free(i8* %121) #16
  br label %124

123:                                              ; preds = %118
  tail call void @_efree(i8* %121) #16
  br label %124

124:                                              ; preds = %12, %123, %122, %113, %106, %19, %2, %6
  %125 = phi i8 [ 0, %6 ], [ 0, %2 ], [ 0, %19 ], [ %88, %106 ], [ %88, %113 ], [ %88, %122 ], [ %88, %123 ], [ 0, %12 ]
  ret i8 %125
}

; Function Attrs: nounwind uwtable
define hidden zeroext i8 @zend_list_has_assign_to(%43* nocapture readonly %0, %32* readonly %1) local_unnamed_addr #0 {
  %3 = bitcast %43* %0 to %69*
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %5 = bitcast [1 x %43*]* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %97, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %32, %32* %1, i64 0, i32 2
  %10 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  br label %11

11:                                               ; preds = %8, %92
  %12 = phi i64 [ 0, %8 ], [ %93, %92 ]
  %13 = getelementptr inbounds %69, %69* %3, i64 0, i32 4, i64 %12
  %14 = load %43*, %43** %13, align 8
  %15 = icmp eq %43* %14, null
  br i1 %15, label %92, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %43, %43* %14, i64 0, i32 3, i64 0
  %18 = load %43*, %43** %17, align 8
  %19 = getelementptr inbounds %43, %43* %18, i64 0, i32 0
  %20 = load i16, i16* %19, align 8
  %21 = icmp eq i16 %20, 129
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = tail call zeroext i8 @zend_list_has_assign_to(%43* %18, %32* %1)
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %97

25:                                               ; preds = %22
  %26 = load i16, i16* %19, align 8
  br label %27

27:                                               ; preds = %25, %16
  %28 = phi i16 [ %26, %25 ], [ %20, %16 ]
  %29 = icmp eq i16 %28, 256
  br i1 %29, label %30, label %92

30:                                               ; preds = %27
  %31 = getelementptr inbounds %43, %43* %18, i64 0, i32 3, i64 0
  %32 = load %43*, %43** %31, align 8
  %33 = getelementptr inbounds %43, %43* %32, i64 0, i32 0
  %34 = load i16, i16* %33, align 8
  %35 = icmp eq i16 %34, 64
  br i1 %35, label %36, label %92

36:                                               ; preds = %30
  %37 = getelementptr inbounds %43, %43* %32, i64 0, i32 3
  %38 = getelementptr inbounds [1 x %43*], [1 x %43*]* %37, i64 1
  %39 = bitcast [1 x %43*]* %38 to i8*
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %40, 6
  br i1 %41, label %42, label %55

42:                                               ; preds = %36
  %43 = bitcast [1 x %43*]* %37 to %32**
  %44 = load %32*, %32** %43, align 8
  %45 = getelementptr inbounds %32, %32* %44, i64 0, i32 0, i32 1
  %46 = bitcast %18* %45 to %64*
  %47 = getelementptr inbounds %64, %64* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = and i8 %48, 2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %42
  %52 = getelementptr inbounds %32, %32* %44, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 8
  br label %58

55:                                               ; preds = %36
  %56 = bitcast [1 x %43*]* %37 to %2*
  %57 = tail call %32* @_zval_get_string_func(%2* nonnull %56) #16
  br label %58

58:                                               ; preds = %42, %51, %55
  %59 = phi %32* [ %57, %55 ], [ %44, %42 ], [ %44, %51 ]
  %60 = icmp eq %32* %59, %1
  br i1 %60, label %71, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %32, %32* %59, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %9, align 8
  %65 = icmp eq i64 %63, %64
  br i1 %65, label %66, label %71

66:                                               ; preds = %61
  %67 = getelementptr inbounds %32, %32* %59, i64 0, i32 3, i64 0
  %68 = tail call i32 @memcmp(i8* nonnull %67, i8* nonnull %10, i64 %63) #19
  %69 = icmp eq i32 %68, 0
  %70 = zext i1 %69 to i8
  br label %71

71:                                               ; preds = %58, %61, %66
  %72 = phi i8 [ 1, %58 ], [ 0, %61 ], [ %70, %66 ]
  %73 = getelementptr inbounds %32, %32* %59, i64 0, i32 0, i32 1
  %74 = bitcast %18* %73 to %64*
  %75 = getelementptr inbounds %64, %64* %74, i64 0, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = and i8 %76, 2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %90

79:                                               ; preds = %71
  %80 = getelementptr inbounds %32, %32* %59, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, -1
  store i32 %82, i32* %80, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %79
  %85 = and i8 %76, 1
  %86 = icmp eq i8 %85, 0
  %87 = bitcast %32* %59 to i8*
  br i1 %86, label %89, label %88

88:                                               ; preds = %84
  tail call void @free(i8* %87) #16
  br label %90

89:                                               ; preds = %84
  tail call void @_efree(i8* %87) #16
  br label %90

90:                                               ; preds = %71, %79, %88, %89
  %91 = icmp eq i8 %72, 0
  br i1 %91, label %92, label %97

92:                                               ; preds = %27, %30, %90, %11
  %93 = add nuw nsw i64 %12, 1
  %94 = load i32, i32* %5, align 8
  %95 = zext i32 %94 to i64
  %96 = icmp ult i64 %93, %95
  br i1 %96, label %11, label %97

97:                                               ; preds = %92, %22, %90, %2
  %98 = phi i8 [ 0, %2 ], [ 1, %90 ], [ 1, %22 ], [ 0, %92 ]
  ret i8 %98
}

; Function Attrs: nounwind uwtable
define hidden zeroext i8 @zend_list_has_assign_to_self(%43* nocapture readonly %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %4 = load i16, i16* %3, align 8
  %5 = icmp eq i16 %4, 256
  br i1 %5, label %6, label %55

6:                                                ; preds = %2
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %8, i64 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 64
  br i1 %11, label %12, label %55

12:                                               ; preds = %6
  %13 = getelementptr inbounds %43, %43* %8, i64 0, i32 3
  %14 = getelementptr inbounds [1 x %43*], [1 x %43*]* %13, i64 1
  %15 = bitcast [1 x %43*]* %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 6
  br i1 %17, label %18, label %31

18:                                               ; preds = %12
  %19 = bitcast [1 x %43*]* %13 to %32**
  %20 = load %32*, %32** %19, align 8
  %21 = getelementptr inbounds %32, %32* %20, i64 0, i32 0, i32 1
  %22 = bitcast %18* %21 to %64*
  %23 = getelementptr inbounds %64, %64* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %18
  %28 = getelementptr inbounds %32, %32* %20, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 8
  br label %37

31:                                               ; preds = %12
  %32 = bitcast [1 x %43*]* %13 to %2*
  %33 = tail call %32* @_zval_get_string_func(%2* nonnull %32) #16
  %34 = getelementptr inbounds %32, %32* %33, i64 0, i32 0, i32 1
  %35 = bitcast %18* %34 to %64*
  %36 = getelementptr inbounds %64, %64* %35, i64 0, i32 1
  br label %37

37:                                               ; preds = %18, %27, %31
  %38 = phi i8* [ %23, %18 ], [ %23, %27 ], [ %36, %31 ]
  %39 = phi %32* [ %20, %18 ], [ %20, %27 ], [ %33, %31 ]
  %40 = tail call zeroext i8 @zend_list_has_assign_to(%43* %0, %32* %39)
  %41 = load i8, i8* %38, align 1
  %42 = and i8 %41, 2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %55

44:                                               ; preds = %37
  %45 = getelementptr inbounds %32, %32* %39, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = add i32 %46, -1
  store i32 %47, i32* %45, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %44
  %50 = and i8 %41, 1
  %51 = icmp eq i8 %50, 0
  %52 = bitcast %32* %39 to i8*
  br i1 %51, label %54, label %53

53:                                               ; preds = %49
  tail call void @free(i8* %52) #16
  br label %55

54:                                               ; preds = %49
  tail call void @_efree(i8* %52) #16
  br label %55

55:                                               ; preds = %54, %53, %44, %37, %2, %6
  %56 = phi i8 [ 0, %6 ], [ 0, %2 ], [ %40, %37 ], [ %40, %44 ], [ %40, %53 ], [ %40, %54 ]
  ret i8 %56
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_assign(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %6 = load %43*, %43** %5, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = getelementptr inbounds %43, %43* %6, i64 0, i32 0
  %12 = load i16, i16* %11, align 8
  switch i16 %12, label %180 [
    i16 256, label %13
    i16 515, label %36
    i16 768, label %37
    i16 769, label %37
    i16 129, label %170
    i16 514, label %38
    i16 512, label %58
    i16 513, label %130
  ]

13:                                               ; preds = %2
  %14 = getelementptr inbounds %43, %43* %6, i64 0, i32 3, i64 0
  %15 = load %43*, %43** %14, align 8
  %16 = getelementptr inbounds %43, %43* %15, i64 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, 64
  br i1 %18, label %19, label %38

19:                                               ; preds = %13
  %20 = getelementptr inbounds %43, %43* %15, i64 0, i32 3
  %21 = getelementptr inbounds [1 x %43*], [1 x %43*]* %20, i64 1
  %22 = bitcast [1 x %43*]* %21 to i8*
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 6
  br i1 %24, label %25, label %38

25:                                               ; preds = %19
  %26 = bitcast [1 x %43*]* %20 to %32**
  %27 = load %32*, %32** %26, align 8
  %28 = getelementptr inbounds %32, %32* %27, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 4
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = getelementptr inbounds %32, %32* %27, i64 0, i32 3, i64 0
  %33 = tail call i32 @memcmp(i8* nonnull %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @20, i64 0, i64 0)) #15
  unreachable

36:                                               ; preds = %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @191, i64 0, i64 0)) #15
  unreachable

37:                                               ; preds = %2, %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @192, i64 0, i64 0)) #15
  unreachable

38:                                               ; preds = %31, %2, %13, %25, %19
  %39 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  call void @zend_delayed_compile_var(%37* nonnull %3, %43* %6, i32 1)
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %40 = call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %41 = bitcast i8* %40 to %9*
  %42 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %43 = icmp ugt i32 %42, %39
  br i1 %43, label %44, label %56

44:                                               ; preds = %38
  %45 = zext i32 %39 to i64
  %46 = zext i32 %42 to i64
  br label %47

47:                                               ; preds = %47, %44
  %48 = phi i64 [ %45, %44 ], [ %54, %47 ]
  %49 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %50 = call %9* @get_next_op(%7* %49) #16
  %51 = bitcast %9* %50 to i8*
  %52 = getelementptr inbounds %9, %9* %41, i64 %48
  %53 = bitcast %9* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %53, i64 32, i1 false) #16
  call fastcc void @244(%9* %50) #16
  %54 = add nuw nsw i64 %48, 1
  %55 = icmp eq i64 %54, %46
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %38
  store i32 %39, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %57 = call fastcc %9* @231(%37* %0, i8 zeroext 38, %37* nonnull %3, %37* nonnull %4)
  br label %181

58:                                               ; preds = %2
  %59 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %60 = tail call fastcc %9* @235(%37* %0, %43* %6, i32 1)
  %61 = tail call zeroext i8 @zend_is_assign_to_self(%43* %6, %43* %8)
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %91, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %43, %43* %8, i64 0, i32 0
  %65 = load i16, i16* %64, align 8
  %66 = icmp eq i16 %65, 256
  br i1 %66, label %67, label %89

67:                                               ; preds = %63
  %68 = getelementptr inbounds %43, %43* %8, i64 0, i32 3, i64 0
  %69 = load %43*, %43** %68, align 8
  %70 = getelementptr inbounds %43, %43* %69, i64 0, i32 0
  %71 = load i16, i16* %70, align 8
  %72 = icmp eq i16 %71, 64
  br i1 %72, label %73, label %89

73:                                               ; preds = %67
  %74 = getelementptr inbounds %43, %43* %69, i64 0, i32 3
  %75 = getelementptr inbounds [1 x %43*], [1 x %43*]* %74, i64 1
  %76 = bitcast [1 x %43*]* %75 to i8*
  %77 = load i8, i8* %76, align 8
  %78 = icmp eq i8 %77, 6
  br i1 %78, label %79, label %89

79:                                               ; preds = %73
  %80 = bitcast [1 x %43*]* %74 to %32**
  %81 = load %32*, %32** %80, align 8
  %82 = getelementptr inbounds %32, %32* %81, i64 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 4
  br i1 %84, label %85, label %89

85:                                               ; preds = %79
  %86 = getelementptr inbounds %32, %32* %81, i64 0, i32 3, i64 0
  %87 = tail call i32 @memcmp(i8* nonnull %86, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %85, %63, %67, %79, %73
  %90 = call fastcc %9* @236(%37* nonnull %4, %43* nonnull %8, i32 0)
  br label %92

91:                                               ; preds = %85, %58
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  br label %92

92:                                               ; preds = %91, %89
  %93 = call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %94 = bitcast i8* %93 to %9*
  %95 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %96 = icmp ugt i32 %95, %59
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = zext i32 %59 to i64
  %99 = zext i32 %95 to i64
  br label %100

100:                                              ; preds = %100, %97
  %101 = phi i64 [ %98, %97 ], [ %107, %100 ]
  %102 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %103 = call %9* @get_next_op(%7* %102) #16
  %104 = bitcast %9* %103 to i8*
  %105 = getelementptr inbounds %9, %9* %94, i64 %101
  %106 = bitcast %9* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %106, i64 32, i1 false) #16
  call fastcc void @244(%9* %103) #16
  %107 = add nuw nsw i64 %101, 1
  %108 = icmp eq i64 %107, %99
  br i1 %108, label %109, label %100

109:                                              ; preds = %100, %92
  %110 = phi %9* [ null, %92 ], [ %103, %100 ]
  store i32 %59, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %111 = getelementptr inbounds %9, %9* %110, i64 0, i32 6
  store i8 -109, i8* %111, align 4
  %112 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %113 = call %9* @get_next_op(%7* %112) #16
  %114 = getelementptr inbounds %9, %9* %113, i64 0, i32 6
  store i8 -119, i8* %114, align 4
  %115 = load i8, i8* %10, align 8
  %116 = getelementptr inbounds %9, %9* %113, i64 0, i32 7
  store i8 %115, i8* %116, align 1
  %117 = icmp eq i8 %115, 1
  br i1 %117, label %118, label %122

118:                                              ; preds = %109
  %119 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %120 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %121 = call i32 @zend_add_literal(%7* %119, %2* nonnull %120) #16
  br label %126

122:                                              ; preds = %109
  %123 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %124 = bitcast %38* %123 to i32*
  %125 = load i32, i32* %124, align 8
  br label %126

126:                                              ; preds = %118, %122
  %127 = phi i32 [ %121, %118 ], [ %125, %122 ]
  %128 = getelementptr inbounds %9, %9* %113, i64 0, i32 1, i32 0
  store i32 %127, i32* %128, align 8
  %129 = getelementptr inbounds %9, %9* %113, i64 0, i32 8
  store i8 8, i8* %129, align 2
  call fastcc void @244(%9* nonnull %113) #16
  br label %181

130:                                              ; preds = %2
  %131 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %132 = tail call fastcc %9* @237(%37* %0, %43* %6, i32 1)
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %133 = call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %134 = bitcast i8* %133 to %9*
  %135 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %136 = icmp ugt i32 %135, %131
  br i1 %136, label %137, label %149

137:                                              ; preds = %130
  %138 = zext i32 %131 to i64
  %139 = zext i32 %135 to i64
  br label %140

140:                                              ; preds = %140, %137
  %141 = phi i64 [ %138, %137 ], [ %147, %140 ]
  %142 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %143 = call %9* @get_next_op(%7* %142) #16
  %144 = bitcast %9* %143 to i8*
  %145 = getelementptr inbounds %9, %9* %134, i64 %141
  %146 = bitcast %9* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %146, i64 32, i1 false) #16
  call fastcc void @244(%9* %143) #16
  %147 = add nuw nsw i64 %141, 1
  %148 = icmp eq i64 %147, %139
  br i1 %148, label %149, label %140

149:                                              ; preds = %140, %130
  %150 = phi %9* [ null, %130 ], [ %143, %140 ]
  store i32 %131, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %151 = getelementptr inbounds %9, %9* %150, i64 0, i32 6
  store i8 -120, i8* %151, align 4
  %152 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %153 = call %9* @get_next_op(%7* %152) #16
  %154 = getelementptr inbounds %9, %9* %153, i64 0, i32 6
  store i8 -119, i8* %154, align 4
  %155 = load i8, i8* %10, align 8
  %156 = getelementptr inbounds %9, %9* %153, i64 0, i32 7
  store i8 %155, i8* %156, align 1
  %157 = icmp eq i8 %155, 1
  br i1 %157, label %158, label %162

158:                                              ; preds = %149
  %159 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %160 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %161 = call i32 @zend_add_literal(%7* %159, %2* nonnull %160) #16
  br label %166

162:                                              ; preds = %149
  %163 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %164 = bitcast %38* %163 to i32*
  %165 = load i32, i32* %164, align 8
  br label %166

166:                                              ; preds = %158, %162
  %167 = phi i32 [ %161, %158 ], [ %165, %162 ]
  %168 = getelementptr inbounds %9, %9* %153, i64 0, i32 1, i32 0
  store i32 %167, i32* %168, align 8
  %169 = getelementptr inbounds %9, %9* %153, i64 0, i32 8
  store i8 8, i8* %169, align 2
  call fastcc void @244(%9* nonnull %153) #16
  br label %181

170:                                              ; preds = %2
  %171 = tail call zeroext i8 @zend_list_has_assign_to_self(%43* %6, %43* %8)
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %170
  %174 = call fastcc %9* @236(%37* nonnull %4, %43* %8, i32 0)
  br label %176

175:                                              ; preds = %170
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  br label %176

176:                                              ; preds = %175, %173
  %177 = getelementptr inbounds %43, %43* %6, i64 0, i32 1
  %178 = load i16, i16* %177, align 2
  %179 = trunc i16 %178 to i8
  call fastcc void @238(%37* %0, %43* %6, %37* nonnull %4, i8 zeroext %179)
  br label %181

180:                                              ; preds = %2
  unreachable

181:                                              ; preds = %176, %166, %126, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_delayed_compile_var(%37* %0, %43* %1, i32 %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %5 = load i16, i16* %4, align 8
  switch i16 %5, label %187 [
    i16 256, label %6
    i16 512, label %103
    i16 513, label %131
    i16 514, label %159
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %8, i64 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 64
  br i1 %11, label %12, label %72

12:                                               ; preds = %6
  %13 = getelementptr inbounds %43, %43* %8, i64 0, i32 3
  %14 = getelementptr inbounds [1 x %43*], [1 x %43*]* %13, i64 1
  %15 = bitcast [1 x %43*]* %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 6
  br i1 %17, label %18, label %72

18:                                               ; preds = %12
  %19 = bitcast [1 x %43*]* %13 to %32**
  %20 = load %32*, %32** %19, align 8
  %21 = getelementptr inbounds %32, %32* %20, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 4
  br i1 %23, label %24, label %72

24:                                               ; preds = %18
  %25 = getelementptr inbounds %32, %32* %20, i64 0, i32 3, i64 0
  %26 = tail call i32 @memcmp(i8* nonnull %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %72

28:                                               ; preds = %24
  %29 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %30 = tail call %9* @get_next_op(%7* %29) #16
  %31 = getelementptr inbounds %9, %9* %30, i64 0, i32 6
  store i8 -72, i8* %31, align 4
  %32 = getelementptr inbounds %9, %9* %30, i64 0, i32 7
  store i8 8, i8* %32, align 1
  %33 = getelementptr inbounds %9, %9* %30, i64 0, i32 8
  store i8 8, i8* %33, align 2
  tail call fastcc void @244(%9* nonnull %30) #16
  %34 = icmp eq %37* %0, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %9, %9* %30, i64 0, i32 9
  store i8 4, i8* %36, align 1
  %37 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %38 = getelementptr inbounds %7, %7* %37, i64 0, i32 13
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds %9, %9* %30, i64 0, i32 3, i32 0
  store i32 %39, i32* %41, align 8
  %42 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %42, align 8
  %43 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %44 = bitcast %38* %43 to i32*
  %45 = load i32, i32* %41, align 8
  store i32 %45, i32* %44, align 8
  br label %46

46:                                               ; preds = %28, %35
  %47 = load i8, i8* %31, align 4
  %48 = icmp eq i8 %47, -83
  %49 = select i1 %48, i8 1, i8 3
  %50 = icmp eq i8 %47, -72
  br i1 %50, label %188, label %51

51:                                               ; preds = %46
  %52 = trunc i32 %2 to i3
  switch i3 %52, label %71 [
    i3 0, label %188
    i3 1, label %53
    i3 2, label %55
    i3 3, label %58
    i3 -4, label %61
    i3 -3, label %68
  ]

53:                                               ; preds = %51
  %54 = add i8 %49, %47
  store i8 %54, i8* %31, align 4
  br label %188

55:                                               ; preds = %51
  %56 = shl nuw nsw i8 %49, 1
  %57 = add i8 %56, %47
  store i8 %57, i8* %31, align 4
  br label %188

58:                                               ; preds = %51
  %59 = mul nuw nsw i8 %49, 3
  %60 = add i8 %59, %47
  store i8 %60, i8* %31, align 4
  br label %188

61:                                               ; preds = %51
  %62 = shl nuw nsw i8 %49, 2
  %63 = add i8 %62, %47
  store i8 %63, i8* %31, align 4
  %64 = lshr i32 %2, 3
  %65 = getelementptr inbounds %9, %9* %30, i64 0, i32 4
  %66 = load i32, i32* %65, align 4
  %67 = or i32 %66, %64
  store i32 %67, i32* %65, align 4
  br label %188

68:                                               ; preds = %51
  %69 = mul nuw nsw i8 %49, 5
  %70 = add i8 %69, %47
  store i8 %70, i8* %31, align 4
  br label %188

71:                                               ; preds = %51
  unreachable

72:                                               ; preds = %24, %6, %18, %12
  %73 = tail call fastcc i32 @245(%37* %0, %43* nonnull %1) #16
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %75, label %188

75:                                               ; preds = %72
  %76 = tail call fastcc %9* @236(%37* %0, %43* nonnull %1, i32 1) #16
  %77 = getelementptr inbounds %9, %9* %76, i64 0, i32 6
  %78 = load i8, i8* %77, align 4
  %79 = icmp eq i8 %78, -83
  %80 = select i1 %79, i8 1, i8 3
  %81 = icmp eq i8 %78, -72
  br i1 %81, label %188, label %82

82:                                               ; preds = %75
  %83 = trunc i32 %2 to i3
  switch i3 %83, label %102 [
    i3 0, label %188
    i3 1, label %84
    i3 2, label %86
    i3 3, label %89
    i3 -4, label %92
    i3 -3, label %99
  ]

84:                                               ; preds = %82
  %85 = add i8 %80, %78
  store i8 %85, i8* %77, align 4
  br label %188

86:                                               ; preds = %82
  %87 = shl nuw nsw i8 %80, 1
  %88 = add i8 %87, %78
  store i8 %88, i8* %77, align 4
  br label %188

89:                                               ; preds = %82
  %90 = mul nuw nsw i8 %80, 3
  %91 = add i8 %90, %78
  store i8 %91, i8* %77, align 4
  br label %188

92:                                               ; preds = %82
  %93 = shl nuw nsw i8 %80, 2
  %94 = add i8 %93, %78
  store i8 %94, i8* %77, align 4
  %95 = lshr i32 %2, 3
  %96 = getelementptr inbounds %9, %9* %76, i64 0, i32 4
  %97 = load i32, i32* %96, align 4
  %98 = or i32 %97, %95
  store i32 %98, i32* %96, align 4
  br label %188

99:                                               ; preds = %82
  %100 = mul nuw nsw i8 %80, 5
  %101 = add i8 %100, %78
  store i8 %101, i8* %77, align 4
  br label %188

102:                                              ; preds = %82
  unreachable

103:                                              ; preds = %3
  %104 = tail call fastcc %9* @235(%37* %0, %43* nonnull %1, i32 %2)
  %105 = getelementptr inbounds %9, %9* %104, i64 0, i32 6
  %106 = load i8, i8* %105, align 4
  %107 = icmp eq i8 %106, -83
  %108 = select i1 %107, i8 1, i8 3
  %109 = icmp eq i8 %106, -72
  br i1 %109, label %188, label %110

110:                                              ; preds = %103
  %111 = trunc i32 %2 to i3
  switch i3 %111, label %130 [
    i3 0, label %188
    i3 1, label %112
    i3 2, label %114
    i3 3, label %117
    i3 -4, label %120
    i3 -3, label %127
  ]

112:                                              ; preds = %110
  %113 = add i8 %108, %106
  store i8 %113, i8* %105, align 4
  br label %188

114:                                              ; preds = %110
  %115 = shl nuw nsw i8 %108, 1
  %116 = add i8 %115, %106
  store i8 %116, i8* %105, align 4
  br label %188

117:                                              ; preds = %110
  %118 = mul nuw nsw i8 %108, 3
  %119 = add i8 %118, %106
  store i8 %119, i8* %105, align 4
  br label %188

120:                                              ; preds = %110
  %121 = shl nuw nsw i8 %108, 2
  %122 = add i8 %121, %106
  store i8 %122, i8* %105, align 4
  %123 = lshr i32 %2, 3
  %124 = getelementptr inbounds %9, %9* %104, i64 0, i32 4
  %125 = load i32, i32* %124, align 4
  %126 = or i32 %125, %123
  store i32 %126, i32* %124, align 4
  br label %188

127:                                              ; preds = %110
  %128 = mul nuw nsw i8 %108, 5
  %129 = add i8 %128, %106
  store i8 %129, i8* %105, align 4
  br label %188

130:                                              ; preds = %110
  unreachable

131:                                              ; preds = %3
  %132 = tail call fastcc %9* @237(%37* %0, %43* nonnull %1, i32 %2)
  %133 = getelementptr inbounds %9, %9* %132, i64 0, i32 6
  %134 = load i8, i8* %133, align 4
  %135 = icmp eq i8 %134, -83
  %136 = select i1 %135, i8 1, i8 3
  %137 = icmp eq i8 %134, -72
  br i1 %137, label %188, label %138

138:                                              ; preds = %131
  %139 = trunc i32 %2 to i3
  switch i3 %139, label %158 [
    i3 0, label %188
    i3 1, label %140
    i3 2, label %142
    i3 3, label %145
    i3 -4, label %148
    i3 -3, label %155
  ]

140:                                              ; preds = %138
  %141 = add i8 %136, %134
  store i8 %141, i8* %133, align 4
  br label %188

142:                                              ; preds = %138
  %143 = shl nuw nsw i8 %136, 1
  %144 = add i8 %143, %134
  store i8 %144, i8* %133, align 4
  br label %188

145:                                              ; preds = %138
  %146 = mul nuw nsw i8 %136, 3
  %147 = add i8 %146, %134
  store i8 %147, i8* %133, align 4
  br label %188

148:                                              ; preds = %138
  %149 = shl nuw nsw i8 %136, 2
  %150 = add i8 %149, %134
  store i8 %150, i8* %133, align 4
  %151 = lshr i32 %2, 3
  %152 = getelementptr inbounds %9, %9* %132, i64 0, i32 4
  %153 = load i32, i32* %152, align 4
  %154 = or i32 %153, %151
  store i32 %154, i32* %152, align 4
  br label %188

155:                                              ; preds = %138
  %156 = mul nuw nsw i8 %136, 5
  %157 = add i8 %156, %134
  store i8 %157, i8* %133, align 4
  br label %188

158:                                              ; preds = %138
  unreachable

159:                                              ; preds = %3
  %160 = tail call %9* @zend_compile_static_prop_common(%37* %0, %43* nonnull %1, i32 undef, i32 1) #16
  %161 = getelementptr inbounds %9, %9* %160, i64 0, i32 6
  %162 = load i8, i8* %161, align 4
  %163 = icmp eq i8 %162, -83
  %164 = select i1 %163, i8 1, i8 3
  %165 = icmp eq i8 %162, -72
  br i1 %165, label %188, label %166

166:                                              ; preds = %159
  %167 = trunc i32 %2 to i3
  switch i3 %167, label %186 [
    i3 0, label %188
    i3 1, label %168
    i3 2, label %170
    i3 3, label %173
    i3 -4, label %176
    i3 -3, label %183
  ]

168:                                              ; preds = %166
  %169 = add i8 %164, %162
  store i8 %169, i8* %161, align 4
  br label %188

170:                                              ; preds = %166
  %171 = shl nuw nsw i8 %164, 1
  %172 = add i8 %171, %162
  store i8 %172, i8* %161, align 4
  br label %188

173:                                              ; preds = %166
  %174 = mul nuw nsw i8 %164, 3
  %175 = add i8 %174, %162
  store i8 %175, i8* %161, align 4
  br label %188

176:                                              ; preds = %166
  %177 = shl nuw nsw i8 %164, 2
  %178 = add i8 %177, %162
  store i8 %178, i8* %161, align 4
  %179 = lshr i32 %2, 3
  %180 = getelementptr inbounds %9, %9* %160, i64 0, i32 4
  %181 = load i32, i32* %180, align 4
  %182 = or i32 %181, %179
  store i32 %182, i32* %180, align 4
  br label %188

183:                                              ; preds = %166
  %184 = mul nuw nsw i8 %164, 5
  %185 = add i8 %184, %162
  store i8 %185, i8* %161, align 4
  br label %188

186:                                              ; preds = %166
  unreachable

187:                                              ; preds = %3
  tail call void @zend_compile_var(%37* %0, %43* nonnull %1, i32 %2)
  br label %188

188:                                              ; preds = %183, %176, %173, %170, %168, %166, %159, %155, %148, %145, %142, %140, %138, %131, %127, %120, %117, %114, %112, %110, %103, %72, %46, %51, %53, %55, %58, %61, %68, %75, %82, %84, %86, %89, %92, %99, %187
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc %9* @235(%37* %0, %43* nocapture readonly %1, i32 %2) unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca %9, align 8
  %6 = alloca %37, align 8
  %7 = alloca %37, align 8
  %8 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %9 = load %43*, %43** %8, align 8
  %10 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %11 = load %43*, %43** %10, align 8
  %12 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %37, %37* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #16
  call void @zend_delayed_compile_var(%37* nonnull %6, %43* %9, i32 %2)
  switch i32 %2, label %14 [
    i32 3, label %43
    i32 0, label %43
  ]

14:                                               ; preds = %3
  %15 = getelementptr inbounds %43, %43* %9, i64 0, i32 0
  %16 = load i16, i16* %15, align 8
  switch i16 %16, label %43 [
    i16 515, label %17
    i16 768, label %17
    i16 769, label %17
  ]

17:                                               ; preds = %14, %14, %14
  %18 = load i8, i8* %12, align 8
  %19 = icmp eq i8 %18, 4
  br i1 %19, label %20, label %42

20:                                               ; preds = %17
  %21 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %22 = call %9* @get_next_op(%7* %21) #16
  %23 = getelementptr inbounds %9, %9* %22, i64 0, i32 6
  store i8 -100, i8* %23, align 4
  %24 = load i8, i8* %12, align 8
  %25 = getelementptr inbounds %9, %9* %22, i64 0, i32 7
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i8 %24, 1
  br i1 %26, label %27, label %31

27:                                               ; preds = %20
  %28 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %29 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %30 = call i32 @zend_add_literal(%7* %28, %2* nonnull %29) #16
  br label %35

31:                                               ; preds = %20
  %32 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %33 = bitcast %38* %32 to i32*
  %34 = load i32, i32* %33, align 8
  br label %35

35:                                               ; preds = %27, %31
  %36 = phi i32 [ %30, %27 ], [ %34, %31 ]
  %37 = getelementptr inbounds %9, %9* %22, i64 0, i32 1, i32 0
  store i32 %36, i32* %37, align 8
  %38 = getelementptr inbounds %9, %9* %22, i64 0, i32 8
  store i8 8, i8* %38, align 2
  call fastcc void @244(%9* nonnull %22) #16
  %39 = getelementptr inbounds %9, %9* %22, i64 0, i32 9
  store i8 4, i8* %39, align 1
  %40 = load i32, i32* %37, align 8
  %41 = getelementptr inbounds %9, %9* %22, i64 0, i32 3, i32 0
  store i32 %40, i32* %41, align 8
  br label %43

42:                                               ; preds = %17
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @21, i64 0, i64 0)) #15
  unreachable

43:                                               ; preds = %3, %3, %14, %35
  %44 = icmp eq %43* %11, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %43
  switch i32 %2, label %48 [
    i32 3, label %46
    i32 0, label %46
    i32 5, label %47
  ]

46:                                               ; preds = %45, %45
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @176, i64 0, i64 0)) #15
  unreachable

47:                                               ; preds = %45
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @193, i64 0, i64 0)) #15
  unreachable

48:                                               ; preds = %45
  store i8 8, i8* %13, align 8
  br label %84

49:                                               ; preds = %43
  call void @zend_compile_expr(%37* nonnull %7, %43* nonnull %11)
  %50 = load i8, i8* %13, align 8
  %51 = icmp eq i8 %50, 1
  br i1 %51, label %52, label %84

52:                                               ; preds = %49
  %53 = getelementptr inbounds %37, %37* %7, i64 0, i32 2, i32 0
  %54 = getelementptr inbounds %37, %37* %7, i64 0, i32 2, i32 0, i32 1
  %55 = bitcast %4* %54 to i8*
  %56 = load i8, i8* %55, align 8
  %57 = icmp eq i8 %56, 6
  br i1 %57, label %58, label %84

58:                                               ; preds = %52
  %59 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #16
  %60 = bitcast %2* %53 to %32**
  %61 = load %32*, %32** %60, align 8
  %62 = getelementptr inbounds %32, %32* %61, i64 0, i32 3, i64 0
  %63 = getelementptr inbounds %32, %32* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = load i8, i8* %62, align 1
  %66 = icmp sgt i8 %65, 57
  br i1 %66, label %83, label %67

67:                                               ; preds = %58
  %68 = icmp slt i8 %65, 48
  br i1 %68, label %69, label %76

69:                                               ; preds = %67
  %70 = icmp eq i8 %65, 45
  br i1 %70, label %71, label %83

71:                                               ; preds = %69
  %72 = getelementptr inbounds %32, %32* %61, i64 0, i32 3, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = add i8 %73, -48
  %75 = icmp ugt i8 %74, 9
  br i1 %75, label %83, label %76

76:                                               ; preds = %71, %67
  %77 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %62, i64 %64, i64* nonnull %4) #16
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %76
  call void @_zval_ptr_dtor(%2* nonnull %53) #16
  %80 = load i64, i64* %4, align 8
  %81 = getelementptr inbounds %2, %2* %53, i64 0, i32 0, i32 0
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %37, %37* %7, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 4, i32* %82, align 8
  br label %83

83:                                               ; preds = %79, %76, %71, %69, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #16
  br label %84

84:                                               ; preds = %83, %52, %49, %48
  %85 = bitcast %9* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #16
  call void @init_op(%9* nonnull %5) #16
  %86 = getelementptr inbounds %9, %9* %5, i64 0, i32 6
  store i8 81, i8* %86, align 4
  %87 = load i8, i8* %12, align 8
  %88 = getelementptr inbounds %9, %9* %5, i64 0, i32 7
  store i8 %87, i8* %88, align 1
  %89 = icmp eq i8 %87, 1
  br i1 %89, label %90, label %94

90:                                               ; preds = %84
  %91 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %92 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %93 = call i32 @zend_add_literal(%7* %91, %2* nonnull %92) #16
  br label %98

94:                                               ; preds = %84
  %95 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %96 = bitcast %38* %95 to i32*
  %97 = load i32, i32* %96, align 8
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i32 [ %97, %94 ], [ %93, %90 ]
  %100 = getelementptr inbounds %9, %9* %5, i64 0, i32 1, i32 0
  store i32 %99, i32* %100, align 8
  %101 = load i8, i8* %13, align 8
  %102 = getelementptr inbounds %9, %9* %5, i64 0, i32 8
  store i8 %101, i8* %102, align 2
  %103 = icmp eq i8 %101, 1
  br i1 %103, label %104, label %108

104:                                              ; preds = %98
  %105 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %106 = getelementptr inbounds %37, %37* %7, i64 0, i32 2, i32 0
  %107 = call i32 @zend_add_literal(%7* %105, %2* nonnull %106) #16
  br label %112

108:                                              ; preds = %98
  %109 = getelementptr inbounds %37, %37* %7, i64 0, i32 2
  %110 = bitcast %38* %109 to i32*
  %111 = load i32, i32* %110, align 8
  br label %112

112:                                              ; preds = %108, %104
  %113 = phi i32 [ %111, %108 ], [ %107, %104 ]
  %114 = getelementptr inbounds %9, %9* %5, i64 0, i32 2, i32 0
  store i32 %113, i32* %114, align 4
  %115 = icmp eq %37* %0, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %9, %9* %5, i64 0, i32 9
  store i8 4, i8* %117, align 1
  %118 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %119 = getelementptr inbounds %7, %7* %118, i64 0, i32 13
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %119, align 4
  %122 = getelementptr inbounds %9, %9* %5, i64 0, i32 3, i32 0
  store i32 %120, i32* %122, align 8
  %123 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %123, align 8
  %124 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %125 = bitcast %38* %124 to i32*
  store i32 %120, i32* %125, align 8
  br label %126

126:                                              ; preds = %112, %116
  %127 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32), i8* nonnull %85) #16
  %128 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %129 = bitcast i8* %128 to %9*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  ret %9* %129
}

; Function Attrs: nounwind uwtable
define internal fastcc %9* @236(%37* %0, %43* nocapture readonly %1, i32 %2) unnamed_addr #0 {
  %4 = alloca %9, align 8
  %5 = alloca %37, align 8
  %6 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  call void @zend_compile_expr(%37* nonnull %5, %43* %7)
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %3
  %12 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast %4* %12 to i8*
  %14 = load i8, i8* %13, align 8
  %15 = icmp eq i8 %14, 6
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  call void @_convert_to_string(%2* nonnull %17) #16
  br label %18

18:                                               ; preds = %11, %16, %3
  %19 = icmp eq i32 %2, 0
  br i1 %19, label %53, label %20

20:                                               ; preds = %18
  %21 = bitcast %9* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #16
  call void @init_op(%9* nonnull %4) #16
  %22 = getelementptr inbounds %9, %9* %4, i64 0, i32 6
  store i8 80, i8* %22, align 4
  %23 = load i8, i8* %8, align 8
  %24 = getelementptr inbounds %9, %9* %4, i64 0, i32 7
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i8 %23, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %28 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %29 = call i32 @zend_add_literal(%7* %27, %2* nonnull %28) #16
  br label %34

30:                                               ; preds = %20
  %31 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %32 = bitcast %38* %31 to i32*
  %33 = load i32, i32* %32, align 8
  br label %34

34:                                               ; preds = %30, %26
  %35 = phi i32 [ %33, %30 ], [ %29, %26 ]
  %36 = getelementptr inbounds %9, %9* %4, i64 0, i32 1, i32 0
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %9, %9* %4, i64 0, i32 8
  store i8 8, i8* %37, align 2
  %38 = icmp eq %37* %0, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %9, %9* %4, i64 0, i32 9
  store i8 4, i8* %40, align 1
  %41 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %42 = getelementptr inbounds %7, %7* %41, i64 0, i32 13
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 4
  %45 = getelementptr inbounds %9, %9* %4, i64 0, i32 3, i32 0
  store i32 %43, i32* %45, align 8
  %46 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %46, align 8
  %47 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %48 = bitcast %38* %47 to i32*
  store i32 %43, i32* %48, align 8
  br label %49

49:                                               ; preds = %34, %39
  %50 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32), i8* nonnull %21) #16
  %51 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %52 = bitcast i8* %51 to %9*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #16
  br label %84

53:                                               ; preds = %18
  %54 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %55 = call %9* @get_next_op(%7* %54) #16
  %56 = getelementptr inbounds %9, %9* %55, i64 0, i32 6
  store i8 80, i8* %56, align 4
  %57 = load i8, i8* %8, align 8
  %58 = getelementptr inbounds %9, %9* %55, i64 0, i32 7
  store i8 %57, i8* %58, align 1
  %59 = icmp eq i8 %57, 1
  br i1 %59, label %60, label %64

60:                                               ; preds = %53
  %61 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %62 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %63 = call i32 @zend_add_literal(%7* %61, %2* nonnull %62) #16
  br label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %66 = bitcast %38* %65 to i32*
  %67 = load i32, i32* %66, align 8
  br label %68

68:                                               ; preds = %64, %60
  %69 = phi i32 [ %67, %64 ], [ %63, %60 ]
  %70 = getelementptr inbounds %9, %9* %55, i64 0, i32 1, i32 0
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %9, %9* %55, i64 0, i32 8
  store i8 8, i8* %71, align 2
  call fastcc void @244(%9* nonnull %55) #16
  %72 = icmp eq %37* %0, null
  br i1 %72, label %84, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %9, %9* %55, i64 0, i32 9
  store i8 4, i8* %74, align 1
  %75 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %76 = getelementptr inbounds %7, %7* %75, i64 0, i32 13
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 4
  %79 = getelementptr inbounds %9, %9* %55, i64 0, i32 3, i32 0
  store i32 %77, i32* %79, align 8
  %80 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %80, align 8
  %81 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %82 = bitcast %38* %81 to i32*
  %83 = load i32, i32* %79, align 8
  store i32 %83, i32* %82, align 8
  br label %84

84:                                               ; preds = %73, %68, %49
  %85 = phi %9* [ %52, %49 ], [ %55, %68 ], [ %55, %73 ]
  %86 = load i8, i8* %8, align 8
  %87 = icmp eq i8 %86, 1
  br i1 %87, label %88, label %110

88:                                               ; preds = %84
  %89 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 0
  %90 = bitcast %3* %89 to %32**
  %91 = load %32*, %32** %90, align 8
  %92 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 8), align 8
  %93 = call %2* @zend_hash_find(%39* %92, %32* %91) #16
  %94 = icmp eq %2* %93, null
  br i1 %94, label %110, label %95

95:                                               ; preds = %88
  %96 = bitcast %2* %93 to i8**
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %110, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds i8, i8* %97, i64 17
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds i8, i8* %97, i64 8
  %105 = bitcast i8* %104 to i8 (%32*)**
  %106 = load i8 (%32*)*, i8 (%32*)** %105, align 8
  %107 = bitcast i8* %97 to %32**
  %108 = load %32*, %32** %107, align 8
  %109 = call zeroext i8 %106(%32* %108) #16
  store i8 %109, i8* %100, align 1
  br label %110

110:                                              ; preds = %84, %95, %88, %99, %103
  %111 = phi i32 [ 0, %103 ], [ 0, %99 ], [ 268435456, %88 ], [ 268435456, %95 ], [ 268435456, %84 ]
  %112 = getelementptr inbounds %9, %9* %85, i64 0, i32 4
  store i32 %111, i32* %112, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret %9* %85
}

; Function Attrs: nounwind uwtable
define internal fastcc %9* @237(%37* %0, %43* nocapture readonly %1, i32 %2) unnamed_addr #0 {
  %4 = alloca %9, align 8
  %5 = alloca %37, align 8
  %6 = alloca %37, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %10 = load %43*, %43** %9, align 8
  %11 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %43, %43* %8, i64 0, i32 0
  %14 = load i16, i16* %13, align 8
  %15 = icmp eq i16 %14, 256
  br i1 %15, label %16, label %39

16:                                               ; preds = %3
  %17 = getelementptr inbounds %43, %43* %8, i64 0, i32 3, i64 0
  %18 = load %43*, %43** %17, align 8
  %19 = getelementptr inbounds %43, %43* %18, i64 0, i32 0
  %20 = load i16, i16* %19, align 8
  %21 = icmp eq i16 %20, 64
  br i1 %21, label %22, label %39

22:                                               ; preds = %16
  %23 = getelementptr inbounds %43, %43* %18, i64 0, i32 3
  %24 = getelementptr inbounds [1 x %43*], [1 x %43*]* %23, i64 1
  %25 = bitcast [1 x %43*]* %24 to i8*
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 6
  br i1 %27, label %28, label %39

28:                                               ; preds = %22
  %29 = bitcast [1 x %43*]* %23 to %32**
  %30 = load %32*, %32** %29, align 8
  %31 = getelementptr inbounds %32, %32* %30, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 4
  br i1 %33, label %34, label %39

34:                                               ; preds = %28
  %35 = getelementptr inbounds %32, %32* %30, i64 0, i32 3, i64 0
  %36 = tail call i32 @memcmp(i8* nonnull %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  store i8 8, i8* %11, align 8
  br label %68

39:                                               ; preds = %34, %3, %16, %28, %22
  call void @zend_delayed_compile_var(%37* nonnull %5, %43* %8, i32 %2)
  switch i32 %2, label %40 [
    i32 3, label %68
    i32 0, label %68
  ]

40:                                               ; preds = %39
  %41 = load i16, i16* %13, align 8
  switch i16 %41, label %68 [
    i16 515, label %42
    i16 768, label %42
    i16 769, label %42
  ]

42:                                               ; preds = %40, %40, %40
  %43 = load i8, i8* %11, align 8
  %44 = icmp eq i8 %43, 4
  br i1 %44, label %45, label %67

45:                                               ; preds = %42
  %46 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %47 = call %9* @get_next_op(%7* %46) #16
  %48 = getelementptr inbounds %9, %9* %47, i64 0, i32 6
  store i8 -100, i8* %48, align 4
  %49 = load i8, i8* %11, align 8
  %50 = getelementptr inbounds %9, %9* %47, i64 0, i32 7
  store i8 %49, i8* %50, align 1
  %51 = icmp eq i8 %49, 1
  br i1 %51, label %52, label %56

52:                                               ; preds = %45
  %53 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %54 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %55 = call i32 @zend_add_literal(%7* %53, %2* nonnull %54) #16
  br label %60

56:                                               ; preds = %45
  %57 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %58 = bitcast %38* %57 to i32*
  %59 = load i32, i32* %58, align 8
  br label %60

60:                                               ; preds = %52, %56
  %61 = phi i32 [ %55, %52 ], [ %59, %56 ]
  %62 = getelementptr inbounds %9, %9* %47, i64 0, i32 1, i32 0
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %9, %9* %47, i64 0, i32 8
  store i8 8, i8* %63, align 2
  call fastcc void @244(%9* nonnull %47) #16
  %64 = getelementptr inbounds %9, %9* %47, i64 0, i32 9
  store i8 4, i8* %64, align 1
  %65 = load i32, i32* %62, align 8
  %66 = getelementptr inbounds %9, %9* %47, i64 0, i32 3, i32 0
  store i32 %65, i32* %66, align 8
  br label %68

67:                                               ; preds = %42
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @21, i64 0, i64 0)) #15
  unreachable

68:                                               ; preds = %60, %40, %39, %39, %38
  call void @zend_compile_expr(%37* nonnull %6, %43* %10)
  %69 = bitcast %9* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #16
  call void @init_op(%9* nonnull %4) #16
  %70 = getelementptr inbounds %9, %9* %4, i64 0, i32 6
  store i8 82, i8* %70, align 4
  %71 = load i8, i8* %11, align 8
  %72 = getelementptr inbounds %9, %9* %4, i64 0, i32 7
  store i8 %71, i8* %72, align 1
  %73 = icmp eq i8 %71, 1
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %76 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %77 = call i32 @zend_add_literal(%7* %75, %2* nonnull %76) #16
  br label %82

78:                                               ; preds = %68
  %79 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %80 = bitcast %38* %79 to i32*
  %81 = load i32, i32* %80, align 8
  br label %82

82:                                               ; preds = %78, %74
  %83 = phi i32 [ %81, %78 ], [ %77, %74 ]
  %84 = getelementptr inbounds %9, %9* %4, i64 0, i32 1, i32 0
  store i32 %83, i32* %84, align 8
  %85 = load i8, i8* %12, align 8
  %86 = getelementptr inbounds %9, %9* %4, i64 0, i32 8
  store i8 %85, i8* %86, align 2
  %87 = icmp eq i8 %85, 1
  br i1 %87, label %88, label %92

88:                                               ; preds = %82
  %89 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %90 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %91 = call i32 @zend_add_literal(%7* %89, %2* nonnull %90) #16
  br label %96

92:                                               ; preds = %82
  %93 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %94 = bitcast %38* %93 to i32*
  %95 = load i32, i32* %94, align 8
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i32 [ %95, %92 ], [ %91, %88 ]
  %98 = getelementptr inbounds %9, %9* %4, i64 0, i32 2, i32 0
  store i32 %97, i32* %98, align 4
  %99 = icmp eq %37* %0, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %9, %9* %4, i64 0, i32 9
  store i8 4, i8* %101, align 1
  %102 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %103 = getelementptr inbounds %7, %7* %102, i64 0, i32 13
  %104 = load i32, i32* %103, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %9, %9* %4, i64 0, i32 3, i32 0
  store i32 %104, i32* %106, align 8
  %107 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %107, align 8
  %108 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %109 = bitcast %38* %108 to i32*
  store i32 %104, i32* %109, align 8
  br label %110

110:                                              ; preds = %96, %100
  %111 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32), i8* nonnull %69) #16
  %112 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %113 = bitcast i8* %112 to %9*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #16
  %114 = getelementptr inbounds i8, i8* %112, i64 30
  %115 = load i8, i8* %114, align 2
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %117, label %145

117:                                              ; preds = %110
  %118 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %119 = getelementptr inbounds %7, %7* %118, i64 0, i32 26
  %120 = load %2*, %2** %119, align 8
  %121 = getelementptr inbounds i8, i8* %112, i64 12
  %122 = bitcast i8* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %2, %2* %120, i64 %124, i32 1
  %126 = bitcast %4* %125 to i8*
  %127 = load i8, i8* %126, align 8
  %128 = icmp eq i8 %127, 6
  br i1 %128, label %136, label %129

129:                                              ; preds = %117
  %130 = getelementptr inbounds %2, %2* %120, i64 %124
  call void @_convert_to_string(%2* %130) #16
  %131 = load i32, i32* %122, align 4
  %132 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %133 = getelementptr inbounds %7, %7* %132, i64 0, i32 26
  %134 = load %2*, %2** %133, align 8
  %135 = zext i32 %131 to i64
  br label %136

136:                                              ; preds = %117, %129
  %137 = phi i64 [ %124, %117 ], [ %135, %129 ]
  %138 = phi %2* [ %120, %117 ], [ %134, %129 ]
  %139 = phi %7* [ %118, %117 ], [ %132, %129 ]
  %140 = getelementptr inbounds %7, %7* %139, i64 0, i32 27
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %2, %2* %138, i64 %137, i32 2, i32 0
  store i32 %141, i32* %142, align 4
  %143 = load i32, i32* %140, align 8
  %144 = add i32 %143, 16
  store i32 %144, i32* %140, align 8
  br label %145

145:                                              ; preds = %136, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  ret %9* %113
}

; Function Attrs: nounwind uwtable
define internal fastcc void @238(%37* nocapture %0, %43* nocapture readonly %1, %37* %2, i8 zeroext %3) unnamed_addr #0 {
  %5 = alloca %37, align 8
  %6 = alloca %37, align 8
  %7 = alloca %37, align 8
  %8 = bitcast %43* %1 to %69*
  %9 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %10 = bitcast [1 x %43*]* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %122, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %43, %43* %1, i64 1
  %15 = bitcast %43* %14 to %43**
  %16 = load %43*, %43** %15, align 8
  %17 = icmp eq %43* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %43, %43* %16, i64 0, i32 3, i64 1
  %20 = load %43*, %43** %19, align 8
  %21 = icmp eq %43* %20, null
  br label %22

22:                                               ; preds = %13, %18
  %23 = phi i1 [ %21, %18 ], [ true, %13 ]
  %24 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  %25 = getelementptr inbounds %37, %37* %7, i64 0, i32 0
  %26 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  %27 = getelementptr inbounds %37, %37* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %37, %37* %7, i64 0, i32 2, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0, i32 1
  %30 = bitcast %4* %29 to %65*
  %31 = getelementptr inbounds %65, %65* %30, i64 0, i32 1
  %32 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %33 = bitcast %2* %32 to %66**
  %34 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  %35 = zext i8 %3 to i32
  br label %36

36:                                               ; preds = %22, %114
  %37 = phi i32 [ %11, %22 ], [ %115, %114 ]
  %38 = phi i64 [ 0, %22 ], [ %117, %114 ]
  %39 = phi i8 [ 0, %22 ], [ %116, %114 ]
  %40 = getelementptr inbounds %69, %69* %8, i64 0, i32 4, i64 %38
  %41 = load %43*, %43** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  %42 = icmp eq %43* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  br i1 %23, label %114, label %44

44:                                               ; preds = %43
  call void (i32, i8*, ...) @zend_error(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @194, i64 0, i64 0)) #16
  br label %45

45:                                               ; preds = %44, %36
  %46 = getelementptr inbounds %43, %43* %41, i64 0, i32 1
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  call void (i32, i8*, ...) @zend_error(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @195, i64 0, i64 0)) #16
  br label %50

50:                                               ; preds = %45, %49
  %51 = getelementptr inbounds %43, %43* %41, i64 0, i32 3, i64 0
  %52 = load %43*, %43** %51, align 8
  %53 = getelementptr inbounds %43, %43* %41, i64 0, i32 3, i64 1
  %54 = load %43*, %43** %53, align 8
  %55 = icmp eq %43* %54, null
  br i1 %23, label %59, label %56

56:                                               ; preds = %50
  br i1 %55, label %57, label %58

57:                                               ; preds = %56
  call void (i32, i8*, ...) @zend_error(i32 64, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @196, i64 0, i64 0)) #16
  br label %58

58:                                               ; preds = %57, %56
  call void @zend_compile_expr(%37* nonnull %7, %43* %54)
  br label %62

59:                                               ; preds = %50
  br i1 %55, label %61, label %60

60:                                               ; preds = %59
  call void (i32, i8*, ...) @zend_error(i32 64, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @196, i64 0, i64 0)) #16
  br label %61

61:                                               ; preds = %59, %60
  store i8 1, i8* %25, align 8
  store i64 %38, i64* %27, align 8
  store i32 4, i32* %28, align 8
  br label %62

62:                                               ; preds = %61, %58
  %63 = load i8, i8* %26, align 8
  %64 = icmp eq i8 %63, 1
  br i1 %64, label %65, label %74

65:                                               ; preds = %62
  %66 = load i8, i8* %31, align 1
  %67 = and i8 %66, 4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = load %66*, %66** %33, align 8
  %71 = getelementptr inbounds %66, %66* %70, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %71, align 4
  br label %74

74:                                               ; preds = %65, %69, %62
  %75 = getelementptr inbounds %43, %43* %52, i64 0, i32 0
  %76 = load i16, i16* %75, align 8
  %77 = icmp eq i16 %76, 129
  br i1 %77, label %78, label %87

78:                                               ; preds = %74
  %79 = getelementptr inbounds %43, %43* %52, i64 0, i32 1
  %80 = load i16, i16* %79, align 2
  %81 = icmp eq i16 %80, 2
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @198, i64 0, i64 0)) #15
  unreachable

83:                                               ; preds = %78
  %84 = zext i16 %80 to i32
  %85 = icmp eq i32 %35, %84
  br i1 %85, label %101, label %86

86:                                               ; preds = %83
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @199, i64 0, i64 0)) #15
  unreachable

87:                                               ; preds = %74
  %88 = or i16 %76, 1
  %89 = icmp eq i16 %88, 513
  br i1 %89, label %90, label %98

90:                                               ; preds = %87, %90
  %91 = phi %43* [ %93, %90 ], [ %52, %87 ]
  %92 = getelementptr inbounds %43, %43* %91, i64 0, i32 3, i64 0
  %93 = load %43*, %43** %92, align 8
  %94 = getelementptr inbounds %43, %43* %93, i64 0, i32 0
  %95 = load i16, i16* %94, align 8
  %96 = or i16 %95, 1
  %97 = icmp eq i16 %96, 513
  br i1 %97, label %90, label %98

98:                                               ; preds = %90, %87
  %99 = phi i16 [ %76, %87 ], [ %95, %90 ]
  switch i16 %99, label %100 [
    i16 256, label %101
    i16 512, label %101
    i16 513, label %101
    i16 514, label %101
    i16 515, label %101
    i16 768, label %101
    i16 769, label %101
  ]

100:                                              ; preds = %98
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @200, i64 0, i64 0)) #15
  unreachable

101:                                              ; preds = %83, %98, %98, %98, %98, %98, %98, %98
  %102 = call fastcc %9* @231(%37* nonnull %6, i8 zeroext 98, %37* %2, %37* nonnull %7)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #16
  %103 = load i16, i16* %75, align 8
  %104 = icmp eq i16 %103, 129
  br i1 %104, label %105, label %109

105:                                              ; preds = %101
  %106 = getelementptr inbounds %43, %43* %52, i64 0, i32 1
  %107 = load i16, i16* %106, align 2
  %108 = trunc i16 %107 to i8
  call fastcc void @238(%37* nonnull %5, %43* nonnull %52, %37* nonnull %6, i8 zeroext %108) #16
  br label %112

109:                                              ; preds = %101
  %110 = call %43* @zend_ast_create_znode(%37* nonnull %6) #16
  %111 = call %43* (i16, ...) @zend_ast_create(i16 zeroext 517, %43* nonnull %52, %43* %110) #16
  call void @zend_compile_assign(%37* nonnull %5, %43* %111) #16
  br label %112

112:                                              ; preds = %105, %109
  call void @zend_do_free(%37* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #16
  %113 = load i32, i32* %10, align 8
  br label %114

114:                                              ; preds = %43, %112
  %115 = phi i32 [ %113, %112 ], [ %37, %43 ]
  %116 = phi i8 [ 1, %112 ], [ %39, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #16
  %117 = add nuw nsw i64 %38, 1
  %118 = zext i32 %115 to i64
  %119 = icmp ult i64 %117, %118
  br i1 %119, label %36, label %120

120:                                              ; preds = %114
  %121 = icmp eq i8 %116, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %4, %120
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @197, i64 0, i64 0)) #15
  unreachable

123:                                              ; preds = %120
  %124 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %125 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_assign_ref(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %6 = load %43*, %43** %5, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = getelementptr inbounds %43, %43* %6, i64 0, i32 0
  %12 = load i16, i16* %11, align 8
  switch i16 %12, label %38 [
    i16 256, label %13
    i16 515, label %36
    i16 768, label %37
    i16 769, label %37
  ]

13:                                               ; preds = %2
  %14 = getelementptr inbounds %43, %43* %6, i64 0, i32 3, i64 0
  %15 = load %43*, %43** %14, align 8
  %16 = getelementptr inbounds %43, %43* %15, i64 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, 64
  br i1 %18, label %19, label %38

19:                                               ; preds = %13
  %20 = getelementptr inbounds %43, %43* %15, i64 0, i32 3
  %21 = getelementptr inbounds [1 x %43*], [1 x %43*]* %20, i64 1
  %22 = bitcast [1 x %43*]* %21 to i8*
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 6
  br i1 %24, label %25, label %38

25:                                               ; preds = %19
  %26 = bitcast [1 x %43*]* %20 to %32**
  %27 = load %32*, %32** %26, align 8
  %28 = getelementptr inbounds %32, %32* %27, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 4
  br i1 %30, label %31, label %38

31:                                               ; preds = %25
  %32 = getelementptr inbounds %32, %32* %27, i64 0, i32 3, i64 0
  %33 = tail call i32 @memcmp(i8* nonnull %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @20, i64 0, i64 0)) #15
  unreachable

36:                                               ; preds = %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @191, i64 0, i64 0)) #15
  unreachable

37:                                               ; preds = %2, %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @192, i64 0, i64 0)) #15
  unreachable

38:                                               ; preds = %31, %2, %13, %25, %19
  %39 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  call void @zend_delayed_compile_var(%37* nonnull %3, %43* %6, i32 1)
  call void @zend_compile_var(%37* nonnull %4, %43* %8, i32 1)
  %40 = load i16, i16* %11, align 8
  %41 = icmp eq i16 %40, 256
  br i1 %41, label %42, label %51

42:                                               ; preds = %38
  %43 = getelementptr inbounds %43, %43* %6, i64 0, i32 3, i64 0
  %44 = load %43*, %43** %43, align 8
  %45 = getelementptr inbounds %43, %43* %44, i64 0, i32 0
  %46 = load i16, i16* %45, align 8
  %47 = icmp eq i16 %46, 64
  %48 = load i8, i8* %10, align 8
  %49 = icmp eq i8 %48, 16
  %50 = or i1 %47, %49
  br i1 %50, label %82, label %54

51:                                               ; preds = %38
  %52 = load i8, i8* %10, align 8
  %53 = icmp eq i8 %52, 16
  br i1 %53, label %82, label %54

54:                                               ; preds = %42, %51
  %55 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %56 = call %9* @get_next_op(%7* %55) #16
  %57 = getelementptr inbounds %9, %9* %56, i64 0, i32 6
  store i8 51, i8* %57, align 4
  %58 = load i8, i8* %10, align 8
  %59 = getelementptr inbounds %9, %9* %56, i64 0, i32 7
  store i8 %58, i8* %59, align 1
  %60 = icmp eq i8 %58, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %54
  %62 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %63 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %64 = call i32 @zend_add_literal(%7* %62, %2* nonnull %63) #16
  %65 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %66 = bitcast %38* %65 to i32*
  br label %71

67:                                               ; preds = %54
  %68 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %69 = bitcast %38* %68 to i32*
  %70 = load i32, i32* %69, align 8
  br label %71

71:                                               ; preds = %61, %67
  %72 = phi i32* [ %66, %61 ], [ %69, %67 ]
  %73 = phi i32 [ %64, %61 ], [ %70, %67 ]
  %74 = getelementptr inbounds %9, %9* %56, i64 0, i32 1, i32 0
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %9, %9* %56, i64 0, i32 8
  store i8 8, i8* %75, align 2
  call fastcc void @244(%9* nonnull %56) #16
  %76 = getelementptr inbounds %9, %9* %56, i64 0, i32 9
  store i8 4, i8* %76, align 1
  %77 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %78 = getelementptr inbounds %7, %7* %77, i64 0, i32 13
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %9, %9* %56, i64 0, i32 3, i32 0
  store i32 %79, i32* %81, align 8
  store i8 4, i8* %10, align 8
  store i32 %79, i32* %72, align 8
  br label %82

82:                                               ; preds = %51, %42, %71
  %83 = call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %84 = bitcast i8* %83 to %9*
  %85 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %86 = icmp ugt i32 %85, %39
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = zext i32 %39 to i64
  %89 = zext i32 %85 to i64
  br label %90

90:                                               ; preds = %90, %87
  %91 = phi i64 [ %88, %87 ], [ %97, %90 ]
  %92 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %93 = call %9* @get_next_op(%7* %92) #16
  %94 = bitcast %9* %93 to i8*
  %95 = getelementptr inbounds %9, %9* %84, i64 %91
  %96 = bitcast %9* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %96, i64 32, i1 false) #16
  call fastcc void @244(%9* %93) #16
  %97 = add nuw nsw i64 %91, 1
  %98 = icmp eq i64 %97, %89
  br i1 %98, label %99, label %90

99:                                               ; preds = %90, %82
  store i32 %39, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %100 = load i8, i8* %10, align 8
  %101 = icmp eq i8 %100, 4
  %102 = getelementptr inbounds %43, %43* %8, i64 0, i32 0
  br i1 %101, label %106, label %103

103:                                              ; preds = %99
  %104 = load i16, i16* %102, align 8
  switch i16 %104, label %106 [
    i16 515, label %105
    i16 768, label %105
    i16 769, label %105
  ]

105:                                              ; preds = %103, %103, %103
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @21, i64 0, i64 0)) #15
  unreachable

106:                                              ; preds = %99, %103
  %107 = call fastcc %9* @231(%37* %0, i8 zeroext 39, %37* nonnull %3, %37* nonnull %4)
  %108 = load i16, i16* %102, align 8
  switch i16 %108, label %111 [
    i16 515, label %109
    i16 768, label %109
    i16 769, label %109
  ]

109:                                              ; preds = %106, %106, %106
  %110 = getelementptr inbounds %9, %9* %107, i64 0, i32 4
  store i32 1, i32* %110, align 4
  br label %111

111:                                              ; preds = %106, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_var(%37* %0, %43* %1, i32 %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp eq i16 %5, 64
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %8 = bitcast [1 x %43*]* %7 to %2*
  %9 = getelementptr inbounds %2, %2* %8, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %43, %43* %1, i64 0, i32 2
  %11 = select i1 %6, i32* %9, i32* %10
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  switch i16 %5, label %192 [
    i16 256, label %13
    i16 512, label %110
    i16 513, label %157
    i16 514, label %158
    i16 515, label %186
    i16 768, label %187
    i16 769, label %188
    i16 65, label %189
  ]

13:                                               ; preds = %3
  %14 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %15 = load %43*, %43** %14, align 8
  %16 = getelementptr inbounds %43, %43* %15, i64 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, 64
  br i1 %18, label %19, label %79

19:                                               ; preds = %13
  %20 = getelementptr inbounds %43, %43* %15, i64 0, i32 3
  %21 = getelementptr inbounds [1 x %43*], [1 x %43*]* %20, i64 1
  %22 = bitcast [1 x %43*]* %21 to i8*
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 6
  br i1 %24, label %25, label %79

25:                                               ; preds = %19
  %26 = bitcast [1 x %43*]* %20 to %32**
  %27 = load %32*, %32** %26, align 8
  %28 = getelementptr inbounds %32, %32* %27, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 4
  br i1 %30, label %31, label %79

31:                                               ; preds = %25
  %32 = getelementptr inbounds %32, %32* %27, i64 0, i32 3, i64 0
  %33 = tail call i32 @memcmp(i8* nonnull %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %79

35:                                               ; preds = %31
  %36 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %37 = tail call %9* @get_next_op(%7* %36) #16
  %38 = getelementptr inbounds %9, %9* %37, i64 0, i32 6
  store i8 -72, i8* %38, align 4
  %39 = getelementptr inbounds %9, %9* %37, i64 0, i32 7
  store i8 8, i8* %39, align 1
  %40 = getelementptr inbounds %9, %9* %37, i64 0, i32 8
  store i8 8, i8* %40, align 2
  tail call fastcc void @244(%9* nonnull %37) #16
  %41 = icmp eq %37* %0, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %9, %9* %37, i64 0, i32 9
  store i8 4, i8* %43, align 1
  %44 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %45 = getelementptr inbounds %7, %7* %44, i64 0, i32 13
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 4
  %48 = getelementptr inbounds %9, %9* %37, i64 0, i32 3, i32 0
  store i32 %46, i32* %48, align 8
  %49 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %49, align 8
  %50 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %51 = bitcast %38* %50 to i32*
  %52 = load i32, i32* %48, align 8
  store i32 %52, i32* %51, align 8
  br label %53

53:                                               ; preds = %35, %42
  %54 = load i8, i8* %38, align 4
  %55 = icmp eq i8 %54, -83
  %56 = select i1 %55, i8 1, i8 3
  %57 = icmp eq i8 %54, -72
  br i1 %57, label %195, label %58

58:                                               ; preds = %53
  %59 = trunc i32 %2 to i3
  switch i3 %59, label %78 [
    i3 0, label %195
    i3 1, label %60
    i3 2, label %62
    i3 3, label %65
    i3 -4, label %68
    i3 -3, label %75
  ]

60:                                               ; preds = %58
  %61 = add i8 %56, %54
  store i8 %61, i8* %38, align 4
  br label %195

62:                                               ; preds = %58
  %63 = shl nuw nsw i8 %56, 1
  %64 = add i8 %63, %54
  store i8 %64, i8* %38, align 4
  br label %195

65:                                               ; preds = %58
  %66 = mul nuw nsw i8 %56, 3
  %67 = add i8 %66, %54
  store i8 %67, i8* %38, align 4
  br label %195

68:                                               ; preds = %58
  %69 = shl nuw nsw i8 %56, 2
  %70 = add i8 %69, %54
  store i8 %70, i8* %38, align 4
  %71 = lshr i32 %2, 3
  %72 = getelementptr inbounds %9, %9* %37, i64 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = or i32 %73, %71
  store i32 %74, i32* %72, align 4
  br label %195

75:                                               ; preds = %58
  %76 = mul nuw nsw i8 %56, 5
  %77 = add i8 %76, %54
  store i8 %77, i8* %38, align 4
  br label %195

78:                                               ; preds = %58
  unreachable

79:                                               ; preds = %31, %13, %25, %19
  %80 = tail call fastcc i32 @245(%37* %0, %43* nonnull %1) #16
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %195

82:                                               ; preds = %79
  %83 = tail call fastcc %9* @236(%37* %0, %43* nonnull %1, i32 0) #16
  %84 = getelementptr inbounds %9, %9* %83, i64 0, i32 6
  %85 = load i8, i8* %84, align 4
  %86 = icmp eq i8 %85, -83
  %87 = select i1 %86, i8 1, i8 3
  %88 = icmp eq i8 %85, -72
  br i1 %88, label %195, label %89

89:                                               ; preds = %82
  %90 = trunc i32 %2 to i3
  switch i3 %90, label %109 [
    i3 0, label %195
    i3 1, label %91
    i3 2, label %93
    i3 3, label %96
    i3 -4, label %99
    i3 -3, label %106
  ]

91:                                               ; preds = %89
  %92 = add i8 %87, %85
  store i8 %92, i8* %84, align 4
  br label %195

93:                                               ; preds = %89
  %94 = shl nuw nsw i8 %87, 1
  %95 = add i8 %94, %85
  store i8 %95, i8* %84, align 4
  br label %195

96:                                               ; preds = %89
  %97 = mul nuw nsw i8 %87, 3
  %98 = add i8 %97, %85
  store i8 %98, i8* %84, align 4
  br label %195

99:                                               ; preds = %89
  %100 = shl nuw nsw i8 %87, 2
  %101 = add i8 %100, %85
  store i8 %101, i8* %84, align 4
  %102 = lshr i32 %2, 3
  %103 = getelementptr inbounds %9, %9* %83, i64 0, i32 4
  %104 = load i32, i32* %103, align 4
  %105 = or i32 %104, %102
  store i32 %105, i32* %103, align 4
  br label %195

106:                                              ; preds = %89
  %107 = mul nuw nsw i8 %87, 5
  %108 = add i8 %107, %85
  store i8 %108, i8* %84, align 4
  br label %195

109:                                              ; preds = %89
  unreachable

110:                                              ; preds = %3
  %111 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %112 = tail call fastcc %9* @235(%37* %0, %43* nonnull %1, i32 %2) #16
  %113 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %114 = bitcast i8* %113 to %9*
  %115 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %116 = icmp ugt i32 %115, %111
  br i1 %116, label %117, label %129

117:                                              ; preds = %110
  %118 = zext i32 %111 to i64
  %119 = zext i32 %115 to i64
  br label %120

120:                                              ; preds = %120, %117
  %121 = phi i64 [ %118, %117 ], [ %127, %120 ]
  %122 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %123 = tail call %9* @get_next_op(%7* %122) #16
  %124 = bitcast %9* %123 to i8*
  %125 = getelementptr inbounds %9, %9* %114, i64 %121
  %126 = bitcast %9* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %126, i64 32, i1 false) #16
  tail call fastcc void @244(%9* %123) #16
  %127 = add nuw nsw i64 %121, 1
  %128 = icmp eq i64 %127, %119
  br i1 %128, label %129, label %120

129:                                              ; preds = %120, %110
  %130 = phi %9* [ null, %110 ], [ %123, %120 ]
  store i32 %111, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %131 = getelementptr inbounds %9, %9* %130, i64 0, i32 6
  %132 = load i8, i8* %131, align 4
  %133 = icmp eq i8 %132, -83
  %134 = select i1 %133, i8 1, i8 3
  %135 = icmp eq i8 %132, -72
  br i1 %135, label %195, label %136

136:                                              ; preds = %129
  %137 = trunc i32 %2 to i3
  switch i3 %137, label %156 [
    i3 0, label %195
    i3 1, label %138
    i3 2, label %140
    i3 3, label %143
    i3 -4, label %146
    i3 -3, label %153
  ]

138:                                              ; preds = %136
  %139 = add i8 %134, %132
  store i8 %139, i8* %131, align 4
  br label %195

140:                                              ; preds = %136
  %141 = shl nuw nsw i8 %134, 1
  %142 = add i8 %141, %132
  store i8 %142, i8* %131, align 4
  br label %195

143:                                              ; preds = %136
  %144 = mul nuw nsw i8 %134, 3
  %145 = add i8 %144, %132
  store i8 %145, i8* %131, align 4
  br label %195

146:                                              ; preds = %136
  %147 = shl nuw nsw i8 %134, 2
  %148 = add i8 %147, %132
  store i8 %148, i8* %131, align 4
  %149 = lshr i32 %2, 3
  %150 = getelementptr inbounds %9, %9* %130, i64 0, i32 4
  %151 = load i32, i32* %150, align 4
  %152 = or i32 %151, %149
  store i32 %152, i32* %150, align 4
  br label %195

153:                                              ; preds = %136
  %154 = mul nuw nsw i8 %134, 5
  %155 = add i8 %154, %132
  store i8 %155, i8* %131, align 4
  br label %195

156:                                              ; preds = %136
  unreachable

157:                                              ; preds = %3
  tail call void @zend_compile_prop(%37* %0, %43* nonnull %1, i32 %2)
  br label %195

158:                                              ; preds = %3
  %159 = tail call %9* @zend_compile_static_prop_common(%37* %0, %43* nonnull %1, i32 undef, i32 0) #16
  %160 = getelementptr inbounds %9, %9* %159, i64 0, i32 6
  %161 = load i8, i8* %160, align 4
  %162 = icmp eq i8 %161, -83
  %163 = select i1 %162, i8 1, i8 3
  %164 = icmp eq i8 %161, -72
  br i1 %164, label %195, label %165

165:                                              ; preds = %158
  %166 = trunc i32 %2 to i3
  switch i3 %166, label %185 [
    i3 0, label %195
    i3 1, label %167
    i3 2, label %169
    i3 3, label %172
    i3 -4, label %175
    i3 -3, label %182
  ]

167:                                              ; preds = %165
  %168 = add i8 %163, %161
  store i8 %168, i8* %160, align 4
  br label %195

169:                                              ; preds = %165
  %170 = shl nuw nsw i8 %163, 1
  %171 = add i8 %170, %161
  store i8 %171, i8* %160, align 4
  br label %195

172:                                              ; preds = %165
  %173 = mul nuw nsw i8 %163, 3
  %174 = add i8 %173, %161
  store i8 %174, i8* %160, align 4
  br label %195

175:                                              ; preds = %165
  %176 = shl nuw nsw i8 %163, 2
  %177 = add i8 %176, %161
  store i8 %177, i8* %160, align 4
  %178 = lshr i32 %2, 3
  %179 = getelementptr inbounds %9, %9* %159, i64 0, i32 4
  %180 = load i32, i32* %179, align 4
  %181 = or i32 %180, %178
  store i32 %181, i32* %179, align 4
  br label %195

182:                                              ; preds = %165
  %183 = mul nuw nsw i8 %163, 5
  %184 = add i8 %183, %161
  store i8 %184, i8* %160, align 4
  br label %195

185:                                              ; preds = %165
  unreachable

186:                                              ; preds = %3
  tail call void @zend_compile_call(%37* %0, %43* nonnull %1, i32 %2)
  br label %195

187:                                              ; preds = %3
  tail call void @zend_compile_method_call(%37* %0, %43* nonnull %1, i32 undef)
  br label %195

188:                                              ; preds = %3
  tail call void @zend_compile_static_call(%37* %0, %43* nonnull %1, i32 undef)
  br label %195

189:                                              ; preds = %3
  %190 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %191 = bitcast [1 x %43*]* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* nonnull align 8 %191, i64 24, i1 false)
  br label %195

192:                                              ; preds = %3
  switch i32 %2, label %194 [
    i32 5, label %193
    i32 2, label %193
    i32 1, label %193
  ]

193:                                              ; preds = %192, %192, %192
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @175, i64 0, i64 0)) #15
  unreachable

194:                                              ; preds = %192
  tail call void @zend_compile_expr(%37* %0, %43* nonnull %1)
  br label %195

195:                                              ; preds = %182, %175, %172, %169, %167, %165, %158, %153, %146, %143, %140, %138, %136, %129, %79, %53, %58, %60, %62, %65, %68, %75, %82, %89, %91, %93, %96, %99, %106, %194, %189, %188, %187, %186, %157
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_compound_assign(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %6 = load %43*, %43** %5, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %43, %43* %6, i64 0, i32 0
  %14 = load i16, i16* %13, align 8
  switch i16 %14, label %122 [
    i16 515, label %15
    i16 768, label %16
    i16 769, label %16
    i16 256, label %17
    i16 514, label %17
    i16 512, label %38
    i16 513, label %80
  ]

15:                                               ; preds = %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @191, i64 0, i64 0)) #15
  unreachable

16:                                               ; preds = %2, %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @192, i64 0, i64 0)) #15
  unreachable

17:                                               ; preds = %2, %2
  %18 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  call void @zend_delayed_compile_var(%37* nonnull %3, %43* %6, i32 2)
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %19 = call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %20 = bitcast i8* %19 to %9*
  %21 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %22 = icmp ugt i32 %21, %18
  br i1 %22, label %23, label %35

23:                                               ; preds = %17
  %24 = zext i32 %18 to i64
  %25 = zext i32 %21 to i64
  br label %26

26:                                               ; preds = %26, %23
  %27 = phi i64 [ %24, %23 ], [ %33, %26 ]
  %28 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %29 = call %9* @get_next_op(%7* %28) #16
  %30 = bitcast %9* %29 to i8*
  %31 = getelementptr inbounds %9, %9* %20, i64 %27
  %32 = bitcast %9* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %32, i64 32, i1 false) #16
  call fastcc void @244(%9* %29) #16
  %33 = add nuw nsw i64 %27, 1
  %34 = icmp eq i64 %33, %25
  br i1 %34, label %35, label %26

35:                                               ; preds = %26, %17
  store i32 %18, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %36 = trunc i16 %10 to i8
  %37 = call fastcc %9* @231(%37* %0, i8 zeroext %36, %37* nonnull %3, %37* nonnull %4)
  br label %123

38:                                               ; preds = %2
  %39 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %40 = tail call fastcc %9* @235(%37* %0, %43* %6, i32 2)
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %41 = call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %42 = bitcast i8* %41 to %9*
  %43 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %44 = icmp ugt i32 %43, %39
  br i1 %44, label %45, label %57

45:                                               ; preds = %38
  %46 = zext i32 %39 to i64
  %47 = zext i32 %43 to i64
  br label %48

48:                                               ; preds = %48, %45
  %49 = phi i64 [ %46, %45 ], [ %55, %48 ]
  %50 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %51 = call %9* @get_next_op(%7* %50) #16
  %52 = bitcast %9* %51 to i8*
  %53 = getelementptr inbounds %9, %9* %42, i64 %49
  %54 = bitcast %9* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %54, i64 32, i1 false) #16
  call fastcc void @244(%9* %51) #16
  %55 = add nuw nsw i64 %49, 1
  %56 = icmp eq i64 %55, %47
  br i1 %56, label %57, label %48

57:                                               ; preds = %48, %38
  %58 = phi %9* [ null, %38 ], [ %51, %48 ]
  store i32 %39, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %59 = trunc i16 %10 to i8
  %60 = getelementptr inbounds %9, %9* %58, i64 0, i32 6
  store i8 %59, i8* %60, align 4
  %61 = getelementptr inbounds %9, %9* %58, i64 0, i32 4
  store i32 147, i32* %61, align 4
  %62 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %63 = call %9* @get_next_op(%7* %62) #16
  %64 = getelementptr inbounds %9, %9* %63, i64 0, i32 6
  store i8 -119, i8* %64, align 4
  %65 = load i8, i8* %12, align 8
  %66 = getelementptr inbounds %9, %9* %63, i64 0, i32 7
  store i8 %65, i8* %66, align 1
  %67 = icmp eq i8 %65, 1
  br i1 %67, label %68, label %72

68:                                               ; preds = %57
  %69 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %70 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %71 = call i32 @zend_add_literal(%7* %69, %2* nonnull %70) #16
  br label %76

72:                                               ; preds = %57
  %73 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %74 = bitcast %38* %73 to i32*
  %75 = load i32, i32* %74, align 8
  br label %76

76:                                               ; preds = %68, %72
  %77 = phi i32 [ %71, %68 ], [ %75, %72 ]
  %78 = getelementptr inbounds %9, %9* %63, i64 0, i32 1, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %9, %9* %63, i64 0, i32 8
  store i8 8, i8* %79, align 2
  call fastcc void @244(%9* nonnull %63) #16
  br label %123

80:                                               ; preds = %2
  %81 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %82 = tail call fastcc %9* @237(%37* %0, %43* %6, i32 2)
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %83 = call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %84 = bitcast i8* %83 to %9*
  %85 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %86 = icmp ugt i32 %85, %81
  br i1 %86, label %87, label %99

87:                                               ; preds = %80
  %88 = zext i32 %81 to i64
  %89 = zext i32 %85 to i64
  br label %90

90:                                               ; preds = %90, %87
  %91 = phi i64 [ %88, %87 ], [ %97, %90 ]
  %92 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %93 = call %9* @get_next_op(%7* %92) #16
  %94 = bitcast %9* %93 to i8*
  %95 = getelementptr inbounds %9, %9* %84, i64 %91
  %96 = bitcast %9* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %96, i64 32, i1 false) #16
  call fastcc void @244(%9* %93) #16
  %97 = add nuw nsw i64 %91, 1
  %98 = icmp eq i64 %97, %89
  br i1 %98, label %99, label %90

99:                                               ; preds = %90, %80
  %100 = phi %9* [ null, %80 ], [ %93, %90 ]
  store i32 %81, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %101 = trunc i16 %10 to i8
  %102 = getelementptr inbounds %9, %9* %100, i64 0, i32 6
  store i8 %101, i8* %102, align 4
  %103 = getelementptr inbounds %9, %9* %100, i64 0, i32 4
  store i32 136, i32* %103, align 4
  %104 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %105 = call %9* @get_next_op(%7* %104) #16
  %106 = getelementptr inbounds %9, %9* %105, i64 0, i32 6
  store i8 -119, i8* %106, align 4
  %107 = load i8, i8* %12, align 8
  %108 = getelementptr inbounds %9, %9* %105, i64 0, i32 7
  store i8 %107, i8* %108, align 1
  %109 = icmp eq i8 %107, 1
  br i1 %109, label %110, label %114

110:                                              ; preds = %99
  %111 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %112 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %113 = call i32 @zend_add_literal(%7* %111, %2* nonnull %112) #16
  br label %118

114:                                              ; preds = %99
  %115 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %116 = bitcast %38* %115 to i32*
  %117 = load i32, i32* %116, align 8
  br label %118

118:                                              ; preds = %110, %114
  %119 = phi i32 [ %113, %110 ], [ %117, %114 ]
  %120 = getelementptr inbounds %9, %9* %105, i64 0, i32 1, i32 0
  store i32 %119, i32* %120, align 8
  %121 = getelementptr inbounds %9, %9* %105, i64 0, i32 8
  store i8 8, i8* %121, align 2
  call fastcc void @244(%9* nonnull %105) #16
  br label %123

122:                                              ; preds = %2
  unreachable

123:                                              ; preds = %118, %76, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_args(%43* nocapture readonly %0, %6* readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = bitcast %43* %0 to %69*
  %5 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %6 = bitcast [1 x %43*]* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %250, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  %11 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %13 = bitcast %38* %12 to i32*
  br label %14

14:                                               ; preds = %9, %237
  %15 = phi i64 [ 0, %9 ], [ %21, %237 ]
  %16 = phi %6* [ %1, %9 ], [ %242, %237 ]
  %17 = phi i32 [ 0, %9 ], [ %241, %237 ]
  %18 = phi i8 [ 0, %9 ], [ %240, %237 ]
  %19 = getelementptr inbounds %69, %69* %4, i64 0, i32 4, i64 %15
  %20 = load %43*, %43** %19, align 8
  %21 = add nuw nsw i64 %15, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %22 = getelementptr inbounds %43, %43* %20, i64 0, i32 0
  %23 = load i16, i16* %22, align 8
  %24 = icmp eq i16 %23, 258
  br i1 %24, label %25, label %46

25:                                               ; preds = %14
  %26 = getelementptr inbounds %43, %43* %20, i64 0, i32 3, i64 0
  %27 = load %43*, %43** %26, align 8
  call void @zend_compile_expr(%37* nonnull %3, %43* %27)
  %28 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %29 = call %9* @get_next_op(%7* %28) #16
  %30 = getelementptr inbounds %9, %9* %29, i64 0, i32 6
  store i8 -91, i8* %30, align 4
  %31 = load i8, i8* %10, align 8
  %32 = getelementptr inbounds %9, %9* %29, i64 0, i32 7
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i8 %31, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %25
  %35 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %36 = call i32 @zend_add_literal(%7* %35, %2* nonnull %11) #16
  br label %39

37:                                               ; preds = %25
  %38 = load i32, i32* %13, align 8
  br label %39

39:                                               ; preds = %34, %37
  %40 = phi i32 [ %36, %34 ], [ %38, %37 ]
  %41 = getelementptr inbounds %9, %9* %29, i64 0, i32 1, i32 0
  store i32 %40, i32* %41, align 8
  %42 = getelementptr inbounds %9, %9* %29, i64 0, i32 8
  store i8 8, i8* %42, align 2
  call fastcc void @244(%9* nonnull %29) #16
  %43 = getelementptr inbounds %9, %9* %29, i64 0, i32 2, i32 0
  store i32 %17, i32* %43, align 4
  %44 = add nsw i32 %17, 4
  %45 = sext i32 %44 to i64
  br label %237

46:                                               ; preds = %14
  %47 = icmp eq i8 %18, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %46
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @22, i64 0, i64 0)) #15
  unreachable

49:                                               ; preds = %46
  %50 = add i32 %17, 1
  switch i16 %23, label %124 [
    i16 515, label %51
    i16 768, label %51
    i16 769, label %51
    i16 256, label %96
    i16 512, label %96
    i16 513, label %96
    i16 514, label %96
  ]

51:                                               ; preds = %49, %49, %49
  call void @zend_compile_var(%37* nonnull %3, %43* %20, i32 0)
  %52 = load i8, i8* %10, align 8
  %53 = and i8 %52, 3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %215

55:                                               ; preds = %51
  %56 = icmp eq %6* %16, null
  br i1 %56, label %215, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 6
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  %61 = icmp ult i64 %15, %60
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = and i64 %15, 4294967295
  br label %69

64:                                               ; preds = %57
  %65 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 16777216
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %95, label %69

69:                                               ; preds = %62, %64
  %70 = phi i64 [ %63, %62 ], [ %60, %64 ]
  %71 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 8
  %72 = load %8*, %8** %71, align 8
  %73 = getelementptr inbounds %8, %8* %72, i64 %70, i32 2
  %74 = load i8, i8* %73, align 8
  %75 = and i8 %74, 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %215

77:                                               ; preds = %69
  br i1 %61, label %78, label %80

78:                                               ; preds = %77
  %79 = and i64 %15, 4294967295
  br label %88

80:                                               ; preds = %77
  %81 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 16777216
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 8
  %87 = load %8*, %8** %86, align 8
  br label %88

88:                                               ; preds = %78, %85
  %89 = phi i64 [ %79, %78 ], [ %60, %85 ]
  %90 = phi %8* [ %72, %78 ], [ %87, %85 ]
  %91 = getelementptr inbounds %8, %8* %90, i64 %89, i32 2
  %92 = load i8, i8* %91, align 8
  %93 = and i8 %92, 2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %215

95:                                               ; preds = %64, %80, %88
  br label %215

96:                                               ; preds = %49, %49, %49, %49
  %97 = icmp eq %6* %16, null
  br i1 %97, label %120, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 6
  %100 = load i32, i32* %99, align 8
  %101 = zext i32 %100 to i64
  %102 = icmp ult i64 %15, %101
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = and i64 %15, 4294967295
  br label %110

105:                                              ; preds = %98
  %106 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 16777216
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %119, label %110

110:                                              ; preds = %103, %105
  %111 = phi i64 [ %104, %103 ], [ %101, %105 ]
  %112 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 8
  %113 = load %8*, %8** %112, align 8
  %114 = getelementptr inbounds %8, %8* %113, i64 %111, i32 2
  %115 = load i8, i8* %114, align 8
  %116 = and i8 %115, 3
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %119, label %118

118:                                              ; preds = %110
  call void @zend_compile_var(%37* nonnull %3, %43* %20, i32 1)
  br label %215

119:                                              ; preds = %105, %110
  call void @zend_compile_var(%37* nonnull %3, %43* %20, i32 0)
  br label %215

120:                                              ; preds = %96
  %121 = trunc i64 %21 to i32
  %122 = shl i32 %121, 3
  %123 = or i32 %122, 4
  call void @zend_compile_var(%37* nonnull %3, %43* %20, i32 %123)
  br label %215

124:                                              ; preds = %49
  call void @zend_compile_expr(%37* nonnull %3, %43* %20)
  %125 = load i8, i8* %10, align 8
  %126 = icmp eq i8 %125, 4
  br i1 %126, label %127, label %168

127:                                              ; preds = %124
  %128 = icmp eq %6* %16, null
  br i1 %128, label %215, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 6
  %131 = load i32, i32* %130, align 8
  %132 = zext i32 %131 to i64
  %133 = icmp ult i64 %15, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %129
  %135 = and i64 %15, 4294967295
  br label %141

136:                                              ; preds = %129
  %137 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = and i32 %138, 16777216
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %167, label %141

141:                                              ; preds = %134, %136
  %142 = phi i64 [ %135, %134 ], [ %132, %136 ]
  %143 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 8
  %144 = load %8*, %8** %143, align 8
  %145 = getelementptr inbounds %8, %8* %144, i64 %142, i32 2
  %146 = load i8, i8* %145, align 8
  %147 = and i8 %146, 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %215

149:                                              ; preds = %141
  br i1 %133, label %150, label %152

150:                                              ; preds = %149
  %151 = and i64 %15, 4294967295
  br label %160

152:                                              ; preds = %149
  %153 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = and i32 %154, 16777216
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %167, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 8
  %159 = load %8*, %8** %158, align 8
  br label %160

160:                                              ; preds = %150, %157
  %161 = phi i64 [ %151, %150 ], [ %132, %157 ]
  %162 = phi %8* [ %144, %150 ], [ %159, %157 ]
  %163 = getelementptr inbounds %8, %8* %162, i64 %161, i32 2
  %164 = load i8, i8* %163, align 8
  %165 = and i8 %164, 2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %167, label %215

167:                                              ; preds = %136, %152, %160
  br label %215

168:                                              ; preds = %124
  %169 = icmp eq i8 %125, 16
  %170 = icmp ne %6* %16, null
  br i1 %169, label %171, label %193

171:                                              ; preds = %168
  br i1 %170, label %172, label %215

172:                                              ; preds = %171
  %173 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 6
  %174 = load i32, i32* %173, align 8
  %175 = zext i32 %174 to i64
  %176 = icmp ult i64 %15, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %172
  %178 = and i64 %15, 4294967295
  br label %184

179:                                              ; preds = %172
  %180 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 2
  %181 = load i32, i32* %180, align 4
  %182 = and i32 %181, 16777216
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %192, label %184

184:                                              ; preds = %177, %179
  %185 = phi i64 [ %178, %177 ], [ %175, %179 ]
  %186 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 8
  %187 = load %8*, %8** %186, align 8
  %188 = getelementptr inbounds %8, %8* %187, i64 %185, i32 2
  %189 = load i8, i8* %188, align 8
  %190 = and i8 %189, 3
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %192, label %215

192:                                              ; preds = %179, %184
  br label %215

193:                                              ; preds = %168
  br i1 %170, label %194, label %215

194:                                              ; preds = %193
  %195 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 6
  %196 = load i32, i32* %195, align 8
  %197 = zext i32 %196 to i64
  %198 = icmp ult i64 %15, %197
  br i1 %198, label %199, label %201

199:                                              ; preds = %194
  %200 = and i64 %15, 4294967295
  br label %206

201:                                              ; preds = %194
  %202 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 2
  %203 = load i32, i32* %202, align 4
  %204 = and i32 %203, 16777216
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %215, label %206

206:                                              ; preds = %199, %201
  %207 = phi i64 [ %200, %199 ], [ %197, %201 ]
  %208 = getelementptr inbounds %6, %6* %16, i64 0, i32 0, i32 8
  %209 = load %8*, %8** %208, align 8
  %210 = getelementptr inbounds %8, %8* %209, i64 %207, i32 2
  %211 = load i8, i8* %210, align 8
  %212 = and i8 %211, 1
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %215, label %214

214:                                              ; preds = %206
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @23, i64 0, i64 0)) #15
  unreachable

215:                                              ; preds = %201, %192, %184, %167, %160, %95, %88, %193, %171, %127, %141, %55, %69, %51, %206, %118, %119, %120
  %216 = phi i8 [ 67, %118 ], [ 117, %119 ], [ 66, %120 ], [ 65, %206 ], [ 65, %51 ], [ 106, %69 ], [ 50, %55 ], [ 106, %141 ], [ 50, %127 ], [ 66, %171 ], [ 116, %193 ], [ 117, %95 ], [ 65, %88 ], [ 117, %167 ], [ 65, %160 ], [ 117, %192 ], [ 67, %184 ], [ 65, %201 ]
  %217 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %218 = call %9* @get_next_op(%7* %217) #16
  %219 = getelementptr inbounds %9, %9* %218, i64 0, i32 6
  store i8 %216, i8* %219, align 4
  %220 = load i8, i8* %10, align 8
  %221 = getelementptr inbounds %9, %9* %218, i64 0, i32 7
  store i8 %220, i8* %221, align 1
  %222 = icmp eq i8 %220, 1
  br i1 %222, label %223, label %226

223:                                              ; preds = %215
  %224 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %225 = call i32 @zend_add_literal(%7* %224, %2* nonnull %11) #16
  br label %228

226:                                              ; preds = %215
  %227 = load i32, i32* %13, align 8
  br label %228

228:                                              ; preds = %223, %226
  %229 = phi i32 [ %225, %223 ], [ %227, %226 ]
  %230 = getelementptr inbounds %9, %9* %218, i64 0, i32 1, i32 0
  store i32 %229, i32* %230, align 8
  %231 = getelementptr inbounds %9, %9* %218, i64 0, i32 8
  store i8 8, i8* %231, align 2
  call fastcc void @244(%9* nonnull %218) #16
  %232 = getelementptr inbounds %9, %9* %218, i64 0, i32 2, i32 0
  %233 = trunc i64 %21 to i32
  store i32 %233, i32* %232, align 4
  %234 = shl i64 %15, 32
  %235 = add i64 %234, 21474836480
  %236 = ashr exact i64 %235, 32
  br label %237

237:                                              ; preds = %228, %39
  %238 = phi i64 [ %236, %228 ], [ %45, %39 ]
  %239 = phi %9* [ %218, %228 ], [ %29, %39 ]
  %240 = phi i8 [ 0, %228 ], [ 1, %39 ]
  %241 = phi i32 [ %50, %228 ], [ %17, %39 ]
  %242 = phi %6* [ %16, %228 ], [ null, %39 ]
  %243 = getelementptr inbounds %2, %2* null, i64 %238
  %244 = ptrtoint %2* %243 to i64
  %245 = trunc i64 %244 to i32
  %246 = getelementptr inbounds %9, %9* %239, i64 0, i32 3, i32 0
  store i32 %245, i32* %246, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  %247 = load i32, i32* %6, align 8
  %248 = zext i32 %247 to i64
  %249 = icmp ult i64 %21, %248
  br i1 %249, label %14, label %250

250:                                              ; preds = %237, %2
  %251 = phi i32 [ 0, %2 ], [ %241, %237 ]
  ret i32 %251
}

; Function Attrs: norecurse nounwind readonly uwtable
define dso_local zeroext i8 @zend_get_call_op(%9* nocapture readonly %0, %6* readonly %1) local_unnamed_addr #6 {
  %3 = icmp eq %6* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %6, %6* %1, i64 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %4
  %9 = getelementptr inbounds %9, %9* %0, i64 0, i32 6
  %10 = load i8, i8* %9, align 4
  %11 = icmp ne i8 %10, 61
  %12 = load void (%20*, %2*)*, void (%20*, %2*)** @zend_execute_internal, align 8
  %13 = icmp ne void (%20*, %2*)* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %38, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %6, %6* %1, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 335806466
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %19, i8 -127, i8 -125
  br label %39

21:                                               ; preds = %4
  %22 = load void (%20*)*, void (%20*)** @zend_execute_ex, align 8
  %23 = icmp eq void (%20*)* %22, @execute_ex
  br i1 %23, label %24, label %38

24:                                               ; preds = %21
  %25 = getelementptr inbounds %6, %6* %1, i64 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %39, label %38

29:                                               ; preds = %2
  %30 = load void (%20*)*, void (%20*)** @zend_execute_ex, align 8
  %31 = icmp ne void (%20*)* %30, @execute_ex
  %32 = load void (%20*, %2*)*, void (%20*, %2*)** @zend_execute_internal, align 8
  %33 = icmp ne void (%20*, %2*)* %32, null
  %34 = or i1 %31, %33
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %9, %9* %0, i64 0, i32 6
  %37 = load i8, i8* %36, align 4
  switch i8 %37, label %38 [
    i8 59, label %39
    i8 69, label %39
  ]

38:                                               ; preds = %35, %24, %29, %8, %21
  br label %39

39:                                               ; preds = %35, %35, %24, %15, %38
  %40 = phi i8 [ 60, %38 ], [ %20, %15 ], [ -126, %24 ], [ -125, %35 ], [ -125, %35 ]
  ret i8 %40
}

declare dso_local void @execute_ex(%20*) #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_call_common(%37* %0, %43* nocapture readonly %1, %6* %2) local_unnamed_addr #0 {
  %4 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %5 = tail call i32 @get_next_op_number(%7* %4) #16
  %6 = add i32 %5, -1
  %7 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %12 = tail call %9* @get_next_op(%7* %11) #16
  %13 = getelementptr inbounds %9, %9* %12, i64 0, i32 6
  store i8 102, i8* %13, align 4
  %14 = getelementptr inbounds %9, %9* %12, i64 0, i32 7
  store i8 8, i8* %14, align 1
  %15 = getelementptr inbounds %9, %9* %12, i64 0, i32 8
  store i8 8, i8* %15, align 2
  br label %16

16:                                               ; preds = %3, %10
  %17 = tail call i32 @zend_compile_args(%43* %1, %6* %2)
  %18 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %19 = getelementptr inbounds %7, %7* %18, i64 0, i32 11
  %20 = load %9*, %9** %19, align 8
  %21 = zext i32 %6 to i64
  %22 = getelementptr inbounds %9, %9* %20, i64 %21, i32 4
  store i32 %17, i32* %22, align 4
  %23 = getelementptr inbounds %9, %9* %20, i64 %21, i32 6
  %24 = load i8, i8* %23, align 4
  %25 = icmp eq i8 %24, 61
  br i1 %25, label %26, label %48

26:                                               ; preds = %16
  %27 = add i32 %17, 5
  %28 = getelementptr inbounds %6, %6* %2, i64 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = getelementptr inbounds %6, %6* %2, i64 0, i32 0, i32 12
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %6, %6* %2, i64 0, i32 0, i32 13
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %6, %6* %2, i64 0, i32 0, i32 6
  %38 = load i32, i32* %37, align 8
  %39 = icmp ult i32 %38, %17
  %40 = select i1 %39, i32 %38, i32 %17
  %41 = add i32 %34, %27
  %42 = add i32 %41, %36
  %43 = sub i32 %42, %40
  br label %44

44:                                               ; preds = %32, %26
  %45 = phi i32 [ %43, %32 ], [ %27, %26 ]
  %46 = shl i32 %45, 4
  %47 = getelementptr inbounds %9, %9* %20, i64 %21, i32 1, i32 0
  store i32 %46, i32* %47, align 8
  br label %54

48:                                               ; preds = %16
  %49 = icmp eq i8 %24, 68
  %50 = select i1 %49, i32 8, i32 0
  %51 = icmp eq %6* %2, null
  br i1 %51, label %78, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %6, %6* %2, i64 0, i32 0, i32 0
  br label %54

54:                                               ; preds = %52, %44
  %55 = phi i8* [ %53, %52 ], [ %28, %44 ]
  %56 = phi i32 [ %50, %52 ], [ 0, %44 ]
  %57 = load i8, i8* %55, align 8
  %58 = icmp eq i8 %57, 1
  br i1 %58, label %59, label %70

59:                                               ; preds = %54
  %60 = icmp ne i8 %24, 61
  %61 = load void (%20*, %2*)*, void (%20*, %2*)** @zend_execute_internal, align 8
  %62 = icmp ne void (%20*, %2*)* %61, null
  %63 = or i1 %60, %62
  br i1 %63, label %85, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %6, %6* %2, i64 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 335806466
  %68 = icmp eq i32 %67, 0
  %69 = select i1 %68, i8 -127, i8 -125
  br label %87

70:                                               ; preds = %54
  %71 = load void (%20*)*, void (%20*)** @zend_execute_ex, align 8
  %72 = icmp eq void (%20*)* %71, @execute_ex
  br i1 %72, label %73, label %85

73:                                               ; preds = %70
  %74 = getelementptr inbounds %6, %6* %2, i64 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %87, label %85

78:                                               ; preds = %48
  %79 = load void (%20*)*, void (%20*)** @zend_execute_ex, align 8
  %80 = icmp ne void (%20*)* %79, @execute_ex
  %81 = load void (%20*, %2*)*, void (%20*, %2*)** @zend_execute_internal, align 8
  %82 = icmp ne void (%20*, %2*)* %81, null
  %83 = or i1 %80, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %78
  switch i8 %24, label %85 [
    i8 59, label %87
    i8 69, label %87
  ]

85:                                               ; preds = %84, %78, %73, %70, %59
  %86 = phi i32 [ %50, %84 ], [ %50, %78 ], [ %56, %73 ], [ %56, %70 ], [ %56, %59 ]
  br label %87

87:                                               ; preds = %64, %73, %84, %84, %85
  %88 = phi i32 [ %86, %85 ], [ %56, %64 ], [ %56, %73 ], [ %50, %84 ], [ %50, %84 ]
  %89 = phi i8 [ 60, %85 ], [ %69, %64 ], [ -126, %73 ], [ -125, %84 ], [ -125, %84 ]
  %90 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %91 = tail call %9* @get_next_op(%7* %90) #16
  %92 = getelementptr inbounds %9, %9* %91, i64 0, i32 6
  store i8 %89, i8* %92, align 4
  %93 = getelementptr inbounds %9, %9* %91, i64 0, i32 7
  store i8 8, i8* %93, align 1
  %94 = getelementptr inbounds %9, %9* %91, i64 0, i32 8
  store i8 8, i8* %94, align 2
  tail call fastcc void @244(%9* nonnull %91) #16
  %95 = icmp eq %37* %0, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %87
  %97 = getelementptr inbounds %9, %9* %91, i64 0, i32 9
  store i8 4, i8* %97, align 1
  %98 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %99 = getelementptr inbounds %7, %7* %98, i64 0, i32 13
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %9, %9* %91, i64 0, i32 3, i32 0
  store i32 %100, i32* %102, align 8
  %103 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %103, align 8
  %104 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %105 = bitcast %38* %104 to i32*
  %106 = load i32, i32* %102, align 8
  store i32 %106, i32* %105, align 8
  br label %107

107:                                              ; preds = %87, %96
  %108 = getelementptr inbounds %9, %9* %91, i64 0, i32 1, i32 0
  store i32 %88, i32* %108, align 8
  %109 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %107
  %113 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %114 = tail call %9* @get_next_op(%7* %113) #16
  %115 = getelementptr inbounds %9, %9* %114, i64 0, i32 6
  store i8 103, i8* %115, align 4
  %116 = getelementptr inbounds %9, %9* %114, i64 0, i32 7
  store i8 8, i8* %116, align 1
  %117 = getelementptr inbounds %9, %9* %114, i64 0, i32 8
  store i8 8, i8* %117, align 2
  br label %118

118:                                              ; preds = %107, %112
  ret void
}

declare dso_local i32 @get_next_op_number(%7*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden zeroext i8 @zend_compile_function_name(%37* nocapture %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %5 = bitcast [1 x %43*]* %4 to %32**
  %6 = load %32*, %32** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #16
  %7 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), align 8
  %13 = call %32* @zend_resolve_non_class_name(%32* %6, i32 %11, i8* nonnull %3, i8 zeroext 0, %39* %12) #16
  %14 = bitcast %2* %8 to %32**
  store %32* %13, %32** %14, align 8
  %15 = getelementptr inbounds %32, %32* %13, i64 0, i32 0, i32 1
  %16 = bitcast %18* %15 to %64*
  %17 = getelementptr inbounds %64, %64* %16, i64 0, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, 2
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i32 5126, i32 6
  %22 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %21, i32* %22, align 8
  %23 = load i8, i8* %3, align 1
  %24 = icmp eq i8 %23, 0
  %25 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %26 = icmp ne %32* %25, null
  %27 = and i1 %24, %26
  %28 = zext i1 %27 to i8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  ret i8 %28
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_ns_call(%37* %0, %37* nocapture readonly %1, %43* %2) local_unnamed_addr #0 {
  %4 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %5 = tail call %9* @get_next_op(%7* %4) #16
  %6 = getelementptr inbounds %9, %9* %5, i64 0, i32 6
  store i8 69, i8* %6, align 4
  %7 = getelementptr inbounds %9, %9* %5, i64 0, i32 7
  store i8 8, i8* %7, align 1
  %8 = getelementptr inbounds %9, %9* %5, i64 0, i32 8
  store i8 1, i8* %8, align 2
  %9 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %10 = getelementptr inbounds %37, %37* %1, i64 0, i32 2, i32 0, i32 0
  %11 = bitcast %3* %10 to %32**
  %12 = load %32*, %32** %11, align 8
  %13 = tail call fastcc i32 @239(%7* %9, %32* %12)
  %14 = getelementptr inbounds %9, %9* %5, i64 0, i32 2, i32 0
  store i32 %13, i32* %14, align 4
  %15 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %16 = getelementptr inbounds %7, %7* %15, i64 0, i32 27
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %7, %7* %15, i64 0, i32 26
  %19 = load %2*, %2** %18, align 8
  %20 = zext i32 %13 to i64
  %21 = getelementptr inbounds %2, %2* %19, i64 %20, i32 2, i32 0
  store i32 %17, i32* %21, align 4
  %22 = load i32, i32* %16, align 8
  %23 = add i32 %22, 8
  store i32 %23, i32* %16, align 8
  tail call void @zend_compile_call_common(%37* %0, %43* %2, %6* null)
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @239(%7* nocapture %0, %32* %1) unnamed_addr #0 {
  %3 = alloca %2, align 8
  %4 = alloca %2, align 8
  %5 = alloca %2, align 8
  %6 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  %7 = bitcast %2* %5 to %32**
  store %32* %1, %32** %7, align 8
  %8 = getelementptr inbounds %32, %32* %1, i64 0, i32 0, i32 1
  %9 = bitcast %18* %8 to %64*
  %10 = getelementptr inbounds %64, %64* %9, i64 0, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 2
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %13, i32 5126, i32 6
  %15 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 %14, i32* %15, align 8
  %16 = call i32 @zend_add_literal(%7* %0, %2* nonnull %5) #16
  %17 = load %32*, %32** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  %18 = tail call %32* @zend_string_tolower(%32* %17) #16
  %19 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  %20 = bitcast %2* %4 to %32**
  store %32* %18, %32** %20, align 8
  %21 = getelementptr inbounds %32, %32* %18, i64 0, i32 0, i32 1
  %22 = bitcast %18* %21 to %64*
  %23 = getelementptr inbounds %64, %64* %22, i64 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 2
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i32 5126, i32 6
  %28 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %27, i32* %28, align 8
  %29 = call i32 @zend_add_literal(%7* %0, %2* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  %30 = getelementptr inbounds %32, %32* %17, i64 0, i32 3, i64 0
  %31 = getelementptr inbounds %32, %32* %17, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %68, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %32, %32* %17, i64 0, i32 3, i64 %32
  br label %36

36:                                               ; preds = %40, %34
  %37 = phi i8* [ %35, %34 ], [ %38, %40 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 -1
  %39 = icmp ult i8* %38, %30
  br i1 %39, label %68, label %40

40:                                               ; preds = %36
  %41 = load i8, i8* %38, align 1
  %42 = icmp eq i8 %41, 92
  br i1 %42, label %43, label %36

43:                                               ; preds = %40
  %44 = ptrtoint i8* %35 to i64
  %45 = ptrtoint i8* %37 to i64
  %46 = sub i64 %44, %45
  %47 = add i64 %46, 32
  %48 = and i64 %47, -8
  %49 = tail call noalias i8* @_emalloc(i64 %48) #17
  %50 = bitcast i8* %49 to i32*
  store i32 1, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %49, i64 4
  %52 = bitcast i8* %51 to i32*
  store i32 6, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %49, i64 8
  %54 = bitcast i8* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %49, i64 16
  %56 = bitcast i8* %55 to i64*
  store i64 %46, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %49, i64 24
  %58 = tail call i8* @zend_str_tolower_copy(i8* nonnull %57, i8* nonnull %37, i64 %46) #16
  %59 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #16
  %60 = bitcast %2* %3 to i8**
  store i8* %49, i8** %60, align 8
  %61 = getelementptr inbounds i8, i8* %49, i64 5
  %62 = load i8, i8* %61, align 1
  %63 = and i8 %62, 2
  %64 = icmp eq i8 %63, 0
  %65 = select i1 %64, i32 5126, i32 6
  %66 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 %65, i32* %66, align 8
  %67 = call i32 @zend_add_literal(%7* %0, %2* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #16
  br label %68

68:                                               ; preds = %36, %2, %43
  ret i32 %16
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_dynamic_call(%37* %0, %37* %1, %43* nocapture readonly %2) local_unnamed_addr #0 {
  %4 = alloca %2, align 8
  %5 = alloca %2, align 8
  %6 = alloca %2, align 8
  %7 = alloca %2, align 8
  %8 = alloca %2, align 8
  %9 = alloca %2, align 8
  %10 = getelementptr inbounds %37, %37* %1, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %189

13:                                               ; preds = %3
  %14 = getelementptr inbounds %37, %37* %1, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %37, %37* %1, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %4* %15 to i8*
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 6
  br i1 %18, label %19, label %189

19:                                               ; preds = %13
  %20 = bitcast %2* %14 to %32**
  %21 = load %32*, %32** %20, align 8
  %22 = getelementptr inbounds %32, %32* %21, i64 0, i32 3, i64 0
  %23 = getelementptr inbounds %32, %32* %21, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %148, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %32, %32* %21, i64 0, i32 3, i64 %24
  br label %28

28:                                               ; preds = %32, %26
  %29 = phi i8* [ %27, %26 ], [ %30, %32 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 -1
  %31 = icmp ult i8* %30, %22
  br i1 %31, label %148, label %32

32:                                               ; preds = %28
  %33 = load i8, i8* %30, align 1
  %34 = icmp eq i8 %33, 58
  br i1 %34, label %35, label %28

35:                                               ; preds = %32
  %36 = icmp ugt i8* %30, %22
  br i1 %36, label %37, label %148

37:                                               ; preds = %35
  %38 = getelementptr inbounds i8, i8* %29, i64 -2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 58
  br i1 %40, label %41, label %148

41:                                               ; preds = %37
  %42 = ptrtoint i8* %30 to i64
  %43 = ptrtoint i8* %22 to i64
  %44 = sub i64 %42, %43
  %45 = add nsw i64 %44, -1
  %46 = add i64 %44, 31
  %47 = and i64 %46, -8
  %48 = tail call noalias i8* @_emalloc(i64 %47) #17
  %49 = bitcast i8* %48 to %32*
  %50 = bitcast i8* %48 to i32*
  store i32 1, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %48, i64 4
  %52 = bitcast i8* %51 to i32*
  store i32 6, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %48, i64 8
  %54 = bitcast i8* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %48, i64 16
  %56 = bitcast i8* %55 to i64*
  store i64 %45, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %48, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 1 %22, i64 %45, i1 false) #16
  %58 = getelementptr inbounds %32, %32* %49, i64 0, i32 3, i64 %45
  store i8 0, i8* %58, align 1
  %59 = load i64, i64* %23, align 8
  %60 = xor i64 %44, -1
  %61 = add i64 %59, %60
  %62 = add i64 %61, 32
  %63 = and i64 %62, -8
  %64 = tail call noalias i8* @_emalloc(i64 %63) #17
  %65 = bitcast i8* %64 to %32*
  %66 = bitcast i8* %64 to i32*
  store i32 1, i32* %66, align 8
  %67 = getelementptr inbounds i8, i8* %64, i64 4
  %68 = bitcast i8* %67 to i32*
  store i32 6, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %64, i64 8
  %70 = bitcast i8* %69 to i64*
  store i64 0, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %64, i64 16
  %72 = bitcast i8* %71 to i64*
  store i64 %61, i64* %72, align 8
  %73 = getelementptr inbounds i8, i8* %64, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 1 %29, i64 %61, i1 false) #16
  %74 = getelementptr inbounds %32, %32* %65, i64 0, i32 3, i64 %61
  store i8 0, i8* %74, align 1
  %75 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %76 = tail call %9* @get_next_op(%7* %75) #16
  %77 = getelementptr inbounds %9, %9* %76, i64 0, i32 6
  store i8 113, i8* %77, align 4
  %78 = getelementptr inbounds %9, %9* %76, i64 0, i32 7
  store i8 1, i8* %78, align 1
  %79 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %80 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #16
  %81 = bitcast %2* %5 to %32**
  %82 = bitcast %2* %5 to i8**
  store i8* %48, i8** %82, align 8
  %83 = getelementptr inbounds i8, i8* %48, i64 5
  %84 = load i8, i8* %83, align 1
  %85 = and i8 %84, 2
  %86 = icmp eq i8 %85, 0
  %87 = select i1 %86, i32 5126, i32 6
  %88 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 %87, i32* %88, align 8
  %89 = call i32 @zend_add_literal(%7* %79, %2* nonnull %5) #16
  %90 = load %32*, %32** %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #16
  %91 = tail call %32* @zend_string_tolower(%32* %90) #16
  %92 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #16
  %93 = bitcast %2* %4 to %32**
  store %32* %91, %32** %93, align 8
  %94 = getelementptr inbounds %32, %32* %91, i64 0, i32 0, i32 1
  %95 = bitcast %18* %94 to %64*
  %96 = getelementptr inbounds %64, %64* %95, i64 0, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = and i8 %97, 2
  %99 = icmp eq i8 %98, 0
  %100 = select i1 %99, i32 5126, i32 6
  %101 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %100, i32* %101, align 8
  %102 = call i32 @zend_add_literal(%7* %79, %2* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #16
  %103 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %104 = getelementptr inbounds %7, %7* %103, i64 0, i32 27
  %105 = load i32, i32* %104, align 8
  %106 = getelementptr inbounds %7, %7* %103, i64 0, i32 26
  %107 = load %2*, %2** %106, align 8
  %108 = zext i32 %89 to i64
  %109 = getelementptr inbounds %2, %2* %107, i64 %108, i32 2, i32 0
  store i32 %105, i32* %109, align 4
  %110 = load i32, i32* %104, align 8
  %111 = add i32 %110, 8
  store i32 %111, i32* %104, align 8
  %112 = getelementptr inbounds %9, %9* %76, i64 0, i32 1, i32 0
  store i32 %89, i32* %112, align 8
  %113 = getelementptr inbounds %9, %9* %76, i64 0, i32 8
  store i8 1, i8* %113, align 2
  %114 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %115 = bitcast %2* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #16
  %116 = bitcast %2* %7 to %32**
  %117 = bitcast %2* %7 to i8**
  store i8* %64, i8** %117, align 8
  %118 = getelementptr inbounds i8, i8* %64, i64 5
  %119 = load i8, i8* %118, align 1
  %120 = and i8 %119, 2
  %121 = icmp eq i8 %120, 0
  %122 = select i1 %121, i32 5126, i32 6
  %123 = getelementptr inbounds %2, %2* %7, i64 0, i32 1, i32 0
  store i32 %122, i32* %123, align 8
  %124 = call i32 @zend_add_literal(%7* %114, %2* nonnull %7) #16
  %125 = load %32*, %32** %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #16
  %126 = tail call %32* @zend_string_tolower(%32* %125) #16
  %127 = bitcast %2* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #16
  %128 = bitcast %2* %6 to %32**
  store %32* %126, %32** %128, align 8
  %129 = getelementptr inbounds %32, %32* %126, i64 0, i32 0, i32 1
  %130 = bitcast %18* %129 to %64*
  %131 = getelementptr inbounds %64, %64* %130, i64 0, i32 1
  %132 = load i8, i8* %131, align 1
  %133 = and i8 %132, 2
  %134 = icmp eq i8 %133, 0
  %135 = select i1 %134, i32 5126, i32 6
  %136 = getelementptr inbounds %2, %2* %6, i64 0, i32 1, i32 0
  store i32 %135, i32* %136, align 8
  %137 = call i32 @zend_add_literal(%7* %114, %2* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #16
  %138 = getelementptr inbounds %9, %9* %76, i64 0, i32 2, i32 0
  store i32 %124, i32* %138, align 4
  %139 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %140 = getelementptr inbounds %7, %7* %139, i64 0, i32 27
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %7, %7* %139, i64 0, i32 26
  %143 = load %2*, %2** %142, align 8
  %144 = zext i32 %124 to i64
  %145 = getelementptr inbounds %2, %2* %143, i64 %144, i32 2, i32 0
  store i32 %141, i32* %145, align 4
  %146 = load i32, i32* %140, align 8
  %147 = add i32 %146, 8
  store i32 %147, i32* %140, align 8
  tail call void @_zval_ptr_dtor(%2* nonnull %14) #16
  br label %208

148:                                              ; preds = %28, %19, %35, %37
  %149 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %150 = tail call %9* @get_next_op(%7* %149) #16
  %151 = getelementptr inbounds %9, %9* %150, i64 0, i32 6
  store i8 59, i8* %151, align 4
  %152 = getelementptr inbounds %9, %9* %150, i64 0, i32 7
  store i8 8, i8* %152, align 1
  %153 = getelementptr inbounds %9, %9* %150, i64 0, i32 8
  store i8 1, i8* %153, align 2
  %154 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %155 = bitcast %2* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155) #16
  %156 = bitcast %2* %9 to %32**
  store %32* %21, %32** %156, align 8
  %157 = getelementptr inbounds %32, %32* %21, i64 0, i32 0, i32 1
  %158 = bitcast %18* %157 to %64*
  %159 = getelementptr inbounds %64, %64* %158, i64 0, i32 1
  %160 = load i8, i8* %159, align 1
  %161 = and i8 %160, 2
  %162 = icmp eq i8 %161, 0
  %163 = select i1 %162, i32 5126, i32 6
  %164 = getelementptr inbounds %2, %2* %9, i64 0, i32 1, i32 0
  store i32 %163, i32* %164, align 8
  %165 = call i32 @zend_add_literal(%7* %154, %2* nonnull %9) #16
  %166 = load %32*, %32** %156, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155) #16
  %167 = tail call %32* @zend_string_tolower(%32* %166) #16
  %168 = bitcast %2* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #16
  %169 = bitcast %2* %8 to %32**
  store %32* %167, %32** %169, align 8
  %170 = getelementptr inbounds %32, %32* %167, i64 0, i32 0, i32 1
  %171 = bitcast %18* %170 to %64*
  %172 = getelementptr inbounds %64, %64* %171, i64 0, i32 1
  %173 = load i8, i8* %172, align 1
  %174 = and i8 %173, 2
  %175 = icmp eq i8 %174, 0
  %176 = select i1 %175, i32 5126, i32 6
  %177 = getelementptr inbounds %2, %2* %8, i64 0, i32 1, i32 0
  store i32 %176, i32* %177, align 8
  %178 = call i32 @zend_add_literal(%7* %154, %2* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #16
  %179 = getelementptr inbounds %9, %9* %150, i64 0, i32 2, i32 0
  store i32 %165, i32* %179, align 4
  %180 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %181 = getelementptr inbounds %7, %7* %180, i64 0, i32 27
  %182 = load i32, i32* %181, align 8
  %183 = getelementptr inbounds %7, %7* %180, i64 0, i32 26
  %184 = load %2*, %2** %183, align 8
  %185 = zext i32 %165 to i64
  %186 = getelementptr inbounds %2, %2* %184, i64 %185, i32 2, i32 0
  store i32 %182, i32* %186, align 4
  %187 = load i32, i32* %181, align 8
  %188 = add i32 %187, 8
  store i32 %188, i32* %181, align 8
  br label %208

189:                                              ; preds = %3, %13
  %190 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %191 = tail call %9* @get_next_op(%7* %190) #16
  %192 = getelementptr inbounds %9, %9* %191, i64 0, i32 6
  store i8 -128, i8* %192, align 4
  %193 = getelementptr inbounds %9, %9* %191, i64 0, i32 7
  store i8 8, i8* %193, align 1
  %194 = load i8, i8* %10, align 8
  %195 = getelementptr inbounds %9, %9* %191, i64 0, i32 8
  store i8 %194, i8* %195, align 2
  %196 = icmp eq i8 %194, 1
  br i1 %196, label %197, label %201

197:                                              ; preds = %189
  %198 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %199 = getelementptr inbounds %37, %37* %1, i64 0, i32 2, i32 0
  %200 = tail call i32 @zend_add_literal(%7* %198, %2* nonnull %199) #16
  br label %205

201:                                              ; preds = %189
  %202 = getelementptr inbounds %37, %37* %1, i64 0, i32 2
  %203 = bitcast %38* %202 to i32*
  %204 = load i32, i32* %203, align 8
  br label %205

205:                                              ; preds = %197, %201
  %206 = phi i32 [ %200, %197 ], [ %204, %201 ]
  %207 = getelementptr inbounds %9, %9* %191, i64 0, i32 2, i32 0
  store i32 %206, i32* %207, align 4
  tail call fastcc void @244(%9* nonnull %191) #16
  br label %208

208:                                              ; preds = %41, %148, %205
  tail call void @zend_compile_call_common(%37* %0, %43* %2, %6* null)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_strlen(%37* %0, %69* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %79

8:                                                ; preds = %2
  %9 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %79

12:                                               ; preds = %8
  %13 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %14 = load %43*, %43** %13, align 8
  %15 = getelementptr inbounds %43, %43* %14, i64 0, i32 0
  %16 = load i16, i16* %15, align 8
  %17 = icmp eq i16 %16, 258
  br i1 %17, label %79, label %18

18:                                               ; preds = %12
  call void @zend_compile_expr(%37* nonnull %3, %43* %14)
  %19 = load i8, i8* %4, align 8
  %20 = icmp eq i8 %19, 1
  br i1 %20, label %21, label %48

21:                                               ; preds = %18
  %22 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %23 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast %4* %23 to i8*
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 6
  br i1 %26, label %27, label %48

27:                                               ; preds = %21
  %28 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %28, align 8
  %29 = bitcast %2* %22 to %32**
  %30 = load %32*, %32** %29, align 8
  %31 = getelementptr inbounds %32, %32* %30, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 4, i32* %34, align 8
  %35 = bitcast %4* %23 to %65*
  %36 = getelementptr inbounds %65, %65* %35, i64 0, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = and i8 %37, 4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %79, label %40

40:                                               ; preds = %27
  %41 = getelementptr inbounds %32, %32* %30, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, -1
  store i32 %43, i32* %41, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %79

45:                                               ; preds = %40
  %46 = bitcast %2* %22 to %66**
  %47 = load %66*, %66** %46, align 8
  call void @_zval_dtor_func(%66* %47) #16
  br label %79

48:                                               ; preds = %21, %18
  %49 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %50 = call %9* @get_next_op(%7* %49) #16
  %51 = getelementptr inbounds %9, %9* %50, i64 0, i32 6
  store i8 121, i8* %51, align 4
  %52 = load i8, i8* %4, align 8
  %53 = getelementptr inbounds %9, %9* %50, i64 0, i32 7
  store i8 %52, i8* %53, align 1
  %54 = icmp eq i8 %52, 1
  br i1 %54, label %55, label %59

55:                                               ; preds = %48
  %56 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %57 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %58 = call i32 @zend_add_literal(%7* %56, %2* nonnull %57) #16
  br label %63

59:                                               ; preds = %48
  %60 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %61 = bitcast %38* %60 to i32*
  %62 = load i32, i32* %61, align 8
  br label %63

63:                                               ; preds = %59, %55
  %64 = phi i32 [ %62, %59 ], [ %58, %55 ]
  %65 = getelementptr inbounds %9, %9* %50, i64 0, i32 1, i32 0
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %9, %9* %50, i64 0, i32 8
  store i8 8, i8* %66, align 2
  call fastcc void @244(%9* nonnull %50) #16
  %67 = icmp eq %37* %0, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %9, %9* %50, i64 0, i32 9
  store i8 2, i8* %69, align 1
  %70 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %71 = getelementptr inbounds %7, %7* %70, i64 0, i32 13
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %9, %9* %50, i64 0, i32 3, i32 0
  store i32 %72, i32* %74, align 8
  %75 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %75, align 8
  %76 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %77 = bitcast %38* %76 to i32*
  %78 = load i32, i32* %74, align 8
  store i32 %78, i32* %77, align 8
  br label %79

79:                                               ; preds = %68, %63, %45, %40, %27, %12, %2, %8
  %80 = phi i32 [ -1, %8 ], [ -1, %2 ], [ -1, %12 ], [ 0, %27 ], [ 0, %40 ], [ 0, %45 ], [ 0, %63 ], [ 0, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret i32 %80
}

; Function Attrs: nounwind uwtable
define internal fastcc %9* @240(%37* %0, i8 zeroext %1, %37* %2, %37* %3) unnamed_addr #0 {
  %5 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %6 = tail call %9* @get_next_op(%7* %5) #16
  %7 = getelementptr inbounds %9, %9* %6, i64 0, i32 6
  store i8 %1, i8* %7, align 4
  %8 = icmp eq %37* %2, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %9, %9* %6, i64 0, i32 7
  store i8 8, i8* %10, align 1
  br label %26

11:                                               ; preds = %4
  %12 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = getelementptr inbounds %9, %9* %6, i64 0, i32 7
  store i8 %13, i8* %14, align 1
  %15 = icmp eq i8 %13, 1
  br i1 %15, label %16, label %21

16:                                               ; preds = %11
  %17 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %18 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %19 = tail call i32 @zend_add_literal(%7* %17, %2* nonnull %18)
  %20 = getelementptr inbounds %9, %9* %6, i64 0, i32 1, i32 0
  store i32 %19, i32* %20, align 8
  br label %26

21:                                               ; preds = %11
  %22 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %23 = bitcast %38* %22 to i32*
  %24 = getelementptr inbounds %9, %9* %6, i64 0, i32 1, i32 0
  %25 = load i32, i32* %23, align 8
  store i32 %25, i32* %24, align 8
  br label %26

26:                                               ; preds = %16, %21, %9
  %27 = icmp eq %37* %3, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = getelementptr inbounds %9, %9* %6, i64 0, i32 8
  store i8 8, i8* %29, align 2
  br label %45

30:                                               ; preds = %26
  %31 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  %32 = load i8, i8* %31, align 8
  %33 = getelementptr inbounds %9, %9* %6, i64 0, i32 8
  store i8 %32, i8* %33, align 2
  %34 = icmp eq i8 %32, 1
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %37 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %38 = tail call i32 @zend_add_literal(%7* %36, %2* nonnull %37)
  %39 = getelementptr inbounds %9, %9* %6, i64 0, i32 2, i32 0
  store i32 %38, i32* %39, align 4
  br label %45

40:                                               ; preds = %30
  %41 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %42 = bitcast %38* %41 to i32*
  %43 = getelementptr inbounds %9, %9* %6, i64 0, i32 2, i32 0
  %44 = load i32, i32* %42, align 8
  store i32 %44, i32* %43, align 4
  br label %45

45:                                               ; preds = %35, %40, %28
  tail call fastcc void @244(%9* nonnull %6)
  %46 = icmp eq %37* %0, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %9, %9* %6, i64 0, i32 9
  store i8 2, i8* %48, align 1
  %49 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %50 = getelementptr inbounds %7, %7* %49, i64 0, i32 13
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %50, align 4
  %53 = getelementptr inbounds %9, %9* %6, i64 0, i32 3, i32 0
  store i32 %51, i32* %53, align 8
  %54 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %54, align 8
  %55 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %56 = bitcast %38* %55 to i32*
  %57 = load i32, i32* %53, align 8
  store i32 %57, i32* %56, align 8
  br label %58

58:                                               ; preds = %45, %47
  ret %9* %6
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_typecheck(%37* %0, %69* nocapture readonly %1, i32 %2) local_unnamed_addr #0 {
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %48

9:                                                ; preds = %3
  %10 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %11 = load %43*, %43** %10, align 8
  %12 = getelementptr inbounds %43, %43* %11, i64 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, 258
  br i1 %14, label %48, label %15

15:                                               ; preds = %9
  call void @zend_compile_expr(%37* nonnull %4, %43* %11)
  %16 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %17 = call %9* @get_next_op(%7* %16) #16
  %18 = getelementptr inbounds %9, %9* %17, i64 0, i32 6
  store i8 123, i8* %18, align 4
  %19 = load i8, i8* %5, align 8
  %20 = getelementptr inbounds %9, %9* %17, i64 0, i32 7
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i8 %19, 1
  br i1 %21, label %22, label %26

22:                                               ; preds = %15
  %23 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %24 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %25 = call i32 @zend_add_literal(%7* %23, %2* nonnull %24) #16
  br label %30

26:                                               ; preds = %15
  %27 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %28 = bitcast %38* %27 to i32*
  %29 = load i32, i32* %28, align 8
  br label %30

30:                                               ; preds = %26, %22
  %31 = phi i32 [ %29, %26 ], [ %25, %22 ]
  %32 = getelementptr inbounds %9, %9* %17, i64 0, i32 1, i32 0
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds %9, %9* %17, i64 0, i32 8
  store i8 8, i8* %33, align 2
  call fastcc void @244(%9* nonnull %17) #16
  %34 = icmp eq %37* %0, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %9, %9* %17, i64 0, i32 9
  store i8 2, i8* %36, align 1
  %37 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %38 = getelementptr inbounds %7, %7* %37, i64 0, i32 13
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds %9, %9* %17, i64 0, i32 3, i32 0
  store i32 %39, i32* %41, align 8
  %42 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %42, align 8
  %43 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %44 = bitcast %38* %43 to i32*
  %45 = load i32, i32* %41, align 8
  store i32 %45, i32* %44, align 8
  br label %46

46:                                               ; preds = %30, %35
  %47 = getelementptr inbounds %9, %9* %17, i64 0, i32 4
  store i32 %2, i32* %47, align 4
  br label %48

48:                                               ; preds = %9, %3, %46
  %49 = phi i32 [ 0, %46 ], [ -1, %3 ], [ -1, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret i32 %49
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_cast(%37* %0, %69* nocapture readonly %1, i32 %2) local_unnamed_addr #0 {
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %48

9:                                                ; preds = %3
  %10 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %11 = load %43*, %43** %10, align 8
  %12 = getelementptr inbounds %43, %43* %11, i64 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, 258
  br i1 %14, label %48, label %15

15:                                               ; preds = %9
  call void @zend_compile_expr(%37* nonnull %4, %43* %11)
  %16 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %17 = call %9* @get_next_op(%7* %16) #16
  %18 = getelementptr inbounds %9, %9* %17, i64 0, i32 6
  store i8 21, i8* %18, align 4
  %19 = load i8, i8* %5, align 8
  %20 = getelementptr inbounds %9, %9* %17, i64 0, i32 7
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i8 %19, 1
  br i1 %21, label %22, label %26

22:                                               ; preds = %15
  %23 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %24 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %25 = call i32 @zend_add_literal(%7* %23, %2* nonnull %24) #16
  br label %30

26:                                               ; preds = %15
  %27 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %28 = bitcast %38* %27 to i32*
  %29 = load i32, i32* %28, align 8
  br label %30

30:                                               ; preds = %26, %22
  %31 = phi i32 [ %29, %26 ], [ %25, %22 ]
  %32 = getelementptr inbounds %9, %9* %17, i64 0, i32 1, i32 0
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds %9, %9* %17, i64 0, i32 8
  store i8 8, i8* %33, align 2
  call fastcc void @244(%9* nonnull %17) #16
  %34 = icmp eq %37* %0, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %9, %9* %17, i64 0, i32 9
  store i8 2, i8* %36, align 1
  %37 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %38 = getelementptr inbounds %7, %7* %37, i64 0, i32 13
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds %9, %9* %17, i64 0, i32 3, i32 0
  store i32 %39, i32* %41, align 8
  %42 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %42, align 8
  %43 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %44 = bitcast %38* %43 to i32*
  %45 = load i32, i32* %41, align 8
  store i32 %45, i32* %44, align 8
  br label %46

46:                                               ; preds = %30, %35
  %47 = getelementptr inbounds %9, %9* %17, i64 0, i32 4
  store i32 %2, i32* %47, align 4
  br label %48

48:                                               ; preds = %9, %3, %46
  %49 = phi i32 [ 0, %46 ], [ -1, %3 ], [ -1, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret i32 %49
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_defined(%37* %0, %69* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %2, align 8
  %4 = alloca %2, align 8
  %5 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %148

8:                                                ; preds = %2
  %9 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %10 = load %43*, %43** %9, align 8
  %11 = getelementptr inbounds %43, %43* %10, i64 0, i32 0
  %12 = load i16, i16* %11, align 8
  %13 = icmp eq i16 %12, 64
  br i1 %13, label %14, label %148

14:                                               ; preds = %8
  %15 = getelementptr inbounds %43, %43* %10, i64 0, i32 3
  %16 = getelementptr inbounds [1 x %43*], [1 x %43*]* %15, i64 1
  %17 = bitcast [1 x %43*]* %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 6
  br i1 %19, label %20, label %33

20:                                               ; preds = %14
  %21 = bitcast [1 x %43*]* %15 to %32**
  %22 = load %32*, %32** %21, align 8
  %23 = getelementptr inbounds %32, %32* %22, i64 0, i32 0, i32 1
  %24 = bitcast %18* %23 to %64*
  %25 = getelementptr inbounds %64, %64* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %26, 2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %20
  %30 = getelementptr inbounds %32, %32* %22, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 8
  br label %36

33:                                               ; preds = %14
  %34 = bitcast [1 x %43*]* %15 to %2*
  %35 = tail call %32* @_zval_get_string_func(%2* nonnull %34) #16
  br label %36

36:                                               ; preds = %20, %29, %33
  %37 = phi %32* [ %35, %33 ], [ %22, %20 ], [ %22, %29 ]
  %38 = getelementptr inbounds %32, %32* %37, i64 0, i32 3, i64 0
  %39 = getelementptr inbounds %32, %32* %37, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %76, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %32, %32* %37, i64 0, i32 3, i64 %40
  br label %44

44:                                               ; preds = %48, %42
  %45 = phi i8* [ %43, %42 ], [ %46, %48 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 -1
  %47 = icmp ult i8* %46, %38
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %49, 92
  br i1 %50, label %58, label %44

51:                                               ; preds = %44, %55
  %52 = phi i8* [ %53, %55 ], [ %43, %44 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 -1
  %54 = icmp ult i8* %53, %38
  br i1 %54, label %76, label %55

55:                                               ; preds = %51
  %56 = load i8, i8* %53, align 1
  %57 = icmp eq i8 %56, 58
  br i1 %57, label %58, label %51

58:                                               ; preds = %48, %55
  %59 = getelementptr inbounds %32, %32* %37, i64 0, i32 0, i32 1
  %60 = bitcast %18* %59 to %64*
  %61 = getelementptr inbounds %64, %64* %60, i64 0, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = and i8 %62, 2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %148

65:                                               ; preds = %58
  %66 = getelementptr inbounds %32, %32* %37, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, -1
  store i32 %68, i32* %66, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %148

70:                                               ; preds = %65
  %71 = and i8 %62, 1
  %72 = icmp eq i8 %71, 0
  %73 = bitcast %32* %37 to i8*
  br i1 %72, label %75, label %74

74:                                               ; preds = %70
  tail call void @free(i8* %73) #16
  br label %148

75:                                               ; preds = %70
  tail call void @_efree(i8* %73) #16
  br label %148

76:                                               ; preds = %51, %36
  %77 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %78 = tail call fastcc zeroext i8 @241(%2* nonnull %77, %32* %37, i8 zeroext 0)
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %101, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %32, %32* %37, i64 0, i32 0, i32 1
  %82 = bitcast %18* %81 to %64*
  %83 = getelementptr inbounds %64, %64* %82, i64 0, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = and i8 %84, 2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %98

87:                                               ; preds = %80
  %88 = getelementptr inbounds %32, %32* %37, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, -1
  store i32 %90, i32* %88, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %87
  %93 = and i8 %84, 1
  %94 = icmp eq i8 %93, 0
  %95 = bitcast %32* %37 to i8*
  br i1 %94, label %97, label %96

96:                                               ; preds = %92
  tail call void @free(i8* %95) #16
  br label %98

97:                                               ; preds = %92
  tail call void @_efree(i8* %95) #16
  br label %98

98:                                               ; preds = %80, %87, %96, %97
  tail call void @_zval_ptr_dtor(%2* nonnull %77) #16
  %99 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 3, i32* %99, align 8
  %100 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %100, align 8
  br label %148

101:                                              ; preds = %76
  %102 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %103 = tail call %9* @get_next_op(%7* %102) #16
  %104 = getelementptr inbounds %9, %9* %103, i64 0, i32 6
  store i8 122, i8* %104, align 4
  %105 = getelementptr inbounds %9, %9* %103, i64 0, i32 7
  store i8 8, i8* %105, align 1
  %106 = getelementptr inbounds %9, %9* %103, i64 0, i32 8
  store i8 8, i8* %106, align 2
  tail call fastcc void @244(%9* nonnull %103) #16
  %107 = icmp eq %37* %0, null
  br i1 %107, label %119, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds %9, %9* %103, i64 0, i32 9
  store i8 2, i8* %109, align 1
  %110 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %111 = getelementptr inbounds %7, %7* %110, i64 0, i32 13
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %9, %9* %103, i64 0, i32 3, i32 0
  store i32 %112, i32* %114, align 8
  %115 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %115, align 8
  %116 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %117 = bitcast %38* %116 to i32*
  %118 = load i32, i32* %114, align 8
  store i32 %118, i32* %117, align 8
  br label %119

119:                                              ; preds = %101, %108
  store i8 1, i8* %105, align 1
  %120 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #16
  %121 = bitcast %2* %3 to %32**
  store %32* %37, %32** %121, align 8
  %122 = getelementptr inbounds %32, %32* %37, i64 0, i32 0, i32 1
  %123 = bitcast %18* %122 to %64*
  %124 = getelementptr inbounds %64, %64* %123, i64 0, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = and i8 %125, 2
  %127 = icmp eq i8 %126, 0
  %128 = select i1 %127, i32 5126, i32 6
  %129 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 %128, i32* %129, align 8
  %130 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %131 = call i32 @zend_add_literal(%7* %130, %2* nonnull %3)
  %132 = getelementptr inbounds %9, %9* %103, i64 0, i32 1, i32 0
  store i32 %131, i32* %132, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #16
  %133 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %134 = getelementptr inbounds %7, %7* %133, i64 0, i32 27
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %7, %7* %133, i64 0, i32 26
  %137 = load %2*, %2** %136, align 8
  %138 = zext i32 %131 to i64
  %139 = getelementptr inbounds %2, %2* %137, i64 %138, i32 2, i32 0
  store i32 %135, i32* %139, align 4
  %140 = load i32, i32* %134, align 8
  %141 = add i32 %140, 8
  store i32 %141, i32* %134, align 8
  %142 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #16
  %143 = tail call %32* @zend_string_tolower(%32* %37) #16
  %144 = bitcast %2* %4 to %32**
  store %32* %143, %32** %144, align 8
  %145 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 5126, i32* %145, align 8
  %146 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %147 = call i32 @zend_add_literal(%7* %146, %2* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #16
  br label %148

148:                                              ; preds = %75, %74, %65, %58, %2, %8, %119, %98
  %149 = phi i32 [ 0, %98 ], [ 0, %119 ], [ -1, %8 ], [ -1, %2 ], [ -1, %58 ], [ -1, %65 ], [ -1, %74 ], [ -1, %75 ]
  ret i32 %149
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @241(%2* %0, %32* %1, i8 zeroext %2) unnamed_addr #0 {
  %4 = load %39*, %39** getelementptr inbounds (%52, %52* @executor_globals, i64 0, i32 12), align 8
  %5 = tail call %2* @zend_hash_find(%39* %4, %32* %1) #16
  %6 = icmp eq %2* %5, null
  br i1 %6, label %49, label %7

7:                                                ; preds = %3
  %8 = bitcast %2* %5 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %9, i64 24
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %11
  %18 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %19 = trunc i32 %18 to i8
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds i8, i8* %9, i64 8
  br label %31

23:                                               ; preds = %11, %17
  %24 = getelementptr inbounds i8, i8* %9, i64 8
  %25 = load i8, i8* %24, align 8
  %26 = icmp ult i8 %25, 8
  br i1 %26, label %27, label %49

27:                                               ; preds = %23
  %28 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %29 = and i32 %28, 32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %49

31:                                               ; preds = %21, %27
  %32 = phi i8* [ %22, %21 ], [ %24, %27 ]
  %33 = bitcast i8* %9 to %66**
  %34 = load %66*, %66** %33, align 8
  %35 = bitcast i8* %32 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = bitcast %2* %0 to %66**
  store %66* %34, %66** %37, align 8
  %38 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 %36, i32* %38, align 8
  %39 = and i32 %36, 5120
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %99, label %41

41:                                               ; preds = %31
  %42 = and i32 %36, 4096
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  tail call void @_zval_copy_ctor_func(%2* nonnull %0) #16
  br label %99

45:                                               ; preds = %41
  %46 = getelementptr inbounds %66, %66* %34, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %46, align 4
  br label %99

49:                                               ; preds = %3, %27, %7, %23
  %50 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %51 = getelementptr inbounds %32, %32* %1, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i8 %2, 0
  br i1 %53, label %54, label %69

54:                                               ; preds = %49
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %69, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 %52
  br label %58

58:                                               ; preds = %62, %56
  %59 = phi i8* [ %57, %56 ], [ %60, %62 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 -1
  %61 = icmp ult i8* %60, %50
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = load i8, i8* %60, align 1
  %64 = icmp eq i8 %63, 92
  br i1 %64, label %65, label %58

65:                                               ; preds = %62
  %66 = ptrtoint i8* %57 to i64
  %67 = ptrtoint i8* %59 to i64
  %68 = sub i64 %66, %67
  br label %69

69:                                               ; preds = %58, %65, %54, %49
  %70 = phi i8* [ %50, %49 ], [ %50, %54 ], [ %59, %65 ], [ %50, %58 ]
  %71 = phi i64 [ %52, %49 ], [ 0, %54 ], [ %68, %65 ], [ %52, %58 ]
  %72 = load %39*, %39** getelementptr inbounds (%52, %52* @executor_globals, i64 0, i32 12), align 8
  %73 = tail call i8* @zend_hash_find_ptr_lc(%39* %72, i8* %70, i64 %71) #16
  %74 = icmp eq i8* %73, null
  br i1 %74, label %99, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds i8, i8* %73, i64 24
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, 5
  %80 = icmp eq i32 %79, 4
  br i1 %80, label %81, label %99

81:                                               ; preds = %75
  %82 = bitcast i8* %73 to %66**
  %83 = load %66*, %66** %82, align 8
  %84 = getelementptr inbounds i8, i8* %73, i64 8
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 8
  %87 = bitcast %2* %0 to %66**
  store %66* %83, %66** %87, align 8
  %88 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 %86, i32* %88, align 8
  %89 = and i32 %86, 5120
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %81
  %92 = and i32 %86, 4096
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %91
  tail call void @_zval_copy_ctor_func(%2* nonnull %0) #16
  br label %99

95:                                               ; preds = %91
  %96 = getelementptr inbounds %66, %66* %83, i64 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %96, align 4
  br label %99

99:                                               ; preds = %75, %31, %44, %45, %95, %94, %81, %69
  %100 = phi i8 [ 0, %69 ], [ 0, %75 ], [ 1, %81 ], [ 1, %94 ], [ 1, %95 ], [ 1, %45 ], [ 1, %44 ], [ 1, %31 ]
  ret i8 %100
}

declare dso_local %32* @zend_string_tolower(%32*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind uwtable
define hidden i32 @zend_compile_func_chr(%37* nocapture %0, %69* nocapture readonly %1) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %28

6:                                                ; preds = %2
  %7 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %8, i64 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 64
  br i1 %11, label %12, label %28

12:                                               ; preds = %6
  %13 = getelementptr inbounds %43, %43* %8, i64 0, i32 3
  %14 = getelementptr inbounds [1 x %43*], [1 x %43*]* %13, i64 1
  %15 = bitcast [1 x %43*]* %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 4
  br i1 %17, label %18, label %28

18:                                               ; preds = %12
  %19 = bitcast [1 x %43*]* %13 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 255
  %22 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %22, align 8
  %23 = getelementptr inbounds [256 x %32*], [256 x %32*]* @zend_one_char_string, i64 0, i64 %21
  %24 = bitcast %32** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 6, i32* %27, align 8
  br label %28

28:                                               ; preds = %2, %6, %12, %18
  %29 = phi i32 [ 0, %18 ], [ -1, %12 ], [ -1, %6 ], [ -1, %2 ]
  ret i32 %29
}

; Function Attrs: norecurse nounwind uwtable
define hidden i32 @zend_compile_func_ord(%37* nocapture %0, %69* nocapture readonly %1) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %2
  %7 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %8, i64 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = icmp eq i16 %10, 64
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %43, %43* %8, i64 0, i32 3
  %14 = getelementptr inbounds [1 x %43*], [1 x %43*]* %13, i64 1
  %15 = bitcast [1 x %43*]* %14 to i8*
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 6
  br i1 %17, label %18, label %27

18:                                               ; preds = %12
  %19 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %19, align 8
  %20 = bitcast [1 x %43*]* %13 to %32**
  %21 = load %32*, %32** %20, align 8
  %22 = getelementptr inbounds %32, %32* %21, i64 0, i32 3, i64 0
  %23 = load i8, i8* %22, align 8
  %24 = zext i8 %23 to i64
  %25 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 4, i32* %26, align 8
  br label %27

27:                                               ; preds = %2, %6, %12, %18
  %28 = phi i32 [ 0, %18 ], [ -1, %12 ], [ -1, %6 ], [ -1, %2 ]
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_cufa(%37* %0, %69* nocapture readonly %1, %32* %2) local_unnamed_addr #0 {
  %4 = alloca %37, align 8
  %5 = alloca i8, align 1
  %6 = alloca %37, align 8
  %7 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %17, label %212

11:                                               ; preds = %17
  %12 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 1
  %13 = load %43*, %43** %12, align 8
  %14 = getelementptr inbounds %43, %43* %13, i64 0, i32 0
  %15 = load i16, i16* %14, align 8
  %16 = icmp eq i16 %15, 258
  br i1 %16, label %212, label %214

17:                                               ; preds = %3
  %18 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %19 = load %43*, %43** %18, align 8
  %20 = getelementptr inbounds %43, %43* %19, i64 0, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = icmp eq i16 %21, 258
  br i1 %22, label %212, label %11

23:                                               ; preds = %214
  %24 = getelementptr inbounds %43, %43* %218, i64 0, i32 3, i64 0
  %25 = load %43*, %43** %24, align 8
  %26 = getelementptr inbounds %43, %43* %25, i64 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = icmp eq i16 %27, 64
  br i1 %28, label %29, label %175

29:                                               ; preds = %23
  %30 = getelementptr inbounds %43, %43* %25, i64 0, i32 3
  %31 = getelementptr inbounds [1 x %43*], [1 x %43*]* %30, i64 1
  %32 = bitcast [1 x %43*]* %31 to i8*
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 6
  br i1 %34, label %35, label %175

35:                                               ; preds = %29
  %36 = getelementptr inbounds %43, %43* %218, i64 0, i32 3, i64 1
  %37 = load %43*, %43** %36, align 8
  %38 = getelementptr inbounds %43, %43* %37, i64 0, i32 0
  %39 = load i16, i16* %38, align 8
  %40 = icmp eq i16 %39, 128
  br i1 %40, label %41, label %175

41:                                               ; preds = %35
  %42 = bitcast [1 x %43*]* %30 to %32**
  %43 = load %32*, %32** %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #16
  %44 = getelementptr inbounds %43, %43* %25, i64 0, i32 1
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), align 8
  %48 = call %32* @zend_resolve_non_class_name(%32* %43, i32 %46, i8* nonnull %5, i8 zeroext 0, %39* %47) #16
  %49 = getelementptr inbounds %32, %32* %48, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 11
  br i1 %51, label %52, label %154

52:                                               ; preds = %41
  %53 = getelementptr inbounds %32, %32* %48, i64 0, i32 3, i64 0
  %54 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %53, i64 11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @24, i64 0, i64 0), i64 11) #16
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %154

56:                                               ; preds = %52
  %57 = getelementptr inbounds %43, %43* %37, i64 0, i32 3
  %58 = bitcast [1 x %43*]* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 3
  br i1 %60, label %61, label %154

61:                                               ; preds = %56
  %62 = getelementptr inbounds %43, %43* %37, i64 1, i32 3, i64 0
  %63 = load %43*, %43** %62, align 8
  %64 = getelementptr inbounds %43, %43* %63, i64 0, i32 0
  %65 = load i16, i16* %64, align 8
  %66 = icmp eq i16 %65, 64
  br i1 %66, label %67, label %154

67:                                               ; preds = %61
  %68 = getelementptr inbounds %43, %43* %63, i64 0, i32 3
  %69 = getelementptr inbounds [1 x %43*], [1 x %43*]* %68, i64 1
  %70 = bitcast [1 x %43*]* %69 to i8*
  %71 = load i8, i8* %70, align 8
  %72 = icmp eq i8 %71, 4
  br i1 %72, label %73, label %154

73:                                               ; preds = %67
  %74 = bitcast [1 x %43*]* %68 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp ult i64 %75, 2147483648
  br i1 %76, label %77, label %154

77:                                               ; preds = %73
  %78 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #16
  %79 = getelementptr inbounds %43, %43* %37, i64 1
  %80 = bitcast %43* %79 to %43**
  %81 = load %43*, %43** %80, align 8
  call void @zend_compile_expr(%37* nonnull %4, %43* %81)
  %82 = getelementptr inbounds %43, %43* %37, i64 2
  %83 = bitcast %43* %82 to %43**
  %84 = load %43*, %43** %83, align 8
  call void @zend_compile_expr(%37* nonnull %6, %43* %84)
  %85 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %86 = call %9* @get_next_op(%7* %85) #16
  %87 = getelementptr inbounds %9, %9* %86, i64 0, i32 6
  store i8 119, i8* %87, align 4
  %88 = load i8, i8* %7, align 8
  %89 = getelementptr inbounds %9, %9* %86, i64 0, i32 7
  store i8 %88, i8* %89, align 1
  %90 = icmp eq i8 %88, 1
  br i1 %90, label %91, label %95

91:                                               ; preds = %77
  %92 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %93 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %94 = call i32 @zend_add_literal(%7* %92, %2* nonnull %93) #16
  br label %99

95:                                               ; preds = %77
  %96 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %97 = bitcast %38* %96 to i32*
  %98 = load i32, i32* %97, align 8
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi i32 [ %98, %95 ], [ %94, %91 ]
  %101 = getelementptr inbounds %9, %9* %86, i64 0, i32 1, i32 0
  store i32 %100, i32* %101, align 8
  %102 = load i8, i8* %78, align 8
  %103 = getelementptr inbounds %9, %9* %86, i64 0, i32 8
  store i8 %102, i8* %103, align 2
  %104 = icmp eq i8 %102, 1
  br i1 %104, label %105, label %109

105:                                              ; preds = %99
  %106 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %107 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %108 = call i32 @zend_add_literal(%7* %106, %2* nonnull %107) #16
  br label %113

109:                                              ; preds = %99
  %110 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %111 = bitcast %38* %110 to i32*
  %112 = load i32, i32* %111, align 8
  br label %113

113:                                              ; preds = %105, %109
  %114 = phi i32 [ %108, %105 ], [ %112, %109 ]
  %115 = getelementptr inbounds %9, %9* %86, i64 0, i32 2, i32 0
  store i32 %114, i32* %115, align 4
  call fastcc void @244(%9* nonnull %86) #16
  %116 = load i64, i64* %74, align 8
  %117 = trunc i64 %116 to i32
  %118 = getelementptr inbounds %9, %9* %86, i64 0, i32 4
  store i32 %117, i32* %118, align 4
  %119 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %120 = call %9* @get_next_op(%7* %119) #16
  %121 = getelementptr inbounds %9, %9* %120, i64 0, i32 6
  store i8 60, i8* %121, align 4
  %122 = getelementptr inbounds %9, %9* %120, i64 0, i32 7
  store i8 8, i8* %122, align 1
  %123 = getelementptr inbounds %9, %9* %120, i64 0, i32 8
  store i8 8, i8* %123, align 2
  call fastcc void @244(%9* nonnull %120) #16
  %124 = icmp eq %37* %0, null
  br i1 %124, label %136, label %125

125:                                              ; preds = %113
  %126 = getelementptr inbounds %9, %9* %120, i64 0, i32 9
  store i8 4, i8* %126, align 1
  %127 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %128 = getelementptr inbounds %7, %7* %127, i64 0, i32 13
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %9, %9* %120, i64 0, i32 3, i32 0
  store i32 %129, i32* %131, align 8
  %132 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %132, align 8
  %133 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %134 = bitcast %38* %133 to i32*
  %135 = load i32, i32* %131, align 8
  store i32 %135, i32* %134, align 8
  br label %136

136:                                              ; preds = %113, %125
  %137 = getelementptr inbounds %32, %32* %48, i64 0, i32 0, i32 1
  %138 = bitcast %18* %137 to %64*
  %139 = getelementptr inbounds %64, %64* %138, i64 0, i32 1
  %140 = load i8, i8* %139, align 1
  %141 = and i8 %140, 2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %174

143:                                              ; preds = %136
  %144 = getelementptr inbounds %32, %32* %48, i64 0, i32 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, -1
  store i32 %146, i32* %144, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %174

148:                                              ; preds = %143
  %149 = and i8 %140, 1
  %150 = icmp eq i8 %149, 0
  %151 = bitcast %32* %48 to i8*
  br i1 %150, label %153, label %152

152:                                              ; preds = %148
  call void @free(i8* %151) #16
  br label %174

153:                                              ; preds = %148
  call void @_efree(i8* %151) #16
  br label %174

154:                                              ; preds = %67, %73, %52, %61, %56, %41
  %155 = getelementptr inbounds %32, %32* %48, i64 0, i32 0, i32 1
  %156 = bitcast %18* %155 to %64*
  %157 = getelementptr inbounds %64, %64* %156, i64 0, i32 1
  %158 = load i8, i8* %157, align 1
  %159 = and i8 %158, 2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %172

161:                                              ; preds = %154
  %162 = getelementptr inbounds %32, %32* %48, i64 0, i32 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = add i32 %163, -1
  store i32 %164, i32* %162, align 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %172

166:                                              ; preds = %161
  %167 = and i8 %158, 1
  %168 = icmp eq i8 %167, 0
  %169 = bitcast %32* %48 to i8*
  br i1 %168, label %171, label %170

170:                                              ; preds = %166
  tail call void @free(i8* %169) #16
  br label %172

171:                                              ; preds = %166
  tail call void @_efree(i8* %169) #16
  br label %172

172:                                              ; preds = %154, %161, %170, %171
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #16
  %173 = load %43*, %43** %217, align 8
  br label %175

174:                                              ; preds = %136, %143, %152, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #16
  br label %212

175:                                              ; preds = %172, %35, %29, %23, %214
  %176 = phi %43* [ %173, %172 ], [ %218, %35 ], [ %218, %29 ], [ %218, %23 ], [ %218, %214 ]
  call void @zend_compile_expr(%37* nonnull %4, %43* %176)
  %177 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %178 = call %9* @get_next_op(%7* %177) #16
  %179 = getelementptr inbounds %9, %9* %178, i64 0, i32 6
  store i8 119, i8* %179, align 4
  %180 = load i8, i8* %7, align 8
  %181 = getelementptr inbounds %9, %9* %178, i64 0, i32 7
  store i8 %180, i8* %181, align 1
  %182 = icmp eq i8 %180, 1
  br i1 %182, label %183, label %187

183:                                              ; preds = %175
  %184 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %185 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %186 = call i32 @zend_add_literal(%7* %184, %2* nonnull %185) #16
  br label %191

187:                                              ; preds = %175
  %188 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %189 = bitcast %38* %188 to i32*
  %190 = load i32, i32* %189, align 8
  br label %191

191:                                              ; preds = %183, %187
  %192 = phi i32 [ %186, %183 ], [ %190, %187 ]
  %193 = getelementptr inbounds %9, %9* %178, i64 0, i32 1, i32 0
  store i32 %192, i32* %193, align 8
  %194 = getelementptr inbounds %9, %9* %178, i64 0, i32 8
  store i8 8, i8* %194, align 2
  call fastcc void @244(%9* nonnull %178) #16
  %195 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %196 = call %9* @get_next_op(%7* %195) #16
  %197 = getelementptr inbounds %9, %9* %196, i64 0, i32 6
  store i8 60, i8* %197, align 4
  %198 = getelementptr inbounds %9, %9* %196, i64 0, i32 7
  store i8 8, i8* %198, align 1
  %199 = getelementptr inbounds %9, %9* %196, i64 0, i32 8
  store i8 8, i8* %199, align 2
  call fastcc void @244(%9* nonnull %196) #16
  %200 = icmp eq %37* %0, null
  br i1 %200, label %212, label %201

201:                                              ; preds = %191
  %202 = getelementptr inbounds %9, %9* %196, i64 0, i32 9
  store i8 4, i8* %202, align 1
  %203 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %204 = getelementptr inbounds %7, %7* %203, i64 0, i32 13
  %205 = load i32, i32* %204, align 4
  %206 = add i32 %205, 1
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds %9, %9* %196, i64 0, i32 3, i32 0
  store i32 %205, i32* %207, align 8
  %208 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %208, align 8
  %209 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %210 = bitcast %38* %209 to i32*
  %211 = load i32, i32* %207, align 8
  store i32 %211, i32* %210, align 8
  br label %212

212:                                              ; preds = %17, %11, %201, %191, %174, %3
  %213 = phi i32 [ 0, %174 ], [ -1, %3 ], [ 0, %191 ], [ 0, %201 ], [ -1, %11 ], [ -1, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  ret i32 %213

214:                                              ; preds = %11
  %215 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %216 = load %43*, %43** %215, align 8
  tail call fastcc void @242(%43* %216, i32 0, %32* %2)
  %217 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 1
  %218 = load %43*, %43** %217, align 8
  %219 = getelementptr inbounds %43, %43* %218, i64 0, i32 0
  %220 = load i16, i16* %219, align 8
  %221 = icmp eq i16 %220, 515
  br i1 %221, label %23, label %175
}

; Function Attrs: nounwind uwtable
define internal fastcc void @242(%43* %0, i32 %1, %32* %2) unnamed_addr #0 {
  %4 = alloca %2, align 8
  %5 = alloca %37, align 8
  %6 = alloca %2, align 8
  %7 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %43, %43* %0, i64 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = icmp eq i16 %9, 64
  br i1 %10, label %11, label %108

11:                                               ; preds = %3
  %12 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %13 = getelementptr inbounds [1 x %43*], [1 x %43*]* %12, i64 1
  %14 = bitcast [1 x %43*]* %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 6
  br i1 %16, label %17, label %108

17:                                               ; preds = %11
  %18 = bitcast [1 x %43*]* %12 to %32**
  %19 = load %32*, %32** %18, align 8
  %20 = tail call %32* @zend_string_tolower(%32* %19) #16
  %21 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 5), align 8
  %22 = tail call %2* @zend_hash_find(%39* %21, %32* %20) #16
  %23 = icmp eq %2* %22, null
  br i1 %23, label %38, label %24

24:                                               ; preds = %17
  %25 = bitcast %2* %22 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = load i8, i8* %26, align 8
  switch i8 %29, label %56 [
    i8 1, label %30
    i8 2, label %34
  ]

30:                                               ; preds = %28
  %31 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %32 = and i32 %31, 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %56, label %38

34:                                               ; preds = %28
  %35 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %36 = and i32 %35, 256
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %34, %30, %24, %17
  %39 = getelementptr inbounds %32, %32* %20, i64 0, i32 0, i32 1
  %40 = bitcast %18* %39 to %64*
  %41 = getelementptr inbounds %64, %64* %40, i64 0, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = and i8 %42, 2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %108

45:                                               ; preds = %38
  %46 = getelementptr inbounds %32, %32* %20, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, -1
  store i32 %48, i32* %46, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %108

50:                                               ; preds = %45
  %51 = and i8 %42, 1
  %52 = icmp eq i8 %51, 0
  %53 = bitcast %32* %20 to i8*
  br i1 %52, label %55, label %54

54:                                               ; preds = %50
  tail call void @free(i8* %53) #16
  br label %108

55:                                               ; preds = %50
  tail call void @_efree(i8* %53) #16
  br label %108

56:                                               ; preds = %34, %30, %28
  %57 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %58 = tail call %9* @get_next_op(%7* %57) #16
  %59 = getelementptr inbounds %9, %9* %58, i64 0, i32 6
  store i8 61, i8* %59, align 4
  %60 = getelementptr inbounds %9, %9* %58, i64 0, i32 7
  store i8 8, i8* %60, align 1
  %61 = getelementptr inbounds %9, %9* %58, i64 0, i32 8
  store i8 8, i8* %61, align 2
  tail call fastcc void @244(%9* nonnull %58) #16
  %62 = getelementptr inbounds %9, %9* %58, i64 0, i32 4
  store i32 %1, i32* %62, align 4
  %63 = add i32 %1, 5
  %64 = load i8, i8* %26, align 8
  %65 = and i8 %64, 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %82

67:                                               ; preds = %56
  %68 = getelementptr inbounds i8, i8* %26, i64 72
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds i8, i8* %26, i64 76
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds i8, i8* %26, i64 32
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = icmp ult i32 %76, %1
  %78 = select i1 %77, i32 %76, i32 %1
  %79 = add i32 %70, %63
  %80 = add i32 %79, %73
  %81 = sub i32 %80, %78
  br label %82

82:                                               ; preds = %56, %67
  %83 = phi i32 [ %81, %67 ], [ %63, %56 ]
  %84 = shl i32 %83, 4
  %85 = getelementptr inbounds %9, %9* %58, i64 0, i32 1, i32 0
  store i32 %84, i32* %85, align 8
  store i8 1, i8* %61, align 2
  %86 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #16
  %87 = bitcast %2* %4 to %32**
  store %32* %20, %32** %87, align 8
  %88 = getelementptr inbounds %32, %32* %20, i64 0, i32 0, i32 1
  %89 = bitcast %18* %88 to %64*
  %90 = getelementptr inbounds %64, %64* %89, i64 0, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = and i8 %91, 2
  %93 = icmp eq i8 %92, 0
  %94 = select i1 %93, i32 5126, i32 6
  %95 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %94, i32* %95, align 8
  %96 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %97 = call i32 @zend_add_literal(%7* %96, %2* nonnull %4) #16
  %98 = getelementptr inbounds %9, %9* %58, i64 0, i32 2, i32 0
  store i32 %97, i32* %98, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #16
  %99 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %100 = getelementptr inbounds %7, %7* %99, i64 0, i32 27
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %7, %7* %99, i64 0, i32 26
  %103 = load %2*, %2** %102, align 8
  %104 = zext i32 %97 to i64
  %105 = getelementptr inbounds %2, %2* %103, i64 %104, i32 2, i32 0
  store i32 %101, i32* %105, align 4
  %106 = load i32, i32* %100, align 8
  %107 = add i32 %106, 8
  store i32 %107, i32* %100, align 8
  br label %146

108:                                              ; preds = %11, %3, %38, %45, %54, %55
  call void @zend_compile_expr(%37* nonnull %5, %43* nonnull %0)
  %109 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %110 = call %9* @get_next_op(%7* %109) #16
  %111 = getelementptr inbounds %9, %9* %110, i64 0, i32 6
  store i8 118, i8* %111, align 4
  %112 = getelementptr inbounds %9, %9* %110, i64 0, i32 7
  store i8 8, i8* %112, align 1
  %113 = load i8, i8* %7, align 8
  %114 = getelementptr inbounds %9, %9* %110, i64 0, i32 8
  store i8 %113, i8* %114, align 2
  %115 = icmp eq i8 %113, 1
  br i1 %115, label %116, label %120

116:                                              ; preds = %108
  %117 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %118 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %119 = call i32 @zend_add_literal(%7* %117, %2* nonnull %118) #16
  br label %124

120:                                              ; preds = %108
  %121 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %122 = bitcast %38* %121 to i32*
  %123 = load i32, i32* %122, align 8
  br label %124

124:                                              ; preds = %116, %120
  %125 = phi i32 [ %119, %116 ], [ %123, %120 ]
  %126 = getelementptr inbounds %9, %9* %110, i64 0, i32 2, i32 0
  store i32 %125, i32* %126, align 4
  call fastcc void @244(%9* nonnull %110) #16
  store i8 1, i8* %112, align 1
  %127 = bitcast %2* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #16
  %128 = getelementptr inbounds %32, %32* %2, i64 0, i32 0, i32 1
  %129 = bitcast %18* %128 to %64*
  %130 = getelementptr inbounds %64, %64* %129, i64 0, i32 1
  %131 = load i8, i8* %130, align 1
  %132 = and i8 %131, 2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %124
  %135 = getelementptr inbounds %32, %32* %2, i64 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 8
  br label %138

138:                                              ; preds = %124, %134
  %139 = bitcast %2* %6 to %32**
  store %32* %2, %32** %139, align 8
  %140 = select i1 %133, i32 5126, i32 6
  %141 = getelementptr inbounds %2, %2* %6, i64 0, i32 1, i32 0
  store i32 %140, i32* %141, align 8
  %142 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %143 = call i32 @zend_add_literal(%7* %142, %2* nonnull %6)
  %144 = getelementptr inbounds %9, %9* %110, i64 0, i32 1, i32 0
  store i32 %143, i32* %144, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #16
  %145 = getelementptr inbounds %9, %9* %110, i64 0, i32 4
  store i32 %1, i32* %145, align 4
  br label %146

146:                                              ; preds = %82, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_cuf(%37* %0, %69* nocapture readonly %1, %32* %2) local_unnamed_addr #0 {
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %78, label %10

8:                                                ; preds = %10
  %9 = icmp ult i32 %18, %6
  br i1 %9, label %10, label %19

10:                                               ; preds = %3, %8
  %11 = phi i32 [ %18, %8 ], [ 0, %3 ]
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 %12
  %14 = load %43*, %43** %13, align 8
  %15 = getelementptr inbounds %43, %43* %14, i64 0, i32 0
  %16 = load i16, i16* %15, align 8
  %17 = icmp eq i16 %16, 258
  %18 = add i32 %11, 1
  br i1 %17, label %78, label %8

19:                                               ; preds = %8
  %20 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %21 = load %43*, %43** %20, align 8
  %22 = add i32 %6, -1
  tail call fastcc void @242(%43* %21, i32 %22, %32* %2)
  %23 = load i32, i32* %5, align 8
  %24 = icmp ugt i32 %23, 1
  br i1 %24, label %25, label %60

25:                                               ; preds = %19
  %26 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  %27 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %28 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %29 = bitcast %38* %28 to i32*
  br label %30

30:                                               ; preds = %25, %46
  %31 = phi i32 [ 1, %25 ], [ %57, %46 ]
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 %32
  %34 = load %43*, %43** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #16
  call void @zend_compile_expr(%37* nonnull %4, %43* %34)
  %35 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %36 = call %9* @get_next_op(%7* %35) #16
  %37 = getelementptr inbounds %9, %9* %36, i64 0, i32 6
  store i8 120, i8* %37, align 4
  %38 = load i8, i8* %26, align 8
  %39 = getelementptr inbounds %9, %9* %36, i64 0, i32 7
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i8 %38, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %30
  %42 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %43 = call i32 @zend_add_literal(%7* %42, %2* nonnull %27) #16
  br label %46

44:                                               ; preds = %30
  %45 = load i32, i32* %29, align 8
  br label %46

46:                                               ; preds = %41, %44
  %47 = phi i32 [ %43, %41 ], [ %45, %44 ]
  %48 = getelementptr inbounds %9, %9* %36, i64 0, i32 1, i32 0
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %9, %9* %36, i64 0, i32 8
  store i8 8, i8* %49, align 2
  call fastcc void @244(%9* nonnull %36) #16
  %50 = getelementptr inbounds %9, %9* %36, i64 0, i32 2, i32 0
  store i32 %31, i32* %50, align 4
  %51 = add nsw i32 %31, 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %2, %2* null, i64 %52
  %54 = ptrtoint %2* %53 to i64
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds %9, %9* %36, i64 0, i32 3, i32 0
  store i32 %55, i32* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16
  %57 = add nuw i32 %31, 1
  %58 = load i32, i32* %5, align 8
  %59 = icmp ult i32 %57, %58
  br i1 %59, label %30, label %60

60:                                               ; preds = %46, %19
  %61 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %62 = call %9* @get_next_op(%7* %61) #16
  %63 = getelementptr inbounds %9, %9* %62, i64 0, i32 6
  store i8 60, i8* %63, align 4
  %64 = getelementptr inbounds %9, %9* %62, i64 0, i32 7
  store i8 8, i8* %64, align 1
  %65 = getelementptr inbounds %9, %9* %62, i64 0, i32 8
  store i8 8, i8* %65, align 2
  call fastcc void @244(%9* nonnull %62) #16
  %66 = icmp eq %37* %0, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %9, %9* %62, i64 0, i32 9
  store i8 4, i8* %68, align 1
  %69 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %70 = getelementptr inbounds %7, %7* %69, i64 0, i32 13
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %9, %9* %62, i64 0, i32 3, i32 0
  store i32 %71, i32* %73, align 8
  %74 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %74, align 8
  %75 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %76 = bitcast %38* %75 to i32*
  %77 = load i32, i32* %73, align 8
  store i32 %77, i32* %76, align 8
  br label %78

78:                                               ; preds = %10, %67, %60, %3
  %79 = phi i32 [ -1, %3 ], [ 0, %60 ], [ 0, %67 ], [ -1, %10 ]
  ret i32 %79
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_count(%37* %0, %69* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %45

8:                                                ; preds = %2
  %9 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %10 = load %43*, %43** %9, align 8
  %11 = getelementptr inbounds %43, %43* %10, i64 0, i32 0
  %12 = load i16, i16* %11, align 8
  %13 = icmp eq i16 %12, 258
  br i1 %13, label %45, label %14

14:                                               ; preds = %8
  call void @zend_compile_expr(%37* nonnull %3, %43* %10)
  %15 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %16 = call %9* @get_next_op(%7* %15) #16
  %17 = getelementptr inbounds %9, %9* %16, i64 0, i32 6
  store i8 -66, i8* %17, align 4
  %18 = load i8, i8* %4, align 8
  %19 = getelementptr inbounds %9, %9* %16, i64 0, i32 7
  store i8 %18, i8* %19, align 1
  %20 = icmp eq i8 %18, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %14
  %22 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %23 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %24 = call i32 @zend_add_literal(%7* %22, %2* nonnull %23) #16
  br label %29

25:                                               ; preds = %14
  %26 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %27 = bitcast %38* %26 to i32*
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = phi i32 [ %28, %25 ], [ %24, %21 ]
  %31 = getelementptr inbounds %9, %9* %16, i64 0, i32 1, i32 0
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %9, %9* %16, i64 0, i32 8
  store i8 8, i8* %32, align 2
  call fastcc void @244(%9* nonnull %16) #16
  %33 = icmp eq %37* %0, null
  br i1 %33, label %45, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %9, %9* %16, i64 0, i32 9
  store i8 2, i8* %35, align 1
  %36 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %37 = getelementptr inbounds %7, %7* %36, i64 0, i32 13
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds %9, %9* %16, i64 0, i32 3, i32 0
  store i32 %38, i32* %40, align 8
  %41 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %41, align 8
  %42 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %43 = bitcast %38* %42 to i32*
  %44 = load i32, i32* %40, align 8
  store i32 %44, i32* %43, align 8
  br label %45

45:                                               ; preds = %34, %29, %8, %2
  %46 = phi i32 [ -1, %2 ], [ -1, %8 ], [ 0, %29 ], [ 0, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret i32 %46
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_get_class(%37* %0, %69* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %25

7:                                                ; preds = %2
  %8 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %9 = tail call %9* @get_next_op(%7* %8) #16
  %10 = getelementptr inbounds %9, %9* %9, i64 0, i32 6
  store i8 -65, i8* %10, align 4
  %11 = getelementptr inbounds %9, %9* %9, i64 0, i32 7
  store i8 8, i8* %11, align 1
  %12 = getelementptr inbounds %9, %9* %9, i64 0, i32 8
  store i8 8, i8* %12, align 2
  tail call fastcc void @244(%9* nonnull %9) #16
  %13 = icmp eq %37* %0, null
  br i1 %13, label %67, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %9, %9* %9, i64 0, i32 9
  store i8 2, i8* %15, align 1
  %16 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %17 = getelementptr inbounds %7, %7* %16, i64 0, i32 13
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %9, %9* %9, i64 0, i32 3, i32 0
  store i32 %18, i32* %20, align 8
  %21 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %21, align 8
  %22 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %23 = bitcast %38* %22 to i32*
  %24 = load i32, i32* %20, align 8
  store i32 %24, i32* %23, align 8
  br label %67

25:                                               ; preds = %2
  %26 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #16
  %27 = icmp eq i32 %5, 1
  br i1 %27, label %28, label %66

28:                                               ; preds = %25
  %29 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %30 = load %43*, %43** %29, align 8
  %31 = getelementptr inbounds %43, %43* %30, i64 0, i32 0
  %32 = load i16, i16* %31, align 8
  %33 = icmp eq i16 %32, 258
  br i1 %33, label %66, label %34

34:                                               ; preds = %28
  call void @zend_compile_expr(%37* nonnull %3, %43* %30)
  %35 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %36 = call %9* @get_next_op(%7* %35) #16
  %37 = getelementptr inbounds %9, %9* %36, i64 0, i32 6
  store i8 -65, i8* %37, align 4
  %38 = load i8, i8* %26, align 8
  %39 = getelementptr inbounds %9, %9* %36, i64 0, i32 7
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i8 %38, 1
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %43 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %44 = call i32 @zend_add_literal(%7* %42, %2* nonnull %43) #16
  br label %49

45:                                               ; preds = %34
  %46 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %47 = bitcast %38* %46 to i32*
  %48 = load i32, i32* %47, align 8
  br label %49

49:                                               ; preds = %45, %41
  %50 = phi i32 [ %48, %45 ], [ %44, %41 ]
  %51 = getelementptr inbounds %9, %9* %36, i64 0, i32 1, i32 0
  store i32 %50, i32* %51, align 8
  %52 = getelementptr inbounds %9, %9* %36, i64 0, i32 8
  store i8 8, i8* %52, align 2
  call fastcc void @244(%9* nonnull %36) #16
  %53 = icmp eq %37* %0, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %9, %9* %36, i64 0, i32 9
  store i8 2, i8* %55, align 1
  %56 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %57 = getelementptr inbounds %7, %7* %56, i64 0, i32 13
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %57, align 4
  %60 = getelementptr inbounds %9, %9* %36, i64 0, i32 3, i32 0
  store i32 %58, i32* %60, align 8
  %61 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %61, align 8
  %62 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %63 = bitcast %38* %62 to i32*
  %64 = load i32, i32* %60, align 8
  store i32 %64, i32* %63, align 8
  br label %65

65:                                               ; preds = %49, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16
  br label %67

66:                                               ; preds = %28, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16
  br label %67

67:                                               ; preds = %14, %7, %65, %66
  %68 = phi i32 [ -1, %66 ], [ 0, %65 ], [ 0, %7 ], [ 0, %14 ]
  ret i32 %68
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_get_called_class(%37* %0, %69* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %8 = tail call %9* @get_next_op(%7* %7) #16
  %9 = getelementptr inbounds %9, %9* %8, i64 0, i32 6
  store i8 -64, i8* %9, align 4
  %10 = getelementptr inbounds %9, %9* %8, i64 0, i32 7
  store i8 8, i8* %10, align 1
  %11 = getelementptr inbounds %9, %9* %8, i64 0, i32 8
  store i8 8, i8* %11, align 2
  tail call fastcc void @244(%9* nonnull %8) #16
  %12 = icmp eq %37* %0, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %9, %9* %8, i64 0, i32 9
  store i8 2, i8* %14, align 1
  %15 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %16 = getelementptr inbounds %7, %7* %15, i64 0, i32 13
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %9, %9* %8, i64 0, i32 3, i32 0
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %20, align 8
  %21 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %22 = bitcast %38* %21 to i32*
  %23 = load i32, i32* %19, align 8
  store i32 %23, i32* %22, align 8
  br label %24

24:                                               ; preds = %13, %6, %2
  %25 = phi i32 [ -1, %2 ], [ 0, %6 ], [ 0, %13 ]
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_gettype(%37* %0, %69* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %45

8:                                                ; preds = %2
  %9 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %10 = load %43*, %43** %9, align 8
  %11 = getelementptr inbounds %43, %43* %10, i64 0, i32 0
  %12 = load i16, i16* %11, align 8
  %13 = icmp eq i16 %12, 258
  br i1 %13, label %45, label %14

14:                                               ; preds = %8
  call void @zend_compile_expr(%37* nonnull %3, %43* %10)
  %15 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %16 = call %9* @get_next_op(%7* %15) #16
  %17 = getelementptr inbounds %9, %9* %16, i64 0, i32 6
  store i8 -63, i8* %17, align 4
  %18 = load i8, i8* %4, align 8
  %19 = getelementptr inbounds %9, %9* %16, i64 0, i32 7
  store i8 %18, i8* %19, align 1
  %20 = icmp eq i8 %18, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %14
  %22 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %23 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %24 = call i32 @zend_add_literal(%7* %22, %2* nonnull %23) #16
  br label %29

25:                                               ; preds = %14
  %26 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %27 = bitcast %38* %26 to i32*
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = phi i32 [ %28, %25 ], [ %24, %21 ]
  %31 = getelementptr inbounds %9, %9* %16, i64 0, i32 1, i32 0
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %9, %9* %16, i64 0, i32 8
  store i8 8, i8* %32, align 2
  call fastcc void @244(%9* nonnull %16) #16
  %33 = icmp eq %37* %0, null
  br i1 %33, label %45, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %9, %9* %16, i64 0, i32 9
  store i8 2, i8* %35, align 1
  %36 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %37 = getelementptr inbounds %7, %7* %36, i64 0, i32 13
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* %37, align 4
  %40 = getelementptr inbounds %9, %9* %16, i64 0, i32 3, i32 0
  store i32 %38, i32* %40, align 8
  %41 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %41, align 8
  %42 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %43 = bitcast %38* %42 to i32*
  %44 = load i32, i32* %40, align 8
  store i32 %44, i32* %43, align 8
  br label %45

45:                                               ; preds = %34, %29, %8, %2
  %46 = phi i32 [ -1, %2 ], [ -1, %8 ], [ 0, %29 ], [ 0, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret i32 %46
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_num_args(%37* %0, %69* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %4 = getelementptr inbounds %7, %7* %3, i64 0, i32 3
  %5 = load %32*, %32** %4, align 8
  %6 = icmp eq %32* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %7
  %12 = tail call %9* @get_next_op(%7* %3) #16
  %13 = getelementptr inbounds %9, %9* %12, i64 0, i32 6
  store i8 -62, i8* %13, align 4
  %14 = getelementptr inbounds %9, %9* %12, i64 0, i32 7
  store i8 8, i8* %14, align 1
  %15 = getelementptr inbounds %9, %9* %12, i64 0, i32 8
  store i8 8, i8* %15, align 2
  tail call fastcc void @244(%9* nonnull %12) #16
  %16 = icmp eq %37* %0, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %9, %9* %12, i64 0, i32 9
  store i8 2, i8* %18, align 1
  %19 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %20 = getelementptr inbounds %7, %7* %19, i64 0, i32 13
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %9, %9* %12, i64 0, i32 3, i32 0
  store i32 %21, i32* %23, align 8
  %24 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %24, align 8
  %25 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %26 = bitcast %38* %25 to i32*
  %27 = load i32, i32* %23, align 8
  store i32 %27, i32* %26, align 8
  br label %28

28:                                               ; preds = %17, %11, %7, %2
  %29 = phi i32 [ -1, %2 ], [ -1, %7 ], [ 0, %11 ], [ 0, %17 ]
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_get_args(%37* %0, %69* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %4 = getelementptr inbounds %7, %7* %3, i64 0, i32 3
  %5 = load %32*, %32** %4, align 8
  %6 = icmp eq %32* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %7
  %12 = tail call %9* @get_next_op(%7* %3) #16
  %13 = getelementptr inbounds %9, %9* %12, i64 0, i32 6
  store i8 -61, i8* %13, align 4
  %14 = getelementptr inbounds %9, %9* %12, i64 0, i32 7
  store i8 8, i8* %14, align 1
  %15 = getelementptr inbounds %9, %9* %12, i64 0, i32 8
  store i8 8, i8* %15, align 2
  tail call fastcc void @244(%9* nonnull %12) #16
  %16 = icmp eq %37* %0, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %9, %9* %12, i64 0, i32 9
  store i8 2, i8* %18, align 1
  %19 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %20 = getelementptr inbounds %7, %7* %19, i64 0, i32 13
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %9, %9* %12, i64 0, i32 3, i32 0
  store i32 %21, i32* %23, align 8
  %24 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %24, align 8
  %25 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %26 = bitcast %38* %25 to i32*
  %27 = load i32, i32* %23, align 8
  store i32 %27, i32* %26, align 8
  br label %28

28:                                               ; preds = %17, %11, %7, %2
  %29 = phi i32 [ -1, %2 ], [ -1, %7 ], [ 0, %11 ], [ 0, %17 ]
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_compile_func_array_slice(%37* %0, %69* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca %37, align 8
  %5 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %6 = getelementptr inbounds %7, %7* %5, i64 0, i32 3
  %7 = load %32*, %32** %6, align 8
  %8 = icmp eq %32* %7, null
  br i1 %8, label %140, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %140

13:                                               ; preds = %9
  %14 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %15 = load %43*, %43** %14, align 8
  %16 = getelementptr inbounds %43, %43* %15, i64 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, 515
  br i1 %18, label %19, label %140

19:                                               ; preds = %13
  %20 = getelementptr inbounds %43, %43* %15, i64 0, i32 3, i64 0
  %21 = load %43*, %43** %20, align 8
  %22 = getelementptr inbounds %43, %43* %21, i64 0, i32 0
  %23 = load i16, i16* %22, align 8
  %24 = icmp eq i16 %23, 64
  br i1 %24, label %25, label %140

25:                                               ; preds = %19
  %26 = getelementptr inbounds %43, %43* %21, i64 0, i32 3
  %27 = getelementptr inbounds [1 x %43*], [1 x %43*]* %26, i64 1
  %28 = bitcast [1 x %43*]* %27 to i8*
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 6
  br i1 %30, label %31, label %140

31:                                               ; preds = %25
  %32 = getelementptr inbounds %43, %43* %15, i64 0, i32 3, i64 1
  %33 = load %43*, %43** %32, align 8
  %34 = getelementptr inbounds %43, %43* %33, i64 0, i32 0
  %35 = load i16, i16* %34, align 8
  %36 = icmp eq i16 %35, 128
  br i1 %36, label %37, label %140

37:                                               ; preds = %31
  %38 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 1
  %39 = load %43*, %43** %38, align 8
  %40 = getelementptr inbounds %43, %43* %39, i64 0, i32 0
  %41 = load i16, i16* %40, align 8
  %42 = icmp eq i16 %41, 64
  br i1 %42, label %43, label %140

43:                                               ; preds = %37
  %44 = bitcast [1 x %43*]* %26 to %32**
  %45 = load %32*, %32** %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #16
  %46 = getelementptr inbounds %43, %43* %21, i64 0, i32 1
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), align 8
  %50 = call %32* @zend_resolve_non_class_name(%32* %45, i32 %48, i8* nonnull %3, i8 zeroext 0, %39* %49) #16
  %51 = load %43*, %43** %14, align 8
  %52 = getelementptr inbounds %43, %43* %51, i64 0, i32 3, i64 1
  %53 = bitcast %43** %52 to %69**
  %54 = load %69*, %69** %53, align 8
  %55 = load %43*, %43** %38, align 8
  %56 = getelementptr inbounds %43, %43* %55, i64 0, i32 3
  %57 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #16
  %58 = getelementptr inbounds %32, %32* %50, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 13
  br i1 %60, label %61, label %121

61:                                               ; preds = %43
  %62 = getelementptr inbounds %32, %32* %50, i64 0, i32 3, i64 0
  %63 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %62, i64 13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @25, i64 0, i64 0), i64 13) #16
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %121

65:                                               ; preds = %61
  %66 = getelementptr inbounds %69, %69* %54, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %121

69:                                               ; preds = %65
  %70 = getelementptr inbounds [1 x %43*], [1 x %43*]* %56, i64 1
  %71 = bitcast [1 x %43*]* %70 to i8*
  %72 = load i8, i8* %71, align 8
  %73 = icmp eq i8 %72, 4
  br i1 %73, label %74, label %121

74:                                               ; preds = %69
  %75 = bitcast [1 x %43*]* %56 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = icmp sgt i64 %76, -1
  br i1 %77, label %78, label %121

78:                                               ; preds = %74
  store i8 1, i8* %57, align 8
  %79 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %76, i64* %79, align 8
  %80 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 4, i32* %80, align 8
  %81 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %82 = tail call %9* @get_next_op(%7* %81) #16
  %83 = getelementptr inbounds %9, %9* %82, i64 0, i32 6
  store i8 -61, i8* %83, align 4
  %84 = getelementptr inbounds %9, %9* %82, i64 0, i32 7
  store i8 1, i8* %84, align 1
  %85 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %86 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %87 = call i32 @zend_add_literal(%7* %85, %2* nonnull %86) #16
  %88 = getelementptr inbounds %9, %9* %82, i64 0, i32 1, i32 0
  store i32 %87, i32* %88, align 8
  %89 = getelementptr inbounds %9, %9* %82, i64 0, i32 8
  store i8 8, i8* %89, align 2
  tail call fastcc void @244(%9* nonnull %82) #16
  %90 = icmp eq %37* %0, null
  br i1 %90, label %102, label %91

91:                                               ; preds = %78
  %92 = getelementptr inbounds %9, %9* %82, i64 0, i32 9
  store i8 2, i8* %92, align 1
  %93 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %94 = getelementptr inbounds %7, %7* %93, i64 0, i32 13
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %9, %9* %82, i64 0, i32 3, i32 0
  store i32 %95, i32* %97, align 8
  %98 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %98, align 8
  %99 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %100 = bitcast %38* %99 to i32*
  %101 = load i32, i32* %97, align 8
  store i32 %101, i32* %100, align 8
  br label %102

102:                                              ; preds = %78, %91
  %103 = getelementptr inbounds %32, %32* %50, i64 0, i32 0, i32 1
  %104 = bitcast %18* %103 to %64*
  %105 = getelementptr inbounds %64, %64* %104, i64 0, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = and i8 %106, 2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %120

109:                                              ; preds = %102
  %110 = getelementptr inbounds %32, %32* %50, i64 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, -1
  store i32 %112, i32* %110, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %120

114:                                              ; preds = %109
  %115 = and i8 %106, 1
  %116 = icmp eq i8 %115, 0
  %117 = bitcast %32* %50 to i8*
  br i1 %116, label %119, label %118

118:                                              ; preds = %114
  tail call void @free(i8* %117) #16
  br label %120

119:                                              ; preds = %114
  tail call void @_efree(i8* %117) #16
  br label %120

120:                                              ; preds = %102, %109, %118, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  br label %140

121:                                              ; preds = %61, %74, %69, %65, %43
  %122 = getelementptr inbounds %32, %32* %50, i64 0, i32 0, i32 1
  %123 = bitcast %18* %122 to %64*
  %124 = getelementptr inbounds %64, %64* %123, i64 0, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = and i8 %125, 2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %139

128:                                              ; preds = %121
  %129 = getelementptr inbounds %32, %32* %50, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = add i32 %130, -1
  store i32 %131, i32* %129, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %128
  %134 = and i8 %125, 1
  %135 = icmp eq i8 %134, 0
  %136 = bitcast %32* %50 to i8*
  br i1 %135, label %138, label %137

137:                                              ; preds = %133
  tail call void @free(i8* %136) #16
  br label %139

138:                                              ; preds = %133
  tail call void @_efree(i8* %136) #16
  br label %139

139:                                              ; preds = %121, %128, %137, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  br label %140

140:                                              ; preds = %9, %13, %19, %25, %31, %37, %2, %139, %120
  %141 = phi i32 [ 0, %120 ], [ -1, %139 ], [ -1, %2 ], [ -1, %37 ], [ -1, %31 ], [ -1, %25 ], [ -1, %19 ], [ -1, %13 ], [ -1, %9 ]
  ret i32 %141
}

; Function Attrs: nounwind uwtable
define hidden i32 @zend_try_compile_special_func(%37* %0, %32* %1, %69* readonly %2, %6* nocapture readonly %3, i32 %4) local_unnamed_addr #0 {
  %6 = alloca %37, align 8
  %7 = alloca %37, align 8
  %8 = alloca %2, align 8
  %9 = alloca i8, align 1
  %10 = alloca %2, align 8
  %11 = getelementptr inbounds %6, %6* %3, i64 0, i32 0, i32 9
  %12 = bitcast i32** %11 to void (%20*, %2*)**
  %13 = load void (%20*, %2*)*, void (%20*, %2*)** %12, align 8
  %14 = icmp eq void (%20*, %2*)* %13, @zif_display_disabled_function
  br i1 %14, label %445, label %15

15:                                               ; preds = %5
  %16 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %17 = and i32 %16, 1024
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %445

19:                                               ; preds = %15
  %20 = getelementptr inbounds %32, %32* %1, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %445 [
    i64 6, label %22
    i64 7, label %28
    i64 10, label %45
    i64 8, label %51
    i64 9, label %55
    i64 11, label %82
    i64 3, label %122
    i64 20, label %182
    i64 14, label %188
    i64 5, label %336
    i64 16, label %348
    i64 13, label %380
  ]

22:                                               ; preds = %19
  %23 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %24 = tail call i32 @memcmp(i8* nonnull %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @26, i64 0, i64 0), i64 6) #19
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %42

26:                                               ; preds = %22
  %27 = tail call i32 @zend_compile_func_strlen(%37* %0, %69* %2)
  br label %445

28:                                               ; preds = %19
  %29 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %30 = tail call i32 @memcmp(i8* nonnull %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @27, i64 0, i64 0), i64 7) #19
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = tail call i32 @zend_compile_func_typecheck(%37* %0, %69* %2, i32 1)
  br label %445

34:                                               ; preds = %28
  %35 = tail call i32 @memcmp(i8* nonnull %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @28, i64 0, i64 0), i64 7) #19
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = tail call i32 @zend_compile_func_typecheck(%37* %0, %69* %2, i32 13)
  br label %445

39:                                               ; preds = %34
  %40 = tail call i32 @memcmp(i8* nonnull %29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @29, i64 0, i64 0), i64 7) #19
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %49, label %59

42:                                               ; preds = %22
  %43 = tail call i32 @memcmp(i8* nonnull %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @30, i64 0, i64 0), i64 6) #19
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %94

45:                                               ; preds = %19
  %46 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %47 = tail call i32 @memcmp(i8* nonnull %46, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @31, i64 0, i64 0), i64 10) #19
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %445

49:                                               ; preds = %39, %42, %45
  %50 = tail call i32 @zend_compile_func_typecheck(%37* %0, %69* %2, i32 4)
  br label %445

51:                                               ; preds = %19
  %52 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %53 = tail call i32 @memcmp(i8* nonnull %52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @32, i64 0, i64 0), i64 8) #19
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %63, label %71

55:                                               ; preds = %19
  %56 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %57 = tail call i32 @memcmp(i8* nonnull %56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @33, i64 0, i64 0), i64 9) #19
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %65

59:                                               ; preds = %39
  %60 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %61 = tail call i32 @memcmp(i8* nonnull %60, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @34, i64 0, i64 0), i64 7) #19
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %88

63:                                               ; preds = %51, %55, %59
  %64 = tail call i32 @zend_compile_func_typecheck(%37* %0, %69* %2, i32 5)
  br label %445

65:                                               ; preds = %55
  %66 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %67 = tail call i32 @memcmp(i8* nonnull %66, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @35, i64 0, i64 0), i64 9) #19
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %65
  %70 = tail call i32 @zend_compile_func_typecheck(%37* %0, %69* %2, i32 6)
  br label %445

71:                                               ; preds = %51
  %72 = tail call i32 @memcmp(i8* nonnull %52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @36, i64 0, i64 0), i64 8) #19
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %100

74:                                               ; preds = %71
  %75 = tail call i32 @zend_compile_func_typecheck(%37* %0, %69* %2, i32 7)
  br label %445

76:                                               ; preds = %65
  %77 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %78 = tail call i32 @memcmp(i8* nonnull %77, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @37, i64 0, i64 0), i64 9) #19
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %104

80:                                               ; preds = %76
  %81 = tail call i32 @zend_compile_func_typecheck(%37* %0, %69* %2, i32 8)
  br label %445

82:                                               ; preds = %19
  %83 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %84 = tail call i32 @memcmp(i8* nonnull %83, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @38, i64 0, i64 0), i64 11) #19
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %439

86:                                               ; preds = %82
  %87 = tail call i32 @zend_compile_func_typecheck(%37* %0, %69* %2, i32 9)
  br label %445

88:                                               ; preds = %59
  %89 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %90 = tail call i32 @memcmp(i8* nonnull %89, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i64 0, i64 0), i64 7) #19
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %116

92:                                               ; preds = %88
  %93 = tail call i32 @zend_compile_func_cast(%37* %0, %69* %2, i32 13)
  br label %445

94:                                               ; preds = %42
  %95 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %96 = tail call i32 @memcmp(i8* nonnull %95, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @40, i64 0, i64 0), i64 6) #19
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %110

98:                                               ; preds = %94
  %99 = tail call i32 @zend_compile_func_cast(%37* %0, %69* %2, i32 4)
  br label %445

100:                                              ; preds = %71
  %101 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %102 = tail call i32 @memcmp(i8* nonnull %101, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @41, i64 0, i64 0), i64 8) #19
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %108, label %194

104:                                              ; preds = %76
  %105 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %106 = tail call i32 @memcmp(i8* nonnull %105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @42, i64 0, i64 0), i64 9) #19
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %342

108:                                              ; preds = %100, %104
  %109 = tail call i32 @zend_compile_func_cast(%37* %0, %69* %2, i32 5)
  br label %445

110:                                              ; preds = %94
  %111 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %112 = tail call i32 @memcmp(i8* nonnull %111, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @43, i64 0, i64 0), i64 6) #19
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %445

114:                                              ; preds = %110
  %115 = tail call i32 @zend_compile_func_cast(%37* %0, %69* %2, i32 6)
  br label %445

116:                                              ; preds = %88
  %117 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %118 = tail call i32 @memcmp(i8* nonnull %117, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @44, i64 0, i64 0), i64 7) #19
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %374

120:                                              ; preds = %116
  %121 = tail call i32 @zend_compile_func_defined(%37* %0, %69* %2)
  br label %445

122:                                              ; preds = %19
  %123 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %124 = tail call i32 @memcmp(i8* nonnull %123, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @45, i64 0, i64 0), i64 3) #19
  %125 = or i32 %124, %4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %153

127:                                              ; preds = %122
  %128 = getelementptr inbounds %69, %69* %2, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %445

131:                                              ; preds = %127
  %132 = getelementptr inbounds %69, %69* %2, i64 0, i32 4, i64 0
  %133 = load %43*, %43** %132, align 8
  %134 = getelementptr inbounds %43, %43* %133, i64 0, i32 0
  %135 = load i16, i16* %134, align 8
  %136 = icmp eq i16 %135, 64
  br i1 %136, label %137, label %445

137:                                              ; preds = %131
  %138 = getelementptr inbounds %43, %43* %133, i64 0, i32 3
  %139 = getelementptr inbounds [1 x %43*], [1 x %43*]* %138, i64 1
  %140 = bitcast [1 x %43*]* %139 to i8*
  %141 = load i8, i8* %140, align 8
  %142 = icmp eq i8 %141, 4
  br i1 %142, label %143, label %445

143:                                              ; preds = %137
  %144 = bitcast [1 x %43*]* %138 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = and i64 %145, 255
  %147 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %147, align 8
  %148 = getelementptr inbounds [256 x %32*], [256 x %32*]* @zend_one_char_string, i64 0, i64 %146
  %149 = bitcast %32** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 6, i32* %152, align 8
  br label %445

153:                                              ; preds = %122
  %154 = tail call i32 @memcmp(i8* nonnull %123, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @46, i64 0, i64 0), i64 3) #19
  %155 = or i32 %154, %4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %445

157:                                              ; preds = %153
  %158 = getelementptr inbounds %69, %69* %2, i64 0, i32 3
  %159 = load i32, i32* %158, align 8
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %445

161:                                              ; preds = %157
  %162 = getelementptr inbounds %69, %69* %2, i64 0, i32 4, i64 0
  %163 = load %43*, %43** %162, align 8
  %164 = getelementptr inbounds %43, %43* %163, i64 0, i32 0
  %165 = load i16, i16* %164, align 8
  %166 = icmp eq i16 %165, 64
  br i1 %166, label %167, label %445

167:                                              ; preds = %161
  %168 = getelementptr inbounds %43, %43* %163, i64 0, i32 3
  %169 = getelementptr inbounds [1 x %43*], [1 x %43*]* %168, i64 1
  %170 = bitcast [1 x %43*]* %169 to i8*
  %171 = load i8, i8* %170, align 8
  %172 = icmp eq i8 %171, 6
  br i1 %172, label %173, label %445

173:                                              ; preds = %167
  %174 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %174, align 8
  %175 = bitcast [1 x %43*]* %168 to %32**
  %176 = load %32*, %32** %175, align 8
  %177 = getelementptr inbounds %32, %32* %176, i64 0, i32 3, i64 0
  %178 = load i8, i8* %177, align 8
  %179 = zext i8 %178 to i64
  %180 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 4, i32* %181, align 8
  br label %445

182:                                              ; preds = %19
  %183 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %184 = tail call i32 @memcmp(i8* nonnull %183, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @47, i64 0, i64 0), i64 20) #19
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %445

186:                                              ; preds = %182
  %187 = tail call i32 @zend_compile_func_cufa(%37* %0, %69* %2, %32* nonnull %1)
  br label %445

188:                                              ; preds = %19
  %189 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %190 = tail call i32 @memcmp(i8* nonnull %189, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @48, i64 0, i64 0), i64 14) #19
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %445

192:                                              ; preds = %188
  %193 = tail call i32 @zend_compile_func_cuf(%37* %0, %69* %2, %32* nonnull %1)
  br label %445

194:                                              ; preds = %100
  %195 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %196 = tail call i32 @memcmp(i8* nonnull %195, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @49, i64 0, i64 0), i64 8) #19
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %445

198:                                              ; preds = %194
  %199 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %199) #16
  %200 = getelementptr inbounds %37, %37* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #16
  %201 = getelementptr inbounds %69, %69* %2, i64 0, i32 3
  %202 = load i32, i32* %201, align 8
  switch i32 %202, label %334 [
    i32 3, label %203
    i32 2, label %250
  ]

203:                                              ; preds = %198
  %204 = getelementptr inbounds %69, %69* %2, i64 0, i32 4, i64 2
  %205 = load %43*, %43** %204, align 8
  %206 = getelementptr inbounds %43, %43* %205, i64 0, i32 0
  %207 = load i16, i16* %206, align 8
  switch i16 %207, label %334 [
    i16 64, label %208
    i16 257, label %213
  ]

208:                                              ; preds = %203
  %209 = getelementptr inbounds %43, %43* %205, i64 0, i32 3
  %210 = bitcast [1 x %43*]* %209 to %2*
  %211 = tail call i32 @zend_is_true(%2* nonnull %210) #16
  %212 = trunc i32 %211 to i8
  br label %250

213:                                              ; preds = %203
  %214 = bitcast %2* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #16
  %215 = getelementptr inbounds %43, %43* %205, i64 0, i32 3, i64 0
  %216 = load %43*, %43** %215, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #16
  %217 = getelementptr inbounds %43, %43* %216, i64 0, i32 3
  %218 = bitcast [1 x %43*]* %217 to %32**
  %219 = load %32*, %32** %218, align 8
  %220 = getelementptr inbounds %43, %43* %216, i64 0, i32 1
  %221 = load i16, i16* %220, align 2
  %222 = zext i16 %221 to i32
  %223 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), align 8
  %224 = call %32* @zend_resolve_non_class_name(%32* %219, i32 %222, i8* nonnull %9, i8 zeroext 1, %39* %223) #16
  %225 = load i8, i8* %9, align 1
  %226 = call fastcc zeroext i8 @241(%2* nonnull %8, %32* %224, i8 zeroext %225) #16
  %227 = icmp eq i8 %226, 0
  %228 = getelementptr inbounds %32, %32* %224, i64 0, i32 0, i32 1
  %229 = bitcast %18* %228 to %64*
  %230 = getelementptr inbounds %64, %64* %229, i64 0, i32 1
  %231 = load i8, i8* %230, align 1
  %232 = and i8 %231, 2
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %234, label %245

234:                                              ; preds = %213
  %235 = getelementptr inbounds %32, %32* %224, i64 0, i32 0, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = add i32 %236, -1
  store i32 %237, i32* %235, align 8
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %245

239:                                              ; preds = %234
  %240 = and i8 %231, 1
  %241 = icmp eq i8 %240, 0
  %242 = bitcast %32* %224 to i8*
  br i1 %241, label %244, label %243

243:                                              ; preds = %239
  call void @free(i8* %242) #16
  br label %245

244:                                              ; preds = %239
  call void @_efree(i8* %242) #16
  br label %245

245:                                              ; preds = %244, %243, %234, %213
  br i1 %227, label %249, label %246

246:                                              ; preds = %245
  %247 = call i32 @zend_is_true(%2* nonnull %8) #16
  %248 = trunc i32 %247 to i8
  call void @_zval_ptr_dtor(%2* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #16
  br label %250

249:                                              ; preds = %245
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #16
  br label %334

250:                                              ; preds = %246, %208, %198
  %251 = phi i8 [ %212, %208 ], [ 0, %198 ], [ %248, %246 ]
  %252 = getelementptr inbounds %69, %69* %2, i64 0, i32 4, i64 1
  %253 = load %43*, %43** %252, align 8
  %254 = getelementptr inbounds %43, %43* %253, i64 0, i32 0
  %255 = load i16, i16* %254, align 8
  %256 = icmp eq i16 %255, 129
  br i1 %256, label %257, label %334

257:                                              ; preds = %250
  %258 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %259 = call fastcc zeroext i8 @253(%2* nonnull %258, %43* %253) #16
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %334, label %261

261:                                              ; preds = %257
  %262 = bitcast %2* %258 to %39**
  %263 = load %39*, %39** %262, align 8
  %264 = getelementptr inbounds %39, %39* %263, i64 0, i32 5
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %328, label %267

267:                                              ; preds = %261
  %268 = bitcast %2* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %268) #16
  %269 = call noalias i8* @_emalloc_56() #16
  %270 = bitcast i8* %269 to %39*
  %271 = load i32, i32* %264, align 4
  call void @_zend_hash_init(%39* %270, i32 %271, void (%2*)* nonnull @_zval_ptr_dtor, i8 zeroext 0) #16
  %272 = getelementptr inbounds %2, %2* %10, i64 0, i32 1, i32 0
  store i32 3, i32* %272, align 8
  %273 = icmp eq i8 %251, 0
  %274 = getelementptr inbounds %39, %39* %263, i64 0, i32 3
  %275 = load %41*, %41** %274, align 8
  %276 = getelementptr inbounds %39, %39* %263, i64 0, i32 4
  %277 = load i32, i32* %276, align 8
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds %41, %41* %275, i64 %278
  %280 = icmp eq i32 %277, 0
  br i1 %273, label %282, label %281

281:                                              ; preds = %267
  br i1 %280, label %325, label %283

282:                                              ; preds = %267
  br i1 %280, label %325, label %300

283:                                              ; preds = %281, %297
  %284 = phi %41* [ %298, %297 ], [ %275, %281 ]
  %285 = getelementptr inbounds %41, %41* %284, i64 0, i32 0, i32 1
  %286 = bitcast %4* %285 to i8*
  %287 = load i8, i8* %286, align 8
  switch i8 %287, label %296 [
    i8 0, label %297
    i8 6, label %288
    i8 4, label %292
  ]

288:                                              ; preds = %283
  %289 = bitcast %41* %284 to %32**
  %290 = load %32*, %32** %289, align 8
  %291 = call %2* @_zend_hash_add(%39* %270, %32* %290, %2* nonnull %10) #16
  br label %297

292:                                              ; preds = %283
  %293 = getelementptr inbounds %41, %41* %284, i64 0, i32 0, i32 0, i32 0
  %294 = load i64, i64* %293, align 8
  %295 = call %2* @_zend_hash_index_add(%39* %270, i64 %294, %2* nonnull %10) #16
  br label %297

296:                                              ; preds = %283
  call void @zend_array_destroy(%39* %270) #16
  br label %327

297:                                              ; preds = %283, %292, %288
  %298 = getelementptr inbounds %41, %41* %284, i64 1
  %299 = icmp eq %41* %298, %279
  br i1 %299, label %325, label %283

300:                                              ; preds = %282, %322
  %301 = phi %41* [ %323, %322 ], [ %275, %282 ]
  %302 = getelementptr inbounds %41, %41* %301, i64 0, i32 0, i32 1
  %303 = bitcast %4* %302 to i8*
  %304 = load i8, i8* %303, align 8
  switch i8 %304, label %321 [
    i8 0, label %322
    i8 6, label %305
  ]

305:                                              ; preds = %300
  %306 = bitcast %41* %301 to %32**
  %307 = load %32*, %32** %306, align 8
  %308 = getelementptr inbounds %32, %32* %307, i64 0, i32 3, i64 0
  %309 = load i8, i8* %308, align 1
  %310 = icmp sgt i8 %309, 57
  br i1 %310, label %318, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %32, %32* %307, i64 0, i32 2
  %313 = load i64, i64* %312, align 8
  %314 = call zeroext i8 @_is_numeric_string_ex(i8* nonnull %308, i64 %313, i64* null, double* null, i32 0, i32* null) #16
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %316, label %321

316:                                              ; preds = %311
  %317 = load %32*, %32** %306, align 8
  br label %318

318:                                              ; preds = %316, %305
  %319 = phi %32* [ %317, %316 ], [ %307, %305 ]
  %320 = call %2* @_zend_hash_add(%39* %270, %32* %319, %2* nonnull %10) #16
  br label %322

321:                                              ; preds = %300, %311
  call void @zend_array_destroy(%39* %270) #16
  br label %327

322:                                              ; preds = %300, %318
  %323 = getelementptr inbounds %41, %41* %301, i64 1
  %324 = icmp eq %41* %323, %279
  br i1 %324, label %325, label %300

325:                                              ; preds = %297, %322, %281, %282
  call void @zend_array_destroy(%39* %263) #16
  %326 = bitcast %2* %258 to i8**
  store i8* %269, i8** %326, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #16
  br label %328

327:                                              ; preds = %296, %321
  call void @zend_array_destroy(%39* %263) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #16
  br label %334

328:                                              ; preds = %325, %261
  store i8 1, i8* %199, align 8
  %329 = getelementptr inbounds %69, %69* %2, i64 0, i32 4, i64 0
  %330 = load %43*, %43** %329, align 8
  call void @zend_compile_expr(%37* nonnull %7, %43* %330) #16
  %331 = call fastcc %9* @240(%37* %0, i8 zeroext -67, %37* nonnull %7, %37* nonnull %6) #16
  %332 = zext i8 %251 to i32
  %333 = getelementptr inbounds %9, %9* %331, i64 0, i32 4
  store i32 %332, i32* %333, align 4
  br label %334

334:                                              ; preds = %249, %198, %203, %250, %257, %327, %328
  %335 = phi i32 [ 0, %328 ], [ -1, %327 ], [ -1, %249 ], [ -1, %203 ], [ -1, %198 ], [ -1, %257 ], [ -1, %250 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %199) #16
  br label %445

336:                                              ; preds = %19
  %337 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %338 = tail call i32 @memcmp(i8* nonnull %337, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @50, i64 0, i64 0), i64 5) #19
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %445

340:                                              ; preds = %336
  %341 = tail call i32 @zend_compile_func_count(%37* %0, %69* %2)
  br label %445

342:                                              ; preds = %104
  %343 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %344 = tail call i32 @memcmp(i8* nonnull %343, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @51, i64 0, i64 0), i64 9) #19
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %445

346:                                              ; preds = %342
  %347 = tail call i32 @zend_compile_func_get_class(%37* %0, %69* %2)
  br label %445

348:                                              ; preds = %19
  %349 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %350 = tail call i32 @memcmp(i8* nonnull %349, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @52, i64 0, i64 0), i64 16) #19
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %445

352:                                              ; preds = %348
  %353 = getelementptr inbounds %69, %69* %2, i64 0, i32 3
  %354 = load i32, i32* %353, align 8
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %445

356:                                              ; preds = %352
  %357 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %358 = tail call %9* @get_next_op(%7* %357) #16
  %359 = getelementptr inbounds %9, %9* %358, i64 0, i32 6
  store i8 -64, i8* %359, align 4
  %360 = getelementptr inbounds %9, %9* %358, i64 0, i32 7
  store i8 8, i8* %360, align 1
  %361 = getelementptr inbounds %9, %9* %358, i64 0, i32 8
  store i8 8, i8* %361, align 2
  tail call fastcc void @244(%9* nonnull %358) #16
  %362 = icmp eq %37* %0, null
  br i1 %362, label %445, label %363

363:                                              ; preds = %356
  %364 = getelementptr inbounds %9, %9* %358, i64 0, i32 9
  store i8 2, i8* %364, align 1
  %365 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %366 = getelementptr inbounds %7, %7* %365, i64 0, i32 13
  %367 = load i32, i32* %366, align 4
  %368 = add i32 %367, 1
  store i32 %368, i32* %366, align 4
  %369 = getelementptr inbounds %9, %9* %358, i64 0, i32 3, i32 0
  store i32 %367, i32* %369, align 8
  %370 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %370, align 8
  %371 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %372 = bitcast %38* %371 to i32*
  %373 = load i32, i32* %369, align 8
  store i32 %373, i32* %372, align 8
  br label %445

374:                                              ; preds = %116
  %375 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %376 = tail call i32 @memcmp(i8* nonnull %375, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @53, i64 0, i64 0), i64 7) #19
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %445

378:                                              ; preds = %374
  %379 = tail call i32 @zend_compile_func_gettype(%37* %0, %69* %2)
  br label %445

380:                                              ; preds = %19
  %381 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %382 = tail call i32 @memcmp(i8* nonnull %381, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @54, i64 0, i64 0), i64 13) #19
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %410

384:                                              ; preds = %380
  %385 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %386 = getelementptr inbounds %7, %7* %385, i64 0, i32 3
  %387 = load %32*, %32** %386, align 8
  %388 = icmp eq %32* %387, null
  br i1 %388, label %445, label %389

389:                                              ; preds = %384
  %390 = getelementptr inbounds %69, %69* %2, i64 0, i32 3
  %391 = load i32, i32* %390, align 8
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %445

393:                                              ; preds = %389
  %394 = tail call %9* @get_next_op(%7* %385) #16
  %395 = getelementptr inbounds %9, %9* %394, i64 0, i32 6
  store i8 -62, i8* %395, align 4
  %396 = getelementptr inbounds %9, %9* %394, i64 0, i32 7
  store i8 8, i8* %396, align 1
  %397 = getelementptr inbounds %9, %9* %394, i64 0, i32 8
  store i8 8, i8* %397, align 2
  tail call fastcc void @244(%9* nonnull %394) #16
  %398 = icmp eq %37* %0, null
  br i1 %398, label %445, label %399

399:                                              ; preds = %393
  %400 = getelementptr inbounds %9, %9* %394, i64 0, i32 9
  store i8 2, i8* %400, align 1
  %401 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %402 = getelementptr inbounds %7, %7* %401, i64 0, i32 13
  %403 = load i32, i32* %402, align 4
  %404 = add i32 %403, 1
  store i32 %404, i32* %402, align 4
  %405 = getelementptr inbounds %9, %9* %394, i64 0, i32 3, i32 0
  store i32 %403, i32* %405, align 8
  %406 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %406, align 8
  %407 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %408 = bitcast %38* %407 to i32*
  %409 = load i32, i32* %405, align 8
  store i32 %409, i32* %408, align 8
  br label %445

410:                                              ; preds = %380
  %411 = tail call i32 @memcmp(i8* nonnull %381, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @25, i64 0, i64 0), i64 13) #19
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %445

413:                                              ; preds = %410
  %414 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %415 = getelementptr inbounds %7, %7* %414, i64 0, i32 3
  %416 = load %32*, %32** %415, align 8
  %417 = icmp eq %32* %416, null
  br i1 %417, label %445, label %418

418:                                              ; preds = %413
  %419 = getelementptr inbounds %69, %69* %2, i64 0, i32 3
  %420 = load i32, i32* %419, align 8
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %445

422:                                              ; preds = %418
  %423 = tail call %9* @get_next_op(%7* %414) #16
  %424 = getelementptr inbounds %9, %9* %423, i64 0, i32 6
  store i8 -61, i8* %424, align 4
  %425 = getelementptr inbounds %9, %9* %423, i64 0, i32 7
  store i8 8, i8* %425, align 1
  %426 = getelementptr inbounds %9, %9* %423, i64 0, i32 8
  store i8 8, i8* %426, align 2
  tail call fastcc void @244(%9* nonnull %423) #16
  %427 = icmp eq %37* %0, null
  br i1 %427, label %445, label %428

428:                                              ; preds = %422
  %429 = getelementptr inbounds %9, %9* %423, i64 0, i32 9
  store i8 2, i8* %429, align 1
  %430 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %431 = getelementptr inbounds %7, %7* %430, i64 0, i32 13
  %432 = load i32, i32* %431, align 4
  %433 = add i32 %432, 1
  store i32 %433, i32* %431, align 4
  %434 = getelementptr inbounds %9, %9* %423, i64 0, i32 3, i32 0
  store i32 %432, i32* %434, align 8
  %435 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %435, align 8
  %436 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %437 = bitcast %38* %436 to i32*
  %438 = load i32, i32* %434, align 8
  store i32 %438, i32* %437, align 8
  br label %445

439:                                              ; preds = %82
  %440 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %441 = tail call i32 @memcmp(i8* nonnull %440, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @24, i64 0, i64 0), i64 11) #19
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %445

443:                                              ; preds = %439
  %444 = tail call i32 @zend_compile_func_array_slice(%37* %0, %69* %2)
  br label %445

445:                                              ; preds = %342, %19, %110, %194, %188, %182, %153, %45, %410, %336, %374, %348, %428, %422, %418, %413, %399, %393, %389, %384, %363, %356, %352, %173, %167, %161, %157, %143, %137, %131, %127, %439, %15, %5, %443, %378, %346, %340, %334, %192, %186, %120, %114, %108, %98, %92, %86, %80, %74, %69, %63, %49, %37, %32, %26
  %446 = phi i32 [ %444, %443 ], [ %379, %378 ], [ %347, %346 ], [ %341, %340 ], [ %335, %334 ], [ %193, %192 ], [ %187, %186 ], [ %121, %120 ], [ %115, %114 ], [ %109, %108 ], [ %99, %98 ], [ %93, %92 ], [ %87, %86 ], [ %81, %80 ], [ %75, %74 ], [ %70, %69 ], [ %64, %63 ], [ %50, %49 ], [ %38, %37 ], [ %33, %32 ], [ %27, %26 ], [ -1, %5 ], [ -1, %15 ], [ -1, %439 ], [ 0, %143 ], [ -1, %137 ], [ -1, %131 ], [ -1, %127 ], [ 0, %173 ], [ -1, %167 ], [ -1, %161 ], [ -1, %157 ], [ -1, %352 ], [ 0, %356 ], [ 0, %363 ], [ -1, %384 ], [ -1, %389 ], [ 0, %393 ], [ 0, %399 ], [ -1, %413 ], [ -1, %418 ], [ 0, %422 ], [ 0, %428 ], [ -1, %348 ], [ -1, %374 ], [ -1, %336 ], [ -1, %410 ], [ -1, %45 ], [ -1, %153 ], [ -1, %182 ], [ -1, %188 ], [ -1, %194 ], [ -1, %110 ], [ -1, %19 ], [ -1, %342 ]
  ret i32 %446
}

declare dso_local void @zif_display_disabled_function(%20*, %2*) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_call(%37* %0, %43* nocapture readonly %1, i32 %2) local_unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = alloca %37, align 8
  %6 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %9 = load %43*, %43** %8, align 8
  %10 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = getelementptr inbounds %43, %43* %7, i64 0, i32 0
  %12 = load i16, i16* %11, align 8
  %13 = icmp eq i16 %12, 64
  br i1 %13, label %14, label %20

14:                                               ; preds = %3
  %15 = getelementptr inbounds %43, %43* %7, i64 0, i32 3
  %16 = getelementptr inbounds [1 x %43*], [1 x %43*]* %15, i64 1
  %17 = bitcast [1 x %43*]* %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 6
  br i1 %19, label %21, label %20

20:                                               ; preds = %14, %3
  call void @zend_compile_expr(%37* nonnull %5, %43* %7)
  call void @zend_compile_dynamic_call(%37* %0, %37* nonnull %5, %43* %9)
  br label %191

21:                                               ; preds = %14
  %22 = bitcast [1 x %43*]* %15 to %32**
  %23 = load %32*, %32** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 1, i8* %10, align 8
  %24 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %25 = getelementptr inbounds %43, %43* %7, i64 0, i32 1
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), align 8
  %29 = call %32* @zend_resolve_non_class_name(%32* %23, i32 %27, i8* nonnull %4, i8 zeroext 0, %39* %28) #16
  %30 = bitcast %2* %24 to %32**
  store %32* %29, %32** %30, align 8
  %31 = getelementptr inbounds %32, %32* %29, i64 0, i32 0, i32 1
  %32 = bitcast %18* %31 to %64*
  %33 = getelementptr inbounds %64, %64* %32, i64 0, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, 2
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %36, i32 5126, i32 6
  %38 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %37, i32* %38, align 8
  %39 = load i8, i8* %4, align 1
  %40 = icmp ne i8 %39, 0
  %41 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %42 = icmp eq %32* %41, null
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  %43 = or i1 %40, %42
  br i1 %43, label %73, label %44

44:                                               ; preds = %21
  %45 = load %32*, %32** %22, align 8
  %46 = getelementptr inbounds %32, %32* %45, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 6
  br i1 %48, label %49, label %55

49:                                               ; preds = %44
  %50 = getelementptr inbounds %32, %32* %45, i64 0, i32 3, i64 0
  %51 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %50, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @55, i64 0, i64 0), i64 6) #16
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = bitcast %43* %9 to %69*
  tail call fastcc void @243(%37* %0, %69* %54, %32* %29, %6* null)
  br label %191

55:                                               ; preds = %49, %44
  %56 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %57 = tail call %9* @get_next_op(%7* %56) #16
  %58 = getelementptr inbounds %9, %9* %57, i64 0, i32 6
  store i8 69, i8* %58, align 4
  %59 = getelementptr inbounds %9, %9* %57, i64 0, i32 7
  store i8 8, i8* %59, align 1
  %60 = getelementptr inbounds %9, %9* %57, i64 0, i32 8
  store i8 1, i8* %60, align 2
  %61 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %62 = tail call fastcc i32 @239(%7* %61, %32* %29) #16
  %63 = getelementptr inbounds %9, %9* %57, i64 0, i32 2, i32 0
  store i32 %62, i32* %63, align 4
  %64 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %65 = getelementptr inbounds %7, %7* %64, i64 0, i32 27
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %7, %7* %64, i64 0, i32 26
  %68 = load %2*, %2** %67, align 8
  %69 = zext i32 %62 to i64
  %70 = getelementptr inbounds %2, %2* %68, i64 %69, i32 2, i32 0
  store i32 %66, i32* %70, align 4
  %71 = load i32, i32* %65, align 8
  %72 = add i32 %71, 8
  store i32 %72, i32* %65, align 8
  tail call void @zend_compile_call_common(%37* %0, %43* %9, %6* null) #16
  br label %191

73:                                               ; preds = %21
  %74 = tail call %32* @zend_string_tolower(%32* %29) #16
  %75 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 5), align 8
  %76 = tail call %2* @zend_hash_find(%39* %75, %32* %74) #16
  %77 = icmp eq %2* %76, null
  br i1 %77, label %121, label %78

78:                                               ; preds = %73
  %79 = bitcast %2* %76 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = bitcast i8* %80 to %6*
  %82 = icmp eq i8* %80, null
  br i1 %82, label %121, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %32, %32* %74, i64 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 6
  br i1 %86, label %87, label %111

87:                                               ; preds = %83
  %88 = getelementptr inbounds %32, %32* %74, i64 0, i32 3, i64 0
  %89 = tail call i32 @memcmp(i8* nonnull %88, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @55, i64 0, i64 0), i64 6) #19
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %111

91:                                               ; preds = %87
  %92 = bitcast %43* %9 to %69*
  tail call fastcc void @243(%37* %0, %69* %92, %32* nonnull %74, %6* %81)
  %93 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 1
  %94 = bitcast %18* %93 to %64*
  %95 = getelementptr inbounds %64, %64* %94, i64 0, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %110

99:                                               ; preds = %91
  %100 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, -1
  store i32 %102, i32* %100, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %99
  %105 = and i8 %96, 1
  %106 = icmp eq i8 %105, 0
  %107 = bitcast %32* %74 to i8*
  br i1 %106, label %109, label %108

108:                                              ; preds = %104
  tail call void @free(i8* %107) #16
  br label %110

109:                                              ; preds = %104
  tail call void @_efree(i8* %107) #16
  br label %110

110:                                              ; preds = %91, %99, %108, %109
  call void @_zval_ptr_dtor(%2* nonnull %24) #16
  br label %191

111:                                              ; preds = %83, %87
  %112 = load i8, i8* %80, align 8
  switch i8 %112, label %140 [
    i8 1, label %113
    i8 2, label %117
  ]

113:                                              ; preds = %111
  %114 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %115 = and i32 %114, 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %140, label %121

117:                                              ; preds = %111
  %118 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %119 = and i32 %118, 256
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %140, label %121

121:                                              ; preds = %78, %73, %113, %117
  %122 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 1
  %123 = bitcast %18* %122 to %64*
  %124 = getelementptr inbounds %64, %64* %123, i64 0, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = and i8 %125, 2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %139

128:                                              ; preds = %121
  %129 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = add i32 %130, -1
  store i32 %131, i32* %129, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %139

133:                                              ; preds = %128
  %134 = and i8 %125, 1
  %135 = icmp eq i8 %134, 0
  %136 = bitcast %32* %74 to i8*
  br i1 %135, label %138, label %137

137:                                              ; preds = %133
  tail call void @free(i8* %136) #16
  br label %139

138:                                              ; preds = %133
  tail call void @_efree(i8* %136) #16
  br label %139

139:                                              ; preds = %121, %128, %137, %138
  call void @zend_compile_dynamic_call(%37* %0, %37* nonnull %5, %43* %9)
  br label %191

140:                                              ; preds = %111, %113, %117
  %141 = bitcast %43* %9 to %69*
  %142 = tail call i32 @zend_try_compile_special_func(%37* %0, %32* nonnull %74, %69* %141, %6* nonnull %81, i32 %2)
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %163

144:                                              ; preds = %140
  %145 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 1
  %146 = bitcast %18* %145 to %64*
  %147 = getelementptr inbounds %64, %64* %146, i64 0, i32 1
  %148 = load i8, i8* %147, align 1
  %149 = and i8 %148, 2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %162

151:                                              ; preds = %144
  %152 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = add i32 %153, -1
  store i32 %154, i32* %152, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %151
  %157 = and i8 %148, 1
  %158 = icmp eq i8 %157, 0
  %159 = bitcast %32* %74 to i8*
  br i1 %158, label %161, label %160

160:                                              ; preds = %156
  tail call void @free(i8* %159) #16
  br label %162

161:                                              ; preds = %156
  tail call void @_efree(i8* %159) #16
  br label %162

162:                                              ; preds = %144, %151, %160, %161
  call void @_zval_ptr_dtor(%2* nonnull %24) #16
  br label %191

163:                                              ; preds = %140
  call void @_zval_ptr_dtor(%2* nonnull %24) #16
  store %32* %74, %32** %30, align 8
  store i32 5126, i32* %38, align 8
  %164 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %165 = call %9* @get_next_op(%7* %164) #16
  %166 = getelementptr inbounds %9, %9* %165, i64 0, i32 6
  store i8 61, i8* %166, align 4
  %167 = getelementptr inbounds %9, %9* %165, i64 0, i32 7
  store i8 8, i8* %167, align 1
  %168 = load i8, i8* %10, align 8
  %169 = getelementptr inbounds %9, %9* %165, i64 0, i32 8
  store i8 %168, i8* %169, align 2
  %170 = icmp eq i8 %168, 1
  br i1 %170, label %171, label %174

171:                                              ; preds = %163
  %172 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %173 = call i32 @zend_add_literal(%7* %172, %2* nonnull %24) #16
  br label %178

174:                                              ; preds = %163
  %175 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %176 = bitcast %38* %175 to i32*
  %177 = load i32, i32* %176, align 8
  br label %178

178:                                              ; preds = %171, %174
  %179 = phi i32 [ %173, %171 ], [ %177, %174 ]
  %180 = getelementptr inbounds %9, %9* %165, i64 0, i32 2, i32 0
  store i32 %179, i32* %180, align 4
  call fastcc void @244(%9* nonnull %165) #16
  %181 = load i32, i32* %180, align 4
  %182 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %183 = getelementptr inbounds %7, %7* %182, i64 0, i32 27
  %184 = load i32, i32* %183, align 8
  %185 = getelementptr inbounds %7, %7* %182, i64 0, i32 26
  %186 = load %2*, %2** %185, align 8
  %187 = zext i32 %181 to i64
  %188 = getelementptr inbounds %2, %2* %186, i64 %187, i32 2, i32 0
  store i32 %184, i32* %188, align 4
  %189 = load i32, i32* %183, align 8
  %190 = add i32 %189, 8
  store i32 %190, i32* %183, align 8
  call void @zend_compile_call_common(%37* %0, %43* %9, %6* nonnull %81)
  br label %191

191:                                              ; preds = %110, %162, %139, %53, %55, %178, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @243(%37* %0, %69* %1, %32* %2, %6* %3) unnamed_addr #0 {
  %5 = alloca %2, align 8
  %6 = alloca %37, align 8
  %7 = load i64, i64* getelementptr inbounds (%52, %52* @executor_globals, i64 0, i32 50), align 8
  %8 = icmp sgt i64 %7, -1
  br i1 %8, label %9, label %117

9:                                                ; preds = %4
  %10 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %12 = tail call i32 @get_next_op_number(%7* %11) #16
  %13 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %14 = tail call %9* @get_next_op(%7* %13) #16
  %15 = getelementptr inbounds %9, %9* %14, i64 0, i32 6
  store i8 -105, i8* %15, align 4
  %16 = getelementptr inbounds %9, %9* %14, i64 0, i32 7
  store i8 8, i8* %16, align 1
  %17 = getelementptr inbounds %9, %9* %14, i64 0, i32 8
  store i8 8, i8* %17, align 2
  tail call fastcc void @244(%9* nonnull %14) #16
  %18 = icmp eq %6* %3, null
  br i1 %18, label %44, label %19

19:                                               ; preds = %9
  store i8 1, i8* %10, align 8
  %20 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %21 = bitcast %2* %20 to %32**
  store %32* %2, %32** %21, align 8
  %22 = getelementptr inbounds %32, %32* %2, i64 0, i32 0, i32 1
  %23 = bitcast %18* %22 to %64*
  %24 = getelementptr inbounds %64, %64* %23, i64 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = and i8 %25, 2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %19
  %29 = getelementptr inbounds %32, %32* %2, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  br label %32

32:                                               ; preds = %19, %28
  %33 = phi i32 [ 5126, %28 ], [ 6, %19 ]
  %34 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %33, i32* %34, align 8
  %35 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %36 = tail call %9* @get_next_op(%7* %35) #16
  %37 = getelementptr inbounds %9, %9* %36, i64 0, i32 6
  store i8 61, i8* %37, align 4
  %38 = getelementptr inbounds %9, %9* %36, i64 0, i32 7
  store i8 8, i8* %38, align 1
  %39 = getelementptr inbounds %9, %9* %36, i64 0, i32 8
  store i8 1, i8* %39, align 2
  %40 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %41 = call i32 @zend_add_literal(%7* %40, %2* nonnull %20) #16
  %42 = getelementptr inbounds %9, %9* %36, i64 0, i32 2, i32 0
  store i32 %41, i32* %42, align 4
  tail call fastcc void @244(%9* nonnull %36) #16
  %43 = load i32, i32* %42, align 4
  br label %53

44:                                               ; preds = %9
  %45 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %46 = tail call %9* @get_next_op(%7* %45) #16
  %47 = getelementptr inbounds %9, %9* %46, i64 0, i32 6
  store i8 69, i8* %47, align 4
  %48 = getelementptr inbounds %9, %9* %46, i64 0, i32 7
  store i8 8, i8* %48, align 1
  %49 = getelementptr inbounds %9, %9* %46, i64 0, i32 8
  store i8 8, i8* %49, align 2
  tail call fastcc void @244(%9* nonnull %46) #16
  store i8 1, i8* %49, align 2
  %50 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %51 = tail call fastcc i32 @239(%7* %50, %32* %2)
  %52 = getelementptr inbounds %9, %9* %46, i64 0, i32 2, i32 0
  store i32 %51, i32* %52, align 4
  br label %53

53:                                               ; preds = %44, %32
  %54 = phi i32 [ %43, %32 ], [ %51, %44 ]
  %55 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %56 = getelementptr inbounds %7, %7* %55, i64 0, i32 27
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %7, %7* %55, i64 0, i32 26
  %59 = load %2*, %2** %58, align 8
  %60 = zext i32 %54 to i64
  %61 = getelementptr inbounds %2, %2* %59, i64 %60, i32 2, i32 0
  store i32 %57, i32* %61, align 4
  %62 = load i32, i32* %56, align 8
  %63 = add i32 %62, 8
  store i32 %63, i32* %56, align 8
  %64 = getelementptr inbounds %69, %69* %1, i64 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %94

67:                                               ; preds = %53
  %68 = getelementptr inbounds %69, %69* %1, i64 0, i32 4, i64 0
  %69 = load %43*, %43** %68, align 8
  %70 = getelementptr inbounds %43, %43* %69, i64 0, i32 0
  %71 = load i16, i16* %70, align 8
  %72 = icmp eq i16 %71, 64
  br i1 %72, label %73, label %79

73:                                               ; preds = %67
  %74 = getelementptr inbounds %43, %43* %69, i64 0, i32 3
  %75 = getelementptr inbounds [1 x %43*], [1 x %43*]* %74, i64 1
  %76 = bitcast [1 x %43*]* %75 to i8*
  %77 = load i8, i8* %76, align 8
  %78 = icmp eq i8 %77, 6
  br i1 %78, label %94, label %79

79:                                               ; preds = %73, %67
  %80 = bitcast %69* %1 to %43*
  %81 = tail call %32* @zend_ast_export(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @201, i64 0, i64 0), %43* %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @202, i64 0, i64 0)) #16
  %82 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #16
  %83 = bitcast %2* %5 to %32**
  store %32* %81, %32** %83, align 8
  %84 = getelementptr inbounds %32, %32* %81, i64 0, i32 0, i32 1
  %85 = bitcast %18* %84 to %64*
  %86 = getelementptr inbounds %64, %64* %85, i64 0, i32 1
  %87 = load i8, i8* %86, align 1
  %88 = and i8 %87, 2
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, i32 5126, i32 6
  %91 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 %90, i32* %91, align 8
  %92 = call %43* @zend_ast_create_zval_ex(%2* nonnull %5, i16 zeroext 0) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #16
  %93 = call %43* @zend_ast_list_add(%43* %80, %43* %92) #16
  br label %94

94:                                               ; preds = %73, %79, %53
  %95 = bitcast %69* %1 to %43*
  call void @zend_compile_call_common(%37* %0, %43* %95, %6* %3)
  %96 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %97 = getelementptr inbounds %7, %7* %96, i64 0, i32 11
  %98 = load %9*, %9** %97, align 8
  %99 = zext i32 %12 to i64
  %100 = call i32 @get_next_op_number(%7* %96) #16
  %101 = getelementptr inbounds %9, %9* %98, i64 %99, i32 2, i32 0
  store i32 %100, i32* %101, align 4
  %102 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %103 = load i8, i8* %102, align 8
  %104 = getelementptr inbounds %9, %9* %98, i64 %99, i32 9
  store i8 %103, i8* %104, align 1
  %105 = icmp eq i8 %103, 1
  br i1 %105, label %106, label %110

106:                                              ; preds = %94
  %107 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %108 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %109 = call i32 @zend_add_literal(%7* %107, %2* nonnull %108)
  br label %114

110:                                              ; preds = %94
  %111 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %112 = bitcast %38* %111 to i32*
  %113 = load i32, i32* %112, align 8
  br label %114

114:                                              ; preds = %110, %106
  %115 = phi i32 [ %113, %110 ], [ %109, %106 ]
  %116 = getelementptr inbounds %9, %9* %98, i64 %99, i32 3, i32 0
  store i32 %115, i32* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  br label %140

117:                                              ; preds = %4
  %118 = icmp eq %6* %3, null
  br i1 %118, label %119, label %137

119:                                              ; preds = %117
  %120 = getelementptr inbounds %32, %32* %2, i64 0, i32 0, i32 1
  %121 = bitcast %18* %120 to %64*
  %122 = getelementptr inbounds %64, %64* %121, i64 0, i32 1
  %123 = load i8, i8* %122, align 1
  %124 = and i8 %123, 2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %137

126:                                              ; preds = %119
  %127 = getelementptr inbounds %32, %32* %2, i64 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = add i32 %128, -1
  store i32 %129, i32* %127, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %137

131:                                              ; preds = %126
  %132 = and i8 %123, 1
  %133 = icmp eq i8 %132, 0
  %134 = bitcast %32* %2 to i8*
  br i1 %133, label %136, label %135

135:                                              ; preds = %131
  tail call void @free(i8* %134) #16
  br label %137

136:                                              ; preds = %131
  tail call void @_efree(i8* %134) #16
  br label %137

137:                                              ; preds = %136, %135, %126, %119, %117
  %138 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %138, align 8
  %139 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 3, i32* %139, align 8
  br label %140

140:                                              ; preds = %137, %114
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_method_call(%37* %0, %43* nocapture readonly %1, i32 %2) local_unnamed_addr #0 {
  %4 = alloca %2, align 8
  %5 = alloca %2, align 8
  %6 = alloca %37, align 8
  %7 = alloca %37, align 8
  %8 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %9 = load %43*, %43** %8, align 8
  %10 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %11 = load %43*, %43** %10, align 8
  %12 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 2
  %13 = load %43*, %43** %12, align 8
  %14 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #16
  %15 = getelementptr inbounds %37, %37* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  %16 = getelementptr inbounds %43, %43* %9, i64 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, 256
  br i1 %18, label %19, label %42

19:                                               ; preds = %3
  %20 = getelementptr inbounds %43, %43* %9, i64 0, i32 3, i64 0
  %21 = load %43*, %43** %20, align 8
  %22 = getelementptr inbounds %43, %43* %21, i64 0, i32 0
  %23 = load i16, i16* %22, align 8
  %24 = icmp eq i16 %23, 64
  br i1 %24, label %25, label %42

25:                                               ; preds = %19
  %26 = getelementptr inbounds %43, %43* %21, i64 0, i32 3
  %27 = getelementptr inbounds [1 x %43*], [1 x %43*]* %26, i64 1
  %28 = bitcast [1 x %43*]* %27 to i8*
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 6
  br i1 %30, label %31, label %42

31:                                               ; preds = %25
  %32 = bitcast [1 x %43*]* %26 to %32**
  %33 = load %32*, %32** %32, align 8
  %34 = getelementptr inbounds %32, %32* %33, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 4
  br i1 %36, label %37, label %42

37:                                               ; preds = %31
  %38 = getelementptr inbounds %32, %32* %33, i64 0, i32 3, i64 0
  %39 = tail call i32 @memcmp(i8* nonnull %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  store i8 8, i8* %14, align 8
  br label %43

42:                                               ; preds = %37, %3, %19, %31, %25
  call void @zend_compile_expr(%37* nonnull %6, %43* %9)
  br label %43

43:                                               ; preds = %42, %41
  call void @zend_compile_expr(%37* nonnull %7, %43* %11)
  %44 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %45 = call %9* @get_next_op(%7* %44) #16
  %46 = getelementptr inbounds %9, %9* %45, i64 0, i32 6
  store i8 112, i8* %46, align 4
  %47 = load i8, i8* %14, align 8
  %48 = getelementptr inbounds %9, %9* %45, i64 0, i32 7
  store i8 %47, i8* %48, align 1
  %49 = icmp eq i8 %47, 1
  br i1 %49, label %50, label %54

50:                                               ; preds = %43
  %51 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %52 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %53 = call i32 @zend_add_literal(%7* %51, %2* nonnull %52) #16
  br label %58

54:                                               ; preds = %43
  %55 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %56 = bitcast %38* %55 to i32*
  %57 = load i32, i32* %56, align 8
  br label %58

58:                                               ; preds = %50, %54
  %59 = phi i32 [ %53, %50 ], [ %57, %54 ]
  %60 = getelementptr inbounds %9, %9* %45, i64 0, i32 1, i32 0
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %9, %9* %45, i64 0, i32 8
  store i8 8, i8* %61, align 2
  call fastcc void @244(%9* nonnull %45) #16
  %62 = load i8, i8* %15, align 8
  %63 = icmp eq i8 %62, 1
  br i1 %63, label %64, label %109

64:                                               ; preds = %58
  %65 = getelementptr inbounds %37, %37* %7, i64 0, i32 2, i32 0, i32 1
  %66 = bitcast %4* %65 to i8*
  %67 = load i8, i8* %66, align 8
  %68 = icmp eq i8 %67, 6
  br i1 %68, label %70, label %69

69:                                               ; preds = %64
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @56, i64 0, i64 0)) #15
  unreachable

70:                                               ; preds = %64
  %71 = getelementptr inbounds %37, %37* %7, i64 0, i32 2, i32 0
  store i8 1, i8* %61, align 2
  %72 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %73 = bitcast %2* %71 to %32**
  %74 = load %32*, %32** %73, align 8
  %75 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #16
  %76 = bitcast %2* %5 to %32**
  store %32* %74, %32** %76, align 8
  %77 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 1
  %78 = bitcast %18* %77 to %64*
  %79 = getelementptr inbounds %64, %64* %78, i64 0, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = and i8 %80, 2
  %82 = icmp eq i8 %81, 0
  %83 = select i1 %82, i32 5126, i32 6
  %84 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 %83, i32* %84, align 8
  %85 = call i32 @zend_add_literal(%7* %72, %2* nonnull %5) #16
  %86 = load %32*, %32** %76, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #16
  %87 = call %32* @zend_string_tolower(%32* %86) #16
  %88 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #16
  %89 = bitcast %2* %4 to %32**
  store %32* %87, %32** %89, align 8
  %90 = getelementptr inbounds %32, %32* %87, i64 0, i32 0, i32 1
  %91 = bitcast %18* %90 to %64*
  %92 = getelementptr inbounds %64, %64* %91, i64 0, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = and i8 %93, 2
  %95 = icmp eq i8 %94, 0
  %96 = select i1 %95, i32 5126, i32 6
  %97 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %96, i32* %97, align 8
  %98 = call i32 @zend_add_literal(%7* %72, %2* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #16
  %99 = getelementptr inbounds %9, %9* %45, i64 0, i32 2, i32 0
  store i32 %85, i32* %99, align 4
  %100 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %101 = getelementptr inbounds %7, %7* %100, i64 0, i32 27
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %7, %7* %100, i64 0, i32 26
  %104 = load %2*, %2** %103, align 8
  %105 = zext i32 %85 to i64
  %106 = getelementptr inbounds %2, %2* %104, i64 %105, i32 2, i32 0
  store i32 %102, i32* %106, align 4
  %107 = load i32, i32* %101, align 8
  %108 = add i32 %107, 16
  store i32 %108, i32* %101, align 8
  br label %114

109:                                              ; preds = %58
  store i8 %62, i8* %61, align 2
  %110 = getelementptr inbounds %37, %37* %7, i64 0, i32 2
  %111 = bitcast %38* %110 to i32*
  %112 = getelementptr inbounds %9, %9* %45, i64 0, i32 2, i32 0
  %113 = load i32, i32* %111, align 8
  store i32 %113, i32* %112, align 4
  br label %114

114:                                              ; preds = %109, %70
  %115 = load i8, i8* %48, align 1
  %116 = icmp eq i8 %115, 8
  br i1 %116, label %117, label %159

117:                                              ; preds = %114
  %118 = load i8, i8* %61, align 2
  %119 = icmp eq i8 %118, 1
  %120 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %121 = icmp ne %1* %120, null
  %122 = and i1 %119, %121
  br i1 %122, label %123, label %159

123:                                              ; preds = %117
  %124 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %125 = getelementptr inbounds %7, %7* %124, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 1048576
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %159

129:                                              ; preds = %123
  %130 = getelementptr inbounds %1, %1* %120, i64 0, i32 4
  %131 = load i32, i32* %130, align 4
  %132 = trunc i32 %131 to i8
  %133 = icmp slt i8 %132, 0
  br i1 %133, label %159, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %7, %7* %124, i64 0, i32 26
  %136 = load %2*, %2** %135, align 8
  %137 = getelementptr inbounds %9, %9* %45, i64 0, i32 2, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %2, %2* %136, i64 %139
  %141 = getelementptr inbounds %2, %2* %140, i64 1
  %142 = bitcast %2* %141 to %32**
  %143 = load %32*, %32** %142, align 8
  %144 = getelementptr inbounds %1, %1* %120, i64 0, i32 10
  %145 = call %2* @zend_hash_find(%39* nonnull %144, %32* %143) #16
  %146 = icmp eq %2* %145, null
  br i1 %146, label %159, label %147

147:                                              ; preds = %134
  %148 = bitcast %2* %145 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = bitcast i8* %149 to %6*
  %151 = icmp eq i8* %149, null
  br i1 %151, label %159, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds i8, i8* %149, i64 4
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = and i32 %155, 1028
  %157 = icmp eq i32 %156, 0
  %158 = select i1 %157, %6* null, %6* %150
  br label %159

159:                                              ; preds = %134, %123, %152, %147, %129, %117, %114
  %160 = phi %6* [ null, %129 ], [ null, %117 ], [ null, %114 ], [ %150, %147 ], [ %158, %152 ], [ null, %123 ], [ null, %134 ]
  call void @zend_compile_call_common(%37* %0, %43* %13, %6* %160)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_static_call(%37* %0, %43* nocapture readonly %1, i32 %2) local_unnamed_addr #0 {
  %4 = alloca %2, align 8
  %5 = alloca %2, align 8
  %6 = alloca %2, align 8
  %7 = alloca %2, align 8
  %8 = alloca %37, align 8
  %9 = alloca %37, align 8
  %10 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %11 = load %43*, %43** %10, align 8
  %12 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %13 = load %43*, %43** %12, align 8
  %14 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 2
  %15 = load %43*, %43** %14, align 8
  %16 = getelementptr inbounds %37, %37* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #16
  %17 = getelementptr inbounds %37, %37* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #16
  call fastcc void @234(%37* nonnull %8, %43* %11, i32 512)
  call void @zend_compile_expr(%37* nonnull %9, %43* %13)
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 1
  br i1 %19, label %20, label %38

20:                                               ; preds = %3
  %21 = getelementptr inbounds %37, %37* %9, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %37, %37* %9, i64 0, i32 2, i32 0, i32 1
  %23 = bitcast %4* %22 to i8*
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 6
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @56, i64 0, i64 0)) #15
  unreachable

27:                                               ; preds = %20
  %28 = bitcast %2* %21 to %32**
  %29 = load %32*, %32** %28, align 8
  %30 = getelementptr inbounds %32, %32* %29, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 11
  br i1 %32, label %33, label %38

33:                                               ; preds = %27
  %34 = getelementptr inbounds %32, %32* %29, i64 0, i32 3, i64 0
  %35 = call i32 @zend_binary_strcasecmp(i8* nonnull %34, i64 11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @130, i64 0, i64 0), i64 11) #16
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  call void @_zval_ptr_dtor(%2* nonnull %21) #16
  store i8 8, i8* %17, align 8
  br label %38

38:                                               ; preds = %33, %27, %37, %3
  %39 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %40 = call %9* @get_next_op(%7* %39) #16
  %41 = getelementptr inbounds %9, %9* %40, i64 0, i32 6
  store i8 113, i8* %41, align 4
  %42 = load i8, i8* %16, align 8
  %43 = icmp eq i8 %42, 1
  %44 = getelementptr inbounds %9, %9* %40, i64 0, i32 7
  br i1 %43, label %45, label %83

45:                                               ; preds = %38
  store i8 1, i8* %44, align 1
  %46 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %47 = getelementptr inbounds %37, %37* %8, i64 0, i32 2, i32 0, i32 0
  %48 = bitcast %3* %47 to %32**
  %49 = load %32*, %32** %48, align 8
  %50 = bitcast %2* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #16
  %51 = bitcast %2* %7 to %32**
  store %32* %49, %32** %51, align 8
  %52 = getelementptr inbounds %32, %32* %49, i64 0, i32 0, i32 1
  %53 = bitcast %18* %52 to %64*
  %54 = getelementptr inbounds %64, %64* %53, i64 0, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = and i8 %55, 2
  %57 = icmp eq i8 %56, 0
  %58 = select i1 %57, i32 5126, i32 6
  %59 = getelementptr inbounds %2, %2* %7, i64 0, i32 1, i32 0
  store i32 %58, i32* %59, align 8
  %60 = call i32 @zend_add_literal(%7* %46, %2* nonnull %7) #16
  %61 = load %32*, %32** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #16
  %62 = call %32* @zend_string_tolower(%32* %61) #16
  %63 = bitcast %2* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #16
  %64 = bitcast %2* %6 to %32**
  store %32* %62, %32** %64, align 8
  %65 = getelementptr inbounds %32, %32* %62, i64 0, i32 0, i32 1
  %66 = bitcast %18* %65 to %64*
  %67 = getelementptr inbounds %64, %64* %66, i64 0, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = and i8 %68, 2
  %70 = icmp eq i8 %69, 0
  %71 = select i1 %70, i32 5126, i32 6
  %72 = getelementptr inbounds %2, %2* %6, i64 0, i32 1, i32 0
  store i32 %71, i32* %72, align 8
  %73 = call i32 @zend_add_literal(%7* %46, %2* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #16
  %74 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %75 = getelementptr inbounds %7, %7* %74, i64 0, i32 27
  %76 = load i32, i32* %75, align 8
  %77 = getelementptr inbounds %7, %7* %74, i64 0, i32 26
  %78 = load %2*, %2** %77, align 8
  %79 = zext i32 %60 to i64
  %80 = getelementptr inbounds %2, %2* %78, i64 %79, i32 2, i32 0
  store i32 %76, i32* %80, align 4
  %81 = load i32, i32* %75, align 8
  %82 = add i32 %81, 8
  store i32 %82, i32* %75, align 8
  br label %87

83:                                               ; preds = %38
  store i8 %42, i8* %44, align 1
  %84 = getelementptr inbounds %37, %37* %8, i64 0, i32 2
  %85 = bitcast %38* %84 to i32*
  %86 = load i32, i32* %85, align 8
  br label %87

87:                                               ; preds = %45, %83
  %88 = phi i32 [ %86, %83 ], [ %60, %45 ]
  %89 = getelementptr inbounds %9, %9* %40, i64 0, i32 1, i32 0
  store i32 %88, i32* %89, align 8
  %90 = load i8, i8* %17, align 8
  %91 = icmp eq i8 %90, 1
  %92 = getelementptr inbounds %9, %9* %40, i64 0, i32 8
  br i1 %91, label %93, label %137

93:                                               ; preds = %87
  store i8 1, i8* %92, align 2
  %94 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %95 = getelementptr inbounds %37, %37* %9, i64 0, i32 2, i32 0, i32 0
  %96 = bitcast %3* %95 to %32**
  %97 = load %32*, %32** %96, align 8
  %98 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #16
  %99 = bitcast %2* %5 to %32**
  store %32* %97, %32** %99, align 8
  %100 = getelementptr inbounds %32, %32* %97, i64 0, i32 0, i32 1
  %101 = bitcast %18* %100 to %64*
  %102 = getelementptr inbounds %64, %64* %101, i64 0, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = and i8 %103, 2
  %105 = icmp eq i8 %104, 0
  %106 = select i1 %105, i32 5126, i32 6
  %107 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 %106, i32* %107, align 8
  %108 = call i32 @zend_add_literal(%7* %94, %2* nonnull %5) #16
  %109 = load %32*, %32** %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #16
  %110 = call %32* @zend_string_tolower(%32* %109) #16
  %111 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #16
  %112 = bitcast %2* %4 to %32**
  store %32* %110, %32** %112, align 8
  %113 = getelementptr inbounds %32, %32* %110, i64 0, i32 0, i32 1
  %114 = bitcast %18* %113 to %64*
  %115 = getelementptr inbounds %64, %64* %114, i64 0, i32 1
  %116 = load i8, i8* %115, align 1
  %117 = and i8 %116, 2
  %118 = icmp eq i8 %117, 0
  %119 = select i1 %118, i32 5126, i32 6
  %120 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %119, i32* %120, align 8
  %121 = call i32 @zend_add_literal(%7* %94, %2* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #16
  %122 = getelementptr inbounds %9, %9* %40, i64 0, i32 2, i32 0
  store i32 %108, i32* %122, align 4
  %123 = load i8, i8* %44, align 1
  %124 = icmp eq i8 %123, 1
  %125 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %126 = getelementptr inbounds %7, %7* %125, i64 0, i32 27
  %127 = load i32, i32* %126, align 8
  %128 = getelementptr inbounds %7, %7* %125, i64 0, i32 26
  %129 = load %2*, %2** %128, align 8
  %130 = zext i32 %108 to i64
  %131 = getelementptr inbounds %2, %2* %129, i64 %130, i32 2, i32 0
  store i32 %127, i32* %131, align 4
  %132 = load i32, i32* %126, align 8
  br i1 %124, label %133, label %135

133:                                              ; preds = %93
  %134 = add i32 %132, 8
  store i32 %134, i32* %126, align 8
  br label %142

135:                                              ; preds = %93
  %136 = add i32 %132, 16
  store i32 %136, i32* %126, align 8
  br label %142

137:                                              ; preds = %87
  store i8 %90, i8* %92, align 2
  %138 = getelementptr inbounds %37, %37* %9, i64 0, i32 2
  %139 = bitcast %38* %138 to i32*
  %140 = getelementptr inbounds %9, %9* %40, i64 0, i32 2, i32 0
  %141 = load i32, i32* %139, align 8
  store i32 %141, i32* %140, align 4
  br label %142

142:                                              ; preds = %137, %133, %135
  call fastcc void @244(%9* nonnull %40)
  %143 = load i8, i8* %92, align 2
  %144 = icmp eq i8 %143, 1
  br i1 %144, label %145, label %260

145:                                              ; preds = %142
  %146 = load i8, i8* %44, align 1
  switch i8 %146, label %260 [
    i8 1, label %147
    i8 8, label %186
  ]

147:                                              ; preds = %145
  %148 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %149 = getelementptr inbounds %7, %7* %148, i64 0, i32 26
  %150 = load %2*, %2** %149, align 8
  %151 = load i32, i32* %89, align 8
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds %2, %2* %150, i64 %152
  %154 = getelementptr inbounds %2, %2* %153, i64 1
  %155 = bitcast %2* %154 to %32**
  %156 = load %32*, %32** %155, align 8
  %157 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), align 8
  %158 = call %2* @zend_hash_find(%39* %157, %32* %156) #16
  %159 = icmp eq %2* %158, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %147
  %161 = bitcast %2* %158 to i8**
  %162 = load i8*, i8** %161, align 8
  %163 = bitcast i8* %162 to %1*
  %164 = icmp eq i8* %162, null
  br label %165

165:                                              ; preds = %147, %160
  %166 = phi %1* [ %163, %160 ], [ null, %147 ]
  %167 = phi i1 [ %164, %160 ], [ true, %147 ]
  %168 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %169 = icmp ne %1* %168, null
  %170 = and i1 %167, %169
  br i1 %170, label %171, label %213

171:                                              ; preds = %165
  %172 = getelementptr inbounds %1, %1* %168, i64 0, i32 1
  %173 = load %32*, %32** %172, align 8
  %174 = getelementptr inbounds %32, %32* %173, i64 0, i32 2
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds %32, %32* %156, i64 0, i32 2
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %175, %177
  br i1 %178, label %179, label %213

179:                                              ; preds = %171
  %180 = getelementptr inbounds %32, %32* %173, i64 0, i32 3, i64 0
  %181 = getelementptr inbounds %32, %32* %156, i64 0, i32 3, i64 0
  %182 = call i32 @zend_binary_strcasecmp(i8* nonnull %180, i64 %175, i8* nonnull %181, i64 %175) #16
  %183 = icmp eq i32 %182, 0
  %184 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %185 = select i1 %183, %1* %184, %1* %166
  br label %213

186:                                              ; preds = %145
  %187 = load i32, i32* %89, align 8
  %188 = and i32 %187, 15
  %189 = icmp eq i32 %188, 1
  br i1 %189, label %190, label %260

190:                                              ; preds = %186
  %191 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %192 = getelementptr inbounds %7, %7* %191, i64 0, i32 2
  %193 = load i32, i32* %192, align 4
  %194 = and i32 %193, 1048576
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %260

196:                                              ; preds = %190
  %197 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %198 = icmp eq %1* %197, null
  br i1 %198, label %199, label %204

199:                                              ; preds = %196
  %200 = getelementptr inbounds %7, %7* %191, i64 0, i32 3
  %201 = load %32*, %32** %200, align 8
  %202 = icmp ne %32* %201, null
  %203 = zext i1 %202 to i8
  br label %210

204:                                              ; preds = %196
  %205 = getelementptr inbounds %1, %1* %197, i64 0, i32 4
  %206 = load i32, i32* %205, align 4
  %207 = trunc i32 %206 to i8
  %208 = lshr i8 %207, 7
  %209 = xor i8 %208, 1
  br label %210

210:                                              ; preds = %199, %204
  %211 = phi i8 [ %209, %204 ], [ %203, %199 ]
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %260, label %213

213:                                              ; preds = %210, %179, %171, %165
  %214 = phi %1* [ %166, %171 ], [ %166, %165 ], [ %185, %179 ], [ %197, %210 ]
  %215 = icmp eq %1* %214, null
  br i1 %215, label %260, label %216

216:                                              ; preds = %213
  %217 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %218 = getelementptr inbounds %7, %7* %217, i64 0, i32 26
  %219 = load %2*, %2** %218, align 8
  %220 = getelementptr inbounds %9, %9* %40, i64 0, i32 2, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds %2, %2* %219, i64 %222
  %224 = getelementptr inbounds %2, %2* %223, i64 1
  %225 = bitcast %2* %224 to %32**
  %226 = load %32*, %32** %225, align 8
  %227 = getelementptr inbounds %1, %1* %214, i64 0, i32 10
  %228 = call %2* @zend_hash_find(%39* nonnull %227, %32* %226) #16
  %229 = icmp eq %2* %228, null
  br i1 %229, label %260, label %230

230:                                              ; preds = %216
  %231 = bitcast %2* %228 to i8**
  %232 = load i8*, i8** %231, align 8
  %233 = bitcast i8* %232 to %6*
  %234 = icmp eq i8* %232, null
  br i1 %234, label %260, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds i8, i8* %232, i64 4
  %237 = bitcast i8* %236 to i32*
  %238 = load i32, i32* %237, align 4
  %239 = and i32 %238, 256
  %240 = icmp ne i32 %239, 0
  %241 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %242 = icmp eq %1* %214, %241
  %243 = or i1 %240, %242
  br i1 %243, label %260, label %244

244:                                              ; preds = %235
  %245 = and i32 %238, 1024
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %259

247:                                              ; preds = %244
  %248 = getelementptr inbounds i8, i8* %232, i64 24
  %249 = bitcast i8* %248 to %6**
  %250 = load %6*, %6** %249, align 8
  %251 = icmp eq %6* %250, null
  %252 = getelementptr inbounds %6, %6* %250, i64 0, i32 0, i32 4
  %253 = getelementptr inbounds i8, i8* %232, i64 16
  %254 = bitcast i8* %253 to %1**
  %255 = select i1 %251, %1** %254, %1** %252
  %256 = load %1*, %1** %255, align 8
  %257 = call i32 @zend_check_protected(%1* %256, %1* %241) #16
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %247, %244
  br label %260

260:                                              ; preds = %216, %210, %190, %145, %186, %213, %235, %247, %230, %259, %142
  %261 = phi %6* [ null, %142 ], [ null, %213 ], [ %233, %235 ], [ null, %259 ], [ %233, %247 ], [ %233, %230 ], [ null, %186 ], [ null, %145 ], [ null, %190 ], [ null, %210 ], [ null, %216 ]
  call void @zend_compile_call_common(%37* %0, %43* %15, %6* %261)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #16
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @244(%9* %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %9, %9* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 6
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %67, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %9, %9* %0, i64 -1
  %8 = getelementptr inbounds %9, %9* %0, i64 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 8
  br label %10

10:                                               ; preds = %29, %6
  %11 = phi %9* [ %7, %6 ], [ %30, %29 ]
  %12 = getelementptr inbounds %9, %9* %11, i64 0, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, %3
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %9, %9* %11, i64 0, i32 3, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, %9
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = getelementptr inbounds %9, %9* %11, i64 0, i32 6
  %21 = load i8, i8* %20, align 4
  switch i8 %21, label %67 [
    i8 72, label %35
    i8 55, label %35
  ]

22:                                               ; preds = %15, %10
  %23 = getelementptr inbounds %9, %9* %11, i64 0, i32 6
  %24 = load i8, i8* %23, align 4
  switch i8 %24, label %35 [
    i8 -119, label %25
    i8 58, label %29
    i8 0, label %29
    i8 104, label %29
    i8 101, label %29
    i8 102, label %29
    i8 103, label %29
    i8 105, label %29
  ]

25:                                               ; preds = %22
  %26 = getelementptr inbounds %9, %9* %11, i64 -1, i32 9
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, %3
  br i1 %28, label %31, label %35

29:                                               ; preds = %22, %22, %22, %22, %22, %22, %22
  %30 = getelementptr inbounds %9, %9* %11, i64 -1
  br label %10

31:                                               ; preds = %25
  %32 = getelementptr inbounds %9, %9* %11, i64 -1, i32 3, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, %9
  br i1 %34, label %67, label %35

35:                                               ; preds = %22, %19, %19, %31, %25
  %36 = getelementptr inbounds %9, %9* %0, i64 0, i32 6
  %37 = load i8, i8* %36, align 4
  switch i8 %37, label %66 [
    i8 -119, label %38
    i8 113, label %67
    i8 68, label %67
    i8 -75, label %67
    i8 -112, label %67
    i8 -102, label %67
    i8 -101, label %67
    i8 -110, label %67
    i8 -93, label %67
    i8 48, label %67
    i8 -69, label %67
    i8 -68, label %67
    i8 78, label %67
    i8 126, label %67
    i8 127, label %67
    i8 55, label %67
    i8 56, label %67
    i8 58, label %67
    i8 98, label %67
    i8 124, label %67
    i8 -74, label %67
  ]

38:                                               ; preds = %35
  %39 = getelementptr inbounds %9, %9* %0, i64 -2
  br label %40

40:                                               ; preds = %59, %38
  %41 = phi %9* [ %39, %38 ], [ %60, %59 ]
  %42 = getelementptr inbounds %9, %9* %41, i64 0, i32 9
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, %3
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = getelementptr inbounds %9, %9* %41, i64 0, i32 3, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, %9
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = getelementptr inbounds %9, %9* %41, i64 0, i32 6
  %51 = load i8, i8* %50, align 4
  switch i8 %51, label %67 [
    i8 72, label %65
    i8 55, label %65
  ]

52:                                               ; preds = %45, %40
  %53 = getelementptr inbounds %9, %9* %41, i64 0, i32 6
  %54 = load i8, i8* %53, align 4
  switch i8 %54, label %65 [
    i8 -119, label %55
    i8 58, label %59
    i8 0, label %59
    i8 104, label %59
    i8 101, label %59
    i8 102, label %59
    i8 103, label %59
    i8 105, label %59
  ]

55:                                               ; preds = %52
  %56 = getelementptr inbounds %9, %9* %41, i64 -1, i32 9
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, %3
  br i1 %58, label %61, label %65

59:                                               ; preds = %52, %52, %52, %52, %52, %52, %52
  %60 = getelementptr inbounds %9, %9* %41, i64 -1
  br label %40

61:                                               ; preds = %55
  %62 = getelementptr inbounds %9, %9* %41, i64 -1, i32 3, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, %9
  br i1 %64, label %67, label %65

65:                                               ; preds = %52, %49, %49, %61, %55
  tail call fastcc void @258(%9* nonnull %7, i8 zeroext %3, i32 %9)
  br label %67

66:                                               ; preds = %35
  tail call fastcc void @258(%9* nonnull %0, i8 zeroext %3, i32 %9)
  br label %67

67:                                               ; preds = %49, %19, %31, %61, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %35, %1, %65, %66
  %68 = getelementptr inbounds %9, %9* %0, i64 0, i32 8
  %69 = load i8, i8* %68, align 2
  %70 = and i8 %69, 6
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %133, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %9, %9* %0, i64 -1
  %74 = getelementptr inbounds %9, %9* %0, i64 0, i32 2, i32 0
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %95, %72
  %77 = phi %9* [ %73, %72 ], [ %96, %95 ]
  %78 = getelementptr inbounds %9, %9* %77, i64 0, i32 9
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, %69
  br i1 %80, label %81, label %88

81:                                               ; preds = %76
  %82 = getelementptr inbounds %9, %9* %77, i64 0, i32 3, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, %75
  br i1 %84, label %85, label %88

85:                                               ; preds = %81
  %86 = getelementptr inbounds %9, %9* %77, i64 0, i32 6
  %87 = load i8, i8* %86, align 4
  switch i8 %87, label %133 [
    i8 72, label %101
    i8 55, label %101
  ]

88:                                               ; preds = %81, %76
  %89 = getelementptr inbounds %9, %9* %77, i64 0, i32 6
  %90 = load i8, i8* %89, align 4
  switch i8 %90, label %101 [
    i8 -119, label %91
    i8 58, label %95
    i8 0, label %95
    i8 104, label %95
    i8 101, label %95
    i8 102, label %95
    i8 103, label %95
    i8 105, label %95
  ]

91:                                               ; preds = %88
  %92 = getelementptr inbounds %9, %9* %77, i64 -1, i32 9
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, %69
  br i1 %94, label %97, label %101

95:                                               ; preds = %88, %88, %88, %88, %88, %88, %88
  %96 = getelementptr inbounds %9, %9* %77, i64 -1
  br label %76

97:                                               ; preds = %91
  %98 = getelementptr inbounds %9, %9* %77, i64 -1, i32 3, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, %75
  br i1 %100, label %133, label %101

101:                                              ; preds = %88, %85, %85, %97, %91
  %102 = getelementptr inbounds %9, %9* %0, i64 0, i32 6
  %103 = load i8, i8* %102, align 4
  switch i8 %103, label %132 [
    i8 -119, label %104
    i8 -83, label %133
    i8 -82, label %133
    i8 -81, label %133
    i8 -80, label %133
    i8 -79, label %133
    i8 -78, label %133
    i8 -77, label %133
    i8 -76, label %133
    i8 -118, label %133
  ]

104:                                              ; preds = %101
  %105 = getelementptr inbounds %9, %9* %0, i64 -2
  br label %106

106:                                              ; preds = %125, %104
  %107 = phi %9* [ %105, %104 ], [ %126, %125 ]
  %108 = getelementptr inbounds %9, %9* %107, i64 0, i32 9
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, %69
  br i1 %110, label %111, label %118

111:                                              ; preds = %106
  %112 = getelementptr inbounds %9, %9* %107, i64 0, i32 3, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, %75
  br i1 %114, label %115, label %118

115:                                              ; preds = %111
  %116 = getelementptr inbounds %9, %9* %107, i64 0, i32 6
  %117 = load i8, i8* %116, align 4
  switch i8 %117, label %133 [
    i8 72, label %131
    i8 55, label %131
  ]

118:                                              ; preds = %111, %106
  %119 = getelementptr inbounds %9, %9* %107, i64 0, i32 6
  %120 = load i8, i8* %119, align 4
  switch i8 %120, label %131 [
    i8 -119, label %121
    i8 58, label %125
    i8 0, label %125
    i8 104, label %125
    i8 101, label %125
    i8 102, label %125
    i8 103, label %125
    i8 105, label %125
  ]

121:                                              ; preds = %118
  %122 = getelementptr inbounds %9, %9* %107, i64 -1, i32 9
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, %69
  br i1 %124, label %127, label %131

125:                                              ; preds = %118, %118, %118, %118, %118, %118, %118
  %126 = getelementptr inbounds %9, %9* %107, i64 -1
  br label %106

127:                                              ; preds = %121
  %128 = getelementptr inbounds %9, %9* %107, i64 -1, i32 3, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, %75
  br i1 %130, label %133, label %131

131:                                              ; preds = %118, %115, %115, %127, %121
  tail call fastcc void @258(%9* nonnull %73, i8 zeroext %69, i32 %75)
  br label %133

132:                                              ; preds = %101
  tail call fastcc void @258(%9* nonnull %0, i8 zeroext %69, i32 %75)
  br label %133

133:                                              ; preds = %115, %85, %97, %127, %101, %101, %101, %101, %101, %101, %101, %101, %101, %67, %131, %132
  ret void
}

declare dso_local i32 @zend_check_protected(%1*, %1*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_new(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %2, align 8
  %4 = alloca %2, align 8
  %5 = alloca %37, align 8
  %6 = alloca %37, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %10 = load %43*, %43** %9, align 8
  %11 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %43, %43* %8, i64 0, i32 0
  %14 = load i16, i16* %13, align 8
  %15 = icmp eq i16 %14, 69
  br i1 %15, label %16, label %37

16:                                               ; preds = %2
  %17 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %18 = tail call i32 @get_next_op_number(%7* %17) #16
  tail call void @zend_compile_class_decl(%43* %8)
  %19 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %20 = getelementptr inbounds %7, %7* %19, i64 0, i32 11
  %21 = load %9*, %9** %20, align 8
  %22 = zext i32 %18 to i64
  %23 = getelementptr inbounds %9, %9* %21, i64 %22
  %24 = getelementptr inbounds %9, %9* %21, i64 %22, i32 6
  %25 = load i8, i8* %24, align 4
  %26 = icmp eq i8 %25, 109
  %27 = getelementptr inbounds %9, %9* %23, i64 1
  %28 = select i1 %26, %9* %27, %9* %23
  %29 = getelementptr inbounds %9, %9* %28, i64 0, i32 9
  %30 = load i8, i8* %29, align 1
  store i8 %30, i8* %11, align 8
  %31 = getelementptr inbounds %9, %9* %28, i64 0, i32 3, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %34 = bitcast %38* %33 to i32*
  store i32 %32, i32* %34, align 8
  %35 = tail call i32 @get_next_op_number(%7* %19) #16
  %36 = getelementptr inbounds %9, %9* %28, i64 0, i32 4
  store i32 %35, i32* %36, align 4
  br label %38

37:                                               ; preds = %2
  call fastcc void @234(%37* nonnull %5, %43* %8, i32 512)
  br label %38

38:                                               ; preds = %37, %16
  %39 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %40 = call i32 @get_next_op_number(%7* %39) #16
  %41 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %42 = call %9* @get_next_op(%7* %41) #16
  %43 = getelementptr inbounds %9, %9* %42, i64 0, i32 6
  store i8 68, i8* %43, align 4
  %44 = getelementptr inbounds %9, %9* %42, i64 0, i32 7
  store i8 8, i8* %44, align 1
  %45 = getelementptr inbounds %9, %9* %42, i64 0, i32 8
  store i8 8, i8* %45, align 2
  call fastcc void @244(%9* nonnull %42) #16
  %46 = icmp eq %37* %0, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %9, %9* %42, i64 0, i32 9
  store i8 4, i8* %48, align 1
  %49 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %50 = getelementptr inbounds %7, %7* %49, i64 0, i32 13
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %50, align 4
  %53 = getelementptr inbounds %9, %9* %42, i64 0, i32 3, i32 0
  store i32 %51, i32* %53, align 8
  %54 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %54, align 8
  %55 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %56 = bitcast %38* %55 to i32*
  %57 = load i32, i32* %53, align 8
  store i32 %57, i32* %56, align 8
  br label %58

58:                                               ; preds = %38, %47
  %59 = load i8, i8* %11, align 8
  %60 = icmp eq i8 %59, 1
  br i1 %60, label %61, label %99

61:                                               ; preds = %58
  store i8 1, i8* %44, align 1
  %62 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %63 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 0
  %64 = bitcast %3* %63 to %32**
  %65 = load %32*, %32** %64, align 8
  %66 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #16
  %67 = bitcast %2* %4 to %32**
  store %32* %65, %32** %67, align 8
  %68 = getelementptr inbounds %32, %32* %65, i64 0, i32 0, i32 1
  %69 = bitcast %18* %68 to %64*
  %70 = getelementptr inbounds %64, %64* %69, i64 0, i32 1
  %71 = load i8, i8* %70, align 1
  %72 = and i8 %71, 2
  %73 = icmp eq i8 %72, 0
  %74 = select i1 %73, i32 5126, i32 6
  %75 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %74, i32* %75, align 8
  %76 = call i32 @zend_add_literal(%7* %62, %2* nonnull %4) #16
  %77 = load %32*, %32** %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #16
  %78 = call %32* @zend_string_tolower(%32* %77) #16
  %79 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #16
  %80 = bitcast %2* %3 to %32**
  store %32* %78, %32** %80, align 8
  %81 = getelementptr inbounds %32, %32* %78, i64 0, i32 0, i32 1
  %82 = bitcast %18* %81 to %64*
  %83 = getelementptr inbounds %64, %64* %82, i64 0, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = and i8 %84, 2
  %86 = icmp eq i8 %85, 0
  %87 = select i1 %86, i32 5126, i32 6
  %88 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 %87, i32* %88, align 8
  %89 = call i32 @zend_add_literal(%7* %62, %2* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #16
  %90 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %91 = getelementptr inbounds %7, %7* %90, i64 0, i32 27
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %7, %7* %90, i64 0, i32 26
  %94 = load %2*, %2** %93, align 8
  %95 = zext i32 %76 to i64
  %96 = getelementptr inbounds %2, %2* %94, i64 %95, i32 2, i32 0
  store i32 %92, i32* %96, align 4
  %97 = load i32, i32* %91, align 8
  %98 = add i32 %97, 8
  store i32 %98, i32* %91, align 8
  br label %103

99:                                               ; preds = %58
  store i8 %59, i8* %44, align 1
  %100 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %101 = bitcast %38* %100 to i32*
  %102 = load i32, i32* %101, align 8
  br label %103

103:                                              ; preds = %99, %61
  %104 = phi i32 [ %102, %99 ], [ %76, %61 ]
  %105 = getelementptr inbounds %9, %9* %42, i64 0, i32 1, i32 0
  store i32 %104, i32* %105, align 8
  call void @zend_compile_call_common(%37* nonnull %6, %43* %10, %6* null)
  call void @zend_do_free(%37* nonnull %6)
  %106 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %107 = getelementptr inbounds %7, %7* %106, i64 0, i32 11
  %108 = load %9*, %9** %107, align 8
  %109 = zext i32 %40 to i64
  %110 = call i32 @get_next_op_number(%7* %106) #16
  %111 = getelementptr inbounds %9, %9* %108, i64 %109, i32 2, i32 0
  store i32 %110, i32* %111, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_class_decl(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = alloca %2, align 8
  %4 = alloca %37, align 8
  %5 = alloca %2, align 8
  %6 = alloca %2, align 8
  %7 = alloca %2, align 8
  %8 = alloca %2, align 8
  %9 = alloca %2, align 8
  %10 = alloca [32 x i8], align 16
  %11 = alloca %2, align 8
  %12 = alloca %37, align 8
  %13 = alloca %37, align 8
  %14 = alloca %2, align 8
  %15 = alloca %2, align 8
  %16 = bitcast %43* %0 to %70*
  %17 = getelementptr inbounds %43, %43* %0, i64 2, i32 3, i64 0
  %18 = load %43*, %43** %17, align 8
  %19 = getelementptr inbounds %43, %43* %0, i64 2, i32 3, i64 1
  %20 = load %43*, %43** %19, align 8
  %21 = getelementptr inbounds %43, %43* %0, i64 2, i32 3, i64 2
  %22 = load %43*, %43** %21, align 8
  %23 = load %44*, %44** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 23), align 8
  %24 = getelementptr inbounds %44, %44* %23, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %44, %44* %23, i64 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = ptrtoint i8* %25 to i64
  %30 = sub i64 %28, %29
  %31 = icmp ult i64 %30, 504
  br i1 %31, label %34, label %32

32:                                               ; preds = %1
  %33 = getelementptr inbounds i8, i8* %25, i64 504
  store i8* %33, i8** %24, align 8
  br label %48

34:                                               ; preds = %1
  %35 = ptrtoint %44* %23 to i64
  %36 = sub i64 %28, %35
  %37 = icmp ugt i64 %36, 528
  %38 = select i1 %37, i64 %36, i64 528
  %39 = tail call noalias i8* @_emalloc(i64 %38) #17
  %40 = getelementptr inbounds i8, i8* %39, i64 24
  %41 = getelementptr inbounds i8, i8* %39, i64 528
  %42 = bitcast i8* %39 to i8**
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 %38
  %44 = getelementptr inbounds i8, i8* %39, i64 8
  %45 = bitcast i8* %44 to i8**
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %39, i64 16
  %47 = bitcast i8* %46 to %44**
  store %44* %23, %44** %47, align 8
  store i8* %39, i8** bitcast (%44** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 23) to i8**), align 8
  br label %48

48:                                               ; preds = %32, %34
  %49 = phi i8* [ %25, %32 ], [ %40, %34 ]
  %50 = bitcast i8* %49 to %1*
  %51 = getelementptr inbounds %37, %37* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #16
  %52 = load i64, i64* bitcast (%1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1) to i64*), align 8
  %53 = getelementptr inbounds %37, %37* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 8 getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 1, i32 0), i64 24, i1 false)
  %54 = getelementptr inbounds %70, %70* %16, i64 0, i32 4
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 256
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %146

58:                                               ; preds = %48
  %59 = getelementptr inbounds %43, %43* %0, i64 2
  %60 = bitcast %43* %59 to %32**
  %61 = load %32*, %32** %60, align 8
  %62 = icmp eq i64 %52, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %58
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @144, i64 0, i64 0)) #15
  unreachable

64:                                               ; preds = %58
  %65 = tail call fastcc zeroext i8 @230(%32* %61) #16
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %32, %32* %61, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @0, i64 0, i64 0), i8* nonnull %68) #15
  unreachable

69:                                               ; preds = %64
  %70 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %71 = icmp eq %32* %70, null
  br i1 %71, label %96, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %32, %32* %70, i64 0, i32 3, i64 0
  %74 = getelementptr inbounds %32, %32* %70, i64 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %32, %32* %61, i64 0, i32 3, i64 0
  %77 = getelementptr inbounds %32, %32* %61, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %75, 1
  %80 = add i64 %79, %78
  %81 = add i64 %80, 32
  %82 = and i64 %81, -8
  %83 = tail call noalias i8* @_emalloc(i64 %82) #17
  %84 = bitcast i8* %83 to %32*
  %85 = bitcast i8* %83 to i32*
  store i32 1, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %83, i64 4
  %87 = bitcast i8* %86 to i32*
  store i32 6, i32* %87, align 4
  %88 = getelementptr inbounds i8, i8* %83, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = getelementptr inbounds i8, i8* %83, i64 16
  %91 = bitcast i8* %90 to i64*
  store i64 %80, i64* %91, align 8
  %92 = getelementptr inbounds i8, i8* %83, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* nonnull align 1 %73, i64 %75, i1 false) #16
  %93 = getelementptr inbounds %32, %32* %84, i64 0, i32 3, i64 %75
  store i8 92, i8* %93, align 1
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %94, i8* nonnull align 1 %76, i64 %78, i1 false) #16
  %95 = getelementptr inbounds %32, %32* %84, i64 0, i32 3, i64 %80
  store i8 0, i8* %95, align 1
  br label %107

96:                                               ; preds = %69
  %97 = getelementptr inbounds %32, %32* %61, i64 0, i32 0, i32 1
  %98 = bitcast %18* %97 to %64*
  %99 = getelementptr inbounds %64, %64* %98, i64 0, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = and i8 %100, 2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %96
  %104 = getelementptr inbounds %32, %32* %61, i64 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 8
  br label %107

107:                                              ; preds = %72, %96, %103
  %108 = phi %32* [ %84, %72 ], [ %61, %96 ], [ %61, %103 ]
  %109 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %110 = tail call %32* %109(%32* %108) #16
  %111 = tail call %32* @zend_string_tolower(%32* %110) #16
  %112 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5), align 8
  %113 = icmp eq %39* %112, null
  br i1 %113, label %134, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %32, %32* %61, i64 0, i32 3, i64 0
  %116 = getelementptr inbounds %32, %32* %61, i64 0, i32 2
  %117 = load i64, i64* %116, align 8
  %118 = tail call i8* @zend_hash_find_ptr_lc(%39* nonnull %112, i8* nonnull %115, i64 %117)
  %119 = icmp eq i8* %118, null
  br i1 %119, label %134, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %32, %32* %111, i64 0, i32 2
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds i8, i8* %118, i64 16
  %124 = bitcast i8* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %122, %125
  br i1 %126, label %127, label %132

127:                                              ; preds = %120
  %128 = getelementptr inbounds %32, %32* %111, i64 0, i32 3, i64 0
  %129 = getelementptr inbounds i8, i8* %118, i64 24
  %130 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %128, i64 %122, i8* nonnull %129, i64 %122) #16
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %127, %120
  %133 = getelementptr inbounds %32, %32* %110, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @145, i64 0, i64 0), i8* nonnull %133) #15
  unreachable

134:                                              ; preds = %114, %127, %107
  %135 = tail call %2* @zend_hash_find(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8), %32* %111) #16
  %136 = icmp eq %2* %135, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %134
  %138 = getelementptr inbounds %2, %2* %135, i64 0, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = or i64 %139, 1
  store i64 %140, i64* %138, align 8
  br label %177

141:                                              ; preds = %134
  %142 = bitcast %2* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #16
  %143 = getelementptr inbounds %2, %2* %11, i64 0, i32 0, i32 0
  store i64 1, i64* %143, align 8
  %144 = getelementptr inbounds %2, %2* %11, i64 0, i32 1, i32 0
  store i32 4, i32* %144, align 8
  %145 = call %2* @_zend_hash_add_new(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8), %32* %111, %2* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #16
  br label %177

146:                                              ; preds = %48
  %147 = getelementptr inbounds %43, %43* %0, i64 1
  %148 = bitcast %43* %147 to i8**
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150) #16
  %151 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %150, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @220, i64 0, i64 0), i8* %149) #16
  %152 = sext i32 %151 to i64
  %153 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %154 = getelementptr inbounds %7, %7* %153, i64 0, i32 20
  %155 = load %32*, %32** %154, align 8
  %156 = getelementptr inbounds %32, %32* %155, i64 0, i32 2
  %157 = load i64, i64* %156, align 8
  %158 = add nsw i64 %152, 16
  %159 = add i64 %158, %157
  %160 = add i64 %159, 32
  %161 = and i64 %160, -8
  %162 = tail call noalias i8* @_emalloc(i64 %161) #17
  %163 = bitcast i8* %162 to %32*
  %164 = bitcast i8* %162 to i32*
  store i32 1, i32* %164, align 8
  %165 = getelementptr inbounds i8, i8* %162, i64 4
  %166 = bitcast i8* %165 to i32*
  store i32 6, i32* %166, align 4
  %167 = getelementptr inbounds i8, i8* %162, i64 8
  %168 = bitcast i8* %167 to i64*
  store i64 0, i64* %168, align 8
  %169 = getelementptr inbounds i8, i8* %162, i64 16
  %170 = bitcast i8* %169 to i64*
  store i64 %159, i64* %170, align 8
  %171 = getelementptr inbounds i8, i8* %162, i64 24
  %172 = getelementptr inbounds %32, %32* %155, i64 0, i32 3, i64 0
  %173 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %171, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @221, i64 0, i64 0), i32 0, i8* nonnull %172, i8* nonnull %150) #16
  %174 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %175 = call %32* %174(%32* %163) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150) #16
  %176 = call %32* @zend_string_tolower(%32* %175) #16
  br label %177

177:                                              ; preds = %141, %137, %146
  %178 = phi %32* [ %176, %146 ], [ %111, %137 ], [ %111, %141 ]
  %179 = phi %32* [ %175, %146 ], [ %110, %137 ], [ %110, %141 ]
  %180 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %181 = call %32* %180(%32* %178) #16
  store i8 2, i8* %49, align 8
  %182 = getelementptr inbounds i8, i8* %49, i64 8
  %183 = bitcast i8* %182 to %32**
  store %32* %179, %32** %183, align 8
  call void @zend_initialize_class_data(%1* %50, i8 zeroext 1)
  %184 = load i32, i32* %54, align 4
  %185 = getelementptr inbounds i8, i8* %49, i64 28
  %186 = bitcast i8* %185 to i32*
  %187 = load i32, i32* %186, align 4
  %188 = or i32 %187, %184
  store i32 %188, i32* %186, align 4
  %189 = load i64, i64* bitcast (%32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 2) to i64*), align 8
  %190 = getelementptr inbounds i8, i8* %49, i64 480
  %191 = bitcast i8* %190 to i64*
  store i64 %189, i64* %191, align 8
  %192 = getelementptr inbounds %43, %43* %0, i64 0, i32 2
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds i8, i8* %49, i64 488
  %195 = bitcast i8* %194 to i32*
  store i32 %193, i32* %195, align 8
  %196 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %197 = bitcast [1 x %43*]* %196 to i32*
  %198 = load i32, i32* %197, align 8
  %199 = getelementptr inbounds i8, i8* %49, i64 492
  %200 = bitcast i8* %199 to i32*
  store i32 %198, i32* %200, align 4
  %201 = getelementptr inbounds %43, %43* %0, i64 1, i32 3
  %202 = bitcast [1 x %43*]* %201 to %32**
  %203 = load %32*, %32** %202, align 8
  %204 = icmp eq %32* %203, null
  br i1 %204, label %219, label %205

205:                                              ; preds = %177
  %206 = getelementptr inbounds %32, %32* %203, i64 0, i32 0, i32 1
  %207 = bitcast %18* %206 to %64*
  %208 = getelementptr inbounds %64, %64* %207, i64 0, i32 1
  %209 = load i8, i8* %208, align 1
  %210 = and i8 %209, 2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %216

212:                                              ; preds = %205
  %213 = getelementptr inbounds %32, %32* %203, i64 0, i32 0, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = add i32 %214, 1
  store i32 %215, i32* %213, align 8
  br label %216

216:                                              ; preds = %205, %212
  %217 = getelementptr inbounds i8, i8* %49, i64 496
  %218 = bitcast i8* %217 to %32**
  store %32* %203, %32** %218, align 8
  br label %219

219:                                              ; preds = %177, %216
  %220 = load i32, i32* %54, align 4
  %221 = and i32 %220, 256
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %228, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds i8, i8* %49, i64 424
  %225 = bitcast i8* %224 to i32 (%2*, i8**, i64*, %21*)**
  store i32 (%2*, i8**, i64*, %21*)* @zend_class_serialize_deny, i32 (%2*, i8**, i64*, %21*)** %225, align 8
  %226 = getelementptr inbounds i8, i8* %49, i64 432
  %227 = bitcast i8* %226 to i32 (%2*, %1*, i8*, i64, %22*)**
  store i32 (%2*, %1*, i8*, i64, %22*)* @zend_class_unserialize_deny, i32 (%2*, %1*, i8*, i64, %22*)** %227, align 8
  br label %228

228:                                              ; preds = %219, %223
  %229 = icmp ne %43* %18, null
  br i1 %229, label %230, label %433

230:                                              ; preds = %228
  %231 = getelementptr inbounds %43, %43* %18, i64 0, i32 0
  %232 = load i16, i16* %231, align 8
  %233 = icmp eq i16 %232, 64
  br i1 %233, label %237, label %234

234:                                              ; preds = %230
  %235 = getelementptr inbounds %43, %43* %18, i64 0, i32 3
  %236 = bitcast [1 x %43*]* %235 to %32**
  br label %267

237:                                              ; preds = %230
  %238 = getelementptr inbounds %43, %43* %18, i64 0, i32 1
  %239 = load i16, i16* %238, align 2
  %240 = icmp eq i16 %239, 0
  br i1 %240, label %271, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %43, %43* %18, i64 0, i32 3
  %243 = bitcast [1 x %43*]* %242 to %32**
  %244 = load %32*, %32** %243, align 8
  %245 = getelementptr inbounds %32, %32* %244, i64 0, i32 2
  %246 = load i64, i64* %245, align 8
  %247 = icmp eq i64 %246, 4
  br i1 %247, label %248, label %254

248:                                              ; preds = %241
  %249 = getelementptr inbounds %32, %32* %244, i64 0, i32 3, i64 0
  %250 = call i32 @zend_binary_strcasecmp(i8* nonnull %249, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %267, label %252

252:                                              ; preds = %248
  %253 = load i64, i64* %245, align 8
  br label %254

254:                                              ; preds = %252, %241
  %255 = phi i64 [ %253, %252 ], [ %246, %241 ]
  %256 = icmp eq i64 %255, 6
  br i1 %256, label %257, label %271

257:                                              ; preds = %254
  %258 = getelementptr inbounds %32, %32* %244, i64 0, i32 3, i64 0
  %259 = call i32 @zend_binary_strcasecmp(i8* nonnull %258, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %267, label %261

261:                                              ; preds = %257
  %262 = load i64, i64* %245, align 8
  %263 = icmp eq i64 %262, 6
  br i1 %263, label %264, label %271

264:                                              ; preds = %261
  %265 = call i32 @zend_binary_strcasecmp(i8* nonnull %258, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %271

267:                                              ; preds = %234, %248, %257, %264
  %268 = phi %32** [ %236, %234 ], [ %243, %248 ], [ %243, %257 ], [ %243, %264 ]
  %269 = load %32*, %32** %268, align 8
  %270 = getelementptr inbounds %32, %32* %269, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @0, i64 0, i64 0), i8* nonnull %270) #15
  unreachable

271:                                              ; preds = %254, %261, %264, %237
  %272 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #16
  call void @zend_compile_expr(%37* nonnull %4, %43* nonnull %18) #16
  %273 = load i8, i8* %272, align 8
  %274 = icmp eq i8 %273, 1
  br i1 %274, label %275, label %403

275:                                              ; preds = %271
  %276 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1
  %277 = bitcast %4* %276 to i8*
  %278 = load i8, i8* %277, align 8
  %279 = icmp eq i8 %278, 6
  br i1 %279, label %281, label %280

280:                                              ; preds = %275
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

281:                                              ; preds = %275
  %282 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %283 = bitcast %2* %282 to %32**
  %284 = load %32*, %32** %283, align 8
  %285 = getelementptr inbounds %32, %32* %284, i64 0, i32 2
  %286 = load i64, i64* %285, align 8
  %287 = icmp eq i64 %286, 4
  br i1 %287, label %288, label %294

288:                                              ; preds = %281
  %289 = getelementptr inbounds %32, %32* %284, i64 0, i32 3, i64 0
  %290 = call i32 @zend_binary_strcasecmp(i8* nonnull %289, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %308, label %292

292:                                              ; preds = %288
  %293 = load i64, i64* %285, align 8
  br label %294

294:                                              ; preds = %292, %281
  %295 = phi i64 [ %293, %292 ], [ %286, %281 ]
  %296 = icmp eq i64 %295, 6
  br i1 %296, label %297, label %307

297:                                              ; preds = %294
  %298 = getelementptr inbounds %32, %32* %284, i64 0, i32 3, i64 0
  %299 = call i32 @zend_binary_strcasecmp(i8* nonnull %298, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %308, label %301

301:                                              ; preds = %297
  %302 = load i64, i64* %285, align 8
  %303 = icmp eq i64 %302, 6
  br i1 %303, label %304, label %307

304:                                              ; preds = %301
  %305 = call i32 @zend_binary_strcasecmp(i8* nonnull %298, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %308, label %307

307:                                              ; preds = %304, %301, %294
  br label %308

308:                                              ; preds = %307, %304, %297, %288
  %309 = phi i32 [ 0, %307 ], [ 1, %288 ], [ 2, %297 ], [ 3, %304 ]
  %310 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %311 = call %9* @get_next_op(%7* %310) #16
  %312 = getelementptr inbounds %9, %9* %311, i64 0, i32 6
  store i8 109, i8* %312, align 4
  %313 = getelementptr inbounds %9, %9* %311, i64 0, i32 7
  store i8 8, i8* %313, align 1
  %314 = getelementptr inbounds %9, %9* %311, i64 0, i32 8
  store i8 8, i8* %314, align 2
  call fastcc void @244(%9* nonnull %311) #16
  %315 = getelementptr inbounds %9, %9* %311, i64 0, i32 9
  store i8 4, i8* %315, align 1
  %316 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %317 = getelementptr inbounds %7, %7* %316, i64 0, i32 13
  %318 = load i32, i32* %317, align 4
  %319 = add i32 %318, 1
  store i32 %319, i32* %317, align 4
  %320 = getelementptr inbounds %9, %9* %311, i64 0, i32 3, i32 0
  store i32 %318, i32* %320, align 8
  %321 = getelementptr inbounds %9, %9* %311, i64 0, i32 4
  store i32 %309, i32* %321, align 4
  %322 = icmp eq i32 %309, 0
  br i1 %322, label %323, label %367

323:                                              ; preds = %308
  %324 = load i16, i16* %231, align 8
  %325 = icmp eq i16 %324, 64
  br i1 %325, label %326, label %329

326:                                              ; preds = %323
  %327 = load i16, i16* %238, align 2
  %328 = zext i16 %327 to i32
  br label %329

329:                                              ; preds = %326, %323
  %330 = phi i32 [ %328, %326 ], [ 0, %323 ]
  store i8 1, i8* %314, align 2
  %331 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %332 = call %32* @zend_resolve_class_name(%32* %284, i32 %330) #16
  %333 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %333) #16
  %334 = bitcast %2* %3 to %32**
  store %32* %332, %32** %334, align 8
  %335 = getelementptr inbounds %32, %32* %332, i64 0, i32 0, i32 1
  %336 = bitcast %18* %335 to %64*
  %337 = getelementptr inbounds %64, %64* %336, i64 0, i32 1
  %338 = load i8, i8* %337, align 1
  %339 = and i8 %338, 2
  %340 = icmp eq i8 %339, 0
  %341 = select i1 %340, i32 5126, i32 6
  %342 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 %341, i32* %342, align 8
  %343 = call i32 @zend_add_literal(%7* %331, %2* nonnull %3) #16
  %344 = load %32*, %32** %334, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %333) #16
  %345 = call %32* @zend_string_tolower(%32* %344) #16
  %346 = bitcast %2* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %346) #16
  %347 = bitcast %2* %2 to %32**
  store %32* %345, %32** %347, align 8
  %348 = getelementptr inbounds %32, %32* %345, i64 0, i32 0, i32 1
  %349 = bitcast %18* %348 to %64*
  %350 = getelementptr inbounds %64, %64* %349, i64 0, i32 1
  %351 = load i8, i8* %350, align 1
  %352 = and i8 %351, 2
  %353 = icmp eq i8 %352, 0
  %354 = select i1 %353, i32 5126, i32 6
  %355 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  store i32 %354, i32* %355, align 8
  %356 = call i32 @zend_add_literal(%7* %331, %2* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %346) #16
  %357 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %358 = getelementptr inbounds %7, %7* %357, i64 0, i32 27
  %359 = load i32, i32* %358, align 8
  %360 = getelementptr inbounds %7, %7* %357, i64 0, i32 26
  %361 = load %2*, %2** %360, align 8
  %362 = zext i32 %343 to i64
  %363 = getelementptr inbounds %2, %2* %361, i64 %362, i32 2, i32 0
  store i32 %359, i32* %363, align 4
  %364 = load i32, i32* %358, align 8
  %365 = add i32 %364, 8
  store i32 %365, i32* %358, align 8
  %366 = getelementptr inbounds %9, %9* %311, i64 0, i32 2, i32 0
  store i32 %343, i32* %366, align 4
  br label %385

367:                                              ; preds = %308
  %368 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %369 = icmp eq %1* %368, null
  br i1 %369, label %370, label %385

370:                                              ; preds = %367
  %371 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %372 = getelementptr inbounds %7, %7* %371, i64 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = and i32 %373, 1048576
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %385

376:                                              ; preds = %370
  %377 = getelementptr inbounds %7, %7* %371, i64 0, i32 3
  %378 = load %32*, %32** %377, align 8
  %379 = icmp eq %32* %378, null
  br i1 %379, label %385, label %380

380:                                              ; preds = %376
  %381 = icmp eq i32 %309, 1
  %382 = icmp eq i32 %309, 2
  %383 = select i1 %382, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0)
  %384 = select i1 %381, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i8* %383
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @228, i64 0, i64 0), i8* %384) #15
  unreachable

385:                                              ; preds = %367, %370, %376, %329
  %386 = getelementptr inbounds %32, %32* %284, i64 0, i32 0, i32 1
  %387 = bitcast %18* %386 to %64*
  %388 = getelementptr inbounds %64, %64* %387, i64 0, i32 1
  %389 = load i8, i8* %388, align 1
  %390 = and i8 %389, 2
  %391 = icmp eq i8 %390, 0
  br i1 %391, label %392, label %429

392:                                              ; preds = %385
  %393 = getelementptr inbounds %32, %32* %284, i64 0, i32 0, i32 0
  %394 = load i32, i32* %393, align 8
  %395 = add i32 %394, -1
  store i32 %395, i32* %393, align 8
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %429

397:                                              ; preds = %392
  %398 = and i8 %389, 1
  %399 = icmp eq i8 %398, 0
  %400 = bitcast %32* %284 to i8*
  br i1 %399, label %402, label %401

401:                                              ; preds = %397
  call void @free(i8* %400) #16
  br label %429

402:                                              ; preds = %397
  call void @_efree(i8* %400) #16
  br label %429

403:                                              ; preds = %271
  %404 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %405 = call %9* @get_next_op(%7* %404) #16
  %406 = getelementptr inbounds %9, %9* %405, i64 0, i32 6
  store i8 109, i8* %406, align 4
  %407 = getelementptr inbounds %9, %9* %405, i64 0, i32 7
  store i8 8, i8* %407, align 1
  %408 = load i8, i8* %272, align 8
  %409 = getelementptr inbounds %9, %9* %405, i64 0, i32 8
  store i8 %408, i8* %409, align 2
  %410 = icmp eq i8 %408, 1
  br i1 %410, label %411, label %415

411:                                              ; preds = %403
  %412 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %413 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %414 = call i32 @zend_add_literal(%7* %412, %2* nonnull %413) #16
  br label %419

415:                                              ; preds = %403
  %416 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %417 = bitcast %38* %416 to i32*
  %418 = load i32, i32* %417, align 8
  br label %419

419:                                              ; preds = %415, %411
  %420 = phi i32 [ %418, %415 ], [ %414, %411 ]
  %421 = getelementptr inbounds %9, %9* %405, i64 0, i32 2, i32 0
  store i32 %420, i32* %421, align 4
  call fastcc void @244(%9* nonnull %405) #16
  %422 = getelementptr inbounds %9, %9* %405, i64 0, i32 9
  store i8 4, i8* %422, align 1
  %423 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %424 = getelementptr inbounds %7, %7* %423, i64 0, i32 13
  %425 = load i32, i32* %424, align 4
  %426 = add i32 %425, 1
  store i32 %426, i32* %424, align 4
  %427 = getelementptr inbounds %9, %9* %405, i64 0, i32 3, i32 0
  store i32 %425, i32* %427, align 8
  %428 = getelementptr inbounds %9, %9* %405, i64 0, i32 4
  store i32 0, i32* %428, align 4
  br label %429

429:                                              ; preds = %385, %392, %401, %402, %419
  %430 = phi i32 [ %318, %385 ], [ %318, %392 ], [ %318, %401 ], [ %318, %402 ], [ %425, %419 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %272) #16
  %431 = load i32, i32* %186, align 4
  %432 = or i32 %431, 1024
  store i32 %432, i32* %186, align 4
  br label %433

433:                                              ; preds = %429, %228
  %434 = phi i32 [ %430, %429 ], [ undef, %228 ]
  %435 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %436 = call %9* @get_next_op(%7* %435) #16
  %437 = getelementptr inbounds %9, %9* %436, i64 0, i32 9
  store i8 4, i8* %437, align 1
  %438 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %439 = getelementptr inbounds %7, %7* %438, i64 0, i32 13
  %440 = load i32, i32* %439, align 4
  %441 = add i32 %440, 1
  store i32 %441, i32* %439, align 4
  %442 = getelementptr inbounds %9, %9* %436, i64 0, i32 3, i32 0
  store i32 %440, i32* %442, align 8
  store i8 4, i8* %51, align 8
  %443 = getelementptr inbounds %37, %37* %12, i64 0, i32 2
  %444 = bitcast %38* %443 to i32*
  store i32 %440, i32* %444, align 8
  store i8 4, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 1, i32 0), align 8
  %445 = load i32, i32* %442, align 8
  store i32 %445, i32* bitcast (%38* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 1, i32 2) to i32*), align 8
  %446 = getelementptr inbounds %9, %9* %436, i64 0, i32 7
  store i8 1, i8* %446, align 1
  %447 = bitcast %2* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %447) #16
  %448 = bitcast %2* %14 to %32**
  store %32* %181, %32** %448, align 8
  %449 = getelementptr inbounds %32, %32* %181, i64 0, i32 0, i32 1
  %450 = bitcast %18* %449 to %64*
  %451 = getelementptr inbounds %64, %64* %450, i64 0, i32 1
  %452 = load i8, i8* %451, align 1
  %453 = and i8 %452, 2
  %454 = icmp eq i8 %453, 0
  %455 = select i1 %454, i32 5126, i32 6
  %456 = getelementptr inbounds %2, %2* %14, i64 0, i32 1, i32 0
  store i32 %455, i32* %456, align 8
  %457 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %458 = call i32 @zend_add_literal(%7* %457, %2* nonnull %14)
  %459 = getelementptr inbounds %9, %9* %436, i64 0, i32 1, i32 0
  store i32 %458, i32* %459, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %447) #16
  %460 = load i32, i32* %54, align 4
  %461 = and i32 %460, 256
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %9, %9* %436, i64 0, i32 6
  br i1 %462, label %612, label %464

464:                                              ; preds = %433
  br i1 %229, label %465, label %468

465:                                              ; preds = %464
  store i8 -84, i8* %463, align 4
  %466 = getelementptr inbounds %9, %9* %436, i64 0, i32 8
  store i8 4, i8* %466, align 2
  %467 = getelementptr inbounds %9, %9* %436, i64 0, i32 2, i32 0
  store i32 %434, i32* %467, align 4
  br label %469

468:                                              ; preds = %464
  store i8 -85, i8* %463, align 4
  br label %469

469:                                              ; preds = %465, %468
  %470 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), align 8
  %471 = call zeroext i8 @zend_hash_exists(%39* %470, %32* nonnull %181) #16
  %472 = icmp eq i8 %471, 0
  br i1 %472, label %473, label %479

473:                                              ; preds = %469
  %474 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), align 8
  %475 = bitcast %2* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %475) #16
  %476 = bitcast %2* %9 to i8**
  store i8* %49, i8** %476, align 8
  %477 = getelementptr inbounds %2, %2* %9, i64 0, i32 1, i32 0
  store i32 17, i32* %477, align 8
  %478 = call %2* @_zend_hash_add(%39* %474, %32* nonnull %181, %2* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %475) #16
  br label %670

479:                                              ; preds = %469
  %480 = bitcast %2* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %480) #16
  %481 = bitcast %2* %15 to i8**
  store i8* %49, i8** %481, align 8
  %482 = getelementptr inbounds %2, %2* %15, i64 0, i32 1, i32 0
  store i32 17, i32* %482, align 8
  call void @destroy_zend_class(%2* nonnull %15) #16
  %483 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), align 8
  %484 = call %2* @zend_hash_find(%39* %483, %32* nonnull %181) #16
  %485 = bitcast %2* %484 to i8**
  %486 = load i8*, i8** %485, align 8
  %487 = getelementptr inbounds i8, i8* %486, i64 28
  %488 = bitcast i8* %487 to i32*
  %489 = load i32, i32* %488, align 4
  %490 = and i32 %489, 4194304
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %509, label %492

492:                                              ; preds = %479
  %493 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %494 = call %9* @get_next_op(%7* %493) #16
  %495 = getelementptr inbounds %9, %9* %494, i64 0, i32 6
  store i8 -101, i8* %495, align 4
  %496 = load i8, i8* %51, align 8
  %497 = getelementptr inbounds %9, %9* %494, i64 0, i32 7
  store i8 %496, i8* %497, align 1
  %498 = icmp eq i8 %496, 1
  br i1 %498, label %499, label %503

499:                                              ; preds = %492
  %500 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %501 = getelementptr inbounds %37, %37* %12, i64 0, i32 2, i32 0
  %502 = call i32 @zend_add_literal(%7* %500, %2* nonnull %501) #16
  br label %505

503:                                              ; preds = %492
  %504 = load i32, i32* %444, align 8
  br label %505

505:                                              ; preds = %499, %503
  %506 = phi i32 [ %502, %499 ], [ %504, %503 ]
  %507 = getelementptr inbounds %9, %9* %494, i64 0, i32 1, i32 0
  store i32 %506, i32* %507, align 8
  %508 = getelementptr inbounds %9, %9* %494, i64 0, i32 8
  store i8 8, i8* %508, align 2
  call fastcc void @244(%9* nonnull %494) #16
  br label %509

509:                                              ; preds = %479, %505
  %510 = icmp eq %43* %20, null
  br i1 %510, label %611, label %511

511:                                              ; preds = %509
  %512 = bitcast %43* %20 to %69*
  %513 = getelementptr inbounds %43, %43* %20, i64 0, i32 3
  %514 = bitcast [1 x %43*]* %513 to i32*
  %515 = load i32, i32* %514, align 8
  %516 = icmp eq i32 %515, 0
  %517 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %518 = call %9* @get_next_op(%7* %517) #16
  %519 = getelementptr inbounds %9, %9* %518, i64 0, i32 6
  br i1 %516, label %595, label %520

520:                                              ; preds = %511
  %521 = getelementptr inbounds %37, %37* %12, i64 0, i32 2, i32 0
  %522 = bitcast %2* %8 to i8*
  %523 = bitcast %2* %8 to %32**
  %524 = getelementptr inbounds %2, %2* %8, i64 0, i32 1, i32 0
  %525 = bitcast %2* %7 to i8*
  %526 = bitcast %2* %7 to %32**
  %527 = getelementptr inbounds %2, %2* %7, i64 0, i32 1, i32 0
  br label %528

528:                                              ; preds = %520, %554
  %529 = phi i8* [ %519, %520 ], [ %594, %554 ]
  %530 = phi %9* [ %518, %520 ], [ %593, %554 ]
  %531 = phi i32 [ 0, %520 ], [ %589, %554 ]
  store i8 -112, i8* %529, align 4
  %532 = load i8, i8* %51, align 8
  %533 = getelementptr inbounds %9, %9* %530, i64 0, i32 7
  store i8 %532, i8* %533, align 1
  %534 = icmp eq i8 %532, 1
  br i1 %534, label %535, label %538

535:                                              ; preds = %528
  %536 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %537 = call i32 @zend_add_literal(%7* %536, %2* nonnull %521) #16
  br label %540

538:                                              ; preds = %528
  %539 = load i32, i32* %444, align 8
  br label %540

540:                                              ; preds = %535, %538
  %541 = phi i32 [ %537, %535 ], [ %539, %538 ]
  %542 = getelementptr inbounds %9, %9* %530, i64 0, i32 1, i32 0
  store i32 %541, i32* %542, align 8
  %543 = getelementptr inbounds %9, %9* %530, i64 0, i32 8
  store i8 8, i8* %543, align 2
  call fastcc void @244(%9* nonnull %530) #16
  store i8 1, i8* %543, align 2
  %544 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %545 = zext i32 %531 to i64
  %546 = getelementptr inbounds %69, %69* %512, i64 0, i32 4, i64 %545
  %547 = load %43*, %43** %546, align 8
  %548 = getelementptr inbounds %43, %43* %547, i64 0, i32 3
  %549 = getelementptr inbounds [1 x %43*], [1 x %43*]* %548, i64 1
  %550 = bitcast [1 x %43*]* %549 to i8*
  %551 = load i8, i8* %550, align 8
  %552 = icmp eq i8 %551, 6
  br i1 %552, label %554, label %553

553:                                              ; preds = %540
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

554:                                              ; preds = %540
  %555 = bitcast [1 x %43*]* %548 to %32**
  %556 = load %32*, %32** %555, align 8
  %557 = getelementptr inbounds %43, %43* %547, i64 0, i32 1
  %558 = load i16, i16* %557, align 2
  %559 = zext i16 %558 to i32
  %560 = call %32* @zend_resolve_class_name(%32* %556, i32 %559) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %522) #16
  store %32* %560, %32** %523, align 8
  %561 = getelementptr inbounds %32, %32* %560, i64 0, i32 0, i32 1
  %562 = bitcast %18* %561 to %64*
  %563 = getelementptr inbounds %64, %64* %562, i64 0, i32 1
  %564 = load i8, i8* %563, align 1
  %565 = and i8 %564, 2
  %566 = icmp eq i8 %565, 0
  %567 = select i1 %566, i32 5126, i32 6
  store i32 %567, i32* %524, align 8
  %568 = call i32 @zend_add_literal(%7* %544, %2* nonnull %8) #16
  %569 = load %32*, %32** %523, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %522) #16
  %570 = call %32* @zend_string_tolower(%32* %569) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %525) #16
  store %32* %570, %32** %526, align 8
  %571 = getelementptr inbounds %32, %32* %570, i64 0, i32 0, i32 1
  %572 = bitcast %18* %571 to %64*
  %573 = getelementptr inbounds %64, %64* %572, i64 0, i32 1
  %574 = load i8, i8* %573, align 1
  %575 = and i8 %574, 2
  %576 = icmp eq i8 %575, 0
  %577 = select i1 %576, i32 5126, i32 6
  store i32 %577, i32* %527, align 8
  %578 = call i32 @zend_add_literal(%7* %544, %2* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %525) #16
  %579 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %580 = getelementptr inbounds %7, %7* %579, i64 0, i32 27
  %581 = load i32, i32* %580, align 8
  %582 = getelementptr inbounds %7, %7* %579, i64 0, i32 26
  %583 = load %2*, %2** %582, align 8
  %584 = zext i32 %568 to i64
  %585 = getelementptr inbounds %2, %2* %583, i64 %584, i32 2, i32 0
  store i32 %581, i32* %585, align 4
  %586 = load i32, i32* %580, align 8
  %587 = add i32 %586, 8
  store i32 %587, i32* %580, align 8
  %588 = getelementptr inbounds %9, %9* %530, i64 0, i32 2, i32 0
  store i32 %568, i32* %588, align 4
  %589 = add i32 %531, 1
  %590 = load i32, i32* %514, align 8
  %591 = icmp ult i32 %589, %590
  %592 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %593 = call %9* @get_next_op(%7* %592) #16
  %594 = getelementptr inbounds %9, %9* %593, i64 0, i32 6
  br i1 %591, label %528, label %595

595:                                              ; preds = %554, %511
  %596 = phi %9* [ %518, %511 ], [ %593, %554 ]
  %597 = phi i8* [ %519, %511 ], [ %594, %554 ]
  store i8 -110, i8* %597, align 4
  %598 = load i8, i8* %51, align 8
  %599 = getelementptr inbounds %9, %9* %596, i64 0, i32 7
  store i8 %598, i8* %599, align 1
  %600 = icmp eq i8 %598, 1
  br i1 %600, label %601, label %605

601:                                              ; preds = %595
  %602 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %603 = getelementptr inbounds %37, %37* %12, i64 0, i32 2, i32 0
  %604 = call i32 @zend_add_literal(%7* %602, %2* nonnull %603) #16
  br label %607

605:                                              ; preds = %595
  %606 = load i32, i32* %444, align 8
  br label %607

607:                                              ; preds = %601, %605
  %608 = phi i32 [ %604, %601 ], [ %606, %605 ]
  %609 = getelementptr inbounds %9, %9* %596, i64 0, i32 1, i32 0
  store i32 %608, i32* %609, align 8
  %610 = getelementptr inbounds %9, %9* %596, i64 0, i32 8
  store i8 8, i8* %610, align 2
  call fastcc void @244(%9* nonnull %596) #16
  br label %611

611:                                              ; preds = %509, %607
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %480) #16
  br label %824

612:                                              ; preds = %433
  br i1 %229, label %613, label %616

613:                                              ; preds = %612
  store i8 -116, i8* %463, align 4
  %614 = getelementptr inbounds %9, %9* %436, i64 0, i32 8
  store i8 4, i8* %614, align 2
  %615 = getelementptr inbounds %9, %9* %436, i64 0, i32 2, i32 0
  store i32 %434, i32* %615, align 4
  br label %618

616:                                              ; preds = %612
  store i8 -117, i8* %463, align 4
  %617 = getelementptr inbounds %9, %9* %436, i64 0, i32 8
  store i8 8, i8* %617, align 2
  br label %618

618:                                              ; preds = %613, %616
  %619 = getelementptr inbounds %43, %43* %0, i64 1
  %620 = bitcast %43* %619 to i8**
  %621 = load i8*, i8** %620, align 8
  %622 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %622) #16
  %623 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %622, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @220, i64 0, i64 0), i8* %621) #16
  %624 = sext i32 %623 to i64
  %625 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %626 = getelementptr inbounds %7, %7* %625, i64 0, i32 20
  %627 = load %32*, %32** %626, align 8
  %628 = getelementptr inbounds %32, %32* %181, i64 0, i32 2
  %629 = load i64, i64* %628, align 8
  %630 = getelementptr inbounds %32, %32* %627, i64 0, i32 2
  %631 = load i64, i64* %630, align 8
  %632 = add nsw i64 %624, 1
  %633 = add i64 %632, %629
  %634 = add i64 %633, %631
  %635 = add i64 %634, 32
  %636 = and i64 %635, -8
  %637 = call noalias i8* @_emalloc(i64 %636) #17
  %638 = bitcast i8* %637 to %32*
  %639 = bitcast i8* %637 to i32*
  store i32 1, i32* %639, align 8
  %640 = getelementptr inbounds i8, i8* %637, i64 4
  %641 = bitcast i8* %640 to i32*
  store i32 6, i32* %641, align 4
  %642 = getelementptr inbounds i8, i8* %637, i64 8
  %643 = bitcast i8* %642 to i64*
  store i64 0, i64* %643, align 8
  %644 = getelementptr inbounds i8, i8* %637, i64 16
  %645 = bitcast i8* %644 to i64*
  store i64 %634, i64* %645, align 8
  %646 = getelementptr inbounds i8, i8* %637, i64 24
  %647 = getelementptr inbounds %32, %32* %181, i64 0, i32 3, i64 0
  %648 = getelementptr inbounds %32, %32* %627, i64 0, i32 3, i64 0
  %649 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %646, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @222, i64 0, i64 0), i32 0, i8* nonnull %647, i8* nonnull %648, i8* nonnull %622) #16
  %650 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %651 = call %32* %650(%32* %638) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %622) #16
  %652 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %653 = bitcast %2* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %653) #16
  %654 = bitcast %2* %6 to %32**
  store %32* %651, %32** %654, align 8
  %655 = getelementptr inbounds %32, %32* %651, i64 0, i32 0, i32 1
  %656 = bitcast %18* %655 to %64*
  %657 = getelementptr inbounds %64, %64* %656, i64 0, i32 1
  %658 = load i8, i8* %657, align 1
  %659 = and i8 %658, 2
  %660 = icmp eq i8 %659, 0
  %661 = select i1 %660, i32 5126, i32 6
  %662 = getelementptr inbounds %2, %2* %6, i64 0, i32 1, i32 0
  store i32 %661, i32* %662, align 8
  %663 = call i32 @zend_add_literal(%7* %652, %2* nonnull %6) #16
  %664 = load %32*, %32** %654, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %653) #16
  %665 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), align 8
  %666 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %666) #16
  %667 = bitcast %2* %5 to i8**
  store i8* %49, i8** %667, align 8
  %668 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 17, i32* %668, align 8
  %669 = call %2* @_zend_hash_update(%39* %665, %32* %664, %2* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %666) #16
  br label %670

670:                                              ; preds = %618, %473
  store i8* %49, i8** bitcast (%1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1) to i8**), align 8
  call void @zend_compile_stmt(%43* %22)
  %671 = load i32, i32* %192, align 4
  store i32 %671, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  %672 = getelementptr inbounds i8, i8* %49, i64 444
  %673 = bitcast i8* %672 to i32*
  %674 = load i32, i32* %673, align 4
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %677

676:                                              ; preds = %670
  call void @zend_check_deprecated_constructor(%1* nonnull %50) #16
  br label %677

677:                                              ; preds = %676, %670
  %678 = getelementptr inbounds i8, i8* %49, i64 232
  %679 = bitcast i8* %678 to %6**
  %680 = load %6*, %6** %679, align 8
  %681 = icmp eq %6* %680, null
  br i1 %681, label %707, label %682

682:                                              ; preds = %677
  %683 = getelementptr inbounds %6, %6* %680, i64 0, i32 0, i32 2
  %684 = load i32, i32* %683, align 4
  %685 = or i32 %684, 8192
  store i32 %685, i32* %683, align 4
  %686 = bitcast i8* %678 to %71**
  %687 = load %71*, %71** %686, align 8
  %688 = getelementptr inbounds %71, %71* %687, i64 0, i32 2
  %689 = load i32, i32* %688, align 4
  %690 = and i32 %689, 1
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %698, label %692

692:                                              ; preds = %682
  %693 = load %32*, %32** %183, align 8
  %694 = getelementptr inbounds %32, %32* %693, i64 0, i32 3, i64 0
  %695 = getelementptr inbounds %71, %71* %687, i64 0, i32 3
  %696 = load %32*, %32** %695, align 8
  %697 = getelementptr inbounds %32, %32* %696, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @146, i64 0, i64 0), i8* nonnull %694, i8* nonnull %697) #15
  unreachable

698:                                              ; preds = %682
  %699 = and i32 %689, 1073741824
  %700 = icmp eq i32 %699, 0
  br i1 %700, label %707, label %701

701:                                              ; preds = %698
  %702 = load %32*, %32** %183, align 8
  %703 = getelementptr inbounds %32, %32* %702, i64 0, i32 3, i64 0
  %704 = getelementptr inbounds %71, %71* %687, i64 0, i32 3
  %705 = load %32*, %32** %704, align 8
  %706 = getelementptr inbounds %32, %32* %705, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @147, i64 0, i64 0), i8* nonnull %703, i8* nonnull %706) #15
  unreachable

707:                                              ; preds = %698, %677
  %708 = getelementptr inbounds i8, i8* %49, i64 240
  %709 = bitcast i8* %708 to %6**
  %710 = load %6*, %6** %709, align 8
  %711 = icmp eq %6* %710, null
  br i1 %711, label %737, label %712

712:                                              ; preds = %707
  %713 = getelementptr inbounds %6, %6* %710, i64 0, i32 0, i32 2
  %714 = load i32, i32* %713, align 4
  %715 = or i32 %714, 16384
  store i32 %715, i32* %713, align 4
  %716 = bitcast i8* %708 to %71**
  %717 = load %71*, %71** %716, align 8
  %718 = getelementptr inbounds %71, %71* %717, i64 0, i32 2
  %719 = load i32, i32* %718, align 4
  %720 = and i32 %719, 1
  %721 = icmp eq i32 %720, 0
  br i1 %721, label %728, label %722

722:                                              ; preds = %712
  %723 = load %32*, %32** %183, align 8
  %724 = getelementptr inbounds %32, %32* %723, i64 0, i32 3, i64 0
  %725 = getelementptr inbounds %71, %71* %717, i64 0, i32 3
  %726 = load %32*, %32** %725, align 8
  %727 = getelementptr inbounds %32, %32* %726, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @148, i64 0, i64 0), i8* nonnull %724, i8* nonnull %727) #15
  unreachable

728:                                              ; preds = %712
  %729 = and i32 %719, 1073741824
  %730 = icmp eq i32 %729, 0
  br i1 %730, label %737, label %731

731:                                              ; preds = %728
  %732 = load %32*, %32** %183, align 8
  %733 = getelementptr inbounds %32, %32* %732, i64 0, i32 3, i64 0
  %734 = getelementptr inbounds %71, %71* %717, i64 0, i32 3
  %735 = load %32*, %32** %734, align 8
  %736 = getelementptr inbounds %32, %32* %735, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @149, i64 0, i64 0), i8* nonnull %733, i8* nonnull %736) #15
  unreachable

737:                                              ; preds = %728, %707
  %738 = getelementptr inbounds i8, i8* %49, i64 248
  %739 = bitcast i8* %738 to %6**
  %740 = load %6*, %6** %739, align 8
  %741 = icmp eq %6* %740, null
  br i1 %741, label %762, label %742

742:                                              ; preds = %737
  %743 = getelementptr inbounds %6, %6* %740, i64 0, i32 0, i32 2
  %744 = load i32, i32* %743, align 4
  %745 = and i32 %744, 1
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %753, label %747

747:                                              ; preds = %742
  %748 = load %32*, %32** %183, align 8
  %749 = getelementptr inbounds %32, %32* %748, i64 0, i32 3, i64 0
  %750 = getelementptr inbounds %6, %6* %740, i64 0, i32 0, i32 3
  %751 = load %32*, %32** %750, align 8
  %752 = getelementptr inbounds %32, %32* %751, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @150, i64 0, i64 0), i8* nonnull %749, i8* nonnull %752) #15
  unreachable

753:                                              ; preds = %742
  %754 = and i32 %744, 1073741824
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %762, label %756

756:                                              ; preds = %753
  %757 = load %32*, %32** %183, align 8
  %758 = getelementptr inbounds %32, %32* %757, i64 0, i32 3, i64 0
  %759 = getelementptr inbounds %6, %6* %740, i64 0, i32 0, i32 3
  %760 = load %32*, %32** %759, align 8
  %761 = getelementptr inbounds %32, %32* %760, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @151, i64 0, i64 0), i8* nonnull %758, i8* nonnull %761) #15
  unreachable

762:                                              ; preds = %753, %737
  %763 = load i32, i32* %673, align 4
  %764 = icmp eq i32 %763, 0
  br i1 %764, label %786, label %765

765:                                              ; preds = %762
  %766 = getelementptr inbounds i8, i8* %49, i64 456
  %767 = bitcast i8* %766 to %1***
  store %1** null, %1*** %767, align 8
  store i32 0, i32* %673, align 4
  %768 = load i32, i32* %186, align 4
  %769 = or i32 %768, 4194304
  store i32 %769, i32* %186, align 4
  %770 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %771 = call %9* @get_next_op(%7* %770) #16
  %772 = getelementptr inbounds %9, %9* %771, i64 0, i32 6
  store i8 -101, i8* %772, align 4
  %773 = load i8, i8* %51, align 8
  %774 = getelementptr inbounds %9, %9* %771, i64 0, i32 7
  store i8 %773, i8* %774, align 1
  %775 = icmp eq i8 %773, 1
  br i1 %775, label %776, label %780

776:                                              ; preds = %765
  %777 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %778 = getelementptr inbounds %37, %37* %12, i64 0, i32 2, i32 0
  %779 = call i32 @zend_add_literal(%7* %777, %2* nonnull %778) #16
  br label %782

780:                                              ; preds = %765
  %781 = load i32, i32* %444, align 8
  br label %782

782:                                              ; preds = %776, %780
  %783 = phi i32 [ %779, %776 ], [ %781, %780 ]
  %784 = getelementptr inbounds %9, %9* %771, i64 0, i32 1, i32 0
  store i32 %783, i32* %784, align 8
  %785 = getelementptr inbounds %9, %9* %771, i64 0, i32 8
  store i8 8, i8* %785, align 2
  call fastcc void @244(%9* nonnull %771) #16
  br label %786

786:                                              ; preds = %762, %782
  %787 = icmp ne %43* %20, null
  br i1 %787, label %788, label %789

788:                                              ; preds = %786
  call void @zend_compile_implements(%37* nonnull %12, %43* nonnull %20)
  br label %789

789:                                              ; preds = %788, %786
  %790 = load i32, i32* %186, align 4
  %791 = and i32 %790, 96
  %792 = icmp eq i32 %791, 0
  %793 = or i1 %229, %787
  %794 = and i1 %793, %792
  br i1 %794, label %795, label %813

795:                                              ; preds = %789
  call void @zend_verify_abstract_class(%1* nonnull %50) #16
  br i1 %787, label %796, label %813

796:                                              ; preds = %795
  %797 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %798 = call %9* @get_next_op(%7* %797) #16
  %799 = getelementptr inbounds %9, %9* %798, i64 0, i32 6
  store i8 -110, i8* %799, align 4
  %800 = load i8, i8* %51, align 8
  %801 = getelementptr inbounds %9, %9* %798, i64 0, i32 7
  store i8 %800, i8* %801, align 1
  %802 = icmp eq i8 %800, 1
  br i1 %802, label %803, label %807

803:                                              ; preds = %796
  %804 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %805 = getelementptr inbounds %37, %37* %12, i64 0, i32 2, i32 0
  %806 = call i32 @zend_add_literal(%7* %804, %2* nonnull %805) #16
  br label %809

807:                                              ; preds = %796
  %808 = load i32, i32* %444, align 8
  br label %809

809:                                              ; preds = %803, %807
  %810 = phi i32 [ %806, %803 ], [ %808, %807 ]
  %811 = getelementptr inbounds %9, %9* %798, i64 0, i32 1, i32 0
  store i32 %810, i32* %811, align 8
  %812 = getelementptr inbounds %9, %9* %798, i64 0, i32 8
  store i8 8, i8* %812, align 2
  call fastcc void @244(%9* nonnull %798) #16
  br label %813

813:                                              ; preds = %789, %795, %809
  %814 = getelementptr inbounds i8, i8* %49, i64 440
  %815 = bitcast i8* %814 to i32*
  %816 = load i32, i32* %815, align 8
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %823, label %818

818:                                              ; preds = %813
  %819 = getelementptr inbounds i8, i8* %49, i64 448
  %820 = bitcast i8* %819 to %1***
  store %1** null, %1*** %820, align 8
  store i32 0, i32* %815, align 8
  %821 = load i32, i32* %186, align 4
  %822 = or i32 %821, 524288
  store i32 %822, i32* %186, align 4
  br label %823

823:                                              ; preds = %813, %818
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 1, i32 0), i8* nonnull align 8 %53, i64 24, i1 false)
  store i64 %52, i64* bitcast (%1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1) to i64*), align 8
  br label %824

824:                                              ; preds = %823, %611
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_clone(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %5)
  %7 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %8 = call %9* @get_next_op(%7* %7) #16
  %9 = getelementptr inbounds %9, %9* %8, i64 0, i32 6
  store i8 110, i8* %9, align 4
  %10 = load i8, i8* %6, align 8
  %11 = getelementptr inbounds %9, %9* %8, i64 0, i32 7
  store i8 %10, i8* %11, align 1
  %12 = icmp eq i8 %10, 1
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %15 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %16 = call i32 @zend_add_literal(%7* %14, %2* nonnull %15) #16
  br label %21

17:                                               ; preds = %2
  %18 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %19 = bitcast %38* %18 to i32*
  %20 = load i32, i32* %19, align 8
  br label %21

21:                                               ; preds = %17, %13
  %22 = phi i32 [ %20, %17 ], [ %16, %13 ]
  %23 = getelementptr inbounds %9, %9* %8, i64 0, i32 1, i32 0
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %9, %9* %8, i64 0, i32 8
  store i8 8, i8* %24, align 2
  call fastcc void @244(%9* nonnull %8) #16
  %25 = icmp eq %37* %0, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %9, %9* %8, i64 0, i32 9
  store i8 2, i8* %27, align 1
  %28 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %29 = getelementptr inbounds %7, %7* %28, i64 0, i32 13
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = getelementptr inbounds %9, %9* %8, i64 0, i32 3, i32 0
  store i32 %30, i32* %32, align 8
  %33 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %33, align 8
  %34 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %35 = bitcast %38* %34 to i32*
  %36 = load i32, i32* %32, align 8
  store i32 %36, i32* %35, align 8
  br label %37

37:                                               ; preds = %21, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_global_var(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %43, %43* %5, i64 0, i32 3, i64 0
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  call void @zend_compile_expr(%37* nonnull %2, %43* %7)
  %10 = load i8, i8* %8, align 8
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %1
  %13 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast %4* %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 6
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  call void @_convert_to_string(%2* nonnull %18) #16
  br label %19

19:                                               ; preds = %12, %17, %1
  %20 = getelementptr inbounds %43, %43* %5, i64 0, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = icmp eq i16 %21, 256
  br i1 %22, label %23, label %45

23:                                               ; preds = %19
  %24 = load %43*, %43** %6, align 8
  %25 = getelementptr inbounds %43, %43* %24, i64 0, i32 0
  %26 = load i16, i16* %25, align 8
  %27 = icmp eq i16 %26, 64
  br i1 %27, label %28, label %45

28:                                               ; preds = %23
  %29 = getelementptr inbounds %43, %43* %24, i64 0, i32 3
  %30 = getelementptr inbounds [1 x %43*], [1 x %43*]* %29, i64 1
  %31 = bitcast [1 x %43*]* %30 to i8*
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, 6
  br i1 %33, label %34, label %45

34:                                               ; preds = %28
  %35 = bitcast [1 x %43*]* %29 to %32**
  %36 = load %32*, %32** %35, align 8
  %37 = getelementptr inbounds %32, %32* %36, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 4
  br i1 %39, label %40, label %45

40:                                               ; preds = %34
  %41 = getelementptr inbounds %32, %32* %36, i64 0, i32 3, i64 0
  %42 = call i32 @memcmp(i8* nonnull %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @57, i64 0, i64 0)) #15
  unreachable

45:                                               ; preds = %40, %19, %23, %34, %28
  %46 = call fastcc i32 @245(%37* nonnull %3, %43* nonnull %5)
  %47 = icmp eq i32 %46, 0
  %48 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %49 = call %9* @get_next_op(%7* %48) #16
  %50 = getelementptr inbounds %9, %9* %49, i64 0, i32 6
  br i1 %47, label %51, label %90

51:                                               ; preds = %45
  store i8 -88, i8* %50, align 4
  %52 = load i8, i8* %9, align 8
  %53 = getelementptr inbounds %9, %9* %49, i64 0, i32 7
  store i8 %52, i8* %53, align 1
  %54 = icmp eq i8 %52, 1
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %57 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %58 = call i32 @zend_add_literal(%7* %56, %2* nonnull %57) #16
  br label %63

59:                                               ; preds = %51
  %60 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %61 = bitcast %38* %60 to i32*
  %62 = load i32, i32* %61, align 8
  br label %63

63:                                               ; preds = %59, %55
  %64 = phi i32 [ %62, %59 ], [ %58, %55 ]
  %65 = getelementptr inbounds %9, %9* %49, i64 0, i32 1, i32 0
  store i32 %64, i32* %65, align 8
  %66 = load i8, i8* %8, align 8
  %67 = getelementptr inbounds %9, %9* %49, i64 0, i32 8
  store i8 %66, i8* %67, align 2
  %68 = icmp eq i8 %66, 1
  br i1 %68, label %69, label %73

69:                                               ; preds = %63
  %70 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %71 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %72 = call i32 @zend_add_literal(%7* %70, %2* nonnull %71) #16
  br label %77

73:                                               ; preds = %63
  %74 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %75 = bitcast %38* %74 to i32*
  %76 = load i32, i32* %75, align 8
  br label %77

77:                                               ; preds = %69, %73
  %78 = phi i32 [ %72, %69 ], [ %76, %73 ]
  %79 = getelementptr inbounds %9, %9* %49, i64 0, i32 2, i32 0
  store i32 %78, i32* %79, align 4
  call fastcc void @244(%9* nonnull %49) #16
  %80 = load i32, i32* %79, align 4
  %81 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %82 = getelementptr inbounds %7, %7* %81, i64 0, i32 27
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %7, %7* %81, i64 0, i32 26
  %85 = load %2*, %2** %84, align 8
  %86 = zext i32 %80 to i64
  %87 = getelementptr inbounds %2, %2* %85, i64 %86, i32 2, i32 0
  store i32 %83, i32* %87, align 4
  %88 = load i32, i32* %82, align 8
  %89 = add i32 %88, 8
  store i32 %89, i32* %82, align 8
  br label %136

90:                                               ; preds = %45
  store i8 83, i8* %50, align 4
  %91 = load i8, i8* %8, align 8
  %92 = getelementptr inbounds %9, %9* %49, i64 0, i32 7
  store i8 %91, i8* %92, align 1
  %93 = icmp eq i8 %91, 1
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %96 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %97 = call i32 @zend_add_literal(%7* %95, %2* nonnull %96) #16
  br label %102

98:                                               ; preds = %90
  %99 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %100 = bitcast %38* %99 to i32*
  %101 = load i32, i32* %100, align 8
  br label %102

102:                                              ; preds = %94, %98
  %103 = phi i32 [ %97, %94 ], [ %101, %98 ]
  %104 = getelementptr inbounds %9, %9* %49, i64 0, i32 1, i32 0
  store i32 %103, i32* %104, align 8
  %105 = getelementptr inbounds %9, %9* %49, i64 0, i32 8
  store i8 8, i8* %105, align 2
  call fastcc void @244(%9* nonnull %49) #16
  %106 = getelementptr inbounds %9, %9* %49, i64 0, i32 9
  store i8 4, i8* %106, align 1
  %107 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %108 = getelementptr inbounds %7, %7* %107, i64 0, i32 13
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %9, %9* %49, i64 0, i32 3, i32 0
  store i32 %109, i32* %111, align 8
  store i8 4, i8* %9, align 8
  %112 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %113 = bitcast %38* %112 to i32*
  store i32 %109, i32* %113, align 8
  %114 = getelementptr inbounds %9, %9* %49, i64 0, i32 4
  store i32 1073741824, i32* %114, align 4
  %115 = load i8, i8* %8, align 8
  %116 = icmp eq i8 %115, 1
  br i1 %116, label %117, label %131

117:                                              ; preds = %102
  %118 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0, i32 0
  %119 = bitcast %3* %118 to %32**
  %120 = load %32*, %32** %119, align 8
  %121 = getelementptr inbounds %32, %32* %120, i64 0, i32 0, i32 1
  %122 = bitcast %18* %121 to %64*
  %123 = getelementptr inbounds %64, %64* %122, i64 0, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = and i8 %124, 2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %117
  %128 = getelementptr inbounds %32, %32* %120, i64 0, i32 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 8
  br label %131

131:                                              ; preds = %127, %117, %102
  %132 = call %43* @zend_ast_create_znode(%37* nonnull %2) #16
  %133 = call %43* (i16, ...) @zend_ast_create(i16 zeroext 256, %43* %132) #16
  %134 = call %43* @zend_ast_create_znode(%37* nonnull %3) #16
  %135 = call %43* (i16, ...) @zend_ast_create(i16 zeroext 518, %43* %133, %43* %134) #16
  call void @zend_compile_assign_ref(%37* null, %43* %135) #16
  br label %136

136:                                              ; preds = %77, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @245(%37* nocapture %0, %43* nocapture readonly %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %4 = load %43*, %43** %3, align 8
  %5 = getelementptr inbounds %43, %43* %4, i64 0, i32 0
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 64
  br i1 %7, label %8, label %74

8:                                                ; preds = %2
  %9 = getelementptr inbounds %43, %43* %4, i64 0, i32 3
  %10 = getelementptr inbounds [1 x %43*], [1 x %43*]* %9, i64 1
  %11 = bitcast [1 x %43*]* %10 to i8*
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 6
  br i1 %13, label %14, label %27

14:                                               ; preds = %8
  %15 = bitcast [1 x %43*]* %9 to %32**
  %16 = load %32*, %32** %15, align 8
  %17 = getelementptr inbounds %32, %32* %16, i64 0, i32 0, i32 1
  %18 = bitcast %18* %17 to %64*
  %19 = getelementptr inbounds %64, %64* %18, i64 0, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = and i8 %20, 2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %14
  %24 = getelementptr inbounds %32, %32* %16, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, 1
  store i32 %26, i32* %24, align 8
  br label %30

27:                                               ; preds = %8
  %28 = bitcast [1 x %43*]* %9 to %2*
  %29 = tail call %32* @_zval_get_string_func(%2* nonnull %28) #16
  br label %30

30:                                               ; preds = %14, %23, %27
  %31 = phi %32* [ %29, %27 ], [ %16, %14 ], [ %16, %23 ]
  %32 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 8), align 8
  %33 = tail call %2* @zend_hash_find(%39* %32, %32* %31) #16
  %34 = icmp eq %2* %33, null
  br i1 %34, label %68, label %35

35:                                               ; preds = %30
  %36 = bitcast %2* %33 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i8, i8* %37, i64 17
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %37, i64 8
  %45 = bitcast i8* %44 to i8 (%32*)**
  %46 = load i8 (%32*)*, i8 (%32*)** %45, align 8
  %47 = bitcast i8* %37 to %32**
  %48 = load %32*, %32** %47, align 8
  %49 = tail call zeroext i8 %46(%32* %48) #16
  store i8 %49, i8* %40, align 1
  br label %50

50:                                               ; preds = %43, %39
  %51 = getelementptr inbounds %32, %32* %31, i64 0, i32 0, i32 1
  %52 = bitcast %18* %51 to %64*
  %53 = getelementptr inbounds %64, %64* %52, i64 0, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = and i8 %54, 2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %74

57:                                               ; preds = %50
  %58 = getelementptr inbounds %32, %32* %31, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = add i32 %59, -1
  store i32 %60, i32* %58, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = and i8 %54, 1
  %64 = icmp eq i8 %63, 0
  %65 = bitcast %32* %31 to i8*
  br i1 %64, label %67, label %66

66:                                               ; preds = %62
  tail call void @free(i8* %65) #16
  br label %74

67:                                               ; preds = %62
  tail call void @_efree(i8* %65) #16
  br label %74

68:                                               ; preds = %35, %30
  %69 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 16, i8* %69, align 8
  %70 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %71 = tail call fastcc i32 @249(%7* %70, %32* %31)
  %72 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %73 = bitcast %38* %72 to i32*
  store i32 %71, i32* %73, align 8
  br label %74

74:                                               ; preds = %67, %66, %57, %50, %2, %68
  %75 = phi i32 [ 0, %68 ], [ -1, %2 ], [ -1, %50 ], [ -1, %57 ], [ -1, %66 ], [ -1, %67 ]
  ret i32 %75
}

declare dso_local %43* @zend_ast_create(i16 zeroext, ...) local_unnamed_addr #3

declare dso_local %43* @zend_ast_create_znode(%37*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_static_var(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %43*, align 8
  %3 = alloca %2, align 8
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %7 = load %43*, %43** %6, align 8
  %8 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = icmp eq %43* %7, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %1
  %11 = bitcast %43** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  store %43* %7, %43** %2, align 8
  call void @zend_eval_const_expr(%43** nonnull %2) #16
  call void @zend_compile_const_expr(%43** nonnull %2) #16
  %12 = load %43*, %43** %2, align 8
  %13 = getelementptr inbounds %43, %43* %12, i64 0, i32 0
  %14 = load i16, i16* %13, align 8
  %15 = icmp eq i16 %14, 64
  br i1 %15, label %16, label %24

16:                                               ; preds = %10
  %17 = getelementptr inbounds %43, %43* %12, i64 0, i32 3
  %18 = bitcast [1 x %43*]* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds [1 x %43*], [1 x %43*]* %17, i64 1
  %21 = bitcast [1 x %43*]* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %2, %2* %3, i64 0, i32 0, i32 0
  store i64 %19, i64* %23, align 8
  br label %33

24:                                               ; preds = %10
  %25 = tail call noalias i8* @_emalloc_16() #16
  %26 = bitcast i8* %25 to i32*
  store i32 1, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 4
  %28 = bitcast i8* %27 to i32*
  store i32 12, i32* %28, align 4
  %29 = tail call %43* @zend_ast_copy(%43* %12) #16
  %30 = getelementptr inbounds i8, i8* %25, i64 8
  %31 = bitcast i8* %30 to %43**
  store %43* %29, %43** %31, align 8
  %32 = bitcast %2* %3 to i8**
  store i8* %25, i8** %32, align 8
  tail call void @zend_ast_destroy(%43* %12) #16
  br label %33

33:                                               ; preds = %16, %24
  %34 = phi i32 [ %22, %16 ], [ 5388, %24 ]
  %35 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds %43, %43* %7, i64 0, i32 0
  store i16 0, i16* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  br label %39

37:                                               ; preds = %1
  %38 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 1, i32* %38, align 8
  br label %39

39:                                               ; preds = %37, %33
  call fastcc void @246(%43* %5, %2* nonnull %3, i8 zeroext 1)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_const_expr_to_zval(%2* nocapture %0, %43* %1) local_unnamed_addr #0 {
  %3 = alloca %43*, align 8
  store %43* %1, %43** %3, align 8
  call void @zend_eval_const_expr(%43** nonnull %3)
  call void @zend_compile_const_expr(%43** nonnull %3)
  %4 = load %43*, %43** %3, align 8
  %5 = getelementptr inbounds %43, %43* %4, i64 0, i32 0
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 64
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %43, %43* %4, i64 0, i32 3
  %10 = bitcast [1 x %43*]* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds [1 x %43*], [1 x %43*]* %9, i64 1
  %13 = bitcast [1 x %43*]* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %2, %2* %0, i64 0, i32 0, i32 0
  store i64 %11, i64* %15, align 8
  %16 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 %14, i32* %16, align 8
  br label %27

17:                                               ; preds = %2
  %18 = tail call noalias i8* @_emalloc_16() #16
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 12, i32* %21, align 4
  %22 = tail call %43* @zend_ast_copy(%43* %4) #16
  %23 = getelementptr inbounds i8, i8* %18, i64 8
  %24 = bitcast i8* %23 to %43**
  store %43* %22, %43** %24, align 8
  %25 = bitcast %2* %0 to i8**
  store i8* %18, i8** %25, align 8
  %26 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 5388, i32* %26, align 8
  tail call void @zend_ast_destroy(%43* %4) #16
  br label %27

27:                                               ; preds = %17, %8
  %28 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  store i16 0, i16* %28, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @246(%43* %0, %2* %1, i8 zeroext %2) unnamed_addr #0 {
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  call void @zend_compile_expr(%37* nonnull %4, %43* %0)
  %6 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %7 = getelementptr inbounds %7, %7* %6, i64 0, i32 19
  %8 = load %39*, %39** %7, align 8
  %9 = icmp eq %39* %8, null
  br i1 %9, label %10, label %27

10:                                               ; preds = %3
  %11 = getelementptr inbounds %7, %7* %6, i64 0, i32 4
  %12 = load %1*, %1** %11, align 8
  %13 = icmp eq %1* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %1, %1* %12, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = or i32 %16, 8388608
  store i32 %17, i32* %15, align 4
  br label %18

18:                                               ; preds = %10, %14
  %19 = call noalias i8* @_emalloc_56() #16
  %20 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %21 = getelementptr inbounds %7, %7* %20, i64 0, i32 19
  %22 = bitcast %39** %21 to i8**
  store i8* %19, i8** %22, align 8
  %23 = bitcast i8* %19 to %39*
  call void @_zend_hash_init(%39* %23, i32 8, void (%2*)* nonnull @_zval_ptr_dtor, i8 zeroext 0) #16
  %24 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %25 = getelementptr inbounds %7, %7* %24, i64 0, i32 19
  %26 = load %39*, %39** %25, align 8
  br label %27

27:                                               ; preds = %3, %18
  %28 = phi %39* [ %8, %3 ], [ %26, %18 ]
  %29 = getelementptr inbounds %39, %39* %28, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp ugt i32 %30, 1
  br i1 %31, label %32, label %45

32:                                               ; preds = %27
  %33 = getelementptr inbounds %39, %39* %28, i64 0, i32 0, i32 1
  %34 = bitcast %18* %33 to %64*
  %35 = getelementptr inbounds %64, %64* %34, i64 0, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %30, -1
  store i32 %40, i32* %29, align 8
  br label %41

41:                                               ; preds = %32, %39
  %42 = call %39* @zend_array_dup(%39* nonnull %28) #16
  %43 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %44 = getelementptr inbounds %7, %7* %43, i64 0, i32 19
  store %39* %42, %39** %44, align 8
  br label %45

45:                                               ; preds = %41, %27
  %46 = phi %39* [ %42, %41 ], [ %28, %27 ]
  %47 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 0
  %48 = bitcast %3* %47 to %32**
  %49 = load %32*, %32** %48, align 8
  %50 = call %2* @_zend_hash_update(%39* %46, %32* %49, %2* %1) #16
  %51 = load %32*, %32** %48, align 8
  %52 = getelementptr inbounds %32, %32* %51, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 4
  br i1 %54, label %55, label %60

55:                                               ; preds = %45
  %56 = getelementptr inbounds %32, %32* %51, i64 0, i32 3, i64 0
  %57 = call i32 @memcmp(i8* nonnull %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @203, i64 0, i64 0)) #15
  unreachable

60:                                               ; preds = %55, %45
  %61 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %62 = call %9* @get_next_op(%7* %61) #16
  %63 = getelementptr inbounds %9, %9* %62, i64 0, i32 6
  store i8 -73, i8* %63, align 4
  %64 = getelementptr inbounds %9, %9* %62, i64 0, i32 7
  store i8 8, i8* %64, align 1
  %65 = load i8, i8* %5, align 8
  %66 = getelementptr inbounds %9, %9* %62, i64 0, i32 8
  store i8 %65, i8* %66, align 2
  %67 = icmp eq i8 %65, 1
  br i1 %67, label %68, label %72

68:                                               ; preds = %60
  %69 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %70 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %71 = call i32 @zend_add_literal(%7* %69, %2* nonnull %70) #16
  br label %76

72:                                               ; preds = %60
  %73 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %74 = bitcast %38* %73 to i32*
  %75 = load i32, i32* %74, align 8
  br label %76

76:                                               ; preds = %68, %72
  %77 = phi i32 [ %71, %68 ], [ %75, %72 ]
  %78 = getelementptr inbounds %9, %9* %62, i64 0, i32 2, i32 0
  store i32 %77, i32* %78, align 4
  call fastcc void @244(%9* nonnull %62) #16
  store i8 16, i8* %64, align 1
  %79 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %80 = load %32*, %32** %48, align 8
  %81 = getelementptr inbounds %32, %32* %80, i64 0, i32 0, i32 1
  %82 = bitcast %18* %81 to %64*
  %83 = getelementptr inbounds %64, %64* %82, i64 0, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = and i8 %84, 2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %76
  %88 = getelementptr inbounds %32, %32* %80, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 1
  store i32 %90, i32* %88, align 8
  br label %91

91:                                               ; preds = %76, %87
  %92 = call fastcc i32 @249(%7* %79, %32* %80)
  %93 = getelementptr inbounds %9, %9* %62, i64 0, i32 1, i32 0
  store i32 %92, i32* %93, align 8
  %94 = zext i8 %2 to i32
  %95 = getelementptr inbounds %9, %9* %62, i64 0, i32 4
  store i32 %94, i32* %95, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_unset(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %4 = load %43*, %43** %3, align 8
  %5 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %43, %43* %4, i64 0, i32 0
  %7 = load i16, i16* %6, align 8
  switch i16 %7, label %105 [
    i16 515, label %8
    i16 768, label %9
    i16 769, label %9
    i16 256, label %10
    i16 512, label %58
    i16 513, label %80
    i16 514, label %102
  ]

8:                                                ; preds = %1
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @191, i64 0, i64 0)) #15
  unreachable

9:                                                ; preds = %1, %1
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @192, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %1
  %11 = getelementptr inbounds %43, %43* %4, i64 0, i32 3, i64 0
  %12 = load %43*, %43** %11, align 8
  %13 = getelementptr inbounds %43, %43* %12, i64 0, i32 0
  %14 = load i16, i16* %13, align 8
  %15 = icmp eq i16 %14, 64
  br i1 %15, label %16, label %33

16:                                               ; preds = %10
  %17 = getelementptr inbounds %43, %43* %12, i64 0, i32 3
  %18 = getelementptr inbounds [1 x %43*], [1 x %43*]* %17, i64 1
  %19 = bitcast [1 x %43*]* %18 to i8*
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 6
  br i1 %21, label %22, label %33

22:                                               ; preds = %16
  %23 = bitcast [1 x %43*]* %17 to %32**
  %24 = load %32*, %32** %23, align 8
  %25 = getelementptr inbounds %32, %32* %24, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 4
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = getelementptr inbounds %32, %32* %24, i64 0, i32 3, i64 0
  %30 = tail call i32 @memcmp(i8* nonnull %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @58, i64 0, i64 0)) #15
  unreachable

33:                                               ; preds = %28, %10, %22, %16
  %34 = call fastcc i32 @245(%37* nonnull %2, %43* nonnull %4)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %55

36:                                               ; preds = %33
  %37 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %38 = tail call %9* @get_next_op(%7* %37) #16
  %39 = getelementptr inbounds %9, %9* %38, i64 0, i32 6
  store i8 -60, i8* %39, align 4
  %40 = load i8, i8* %5, align 8
  %41 = getelementptr inbounds %9, %9* %38, i64 0, i32 7
  store i8 %40, i8* %41, align 1
  %42 = icmp eq i8 %40, 1
  br i1 %42, label %43, label %47

43:                                               ; preds = %36
  %44 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %45 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %46 = call i32 @zend_add_literal(%7* %44, %2* nonnull %45) #16
  br label %51

47:                                               ; preds = %36
  %48 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %49 = bitcast %38* %48 to i32*
  %50 = load i32, i32* %49, align 8
  br label %51

51:                                               ; preds = %43, %47
  %52 = phi i32 [ %46, %43 ], [ %50, %47 ]
  %53 = getelementptr inbounds %9, %9* %38, i64 0, i32 1, i32 0
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %9, %9* %38, i64 0, i32 8
  store i8 8, i8* %54, align 2
  tail call fastcc void @244(%9* nonnull %38) #16
  br label %106

55:                                               ; preds = %33
  %56 = tail call fastcc %9* @236(%37* null, %43* nonnull %4, i32 0)
  %57 = getelementptr inbounds %9, %9* %56, i64 0, i32 6
  store i8 74, i8* %57, align 4
  br label %106

58:                                               ; preds = %1
  %59 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %60 = tail call fastcc %9* @235(%37* null, %43* %4, i32 5) #16
  %61 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %62 = bitcast i8* %61 to %9*
  %63 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %64 = icmp ugt i32 %63, %59
  br i1 %64, label %65, label %77

65:                                               ; preds = %58
  %66 = zext i32 %59 to i64
  %67 = zext i32 %63 to i64
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i64 [ %66, %65 ], [ %75, %68 ]
  %70 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %71 = tail call %9* @get_next_op(%7* %70) #16
  %72 = bitcast %9* %71 to i8*
  %73 = getelementptr inbounds %9, %9* %62, i64 %69
  %74 = bitcast %9* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %74, i64 32, i1 false) #16
  tail call fastcc void @244(%9* %71) #16
  %75 = add nuw nsw i64 %69, 1
  %76 = icmp eq i64 %75, %67
  br i1 %76, label %77, label %68

77:                                               ; preds = %68, %58
  %78 = phi %9* [ null, %58 ], [ %71, %68 ]
  store i32 %59, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %79 = getelementptr inbounds %9, %9* %78, i64 0, i32 6
  store i8 75, i8* %79, align 4
  br label %106

80:                                               ; preds = %1
  %81 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %82 = tail call fastcc %9* @237(%37* null, %43* %4, i32 5) #16
  %83 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %84 = bitcast i8* %83 to %9*
  %85 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %86 = icmp ugt i32 %85, %81
  br i1 %86, label %87, label %99

87:                                               ; preds = %80
  %88 = zext i32 %81 to i64
  %89 = zext i32 %85 to i64
  br label %90

90:                                               ; preds = %90, %87
  %91 = phi i64 [ %88, %87 ], [ %97, %90 ]
  %92 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %93 = tail call %9* @get_next_op(%7* %92) #16
  %94 = bitcast %9* %93 to i8*
  %95 = getelementptr inbounds %9, %9* %84, i64 %91
  %96 = bitcast %9* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %96, i64 32, i1 false) #16
  tail call fastcc void @244(%9* %93) #16
  %97 = add nuw nsw i64 %91, 1
  %98 = icmp eq i64 %97, %89
  br i1 %98, label %99, label %90

99:                                               ; preds = %90, %80
  %100 = phi %9* [ null, %80 ], [ %93, %90 ]
  store i32 %81, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %101 = getelementptr inbounds %9, %9* %100, i64 0, i32 6
  store i8 76, i8* %101, align 4
  br label %106

102:                                              ; preds = %1
  %103 = tail call %9* @zend_compile_static_prop_common(%37* null, %43* %4, i32 undef, i32 0)
  %104 = getelementptr inbounds %9, %9* %103, i64 0, i32 6
  store i8 -77, i8* %104, align 4
  br label %106

105:                                              ; preds = %1
  unreachable

106:                                              ; preds = %55, %51, %102, %99, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_return(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %4 = load %43*, %43** %3, align 8
  %5 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %6 = getelementptr inbounds %7, %7* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 26
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = and i32 %7, 8388608
  %13 = icmp ne i32 %12, 0
  %14 = select i1 %13, i8 0, i8 %10
  %15 = icmp ne %43* %4, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  store i8 1, i8* %11, align 8
  %17 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 1, i32* %17, align 8
  br label %25

18:                                               ; preds = %1
  %19 = icmp eq i8 %14, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %43, %43* %4, i64 0, i32 0
  %22 = load i16, i16* %21, align 8
  switch i16 %22, label %24 [
    i16 514, label %23
    i16 513, label %23
    i16 512, label %23
    i16 256, label %23
  ]

23:                                               ; preds = %20, %20, %20, %20
  call void @zend_compile_var(%37* nonnull %2, %43* nonnull %4, i32 1)
  br label %25

24:                                               ; preds = %20, %18
  call void @zend_compile_expr(%37* nonnull %2, %43* nonnull %4)
  br label %25

25:                                               ; preds = %23, %24, %16
  %26 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %27 = getelementptr inbounds %7, %7* %26, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 536870912
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %118, label %31

31:                                               ; preds = %25
  %32 = load i8, i8* %11, align 8
  %33 = icmp eq i8 %32, 16
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = icmp ne i8 %14, 0
  %36 = icmp eq i8 %32, 4
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %118

38:                                               ; preds = %34, %31
  %39 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %40 = add nsw i32 %39, 1
  %41 = sext i32 %40 to i64
  %42 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %43 = icmp eq i8* %42, null
  br i1 %43, label %118, label %44

44:                                               ; preds = %38
  %45 = call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %46 = bitcast i8* %45 to %72*
  %47 = icmp ult i8* %42, %45
  br i1 %47, label %118, label %48

48:                                               ; preds = %44
  %49 = bitcast i8* %42 to %72*
  br label %50

50:                                               ; preds = %59, %48
  %51 = phi %72* [ %61, %59 ], [ %49, %48 ]
  %52 = phi i64 [ %60, %59 ], [ %41, %48 ]
  %53 = getelementptr inbounds %72, %72* %51, i64 0, i32 0
  %54 = load i8, i8* %53, align 4
  switch i8 %54, label %55 [
    i8 -94, label %63
    i8 -97, label %59
    i8 62, label %118
  ]

55:                                               ; preds = %50
  %56 = icmp slt i64 %52, 2
  br i1 %56, label %118, label %57

57:                                               ; preds = %55
  %58 = add nsw i64 %52, -1
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i64 [ %58, %57 ], [ %52, %50 ]
  %61 = getelementptr inbounds %72, %72* %51, i64 -1
  %62 = icmp ult %72* %61, %46
  br i1 %62, label %118, label %50

63:                                               ; preds = %50
  %64 = icmp eq i8 %14, 0
  %65 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %66 = call %9* @get_next_op(%7* %65) #16
  %67 = getelementptr inbounds %9, %9* %66, i64 0, i32 6
  br i1 %64, label %93, label %68

68:                                               ; preds = %63
  store i8 51, i8* %67, align 4
  %69 = load i8, i8* %11, align 8
  %70 = getelementptr inbounds %9, %9* %66, i64 0, i32 7
  store i8 %69, i8* %70, align 1
  %71 = icmp eq i8 %69, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %74 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %75 = call i32 @zend_add_literal(%7* %73, %2* nonnull %74) #16
  %76 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %77 = bitcast %38* %76 to i32*
  br label %82

78:                                               ; preds = %68
  %79 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %80 = bitcast %38* %79 to i32*
  %81 = load i32, i32* %80, align 8
  br label %82

82:                                               ; preds = %72, %78
  %83 = phi i32* [ %77, %72 ], [ %80, %78 ]
  %84 = phi i32 [ %75, %72 ], [ %81, %78 ]
  %85 = getelementptr inbounds %9, %9* %66, i64 0, i32 1, i32 0
  store i32 %84, i32* %85, align 8
  %86 = getelementptr inbounds %9, %9* %66, i64 0, i32 8
  store i8 8, i8* %86, align 2
  call fastcc void @244(%9* nonnull %66) #16
  %87 = getelementptr inbounds %9, %9* %66, i64 0, i32 9
  store i8 4, i8* %87, align 1
  %88 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %89 = getelementptr inbounds %7, %7* %88, i64 0, i32 13
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %89, align 4
  %92 = getelementptr inbounds %9, %9* %66, i64 0, i32 3, i32 0
  store i32 %90, i32* %92, align 8
  store i8 4, i8* %11, align 8
  store i32 %90, i32* %83, align 8
  br label %118

93:                                               ; preds = %63
  store i8 22, i8* %67, align 4
  %94 = load i8, i8* %11, align 8
  %95 = getelementptr inbounds %9, %9* %66, i64 0, i32 7
  store i8 %94, i8* %95, align 1
  %96 = icmp eq i8 %94, 1
  br i1 %96, label %97, label %103

97:                                               ; preds = %93
  %98 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %99 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %100 = call i32 @zend_add_literal(%7* %98, %2* nonnull %99) #16
  %101 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %102 = bitcast %38* %101 to i32*
  br label %107

103:                                              ; preds = %93
  %104 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %105 = bitcast %38* %104 to i32*
  %106 = load i32, i32* %105, align 8
  br label %107

107:                                              ; preds = %97, %103
  %108 = phi i32* [ %102, %97 ], [ %105, %103 ]
  %109 = phi i32 [ %100, %97 ], [ %106, %103 ]
  %110 = getelementptr inbounds %9, %9* %66, i64 0, i32 1, i32 0
  store i32 %109, i32* %110, align 8
  %111 = getelementptr inbounds %9, %9* %66, i64 0, i32 8
  store i8 8, i8* %111, align 2
  call fastcc void @244(%9* nonnull %66) #16
  %112 = getelementptr inbounds %9, %9* %66, i64 0, i32 9
  store i8 2, i8* %112, align 1
  %113 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %114 = getelementptr inbounds %7, %7* %113, i64 0, i32 13
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %9, %9* %66, i64 0, i32 3, i32 0
  store i32 %115, i32* %117, align 8
  store i8 2, i8* %11, align 8
  store i32 %115, i32* %108, align 8
  br label %118

118:                                              ; preds = %50, %55, %59, %44, %38, %34, %25, %82, %107
  br i1 %13, label %217, label %119

119:                                              ; preds = %118
  %120 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %121 = getelementptr inbounds %7, %7* %120, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, 1073741824
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %217, label %125

125:                                              ; preds = %119
  %126 = select i1 %15, %37* %2, %37* null
  %127 = getelementptr inbounds %7, %7* %120, i64 0, i32 8
  %128 = load %8*, %8** %127, align 8
  %129 = getelementptr inbounds %8, %8* %128, i64 -1, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = icmp ugt i64 %130, 1
  br i1 %131, label %132, label %217

132:                                              ; preds = %125
  %133 = lshr i64 %130, 1
  %134 = icmp eq i64 %133, 18
  br i1 %134, label %135, label %147

135:                                              ; preds = %132
  br i1 %15, label %136, label %217

136:                                              ; preds = %135
  %137 = getelementptr inbounds %37, %37* %126, i64 0, i32 0
  %138 = load i8, i8* %137, align 8
  %139 = icmp eq i8 %138, 1
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = getelementptr inbounds %37, %37* %126, i64 0, i32 2, i32 0, i32 1
  %142 = bitcast %4* %141 to i8*
  %143 = load i8, i8* %142, align 8
  %144 = icmp eq i8 %143, 1
  br i1 %144, label %145, label %146

145:                                              ; preds = %140
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @187, i64 0, i64 0)) #15
  unreachable

146:                                              ; preds = %140, %136
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @188, i64 0, i64 0)) #15
  unreachable

147:                                              ; preds = %132
  br i1 %15, label %153, label %148

148:                                              ; preds = %147
  %149 = and i64 %130, 1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %148
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @189, i64 0, i64 0)) #15
  unreachable

152:                                              ; preds = %148
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @190, i64 0, i64 0)) #15
  unreachable

153:                                              ; preds = %147
  %154 = getelementptr inbounds %37, %37* %126, i64 0, i32 0
  %155 = load i8, i8* %154, align 8
  %156 = icmp eq i8 %155, 1
  br i1 %156, label %157, label %174

157:                                              ; preds = %153
  %158 = getelementptr inbounds %37, %37* %126, i64 0, i32 2, i32 0, i32 1
  %159 = bitcast %4* %158 to i8*
  %160 = load i8, i8* %159, align 8
  %161 = zext i8 %160 to i64
  %162 = icmp eq i64 %133, %161
  br i1 %162, label %217, label %163

163:                                              ; preds = %157
  %164 = and i64 %130, -2
  %165 = icmp eq i64 %164, 26
  %166 = and i8 %160, -2
  %167 = icmp eq i8 %166, 2
  %168 = and i1 %165, %167
  br i1 %168, label %217, label %169

169:                                              ; preds = %163
  %170 = and i64 %130, 1
  %171 = icmp ne i64 %170, 0
  %172 = icmp eq i8 %160, 1
  %173 = and i1 %171, %172
  br i1 %173, label %217, label %174

174:                                              ; preds = %153, %169
  %175 = call %9* @get_next_op(%7* nonnull %120) #16
  %176 = getelementptr inbounds %9, %9* %175, i64 0, i32 6
  store i8 124, i8* %176, align 4
  %177 = load i8, i8* %154, align 8
  %178 = getelementptr inbounds %9, %9* %175, i64 0, i32 7
  store i8 %177, i8* %178, align 1
  %179 = icmp eq i8 %177, 1
  br i1 %179, label %180, label %184

180:                                              ; preds = %174
  %181 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %182 = getelementptr inbounds %37, %37* %126, i64 0, i32 2, i32 0
  %183 = call i32 @zend_add_literal(%7* %181, %2* nonnull %182) #16
  br label %188

184:                                              ; preds = %174
  %185 = getelementptr inbounds %37, %37* %126, i64 0, i32 2
  %186 = bitcast %38* %185 to i32*
  %187 = load i32, i32* %186, align 8
  br label %188

188:                                              ; preds = %180, %184
  %189 = phi i32 [ %183, %180 ], [ %187, %184 ]
  %190 = getelementptr inbounds %9, %9* %175, i64 0, i32 1, i32 0
  store i32 %189, i32* %190, align 8
  %191 = getelementptr inbounds %9, %9* %175, i64 0, i32 8
  store i8 8, i8* %191, align 2
  call fastcc void @244(%9* nonnull %175) #16
  %192 = load i8, i8* %154, align 8
  %193 = icmp eq i8 %192, 1
  br i1 %193, label %194, label %203

194:                                              ; preds = %188
  store i8 2, i8* %154, align 8
  %195 = getelementptr inbounds %9, %9* %175, i64 0, i32 9
  store i8 2, i8* %195, align 1
  %196 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %197 = getelementptr inbounds %7, %7* %196, i64 0, i32 13
  %198 = load i32, i32* %197, align 4
  %199 = add i32 %198, 1
  store i32 %199, i32* %197, align 4
  %200 = getelementptr inbounds %37, %37* %126, i64 0, i32 2
  %201 = bitcast %38* %200 to i32*
  store i32 %198, i32* %201, align 8
  %202 = getelementptr inbounds %9, %9* %175, i64 0, i32 3, i32 0
  store i32 %198, i32* %202, align 8
  br label %203

203:                                              ; preds = %194, %188
  %204 = load i64, i64* %129, align 8
  %205 = icmp ugt i64 %204, 511
  br i1 %205, label %206, label %215

206:                                              ; preds = %203
  %207 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %208 = getelementptr inbounds %7, %7* %207, i64 0, i32 27
  %209 = load i32, i32* %208, align 8
  %210 = getelementptr inbounds %9, %9* %175, i64 0, i32 2, i32 0
  store i32 %209, i32* %210, align 4
  %211 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %212 = getelementptr inbounds %7, %7* %211, i64 0, i32 27
  %213 = load i32, i32* %212, align 8
  %214 = add i32 %213, 8
  store i32 %214, i32* %212, align 8
  br label %217

215:                                              ; preds = %203
  %216 = getelementptr inbounds %9, %9* %175, i64 0, i32 2, i32 0
  store i32 -1, i32* %216, align 4
  br label %217

217:                                              ; preds = %215, %206, %169, %163, %157, %135, %125, %119, %118
  %218 = load i8, i8* %11, align 8
  %219 = and i8 %218, 6
  %220 = icmp eq i8 %219, 0
  %221 = select i1 %220, %37* null, %37* %2
  %222 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %223 = add nsw i32 %222, 1
  %224 = sext i32 %223 to i64
  %225 = call fastcc i32 @247(i64 %224, %37* %221) #16
  %226 = icmp ne i8 %14, 0
  %227 = select i1 %226, i8 111, i8 62
  %228 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %229 = call %9* @get_next_op(%7* %228) #16
  %230 = getelementptr inbounds %9, %9* %229, i64 0, i32 6
  store i8 %227, i8* %230, align 4
  %231 = load i8, i8* %11, align 8
  %232 = getelementptr inbounds %9, %9* %229, i64 0, i32 7
  store i8 %231, i8* %232, align 1
  %233 = icmp eq i8 %231, 1
  br i1 %233, label %234, label %238

234:                                              ; preds = %217
  %235 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %236 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %237 = call i32 @zend_add_literal(%7* %235, %2* nonnull %236) #16
  br label %242

238:                                              ; preds = %217
  %239 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %240 = bitcast %38* %239 to i32*
  %241 = load i32, i32* %240, align 8
  br label %242

242:                                              ; preds = %234, %238
  %243 = phi i32 [ %237, %234 ], [ %241, %238 ]
  %244 = getelementptr inbounds %9, %9* %229, i64 0, i32 1, i32 0
  store i32 %243, i32* %244, align 8
  %245 = getelementptr inbounds %9, %9* %229, i64 0, i32 8
  store i8 8, i8* %245, align 2
  call fastcc void @244(%9* nonnull %229) #16
  %246 = and i1 %15, %226
  br i1 %246, label %247, label %254

247:                                              ; preds = %242
  %248 = getelementptr inbounds %43, %43* %4, i64 0, i32 0
  %249 = load i16, i16* %248, align 8
  switch i16 %249, label %252 [
    i16 515, label %250
    i16 768, label %250
    i16 769, label %250
    i16 256, label %254
    i16 512, label %254
    i16 513, label %254
    i16 514, label %254
  ]

250:                                              ; preds = %247, %247, %247
  %251 = getelementptr inbounds %9, %9* %229, i64 0, i32 4
  store i32 1, i32* %251, align 4
  br label %254

252:                                              ; preds = %247
  %253 = getelementptr inbounds %9, %9* %229, i64 0, i32 4
  store i32 2, i32* %253, align 4
  br label %254

254:                                              ; preds = %247, %247, %247, %247, %250, %252, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_echo(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %4 = load %43*, %43** %3, align 8
  %5 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  call void @zend_compile_expr(%37* nonnull %2, %43* %4)
  %6 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %7 = call %9* @get_next_op(%7* %6) #16
  %8 = getelementptr inbounds %9, %9* %7, i64 0, i32 6
  store i8 40, i8* %8, align 4
  %9 = load i8, i8* %5, align 8
  %10 = getelementptr inbounds %9, %9* %7, i64 0, i32 7
  store i8 %9, i8* %10, align 1
  %11 = icmp eq i8 %9, 1
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %14 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %15 = call i32 @zend_add_literal(%7* %13, %2* nonnull %14) #16
  br label %20

16:                                               ; preds = %1
  %17 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %18 = bitcast %38* %17 to i32*
  %19 = load i32, i32* %18, align 8
  br label %20

20:                                               ; preds = %12, %16
  %21 = phi i32 [ %15, %12 ], [ %19, %16 ]
  %22 = getelementptr inbounds %9, %9* %7, i64 0, i32 1, i32 0
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %9, %9* %7, i64 0, i32 8
  store i8 8, i8* %23, align 2
  call fastcc void @244(%9* nonnull %7) #16
  %24 = getelementptr inbounds %9, %9* %7, i64 0, i32 4
  store i32 0, i32* %24, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_throw(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %4 = load %43*, %43** %3, align 8
  %5 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  call void @zend_compile_expr(%37* nonnull %2, %43* %4)
  %6 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %7 = call %9* @get_next_op(%7* %6) #16
  %8 = getelementptr inbounds %9, %9* %7, i64 0, i32 6
  store i8 108, i8* %8, align 4
  %9 = load i8, i8* %5, align 8
  %10 = getelementptr inbounds %9, %9* %7, i64 0, i32 7
  store i8 %9, i8* %10, align 1
  %11 = icmp eq i8 %9, 1
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %14 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %15 = call i32 @zend_add_literal(%7* %13, %2* nonnull %14) #16
  br label %20

16:                                               ; preds = %1
  %17 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %18 = bitcast %38* %17 to i32*
  %19 = load i32, i32* %18, align 8
  br label %20

20:                                               ; preds = %12, %16
  %21 = phi i32 [ %15, %12 ], [ %19, %16 ]
  %22 = getelementptr inbounds %9, %9* %7, i64 0, i32 1, i32 0
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %9, %9* %7, i64 0, i32 8
  store i8 8, i8* %23, align 2
  call fastcc void @244(%9* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_break_continue(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %3 = load %43*, %43** %2, align 8
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp eq %43* %3, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %43, %43* %3, i64 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = icmp eq i16 %9, 64
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = icmp eq i16 %5, 285
  %13 = select i1 %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @60, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @61, i64 0, i64 0)
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @59, i64 0, i64 0), i8* %13) #15
  unreachable

14:                                               ; preds = %7
  %15 = getelementptr inbounds %43, %43* %3, i64 0, i32 3
  %16 = getelementptr inbounds [1 x %43*], [1 x %43*]* %15, i64 1
  %17 = bitcast [1 x %43*]* %16 to i8*
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 4
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  %21 = bitcast [1 x %43*]* %15 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp slt i64 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %14, %20
  %25 = icmp eq i16 %5, 285
  %26 = select i1 %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @60, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @61, i64 0, i64 0)
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @62, i64 0, i64 0), i8* %26) #15
  unreachable

27:                                               ; preds = %1, %20
  %28 = phi i64 [ %22, %20 ], [ 1, %1 ]
  %29 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = icmp eq i16 %5, 285
  %33 = select i1 %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @60, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @61, i64 0, i64 0)
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @63, i64 0, i64 0), i8* %33) #15
  unreachable

34:                                               ; preds = %27
  %35 = tail call fastcc i32 @247(i64 %28, %37* null)
  %36 = icmp eq i32 %35, 0
  %37 = load i16, i16* %4, align 8
  %38 = icmp eq i16 %37, 285
  br i1 %36, label %39, label %43

39:                                               ; preds = %34
  %40 = select i1 %38, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @60, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @61, i64 0, i64 0)
  %41 = icmp eq i64 %28, 1
  %42 = select i1 %41, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @65, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @66, i64 0, i64 0)
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @64, i64 0, i64 0), i8* %40, i64 %28, i8* %42) #15
  unreachable

43:                                               ; preds = %34
  %44 = select i1 %38, i8 -2, i8 -1
  %45 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %46 = tail call %9* @get_next_op(%7* %45) #16
  %47 = getelementptr inbounds %9, %9* %46, i64 0, i32 6
  store i8 %44, i8* %47, align 4
  %48 = getelementptr inbounds %9, %9* %46, i64 0, i32 7
  store i8 8, i8* %48, align 1
  %49 = getelementptr inbounds %9, %9* %46, i64 0, i32 8
  store i8 8, i8* %49, align 2
  tail call fastcc void @244(%9* nonnull %46) #16
  %50 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %51 = getelementptr inbounds %9, %9* %46, i64 0, i32 1, i32 0
  store i32 %50, i32* %51, align 8
  %52 = trunc i64 %28 to i32
  %53 = getelementptr inbounds %9, %9* %46, i64 0, i32 2, i32 0
  store i32 %52, i32* %53, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @247(i64 %0, %37* %1) unnamed_addr #0 {
  %3 = tail call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %4 = icmp eq i8* %3, null
  br i1 %4, label %87, label %5

5:                                                ; preds = %2
  %6 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %7 = bitcast i8* %6 to %72*
  %8 = icmp ult i8* %3, %6
  br i1 %8, label %83, label %9

9:                                                ; preds = %5
  %10 = bitcast i8* %3 to %72*
  %11 = icmp eq %37* %1, null
  %12 = getelementptr inbounds %37, %37* %1, i64 0, i32 0
  %13 = getelementptr inbounds %37, %37* %1, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %37, %37* %1, i64 0, i32 2
  %15 = bitcast %38* %14 to i32*
  br label %16

16:                                               ; preds = %9, %79
  %17 = phi i64 [ %0, %9 ], [ %80, %79 ]
  %18 = phi %72* [ %10, %9 ], [ %81, %79 ]
  %19 = getelementptr inbounds %72, %72* %18, i64 0, i32 0
  %20 = load i8, i8* %19, align 4
  switch i8 %20, label %56 [
    i8 -94, label %21
    i8 -97, label %47
    i8 62, label %83
  ]

21:                                               ; preds = %16
  %22 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %23 = tail call %9* @get_next_op(%7* %22) #16
  %24 = getelementptr inbounds %9, %9* %23, i64 0, i32 6
  store i8 -94, i8* %24, align 4
  %25 = getelementptr inbounds %9, %9* %23, i64 0, i32 9
  store i8 2, i8* %25, align 1
  %26 = getelementptr inbounds %72, %72* %18, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %9, %9* %23, i64 0, i32 3, i32 0
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %9, %9* %23, i64 0, i32 7
  store i8 8, i8* %29, align 1
  br i1 %11, label %41, label %30

30:                                               ; preds = %21
  %31 = load i8, i8* %12, align 8
  %32 = getelementptr inbounds %9, %9* %23, i64 0, i32 8
  store i8 %31, i8* %32, align 2
  %33 = icmp eq i8 %31, 1
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %36 = tail call i32 @zend_add_literal(%7* %35, %2* nonnull %13)
  %37 = getelementptr inbounds %9, %9* %23, i64 0, i32 2, i32 0
  store i32 %36, i32* %37, align 4
  br label %43

38:                                               ; preds = %30
  %39 = getelementptr inbounds %9, %9* %23, i64 0, i32 2, i32 0
  %40 = load i32, i32* %15, align 8
  store i32 %40, i32* %39, align 4
  br label %43

41:                                               ; preds = %21
  %42 = getelementptr inbounds %9, %9* %23, i64 0, i32 8
  store i8 8, i8* %42, align 2
  br label %43

43:                                               ; preds = %34, %38, %41
  %44 = getelementptr inbounds %72, %72* %18, i64 0, i32 3, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %9, %9* %23, i64 0, i32 1, i32 0
  store i32 %45, i32* %46, align 8
  br label %79

47:                                               ; preds = %16
  %48 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %49 = tail call %9* @get_next_op(%7* %48) #16
  %50 = getelementptr inbounds %9, %9* %49, i64 0, i32 6
  store i8 -97, i8* %50, align 4
  %51 = getelementptr inbounds %9, %9* %49, i64 0, i32 7
  store i8 2, i8* %51, align 1
  %52 = getelementptr inbounds %72, %72* %18, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %9, %9* %49, i64 0, i32 1, i32 0
  store i32 %53, i32* %54, align 8
  %55 = getelementptr inbounds %9, %9* %49, i64 0, i32 8
  store i8 8, i8* %55, align 2
  br label %79

56:                                               ; preds = %16
  %57 = icmp slt i64 %17, 2
  br i1 %57, label %87, label %58

58:                                               ; preds = %56
  %59 = icmp eq i8 %20, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %58
  %61 = add nsw i64 %17, -1
  br label %79

62:                                               ; preds = %58
  %63 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %64 = tail call %9* @get_next_op(%7* %63) #16
  %65 = load i8, i8* %19, align 4
  %66 = getelementptr inbounds %9, %9* %64, i64 0, i32 6
  store i8 %65, i8* %66, align 4
  %67 = getelementptr inbounds %72, %72* %18, i64 0, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = getelementptr inbounds %9, %9* %64, i64 0, i32 7
  store i8 %68, i8* %69, align 1
  %70 = getelementptr inbounds %72, %72* %18, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %9, %9* %64, i64 0, i32 1, i32 0
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %9, %9* %64, i64 0, i32 8
  store i8 8, i8* %73, align 2
  %74 = getelementptr inbounds %72, %72* %18, i64 0, i32 3, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %9, %9* %64, i64 0, i32 2, i32 0
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds %9, %9* %64, i64 0, i32 4
  store i32 1, i32* %77, align 4
  %78 = add nsw i64 %17, -1
  br label %79

79:                                               ; preds = %43, %60, %62, %47
  %80 = phi i64 [ %17, %43 ], [ %17, %47 ], [ %61, %60 ], [ %78, %62 ]
  %81 = getelementptr inbounds %72, %72* %18, i64 -1
  %82 = icmp ult %72* %81, %7
  br i1 %82, label %83, label %16

83:                                               ; preds = %79, %16, %5
  %84 = phi i64 [ %0, %5 ], [ %17, %16 ], [ %80, %79 ]
  %85 = icmp eq i64 %84, 0
  %86 = zext i1 %85 to i32
  br label %87

87:                                               ; preds = %56, %2, %83
  %88 = phi i32 [ %86, %83 ], [ 1, %2 ], [ 1, %56 ]
  ret i32 %88
}

; Function Attrs: nounwind uwtable
define hidden void @zend_resolve_goto_label(%7* %0, %9* %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %9, %9* %1, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %7, %7* %0, i64 0, i32 11
  %6 = bitcast %9** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %9* %1 to i64
  %9 = sub i64 %8, %7
  %10 = lshr exact i64 %9, 5
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %7, %7* %0, i64 0, i32 26
  %13 = load %2*, %2** %12, align 8
  %14 = getelementptr inbounds %9, %9* %1, i64 0, i32 2, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %2, %2* %13, i64 %16
  %18 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9), align 8
  %19 = icmp eq %39* %18, null
  %20 = bitcast %2* %17 to %32**
  br i1 %19, label %29, label %21

21:                                               ; preds = %2
  %22 = load %32*, %32** %20, align 8
  %23 = tail call %2* @zend_hash_find(%39* nonnull %18, %32* %22) #16
  %24 = icmp eq %2* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = bitcast %2* %23 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %2, %21, %25
  store i8 1, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 10), align 1
  store %7* %0, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %30 = getelementptr inbounds %9, %9* %1, i64 0, i32 5
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  %32 = load %32*, %32** %20, align 8
  %33 = getelementptr inbounds %32, %32* %32, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @67, i64 0, i64 0), i8* nonnull %33) #15
  unreachable

34:                                               ; preds = %25
  %35 = getelementptr inbounds %2, %2* %13, i64 %16, i32 1
  %36 = bitcast %4* %35 to %65*
  %37 = getelementptr inbounds %65, %65* %36, i64 0, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = and i8 %38, 4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %34
  %42 = bitcast %2* %17 to %66**
  %43 = load %66*, %66** %42, align 8
  %44 = getelementptr inbounds %66, %66* %43, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, -1
  store i32 %46, i32* %44, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = load %66*, %66** %42, align 8
  tail call void @_zval_dtor_func(%66* %49) #16
  br label %50

50:                                               ; preds = %34, %41, %48
  %51 = getelementptr inbounds %2, %2* %13, i64 %16, i32 1, i32 0
  store i32 1, i32* %51, align 8
  %52 = getelementptr inbounds %9, %9* %1, i64 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = bitcast i8* %27 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %50
  %58 = load %34*, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  br label %73

59:                                               ; preds = %80, %50
  %60 = phi i32 [ %4, %50 ], [ %86, %80 ]
  %61 = getelementptr inbounds %7, %7* %0, i64 0, i32 16
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds i8, i8* %27, i64 4
  %66 = bitcast i8* %65 to i32*
  br label %116

67:                                               ; preds = %59
  %68 = getelementptr inbounds %7, %7* %0, i64 0, i32 18
  %69 = load %12*, %12** %68, align 8
  %70 = getelementptr inbounds i8, i8* %27, i64 4
  %71 = bitcast i8* %70 to i32*
  %72 = sext i32 %62 to i64
  br label %90

73:                                               ; preds = %57, %80
  %74 = phi i32 [ %53, %57 ], [ %88, %80 ]
  %75 = phi i32 [ %4, %57 ], [ %86, %80 ]
  %76 = icmp eq i32 %74, -1
  br i1 %76, label %77, label %80

77:                                               ; preds = %73
  store i8 1, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 10), align 1
  store %7* %0, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %78 = getelementptr inbounds %9, %9* %1, i64 0, i32 5
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @68, i64 0, i64 0)) #15
  unreachable

80:                                               ; preds = %73
  %81 = sext i32 %74 to i64
  %82 = getelementptr inbounds %34, %34* %58, i64 %81, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = ashr i32 %83, 31
  %85 = xor i32 %84, -1
  %86 = add nsw i32 %75, %85
  %87 = getelementptr inbounds %34, %34* %58, i64 %81, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, %55
  br i1 %89, label %59, label %73

90:                                               ; preds = %67, %112
  %91 = phi i64 [ 0, %67 ], [ %114, %112 ]
  %92 = phi i32 [ %60, %67 ], [ %113, %112 ]
  %93 = getelementptr inbounds %12, %12* %69, i64 %91, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp ugt i32 %94, %11
  br i1 %95, label %116, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %12, %12* %69, i64 %91, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = icmp ne i32 %98, 0
  %100 = add i32 %98, -1
  %101 = icmp ugt i32 %100, %11
  %102 = and i1 %99, %101
  br i1 %102, label %103, label %112

103:                                              ; preds = %96
  %104 = load i32, i32* %71, align 4
  %105 = getelementptr inbounds %12, %12* %69, i64 %91, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = icmp ugt i32 %104, %106
  %108 = icmp ult i32 %104, %94
  %109 = or i1 %108, %107
  %110 = sext i1 %109 to i32
  %111 = add nsw i32 %92, %110
  br label %112

112:                                              ; preds = %96, %103
  %113 = phi i32 [ %111, %103 ], [ %92, %96 ]
  %114 = add nuw nsw i64 %91, 1
  %115 = icmp slt i64 %114, %72
  br i1 %115, label %90, label %116

116:                                              ; preds = %112, %90, %64
  %117 = phi i32* [ %66, %64 ], [ %71, %90 ], [ %71, %112 ]
  %118 = phi i32 [ %60, %64 ], [ %113, %112 ], [ %92, %90 ]
  %119 = getelementptr inbounds %9, %9* %1, i64 0, i32 6
  store i8 42, i8* %119, align 4
  %120 = load i32, i32* %117, align 4
  store i32 %120, i32* %3, align 8
  store i32 0, i32* %52, align 4
  %121 = getelementptr inbounds %9, %9* %1, i64 0, i32 7
  store i8 8, i8* %121, align 1
  %122 = getelementptr inbounds %9, %9* %1, i64 0, i32 8
  store i8 8, i8* %122, align 2
  %123 = getelementptr inbounds %9, %9* %1, i64 0, i32 9
  store i8 8, i8* %123, align 1
  %124 = icmp eq i32 %118, 0
  br i1 %124, label %138, label %125

125:                                              ; preds = %116, %125
  %126 = phi %9* [ %129, %125 ], [ %1, %116 ]
  %127 = phi i32 [ %128, %125 ], [ %118, %116 ]
  %128 = add nsw i32 %127, -1
  %129 = getelementptr inbounds %9, %9* %126, i64 -1
  %130 = getelementptr inbounds %9, %9* %126, i64 -1, i32 1, i32 0
  store i32 0, i32* %130, align 8
  %131 = getelementptr inbounds %9, %9* %126, i64 -1, i32 2, i32 0
  store i32 0, i32* %131, align 4
  %132 = getelementptr inbounds %9, %9* %126, i64 -1, i32 3, i32 0
  store i32 0, i32* %132, align 8
  %133 = getelementptr inbounds %9, %9* %126, i64 -1, i32 6
  store i8 0, i8* %133, align 4
  %134 = getelementptr inbounds %9, %9* %126, i64 -1, i32 7
  store i8 8, i8* %134, align 1
  %135 = getelementptr inbounds %9, %9* %126, i64 -1, i32 8
  store i8 8, i8* %135, align 2
  %136 = getelementptr inbounds %9, %9* %126, i64 -1, i32 9
  store i8 8, i8* %136, align 1
  tail call void @zend_vm_set_opcode_handler(%9* nonnull %129) #16
  %137 = icmp eq i32 %128, 0
  br i1 %137, label %138, label %125

138:                                              ; preds = %125, %116
  ret void
}

declare dso_local void @zend_vm_set_opcode_handler(%9*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_goto(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %4 = load %43*, %43** %3, align 8
  %5 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %7 = tail call i32 @get_next_op_number(%7* %6) #16
  call void @zend_compile_expr(%37* nonnull %2, %43* %4)
  %8 = call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %9 = add nsw i32 %8, 1
  %10 = sext i32 %9 to i64
  %11 = call fastcc i32 @247(i64 %10, %37* null) #16
  %12 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %13 = call %9* @get_next_op(%7* %12) #16
  %14 = getelementptr inbounds %9, %9* %13, i64 0, i32 6
  store i8 -3, i8* %14, align 4
  %15 = getelementptr inbounds %9, %9* %13, i64 0, i32 7
  store i8 8, i8* %15, align 1
  %16 = load i8, i8* %5, align 8
  %17 = getelementptr inbounds %9, %9* %13, i64 0, i32 8
  store i8 %16, i8* %17, align 2
  %18 = icmp eq i8 %16, 1
  br i1 %18, label %19, label %23

19:                                               ; preds = %1
  %20 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %21 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %22 = call i32 @zend_add_literal(%7* %20, %2* nonnull %21) #16
  br label %27

23:                                               ; preds = %1
  %24 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %25 = bitcast %38* %24 to i32*
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %19, %23
  %28 = phi i32 [ %22, %19 ], [ %26, %23 ]
  %29 = getelementptr inbounds %9, %9* %13, i64 0, i32 2, i32 0
  store i32 %28, i32* %29, align 4
  call fastcc void @244(%9* nonnull %13) #16
  %30 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %31 = call i32 @get_next_op_number(%7* %30) #16
  %32 = xor i32 %7, -1
  %33 = add i32 %31, %32
  %34 = getelementptr inbounds %9, %9* %13, i64 0, i32 1, i32 0
  store i32 %33, i32* %34, align 8
  %35 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %36 = getelementptr inbounds %9, %9* %13, i64 0, i32 4
  store i32 %35, i32* %36, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_label(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %4 = load %43*, %43** %3, align 8
  %5 = getelementptr inbounds %43, %43* %4, i64 0, i32 3
  %6 = bitcast [1 x %43*]* %5 to %32**
  %7 = load %32*, %32** %6, align 8
  %8 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9), align 8
  %9 = icmp eq %39* %8, null
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = tail call noalias i8* @_emalloc_56() #16
  %12 = bitcast i8* %11 to %39*
  store i8* %11, i8** bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9) to i8**), align 8
  tail call void @_zend_hash_init(%39* %12, i32 8, void (%2*)* nonnull @248, i8 zeroext 0) #16
  br label %13

13:                                               ; preds = %1, %10
  %14 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %15 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %16 = tail call i32 @get_next_op_number(%7* %15) #16
  %17 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9), align 8
  %18 = bitcast %2* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #16
  %19 = bitcast %2* %2 to i8**
  store i8* null, i8** %19, align 8
  %20 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  store i32 17, i32* %20, align 8
  %21 = call %2* @_zend_hash_add(%39* %17, %32* %7, %2* nonnull %2) #16
  %22 = icmp eq %2* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  br label %41

24:                                               ; preds = %13
  %25 = getelementptr inbounds %39, %39* %17, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = call noalias i8* @__zend_malloc(i64 8) #17
  br label %33

31:                                               ; preds = %24
  %32 = call noalias i8* @_emalloc(i64 8) #17
  br label %33

33:                                               ; preds = %29, %31
  %34 = phi i8* [ %30, %29 ], [ %32, %31 ]
  %35 = bitcast %2* %21 to i8**
  store i8* %34, i8** %35, align 8
  %36 = bitcast i8* %34 to i32*
  store i32 %14, i32* %36, align 1
  %37 = getelementptr inbounds i8, i8* %34, i64 4
  %38 = bitcast i8* %37 to i32*
  store i32 %16, i32* %38, align 1
  %39 = load i8*, i8** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %23, %33
  %42 = getelementptr inbounds %32, %32* %7, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @69, i64 0, i64 0), i8* nonnull %42) #15
  unreachable

43:                                               ; preds = %33
  ret void
}

declare dso_local noalias i8* @_emalloc_56() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal void @248(%2* nocapture readonly %0) #0 {
  %2 = bitcast %2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  tail call void @_efree_8(i8* %3) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_while(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %72, align 4
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %10 = tail call i32 @get_next_op_number(%7* %9) #16
  %11 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %12 = tail call %9* @get_next_op(%7* %11) #16
  %13 = getelementptr inbounds %9, %9* %12, i64 0, i32 6
  store i8 42, i8* %13, align 4
  %14 = getelementptr inbounds %9, %9* %12, i64 0, i32 7
  store i8 8, i8* %14, align 1
  %15 = getelementptr inbounds %9, %9* %12, i64 0, i32 8
  store i8 8, i8* %15, align 2
  tail call fastcc void @244(%9* nonnull %12) #16
  %16 = getelementptr inbounds %9, %9* %12, i64 0, i32 1, i32 0
  store i32 0, i32* %16, align 8
  %17 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %18 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 0, i64 12, i1 false) #16
  %19 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 7), align 4
  store i32 %19, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %20 = tail call %34* @get_next_brk_cont_element() #16
  %21 = getelementptr inbounds %34, %34* %20, i64 0, i32 3
  store i32 %17, i32* %21, align 4
  store i8 0, i8* %18, align 4
  %22 = getelementptr inbounds %34, %34* %20, i64 0, i32 0
  store i32 -1, i32* %22, align 4
  %23 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i8* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #16
  %24 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %25 = call i32 @get_next_op_number(%7* %24) #16
  call void @zend_compile_stmt(%43* %7)
  %26 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %27 = call i32 @get_next_op_number(%7* %26) #16
  %28 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %29 = getelementptr inbounds %7, %7* %28, i64 0, i32 11
  %30 = load %9*, %9** %29, align 8
  %31 = zext i32 %10 to i64
  %32 = getelementptr inbounds %9, %9* %30, i64 %31, i32 6
  %33 = load i8, i8* %32, align 4
  %34 = icmp eq i8 %33, 42
  br i1 %34, label %35, label %37

35:                                               ; preds = %1
  %36 = getelementptr inbounds %9, %9* %30, i64 %31, i32 1, i32 0
  store i32 %27, i32* %36, align 8
  br label %39

37:                                               ; preds = %1
  %38 = getelementptr inbounds %9, %9* %30, i64 %31, i32 2, i32 0
  store i32 %27, i32* %38, align 4
  br label %39

39:                                               ; preds = %35, %37
  call void @zend_compile_expr(%37* nonnull %3, %43* %5)
  %40 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %41 = call i32 @get_next_op_number(%7* %40) #16
  %42 = load i8, i8* %8, align 8
  %43 = and i8 %42, 17
  %44 = icmp ne i8 %43, 0
  %45 = icmp ne i32 %41, 0
  %46 = and i1 %45, %44
  br i1 %46, label %47, label %63

47:                                               ; preds = %39
  %48 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %49 = getelementptr inbounds %7, %7* %48, i64 0, i32 11
  %50 = load %9*, %9** %49, align 8
  %51 = zext i32 %41 to i64
  %52 = getelementptr inbounds %9, %9* %50, i64 %51
  %53 = getelementptr inbounds %9, %9* %52, i64 -1
  %54 = getelementptr inbounds %9, %9* %53, i64 0, i32 6
  %55 = load i8, i8* %54, align 4
  switch i8 %55, label %63 [
    i8 15, label %56
    i8 16, label %56
    i8 17, label %56
    i8 18, label %56
    i8 19, label %56
    i8 20, label %56
    i8 48, label %56
    i8 -59, label %56
    i8 114, label %56
    i8 115, label %56
    i8 -108, label %56
    i8 -76, label %56
    i8 -118, label %56
    i8 123, label %56
    i8 122, label %56
    i8 -67, label %56
  ]

56:                                               ; preds = %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47, %47
  %57 = call %9* @get_next_op(%7* %48) #16
  %58 = getelementptr inbounds %9, %9* %57, i64 0, i32 6
  store i8 0, i8* %58, align 4
  %59 = getelementptr inbounds %9, %9* %57, i64 0, i32 7
  store i8 8, i8* %59, align 1
  %60 = getelementptr inbounds %9, %9* %57, i64 0, i32 8
  store i8 8, i8* %60, align 2
  call fastcc void @244(%9* nonnull %57) #16
  %61 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %62 = call i32 @get_next_op_number(%7* %61) #16
  br label %63

63:                                               ; preds = %47, %39, %56
  %64 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %65 = call %9* @get_next_op(%7* %64) #16
  %66 = getelementptr inbounds %9, %9* %65, i64 0, i32 6
  store i8 44, i8* %66, align 4
  %67 = load i8, i8* %8, align 8
  %68 = getelementptr inbounds %9, %9* %65, i64 0, i32 7
  store i8 %67, i8* %68, align 1
  %69 = icmp eq i8 %67, 1
  br i1 %69, label %70, label %74

70:                                               ; preds = %63
  %71 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %72 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %73 = call i32 @zend_add_literal(%7* %71, %2* nonnull %72) #16
  br label %78

74:                                               ; preds = %63
  %75 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %76 = bitcast %38* %75 to i32*
  %77 = load i32, i32* %76, align 8
  br label %78

78:                                               ; preds = %70, %74
  %79 = phi i32 [ %73, %70 ], [ %77, %74 ]
  %80 = getelementptr inbounds %9, %9* %65, i64 0, i32 1, i32 0
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %9, %9* %65, i64 0, i32 8
  store i8 8, i8* %81, align 2
  call fastcc void @244(%9* nonnull %65) #16
  %82 = getelementptr inbounds %9, %9* %65, i64 0, i32 2, i32 0
  store i32 %25, i32* %82, align 4
  %83 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %84 = call i32 @get_next_op_number(%7* %83) #16
  %85 = load %34*, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  %86 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %34, %34* %85, i64 %87, i32 1
  store i32 %27, i32* %88, align 4
  %89 = getelementptr inbounds %34, %34* %85, i64 %87, i32 2
  store i32 %84, i32* %89, align 4
  %90 = getelementptr inbounds %34, %34* %85, i64 %87, i32 3
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %92 = getelementptr inbounds %34, %34* %85, i64 %87, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %122, label %95

95:                                               ; preds = %78
  %96 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %97 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %98 = getelementptr inbounds i8, i8* %96, i64 8
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = load i8, i8* %96, align 4
  %102 = icmp eq i8 %101, 127
  %103 = zext i1 %102 to i32
  %104 = load i32, i32* inttoptr (i64 8 to i32*), align 8
  %105 = getelementptr inbounds %7, %7* %97, i64 0, i32 17
  %106 = load %11*, %11** %105, align 8
  %107 = zext i32 %100 to i64
  %108 = getelementptr inbounds %11, %11* %106, i64 %107, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, %84
  br i1 %110, label %111, label %117

111:                                              ; preds = %95
  %112 = getelementptr inbounds %7, %7* %97, i64 0, i32 15
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, -1
  %115 = icmp eq i32 %114, %100
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  store i32 %100, i32* %112, align 8
  br label %122

117:                                              ; preds = %111, %95
  %118 = getelementptr inbounds %11, %11* %106, i64 %107, i32 2
  store i32 %84, i32* %118, align 4
  %119 = shl i32 %104, 4
  %120 = or i32 %119, %103
  %121 = getelementptr inbounds %11, %11* %106, i64 %107, i32 0
  store i32 %120, i32* %121, align 4
  br label %122

122:                                              ; preds = %78, %116, %117
  %123 = call i32 @zend_stack_del_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_stmt(%43* %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = icmp eq %43* %0, null
  br i1 %5, label %137, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %43, %43* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  %9 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %43, %43* %0, i64 0, i32 0
  br i1 %11, label %21, label %13

13:                                               ; preds = %6
  %14 = load i16, i16* %12, align 8
  switch i16 %14, label %15 [
    i16 132, label %23
    i16 279, label %23
    i16 138, label %23
    i16 140, label %23
    i16 537, label %23
    i16 68, label %23
  ]

15:                                               ; preds = %13
  %16 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %17 = tail call %9* @get_next_op(%7* %16) #16
  %18 = getelementptr inbounds %9, %9* %17, i64 0, i32 6
  store i8 101, i8* %18, align 4
  %19 = getelementptr inbounds %9, %9* %17, i64 0, i32 7
  store i8 8, i8* %19, align 1
  %20 = getelementptr inbounds %9, %9* %17, i64 0, i32 8
  store i8 8, i8* %20, align 2
  br label %21

21:                                               ; preds = %6, %15
  %22 = load i16, i16* %12, align 8
  br label %23

23:                                               ; preds = %21, %13, %13, %13, %13, %13, %13
  %24 = phi i16 [ %22, %21 ], [ %14, %13 ], [ %14, %13 ], [ %14, %13 ], [ %14, %13 ], [ %14, %13 ], [ %14, %13 ]
  switch i16 %24, label %109 [
    i16 132, label %25
    i16 276, label %39
    i16 530, label %40
    i16 277, label %41
    i16 278, label %42
    i16 282, label %43
    i16 283, label %66
    i16 285, label %88
    i16 286, label %88
    i16 284, label %89
    i16 279, label %90
    i16 531, label %91
    i16 532, label %92
    i16 1024, label %93
    i16 1025, label %94
    i16 133, label %95
    i16 534, label %96
    i16 771, label %97
    i16 536, label %98
    i16 66, label %99
    i16 68, label %99
    i16 138, label %100
    i16 140, label %101
    i16 537, label %102
    i16 69, label %103
    i16 543, label %104
    i16 143, label %105
    i16 139, label %106
    i16 540, label %107
    i16 281, label %108
  ]

25:                                               ; preds = %23
  %26 = bitcast %43* %0 to %69*
  %27 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %28 = bitcast [1 x %43*]* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %111, label %31

31:                                               ; preds = %25, %31
  %32 = phi i64 [ %35, %31 ], [ 0, %25 ]
  %33 = getelementptr inbounds %69, %69* %26, i64 0, i32 4, i64 %32
  %34 = load %43*, %43** %33, align 8
  tail call void @zend_compile_stmt(%43* %34) #16
  %35 = add nuw nsw i64 %32, 1
  %36 = load i32, i32* %28, align 8
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %35, %37
  br i1 %38, label %31, label %111

39:                                               ; preds = %23
  tail call void @zend_compile_global_var(%43* nonnull %0)
  br label %111

40:                                               ; preds = %23
  tail call void @zend_compile_static_var(%43* nonnull %0)
  br label %111

41:                                               ; preds = %23
  tail call void @zend_compile_unset(%43* nonnull %0)
  br label %111

42:                                               ; preds = %23
  tail call void @zend_compile_return(%43* nonnull %0)
  br label %111

43:                                               ; preds = %23
  %44 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %45 = load %43*, %43** %44, align 8
  %46 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #16
  call void @zend_compile_expr(%37* nonnull %2, %43* %45) #16
  %47 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %48 = call %9* @get_next_op(%7* %47) #16
  %49 = getelementptr inbounds %9, %9* %48, i64 0, i32 6
  store i8 40, i8* %49, align 4
  %50 = load i8, i8* %46, align 8
  %51 = getelementptr inbounds %9, %9* %48, i64 0, i32 7
  store i8 %50, i8* %51, align 1
  %52 = icmp eq i8 %50, 1
  br i1 %52, label %53, label %57

53:                                               ; preds = %43
  %54 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %55 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %56 = call i32 @zend_add_literal(%7* %54, %2* nonnull %55) #16
  br label %61

57:                                               ; preds = %43
  %58 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %59 = bitcast %38* %58 to i32*
  %60 = load i32, i32* %59, align 8
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi i32 [ %56, %53 ], [ %60, %57 ]
  %63 = getelementptr inbounds %9, %9* %48, i64 0, i32 1, i32 0
  store i32 %62, i32* %63, align 8
  %64 = getelementptr inbounds %9, %9* %48, i64 0, i32 8
  store i8 8, i8* %64, align 2
  call fastcc void @244(%9* nonnull %48) #16
  %65 = getelementptr inbounds %9, %9* %48, i64 0, i32 4
  store i32 0, i32* %65, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #16
  br label %111

66:                                               ; preds = %23
  %67 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %68 = load %43*, %43** %67, align 8
  %69 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %68) #16
  %70 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %71 = call %9* @get_next_op(%7* %70) #16
  %72 = getelementptr inbounds %9, %9* %71, i64 0, i32 6
  store i8 108, i8* %72, align 4
  %73 = load i8, i8* %69, align 8
  %74 = getelementptr inbounds %9, %9* %71, i64 0, i32 7
  store i8 %73, i8* %74, align 1
  %75 = icmp eq i8 %73, 1
  br i1 %75, label %76, label %80

76:                                               ; preds = %66
  %77 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %78 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %79 = call i32 @zend_add_literal(%7* %77, %2* nonnull %78) #16
  br label %84

80:                                               ; preds = %66
  %81 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %82 = bitcast %38* %81 to i32*
  %83 = load i32, i32* %82, align 8
  br label %84

84:                                               ; preds = %76, %80
  %85 = phi i32 [ %79, %76 ], [ %83, %80 ]
  %86 = getelementptr inbounds %9, %9* %71, i64 0, i32 1, i32 0
  store i32 %85, i32* %86, align 8
  %87 = getelementptr inbounds %9, %9* %71, i64 0, i32 8
  store i8 8, i8* %87, align 2
  call fastcc void @244(%9* nonnull %71) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #16
  br label %111

88:                                               ; preds = %23, %23
  tail call void @zend_compile_break_continue(%43* nonnull %0)
  br label %111

89:                                               ; preds = %23
  tail call void @zend_compile_goto(%43* nonnull %0)
  br label %111

90:                                               ; preds = %23
  tail call void @zend_compile_label(%43* nonnull %0)
  br label %111

91:                                               ; preds = %23
  tail call void @zend_compile_while(%43* nonnull %0)
  br label %111

92:                                               ; preds = %23
  tail call void @zend_compile_do_while(%43* nonnull %0)
  br label %111

93:                                               ; preds = %23
  tail call void @zend_compile_for(%43* nonnull %0)
  br label %111

94:                                               ; preds = %23
  tail call void @zend_compile_foreach(%43* nonnull %0)
  br label %111

95:                                               ; preds = %23
  tail call void @zend_compile_if(%43* nonnull %0)
  br label %111

96:                                               ; preds = %23
  tail call void @zend_compile_switch(%43* nonnull %0)
  br label %111

97:                                               ; preds = %23
  tail call void @zend_compile_try(%43* nonnull %0)
  br label %111

98:                                               ; preds = %23
  tail call void @zend_compile_declare(%43* nonnull %0)
  br label %111

99:                                               ; preds = %23, %23
  tail call void @zend_compile_func_decl(%37* null, %43* nonnull %0)
  br label %111

100:                                              ; preds = %23
  tail call void @zend_compile_prop_decl(%43* nonnull %0)
  br label %111

101:                                              ; preds = %23
  tail call void @zend_compile_class_const_decl(%43* nonnull %0)
  br label %111

102:                                              ; preds = %23
  tail call void @zend_compile_use_trait(%43* nonnull %0)
  br label %111

103:                                              ; preds = %23
  tail call void @zend_compile_class_decl(%43* nonnull %0)
  br label %111

104:                                              ; preds = %23
  tail call void @zend_compile_group_use(%43* nonnull %0)
  br label %111

105:                                              ; preds = %23
  tail call void @zend_compile_use(%43* nonnull %0)
  br label %111

106:                                              ; preds = %23
  tail call void @zend_compile_const_decl(%43* nonnull %0)
  br label %111

107:                                              ; preds = %23
  tail call void @zend_compile_namespace(%43* nonnull %0)
  br label %111

108:                                              ; preds = %23
  tail call void @zend_compile_halt_compiler(%43* nonnull %0)
  br label %111

109:                                              ; preds = %23
  %110 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #16
  call void @zend_compile_expr(%37* nonnull %4, %43* nonnull %0)
  call void @zend_do_free(%37* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #16
  br label %111

111:                                              ; preds = %31, %25, %109, %108, %107, %106, %105, %104, %103, %102, %101, %100, %99, %98, %97, %96, %95, %94, %93, %92, %91, %90, %89, %88, %84, %61, %42, %41, %40, %39
  %112 = load i64, i64* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 0, i32 0), align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %137, label %114

114:                                              ; preds = %111
  %115 = load i16, i16* %12, align 8
  switch i16 %115, label %116 [
    i16 132, label %137
    i16 279, label %137
    i16 138, label %137
    i16 140, label %137
    i16 537, label %137
    i16 68, label %137
  ]

116:                                              ; preds = %114
  %117 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %118 = getelementptr inbounds %7, %7* %117, i64 0, i32 10
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %129, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %7, %7* %117, i64 0, i32 11
  %123 = load %9*, %9** %122, align 8
  %124 = add i32 %119, -1
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %9, %9* %123, i64 %125, i32 6
  %127 = load i8, i8* %126, align 4
  %128 = icmp eq i8 %127, 105
  br i1 %128, label %137, label %129

129:                                              ; preds = %121, %116
  %130 = call %9* @get_next_op(%7* %117) #16
  %131 = getelementptr inbounds %9, %9* %130, i64 0, i32 6
  store i8 105, i8* %131, align 4
  %132 = getelementptr inbounds %9, %9* %130, i64 0, i32 7
  store i8 8, i8* %132, align 1
  %133 = getelementptr inbounds %9, %9* %130, i64 0, i32 8
  store i8 8, i8* %133, align 2
  %134 = load i64, i64* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 0, i32 0), align 8
  %135 = trunc i64 %134 to i32
  %136 = getelementptr inbounds %9, %9* %130, i64 0, i32 4
  store i32 %135, i32* %136, align 4
  br label %137

137:                                              ; preds = %114, %114, %114, %114, %114, %114, %129, %121, %111, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_do_while(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %72, align 4
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %10 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 0, i64 12, i1 false) #16
  %11 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 7), align 4
  store i32 %11, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %12 = tail call %34* @get_next_brk_cont_element() #16
  %13 = getelementptr inbounds %34, %34* %12, i64 0, i32 3
  store i32 %9, i32* %13, align 4
  store i8 0, i8* %10, align 4
  %14 = getelementptr inbounds %34, %34* %12, i64 0, i32 0
  store i32 -1, i32* %14, align 4
  %15 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #16
  %16 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %17 = call i32 @get_next_op_number(%7* %16) #16
  call void @zend_compile_stmt(%43* %5)
  %18 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %19 = call i32 @get_next_op_number(%7* %18) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %7)
  %20 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %21 = call i32 @get_next_op_number(%7* %20) #16
  %22 = load i8, i8* %8, align 8
  %23 = and i8 %22, 17
  %24 = icmp ne i8 %23, 0
  %25 = icmp ne i32 %21, 0
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %43

27:                                               ; preds = %1
  %28 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %29 = getelementptr inbounds %7, %7* %28, i64 0, i32 11
  %30 = load %9*, %9** %29, align 8
  %31 = zext i32 %21 to i64
  %32 = getelementptr inbounds %9, %9* %30, i64 %31
  %33 = getelementptr inbounds %9, %9* %32, i64 -1
  %34 = getelementptr inbounds %9, %9* %33, i64 0, i32 6
  %35 = load i8, i8* %34, align 4
  switch i8 %35, label %43 [
    i8 15, label %36
    i8 16, label %36
    i8 17, label %36
    i8 18, label %36
    i8 19, label %36
    i8 20, label %36
    i8 48, label %36
    i8 -59, label %36
    i8 114, label %36
    i8 115, label %36
    i8 -108, label %36
    i8 -76, label %36
    i8 -118, label %36
    i8 123, label %36
    i8 122, label %36
    i8 -67, label %36
  ]

36:                                               ; preds = %27, %27, %27, %27, %27, %27, %27, %27, %27, %27, %27, %27, %27, %27, %27, %27
  %37 = call %9* @get_next_op(%7* %28) #16
  %38 = getelementptr inbounds %9, %9* %37, i64 0, i32 6
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %9, %9* %37, i64 0, i32 7
  store i8 8, i8* %39, align 1
  %40 = getelementptr inbounds %9, %9* %37, i64 0, i32 8
  store i8 8, i8* %40, align 2
  call fastcc void @244(%9* nonnull %37) #16
  %41 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %42 = call i32 @get_next_op_number(%7* %41) #16
  br label %43

43:                                               ; preds = %27, %1, %36
  %44 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %45 = call %9* @get_next_op(%7* %44) #16
  %46 = getelementptr inbounds %9, %9* %45, i64 0, i32 6
  store i8 44, i8* %46, align 4
  %47 = load i8, i8* %8, align 8
  %48 = getelementptr inbounds %9, %9* %45, i64 0, i32 7
  store i8 %47, i8* %48, align 1
  %49 = icmp eq i8 %47, 1
  br i1 %49, label %50, label %54

50:                                               ; preds = %43
  %51 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %52 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %53 = call i32 @zend_add_literal(%7* %51, %2* nonnull %52) #16
  br label %58

54:                                               ; preds = %43
  %55 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %56 = bitcast %38* %55 to i32*
  %57 = load i32, i32* %56, align 8
  br label %58

58:                                               ; preds = %50, %54
  %59 = phi i32 [ %53, %50 ], [ %57, %54 ]
  %60 = getelementptr inbounds %9, %9* %45, i64 0, i32 1, i32 0
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %9, %9* %45, i64 0, i32 8
  store i8 8, i8* %61, align 2
  call fastcc void @244(%9* nonnull %45) #16
  %62 = getelementptr inbounds %9, %9* %45, i64 0, i32 2, i32 0
  store i32 %17, i32* %62, align 4
  %63 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %64 = call i32 @get_next_op_number(%7* %63) #16
  %65 = load %34*, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  %66 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %34, %34* %65, i64 %67, i32 1
  store i32 %19, i32* %68, align 4
  %69 = getelementptr inbounds %34, %34* %65, i64 %67, i32 2
  store i32 %64, i32* %69, align 4
  %70 = getelementptr inbounds %34, %34* %65, i64 %67, i32 3
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %72 = getelementptr inbounds %34, %34* %65, i64 %67, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %102, label %75

75:                                               ; preds = %58
  %76 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %77 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %78 = getelementptr inbounds i8, i8* %76, i64 8
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = load i8, i8* %76, align 4
  %82 = icmp eq i8 %81, 127
  %83 = zext i1 %82 to i32
  %84 = load i32, i32* inttoptr (i64 8 to i32*), align 8
  %85 = getelementptr inbounds %7, %7* %77, i64 0, i32 17
  %86 = load %11*, %11** %85, align 8
  %87 = zext i32 %80 to i64
  %88 = getelementptr inbounds %11, %11* %86, i64 %87, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, %64
  br i1 %90, label %91, label %97

91:                                               ; preds = %75
  %92 = getelementptr inbounds %7, %7* %77, i64 0, i32 15
  %93 = load i32, i32* %92, align 8
  %94 = add i32 %93, -1
  %95 = icmp eq i32 %94, %80
  br i1 %95, label %96, label %97

96:                                               ; preds = %91
  store i32 %80, i32* %92, align 8
  br label %102

97:                                               ; preds = %91, %75
  %98 = getelementptr inbounds %11, %11* %86, i64 %87, i32 2
  store i32 %64, i32* %98, align 4
  %99 = shl i32 %84, 4
  %100 = or i32 %99, %83
  %101 = getelementptr inbounds %11, %11* %86, i64 %87, i32 0
  store i32 %100, i32* %101, align 4
  br label %102

102:                                              ; preds = %58, %96, %97
  %103 = call i32 @zend_stack_del_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_expr_list(%37* %0, %43* readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 3, i32* %4, align 8
  %5 = icmp eq %43* %1, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = bitcast %43* %1 to %69*
  %8 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %9 = bitcast [1 x %43*]* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %6, %12
  %13 = phi i64 [ %16, %12 ], [ 0, %6 ]
  %14 = getelementptr inbounds %69, %69* %7, i64 0, i32 4, i64 %13
  %15 = load %43*, %43** %14, align 8
  tail call void @zend_do_free(%37* %0)
  tail call void @zend_compile_expr(%37* %0, %43* %15)
  %16 = add nuw nsw i64 %13, 1
  %17 = load i32, i32* %9, align 8
  %18 = zext i32 %17 to i64
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %12, label %20

20:                                               ; preds = %12, %6, %2
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_for(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %72, align 4
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 2
  %9 = load %43*, %43** %8, align 8
  %10 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 3
  %11 = load %43*, %43** %10, align 8
  %12 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 3, i32* %13, align 8
  %14 = icmp eq %43* %5, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %1
  %16 = bitcast %43* %5 to %69*
  %17 = getelementptr inbounds %43, %43* %5, i64 0, i32 3
  %18 = bitcast [1 x %43*]* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %15, %21
  %22 = phi i64 [ %25, %21 ], [ 0, %15 ]
  %23 = getelementptr inbounds %69, %69* %16, i64 0, i32 4, i64 %22
  %24 = load %43*, %43** %23, align 8
  call void @zend_do_free(%37* nonnull %3) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %24) #16
  %25 = add nuw nsw i64 %22, 1
  %26 = load i32, i32* %18, align 8
  %27 = zext i32 %26 to i64
  %28 = icmp ult i64 %25, %27
  br i1 %28, label %21, label %29

29:                                               ; preds = %21, %15, %1
  call void @zend_do_free(%37* nonnull %3)
  %30 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %31 = call i32 @get_next_op_number(%7* %30) #16
  %32 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %33 = call %9* @get_next_op(%7* %32) #16
  %34 = getelementptr inbounds %9, %9* %33, i64 0, i32 6
  store i8 42, i8* %34, align 4
  %35 = getelementptr inbounds %9, %9* %33, i64 0, i32 7
  store i8 8, i8* %35, align 1
  %36 = getelementptr inbounds %9, %9* %33, i64 0, i32 8
  store i8 8, i8* %36, align 2
  call fastcc void @244(%9* nonnull %33) #16
  %37 = getelementptr inbounds %9, %9* %33, i64 0, i32 1, i32 0
  store i32 0, i32* %37, align 8
  %38 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %39 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %39) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %39, i8 0, i64 12, i1 false) #16
  %40 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 7), align 4
  store i32 %40, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %41 = call %34* @get_next_brk_cont_element() #16
  %42 = getelementptr inbounds %34, %34* %41, i64 0, i32 3
  store i32 %38, i32* %42, align 4
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %34, %34* %41, i64 0, i32 0
  store i32 -1, i32* %43, align 4
  %44 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %39) #16
  %45 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %46 = call i32 @get_next_op_number(%7* %45) #16
  call void @zend_compile_stmt(%43* %11)
  %47 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %48 = call i32 @get_next_op_number(%7* %47) #16
  store i8 1, i8* %12, align 8
  store i32 3, i32* %13, align 8
  %49 = icmp eq %43* %9, null
  br i1 %49, label %64, label %50

50:                                               ; preds = %29
  %51 = bitcast %43* %9 to %69*
  %52 = getelementptr inbounds %43, %43* %9, i64 0, i32 3
  %53 = bitcast [1 x %43*]* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %50, %56
  %57 = phi i64 [ %60, %56 ], [ 0, %50 ]
  %58 = getelementptr inbounds %69, %69* %51, i64 0, i32 4, i64 %57
  %59 = load %43*, %43** %58, align 8
  call void @zend_do_free(%37* nonnull %3) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %59) #16
  %60 = add nuw nsw i64 %57, 1
  %61 = load i32, i32* %53, align 8
  %62 = zext i32 %61 to i64
  %63 = icmp ult i64 %60, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %50, %29
  call void @zend_do_free(%37* nonnull %3)
  %65 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %66 = call i32 @get_next_op_number(%7* %65) #16
  %67 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %68 = getelementptr inbounds %7, %7* %67, i64 0, i32 11
  %69 = load %9*, %9** %68, align 8
  %70 = zext i32 %31 to i64
  %71 = getelementptr inbounds %9, %9* %69, i64 %70, i32 6
  %72 = load i8, i8* %71, align 4
  %73 = icmp eq i8 %72, 42
  br i1 %73, label %74, label %76

74:                                               ; preds = %64
  %75 = getelementptr inbounds %9, %9* %69, i64 %70, i32 1, i32 0
  store i32 %66, i32* %75, align 8
  br label %78

76:                                               ; preds = %64
  %77 = getelementptr inbounds %9, %9* %69, i64 %70, i32 2, i32 0
  store i32 %66, i32* %77, align 4
  br label %78

78:                                               ; preds = %74, %76
  store i8 1, i8* %12, align 8
  store i32 3, i32* %13, align 8
  %79 = icmp eq %43* %7, null
  br i1 %79, label %94, label %80

80:                                               ; preds = %78
  %81 = bitcast %43* %7 to %69*
  %82 = getelementptr inbounds %43, %43* %7, i64 0, i32 3
  %83 = bitcast [1 x %43*]* %82 to i32*
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %80, %86
  %87 = phi i64 [ %90, %86 ], [ 0, %80 ]
  %88 = getelementptr inbounds %69, %69* %81, i64 0, i32 4, i64 %87
  %89 = load %43*, %43** %88, align 8
  call void @zend_do_free(%37* nonnull %3) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %89) #16
  %90 = add nuw nsw i64 %87, 1
  %91 = load i32, i32* %83, align 8
  %92 = zext i32 %91 to i64
  %93 = icmp ult i64 %90, %92
  br i1 %93, label %86, label %94

94:                                               ; preds = %86, %80, %78
  %95 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %104, label %98

98:                                               ; preds = %94
  %99 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %100 = call %9* @get_next_op(%7* %99) #16
  %101 = getelementptr inbounds %9, %9* %100, i64 0, i32 6
  store i8 101, i8* %101, align 4
  %102 = getelementptr inbounds %9, %9* %100, i64 0, i32 7
  store i8 8, i8* %102, align 1
  %103 = getelementptr inbounds %9, %9* %100, i64 0, i32 8
  store i8 8, i8* %103, align 2
  br label %104

104:                                              ; preds = %94, %98
  %105 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %106 = call i32 @get_next_op_number(%7* %105) #16
  %107 = load i8, i8* %12, align 8
  %108 = and i8 %107, 17
  %109 = icmp ne i8 %108, 0
  %110 = icmp ne i32 %106, 0
  %111 = and i1 %110, %109
  br i1 %111, label %112, label %128

112:                                              ; preds = %104
  %113 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %114 = getelementptr inbounds %7, %7* %113, i64 0, i32 11
  %115 = load %9*, %9** %114, align 8
  %116 = zext i32 %106 to i64
  %117 = getelementptr inbounds %9, %9* %115, i64 %116
  %118 = getelementptr inbounds %9, %9* %117, i64 -1
  %119 = getelementptr inbounds %9, %9* %118, i64 0, i32 6
  %120 = load i8, i8* %119, align 4
  switch i8 %120, label %128 [
    i8 15, label %121
    i8 16, label %121
    i8 17, label %121
    i8 18, label %121
    i8 19, label %121
    i8 20, label %121
    i8 48, label %121
    i8 -59, label %121
    i8 114, label %121
    i8 115, label %121
    i8 -108, label %121
    i8 -76, label %121
    i8 -118, label %121
    i8 123, label %121
    i8 122, label %121
    i8 -67, label %121
  ]

121:                                              ; preds = %112, %112, %112, %112, %112, %112, %112, %112, %112, %112, %112, %112, %112, %112, %112, %112
  %122 = call %9* @get_next_op(%7* %113) #16
  %123 = getelementptr inbounds %9, %9* %122, i64 0, i32 6
  store i8 0, i8* %123, align 4
  %124 = getelementptr inbounds %9, %9* %122, i64 0, i32 7
  store i8 8, i8* %124, align 1
  %125 = getelementptr inbounds %9, %9* %122, i64 0, i32 8
  store i8 8, i8* %125, align 2
  call fastcc void @244(%9* nonnull %122) #16
  %126 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %127 = call i32 @get_next_op_number(%7* %126) #16
  br label %128

128:                                              ; preds = %112, %104, %121
  %129 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %130 = call %9* @get_next_op(%7* %129) #16
  %131 = getelementptr inbounds %9, %9* %130, i64 0, i32 6
  store i8 44, i8* %131, align 4
  %132 = load i8, i8* %12, align 8
  %133 = getelementptr inbounds %9, %9* %130, i64 0, i32 7
  store i8 %132, i8* %133, align 1
  %134 = icmp eq i8 %132, 1
  br i1 %134, label %135, label %139

135:                                              ; preds = %128
  %136 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %137 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %138 = call i32 @zend_add_literal(%7* %136, %2* nonnull %137) #16
  br label %143

139:                                              ; preds = %128
  %140 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %141 = bitcast %38* %140 to i32*
  %142 = load i32, i32* %141, align 8
  br label %143

143:                                              ; preds = %135, %139
  %144 = phi i32 [ %138, %135 ], [ %142, %139 ]
  %145 = getelementptr inbounds %9, %9* %130, i64 0, i32 1, i32 0
  store i32 %144, i32* %145, align 8
  %146 = getelementptr inbounds %9, %9* %130, i64 0, i32 8
  store i8 8, i8* %146, align 2
  call fastcc void @244(%9* nonnull %130) #16
  %147 = getelementptr inbounds %9, %9* %130, i64 0, i32 2, i32 0
  store i32 %46, i32* %147, align 4
  %148 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %149 = call i32 @get_next_op_number(%7* %148) #16
  %150 = load %34*, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  %151 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %34, %34* %150, i64 %152, i32 1
  store i32 %48, i32* %153, align 4
  %154 = getelementptr inbounds %34, %34* %150, i64 %152, i32 2
  store i32 %149, i32* %154, align 4
  %155 = getelementptr inbounds %34, %34* %150, i64 %152, i32 3
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %157 = getelementptr inbounds %34, %34* %150, i64 %152, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %187, label %160

160:                                              ; preds = %143
  %161 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %162 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %163 = getelementptr inbounds i8, i8* %161, i64 8
  %164 = bitcast i8* %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = load i8, i8* %161, align 4
  %167 = icmp eq i8 %166, 127
  %168 = zext i1 %167 to i32
  %169 = load i32, i32* inttoptr (i64 8 to i32*), align 8
  %170 = getelementptr inbounds %7, %7* %162, i64 0, i32 17
  %171 = load %11*, %11** %170, align 8
  %172 = zext i32 %165 to i64
  %173 = getelementptr inbounds %11, %11* %171, i64 %172, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, %149
  br i1 %175, label %176, label %182

176:                                              ; preds = %160
  %177 = getelementptr inbounds %7, %7* %162, i64 0, i32 15
  %178 = load i32, i32* %177, align 8
  %179 = add i32 %178, -1
  %180 = icmp eq i32 %179, %165
  br i1 %180, label %181, label %182

181:                                              ; preds = %176
  store i32 %165, i32* %177, align 8
  br label %187

182:                                              ; preds = %176, %160
  %183 = getelementptr inbounds %11, %11* %171, i64 %172, i32 2
  store i32 %149, i32* %183, align 4
  %184 = shl i32 %169, 4
  %185 = or i32 %184, %168
  %186 = getelementptr inbounds %11, %11* %171, i64 %172, i32 0
  store i32 %185, i32* %186, align 4
  br label %187

187:                                              ; preds = %143, %181, %182
  %188 = call i32 @zend_stack_del_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_foreach(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = alloca %37, align 8
  %4 = alloca %72, align 4
  %5 = alloca %37, align 8
  %6 = alloca %37, align 8
  %7 = alloca %37, align 8
  %8 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %9 = load %43*, %43** %8, align 8
  %10 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %11 = load %43*, %43** %10, align 8
  %12 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 2
  %13 = load %43*, %43** %12, align 8
  %14 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 3
  %15 = load %43*, %43** %14, align 8
  %16 = getelementptr inbounds %43, %43* %11, i64 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = icmp eq i16 %17, 280
  %19 = getelementptr inbounds %43, %43* %9, i64 0, i32 0
  %20 = load i16, i16* %19, align 8
  switch i16 %20, label %37 [
    i16 514, label %21
    i16 513, label %21
    i16 512, label %21
    i16 256, label %21
  ]

21:                                               ; preds = %1, %1, %1, %1
  %22 = or i16 %20, 1
  %23 = icmp eq i16 %22, 513
  br i1 %23, label %24, label %32

24:                                               ; preds = %21, %24
  %25 = phi %43* [ %27, %24 ], [ %9, %21 ]
  %26 = getelementptr inbounds %43, %43* %25, i64 0, i32 3, i64 0
  %27 = load %43*, %43** %26, align 8
  %28 = getelementptr inbounds %43, %43* %27, i64 0, i32 0
  %29 = load i16, i16* %28, align 8
  %30 = or i16 %29, 1
  %31 = icmp eq i16 %30, 513
  br i1 %31, label %24, label %32

32:                                               ; preds = %24, %21
  %33 = phi i16 [ %20, %21 ], [ %29, %24 ]
  switch i16 %33, label %34 [
    i16 256, label %37
    i16 512, label %37
    i16 513, label %37
    i16 514, label %37
    i16 515, label %37
    i16 768, label %37
  ]

34:                                               ; preds = %32
  %35 = icmp eq i16 %33, 769
  %36 = zext i1 %35 to i32
  br label %37

37:                                               ; preds = %34, %32, %32, %32, %32, %32, %32, %1
  %38 = phi i32 [ 0, %1 ], [ 1, %32 ], [ %36, %34 ], [ 1, %32 ], [ 1, %32 ], [ 1, %32 ], [ 1, %32 ], [ 1, %32 ]
  %39 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #16
  %40 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #16
  %41 = getelementptr inbounds %37, %37* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #16
  %42 = icmp ne %43* %13, null
  br i1 %42, label %43, label %48

43:                                               ; preds = %37
  %44 = getelementptr inbounds %43, %43* %13, i64 0, i32 0
  %45 = load i16, i16* %44, align 8
  switch i16 %45, label %48 [
    i16 280, label %46
    i16 129, label %47
  ]

46:                                               ; preds = %43
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @70, i64 0, i64 0)) #15
  unreachable

47:                                               ; preds = %43
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @71, i64 0, i64 0)) #15
  unreachable

48:                                               ; preds = %43, %37
  br i1 %18, label %49, label %55

49:                                               ; preds = %48
  %50 = getelementptr inbounds %43, %43* %11, i64 0, i32 3, i64 0
  %51 = load %43*, %43** %50, align 8
  %52 = icmp eq i32 %38, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  call void @zend_compile_expr(%37* nonnull %5, %43* %9)
  br label %56

54:                                               ; preds = %49
  call void @zend_compile_var(%37* nonnull %5, %43* %9, i32 1)
  br label %56

55:                                               ; preds = %48
  call void @zend_compile_expr(%37* nonnull %5, %43* %9)
  br label %84

56:                                               ; preds = %53, %54
  %57 = load i16, i16* %19, align 8
  switch i16 %57, label %84 [
    i16 515, label %58
    i16 768, label %58
    i16 769, label %58
  ]

58:                                               ; preds = %56, %56, %56
  %59 = load i8, i8* %39, align 8
  %60 = icmp eq i8 %59, 4
  br i1 %60, label %61, label %83

61:                                               ; preds = %58
  %62 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %63 = call %9* @get_next_op(%7* %62) #16
  %64 = getelementptr inbounds %9, %9* %63, i64 0, i32 6
  store i8 -100, i8* %64, align 4
  %65 = load i8, i8* %39, align 8
  %66 = getelementptr inbounds %9, %9* %63, i64 0, i32 7
  store i8 %65, i8* %66, align 1
  %67 = icmp eq i8 %65, 1
  br i1 %67, label %68, label %72

68:                                               ; preds = %61
  %69 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %70 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %71 = call i32 @zend_add_literal(%7* %69, %2* nonnull %70) #16
  br label %76

72:                                               ; preds = %61
  %73 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %74 = bitcast %38* %73 to i32*
  %75 = load i32, i32* %74, align 8
  br label %76

76:                                               ; preds = %68, %72
  %77 = phi i32 [ %71, %68 ], [ %75, %72 ]
  %78 = getelementptr inbounds %9, %9* %63, i64 0, i32 1, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %9, %9* %63, i64 0, i32 8
  store i8 8, i8* %79, align 2
  call fastcc void @244(%9* nonnull %63) #16
  %80 = getelementptr inbounds %9, %9* %63, i64 0, i32 9
  store i8 4, i8* %80, align 1
  %81 = load i32, i32* %78, align 8
  %82 = getelementptr inbounds %9, %9* %63, i64 0, i32 3, i32 0
  store i32 %81, i32* %82, align 8
  br label %84

83:                                               ; preds = %58
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @21, i64 0, i64 0)) #15
  unreachable

84:                                               ; preds = %76, %56, %55
  %85 = phi %43* [ %11, %55 ], [ %51, %56 ], [ %51, %76 ]
  %86 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %87 = call i32 @get_next_op_number(%7* %86) #16
  %88 = select i1 %18, i8 125, i8 77
  %89 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %90 = call %9* @get_next_op(%7* %89) #16
  %91 = getelementptr inbounds %9, %9* %90, i64 0, i32 6
  store i8 %88, i8* %91, align 4
  %92 = load i8, i8* %39, align 8
  %93 = getelementptr inbounds %9, %9* %90, i64 0, i32 7
  store i8 %92, i8* %93, align 1
  %94 = icmp eq i8 %92, 1
  br i1 %94, label %95, label %99

95:                                               ; preds = %84
  %96 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %97 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %98 = call i32 @zend_add_literal(%7* %96, %2* nonnull %97) #16
  br label %103

99:                                               ; preds = %84
  %100 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %101 = bitcast %38* %100 to i32*
  %102 = load i32, i32* %101, align 8
  br label %103

103:                                              ; preds = %95, %99
  %104 = phi i32 [ %98, %95 ], [ %102, %99 ]
  %105 = getelementptr inbounds %9, %9* %90, i64 0, i32 1, i32 0
  store i32 %104, i32* %105, align 8
  %106 = getelementptr inbounds %9, %9* %90, i64 0, i32 8
  store i8 8, i8* %106, align 2
  call fastcc void @244(%9* nonnull %90) #16
  %107 = getelementptr inbounds %9, %9* %90, i64 0, i32 9
  store i8 4, i8* %107, align 1
  %108 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %109 = getelementptr inbounds %7, %7* %108, i64 0, i32 13
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %9, %9* %90, i64 0, i32 3, i32 0
  store i32 %110, i32* %112, align 8
  %113 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %114 = getelementptr inbounds %72, %72* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %114) #16
  %115 = bitcast %72* %4 to i32*
  store i32 0, i32* %115, align 4
  %116 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 7), align 4
  store i32 %116, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %117 = call %34* @get_next_brk_cont_element() #16
  %118 = getelementptr inbounds %34, %34* %117, i64 0, i32 3
  store i32 %113, i32* %118, align 4
  %119 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %120 = call i32 @get_next_op_number(%7* %119) #16
  store i8 127, i8* %114, align 4
  %121 = getelementptr inbounds %72, %72* %4, i64 0, i32 1
  store i8 4, i8* %121, align 1
  %122 = getelementptr inbounds %72, %72* %4, i64 0, i32 2
  store i32 %110, i32* %122, align 4
  %123 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %124 = getelementptr inbounds %7, %7* %123, i64 0, i32 15
  %125 = load i32, i32* %124, align 8
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %124, align 8
  %127 = getelementptr inbounds %7, %7* %123, i64 0, i32 17
  %128 = bitcast %11** %127 to i8**
  %129 = load i8*, i8** %128, align 8
  %130 = sext i32 %126 to i64
  %131 = mul nsw i64 %130, 12
  %132 = call i8* @_erealloc(i8* %129, i64 %131) #18
  %133 = bitcast i8* %132 to %11*
  store i8* %132, i8** %128, align 8
  %134 = load i32, i32* %124, align 8
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %11, %11* %133, i64 %135
  %137 = getelementptr inbounds %11, %11* %136, i64 -1
  %138 = getelementptr inbounds %11, %11* %137, i64 0, i32 1
  store i32 %120, i32* %138, align 4
  %139 = add nsw i32 %134, -1
  %140 = getelementptr inbounds %72, %72* %4, i64 0, i32 3, i32 0
  store i32 %139, i32* %140, align 4
  %141 = getelementptr inbounds %34, %34* %117, i64 0, i32 0
  store i32 %120, i32* %141, align 4
  %142 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i8* nonnull %114) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %114) #16
  %143 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %144 = call i32 @get_next_op_number(%7* %143) #16
  %145 = select i1 %18, i8 126, i8 78
  %146 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %147 = call %9* @get_next_op(%7* %146) #16
  %148 = getelementptr inbounds %9, %9* %147, i64 0, i32 6
  store i8 %145, i8* %148, align 4
  %149 = getelementptr inbounds %9, %9* %147, i64 0, i32 7
  store i8 4, i8* %149, align 1
  %150 = getelementptr inbounds %9, %9* %147, i64 0, i32 1, i32 0
  store i32 %110, i32* %150, align 8
  %151 = getelementptr inbounds %9, %9* %147, i64 0, i32 8
  store i8 8, i8* %151, align 2
  call fastcc void @244(%9* nonnull %147) #16
  %152 = getelementptr inbounds %43, %43* %85, i64 0, i32 0
  %153 = load i16, i16* %152, align 8
  %154 = icmp eq i16 %153, 256
  br i1 %154, label %155, label %194

155:                                              ; preds = %103
  %156 = getelementptr inbounds %43, %43* %85, i64 0, i32 3, i64 0
  %157 = load %43*, %43** %156, align 8
  %158 = getelementptr inbounds %43, %43* %157, i64 0, i32 0
  %159 = load i16, i16* %158, align 8
  %160 = icmp eq i16 %159, 64
  br i1 %160, label %161, label %178

161:                                              ; preds = %155
  %162 = getelementptr inbounds %43, %43* %157, i64 0, i32 3
  %163 = getelementptr inbounds [1 x %43*], [1 x %43*]* %162, i64 1
  %164 = bitcast [1 x %43*]* %163 to i8*
  %165 = load i8, i8* %164, align 8
  %166 = icmp eq i8 %165, 6
  br i1 %166, label %167, label %178

167:                                              ; preds = %161
  %168 = bitcast [1 x %43*]* %162 to %32**
  %169 = load %32*, %32** %168, align 8
  %170 = getelementptr inbounds %32, %32* %169, i64 0, i32 2
  %171 = load i64, i64* %170, align 8
  %172 = icmp eq i64 %171, 4
  br i1 %172, label %173, label %178

173:                                              ; preds = %167
  %174 = getelementptr inbounds %32, %32* %169, i64 0, i32 3, i64 0
  %175 = call i32 @memcmp(i8* nonnull %174, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %173
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @20, i64 0, i64 0)) #15
  unreachable

178:                                              ; preds = %173, %155, %167, %161
  %179 = call fastcc i32 @245(%37* nonnull %6, %43* nonnull %85)
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %194

181:                                              ; preds = %178
  %182 = load i8, i8* %40, align 8
  store i8 %182, i8* %151, align 2
  %183 = icmp eq i8 %182, 1
  br i1 %183, label %184, label %189

184:                                              ; preds = %181
  %185 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %186 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %187 = call i32 @zend_add_literal(%7* %185, %2* nonnull %186)
  %188 = getelementptr inbounds %9, %9* %147, i64 0, i32 2, i32 0
  store i32 %187, i32* %188, align 4
  br label %217

189:                                              ; preds = %181
  %190 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %191 = bitcast %38* %190 to i32*
  %192 = getelementptr inbounds %9, %9* %147, i64 0, i32 2, i32 0
  %193 = load i32, i32* %191, align 8
  store i32 %193, i32* %192, align 4
  br label %217

194:                                              ; preds = %103, %178
  store i8 4, i8* %151, align 2
  %195 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %196 = getelementptr inbounds %7, %7* %195, i64 0, i32 13
  %197 = load i32, i32* %196, align 4
  %198 = add i32 %197, 1
  store i32 %198, i32* %196, align 4
  %199 = getelementptr inbounds %9, %9* %147, i64 0, i32 2, i32 0
  store i32 %197, i32* %199, align 4
  store i8 4, i8* %40, align 8
  %200 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %201 = bitcast %38* %200 to i32*
  store i32 %197, i32* %201, align 8
  br i1 %18, label %202, label %205

202:                                              ; preds = %194
  %203 = call %43* @zend_ast_create_znode(%37* nonnull %6) #16
  %204 = call %43* (i16, ...) @zend_ast_create(i16 zeroext 518, %43* nonnull %85, %43* %203) #16
  call void @zend_compile_assign_ref(%37* null, %43* %204) #16
  br label %217

205:                                              ; preds = %194
  %206 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #16
  %207 = load i16, i16* %152, align 8
  %208 = icmp eq i16 %207, 129
  br i1 %208, label %209, label %213

209:                                              ; preds = %205
  %210 = getelementptr inbounds %43, %43* %85, i64 0, i32 1
  %211 = load i16, i16* %210, align 2
  %212 = trunc i16 %211 to i8
  call fastcc void @238(%37* nonnull %2, %43* nonnull %85, %37* nonnull %6, i8 zeroext %212) #16
  br label %216

213:                                              ; preds = %205
  %214 = call %43* @zend_ast_create_znode(%37* nonnull %6) #16
  %215 = call %43* (i16, ...) @zend_ast_create(i16 zeroext 517, %43* nonnull %85, %43* %214) #16
  call void @zend_compile_assign(%37* nonnull %2, %43* %215) #16
  br label %216

216:                                              ; preds = %209, %213
  call void @zend_do_free(%37* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #16
  br label %217

217:                                              ; preds = %189, %184, %216, %202
  br i1 %42, label %220, label %218

218:                                              ; preds = %217
  %219 = zext i32 %144 to i64
  br label %245

220:                                              ; preds = %217
  %221 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %222 = getelementptr inbounds %7, %7* %221, i64 0, i32 11
  %223 = load %9*, %9** %222, align 8
  %224 = zext i32 %144 to i64
  %225 = getelementptr inbounds %9, %9* %223, i64 %224, i32 9
  store i8 2, i8* %225, align 1
  %226 = getelementptr inbounds %7, %7* %221, i64 0, i32 13
  %227 = load i32, i32* %226, align 4
  %228 = add i32 %227, 1
  store i32 %228, i32* %226, align 4
  %229 = getelementptr inbounds %9, %9* %223, i64 %224, i32 3, i32 0
  store i32 %227, i32* %229, align 8
  store i8 2, i8* %41, align 8
  %230 = getelementptr inbounds %37, %37* %7, i64 0, i32 2
  %231 = bitcast %38* %230 to i32*
  %232 = load i32, i32* %229, align 8
  store i32 %232, i32* %231, align 8
  %233 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #16
  %234 = getelementptr inbounds %43, %43* %13, i64 0, i32 0
  %235 = load i16, i16* %234, align 8
  %236 = icmp eq i16 %235, 129
  br i1 %236, label %237, label %241

237:                                              ; preds = %220
  %238 = getelementptr inbounds %43, %43* %13, i64 0, i32 1
  %239 = load i16, i16* %238, align 2
  %240 = trunc i16 %239 to i8
  call fastcc void @238(%37* nonnull %3, %43* nonnull %13, %37* nonnull %7, i8 zeroext %240) #16
  br label %244

241:                                              ; preds = %220
  %242 = call %43* @zend_ast_create_znode(%37* nonnull %7) #16
  %243 = call %43* (i16, ...) @zend_ast_create(i16 zeroext 517, %43* nonnull %13, %43* %242) #16
  call void @zend_compile_assign(%37* nonnull %3, %43* %243) #16
  br label %244

244:                                              ; preds = %237, %241
  call void @zend_do_free(%37* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #16
  br label %245

245:                                              ; preds = %218, %244
  %246 = phi i64 [ %219, %218 ], [ %224, %244 ]
  call void @zend_compile_stmt(%43* %15)
  %247 = getelementptr inbounds %43, %43* %0, i64 0, i32 2
  %248 = load i32, i32* %247, align 4
  store i32 %248, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  %249 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %250 = call i32 @get_next_op_number(%7* %249) #16
  %251 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %252 = call %9* @get_next_op(%7* %251) #16
  %253 = getelementptr inbounds %9, %9* %252, i64 0, i32 6
  store i8 42, i8* %253, align 4
  %254 = getelementptr inbounds %9, %9* %252, i64 0, i32 7
  store i8 8, i8* %254, align 1
  %255 = getelementptr inbounds %9, %9* %252, i64 0, i32 8
  store i8 8, i8* %255, align 2
  call fastcc void @244(%9* nonnull %252) #16
  %256 = getelementptr inbounds %9, %9* %252, i64 0, i32 1, i32 0
  store i32 %144, i32* %256, align 8
  %257 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %258 = getelementptr inbounds %7, %7* %257, i64 0, i32 11
  %259 = load %9*, %9** %258, align 8
  %260 = zext i32 %87 to i64
  %261 = call i32 @get_next_op_number(%7* %257) #16
  %262 = getelementptr inbounds %9, %9* %259, i64 %260, i32 2, i32 0
  store i32 %261, i32* %262, align 4
  %263 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %264 = getelementptr inbounds %7, %7* %263, i64 0, i32 11
  %265 = load %9*, %9** %264, align 8
  %266 = call i32 @get_next_op_number(%7* %263) #16
  %267 = getelementptr inbounds %9, %9* %265, i64 %246, i32 4
  store i32 %266, i32* %267, align 4
  %268 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %269 = call i32 @get_next_op_number(%7* %268) #16
  %270 = load %34*, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  %271 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %34, %34* %270, i64 %272, i32 1
  store i32 %144, i32* %273, align 4
  %274 = getelementptr inbounds %34, %34* %270, i64 %272, i32 2
  store i32 %269, i32* %274, align 4
  %275 = getelementptr inbounds %34, %34* %270, i64 %272, i32 3
  %276 = load i32, i32* %275, align 4
  store i32 %276, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %277 = getelementptr inbounds %34, %34* %270, i64 %272, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = icmp eq i32 %278, -1
  br i1 %279, label %306, label %280

280:                                              ; preds = %245
  %281 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %282 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %283 = getelementptr inbounds i8, i8* %281, i64 8
  %284 = bitcast i8* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = load i8, i8* %281, align 4
  %287 = icmp eq i8 %286, 127
  %288 = zext i1 %287 to i32
  %289 = getelementptr inbounds %7, %7* %282, i64 0, i32 17
  %290 = load %11*, %11** %289, align 8
  %291 = zext i32 %285 to i64
  %292 = getelementptr inbounds %11, %11* %290, i64 %291, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = icmp eq i32 %293, %269
  br i1 %294, label %295, label %301

295:                                              ; preds = %280
  %296 = getelementptr inbounds %7, %7* %282, i64 0, i32 15
  %297 = load i32, i32* %296, align 8
  %298 = add i32 %297, -1
  %299 = icmp eq i32 %298, %285
  br i1 %299, label %300, label %301

300:                                              ; preds = %295
  store i32 %285, i32* %296, align 8
  br label %306

301:                                              ; preds = %295, %280
  %302 = getelementptr inbounds %11, %11* %290, i64 %291, i32 2
  store i32 %269, i32* %302, align 4
  %303 = shl i32 %110, 4
  %304 = or i32 %303, %288
  %305 = getelementptr inbounds %11, %11* %290, i64 %291, i32 0
  store i32 %304, i32* %305, align 4
  br label %306

306:                                              ; preds = %245, %300, %301
  %307 = call i32 @zend_stack_del_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %308 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %309 = call %9* @get_next_op(%7* %308) #16
  %310 = getelementptr inbounds %9, %9* %309, i64 0, i32 6
  store i8 127, i8* %310, align 4
  %311 = getelementptr inbounds %9, %9* %309, i64 0, i32 7
  store i8 4, i8* %311, align 1
  %312 = getelementptr inbounds %9, %9* %309, i64 0, i32 1, i32 0
  store i32 %110, i32* %312, align 8
  %313 = getelementptr inbounds %9, %9* %309, i64 0, i32 8
  store i8 8, i8* %313, align 2
  call fastcc void @244(%9* nonnull %309) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_if(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %37, align 8
  %3 = bitcast %43* %0 to %69*
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %5 = bitcast [1 x %43*]* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp ugt i32 %6, 1
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = add i32 %6, -1
  %10 = zext i32 %9 to i64
  %11 = tail call noalias i8* @_safe_emalloc(i64 4, i64 %10, i64 0) #16
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %5, align 8
  br label %14

14:                                               ; preds = %8, %1
  %15 = phi i32 [ %13, %8 ], [ %6, %1 ]
  %16 = phi i8* [ %11, %8 ], [ null, %1 ]
  %17 = phi i32* [ %12, %8 ], [ null, %1 ]
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %138, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  %21 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %23 = bitcast %38* %22 to i32*
  br label %24

24:                                               ; preds = %19, %107
  %25 = phi i64 [ 0, %19 ], [ %108, %107 ]
  %26 = phi i32 [ undef, %19 ], [ %77, %107 ]
  %27 = getelementptr inbounds %69, %69* %3, i64 0, i32 4, i64 %25
  %28 = load %43*, %43** %27, align 8
  %29 = getelementptr inbounds %43, %43* %28, i64 0, i32 3, i64 0
  %30 = load %43*, %43** %29, align 8
  %31 = getelementptr inbounds %43, %43* %28, i64 0, i32 3, i64 1
  %32 = load %43*, %43** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #16
  %33 = icmp ne %43* %30, null
  br i1 %33, label %34, label %76

34:                                               ; preds = %24
  call void @zend_compile_expr(%37* nonnull %2, %43* nonnull %30)
  %35 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %36 = call i32 @get_next_op_number(%7* %35) #16
  %37 = load i8, i8* %20, align 8
  %38 = and i8 %37, 17
  %39 = icmp ne i8 %38, 0
  %40 = icmp ne i32 %36, 0
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %58

42:                                               ; preds = %34
  %43 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %44 = getelementptr inbounds %7, %7* %43, i64 0, i32 11
  %45 = load %9*, %9** %44, align 8
  %46 = zext i32 %36 to i64
  %47 = getelementptr inbounds %9, %9* %45, i64 -1
  %48 = getelementptr inbounds %9, %9* %47, i64 %46
  %49 = getelementptr inbounds %9, %9* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 4
  switch i8 %50, label %58 [
    i8 15, label %51
    i8 16, label %51
    i8 17, label %51
    i8 18, label %51
    i8 19, label %51
    i8 20, label %51
    i8 48, label %51
    i8 -59, label %51
    i8 114, label %51
    i8 115, label %51
    i8 -108, label %51
    i8 -76, label %51
    i8 -118, label %51
    i8 123, label %51
    i8 122, label %51
    i8 -67, label %51
  ]

51:                                               ; preds = %42, %42, %42, %42, %42, %42, %42, %42, %42, %42, %42, %42, %42, %42, %42, %42
  %52 = call %9* @get_next_op(%7* %43) #16
  %53 = getelementptr inbounds %9, %9* %52, i64 0, i32 6
  store i8 0, i8* %53, align 4
  %54 = getelementptr inbounds %9, %9* %52, i64 0, i32 7
  store i8 8, i8* %54, align 1
  %55 = getelementptr inbounds %9, %9* %52, i64 0, i32 8
  store i8 8, i8* %55, align 2
  call fastcc void @244(%9* nonnull %52) #16
  %56 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %57 = call i32 @get_next_op_number(%7* %56) #16
  br label %58

58:                                               ; preds = %42, %34, %51
  %59 = phi i32 [ %57, %51 ], [ %36, %34 ], [ %36, %42 ]
  %60 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %61 = call %9* @get_next_op(%7* %60) #16
  %62 = getelementptr inbounds %9, %9* %61, i64 0, i32 6
  store i8 43, i8* %62, align 4
  %63 = load i8, i8* %20, align 8
  %64 = getelementptr inbounds %9, %9* %61, i64 0, i32 7
  store i8 %63, i8* %64, align 1
  %65 = icmp eq i8 %63, 1
  br i1 %65, label %66, label %69

66:                                               ; preds = %58
  %67 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %68 = call i32 @zend_add_literal(%7* %67, %2* nonnull %21) #16
  br label %71

69:                                               ; preds = %58
  %70 = load i32, i32* %23, align 8
  br label %71

71:                                               ; preds = %66, %69
  %72 = phi i32 [ %68, %66 ], [ %70, %69 ]
  %73 = getelementptr inbounds %9, %9* %61, i64 0, i32 1, i32 0
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %9, %9* %61, i64 0, i32 8
  store i8 8, i8* %74, align 2
  call fastcc void @244(%9* nonnull %61) #16
  %75 = getelementptr inbounds %9, %9* %61, i64 0, i32 2, i32 0
  store i32 0, i32* %75, align 4
  br label %76

76:                                               ; preds = %71, %24
  %77 = phi i32 [ %59, %71 ], [ %26, %24 ]
  call void @zend_compile_stmt(%43* %32)
  %78 = load i32, i32* %5, align 8
  %79 = add i32 %78, -1
  %80 = zext i32 %79 to i64
  %81 = icmp eq i64 %25, %80
  br i1 %81, label %92, label %82

82:                                               ; preds = %76
  %83 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %84 = call i32 @get_next_op_number(%7* %83) #16
  %85 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %86 = call %9* @get_next_op(%7* %85) #16
  %87 = getelementptr inbounds %9, %9* %86, i64 0, i32 6
  store i8 42, i8* %87, align 4
  %88 = getelementptr inbounds %9, %9* %86, i64 0, i32 7
  store i8 8, i8* %88, align 1
  %89 = getelementptr inbounds %9, %9* %86, i64 0, i32 8
  store i8 8, i8* %89, align 2
  call fastcc void @244(%9* nonnull %86) #16
  %90 = getelementptr inbounds %9, %9* %86, i64 0, i32 1, i32 0
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds i32, i32* %17, i64 %25
  store i32 %84, i32* %91, align 4
  br label %92

92:                                               ; preds = %76, %82
  br i1 %33, label %93, label %107

93:                                               ; preds = %92
  %94 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %95 = call i32 @get_next_op_number(%7* %94) #16
  %96 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %97 = getelementptr inbounds %7, %7* %96, i64 0, i32 11
  %98 = load %9*, %9** %97, align 8
  %99 = zext i32 %77 to i64
  %100 = getelementptr inbounds %9, %9* %98, i64 %99, i32 6
  %101 = load i8, i8* %100, align 4
  %102 = icmp eq i8 %101, 42
  br i1 %102, label %103, label %105

103:                                              ; preds = %93
  %104 = getelementptr inbounds %9, %9* %98, i64 %99, i32 1, i32 0
  store i32 %95, i32* %104, align 8
  br label %107

105:                                              ; preds = %93
  %106 = getelementptr inbounds %9, %9* %98, i64 %99, i32 2, i32 0
  store i32 %95, i32* %106, align 4
  br label %107

107:                                              ; preds = %105, %103, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #16
  %108 = add nuw nsw i64 %25, 1
  %109 = load i32, i32* %5, align 8
  %110 = zext i32 %109 to i64
  %111 = icmp ult i64 %108, %110
  br i1 %111, label %24, label %112

112:                                              ; preds = %107
  %113 = icmp ugt i32 %109, 1
  br i1 %113, label %114, label %138

114:                                              ; preds = %112, %131
  %115 = phi i64 [ %132, %131 ], [ 0, %112 ]
  %116 = getelementptr inbounds i32, i32* %17, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %119 = call i32 @get_next_op_number(%7* %118) #16
  %120 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %121 = getelementptr inbounds %7, %7* %120, i64 0, i32 11
  %122 = load %9*, %9** %121, align 8
  %123 = zext i32 %117 to i64
  %124 = getelementptr inbounds %9, %9* %122, i64 %123, i32 6
  %125 = load i8, i8* %124, align 4
  %126 = icmp eq i8 %125, 42
  br i1 %126, label %127, label %129

127:                                              ; preds = %114
  %128 = getelementptr inbounds %9, %9* %122, i64 %123, i32 1, i32 0
  store i32 %119, i32* %128, align 8
  br label %131

129:                                              ; preds = %114
  %130 = getelementptr inbounds %9, %9* %122, i64 %123, i32 2, i32 0
  store i32 %119, i32* %130, align 4
  br label %131

131:                                              ; preds = %127, %129
  %132 = add nuw nsw i64 %115, 1
  %133 = load i32, i32* %5, align 8
  %134 = add i32 %133, -1
  %135 = zext i32 %134 to i64
  %136 = icmp ult i64 %132, %135
  br i1 %136, label %114, label %137

137:                                              ; preds = %131
  call void @_efree(i8* %16) #16
  br label %138

138:                                              ; preds = %14, %137, %112
  ret void
}

declare dso_local noalias i8* @_safe_emalloc(i64, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_switch(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %72, align 4
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = alloca %37, align 8
  %6 = alloca %37, align 8
  %7 = alloca %2, align 8
  %8 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %9 = load %43*, %43** %8, align 8
  %10 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %11 = bitcast %43** %10 to %69**
  %12 = load %69*, %69** %11, align 8
  %13 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #16
  %14 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %9)
  %15 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %16 = getelementptr inbounds %72, %72* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 0, i64 12, i1 false) #16
  %17 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 7), align 4
  store i32 %17, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %18 = call %34* @get_next_brk_cont_element() #16
  %19 = getelementptr inbounds %34, %34* %18, i64 0, i32 3
  store i32 %15, i32* %19, align 4
  %20 = load i8, i8* %13, align 8
  %21 = and i8 %20, 6
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %50, label %23

23:                                               ; preds = %1
  %24 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %25 = call i32 @get_next_op_number(%7* %24) #16
  store i8 70, i8* %16, align 4
  %26 = load i8, i8* %13, align 8
  %27 = getelementptr inbounds %72, %72* %2, i64 0, i32 1
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %29 = bitcast %38* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %72, %72* %2, i64 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %33 = getelementptr inbounds %7, %7* %32, i64 0, i32 15
  %34 = load i32, i32* %33, align 8
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %7, %7* %32, i64 0, i32 17
  %37 = bitcast %11** %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = sext i32 %35 to i64
  %40 = mul nsw i64 %39, 12
  %41 = call i8* @_erealloc(i8* %38, i64 %40) #18
  %42 = bitcast i8* %41 to %11*
  store i8* %41, i8** %37, align 8
  %43 = load i32, i32* %33, align 8
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %11, %11* %42, i64 %44
  %46 = getelementptr inbounds %11, %11* %45, i64 -1
  %47 = getelementptr inbounds %11, %11* %46, i64 0, i32 1
  store i32 %25, i32* %47, align 4
  %48 = add nsw i32 %43, -1
  %49 = getelementptr inbounds %72, %72* %2, i64 0, i32 3, i32 0
  store i32 %48, i32* %49, align 4
  br label %51

50:                                               ; preds = %1
  store i8 0, i8* %16, align 4
  br label %51

51:                                               ; preds = %23, %50
  %52 = phi i32 [ %25, %23 ], [ -1, %50 ]
  %53 = getelementptr inbounds %34, %34* %18, i64 0, i32 0
  store i32 %52, i32* %53, align 4
  %54 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #16
  store i8 2, i8* %14, align 8
  %55 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %56 = getelementptr inbounds %7, %7* %55, i64 0, i32 13
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 4
  %59 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %60 = bitcast %38* %59 to i32*
  store i32 %57, i32* %60, align 8
  %61 = getelementptr inbounds %69, %69* %12, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %181, label %64

64:                                               ; preds = %51, %100
  %65 = phi i64 [ %102, %100 ], [ 0, %51 ]
  %66 = phi i8 [ %101, %100 ], [ 0, %51 ]
  %67 = getelementptr inbounds %69, %69* %12, i64 0, i32 4, i64 %65
  %68 = load %43*, %43** %67, align 8
  %69 = getelementptr inbounds %43, %43* %68, i64 0, i32 3, i64 0
  %70 = load %43*, %43** %69, align 8
  %71 = icmp eq %43* %70, null
  br i1 %71, label %100, label %72

72:                                               ; preds = %64
  call void @zend_eval_const_expr(%43** nonnull %69) #16
  %73 = load %43*, %43** %69, align 8
  %74 = getelementptr inbounds %43, %43* %73, i64 0, i32 0
  %75 = load i16, i16* %74, align 8
  %76 = icmp eq i16 %75, 64
  br i1 %76, label %77, label %181

77:                                               ; preds = %72
  %78 = getelementptr inbounds %43, %43* %73, i64 0, i32 3
  %79 = getelementptr inbounds [1 x %43*], [1 x %43*]* %78, i64 1
  %80 = bitcast [1 x %43*]* %79 to i8*
  %81 = load i8, i8* %80, align 8
  switch i8 %81, label %181 [
    i8 4, label %82
    i8 6, label %82
  ]

82:                                               ; preds = %77, %77
  %83 = icmp eq i8 %66, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = icmp eq i8 %66, %81
  br i1 %85, label %86, label %181

86:                                               ; preds = %84, %82
  %87 = phi i8 [ %66, %84 ], [ %81, %82 ]
  %88 = icmp eq i8 %81, 6
  br i1 %88, label %89, label %100

89:                                               ; preds = %86
  %90 = bitcast [1 x %43*]* %78 to %32**
  %91 = load %32*, %32** %90, align 8
  %92 = getelementptr inbounds %32, %32* %91, i64 0, i32 3, i64 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp sgt i8 %93, 57
  br i1 %94, label %100, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %32, %32* %91, i64 0, i32 2
  %97 = load i64, i64* %96, align 8
  %98 = call zeroext i8 @_is_numeric_string_ex(i8* nonnull %92, i64 %97, i64* null, double* null, i32 0, i32* null) #16
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %181

100:                                              ; preds = %95, %89, %86, %64
  %101 = phi i8 [ %66, %64 ], [ %87, %89 ], [ %87, %95 ], [ %87, %86 ]
  %102 = add nuw nsw i64 %65, 1
  %103 = load i32, i32* %61, align 8
  %104 = zext i32 %103 to i64
  %105 = icmp ult i64 %102, %104
  br i1 %105, label %64, label %106

106:                                              ; preds = %100
  %107 = icmp eq i8 %101, 0
  br i1 %107, label %181, label %108

108:                                              ; preds = %106
  %109 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %110 = and i32 %109, 2048
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %181

112:                                              ; preds = %108
  %113 = icmp eq i8 %101, 4
  %114 = icmp ugt i32 %103, 4
  %115 = icmp ugt i32 %103, 1
  %116 = select i1 %113, i1 %114, i1 %115
  br i1 %116, label %117, label %181

117:                                              ; preds = %112
  %118 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #16
  %119 = call noalias i8* @_emalloc_56() #16
  %120 = bitcast i8* %119 to %39*
  %121 = load i32, i32* %61, align 8
  call void @_zend_hash_init(%39* %120, i32 %121, void (%2*)* null, i8 zeroext 0) #16
  store i8 1, i8* %118, align 8
  %122 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %123 = bitcast %2* %122 to i8**
  store i8* %119, i8** %123, align 8
  %124 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 5127, i32* %124, align 8
  %125 = select i1 %113, i8 -69, i8 -68
  %126 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %127 = call %9* @get_next_op(%7* %126) #16
  %128 = getelementptr inbounds %9, %9* %127, i64 0, i32 6
  store i8 %125, i8* %128, align 4
  %129 = load i8, i8* %13, align 8
  %130 = getelementptr inbounds %9, %9* %127, i64 0, i32 7
  store i8 %129, i8* %130, align 1
  %131 = icmp eq i8 %129, 1
  br i1 %131, label %132, label %136

132:                                              ; preds = %117
  %133 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %134 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %135 = call i32 @zend_add_literal(%7* %133, %2* nonnull %134) #16
  br label %140

136:                                              ; preds = %117
  %137 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %138 = bitcast %38* %137 to i32*
  %139 = load i32, i32* %138, align 8
  br label %140

140:                                              ; preds = %136, %132
  %141 = phi i32 [ %139, %136 ], [ %135, %132 ]
  %142 = getelementptr inbounds %9, %9* %127, i64 0, i32 1, i32 0
  store i32 %141, i32* %142, align 8
  %143 = getelementptr inbounds %9, %9* %127, i64 0, i32 8
  store i8 1, i8* %143, align 2
  %144 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %145 = call i32 @zend_add_literal(%7* %144, %2* nonnull %122) #16
  %146 = getelementptr inbounds %9, %9* %127, i64 0, i32 2, i32 0
  store i32 %145, i32* %146, align 4
  call fastcc void @244(%9* nonnull %127) #16
  %147 = load i8, i8* %130, align 1
  %148 = icmp eq i8 %147, 1
  br i1 %148, label %149, label %172

149:                                              ; preds = %140
  %150 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %151 = getelementptr inbounds %7, %7* %150, i64 0, i32 26
  %152 = load %2*, %2** %151, align 8
  %153 = load i32, i32* %142, align 8
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds %2, %2* %152, i64 %154
  %156 = getelementptr inbounds %2, %2* %152, i64 %154, i32 1
  %157 = bitcast %4* %156 to %65*
  %158 = getelementptr inbounds %65, %65* %157, i64 0, i32 1
  %159 = load i8, i8* %158, align 1
  %160 = and i8 %159, 20
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %172, label %162

162:                                              ; preds = %149
  %163 = and i8 %159, 16
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %166, label %165

165:                                              ; preds = %162
  call void @_zval_copy_ctor_func(%2* nonnull %155) #16
  br label %172

166:                                              ; preds = %162
  %167 = bitcast %2* %155 to %66**
  %168 = load %66*, %66** %167, align 8
  %169 = getelementptr inbounds %66, %66* %168, i64 0, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %169, align 4
  br label %172

172:                                              ; preds = %166, %165, %149, %140
  %173 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %174 = getelementptr inbounds %7, %7* %173, i64 0, i32 11
  %175 = bitcast %9** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = ptrtoint %9* %127 to i64
  %178 = sub i64 %177, %176
  %179 = lshr exact i64 %178, 5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #16
  %180 = and i64 %179, 4294967295
  br label %181

181:                                              ; preds = %72, %84, %95, %77, %112, %108, %51, %106, %172
  %182 = phi %39* [ %120, %172 ], [ null, %112 ], [ null, %106 ], [ null, %51 ], [ null, %108 ], [ null, %77 ], [ null, %95 ], [ null, %84 ], [ null, %72 ]
  %183 = phi i64 [ %180, %172 ], [ 0, %112 ], [ 0, %106 ], [ 0, %51 ], [ 0, %108 ], [ 0, %77 ], [ 0, %95 ], [ 0, %84 ], [ 0, %72 ]
  %184 = load i32, i32* %61, align 8
  %185 = zext i32 %184 to i64
  %186 = call noalias i8* @_safe_emalloc(i64 4, i64 %185, i64 0) #16
  %187 = bitcast i8* %186 to i32*
  %188 = load i32, i32* %61, align 8
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %415, label %190

190:                                              ; preds = %181
  %191 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  %192 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0, i32 1
  %193 = bitcast %4* %192 to i8*
  %194 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %195 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %196 = bitcast %38* %195 to i32*
  %197 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %198 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %199 = bitcast %38* %198 to i32*
  %200 = getelementptr inbounds %38, %38* %59, i64 0, i32 0
  %201 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  br label %202

202:                                              ; preds = %190, %409
  %203 = phi i64 [ 0, %190 ], [ %411, %409 ]
  %204 = phi i8 [ 0, %190 ], [ %410, %409 ]
  %205 = getelementptr inbounds %69, %69* %12, i64 0, i32 4, i64 %203
  %206 = load %43*, %43** %205, align 8
  %207 = getelementptr inbounds %43, %43* %206, i64 0, i32 3, i64 0
  %208 = load %43*, %43** %207, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #16
  %209 = icmp eq %43* %208, null
  br i1 %209, label %210, label %215

210:                                              ; preds = %202
  %211 = icmp eq i8 %204, 0
  br i1 %211, label %409, label %212

212:                                              ; preds = %210
  %213 = getelementptr inbounds %43, %43* %206, i64 0, i32 2
  %214 = load i32, i32* %213, align 4
  store i32 %214, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @72, i64 0, i64 0)) #15
  unreachable

215:                                              ; preds = %202
  call void @zend_compile_expr(%37* nonnull %6, %43* nonnull %208)
  %216 = load i8, i8* %13, align 8
  %217 = icmp eq i8 %216, 1
  br i1 %217, label %218, label %302

218:                                              ; preds = %215
  %219 = load i8, i8* %193, align 8
  switch i8 %219, label %302 [
    i8 2, label %220
    i8 3, label %261
  ]

220:                                              ; preds = %218
  %221 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %222 = call i32 @get_next_op_number(%7* %221) #16
  %223 = load i8, i8* %191, align 8
  %224 = and i8 %223, 17
  %225 = icmp ne i8 %224, 0
  %226 = icmp ne i32 %222, 0
  %227 = and i1 %226, %225
  br i1 %227, label %228, label %244

228:                                              ; preds = %220
  %229 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %230 = getelementptr inbounds %7, %7* %229, i64 0, i32 11
  %231 = load %9*, %9** %230, align 8
  %232 = zext i32 %222 to i64
  %233 = getelementptr inbounds %9, %9* %231, i64 -1
  %234 = getelementptr inbounds %9, %9* %233, i64 %232
  %235 = getelementptr inbounds %9, %9* %234, i64 0, i32 6
  %236 = load i8, i8* %235, align 4
  switch i8 %236, label %244 [
    i8 15, label %237
    i8 16, label %237
    i8 17, label %237
    i8 18, label %237
    i8 19, label %237
    i8 20, label %237
    i8 48, label %237
    i8 -59, label %237
    i8 114, label %237
    i8 115, label %237
    i8 -108, label %237
    i8 -76, label %237
    i8 -118, label %237
    i8 123, label %237
    i8 122, label %237
    i8 -67, label %237
  ]

237:                                              ; preds = %228, %228, %228, %228, %228, %228, %228, %228, %228, %228, %228, %228, %228, %228, %228, %228
  %238 = call %9* @get_next_op(%7* %229) #16
  %239 = getelementptr inbounds %9, %9* %238, i64 0, i32 6
  store i8 0, i8* %239, align 4
  %240 = getelementptr inbounds %9, %9* %238, i64 0, i32 7
  store i8 8, i8* %240, align 1
  %241 = getelementptr inbounds %9, %9* %238, i64 0, i32 8
  store i8 8, i8* %241, align 2
  call fastcc void @244(%9* nonnull %238) #16
  %242 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %243 = call i32 @get_next_op_number(%7* %242) #16
  br label %244

244:                                              ; preds = %228, %220, %237
  %245 = phi i32 [ %243, %237 ], [ %222, %220 ], [ %222, %228 ]
  %246 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %247 = call %9* @get_next_op(%7* %246) #16
  %248 = getelementptr inbounds %9, %9* %247, i64 0, i32 6
  store i8 43, i8* %248, align 4
  %249 = load i8, i8* %191, align 8
  %250 = getelementptr inbounds %9, %9* %247, i64 0, i32 7
  store i8 %249, i8* %250, align 1
  %251 = icmp eq i8 %249, 1
  br i1 %251, label %252, label %255

252:                                              ; preds = %244
  %253 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %254 = call i32 @zend_add_literal(%7* %253, %2* nonnull %197) #16
  br label %257

255:                                              ; preds = %244
  %256 = load i32, i32* %199, align 8
  br label %257

257:                                              ; preds = %252, %255
  %258 = phi i32 [ %254, %252 ], [ %256, %255 ]
  %259 = getelementptr inbounds %9, %9* %247, i64 0, i32 1, i32 0
  store i32 %258, i32* %259, align 8
  %260 = getelementptr inbounds %9, %9* %247, i64 0, i32 8
  store i8 8, i8* %260, align 2
  call fastcc void @244(%9* nonnull %247) #16
  br label %404

261:                                              ; preds = %218
  %262 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %263 = call i32 @get_next_op_number(%7* %262) #16
  %264 = load i8, i8* %191, align 8
  %265 = and i8 %264, 17
  %266 = icmp ne i8 %265, 0
  %267 = icmp ne i32 %263, 0
  %268 = and i1 %267, %266
  br i1 %268, label %269, label %285

269:                                              ; preds = %261
  %270 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %271 = getelementptr inbounds %7, %7* %270, i64 0, i32 11
  %272 = load %9*, %9** %271, align 8
  %273 = zext i32 %263 to i64
  %274 = getelementptr inbounds %9, %9* %272, i64 -1
  %275 = getelementptr inbounds %9, %9* %274, i64 %273
  %276 = getelementptr inbounds %9, %9* %275, i64 0, i32 6
  %277 = load i8, i8* %276, align 4
  switch i8 %277, label %285 [
    i8 15, label %278
    i8 16, label %278
    i8 17, label %278
    i8 18, label %278
    i8 19, label %278
    i8 20, label %278
    i8 48, label %278
    i8 -59, label %278
    i8 114, label %278
    i8 115, label %278
    i8 -108, label %278
    i8 -76, label %278
    i8 -118, label %278
    i8 123, label %278
    i8 122, label %278
    i8 -67, label %278
  ]

278:                                              ; preds = %269, %269, %269, %269, %269, %269, %269, %269, %269, %269, %269, %269, %269, %269, %269, %269
  %279 = call %9* @get_next_op(%7* %270) #16
  %280 = getelementptr inbounds %9, %9* %279, i64 0, i32 6
  store i8 0, i8* %280, align 4
  %281 = getelementptr inbounds %9, %9* %279, i64 0, i32 7
  store i8 8, i8* %281, align 1
  %282 = getelementptr inbounds %9, %9* %279, i64 0, i32 8
  store i8 8, i8* %282, align 2
  call fastcc void @244(%9* nonnull %279) #16
  %283 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %284 = call i32 @get_next_op_number(%7* %283) #16
  br label %285

285:                                              ; preds = %269, %261, %278
  %286 = phi i32 [ %284, %278 ], [ %263, %261 ], [ %263, %269 ]
  %287 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %288 = call %9* @get_next_op(%7* %287) #16
  %289 = getelementptr inbounds %9, %9* %288, i64 0, i32 6
  store i8 44, i8* %289, align 4
  %290 = load i8, i8* %191, align 8
  %291 = getelementptr inbounds %9, %9* %288, i64 0, i32 7
  store i8 %290, i8* %291, align 1
  %292 = icmp eq i8 %290, 1
  br i1 %292, label %293, label %296

293:                                              ; preds = %285
  %294 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %295 = call i32 @zend_add_literal(%7* %294, %2* nonnull %197) #16
  br label %298

296:                                              ; preds = %285
  %297 = load i32, i32* %199, align 8
  br label %298

298:                                              ; preds = %293, %296
  %299 = phi i32 [ %295, %293 ], [ %297, %296 ]
  %300 = getelementptr inbounds %9, %9* %288, i64 0, i32 1, i32 0
  store i32 %299, i32* %300, align 8
  %301 = getelementptr inbounds %9, %9* %288, i64 0, i32 8
  store i8 8, i8* %301, align 2
  call fastcc void @244(%9* nonnull %288) #16
  br label %404

302:                                              ; preds = %218, %215
  %303 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %304 = call %9* @get_next_op(%7* %303) #16
  %305 = getelementptr inbounds %9, %9* %304, i64 0, i32 6
  store i8 48, i8* %305, align 4
  %306 = load i8, i8* %13, align 8
  %307 = getelementptr inbounds %9, %9* %304, i64 0, i32 7
  store i8 %306, i8* %307, align 1
  %308 = icmp eq i8 %306, 1
  br i1 %308, label %309, label %312

309:                                              ; preds = %302
  %310 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %311 = call i32 @zend_add_literal(%7* %310, %2* nonnull %194) #16
  br label %314

312:                                              ; preds = %302
  %313 = load i32, i32* %196, align 8
  br label %314

314:                                              ; preds = %312, %309
  %315 = phi i32 [ %313, %312 ], [ %311, %309 ]
  %316 = getelementptr inbounds %9, %9* %304, i64 0, i32 1, i32 0
  store i32 %315, i32* %316, align 8
  %317 = load i8, i8* %191, align 8
  %318 = getelementptr inbounds %9, %9* %304, i64 0, i32 8
  store i8 %317, i8* %318, align 2
  %319 = icmp eq i8 %317, 1
  br i1 %319, label %320, label %323

320:                                              ; preds = %314
  %321 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %322 = call i32 @zend_add_literal(%7* %321, %2* nonnull %197) #16
  br label %325

323:                                              ; preds = %314
  %324 = load i32, i32* %199, align 8
  br label %325

325:                                              ; preds = %320, %323
  %326 = phi i32 [ %322, %320 ], [ %324, %323 ]
  %327 = getelementptr inbounds %9, %9* %304, i64 0, i32 2, i32 0
  store i32 %326, i32* %327, align 4
  call fastcc void @244(%9* nonnull %304) #16
  %328 = load i8, i8* %14, align 8
  %329 = getelementptr inbounds %9, %9* %304, i64 0, i32 9
  store i8 %328, i8* %329, align 1
  %330 = icmp eq i8 %328, 1
  br i1 %330, label %331, label %334

331:                                              ; preds = %325
  %332 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %333 = call i32 @zend_add_literal(%7* %332, %2* nonnull %200)
  br label %336

334:                                              ; preds = %325
  %335 = load i32, i32* %60, align 8
  br label %336

336:                                              ; preds = %334, %331
  %337 = phi i32 [ %335, %334 ], [ %333, %331 ]
  %338 = getelementptr inbounds %9, %9* %304, i64 0, i32 3, i32 0
  store i32 %337, i32* %338, align 8
  %339 = load i8, i8* %307, align 1
  %340 = icmp eq i8 %339, 1
  br i1 %340, label %341, label %364

341:                                              ; preds = %336
  %342 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %343 = getelementptr inbounds %7, %7* %342, i64 0, i32 26
  %344 = load %2*, %2** %343, align 8
  %345 = load i32, i32* %316, align 8
  %346 = zext i32 %345 to i64
  %347 = getelementptr inbounds %2, %2* %344, i64 %346
  %348 = getelementptr inbounds %2, %2* %344, i64 %346, i32 1
  %349 = bitcast %4* %348 to %65*
  %350 = getelementptr inbounds %65, %65* %349, i64 0, i32 1
  %351 = load i8, i8* %350, align 1
  %352 = and i8 %351, 20
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %364, label %354

354:                                              ; preds = %341
  %355 = and i8 %351, 16
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %358, label %357

357:                                              ; preds = %354
  call void @_zval_copy_ctor_func(%2* nonnull %347) #16
  br label %364

358:                                              ; preds = %354
  %359 = bitcast %2* %347 to %66**
  %360 = load %66*, %66** %359, align 8
  %361 = getelementptr inbounds %66, %66* %360, i64 0, i32 0, i32 0
  %362 = load i32, i32* %361, align 4
  %363 = add i32 %362, 1
  store i32 %363, i32* %361, align 4
  br label %364

364:                                              ; preds = %358, %357, %341, %336
  %365 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %366 = call i32 @get_next_op_number(%7* %365) #16
  %367 = load i8, i8* %14, align 8
  %368 = and i8 %367, 17
  %369 = icmp ne i8 %368, 0
  %370 = icmp ne i32 %366, 0
  %371 = and i1 %370, %369
  br i1 %371, label %372, label %388

372:                                              ; preds = %364
  %373 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %374 = getelementptr inbounds %7, %7* %373, i64 0, i32 11
  %375 = load %9*, %9** %374, align 8
  %376 = zext i32 %366 to i64
  %377 = getelementptr inbounds %9, %9* %375, i64 -1
  %378 = getelementptr inbounds %9, %9* %377, i64 %376
  %379 = getelementptr inbounds %9, %9* %378, i64 0, i32 6
  %380 = load i8, i8* %379, align 4
  switch i8 %380, label %388 [
    i8 15, label %381
    i8 16, label %381
    i8 17, label %381
    i8 18, label %381
    i8 19, label %381
    i8 20, label %381
    i8 48, label %381
    i8 -59, label %381
    i8 114, label %381
    i8 115, label %381
    i8 -108, label %381
    i8 -76, label %381
    i8 -118, label %381
    i8 123, label %381
    i8 122, label %381
    i8 -67, label %381
  ]

381:                                              ; preds = %372, %372, %372, %372, %372, %372, %372, %372, %372, %372, %372, %372, %372, %372, %372, %372
  %382 = call %9* @get_next_op(%7* %373) #16
  %383 = getelementptr inbounds %9, %9* %382, i64 0, i32 6
  store i8 0, i8* %383, align 4
  %384 = getelementptr inbounds %9, %9* %382, i64 0, i32 7
  store i8 8, i8* %384, align 1
  %385 = getelementptr inbounds %9, %9* %382, i64 0, i32 8
  store i8 8, i8* %385, align 2
  call fastcc void @244(%9* nonnull %382) #16
  %386 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %387 = call i32 @get_next_op_number(%7* %386) #16
  br label %388

388:                                              ; preds = %372, %364, %381
  %389 = phi i32 [ %387, %381 ], [ %366, %364 ], [ %366, %372 ]
  %390 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %391 = call %9* @get_next_op(%7* %390) #16
  %392 = getelementptr inbounds %9, %9* %391, i64 0, i32 6
  store i8 44, i8* %392, align 4
  %393 = getelementptr inbounds %9, %9* %391, i64 0, i32 7
  store i8 %367, i8* %393, align 1
  %394 = icmp eq i8 %367, 1
  br i1 %394, label %395, label %398

395:                                              ; preds = %388
  %396 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %397 = call i32 @zend_add_literal(%7* %396, %2* nonnull %201) #16
  br label %400

398:                                              ; preds = %388
  %399 = load i32, i32* %60, align 8
  br label %400

400:                                              ; preds = %395, %398
  %401 = phi i32 [ %397, %395 ], [ %399, %398 ]
  %402 = getelementptr inbounds %9, %9* %391, i64 0, i32 1, i32 0
  store i32 %401, i32* %402, align 8
  %403 = getelementptr inbounds %9, %9* %391, i64 0, i32 8
  store i8 8, i8* %403, align 2
  call fastcc void @244(%9* nonnull %391) #16
  br label %404

404:                                              ; preds = %298, %400, %257
  %405 = phi %9* [ %247, %257 ], [ %391, %400 ], [ %288, %298 ]
  %406 = phi i32 [ %245, %257 ], [ %389, %400 ], [ %286, %298 ]
  %407 = getelementptr inbounds %9, %9* %405, i64 0, i32 2, i32 0
  store i32 0, i32* %407, align 4
  %408 = getelementptr inbounds i32, i32* %187, i64 %203
  store i32 %406, i32* %408, align 4
  br label %409

409:                                              ; preds = %404, %210
  %410 = phi i8 [ 1, %210 ], [ %204, %404 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #16
  %411 = add nuw nsw i64 %203, 1
  %412 = load i32, i32* %61, align 8
  %413 = zext i32 %412 to i64
  %414 = icmp ult i64 %411, %413
  br i1 %414, label %202, label %415

415:                                              ; preds = %409, %181
  %416 = phi i8 [ 0, %181 ], [ %410, %409 ]
  %417 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %418 = call i32 @get_next_op_number(%7* %417) #16
  %419 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %420 = call %9* @get_next_op(%7* %419) #16
  %421 = getelementptr inbounds %9, %9* %420, i64 0, i32 6
  store i8 42, i8* %421, align 4
  %422 = getelementptr inbounds %9, %9* %420, i64 0, i32 7
  store i8 8, i8* %422, align 1
  %423 = getelementptr inbounds %9, %9* %420, i64 0, i32 8
  store i8 8, i8* %423, align 2
  call fastcc void @244(%9* nonnull %420) #16
  %424 = getelementptr inbounds %9, %9* %420, i64 0, i32 1, i32 0
  store i32 0, i32* %424, align 8
  %425 = load i32, i32* %61, align 8
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %502, label %427

427:                                              ; preds = %415
  %428 = zext i32 %418 to i64
  %429 = icmp eq %39* %182, null
  %430 = bitcast %2* %7 to i8*
  %431 = getelementptr inbounds %2, %2* %7, i64 0, i32 0, i32 0
  %432 = getelementptr inbounds %2, %2* %7, i64 0, i32 1, i32 0
  br label %433

433:                                              ; preds = %427, %497
  %434 = phi i64 [ 0, %427 ], [ %498, %497 ]
  %435 = getelementptr inbounds %69, %69* %12, i64 0, i32 4, i64 %434
  %436 = load %43*, %43** %435, align 8
  %437 = getelementptr inbounds %43, %43* %436, i64 0, i32 3, i64 0
  %438 = load %43*, %43** %437, align 8
  %439 = getelementptr inbounds %43, %43* %436, i64 0, i32 3, i64 1
  %440 = load %43*, %43** %439, align 8
  %441 = icmp eq %43* %438, null
  br i1 %441, label %477, label %442

442:                                              ; preds = %433
  %443 = getelementptr inbounds i32, i32* %187, i64 %434
  %444 = load i32, i32* %443, align 4
  %445 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %446 = call i32 @get_next_op_number(%7* %445) #16
  %447 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %448 = getelementptr inbounds %7, %7* %447, i64 0, i32 11
  %449 = load %9*, %9** %448, align 8
  %450 = zext i32 %444 to i64
  %451 = getelementptr inbounds %9, %9* %449, i64 %450, i32 6
  %452 = load i8, i8* %451, align 4
  %453 = icmp eq i8 %452, 42
  br i1 %453, label %454, label %456

454:                                              ; preds = %442
  %455 = getelementptr inbounds %9, %9* %449, i64 %450, i32 1, i32 0
  store i32 %446, i32* %455, align 8
  br label %458

456:                                              ; preds = %442
  %457 = getelementptr inbounds %9, %9* %449, i64 %450, i32 2, i32 0
  store i32 %446, i32* %457, align 4
  br label %458

458:                                              ; preds = %454, %456
  br i1 %429, label %497, label %459

459:                                              ; preds = %458
  %460 = getelementptr inbounds %43, %43* %438, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %430) #16
  %461 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %462 = call i32 @get_next_op_number(%7* %461) #16
  %463 = zext i32 %462 to i64
  store i64 %463, i64* %431, align 8
  store i32 4, i32* %432, align 8
  %464 = getelementptr inbounds [1 x %43*], [1 x %43*]* %460, i64 1
  %465 = bitcast [1 x %43*]* %464 to i8*
  %466 = load i8, i8* %465, align 8
  %467 = icmp eq i8 %466, 4
  br i1 %467, label %468, label %472

468:                                              ; preds = %459
  %469 = bitcast [1 x %43*]* %460 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = call %2* @_zend_hash_index_add(%39* nonnull %182, i64 %470, %2* nonnull %7) #16
  br label %476

472:                                              ; preds = %459
  %473 = bitcast [1 x %43*]* %460 to %32**
  %474 = load %32*, %32** %473, align 8
  %475 = call %2* @_zend_hash_add(%39* nonnull %182, %32* %474, %2* nonnull %7) #16
  br label %476

476:                                              ; preds = %472, %468
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %430) #16
  br label %497

477:                                              ; preds = %433
  %478 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %479 = call i32 @get_next_op_number(%7* %478) #16
  %480 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %481 = getelementptr inbounds %7, %7* %480, i64 0, i32 11
  %482 = load %9*, %9** %481, align 8
  %483 = getelementptr inbounds %9, %9* %482, i64 %428, i32 6
  %484 = load i8, i8* %483, align 4
  %485 = icmp eq i8 %484, 42
  br i1 %485, label %486, label %488

486:                                              ; preds = %477
  %487 = getelementptr inbounds %9, %9* %482, i64 %428, i32 1, i32 0
  store i32 %479, i32* %487, align 8
  br label %490

488:                                              ; preds = %477
  %489 = getelementptr inbounds %9, %9* %482, i64 %428, i32 2, i32 0
  store i32 %479, i32* %489, align 4
  br label %490

490:                                              ; preds = %486, %488
  br i1 %429, label %497, label %491

491:                                              ; preds = %490
  %492 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %493 = getelementptr inbounds %7, %7* %492, i64 0, i32 11
  %494 = load %9*, %9** %493, align 8
  %495 = call i32 @get_next_op_number(%7* %492) #16
  %496 = getelementptr inbounds %9, %9* %494, i64 %183, i32 4
  store i32 %495, i32* %496, align 4
  br label %497

497:                                              ; preds = %458, %490, %491, %476
  call void @zend_compile_stmt(%43* %440)
  %498 = add nuw nsw i64 %434, 1
  %499 = load i32, i32* %61, align 8
  %500 = zext i32 %499 to i64
  %501 = icmp ult i64 %498, %500
  br i1 %501, label %433, label %502

502:                                              ; preds = %497, %415
  %503 = icmp eq i8 %416, 0
  br i1 %503, label %504, label %526

504:                                              ; preds = %502
  %505 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %506 = call i32 @get_next_op_number(%7* %505) #16
  %507 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %508 = getelementptr inbounds %7, %7* %507, i64 0, i32 11
  %509 = load %9*, %9** %508, align 8
  %510 = zext i32 %418 to i64
  %511 = getelementptr inbounds %9, %9* %509, i64 %510, i32 6
  %512 = load i8, i8* %511, align 4
  %513 = icmp eq i8 %512, 42
  br i1 %513, label %514, label %516

514:                                              ; preds = %504
  %515 = getelementptr inbounds %9, %9* %509, i64 %510, i32 1, i32 0
  store i32 %506, i32* %515, align 8
  br label %518

516:                                              ; preds = %504
  %517 = getelementptr inbounds %9, %9* %509, i64 %510, i32 2, i32 0
  store i32 %506, i32* %517, align 4
  br label %518

518:                                              ; preds = %514, %516
  %519 = icmp eq %39* %182, null
  br i1 %519, label %526, label %520

520:                                              ; preds = %518
  %521 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %522 = getelementptr inbounds %7, %7* %521, i64 0, i32 11
  %523 = load %9*, %9** %522, align 8
  %524 = call i32 @get_next_op_number(%7* %521) #16
  %525 = getelementptr inbounds %9, %9* %523, i64 %183, i32 4
  store i32 %524, i32* %525, align 4
  br label %526

526:                                              ; preds = %518, %502, %520
  %527 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %528 = call i32 @get_next_op_number(%7* %527) #16
  %529 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %530 = call i32 @get_next_op_number(%7* %529) #16
  %531 = load %34*, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  %532 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds %34, %34* %531, i64 %533, i32 1
  store i32 %528, i32* %534, align 4
  %535 = getelementptr inbounds %34, %34* %531, i64 %533, i32 2
  store i32 %530, i32* %535, align 4
  %536 = getelementptr inbounds %34, %34* %531, i64 %533, i32 3
  %537 = load i32, i32* %536, align 4
  store i32 %537, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  %538 = getelementptr inbounds %34, %34* %531, i64 %533, i32 0
  %539 = load i32, i32* %538, align 4
  %540 = icmp eq i32 %539, -1
  br i1 %540, label %570, label %541

541:                                              ; preds = %526
  %542 = call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %543 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %544 = getelementptr inbounds i8, i8* %542, i64 8
  %545 = bitcast i8* %544 to i32*
  %546 = load i32, i32* %545, align 4
  %547 = load i8, i8* %542, align 4
  %548 = icmp eq i8 %547, 127
  %549 = zext i1 %548 to i32
  %550 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %551 = bitcast %38* %550 to i32*
  %552 = load i32, i32* %551, align 8
  %553 = getelementptr inbounds %7, %7* %543, i64 0, i32 17
  %554 = load %11*, %11** %553, align 8
  %555 = zext i32 %546 to i64
  %556 = getelementptr inbounds %11, %11* %554, i64 %555, i32 1
  %557 = load i32, i32* %556, align 4
  %558 = icmp eq i32 %557, %530
  br i1 %558, label %559, label %565

559:                                              ; preds = %541
  %560 = getelementptr inbounds %7, %7* %543, i64 0, i32 15
  %561 = load i32, i32* %560, align 8
  %562 = add i32 %561, -1
  %563 = icmp eq i32 %562, %546
  br i1 %563, label %564, label %565

564:                                              ; preds = %559
  store i32 %546, i32* %560, align 8
  br label %570

565:                                              ; preds = %559, %541
  %566 = getelementptr inbounds %11, %11* %554, i64 %555, i32 2
  store i32 %530, i32* %566, align 4
  %567 = shl i32 %552, 4
  %568 = or i32 %567, %549
  %569 = getelementptr inbounds %11, %11* %554, i64 %555, i32 0
  store i32 %568, i32* %569, align 4
  br label %570

570:                                              ; preds = %526, %564, %565
  %571 = call i32 @zend_stack_del_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %572 = load i8, i8* %13, align 8
  %573 = and i8 %572, 6
  %574 = icmp eq i8 %573, 0
  br i1 %574, label %594, label %575

575:                                              ; preds = %570
  %576 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %577 = call %9* @get_next_op(%7* %576) #16
  %578 = getelementptr inbounds %9, %9* %577, i64 0, i32 6
  store i8 70, i8* %578, align 4
  %579 = load i8, i8* %13, align 8
  %580 = getelementptr inbounds %9, %9* %577, i64 0, i32 7
  store i8 %579, i8* %580, align 1
  %581 = icmp eq i8 %579, 1
  br i1 %581, label %582, label %586

582:                                              ; preds = %575
  %583 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %584 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %585 = call i32 @zend_add_literal(%7* %583, %2* nonnull %584)
  br label %590

586:                                              ; preds = %575
  %587 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %588 = bitcast %38* %587 to i32*
  %589 = load i32, i32* %588, align 8
  br label %590

590:                                              ; preds = %586, %582
  %591 = phi i32 [ %589, %586 ], [ %585, %582 ]
  %592 = getelementptr inbounds %9, %9* %577, i64 0, i32 1, i32 0
  store i32 %591, i32* %592, align 8
  %593 = getelementptr inbounds %9, %9* %577, i64 0, i32 8
  store i8 8, i8* %593, align 2
  br label %613

594:                                              ; preds = %570
  %595 = icmp eq i8 %572, 1
  br i1 %595, label %596, label %613

596:                                              ; preds = %594
  %597 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0, i32 1
  %598 = bitcast %4* %597 to %65*
  %599 = getelementptr inbounds %65, %65* %598, i64 0, i32 1
  %600 = load i8, i8* %599, align 1
  %601 = and i8 %600, 4
  %602 = icmp eq i8 %601, 0
  br i1 %602, label %613, label %603

603:                                              ; preds = %596
  %604 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %605 = bitcast %2* %604 to %66**
  %606 = load %66*, %66** %605, align 8
  %607 = getelementptr inbounds %66, %66* %606, i64 0, i32 0, i32 0
  %608 = load i32, i32* %607, align 4
  %609 = add i32 %608, -1
  store i32 %609, i32* %607, align 4
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %613

611:                                              ; preds = %603
  %612 = load %66*, %66** %605, align 8
  call void @_zval_dtor_func(%66* %612) #16
  br label %613

613:                                              ; preds = %611, %603, %596, %594, %590
  call void @_efree(i8* %186) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #16
  ret void
}

declare dso_local %2* @_zend_hash_index_add(%39*, i64, %2*) local_unnamed_addr #3

declare dso_local %2* @_zend_hash_add(%39*, %32*, %2*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_try(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = alloca %2, align 8
  %4 = alloca %72, align 4
  %5 = alloca %72, align 4
  %6 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %9 = bitcast %43** %8 to %69**
  %10 = load %69*, %69** %9, align 8
  %11 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 2
  %12 = load %43*, %43** %11, align 8
  %13 = getelementptr inbounds %69, %69* %10, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = tail call noalias i8* @_safe_emalloc(i64 4, i64 %15, i64 0) #16
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 4), align 8
  %19 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 5), align 4
  %20 = load i32, i32* %13, align 8
  %21 = icmp ne i32 %20, 0
  %22 = icmp ne %43* %12, null
  %23 = or i1 %22, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %1
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @73, i64 0, i64 0)) #15
  unreachable

25:                                               ; preds = %1
  %26 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9), align 8
  %27 = icmp eq %39* %26, null
  br i1 %27, label %60, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %39, %39* %26, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %39, %39* %26, i64 0, i32 3
  %32 = zext i32 %30 to i64
  br label %33

33:                                               ; preds = %36, %28
  %34 = phi i64 [ %44, %36 ], [ %32, %28 ]
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %60, label %36

36:                                               ; preds = %33
  %37 = load %41*, %41** %31, align 8
  %38 = add i64 %34, 4294967295
  %39 = and i64 %38, 4294967295
  %40 = getelementptr inbounds %41, %41* %37, i64 %39, i32 0, i32 1
  %41 = bitcast %4* %40 to i8*
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 0
  %44 = add nsw i64 %34, -1
  br i1 %43, label %33, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %41, %41* %37, i64 %39, i32 0
  %47 = bitcast %2* %46 to %74**
  %48 = load %74*, %74** %47, align 8
  %49 = getelementptr inbounds %74, %74* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %52 = tail call i32 @get_next_op_number(%7* %51) #16
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %45
  %55 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %56 = tail call %9* @get_next_op(%7* %55) #16
  %57 = getelementptr inbounds %9, %9* %56, i64 0, i32 6
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %9, %9* %56, i64 0, i32 7
  store i8 8, i8* %58, align 1
  %59 = getelementptr inbounds %9, %9* %56, i64 0, i32 8
  store i8 8, i8* %59, align 2
  tail call fastcc void @244(%9* nonnull %56) #16
  br label %60

60:                                               ; preds = %33, %45, %54, %25
  %61 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %62 = tail call i32 @get_next_op_number(%7* %61) #16
  %63 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %64 = getelementptr inbounds %7, %7* %63, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %64, align 4
  %67 = getelementptr inbounds %7, %7* %63, i64 0, i32 18
  %68 = bitcast %12** %67 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = sext i32 %66 to i64
  %71 = tail call i8* @_safe_erealloc(i8* %69, i64 16, i64 %70, i64 0) #16
  %72 = bitcast i8* %71 to %12*
  store i8* %71, i8** %68, align 8
  %73 = zext i32 %65 to i64
  %74 = getelementptr inbounds %12, %12* %72, i64 %73, i32 0
  store i32 %62, i32* %74, align 4
  %75 = getelementptr inbounds %12, %12* %72, i64 %73, i32 1
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds %12, %12* %72, i64 %73, i32 2
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds %12, %12* %72, i64 %73, i32 3
  store i32 0, i32* %77, align 4
  br i1 %22, label %78, label %95

78:                                               ; preds = %60
  %79 = getelementptr inbounds %72, %72* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %79) #16
  %80 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %81 = getelementptr inbounds %7, %7* %80, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 536870912
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %78
  %86 = or i32 %82, 536870912
  store i32 %86, i32* %81, align 4
  br label %87

87:                                               ; preds = %78, %85
  %88 = getelementptr inbounds %7, %7* %80, i64 0, i32 13
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %88, align 4
  store i32 %89, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 4), align 8
  store i8 -94, i8* %79, align 4
  %91 = getelementptr inbounds %72, %72* %4, i64 0, i32 1
  store i8 2, i8* %91, align 1
  %92 = getelementptr inbounds %72, %72* %4, i64 0, i32 2
  store i32 %89, i32* %92, align 4
  %93 = getelementptr inbounds %72, %72* %4, i64 0, i32 3, i32 0
  store i32 %65, i32* %93, align 4
  %94 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i8* nonnull %79) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %79) #16
  br label %95

95:                                               ; preds = %87, %60
  store i32 %65, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 5), align 4
  call void @zend_compile_stmt(%43* %7)
  %96 = load i32, i32* %13, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %364, label %98

98:                                               ; preds = %95
  %99 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %100 = call i32 @get_next_op_number(%7* %99) #16
  %101 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %102 = call %9* @get_next_op(%7* %101) #16
  %103 = getelementptr inbounds %9, %9* %102, i64 0, i32 6
  store i8 42, i8* %103, align 4
  %104 = getelementptr inbounds %9, %9* %102, i64 0, i32 7
  store i8 8, i8* %104, align 1
  %105 = getelementptr inbounds %9, %9* %102, i64 0, i32 8
  store i8 8, i8* %105, align 2
  call fastcc void @244(%9* nonnull %102) #16
  %106 = getelementptr inbounds %9, %9* %102, i64 0, i32 1, i32 0
  store i32 0, i32* %106, align 8
  store i32 %100, i32* %17, align 4
  %107 = load i32, i32* %13, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %364, label %109

109:                                              ; preds = %98
  %110 = bitcast %2* %3 to i8*
  %111 = bitcast %2* %3 to %32**
  %112 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  %113 = bitcast %2* %2 to i8*
  %114 = bitcast %2* %2 to %32**
  %115 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  br label %118

116:                                              ; preds = %338
  %117 = icmp eq i32 %339, 0
  br i1 %117, label %364, label %342

118:                                              ; preds = %109, %338
  %119 = phi i64 [ 0, %109 ], [ %131, %338 ]
  %120 = phi i32 [ %107, %109 ], [ %339, %338 ]
  %121 = phi i32 [ undef, %109 ], [ %321, %338 ]
  %122 = getelementptr inbounds %69, %69* %10, i64 0, i32 4, i64 %119
  %123 = load %43*, %43** %122, align 8
  %124 = getelementptr inbounds %43, %43* %123, i64 0, i32 3, i64 0
  %125 = bitcast %43** %124 to %69**
  %126 = load %69*, %69** %125, align 8
  %127 = getelementptr inbounds %43, %43* %123, i64 0, i32 3, i64 1
  %128 = load %43*, %43** %127, align 8
  %129 = getelementptr inbounds %43, %43* %123, i64 0, i32 3, i64 2
  %130 = load %43*, %43** %129, align 8
  %131 = add nuw nsw i64 %119, 1
  %132 = zext i32 %120 to i64
  %133 = icmp eq i64 %131, %132
  %134 = getelementptr inbounds %69, %69* %126, i64 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = add i32 %135, -1
  %137 = zext i32 %136 to i64
  %138 = call noalias i8* @_safe_emalloc(i64 4, i64 %137, i64 0) #16
  %139 = bitcast i8* %138 to i32*
  %140 = getelementptr inbounds %43, %43* %123, i64 0, i32 2
  %141 = load i32, i32* %140, align 4
  store i32 %141, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  %142 = load i32, i32* %134, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %150, label %144

144:                                              ; preds = %118
  %145 = getelementptr inbounds %43, %43* %128, i64 0, i32 3
  %146 = bitcast [1 x %43*]* %145 to %32**
  %147 = trunc i64 %119 to i32
  br label %152

148:                                              ; preds = %294
  %149 = icmp eq i32 %295, 1
  br i1 %149, label %320, label %150

150:                                              ; preds = %118, %148
  %151 = phi i32 [ %196, %148 ], [ %121, %118 ]
  br label %297

152:                                              ; preds = %144, %294
  %153 = phi i32 [ %142, %144 ], [ %295, %294 ]
  %154 = phi i32 [ 0, %144 ], [ %158, %294 ]
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds %69, %69* %126, i64 0, i32 4, i64 %155
  %157 = load %43*, %43** %156, align 8
  %158 = add i32 %154, 1
  %159 = icmp eq i32 %158, %153
  %160 = getelementptr inbounds %43, %43* %157, i64 0, i32 0
  %161 = load i16, i16* %160, align 8
  %162 = icmp eq i16 %161, 64
  br i1 %162, label %163, label %193

163:                                              ; preds = %152
  %164 = getelementptr inbounds %43, %43* %157, i64 0, i32 1
  %165 = load i16, i16* %164, align 2
  %166 = icmp eq i16 %165, 0
  br i1 %166, label %194, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %43, %43* %157, i64 0, i32 3
  %169 = bitcast [1 x %43*]* %168 to %32**
  %170 = load %32*, %32** %169, align 8
  %171 = getelementptr inbounds %32, %32* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 4
  br i1 %173, label %174, label %180

174:                                              ; preds = %167
  %175 = getelementptr inbounds %32, %32* %170, i64 0, i32 3, i64 0
  %176 = call i32 @zend_binary_strcasecmp(i8* nonnull %175, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %193, label %178

178:                                              ; preds = %174
  %179 = load i64, i64* %171, align 8
  br label %180

180:                                              ; preds = %178, %167
  %181 = phi i64 [ %179, %178 ], [ %172, %167 ]
  %182 = icmp eq i64 %181, 6
  br i1 %182, label %183, label %194

183:                                              ; preds = %180
  %184 = getelementptr inbounds %32, %32* %170, i64 0, i32 3, i64 0
  %185 = call i32 @zend_binary_strcasecmp(i8* nonnull %184, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %193, label %187

187:                                              ; preds = %183
  %188 = load i64, i64* %171, align 8
  %189 = icmp eq i64 %188, 6
  br i1 %189, label %190, label %194

190:                                              ; preds = %187
  %191 = call i32 @zend_binary_strcasecmp(i8* nonnull %184, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %152, %174, %183, %190
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @74, i64 0, i64 0)) #15
  unreachable

194:                                              ; preds = %180, %187, %190, %163
  %195 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %196 = call i32 @get_next_op_number(%7* %195) #16
  %197 = or i32 %154, %147
  %198 = icmp eq i32 %197, 0
  %199 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  br i1 %198, label %200, label %204

200:                                              ; preds = %194
  %201 = getelementptr inbounds %7, %7* %199, i64 0, i32 18
  %202 = load %12*, %12** %201, align 8
  %203 = getelementptr inbounds %12, %12* %202, i64 %73, i32 1
  store i32 %196, i32* %203, align 4
  br label %204

204:                                              ; preds = %194, %200
  %205 = call %9* @get_next_op(%7* %199) #16
  %206 = getelementptr inbounds %9, %9* %205, i64 0, i32 6
  store i8 107, i8* %206, align 4
  %207 = getelementptr inbounds %9, %9* %205, i64 0, i32 7
  store i8 1, i8* %207, align 1
  %208 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %209 = getelementptr inbounds %43, %43* %157, i64 0, i32 3
  %210 = getelementptr inbounds [1 x %43*], [1 x %43*]* %209, i64 1
  %211 = bitcast [1 x %43*]* %210 to i8*
  %212 = load i8, i8* %211, align 8
  %213 = icmp eq i8 %212, 6
  br i1 %213, label %215, label %214

214:                                              ; preds = %204
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

215:                                              ; preds = %204
  %216 = bitcast [1 x %43*]* %209 to %32**
  %217 = load %32*, %32** %216, align 8
  %218 = load i16, i16* %164, align 2
  %219 = zext i16 %218 to i32
  %220 = call %32* @zend_resolve_class_name(%32* %217, i32 %219) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #16
  store %32* %220, %32** %111, align 8
  %221 = getelementptr inbounds %32, %32* %220, i64 0, i32 0, i32 1
  %222 = bitcast %18* %221 to %64*
  %223 = getelementptr inbounds %64, %64* %222, i64 0, i32 1
  %224 = load i8, i8* %223, align 1
  %225 = and i8 %224, 2
  %226 = icmp eq i8 %225, 0
  %227 = select i1 %226, i32 5126, i32 6
  store i32 %227, i32* %112, align 8
  %228 = call i32 @zend_add_literal(%7* %208, %2* nonnull %3) #16
  %229 = load %32*, %32** %111, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #16
  %230 = call %32* @zend_string_tolower(%32* %229) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #16
  store %32* %230, %32** %114, align 8
  %231 = getelementptr inbounds %32, %32* %230, i64 0, i32 0, i32 1
  %232 = bitcast %18* %231 to %64*
  %233 = getelementptr inbounds %64, %64* %232, i64 0, i32 1
  %234 = load i8, i8* %233, align 1
  %235 = and i8 %234, 2
  %236 = icmp eq i8 %235, 0
  %237 = select i1 %236, i32 5126, i32 6
  store i32 %237, i32* %115, align 8
  %238 = call i32 @zend_add_literal(%7* %208, %2* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #16
  %239 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %240 = getelementptr inbounds %7, %7* %239, i64 0, i32 27
  %241 = load i32, i32* %240, align 8
  %242 = getelementptr inbounds %7, %7* %239, i64 0, i32 26
  %243 = load %2*, %2** %242, align 8
  %244 = zext i32 %228 to i64
  %245 = getelementptr inbounds %2, %2* %243, i64 %244, i32 2, i32 0
  store i32 %241, i32* %245, align 4
  %246 = load i32, i32* %240, align 8
  %247 = add i32 %246, 8
  store i32 %247, i32* %240, align 8
  %248 = getelementptr inbounds %9, %9* %205, i64 0, i32 1, i32 0
  store i32 %228, i32* %248, align 8
  %249 = load %32*, %32** %146, align 8
  %250 = getelementptr inbounds %32, %32* %249, i64 0, i32 2
  %251 = load i64, i64* %250, align 8
  %252 = icmp eq i64 %251, 4
  br i1 %252, label %253, label %258

253:                                              ; preds = %215
  %254 = getelementptr inbounds %32, %32* %249, i64 0, i32 3, i64 0
  %255 = call i32 @memcmp(i8* nonnull %254, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %253
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @20, i64 0, i64 0)) #15
  unreachable

258:                                              ; preds = %253, %215
  %259 = getelementptr inbounds %9, %9* %205, i64 0, i32 8
  store i8 16, i8* %259, align 2
  %260 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %261 = load %32*, %32** %146, align 8
  %262 = getelementptr inbounds %32, %32* %261, i64 0, i32 0, i32 1
  %263 = bitcast %18* %262 to %64*
  %264 = getelementptr inbounds %64, %64* %263, i64 0, i32 1
  %265 = load i8, i8* %264, align 1
  %266 = and i8 %265, 2
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %268, label %272

268:                                              ; preds = %258
  %269 = getelementptr inbounds %32, %32* %261, i64 0, i32 0, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = add i32 %270, 1
  store i32 %271, i32* %269, align 8
  br label %272

272:                                              ; preds = %258, %268
  %273 = call fastcc i32 @249(%7* %260, %32* %261)
  %274 = getelementptr inbounds %9, %9* %205, i64 0, i32 2, i32 0
  store i32 %273, i32* %274, align 4
  %275 = and i1 %133, %159
  %276 = zext i1 %275 to i32
  %277 = getelementptr inbounds %9, %9* %205, i64 0, i32 3, i32 0
  store i32 %276, i32* %277, align 8
  br i1 %159, label %294, label %278

278:                                              ; preds = %272
  %279 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %280 = call i32 @get_next_op_number(%7* %279) #16
  %281 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %282 = call %9* @get_next_op(%7* %281) #16
  %283 = getelementptr inbounds %9, %9* %282, i64 0, i32 6
  store i8 42, i8* %283, align 4
  %284 = getelementptr inbounds %9, %9* %282, i64 0, i32 7
  store i8 8, i8* %284, align 1
  %285 = getelementptr inbounds %9, %9* %282, i64 0, i32 8
  store i8 8, i8* %285, align 2
  call fastcc void @244(%9* nonnull %282) #16
  %286 = getelementptr inbounds %9, %9* %282, i64 0, i32 1, i32 0
  store i32 0, i32* %286, align 8
  %287 = getelementptr inbounds i32, i32* %139, i64 %155
  store i32 %280, i32* %287, align 4
  %288 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %289 = getelementptr inbounds %7, %7* %288, i64 0, i32 11
  %290 = load %9*, %9** %289, align 8
  %291 = zext i32 %196 to i64
  %292 = call i32 @get_next_op_number(%7* %288) #16
  %293 = getelementptr inbounds %9, %9* %290, i64 %291, i32 4
  store i32 %292, i32* %293, align 4
  br label %294

294:                                              ; preds = %278, %272
  %295 = load i32, i32* %134, align 8
  %296 = icmp ult i32 %158, %295
  br i1 %296, label %152, label %148

297:                                              ; preds = %150, %314
  %298 = phi i64 [ 0, %150 ], [ %315, %314 ]
  %299 = getelementptr inbounds i32, i32* %139, i64 %298
  %300 = load i32, i32* %299, align 4
  %301 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %302 = call i32 @get_next_op_number(%7* %301) #16
  %303 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %304 = getelementptr inbounds %7, %7* %303, i64 0, i32 11
  %305 = load %9*, %9** %304, align 8
  %306 = zext i32 %300 to i64
  %307 = getelementptr inbounds %9, %9* %305, i64 %306, i32 6
  %308 = load i8, i8* %307, align 4
  %309 = icmp eq i8 %308, 42
  br i1 %309, label %310, label %312

310:                                              ; preds = %297
  %311 = getelementptr inbounds %9, %9* %305, i64 %306, i32 1, i32 0
  store i32 %302, i32* %311, align 8
  br label %314

312:                                              ; preds = %297
  %313 = getelementptr inbounds %9, %9* %305, i64 %306, i32 2, i32 0
  store i32 %302, i32* %313, align 4
  br label %314

314:                                              ; preds = %310, %312
  %315 = add nuw nsw i64 %298, 1
  %316 = load i32, i32* %134, align 8
  %317 = add i32 %316, -1
  %318 = zext i32 %317 to i64
  %319 = icmp ult i64 %315, %318
  br i1 %319, label %297, label %320

320:                                              ; preds = %314, %148
  %321 = phi i32 [ %196, %148 ], [ %151, %314 ]
  call void @_efree(i8* %138) #16
  call void @zend_compile_stmt(%43* %130)
  br i1 %133, label %338, label %322

322:                                              ; preds = %320
  %323 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %324 = call i32 @get_next_op_number(%7* %323) #16
  %325 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %326 = call %9* @get_next_op(%7* %325) #16
  %327 = getelementptr inbounds %9, %9* %326, i64 0, i32 6
  store i8 42, i8* %327, align 4
  %328 = getelementptr inbounds %9, %9* %326, i64 0, i32 7
  store i8 8, i8* %328, align 1
  %329 = getelementptr inbounds %9, %9* %326, i64 0, i32 8
  store i8 8, i8* %329, align 2
  call fastcc void @244(%9* nonnull %326) #16
  %330 = getelementptr inbounds %9, %9* %326, i64 0, i32 1, i32 0
  store i32 0, i32* %330, align 8
  %331 = getelementptr inbounds i32, i32* %17, i64 %131
  store i32 %324, i32* %331, align 4
  %332 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %333 = getelementptr inbounds %7, %7* %332, i64 0, i32 11
  %334 = load %9*, %9** %333, align 8
  %335 = zext i32 %321 to i64
  %336 = call i32 @get_next_op_number(%7* %332) #16
  %337 = getelementptr inbounds %9, %9* %334, i64 %335, i32 4
  store i32 %336, i32* %337, align 4
  br label %338

338:                                              ; preds = %320, %322
  %339 = load i32, i32* %13, align 8
  %340 = zext i32 %339 to i64
  %341 = icmp ult i64 %131, %340
  br i1 %341, label %118, label %116

342:                                              ; preds = %116, %359
  %343 = phi i64 [ %360, %359 ], [ 0, %116 ]
  %344 = getelementptr inbounds i32, i32* %17, i64 %343
  %345 = load i32, i32* %344, align 4
  %346 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %347 = call i32 @get_next_op_number(%7* %346) #16
  %348 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %349 = getelementptr inbounds %7, %7* %348, i64 0, i32 11
  %350 = load %9*, %9** %349, align 8
  %351 = zext i32 %345 to i64
  %352 = getelementptr inbounds %9, %9* %350, i64 %351, i32 6
  %353 = load i8, i8* %352, align 4
  %354 = icmp eq i8 %353, 42
  br i1 %354, label %355, label %357

355:                                              ; preds = %342
  %356 = getelementptr inbounds %9, %9* %350, i64 %351, i32 1, i32 0
  store i32 %347, i32* %356, align 8
  br label %359

357:                                              ; preds = %342
  %358 = getelementptr inbounds %9, %9* %350, i64 %351, i32 2, i32 0
  store i32 %347, i32* %358, align 4
  br label %359

359:                                              ; preds = %355, %357
  %360 = add nuw nsw i64 %343, 1
  %361 = load i32, i32* %13, align 8
  %362 = zext i32 %361 to i64
  %363 = icmp ult i64 %360, %362
  br i1 %363, label %342, label %364

364:                                              ; preds = %359, %95, %98, %116
  br i1 %22, label %365, label %423

365:                                              ; preds = %364
  %366 = getelementptr inbounds %72, %72* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %366) #16
  %367 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %368 = call i32 @get_next_op_number(%7* %367) #16
  %369 = add i32 %368, 1
  %370 = call i32 @zend_stack_del_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  store i8 -97, i8* %366, align 4
  %371 = getelementptr inbounds %72, %72* %5, i64 0, i32 1
  store i8 2, i8* %371, align 1
  %372 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 4), align 8
  %373 = getelementptr inbounds %72, %72* %5, i64 0, i32 2
  store i32 %372, i32* %373, align 4
  %374 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i8* nonnull %366) #16
  %375 = getelementptr inbounds %43, %43* %12, i64 0, i32 2
  %376 = load i32, i32* %375, align 4
  store i32 %376, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  %377 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %378 = call %9* @get_next_op(%7* %377) #16
  %379 = getelementptr inbounds %9, %9* %378, i64 0, i32 6
  store i8 -94, i8* %379, align 4
  %380 = getelementptr inbounds %9, %9* %378, i64 0, i32 7
  store i8 8, i8* %380, align 1
  %381 = getelementptr inbounds %9, %9* %378, i64 0, i32 8
  store i8 8, i8* %381, align 2
  call fastcc void @244(%9* nonnull %378) #16
  %382 = getelementptr inbounds %9, %9* %378, i64 0, i32 1, i32 0
  store i32 %65, i32* %382, align 8
  %383 = getelementptr inbounds %9, %9* %378, i64 0, i32 9
  store i8 2, i8* %383, align 1
  %384 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 4), align 8
  %385 = getelementptr inbounds %9, %9* %378, i64 0, i32 3, i32 0
  store i32 %384, i32* %385, align 8
  %386 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %387 = call %9* @get_next_op(%7* %386) #16
  %388 = getelementptr inbounds %9, %9* %387, i64 0, i32 6
  store i8 42, i8* %388, align 4
  %389 = getelementptr inbounds %9, %9* %387, i64 0, i32 7
  store i8 8, i8* %389, align 1
  %390 = getelementptr inbounds %9, %9* %387, i64 0, i32 8
  store i8 8, i8* %390, align 2
  call fastcc void @244(%9* nonnull %387) #16
  call void @zend_compile_stmt(%43* nonnull %12)
  %391 = add i32 %368, 2
  %392 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %393 = getelementptr inbounds %7, %7* %392, i64 0, i32 18
  %394 = load %12*, %12** %393, align 8
  %395 = getelementptr inbounds %12, %12* %394, i64 %73, i32 2
  store i32 %391, i32* %395, align 4
  %396 = call i32 @get_next_op_number(%7* %392) #16
  %397 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %398 = getelementptr inbounds %7, %7* %397, i64 0, i32 18
  %399 = load %12*, %12** %398, align 8
  %400 = getelementptr inbounds %12, %12* %399, i64 %73, i32 3
  store i32 %396, i32* %400, align 4
  %401 = call %9* @get_next_op(%7* %397) #16
  %402 = getelementptr inbounds %9, %9* %401, i64 0, i32 6
  store i8 -93, i8* %402, align 4
  %403 = getelementptr inbounds %9, %9* %401, i64 0, i32 7
  store i8 8, i8* %403, align 1
  %404 = getelementptr inbounds %9, %9* %401, i64 0, i32 8
  store i8 8, i8* %404, align 2
  call fastcc void @244(%9* nonnull %401) #16
  store i8 2, i8* %403, align 1
  %405 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 4), align 8
  %406 = getelementptr inbounds %9, %9* %401, i64 0, i32 1, i32 0
  store i32 %405, i32* %406, align 8
  %407 = getelementptr inbounds %9, %9* %401, i64 0, i32 2, i32 0
  store i32 %19, i32* %407, align 4
  %408 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %409 = call i32 @get_next_op_number(%7* %408) #16
  %410 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %411 = getelementptr inbounds %7, %7* %410, i64 0, i32 11
  %412 = load %9*, %9** %411, align 8
  %413 = zext i32 %369 to i64
  %414 = getelementptr inbounds %9, %9* %412, i64 %413, i32 6
  %415 = load i8, i8* %414, align 4
  %416 = icmp eq i8 %415, 42
  br i1 %416, label %417, label %419

417:                                              ; preds = %365
  %418 = getelementptr inbounds %9, %9* %412, i64 %413, i32 1, i32 0
  store i32 %409, i32* %418, align 8
  br label %421

419:                                              ; preds = %365
  %420 = getelementptr inbounds %9, %9* %412, i64 %413, i32 2, i32 0
  store i32 %409, i32* %420, align 4
  br label %421

421:                                              ; preds = %417, %419
  store i32 %18, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 4), align 8
  %422 = call i32 @zend_stack_del_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %366) #16
  br label %423

423:                                              ; preds = %421, %364
  store i32 %19, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 5), align 4
  call void @_efree(i8* %16) #16
  ret void
}

declare dso_local i32 @zend_stack_push(%45*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc i32 @249(%7* nocapture %0, %32* %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %32, %32* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %8 = getelementptr inbounds %32, %32* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @zend_hash_func(i8* nonnull %7, i64 %9) #16
  store i64 %10, i64* %3, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i64 [ %4, %2 ], [ %10, %6 ]
  %13 = getelementptr inbounds %7, %7* %0, i64 0, i32 12
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %64

16:                                               ; preds = %11
  %17 = getelementptr inbounds %7, %7* %0, i64 0, i32 14
  %18 = load %32**, %32*** %17, align 8
  %19 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds %32, %32* %1, i64 0, i32 2
  %21 = sext i32 %14 to i64
  br label %22

22:                                               ; preds = %16, %61
  %23 = phi i64 [ 0, %16 ], [ %62, %61 ]
  %24 = getelementptr inbounds %32*, %32** %18, i64 %23
  %25 = load %32*, %32** %24, align 8
  %26 = getelementptr inbounds %32, %32* %25, i64 0, i32 3, i64 0
  %27 = icmp eq %32* %25, %1
  br i1 %27, label %40, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %32, %32* %25, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, %12
  br i1 %31, label %32, label %61

32:                                               ; preds = %28
  %33 = getelementptr inbounds %32, %32* %25, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = load i64, i64* %20, align 8
  %36 = icmp eq i64 %34, %35
  br i1 %36, label %37, label %61

37:                                               ; preds = %32
  %38 = tail call i32 @memcmp(i8* nonnull %26, i8* nonnull %19, i64 %34) #19
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %61

40:                                               ; preds = %37, %22
  %41 = getelementptr inbounds %32, %32* %1, i64 0, i32 0, i32 1
  %42 = bitcast %18* %41 to %64*
  %43 = getelementptr inbounds %64, %64* %42, i64 0, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, 2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %40
  %48 = getelementptr inbounds %32, %32* %1, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, -1
  store i32 %50, i32* %48, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %47
  %53 = and i8 %44, 1
  %54 = icmp eq i8 %53, 0
  %55 = bitcast %32* %1 to i8*
  br i1 %54, label %57, label %56

56:                                               ; preds = %52
  tail call void @free(i8* %55) #16
  br label %58

57:                                               ; preds = %52
  tail call void @_efree(i8* %55) #16
  br label %58

58:                                               ; preds = %40, %47, %56, %57
  %59 = add nuw i64 %23, 5
  %60 = and i64 %59, 4294967295
  br label %87

61:                                               ; preds = %37, %32, %28
  %62 = add nuw nsw i64 %23, 1
  %63 = icmp slt i64 %62, %21
  br i1 %63, label %22, label %64

64:                                               ; preds = %61, %11
  %65 = add nsw i32 %14, 1
  store i32 %65, i32* %13, align 8
  %66 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 1), align 4
  %67 = icmp slt i32 %14, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = getelementptr inbounds %7, %7* %0, i64 0, i32 14
  br label %78

70:                                               ; preds = %64
  %71 = add nsw i32 %66, 16
  store i32 %71, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 1), align 4
  %72 = getelementptr inbounds %7, %7* %0, i64 0, i32 14
  %73 = bitcast %32*** %72 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = sext i32 %71 to i64
  %76 = shl nsw i64 %75, 3
  %77 = tail call i8* @_erealloc(i8* %74, i64 %76) #18
  store i8* %77, i8** %73, align 8
  br label %78

78:                                               ; preds = %68, %70
  %79 = phi %32*** [ %69, %68 ], [ %72, %70 ]
  %80 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %81 = tail call %32* %80(%32* %1) #16
  %82 = load %32**, %32*** %79, align 8
  %83 = sext i32 %14 to i64
  %84 = getelementptr inbounds %32*, %32** %82, i64 %83
  store %32* %81, %32** %84, align 8
  %85 = add nsw i32 %14, 5
  %86 = sext i32 %85 to i64
  br label %87

87:                                               ; preds = %78, %58
  %88 = phi i64 [ %60, %58 ], [ %86, %78 ]
  %89 = getelementptr inbounds %2, %2* null, i64 %88
  %90 = ptrtoint %2* %89 to i64
  %91 = trunc i64 %90 to i32
  ret i32 %91
}

declare dso_local i32 @zend_stack_del_top(%45*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_handle_encoding_declaration(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = bitcast %43* %0 to %69*
  %3 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %4 = bitcast [1 x %43*]* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %96, label %7

7:                                                ; preds = %1, %91
  %8 = phi i64 [ %92, %91 ], [ 0, %1 ]
  %9 = getelementptr inbounds %69, %69* %2, i64 0, i32 4, i64 %8
  %10 = load %43*, %43** %9, align 8
  %11 = getelementptr inbounds %43, %43* %10, i64 0, i32 3, i64 0
  %12 = load %43*, %43** %11, align 8
  %13 = getelementptr inbounds %43, %43* %10, i64 0, i32 3, i64 1
  %14 = load %43*, %43** %13, align 8
  %15 = getelementptr inbounds %43, %43* %12, i64 0, i32 3
  %16 = bitcast [1 x %43*]* %15 to %32**
  %17 = load %32*, %32** %16, align 8
  %18 = getelementptr inbounds %32, %32* %17, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 8
  br i1 %20, label %21, label %91

21:                                               ; preds = %7
  %22 = getelementptr inbounds %32, %32* %17, i64 0, i32 3, i64 0
  %23 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %22, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @76, i64 0, i64 0), i64 8) #16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %91

25:                                               ; preds = %21
  %26 = getelementptr inbounds %43, %43* %14, i64 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = icmp eq i16 %27, 64
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @77, i64 0, i64 0)) #15
  unreachable

30:                                               ; preds = %25
  %31 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 27), align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %90, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %43, %43* %14, i64 0, i32 3
  %35 = getelementptr inbounds [1 x %43*], [1 x %43*]* %34, i64 1
  %36 = bitcast [1 x %43*]* %35 to i8*
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 6
  br i1 %38, label %39, label %52

39:                                               ; preds = %33
  %40 = bitcast [1 x %43*]* %34 to %32**
  %41 = load %32*, %32** %40, align 8
  %42 = getelementptr inbounds %32, %32* %41, i64 0, i32 0, i32 1
  %43 = bitcast %18* %42 to %64*
  %44 = getelementptr inbounds %64, %64* %43, i64 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = and i8 %45, 2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %39
  %49 = getelementptr inbounds %32, %32* %41, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 8
  br label %55

52:                                               ; preds = %33
  %53 = bitcast [1 x %43*]* %34 to %2*
  %54 = tail call %32* @_zval_get_string_func(%2* nonnull %53) #16
  br label %55

55:                                               ; preds = %39, %48, %52
  %56 = phi %32* [ %54, %52 ], [ %41, %39 ], [ %41, %48 ]
  store i8 1, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 29), align 2
  %57 = getelementptr inbounds %32, %32* %56, i64 0, i32 3, i64 0
  %58 = tail call %42* @zend_multibyte_fetch_encoding(i8* nonnull %57) #16
  %59 = icmp eq %42* %58, null
  br i1 %59, label %60, label %61

60:                                               ; preds = %55
  tail call void (i32, i8*, ...) @zend_error(i32 128, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @78, i64 0, i64 0), i8* nonnull %57) #16
  br label %72

61:                                               ; preds = %55
  %62 = load i64 (i8**, i64*, i8*, i64)*, i64 (i8**, i64*, i8*, i64)** getelementptr inbounds (%46, %46* @language_scanner_globals, i64 0, i32 15), align 8
  %63 = load %42*, %42** getelementptr inbounds (%46, %46* @language_scanner_globals, i64 0, i32 17), align 8
  %64 = tail call i32 @zend_multibyte_set_filter(%42* nonnull %58) #16
  %65 = load i64 (i8**, i64*, i8*, i64)*, i64 (i8**, i64*, i8*, i64)** getelementptr inbounds (%46, %46* @language_scanner_globals, i64 0, i32 15), align 8
  %66 = icmp eq i64 (i8**, i64*, i8*, i64)* %62, %65
  br i1 %66, label %67, label %71

67:                                               ; preds = %61
  %68 = icmp eq i64 (i8**, i64*, i8*, i64)* %62, null
  %69 = icmp eq %42* %58, %63
  %70 = or i1 %68, %69
  br i1 %70, label %72, label %71

71:                                               ; preds = %67, %61
  tail call void @zend_multibyte_yyinput_again(i64 (i8**, i64*, i8*, i64)* %62, %42* %63) #16
  br label %72

72:                                               ; preds = %67, %71, %60
  %73 = getelementptr inbounds %32, %32* %56, i64 0, i32 0, i32 1
  %74 = bitcast %18* %73 to %64*
  %75 = getelementptr inbounds %64, %64* %74, i64 0, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = and i8 %76, 2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %72
  %80 = getelementptr inbounds %32, %32* %56, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, -1
  store i32 %82, i32* %80, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %91

84:                                               ; preds = %79
  %85 = and i8 %76, 1
  %86 = icmp eq i8 %85, 0
  %87 = bitcast %32* %56 to i8*
  br i1 %86, label %89, label %88

88:                                               ; preds = %84
  tail call void @free(i8* %87) #16
  br label %91

89:                                               ; preds = %84
  tail call void @_efree(i8* %87) #16
  br label %91

90:                                               ; preds = %30
  tail call void (i32, i8*, ...) @zend_error(i32 128, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @79, i64 0, i64 0)) #16
  br label %91

91:                                               ; preds = %89, %88, %79, %72, %21, %90, %7
  %92 = add nuw nsw i64 %8, 1
  %93 = load i32, i32* %4, align 8
  %94 = zext i32 %93 to i64
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %7, label %96

96:                                               ; preds = %91, %1
  ret void
}

declare dso_local %42* @zend_multibyte_fetch_encoding(i8*) local_unnamed_addr #3

declare dso_local i32 @zend_multibyte_set_filter(%42*) local_unnamed_addr #3

declare dso_local void @zend_multibyte_yyinput_again(i64 (i8**, i64*, i8*, i64)*, %42*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_declare(%43* readonly %0) local_unnamed_addr #0 {
  %2 = alloca %43*, align 8
  %3 = alloca %43*, align 8
  %4 = alloca %2, align 8
  %5 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %6 = bitcast %43** %5 to %69**
  %7 = load %69*, %69** %6, align 8
  %8 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %9 = load %43*, %43** %8, align 8
  %10 = load i64, i64* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 0, i32 0), align 8
  %11 = getelementptr inbounds %69, %69* %7, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %193, label %14

14:                                               ; preds = %1
  %15 = bitcast %2* %4 to i8*
  %16 = bitcast %43** %3 to i8*
  %17 = getelementptr inbounds %2, %2* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %2, %2* %4, i64 0, i32 1
  %20 = bitcast %4* %19 to i8*
  %21 = bitcast %2* %4 to i8**
  %22 = bitcast %4* %19 to %65*
  %23 = getelementptr inbounds %65, %65* %22, i64 0, i32 1
  %24 = bitcast %2* %4 to %66**
  %25 = bitcast %43** %2 to i8*
  br label %26

26:                                               ; preds = %14, %189
  %27 = phi i32 [ 0, %14 ], [ %190, %189 ]
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %69, %69* %7, i64 0, i32 4, i64 %28
  %30 = load %43*, %43** %29, align 8
  %31 = getelementptr inbounds %43, %43* %30, i64 0, i32 3, i64 0
  %32 = load %43*, %43** %31, align 8
  %33 = getelementptr inbounds %43, %43* %30, i64 0, i32 3, i64 1
  %34 = load %43*, %43** %33, align 8
  %35 = getelementptr inbounds %43, %43* %32, i64 0, i32 3
  %36 = bitcast [1 x %43*]* %35 to %32**
  %37 = load %32*, %32** %36, align 8
  %38 = getelementptr inbounds %43, %43* %34, i64 0, i32 0
  %39 = load i16, i16* %38, align 8
  %40 = icmp eq i16 %39, 64
  br i1 %40, label %43, label %41

41:                                               ; preds = %26
  %42 = getelementptr inbounds %32, %32* %37, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @80, i64 0, i64 0), i8* nonnull %42) #15
  unreachable

43:                                               ; preds = %26
  %44 = getelementptr inbounds %32, %32* %37, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 5
  br i1 %46, label %47, label %94

47:                                               ; preds = %43
  %48 = getelementptr inbounds %32, %32* %37, i64 0, i32 3, i64 0
  %49 = call i32 @zend_binary_strcasecmp(i8* nonnull %48, i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @81, i64 0, i64 0), i64 5) #16
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %92

51:                                               ; preds = %47
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  store %43* %34, %43** %3, align 8
  call void @zend_eval_const_expr(%43** nonnull %3) #16
  call void @zend_compile_const_expr(%43** nonnull %3) #16
  %52 = load %43*, %43** %3, align 8
  %53 = getelementptr inbounds %43, %43* %52, i64 0, i32 0
  %54 = load i16, i16* %53, align 8
  %55 = icmp eq i16 %54, 64
  br i1 %55, label %56, label %63

56:                                               ; preds = %51
  %57 = getelementptr inbounds %43, %43* %52, i64 0, i32 3
  %58 = bitcast [1 x %43*]* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds [1 x %43*], [1 x %43*]* %57, i64 1
  %61 = bitcast [1 x %43*]* %60 to i32*
  %62 = load i32, i32* %61, align 8
  store i64 %59, i64* %17, align 8
  store i32 %62, i32* %18, align 8
  br label %71

63:                                               ; preds = %51
  %64 = call noalias i8* @_emalloc_16() #16
  %65 = bitcast i8* %64 to i32*
  store i32 1, i32* %65, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 4
  %67 = bitcast i8* %66 to i32*
  store i32 12, i32* %67, align 4
  %68 = call %43* @zend_ast_copy(%43* %52) #16
  %69 = getelementptr inbounds i8, i8* %64, i64 8
  %70 = bitcast i8* %69 to %43**
  store %43* %68, %43** %70, align 8
  store i8* %64, i8** %21, align 8
  store i32 5388, i32* %18, align 8
  call void @zend_ast_destroy(%43* %52) #16
  br label %71

71:                                               ; preds = %56, %63
  store i16 0, i16* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %72 = load i8, i8* %20, align 8
  %73 = icmp eq i8 %72, 4
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = load i64, i64* %17, align 8
  br label %78

76:                                               ; preds = %71
  %77 = call i64 @_zval_get_long_func(%2* nonnull %4) #16
  br label %78

78:                                               ; preds = %74, %76
  %79 = phi i64 [ %75, %74 ], [ %77, %76 ]
  store i64 %79, i64* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 0, i32 0), align 8
  %80 = load i8, i8* %23, align 1
  %81 = and i8 %80, 4
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %78
  %84 = load %66*, %66** %24, align 8
  %85 = getelementptr inbounds %66, %66* %84, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, -1
  store i32 %87, i32* %85, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = load %66*, %66** %24, align 8
  call void @_zval_dtor_func(%66* %90) #16
  br label %91

91:                                               ; preds = %78, %83, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  br label %189

92:                                               ; preds = %47
  %93 = load i64, i64* %44, align 8
  br label %94

94:                                               ; preds = %92, %43
  %95 = phi i64 [ %93, %92 ], [ %45, %43 ]
  %96 = icmp eq i64 %95, 8
  br i1 %96, label %97, label %124

97:                                               ; preds = %94
  %98 = getelementptr inbounds %32, %32* %37, i64 0, i32 3, i64 0
  %99 = call i32 @zend_binary_strcasecmp(i8* nonnull %98, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @76, i64 0, i64 0), i64 8) #16
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = load i64, i64* %44, align 8
  br label %124

103:                                              ; preds = %97
  %104 = load %69*, %69** bitcast (%43** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 30) to %69**), align 8
  %105 = getelementptr inbounds %69, %69* %104, i64 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %123, label %108

108:                                              ; preds = %103, %116
  %109 = phi i32 [ %120, %116 ], [ 0, %103 ]
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds %69, %69* %104, i64 0, i32 4, i64 %110
  %112 = load %43*, %43** %111, align 8
  %113 = icmp eq %43* %112, %0
  br i1 %113, label %189, label %114

114:                                              ; preds = %108
  %115 = icmp eq %43* %112, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %43, %43* %112, i64 0, i32 0
  %118 = load i16, i16* %117, align 8
  %119 = icmp eq i16 %118, 536
  %120 = add i32 %109, 1
  %121 = icmp ult i32 %120, %106
  %122 = and i1 %121, %119
  br i1 %122, label %108, label %123

123:                                              ; preds = %103, %116, %114
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @82, i64 0, i64 0)) #15
  unreachable

124:                                              ; preds = %101, %94
  %125 = phi i64 [ %102, %101 ], [ %95, %94 ]
  %126 = icmp eq i64 %125, 12
  %127 = getelementptr inbounds %32, %32* %37, i64 0, i32 3, i64 0
  br i1 %126, label %128, label %188

128:                                              ; preds = %124
  %129 = call i32 @zend_binary_strcasecmp(i8* nonnull %127, i64 12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @83, i64 0, i64 0), i64 12) #16
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %188

131:                                              ; preds = %128
  %132 = load %69*, %69** bitcast (%43** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 30) to %69**), align 8
  %133 = getelementptr inbounds %69, %69* %132, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %151, label %136

136:                                              ; preds = %131, %144
  %137 = phi i32 [ %148, %144 ], [ 0, %131 ]
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds %69, %69* %132, i64 0, i32 4, i64 %138
  %140 = load %43*, %43** %139, align 8
  %141 = icmp eq %43* %140, %0
  br i1 %141, label %152, label %142

142:                                              ; preds = %136
  %143 = icmp eq %43* %140, null
  br i1 %143, label %151, label %144

144:                                              ; preds = %142
  %145 = getelementptr inbounds %43, %43* %140, i64 0, i32 0
  %146 = load i16, i16* %145, align 8
  %147 = icmp eq i16 %146, 536
  %148 = add i32 %137, 1
  %149 = icmp ult i32 %148, %134
  %150 = and i1 %149, %147
  br i1 %150, label %136, label %151

151:                                              ; preds = %131, %144, %142
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @84, i64 0, i64 0)) #15
  unreachable

152:                                              ; preds = %136
  %153 = load %43*, %43** %8, align 8
  %154 = icmp eq %43* %153, null
  br i1 %154, label %156, label %155

155:                                              ; preds = %152
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @85, i64 0, i64 0)) #15
  unreachable

156:                                              ; preds = %152
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  store %43* %34, %43** %2, align 8
  call void @zend_eval_const_expr(%43** nonnull %2) #16
  call void @zend_compile_const_expr(%43** nonnull %2) #16
  %157 = load %43*, %43** %2, align 8
  %158 = getelementptr inbounds %43, %43* %157, i64 0, i32 0
  %159 = load i16, i16* %158, align 8
  %160 = icmp eq i16 %159, 64
  br i1 %160, label %169, label %161

161:                                              ; preds = %156
  %162 = call noalias i8* @_emalloc_16() #16
  %163 = bitcast i8* %162 to i32*
  store i32 1, i32* %163, align 8
  %164 = getelementptr inbounds i8, i8* %162, i64 4
  %165 = bitcast i8* %164 to i32*
  store i32 12, i32* %165, align 4
  %166 = call %43* @zend_ast_copy(%43* %157) #16
  %167 = getelementptr inbounds i8, i8* %162, i64 8
  %168 = bitcast i8* %167 to %43**
  store %43* %166, %43** %168, align 8
  call void @zend_ast_destroy(%43* %157) #16
  store i16 0, i16* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  br label %180

169:                                              ; preds = %156
  %170 = getelementptr inbounds %43, %43* %157, i64 0, i32 3
  %171 = bitcast [1 x %43*]* %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds [1 x %43*], [1 x %43*]* %170, i64 1
  %174 = bitcast [1 x %43*]* %173 to i32*
  %175 = load i32, i32* %174, align 8
  %176 = trunc i32 %175 to i8
  store i16 0, i16* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  %177 = icmp eq i8 %176, 4
  %178 = icmp ult i64 %172, 2
  %179 = and i1 %178, %177
  br i1 %179, label %181, label %180

180:                                              ; preds = %169, %161
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @86, i64 0, i64 0)) #15
  unreachable

181:                                              ; preds = %169
  %182 = icmp eq i64 %172, 1
  br i1 %182, label %183, label %189

183:                                              ; preds = %181
  %184 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %185 = getelementptr inbounds %7, %7* %184, i64 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = or i32 %186, -2147483648
  store i32 %187, i32* %185, align 4
  br label %189

188:                                              ; preds = %124, %128
  call void (i32, i8*, ...) @zend_error(i32 128, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @87, i64 0, i64 0), i8* nonnull %127) #16
  br label %189

189:                                              ; preds = %108, %181, %183, %188, %91
  %190 = add i32 %27, 1
  %191 = load i32, i32* %11, align 8
  %192 = icmp ult i32 %190, %191
  br i1 %192, label %26, label %193

193:                                              ; preds = %189, %1
  %194 = icmp eq %43* %9, null
  br i1 %194, label %196, label %195

195:                                              ; preds = %193
  call void @zend_compile_stmt(%43* nonnull %9)
  store i64 %10, i64* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 0, i32 0), align 8
  br label %196

196:                                              ; preds = %193, %195
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_stmt_list(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = bitcast %43* %0 to %69*
  %3 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %4 = bitcast [1 x %43*]* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %11, %7 ], [ 0, %1 ]
  %9 = getelementptr inbounds %69, %69* %2, i64 0, i32 4, i64 %8
  %10 = load %43*, %43** %9, align 8
  tail call void @zend_compile_stmt(%43* %10)
  %11 = add nuw nsw i64 %8, 1
  %12 = load i32, i32* %4, align 8
  %13 = zext i32 %12 to i64
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %7, label %15

15:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: norecurse nounwind uwtable
define dso_local void @zend_set_function_arg_flags(%6* nocapture %0) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 1, i64 0
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 1, i64 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 1, i64 2
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 8
  %6 = load %8*, %8** %5, align 8
  %7 = icmp eq %8* %6, null
  br i1 %7, label %168, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %10, 12
  %12 = select i1 %11, i32 %10, i32 12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %66, label %14

14:                                               ; preds = %8
  %15 = bitcast %6* %0 to i32*
  %16 = zext i32 %12 to i64
  %17 = xor i32 %10, -1
  %18 = icmp ugt i32 %17, -13
  %19 = select i1 %18, i32 %17, i32 -13
  %20 = sub nsw i32 -2, %19
  %21 = load i32, i32* %15, align 8
  %22 = and i64 %16, 1
  %23 = icmp eq i32 %12, 1
  br i1 %23, label %50, label %24

24:                                               ; preds = %14
  %25 = sub nsw i64 %16, %22
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i32 [ %21, %24 ], [ %47, %26 ]
  %28 = phi i64 [ 0, %24 ], [ %43, %26 ]
  %29 = phi i64 [ %25, %24 ], [ %48, %26 ]
  %30 = getelementptr inbounds %8, %8* %6, i64 %28, i32 2
  %31 = load i8, i8* %30, align 8
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 6
  %34 = or i64 %28, 1
  %35 = trunc i64 %34 to i32
  %36 = shl i32 %35, 1
  %37 = shl i32 %33, %36
  %38 = or i32 %37, %27
  store i32 %38, i32* %15, align 8
  %39 = getelementptr inbounds %8, %8* %6, i64 %34, i32 2
  %40 = load i8, i8* %39, align 8
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 6
  %43 = add nuw nsw i64 %28, 2
  %44 = trunc i64 %43 to i32
  %45 = shl i32 %44, 1
  %46 = shl i32 %42, %45
  %47 = or i32 %46, %38
  store i32 %47, i32* %15, align 8
  %48 = add i64 %29, -2
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %26

50:                                               ; preds = %26, %14
  %51 = phi i32 [ %21, %14 ], [ %47, %26 ]
  %52 = phi i64 [ 0, %14 ], [ %43, %26 ]
  %53 = icmp eq i64 %22, 0
  br i1 %53, label %64, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %8, %8* %6, i64 %52, i32 2
  %56 = load i8, i8* %55, align 8
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 6
  %59 = trunc i64 %52 to i32
  %60 = shl i32 %59, 1
  %61 = add i32 %60, 2
  %62 = shl i32 %58, %61
  %63 = or i32 %62, %51
  store i32 %63, i32* %15, align 8
  br label %64

64:                                               ; preds = %50, %54
  %65 = add nsw i32 %20, 1
  br label %66

66:                                               ; preds = %64, %8
  %67 = phi i32 [ 0, %8 ], [ %65, %64 ]
  %68 = getelementptr inbounds %6, %6* %0, i64 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 16777216
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %168, label %72

72:                                               ; preds = %66
  %73 = zext i32 %67 to i64
  %74 = getelementptr inbounds %8, %8* %6, i64 %73, i32 2
  %75 = load i8, i8* %74, align 8
  %76 = icmp ne i8 %75, 0
  %77 = icmp ult i32 %67, 12
  %78 = and i1 %76, %77
  br i1 %78, label %79, label %168

79:                                               ; preds = %72
  %80 = zext i8 %75 to i32
  %81 = shl nuw nsw i32 %80, 6
  %82 = bitcast %6* %0 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = sub nsw i32 12, %67
  %85 = icmp ult i32 %84, 8
  br i1 %85, label %155, label %86

86:                                               ; preds = %79
  %87 = and i32 %84, -8
  %88 = add nsw i32 %67, %87
  %89 = insertelement <4 x i32> undef, i32 %67, i32 0
  %90 = shufflevector <4 x i32> %89, <4 x i32> undef, <4 x i32> zeroinitializer
  %91 = add <4 x i32> %90, <i32 0, i32 1, i32 2, i32 3>
  %92 = insertelement <4 x i32> undef, i32 %81, i32 0
  %93 = shufflevector <4 x i32> %92, <4 x i32> undef, <4 x i32> zeroinitializer
  %94 = insertelement <4 x i32> undef, i32 %81, i32 0
  %95 = shufflevector <4 x i32> %94, <4 x i32> undef, <4 x i32> zeroinitializer
  %96 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %83, i32 0
  %97 = add nsw i32 %87, -8
  %98 = lshr exact i32 %97, 3
  %99 = add nuw nsw i32 %98, 1
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %97, 0
  br i1 %101, label %129, label %102

102:                                              ; preds = %86
  %103 = sub nsw i32 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi <4 x i32> [ %96, %102 ], [ %124, %104 ]
  %106 = phi <4 x i32> [ zeroinitializer, %102 ], [ %125, %104 ]
  %107 = phi <4 x i32> [ %91, %102 ], [ %126, %104 ]
  %108 = phi i32 [ %103, %102 ], [ %127, %104 ]
  %109 = shl <4 x i32> %107, <i32 1, i32 1, i32 1, i32 1>
  %110 = add <4 x i32> %109, <i32 2, i32 2, i32 2, i32 2>
  %111 = shl <4 x i32> %107, <i32 1, i32 1, i32 1, i32 1>
  %112 = add <4 x i32> %111, <i32 10, i32 10, i32 10, i32 10>
  %113 = shl <4 x i32> %93, %110
  %114 = shl <4 x i32> %95, %112
  %115 = or <4 x i32> %105, %113
  %116 = or <4 x i32> %106, %114
  %117 = add <4 x i32> %107, <i32 8, i32 8, i32 8, i32 8>
  %118 = shl <4 x i32> %117, <i32 1, i32 1, i32 1, i32 1>
  %119 = add <4 x i32> %118, <i32 2, i32 2, i32 2, i32 2>
  %120 = shl <4 x i32> %117, <i32 1, i32 1, i32 1, i32 1>
  %121 = add <4 x i32> %120, <i32 10, i32 10, i32 10, i32 10>
  %122 = shl <4 x i32> %93, %119
  %123 = shl <4 x i32> %95, %121
  %124 = or <4 x i32> %115, %122
  %125 = or <4 x i32> %116, %123
  %126 = add <4 x i32> %107, <i32 16, i32 16, i32 16, i32 16>
  %127 = add i32 %108, -2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %104

129:                                              ; preds = %104, %86
  %130 = phi <4 x i32> [ undef, %86 ], [ %124, %104 ]
  %131 = phi <4 x i32> [ undef, %86 ], [ %125, %104 ]
  %132 = phi <4 x i32> [ %96, %86 ], [ %124, %104 ]
  %133 = phi <4 x i32> [ zeroinitializer, %86 ], [ %125, %104 ]
  %134 = phi <4 x i32> [ %91, %86 ], [ %126, %104 ]
  %135 = icmp eq i32 %100, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %129
  %137 = shl <4 x i32> %134, <i32 1, i32 1, i32 1, i32 1>
  %138 = add <4 x i32> %137, <i32 10, i32 10, i32 10, i32 10>
  %139 = shl <4 x i32> %95, %138
  %140 = or <4 x i32> %133, %139
  %141 = shl <4 x i32> %134, <i32 1, i32 1, i32 1, i32 1>
  %142 = add <4 x i32> %141, <i32 2, i32 2, i32 2, i32 2>
  %143 = shl <4 x i32> %93, %142
  %144 = or <4 x i32> %132, %143
  br label %145

145:                                              ; preds = %129, %136
  %146 = phi <4 x i32> [ %130, %129 ], [ %144, %136 ]
  %147 = phi <4 x i32> [ %131, %129 ], [ %140, %136 ]
  %148 = or <4 x i32> %147, %146
  %149 = shufflevector <4 x i32> %148, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %150 = or <4 x i32> %148, %149
  %151 = shufflevector <4 x i32> %150, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %152 = or <4 x i32> %150, %151
  %153 = extractelement <4 x i32> %152, i32 0
  %154 = icmp eq i32 %84, %87
  br i1 %154, label %166, label %155

155:                                              ; preds = %145, %79
  %156 = phi i32 [ %83, %79 ], [ %153, %145 ]
  %157 = phi i32 [ %67, %79 ], [ %88, %145 ]
  br label %158

158:                                              ; preds = %155, %158
  %159 = phi i32 [ %164, %158 ], [ %156, %155 ]
  %160 = phi i32 [ %161, %158 ], [ %157, %155 ]
  %161 = add nuw nsw i32 %160, 1
  %162 = shl i32 %161, 1
  %163 = shl i32 %81, %162
  %164 = or i32 %159, %163
  %165 = icmp eq i32 %161, 12
  br i1 %165, label %166, label %158

166:                                              ; preds = %158, %145
  %167 = phi i32 [ %153, %145 ], [ %164, %158 ]
  store i32 %167, i32* %82, align 8
  br label %168

168:                                              ; preds = %72, %166, %66, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_params(%43* nocapture readonly %0, %43* %1) local_unnamed_addr #0 {
  %3 = alloca %43*, align 8
  %4 = alloca %37, align 8
  %5 = bitcast %43* %0 to %69*
  %6 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %7 = icmp eq %43* %1, null
  %8 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %9 = bitcast [1 x %43*]* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br i1 %7, label %41, label %11

11:                                               ; preds = %2
  %12 = add i32 %10, 1
  %13 = zext i32 %12 to i64
  %14 = tail call noalias i8* @_safe_emalloc(i64 24, i64 %13, i64 0) #16
  %15 = bitcast i8* %14 to %8*
  %16 = bitcast i8* %14 to %32**
  store %32* null, %32** %16, align 8
  %17 = getelementptr inbounds %7, %7* %6, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = lshr i32 %18, 26
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds i8, i8* %14, i64 16
  store i8 %21, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %14, i64 17
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds i8, i8* %14, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %27 = load i16, i16* %26, align 2
  %28 = and i16 %27, 256
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = and i16 %27, -257
  store i16 %31, i16* %26, align 2
  br label %32

32:                                               ; preds = %11, %30
  %33 = phi i8 [ 1, %30 ], [ 0, %11 ]
  tail call fastcc void @250(%43* nonnull %1, %8* %15, i8 zeroext %33)
  %34 = load i64, i64* %25, align 8
  %35 = icmp eq i64 %34, 37
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @88, i64 0, i64 0)) #15
  unreachable

37:                                               ; preds = %32
  %38 = getelementptr inbounds i8, i8* %14, i64 24
  %39 = load i32, i32* %17, align 4
  %40 = or i32 %39, 1073741824
  store i32 %40, i32* %17, align 4
  br label %46

41:                                               ; preds = %2
  %42 = icmp eq i32 %10, 0
  br i1 %42, label %511, label %43

43:                                               ; preds = %41
  %44 = zext i32 %10 to i64
  %45 = tail call noalias i8* @_safe_emalloc(i64 24, i64 %44, i64 0) #16
  br label %46

46:                                               ; preds = %43, %37
  %47 = phi i8* [ %38, %37 ], [ %45, %43 ]
  %48 = bitcast i8* %47 to %8*
  %49 = load i32, i32* %9, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = getelementptr inbounds %7, %7* %6, i64 0, i32 2
  br label %348

53:                                               ; preds = %46
  %54 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  %55 = getelementptr inbounds %7, %7* %6, i64 0, i32 2
  %56 = getelementptr inbounds %7, %7* %6, i64 0, i32 7
  %57 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %58 = bitcast %43** %3 to i8*
  %59 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %60 = bitcast %38* %59 to i32*
  %61 = getelementptr inbounds %2, %2* %57, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1, i32 0
  %63 = bitcast %2* %57 to i8**
  %64 = getelementptr inbounds %7, %7* %6, i64 0, i32 26
  %65 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1
  %66 = bitcast %4* %65 to i8*
  %67 = bitcast %2* %57 to %32**
  %68 = bitcast %4* %65 to %65*
  %69 = getelementptr inbounds %65, %65* %68, i64 0, i32 1
  %70 = getelementptr inbounds %7, %7* %6, i64 0, i32 27
  br label %71

71:                                               ; preds = %53, %344
  %72 = phi i64 [ 0, %53 ], [ %200, %344 ]
  %73 = getelementptr inbounds %69, %69* %5, i64 0, i32 4, i64 %72
  %74 = load %43*, %43** %73, align 8
  %75 = getelementptr inbounds %43, %43* %74, i64 0, i32 3, i64 0
  %76 = load %43*, %43** %75, align 8
  %77 = getelementptr inbounds %43, %43* %74, i64 0, i32 3, i64 1
  %78 = load %43*, %43** %77, align 8
  %79 = getelementptr inbounds %43, %43* %74, i64 0, i32 3, i64 2
  %80 = load %43*, %43** %79, align 8
  %81 = getelementptr inbounds %43, %43* %78, i64 0, i32 3
  %82 = bitcast [1 x %43*]* %81 to %32**
  %83 = load %32*, %32** %82, align 8
  %84 = getelementptr inbounds %43, %43* %74, i64 0, i32 1
  %85 = load i16, i16* %84, align 2
  %86 = trunc i16 %85 to i8
  %87 = and i8 %86, 1
  %88 = lshr i16 %85, 1
  %89 = trunc i16 %88 to i8
  %90 = and i8 %89, 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #16
  %91 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 8), align 8
  %92 = tail call %2* @zend_hash_find(%39* %91, %32* %83) #16
  %93 = icmp eq %2* %92, null
  br i1 %93, label %111, label %94

94:                                               ; preds = %71
  %95 = bitcast %2* %92 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds i8, i8* %96, i64 17
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %109, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds i8, i8* %96, i64 8
  %104 = bitcast i8* %103 to i8 (%32*)**
  %105 = load i8 (%32*)*, i8 (%32*)** %104, align 8
  %106 = bitcast i8* %96 to %32**
  %107 = load %32*, %32** %106, align 8
  %108 = tail call zeroext i8 %105(%32* %107) #16
  store i8 %108, i8* %99, align 1
  br label %109

109:                                              ; preds = %102, %98
  %110 = getelementptr inbounds %32, %32* %83, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @89, i64 0, i64 0), i8* nonnull %110) #15
  unreachable

111:                                              ; preds = %94, %71
  %112 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %113 = getelementptr inbounds %32, %32* %83, i64 0, i32 0, i32 1
  %114 = bitcast %18* %113 to %64*
  %115 = getelementptr inbounds %64, %64* %114, i64 0, i32 1
  %116 = load i8, i8* %115, align 1
  %117 = and i8 %116, 2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %123

119:                                              ; preds = %111
  %120 = getelementptr inbounds %32, %32* %83, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 8
  br label %123

123:                                              ; preds = %111, %119
  %124 = tail call fastcc i32 @249(%7* %112, %32* nonnull %83)
  %125 = zext i32 %124 to i64
  %126 = add nuw nsw i64 %125, 68719476656
  %127 = lshr exact i64 %126, 4
  %128 = and i64 %127, 4294967295
  %129 = icmp eq i64 %72, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %32, %32* %83, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @90, i64 0, i64 0), i8* nonnull %131) #15
  unreachable

132:                                              ; preds = %123
  %133 = getelementptr inbounds %32, %32* %83, i64 0, i32 2
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 4
  br i1 %135, label %136, label %141

136:                                              ; preds = %132
  %137 = getelementptr inbounds %32, %32* %83, i64 0, i32 3, i64 0
  %138 = tail call i32 @memcmp(i8* nonnull %137, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %136
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @91, i64 0, i64 0)) #15
  unreachable

141:                                              ; preds = %136, %132
  %142 = load i32, i32* %55, align 4
  %143 = and i32 %142, 16777216
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %141
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @92, i64 0, i64 0)) #15
  unreachable

146:                                              ; preds = %141
  %147 = icmp eq i8 %90, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %146
  store i8 8, i8* %54, align 8
  %149 = or i32 %142, 16777216
  store i32 %149, i32* %55, align 4
  %150 = icmp eq %43* %80, null
  br i1 %150, label %181, label %151

151:                                              ; preds = %148
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @93, i64 0, i64 0)) #15
  unreachable

152:                                              ; preds = %146
  %153 = icmp eq %43* %80, null
  br i1 %153, label %178, label %154

154:                                              ; preds = %152
  %155 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %156 = or i32 %155, 160
  store i32 %156, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  store i8 1, i8* %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58)
  store %43* %80, %43** %3, align 8
  call void @zend_eval_const_expr(%43** nonnull %3) #16
  call void @zend_compile_const_expr(%43** nonnull %3) #16
  %157 = load %43*, %43** %3, align 8
  %158 = getelementptr inbounds %43, %43* %157, i64 0, i32 0
  %159 = load i16, i16* %158, align 8
  %160 = icmp eq i16 %159, 64
  br i1 %160, label %161, label %168

161:                                              ; preds = %154
  %162 = getelementptr inbounds %43, %43* %157, i64 0, i32 3
  %163 = bitcast [1 x %43*]* %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds [1 x %43*], [1 x %43*]* %162, i64 1
  %166 = bitcast [1 x %43*]* %165 to i32*
  %167 = load i32, i32* %166, align 8
  store i64 %164, i64* %61, align 8
  store i32 %167, i32* %62, align 8
  br label %176

168:                                              ; preds = %154
  %169 = tail call noalias i8* @_emalloc_16() #16
  %170 = bitcast i8* %169 to i32*
  store i32 1, i32* %170, align 8
  %171 = getelementptr inbounds i8, i8* %169, i64 4
  %172 = bitcast i8* %171 to i32*
  store i32 12, i32* %172, align 4
  %173 = tail call %43* @zend_ast_copy(%43* %157) #16
  %174 = getelementptr inbounds i8, i8* %169, i64 8
  %175 = bitcast i8* %174 to %43**
  store %43* %173, %43** %175, align 8
  store i8* %169, i8** %63, align 8
  store i32 5388, i32* %62, align 8
  tail call void @zend_ast_destroy(%43* %157) #16
  br label %176

176:                                              ; preds = %161, %168
  %177 = getelementptr inbounds %43, %43* %80, i64 0, i32 0
  store i16 0, i16* %177, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58)
  store i32 %155, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  br label %181

178:                                              ; preds = %152
  store i8 8, i8* %54, align 8
  %179 = trunc i64 %72 to i32
  %180 = add i32 %179, 1
  store i32 %180, i32* %56, align 4
  br label %181

181:                                              ; preds = %148, %176, %178
  %182 = phi i8 [ 8, %148 ], [ 1, %176 ], [ 8, %178 ]
  %183 = phi i8 [ -92, %148 ], [ 64, %176 ], [ 63, %178 ]
  %184 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %185 = tail call %9* @get_next_op(%7* %184) #16
  %186 = getelementptr inbounds %9, %9* %185, i64 0, i32 6
  store i8 %183, i8* %186, align 4
  %187 = getelementptr inbounds %9, %9* %185, i64 0, i32 7
  store i8 8, i8* %187, align 1
  %188 = getelementptr inbounds %9, %9* %185, i64 0, i32 8
  store i8 %182, i8* %188, align 2
  %189 = icmp eq i8 %182, 1
  br i1 %189, label %190, label %193

190:                                              ; preds = %181
  %191 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %192 = call i32 @zend_add_literal(%7* %191, %2* nonnull %57) #16
  br label %195

193:                                              ; preds = %181
  %194 = load i32, i32* %60, align 8
  br label %195

195:                                              ; preds = %190, %193
  %196 = phi i32 [ %192, %190 ], [ %194, %193 ]
  %197 = getelementptr inbounds %9, %9* %185, i64 0, i32 2, i32 0
  store i32 %196, i32* %197, align 4
  tail call fastcc void @244(%9* nonnull %185) #16
  %198 = getelementptr inbounds %9, %9* %185, i64 0, i32 9
  store i8 16, i8* %198, align 1
  %199 = getelementptr inbounds %9, %9* %185, i64 0, i32 3, i32 0
  store i32 %124, i32* %199, align 8
  %200 = add nuw nsw i64 %72, 1
  %201 = getelementptr inbounds %9, %9* %185, i64 0, i32 1, i32 0
  %202 = trunc i64 %200 to i32
  store i32 %202, i32* %201, align 8
  %203 = getelementptr inbounds %8, %8* %48, i64 %72
  %204 = load i8, i8* %115, align 1
  %205 = and i8 %204, 2
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %207, label %211

207:                                              ; preds = %195
  %208 = getelementptr inbounds %32, %32* %83, i64 0, i32 0, i32 0
  %209 = load i32, i32* %208, align 8
  %210 = add i32 %209, 1
  store i32 %210, i32* %208, align 8
  br label %211

211:                                              ; preds = %195, %207
  %212 = getelementptr inbounds %8, %8* %203, i64 0, i32 0
  store %32* %83, %32** %212, align 8
  %213 = getelementptr inbounds %8, %8* %48, i64 %72, i32 2
  store i8 %87, i8* %213, align 8
  %214 = getelementptr inbounds %8, %8* %48, i64 %72, i32 3
  store i8 %90, i8* %214, align 1
  %215 = getelementptr inbounds %8, %8* %48, i64 %72, i32 1
  store i64 1, i64* %215, align 8
  %216 = icmp eq %43* %76, null
  br i1 %216, label %335, label %217

217:                                              ; preds = %211
  %218 = icmp ne %43* %80, null
  br i1 %218, label %219, label %227

219:                                              ; preds = %217
  %220 = load i8, i8* %66, align 8
  switch i8 %220, label %226 [
    i8 1, label %227
    i8 11, label %221
  ]

221:                                              ; preds = %219
  %222 = load %32*, %32** %67, align 8
  %223 = getelementptr inbounds %32, %32* %222, i64 0, i32 3, i64 0
  %224 = tail call i32 @strcasecmp(i8* nonnull %223, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @94, i64 0, i64 0)) #19
  %225 = icmp eq i32 %224, 0
  br label %227

226:                                              ; preds = %219
  br label %227

227:                                              ; preds = %219, %226, %221, %217
  %228 = phi i1 [ false, %217 ], [ true, %219 ], [ %225, %221 ], [ false, %226 ]
  %229 = getelementptr inbounds %43, %43* %76, i64 0, i32 1
  %230 = load i16, i16* %229, align 2
  %231 = and i16 %230, 256
  %232 = load i32, i32* %55, align 4
  %233 = or i32 %232, 268435456
  store i32 %233, i32* %55, align 4
  %234 = icmp ne i16 %231, 0
  %235 = or i1 %228, %234
  %236 = zext i1 %235 to i8
  %237 = and i16 %230, -257
  store i16 %237, i16* %229, align 2
  tail call fastcc void @250(%43* nonnull %76, %8* nonnull %203, i8 zeroext %236)
  %238 = load i64, i64* %215, align 8
  %239 = lshr i64 %238, 1
  %240 = icmp eq i64 %239, 18
  br i1 %240, label %241, label %242

241:                                              ; preds = %227
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @95, i64 0, i64 0)) #15
  unreachable

242:                                              ; preds = %227
  %243 = getelementptr inbounds %43, %43* %76, i64 0, i32 0
  %244 = load i16, i16* %243, align 8
  %245 = icmp eq i16 %244, 1
  br i1 %245, label %246, label %269

246:                                              ; preds = %242
  %247 = icmp eq i64 %239, 7
  br i1 %247, label %248, label %259

248:                                              ; preds = %246
  %249 = icmp eq %43* %80, null
  %250 = or i1 %249, %228
  %251 = load i8, i8* %66, align 8
  %252 = icmp eq i8 %251, 7
  %253 = or i1 %250, %252
  br i1 %253, label %308, label %254

254:                                              ; preds = %248
  %255 = load i8, i8* %69, align 1
  %256 = and i8 %255, 1
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %258, label %308

258:                                              ; preds = %254
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @96, i64 0, i64 0)) #15
  unreachable

259:                                              ; preds = %246
  %260 = icmp eq i64 %239, 14
  %261 = and i1 %218, %260
  %262 = xor i1 %261, true
  %263 = or i1 %228, %262
  br i1 %263, label %308, label %264

264:                                              ; preds = %259
  %265 = load i8, i8* %69, align 1
  %266 = and i8 %265, 1
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %268, label %308

268:                                              ; preds = %264
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @97, i64 0, i64 0)) #15
  unreachable

269:                                              ; preds = %242
  %270 = icmp eq %43* %80, null
  %271 = or i1 %270, %228
  br i1 %271, label %308, label %272

272:                                              ; preds = %269
  %273 = load i8, i8* %69, align 1
  %274 = and i8 %273, 1
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %276, label %308

276:                                              ; preds = %272
  %277 = icmp ugt i64 %238, 511
  br i1 %277, label %278, label %279

278:                                              ; preds = %276
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @98, i64 0, i64 0)) #15
  unreachable

279:                                              ; preds = %276
  %280 = trunc i64 %239 to i63
  switch i63 %280, label %291 [
    i63 5, label %281
    i63 19, label %286
    i63 8, label %290
  ]

281:                                              ; preds = %279
  %282 = load i8, i8* %66, align 8
  %283 = and i8 %282, -2
  %284 = icmp eq i8 %283, 4
  br i1 %284, label %308, label %285

285:                                              ; preds = %281
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @99, i64 0, i64 0)) #15
  unreachable

286:                                              ; preds = %279
  %287 = load i8, i8* %66, align 8
  %288 = icmp eq i8 %287, 7
  br i1 %288, label %308, label %289

289:                                              ; preds = %286
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @100, i64 0, i64 0)) #15
  unreachable

290:                                              ; preds = %279
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @101, i64 0, i64 0)) #15
  unreachable

291:                                              ; preds = %279
  %292 = load i8, i8* %66, align 8
  %293 = zext i8 %292 to i64
  %294 = icmp eq i64 %239, %293
  br i1 %294, label %308, label %295

295:                                              ; preds = %291
  %296 = and i64 %238, -2
  %297 = icmp eq i64 %296, 26
  %298 = and i8 %292, -2
  %299 = icmp eq i8 %298, 2
  %300 = and i1 %297, %299
  br i1 %300, label %308, label %301

301:                                              ; preds = %295
  %302 = trunc i64 %239 to i32
  %303 = tail call i8* @zend_get_type_by_const(i32 %302) #16
  %304 = load i64, i64* %215, align 8
  %305 = lshr i64 %304, 1
  %306 = trunc i64 %305 to i32
  %307 = tail call i8* @zend_get_type_by_const(i32 %306) #16
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @102, i64 0, i64 0), i8* %303, i8* %307) #15
  unreachable

308:                                              ; preds = %295, %281, %254, %264, %286, %272, %259, %269, %291, %248
  %309 = load i8, i8* %186, align 4
  %310 = icmp eq i8 %309, 64
  %311 = icmp ugt i64 %238, 511
  br i1 %310, label %312, label %329

312:                                              ; preds = %308
  br i1 %311, label %313, label %324

313:                                              ; preds = %312
  %314 = load i32, i32* %197, align 4
  %315 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %316 = getelementptr inbounds %7, %7* %315, i64 0, i32 27
  %317 = load i32, i32* %316, align 8
  %318 = getelementptr inbounds %7, %7* %315, i64 0, i32 26
  %319 = load %2*, %2** %318, align 8
  %320 = zext i32 %314 to i64
  %321 = getelementptr inbounds %2, %2* %319, i64 %320, i32 2, i32 0
  store i32 %317, i32* %321, align 4
  %322 = load i32, i32* %316, align 8
  %323 = add i32 %322, 8
  store i32 %323, i32* %316, align 8
  br label %344

324:                                              ; preds = %312
  %325 = load %2*, %2** %64, align 8
  %326 = load i32, i32* %197, align 4
  %327 = zext i32 %326 to i64
  %328 = getelementptr inbounds %2, %2* %325, i64 %327, i32 2, i32 0
  store i32 -1, i32* %328, align 4
  br label %344

329:                                              ; preds = %308
  br i1 %311, label %330, label %334

330:                                              ; preds = %329
  %331 = load i32, i32* %70, align 8
  store i32 %331, i32* %197, align 4
  %332 = load i32, i32* %70, align 8
  %333 = add i32 %332, 8
  store i32 %333, i32* %70, align 8
  br label %344

334:                                              ; preds = %329
  store i32 -1, i32* %197, align 4
  br label %344

335:                                              ; preds = %211
  %336 = load i8, i8* %186, align 4
  %337 = icmp eq i8 %336, 64
  br i1 %337, label %338, label %343

338:                                              ; preds = %335
  %339 = load %2*, %2** %64, align 8
  %340 = load i32, i32* %197, align 4
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds %2, %2* %339, i64 %341, i32 2, i32 0
  store i32 -1, i32* %342, align 4
  br label %344

343:                                              ; preds = %335
  store i32 -1, i32* %197, align 4
  br label %344

344:                                              ; preds = %324, %313, %334, %330, %338, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #16
  %345 = load i32, i32* %9, align 8
  %346 = zext i32 %345 to i64
  %347 = icmp ult i64 %200, %346
  br i1 %347, label %71, label %348

348:                                              ; preds = %344, %51
  %349 = phi i32* [ %52, %51 ], [ %55, %344 ]
  %350 = phi i32 [ 0, %51 ], [ %345, %344 ]
  %351 = getelementptr inbounds %7, %7* %6, i64 0, i32 6
  store i32 %350, i32* %351, align 8
  %352 = getelementptr inbounds %7, %7* %6, i64 0, i32 8
  %353 = bitcast %8** %352 to i8**
  store i8* %47, i8** %353, align 8
  %354 = load i32, i32* %349, align 4
  %355 = and i32 %354, 16777216
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %359, label %357

357:                                              ; preds = %348
  %358 = add i32 %350, -1
  store i32 %358, i32* %351, align 8
  br label %359

359:                                              ; preds = %348, %357
  %360 = phi i32 [ %350, %348 ], [ %358, %357 ]
  %361 = getelementptr inbounds %7, %7* %6, i64 0, i32 1, i64 0
  store i8 0, i8* %361, align 1
  %362 = getelementptr inbounds %7, %7* %6, i64 0, i32 1, i64 1
  store i8 0, i8* %362, align 1
  %363 = getelementptr inbounds %7, %7* %6, i64 0, i32 1, i64 2
  store i8 0, i8* %363, align 1
  %364 = icmp eq i8* %47, null
  br i1 %364, label %511, label %365

365:                                              ; preds = %359
  %366 = icmp ult i32 %360, 12
  %367 = select i1 %366, i32 %360, i32 12
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %415, label %369

369:                                              ; preds = %365
  %370 = bitcast %7* %6 to i32*
  %371 = zext i32 %367 to i64
  %372 = load i32, i32* %370, align 8
  %373 = and i64 %371, 1
  %374 = icmp eq i32 %367, 1
  br i1 %374, label %401, label %375

375:                                              ; preds = %369
  %376 = sub nsw i64 %371, %373
  br label %377

377:                                              ; preds = %377, %375
  %378 = phi i32 [ %372, %375 ], [ %398, %377 ]
  %379 = phi i64 [ 0, %375 ], [ %394, %377 ]
  %380 = phi i64 [ %376, %375 ], [ %399, %377 ]
  %381 = getelementptr inbounds %8, %8* %48, i64 %379, i32 2
  %382 = load i8, i8* %381, align 8
  %383 = zext i8 %382 to i32
  %384 = shl nuw nsw i32 %383, 6
  %385 = or i64 %379, 1
  %386 = trunc i64 %385 to i32
  %387 = shl i32 %386, 1
  %388 = shl i32 %384, %387
  %389 = or i32 %388, %378
  store i32 %389, i32* %370, align 8
  %390 = getelementptr inbounds %8, %8* %48, i64 %385, i32 2
  %391 = load i8, i8* %390, align 8
  %392 = zext i8 %391 to i32
  %393 = shl nuw nsw i32 %392, 6
  %394 = add nuw nsw i64 %379, 2
  %395 = trunc i64 %394 to i32
  %396 = shl i32 %395, 1
  %397 = shl i32 %393, %396
  %398 = or i32 %397, %389
  store i32 %398, i32* %370, align 8
  %399 = add i64 %380, -2
  %400 = icmp eq i64 %399, 0
  br i1 %400, label %401, label %377

401:                                              ; preds = %377, %369
  %402 = phi i32 [ %372, %369 ], [ %398, %377 ]
  %403 = phi i64 [ 0, %369 ], [ %394, %377 ]
  %404 = icmp eq i64 %373, 0
  br i1 %404, label %415, label %405

405:                                              ; preds = %401
  %406 = getelementptr inbounds %8, %8* %48, i64 %403, i32 2
  %407 = load i8, i8* %406, align 8
  %408 = zext i8 %407 to i32
  %409 = shl nuw nsw i32 %408, 6
  %410 = trunc i64 %403 to i32
  %411 = shl i32 %410, 1
  %412 = add i32 %411, 2
  %413 = shl i32 %409, %412
  %414 = or i32 %413, %402
  store i32 %414, i32* %370, align 8
  br label %415

415:                                              ; preds = %405, %401, %365
  br i1 %356, label %511, label %416

416:                                              ; preds = %415
  %417 = zext i32 %367 to i64
  %418 = getelementptr inbounds %8, %8* %48, i64 %417, i32 2
  %419 = load i8, i8* %418, align 8
  %420 = icmp ne i8 %419, 0
  %421 = and i1 %366, %420
  br i1 %421, label %422, label %511

422:                                              ; preds = %416
  %423 = zext i8 %419 to i32
  %424 = shl nuw nsw i32 %423, 6
  %425 = bitcast %7* %6 to i32*
  %426 = load i32, i32* %425, align 8
  %427 = sub i32 12, %360
  %428 = icmp ult i32 %427, 8
  br i1 %428, label %498, label %429

429:                                              ; preds = %422
  %430 = and i32 %427, -8
  %431 = add i32 %360, %430
  %432 = insertelement <4 x i32> undef, i32 %360, i32 0
  %433 = shufflevector <4 x i32> %432, <4 x i32> undef, <4 x i32> zeroinitializer
  %434 = add <4 x i32> %433, <i32 0, i32 1, i32 2, i32 3>
  %435 = insertelement <4 x i32> undef, i32 %424, i32 0
  %436 = shufflevector <4 x i32> %435, <4 x i32> undef, <4 x i32> zeroinitializer
  %437 = insertelement <4 x i32> undef, i32 %424, i32 0
  %438 = shufflevector <4 x i32> %437, <4 x i32> undef, <4 x i32> zeroinitializer
  %439 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %426, i32 0
  %440 = add i32 %430, -8
  %441 = lshr exact i32 %440, 3
  %442 = add nuw nsw i32 %441, 1
  %443 = and i32 %442, 1
  %444 = icmp eq i32 %440, 0
  br i1 %444, label %472, label %445

445:                                              ; preds = %429
  %446 = sub nsw i32 %442, %443
  br label %447

447:                                              ; preds = %447, %445
  %448 = phi <4 x i32> [ %439, %445 ], [ %467, %447 ]
  %449 = phi <4 x i32> [ zeroinitializer, %445 ], [ %468, %447 ]
  %450 = phi <4 x i32> [ %434, %445 ], [ %469, %447 ]
  %451 = phi i32 [ %446, %445 ], [ %470, %447 ]
  %452 = shl <4 x i32> %450, <i32 1, i32 1, i32 1, i32 1>
  %453 = add <4 x i32> %452, <i32 2, i32 2, i32 2, i32 2>
  %454 = shl <4 x i32> %450, <i32 1, i32 1, i32 1, i32 1>
  %455 = add <4 x i32> %454, <i32 10, i32 10, i32 10, i32 10>
  %456 = shl <4 x i32> %436, %453
  %457 = shl <4 x i32> %438, %455
  %458 = or <4 x i32> %456, %448
  %459 = or <4 x i32> %457, %449
  %460 = add <4 x i32> %450, <i32 8, i32 8, i32 8, i32 8>
  %461 = shl <4 x i32> %460, <i32 1, i32 1, i32 1, i32 1>
  %462 = add <4 x i32> %461, <i32 2, i32 2, i32 2, i32 2>
  %463 = shl <4 x i32> %460, <i32 1, i32 1, i32 1, i32 1>
  %464 = add <4 x i32> %463, <i32 10, i32 10, i32 10, i32 10>
  %465 = shl <4 x i32> %436, %462
  %466 = shl <4 x i32> %438, %464
  %467 = or <4 x i32> %465, %458
  %468 = or <4 x i32> %466, %459
  %469 = add <4 x i32> %450, <i32 16, i32 16, i32 16, i32 16>
  %470 = add i32 %451, -2
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %447

472:                                              ; preds = %447, %429
  %473 = phi <4 x i32> [ undef, %429 ], [ %467, %447 ]
  %474 = phi <4 x i32> [ undef, %429 ], [ %468, %447 ]
  %475 = phi <4 x i32> [ %439, %429 ], [ %467, %447 ]
  %476 = phi <4 x i32> [ zeroinitializer, %429 ], [ %468, %447 ]
  %477 = phi <4 x i32> [ %434, %429 ], [ %469, %447 ]
  %478 = icmp eq i32 %443, 0
  br i1 %478, label %488, label %479

479:                                              ; preds = %472
  %480 = shl <4 x i32> %477, <i32 1, i32 1, i32 1, i32 1>
  %481 = add <4 x i32> %480, <i32 10, i32 10, i32 10, i32 10>
  %482 = shl <4 x i32> %438, %481
  %483 = or <4 x i32> %482, %476
  %484 = shl <4 x i32> %477, <i32 1, i32 1, i32 1, i32 1>
  %485 = add <4 x i32> %484, <i32 2, i32 2, i32 2, i32 2>
  %486 = shl <4 x i32> %436, %485
  %487 = or <4 x i32> %486, %475
  br label %488

488:                                              ; preds = %472, %479
  %489 = phi <4 x i32> [ %473, %472 ], [ %487, %479 ]
  %490 = phi <4 x i32> [ %474, %472 ], [ %483, %479 ]
  %491 = or <4 x i32> %490, %489
  %492 = shufflevector <4 x i32> %491, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %493 = or <4 x i32> %491, %492
  %494 = shufflevector <4 x i32> %493, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %495 = or <4 x i32> %493, %494
  %496 = extractelement <4 x i32> %495, i32 0
  %497 = icmp eq i32 %427, %430
  br i1 %497, label %509, label %498

498:                                              ; preds = %488, %422
  %499 = phi i32 [ %426, %422 ], [ %496, %488 ]
  %500 = phi i32 [ %360, %422 ], [ %431, %488 ]
  br label %501

501:                                              ; preds = %498, %501
  %502 = phi i32 [ %507, %501 ], [ %499, %498 ]
  %503 = phi i32 [ %504, %501 ], [ %500, %498 ]
  %504 = add nuw nsw i32 %503, 1
  %505 = shl nuw i32 %504, 1
  %506 = shl i32 %424, %505
  %507 = or i32 %506, %502
  %508 = icmp eq i32 %504, 12
  br i1 %508, label %509, label %501

509:                                              ; preds = %501, %488
  %510 = phi i32 [ %496, %488 ], [ %507, %501 ]
  store i32 %510, i32* %425, align 8
  br label %511

511:                                              ; preds = %509, %416, %415, %359, %41
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @250(%43* nocapture readonly %0, %8* nocapture %1, i8 zeroext %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp eq i16 %5, 1
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %43, %43* %0, i64 0, i32 1
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i64
  %11 = shl nuw nsw i64 %10, 1
  br label %161

12:                                               ; preds = %3
  %13 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %14 = bitcast [1 x %43*]* %13 to %32**
  %15 = load %32*, %32** %14, align 8
  %16 = getelementptr inbounds %32, %32* %15, i64 0, i32 2
  %17 = getelementptr inbounds %32, %32* %15, i64 0, i32 3, i64 0
  %18 = load i64, i64* %16, align 8
  %19 = icmp eq i64 %18, 3
  br i1 %19, label %20, label %25

20:                                               ; preds = %12
  %21 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %17, i64 3, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @180, i64 0, i64 0), i64 3) #16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %69, label %23

23:                                               ; preds = %20
  %24 = load i64, i64* %16, align 8
  br label %25

25:                                               ; preds = %23, %12
  %26 = phi i64 [ %24, %23 ], [ %18, %12 ]
  %27 = icmp eq i64 %26, 5
  br i1 %27, label %28, label %33

28:                                               ; preds = %25
  %29 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %17, i64 5, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @179, i64 0, i64 0), i64 5) #16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %69, label %31

31:                                               ; preds = %28
  %32 = load i64, i64* %16, align 8
  br label %33

33:                                               ; preds = %31, %25
  %34 = phi i64 [ %32, %31 ], [ %26, %25 ]
  %35 = icmp eq i64 %34, 6
  br i1 %35, label %36, label %41

36:                                               ; preds = %33
  %37 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %17, i64 6, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @182, i64 0, i64 0), i64 6) #16
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %69, label %39

39:                                               ; preds = %36
  %40 = load i64, i64* %16, align 8
  br label %41

41:                                               ; preds = %39, %33
  %42 = phi i64 [ %40, %39 ], [ %34, %33 ]
  %43 = icmp eq i64 %42, 4
  br i1 %43, label %44, label %55

44:                                               ; preds = %41
  %45 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %17, i64 4, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @177, i64 0, i64 0), i64 4) #16
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %44
  %48 = load i64, i64* %16, align 8
  %49 = icmp eq i64 %48, 4
  br i1 %49, label %50, label %55

50:                                               ; preds = %47
  %51 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %17, i64 4, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @184, i64 0, i64 0), i64 4) #16
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %50
  %54 = load i64, i64* %16, align 8
  br label %55

55:                                               ; preds = %53, %47, %41
  %56 = phi i64 [ %54, %53 ], [ %48, %47 ], [ %42, %41 ]
  %57 = icmp eq i64 %56, 8
  br i1 %57, label %58, label %63

58:                                               ; preds = %55
  %59 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %17, i64 8, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @185, i64 0, i64 0), i64 8) #16
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %58
  %62 = load i64, i64* %16, align 8
  br label %63

63:                                               ; preds = %61, %55
  %64 = phi i64 [ %62, %61 ], [ %56, %55 ]
  %65 = icmp eq i64 %64, 6
  br i1 %65, label %66, label %85

66:                                               ; preds = %63
  %67 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %17, i64 6, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @186, i64 0, i64 0), i64 6) #16
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %85

69:                                               ; preds = %20, %28, %36, %44, %50, %58, %66
  %70 = phi %63* [ getelementptr inbounds ([8 x %63], [8 x %63]* @205, i64 0, i64 0), %20 ], [ getelementptr inbounds ([8 x %63], [8 x %63]* @205, i64 0, i64 1), %28 ], [ getelementptr inbounds ([8 x %63], [8 x %63]* @205, i64 0, i64 2), %36 ], [ getelementptr inbounds ([8 x %63], [8 x %63]* @205, i64 0, i64 3), %44 ], [ getelementptr inbounds ([8 x %63], [8 x %63]* @205, i64 0, i64 4), %50 ], [ getelementptr inbounds ([8 x %63], [8 x %63]* @205, i64 0, i64 5), %58 ], [ getelementptr inbounds ([8 x %63], [8 x %63]* @205, i64 0, i64 6), %66 ]
  %71 = getelementptr inbounds %63, %63* %70, i64 0, i32 2
  %72 = load i8, i8* %71, align 8
  %73 = zext i8 %72 to i64
  %74 = icmp eq i8 %72, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %43, %43* %0, i64 0, i32 1
  %77 = load i16, i16* %76, align 2
  %78 = and i16 %77, 1
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = tail call %32* @zend_string_tolower(%32* %15) #16
  %82 = getelementptr inbounds %32, %32* %81, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @204, i64 0, i64 0), i8* nonnull %82) #15
  unreachable

83:                                               ; preds = %75
  %84 = shl nuw nsw i64 %73, 1
  br label %161

85:                                               ; preds = %63, %66, %69
  %86 = getelementptr inbounds %43, %43* %0, i64 0, i32 1
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %113, label %89

89:                                               ; preds = %85
  %90 = load %32*, %32** %14, align 8
  %91 = getelementptr inbounds %32, %32* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, 4
  br i1 %93, label %94, label %100

94:                                               ; preds = %89
  %95 = getelementptr inbounds %32, %32* %90, i64 0, i32 3, i64 0
  %96 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %95, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %128, label %98

98:                                               ; preds = %94
  %99 = load i64, i64* %91, align 8
  br label %100

100:                                              ; preds = %98, %89
  %101 = phi i64 [ %99, %98 ], [ %92, %89 ]
  %102 = icmp eq i64 %101, 6
  br i1 %102, label %103, label %113

103:                                              ; preds = %100
  %104 = getelementptr inbounds %32, %32* %90, i64 0, i32 3, i64 0
  %105 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %104, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %128, label %107

107:                                              ; preds = %103
  %108 = load i64, i64* %91, align 8
  %109 = icmp eq i64 %108, 6
  br i1 %109, label %110, label %113

110:                                              ; preds = %107
  %111 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %104, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %128, label %113

113:                                              ; preds = %100, %107, %110, %85
  %114 = getelementptr inbounds [1 x %43*], [1 x %43*]* %13, i64 1
  %115 = bitcast [1 x %43*]* %114 to i8*
  %116 = load i8, i8* %115, align 8
  %117 = icmp eq i8 %116, 6
  br i1 %117, label %119, label %118

118:                                              ; preds = %113
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

119:                                              ; preds = %113
  %120 = load %32*, %32** %14, align 8
  %121 = load i16, i16* %86, align 2
  %122 = zext i16 %121 to i32
  %123 = tail call %32* @zend_resolve_class_name(%32* %120, i32 %122) #16
  %124 = tail call fastcc zeroext i8 @230(%32* %123) #16
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %158, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %32, %32* %123, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @0, i64 0, i64 0), i8* nonnull %127) #15
  unreachable

128:                                              ; preds = %94, %103, %110
  %129 = phi i32 [ 3, %110 ], [ 2, %103 ], [ 1, %94 ]
  %130 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %131 = icmp eq %1* %130, null
  br i1 %131, label %132, label %147

132:                                              ; preds = %128
  %133 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %134 = getelementptr inbounds %7, %7* %133, i64 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 1048576
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %147

138:                                              ; preds = %132
  %139 = getelementptr inbounds %7, %7* %133, i64 0, i32 3
  %140 = load %32*, %32** %139, align 8
  %141 = icmp eq %32* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %138
  %143 = icmp eq i32 %129, 1
  %144 = icmp eq i32 %129, 2
  %145 = select i1 %144, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0)
  %146 = select i1 %143, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i8* %145
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @228, i64 0, i64 0), i8* %146) #15
  unreachable

147:                                              ; preds = %128, %132, %138
  %148 = getelementptr inbounds %32, %32* %15, i64 0, i32 0, i32 1
  %149 = bitcast %18* %148 to %64*
  %150 = getelementptr inbounds %64, %64* %149, i64 0, i32 1
  %151 = load i8, i8* %150, align 1
  %152 = and i8 %151, 2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %147
  %155 = getelementptr inbounds %32, %32* %15, i64 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = add i32 %156, 1
  store i32 %157, i32* %155, align 8
  br label %158

158:                                              ; preds = %154, %147, %119
  %159 = phi %32* [ %123, %119 ], [ %15, %147 ], [ %15, %154 ]
  %160 = ptrtoint %32* %159 to i64
  br label %161

161:                                              ; preds = %83, %158, %7
  %162 = phi i64 [ %84, %83 ], [ %160, %158 ], [ %11, %7 ]
  %163 = icmp ne i8 %2, 0
  %164 = zext i1 %163 to i64
  %165 = or i64 %162, %164
  %166 = getelementptr inbounds %8, %8* %1, i64 0, i32 1
  store i64 %165, i64* %166, align 8
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8* nocapture, i8* nocapture) local_unnamed_addr #9

declare dso_local i8* @zend_get_type_by_const(i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_closure_uses(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %4 = bitcast %43* %0 to %69*
  %5 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %6 = bitcast [1 x %43*]* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %63, label %9

9:                                                ; preds = %1
  %10 = bitcast %2* %2 to i8*
  %11 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %7, %7* %3, i64 0, i32 19
  %13 = getelementptr inbounds %7, %7* %3, i64 0, i32 12
  %14 = getelementptr inbounds %7, %7* %3, i64 0, i32 14
  br label %15

15:                                               ; preds = %9, %58
  %16 = phi i64 [ 0, %9 ], [ %59, %58 ]
  %17 = getelementptr inbounds %69, %69* %4, i64 0, i32 4, i64 %16
  %18 = load %43*, %43** %17, align 8
  %19 = getelementptr inbounds %43, %43* %18, i64 0, i32 3
  %20 = bitcast [1 x %43*]* %19 to %32**
  %21 = load %32*, %32** %20, align 8
  %22 = getelementptr inbounds %43, %43* %18, i64 0, i32 1
  %23 = load i16, i16* %22, align 2
  %24 = trunc i16 %23 to i8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  store i32 1, i32* %11, align 8
  %25 = load %39*, %39** %12, align 8
  %26 = icmp eq %39* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %15
  %28 = call zeroext i8 @zend_hash_exists(%39* nonnull %25, %32* %21) #16
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %32, %32* %21, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @103, i64 0, i64 0), i8* nonnull %31) #15
  unreachable

32:                                               ; preds = %27, %15
  %33 = load i32, i32* %13, align 8
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %58

35:                                               ; preds = %32
  %36 = load %32**, %32*** %14, align 8
  %37 = getelementptr inbounds %32, %32* %21, i64 0, i32 2
  %38 = getelementptr inbounds %32, %32* %21, i64 0, i32 3, i64 0
  %39 = sext i32 %33 to i64
  br label %40

40:                                               ; preds = %35, %55
  %41 = phi i64 [ 0, %35 ], [ %56, %55 ]
  %42 = getelementptr inbounds %32*, %32** %36, i64 %41
  %43 = load %32*, %32** %42, align 8
  %44 = icmp eq %32* %43, %21
  br i1 %44, label %54, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %32, %32* %43, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = load i64, i64* %37, align 8
  %49 = icmp eq i64 %47, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = getelementptr inbounds %32, %32* %43, i64 0, i32 3, i64 0
  %52 = call i32 @memcmp(i8* nonnull %51, i8* nonnull %38, i64 %47) #19
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %50, %40
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @104, i64 0, i64 0), i8* nonnull %38) #15
  unreachable

55:                                               ; preds = %50, %45
  %56 = add nuw nsw i64 %41, 1
  %57 = icmp slt i64 %56, %39
  br i1 %57, label %40, label %58

58:                                               ; preds = %55, %32
  call fastcc void @246(%43* %18, %2* nonnull %2, i8 zeroext %24)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  %59 = add nuw nsw i64 %16, 1
  %60 = load i32, i32* %6, align 8
  %61 = zext i32 %60 to i64
  %62 = icmp ult i64 %59, %61
  br i1 %62, label %15, label %63

63:                                               ; preds = %58, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_begin_method_decl(%7* %0, %32* %1, i8 zeroext %2) local_unnamed_addr #0 {
  %4 = alloca %2, align 8
  %5 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %6 = getelementptr inbounds %1, %1* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 6
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 1
  %11 = getelementptr inbounds %7, %7* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = lshr i32 %12, 8
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = trunc i32 %12 to i8
  %17 = and i8 %16, 1
  %18 = icmp ne i8 %10, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %3
  %20 = icmp ne i8 %15, 0
  %21 = and i32 %12, 6
  %22 = icmp eq i32 %21, 0
  %23 = and i1 %22, %20
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %1, %1* %5, i64 0, i32 1
  %26 = load %32*, %32** %25, align 8
  %27 = getelementptr inbounds %32, %32* %26, i64 0, i32 3, i64 0
  %28 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @105, i64 0, i64 0), i8* nonnull %27, i8* nonnull %28) #15
  unreachable

29:                                               ; preds = %19
  %30 = or i32 %12, 2
  store i32 %30, i32* %11, align 4
  br label %31

31:                                               ; preds = %29, %3
  %32 = phi i32 [ %30, %29 ], [ %12, %3 ]
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %56, label %35

35:                                               ; preds = %31
  %36 = and i32 %32, 1024
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %35
  %39 = icmp eq i8 %10, 0
  %40 = select i1 %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @108, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @107, i64 0, i64 0)
  %41 = getelementptr inbounds %1, %1* %5, i64 0, i32 1
  %42 = load %32*, %32** %41, align 8
  %43 = getelementptr inbounds %32, %32* %42, i64 0, i32 3, i64 0
  %44 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @106, i64 0, i64 0), i8* %40, i8* nonnull %43, i8* nonnull %44) #15
  unreachable

45:                                               ; preds = %35
  %46 = icmp eq i8 %2, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %45
  %48 = icmp eq i8 %10, 0
  %49 = select i1 %48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @108, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @107, i64 0, i64 0)
  %50 = getelementptr inbounds %1, %1* %5, i64 0, i32 1
  %51 = load %32*, %32** %50, align 8
  %52 = getelementptr inbounds %32, %32* %51, i64 0, i32 3, i64 0
  %53 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @109, i64 0, i64 0), i8* %49, i8* nonnull %52, i8* nonnull %53) #15
  unreachable

54:                                               ; preds = %45
  %55 = or i32 %7, 16
  store i32 %55, i32* %6, align 4
  br label %63

56:                                               ; preds = %31
  %57 = icmp eq i8 %2, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %56
  %59 = getelementptr inbounds %1, %1* %5, i64 0, i32 1
  %60 = load %32*, %32** %59, align 8
  %61 = getelementptr inbounds %32, %32* %60, i64 0, i32 3, i64 0
  %62 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @110, i64 0, i64 0), i8* nonnull %61, i8* nonnull %62) #15
  unreachable

63:                                               ; preds = %56, %54
  %64 = getelementptr inbounds %7, %7* %0, i64 0, i32 4
  store %1* %5, %1** %64, align 8
  %65 = getelementptr inbounds %32, %32* %1, i64 0, i32 0, i32 1
  %66 = bitcast %18* %65 to %64*
  %67 = getelementptr inbounds %64, %64* %66, i64 0, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = and i8 %68, 2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %63
  %72 = getelementptr inbounds %32, %32* %1, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 1
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %63, %71
  %76 = getelementptr inbounds %7, %7* %0, i64 0, i32 3
  store %32* %1, %32** %76, align 8
  %77 = tail call %32* @zend_string_tolower(%32* nonnull %1) #16
  %78 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %79 = tail call %32* %78(%32* %77) #16
  %80 = getelementptr inbounds %1, %1* %5, i64 0, i32 10
  %81 = getelementptr inbounds %7, %7* %0, i64 0, i32 0
  %82 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #16
  %83 = bitcast %2* %4 to i8**
  store i8* %81, i8** %83, align 8
  %84 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 17, i32* %84, align 8
  %85 = call %2* @_zend_hash_add(%39* nonnull %80, %32* %79, %2* nonnull %4) #16
  %86 = icmp eq %2* %85, null
  br i1 %86, label %87, label %88

87:                                               ; preds = %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #16
  br label %92

88:                                               ; preds = %75
  %89 = bitcast %2* %85 to i8**
  %90 = load i8*, i8** %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #16
  %91 = icmp eq i8* %90, null
  br i1 %91, label %92, label %97

92:                                               ; preds = %87, %88
  %93 = getelementptr inbounds %1, %1* %5, i64 0, i32 1
  %94 = load %32*, %32** %93, align 8
  %95 = getelementptr inbounds %32, %32* %94, i64 0, i32 3, i64 0
  %96 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @111, i64 0, i64 0), i8* nonnull %95, i8* nonnull %96) #15
  unreachable

97:                                               ; preds = %88
  br i1 %18, label %98, label %180

98:                                               ; preds = %97
  %99 = getelementptr inbounds %32, %32* %79, i64 0, i32 2
  %100 = load i64, i64* %99, align 8
  switch i64 %100, label %338 [
    i64 6, label %101
    i64 12, label %110
    i64 5, label %119
    i64 7, label %136
    i64 10, label %153
    i64 8, label %162
    i64 11, label %171
  ]

101:                                              ; preds = %98
  %102 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %103 = call i32 @memcmp(i8* nonnull %102, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @112, i64 0, i64 0), i64 6) #19
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %338

105:                                              ; preds = %101
  %106 = icmp ne i8 %15, 0
  %107 = icmp eq i8 %17, 0
  %108 = and i1 %107, %106
  br i1 %108, label %338, label %109

109:                                              ; preds = %105
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @113, i64 0, i64 0)) #16
  br label %338

110:                                              ; preds = %98
  %111 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %112 = call i32 @memcmp(i8* nonnull %111, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @114, i64 0, i64 0), i64 12) #19
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %338

114:                                              ; preds = %110
  %115 = and i32 %12, 1
  %116 = and i32 %115, %13
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %338

118:                                              ; preds = %114
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @115, i64 0, i64 0)) #16
  br label %338

119:                                              ; preds = %98
  %120 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %121 = call i32 @memcmp(i8* nonnull %120, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @116, i64 0, i64 0), i64 5) #19
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %128

123:                                              ; preds = %119
  %124 = icmp ne i8 %15, 0
  %125 = icmp eq i8 %17, 0
  %126 = and i1 %125, %124
  br i1 %126, label %338, label %127

127:                                              ; preds = %123
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @117, i64 0, i64 0)) #16
  br label %338

128:                                              ; preds = %119
  %129 = call i32 @memcmp(i8* nonnull %120, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @118, i64 0, i64 0), i64 5) #19
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %338

131:                                              ; preds = %128
  %132 = icmp ne i8 %15, 0
  %133 = icmp eq i8 %17, 0
  %134 = and i1 %133, %132
  br i1 %134, label %338, label %135

135:                                              ; preds = %131
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @119, i64 0, i64 0)) #16
  br label %338

136:                                              ; preds = %98
  %137 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %138 = call i32 @memcmp(i8* nonnull %137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @120, i64 0, i64 0), i64 7) #19
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %145

140:                                              ; preds = %136
  %141 = icmp ne i8 %15, 0
  %142 = icmp eq i8 %17, 0
  %143 = and i1 %142, %141
  br i1 %143, label %338, label %144

144:                                              ; preds = %140
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @121, i64 0, i64 0)) #16
  br label %338

145:                                              ; preds = %136
  %146 = call i32 @memcmp(i8* nonnull %137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @122, i64 0, i64 0), i64 7) #19
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %338

148:                                              ; preds = %145
  %149 = icmp ne i8 %15, 0
  %150 = icmp eq i8 %17, 0
  %151 = and i1 %150, %149
  br i1 %151, label %338, label %152

152:                                              ; preds = %148
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @123, i64 0, i64 0)) #16
  br label %338

153:                                              ; preds = %98
  %154 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %155 = call i32 @memcmp(i8* nonnull %154, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @124, i64 0, i64 0), i64 10) #19
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %338

157:                                              ; preds = %153
  %158 = icmp ne i8 %15, 0
  %159 = icmp eq i8 %17, 0
  %160 = and i1 %159, %158
  br i1 %160, label %338, label %161

161:                                              ; preds = %157
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @125, i64 0, i64 0)) #16
  br label %338

162:                                              ; preds = %98
  %163 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %164 = call i32 @memcmp(i8* nonnull %163, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @126, i64 0, i64 0), i64 8) #19
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %338

166:                                              ; preds = %162
  %167 = icmp ne i8 %15, 0
  %168 = icmp eq i8 %17, 0
  %169 = and i1 %168, %167
  br i1 %169, label %338, label %170

170:                                              ; preds = %166
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @127, i64 0, i64 0)) #16
  br label %338

171:                                              ; preds = %98
  %172 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %173 = call i32 @memcmp(i8* nonnull %172, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @128, i64 0, i64 0), i64 11) #19
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %338

175:                                              ; preds = %171
  %176 = icmp ne i8 %15, 0
  %177 = icmp eq i8 %17, 0
  %178 = and i1 %177, %176
  br i1 %178, label %338, label %179

179:                                              ; preds = %175
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @129, i64 0, i64 0)) #16
  br label %338

180:                                              ; preds = %97
  %181 = trunc i32 %7 to i8
  %182 = icmp slt i8 %181, 0
  %183 = getelementptr inbounds %32, %32* %79, i64 0, i32 2
  br i1 %182, label %202, label %184

184:                                              ; preds = %180
  %185 = load i64, i64* %183, align 8
  %186 = getelementptr inbounds %1, %1* %5, i64 0, i32 1
  %187 = load %32*, %32** %186, align 8
  %188 = getelementptr inbounds %32, %32* %187, i64 0, i32 2
  %189 = load i64, i64* %188, align 8
  %190 = icmp eq i64 %185, %189
  br i1 %190, label %191, label %202

191:                                              ; preds = %184
  %192 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %193 = getelementptr inbounds %32, %32* %187, i64 0, i32 3, i64 0
  %194 = call i32 @zend_binary_strcasecmp(i8* nonnull %192, i64 %185, i8* nonnull %193, i64 %185) #16
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %202

196:                                              ; preds = %191
  %197 = getelementptr inbounds %1, %1* %5, i64 0, i32 13
  %198 = load %6*, %6** %197, align 8
  %199 = icmp eq %6* %198, null
  br i1 %199, label %200, label %338

200:                                              ; preds = %196
  %201 = bitcast %6** %197 to %7**
  store %7* %0, %7** %201, align 8
  br label %338

202:                                              ; preds = %180, %191, %184
  %203 = load i64, i64* %183, align 8
  switch i64 %203, label %333 [
    i64 11, label %204
    i64 10, label %211
    i64 7, label %218
    i64 6, label %225
    i64 12, label %237
    i64 5, label %249
    i64 8, label %313
  ]

204:                                              ; preds = %202
  %205 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %206 = call i32 @memcmp(i8* nonnull %205, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @130, i64 0, i64 0), i64 11) #19
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %322

208:                                              ; preds = %204
  %209 = getelementptr inbounds %1, %1* %5, i64 0, i32 13
  %210 = bitcast %6** %209 to %7**
  store %7* %0, %7** %210, align 8
  br label %338

211:                                              ; preds = %202
  %212 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %213 = call i32 @memcmp(i8* nonnull %212, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @131, i64 0, i64 0), i64 10) #19
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %302

215:                                              ; preds = %211
  %216 = getelementptr inbounds %1, %1* %5, i64 0, i32 14
  %217 = bitcast %6** %216 to %7**
  store %7* %0, %7** %217, align 8
  br label %338

218:                                              ; preds = %202
  %219 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %220 = call i32 @memcmp(i8* nonnull %219, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @132, i64 0, i64 0), i64 7) #19
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %276

222:                                              ; preds = %218
  %223 = getelementptr inbounds %1, %1* %5, i64 0, i32 15
  %224 = bitcast %6** %223 to %7**
  store %7* %0, %7** %224, align 8
  br label %338

225:                                              ; preds = %202
  %226 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %227 = call i32 @memcmp(i8* nonnull %226, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @112, i64 0, i64 0), i64 6) #19
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %333

229:                                              ; preds = %225
  %230 = icmp ne i8 %15, 0
  %231 = icmp eq i8 %17, 0
  %232 = and i1 %231, %230
  br i1 %232, label %234, label %233

233:                                              ; preds = %229
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @113, i64 0, i64 0)) #16
  br label %234

234:                                              ; preds = %229, %233
  %235 = getelementptr inbounds %1, %1* %5, i64 0, i32 20
  %236 = bitcast %6** %235 to %7**
  store %7* %0, %7** %236, align 8
  br label %338

237:                                              ; preds = %202
  %238 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %239 = call i32 @memcmp(i8* nonnull %238, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @114, i64 0, i64 0), i64 12) #19
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %333

241:                                              ; preds = %237
  %242 = and i32 %12, 1
  %243 = and i32 %242, %13
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %241
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @115, i64 0, i64 0)) #16
  br label %246

246:                                              ; preds = %241, %245
  %247 = getelementptr inbounds %1, %1* %5, i64 0, i32 21
  %248 = bitcast %6** %247 to %7**
  store %7* %0, %7** %248, align 8
  br label %338

249:                                              ; preds = %202
  %250 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %251 = call i32 @memcmp(i8* nonnull %250, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @116, i64 0, i64 0), i64 5) #19
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %263

253:                                              ; preds = %249
  %254 = icmp ne i8 %15, 0
  %255 = icmp eq i8 %17, 0
  %256 = and i1 %255, %254
  br i1 %256, label %258, label %257

257:                                              ; preds = %253
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @117, i64 0, i64 0)) #16
  br label %258

258:                                              ; preds = %253, %257
  %259 = getelementptr inbounds %1, %1* %5, i64 0, i32 16
  %260 = bitcast %6** %259 to %7**
  store %7* %0, %7** %260, align 8
  %261 = load i32, i32* %6, align 4
  %262 = or i32 %261, 16777216
  store i32 %262, i32* %6, align 4
  br label %338

263:                                              ; preds = %249
  %264 = call i32 @memcmp(i8* nonnull %250, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @118, i64 0, i64 0), i64 5) #19
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %333

266:                                              ; preds = %263
  %267 = icmp ne i8 %15, 0
  %268 = icmp eq i8 %17, 0
  %269 = and i1 %268, %267
  br i1 %269, label %271, label %270

270:                                              ; preds = %266
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @119, i64 0, i64 0)) #16
  br label %271

271:                                              ; preds = %266, %270
  %272 = getelementptr inbounds %1, %1* %5, i64 0, i32 17
  %273 = bitcast %6** %272 to %7**
  store %7* %0, %7** %273, align 8
  %274 = load i32, i32* %6, align 4
  %275 = or i32 %274, 16777216
  store i32 %275, i32* %6, align 4
  br label %338

276:                                              ; preds = %218
  %277 = call i32 @memcmp(i8* nonnull %219, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @120, i64 0, i64 0), i64 7) #19
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %289

279:                                              ; preds = %276
  %280 = icmp ne i8 %15, 0
  %281 = icmp eq i8 %17, 0
  %282 = and i1 %281, %280
  br i1 %282, label %284, label %283

283:                                              ; preds = %279
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @121, i64 0, i64 0)) #16
  br label %284

284:                                              ; preds = %279, %283
  %285 = getelementptr inbounds %1, %1* %5, i64 0, i32 18
  %286 = bitcast %6** %285 to %7**
  store %7* %0, %7** %286, align 8
  %287 = load i32, i32* %6, align 4
  %288 = or i32 %287, 16777216
  store i32 %288, i32* %6, align 4
  br label %338

289:                                              ; preds = %276
  %290 = call i32 @memcmp(i8* nonnull %219, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @122, i64 0, i64 0), i64 7) #19
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %333

292:                                              ; preds = %289
  %293 = icmp ne i8 %15, 0
  %294 = icmp eq i8 %17, 0
  %295 = and i1 %294, %293
  br i1 %295, label %297, label %296

296:                                              ; preds = %292
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @123, i64 0, i64 0)) #16
  br label %297

297:                                              ; preds = %292, %296
  %298 = getelementptr inbounds %1, %1* %5, i64 0, i32 19
  %299 = bitcast %6** %298 to %7**
  store %7* %0, %7** %299, align 8
  %300 = load i32, i32* %6, align 4
  %301 = or i32 %300, 16777216
  store i32 %301, i32* %6, align 4
  br label %338

302:                                              ; preds = %211
  %303 = call i32 @memcmp(i8* nonnull %212, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @124, i64 0, i64 0), i64 10) #19
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %333

305:                                              ; preds = %302
  %306 = icmp ne i8 %15, 0
  %307 = icmp eq i8 %17, 0
  %308 = and i1 %307, %306
  br i1 %308, label %310, label %309

309:                                              ; preds = %305
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @125, i64 0, i64 0)) #16
  br label %310

310:                                              ; preds = %305, %309
  %311 = getelementptr inbounds %1, %1* %5, i64 0, i32 22
  %312 = bitcast %6** %311 to %7**
  store %7* %0, %7** %312, align 8
  br label %338

313:                                              ; preds = %202
  %314 = getelementptr inbounds %32, %32* %79, i64 0, i32 3, i64 0
  %315 = call i32 @memcmp(i8* nonnull %314, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @126, i64 0, i64 0), i64 8) #19
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %333

317:                                              ; preds = %313
  %318 = icmp ne i8 %15, 0
  %319 = icmp eq i8 %17, 0
  %320 = and i1 %319, %318
  br i1 %320, label %338, label %321

321:                                              ; preds = %317
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @127, i64 0, i64 0)) #16
  br label %338

322:                                              ; preds = %204
  %323 = call i32 @memcmp(i8* nonnull %205, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @128, i64 0, i64 0), i64 11) #19
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %333

325:                                              ; preds = %322
  %326 = icmp ne i8 %15, 0
  %327 = icmp eq i8 %17, 0
  %328 = and i1 %327, %326
  br i1 %328, label %330, label %329

329:                                              ; preds = %325
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @129, i64 0, i64 0)) #16
  br label %330

330:                                              ; preds = %325, %329
  %331 = getelementptr inbounds %1, %1* %5, i64 0, i32 23
  %332 = bitcast %6** %331 to %7**
  store %7* %0, %7** %332, align 8
  br label %338

333:                                              ; preds = %202, %289, %302, %237, %263, %225, %313, %322
  %334 = icmp eq i8 %17, 0
  br i1 %334, label %335, label %338

335:                                              ; preds = %333
  %336 = load i32, i32* %11, align 4
  %337 = or i32 %336, 65536
  store i32 %337, i32* %11, align 4
  br label %338

338:                                              ; preds = %98, %101, %145, %110, %128, %153, %162, %317, %175, %166, %157, %148, %140, %131, %123, %105, %114, %171, %196, %333, %200, %215, %234, %258, %284, %310, %330, %335, %321, %297, %271, %246, %222, %208, %109, %127, %144, %161, %179, %170, %152, %135, %118
  %339 = getelementptr inbounds %32, %32* %79, i64 0, i32 0, i32 1
  %340 = bitcast %18* %339 to %64*
  %341 = getelementptr inbounds %64, %64* %340, i64 0, i32 1
  %342 = load i8, i8* %341, align 1
  %343 = and i8 %342, 2
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %345, label %356

345:                                              ; preds = %338
  %346 = getelementptr inbounds %32, %32* %79, i64 0, i32 0, i32 0
  %347 = load i32, i32* %346, align 8
  %348 = add i32 %347, -1
  store i32 %348, i32* %346, align 8
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %356

350:                                              ; preds = %345
  %351 = and i8 %342, 1
  %352 = icmp eq i8 %351, 0
  %353 = bitcast %32* %79 to i8*
  br i1 %352, label %355, label %354

354:                                              ; preds = %350
  call void @free(i8* %353) #16
  br label %356

355:                                              ; preds = %350
  call void @_efree(i8* %353) #16
  br label %356

356:                                              ; preds = %338, %345, %354, %355
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_func_decl(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %2, align 8
  %4 = alloca %2, align 8
  %5 = alloca %2, align 8
  %6 = alloca [32 x i8], align 16
  %7 = alloca %2, align 8
  %8 = alloca %2, align 8
  %9 = alloca %33, align 8
  %10 = alloca %72, align 4
  %11 = bitcast %43* %1 to %70*
  %12 = getelementptr inbounds %43, %43* %1, i64 2, i32 3, i64 0
  %13 = load %43*, %43** %12, align 8
  %14 = getelementptr inbounds %43, %43* %1, i64 2, i32 3, i64 1
  %15 = load %43*, %43** %14, align 8
  %16 = getelementptr inbounds %43, %43* %1, i64 2, i32 3, i64 2
  %17 = load %43*, %43** %16, align 8
  %18 = getelementptr inbounds %43, %43* %1, i64 2, i32 3, i64 3
  %19 = load %43*, %43** %18, align 8
  %20 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = icmp eq i16 %21, 68
  %23 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %24 = load %44*, %44** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 23), align 8
  %25 = getelementptr inbounds %44, %44* %24, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %44, %44* %24, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = ptrtoint i8* %26 to i64
  %31 = sub i64 %29, %30
  %32 = icmp ult i64 %31, 224
  br i1 %32, label %35, label %33

33:                                               ; preds = %2
  %34 = getelementptr inbounds i8, i8* %26, i64 224
  store i8* %34, i8** %25, align 8
  br label %49

35:                                               ; preds = %2
  %36 = ptrtoint %44* %24 to i64
  %37 = sub i64 %29, %36
  %38 = icmp ugt i64 %37, 248
  %39 = select i1 %38, i64 %37, i64 248
  %40 = tail call noalias i8* @_emalloc(i64 %39) #17
  %41 = getelementptr inbounds i8, i8* %40, i64 24
  %42 = getelementptr inbounds i8, i8* %40, i64 248
  %43 = bitcast i8* %40 to i8**
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 %39
  %45 = getelementptr inbounds i8, i8* %40, i64 8
  %46 = bitcast i8* %45 to i8**
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %40, i64 16
  %48 = bitcast i8* %47 to %44**
  store %44* %24, %44** %48, align 8
  store i8* %40, i8** bitcast (%44** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 23) to i8**), align 8
  br label %49

49:                                               ; preds = %33, %35
  %50 = phi i8* [ %26, %33 ], [ %41, %35 ]
  %51 = bitcast i8* %50 to %7*
  %52 = bitcast %33* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %52)
  tail call void @init_op_array(%7* %51, i8 zeroext 2, i32 64) #16
  %53 = getelementptr inbounds %7, %7* %23, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, -2147483648
  %56 = getelementptr inbounds i8, i8* %50, i64 4
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = or i32 %58, %55
  %60 = getelementptr inbounds %70, %70* %11, i64 0, i32 4
  %61 = load i32, i32* %60, align 4
  %62 = or i32 %61, %59
  store i32 %62, i32* %57, align 4
  %63 = getelementptr inbounds %43, %43* %1, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds i8, i8* %50, i64 128
  %66 = bitcast i8* %65 to i32*
  store i32 %64, i32* %66, align 8
  %67 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %68 = bitcast [1 x %43*]* %67 to i32*
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds i8, i8* %50, i64 132
  %71 = bitcast i8* %70 to i32*
  store i32 %69, i32* %71, align 4
  %72 = getelementptr inbounds %43, %43* %1, i64 1, i32 3
  %73 = bitcast [1 x %43*]* %72 to %32**
  %74 = load %32*, %32** %73, align 8
  %75 = icmp eq %32* %74, null
  br i1 %75, label %90, label %76

76:                                               ; preds = %49
  %77 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 1
  %78 = bitcast %18* %77 to %64*
  %79 = getelementptr inbounds %64, %64* %78, i64 0, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = and i8 %80, 2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %76
  %84 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 8
  br label %87

87:                                               ; preds = %76, %83
  %88 = getelementptr inbounds i8, i8* %50, i64 136
  %89 = bitcast i8* %88 to %32**
  store %32* %74, %32** %89, align 8
  br label %90

90:                                               ; preds = %49, %87
  %91 = load i16, i16* %20, align 8
  %92 = icmp eq i16 %91, 67
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = or i32 %62, 1048576
  store i32 %94, i32* %57, align 4
  br label %95

95:                                               ; preds = %93, %90
  br i1 %22, label %96, label %102

96:                                               ; preds = %95
  %97 = icmp ne %43* %17, null
  %98 = zext i1 %97 to i8
  %99 = getelementptr inbounds %43, %43* %1, i64 2
  %100 = bitcast %43* %99 to %32**
  %101 = load %32*, %32** %100, align 8
  tail call void @zend_begin_method_decl(%7* %51, %32* %101, i8 zeroext %98)
  br label %413

102:                                              ; preds = %95
  %103 = bitcast %43** %12 to %69**
  %104 = load %69*, %69** %103, align 8
  %105 = getelementptr inbounds %43, %43* %1, i64 2
  %106 = bitcast %43* %105 to %32**
  %107 = load %32*, %32** %106, align 8
  %108 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %109 = icmp eq %32* %108, null
  br i1 %109, label %134, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %32, %32* %108, i64 0, i32 3, i64 0
  %112 = getelementptr inbounds %32, %32* %108, i64 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %32, %32* %107, i64 0, i32 3, i64 0
  %115 = getelementptr inbounds %32, %32* %107, i64 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %113, 1
  %118 = add i64 %117, %116
  %119 = add i64 %118, 32
  %120 = and i64 %119, -8
  %121 = tail call noalias i8* @_emalloc(i64 %120) #17
  %122 = bitcast i8* %121 to %32*
  %123 = bitcast i8* %121 to i32*
  store i32 1, i32* %123, align 8
  %124 = getelementptr inbounds i8, i8* %121, i64 4
  %125 = bitcast i8* %124 to i32*
  store i32 6, i32* %125, align 4
  %126 = getelementptr inbounds i8, i8* %121, i64 8
  %127 = bitcast i8* %126 to i64*
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds i8, i8* %121, i64 16
  %129 = bitcast i8* %128 to i64*
  store i64 %118, i64* %129, align 8
  %130 = getelementptr inbounds i8, i8* %121, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* nonnull align 1 %111, i64 %113, i1 false) #16
  %131 = getelementptr inbounds %32, %32* %122, i64 0, i32 3, i64 %113
  store i8 92, i8* %131, align 1
  %132 = getelementptr inbounds i8, i8* %131, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %132, i8* nonnull align 1 %114, i64 %116, i1 false) #16
  %133 = getelementptr inbounds %32, %32* %122, i64 0, i32 3, i64 %118
  store i8 0, i8* %133, align 1
  br label %145

134:                                              ; preds = %102
  %135 = getelementptr inbounds %32, %32* %107, i64 0, i32 0, i32 1
  %136 = bitcast %18* %135 to %64*
  %137 = getelementptr inbounds %64, %64* %136, i64 0, i32 1
  %138 = load i8, i8* %137, align 1
  %139 = and i8 %138, 2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %145

141:                                              ; preds = %134
  %142 = getelementptr inbounds %32, %32* %107, i64 0, i32 0, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = add i32 %143, 1
  store i32 %144, i32* %142, align 8
  br label %145

145:                                              ; preds = %141, %134, %110
  %146 = phi %32* [ %122, %110 ], [ %107, %134 ], [ %107, %141 ]
  %147 = getelementptr inbounds i8, i8* %50, i64 8
  %148 = bitcast i8* %147 to %32**
  store %32* %146, %32** %148, align 8
  %149 = tail call %32* @zend_string_tolower(%32* %146) #16
  %150 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), align 8
  %151 = icmp eq %39* %150, null
  br i1 %151, label %172, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds %32, %32* %107, i64 0, i32 3, i64 0
  %154 = getelementptr inbounds %32, %32* %107, i64 0, i32 2
  %155 = load i64, i64* %154, align 8
  %156 = tail call i8* @zend_hash_find_ptr_lc(%39* nonnull %150, i8* nonnull %153, i64 %155) #16
  %157 = icmp eq i8* %156, null
  br i1 %157, label %172, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %32, %32* %149, i64 0, i32 2
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds i8, i8* %156, i64 16
  %162 = bitcast i8* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = icmp eq i64 %160, %163
  br i1 %164, label %165, label %170

165:                                              ; preds = %158
  %166 = getelementptr inbounds %32, %32* %149, i64 0, i32 3, i64 0
  %167 = getelementptr inbounds i8, i8* %156, i64 24
  %168 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %166, i64 %160, i8* nonnull %167, i64 %160) #16
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %172, label %170

170:                                              ; preds = %165, %158
  %171 = getelementptr inbounds %32, %32* %146, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @206, i64 0, i64 0), i8* nonnull %171) #15
  unreachable

172:                                              ; preds = %165, %152, %145
  %173 = getelementptr inbounds %32, %32* %149, i64 0, i32 2
  %174 = load i64, i64* %173, align 8
  %175 = icmp eq i64 %174, 10
  %176 = getelementptr inbounds %32, %32* %149, i64 0, i32 3, i64 0
  br i1 %175, label %177, label %186

177:                                              ; preds = %172
  %178 = tail call i32 @memcmp(i8* nonnull %176, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @207, i64 0, i64 0), i64 10) #19
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %186

180:                                              ; preds = %177
  %181 = getelementptr inbounds %69, %69* %104, i64 0, i32 3
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %185, label %184

184:                                              ; preds = %180
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @208, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @207, i64 0, i64 0)) #15
  unreachable

185:                                              ; preds = %180
  tail call void (i32, i8*, ...) @zend_error(i32 8192, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @209, i64 0, i64 0)) #16
  br label %186

186:                                              ; preds = %185, %177, %172
  %187 = getelementptr inbounds %43, %43* %1, i64 1
  %188 = bitcast %43* %187 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190) #16
  %191 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %190, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @220, i64 0, i64 0), i8* %189) #16
  %192 = sext i32 %191 to i64
  %193 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %194 = getelementptr inbounds %7, %7* %193, i64 0, i32 20
  %195 = load %32*, %32** %194, align 8
  %196 = load i64, i64* %173, align 8
  %197 = getelementptr inbounds %32, %32* %195, i64 0, i32 2
  %198 = load i64, i64* %197, align 8
  %199 = add nsw i64 %192, 1
  %200 = add i64 %199, %196
  %201 = add i64 %200, %198
  %202 = add i64 %201, 32
  %203 = and i64 %202, -8
  %204 = tail call noalias i8* @_emalloc(i64 %203) #17
  %205 = bitcast i8* %204 to %32*
  %206 = bitcast i8* %204 to i32*
  store i32 1, i32* %206, align 8
  %207 = getelementptr inbounds i8, i8* %204, i64 4
  %208 = bitcast i8* %207 to i32*
  store i32 6, i32* %208, align 4
  %209 = getelementptr inbounds i8, i8* %204, i64 8
  %210 = bitcast i8* %209 to i64*
  store i64 0, i64* %210, align 8
  %211 = getelementptr inbounds i8, i8* %204, i64 16
  %212 = bitcast i8* %211 to i64*
  store i64 %201, i64* %212, align 8
  %213 = getelementptr inbounds i8, i8* %204, i64 24
  %214 = getelementptr inbounds %32, %32* %195, i64 0, i32 3, i64 0
  %215 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %213, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @222, i64 0, i64 0), i32 0, i8* nonnull %176, i8* nonnull %214, i8* nonnull %190) #16
  %216 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %217 = call %32* %216(%32* %205) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %190) #16
  %218 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 5), align 8
  %219 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %219) #16
  %220 = bitcast %2* %5 to i8**
  store i8* %50, i8** %220, align 8
  %221 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 17, i32* %221, align 8
  %222 = call %2* @_zend_hash_update(%39* %218, %32* %217, %2* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %219) #16
  %223 = call %2* @zend_hash_find(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8), %32* nonnull %149) #16
  %224 = icmp eq %2* %223, null
  br i1 %224, label %229, label %225

225:                                              ; preds = %186
  %226 = getelementptr inbounds %2, %2* %223, i64 0, i32 0, i32 0
  %227 = load i64, i64* %226, align 8
  %228 = or i64 %227, 2
  store i64 %228, i64* %226, align 8
  br label %234

229:                                              ; preds = %186
  %230 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230) #16
  %231 = getelementptr inbounds %2, %2* %4, i64 0, i32 0, i32 0
  store i64 2, i64* %231, align 8
  %232 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 4, i32* %232, align 8
  %233 = call %2* @_zend_hash_add_new(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8), %32* nonnull %149, %2* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230) #16
  br label %234

234:                                              ; preds = %229, %225
  %235 = load i32, i32* %57, align 4
  %236 = and i32 %235, 1048576
  %237 = icmp eq i32 %236, 0
  %238 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %239 = call %9* @get_next_op(%7* %238) #16
  %240 = getelementptr inbounds %9, %9* %239, i64 0, i32 6
  br i1 %237, label %273, label %241

241:                                              ; preds = %234
  store i8 -103, i8* %240, align 4
  %242 = getelementptr inbounds %9, %9* %239, i64 0, i32 7
  store i8 8, i8* %242, align 1
  %243 = getelementptr inbounds %9, %9* %239, i64 0, i32 8
  store i8 8, i8* %243, align 2
  call fastcc void @244(%9* nonnull %239) #16
  %244 = icmp eq %37* %0, null
  br i1 %244, label %256, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %9, %9* %239, i64 0, i32 9
  store i8 2, i8* %246, align 1
  %247 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %248 = getelementptr inbounds %7, %7* %247, i64 0, i32 13
  %249 = load i32, i32* %248, align 4
  %250 = add i32 %249, 1
  store i32 %250, i32* %248, align 4
  %251 = getelementptr inbounds %9, %9* %239, i64 0, i32 3, i32 0
  store i32 %249, i32* %251, align 8
  %252 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %252, align 8
  %253 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %254 = bitcast %38* %253 to i32*
  %255 = load i32, i32* %251, align 8
  store i32 %255, i32* %254, align 8
  br label %256

256:                                              ; preds = %245, %241
  store i8 1, i8* %242, align 1
  %257 = bitcast %2* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %257) #16
  %258 = bitcast %2* %7 to %32**
  store %32* %217, %32** %258, align 8
  %259 = getelementptr inbounds %32, %32* %217, i64 0, i32 0, i32 1
  %260 = bitcast %18* %259 to %64*
  %261 = getelementptr inbounds %64, %64* %260, i64 0, i32 1
  %262 = load i8, i8* %261, align 1
  %263 = and i8 %262, 2
  %264 = icmp eq i8 %263, 0
  %265 = select i1 %264, i32 5126, i32 6
  %266 = getelementptr inbounds %2, %2* %7, i64 0, i32 1, i32 0
  store i32 %265, i32* %266, align 8
  %267 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %268 = call i32 @zend_add_literal(%7* %267, %2* nonnull %7) #16
  %269 = getelementptr inbounds %9, %9* %239, i64 0, i32 1, i32 0
  store i32 %268, i32* %269, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %257) #16
  %270 = getelementptr inbounds %32, %32* %149, i64 0, i32 0, i32 1
  %271 = bitcast %18* %270 to %64*
  %272 = getelementptr inbounds %64, %64* %271, i64 0, i32 1
  br label %306

273:                                              ; preds = %234
  store i8 -115, i8* %240, align 4
  %274 = getelementptr inbounds %9, %9* %239, i64 0, i32 7
  store i8 1, i8* %274, align 1
  %275 = bitcast %2* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %275) #16
  %276 = getelementptr inbounds %32, %32* %149, i64 0, i32 0, i32 1
  %277 = bitcast %18* %276 to %64*
  %278 = getelementptr inbounds %64, %64* %277, i64 0, i32 1
  %279 = load i8, i8* %278, align 1
  %280 = and i8 %279, 2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %286

282:                                              ; preds = %273
  %283 = getelementptr inbounds %32, %32* %149, i64 0, i32 0, i32 0
  %284 = load i32, i32* %283, align 8
  %285 = add i32 %284, 1
  store i32 %285, i32* %283, align 8
  br label %286

286:                                              ; preds = %282, %273
  %287 = bitcast %2* %8 to %32**
  store %32* %149, %32** %287, align 8
  %288 = select i1 %281, i32 5126, i32 6
  %289 = getelementptr inbounds %2, %2* %8, i64 0, i32 1, i32 0
  store i32 %288, i32* %289, align 8
  %290 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %291 = call i32 @zend_add_literal(%7* %290, %2* nonnull %8) #16
  %292 = getelementptr inbounds %9, %9* %239, i64 0, i32 1, i32 0
  store i32 %291, i32* %292, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %275) #16
  %293 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %294 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %294) #16
  %295 = bitcast %2* %3 to %32**
  store %32* %217, %32** %295, align 8
  %296 = getelementptr inbounds %32, %32* %217, i64 0, i32 0, i32 1
  %297 = bitcast %18* %296 to %64*
  %298 = getelementptr inbounds %64, %64* %297, i64 0, i32 1
  %299 = load i8, i8* %298, align 1
  %300 = and i8 %299, 2
  %301 = icmp eq i8 %300, 0
  %302 = select i1 %301, i32 5126, i32 6
  %303 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 %302, i32* %303, align 8
  %304 = call i32 @zend_add_literal(%7* %293, %2* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %294) #16
  %305 = getelementptr inbounds %9, %9* %239, i64 0, i32 8
  store i8 8, i8* %305, align 2
  br label %306

306:                                              ; preds = %286, %256
  %307 = phi i8* [ %278, %286 ], [ %272, %256 ]
  %308 = load i8, i8* %307, align 1
  %309 = and i8 %308, 2
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %322

311:                                              ; preds = %306
  %312 = getelementptr inbounds %32, %32* %149, i64 0, i32 0, i32 0
  %313 = load i32, i32* %312, align 8
  %314 = add i32 %313, -1
  store i32 %314, i32* %312, align 8
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %322

316:                                              ; preds = %311
  %317 = and i8 %308, 1
  %318 = icmp eq i8 %317, 0
  %319 = bitcast %32* %149 to i8*
  br i1 %318, label %321, label %320

320:                                              ; preds = %316
  call void @free(i8* %319) #16
  br label %322

321:                                              ; preds = %316
  call void @_efree(i8* %319) #16
  br label %322

322:                                              ; preds = %306, %311, %320, %321
  %323 = icmp eq %43* %15, null
  br i1 %323, label %413, label %324

324:                                              ; preds = %322
  %325 = bitcast %43* %15 to %69*
  %326 = getelementptr inbounds %43, %43* %15, i64 0, i32 3
  %327 = bitcast [1 x %43*]* %326 to i32*
  %328 = load i32, i32* %327, align 8
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %413, label %330

330:                                              ; preds = %324
  %331 = icmp eq %37* %0, null
  %332 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %333 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %334 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %335 = bitcast %38* %334 to i32*
  br label %336

336:                                              ; preds = %403, %330
  %337 = phi i64 [ 0, %330 ], [ %409, %403 ]
  %338 = getelementptr inbounds %69, %69* %325, i64 0, i32 4, i64 %337
  %339 = load %43*, %43** %338, align 8
  %340 = getelementptr inbounds %43, %43* %339, i64 0, i32 3
  %341 = bitcast [1 x %43*]* %340 to %32**
  %342 = load %32*, %32** %341, align 8
  %343 = getelementptr inbounds %43, %43* %339, i64 0, i32 1
  %344 = load i16, i16* %343, align 2
  %345 = getelementptr inbounds %32, %32* %342, i64 0, i32 2
  %346 = load i64, i64* %345, align 8
  %347 = icmp eq i64 %346, 4
  br i1 %347, label %348, label %353

348:                                              ; preds = %336
  %349 = getelementptr inbounds %32, %32* %342, i64 0, i32 3, i64 0
  %350 = call i32 @memcmp(i8* nonnull %349, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %348
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @210, i64 0, i64 0)) #15
  unreachable

353:                                              ; preds = %348, %336
  %354 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 8), align 8
  %355 = call %2* @zend_hash_find(%39* %354, %32* %342) #16
  %356 = icmp eq %2* %355, null
  br i1 %356, label %373, label %357

357:                                              ; preds = %353
  %358 = bitcast %2* %355 to i8**
  %359 = load i8*, i8** %358, align 8
  %360 = icmp eq i8* %359, null
  br i1 %360, label %373, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds i8, i8* %359, i64 17
  %363 = load i8, i8* %362, align 1
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %372, label %365

365:                                              ; preds = %361
  %366 = getelementptr inbounds i8, i8* %359, i64 8
  %367 = bitcast i8* %366 to i8 (%32*)**
  %368 = load i8 (%32*)*, i8 (%32*)** %367, align 8
  %369 = bitcast i8* %359 to %32**
  %370 = load %32*, %32** %369, align 8
  %371 = call zeroext i8 %368(%32* %370) #16
  store i8 %371, i8* %362, align 1
  br label %372

372:                                              ; preds = %365, %361
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @211, i64 0, i64 0)) #15
  unreachable

373:                                              ; preds = %357, %353
  %374 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %375 = call %9* @get_next_op(%7* %374) #16
  %376 = getelementptr inbounds %9, %9* %375, i64 0, i32 6
  store i8 -74, i8* %376, align 4
  br i1 %331, label %377, label %379

377:                                              ; preds = %373
  %378 = getelementptr inbounds %9, %9* %375, i64 0, i32 7
  store i8 8, i8* %378, align 1
  br label %390

379:                                              ; preds = %373
  %380 = load i8, i8* %332, align 8
  %381 = getelementptr inbounds %9, %9* %375, i64 0, i32 7
  store i8 %380, i8* %381, align 1
  %382 = icmp eq i8 %380, 1
  br i1 %382, label %383, label %387

383:                                              ; preds = %379
  %384 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %385 = call i32 @zend_add_literal(%7* %384, %2* nonnull %333) #16
  %386 = getelementptr inbounds %9, %9* %375, i64 0, i32 1, i32 0
  store i32 %385, i32* %386, align 8
  br label %390

387:                                              ; preds = %379
  %388 = getelementptr inbounds %9, %9* %375, i64 0, i32 1, i32 0
  %389 = load i32, i32* %335, align 8
  store i32 %389, i32* %388, align 8
  br label %390

390:                                              ; preds = %387, %383, %377
  %391 = getelementptr inbounds %9, %9* %375, i64 0, i32 8
  store i8 8, i8* %391, align 2
  call fastcc void @244(%9* nonnull %375) #16
  store i8 16, i8* %391, align 2
  %392 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %393 = getelementptr inbounds %32, %32* %342, i64 0, i32 0, i32 1
  %394 = bitcast %18* %393 to %64*
  %395 = getelementptr inbounds %64, %64* %394, i64 0, i32 1
  %396 = load i8, i8* %395, align 1
  %397 = and i8 %396, 2
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %399, label %403

399:                                              ; preds = %390
  %400 = getelementptr inbounds %32, %32* %342, i64 0, i32 0, i32 0
  %401 = load i32, i32* %400, align 8
  %402 = add i32 %401, 1
  store i32 %402, i32* %400, align 8
  br label %403

403:                                              ; preds = %399, %390
  %404 = call fastcc i32 @249(%7* %392, %32* nonnull %342) #16
  %405 = getelementptr inbounds %9, %9* %375, i64 0, i32 2, i32 0
  store i32 %404, i32* %405, align 4
  %406 = and i16 %344, 255
  %407 = zext i16 %406 to i32
  %408 = getelementptr inbounds %9, %9* %375, i64 0, i32 4
  store i32 %407, i32* %408, align 4
  %409 = add nuw nsw i64 %337, 1
  %410 = load i32, i32* %327, align 8
  %411 = zext i32 %410 to i64
  %412 = icmp ult i64 %409, %411
  br i1 %412, label %336, label %413

413:                                              ; preds = %403, %324, %322, %96
  store i8* %50, i8** bitcast (%7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4) to i8**), align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 bitcast (%33* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21) to i8*), i64 48, i1 false) #16
  store <4 x i32> <i32 64, i32 0, i32 0, i32 0>, <4 x i32>* bitcast (i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 0) to <4 x i32>*), align 8
  store i32 -1, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 4), align 8
  store i32 -1, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 5), align 4
  store i32 -1, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 6), align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 bitcast (i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 7) to i8*), i8 0, i64 20, i1 false) #16
  %414 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %424, label %417

417:                                              ; preds = %413
  %418 = call %9* @get_next_op(%7* %51) #16
  %419 = getelementptr inbounds %9, %9* %418, i64 0, i32 6
  store i8 104, i8* %419, align 4
  %420 = getelementptr inbounds %9, %9* %418, i64 0, i32 7
  store i8 8, i8* %420, align 1
  %421 = getelementptr inbounds %9, %9* %418, i64 0, i32 8
  store i8 8, i8* %421, align 2
  call fastcc void @244(%9* nonnull %418) #16
  %422 = load i32, i32* %63, align 4
  %423 = getelementptr inbounds %9, %9* %418, i64 0, i32 5
  store i32 %422, i32* %423, align 8
  br label %424

424:                                              ; preds = %413, %417
  %425 = getelementptr inbounds %72, %72* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %425) #16
  store i8 62, i8* %425, align 4
  %426 = call i32 @zend_stack_push(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0), i8* nonnull %425) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %425) #16
  call void @zend_compile_params(%43* %13, %43* %19)
  %427 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %428 = getelementptr inbounds %7, %7* %427, i64 0, i32 2
  %429 = load i32, i32* %428, align 4
  %430 = and i32 %429, 8388608
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %438, label %432

432:                                              ; preds = %424
  call fastcc void @260()
  %433 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %434 = call %9* @get_next_op(%7* %433) #16
  %435 = getelementptr inbounds %9, %9* %434, i64 0, i32 6
  store i8 41, i8* %435, align 4
  %436 = getelementptr inbounds %9, %9* %434, i64 0, i32 7
  store i8 8, i8* %436, align 1
  %437 = getelementptr inbounds %9, %9* %434, i64 0, i32 8
  store i8 8, i8* %437, align 2
  call fastcc void @244(%9* nonnull %434) #16
  br label %438

438:                                              ; preds = %424, %432
  %439 = icmp eq %43* %15, null
  br i1 %439, label %441, label %440

440:                                              ; preds = %438
  call void @zend_compile_closure_uses(%43* nonnull %15)
  br label %441

441:                                              ; preds = %438, %440
  call void @zend_compile_stmt(%43* %17)
  br i1 %22, label %442, label %445

442:                                              ; preds = %441
  %443 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %444 = bitcast i8* %50 to %6*
  call void @zend_check_magic_method_implementation(%1* %443, %6* %444, i32 64) #16
  br label %445

445:                                              ; preds = %442, %441
  %446 = load i32, i32* %68, align 8
  store i32 %446, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  %447 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %448 = and i32 %447, 1
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %456, label %450

450:                                              ; preds = %445
  %451 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %452 = call %9* @get_next_op(%7* %451) #16
  %453 = getelementptr inbounds %9, %9* %452, i64 0, i32 6
  store i8 101, i8* %453, align 4
  %454 = getelementptr inbounds %9, %9* %452, i64 0, i32 7
  store i8 8, i8* %454, align 1
  %455 = getelementptr inbounds %9, %9* %452, i64 0, i32 8
  store i8 8, i8* %455, align 2
  br label %456

456:                                              ; preds = %445, %450
  call void @zend_emit_final_return(i32 0)
  %457 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %458 = call i32 @pass_two(%7* %457) #16
  %459 = load %34*, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  %460 = icmp eq %34* %459, null
  br i1 %460, label %463, label %461

461:                                              ; preds = %456
  %462 = bitcast %34* %459 to i8*
  call void @_efree(i8* %462) #16
  store %34* null, %34** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 8), align 8
  br label %463

463:                                              ; preds = %461, %456
  %464 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9), align 8
  %465 = icmp eq %39* %464, null
  br i1 %465, label %468, label %466

466:                                              ; preds = %463
  call void @zend_hash_destroy(%39* nonnull %464) #16
  %467 = load i8*, i8** bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9) to i8**), align 8
  call void @_efree_56(i8* %467) #16
  store %39* null, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21, i32 9), align 8
  br label %468

468:                                              ; preds = %463, %466
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%33* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 21) to i8*), i8* nonnull align 8 %52, i64 48, i1 false) #16
  %469 = call i32 @zend_stack_del_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  store %7* %23, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %52)
  ret void
}

declare dso_local void @init_op_array(%7*, i8 zeroext, i32) local_unnamed_addr #3

declare dso_local void @zend_check_magic_method_implementation(%1*, %6*, i32) local_unnamed_addr #3

declare dso_local i32 @pass_two(%7*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_prop_decl(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %43*, align 8
  %3 = alloca %2, align 8
  %4 = bitcast %43* %0 to %69*
  %5 = getelementptr inbounds %43, %43* %0, i64 0, i32 1
  %6 = load i16, i16* %5, align 2
  %7 = zext i16 %6 to i32
  %8 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %9 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %10 = bitcast [1 x %43*]* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %1, %1* %8, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 64
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %1
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @133, i64 0, i64 0)) #15
  unreachable

17:                                               ; preds = %1
  %18 = and i32 %7, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %17
  %21 = icmp eq i32 %11, 0
  br i1 %21, label %136, label %22

22:                                               ; preds = %20
  %23 = bitcast %2* %3 to i8*
  %24 = and i32 %7, 4
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %1, %1* %8, i64 0, i32 11
  %27 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  %28 = bitcast %43** %2 to i8*
  %29 = getelementptr inbounds %2, %2* %3, i64 0, i32 0, i32 0
  %30 = bitcast %2* %3 to i8**
  %31 = zext i32 %11 to i64
  br label %33

32:                                               ; preds = %17
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @134, i64 0, i64 0)) #15
  unreachable

33:                                               ; preds = %22, %131
  %34 = phi i64 [ 0, %22 ], [ %134, %131 ]
  %35 = getelementptr inbounds %69, %69* %4, i64 0, i32 4, i64 %34
  %36 = load %43*, %43** %35, align 8
  %37 = getelementptr inbounds %43, %43* %36, i64 0, i32 3, i64 0
  %38 = load %43*, %43** %37, align 8
  %39 = getelementptr inbounds %43, %43* %36, i64 0, i32 3, i64 1
  %40 = load %43*, %43** %39, align 8
  %41 = getelementptr inbounds %43, %43* %36, i64 0, i32 3, i64 2
  %42 = load %43*, %43** %41, align 8
  %43 = getelementptr inbounds %43, %43* %38, i64 0, i32 3
  %44 = bitcast [1 x %43*]* %43 to %32**
  %45 = load %32*, %32** %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #16
  %46 = icmp eq %43* %42, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %33
  %48 = getelementptr inbounds %43, %43* %42, i64 0, i32 3
  %49 = bitcast [1 x %43*]* %48 to %32**
  %50 = load %32*, %32** %49, align 8
  %51 = getelementptr inbounds %32, %32* %50, i64 0, i32 0, i32 1
  %52 = bitcast %18* %51 to %64*
  %53 = getelementptr inbounds %64, %64* %52, i64 0, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = and i8 %54, 2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %47
  %58 = getelementptr inbounds %32, %32* %50, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = add i32 %59, 1
  store i32 %60, i32* %58, align 8
  br label %61

61:                                               ; preds = %57, %47, %33
  %62 = phi %32* [ null, %33 ], [ %50, %47 ], [ %50, %57 ]
  br i1 %25, label %68, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %1, %1* %8, i64 0, i32 1
  %65 = load %32*, %32** %64, align 8
  %66 = getelementptr inbounds %32, %32* %65, i64 0, i32 3, i64 0
  %67 = getelementptr inbounds %32, %32* %45, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @135, i64 0, i64 0), i8* nonnull %66, i8* nonnull %67) #15
  unreachable

68:                                               ; preds = %61
  %69 = call zeroext i8 @zend_hash_exists(%39* nonnull %26, %32* %45) #16
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %1, %1* %8, i64 0, i32 1
  %73 = load %32*, %32** %72, align 8
  %74 = getelementptr inbounds %32, %32* %73, i64 0, i32 3, i64 0
  %75 = getelementptr inbounds %32, %32* %45, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @136, i64 0, i64 0), i8* nonnull %74, i8* nonnull %75) #15
  unreachable

76:                                               ; preds = %68
  %77 = icmp eq %43* %40, null
  br i1 %77, label %100, label %78

78:                                               ; preds = %76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  store %43* %40, %43** %2, align 8
  call void @zend_eval_const_expr(%43** nonnull %2) #16
  call void @zend_compile_const_expr(%43** nonnull %2) #16
  %79 = load %43*, %43** %2, align 8
  %80 = getelementptr inbounds %43, %43* %79, i64 0, i32 0
  %81 = load i16, i16* %80, align 8
  %82 = icmp eq i16 %81, 64
  br i1 %82, label %83, label %90

83:                                               ; preds = %78
  %84 = getelementptr inbounds %43, %43* %79, i64 0, i32 3
  %85 = bitcast [1 x %43*]* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds [1 x %43*], [1 x %43*]* %84, i64 1
  %88 = bitcast [1 x %43*]* %87 to i32*
  %89 = load i32, i32* %88, align 8
  store i64 %86, i64* %29, align 8
  store i32 %89, i32* %27, align 8
  br label %98

90:                                               ; preds = %78
  %91 = call noalias i8* @_emalloc_16() #16
  %92 = bitcast i8* %91 to i32*
  store i32 1, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 4
  %94 = bitcast i8* %93 to i32*
  store i32 12, i32* %94, align 4
  %95 = call %43* @zend_ast_copy(%43* %79) #16
  %96 = getelementptr inbounds i8, i8* %91, i64 8
  %97 = bitcast i8* %96 to %43**
  store %43* %95, %43** %97, align 8
  store i8* %91, i8** %30, align 8
  store i32 5388, i32* %27, align 8
  call void @zend_ast_destroy(%43* %79) #16
  br label %98

98:                                               ; preds = %83, %90
  %99 = getelementptr inbounds %43, %43* %40, i64 0, i32 0
  store i16 0, i16* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  br label %101

100:                                              ; preds = %76
  store i32 1, i32* %27, align 8
  br label %101

101:                                              ; preds = %100, %98
  %102 = getelementptr inbounds %32, %32* %45, i64 0, i32 0, i32 1
  %103 = bitcast %18* %102 to %64*
  %104 = getelementptr inbounds %64, %64* %103, i64 0, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = and i8 %105, 2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %101
  %109 = getelementptr inbounds %32, %32* %45, i64 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  br label %112

112:                                              ; preds = %108, %101
  %113 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %114 = call %32* %113(%32* nonnull %45) #16
  %115 = icmp eq %32* %114, %45
  br i1 %115, label %116, label %131

116:                                              ; preds = %112
  %117 = load i8, i8* %104, align 1
  %118 = and i8 %117, 2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %131

120:                                              ; preds = %116
  %121 = getelementptr inbounds %32, %32* %45, i64 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, -1
  store i32 %123, i32* %121, align 8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %131

125:                                              ; preds = %120
  %126 = and i8 %117, 1
  %127 = icmp eq i8 %126, 0
  %128 = bitcast %32* %45 to i8*
  br i1 %127, label %130, label %129

129:                                              ; preds = %125
  call void @free(i8* %128) #16
  br label %131

130:                                              ; preds = %125
  call void @_efree(i8* %128) #16
  br label %131

131:                                              ; preds = %112, %116, %120, %129, %130
  %132 = phi %32* [ %114, %112 ], [ %45, %116 ], [ %45, %120 ], [ %45, %129 ], [ %45, %130 ]
  %133 = call i32 @zend_declare_property_ex(%1* %8, %32* %132, %2* nonnull %3, i32 %7, %32* %62) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #16
  %134 = add nuw nsw i64 %34, 1
  %135 = icmp ult i64 %134, %31
  br i1 %135, label %33, label %136

136:                                              ; preds = %131, %20
  ret void
}

declare dso_local i32 @zend_declare_property_ex(%1*, %32*, %2*, i32, %32*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_class_const_decl(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %43*, align 8
  %3 = alloca %2, align 8
  %4 = bitcast %43* %0 to %69*
  %5 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %6 = getelementptr inbounds %1, %1* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i8
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %12 = bitcast [1 x %43*]* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %129, label %15

15:                                               ; preds = %10
  %16 = bitcast %2* %3 to i8*
  %17 = getelementptr inbounds %43, %43* %0, i64 0, i32 1
  %18 = bitcast %43** %2 to i8*
  %19 = getelementptr inbounds %2, %2* %3, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  %21 = bitcast %2* %3 to i8**
  br label %23

22:                                               ; preds = %1
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @137, i64 0, i64 0)) #15
  unreachable

23:                                               ; preds = %15, %120
  %24 = phi i64 [ 0, %15 ], [ %125, %120 ]
  %25 = getelementptr inbounds %69, %69* %4, i64 0, i32 4, i64 %24
  %26 = load %43*, %43** %25, align 8
  %27 = getelementptr inbounds %43, %43* %26, i64 0, i32 3, i64 0
  %28 = load %43*, %43** %27, align 8
  %29 = getelementptr inbounds %43, %43* %26, i64 0, i32 3, i64 1
  %30 = load %43*, %43** %29, align 8
  %31 = getelementptr inbounds %43, %43* %26, i64 0, i32 3, i64 2
  %32 = load %43*, %43** %31, align 8
  %33 = getelementptr inbounds %43, %43* %28, i64 0, i32 3
  %34 = bitcast [1 x %43*]* %33 to %32**
  %35 = load %32*, %32** %34, align 8
  %36 = icmp eq %43* %32, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %23
  %38 = getelementptr inbounds %43, %43* %32, i64 0, i32 3
  %39 = bitcast [1 x %43*]* %38 to %32**
  %40 = load %32*, %32** %39, align 8
  %41 = getelementptr inbounds %32, %32* %40, i64 0, i32 0, i32 1
  %42 = bitcast %18* %41 to %64*
  %43 = getelementptr inbounds %64, %64* %42, i64 0, i32 1
  %44 = load i8, i8* %43, align 1
  %45 = and i8 %44, 2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %37
  %48 = getelementptr inbounds %32, %32* %40, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, 1
  store i32 %50, i32* %48, align 8
  br label %51

51:                                               ; preds = %47, %37, %23
  %52 = phi %32* [ null, %23 ], [ %40, %37 ], [ %40, %47 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %53 = load i16, i16* %17, align 2
  %54 = zext i16 %53 to i32
  %55 = and i32 %54, 7
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = and i32 %54, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @138, i64 0, i64 0)) #15
  unreachable

61:                                               ; preds = %57
  %62 = and i32 %54, 2
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @139, i64 0, i64 0)) #15
  unreachable

65:                                               ; preds = %61
  %66 = and i32 %54, 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @140, i64 0, i64 0)) #15
  unreachable

69:                                               ; preds = %65, %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  store %43* %30, %43** %2, align 8
  call void @zend_eval_const_expr(%43** nonnull %2) #16
  call void @zend_compile_const_expr(%43** nonnull %2) #16
  %70 = load %43*, %43** %2, align 8
  %71 = getelementptr inbounds %43, %43* %70, i64 0, i32 0
  %72 = load i16, i16* %71, align 8
  %73 = icmp eq i16 %72, 64
  br i1 %73, label %74, label %81

74:                                               ; preds = %69
  %75 = getelementptr inbounds %43, %43* %70, i64 0, i32 3
  %76 = bitcast [1 x %43*]* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds [1 x %43*], [1 x %43*]* %75, i64 1
  %79 = bitcast [1 x %43*]* %78 to i32*
  %80 = load i32, i32* %79, align 8
  store i64 %77, i64* %19, align 8
  store i32 %80, i32* %20, align 8
  br label %89

81:                                               ; preds = %69
  %82 = call noalias i8* @_emalloc_16() #16
  %83 = bitcast i8* %82 to i32*
  store i32 1, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 4
  %85 = bitcast i8* %84 to i32*
  store i32 12, i32* %85, align 4
  %86 = call %43* @zend_ast_copy(%43* %70) #16
  %87 = getelementptr inbounds i8, i8* %82, i64 8
  %88 = bitcast i8* %87 to %43**
  store %43* %86, %43** %88, align 8
  store i8* %82, i8** %21, align 8
  store i32 5388, i32* %20, align 8
  call void @zend_ast_destroy(%43* %70) #16
  br label %89

89:                                               ; preds = %74, %81
  %90 = getelementptr inbounds %43, %43* %30, i64 0, i32 0
  store i16 0, i16* %90, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %91 = getelementptr inbounds %32, %32* %35, i64 0, i32 0, i32 1
  %92 = bitcast %18* %91 to %64*
  %93 = getelementptr inbounds %64, %64* %92, i64 0, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = and i8 %94, 2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %89
  %98 = getelementptr inbounds %32, %32* %35, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 8
  br label %101

101:                                              ; preds = %97, %89
  %102 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %103 = call %32* %102(%32* nonnull %35) #16
  %104 = icmp eq %32* %103, %35
  br i1 %104, label %105, label %120

105:                                              ; preds = %101
  %106 = load i8, i8* %93, align 1
  %107 = and i8 %106, 2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %120

109:                                              ; preds = %105
  %110 = getelementptr inbounds %32, %32* %35, i64 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, -1
  store i32 %112, i32* %110, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %120

114:                                              ; preds = %109
  %115 = and i8 %106, 1
  %116 = icmp eq i8 %115, 0
  %117 = bitcast %32* %35 to i8*
  br i1 %116, label %119, label %118

118:                                              ; preds = %114
  call void @free(i8* %117) #16
  br label %120

119:                                              ; preds = %114
  call void @_efree(i8* %117) #16
  br label %120

120:                                              ; preds = %101, %105, %109, %118, %119
  %121 = phi %32* [ %103, %101 ], [ %35, %105 ], [ %35, %109 ], [ %35, %118 ], [ %35, %119 ]
  %122 = load i16, i16* %17, align 2
  %123 = zext i16 %122 to i32
  %124 = call i32 @zend_declare_class_constant_ex(%1* %5, %32* %121, %2* nonnull %3, i32 %123, %32* %52) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  %125 = add nuw nsw i64 %24, 1
  %126 = load i32, i32* %12, align 8
  %127 = zext i32 %126 to i64
  %128 = icmp ult i64 %125, %127
  br i1 %128, label %23, label %129

129:                                              ; preds = %120, %10
  ret void
}

declare dso_local i32 @zend_declare_class_constant_ex(%1*, %32*, %2*, i32, %32*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_use_trait(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = alloca %2, align 8
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %5 = bitcast %43** %4 to %69**
  %6 = load %69*, %69** %5, align 8
  %7 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %8 = bitcast %43** %7 to %69**
  %9 = load %69*, %69** %8, align 8
  %10 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %11 = getelementptr inbounds %69, %69* %6, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %125, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %1, %1* %10, i64 0, i32 4
  %16 = bitcast %2* %3 to i8*
  %17 = bitcast %2* %3 to %32**
  %18 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  %19 = bitcast %2* %2 to i8*
  %20 = bitcast %2* %2 to %32**
  %21 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %1, %1* %10, i64 0, i32 34
  br label %23

23:                                               ; preds = %14, %86
  %24 = phi i32 [ 0, %14 ], [ %122, %86 ]
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %69, %69* %6, i64 0, i32 4, i64 %25
  %27 = load %43*, %43** %26, align 8
  %28 = getelementptr inbounds %43, %43* %27, i64 0, i32 3
  %29 = bitcast [1 x %43*]* %28 to %32**
  %30 = load %32*, %32** %29, align 8
  %31 = load i32, i32* %15, align 4
  %32 = and i32 %31, 64
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %23
  %35 = getelementptr inbounds %32, %32* %30, i64 0, i32 3, i64 0
  %36 = getelementptr inbounds %1, %1* %10, i64 0, i32 1
  %37 = load %32*, %32** %36, align 8
  %38 = getelementptr inbounds %32, %32* %37, i64 0, i32 3, i64 0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @141, i64 0, i64 0), i8* nonnull %35, i8* nonnull %38) #15
  unreachable

39:                                               ; preds = %23
  %40 = getelementptr inbounds %32, %32* %30, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 4
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = getelementptr inbounds %32, %32* %30, i64 0, i32 3, i64 0
  %45 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %44, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %43
  %48 = load i64, i64* %40, align 8
  br label %49

49:                                               ; preds = %47, %39
  %50 = phi i64 [ %48, %47 ], [ %41, %39 ]
  %51 = icmp eq i64 %50, 6
  br i1 %51, label %52, label %64

52:                                               ; preds = %49
  %53 = getelementptr inbounds %32, %32* %30, i64 0, i32 3, i64 0
  %54 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %53, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = load i64, i64* %40, align 8
  %58 = icmp eq i64 %57, 6
  br i1 %58, label %59, label %64

59:                                               ; preds = %56
  %60 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %53, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %43, %52, %59
  %63 = phi i8* [ %44, %43 ], [ %53, %52 ], [ %53, %59 ]
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @142, i64 0, i64 0), i8* nonnull %63) #15
  unreachable

64:                                               ; preds = %59, %56, %49
  %65 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %66 = tail call %9* @get_next_op(%7* %65) #16
  %67 = getelementptr inbounds %9, %9* %66, i64 0, i32 6
  store i8 -102, i8* %67, align 4
  %68 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 1, i32 0), align 8
  %69 = getelementptr inbounds %9, %9* %66, i64 0, i32 7
  store i8 %68, i8* %69, align 1
  %70 = icmp eq i8 %68, 1
  br i1 %70, label %71, label %74

71:                                               ; preds = %64
  %72 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %73 = tail call i32 @zend_add_literal(%7* %72, %2* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 1, i32 2, i32 0))
  br label %76

74:                                               ; preds = %64
  %75 = load i32, i32* bitcast (%38* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 1, i32 2) to i32*), align 8
  br label %76

76:                                               ; preds = %74, %71
  %77 = phi i32 [ %75, %74 ], [ %73, %71 ]
  %78 = getelementptr inbounds %9, %9* %66, i64 0, i32 1, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %9, %9* %66, i64 0, i32 8
  store i8 1, i8* %79, align 2
  %80 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %81 = getelementptr inbounds [1 x %43*], [1 x %43*]* %28, i64 1
  %82 = bitcast [1 x %43*]* %81 to i8*
  %83 = load i8, i8* %82, align 8
  %84 = icmp eq i8 %83, 6
  br i1 %84, label %86, label %85

85:                                               ; preds = %76
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

86:                                               ; preds = %76
  %87 = load %32*, %32** %29, align 8
  %88 = getelementptr inbounds %43, %43* %27, i64 0, i32 1
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = tail call %32* @zend_resolve_class_name(%32* %87, i32 %90) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  store %32* %91, %32** %17, align 8
  %92 = getelementptr inbounds %32, %32* %91, i64 0, i32 0, i32 1
  %93 = bitcast %18* %92 to %64*
  %94 = getelementptr inbounds %64, %64* %93, i64 0, i32 1
  %95 = load i8, i8* %94, align 1
  %96 = and i8 %95, 2
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 5126, i32 6
  store i32 %98, i32* %18, align 8
  %99 = call i32 @zend_add_literal(%7* %80, %2* nonnull %3) #16
  %100 = load %32*, %32** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  %101 = tail call %32* @zend_string_tolower(%32* %100) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  store %32* %101, %32** %20, align 8
  %102 = getelementptr inbounds %32, %32* %101, i64 0, i32 0, i32 1
  %103 = bitcast %18* %102 to %64*
  %104 = getelementptr inbounds %64, %64* %103, i64 0, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = and i8 %105, 2
  %107 = icmp eq i8 %106, 0
  %108 = select i1 %107, i32 5126, i32 6
  store i32 %108, i32* %21, align 8
  %109 = call i32 @zend_add_literal(%7* %80, %2* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  %110 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %111 = getelementptr inbounds %7, %7* %110, i64 0, i32 27
  %112 = load i32, i32* %111, align 8
  %113 = getelementptr inbounds %7, %7* %110, i64 0, i32 26
  %114 = load %2*, %2** %113, align 8
  %115 = zext i32 %99 to i64
  %116 = getelementptr inbounds %2, %2* %114, i64 %115, i32 2, i32 0
  store i32 %112, i32* %116, align 4
  %117 = load i32, i32* %111, align 8
  %118 = add i32 %117, 8
  store i32 %118, i32* %111, align 8
  %119 = getelementptr inbounds %9, %9* %66, i64 0, i32 2, i32 0
  store i32 %99, i32* %119, align 4
  %120 = load i32, i32* %22, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %22, align 4
  %122 = add i32 %24, 1
  %123 = load i32, i32* %11, align 8
  %124 = icmp ult i32 %122, %123
  br i1 %124, label %23, label %125

125:                                              ; preds = %86, %1
  %126 = icmp eq %69* %9, null
  br i1 %126, label %344, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %69, %69* %9, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %344, label %131

131:                                              ; preds = %127, %339
  %132 = phi i64 [ %340, %339 ], [ 0, %127 ]
  %133 = getelementptr inbounds %69, %69* %9, i64 0, i32 4, i64 %132
  %134 = load %43*, %43** %133, align 8
  %135 = getelementptr inbounds %43, %43* %134, i64 0, i32 0
  %136 = load i16, i16* %135, align 8
  %137 = icmp eq i16 %136, 538
  %138 = getelementptr inbounds %43, %43* %134, i64 0, i32 3, i64 0
  %139 = load %43*, %43** %138, align 8
  %140 = getelementptr inbounds %43, %43* %134, i64 0, i32 3, i64 1
  %141 = load %43*, %43** %140, align 8
  br i1 %137, label %142, label %246

142:                                              ; preds = %131
  %143 = tail call noalias i8* @_emalloc_16() #16
  %144 = getelementptr inbounds %43, %43* %139, i64 0, i32 3, i64 0
  %145 = load %43*, %43** %144, align 8
  %146 = getelementptr inbounds %43, %43* %139, i64 0, i32 3, i64 1
  %147 = load %43*, %43** %146, align 8
  %148 = tail call noalias i8* @_emalloc_24() #16
  %149 = getelementptr inbounds i8, i8* %148, i64 8
  %150 = bitcast i8* %149 to %1**
  store %1* null, %1** %150, align 8
  %151 = getelementptr inbounds %43, %43* %147, i64 0, i32 3
  %152 = bitcast [1 x %43*]* %151 to %32**
  %153 = load %32*, %32** %152, align 8
  %154 = getelementptr inbounds %32, %32* %153, i64 0, i32 0, i32 1
  %155 = bitcast %18* %154 to %64*
  %156 = getelementptr inbounds %64, %64* %155, i64 0, i32 1
  %157 = load i8, i8* %156, align 1
  %158 = and i8 %157, 2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %142
  %161 = getelementptr inbounds %32, %32* %153, i64 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 8
  %163 = add i32 %162, 1
  store i32 %163, i32* %161, align 8
  br label %164

164:                                              ; preds = %160, %142
  %165 = bitcast i8* %148 to %32**
  store %32* %153, %32** %165, align 8
  %166 = icmp eq %43* %145, null
  br i1 %166, label %181, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %43, %43* %145, i64 0, i32 3
  %169 = getelementptr inbounds [1 x %43*], [1 x %43*]* %168, i64 1
  %170 = bitcast [1 x %43*]* %169 to i8*
  %171 = load i8, i8* %170, align 8
  %172 = icmp eq i8 %171, 6
  br i1 %172, label %174, label %173

173:                                              ; preds = %167
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

174:                                              ; preds = %167
  %175 = bitcast [1 x %43*]* %168 to %32**
  %176 = load %32*, %32** %175, align 8
  %177 = getelementptr inbounds %43, %43* %145, i64 0, i32 1
  %178 = load i16, i16* %177, align 2
  %179 = zext i16 %178 to i32
  %180 = tail call %32* @zend_resolve_class_name(%32* %176, i32 %179) #16
  br label %181

181:                                              ; preds = %164, %174
  %182 = phi %32* [ %180, %174 ], [ null, %164 ]
  %183 = getelementptr inbounds i8, i8* %148, i64 16
  %184 = bitcast i8* %183 to %32**
  store %32* %182, %32** %184, align 8
  %185 = bitcast i8* %143 to i8**
  store i8* %148, i8** %185, align 8
  %186 = bitcast %43* %141 to %69*
  %187 = getelementptr inbounds %43, %43* %141, i64 0, i32 3
  %188 = bitcast [1 x %43*]* %187 to i32*
  %189 = load i32, i32* %188, align 8
  %190 = add i32 %189, 1
  %191 = zext i32 %190 to i64
  %192 = tail call noalias i8* @_safe_emalloc(i64 8, i64 %191, i64 0) #16
  %193 = bitcast i8* %192 to %32**
  %194 = load i32, i32* %188, align 8
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %220, label %196

196:                                              ; preds = %181, %207
  %197 = phi i32 [ %215, %207 ], [ 0, %181 ]
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds %69, %69* %186, i64 0, i32 4, i64 %198
  %200 = load %43*, %43** %199, align 8
  %201 = getelementptr inbounds %43, %43* %200, i64 0, i32 3
  %202 = getelementptr inbounds [1 x %43*], [1 x %43*]* %201, i64 1
  %203 = bitcast [1 x %43*]* %202 to i8*
  %204 = load i8, i8* %203, align 8
  %205 = icmp eq i8 %204, 6
  br i1 %205, label %207, label %206

206:                                              ; preds = %196
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

207:                                              ; preds = %196
  %208 = bitcast [1 x %43*]* %201 to %32**
  %209 = load %32*, %32** %208, align 8
  %210 = getelementptr inbounds %43, %43* %200, i64 0, i32 1
  %211 = load i16, i16* %210, align 2
  %212 = zext i16 %211 to i32
  %213 = tail call %32* @zend_resolve_class_name(%32* %209, i32 %212) #16
  %214 = getelementptr inbounds %32*, %32** %193, i64 %198
  store %32* %213, %32** %214, align 8
  %215 = add i32 %197, 1
  %216 = load i32, i32* %188, align 8
  %217 = icmp ult i32 %215, %216
  br i1 %217, label %196, label %218

218:                                              ; preds = %207
  %219 = zext i32 %216 to i64
  br label %220

220:                                              ; preds = %218, %181
  %221 = phi i64 [ 0, %181 ], [ %219, %218 ]
  %222 = getelementptr inbounds %32*, %32** %193, i64 %221
  store %32* null, %32** %222, align 8
  %223 = getelementptr inbounds i8, i8* %143, i64 8
  %224 = bitcast i8* %223 to i8**
  store i8* %192, i8** %224, align 8
  %225 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %226 = getelementptr inbounds %1, %1* %225, i64 0, i32 38
  %227 = bitcast %25*** %226 to i8**
  %228 = load i8*, i8** %227, align 8
  %229 = bitcast i8* %228 to i8**
  %230 = icmp eq i8* %228, null
  br i1 %230, label %237, label %231

231:                                              ; preds = %220, %231
  %232 = phi i64 [ %236, %231 ], [ 0, %220 ]
  %233 = getelementptr inbounds i8*, i8** %229, i64 %232
  %234 = load i8*, i8** %233, align 8
  %235 = icmp eq i8* %234, null
  %236 = add i64 %232, 1
  br i1 %235, label %237, label %231

237:                                              ; preds = %231, %220
  %238 = phi i64 [ 0, %220 ], [ %232, %231 ]
  %239 = shl i64 %238, 3
  %240 = add i64 %239, 16
  %241 = tail call i8* @_erealloc(i8* %228, i64 %240) #18
  %242 = bitcast i8* %241 to i8**
  %243 = getelementptr inbounds i8*, i8** %242, i64 %238
  store i8* %143, i8** %243, align 8
  %244 = add i64 %238, 1
  %245 = getelementptr inbounds i8*, i8** %242, i64 %244
  store i8* null, i8** %245, align 8
  store i8* %241, i8** %227, align 8
  br label %339

246:                                              ; preds = %131
  %247 = getelementptr inbounds %43, %43* %134, i64 0, i32 1
  %248 = load i16, i16* %247, align 2
  %249 = zext i16 %248 to i32
  switch i16 %248, label %253 [
    i16 1, label %250
    i16 2, label %251
    i16 4, label %252
  ]

250:                                              ; preds = %246
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @217, i64 0, i64 0)) #15
  unreachable

251:                                              ; preds = %246
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @218, i64 0, i64 0)) #15
  unreachable

252:                                              ; preds = %246
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @219, i64 0, i64 0)) #15
  unreachable

253:                                              ; preds = %246
  %254 = tail call noalias i8* @_emalloc_24() #16
  %255 = getelementptr inbounds %43, %43* %139, i64 0, i32 3, i64 0
  %256 = load %43*, %43** %255, align 8
  %257 = getelementptr inbounds %43, %43* %139, i64 0, i32 3, i64 1
  %258 = load %43*, %43** %257, align 8
  %259 = tail call noalias i8* @_emalloc_24() #16
  %260 = getelementptr inbounds i8, i8* %259, i64 8
  %261 = bitcast i8* %260 to %1**
  store %1* null, %1** %261, align 8
  %262 = getelementptr inbounds %43, %43* %258, i64 0, i32 3
  %263 = bitcast [1 x %43*]* %262 to %32**
  %264 = load %32*, %32** %263, align 8
  %265 = getelementptr inbounds %32, %32* %264, i64 0, i32 0, i32 1
  %266 = bitcast %18* %265 to %64*
  %267 = getelementptr inbounds %64, %64* %266, i64 0, i32 1
  %268 = load i8, i8* %267, align 1
  %269 = and i8 %268, 2
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %271, label %275

271:                                              ; preds = %253
  %272 = getelementptr inbounds %32, %32* %264, i64 0, i32 0, i32 0
  %273 = load i32, i32* %272, align 8
  %274 = add i32 %273, 1
  store i32 %274, i32* %272, align 8
  br label %275

275:                                              ; preds = %271, %253
  %276 = bitcast i8* %259 to %32**
  store %32* %264, %32** %276, align 8
  %277 = icmp eq %43* %256, null
  br i1 %277, label %292, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %43, %43* %256, i64 0, i32 3
  %280 = getelementptr inbounds [1 x %43*], [1 x %43*]* %279, i64 1
  %281 = bitcast [1 x %43*]* %280 to i8*
  %282 = load i8, i8* %281, align 8
  %283 = icmp eq i8 %282, 6
  br i1 %283, label %285, label %284

284:                                              ; preds = %278
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

285:                                              ; preds = %278
  %286 = bitcast [1 x %43*]* %279 to %32**
  %287 = load %32*, %32** %286, align 8
  %288 = getelementptr inbounds %43, %43* %256, i64 0, i32 1
  %289 = load i16, i16* %288, align 2
  %290 = zext i16 %289 to i32
  %291 = tail call %32* @zend_resolve_class_name(%32* %287, i32 %290) #16
  br label %292

292:                                              ; preds = %275, %285
  %293 = phi %32* [ %291, %285 ], [ null, %275 ]
  %294 = getelementptr inbounds i8, i8* %259, i64 16
  %295 = bitcast i8* %294 to %32**
  store %32* %293, %32** %295, align 8
  %296 = bitcast i8* %254 to i8**
  store i8* %259, i8** %296, align 8
  %297 = getelementptr inbounds i8, i8* %254, i64 16
  %298 = bitcast i8* %297 to i32*
  store i32 %249, i32* %298, align 8
  %299 = icmp eq %43* %141, null
  br i1 %299, label %314, label %300

300:                                              ; preds = %292
  %301 = getelementptr inbounds %43, %43* %141, i64 0, i32 3
  %302 = bitcast [1 x %43*]* %301 to %32**
  %303 = load %32*, %32** %302, align 8
  %304 = getelementptr inbounds %32, %32* %303, i64 0, i32 0, i32 1
  %305 = bitcast %18* %304 to %64*
  %306 = getelementptr inbounds %64, %64* %305, i64 0, i32 1
  %307 = load i8, i8* %306, align 1
  %308 = and i8 %307, 2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %310, label %314

310:                                              ; preds = %300
  %311 = getelementptr inbounds %32, %32* %303, i64 0, i32 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = add i32 %312, 1
  store i32 %313, i32* %311, align 8
  br label %314

314:                                              ; preds = %292, %300, %310
  %315 = phi %32* [ %303, %310 ], [ %303, %300 ], [ null, %292 ]
  %316 = getelementptr inbounds i8, i8* %254, i64 8
  %317 = bitcast i8* %316 to %32**
  store %32* %315, %32** %317, align 8
  %318 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %319 = getelementptr inbounds %1, %1* %318, i64 0, i32 37
  %320 = bitcast %23*** %319 to i8**
  %321 = load i8*, i8** %320, align 8
  %322 = bitcast i8* %321 to i8**
  %323 = icmp eq i8* %321, null
  br i1 %323, label %330, label %324

324:                                              ; preds = %314, %324
  %325 = phi i64 [ %329, %324 ], [ 0, %314 ]
  %326 = getelementptr inbounds i8*, i8** %322, i64 %325
  %327 = load i8*, i8** %326, align 8
  %328 = icmp eq i8* %327, null
  %329 = add i64 %325, 1
  br i1 %328, label %330, label %324

330:                                              ; preds = %324, %314
  %331 = phi i64 [ 0, %314 ], [ %325, %324 ]
  %332 = shl i64 %331, 3
  %333 = add i64 %332, 16
  %334 = tail call i8* @_erealloc(i8* %321, i64 %333) #18
  %335 = bitcast i8* %334 to i8**
  %336 = getelementptr inbounds i8*, i8** %335, i64 %331
  store i8* %254, i8** %336, align 8
  %337 = add i64 %331, 1
  %338 = getelementptr inbounds i8*, i8** %335, i64 %337
  store i8* null, i8** %338, align 8
  store i8* %334, i8** %320, align 8
  br label %339

339:                                              ; preds = %330, %237
  %340 = add nuw nsw i64 %132, 1
  %341 = load i32, i32* %128, align 8
  %342 = zext i32 %341 to i64
  %343 = icmp ult i64 %340, %342
  br i1 %343, label %131, label %344

344:                                              ; preds = %339, %127, %125
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_implements(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %2, align 8
  %4 = alloca %2, align 8
  %5 = bitcast %43* %1 to %69*
  %6 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %7 = bitcast [1 x %43*]* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %129, label %10

10:                                               ; preds = %2
  %11 = icmp eq %37* %0, null
  %12 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %13 = bitcast %2* %4 to i8*
  %14 = bitcast %2* %4 to %32**
  %15 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  %16 = bitcast %2* %3 to i8*
  %17 = bitcast %2* %3 to %32**
  %18 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %21 = bitcast %38* %20 to i32*
  br label %22

22:                                               ; preds = %10, %89
  %23 = phi i32 [ 0, %10 ], [ %126, %89 ]
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %69, %69* %5, i64 0, i32 4, i64 %24
  %26 = load %43*, %43** %25, align 8
  %27 = getelementptr inbounds %43, %43* %26, i64 0, i32 3
  %28 = bitcast [1 x %43*]* %27 to %32**
  %29 = load %32*, %32** %28, align 8
  %30 = getelementptr inbounds %43, %43* %26, i64 0, i32 0
  %31 = load i16, i16* %30, align 8
  %32 = icmp eq i16 %31, 64
  br i1 %32, label %35, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %32, %32* %29, i64 0, i32 3, i64 0
  br label %62

35:                                               ; preds = %22
  %36 = getelementptr inbounds %43, %43* %26, i64 0, i32 1
  %37 = load i16, i16* %36, align 2
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %64, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %32, %32* %29, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 4
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = getelementptr inbounds %32, %32* %29, i64 0, i32 3, i64 0
  %45 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %44, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %43
  %48 = load i64, i64* %40, align 8
  br label %49

49:                                               ; preds = %47, %39
  %50 = phi i64 [ %48, %47 ], [ %41, %39 ]
  %51 = icmp eq i64 %50, 6
  br i1 %51, label %52, label %64

52:                                               ; preds = %49
  %53 = getelementptr inbounds %32, %32* %29, i64 0, i32 3, i64 0
  %54 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %53, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = load i64, i64* %40, align 8
  %58 = icmp eq i64 %57, 6
  br i1 %58, label %59, label %64

59:                                               ; preds = %56
  %60 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %53, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %43, %52, %59, %33
  %63 = phi i8* [ %34, %33 ], [ %53, %59 ], [ %53, %52 ], [ %44, %43 ]
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @143, i64 0, i64 0), i8* nonnull %63) #15
  unreachable

64:                                               ; preds = %49, %56, %59, %35
  %65 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %66 = tail call %9* @get_next_op(%7* %65) #16
  %67 = getelementptr inbounds %9, %9* %66, i64 0, i32 6
  store i8 -112, i8* %67, align 4
  br i1 %11, label %68, label %70

68:                                               ; preds = %64
  %69 = getelementptr inbounds %9, %9* %66, i64 0, i32 7
  store i8 8, i8* %69, align 1
  br label %81

70:                                               ; preds = %64
  %71 = load i8, i8* %12, align 8
  %72 = getelementptr inbounds %9, %9* %66, i64 0, i32 7
  store i8 %71, i8* %72, align 1
  %73 = icmp eq i8 %71, 1
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %76 = tail call i32 @zend_add_literal(%7* %75, %2* nonnull %19) #16
  %77 = getelementptr inbounds %9, %9* %66, i64 0, i32 1, i32 0
  store i32 %76, i32* %77, align 8
  br label %81

78:                                               ; preds = %70
  %79 = getelementptr inbounds %9, %9* %66, i64 0, i32 1, i32 0
  %80 = load i32, i32* %21, align 8
  store i32 %80, i32* %79, align 8
  br label %81

81:                                               ; preds = %68, %74, %78
  %82 = getelementptr inbounds %9, %9* %66, i64 0, i32 8
  store i8 8, i8* %82, align 2
  tail call fastcc void @244(%9* nonnull %66) #16
  store i8 1, i8* %82, align 2
  %83 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %84 = getelementptr inbounds [1 x %43*], [1 x %43*]* %27, i64 1
  %85 = bitcast [1 x %43*]* %84 to i8*
  %86 = load i8, i8* %85, align 8
  %87 = icmp eq i8 %86, 6
  br i1 %87, label %89, label %88

88:                                               ; preds = %81
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

89:                                               ; preds = %81
  %90 = load %32*, %32** %28, align 8
  %91 = load i16, i16* %36, align 2
  %92 = zext i16 %91 to i32
  %93 = tail call %32* @zend_resolve_class_name(%32* %90, i32 %92) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #16
  store %32* %93, %32** %14, align 8
  %94 = getelementptr inbounds %32, %32* %93, i64 0, i32 0, i32 1
  %95 = bitcast %18* %94 to %64*
  %96 = getelementptr inbounds %64, %64* %95, i64 0, i32 1
  %97 = load i8, i8* %96, align 1
  %98 = and i8 %97, 2
  %99 = icmp eq i8 %98, 0
  %100 = select i1 %99, i32 5126, i32 6
  store i32 %100, i32* %15, align 8
  %101 = call i32 @zend_add_literal(%7* %83, %2* nonnull %4) #16
  %102 = load %32*, %32** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #16
  %103 = tail call %32* @zend_string_tolower(%32* %102) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  store %32* %103, %32** %17, align 8
  %104 = getelementptr inbounds %32, %32* %103, i64 0, i32 0, i32 1
  %105 = bitcast %18* %104 to %64*
  %106 = getelementptr inbounds %64, %64* %105, i64 0, i32 1
  %107 = load i8, i8* %106, align 1
  %108 = and i8 %107, 2
  %109 = icmp eq i8 %108, 0
  %110 = select i1 %109, i32 5126, i32 6
  store i32 %110, i32* %18, align 8
  %111 = call i32 @zend_add_literal(%7* %83, %2* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  %112 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %113 = getelementptr inbounds %7, %7* %112, i64 0, i32 27
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds %7, %7* %112, i64 0, i32 26
  %116 = load %2*, %2** %115, align 8
  %117 = zext i32 %101 to i64
  %118 = getelementptr inbounds %2, %2* %116, i64 %117, i32 2, i32 0
  store i32 %114, i32* %118, align 4
  %119 = load i32, i32* %113, align 8
  %120 = add i32 %119, 8
  store i32 %120, i32* %113, align 8
  %121 = getelementptr inbounds %9, %9* %66, i64 0, i32 2, i32 0
  store i32 %101, i32* %121, align 4
  %122 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %123 = getelementptr inbounds %1, %1* %122, i64 0, i32 33
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, 1
  store i32 %125, i32* %123, align 8
  %126 = add i32 %23, 1
  %127 = load i32, i32* %7, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %22, label %129

129:                                              ; preds = %89, %2
  ret void
}

declare dso_local i32 @zend_class_serialize_deny(%2*, i8**, i64*, %21*) #3

declare dso_local i32 @zend_class_unserialize_deny(%2*, %1*, i8*, i64, %22*) #3

declare dso_local void @destroy_zend_class(%2*) local_unnamed_addr #3

declare dso_local void @zend_check_deprecated_constructor(%1*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_use(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = bitcast %43* %0 to %69*
  %4 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %5 = getelementptr inbounds %43, %43* %0, i64 0, i32 1
  %6 = load i16, i16* %5, align 2
  %7 = zext i16 %6 to i32
  switch i16 %6, label %26 [
    i16 1, label %8
    i16 2, label %14
    i16 4, label %20
  ]

8:                                                ; preds = %1
  %9 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5), align 8
  %10 = icmp eq %39* %9, null
  br i1 %10, label %11, label %27

11:                                               ; preds = %8
  %12 = tail call noalias i8* @_emalloc_56() #16
  %13 = bitcast i8* %12 to %39*
  store i8* %12, i8** bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5) to i8**), align 8
  tail call void @_zend_hash_init(%39* %13, i32 8, void (%2*)* nonnull @261, i8 zeroext 0) #16
  br label %27

14:                                               ; preds = %1
  %15 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), align 8
  %16 = icmp eq %39* %15, null
  br i1 %16, label %17, label %27

17:                                               ; preds = %14
  %18 = tail call noalias i8* @_emalloc_56() #16
  %19 = bitcast i8* %18 to %39*
  store i8* %18, i8** bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6) to i8**), align 8
  tail call void @_zend_hash_init(%39* %19, i32 8, void (%2*)* nonnull @261, i8 zeroext 0) #16
  br label %27

20:                                               ; preds = %1
  %21 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), align 8
  %22 = icmp eq %39* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = tail call noalias i8* @_emalloc_56() #16
  %25 = bitcast i8* %24 to %39*
  store i8* %24, i8** bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7) to i8**), align 8
  tail call void @_zend_hash_init(%39* %25, i32 8, void (%2*)* nonnull @261, i8 zeroext 0) #16
  br label %27

26:                                               ; preds = %1
  unreachable

27:                                               ; preds = %8, %11, %14, %17, %20, %23
  %28 = phi %39** [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5), %8 ], [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5), %11 ], [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), %14 ], [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), %17 ], [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), %20 ], [ getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), %23 ]
  %29 = load %39*, %39** %28, align 8
  %30 = icmp eq i16 %6, 4
  %31 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %32 = bitcast [1 x %43*]* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %284, label %35

35:                                               ; preds = %27
  %36 = icmp eq %32* %4, null
  %37 = icmp eq i16 %6, 1
  %38 = getelementptr inbounds %32, %32* %4, i64 0, i32 2
  %39 = getelementptr inbounds %32, %32* %4, i64 0, i32 3, i64 0
  %40 = zext i16 %6 to i64
  %41 = bitcast %2* %2 to i8*
  %42 = bitcast %2* %2 to %32**
  %43 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  br label %44

44:                                               ; preds = %35, %279
  %45 = phi i64 [ 0, %35 ], [ %280, %279 ]
  %46 = getelementptr inbounds %69, %69* %3, i64 0, i32 4, i64 %45
  %47 = load %43*, %43** %46, align 8
  %48 = getelementptr inbounds %43, %43* %47, i64 0, i32 3, i64 0
  %49 = load %43*, %43** %48, align 8
  %50 = getelementptr inbounds %43, %43* %47, i64 0, i32 3, i64 1
  %51 = load %43*, %43** %50, align 8
  %52 = getelementptr inbounds %43, %43* %49, i64 0, i32 3
  %53 = bitcast [1 x %43*]* %52 to %32**
  %54 = load %32*, %32** %53, align 8
  %55 = icmp eq %43* %51, null
  br i1 %55, label %70, label %56

56:                                               ; preds = %44
  %57 = getelementptr inbounds %43, %43* %51, i64 0, i32 3
  %58 = bitcast [1 x %43*]* %57 to %32**
  %59 = load %32*, %32** %58, align 8
  %60 = getelementptr inbounds %32, %32* %59, i64 0, i32 0, i32 1
  %61 = bitcast %18* %60 to %64*
  %62 = getelementptr inbounds %64, %64* %61, i64 0, i32 1
  %63 = load i8, i8* %62, align 1
  %64 = and i8 %63, 2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %114

66:                                               ; preds = %56
  %67 = getelementptr inbounds %32, %32* %59, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, 1
  store i32 %69, i32* %67, align 8
  br label %114

70:                                               ; preds = %44
  %71 = getelementptr inbounds %32, %32* %54, i64 0, i32 3, i64 0
  %72 = getelementptr inbounds %32, %32* %54, i64 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %101, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %32, %32* %54, i64 0, i32 3, i64 %73
  br label %77

77:                                               ; preds = %81, %75
  %78 = phi i8* [ %76, %75 ], [ %79, %81 ]
  %79 = getelementptr inbounds i8, i8* %78, i64 -1
  %80 = icmp ult i8* %79, %71
  br i1 %80, label %101, label %81

81:                                               ; preds = %77
  %82 = load i8, i8* %79, align 1
  %83 = icmp eq i8 %82, 92
  br i1 %83, label %84, label %77

84:                                               ; preds = %81
  %85 = ptrtoint i8* %76 to i64
  %86 = ptrtoint i8* %78 to i64
  %87 = sub i64 %85, %86
  %88 = add i64 %87, 32
  %89 = and i64 %88, -8
  %90 = call noalias i8* @_emalloc(i64 %89) #17
  %91 = bitcast i8* %90 to %32*
  %92 = bitcast i8* %90 to i32*
  store i32 1, i32* %92, align 8
  %93 = getelementptr inbounds i8, i8* %90, i64 4
  %94 = bitcast i8* %93 to i32*
  store i32 6, i32* %94, align 4
  %95 = getelementptr inbounds i8, i8* %90, i64 8
  %96 = bitcast i8* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %90, i64 16
  %98 = bitcast i8* %97 to i64*
  store i64 %87, i64* %98, align 8
  %99 = getelementptr inbounds i8, i8* %90, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* nonnull align 1 %78, i64 %87, i1 false) #16
  %100 = getelementptr inbounds %32, %32* %91, i64 0, i32 3, i64 %87
  store i8 0, i8* %100, align 1
  br label %114

101:                                              ; preds = %77, %70
  %102 = getelementptr inbounds %32, %32* %54, i64 0, i32 0, i32 1
  %103 = bitcast %18* %102 to %64*
  %104 = getelementptr inbounds %64, %64* %103, i64 0, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = and i8 %105, 2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %101
  %109 = getelementptr inbounds %32, %32* %54, i64 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  br label %112

112:                                              ; preds = %101, %108
  br i1 %36, label %113, label %114

113:                                              ; preds = %112
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @152, i64 0, i64 0), i8* nonnull %71) #16
  br label %114

114:                                              ; preds = %84, %113, %112, %66, %56
  %115 = phi %32* [ %59, %56 ], [ %59, %66 ], [ %91, %84 ], [ %54, %112 ], [ %54, %113 ]
  br i1 %30, label %116, label %127

116:                                              ; preds = %114
  %117 = getelementptr inbounds %32, %32* %115, i64 0, i32 0, i32 1
  %118 = bitcast %18* %117 to %64*
  %119 = getelementptr inbounds %64, %64* %118, i64 0, i32 1
  %120 = load i8, i8* %119, align 1
  %121 = and i8 %120, 2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %116
  %124 = getelementptr inbounds %32, %32* %115, i64 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, 1
  store i32 %126, i32* %124, align 8
  br label %135

127:                                              ; preds = %114
  %128 = call %32* @zend_string_tolower(%32* %115) #16
  br i1 %37, label %129, label %135

129:                                              ; preds = %127
  %130 = call fastcc zeroext i8 @230(%32* %115)
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %32, %32* %54, i64 0, i32 3, i64 0
  %134 = getelementptr inbounds %32, %32* %115, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @153, i64 0, i64 0), i8* nonnull %133, i8* nonnull %134, i8* nonnull %134) #15
  unreachable

135:                                              ; preds = %116, %123, %129, %127
  %136 = phi %32* [ %128, %129 ], [ %128, %127 ], [ %115, %123 ], [ %115, %116 ]
  br i1 %36, label %196, label %137

137:                                              ; preds = %135
  %138 = load i64, i64* %38, align 8
  %139 = add i64 %138, 1
  %140 = getelementptr inbounds %32, %32* %115, i64 0, i32 2
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %139, %141
  %143 = add i64 %142, 32
  %144 = and i64 %143, -8
  %145 = call noalias i8* @_emalloc(i64 %144) #17
  %146 = bitcast i8* %145 to %32*
  %147 = bitcast i8* %145 to i32*
  store i32 1, i32* %147, align 8
  %148 = getelementptr inbounds i8, i8* %145, i64 4
  %149 = bitcast i8* %148 to i32*
  store i32 6, i32* %149, align 4
  %150 = getelementptr inbounds i8, i8* %145, i64 8
  %151 = bitcast i8* %150 to i64*
  store i64 0, i64* %151, align 8
  %152 = getelementptr inbounds i8, i8* %145, i64 16
  %153 = bitcast i8* %152 to i64*
  store i64 %142, i64* %153, align 8
  %154 = getelementptr inbounds i8, i8* %145, i64 24
  %155 = load i64, i64* %38, align 8
  %156 = call i8* @zend_str_tolower_copy(i8* nonnull %154, i8* nonnull %39, i64 %155) #16
  %157 = load i64, i64* %38, align 8
  %158 = getelementptr inbounds %32, %32* %146, i64 0, i32 3, i64 %157
  store i8 92, i8* %158, align 1
  %159 = load i64, i64* %38, align 8
  %160 = getelementptr inbounds %32, %32* %146, i64 0, i32 3, i64 %159
  %161 = getelementptr inbounds i8, i8* %160, i64 1
  %162 = getelementptr inbounds %32, %32* %136, i64 0, i32 3, i64 0
  %163 = getelementptr inbounds %32, %32* %136, i64 0, i32 2
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %161, i8* nonnull align 8 %162, i64 %165, i1 false)
  %166 = call %2* @zend_hash_find(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8), %32* %146) #16
  %167 = icmp eq %2* %166, null
  br i1 %167, label %185, label %168

168:                                              ; preds = %137
  %169 = getelementptr inbounds %2, %2* %166, i64 0, i32 0, i32 0
  %170 = load i64, i64* %169, align 8
  %171 = and i64 %170, %40
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %185, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %32, %32* %54, i64 0, i32 2
  %175 = load i64, i64* %174, align 8
  %176 = load i64, i64* %153, align 8
  %177 = icmp eq i64 %175, %176
  %178 = getelementptr inbounds %32, %32* %54, i64 0, i32 3, i64 0
  br i1 %177, label %179, label %182

179:                                              ; preds = %173
  %180 = call i32 @zend_binary_strcasecmp(i8* nonnull %178, i64 %175, i8* nonnull %154, i64 %175) #16
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %179, %173
  %183 = call fastcc i8* @251(i32 %7) #16
  %184 = getelementptr inbounds %32, %32* %115, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @154, i64 0, i64 0), i8* %183, i8* nonnull %178, i8* nonnull %184) #15
  unreachable

185:                                              ; preds = %137, %179, %168
  %186 = getelementptr inbounds i8, i8* %145, i64 5
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %218

191:                                              ; preds = %185
  %192 = and i32 %188, 1
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %195, label %194

194:                                              ; preds = %191
  call void @free(i8* nonnull %145) #16
  br label %218

195:                                              ; preds = %191
  call void @_efree(i8* nonnull %145) #16
  br label %218

196:                                              ; preds = %135
  %197 = call %2* @zend_hash_find(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8), %32* %136) #16
  %198 = icmp eq %2* %197, null
  br i1 %198, label %218, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %2, %2* %197, i64 0, i32 0, i32 0
  %201 = load i64, i64* %200, align 8
  %202 = and i64 %201, %40
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %218, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %32, %32* %54, i64 0, i32 2
  %206 = load i64, i64* %205, align 8
  %207 = getelementptr inbounds %32, %32* %136, i64 0, i32 2
  %208 = load i64, i64* %207, align 8
  %209 = icmp eq i64 %206, %208
  %210 = getelementptr inbounds %32, %32* %54, i64 0, i32 3, i64 0
  br i1 %209, label %211, label %215

211:                                              ; preds = %204
  %212 = getelementptr inbounds %32, %32* %136, i64 0, i32 3, i64 0
  %213 = call i32 @zend_binary_strcasecmp(i8* nonnull %210, i64 %206, i8* nonnull %212, i64 %206) #16
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %211, %204
  %216 = call fastcc i8* @251(i32 %7) #16
  %217 = getelementptr inbounds %32, %32* %115, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @154, i64 0, i64 0), i8* %216, i8* nonnull %210, i8* nonnull %217) #15
  unreachable

218:                                              ; preds = %196, %211, %195, %194, %185, %199
  %219 = getelementptr inbounds %32, %32* %54, i64 0, i32 0, i32 1
  %220 = bitcast %18* %219 to %64*
  %221 = getelementptr inbounds %64, %64* %220, i64 0, i32 1
  %222 = load i8, i8* %221, align 1
  %223 = and i8 %222, 2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %225, label %229

225:                                              ; preds = %218
  %226 = getelementptr inbounds %32, %32* %54, i64 0, i32 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = add i32 %227, 1
  store i32 %228, i32* %226, align 8
  br label %229

229:                                              ; preds = %218, %225
  %230 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %231 = call %32* %230(%32* nonnull %54) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #16
  store %32* %231, %32** %42, align 8
  store i32 17, i32* %43, align 8
  %232 = call %2* @_zend_hash_add(%39* %29, %32* %136, %2* nonnull %2) #16
  %233 = icmp eq %2* %232, null
  br i1 %233, label %234, label %235

234:                                              ; preds = %229
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #16
  br label %239

235:                                              ; preds = %229
  %236 = bitcast %2* %232 to i8**
  %237 = load i8*, i8** %236, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #16
  %238 = icmp eq i8* %237, null
  br i1 %238, label %239, label %243

239:                                              ; preds = %235, %234
  %240 = call fastcc i8* @251(i32 %7)
  %241 = getelementptr inbounds %32, %32* %231, i64 0, i32 3, i64 0
  %242 = getelementptr inbounds %32, %32* %115, i64 0, i32 3, i64 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @154, i64 0, i64 0), i8* %240, i8* nonnull %241, i8* nonnull %242) #15
  unreachable

243:                                              ; preds = %235
  %244 = getelementptr inbounds %32, %32* %136, i64 0, i32 0, i32 1
  %245 = bitcast %18* %244 to %64*
  %246 = getelementptr inbounds %64, %64* %245, i64 0, i32 1
  %247 = load i8, i8* %246, align 1
  %248 = and i8 %247, 2
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %250, label %261

250:                                              ; preds = %243
  %251 = getelementptr inbounds %32, %32* %136, i64 0, i32 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = add i32 %252, -1
  store i32 %253, i32* %251, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %261

255:                                              ; preds = %250
  %256 = and i8 %247, 1
  %257 = icmp eq i8 %256, 0
  %258 = bitcast %32* %136 to i8*
  br i1 %257, label %260, label %259

259:                                              ; preds = %255
  call void @free(i8* %258) #16
  br label %261

260:                                              ; preds = %255
  call void @_efree(i8* %258) #16
  br label %261

261:                                              ; preds = %243, %250, %259, %260
  %262 = getelementptr inbounds %32, %32* %115, i64 0, i32 0, i32 1
  %263 = bitcast %18* %262 to %64*
  %264 = getelementptr inbounds %64, %64* %263, i64 0, i32 1
  %265 = load i8, i8* %264, align 1
  %266 = and i8 %265, 2
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %268, label %279

268:                                              ; preds = %261
  %269 = getelementptr inbounds %32, %32* %115, i64 0, i32 0, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = add i32 %270, -1
  store i32 %271, i32* %269, align 8
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %279

273:                                              ; preds = %268
  %274 = and i8 %265, 1
  %275 = icmp eq i8 %274, 0
  %276 = bitcast %32* %115 to i8*
  br i1 %275, label %278, label %277

277:                                              ; preds = %273
  call void @free(i8* %276) #16
  br label %279

278:                                              ; preds = %273
  call void @_efree(i8* %276) #16
  br label %279

279:                                              ; preds = %261, %268, %277, %278
  %280 = add nuw nsw i64 %45, 1
  %281 = load i32, i32* %32, align 8
  %282 = zext i32 %281 to i64
  %283 = icmp ult i64 %280, %282
  br i1 %283, label %44, label %284

284:                                              ; preds = %279, %27
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define internal fastcc i8* @251(i32 %0) unnamed_addr #10 {
  switch i32 %0, label %4 [
    i32 1, label %5
    i32 2, label %2
    i32 4, label %3
  ]

2:                                                ; preds = %1
  br label %5

3:                                                ; preds = %1
  br label %5

4:                                                ; preds = %1
  unreachable

5:                                                ; preds = %1, %3, %2
  %6 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @224, i64 0, i64 0), %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @223, i64 0, i64 0), %2 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @65, i64 0, i64 0), %1 ]
  ret i8* %6
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_group_use(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %3 = load %43*, %43** %2, align 8
  %4 = getelementptr inbounds %43, %43* %3, i64 0, i32 3
  %5 = bitcast [1 x %43*]* %4 to %32**
  %6 = load %32*, %32** %5, align 8
  %7 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %8 = bitcast %43** %7 to %69**
  %9 = load %69*, %69** %8, align 8
  %10 = getelementptr inbounds %69, %69* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %86, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %32, %32* %6, i64 0, i32 3, i64 0
  %15 = getelementptr inbounds %32, %32* %6, i64 0, i32 2
  %16 = getelementptr inbounds %43, %43* %0, i64 0, i32 1
  br label %17

17:                                               ; preds = %13, %79
  %18 = phi i64 [ 0, %13 ], [ %82, %79 ]
  %19 = getelementptr inbounds %69, %69* %9, i64 0, i32 4, i64 %18
  %20 = load %43*, %43** %19, align 8
  %21 = getelementptr inbounds %43, %43* %20, i64 0, i32 3, i64 0
  %22 = load %43*, %43** %21, align 8
  %23 = getelementptr inbounds %43, %43* %22, i64 0, i32 3
  %24 = bitcast [1 x %43*]* %23 to %32**
  %25 = load %32*, %32** %24, align 8
  %26 = load i64, i64* %15, align 8
  %27 = getelementptr inbounds %32, %32* %25, i64 0, i32 3, i64 0
  %28 = getelementptr inbounds %32, %32* %25, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %26, 1
  %31 = add i64 %30, %29
  %32 = add i64 %31, 32
  %33 = and i64 %32, -8
  %34 = tail call noalias i8* @_emalloc(i64 %33) #17
  %35 = bitcast i8* %34 to %32*
  %36 = bitcast i8* %34 to i32*
  store i32 1, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %34, i64 4
  %38 = bitcast i8* %37 to i32*
  store i32 6, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %34, i64 8
  %40 = bitcast i8* %39 to i64*
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %34, i64 16
  %42 = bitcast i8* %41 to i64*
  store i64 %31, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %34, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* nonnull align 1 %14, i64 %26, i1 false) #16
  %44 = getelementptr inbounds %32, %32* %35, i64 0, i32 3, i64 %26
  store i8 92, i8* %44, align 1
  %45 = getelementptr inbounds i8, i8* %44, i64 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* nonnull align 1 %27, i64 %29, i1 false) #16
  %46 = getelementptr inbounds %32, %32* %35, i64 0, i32 3, i64 %31
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %32, %32* %25, i64 0, i32 0, i32 1
  %48 = bitcast %18* %47 to %64*
  %49 = getelementptr inbounds %64, %64* %48, i64 0, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = and i8 %50, 2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %64

53:                                               ; preds = %17
  %54 = getelementptr inbounds %32, %32* %25, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = add i32 %55, -1
  store i32 %56, i32* %54, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = and i8 %50, 1
  %60 = icmp eq i8 %59, 0
  %61 = bitcast %32* %25 to i8*
  br i1 %60, label %63, label %62

62:                                               ; preds = %58
  tail call void @free(i8* %61) #16
  br label %64

63:                                               ; preds = %58
  tail call void @_efree(i8* %61) #16
  br label %64

64:                                               ; preds = %17, %53, %62, %63
  %65 = bitcast [1 x %43*]* %23 to i8**
  store i8* %34, i8** %65, align 8
  %66 = getelementptr inbounds i8, i8* %34, i64 5
  %67 = load i8, i8* %66, align 1
  %68 = and i8 %67, 2
  %69 = icmp eq i8 %68, 0
  %70 = select i1 %69, i32 5126, i32 6
  %71 = getelementptr inbounds [1 x %43*], [1 x %43*]* %23, i64 1
  %72 = bitcast [1 x %43*]* %71 to i32*
  store i32 %70, i32* %72, align 8
  %73 = tail call %43* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 143, %43* %20) #16
  %74 = load i16, i16* %16, align 2
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %64
  %77 = getelementptr inbounds %43, %43* %20, i64 0, i32 1
  %78 = load i16, i16* %77, align 2
  br label %79

79:                                               ; preds = %64, %76
  %80 = phi i16 [ %78, %76 ], [ %74, %64 ]
  %81 = getelementptr inbounds %43, %43* %73, i64 0, i32 1
  store i16 %80, i16* %81, align 2
  tail call void @zend_compile_use(%43* %73)
  %82 = add nuw nsw i64 %18, 1
  %83 = load i32, i32* %10, align 8
  %84 = zext i32 %83 to i64
  %85 = icmp ult i64 %82, %84
  br i1 %85, label %17, label %86

86:                                               ; preds = %79, %1
  ret void
}

declare dso_local %43* @zend_ast_create_list(i32, i16 zeroext, ...) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_const_decl(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = alloca %43*, align 8
  %3 = alloca %2, align 8
  %4 = alloca %37, align 8
  %5 = alloca %37, align 8
  %6 = bitcast %43* %0 to %69*
  %7 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %8 = bitcast [1 x %43*]* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %170, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  %13 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  %14 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %15 = bitcast %43** %2 to i8*
  %16 = getelementptr inbounds %2, %2* %14, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 1, i32 0
  %18 = bitcast %2* %14 to i8**
  %19 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %20 = bitcast %2* %19 to %32**
  %21 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1, i32 0
  %22 = bitcast %2* %3 to i8*
  %23 = getelementptr inbounds %2, %2* %3, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  br label %25

25:                                               ; preds = %11, %165
  %26 = phi i64 [ 0, %11 ], [ %166, %165 ]
  %27 = getelementptr inbounds %69, %69* %6, i64 0, i32 4, i64 %26
  %28 = load %43*, %43** %27, align 8
  %29 = getelementptr inbounds %43, %43* %28, i64 0, i32 3, i64 0
  %30 = load %43*, %43** %29, align 8
  %31 = getelementptr inbounds %43, %43* %28, i64 0, i32 3, i64 1
  %32 = load %43*, %43** %31, align 8
  %33 = getelementptr inbounds %43, %43* %30, i64 0, i32 3
  %34 = bitcast [1 x %43*]* %33 to %32**
  %35 = load %32*, %32** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #16
  store i8 1, i8* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  store %43* %32, %43** %2, align 8
  call void @zend_eval_const_expr(%43** nonnull %2) #16
  call void @zend_compile_const_expr(%43** nonnull %2) #16
  %36 = load %43*, %43** %2, align 8
  %37 = getelementptr inbounds %43, %43* %36, i64 0, i32 0
  %38 = load i16, i16* %37, align 8
  %39 = icmp eq i16 %38, 64
  br i1 %39, label %40, label %47

40:                                               ; preds = %25
  %41 = getelementptr inbounds %43, %43* %36, i64 0, i32 3
  %42 = bitcast [1 x %43*]* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds [1 x %43*], [1 x %43*]* %41, i64 1
  %45 = bitcast [1 x %43*]* %44 to i32*
  %46 = load i32, i32* %45, align 8
  store i64 %43, i64* %16, align 8
  store i32 %46, i32* %17, align 8
  br label %55

47:                                               ; preds = %25
  %48 = call noalias i8* @_emalloc_16() #16
  %49 = bitcast i8* %48 to i32*
  store i32 1, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 4
  %51 = bitcast i8* %50 to i32*
  store i32 12, i32* %51, align 4
  %52 = call %43* @zend_ast_copy(%43* %36) #16
  %53 = getelementptr inbounds i8, i8* %48, i64 8
  %54 = bitcast i8* %53 to %43**
  store %43* %52, %43** %54, align 8
  store i8* %48, i8** %18, align 8
  store i32 5388, i32* %17, align 8
  call void @zend_ast_destroy(%43* %36) #16
  br label %55

55:                                               ; preds = %40, %47
  %56 = getelementptr inbounds %43, %43* %32, i64 0, i32 0
  store i16 0, i16* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %57 = getelementptr inbounds %32, %32* %35, i64 0, i32 3, i64 0
  %58 = getelementptr inbounds %32, %32* %35, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = load %39*, %39** getelementptr inbounds (%52, %52* @executor_globals, i64 0, i32 12), align 8
  %61 = call i8* @zend_hash_find_ptr_lc(%39* %60, i8* nonnull %57, i64 %59) #16
  %62 = icmp eq i8* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds i8, i8* %61, i64 24
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 5
  %68 = icmp eq i32 %67, 4
  br i1 %68, label %69, label %70

69:                                               ; preds = %63
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @155, i64 0, i64 0), i8* nonnull %57) #15
  unreachable

70:                                               ; preds = %63, %55
  %71 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %72 = icmp eq %32* %71, null
  br i1 %72, label %95, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %32, %32* %71, i64 0, i32 3, i64 0
  %75 = getelementptr inbounds %32, %32* %71, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %58, align 8
  %78 = add i64 %76, 1
  %79 = add i64 %78, %77
  %80 = add i64 %79, 32
  %81 = and i64 %80, -8
  %82 = call noalias i8* @_emalloc(i64 %81) #17
  %83 = bitcast i8* %82 to %32*
  %84 = bitcast i8* %82 to i32*
  store i32 1, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %82, i64 4
  %86 = bitcast i8* %85 to i32*
  store i32 6, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %82, i64 8
  %88 = bitcast i8* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds i8, i8* %82, i64 16
  %90 = bitcast i8* %89 to i64*
  store i64 %79, i64* %90, align 8
  %91 = getelementptr inbounds i8, i8* %82, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* nonnull align 1 %74, i64 %76, i1 false) #16
  %92 = getelementptr inbounds %32, %32* %83, i64 0, i32 3, i64 %76
  store i8 92, i8* %92, align 1
  %93 = getelementptr inbounds i8, i8* %92, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %93, i8* nonnull align 1 %57, i64 %77, i1 false) #16
  %94 = getelementptr inbounds %32, %32* %83, i64 0, i32 3, i64 %79
  store i8 0, i8* %94, align 1
  br label %106

95:                                               ; preds = %70
  %96 = getelementptr inbounds %32, %32* %35, i64 0, i32 0, i32 1
  %97 = bitcast %18* %96 to %64*
  %98 = getelementptr inbounds %64, %64* %97, i64 0, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = and i8 %99, 2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %95
  %103 = getelementptr inbounds %32, %32* %35, i64 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 8
  br label %106

106:                                              ; preds = %73, %95, %102
  %107 = phi %32* [ %83, %73 ], [ %35, %95 ], [ %35, %102 ]
  %108 = load %32* (%32*)*, %32* (%32*)** @zend_new_interned_string, align 8
  %109 = call %32* %108(%32* %107) #16
  %110 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), align 8
  %111 = icmp eq %39* %110, null
  br i1 %111, label %138, label %112

112:                                              ; preds = %106
  %113 = call %2* @zend_hash_find(%39* nonnull %110, %32* nonnull %35) #16
  %114 = icmp eq %2* %113, null
  br i1 %114, label %138, label %115

115:                                              ; preds = %112
  %116 = bitcast %2* %113 to i8**
  %117 = load i8*, i8** %116, align 8
  %118 = icmp eq i8* %117, null
  %119 = bitcast i8* %117 to %32*
  %120 = icmp eq %32* %109, %119
  %121 = or i1 %118, %120
  br i1 %121, label %138, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds i8, i8* %117, i64 16
  %124 = bitcast i8* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %32, %32* %109, i64 0, i32 2
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %125, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %32, %32* %109, i64 0, i32 3, i64 0
  br label %136

131:                                              ; preds = %122
  %132 = getelementptr inbounds i8, i8* %117, i64 24
  %133 = getelementptr inbounds %32, %32* %109, i64 0, i32 3, i64 0
  %134 = call i32 @memcmp(i8* nonnull %132, i8* nonnull %133, i64 %125) #19
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %131, %129
  %137 = phi i8* [ %130, %129 ], [ %133, %131 ]
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @156, i64 0, i64 0), i8* nonnull %137) #15
  unreachable

138:                                              ; preds = %131, %112, %115, %106
  store i8 1, i8* %12, align 8
  store %32* %109, %32** %20, align 8
  %139 = getelementptr inbounds %32, %32* %109, i64 0, i32 0, i32 1
  %140 = bitcast %18* %139 to %64*
  %141 = getelementptr inbounds %64, %64* %140, i64 0, i32 1
  %142 = load i8, i8* %141, align 1
  %143 = and i8 %142, 2
  %144 = icmp eq i8 %143, 0
  %145 = select i1 %144, i32 5126, i32 6
  store i32 %145, i32* %21, align 8
  %146 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %147 = call %9* @get_next_op(%7* %146) #16
  %148 = getelementptr inbounds %9, %9* %147, i64 0, i32 6
  store i8 -113, i8* %148, align 4
  %149 = getelementptr inbounds %9, %9* %147, i64 0, i32 7
  store i8 1, i8* %149, align 1
  %150 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %151 = call i32 @zend_add_literal(%7* %150, %2* nonnull %19) #16
  %152 = getelementptr inbounds %9, %9* %147, i64 0, i32 1, i32 0
  store i32 %151, i32* %152, align 8
  %153 = getelementptr inbounds %9, %9* %147, i64 0, i32 8
  store i8 1, i8* %153, align 2
  %154 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %155 = call i32 @zend_add_literal(%7* %154, %2* nonnull %14) #16
  %156 = getelementptr inbounds %9, %9* %147, i64 0, i32 2, i32 0
  store i32 %155, i32* %156, align 4
  call fastcc void @244(%9* nonnull %147) #16
  %157 = call %2* @zend_hash_find(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8), %32* %109) #16
  %158 = icmp eq %2* %157, null
  br i1 %158, label %163, label %159

159:                                              ; preds = %138
  %160 = getelementptr inbounds %2, %2* %157, i64 0, i32 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, 4
  store i64 %162, i64* %160, align 8
  br label %165

163:                                              ; preds = %138
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  store i64 4, i64* %23, align 8
  store i32 4, i32* %24, align 8
  %164 = call %2* @_zend_hash_add_new(%39* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 8), %32* nonnull %109, %2* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #16
  br label %165

165:                                              ; preds = %159, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  %166 = add nuw nsw i64 %26, 1
  %167 = load i32, i32* %8, align 8
  %168 = zext i32 %167 to i64
  %169 = icmp ult i64 %166, %168
  br i1 %169, label %25, label %170

170:                                              ; preds = %165, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_namespace(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %3 = load %43*, %43** %2, align 8
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 1
  %5 = load %43*, %43** %4, align 8
  %6 = icmp ne %43* %5, null
  %7 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 4), align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %11 = icmp ne %32* %10, null
  %12 = and i1 %6, %11
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @157, i64 0, i64 0)) #15
  unreachable

14:                                               ; preds = %1
  br i1 %6, label %16, label %15

15:                                               ; preds = %14
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @157, i64 0, i64 0)) #15
  unreachable

16:                                               ; preds = %14
  %17 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %18 = icmp eq %32* %17, null
  %19 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 3), align 8
  %20 = icmp eq i8 %19, 0
  %21 = and i1 %18, %20
  br i1 %21, label %69, label %22

22:                                               ; preds = %16
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @158, i64 0, i64 0)) #15
  unreachable

23:                                               ; preds = %9
  %24 = or i1 %6, %11
  %25 = xor i1 %11, true
  %26 = or i1 %6, %25
  %27 = select i1 %24, %32* %10, %32* null
  br i1 %26, label %28, label %48

28:                                               ; preds = %23
  %29 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %30 = getelementptr inbounds %7, %7* %29, i64 0, i32 10
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %48, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %7, %7* %29, i64 0, i32 11
  %35 = load %9*, %9** %34, align 8
  %36 = zext i32 %31 to i64
  br label %37

37:                                               ; preds = %33, %44
  %38 = phi i64 [ %36, %33 ], [ %46, %44 ]
  %39 = trunc i64 %38 to i32
  %40 = add i32 %39, -1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %9, %9* %35, i64 %41, i32 6
  %43 = load i8, i8* %42, align 4
  switch i8 %43, label %47 [
    i8 105, label %44
    i8 101, label %44
  ]

44:                                               ; preds = %37, %37
  %45 = icmp eq i32 %40, 0
  %46 = add nsw i64 %38, -1
  br i1 %45, label %48, label %37

47:                                               ; preds = %37
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @159, i64 0, i64 0)) #15
  unreachable

48:                                               ; preds = %44, %23, %28
  %49 = phi %32* [ %27, %28 ], [ %10, %23 ], [ %27, %44 ]
  %50 = icmp eq %32* %49, null
  br i1 %50, label %69, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %32, %32* %49, i64 0, i32 0, i32 1
  %53 = bitcast %18* %52 to %64*
  %54 = getelementptr inbounds %64, %64* %53, i64 0, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = and i8 %55, 2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %69

58:                                               ; preds = %51
  %59 = getelementptr inbounds %32, %32* %49, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, -1
  store i32 %61, i32* %59, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %58
  %64 = and i8 %55, 1
  %65 = icmp eq i8 %64, 0
  %66 = bitcast %32* %49 to i8*
  br i1 %65, label %68, label %67

67:                                               ; preds = %63
  tail call void @free(i8* %66) #16
  br label %69

68:                                               ; preds = %63
  tail call void @_efree(i8* %66) #16
  br label %69

69:                                               ; preds = %16, %68, %67, %58, %51, %48
  %70 = icmp eq %43* %3, null
  br i1 %70, label %110, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %43, %43* %3, i64 0, i32 3
  %73 = bitcast [1 x %43*]* %72 to %32**
  %74 = load %32*, %32** %73, align 8
  %75 = getelementptr inbounds %32, %32* %74, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 4
  br i1 %77, label %78, label %84

78:                                               ; preds = %71
  %79 = getelementptr inbounds %32, %32* %74, i64 0, i32 3, i64 0
  %80 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %79, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %97, label %82

82:                                               ; preds = %78
  %83 = load i64, i64* %75, align 8
  br label %84

84:                                               ; preds = %82, %71
  %85 = phi i64 [ %83, %82 ], [ %76, %71 ]
  %86 = icmp eq i64 %85, 6
  br i1 %86, label %87, label %99

87:                                               ; preds = %84
  %88 = getelementptr inbounds %32, %32* %74, i64 0, i32 3, i64 0
  %89 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %88, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i64, i64* %75, align 8
  %93 = icmp eq i64 %92, 6
  br i1 %93, label %94, label %99

94:                                               ; preds = %91
  %95 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %88, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %78, %87, %94
  %98 = phi i8* [ %79, %78 ], [ %88, %87 ], [ %88, %94 ]
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @160, i64 0, i64 0), i8* nonnull %98) #15
  unreachable

99:                                               ; preds = %94, %91, %84
  %100 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 1
  %101 = bitcast %18* %100 to %64*
  %102 = getelementptr inbounds %64, %64* %101, i64 0, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = and i8 %103, 2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %99
  %107 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 8
  br label %110

110:                                              ; preds = %106, %99, %69
  %111 = phi %32* [ null, %69 ], [ %74, %99 ], [ %74, %106 ]
  store %32* %111, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  tail call fastcc void @252()
  store i8 1, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 3), align 8
  br i1 %6, label %112, label %134

112:                                              ; preds = %110
  store i8 1, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 4), align 1
  tail call void @zend_compile_top_stmt(%43* nonnull %5)
  store i8 0, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 3), align 8
  tail call fastcc void @252() #16
  %113 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %114 = icmp eq %32* %113, null
  br i1 %114, label %134, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %32, %32* %113, i64 0, i32 0, i32 1
  %117 = bitcast %18* %116 to %64*
  %118 = getelementptr inbounds %64, %64* %117, i64 0, i32 1
  %119 = load i8, i8* %118, align 1
  %120 = and i8 %119, 2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %133

122:                                              ; preds = %115
  %123 = getelementptr inbounds %32, %32* %113, i64 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, -1
  store i32 %125, i32* %123, align 8
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %133

127:                                              ; preds = %122
  %128 = and i8 %119, 1
  %129 = icmp eq i8 %128, 0
  %130 = bitcast %32* %113 to i8*
  br i1 %129, label %132, label %131

131:                                              ; preds = %127
  tail call void @free(i8* %130) #16
  br label %133

132:                                              ; preds = %127
  tail call void @_efree(i8* %130) #16
  br label %133

133:                                              ; preds = %132, %131, %122, %115
  store %32* null, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  br label %134

134:                                              ; preds = %133, %112, %110
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @252() unnamed_addr #0 {
  %1 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5), align 8
  %2 = icmp eq %39* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  tail call void @zend_hash_destroy(%39* nonnull %1) #16
  %4 = load i8*, i8** bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5) to i8**), align 8
  tail call void @_efree(i8* %4) #16
  store %39* null, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 5), align 8
  br label %5

5:                                                ; preds = %0, %3
  %6 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), align 8
  %7 = icmp eq %39* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  tail call void @zend_hash_destroy(%39* nonnull %6) #16
  %9 = load i8*, i8** bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6) to i8**), align 8
  tail call void @_efree(i8* %9) #16
  store %39* null, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 6), align 8
  br label %10

10:                                               ; preds = %5, %8
  %11 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), align 8
  %12 = icmp eq %39* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  tail call void @zend_hash_destroy(%39* nonnull %11) #16
  %14 = load i8*, i8** bitcast (%39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7) to i8**), align 8
  tail call void @_efree(i8* %14) #16
  store %39* null, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), align 8
  br label %15

15:                                               ; preds = %10, %13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_top_stmt(%43* %0) local_unnamed_addr #0 {
  %2 = icmp eq %43* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %43, %43* %0, i64 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp eq i16 %5, 132
  br i1 %6, label %7, label %21

7:                                                ; preds = %3
  %8 = bitcast %43* %0 to %69*
  %9 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %10 = bitcast [1 x %43*]* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %7, %13
  %14 = phi i64 [ %17, %13 ], [ 0, %7 ]
  %15 = getelementptr inbounds %69, %69* %8, i64 0, i32 4, i64 %14
  %16 = load %43*, %43** %15, align 8
  tail call void @zend_compile_top_stmt(%43* %16)
  %17 = add nuw nsw i64 %14, 1
  %18 = load i32, i32* %10, align 8
  %19 = zext i32 %18 to i64
  %20 = icmp ult i64 %17, %19
  br i1 %20, label %13, label %35

21:                                               ; preds = %3
  tail call void @zend_compile_stmt(%43* nonnull %0)
  %22 = load i16, i16* %4, align 8
  switch i16 %22, label %23 [
    i16 281, label %35
    i16 540, label %35
  ]

23:                                               ; preds = %21
  %24 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 4), align 1
  %25 = icmp eq i8 %24, 0
  %26 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 3), align 8
  %27 = icmp ne i8 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %23
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @19, i64 0, i64 0)) #15
  unreachable

30:                                               ; preds = %23
  switch i16 %22, label %35 [
    i16 66, label %31
    i16 69, label %31
  ]

31:                                               ; preds = %30, %30
  %32 = getelementptr inbounds %43, %43* %0, i64 0, i32 3
  %33 = bitcast [1 x %43*]* %32 to i32*
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  tail call void @zend_do_early_binding()
  br label %35

35:                                               ; preds = %13, %7, %21, %21, %30, %1, %31
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_halt_compiler(%43* nocapture readonly %0) local_unnamed_addr #0 {
  %2 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 4), align 1
  %3 = icmp eq i8 %2, 0
  %4 = load i8, i8* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 3), align 8
  %5 = icmp eq i8 %4, 0
  %6 = or i1 %3, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @161, i64 0, i64 0)) #15
  unreachable

8:                                                ; preds = %1
  %9 = getelementptr inbounds %43, %43* %0, i64 0, i32 3, i64 0
  %10 = load %43*, %43** %9, align 8
  %11 = getelementptr inbounds %43, %43* %10, i64 0, i32 3
  %12 = bitcast [1 x %43*]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 2), align 8
  %15 = getelementptr inbounds %32, %32* %14, i64 0, i32 3, i64 0
  %16 = getelementptr inbounds %32, %32* %14, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, 26
  %19 = add i64 %17, 58
  %20 = and i64 %19, -8
  %21 = tail call noalias i8* @_emalloc(i64 %20) #17
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 6, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %21, i64 8
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %21, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 %18, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %21, i64 24
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds i8, i8* %21, i64 25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* nonnull align 16 getelementptr inbounds ([25 x i8], [25 x i8]* @168, i64 0, i64 0), i64 25, i1 false) #16
  %31 = getelementptr inbounds i8, i8* %21, i64 50
  %32 = add i64 %17, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* nonnull align 1 %15, i64 %32, i1 false) #16
  tail call void @zend_register_long_constant(i8* nonnull %29, i64 %18, i64 %13, i32 1, i32 0) #16
  %33 = getelementptr inbounds i8, i8* %21, i64 5
  %34 = load i8, i8* %33, align 1
  %35 = and i8 %34, 2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %46

37:                                               ; preds = %8
  %38 = load i32, i32* %22, align 8
  %39 = add i32 %38, -1
  store i32 %39, i32* %22, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = and i8 %34, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  tail call void @free(i8* nonnull %21) #16
  br label %46

45:                                               ; preds = %41
  tail call void @_efree(i8* nonnull %21) #16
  br label %46

46:                                               ; preds = %8, %37, %44, %45
  ret void
}

declare dso_local void @zend_register_long_constant(i8*, i64, i64, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @zend_binary_op_produces_numeric_string_error(i32 %0, %2* nocapture readonly %1, %2* nocapture readonly %2) local_unnamed_addr #0 {
  switch i32 %0, label %46 [
    i32 166, label %4
    i32 11, label %4
    i32 10, label %4
    i32 9, label %4
    i32 7, label %4
    i32 6, label %4
    i32 5, label %4
    i32 4, label %4
    i32 3, label %4
    i32 2, label %4
    i32 1, label %4
  ]

4:                                                ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %5 = add i32 %0, -9
  %6 = icmp ult i32 %5, 3
  %7 = getelementptr inbounds %2, %2* %1, i64 0, i32 1
  %8 = bitcast %4* %7 to i8*
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 6
  br i1 %6, label %11, label %17

11:                                               ; preds = %4
  br i1 %10, label %12, label %29

12:                                               ; preds = %11
  %13 = getelementptr inbounds %2, %2* %2, i64 0, i32 1
  %14 = bitcast %4* %13 to i8*
  %15 = load i8, i8* %14, align 8
  %16 = icmp eq i8 %15, 6
  br i1 %16, label %46, label %18

17:                                               ; preds = %4
  br i1 %10, label %18, label %29

18:                                               ; preds = %12, %17
  %19 = bitcast %2* %1 to %32**
  %20 = load %32*, %32** %19, align 8
  %21 = getelementptr inbounds %32, %32* %20, i64 0, i32 3, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp sgt i8 %22, 57
  br i1 %23, label %46, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %32, %32* %20, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = tail call zeroext i8 @_is_numeric_string_ex(i8* nonnull %21, i64 %26, i64* null, double* null, i32 0, i32* null) #16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %11, %24, %17
  %30 = getelementptr inbounds %2, %2* %2, i64 0, i32 1
  %31 = bitcast %4* %30 to i8*
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, 6
  br i1 %33, label %34, label %45

34:                                               ; preds = %29
  %35 = bitcast %2* %2 to %32**
  %36 = load %32*, %32** %35, align 8
  %37 = getelementptr inbounds %32, %32* %36, i64 0, i32 3, i64 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp sgt i8 %38, 57
  br i1 %39, label %46, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %32, %32* %36, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = tail call zeroext i8 @_is_numeric_string_ex(i8* nonnull %37, i64 %42, i64* null, double* null, i32 0, i32* null) #16
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %40, %29
  br label %46

46:                                               ; preds = %34, %18, %40, %24, %12, %3, %45
  %47 = phi i8 [ 0, %45 ], [ 0, %3 ], [ 0, %12 ], [ 1, %24 ], [ 1, %40 ], [ 1, %18 ], [ 1, %34 ]
  ret i8 %47
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_binary_op(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %6 = load %43*, %43** %5, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %6)
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %14 = load i8, i8* %12, align 8
  %15 = icmp eq i8 %14, 1
  %16 = load i8, i8* %13, align 8
  %17 = icmp eq i8 %16, 1
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %57

19:                                               ; preds = %2
  %20 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %23 = call i32 (%2*, %2*, %2*)* @get_binary_op(i32 %11) #16
  %24 = or i16 %10, 1
  switch i16 %24, label %51 [
    i16 5, label %25
    i16 7, label %38
  ]

25:                                               ; preds = %19
  %26 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast %4* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 4
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %2, %2* %22, i64 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  br label %35

33:                                               ; preds = %25
  %34 = call i64 @_zval_get_long_func(%2* nonnull %22) #16
  br label %35

35:                                               ; preds = %33, %30
  %36 = phi i64 [ %32, %30 ], [ %34, %33 ]
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %57, label %51

38:                                               ; preds = %19
  %39 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1
  %40 = bitcast %4* %39 to i8*
  %41 = load i8, i8* %40, align 8
  %42 = icmp eq i8 %41, 4
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = getelementptr inbounds %2, %2* %22, i64 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  br label %48

46:                                               ; preds = %38
  %47 = call i64 @_zval_get_long_func(%2* nonnull %22) #16
  br label %48

48:                                               ; preds = %46, %43
  %49 = phi i64 [ %45, %43 ], [ %47, %46 ]
  %50 = icmp slt i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %48, %35, %19
  %52 = call zeroext i8 @zend_binary_op_produces_numeric_string_error(i32 %11, %2* nonnull %21, %2* nonnull %22) #16
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  %55 = call i32 %23(%2* nonnull %20, %2* nonnull %21, %2* nonnull %22) #16
  %56 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %56, align 8
  call void @_zval_ptr_dtor(%2* nonnull %21) #16
  call void @_zval_ptr_dtor(%2* nonnull %22) #16
  br label %229

57:                                               ; preds = %51, %48, %35, %2
  %58 = icmp eq i16 %10, 17
  %59 = icmp eq i16 %10, 18
  %60 = add i16 %10, -17
  %61 = icmp ult i16 %60, 2
  br i1 %61, label %62, label %204

62:                                               ; preds = %57
  %63 = load i8, i8* %12, align 8
  %64 = icmp eq i8 %63, 1
  br i1 %64, label %65, label %133

65:                                               ; preds = %62
  %66 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0, i32 1
  %67 = bitcast %4* %66 to i8*
  %68 = load i8, i8* %67, align 8
  switch i8 %68, label %226 [
    i8 2, label %69
    i8 3, label %101
  ]

69:                                               ; preds = %65
  %70 = select i1 %59, i8 52, i8 13
  %71 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %72 = call %9* @get_next_op(%7* %71) #16
  %73 = getelementptr inbounds %9, %9* %72, i64 0, i32 6
  store i8 %70, i8* %73, align 4
  %74 = load i8, i8* %13, align 8
  %75 = getelementptr inbounds %9, %9* %72, i64 0, i32 7
  store i8 %74, i8* %75, align 1
  %76 = icmp eq i8 %74, 1
  br i1 %76, label %77, label %81

77:                                               ; preds = %69
  %78 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %79 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %80 = call i32 @zend_add_literal(%7* %78, %2* nonnull %79) #16
  br label %85

81:                                               ; preds = %69
  %82 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %83 = bitcast %38* %82 to i32*
  %84 = load i32, i32* %83, align 8
  br label %85

85:                                               ; preds = %81, %77
  %86 = phi i32 [ %84, %81 ], [ %80, %77 ]
  %87 = getelementptr inbounds %9, %9* %72, i64 0, i32 1, i32 0
  store i32 %86, i32* %87, align 8
  %88 = getelementptr inbounds %9, %9* %72, i64 0, i32 8
  store i8 8, i8* %88, align 2
  call fastcc void @244(%9* nonnull %72) #16
  %89 = icmp eq %37* %0, null
  br i1 %89, label %229, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %9, %9* %72, i64 0, i32 9
  store i8 2, i8* %91, align 1
  %92 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %93 = getelementptr inbounds %7, %7* %92, i64 0, i32 13
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %9, %9* %72, i64 0, i32 3, i32 0
  store i32 %94, i32* %96, align 8
  %97 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %97, align 8
  %98 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %99 = bitcast %38* %98 to i32*
  %100 = load i32, i32* %96, align 8
  store i32 %100, i32* %99, align 8
  br label %229

101:                                              ; preds = %65
  %102 = select i1 %58, i8 52, i8 13
  %103 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %104 = call %9* @get_next_op(%7* %103) #16
  %105 = getelementptr inbounds %9, %9* %104, i64 0, i32 6
  store i8 %102, i8* %105, align 4
  %106 = load i8, i8* %13, align 8
  %107 = getelementptr inbounds %9, %9* %104, i64 0, i32 7
  store i8 %106, i8* %107, align 1
  %108 = icmp eq i8 %106, 1
  br i1 %108, label %109, label %113

109:                                              ; preds = %101
  %110 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %111 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %112 = call i32 @zend_add_literal(%7* %110, %2* nonnull %111) #16
  br label %117

113:                                              ; preds = %101
  %114 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %115 = bitcast %38* %114 to i32*
  %116 = load i32, i32* %115, align 8
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i32 [ %116, %113 ], [ %112, %109 ]
  %119 = getelementptr inbounds %9, %9* %104, i64 0, i32 1, i32 0
  store i32 %118, i32* %119, align 8
  %120 = getelementptr inbounds %9, %9* %104, i64 0, i32 8
  store i8 8, i8* %120, align 2
  call fastcc void @244(%9* nonnull %104) #16
  %121 = icmp eq %37* %0, null
  br i1 %121, label %229, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %9, %9* %104, i64 0, i32 9
  store i8 2, i8* %123, align 1
  %124 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %125 = getelementptr inbounds %7, %7* %124, i64 0, i32 13
  %126 = load i32, i32* %125, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = getelementptr inbounds %9, %9* %104, i64 0, i32 3, i32 0
  store i32 %126, i32* %128, align 8
  %129 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %129, align 8
  %130 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %131 = bitcast %38* %130 to i32*
  %132 = load i32, i32* %128, align 8
  store i32 %132, i32* %131, align 8
  br label %229

133:                                              ; preds = %62
  %134 = load i8, i8* %13, align 8
  %135 = icmp eq i8 %134, 1
  br i1 %135, label %136, label %226

136:                                              ; preds = %133
  %137 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1
  %138 = bitcast %4* %137 to i8*
  %139 = load i8, i8* %138, align 8
  switch i8 %139, label %226 [
    i8 2, label %140
    i8 3, label %172
  ]

140:                                              ; preds = %136
  %141 = select i1 %59, i8 52, i8 13
  %142 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %143 = call %9* @get_next_op(%7* %142) #16
  %144 = getelementptr inbounds %9, %9* %143, i64 0, i32 6
  store i8 %141, i8* %144, align 4
  %145 = load i8, i8* %12, align 8
  %146 = getelementptr inbounds %9, %9* %143, i64 0, i32 7
  store i8 %145, i8* %146, align 1
  %147 = icmp eq i8 %145, 1
  br i1 %147, label %148, label %152

148:                                              ; preds = %140
  %149 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %150 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %151 = call i32 @zend_add_literal(%7* %149, %2* nonnull %150) #16
  br label %156

152:                                              ; preds = %140
  %153 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %154 = bitcast %38* %153 to i32*
  %155 = load i32, i32* %154, align 8
  br label %156

156:                                              ; preds = %152, %148
  %157 = phi i32 [ %155, %152 ], [ %151, %148 ]
  %158 = getelementptr inbounds %9, %9* %143, i64 0, i32 1, i32 0
  store i32 %157, i32* %158, align 8
  %159 = getelementptr inbounds %9, %9* %143, i64 0, i32 8
  store i8 8, i8* %159, align 2
  call fastcc void @244(%9* nonnull %143) #16
  %160 = icmp eq %37* %0, null
  br i1 %160, label %229, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %9, %9* %143, i64 0, i32 9
  store i8 2, i8* %162, align 1
  %163 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %164 = getelementptr inbounds %7, %7* %163, i64 0, i32 13
  %165 = load i32, i32* %164, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %164, align 4
  %167 = getelementptr inbounds %9, %9* %143, i64 0, i32 3, i32 0
  store i32 %165, i32* %167, align 8
  %168 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %168, align 8
  %169 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %170 = bitcast %38* %169 to i32*
  %171 = load i32, i32* %167, align 8
  store i32 %171, i32* %170, align 8
  br label %229

172:                                              ; preds = %136
  %173 = select i1 %58, i8 52, i8 13
  %174 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %175 = call %9* @get_next_op(%7* %174) #16
  %176 = getelementptr inbounds %9, %9* %175, i64 0, i32 6
  store i8 %173, i8* %176, align 4
  %177 = load i8, i8* %12, align 8
  %178 = getelementptr inbounds %9, %9* %175, i64 0, i32 7
  store i8 %177, i8* %178, align 1
  %179 = icmp eq i8 %177, 1
  br i1 %179, label %180, label %184

180:                                              ; preds = %172
  %181 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %182 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %183 = call i32 @zend_add_literal(%7* %181, %2* nonnull %182) #16
  br label %188

184:                                              ; preds = %172
  %185 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %186 = bitcast %38* %185 to i32*
  %187 = load i32, i32* %186, align 8
  br label %188

188:                                              ; preds = %184, %180
  %189 = phi i32 [ %187, %184 ], [ %183, %180 ]
  %190 = getelementptr inbounds %9, %9* %175, i64 0, i32 1, i32 0
  store i32 %189, i32* %190, align 8
  %191 = getelementptr inbounds %9, %9* %175, i64 0, i32 8
  store i8 8, i8* %191, align 2
  call fastcc void @244(%9* nonnull %175) #16
  %192 = icmp eq %37* %0, null
  br i1 %192, label %229, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %9, %9* %175, i64 0, i32 9
  store i8 2, i8* %194, align 1
  %195 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %196 = getelementptr inbounds %7, %7* %195, i64 0, i32 13
  %197 = load i32, i32* %196, align 4
  %198 = add i32 %197, 1
  store i32 %198, i32* %196, align 4
  %199 = getelementptr inbounds %9, %9* %175, i64 0, i32 3, i32 0
  store i32 %197, i32* %199, align 8
  %200 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %200, align 8
  %201 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %202 = bitcast %38* %201 to i32*
  %203 = load i32, i32* %199, align 8
  store i32 %203, i32* %202, align 8
  br label %229

204:                                              ; preds = %57
  %205 = icmp eq i16 %10, 8
  br i1 %205, label %206, label %226

206:                                              ; preds = %204
  %207 = load i8, i8* %12, align 8
  %208 = icmp eq i8 %207, 1
  br i1 %208, label %209, label %216

209:                                              ; preds = %206
  %210 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0, i32 1
  %211 = bitcast %4* %210 to i8*
  %212 = load i8, i8* %211, align 8
  %213 = icmp eq i8 %212, 6
  br i1 %213, label %216, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  call void @_convert_to_string(%2* nonnull %215) #16
  br label %216

216:                                              ; preds = %209, %214, %206
  %217 = load i8, i8* %13, align 8
  %218 = icmp eq i8 %217, 1
  br i1 %218, label %219, label %226

219:                                              ; preds = %216
  %220 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1
  %221 = bitcast %4* %220 to i8*
  %222 = load i8, i8* %221, align 8
  %223 = icmp eq i8 %222, 6
  br i1 %223, label %226, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  call void @_convert_to_string(%2* nonnull %225) #16
  br label %226

226:                                              ; preds = %136, %65, %133, %219, %216, %224, %204
  %227 = trunc i16 %10 to i8
  %228 = call fastcc %9* @240(%37* %0, i8 zeroext %227, %37* nonnull %3, %37* nonnull %4)
  br label %229

229:                                              ; preds = %193, %188, %161, %156, %122, %117, %90, %85, %226, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_greater(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %6 = load %43*, %43** %5, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  call void @zend_compile_expr(%37* nonnull %3, %43* %6)
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %12 = load i8, i8* %9, align 8
  %13 = icmp eq i8 %12, 1
  %14 = load i8, i8* %10, align 8
  %15 = icmp eq i8 %14, 1
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %26

17:                                               ; preds = %2
  %18 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %18, align 8
  %19 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %20 = load i16, i16* %11, align 8
  %21 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %23 = icmp eq i16 %20, 521
  %24 = select i1 %23, i32 (%2*, %2*, %2*)* @is_smaller_function, i32 (%2*, %2*, %2*)* @is_smaller_or_equal_function
  %25 = call i32 %24(%2* nonnull %19, %2* nonnull %22, %2* nonnull %21) #16
  call void @_zval_ptr_dtor(%2* nonnull %21) #16
  call void @_zval_ptr_dtor(%2* nonnull %22) #16
  br label %31

26:                                               ; preds = %2
  %27 = load i16, i16* %11, align 8
  %28 = icmp eq i16 %27, 521
  %29 = select i1 %28, i8 19, i8 20
  %30 = call fastcc %9* @240(%37* %0, i8 zeroext %29, %37* nonnull %4, %37* nonnull %3)
  br label %31

31:                                               ; preds = %26, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_unary_op(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %5)
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = zext i16 %7 to i32
  %13 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %16 = call i32 (%2*, %2*)* @get_unary_op(i32 %12) #16
  %17 = call i32 %16(%2* nonnull %14, %2* nonnull %15) #16
  call void @_zval_ptr_dtor(%2* nonnull %15) #16
  br label %50

18:                                               ; preds = %2
  %19 = trunc i16 %7 to i8
  %20 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %21 = call %9* @get_next_op(%7* %20) #16
  %22 = getelementptr inbounds %9, %9* %21, i64 0, i32 6
  store i8 %19, i8* %22, align 4
  %23 = load i8, i8* %8, align 8
  %24 = getelementptr inbounds %9, %9* %21, i64 0, i32 7
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i8 %23, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %18
  %27 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %28 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %29 = call i32 @zend_add_literal(%7* %27, %2* nonnull %28) #16
  br label %34

30:                                               ; preds = %18
  %31 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %32 = bitcast %38* %31 to i32*
  %33 = load i32, i32* %32, align 8
  br label %34

34:                                               ; preds = %30, %26
  %35 = phi i32 [ %33, %30 ], [ %29, %26 ]
  %36 = getelementptr inbounds %9, %9* %21, i64 0, i32 1, i32 0
  store i32 %35, i32* %36, align 8
  %37 = getelementptr inbounds %9, %9* %21, i64 0, i32 8
  store i8 8, i8* %37, align 2
  call fastcc void @244(%9* nonnull %21) #16
  %38 = icmp eq %37* %0, null
  br i1 %38, label %50, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %9, %9* %21, i64 0, i32 9
  store i8 2, i8* %40, align 1
  %41 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %42 = getelementptr inbounds %7, %7* %41, i64 0, i32 13
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 4
  %45 = getelementptr inbounds %9, %9* %21, i64 0, i32 3, i32 0
  store i32 %43, i32* %45, align 8
  %46 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %46, align 8
  %47 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %48 = bitcast %38* %47 to i32*
  %49 = load i32, i32* %45, align 8
  store i32 %49, i32* %48, align 8
  br label %50

50:                                               ; preds = %39, %34, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_unary_pm(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %2, align 8
  %4 = alloca %37, align 8
  %5 = alloca %37, align 8
  %6 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  call void @zend_compile_expr(%37* nonnull %4, %43* %7)
  %11 = load i8, i8* %8, align 8
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %42

13:                                               ; preds = %2
  %14 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %15 = load i16, i16* %10, align 8
  %16 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %17 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  %18 = icmp eq i16 %15, 259
  %19 = select i1 %18, i64 1, i64 -1
  %20 = getelementptr inbounds %2, %2* %3, i64 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 4, i32* %21, align 8
  %22 = call i32 (%2*, %2*, %2*)* @get_binary_op(i32 3) #16
  %23 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0, i32 1
  %24 = bitcast %4* %23 to i8*
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 6
  br i1 %26, label %27, label %39

27:                                               ; preds = %13
  %28 = bitcast %2* %16 to %32**
  %29 = load %32*, %32** %28, align 8
  %30 = getelementptr inbounds %32, %32* %29, i64 0, i32 3, i64 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, 57
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %32, %32* %29, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = call zeroext i8 @_is_numeric_string_ex(i8* nonnull %30, i64 %35, i64* null, double* null, i32 0, i32* null) #16
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %33, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  br label %42

39:                                               ; preds = %33, %13
  %40 = call i32 %22(%2* nonnull %14, %2* nonnull %3, %2* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  %41 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %41, align 8
  call void @_zval_ptr_dtor(%2* nonnull %16) #16
  br label %49

42:                                               ; preds = %38, %2
  store i8 1, i8* %9, align 8
  %43 = load i16, i16* %10, align 8
  %44 = icmp eq i16 %43, 259
  %45 = select i1 %44, i64 1, i64 -1
  %46 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 4, i32* %47, align 8
  %48 = call fastcc %9* @240(%37* %0, i8 zeroext 3, %37* nonnull %5, %37* nonnull %4)
  br label %49

49:                                               ; preds = %42, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_short_circuiting(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %6 = load %43*, %43** %5, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  call void @zend_compile_expr(%37* nonnull %3, %43* %6)
  %12 = load i8, i8* %9, align 8
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %80

14:                                               ; preds = %2
  %15 = load i16, i16* %11, align 8
  %16 = icmp eq i16 %15, 523
  br i1 %16, label %17, label %23

17:                                               ; preds = %14
  %18 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %19 = call i32 @zend_is_true(%2* nonnull %18) #16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %17
  %22 = load i16, i16* %11, align 8
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i16 [ %22, %21 ], [ %15, %14 ]
  %25 = icmp eq i16 %24, 524
  br i1 %25, label %26, label %37

26:                                               ; preds = %23
  %27 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %28 = call i32 @zend_is_true(%2* nonnull %27) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %17, %26
  %31 = phi %2* [ %18, %17 ], [ %27, %26 ]
  %32 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %32, align 8
  %33 = call i32 @zend_is_true(%2* nonnull %31) #16
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i32 2, i32 3
  %36 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %35, i32* %36, align 8
  br label %78

37:                                               ; preds = %26, %23
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %38 = load i8, i8* %10, align 8
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %47

40:                                               ; preds = %37
  %41 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %41, align 8
  %42 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %43 = call i32 @zend_is_true(%2* nonnull %42) #16
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, i32 2, i32 3
  %46 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %45, i32* %46, align 8
  call void @_zval_ptr_dtor(%2* nonnull %42) #16
  br label %78

47:                                               ; preds = %37
  %48 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %49 = call %9* @get_next_op(%7* %48) #16
  %50 = getelementptr inbounds %9, %9* %49, i64 0, i32 6
  store i8 52, i8* %50, align 4
  %51 = load i8, i8* %10, align 8
  %52 = getelementptr inbounds %9, %9* %49, i64 0, i32 7
  store i8 %51, i8* %52, align 1
  %53 = icmp eq i8 %51, 1
  br i1 %53, label %54, label %58

54:                                               ; preds = %47
  %55 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %56 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %57 = call i32 @zend_add_literal(%7* %55, %2* nonnull %56) #16
  br label %62

58:                                               ; preds = %47
  %59 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %60 = bitcast %38* %59 to i32*
  %61 = load i32, i32* %60, align 8
  br label %62

62:                                               ; preds = %58, %54
  %63 = phi i32 [ %61, %58 ], [ %57, %54 ]
  %64 = getelementptr inbounds %9, %9* %49, i64 0, i32 1, i32 0
  store i32 %63, i32* %64, align 8
  %65 = getelementptr inbounds %9, %9* %49, i64 0, i32 8
  store i8 8, i8* %65, align 2
  call fastcc void @244(%9* nonnull %49) #16
  %66 = icmp eq %37* %0, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %9, %9* %49, i64 0, i32 9
  store i8 2, i8* %68, align 1
  %69 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %70 = getelementptr inbounds %7, %7* %69, i64 0, i32 13
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %9, %9* %49, i64 0, i32 3, i32 0
  store i32 %71, i32* %73, align 8
  %74 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %74, align 8
  %75 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %76 = bitcast %38* %75 to i32*
  %77 = load i32, i32* %73, align 8
  store i32 %77, i32* %76, align 8
  br label %78

78:                                               ; preds = %67, %62, %40, %30
  %79 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  call void @_zval_ptr_dtor(%2* nonnull %79) #16
  br label %168

80:                                               ; preds = %2
  %81 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %82 = call i32 @get_next_op_number(%7* %81) #16
  %83 = load i16, i16* %11, align 8
  %84 = icmp eq i16 %83, 523
  %85 = select i1 %84, i8 46, i8 47
  %86 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %87 = call %9* @get_next_op(%7* %86) #16
  %88 = getelementptr inbounds %9, %9* %87, i64 0, i32 6
  store i8 %85, i8* %88, align 4
  %89 = load i8, i8* %9, align 8
  %90 = getelementptr inbounds %9, %9* %87, i64 0, i32 7
  store i8 %89, i8* %90, align 1
  %91 = icmp eq i8 %89, 1
  br i1 %91, label %92, label %96

92:                                               ; preds = %80
  %93 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %94 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %95 = call i32 @zend_add_literal(%7* %93, %2* nonnull %94) #16
  br label %100

96:                                               ; preds = %80
  %97 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %98 = bitcast %38* %97 to i32*
  %99 = load i32, i32* %98, align 8
  br label %100

100:                                              ; preds = %92, %96
  %101 = phi i32 [ %95, %92 ], [ %99, %96 ]
  %102 = getelementptr inbounds %9, %9* %87, i64 0, i32 1, i32 0
  store i32 %101, i32* %102, align 8
  %103 = getelementptr inbounds %9, %9* %87, i64 0, i32 8
  store i8 8, i8* %103, align 2
  call fastcc void @244(%9* nonnull %87) #16
  %104 = load i8, i8* %9, align 8
  %105 = icmp eq i8 %104, 2
  br i1 %105, label %106, label %110

106:                                              ; preds = %100
  %107 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %108 = bitcast %38* %107 to i32*
  %109 = load i32, i32* %108, align 8
  br label %115

110:                                              ; preds = %100
  %111 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %112 = getelementptr inbounds %7, %7* %111, i64 0, i32 13
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %112, align 4
  br label %115

115:                                              ; preds = %110, %106
  %116 = phi i32 [ %113, %110 ], [ %109, %106 ]
  %117 = getelementptr inbounds %9, %9* %87, i64 0, i32 3, i32 0
  store i32 %116, i32* %117, align 8
  %118 = getelementptr inbounds %9, %9* %87, i64 0, i32 9
  store i8 2, i8* %118, align 1
  %119 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %119, align 8
  %120 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %121 = bitcast %38* %120 to i32*
  %122 = load i32, i32* %117, align 8
  store i32 %122, i32* %121, align 8
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %123 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %124 = call %9* @get_next_op(%7* %123) #16
  %125 = getelementptr inbounds %9, %9* %124, i64 0, i32 6
  store i8 52, i8* %125, align 4
  %126 = load i8, i8* %10, align 8
  %127 = getelementptr inbounds %9, %9* %124, i64 0, i32 7
  store i8 %126, i8* %127, align 1
  %128 = icmp eq i8 %126, 1
  br i1 %128, label %129, label %133

129:                                              ; preds = %115
  %130 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %131 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %132 = call i32 @zend_add_literal(%7* %130, %2* nonnull %131) #16
  br label %137

133:                                              ; preds = %115
  %134 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %135 = bitcast %38* %134 to i32*
  %136 = load i32, i32* %135, align 8
  br label %137

137:                                              ; preds = %129, %133
  %138 = phi i32 [ %132, %129 ], [ %136, %133 ]
  %139 = getelementptr inbounds %9, %9* %124, i64 0, i32 1, i32 0
  store i32 %138, i32* %139, align 8
  %140 = getelementptr inbounds %9, %9* %124, i64 0, i32 8
  store i8 8, i8* %140, align 2
  call fastcc void @244(%9* nonnull %124) #16
  %141 = load i8, i8* %119, align 8
  %142 = getelementptr inbounds %9, %9* %124, i64 0, i32 9
  store i8 %141, i8* %142, align 1
  %143 = icmp eq i8 %141, 1
  br i1 %143, label %144, label %148

144:                                              ; preds = %137
  %145 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %146 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %147 = call i32 @zend_add_literal(%7* %145, %2* nonnull %146)
  br label %152

148:                                              ; preds = %137
  %149 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %150 = bitcast %38* %149 to i32*
  %151 = load i32, i32* %150, align 8
  br label %152

152:                                              ; preds = %148, %144
  %153 = phi i32 [ %151, %148 ], [ %147, %144 ]
  %154 = getelementptr inbounds %9, %9* %124, i64 0, i32 3, i32 0
  store i32 %153, i32* %154, align 8
  %155 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %156 = call i32 @get_next_op_number(%7* %155) #16
  %157 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %158 = getelementptr inbounds %7, %7* %157, i64 0, i32 11
  %159 = load %9*, %9** %158, align 8
  %160 = zext i32 %82 to i64
  %161 = getelementptr inbounds %9, %9* %159, i64 %160, i32 6
  %162 = load i8, i8* %161, align 4
  %163 = icmp eq i8 %162, 42
  br i1 %163, label %164, label %166

164:                                              ; preds = %152
  %165 = getelementptr inbounds %9, %9* %159, i64 %160, i32 1, i32 0
  store i32 %156, i32* %165, align 8
  br label %168

166:                                              ; preds = %152
  %167 = getelementptr inbounds %9, %9* %159, i64 %160, i32 2, i32 0
  store i32 %156, i32* %167, align 4
  br label %168

168:                                              ; preds = %166, %164, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

declare dso_local i32 @zend_is_true(%2*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_post_incdec(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %7 = getelementptr inbounds %43, %43* %5, i64 0, i32 0
  %8 = load i16, i16* %7, align 8
  switch i16 %8, label %46 [
    i16 515, label %9
    i16 768, label %10
    i16 769, label %10
    i16 513, label %11
  ]

9:                                                ; preds = %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @191, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %2, %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @192, i64 0, i64 0)) #15
  unreachable

11:                                               ; preds = %2
  %12 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %13 = tail call fastcc %9* @237(%37* null, %43* %5, i32 2) #16
  %14 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %15 = bitcast i8* %14 to %9*
  %16 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %17 = icmp ugt i32 %16, %12
  br i1 %17, label %18, label %30

18:                                               ; preds = %11
  %19 = zext i32 %12 to i64
  %20 = zext i32 %16 to i64
  br label %21

21:                                               ; preds = %21, %18
  %22 = phi i64 [ %19, %18 ], [ %28, %21 ]
  %23 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %24 = tail call %9* @get_next_op(%7* %23) #16
  %25 = bitcast %9* %24 to i8*
  %26 = getelementptr inbounds %9, %9* %15, i64 %22
  %27 = bitcast %9* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 32, i1 false) #16
  tail call fastcc void @244(%9* %24) #16
  %28 = add nuw nsw i64 %22, 1
  %29 = icmp eq i64 %28, %20
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %11
  %31 = phi %9* [ null, %11 ], [ %24, %21 ]
  store i32 %12, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %32 = load i16, i16* %6, align 8
  %33 = icmp eq i16 %32, 273
  %34 = select i1 %33, i8 -122, i8 -121
  %35 = getelementptr inbounds %9, %9* %31, i64 0, i32 6
  store i8 %34, i8* %35, align 4
  %36 = getelementptr inbounds %9, %9* %31, i64 0, i32 9
  store i8 2, i8* %36, align 1
  %37 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %38 = getelementptr inbounds %7, %7* %37, i64 0, i32 13
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 4
  %41 = getelementptr inbounds %9, %9* %31, i64 0, i32 3, i32 0
  store i32 %39, i32* %41, align 8
  %42 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %42, align 8
  %43 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %44 = bitcast %38* %43 to i32*
  %45 = load i32, i32* %41, align 8
  store i32 %45, i32* %44, align 8
  br label %82

46:                                               ; preds = %2
  %47 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #16
  call void @zend_compile_var(%37* nonnull %3, %43* %5, i32 2)
  %48 = load i16, i16* %6, align 8
  %49 = icmp eq i16 %48, 273
  %50 = select i1 %49, i8 36, i8 37
  %51 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %52 = call %9* @get_next_op(%7* %51) #16
  %53 = getelementptr inbounds %9, %9* %52, i64 0, i32 6
  store i8 %50, i8* %53, align 4
  %54 = load i8, i8* %47, align 8
  %55 = getelementptr inbounds %9, %9* %52, i64 0, i32 7
  store i8 %54, i8* %55, align 1
  %56 = icmp eq i8 %54, 1
  br i1 %56, label %57, label %61

57:                                               ; preds = %46
  %58 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %59 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %60 = call i32 @zend_add_literal(%7* %58, %2* nonnull %59) #16
  br label %65

61:                                               ; preds = %46
  %62 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %63 = bitcast %38* %62 to i32*
  %64 = load i32, i32* %63, align 8
  br label %65

65:                                               ; preds = %61, %57
  %66 = phi i32 [ %64, %61 ], [ %60, %57 ]
  %67 = getelementptr inbounds %9, %9* %52, i64 0, i32 1, i32 0
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %9, %9* %52, i64 0, i32 8
  store i8 8, i8* %68, align 2
  call fastcc void @244(%9* nonnull %52) #16
  %69 = icmp eq %37* %0, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %9, %9* %52, i64 0, i32 9
  store i8 2, i8* %71, align 1
  %72 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %73 = getelementptr inbounds %7, %7* %72, i64 0, i32 13
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %9, %9* %52, i64 0, i32 3, i32 0
  store i32 %74, i32* %76, align 8
  %77 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %77, align 8
  %78 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %79 = bitcast %38* %78 to i32*
  %80 = load i32, i32* %76, align 8
  store i32 %80, i32* %79, align 8
  br label %81

81:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #16
  br label %82

82:                                               ; preds = %81, %30
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_pre_incdec(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %7 = getelementptr inbounds %43, %43* %5, i64 0, i32 0
  %8 = load i16, i16* %7, align 8
  switch i16 %8, label %36 [
    i16 515, label %9
    i16 768, label %10
    i16 769, label %10
    i16 513, label %11
  ]

9:                                                ; preds = %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @191, i64 0, i64 0)) #15
  unreachable

10:                                               ; preds = %2, %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @192, i64 0, i64 0)) #15
  unreachable

11:                                               ; preds = %2
  %12 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %13 = tail call fastcc %9* @237(%37* %0, %43* %5, i32 2) #16
  %14 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %15 = bitcast i8* %14 to %9*
  %16 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %17 = icmp ugt i32 %16, %12
  br i1 %17, label %18, label %30

18:                                               ; preds = %11
  %19 = zext i32 %12 to i64
  %20 = zext i32 %16 to i64
  br label %21

21:                                               ; preds = %21, %18
  %22 = phi i64 [ %19, %18 ], [ %28, %21 ]
  %23 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %24 = tail call %9* @get_next_op(%7* %23) #16
  %25 = bitcast %9* %24 to i8*
  %26 = getelementptr inbounds %9, %9* %15, i64 %22
  %27 = bitcast %9* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 32, i1 false) #16
  tail call fastcc void @244(%9* %24) #16
  %28 = add nuw nsw i64 %22, 1
  %29 = icmp eq i64 %28, %20
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %11
  %31 = phi %9* [ null, %11 ], [ %24, %21 ]
  store i32 %12, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %32 = load i16, i16* %6, align 8
  %33 = icmp eq i16 %32, 271
  %34 = select i1 %33, i8 -124, i8 -123
  %35 = getelementptr inbounds %9, %9* %31, i64 0, i32 6
  store i8 %34, i8* %35, align 4
  br label %72

36:                                               ; preds = %2
  %37 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #16
  call void @zend_compile_var(%37* nonnull %3, %43* %5, i32 2)
  %38 = load i16, i16* %6, align 8
  %39 = icmp eq i16 %38, 271
  %40 = select i1 %39, i8 34, i8 35
  %41 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %42 = call %9* @get_next_op(%7* %41) #16
  %43 = getelementptr inbounds %9, %9* %42, i64 0, i32 6
  store i8 %40, i8* %43, align 4
  %44 = load i8, i8* %37, align 8
  %45 = getelementptr inbounds %9, %9* %42, i64 0, i32 7
  store i8 %44, i8* %45, align 1
  %46 = icmp eq i8 %44, 1
  br i1 %46, label %47, label %51

47:                                               ; preds = %36
  %48 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %49 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %50 = call i32 @zend_add_literal(%7* %48, %2* nonnull %49) #16
  br label %55

51:                                               ; preds = %36
  %52 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %53 = bitcast %38* %52 to i32*
  %54 = load i32, i32* %53, align 8
  br label %55

55:                                               ; preds = %51, %47
  %56 = phi i32 [ %54, %51 ], [ %50, %47 ]
  %57 = getelementptr inbounds %9, %9* %42, i64 0, i32 1, i32 0
  store i32 %56, i32* %57, align 8
  %58 = getelementptr inbounds %9, %9* %42, i64 0, i32 8
  store i8 8, i8* %58, align 2
  call fastcc void @244(%9* nonnull %42) #16
  %59 = icmp eq %37* %0, null
  br i1 %59, label %71, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %9, %9* %42, i64 0, i32 9
  store i8 4, i8* %61, align 1
  %62 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %63 = getelementptr inbounds %7, %7* %62, i64 0, i32 13
  %64 = load i32, i32* %63, align 4
  %65 = add i32 %64, 1
  store i32 %65, i32* %63, align 4
  %66 = getelementptr inbounds %9, %9* %42, i64 0, i32 3, i32 0
  store i32 %64, i32* %66, align 8
  %67 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %67, align 8
  %68 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %69 = bitcast %38* %68 to i32*
  %70 = load i32, i32* %66, align 8
  store i32 %70, i32* %69, align 8
  br label %71

71:                                               ; preds = %55, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #16
  br label %72

72:                                               ; preds = %71, %30
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_cast(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %5)
  %7 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %8 = call %9* @get_next_op(%7* %7) #16
  %9 = getelementptr inbounds %9, %9* %8, i64 0, i32 6
  store i8 21, i8* %9, align 4
  %10 = load i8, i8* %6, align 8
  %11 = getelementptr inbounds %9, %9* %8, i64 0, i32 7
  store i8 %10, i8* %11, align 1
  %12 = icmp eq i8 %10, 1
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %15 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %16 = call i32 @zend_add_literal(%7* %14, %2* nonnull %15) #16
  br label %21

17:                                               ; preds = %2
  %18 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %19 = bitcast %38* %18 to i32*
  %20 = load i32, i32* %19, align 8
  br label %21

21:                                               ; preds = %17, %13
  %22 = phi i32 [ %20, %17 ], [ %16, %13 ]
  %23 = getelementptr inbounds %9, %9* %8, i64 0, i32 1, i32 0
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %9, %9* %8, i64 0, i32 8
  store i8 8, i8* %24, align 2
  call fastcc void @244(%9* nonnull %8) #16
  %25 = icmp eq %37* %0, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %9, %9* %8, i64 0, i32 9
  store i8 2, i8* %27, align 1
  %28 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %29 = getelementptr inbounds %7, %7* %28, i64 0, i32 13
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = getelementptr inbounds %9, %9* %8, i64 0, i32 3, i32 0
  store i32 %30, i32* %32, align 8
  %33 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %33, align 8
  %34 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %35 = bitcast %38* %34 to i32*
  %36 = load i32, i32* %32, align 8
  store i32 %36, i32* %35, align 8
  br label %37

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = getelementptr inbounds %9, %9* %8, i64 0, i32 4
  store i32 %40, i32* %41, align 4
  %42 = icmp eq i16 %39, 1
  br i1 %42, label %43, label %44

43:                                               ; preds = %37
  call void (i32, i8*, ...) @zend_error(i32 8192, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @162, i64 0, i64 0)) #16
  br label %44

44:                                               ; preds = %43, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_conditional(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = alloca %37, align 8
  %6 = alloca %37, align 8
  %7 = alloca %37, align 8
  %8 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %9 = load %43*, %43** %8, align 8
  %10 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %11 = load %43*, %43** %10, align 8
  %12 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 2
  %13 = load %43*, %43** %12, align 8
  %14 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #16
  %15 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  %16 = getelementptr inbounds %37, %37* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #16
  %17 = icmp eq %43* %11, null
  br i1 %17, label %18, label %101

18:                                               ; preds = %2
  %19 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #16
  %20 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %9) #16
  %21 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %22 = call i32 @get_next_op_number(%7* %21) #16
  %23 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %24 = call %9* @get_next_op(%7* %23) #16
  %25 = getelementptr inbounds %9, %9* %24, i64 0, i32 6
  store i8 -104, i8* %25, align 4
  %26 = load i8, i8* %19, align 8
  %27 = getelementptr inbounds %9, %9* %24, i64 0, i32 7
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i8 %26, 1
  br i1 %28, label %29, label %33

29:                                               ; preds = %18
  %30 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %31 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %32 = call i32 @zend_add_literal(%7* %30, %2* nonnull %31) #16
  br label %37

33:                                               ; preds = %18
  %34 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %35 = bitcast %38* %34 to i32*
  %36 = load i32, i32* %35, align 8
  br label %37

37:                                               ; preds = %33, %29
  %38 = phi i32 [ %36, %33 ], [ %32, %29 ]
  %39 = getelementptr inbounds %9, %9* %24, i64 0, i32 1, i32 0
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds %9, %9* %24, i64 0, i32 8
  store i8 8, i8* %40, align 2
  call fastcc void @244(%9* nonnull %24) #16
  %41 = icmp eq %37* %0, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %9, %9* %24, i64 0, i32 9
  store i8 2, i8* %43, align 1
  %44 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %45 = getelementptr inbounds %7, %7* %44, i64 0, i32 13
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 4
  %48 = getelementptr inbounds %9, %9* %24, i64 0, i32 3, i32 0
  store i32 %46, i32* %48, align 8
  %49 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %49, align 8
  %50 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %51 = bitcast %38* %50 to i32*
  %52 = load i32, i32* %48, align 8
  store i32 %52, i32* %51, align 8
  br label %53

53:                                               ; preds = %42, %37
  call void @zend_compile_expr(%37* nonnull %4, %43* %13) #16
  %54 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %55 = call %9* @get_next_op(%7* %54) #16
  %56 = getelementptr inbounds %9, %9* %55, i64 0, i32 6
  store i8 22, i8* %56, align 4
  %57 = load i8, i8* %20, align 8
  %58 = getelementptr inbounds %9, %9* %55, i64 0, i32 7
  store i8 %57, i8* %58, align 1
  %59 = icmp eq i8 %57, 1
  br i1 %59, label %60, label %64

60:                                               ; preds = %53
  %61 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %62 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %63 = call i32 @zend_add_literal(%7* %61, %2* nonnull %62) #16
  br label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %66 = bitcast %38* %65 to i32*
  %67 = load i32, i32* %66, align 8
  br label %68

68:                                               ; preds = %64, %60
  %69 = phi i32 [ %67, %64 ], [ %63, %60 ]
  %70 = getelementptr inbounds %9, %9* %55, i64 0, i32 1, i32 0
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %9, %9* %55, i64 0, i32 8
  store i8 8, i8* %71, align 2
  call fastcc void @244(%9* nonnull %55) #16
  %72 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %73 = load i8, i8* %72, align 8
  %74 = getelementptr inbounds %9, %9* %55, i64 0, i32 9
  store i8 %73, i8* %74, align 1
  %75 = icmp eq i8 %73, 1
  br i1 %75, label %76, label %80

76:                                               ; preds = %68
  %77 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %78 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %79 = call i32 @zend_add_literal(%7* %77, %2* nonnull %78) #16
  br label %84

80:                                               ; preds = %68
  %81 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %82 = bitcast %38* %81 to i32*
  %83 = load i32, i32* %82, align 8
  br label %84

84:                                               ; preds = %80, %76
  %85 = phi i32 [ %83, %80 ], [ %79, %76 ]
  %86 = getelementptr inbounds %9, %9* %55, i64 0, i32 3, i32 0
  store i32 %85, i32* %86, align 8
  %87 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %88 = call i32 @get_next_op_number(%7* %87) #16
  %89 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %90 = getelementptr inbounds %7, %7* %89, i64 0, i32 11
  %91 = load %9*, %9** %90, align 8
  %92 = zext i32 %22 to i64
  %93 = getelementptr inbounds %9, %9* %91, i64 %92, i32 6
  %94 = load i8, i8* %93, align 4
  %95 = icmp eq i8 %94, 42
  br i1 %95, label %96, label %98

96:                                               ; preds = %84
  %97 = getelementptr inbounds %9, %9* %91, i64 %92, i32 1, i32 0
  store i32 %88, i32* %97, align 8
  br label %100

98:                                               ; preds = %84
  %99 = getelementptr inbounds %9, %9* %91, i64 %92, i32 2, i32 0
  store i32 %88, i32* %99, align 4
  br label %100

100:                                              ; preds = %96, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #16
  br label %245

101:                                              ; preds = %2
  call void @zend_compile_expr(%37* nonnull %5, %43* %9)
  %102 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %103 = call i32 @get_next_op_number(%7* %102) #16
  %104 = load i8, i8* %14, align 8
  %105 = and i8 %104, 17
  %106 = icmp ne i8 %105, 0
  %107 = icmp ne i32 %103, 0
  %108 = and i1 %107, %106
  br i1 %108, label %109, label %125

109:                                              ; preds = %101
  %110 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %111 = getelementptr inbounds %7, %7* %110, i64 0, i32 11
  %112 = load %9*, %9** %111, align 8
  %113 = zext i32 %103 to i64
  %114 = getelementptr inbounds %9, %9* %112, i64 %113
  %115 = getelementptr inbounds %9, %9* %114, i64 -1
  %116 = getelementptr inbounds %9, %9* %115, i64 0, i32 6
  %117 = load i8, i8* %116, align 4
  switch i8 %117, label %125 [
    i8 15, label %118
    i8 16, label %118
    i8 17, label %118
    i8 18, label %118
    i8 19, label %118
    i8 20, label %118
    i8 48, label %118
    i8 -59, label %118
    i8 114, label %118
    i8 115, label %118
    i8 -108, label %118
    i8 -76, label %118
    i8 -118, label %118
    i8 123, label %118
    i8 122, label %118
    i8 -67, label %118
  ]

118:                                              ; preds = %109, %109, %109, %109, %109, %109, %109, %109, %109, %109, %109, %109, %109, %109, %109, %109
  %119 = call %9* @get_next_op(%7* %110) #16
  %120 = getelementptr inbounds %9, %9* %119, i64 0, i32 6
  store i8 0, i8* %120, align 4
  %121 = getelementptr inbounds %9, %9* %119, i64 0, i32 7
  store i8 8, i8* %121, align 1
  %122 = getelementptr inbounds %9, %9* %119, i64 0, i32 8
  store i8 8, i8* %122, align 2
  call fastcc void @244(%9* nonnull %119) #16
  %123 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %124 = call i32 @get_next_op_number(%7* %123) #16
  br label %125

125:                                              ; preds = %109, %101, %118
  %126 = phi i32 [ %124, %118 ], [ %103, %101 ], [ %103, %109 ]
  %127 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %128 = call %9* @get_next_op(%7* %127) #16
  %129 = getelementptr inbounds %9, %9* %128, i64 0, i32 6
  store i8 43, i8* %129, align 4
  %130 = load i8, i8* %14, align 8
  %131 = getelementptr inbounds %9, %9* %128, i64 0, i32 7
  store i8 %130, i8* %131, align 1
  %132 = icmp eq i8 %130, 1
  br i1 %132, label %133, label %137

133:                                              ; preds = %125
  %134 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %135 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %136 = call i32 @zend_add_literal(%7* %134, %2* nonnull %135) #16
  br label %141

137:                                              ; preds = %125
  %138 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %139 = bitcast %38* %138 to i32*
  %140 = load i32, i32* %139, align 8
  br label %141

141:                                              ; preds = %133, %137
  %142 = phi i32 [ %136, %133 ], [ %140, %137 ]
  %143 = getelementptr inbounds %9, %9* %128, i64 0, i32 1, i32 0
  store i32 %142, i32* %143, align 8
  %144 = getelementptr inbounds %9, %9* %128, i64 0, i32 8
  store i8 8, i8* %144, align 2
  call fastcc void @244(%9* nonnull %128) #16
  %145 = getelementptr inbounds %9, %9* %128, i64 0, i32 2, i32 0
  store i32 0, i32* %145, align 4
  call void @zend_compile_expr(%37* nonnull %6, %43* nonnull %11)
  %146 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %147 = call %9* @get_next_op(%7* %146) #16
  %148 = getelementptr inbounds %9, %9* %147, i64 0, i32 6
  store i8 22, i8* %148, align 4
  %149 = load i8, i8* %15, align 8
  %150 = getelementptr inbounds %9, %9* %147, i64 0, i32 7
  store i8 %149, i8* %150, align 1
  %151 = icmp eq i8 %149, 1
  br i1 %151, label %152, label %156

152:                                              ; preds = %141
  %153 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %154 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %155 = call i32 @zend_add_literal(%7* %153, %2* nonnull %154) #16
  br label %160

156:                                              ; preds = %141
  %157 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %158 = bitcast %38* %157 to i32*
  %159 = load i32, i32* %158, align 8
  br label %160

160:                                              ; preds = %156, %152
  %161 = phi i32 [ %159, %156 ], [ %155, %152 ]
  %162 = getelementptr inbounds %9, %9* %147, i64 0, i32 1, i32 0
  store i32 %161, i32* %162, align 8
  %163 = getelementptr inbounds %9, %9* %147, i64 0, i32 8
  store i8 8, i8* %163, align 2
  call fastcc void @244(%9* nonnull %147) #16
  %164 = icmp eq %37* %0, null
  br i1 %164, label %176, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %9, %9* %147, i64 0, i32 9
  store i8 2, i8* %166, align 1
  %167 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %168 = getelementptr inbounds %7, %7* %167, i64 0, i32 13
  %169 = load i32, i32* %168, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %168, align 4
  %171 = getelementptr inbounds %9, %9* %147, i64 0, i32 3, i32 0
  store i32 %169, i32* %171, align 8
  %172 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %172, align 8
  %173 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %174 = bitcast %38* %173 to i32*
  %175 = load i32, i32* %171, align 8
  store i32 %175, i32* %174, align 8
  br label %176

176:                                              ; preds = %160, %165
  %177 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %178 = call i32 @get_next_op_number(%7* %177) #16
  %179 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %180 = call %9* @get_next_op(%7* %179) #16
  %181 = getelementptr inbounds %9, %9* %180, i64 0, i32 6
  store i8 42, i8* %181, align 4
  %182 = getelementptr inbounds %9, %9* %180, i64 0, i32 7
  store i8 8, i8* %182, align 1
  %183 = getelementptr inbounds %9, %9* %180, i64 0, i32 8
  store i8 8, i8* %183, align 2
  call fastcc void @244(%9* nonnull %180) #16
  %184 = getelementptr inbounds %9, %9* %180, i64 0, i32 1, i32 0
  store i32 0, i32* %184, align 8
  %185 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %186 = call i32 @get_next_op_number(%7* %185) #16
  %187 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %188 = getelementptr inbounds %7, %7* %187, i64 0, i32 11
  %189 = load %9*, %9** %188, align 8
  %190 = zext i32 %126 to i64
  %191 = getelementptr inbounds %9, %9* %189, i64 %190, i32 6
  %192 = load i8, i8* %191, align 4
  %193 = icmp eq i8 %192, 42
  br i1 %193, label %194, label %196

194:                                              ; preds = %176
  %195 = getelementptr inbounds %9, %9* %189, i64 %190, i32 1, i32 0
  store i32 %186, i32* %195, align 8
  br label %198

196:                                              ; preds = %176
  %197 = getelementptr inbounds %9, %9* %189, i64 %190, i32 2, i32 0
  store i32 %186, i32* %197, align 4
  br label %198

198:                                              ; preds = %194, %196
  call void @zend_compile_expr(%37* nonnull %7, %43* %13)
  %199 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %200 = call %9* @get_next_op(%7* %199) #16
  %201 = getelementptr inbounds %9, %9* %200, i64 0, i32 6
  store i8 22, i8* %201, align 4
  %202 = load i8, i8* %16, align 8
  %203 = getelementptr inbounds %9, %9* %200, i64 0, i32 7
  store i8 %202, i8* %203, align 1
  %204 = icmp eq i8 %202, 1
  br i1 %204, label %205, label %209

205:                                              ; preds = %198
  %206 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %207 = getelementptr inbounds %37, %37* %7, i64 0, i32 2, i32 0
  %208 = call i32 @zend_add_literal(%7* %206, %2* nonnull %207) #16
  br label %213

209:                                              ; preds = %198
  %210 = getelementptr inbounds %37, %37* %7, i64 0, i32 2
  %211 = bitcast %38* %210 to i32*
  %212 = load i32, i32* %211, align 8
  br label %213

213:                                              ; preds = %205, %209
  %214 = phi i32 [ %208, %205 ], [ %212, %209 ]
  %215 = getelementptr inbounds %9, %9* %200, i64 0, i32 1, i32 0
  store i32 %214, i32* %215, align 8
  %216 = getelementptr inbounds %9, %9* %200, i64 0, i32 8
  store i8 8, i8* %216, align 2
  call fastcc void @244(%9* nonnull %200) #16
  %217 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %218 = load i8, i8* %217, align 8
  %219 = getelementptr inbounds %9, %9* %200, i64 0, i32 9
  store i8 %218, i8* %219, align 1
  %220 = icmp eq i8 %218, 1
  br i1 %220, label %221, label %225

221:                                              ; preds = %213
  %222 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %223 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %224 = call i32 @zend_add_literal(%7* %222, %2* nonnull %223)
  br label %229

225:                                              ; preds = %213
  %226 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %227 = bitcast %38* %226 to i32*
  %228 = load i32, i32* %227, align 8
  br label %229

229:                                              ; preds = %225, %221
  %230 = phi i32 [ %228, %225 ], [ %224, %221 ]
  %231 = getelementptr inbounds %9, %9* %200, i64 0, i32 3, i32 0
  store i32 %230, i32* %231, align 8
  %232 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %233 = call i32 @get_next_op_number(%7* %232) #16
  %234 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %235 = getelementptr inbounds %7, %7* %234, i64 0, i32 11
  %236 = load %9*, %9** %235, align 8
  %237 = zext i32 %178 to i64
  %238 = getelementptr inbounds %9, %9* %236, i64 %237, i32 6
  %239 = load i8, i8* %238, align 4
  %240 = icmp eq i8 %239, 42
  br i1 %240, label %241, label %243

241:                                              ; preds = %229
  %242 = getelementptr inbounds %9, %9* %236, i64 %237, i32 1, i32 0
  store i32 %233, i32* %242, align 8
  br label %245

243:                                              ; preds = %229
  %244 = getelementptr inbounds %9, %9* %236, i64 %237, i32 2, i32 0
  store i32 %233, i32* %244, align 4
  br label %245

245:                                              ; preds = %243, %241, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_coalesce(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %6 = load %43*, %43** %5, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  call void @zend_compile_var(%37* nonnull %3, %43* %6, i32 3)
  %11 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %12 = call i32 @get_next_op_number(%7* %11) #16
  %13 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %14 = call %9* @get_next_op(%7* %13) #16
  %15 = getelementptr inbounds %9, %9* %14, i64 0, i32 6
  store i8 -87, i8* %15, align 4
  %16 = load i8, i8* %9, align 8
  %17 = getelementptr inbounds %9, %9* %14, i64 0, i32 7
  store i8 %16, i8* %17, align 1
  %18 = icmp eq i8 %16, 1
  br i1 %18, label %19, label %23

19:                                               ; preds = %2
  %20 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %21 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %22 = call i32 @zend_add_literal(%7* %20, %2* nonnull %21) #16
  br label %27

23:                                               ; preds = %2
  %24 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %25 = bitcast %38* %24 to i32*
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %23, %19
  %28 = phi i32 [ %26, %23 ], [ %22, %19 ]
  %29 = getelementptr inbounds %9, %9* %14, i64 0, i32 1, i32 0
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %9, %9* %14, i64 0, i32 8
  store i8 8, i8* %30, align 2
  call fastcc void @244(%9* nonnull %14) #16
  %31 = icmp eq %37* %0, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %9, %9* %14, i64 0, i32 9
  store i8 2, i8* %33, align 1
  %34 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %35 = getelementptr inbounds %7, %7* %34, i64 0, i32 13
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %9, %9* %14, i64 0, i32 3, i32 0
  store i32 %36, i32* %38, align 8
  %39 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %39, align 8
  %40 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %41 = bitcast %38* %40 to i32*
  %42 = load i32, i32* %38, align 8
  store i32 %42, i32* %41, align 8
  br label %43

43:                                               ; preds = %27, %32
  call void @zend_compile_expr(%37* nonnull %4, %43* %8)
  %44 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %45 = call %9* @get_next_op(%7* %44) #16
  %46 = getelementptr inbounds %9, %9* %45, i64 0, i32 6
  store i8 22, i8* %46, align 4
  %47 = load i8, i8* %10, align 8
  %48 = getelementptr inbounds %9, %9* %45, i64 0, i32 7
  store i8 %47, i8* %48, align 1
  %49 = icmp eq i8 %47, 1
  br i1 %49, label %50, label %54

50:                                               ; preds = %43
  %51 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %52 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %53 = call i32 @zend_add_literal(%7* %51, %2* nonnull %52) #16
  br label %58

54:                                               ; preds = %43
  %55 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %56 = bitcast %38* %55 to i32*
  %57 = load i32, i32* %56, align 8
  br label %58

58:                                               ; preds = %50, %54
  %59 = phi i32 [ %53, %50 ], [ %57, %54 ]
  %60 = getelementptr inbounds %9, %9* %45, i64 0, i32 1, i32 0
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %9, %9* %45, i64 0, i32 8
  store i8 8, i8* %61, align 2
  call fastcc void @244(%9* nonnull %45) #16
  %62 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %63 = load i8, i8* %62, align 8
  %64 = getelementptr inbounds %9, %9* %45, i64 0, i32 9
  store i8 %63, i8* %64, align 1
  %65 = icmp eq i8 %63, 1
  br i1 %65, label %66, label %70

66:                                               ; preds = %58
  %67 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %68 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %69 = call i32 @zend_add_literal(%7* %67, %2* nonnull %68)
  br label %74

70:                                               ; preds = %58
  %71 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %72 = bitcast %38* %71 to i32*
  %73 = load i32, i32* %72, align 8
  br label %74

74:                                               ; preds = %70, %66
  %75 = phi i32 [ %73, %70 ], [ %69, %66 ]
  %76 = getelementptr inbounds %9, %9* %45, i64 0, i32 3, i32 0
  store i32 %75, i32* %76, align 8
  %77 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %78 = getelementptr inbounds %7, %7* %77, i64 0, i32 11
  %79 = load %9*, %9** %78, align 8
  %80 = zext i32 %12 to i64
  %81 = call i32 @get_next_op_number(%7* %77) #16
  %82 = getelementptr inbounds %9, %9* %79, i64 %80, i32 2, i32 0
  store i32 %81, i32* %82, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_print(%37* nocapture %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* %5)
  %7 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %8 = call %9* @get_next_op(%7* %7) #16
  %9 = getelementptr inbounds %9, %9* %8, i64 0, i32 6
  store i8 40, i8* %9, align 4
  %10 = load i8, i8* %6, align 8
  %11 = getelementptr inbounds %9, %9* %8, i64 0, i32 7
  store i8 %10, i8* %11, align 1
  %12 = icmp eq i8 %10, 1
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %15 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %16 = call i32 @zend_add_literal(%7* %14, %2* nonnull %15) #16
  br label %21

17:                                               ; preds = %2
  %18 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %19 = bitcast %38* %18 to i32*
  %20 = load i32, i32* %19, align 8
  br label %21

21:                                               ; preds = %13, %17
  %22 = phi i32 [ %16, %13 ], [ %20, %17 ]
  %23 = getelementptr inbounds %9, %9* %8, i64 0, i32 1, i32 0
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %9, %9* %8, i64 0, i32 8
  store i8 8, i8* %24, align 2
  call fastcc void @244(%9* nonnull %8) #16
  %25 = getelementptr inbounds %9, %9* %8, i64 0, i32 4
  store i32 1, i32* %25, align 4
  %26 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %26, align 8
  %27 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 1, i64* %27, align 8
  %28 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 4, i32* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_exit(%37* nocapture %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = icmp eq %43* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  call void @zend_compile_expr(%37* nonnull %3, %43* nonnull %5)
  %9 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %10 = call %9* @get_next_op(%7* %9) #16
  %11 = getelementptr inbounds %9, %9* %10, i64 0, i32 6
  store i8 79, i8* %11, align 4
  %12 = load i8, i8* %8, align 8
  %13 = getelementptr inbounds %9, %9* %10, i64 0, i32 7
  store i8 %12, i8* %13, align 1
  %14 = icmp eq i8 %12, 1
  br i1 %14, label %15, label %19

15:                                               ; preds = %7
  %16 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %17 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %18 = call i32 @zend_add_literal(%7* %16, %2* nonnull %17) #16
  br label %23

19:                                               ; preds = %7
  %20 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %21 = bitcast %38* %20 to i32*
  %22 = load i32, i32* %21, align 8
  br label %23

23:                                               ; preds = %15, %19
  %24 = phi i32 [ %18, %15 ], [ %22, %19 ]
  %25 = getelementptr inbounds %9, %9* %10, i64 0, i32 1, i32 0
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %9, %9* %10, i64 0, i32 8
  store i8 8, i8* %26, align 2
  call fastcc void @244(%9* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  br label %33

27:                                               ; preds = %2
  %28 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %29 = tail call %9* @get_next_op(%7* %28) #16
  %30 = getelementptr inbounds %9, %9* %29, i64 0, i32 6
  store i8 79, i8* %30, align 4
  %31 = getelementptr inbounds %9, %9* %29, i64 0, i32 7
  store i8 8, i8* %31, align 1
  %32 = getelementptr inbounds %9, %9* %29, i64 0, i32 8
  store i8 8, i8* %32, align 2
  tail call fastcc void @244(%9* nonnull %29) #16
  br label %33

33:                                               ; preds = %27, %23
  %34 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 3, i32* %35, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_yield(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = alloca %37, align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %6 = load %43*, %43** %5, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %12 = getelementptr inbounds %7, %7* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = lshr i32 %13, 26
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  tail call fastcc void @260()
  %17 = icmp eq %43* %8, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %2
  call void @zend_compile_expr(%37* nonnull %4, %43* nonnull %8)
  br label %19

19:                                               ; preds = %2, %18
  %20 = phi %37* [ %4, %18 ], [ null, %2 ]
  %21 = icmp ne %43* %6, null
  br i1 %21, label %22, label %29

22:                                               ; preds = %19
  %23 = icmp eq i8 %16, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %43, %43* %6, i64 0, i32 0
  %26 = load i16, i16* %25, align 8
  switch i16 %26, label %28 [
    i16 514, label %27
    i16 513, label %27
    i16 512, label %27
    i16 256, label %27
  ]

27:                                               ; preds = %24, %24, %24, %24
  call void @zend_compile_var(%37* nonnull %3, %43* nonnull %6, i32 1)
  br label %29

28:                                               ; preds = %24, %22
  call void @zend_compile_expr(%37* nonnull %3, %43* nonnull %6)
  br label %29

29:                                               ; preds = %27, %28, %19
  %30 = phi %37* [ null, %19 ], [ %3, %28 ], [ %3, %27 ]
  %31 = call fastcc %9* @231(%37* %0, i8 zeroext -96, %37* %30, %37* %20)
  %32 = xor i1 %21, true
  %33 = icmp eq i8 %16, 0
  %34 = or i1 %33, %32
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %43, %43* %6, i64 0, i32 0
  %37 = load i16, i16* %36, align 8
  switch i16 %37, label %40 [
    i16 515, label %38
    i16 768, label %38
    i16 769, label %38
  ]

38:                                               ; preds = %35, %35, %35
  %39 = getelementptr inbounds %9, %9* %31, i64 0, i32 4
  store i32 1, i32* %39, align 4
  br label %40

40:                                               ; preds = %35, %29, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_yield_from(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  tail call fastcc void @260()
  %7 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %8 = getelementptr inbounds %7, %7* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 67108864
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @163, i64 0, i64 0)) #15
  unreachable

13:                                               ; preds = %2
  call void @zend_compile_expr(%37* nonnull %3, %43* %5)
  %14 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %15 = call %9* @get_next_op(%7* %14) #16
  %16 = getelementptr inbounds %9, %9* %15, i64 0, i32 6
  store i8 -114, i8* %16, align 4
  %17 = load i8, i8* %6, align 8
  %18 = getelementptr inbounds %9, %9* %15, i64 0, i32 7
  store i8 %17, i8* %18, align 1
  %19 = icmp eq i8 %17, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %13
  %21 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %22 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %23 = call i32 @zend_add_literal(%7* %21, %2* nonnull %22) #16
  br label %28

24:                                               ; preds = %13
  %25 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %26 = bitcast %38* %25 to i32*
  %27 = load i32, i32* %26, align 8
  br label %28

28:                                               ; preds = %24, %20
  %29 = phi i32 [ %27, %24 ], [ %23, %20 ]
  %30 = getelementptr inbounds %9, %9* %15, i64 0, i32 1, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %9, %9* %15, i64 0, i32 8
  store i8 8, i8* %31, align 2
  call fastcc void @244(%9* nonnull %15) #16
  %32 = icmp eq %37* %0, null
  br i1 %32, label %44, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %9, %9* %15, i64 0, i32 9
  store i8 2, i8* %34, align 1
  %35 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %36 = getelementptr inbounds %7, %7* %35, i64 0, i32 13
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %36, align 4
  %39 = getelementptr inbounds %9, %9* %15, i64 0, i32 3, i32 0
  store i32 %37, i32* %39, align 8
  %40 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %40, align 8
  %41 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %42 = bitcast %38* %41 to i32*
  %43 = load i32, i32* %39, align 8
  store i32 %43, i32* %42, align 8
  br label %44

44:                                               ; preds = %28, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_instanceof(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %2, align 8
  %4 = alloca %2, align 8
  %5 = alloca %37, align 8
  %6 = alloca %37, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %10 = load %43*, %43** %9, align 8
  %11 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  call void @zend_compile_expr(%37* nonnull %5, %43* %8)
  %13 = load i8, i8* %11, align 8
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @164, i64 0, i64 0)) #15
  unreachable

16:                                               ; preds = %2
  call fastcc void @234(%37* nonnull %6, %43* %10, i32 640)
  %17 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %18 = call %9* @get_next_op(%7* %17) #16
  %19 = getelementptr inbounds %9, %9* %18, i64 0, i32 6
  store i8 -118, i8* %19, align 4
  %20 = load i8, i8* %11, align 8
  %21 = getelementptr inbounds %9, %9* %18, i64 0, i32 7
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i8 %20, 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %16
  %24 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %25 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %26 = call i32 @zend_add_literal(%7* %24, %2* nonnull %25) #16
  br label %31

27:                                               ; preds = %16
  %28 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %29 = bitcast %38* %28 to i32*
  %30 = load i32, i32* %29, align 8
  br label %31

31:                                               ; preds = %27, %23
  %32 = phi i32 [ %30, %27 ], [ %26, %23 ]
  %33 = getelementptr inbounds %9, %9* %18, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds %9, %9* %18, i64 0, i32 8
  store i8 8, i8* %34, align 2
  call fastcc void @244(%9* nonnull %18) #16
  %35 = icmp eq %37* %0, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %9, %9* %18, i64 0, i32 9
  store i8 2, i8* %37, align 1
  %38 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %39 = getelementptr inbounds %7, %7* %38, i64 0, i32 13
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %39, align 4
  %42 = getelementptr inbounds %9, %9* %18, i64 0, i32 3, i32 0
  store i32 %40, i32* %42, align 8
  %43 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %43, align 8
  %44 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %45 = bitcast %38* %44 to i32*
  %46 = load i32, i32* %42, align 8
  store i32 %46, i32* %45, align 8
  br label %47

47:                                               ; preds = %31, %36
  %48 = load i8, i8* %12, align 8
  %49 = icmp eq i8 %48, 1
  br i1 %49, label %50, label %88

50:                                               ; preds = %47
  store i8 1, i8* %34, align 2
  %51 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %52 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0, i32 0
  %53 = bitcast %3* %52 to %32**
  %54 = load %32*, %32** %53, align 8
  %55 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #16
  %56 = bitcast %2* %4 to %32**
  store %32* %54, %32** %56, align 8
  %57 = getelementptr inbounds %32, %32* %54, i64 0, i32 0, i32 1
  %58 = bitcast %18* %57 to %64*
  %59 = getelementptr inbounds %64, %64* %58, i64 0, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = and i8 %60, 2
  %62 = icmp eq i8 %61, 0
  %63 = select i1 %62, i32 5126, i32 6
  %64 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %63, i32* %64, align 8
  %65 = call i32 @zend_add_literal(%7* %51, %2* nonnull %4) #16
  %66 = load %32*, %32** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #16
  %67 = call %32* @zend_string_tolower(%32* %66) #16
  %68 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #16
  %69 = bitcast %2* %3 to %32**
  store %32* %67, %32** %69, align 8
  %70 = getelementptr inbounds %32, %32* %67, i64 0, i32 0, i32 1
  %71 = bitcast %18* %70 to %64*
  %72 = getelementptr inbounds %64, %64* %71, i64 0, i32 1
  %73 = load i8, i8* %72, align 1
  %74 = and i8 %73, 2
  %75 = icmp eq i8 %74, 0
  %76 = select i1 %75, i32 5126, i32 6
  %77 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 %76, i32* %77, align 8
  %78 = call i32 @zend_add_literal(%7* %51, %2* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #16
  %79 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %80 = getelementptr inbounds %7, %7* %79, i64 0, i32 27
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %7, %7* %79, i64 0, i32 26
  %83 = load %2*, %2** %82, align 8
  %84 = zext i32 %65 to i64
  %85 = getelementptr inbounds %2, %2* %83, i64 %84, i32 2, i32 0
  store i32 %81, i32* %85, align 4
  %86 = load i32, i32* %80, align 8
  %87 = add i32 %86, 8
  store i32 %87, i32* %80, align 8
  br label %92

88:                                               ; preds = %47
  store i8 %48, i8* %34, align 2
  %89 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %90 = bitcast %38* %89 to i32*
  %91 = load i32, i32* %90, align 8
  br label %92

92:                                               ; preds = %88, %50
  %93 = phi i32 [ %91, %88 ], [ %65, %50 ]
  %94 = getelementptr inbounds %9, %9* %18, i64 0, i32 2, i32 0
  store i32 %93, i32* %94, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_include_or_eval(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %12 = tail call %9* @get_next_op(%7* %11) #16
  %13 = getelementptr inbounds %9, %9* %12, i64 0, i32 6
  store i8 102, i8* %13, align 4
  %14 = getelementptr inbounds %9, %9* %12, i64 0, i32 7
  store i8 8, i8* %14, align 1
  %15 = getelementptr inbounds %9, %9* %12, i64 0, i32 8
  store i8 8, i8* %15, align 2
  br label %16

16:                                               ; preds = %2, %10
  call void @zend_compile_expr(%37* nonnull %3, %43* %5)
  %17 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %18 = call %9* @get_next_op(%7* %17) #16
  %19 = getelementptr inbounds %9, %9* %18, i64 0, i32 6
  store i8 73, i8* %19, align 4
  %20 = load i8, i8* %6, align 8
  %21 = getelementptr inbounds %9, %9* %18, i64 0, i32 7
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i8 %20, 1
  br i1 %22, label %23, label %27

23:                                               ; preds = %16
  %24 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %25 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %26 = call i32 @zend_add_literal(%7* %24, %2* nonnull %25) #16
  br label %31

27:                                               ; preds = %16
  %28 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %29 = bitcast %38* %28 to i32*
  %30 = load i32, i32* %29, align 8
  br label %31

31:                                               ; preds = %27, %23
  %32 = phi i32 [ %30, %27 ], [ %26, %23 ]
  %33 = getelementptr inbounds %9, %9* %18, i64 0, i32 1, i32 0
  store i32 %32, i32* %33, align 8
  %34 = getelementptr inbounds %9, %9* %18, i64 0, i32 8
  store i8 8, i8* %34, align 2
  call fastcc void @244(%9* nonnull %18) #16
  %35 = icmp eq %37* %0, null
  br i1 %35, label %47, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %9, %9* %18, i64 0, i32 9
  store i8 4, i8* %37, align 1
  %38 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %39 = getelementptr inbounds %7, %7* %38, i64 0, i32 13
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %39, align 4
  %42 = getelementptr inbounds %9, %9* %18, i64 0, i32 3, i32 0
  store i32 %40, i32* %42, align 8
  %43 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %43, align 8
  %44 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %45 = bitcast %38* %44 to i32*
  %46 = load i32, i32* %42, align 8
  store i32 %46, i32* %45, align 8
  br label %47

47:                                               ; preds = %31, %36
  %48 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  %51 = getelementptr inbounds %9, %9* %18, i64 0, i32 4
  store i32 %50, i32* %51, align 4
  %52 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %47
  %56 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %57 = call %9* @get_next_op(%7* %56) #16
  %58 = getelementptr inbounds %9, %9* %57, i64 0, i32 6
  store i8 103, i8* %58, align 4
  %59 = getelementptr inbounds %9, %9* %57, i64 0, i32 7
  store i8 8, i8* %59, align 1
  %60 = getelementptr inbounds %9, %9* %57, i64 0, i32 8
  store i8 8, i8* %60, align 2
  br label %61

61:                                               ; preds = %47, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_isset_or_empty(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %37, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %37, %37* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %8 = getelementptr inbounds %43, %43* %5, i64 0, i32 0
  %9 = load i16, i16* %8, align 8
  switch i16 %9, label %10 [
    i16 514, label %137
    i16 513, label %115
    i16 512, label %93
    i16 256, label %16
  ]

10:                                               ; preds = %2
  %11 = load i16, i16* %7, align 8
  %12 = icmp eq i16 %11, 262
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = tail call %43* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 270, i16 zeroext 13, %43* %5) #16
  tail call void @zend_compile_expr(%37* %0, %43* %14)
  br label %150

15:                                               ; preds = %10
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @165, i64 0, i64 0)) #15
  unreachable

16:                                               ; preds = %2
  %17 = getelementptr inbounds %43, %43* %5, i64 0, i32 3, i64 0
  %18 = load %43*, %43** %17, align 8
  %19 = getelementptr inbounds %43, %43* %18, i64 0, i32 0
  %20 = load i16, i16* %19, align 8
  %21 = icmp eq i16 %20, 64
  br i1 %21, label %22, label %56

22:                                               ; preds = %16
  %23 = getelementptr inbounds %43, %43* %18, i64 0, i32 3
  %24 = getelementptr inbounds [1 x %43*], [1 x %43*]* %23, i64 1
  %25 = bitcast [1 x %43*]* %24 to i8*
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 6
  br i1 %27, label %28, label %56

28:                                               ; preds = %22
  %29 = bitcast [1 x %43*]* %23 to %32**
  %30 = load %32*, %32** %29, align 8
  %31 = getelementptr inbounds %32, %32* %30, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 4
  br i1 %33, label %34, label %56

34:                                               ; preds = %28
  %35 = getelementptr inbounds %32, %32* %30, i64 0, i32 3, i64 0
  %36 = tail call i32 @memcmp(i8* nonnull %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @75, i64 0, i64 0), i64 4) #19
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %56

38:                                               ; preds = %34
  %39 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %40 = tail call %9* @get_next_op(%7* %39) #16
  %41 = getelementptr inbounds %9, %9* %40, i64 0, i32 6
  store i8 -70, i8* %41, align 4
  %42 = getelementptr inbounds %9, %9* %40, i64 0, i32 7
  store i8 8, i8* %42, align 1
  %43 = getelementptr inbounds %9, %9* %40, i64 0, i32 8
  store i8 8, i8* %43, align 2
  tail call fastcc void @244(%9* nonnull %40) #16
  %44 = icmp eq %37* %0, null
  br i1 %44, label %140, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %9, %9* %40, i64 0, i32 9
  store i8 4, i8* %46, align 1
  %47 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %48 = getelementptr inbounds %7, %7* %47, i64 0, i32 13
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %48, align 4
  %51 = getelementptr inbounds %9, %9* %40, i64 0, i32 3, i32 0
  store i32 %49, i32* %51, align 8
  %52 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %52, align 8
  %53 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %54 = bitcast %38* %53 to i32*
  %55 = load i32, i32* %51, align 8
  store i32 %55, i32* %54, align 8
  br label %140

56:                                               ; preds = %34, %16, %28, %22
  %57 = call fastcc i32 @245(%37* nonnull %3, %43* nonnull %5)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %90

59:                                               ; preds = %56
  %60 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %61 = tail call %9* @get_next_op(%7* %60) #16
  %62 = getelementptr inbounds %9, %9* %61, i64 0, i32 6
  store i8 -59, i8* %62, align 4
  %63 = load i8, i8* %6, align 8
  %64 = getelementptr inbounds %9, %9* %61, i64 0, i32 7
  store i8 %63, i8* %64, align 1
  %65 = icmp eq i8 %63, 1
  br i1 %65, label %66, label %70

66:                                               ; preds = %59
  %67 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %68 = getelementptr inbounds %37, %37* %3, i64 0, i32 2, i32 0
  %69 = call i32 @zend_add_literal(%7* %67, %2* nonnull %68) #16
  br label %74

70:                                               ; preds = %59
  %71 = getelementptr inbounds %37, %37* %3, i64 0, i32 2
  %72 = bitcast %38* %71 to i32*
  %73 = load i32, i32* %72, align 8
  br label %74

74:                                               ; preds = %70, %66
  %75 = phi i32 [ %73, %70 ], [ %69, %66 ]
  %76 = getelementptr inbounds %9, %9* %61, i64 0, i32 1, i32 0
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %9, %9* %61, i64 0, i32 8
  store i8 8, i8* %77, align 2
  tail call fastcc void @244(%9* nonnull %61) #16
  %78 = icmp eq %37* %0, null
  br i1 %78, label %140, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %9, %9* %61, i64 0, i32 9
  store i8 4, i8* %80, align 1
  %81 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %82 = getelementptr inbounds %7, %7* %81, i64 0, i32 13
  %83 = load i32, i32* %82, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %82, align 4
  %85 = getelementptr inbounds %9, %9* %61, i64 0, i32 3, i32 0
  store i32 %83, i32* %85, align 8
  %86 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 4, i8* %86, align 8
  %87 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %88 = bitcast %38* %87 to i32*
  %89 = load i32, i32* %85, align 8
  store i32 %89, i32* %88, align 8
  br label %140

90:                                               ; preds = %56
  %91 = tail call fastcc %9* @236(%37* %0, %43* nonnull %5, i32 0)
  %92 = getelementptr inbounds %9, %9* %91, i64 0, i32 6
  store i8 114, i8* %92, align 4
  br label %140

93:                                               ; preds = %2
  %94 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %95 = tail call fastcc %9* @235(%37* %0, %43* %5, i32 3) #16
  %96 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %97 = bitcast i8* %96 to %9*
  %98 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %99 = icmp ugt i32 %98, %94
  br i1 %99, label %100, label %112

100:                                              ; preds = %93
  %101 = zext i32 %94 to i64
  %102 = zext i32 %98 to i64
  br label %103

103:                                              ; preds = %103, %100
  %104 = phi i64 [ %101, %100 ], [ %110, %103 ]
  %105 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %106 = tail call %9* @get_next_op(%7* %105) #16
  %107 = bitcast %9* %106 to i8*
  %108 = getelementptr inbounds %9, %9* %97, i64 %104
  %109 = bitcast %9* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %109, i64 32, i1 false) #16
  tail call fastcc void @244(%9* %106) #16
  %110 = add nuw nsw i64 %104, 1
  %111 = icmp eq i64 %110, %102
  br i1 %111, label %112, label %103

112:                                              ; preds = %103, %93
  %113 = phi %9* [ null, %93 ], [ %106, %103 ]
  store i32 %94, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %114 = getelementptr inbounds %9, %9* %113, i64 0, i32 6
  store i8 115, i8* %114, align 4
  br label %140

115:                                              ; preds = %2
  %116 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %117 = tail call fastcc %9* @237(%37* %0, %43* %5, i32 3) #16
  %118 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %119 = bitcast i8* %118 to %9*
  %120 = tail call i32 @zend_stack_count(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32)) #16
  %121 = icmp ugt i32 %120, %116
  br i1 %121, label %122, label %134

122:                                              ; preds = %115
  %123 = zext i32 %116 to i64
  %124 = zext i32 %120 to i64
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi i64 [ %123, %122 ], [ %132, %125 ]
  %127 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %128 = tail call %9* @get_next_op(%7* %127) #16
  %129 = bitcast %9* %128 to i8*
  %130 = getelementptr inbounds %9, %9* %119, i64 %126
  %131 = bitcast %9* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %131, i64 32, i1 false) #16
  tail call fastcc void @244(%9* %128) #16
  %132 = add nuw nsw i64 %126, 1
  %133 = icmp eq i64 %132, %124
  br i1 %133, label %134, label %125

134:                                              ; preds = %125, %115
  %135 = phi %9* [ null, %115 ], [ %128, %125 ]
  store i32 %116, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 32, i32 1), align 4
  %136 = getelementptr inbounds %9, %9* %135, i64 0, i32 6
  store i8 -108, i8* %136, align 4
  br label %140

137:                                              ; preds = %2
  %138 = tail call %9* @zend_compile_static_prop_common(%37* %0, %43* %5, i32 undef, i32 0)
  %139 = getelementptr inbounds %9, %9* %138, i64 0, i32 6
  store i8 -76, i8* %139, align 4
  br label %140

140:                                              ; preds = %79, %74, %45, %38, %90, %137, %134, %112
  %141 = phi %9* [ %138, %137 ], [ %135, %134 ], [ %113, %112 ], [ %91, %90 ], [ %40, %38 ], [ %40, %45 ], [ %61, %74 ], [ %61, %79 ]
  %142 = getelementptr inbounds %9, %9* %141, i64 0, i32 9
  store i8 2, i8* %142, align 1
  %143 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %143, align 8
  %144 = load i16, i16* %7, align 8
  %145 = icmp eq i16 %144, 263
  %146 = select i1 %145, i32 33554432, i32 16777216
  %147 = getelementptr inbounds %9, %9* %141, i64 0, i32 4
  %148 = load i32, i32* %147, align 4
  %149 = or i32 %146, %148
  store i32 %149, i32* %147, align 4
  br label %150

150:                                              ; preds = %140, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void
}

declare dso_local %43* @zend_ast_create_ex(i16 zeroext, i16 zeroext, ...) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_silence(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %4 = load %43*, %43** %3, align 8
  %5 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %6 = tail call i32 @get_next_op_number(%7* %5) #16
  %7 = getelementptr inbounds %7, %7* %5, i64 0, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %7, %7* %5, i64 0, i32 17
  %11 = bitcast %11** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %9 to i64
  %14 = mul nsw i64 %13, 12
  %15 = tail call i8* @_erealloc(i8* %12, i64 %14) #18
  %16 = bitcast i8* %15 to %11*
  store i8* %15, i8** %11, align 8
  %17 = load i32, i32* %7, align 8
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %11, %11* %16, i64 %18
  %20 = getelementptr inbounds %11, %11* %19, i64 -1
  %21 = getelementptr inbounds %11, %11* %20, i64 0, i32 1
  store i32 %6, i32* %21, align 4
  %22 = add nsw i32 %17, -1
  %23 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %24 = tail call %9* @get_next_op(%7* %23) #16
  %25 = getelementptr inbounds %9, %9* %24, i64 0, i32 6
  store i8 57, i8* %25, align 4
  %26 = getelementptr inbounds %9, %9* %24, i64 0, i32 7
  store i8 8, i8* %26, align 1
  %27 = getelementptr inbounds %9, %9* %24, i64 0, i32 8
  store i8 8, i8* %27, align 2
  tail call fastcc void @244(%9* nonnull %24) #16
  %28 = getelementptr inbounds %9, %9* %24, i64 0, i32 9
  store i8 2, i8* %28, align 1
  %29 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %30 = getelementptr inbounds %7, %7* %29, i64 0, i32 13
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 4
  %33 = getelementptr inbounds %9, %9* %24, i64 0, i32 3, i32 0
  store i32 %31, i32* %33, align 8
  %34 = getelementptr inbounds %43, %43* %4, i64 0, i32 0
  %35 = load i16, i16* %34, align 8
  %36 = icmp eq i16 %35, 256
  br i1 %36, label %37, label %39

37:                                               ; preds = %2
  %38 = tail call fastcc %9* @236(%37* %0, %43* %4, i32 0)
  br label %40

39:                                               ; preds = %2
  tail call void @zend_compile_expr(%37* %0, %43* %4)
  br label %40

40:                                               ; preds = %39, %37
  %41 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %42 = tail call i32 @get_next_op_number(%7* %41) #16
  %43 = getelementptr inbounds %7, %7* %41, i64 0, i32 17
  %44 = load %11*, %11** %43, align 8
  %45 = zext i32 %22 to i64
  %46 = getelementptr inbounds %11, %11* %44, i64 %45, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %42
  br i1 %48, label %49, label %54

49:                                               ; preds = %40
  %50 = getelementptr inbounds %7, %7* %41, i64 0, i32 15
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, %17
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  store i32 %22, i32* %50, align 8
  br label %59

54:                                               ; preds = %49, %40
  %55 = getelementptr inbounds %11, %11* %44, i64 %45, i32 2
  store i32 %42, i32* %55, align 4
  %56 = shl i32 %31, 4
  %57 = or i32 %56, 2
  %58 = getelementptr inbounds %11, %11* %44, i64 %45, i32 0
  store i32 %57, i32* %58, align 4
  br label %59

59:                                               ; preds = %53, %54
  %60 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %61 = tail call %9* @get_next_op(%7* %60) #16
  %62 = getelementptr inbounds %9, %9* %61, i64 0, i32 6
  store i8 58, i8* %62, align 4
  %63 = getelementptr inbounds %9, %9* %61, i64 0, i32 7
  store i8 2, i8* %63, align 1
  %64 = getelementptr inbounds %9, %9* %61, i64 0, i32 1, i32 0
  store i32 %31, i32* %64, align 8
  %65 = getelementptr inbounds %9, %9* %61, i64 0, i32 8
  store i8 8, i8* %65, align 2
  tail call fastcc void @244(%9* nonnull %61) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_shell_exec(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca %2, align 8
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  %7 = tail call noalias i8* @_emalloc(i64 40) #17
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 4
  %10 = bitcast i8* %9 to i32*
  store i32 6, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 0, i64 10>, <2 x i64>* %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @166, i64 0, i64 0), i64 10, i1 false) #16
  %14 = getelementptr inbounds i8, i8* %7, i64 34
  store i8 0, i8* %14, align 1
  %15 = bitcast %2* %3 to i8**
  store i8* %7, i8** %15, align 8
  %16 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 5126, i32* %16, align 8
  %17 = call %43* @zend_ast_create_zval_ex(%2* nonnull %3, i16 zeroext 0) #16
  %18 = call %43* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 128, %43* %5) #16
  %19 = call %43* (i16, ...) @zend_ast_create(i16 zeroext 515, %43* %17, %43* %18) #16
  call void @zend_compile_expr(%37* %0, %43* %19)
  call void @_zval_ptr_dtor(%2* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret void
}

; Function Attrs: argmemonly nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_array(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %37, align 8
  %5 = alloca %37, align 8
  %6 = bitcast %43* %1 to %69*
  %7 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %8 = getelementptr inbounds %38, %38* %7, i64 0, i32 0
  %9 = tail call fastcc zeroext i8 @253(%2* nonnull %8, %43* %1)
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %31

11:                                               ; preds = %2
  %12 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %13 = bitcast [1 x %43*]* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %171, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %37, %37* %4, i64 0, i32 0
  %18 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  %19 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0
  %20 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 1
  %21 = bitcast %4* %20 to i8*
  %22 = bitcast i64* %3 to i8*
  %23 = bitcast %2* %19 to %32**
  %24 = getelementptr inbounds %37, %37* %4, i64 0, i32 2, i32 0
  %25 = getelementptr inbounds %37, %37* %4, i64 0, i32 2
  %26 = bitcast %38* %25 to i32*
  %27 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %28 = getelementptr inbounds %2, %2* %19, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 1, i32 0
  %30 = bitcast %38* %7 to i32*
  br label %33

31:                                               ; preds = %2
  %32 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %32, align 8
  br label %171

33:                                               ; preds = %16, %155
  %34 = phi i64 [ 0, %16 ], [ %157, %155 ]
  %35 = phi i32 [ -1, %16 ], [ %141, %155 ]
  %36 = phi i8 [ 1, %16 ], [ %156, %155 ]
  %37 = getelementptr inbounds %69, %69* %6, i64 0, i32 4, i64 %34
  %38 = load %43*, %43** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #16
  %39 = icmp eq %43* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %33
  call void (i32, i8*, ...) @zend_error(i32 64, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @167, i64 0, i64 0)) #16
  br label %41

41:                                               ; preds = %40, %33
  %42 = getelementptr inbounds %43, %43* %38, i64 0, i32 3, i64 0
  %43 = load %43*, %43** %42, align 8
  %44 = getelementptr inbounds %43, %43* %38, i64 0, i32 3, i64 1
  %45 = load %43*, %43** %44, align 8
  %46 = getelementptr inbounds %43, %43* %38, i64 0, i32 1
  %47 = load i16, i16* %46, align 2
  %48 = trunc i16 %47 to i8
  %49 = icmp ne %43* %45, null
  br i1 %49, label %50, label %78

50:                                               ; preds = %41
  call void @zend_compile_expr(%37* nonnull %5, %43* nonnull %45)
  %51 = load i8, i8* %18, align 8
  %52 = icmp eq i8 %51, 1
  %53 = load i8, i8* %21, align 8
  %54 = icmp eq i8 %53, 6
  %55 = and i1 %52, %54
  br i1 %55, label %56, label %78

56:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %57 = load %32*, %32** %23, align 8
  %58 = getelementptr inbounds %32, %32* %57, i64 0, i32 3, i64 0
  %59 = getelementptr inbounds %32, %32* %57, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = load i8, i8* %58, align 1
  %62 = icmp sgt i8 %61, 57
  br i1 %62, label %77, label %63

63:                                               ; preds = %56
  %64 = icmp slt i8 %61, 48
  br i1 %64, label %65, label %72

65:                                               ; preds = %63
  %66 = icmp eq i8 %61, 45
  br i1 %66, label %67, label %77

67:                                               ; preds = %65
  %68 = getelementptr inbounds %32, %32* %57, i64 0, i32 3, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = add i8 %69, -48
  %71 = icmp ugt i8 %70, 9
  br i1 %71, label %77, label %72

72:                                               ; preds = %67, %63
  %73 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %58, i64 %60, i64* nonnull %3) #16
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  call void @_zval_ptr_dtor(%2* nonnull %19) #16
  %76 = load i64, i64* %3, align 8
  store i64 %76, i64* %28, align 8
  store i32 4, i32* %29, align 8
  br label %77

77:                                               ; preds = %75, %72, %67, %65, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br label %78

78:                                               ; preds = %77, %50, %41
  %79 = phi %37* [ null, %41 ], [ %5, %50 ], [ %5, %77 ]
  %80 = icmp eq i8 %48, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %43, %43* %43, i64 0, i32 0
  %83 = load i16, i16* %82, align 8
  switch i16 %83, label %86 [
    i16 515, label %84
    i16 768, label %85
    i16 769, label %85
  ]

84:                                               ; preds = %81
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @191, i64 0, i64 0)) #15
  unreachable

85:                                               ; preds = %81, %81
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @192, i64 0, i64 0)) #15
  unreachable

86:                                               ; preds = %81
  call void @zend_compile_var(%37* nonnull %4, %43* nonnull %43, i32 1)
  br label %88

87:                                               ; preds = %78
  call void @zend_compile_expr(%37* nonnull %4, %43* %43)
  br label %88

88:                                               ; preds = %87, %86
  %89 = icmp eq i64 %34, 0
  %90 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  br i1 %89, label %91, label %97

91:                                               ; preds = %88
  %92 = call i32 @get_next_op_number(%7* %90) #16
  %93 = call fastcc %9* @240(%37* %0, i8 zeroext 71, %37* nonnull %4, %37* %79)
  %94 = load i32, i32* %13, align 8
  %95 = shl i32 %94, 2
  %96 = getelementptr inbounds %9, %9* %93, i64 0, i32 4
  store i32 %95, i32* %96, align 4
  br label %140

97:                                               ; preds = %88
  %98 = call %9* @get_next_op(%7* %90) #16
  %99 = getelementptr inbounds %9, %9* %98, i64 0, i32 6
  store i8 72, i8* %99, align 4
  %100 = load i8, i8* %17, align 8
  %101 = getelementptr inbounds %9, %9* %98, i64 0, i32 7
  store i8 %100, i8* %101, align 1
  %102 = icmp eq i8 %100, 1
  br i1 %102, label %103, label %106

103:                                              ; preds = %97
  %104 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %105 = call i32 @zend_add_literal(%7* %104, %2* nonnull %24) #16
  br label %108

106:                                              ; preds = %97
  %107 = load i32, i32* %26, align 8
  br label %108

108:                                              ; preds = %106, %103
  %109 = phi i32 [ %107, %106 ], [ %105, %103 ]
  %110 = getelementptr inbounds %9, %9* %98, i64 0, i32 1, i32 0
  store i32 %109, i32* %110, align 8
  %111 = icmp eq %37* %79, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = getelementptr inbounds %9, %9* %98, i64 0, i32 8
  store i8 8, i8* %113, align 2
  br label %129

114:                                              ; preds = %108
  %115 = getelementptr inbounds %37, %37* %79, i64 0, i32 0
  %116 = load i8, i8* %115, align 8
  %117 = getelementptr inbounds %9, %9* %98, i64 0, i32 8
  store i8 %116, i8* %117, align 2
  %118 = icmp eq i8 %116, 1
  br i1 %118, label %119, label %124

119:                                              ; preds = %114
  %120 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %121 = getelementptr inbounds %37, %37* %79, i64 0, i32 2, i32 0
  %122 = call i32 @zend_add_literal(%7* %120, %2* nonnull %121) #16
  %123 = getelementptr inbounds %9, %9* %98, i64 0, i32 2, i32 0
  store i32 %122, i32* %123, align 4
  br label %129

124:                                              ; preds = %114
  %125 = getelementptr inbounds %37, %37* %79, i64 0, i32 2
  %126 = bitcast %38* %125 to i32*
  %127 = getelementptr inbounds %9, %9* %98, i64 0, i32 2, i32 0
  %128 = load i32, i32* %126, align 8
  store i32 %128, i32* %127, align 4
  br label %129

129:                                              ; preds = %112, %119, %124
  call fastcc void @244(%9* nonnull %98) #16
  %130 = load i8, i8* %27, align 8
  %131 = getelementptr inbounds %9, %9* %98, i64 0, i32 9
  store i8 %130, i8* %131, align 1
  %132 = icmp eq i8 %130, 1
  br i1 %132, label %133, label %137

133:                                              ; preds = %129
  %134 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %135 = call i32 @zend_add_literal(%7* %134, %2* nonnull %8)
  %136 = getelementptr inbounds %9, %9* %98, i64 0, i32 3, i32 0
  store i32 %135, i32* %136, align 8
  br label %140

137:                                              ; preds = %129
  %138 = getelementptr inbounds %9, %9* %98, i64 0, i32 3, i32 0
  %139 = load i32, i32* %30, align 8
  store i32 %139, i32* %138, align 8
  br label %140

140:                                              ; preds = %133, %137, %91
  %141 = phi i32 [ %92, %91 ], [ %35, %133 ], [ %35, %137 ]
  %142 = phi %9* [ %93, %91 ], [ %98, %133 ], [ %98, %137 ]
  %143 = and i16 %47, 255
  %144 = zext i16 %143 to i32
  %145 = getelementptr inbounds %9, %9* %142, i64 0, i32 4
  %146 = load i32, i32* %145, align 4
  %147 = or i32 %146, %144
  store i32 %147, i32* %145, align 4
  %148 = load i8, i8* %18, align 8
  %149 = icmp eq i8 %148, 1
  %150 = and i1 %49, %149
  br i1 %150, label %151, label %155

151:                                              ; preds = %140
  %152 = load i8, i8* %21, align 8
  %153 = icmp eq i8 %152, 6
  %154 = select i1 %153, i8 0, i8 %36
  br label %155

155:                                              ; preds = %151, %140
  %156 = phi i8 [ %36, %140 ], [ %154, %151 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #16
  %157 = add nuw nsw i64 %34, 1
  %158 = load i32, i32* %13, align 8
  %159 = zext i32 %158 to i64
  %160 = icmp ult i64 %157, %159
  br i1 %160, label %33, label %161

161:                                              ; preds = %155
  %162 = icmp eq i8 %156, 0
  br i1 %162, label %163, label %171

163:                                              ; preds = %161
  %164 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %165 = getelementptr inbounds %7, %7* %164, i64 0, i32 11
  %166 = load %9*, %9** %165, align 8
  %167 = zext i32 %141 to i64
  %168 = getelementptr inbounds %9, %9* %166, i64 %167, i32 4
  %169 = load i32, i32* %168, align 4
  %170 = or i32 %169, 2
  store i32 %170, i32* %168, align 4
  br label %171

171:                                              ; preds = %11, %163, %161, %31
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @253(%2* %0, %43* nocapture readonly %1) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast %43* %1 to %69*
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %6 = load i16, i16* %5, align 2
  %7 = icmp eq i16 %6, 1
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void (i32, i8*, ...) @zend_error(i32 64, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @225, i64 0, i64 0)) #16
  br label %9

9:                                                ; preds = %8, %2
  %10 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %11 = bitcast [1 x %43*]* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %61, label %14

14:                                               ; preds = %9, %53
  %15 = phi i64 [ %55, %53 ], [ 0, %9 ]
  %16 = phi %43* [ %19, %53 ], [ null, %9 ]
  %17 = phi i8 [ %54, %53 ], [ 1, %9 ]
  %18 = getelementptr inbounds %69, %69* %4, i64 0, i32 4, i64 %15
  %19 = load %43*, %43** %18, align 8
  %20 = icmp eq %43* %19, null
  br i1 %20, label %21, label %34

21:                                               ; preds = %14
  %22 = icmp eq %43* %16, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %43, %43* %16, i64 0, i32 0
  %25 = load i16, i16* %24, align 8
  %26 = icmp eq i16 %25, 64
  %27 = getelementptr inbounds %43, %43* %16, i64 0, i32 3
  %28 = bitcast [1 x %43*]* %27 to %2*
  %29 = getelementptr inbounds %2, %2* %28, i64 0, i32 2, i32 0
  %30 = getelementptr inbounds %43, %43* %16, i64 0, i32 2
  %31 = select i1 %26, i32* %29, i32* %30
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 3), align 8
  br label %33

33:                                               ; preds = %21, %23
  tail call void (i32, i8*, ...) @zend_error(i32 64, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @167, i64 0, i64 0)) #16
  br label %34

34:                                               ; preds = %33, %14
  %35 = getelementptr inbounds %43, %43* %19, i64 0, i32 3, i64 0
  tail call void @zend_eval_const_expr(%43** nonnull %35)
  %36 = getelementptr inbounds %43, %43* %19, i64 0, i32 3, i64 1
  tail call void @zend_eval_const_expr(%43** nonnull %36)
  %37 = getelementptr inbounds %43, %43* %19, i64 0, i32 1
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %34
  %41 = load %43*, %43** %35, align 8
  %42 = getelementptr inbounds %43, %43* %41, i64 0, i32 0
  %43 = load i16, i16* %42, align 8
  %44 = icmp eq i16 %43, 64
  br i1 %44, label %45, label %52

45:                                               ; preds = %40
  %46 = load %43*, %43** %36, align 8
  %47 = icmp eq %43* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %43, %43* %46, i64 0, i32 0
  %50 = load i16, i16* %49, align 8
  %51 = icmp eq i16 %50, 64
  br i1 %51, label %53, label %52

52:                                               ; preds = %48, %40, %34
  br label %53

53:                                               ; preds = %48, %45, %52
  %54 = phi i8 [ 0, %52 ], [ %17, %48 ], [ %17, %45 ]
  %55 = add nuw nsw i64 %15, 1
  %56 = load i32, i32* %11, align 8
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %14, label %59

59:                                               ; preds = %53
  %60 = icmp eq i8 %54, 0
  br i1 %60, label %186, label %61

61:                                               ; preds = %9, %59
  %62 = phi i32 [ %56, %59 ], [ 0, %9 ]
  %63 = tail call i32 @_array_init(%2* %0, i32 %62) #16
  %64 = load i32, i32* %11, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %186, label %66

66:                                               ; preds = %61
  %67 = bitcast %2* %0 to %39**
  %68 = bitcast i64* %3 to i8*
  br label %69

69:                                               ; preds = %66, %181
  %70 = phi i64 [ 0, %66 ], [ %182, %181 ]
  %71 = getelementptr inbounds %69, %69* %4, i64 0, i32 4, i64 %70
  %72 = load %43*, %43** %71, align 8
  %73 = getelementptr inbounds %43, %43* %72, i64 0, i32 3, i64 0
  %74 = load %43*, %43** %73, align 8
  %75 = getelementptr inbounds %43, %43* %72, i64 0, i32 3, i64 1
  %76 = load %43*, %43** %75, align 8
  %77 = getelementptr inbounds %43, %43* %74, i64 0, i32 3
  %78 = bitcast [1 x %43*]* %77 to %2*
  %79 = getelementptr inbounds [1 x %43*], [1 x %43*]* %77, i64 1
  %80 = bitcast [1 x %43*]* %79 to %65*
  %81 = getelementptr inbounds %65, %65* %80, i64 0, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = and i8 %82, 4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %69
  %86 = bitcast [1 x %43*]* %77 to %66**
  %87 = load %66*, %66** %86, align 8
  %88 = getelementptr inbounds %66, %66* %87, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %88, align 4
  br label %91

91:                                               ; preds = %69, %85
  %92 = icmp eq %43* %76, null
  br i1 %92, label %161, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %43, %43* %76, i64 0, i32 3
  %95 = getelementptr inbounds [1 x %43*], [1 x %43*]* %94, i64 1
  %96 = bitcast [1 x %43*]* %95 to i8*
  %97 = load i8, i8* %96, align 8
  switch i8 %97, label %160 [
    i8 4, label %98
    i8 6, label %103
    i8 5, label %130
    i8 2, label %150
    i8 3, label %153
    i8 1, label %156
  ]

98:                                               ; preds = %93
  %99 = load %39*, %39** %67, align 8
  %100 = bitcast [1 x %43*]* %94 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = call %2* @_zend_hash_index_update(%39* %99, i64 %101, %2* nonnull %78) #16
  br label %181

103:                                              ; preds = %93
  %104 = load %39*, %39** %67, align 8
  %105 = bitcast [1 x %43*]* %94 to %32**
  %106 = load %32*, %32** %105, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #16
  %107 = getelementptr inbounds %32, %32* %106, i64 0, i32 3, i64 0
  %108 = getelementptr inbounds %32, %32* %106, i64 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = load i8, i8* %107, align 1
  %111 = icmp sgt i8 %110, 57
  br i1 %111, label %127, label %112

112:                                              ; preds = %103
  %113 = icmp slt i8 %110, 48
  br i1 %113, label %114, label %121

114:                                              ; preds = %112
  %115 = icmp eq i8 %110, 45
  br i1 %115, label %116, label %127

116:                                              ; preds = %114
  %117 = getelementptr inbounds %32, %32* %106, i64 0, i32 3, i64 1
  %118 = load i8, i8* %117, align 1
  %119 = add i8 %118, -48
  %120 = icmp ugt i8 %119, 9
  br i1 %120, label %127, label %121

121:                                              ; preds = %116, %112
  %122 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %107, i64 %109, i64* nonnull %3) #16
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  %125 = load i64, i64* %3, align 8
  %126 = call %2* @_zend_hash_index_update(%39* %104, i64 %125, %2* nonnull %78) #16
  br label %129

127:                                              ; preds = %121, %116, %114, %103
  %128 = call %2* @_zend_hash_update(%39* %104, %32* nonnull %106, %2* nonnull %78) #16
  br label %129

129:                                              ; preds = %124, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #16
  br label %181

130:                                              ; preds = %93
  %131 = load %39*, %39** %67, align 8
  %132 = bitcast [1 x %43*]* %94 to double*
  %133 = load double, double* %132, align 8
  %134 = call double @llvm.fabs.f64(double %133) #20
  %135 = fcmp ueq double %134, 0x7FF0000000000000
  br i1 %135, label %147, label %136

136:                                              ; preds = %130
  %137 = call i32 @__isnan(double %133) #20
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %147

139:                                              ; preds = %136
  %140 = fcmp oge double %133, 0x43E0000000000000
  %141 = fcmp olt double %133, 0xC3E0000000000000
  %142 = or i1 %140, %141
  br i1 %142, label %143, label %145

143:                                              ; preds = %139
  %144 = call i64 @zend_dval_to_lval_slow(double %133) #16
  br label %147

145:                                              ; preds = %139
  %146 = fptosi double %133 to i64
  br label %147

147:                                              ; preds = %130, %136, %143, %145
  %148 = phi i64 [ %144, %143 ], [ %146, %145 ], [ 0, %136 ], [ 0, %130 ]
  %149 = call %2* @_zend_hash_index_update(%39* %131, i64 %148, %2* nonnull %78) #16
  br label %181

150:                                              ; preds = %93
  %151 = load %39*, %39** %67, align 8
  %152 = call %2* @_zend_hash_index_update(%39* %151, i64 0, %2* nonnull %78) #16
  br label %181

153:                                              ; preds = %93
  %154 = load %39*, %39** %67, align 8
  %155 = call %2* @_zend_hash_index_update(%39* %154, i64 1, %2* nonnull %78) #16
  br label %181

156:                                              ; preds = %93
  %157 = load %39*, %39** %67, align 8
  %158 = load %32*, %32** @zend_empty_string, align 8
  %159 = call %2* @_zend_hash_update(%39* %157, %32* %158, %2* nonnull %78) #16
  br label %181

160:                                              ; preds = %93
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @226, i64 0, i64 0)) #15
  unreachable

161:                                              ; preds = %91
  %162 = load %39*, %39** %67, align 8
  %163 = call %2* @_zend_hash_next_index_insert(%39* %162, %2* nonnull %78) #16
  %164 = icmp eq %2* %163, null
  br i1 %164, label %165, label %181

165:                                              ; preds = %161
  %166 = bitcast [1 x %43*]* %79 to %65*
  %167 = getelementptr inbounds %65, %65* %166, i64 0, i32 1
  %168 = load i8, i8* %167, align 1
  %169 = and i8 %168, 4
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %180, label %171

171:                                              ; preds = %165
  %172 = bitcast [1 x %43*]* %77 to %66**
  %173 = load %66*, %66** %172, align 8
  %174 = getelementptr inbounds %66, %66* %173, i64 0, i32 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = add i32 %175, -1
  store i32 %176, i32* %174, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %171
  %179 = load %66*, %66** %172, align 8
  call void @_zval_dtor_func(%66* %179) #16
  br label %180

180:                                              ; preds = %165, %171, %178
  call void @_zval_ptr_dtor(%2* nonnull %0) #16
  br label %186

181:                                              ; preds = %98, %129, %147, %150, %153, %156, %161
  %182 = add nuw nsw i64 %70, 1
  %183 = load i32, i32* %11, align 8
  %184 = zext i32 %183 to i64
  %185 = icmp ult i64 %182, %184
  br i1 %185, label %69, label %186

186:                                              ; preds = %181, %61, %180, %59
  %187 = phi i8 [ 0, %59 ], [ 0, %180 ], [ 1, %61 ], [ 1, %181 ]
  ret i8 %187
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_const(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #16
  %6 = getelementptr inbounds %43, %43* %5, i64 0, i32 3
  %7 = bitcast [1 x %43*]* %6 to %32**
  %8 = load %32*, %32** %7, align 8
  %9 = getelementptr inbounds %43, %43* %5, i64 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), align 8
  %13 = call %32* @zend_resolve_non_class_name(%32* %8, i32 %11, i8* nonnull %3, i8 zeroext 1, %39* %12) #16
  %14 = getelementptr inbounds %32, %32* %13, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 24
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = getelementptr inbounds %32, %32* %13, i64 0, i32 3, i64 0
  %19 = tail call i32 @memcmp(i8* nonnull %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @168, i64 0, i64 0), i64 24) #19
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %17, %2
  %22 = load i16, i16* %9, align 2
  %23 = icmp eq i16 %22, 2
  br i1 %23, label %77, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %32, %32* %8, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 24
  br i1 %27, label %28, label %77

28:                                               ; preds = %24
  %29 = getelementptr inbounds %32, %32* %8, i64 0, i32 3, i64 0
  %30 = tail call i32 @memcmp(i8* nonnull %29, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @168, i64 0, i64 0), i64 24) #19
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %77

32:                                               ; preds = %17, %28
  %33 = load %43*, %43** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 30), align 8
  %34 = icmp eq %43* %33, null
  br i1 %34, label %77, label %35

35:                                               ; preds = %32, %44
  %36 = phi %43* [ %49, %44 ], [ %33, %32 ]
  %37 = getelementptr inbounds %43, %43* %36, i64 0, i32 0
  %38 = load i16, i16* %37, align 8
  switch i16 %38, label %77 [
    i16 132, label %39
    i16 281, label %51
  ]

39:                                               ; preds = %35
  %40 = getelementptr inbounds %43, %43* %36, i64 0, i32 3
  %41 = bitcast [1 x %43*]* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %77, label %44

44:                                               ; preds = %39
  %45 = bitcast %43* %36 to %69*
  %46 = add i32 %42, -1
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %69, %69* %45, i64 0, i32 4, i64 %47
  %49 = load %43*, %43** %48, align 8
  %50 = icmp eq %43* %49, null
  br i1 %50, label %77, label %35

51:                                               ; preds = %35
  %52 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %52, align 8
  %53 = getelementptr inbounds %43, %43* %36, i64 0, i32 3, i64 0
  %54 = load %43*, %43** %53, align 8
  %55 = getelementptr inbounds %43, %43* %54, i64 0, i32 3
  %56 = bitcast [1 x %43*]* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 4, i32* %59, align 8
  %60 = getelementptr inbounds %32, %32* %13, i64 0, i32 0, i32 1
  %61 = bitcast %18* %60 to %64*
  %62 = getelementptr inbounds %64, %64* %61, i64 0, i32 1
  %63 = load i8, i8* %62, align 1
  %64 = and i8 %63, 2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %142

66:                                               ; preds = %51
  %67 = getelementptr inbounds %32, %32* %13, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = add i32 %68, -1
  store i32 %69, i32* %67, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %142

71:                                               ; preds = %66
  %72 = and i8 %63, 1
  %73 = icmp eq i8 %72, 0
  %74 = bitcast %32* %13 to i8*
  br i1 %73, label %76, label %75

75:                                               ; preds = %71
  tail call void @free(i8* %74) #16
  br label %142

76:                                               ; preds = %71
  tail call void @_efree(i8* %74) #16
  br label %142

77:                                               ; preds = %39, %44, %35, %32, %28, %21, %24
  %78 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %79 = load i8, i8* %3, align 1
  %80 = tail call fastcc zeroext i8 @241(%2* nonnull %78, %32* %13, i8 zeroext %79)
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %101, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %83, align 8
  %84 = getelementptr inbounds %32, %32* %13, i64 0, i32 0, i32 1
  %85 = bitcast %18* %84 to %64*
  %86 = getelementptr inbounds %64, %64* %85, i64 0, i32 1
  %87 = load i8, i8* %86, align 1
  %88 = and i8 %87, 2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %142

90:                                               ; preds = %82
  %91 = getelementptr inbounds %32, %32* %13, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, -1
  store i32 %93, i32* %91, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %142

95:                                               ; preds = %90
  %96 = and i8 %87, 1
  %97 = icmp eq i8 %96, 0
  %98 = bitcast %32* %13 to i8*
  br i1 %97, label %100, label %99

99:                                               ; preds = %95
  tail call void @free(i8* %98) #16
  br label %142

100:                                              ; preds = %95
  tail call void @_efree(i8* %98) #16
  br label %142

101:                                              ; preds = %77
  %102 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %103 = tail call %9* @get_next_op(%7* %102) #16
  %104 = getelementptr inbounds %9, %9* %103, i64 0, i32 6
  store i8 99, i8* %104, align 4
  %105 = getelementptr inbounds %9, %9* %103, i64 0, i32 7
  store i8 8, i8* %105, align 1
  %106 = getelementptr inbounds %9, %9* %103, i64 0, i32 8
  store i8 8, i8* %106, align 2
  tail call fastcc void @244(%9* nonnull %103) #16
  %107 = icmp eq %37* %0, null
  br i1 %107, label %119, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds %9, %9* %103, i64 0, i32 9
  store i8 2, i8* %109, align 1
  %110 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %111 = getelementptr inbounds %7, %7* %110, i64 0, i32 13
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %9, %9* %103, i64 0, i32 3, i32 0
  store i32 %112, i32* %114, align 8
  %115 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %115, align 8
  %116 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %117 = bitcast %38* %116 to i32*
  %118 = load i32, i32* %114, align 8
  store i32 %118, i32* %117, align 8
  br label %119

119:                                              ; preds = %101, %108
  store i8 1, i8* %106, align 2
  %120 = icmp eq i8 %79, 0
  br i1 %120, label %121, label %128

121:                                              ; preds = %119
  %122 = getelementptr inbounds %9, %9* %103, i64 0, i32 4
  store i32 16, i32* %122, align 4
  %123 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %124 = icmp eq %32* %123, null
  %125 = select i1 %124, i32 16, i32 272
  store i32 %125, i32* %122, align 4
  %126 = xor i1 %124, true
  %127 = zext i1 %126 to i8
  br label %128

128:                                              ; preds = %121, %119
  %129 = phi i8 [ 0, %119 ], [ %127, %121 ]
  %130 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %131 = tail call fastcc i32 @254(%7* %130, %32* %13, i8 zeroext %129)
  %132 = getelementptr inbounds %9, %9* %103, i64 0, i32 2, i32 0
  store i32 %131, i32* %132, align 4
  %133 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %134 = getelementptr inbounds %7, %7* %133, i64 0, i32 27
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %7, %7* %133, i64 0, i32 26
  %137 = load %2*, %2** %136, align 8
  %138 = zext i32 %131 to i64
  %139 = getelementptr inbounds %2, %2* %137, i64 %138, i32 2, i32 0
  store i32 %135, i32* %139, align 4
  %140 = load i32, i32* %134, align 8
  %141 = add i32 %140, 8
  store i32 %141, i32* %134, align 8
  br label %142

142:                                              ; preds = %100, %99, %90, %82, %76, %75, %66, %51, %128
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @254(%7* nocapture %0, %32* %1, i8 zeroext %2) unnamed_addr #0 {
  %4 = alloca %2, align 8
  %5 = alloca %2, align 8
  %6 = alloca %2, align 8
  %7 = alloca %2, align 8
  %8 = alloca %2, align 8
  %9 = bitcast %2* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = bitcast %2* %8 to %32**
  store %32* %1, %32** %10, align 8
  %11 = getelementptr inbounds %32, %32* %1, i64 0, i32 0, i32 1
  %12 = bitcast %18* %11 to %64*
  %13 = getelementptr inbounds %64, %64* %12, i64 0, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, 2
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i32 5126, i32 6
  %18 = getelementptr inbounds %2, %2* %8, i64 0, i32 1, i32 0
  store i32 %17, i32* %18, align 8
  %19 = call i32 @zend_add_literal(%7* %0, %2* nonnull %8) #16
  %20 = load %32*, %32** %10, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  %21 = getelementptr inbounds %32, %32* %20, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %32, %32* %20, i64 0, i32 3, i64 0
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %76, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %32, %32* %20, i64 0, i32 3, i64 %22
  br label %27

27:                                               ; preds = %31, %25
  %28 = phi i8* [ %26, %25 ], [ %29, %31 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 -1
  %30 = icmp ult i8* %29, %23
  br i1 %30, label %76, label %31

31:                                               ; preds = %27
  %32 = load i8, i8* %29, align 1
  %33 = icmp eq i8 %32, 92
  br i1 %33, label %34, label %27

34:                                               ; preds = %31
  %35 = ptrtoint i8* %28 to i64
  %36 = ptrtoint i8* %23 to i64
  %37 = xor i64 %36, -1
  %38 = add i64 %35, %37
  %39 = xor i64 %38, -1
  %40 = add i64 %22, %39
  %41 = add i64 %22, 32
  %42 = and i64 %41, -8
  %43 = tail call noalias i8* @_emalloc(i64 %42) #17
  %44 = bitcast i8* %43 to %32*
  %45 = bitcast i8* %43 to i32*
  store i32 1, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %43, i64 4
  %47 = bitcast i8* %46 to i32*
  store i32 6, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %43, i64 8
  %49 = bitcast i8* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %43, i64 16
  %51 = bitcast i8* %50 to i64*
  store i64 %22, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %43, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 1 %23, i64 %22, i1 false) #16
  %53 = getelementptr inbounds %32, %32* %44, i64 0, i32 3, i64 %22
  store i8 0, i8* %53, align 1
  tail call void @zend_str_tolower(i8* nonnull %52, i64 %38) #16
  %54 = bitcast %2* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #16
  %55 = bitcast %2* %6 to i8**
  store i8* %43, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %43, i64 5
  %57 = load i8, i8* %56, align 1
  %58 = and i8 %57, 2
  %59 = icmp eq i8 %58, 0
  %60 = select i1 %59, i32 5126, i32 6
  %61 = getelementptr inbounds %2, %2* %6, i64 0, i32 1, i32 0
  store i32 %60, i32* %61, align 8
  %62 = call i32 @zend_add_literal(%7* %0, %2* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #16
  %63 = tail call %32* @zend_string_tolower(%32* %20) #16
  %64 = bitcast %2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #16
  %65 = bitcast %2* %5 to %32**
  store %32* %63, %32** %65, align 8
  %66 = getelementptr inbounds %32, %32* %63, i64 0, i32 0, i32 1
  %67 = bitcast %18* %66 to %64*
  %68 = getelementptr inbounds %64, %64* %67, i64 0, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = and i8 %69, 2
  %71 = icmp eq i8 %70, 0
  %72 = select i1 %71, i32 5126, i32 6
  %73 = getelementptr inbounds %2, %2* %5, i64 0, i32 1, i32 0
  store i32 %72, i32* %73, align 8
  %74 = call i32 @zend_add_literal(%7* %0, %2* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #16
  %75 = icmp eq i8 %2, 0
  br i1 %75, label %120, label %76

76:                                               ; preds = %27, %3, %34
  %77 = phi i64 [ %40, %34 ], [ 0, %3 ], [ %22, %27 ]
  %78 = phi i8* [ %28, %34 ], [ %23, %3 ], [ %23, %27 ]
  %79 = add i64 %77, 32
  %80 = and i64 %79, -8
  %81 = tail call noalias i8* @_emalloc(i64 %80) #17
  %82 = bitcast i8* %81 to %32*
  %83 = bitcast i8* %81 to i32*
  store i32 1, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %81, i64 4
  %85 = bitcast i8* %84 to i32*
  store i32 6, i32* %85, align 4
  %86 = getelementptr inbounds i8, i8* %81, i64 8
  %87 = bitcast i8* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %81, i64 16
  %89 = bitcast i8* %88 to i64*
  store i64 %77, i64* %89, align 8
  %90 = getelementptr inbounds i8, i8* %81, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 1 %78, i64 %77, i1 false) #16
  %91 = getelementptr inbounds %32, %32* %82, i64 0, i32 3, i64 %77
  store i8 0, i8* %91, align 1
  %92 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #16
  %93 = bitcast %2* %4 to i8**
  store i8* %81, i8** %93, align 8
  %94 = getelementptr inbounds i8, i8* %81, i64 5
  %95 = load i8, i8* %94, align 1
  %96 = and i8 %95, 2
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 5126, i32 6
  %99 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %98, i32* %99, align 8
  %100 = call i32 @zend_add_literal(%7* %0, %2* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #16
  %101 = tail call noalias i8* @_emalloc(i64 %80) #17
  %102 = bitcast i8* %101 to i32*
  store i32 1, i32* %102, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 4
  %104 = bitcast i8* %103 to i32*
  store i32 6, i32* %104, align 4
  %105 = getelementptr inbounds i8, i8* %101, i64 8
  %106 = bitcast i8* %105 to i64*
  store i64 0, i64* %106, align 8
  %107 = getelementptr inbounds i8, i8* %101, i64 16
  %108 = bitcast i8* %107 to i64*
  store i64 %77, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %101, i64 24
  %110 = tail call i8* @zend_str_tolower_copy(i8* nonnull %109, i8* %78, i64 %77) #16
  %111 = bitcast %2* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #16
  %112 = bitcast %2* %7 to i8**
  store i8* %101, i8** %112, align 8
  %113 = getelementptr inbounds i8, i8* %101, i64 5
  %114 = load i8, i8* %113, align 1
  %115 = and i8 %114, 2
  %116 = icmp eq i8 %115, 0
  %117 = select i1 %116, i32 5126, i32 6
  %118 = getelementptr inbounds %2, %2* %7, i64 0, i32 1, i32 0
  store i32 %117, i32* %118, align 8
  %119 = call i32 @zend_add_literal(%7* %0, %2* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #16
  br label %120

120:                                              ; preds = %34, %76
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_class_const(%37* %0, %43* nocapture %1) local_unnamed_addr #0 {
  %3 = alloca %2, align 8
  %4 = alloca %2, align 8
  %5 = alloca %37, align 8
  %6 = alloca %37, align 8
  %7 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %8 = load %43*, %43** %7, align 8
  %9 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 1
  %10 = load %43*, %43** %9, align 8
  %11 = getelementptr inbounds %37, %37* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %37, %37* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #16
  %13 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %14 = tail call fastcc zeroext i8 @255(%2* nonnull %13, %43* %8, %43* %10, i8 zeroext 0)
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %68, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast %4* %17 to i8*
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 1
  br i1 %20, label %21, label %66

21:                                               ; preds = %16
  %22 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %23 = tail call %9* @get_next_op(%7* %22) #16
  %24 = getelementptr inbounds %9, %9* %23, i64 0, i32 6
  store i8 -99, i8* %24, align 4
  %25 = getelementptr inbounds %9, %9* %23, i64 0, i32 7
  store i8 8, i8* %25, align 1
  %26 = getelementptr inbounds %9, %9* %23, i64 0, i32 8
  store i8 8, i8* %26, align 2
  tail call fastcc void @244(%9* nonnull %23) #16
  %27 = getelementptr inbounds %9, %9* %23, i64 0, i32 9
  store i8 2, i8* %27, align 1
  %28 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %29 = getelementptr inbounds %7, %7* %28, i64 0, i32 13
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = getelementptr inbounds %9, %9* %23, i64 0, i32 3, i32 0
  store i32 %30, i32* %32, align 8
  %33 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %33, align 8
  %34 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %35 = bitcast %38* %34 to i32*
  %36 = load i32, i32* %32, align 8
  store i32 %36, i32* %35, align 8
  %37 = getelementptr inbounds %43, %43* %8, i64 0, i32 3
  %38 = bitcast [1 x %43*]* %37 to %32**
  %39 = load %32*, %32** %38, align 8
  %40 = getelementptr inbounds %32, %32* %39, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 4
  br i1 %42, label %43, label %49

43:                                               ; preds = %21
  %44 = getelementptr inbounds %32, %32* %39, i64 0, i32 3, i64 0
  %45 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %44, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %43
  %48 = load i64, i64* %40, align 8
  br label %49

49:                                               ; preds = %47, %21
  %50 = phi i64 [ %48, %47 ], [ %41, %21 ]
  %51 = icmp eq i64 %50, 6
  br i1 %51, label %52, label %62

52:                                               ; preds = %49
  %53 = getelementptr inbounds %32, %32* %39, i64 0, i32 3, i64 0
  %54 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %53, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %52
  %57 = load i64, i64* %40, align 8
  %58 = icmp eq i64 %57, 6
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %53, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %59, %56, %49
  br label %63

63:                                               ; preds = %43, %52, %59, %62
  %64 = phi i32 [ 0, %62 ], [ 1, %43 ], [ 2, %52 ], [ 3, %59 ]
  %65 = getelementptr inbounds %9, %9* %23, i64 0, i32 4
  store i32 %64, i32* %65, align 4
  br label %255

66:                                               ; preds = %16
  %67 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %67, align 8
  br label %255

68:                                               ; preds = %2
  tail call void @zend_eval_const_expr(%43** nonnull %7)
  tail call void @zend_eval_const_expr(%43** nonnull %9)
  %69 = load %43*, %43** %7, align 8
  %70 = load %43*, %43** %9, align 8
  %71 = getelementptr inbounds %43, %43* %69, i64 0, i32 0
  %72 = load i16, i16* %71, align 8
  %73 = icmp eq i16 %72, 64
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %43, %43* %70, i64 0, i32 0
  br label %136

76:                                               ; preds = %68
  %77 = getelementptr inbounds %43, %43* %69, i64 0, i32 3
  %78 = getelementptr inbounds [1 x %43*], [1 x %43*]* %77, i64 1
  %79 = bitcast [1 x %43*]* %78 to i8*
  %80 = load i8, i8* %79, align 8
  %81 = icmp eq i8 %80, 6
  br i1 %81, label %83, label %82

82:                                               ; preds = %76
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

83:                                               ; preds = %76
  %84 = bitcast [1 x %43*]* %77 to %32**
  %85 = load %32*, %32** %84, align 8
  %86 = getelementptr inbounds %43, %43* %69, i64 0, i32 1
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = tail call %32* @zend_resolve_class_name(%32* %85, i32 %88) #16
  %90 = getelementptr inbounds %43, %43* %70, i64 0, i32 0
  %91 = load i16, i16* %90, align 8
  %92 = icmp eq i16 %91, 64
  br i1 %92, label %93, label %118

93:                                               ; preds = %83
  %94 = getelementptr inbounds %43, %43* %70, i64 0, i32 3
  %95 = bitcast [1 x %43*]* %94 to %32**
  %96 = load %32*, %32** %95, align 8
  %97 = tail call fastcc zeroext i8 @256(%2* nonnull %13, %32* %89, %32* %96)
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %118, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %100, align 8
  %101 = getelementptr inbounds %32, %32* %89, i64 0, i32 0, i32 1
  %102 = bitcast %18* %101 to %64*
  %103 = getelementptr inbounds %64, %64* %102, i64 0, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = and i8 %104, 2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %255

107:                                              ; preds = %99
  %108 = getelementptr inbounds %32, %32* %89, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, -1
  store i32 %110, i32* %108, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %255

112:                                              ; preds = %107
  %113 = and i8 %104, 1
  %114 = icmp eq i8 %113, 0
  %115 = bitcast %32* %89 to i8*
  br i1 %114, label %117, label %116

116:                                              ; preds = %112
  tail call void @free(i8* %115) #16
  br label %255

117:                                              ; preds = %112
  tail call void @_efree(i8* %115) #16
  br label %255

118:                                              ; preds = %93, %83
  %119 = getelementptr inbounds %32, %32* %89, i64 0, i32 0, i32 1
  %120 = bitcast %18* %119 to %64*
  %121 = getelementptr inbounds %64, %64* %120, i64 0, i32 1
  %122 = load i8, i8* %121, align 1
  %123 = and i8 %122, 2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %136

125:                                              ; preds = %118
  %126 = getelementptr inbounds %32, %32* %89, i64 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = add i32 %127, -1
  store i32 %128, i32* %126, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %136

130:                                              ; preds = %125
  %131 = and i8 %122, 1
  %132 = icmp eq i8 %131, 0
  %133 = bitcast %32* %89 to i8*
  br i1 %132, label %135, label %134

134:                                              ; preds = %130
  tail call void @free(i8* %133) #16
  br label %136

135:                                              ; preds = %130
  tail call void @_efree(i8* %133) #16
  br label %136

136:                                              ; preds = %74, %135, %134, %125, %118
  %137 = phi i16* [ %75, %74 ], [ %90, %135 ], [ %90, %134 ], [ %90, %125 ], [ %90, %118 ]
  %138 = load i16, i16* %137, align 8
  %139 = icmp eq i16 %138, 64
  br i1 %139, label %140, label %152

140:                                              ; preds = %136
  %141 = getelementptr inbounds %43, %43* %70, i64 0, i32 3
  %142 = bitcast [1 x %43*]* %141 to %32**
  %143 = load %32*, %32** %142, align 8
  %144 = getelementptr inbounds %32, %32* %143, i64 0, i32 2
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, 5
  br i1 %146, label %147, label %152

147:                                              ; preds = %140
  %148 = getelementptr inbounds %32, %32* %143, i64 0, i32 3, i64 0
  %149 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %148, i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @169, i64 0, i64 0), i64 5) #16
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %147
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @170, i64 0, i64 0)) #15
  unreachable

152:                                              ; preds = %147, %140, %136
  call fastcc void @234(%37* nonnull %5, %43* %69, i32 512)
  call void @zend_compile_expr(%37* nonnull %6, %43* nonnull %70)
  %153 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %154 = call %9* @get_next_op(%7* %153) #16
  %155 = getelementptr inbounds %9, %9* %154, i64 0, i32 6
  store i8 -75, i8* %155, align 4
  %156 = getelementptr inbounds %9, %9* %154, i64 0, i32 7
  store i8 8, i8* %156, align 1
  %157 = load i8, i8* %12, align 8
  %158 = getelementptr inbounds %9, %9* %154, i64 0, i32 8
  store i8 %157, i8* %158, align 2
  %159 = icmp eq i8 %157, 1
  br i1 %159, label %160, label %164

160:                                              ; preds = %152
  %161 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %162 = getelementptr inbounds %37, %37* %6, i64 0, i32 2, i32 0
  %163 = call i32 @zend_add_literal(%7* %161, %2* nonnull %162) #16
  br label %168

164:                                              ; preds = %152
  %165 = getelementptr inbounds %37, %37* %6, i64 0, i32 2
  %166 = bitcast %38* %165 to i32*
  %167 = load i32, i32* %166, align 8
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi i32 [ %167, %164 ], [ %163, %160 ]
  %170 = getelementptr inbounds %9, %9* %154, i64 0, i32 2, i32 0
  store i32 %169, i32* %170, align 4
  call fastcc void @244(%9* nonnull %154) #16
  %171 = icmp eq %37* %0, null
  br i1 %171, label %183, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %9, %9* %154, i64 0, i32 9
  store i8 2, i8* %173, align 1
  %174 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %175 = getelementptr inbounds %7, %7* %174, i64 0, i32 13
  %176 = load i32, i32* %175, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds %9, %9* %154, i64 0, i32 3, i32 0
  store i32 %176, i32* %178, align 8
  %179 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %179, align 8
  %180 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %181 = bitcast %38* %180 to i32*
  %182 = load i32, i32* %178, align 8
  store i32 %182, i32* %181, align 8
  br label %183

183:                                              ; preds = %168, %172
  %184 = load i8, i8* %11, align 8
  %185 = icmp eq i8 %184, 1
  br i1 %185, label %192, label %186

186:                                              ; preds = %183
  store i8 %184, i8* %156, align 1
  %187 = getelementptr inbounds %37, %37* %5, i64 0, i32 2
  %188 = bitcast %38* %187 to i32*
  %189 = load i32, i32* %188, align 8
  %190 = getelementptr inbounds %9, %9* %154, i64 0, i32 1, i32 0
  store i32 %189, i32* %190, align 8
  %191 = load i32, i32* %170, align 4
  br label %244

192:                                              ; preds = %183
  store i8 1, i8* %156, align 1
  %193 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %194 = getelementptr inbounds %37, %37* %5, i64 0, i32 2, i32 0, i32 0
  %195 = bitcast %3* %194 to %32**
  %196 = load %32*, %32** %195, align 8
  %197 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #16
  %198 = bitcast %2* %4 to %32**
  store %32* %196, %32** %198, align 8
  %199 = getelementptr inbounds %32, %32* %196, i64 0, i32 0, i32 1
  %200 = bitcast %18* %199 to %64*
  %201 = getelementptr inbounds %64, %64* %200, i64 0, i32 1
  %202 = load i8, i8* %201, align 1
  %203 = and i8 %202, 2
  %204 = icmp eq i8 %203, 0
  %205 = select i1 %204, i32 5126, i32 6
  %206 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %205, i32* %206, align 8
  %207 = call i32 @zend_add_literal(%7* %193, %2* nonnull %4) #16
  %208 = load %32*, %32** %198, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #16
  %209 = call %32* @zend_string_tolower(%32* %208) #16
  %210 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %210) #16
  %211 = bitcast %2* %3 to %32**
  store %32* %209, %32** %211, align 8
  %212 = getelementptr inbounds %32, %32* %209, i64 0, i32 0, i32 1
  %213 = bitcast %18* %212 to %64*
  %214 = getelementptr inbounds %64, %64* %213, i64 0, i32 1
  %215 = load i8, i8* %214, align 1
  %216 = and i8 %215, 2
  %217 = icmp eq i8 %216, 0
  %218 = select i1 %217, i32 5126, i32 6
  %219 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 %218, i32* %219, align 8
  %220 = call i32 @zend_add_literal(%7* %193, %2* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %210) #16
  %221 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %222 = getelementptr inbounds %7, %7* %221, i64 0, i32 27
  %223 = load i32, i32* %222, align 8
  %224 = getelementptr inbounds %7, %7* %221, i64 0, i32 26
  %225 = load %2*, %2** %224, align 8
  %226 = zext i32 %207 to i64
  %227 = getelementptr inbounds %2, %2* %225, i64 %226, i32 2, i32 0
  store i32 %223, i32* %227, align 4
  %228 = load i32, i32* %222, align 8
  %229 = add i32 %228, 8
  store i32 %229, i32* %222, align 8
  %230 = load i8, i8* %156, align 1
  %231 = getelementptr inbounds %9, %9* %154, i64 0, i32 1, i32 0
  store i32 %207, i32* %231, align 8
  %232 = icmp eq i8 %230, 1
  %233 = load i32, i32* %170, align 4
  br i1 %232, label %234, label %244

234:                                              ; preds = %192
  %235 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %236 = getelementptr inbounds %7, %7* %235, i64 0, i32 27
  %237 = load i32, i32* %236, align 8
  %238 = getelementptr inbounds %7, %7* %235, i64 0, i32 26
  %239 = load %2*, %2** %238, align 8
  %240 = zext i32 %233 to i64
  %241 = getelementptr inbounds %2, %2* %239, i64 %240, i32 2, i32 0
  store i32 %237, i32* %241, align 4
  %242 = load i32, i32* %236, align 8
  %243 = add i32 %242, 8
  store i32 %243, i32* %236, align 8
  br label %255

244:                                              ; preds = %186, %192
  %245 = phi i32 [ %191, %186 ], [ %233, %192 ]
  %246 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %247 = getelementptr inbounds %7, %7* %246, i64 0, i32 27
  %248 = load i32, i32* %247, align 8
  %249 = getelementptr inbounds %7, %7* %246, i64 0, i32 26
  %250 = load %2*, %2** %249, align 8
  %251 = zext i32 %245 to i64
  %252 = getelementptr inbounds %2, %2* %250, i64 %251, i32 2, i32 0
  store i32 %248, i32* %252, align 4
  %253 = load i32, i32* %247, align 8
  %254 = add i32 %253, 16
  store i32 %254, i32* %247, align 8
  br label %255

255:                                              ; preds = %117, %116, %107, %99, %234, %244, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @255(%2* nocapture %0, %43* nocapture readonly %1, %43* nocapture readonly %2, i8 zeroext %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %43, %43* %2, i64 0, i32 0
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 64
  br i1 %7, label %8, label %135

8:                                                ; preds = %4
  %9 = getelementptr inbounds %43, %43* %2, i64 0, i32 3
  %10 = bitcast [1 x %43*]* %9 to %32**
  %11 = load %32*, %32** %10, align 8
  %12 = getelementptr inbounds %32, %32* %11, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 5
  br i1 %14, label %15, label %135

15:                                               ; preds = %8
  %16 = getelementptr inbounds %32, %32* %11, i64 0, i32 3, i64 0
  %17 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %16, i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @169, i64 0, i64 0), i64 5) #16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %135

19:                                               ; preds = %15
  %20 = getelementptr inbounds %43, %43* %1, i64 0, i32 0
  %21 = load i16, i16* %20, align 8
  %22 = icmp eq i16 %21, 64
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @170, i64 0, i64 0)) #15
  unreachable

24:                                               ; preds = %19
  %25 = getelementptr inbounds %43, %43* %1, i64 0, i32 3
  %26 = getelementptr inbounds [1 x %43*], [1 x %43*]* %25, i64 1
  %27 = bitcast [1 x %43*]* %26 to i8*
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 6
  br i1 %29, label %31, label %30

30:                                               ; preds = %24
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

31:                                               ; preds = %24
  %32 = bitcast [1 x %43*]* %25 to %32**
  %33 = load %32*, %32** %32, align 8
  %34 = getelementptr inbounds %32, %32* %33, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 4
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = getelementptr inbounds %32, %32* %33, i64 0, i32 3, i64 0
  %39 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %38, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %59, label %41

41:                                               ; preds = %37
  %42 = load i64, i64* %34, align 8
  br label %43

43:                                               ; preds = %41, %31
  %44 = phi i64 [ %42, %41 ], [ %35, %31 ]
  %45 = icmp eq i64 %44, 6
  br i1 %45, label %46, label %56

46:                                               ; preds = %43
  %47 = getelementptr inbounds %32, %32* %33, i64 0, i32 3, i64 0
  %48 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %47, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %46
  %51 = load i64, i64* %34, align 8
  %52 = icmp eq i64 %51, 6
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %47, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53, %50, %43
  %57 = load i8, i8* %27, align 8
  %58 = icmp eq i8 %57, 6
  br i1 %58, label %120, label %119

59:                                               ; preds = %37, %46, %53
  %60 = phi i32 [ 1, %37 ], [ 2, %46 ], [ 3, %53 ]
  %61 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %62 = icmp eq %1* %61, null
  br i1 %62, label %63, label %78

63:                                               ; preds = %59
  %64 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %65 = getelementptr inbounds %7, %7* %64, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 1048576
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %78

69:                                               ; preds = %63
  %70 = getelementptr inbounds %7, %7* %64, i64 0, i32 3
  %71 = load %32*, %32** %70, align 8
  %72 = icmp eq %32* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = icmp eq i32 %60, 1
  %75 = icmp eq i32 %60, 2
  %76 = select i1 %75, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0)
  %77 = select i1 %74, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i8* %76
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @228, i64 0, i64 0), i8* %77) #15
  unreachable

78:                                               ; preds = %59, %63, %69
  %79 = icmp eq i32 %60, 1
  br i1 %79, label %80, label %112

80:                                               ; preds = %78
  %81 = icmp eq %1* %61, null
  br i1 %81, label %110, label %82

82:                                               ; preds = %80
  %83 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %84 = getelementptr inbounds %7, %7* %83, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 1048576
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %110

88:                                               ; preds = %82
  %89 = getelementptr inbounds %1, %1* %61, i64 0, i32 4
  %90 = load i32, i32* %89, align 4
  %91 = trunc i32 %90 to i8
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %110, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %1, %1* %61, i64 0, i32 1
  %95 = load %32*, %32** %94, align 8
  %96 = bitcast %2* %0 to %32**
  store %32* %95, %32** %96, align 8
  %97 = getelementptr inbounds %32, %32* %95, i64 0, i32 0, i32 1
  %98 = bitcast %18* %97 to %64*
  %99 = getelementptr inbounds %64, %64* %98, i64 0, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = and i8 %100, 2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %93
  %104 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 6, i32* %104, align 8
  br label %135

105:                                              ; preds = %93
  %106 = getelementptr inbounds %32, %32* %95, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, 1
  store i32 %108, i32* %106, align 8
  %109 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 5126, i32* %109, align 8
  br label %135

110:                                              ; preds = %82, %88, %80
  %111 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 1, i32* %111, align 8
  br label %135

112:                                              ; preds = %78
  %113 = icmp eq i8 %3, 0
  br i1 %113, label %117, label %114

114:                                              ; preds = %112
  %115 = icmp eq i32 %60, 3
  %116 = select i1 %115, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0)
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @227, i64 0, i64 0), i8* %116) #15
  unreachable

117:                                              ; preds = %112
  %118 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 1, i32* %118, align 8
  br label %135

119:                                              ; preds = %56
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

120:                                              ; preds = %56
  %121 = load %32*, %32** %32, align 8
  %122 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = tail call %32* @zend_resolve_class_name(%32* %121, i32 %124) #16
  %126 = bitcast %2* %0 to %32**
  store %32* %125, %32** %126, align 8
  %127 = getelementptr inbounds %32, %32* %125, i64 0, i32 0, i32 1
  %128 = bitcast %18* %127 to %64*
  %129 = getelementptr inbounds %64, %64* %128, i64 0, i32 1
  %130 = load i8, i8* %129, align 1
  %131 = and i8 %130, 2
  %132 = icmp eq i8 %131, 0
  %133 = select i1 %132, i32 5126, i32 6
  %134 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 %133, i32* %134, align 8
  br label %135

135:                                              ; preds = %110, %105, %103, %8, %15, %4, %120, %117
  %136 = phi i8 [ 1, %120 ], [ 1, %117 ], [ 0, %4 ], [ 0, %15 ], [ 0, %8 ], [ 1, %103 ], [ 1, %105 ], [ 1, %110 ]
  ret i8 %136
}

; Function Attrs: nounwind uwtable
define hidden void @zend_eval_const_expr(%43** nocapture %0) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = alloca %2, align 8
  %4 = alloca %2, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = load %43*, %43** %0, align 8
  %8 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = icmp eq %43* %7, null
  br i1 %9, label %535, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %43, %43* %7, i64 0, i32 0
  %12 = load i16, i16* %11, align 8
  switch i16 %12, label %535 [
    i16 520, label %13
    i16 521, label %66
    i16 522, label %66
    i16 523, label %87
    i16 524, label %87
    i16 270, label %145
    i16 259, label %159
    i16 260, label %159
    i16 529, label %193
    i16 770, label %222
    i16 512, label %249
    i16 129, label %394
    i16 0, label %397
    i16 257, label %400
    i16 516, label %432
  ]

13:                                               ; preds = %10
  %14 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  tail call void @zend_eval_const_expr(%43** nonnull %14)
  %15 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 1
  tail call void @zend_eval_const_expr(%43** nonnull %15)
  %16 = load %43*, %43** %14, align 8
  %17 = getelementptr inbounds %43, %43* %16, i64 0, i32 0
  %18 = load i16, i16* %17, align 8
  %19 = icmp eq i16 %18, 64
  br i1 %19, label %20, label %535

20:                                               ; preds = %13
  %21 = load %43*, %43** %15, align 8
  %22 = getelementptr inbounds %43, %43* %21, i64 0, i32 0
  %23 = load i16, i16* %22, align 8
  %24 = icmp eq i16 %23, 64
  br i1 %24, label %25, label %535

25:                                               ; preds = %20
  %26 = getelementptr inbounds %43, %43* %7, i64 0, i32 1
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = getelementptr inbounds %43, %43* %16, i64 0, i32 3
  %30 = bitcast [1 x %43*]* %29 to %2*
  %31 = getelementptr inbounds %43, %43* %21, i64 0, i32 3
  %32 = bitcast [1 x %43*]* %31 to %2*
  %33 = tail call i32 (%2*, %2*, %2*)* @get_binary_op(i32 %28) #16
  %34 = or i16 %27, 1
  switch i16 %34, label %61 [
    i16 5, label %35
    i16 7, label %48
  ]

35:                                               ; preds = %25
  %36 = getelementptr inbounds [1 x %43*], [1 x %43*]* %31, i64 1
  %37 = bitcast [1 x %43*]* %36 to i8*
  %38 = load i8, i8* %37, align 8
  %39 = icmp eq i8 %38, 4
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = bitcast [1 x %43*]* %31 to i64*
  %42 = load i64, i64* %41, align 8
  br label %45

43:                                               ; preds = %35
  %44 = tail call i64 @_zval_get_long_func(%2* nonnull %32) #16
  br label %45

45:                                               ; preds = %43, %40
  %46 = phi i64 [ %42, %40 ], [ %44, %43 ]
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %535, label %61

48:                                               ; preds = %25
  %49 = getelementptr inbounds [1 x %43*], [1 x %43*]* %31, i64 1
  %50 = bitcast [1 x %43*]* %49 to i8*
  %51 = load i8, i8* %50, align 8
  %52 = icmp eq i8 %51, 4
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = bitcast [1 x %43*]* %31 to i64*
  %55 = load i64, i64* %54, align 8
  br label %58

56:                                               ; preds = %48
  %57 = tail call i64 @_zval_get_long_func(%2* nonnull %32) #16
  br label %58

58:                                               ; preds = %56, %53
  %59 = phi i64 [ %55, %53 ], [ %57, %56 ]
  %60 = icmp slt i64 %59, 0
  br i1 %60, label %535, label %61

61:                                               ; preds = %58, %45, %25
  %62 = tail call zeroext i8 @zend_binary_op_produces_numeric_string_error(i32 %28, %2* nonnull %30, %2* nonnull %32) #16
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %535

64:                                               ; preds = %61
  %65 = call i32 %33(%2* nonnull %4, %2* nonnull %30, %2* nonnull %32) #16
  br label %533

66:                                               ; preds = %10, %10
  %67 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  tail call void @zend_eval_const_expr(%43** nonnull %67)
  %68 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 1
  tail call void @zend_eval_const_expr(%43** nonnull %68)
  %69 = load %43*, %43** %67, align 8
  %70 = getelementptr inbounds %43, %43* %69, i64 0, i32 0
  %71 = load i16, i16* %70, align 8
  %72 = icmp eq i16 %71, 64
  br i1 %72, label %73, label %535

73:                                               ; preds = %66
  %74 = load %43*, %43** %68, align 8
  %75 = getelementptr inbounds %43, %43* %74, i64 0, i32 0
  %76 = load i16, i16* %75, align 8
  %77 = icmp eq i16 %76, 64
  br i1 %77, label %78, label %535

78:                                               ; preds = %73
  %79 = load i16, i16* %11, align 8
  %80 = getelementptr inbounds %43, %43* %69, i64 0, i32 3
  %81 = bitcast [1 x %43*]* %80 to %2*
  %82 = getelementptr inbounds %43, %43* %74, i64 0, i32 3
  %83 = bitcast [1 x %43*]* %82 to %2*
  %84 = icmp eq i16 %79, 521
  %85 = select i1 %84, i32 (%2*, %2*, %2*)* @is_smaller_function, i32 (%2*, %2*, %2*)* @is_smaller_or_equal_function
  %86 = call i32 %85(%2* nonnull %4, %2* nonnull %83, %2* nonnull %81) #16
  br label %533

87:                                               ; preds = %10, %10
  %88 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  tail call void @zend_eval_const_expr(%43** nonnull %88)
  %89 = load %43*, %43** %88, align 8
  %90 = getelementptr inbounds %43, %43* %89, i64 0, i32 0
  %91 = load i16, i16* %90, align 8
  %92 = icmp eq i16 %91, 64
  br i1 %92, label %93, label %105

93:                                               ; preds = %87
  %94 = getelementptr inbounds %43, %43* %89, i64 0, i32 3
  %95 = bitcast [1 x %43*]* %94 to %2*
  %96 = tail call i32 @zend_is_true(%2* nonnull %95) #16
  %97 = load i16, i16* %11, align 8
  %98 = icmp eq i16 %97, 524
  %99 = zext i1 %98 to i32
  %100 = icmp eq i32 %96, %99
  br i1 %100, label %101, label %105

101:                                              ; preds = %536, %93
  %102 = phi i1 [ %98, %93 ], [ %541, %536 ]
  %103 = select i1 %102, i32 3, i32 2
  %104 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %103, i32* %104, align 8
  br label %535

105:                                              ; preds = %87, %93
  %106 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 1
  tail call void @zend_eval_const_expr(%43** nonnull %106)
  %107 = load %43*, %43** %106, align 8
  %108 = getelementptr inbounds %43, %43* %107, i64 0, i32 0
  %109 = load i16, i16* %108, align 8
  %110 = icmp eq i16 %109, 64
  br i1 %110, label %536, label %544

111:                                              ; preds = %544
  %112 = load %43*, %43** %106, align 8
  %113 = getelementptr inbounds %43, %43* %112, i64 0, i32 0
  %114 = load i16, i16* %113, align 8
  %115 = icmp eq i16 %114, 64
  br i1 %115, label %116, label %535

116:                                              ; preds = %111
  %117 = load i16, i16* %11, align 8
  %118 = icmp eq i16 %117, 524
  %119 = getelementptr inbounds %43, %43* %545, i64 0, i32 3
  %120 = bitcast [1 x %43*]* %119 to %2*
  %121 = tail call i32 @zend_is_true(%2* nonnull %120) #16
  %122 = icmp ne i32 %121, 0
  br i1 %118, label %123, label %134

123:                                              ; preds = %116
  br i1 %122, label %131, label %124

124:                                              ; preds = %123
  %125 = load %43*, %43** %106, align 8
  %126 = getelementptr inbounds %43, %43* %125, i64 0, i32 3
  %127 = bitcast [1 x %43*]* %126 to %2*
  %128 = tail call i32 @zend_is_true(%2* nonnull %127) #16
  %129 = icmp eq i32 %128, 0
  %130 = select i1 %129, i32 2, i32 3
  br label %131

131:                                              ; preds = %124, %123
  %132 = phi i32 [ 3, %123 ], [ %130, %124 ]
  %133 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %132, i32* %133, align 8
  br label %533

134:                                              ; preds = %116
  br i1 %122, label %135, label %142

135:                                              ; preds = %134
  %136 = load %43*, %43** %106, align 8
  %137 = getelementptr inbounds %43, %43* %136, i64 0, i32 3
  %138 = bitcast [1 x %43*]* %137 to %2*
  %139 = tail call i32 @zend_is_true(%2* nonnull %138) #16
  %140 = icmp eq i32 %139, 0
  %141 = select i1 %140, i32 2, i32 3
  br label %142

142:                                              ; preds = %135, %134
  %143 = phi i32 [ 2, %134 ], [ %141, %135 ]
  %144 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %143, i32* %144, align 8
  br label %533

145:                                              ; preds = %10
  %146 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  tail call void @zend_eval_const_expr(%43** nonnull %146)
  %147 = load %43*, %43** %146, align 8
  %148 = getelementptr inbounds %43, %43* %147, i64 0, i32 0
  %149 = load i16, i16* %148, align 8
  %150 = icmp eq i16 %149, 64
  br i1 %150, label %151, label %535

151:                                              ; preds = %145
  %152 = getelementptr inbounds %43, %43* %7, i64 0, i32 1
  %153 = load i16, i16* %152, align 2
  %154 = zext i16 %153 to i32
  %155 = getelementptr inbounds %43, %43* %147, i64 0, i32 3
  %156 = bitcast [1 x %43*]* %155 to %2*
  %157 = tail call i32 (%2*, %2*)* @get_unary_op(i32 %154) #16
  %158 = call i32 %157(%2* nonnull %4, %2* nonnull %156) #16
  br label %533

159:                                              ; preds = %10, %10
  %160 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  tail call void @zend_eval_const_expr(%43** nonnull %160)
  %161 = load %43*, %43** %160, align 8
  %162 = getelementptr inbounds %43, %43* %161, i64 0, i32 0
  %163 = load i16, i16* %162, align 8
  %164 = icmp eq i16 %163, 64
  br i1 %164, label %165, label %535

165:                                              ; preds = %159
  %166 = load i16, i16* %11, align 8
  %167 = getelementptr inbounds %43, %43* %161, i64 0, i32 3
  %168 = bitcast [1 x %43*]* %167 to %2*
  %169 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %169) #16
  %170 = icmp eq i16 %166, 259
  %171 = select i1 %170, i64 1, i64 -1
  %172 = getelementptr inbounds %2, %2* %3, i64 0, i32 0, i32 0
  store i64 %171, i64* %172, align 8
  %173 = getelementptr inbounds %2, %2* %3, i64 0, i32 1, i32 0
  store i32 4, i32* %173, align 8
  %174 = tail call i32 (%2*, %2*, %2*)* @get_binary_op(i32 3) #16
  %175 = getelementptr inbounds [1 x %43*], [1 x %43*]* %167, i64 1
  %176 = bitcast [1 x %43*]* %175 to i8*
  %177 = load i8, i8* %176, align 8
  %178 = icmp eq i8 %177, 6
  br i1 %178, label %179, label %191

179:                                              ; preds = %165
  %180 = bitcast [1 x %43*]* %167 to %32**
  %181 = load %32*, %32** %180, align 8
  %182 = getelementptr inbounds %32, %32* %181, i64 0, i32 3, i64 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp sgt i8 %183, 57
  br i1 %184, label %190, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %32, %32* %181, i64 0, i32 2
  %187 = load i64, i64* %186, align 8
  %188 = tail call zeroext i8 @_is_numeric_string_ex(i8* nonnull %182, i64 %187, i64* null, double* null, i32 0, i32* null) #16
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %185, %179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169) #16
  br label %535

191:                                              ; preds = %165, %185
  %192 = call i32 %174(%2* nonnull %4, %2* nonnull %3, %2* nonnull %168) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169) #16
  br label %533

193:                                              ; preds = %10
  %194 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  %195 = load %43*, %43** %194, align 8
  %196 = getelementptr inbounds %43, %43* %195, i64 0, i32 0
  %197 = load i16, i16* %196, align 8
  %198 = icmp eq i16 %197, 512
  br i1 %198, label %199, label %201

199:                                              ; preds = %193
  %200 = getelementptr inbounds %43, %43* %195, i64 0, i32 1
  store i16 1, i16* %200, align 2
  br label %201

201:                                              ; preds = %199, %193
  tail call void @zend_eval_const_expr(%43** nonnull %194)
  %202 = load %43*, %43** %194, align 8
  %203 = getelementptr inbounds %43, %43* %202, i64 0, i32 0
  %204 = load i16, i16* %203, align 8
  %205 = icmp eq i16 %204, 64
  %206 = ptrtoint %43* %202 to i64
  br i1 %205, label %209, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 1
  tail call void @zend_eval_const_expr(%43** nonnull %208)
  br label %535

209:                                              ; preds = %201
  %210 = getelementptr inbounds %43, %43* %202, i64 0, i32 3
  %211 = getelementptr inbounds [1 x %43*], [1 x %43*]* %210, i64 1
  %212 = bitcast [1 x %43*]* %211 to i8*
  %213 = load i8, i8* %212, align 8
  %214 = icmp eq i8 %213, 1
  br i1 %214, label %215, label %220

215:                                              ; preds = %209
  %216 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 1
  tail call void @zend_eval_const_expr(%43** nonnull %216)
  %217 = bitcast %43** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %43** %0 to i64*
  store i64 %218, i64* %219, align 8
  store %43* null, %43** %216, align 8
  tail call void @zend_ast_destroy(%43* nonnull %7) #16
  br label %535

220:                                              ; preds = %209
  %221 = bitcast %43** %0 to i64*
  store i64 %206, i64* %221, align 8
  store %43* null, %43** %194, align 8
  tail call void @zend_ast_destroy(%43* nonnull %7) #16
  br label %535

222:                                              ; preds = %10
  %223 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  tail call void @zend_eval_const_expr(%43** nonnull %223)
  %224 = load %43*, %43** %223, align 8
  %225 = getelementptr inbounds %43, %43* %224, i64 0, i32 0
  %226 = load i16, i16* %225, align 8
  %227 = icmp eq i16 %226, 64
  br i1 %227, label %235, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 1
  %230 = load %43*, %43** %229, align 8
  %231 = icmp eq %43* %230, null
  br i1 %231, label %233, label %232

232:                                              ; preds = %228
  tail call void @zend_eval_const_expr(%43** nonnull %229)
  br label %233

233:                                              ; preds = %228, %232
  %234 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 2
  tail call void @zend_eval_const_expr(%43** nonnull %234)
  br label %535

235:                                              ; preds = %222
  %236 = getelementptr inbounds %43, %43* %224, i64 0, i32 3
  %237 = bitcast [1 x %43*]* %236 to %2*
  %238 = tail call i32 @zend_is_true(%2* nonnull %237) #16
  %239 = sub nsw i32 2, %238
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 %240
  %242 = load %43*, %43** %241, align 8
  %243 = icmp eq %43* %242, null
  %244 = getelementptr inbounds %43*, %43** %241, i64 -1
  %245 = select i1 %243, %43** %244, %43** %241
  %246 = bitcast %43** %245 to i64*
  %247 = load i64, i64* %246, align 8
  store %43* null, %43** %245, align 8
  tail call void @zend_ast_destroy(%43* nonnull %7) #16
  %248 = bitcast %43** %0 to i64*
  store i64 %247, i64* %248, align 8
  tail call void @zend_eval_const_expr(%43** nonnull %0)
  br label %535

249:                                              ; preds = %10
  %250 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 1
  %251 = load %43*, %43** %250, align 8
  %252 = icmp eq %43* %251, null
  br i1 %252, label %253, label %254

253:                                              ; preds = %249
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @176, i64 0, i64 0)) #15
  unreachable

254:                                              ; preds = %249
  %255 = getelementptr inbounds %43, %43* %7, i64 0, i32 1
  %256 = load i16, i16* %255, align 2
  %257 = icmp eq i16 %256, 1
  %258 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  br i1 %257, label %259, label %266

259:                                              ; preds = %254
  %260 = load %43*, %43** %258, align 8
  %261 = getelementptr inbounds %43, %43* %260, i64 0, i32 0
  %262 = load i16, i16* %261, align 8
  %263 = icmp eq i16 %262, 512
  br i1 %263, label %264, label %266

264:                                              ; preds = %259
  %265 = getelementptr inbounds %43, %43* %260, i64 0, i32 1
  store i16 1, i16* %265, align 2
  br label %266

266:                                              ; preds = %254, %264, %259
  tail call void @zend_eval_const_expr(%43** nonnull %258)
  tail call void @zend_eval_const_expr(%43** nonnull %250)
  %267 = load %43*, %43** %258, align 8
  %268 = getelementptr inbounds %43, %43* %267, i64 0, i32 0
  %269 = load i16, i16* %268, align 8
  %270 = icmp eq i16 %269, 64
  br i1 %270, label %271, label %535

271:                                              ; preds = %266
  %272 = load %43*, %43** %250, align 8
  %273 = getelementptr inbounds %43, %43* %272, i64 0, i32 0
  %274 = load i16, i16* %273, align 8
  %275 = icmp eq i16 %274, 64
  br i1 %275, label %276, label %535

276:                                              ; preds = %271
  %277 = getelementptr inbounds %43, %43* %267, i64 0, i32 3
  %278 = getelementptr inbounds %43, %43* %272, i64 0, i32 3
  %279 = getelementptr inbounds [1 x %43*], [1 x %43*]* %277, i64 1
  %280 = bitcast [1 x %43*]* %279 to i8*
  %281 = load i8, i8* %280, align 8
  switch i8 %281, label %390 [
    i8 7, label %282
    i8 6, label %350
  ]

282:                                              ; preds = %276
  %283 = getelementptr inbounds [1 x %43*], [1 x %43*]* %278, i64 1
  %284 = bitcast [1 x %43*]* %283 to i8*
  %285 = load i8, i8* %284, align 8
  switch i8 %285, label %535 [
    i8 4, label %286
    i8 6, label %306
  ]

286:                                              ; preds = %282
  %287 = bitcast [1 x %43*]* %277 to %39**
  %288 = load %39*, %39** %287, align 8
  %289 = bitcast [1 x %43*]* %278 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = tail call %2* @zend_hash_index_find(%39* %288, i64 %290) #16
  %292 = icmp eq %2* %291, null
  br i1 %292, label %535, label %293

293:                                              ; preds = %286
  %294 = bitcast %2* %291 to %66**
  %295 = load %66*, %66** %294, align 8
  %296 = getelementptr inbounds %2, %2* %291, i64 0, i32 1, i32 0
  %297 = load i32, i32* %296, align 8
  %298 = bitcast %2* %4 to %66**
  store %66* %295, %66** %298, align 8
  %299 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %297, i32* %299, align 8
  %300 = and i32 %297, 1024
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %533, label %302

302:                                              ; preds = %293
  %303 = getelementptr inbounds %66, %66* %295, i64 0, i32 0, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = add i32 %304, 1
  store i32 %305, i32* %303, align 4
  br label %533

306:                                              ; preds = %282
  %307 = bitcast [1 x %43*]* %277 to %39**
  %308 = load %39*, %39** %307, align 8
  %309 = bitcast [1 x %43*]* %278 to %32**
  %310 = load %32*, %32** %309, align 8
  %311 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311) #16
  %312 = getelementptr inbounds %32, %32* %310, i64 0, i32 3, i64 0
  %313 = getelementptr inbounds %32, %32* %310, i64 0, i32 2
  %314 = load i64, i64* %313, align 8
  %315 = load i8, i8* %312, align 1
  %316 = icmp sgt i8 %315, 57
  br i1 %316, label %332, label %317

317:                                              ; preds = %306
  %318 = icmp slt i8 %315, 48
  br i1 %318, label %319, label %326

319:                                              ; preds = %317
  %320 = icmp eq i8 %315, 45
  br i1 %320, label %321, label %332

321:                                              ; preds = %319
  %322 = getelementptr inbounds %32, %32* %310, i64 0, i32 3, i64 1
  %323 = load i8, i8* %322, align 1
  %324 = add i8 %323, -48
  %325 = icmp ugt i8 %324, 9
  br i1 %325, label %332, label %326

326:                                              ; preds = %321, %317
  %327 = call i32 @_zend_handle_numeric_str_ex(i8* nonnull %312, i64 %314, i64* nonnull %2) #16
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %332, label %329

329:                                              ; preds = %326
  %330 = load i64, i64* %2, align 8
  %331 = call %2* @zend_hash_index_find(%39* %308, i64 %330) #16
  br label %334

332:                                              ; preds = %326, %321, %319, %306
  %333 = call %2* @zend_hash_find(%39* %308, %32* nonnull %310) #16
  br label %334

334:                                              ; preds = %329, %332
  %335 = phi %2* [ %331, %329 ], [ %333, %332 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #16
  %336 = icmp eq %2* %335, null
  br i1 %336, label %535, label %337

337:                                              ; preds = %334
  %338 = bitcast %2* %335 to %66**
  %339 = load %66*, %66** %338, align 8
  %340 = getelementptr inbounds %2, %2* %335, i64 0, i32 1, i32 0
  %341 = load i32, i32* %340, align 8
  %342 = bitcast %2* %4 to %66**
  store %66* %339, %66** %342, align 8
  %343 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 %341, i32* %343, align 8
  %344 = and i32 %341, 1024
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %533, label %346

346:                                              ; preds = %337
  %347 = getelementptr inbounds %66, %66* %339, i64 0, i32 0, i32 0
  %348 = load i32, i32* %347, align 4
  %349 = add i32 %348, 1
  store i32 %349, i32* %347, align 4
  br label %533

350:                                              ; preds = %276
  %351 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %351) #16
  %352 = getelementptr inbounds [1 x %43*], [1 x %43*]* %278, i64 1
  %353 = bitcast [1 x %43*]* %352 to i8*
  %354 = load i8, i8* %353, align 8
  switch i8 %354, label %380 [
    i8 4, label %355
    i8 6, label %358
  ]

355:                                              ; preds = %350
  %356 = bitcast [1 x %43*]* %278 to i64*
  %357 = load i64, i64* %356, align 8
  store i64 %357, i64* %5, align 8
  br label %371

358:                                              ; preds = %350
  %359 = bitcast [1 x %43*]* %278 to %32**
  %360 = load %32*, %32** %359, align 8
  %361 = getelementptr inbounds %32, %32* %360, i64 0, i32 3, i64 0
  %362 = load i8, i8* %361, align 1
  %363 = icmp sgt i8 %362, 57
  br i1 %363, label %380, label %364

364:                                              ; preds = %358
  %365 = getelementptr inbounds %32, %32* %360, i64 0, i32 2
  %366 = load i64, i64* %365, align 8
  %367 = call zeroext i8 @_is_numeric_string_ex(i8* nonnull %361, i64 %366, i64* nonnull %5, double* null, i32 1, i32* null) #16
  %368 = icmp eq i8 %367, 4
  br i1 %368, label %369, label %380

369:                                              ; preds = %364
  %370 = load i64, i64* %5, align 8
  br label %371

371:                                              ; preds = %369, %355
  %372 = phi i64 [ %370, %369 ], [ %357, %355 ]
  %373 = icmp slt i64 %372, 0
  br i1 %373, label %380, label %374

374:                                              ; preds = %371
  %375 = bitcast [1 x %43*]* %277 to %32**
  %376 = load %32*, %32** %375, align 8
  %377 = getelementptr inbounds %32, %32* %376, i64 0, i32 2
  %378 = load i64, i64* %377, align 8
  %379 = icmp ult i64 %372, %378
  br i1 %379, label %381, label %380

380:                                              ; preds = %350, %364, %374, %371, %358
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %351) #16
  br label %535

381:                                              ; preds = %374
  %382 = getelementptr inbounds %32, %32* %376, i64 0, i32 3, i64 %372
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i64
  %385 = getelementptr inbounds [256 x %32*], [256 x %32*]* @zend_one_char_string, i64 0, i64 %384
  %386 = bitcast %32** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = getelementptr inbounds %2, %2* %4, i64 0, i32 0, i32 0
  store i64 %387, i64* %388, align 8
  %389 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 6, i32* %389, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %351) #16
  br label %533

390:                                              ; preds = %276
  %391 = icmp ult i8 %281, 3
  br i1 %391, label %392, label %535

392:                                              ; preds = %390
  %393 = getelementptr inbounds %2, %2* %4, i64 0, i32 1, i32 0
  store i32 1, i32* %393, align 8
  br label %533

394:                                              ; preds = %10
  %395 = call fastcc zeroext i8 @253(%2* nonnull %4, %43* nonnull %7)
  %396 = icmp eq i8 %395, 0
  br i1 %396, label %535, label %533

397:                                              ; preds = %10
  %398 = call fastcc zeroext i8 @257(%2* nonnull %4, %43* nonnull %7)
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %535, label %533

400:                                              ; preds = %10
  %401 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  %402 = load %43*, %43** %401, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #16
  %403 = getelementptr inbounds %43, %43* %402, i64 0, i32 3
  %404 = bitcast [1 x %43*]* %403 to %32**
  %405 = load %32*, %32** %404, align 8
  %406 = getelementptr inbounds %43, %43* %402, i64 0, i32 1
  %407 = load i16, i16* %406, align 2
  %408 = zext i16 %407 to i32
  %409 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), align 8
  %410 = call %32* @zend_resolve_non_class_name(%32* %405, i32 %408, i8* nonnull %6, i8 zeroext 1, %39* %409) #16
  %411 = load i8, i8* %6, align 1
  %412 = call fastcc zeroext i8 @241(%2* nonnull %4, %32* %410, i8 zeroext %411)
  %413 = icmp eq i8 %412, 0
  %414 = getelementptr inbounds %32, %32* %410, i64 0, i32 0, i32 1
  %415 = bitcast %18* %414 to %64*
  %416 = getelementptr inbounds %64, %64* %415, i64 0, i32 1
  %417 = load i8, i8* %416, align 1
  %418 = and i8 %417, 2
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %420, label %431

420:                                              ; preds = %400
  %421 = getelementptr inbounds %32, %32* %410, i64 0, i32 0, i32 0
  %422 = load i32, i32* %421, align 8
  %423 = add i32 %422, -1
  store i32 %423, i32* %421, align 8
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %431

425:                                              ; preds = %420
  %426 = and i8 %417, 1
  %427 = icmp eq i8 %426, 0
  %428 = bitcast %32* %410 to i8*
  br i1 %427, label %430, label %429

429:                                              ; preds = %425
  call void @free(i8* %428) #16
  br label %431

430:                                              ; preds = %425
  call void @_efree(i8* %428) #16
  br label %431

431:                                              ; preds = %400, %420, %429, %430
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #16
  br i1 %413, label %535, label %533

432:                                              ; preds = %10
  %433 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 0
  %434 = load %43*, %43** %433, align 8
  %435 = getelementptr inbounds %43, %43* %7, i64 0, i32 3, i64 1
  %436 = load %43*, %43** %435, align 8
  %437 = call fastcc zeroext i8 @255(%2* nonnull %4, %43* %434, %43* %436, i8 zeroext 0)
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %471, label %439

439:                                              ; preds = %432
  %440 = getelementptr inbounds %2, %2* %4, i64 0, i32 1
  %441 = bitcast %4* %440 to i8*
  %442 = load i8, i8* %441, align 8
  %443 = icmp eq i8 %442, 1
  br i1 %443, label %444, label %533

444:                                              ; preds = %439
  %445 = getelementptr inbounds %43, %43* %434, i64 0, i32 3
  %446 = bitcast [1 x %43*]* %445 to %32**
  %447 = load %32*, %32** %446, align 8
  %448 = getelementptr inbounds %32, %32* %447, i64 0, i32 2
  %449 = load i64, i64* %448, align 8
  %450 = icmp eq i64 %449, 4
  br i1 %450, label %451, label %457

451:                                              ; preds = %444
  %452 = getelementptr inbounds %32, %32* %447, i64 0, i32 3, i64 0
  %453 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %452, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %469, label %455

455:                                              ; preds = %451
  %456 = load i64, i64* %448, align 8
  br label %457

457:                                              ; preds = %455, %444
  %458 = phi i64 [ %456, %455 ], [ %449, %444 ]
  %459 = icmp eq i64 %458, 6
  br i1 %459, label %460, label %535

460:                                              ; preds = %457
  %461 = getelementptr inbounds %32, %32* %447, i64 0, i32 3, i64 0
  %462 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %461, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %535, label %464

464:                                              ; preds = %460
  %465 = load i64, i64* %448, align 8
  %466 = icmp eq i64 %465, 6
  br i1 %466, label %467, label %535

467:                                              ; preds = %464
  %468 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %461, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  br label %535

469:                                              ; preds = %451
  tail call void @zend_ast_destroy(%43* nonnull %7) #16
  %470 = tail call %43* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 0, i16 zeroext 373) #16
  store %43* %470, %43** %0, align 8
  br label %535

471:                                              ; preds = %432
  tail call void @zend_eval_const_expr(%43** nonnull %433)
  tail call void @zend_eval_const_expr(%43** nonnull %435)
  %472 = load %43*, %43** %433, align 8
  %473 = load %43*, %43** %435, align 8
  %474 = getelementptr inbounds %43, %43* %473, i64 0, i32 0
  %475 = load i16, i16* %474, align 8
  %476 = icmp eq i16 %475, 64
  br i1 %476, label %477, label %489

477:                                              ; preds = %471
  %478 = getelementptr inbounds %43, %43* %473, i64 0, i32 3
  %479 = bitcast [1 x %43*]* %478 to %32**
  %480 = load %32*, %32** %479, align 8
  %481 = getelementptr inbounds %32, %32* %480, i64 0, i32 2
  %482 = load i64, i64* %481, align 8
  %483 = icmp eq i64 %482, 5
  br i1 %483, label %484, label %489

484:                                              ; preds = %477
  %485 = getelementptr inbounds %32, %32* %480, i64 0, i32 3, i64 0
  %486 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %485, i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @169, i64 0, i64 0), i64 5) #16
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %489

488:                                              ; preds = %484
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @170, i64 0, i64 0)) #15
  unreachable

489:                                              ; preds = %484, %477, %471
  %490 = getelementptr inbounds %43, %43* %472, i64 0, i32 0
  %491 = load i16, i16* %490, align 8
  %492 = icmp eq i16 %491, 64
  br i1 %492, label %493, label %535

493:                                              ; preds = %489
  %494 = load i16, i16* %474, align 8
  %495 = icmp eq i16 %494, 64
  br i1 %495, label %496, label %535

496:                                              ; preds = %493
  %497 = getelementptr inbounds %43, %43* %472, i64 0, i32 3
  %498 = getelementptr inbounds [1 x %43*], [1 x %43*]* %497, i64 1
  %499 = bitcast [1 x %43*]* %498 to i8*
  %500 = load i8, i8* %499, align 8
  %501 = icmp eq i8 %500, 6
  br i1 %501, label %503, label %502

502:                                              ; preds = %496
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

503:                                              ; preds = %496
  %504 = bitcast [1 x %43*]* %497 to %32**
  %505 = load %32*, %32** %504, align 8
  %506 = getelementptr inbounds %43, %43* %472, i64 0, i32 1
  %507 = load i16, i16* %506, align 2
  %508 = zext i16 %507 to i32
  %509 = tail call %32* @zend_resolve_class_name(%32* %505, i32 %508) #16
  %510 = getelementptr inbounds %43, %43* %473, i64 0, i32 3
  %511 = bitcast [1 x %43*]* %510 to %32**
  %512 = load %32*, %32** %511, align 8
  %513 = call fastcc zeroext i8 @256(%2* nonnull %4, %32* %509, %32* %512)
  %514 = icmp eq i8 %513, 0
  %515 = getelementptr inbounds %32, %32* %509, i64 0, i32 0, i32 1
  %516 = bitcast %18* %515 to %64*
  %517 = getelementptr inbounds %64, %64* %516, i64 0, i32 1
  %518 = load i8, i8* %517, align 1
  %519 = and i8 %518, 2
  %520 = icmp eq i8 %519, 0
  br i1 %520, label %521, label %532

521:                                              ; preds = %503
  %522 = getelementptr inbounds %32, %32* %509, i64 0, i32 0, i32 0
  %523 = load i32, i32* %522, align 8
  %524 = add i32 %523, -1
  store i32 %524, i32* %522, align 8
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %526, label %532

526:                                              ; preds = %521
  %527 = and i8 %518, 1
  %528 = icmp eq i8 %527, 0
  %529 = bitcast %32* %509 to i8*
  br i1 %528, label %531, label %530

530:                                              ; preds = %526
  call void @free(i8* %529) #16
  br label %532

531:                                              ; preds = %526
  call void @_efree(i8* %529) #16
  br label %532

532:                                              ; preds = %503, %521, %530, %531
  br i1 %514, label %535, label %533

533:                                              ; preds = %431, %532, %293, %302, %337, %346, %381, %392, %191, %64, %439, %142, %131, %394, %397, %151, %78
  call void @zend_ast_destroy(%43* nonnull %7) #16
  %534 = call %43* @zend_ast_create_zval_ex(%2* nonnull %4, i16 zeroext 0) #16
  store %43* %534, %43** %0, align 8
  br label %535

535:                                              ; preds = %431, %532, %282, %467, %457, %464, %460, %380, %334, %286, %390, %266, %271, %61, %58, %45, %190, %489, %493, %544, %111, %10, %469, %397, %394, %233, %235, %215, %220, %159, %145, %101, %66, %73, %13, %20, %1, %533, %207
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret void

536:                                              ; preds = %105
  %537 = getelementptr inbounds %43, %43* %107, i64 0, i32 3
  %538 = bitcast [1 x %43*]* %537 to %2*
  %539 = tail call i32 @zend_is_true(%2* nonnull %538) #16
  %540 = load i16, i16* %11, align 8
  %541 = icmp eq i16 %540, 524
  %542 = zext i1 %541 to i32
  %543 = icmp eq i32 %539, %542
  br i1 %543, label %101, label %544

544:                                              ; preds = %536, %105
  %545 = load %43*, %43** %88, align 8
  %546 = getelementptr inbounds %43, %43* %545, i64 0, i32 0
  %547 = load i16, i16* %546, align 8
  %548 = icmp eq i16 %547, 64
  br i1 %548, label %111, label %535
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @256(%2* %0, %32* %1, %32* %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %32, %32* %1, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 4
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %9 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %8, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %4, align 8
  br label %13

13:                                               ; preds = %11, %3
  %14 = phi i64 [ %12, %11 ], [ %5, %3 ]
  %15 = icmp eq i64 %14, 6
  br i1 %15, label %16, label %26

16:                                               ; preds = %13
  %17 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %18 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %17, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = load i64, i64* %4, align 8
  %22 = icmp eq i64 %21, 6
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %17, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %23, %20, %13
  br label %27

27:                                               ; preds = %7, %16, %23, %26
  %28 = phi i32 [ 0, %26 ], [ 1, %7 ], [ 2, %16 ], [ 3, %23 ]
  %29 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %30 = icmp eq %1* %29, null
  br i1 %30, label %63, label %31

31:                                               ; preds = %27
  %32 = trunc i32 %28 to i2
  switch i2 %32, label %115 [
    i2 1, label %33
    i2 0, label %44
  ]

33:                                               ; preds = %31
  %34 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %35 = getelementptr inbounds %7, %7* %34, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1048576
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %115

39:                                               ; preds = %33
  %40 = getelementptr inbounds %1, %1* %29, i64 0, i32 4
  %41 = load i32, i32* %40, align 4
  %42 = trunc i32 %41 to i8
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %115, label %58

44:                                               ; preds = %31
  %45 = load i64, i64* %4, align 8
  %46 = getelementptr inbounds %1, %1* %29, i64 0, i32 1
  %47 = load %32*, %32** %46, align 8
  %48 = getelementptr inbounds %32, %32* %47, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %45, %49
  br i1 %50, label %51, label %65

51:                                               ; preds = %44
  %52 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %53 = getelementptr inbounds %32, %32* %47, i64 0, i32 3, i64 0
  %54 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %52, i64 %45, i8* nonnull %53, i64 %45) #16
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %65

56:                                               ; preds = %51
  %57 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  br label %58

58:                                               ; preds = %56, %39
  %59 = phi %1* [ %57, %56 ], [ %29, %39 ]
  %60 = getelementptr inbounds %1, %1* %59, i64 0, i32 12
  %61 = tail call %2* @zend_hash_find(%39* nonnull %60, %32* %2) #16
  %62 = icmp eq %2* %61, null
  br i1 %62, label %115, label %80

63:                                               ; preds = %27
  %64 = icmp eq i32 %28, 0
  br i1 %64, label %65, label %115

65:                                               ; preds = %51, %44, %63
  %66 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %67 = and i32 %66, 32
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %115

69:                                               ; preds = %65
  %70 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 6), align 8
  %71 = getelementptr inbounds %32, %32* %1, i64 0, i32 3, i64 0
  %72 = load i64, i64* %4, align 8
  %73 = tail call i8* @zend_hash_find_ptr_lc(%39* %70, i8* nonnull %71, i64 %72)
  %74 = icmp eq i8* %73, null
  br i1 %74, label %115, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds i8, i8* %73, i64 176
  %77 = bitcast i8* %76 to %39*
  %78 = tail call %2* @zend_hash_find(%39* nonnull %77, %32* %2) #16
  %79 = icmp eq %2* %78, null
  br i1 %79, label %115, label %80

80:                                               ; preds = %75, %58
  %81 = phi %2* [ %61, %58 ], [ %78, %75 ]
  %82 = bitcast %2* %81 to %75**
  %83 = load %75*, %75** %82, align 8
  %84 = bitcast %75* %83 to %66**
  %85 = load i32, i32* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 20), align 4
  %86 = trunc i32 %85 to i8
  %87 = icmp slt i8 %86, 0
  %88 = icmp eq %75* %83, null
  %89 = or i1 %88, %87
  br i1 %89, label %115, label %90

90:                                               ; preds = %80
  %91 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %92 = tail call i32 @zend_verify_const_access(%75* nonnull %83, %1* %91) #16
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %115, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %75, %75* %83, i64 0, i32 0, i32 1
  %96 = bitcast %4* %95 to i8*
  %97 = load i8, i8* %96, align 8
  %98 = icmp ult i8 %97, 8
  br i1 %98, label %99, label %115

99:                                               ; preds = %94
  %100 = load %66*, %66** %84, align 8
  %101 = getelementptr inbounds %75, %75* %83, i64 0, i32 0, i32 1, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = bitcast %2* %0 to %66**
  store %66* %100, %66** %103, align 8
  %104 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 %102, i32* %104, align 8
  %105 = and i32 %102, 5120
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %115, label %107

107:                                              ; preds = %99
  %108 = and i32 %102, 4096
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %107
  tail call void @_zval_copy_ctor_func(%2* nonnull %0) #16
  br label %115

111:                                              ; preds = %107
  %112 = getelementptr inbounds %66, %66* %100, i64 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %112, align 4
  br label %115

115:                                              ; preds = %75, %58, %33, %39, %31, %69, %94, %111, %110, %99, %90, %80, %63, %65
  %116 = phi i8 [ 0, %65 ], [ 0, %63 ], [ 0, %80 ], [ 0, %90 ], [ 1, %99 ], [ 1, %110 ], [ 1, %111 ], [ 0, %94 ], [ 0, %69 ], [ 0, %31 ], [ 0, %39 ], [ 0, %33 ], [ 0, %58 ], [ 0, %75 ]
  ret i8 %116
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_resolve_class_name(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %43, %43* %1, i64 0, i32 3, i64 0
  %4 = load %43*, %43** %3, align 8
  %5 = getelementptr inbounds %43, %43* %4, i64 0, i32 3
  %6 = bitcast [1 x %43*]* %5 to %32**
  %7 = load %32*, %32** %6, align 8
  %8 = getelementptr inbounds %32, %32* %7, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %32, %32* %7, i64 0, i32 3, i64 0
  %13 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %12, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %36, label %15

15:                                               ; preds = %11
  %16 = load i64, i64* %8, align 8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i64 [ %16, %15 ], [ %9, %2 ]
  %19 = icmp eq i64 %18, 6
  br i1 %19, label %20, label %30

20:                                               ; preds = %17
  %21 = getelementptr inbounds %32, %32* %7, i64 0, i32 3, i64 0
  %22 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %21, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %20
  %25 = load i64, i64* %8, align 8
  %26 = icmp eq i64 %25, 6
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %21, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %27, %24, %17
  %31 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %31, align 8
  %32 = getelementptr inbounds [1 x %43*], [1 x %43*]* %5, i64 1
  %33 = bitcast [1 x %43*]* %32 to i8*
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 6
  br i1 %35, label %129, label %128

36:                                               ; preds = %11, %20, %27
  %37 = phi i32 [ 1, %11 ], [ 2, %20 ], [ 3, %27 ]
  %38 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %39 = icmp eq %1* %38, null
  br i1 %39, label %40, label %55

40:                                               ; preds = %36
  %41 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %42 = getelementptr inbounds %7, %7* %41, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 1048576
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %40
  %47 = getelementptr inbounds %7, %7* %41, i64 0, i32 3
  %48 = load %32*, %32** %47, align 8
  %49 = icmp eq %32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = icmp eq i32 %37, 1
  %52 = icmp eq i32 %37, 2
  %53 = select i1 %52, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0)
  %54 = select i1 %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i8* %53
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @228, i64 0, i64 0), i8* %54) #15
  unreachable

55:                                               ; preds = %36, %40, %46
  %56 = icmp eq i32 %37, 1
  br i1 %56, label %57, label %108

57:                                               ; preds = %55
  %58 = icmp eq %1* %38, null
  %59 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  br i1 %58, label %89, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %7, %7* %59, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 1048576
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %89

65:                                               ; preds = %60
  %66 = getelementptr inbounds %1, %1* %38, i64 0, i32 4
  %67 = load i32, i32* %66, align 4
  %68 = trunc i32 %67 to i8
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %89, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %73 = getelementptr inbounds %1, %1* %38, i64 0, i32 1
  %74 = load %32*, %32** %73, align 8
  %75 = bitcast %2* %72 to %32**
  store %32* %74, %32** %75, align 8
  %76 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 1
  %77 = bitcast %18* %76 to %64*
  %78 = getelementptr inbounds %64, %64* %77, i64 0, i32 1
  %79 = load i8, i8* %78, align 1
  %80 = and i8 %79, 2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %70
  %83 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 6, i32* %83, align 8
  br label %145

84:                                               ; preds = %70
  %85 = getelementptr inbounds %32, %32* %74, i64 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 8
  %88 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 5126, i32* %88, align 8
  br label %145

89:                                               ; preds = %57, %60, %65
  %90 = tail call %9* @get_next_op(%7* %59) #16
  %91 = getelementptr inbounds %9, %9* %90, i64 0, i32 6
  store i8 -99, i8* %91, align 4
  %92 = getelementptr inbounds %9, %9* %90, i64 0, i32 7
  store i8 8, i8* %92, align 1
  %93 = getelementptr inbounds %9, %9* %90, i64 0, i32 8
  store i8 8, i8* %93, align 2
  tail call fastcc void @244(%9* nonnull %90) #16
  %94 = icmp eq %37* %0, null
  br i1 %94, label %106, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %9, %9* %90, i64 0, i32 9
  store i8 2, i8* %96, align 1
  %97 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %98 = getelementptr inbounds %7, %7* %97, i64 0, i32 13
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 4
  %101 = getelementptr inbounds %9, %9* %90, i64 0, i32 3, i32 0
  store i32 %99, i32* %101, align 8
  %102 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %102, align 8
  %103 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %104 = bitcast %38* %103 to i32*
  %105 = load i32, i32* %101, align 8
  store i32 %105, i32* %104, align 8
  br label %106

106:                                              ; preds = %89, %95
  %107 = getelementptr inbounds %9, %9* %90, i64 0, i32 4
  store i32 1, i32* %107, align 4
  br label %145

108:                                              ; preds = %55
  %109 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %110 = tail call %9* @get_next_op(%7* %109) #16
  %111 = getelementptr inbounds %9, %9* %110, i64 0, i32 6
  store i8 -99, i8* %111, align 4
  %112 = getelementptr inbounds %9, %9* %110, i64 0, i32 7
  store i8 8, i8* %112, align 1
  %113 = getelementptr inbounds %9, %9* %110, i64 0, i32 8
  store i8 8, i8* %113, align 2
  tail call fastcc void @244(%9* nonnull %110) #16
  %114 = icmp eq %37* %0, null
  br i1 %114, label %126, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %9, %9* %110, i64 0, i32 9
  store i8 2, i8* %116, align 1
  %117 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %118 = getelementptr inbounds %7, %7* %117, i64 0, i32 13
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %118, align 4
  %121 = getelementptr inbounds %9, %9* %110, i64 0, i32 3, i32 0
  store i32 %119, i32* %121, align 8
  %122 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %122, align 8
  %123 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %124 = bitcast %38* %123 to i32*
  %125 = load i32, i32* %121, align 8
  store i32 %125, i32* %124, align 8
  br label %126

126:                                              ; preds = %108, %115
  %127 = getelementptr inbounds %9, %9* %110, i64 0, i32 4
  store i32 %37, i32* %127, align 4
  br label %145

128:                                              ; preds = %30
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

129:                                              ; preds = %30
  %130 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %131 = load %32*, %32** %6, align 8
  %132 = getelementptr inbounds %43, %43* %4, i64 0, i32 1
  %133 = load i16, i16* %132, align 2
  %134 = zext i16 %133 to i32
  %135 = tail call %32* @zend_resolve_class_name(%32* %131, i32 %134) #16
  %136 = bitcast %2* %130 to %32**
  store %32* %135, %32** %136, align 8
  %137 = getelementptr inbounds %32, %32* %135, i64 0, i32 0, i32 1
  %138 = bitcast %18* %137 to %64*
  %139 = getelementptr inbounds %64, %64* %138, i64 0, i32 1
  %140 = load i8, i8* %139, align 1
  %141 = and i8 %140, 2
  %142 = icmp eq i8 %141, 0
  %143 = select i1 %142, i32 5126, i32 6
  %144 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store i32 %143, i32* %144, align 8
  br label %145

145:                                              ; preds = %82, %84, %106, %129, %126
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_magic_const(%37* %0, %43* nocapture readonly %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %4 = tail call fastcc zeroext i8 @257(%2* nonnull %3, %43* %1)
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 1, i8* %7, align 8
  br label %28

8:                                                ; preds = %2
  %9 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %10 = tail call %9* @get_next_op(%7* %9) #16
  %11 = getelementptr inbounds %9, %9* %10, i64 0, i32 6
  store i8 -99, i8* %11, align 4
  %12 = getelementptr inbounds %9, %9* %10, i64 0, i32 7
  store i8 8, i8* %12, align 1
  %13 = getelementptr inbounds %9, %9* %10, i64 0, i32 8
  store i8 8, i8* %13, align 2
  tail call fastcc void @244(%9* nonnull %10) #16
  %14 = icmp eq %37* %0, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %9, %9* %10, i64 0, i32 9
  store i8 2, i8* %16, align 1
  %17 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %18 = getelementptr inbounds %7, %7* %17, i64 0, i32 13
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %9, %9* %10, i64 0, i32 3, i32 0
  store i32 %19, i32* %21, align 8
  %22 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %22, align 8
  %23 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %24 = bitcast %38* %23 to i32*
  %25 = load i32, i32* %21, align 8
  store i32 %25, i32* %24, align 8
  br label %26

26:                                               ; preds = %8, %15
  %27 = getelementptr inbounds %9, %9* %10, i64 0, i32 4
  store i32 1, i32* %27, align 4
  br label %28

28:                                               ; preds = %26, %6
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @257(%2* %0, %43* nocapture readonly %1) unnamed_addr #0 {
  %3 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %4 = load %1*, %1** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 1), align 8
  %5 = getelementptr inbounds %43, %43* %1, i64 0, i32 1
  %6 = load i16, i16* %5, align 2
  switch i16 %6, label %309 [
    i16 370, label %7
    i16 371, label %12
    i16 372, label %25
    i16 376, label %129
    i16 375, label %150
    i16 373, label %243
    i16 374, label %267
    i16 389, label %291
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %43, %43* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %2, %2* %0, i64 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  br label %310

12:                                               ; preds = %2
  %13 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 2), align 8
  %14 = bitcast %2* %0 to %32**
  store %32* %13, %32** %14, align 8
  %15 = getelementptr inbounds %32, %32* %13, i64 0, i32 0, i32 1
  %16 = bitcast %18* %15 to %64*
  %17 = getelementptr inbounds %64, %64* %16, i64 0, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %310

21:                                               ; preds = %12
  %22 = getelementptr inbounds %32, %32* %13, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = add i32 %23, 1
  store i32 %24, i32* %22, align 8
  br label %310

25:                                               ; preds = %2
  %26 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 2), align 8
  %27 = getelementptr inbounds %32, %32* %26, i64 0, i32 3, i64 0
  %28 = getelementptr inbounds %32, %32* %26, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 32
  %31 = and i64 %30, -8
  %32 = tail call noalias i8* @_emalloc(i64 %31) #17
  %33 = bitcast i8* %32 to %32*
  %34 = bitcast i8* %32 to i32*
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %32, i64 4
  %36 = bitcast i8* %35 to i32*
  store i32 6, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i64*
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %29, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* nonnull align 1 %27, i64 %29, i1 false) #16
  %42 = getelementptr inbounds %32, %32* %33, i64 0, i32 3, i64 %29
  store i8 0, i8* %42, align 1
  %43 = load i64, i64* %40, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %82, label %45

45:                                               ; preds = %25
  %46 = add nsw i64 %43, 24
  br label %47

47:                                               ; preds = %51, %45
  %48 = phi i64 [ %49, %51 ], [ %46, %45 ]
  %49 = add nsw i64 %48, -1
  %50 = icmp slt i64 %48, 25
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %32, i64 %49
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 47
  br i1 %54, label %47, label %59

55:                                               ; preds = %47
  store i8 47, i8* %41, align 1
  %56 = getelementptr inbounds i8, i8* %32, i64 25
  store i8 0, i8* %56, align 1
  br label %82

57:                                               ; preds = %63
  %58 = icmp slt i64 %60, 25
  br i1 %58, label %77, label %69

59:                                               ; preds = %51, %63
  %60 = phi i64 [ %61, %63 ], [ %49, %51 ]
  %61 = add nsw i64 %60, -1
  %62 = icmp slt i64 %60, 25
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %32, i64 %61
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 47
  br i1 %66, label %57, label %59

67:                                               ; preds = %59
  store i8 46, i8* %41, align 1
  %68 = getelementptr inbounds i8, i8* %32, i64 25
  store i8 0, i8* %68, align 1
  br label %82

69:                                               ; preds = %57, %73
  %70 = phi i64 [ %71, %73 ], [ %61, %57 ]
  %71 = add nsw i64 %70, -1
  %72 = icmp slt i64 %70, 25
  br i1 %72, label %77, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds i8, i8* %32, i64 %71
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 47
  br i1 %76, label %69, label %79

77:                                               ; preds = %69, %57
  store i8 47, i8* %41, align 1
  %78 = getelementptr inbounds i8, i8* %32, i64 25
  store i8 0, i8* %78, align 1
  br label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds i8, i8* %32, i64 %70
  store i8 0, i8* %80, align 1
  %81 = add i64 %70, -24
  br label %82

82:                                               ; preds = %25, %55, %67, %77, %79
  %83 = phi i64 [ 1, %55 ], [ 1, %67 ], [ 1, %77 ], [ %81, %79 ], [ 0, %25 ]
  store i64 %83, i64* %40, align 8
  %84 = tail call i32 @strcmp(i8* nonnull %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @229, i64 0, i64 0)) #19
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %119

86:                                               ; preds = %82
  %87 = getelementptr inbounds i8, i8* %32, i64 5
  %88 = load i8, i8* %87, align 1
  %89 = and i8 %88, 2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %101

91:                                               ; preds = %86
  %92 = load i32, i32* %34, align 8
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %99

94:                                               ; preds = %91
  %95 = tail call i8* @_erealloc(i8* nonnull %32, i64 4128) #18
  %96 = getelementptr inbounds i8, i8* %95, i64 8
  %97 = bitcast i8* %96 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4096>, <2 x i64>* %97, align 8
  %98 = getelementptr inbounds i8, i8* %95, i64 24
  br label %111

99:                                               ; preds = %91
  %100 = add i32 %92, -1
  store i32 %100, i32* %34, align 8
  br label %101

101:                                              ; preds = %99, %86
  %102 = tail call noalias i8* @_emalloc(i64 4128) #17
  %103 = bitcast i8* %102 to i32*
  store i32 1, i32* %103, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 4
  %105 = bitcast i8* %104 to i32*
  store i32 6, i32* %105, align 4
  %106 = getelementptr inbounds i8, i8* %102, i64 8
  %107 = bitcast i8* %106 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4096>, <2 x i64>* %107, align 8
  %108 = getelementptr inbounds i8, i8* %102, i64 24
  %109 = load i64, i64* %40, align 8
  %110 = add i64 %109, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %108, i8* nonnull align 8 %41, i64 %110, i1 false) #16
  br label %111

111:                                              ; preds = %94, %101
  %112 = phi i8* [ %95, %94 ], [ %102, %101 ]
  %113 = phi i8* [ %98, %94 ], [ %108, %101 ]
  %114 = getelementptr inbounds i8, i8* %112, i64 16
  %115 = bitcast i8* %114 to i64*
  %116 = bitcast i8* %112 to %32*
  %117 = tail call i8* @getcwd(i8* nonnull %113, i64 4096) #16
  %118 = tail call i64 @strlen(i8* nonnull %113) #19
  store i64 %118, i64* %115, align 8
  br label %119

119:                                              ; preds = %82, %111
  %120 = phi %32* [ %116, %111 ], [ %33, %82 ]
  %121 = bitcast %2* %0 to %32**
  store %32* %120, %32** %121, align 8
  %122 = getelementptr inbounds %32, %32* %120, i64 0, i32 0, i32 1
  %123 = bitcast %18* %122 to %64*
  %124 = getelementptr inbounds %64, %64* %123, i64 0, i32 1
  %125 = load i8, i8* %124, align 1
  %126 = and i8 %125, 2
  %127 = icmp eq i8 %126, 0
  %128 = select i1 %127, i32 5126, i32 6
  br label %310

129:                                              ; preds = %2
  %130 = icmp eq %7* %3, null
  br i1 %130, label %147, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %7, %7* %3, i64 0, i32 3
  %133 = load %32*, %32** %132, align 8
  %134 = icmp eq %32* %133, null
  br i1 %134, label %147, label %135

135:                                              ; preds = %131
  %136 = bitcast %2* %0 to %32**
  store %32* %133, %32** %136, align 8
  %137 = getelementptr inbounds %32, %32* %133, i64 0, i32 0, i32 1
  %138 = bitcast %18* %137 to %64*
  %139 = getelementptr inbounds %64, %64* %138, i64 0, i32 1
  %140 = load i8, i8* %139, align 1
  %141 = and i8 %140, 2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %310

143:                                              ; preds = %135
  %144 = getelementptr inbounds %32, %32* %133, i64 0, i32 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, 1
  store i32 %146, i32* %144, align 8
  br label %310

147:                                              ; preds = %131, %129
  %148 = load i64, i64* bitcast (%32** @zend_empty_string to i64*), align 8
  %149 = getelementptr inbounds %2, %2* %0, i64 0, i32 0, i32 0
  store i64 %148, i64* %149, align 8
  br label %310

150:                                              ; preds = %2
  %151 = icmp eq %7* %3, null
  br i1 %151, label %160, label %152

152:                                              ; preds = %150
  %153 = getelementptr inbounds %7, %7* %3, i64 0, i32 4
  %154 = load %1*, %1** %153, align 8
  %155 = icmp eq %1* %154, null
  br i1 %155, label %156, label %160

156:                                              ; preds = %152
  %157 = getelementptr inbounds %7, %7* %3, i64 0, i32 3
  %158 = load %32*, %32** %157, align 8
  %159 = icmp eq %32* %158, null
  br i1 %159, label %160, label %168

160:                                              ; preds = %150, %156, %152
  %161 = getelementptr inbounds %7, %7* %3, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = and i32 %162, 1048576
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %7, %7* %3, i64 0, i32 3
  %167 = load %32*, %32** %166, align 8
  br label %168

168:                                              ; preds = %165, %156
  %169 = phi %32* [ %167, %165 ], [ %158, %156 ]
  %170 = bitcast %2* %0 to %32**
  store %32* %169, %32** %170, align 8
  %171 = getelementptr inbounds %32, %32* %169, i64 0, i32 0, i32 1
  %172 = bitcast %18* %171 to %64*
  %173 = getelementptr inbounds %64, %64* %172, i64 0, i32 1
  %174 = load i8, i8* %173, align 1
  %175 = and i8 %174, 2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %310

177:                                              ; preds = %168
  %178 = getelementptr inbounds %32, %32* %169, i64 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = add i32 %179, 1
  store i32 %180, i32* %178, align 8
  br label %310

181:                                              ; preds = %160
  %182 = icmp eq %1* %4, null
  %183 = getelementptr inbounds %7, %7* %3, i64 0, i32 3
  %184 = load %32*, %32** %183, align 8
  %185 = icmp eq %32* %184, null
  br i1 %182, label %227, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %1, %1* %4, i64 0, i32 1
  %188 = load %32*, %32** %187, align 8
  br i1 %185, label %215, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %32, %32* %188, i64 0, i32 3, i64 0
  %191 = getelementptr inbounds %32, %32* %188, i64 0, i32 2
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %32, %32* %184, i64 0, i32 3, i64 0
  %194 = getelementptr inbounds %32, %32* %184, i64 0, i32 2
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %192, 2
  %197 = add i64 %196, %195
  %198 = add i64 %197, 32
  %199 = and i64 %198, -8
  %200 = tail call noalias i8* @_emalloc(i64 %199) #17
  %201 = bitcast i8* %200 to %32*
  %202 = bitcast i8* %200 to i32*
  store i32 1, i32* %202, align 8
  %203 = getelementptr inbounds i8, i8* %200, i64 4
  %204 = bitcast i8* %203 to i32*
  store i32 6, i32* %204, align 4
  %205 = getelementptr inbounds i8, i8* %200, i64 8
  %206 = bitcast i8* %205 to i64*
  store i64 0, i64* %206, align 8
  %207 = getelementptr inbounds i8, i8* %200, i64 16
  %208 = bitcast i8* %207 to i64*
  store i64 %197, i64* %208, align 8
  %209 = getelementptr inbounds i8, i8* %200, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %209, i8* nonnull align 1 %190, i64 %192, i1 false) #16
  %210 = getelementptr inbounds %32, %32* %201, i64 0, i32 3, i64 %192
  %211 = bitcast i8* %210 to i16*
  store i16 14906, i16* %211, align 1
  %212 = getelementptr inbounds i8, i8* %210, i64 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %212, i8* nonnull align 1 %193, i64 %195, i1 false) #16
  %213 = getelementptr inbounds %32, %32* %201, i64 0, i32 3, i64 %197
  store i8 0, i8* %213, align 1
  %214 = bitcast %2* %0 to i8**
  store i8* %200, i8** %214, align 8
  br label %310

215:                                              ; preds = %186
  %216 = bitcast %2* %0 to %32**
  store %32* %188, %32** %216, align 8
  %217 = getelementptr inbounds %32, %32* %188, i64 0, i32 0, i32 1
  %218 = bitcast %18* %217 to %64*
  %219 = getelementptr inbounds %64, %64* %218, i64 0, i32 1
  %220 = load i8, i8* %219, align 1
  %221 = and i8 %220, 2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %310

223:                                              ; preds = %215
  %224 = getelementptr inbounds %32, %32* %188, i64 0, i32 0, i32 0
  %225 = load i32, i32* %224, align 8
  %226 = add i32 %225, 1
  store i32 %226, i32* %224, align 8
  br label %310

227:                                              ; preds = %181
  br i1 %185, label %240, label %228

228:                                              ; preds = %227
  %229 = bitcast %2* %0 to %32**
  store %32* %184, %32** %229, align 8
  %230 = getelementptr inbounds %32, %32* %184, i64 0, i32 0, i32 1
  %231 = bitcast %18* %230 to %64*
  %232 = getelementptr inbounds %64, %64* %231, i64 0, i32 1
  %233 = load i8, i8* %232, align 1
  %234 = and i8 %233, 2
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %236, label %310

236:                                              ; preds = %228
  %237 = getelementptr inbounds %32, %32* %184, i64 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 8
  %239 = add i32 %238, 1
  store i32 %239, i32* %237, align 8
  br label %310

240:                                              ; preds = %227
  %241 = load i64, i64* bitcast (%32** @zend_empty_string to i64*), align 8
  %242 = getelementptr inbounds %2, %2* %0, i64 0, i32 0, i32 0
  store i64 %241, i64* %242, align 8
  br label %310

243:                                              ; preds = %2
  %244 = icmp eq %1* %4, null
  br i1 %244, label %264, label %245

245:                                              ; preds = %243
  %246 = getelementptr inbounds %1, %1* %4, i64 0, i32 4
  %247 = load i32, i32* %246, align 4
  %248 = trunc i32 %247 to i8
  %249 = icmp slt i8 %248, 0
  br i1 %249, label %313, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %1, %1* %4, i64 0, i32 1
  %252 = load %32*, %32** %251, align 8
  %253 = bitcast %2* %0 to %32**
  store %32* %252, %32** %253, align 8
  %254 = getelementptr inbounds %32, %32* %252, i64 0, i32 0, i32 1
  %255 = bitcast %18* %254 to %64*
  %256 = getelementptr inbounds %64, %64* %255, i64 0, i32 1
  %257 = load i8, i8* %256, align 1
  %258 = and i8 %257, 2
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %260, label %310

260:                                              ; preds = %250
  %261 = getelementptr inbounds %32, %32* %252, i64 0, i32 0, i32 0
  %262 = load i32, i32* %261, align 8
  %263 = add i32 %262, 1
  store i32 %263, i32* %261, align 8
  br label %310

264:                                              ; preds = %243
  %265 = load i64, i64* bitcast (%32** @zend_empty_string to i64*), align 8
  %266 = getelementptr inbounds %2, %2* %0, i64 0, i32 0, i32 0
  store i64 %265, i64* %266, align 8
  br label %310

267:                                              ; preds = %2
  %268 = icmp eq %1* %4, null
  br i1 %268, label %288, label %269

269:                                              ; preds = %267
  %270 = getelementptr inbounds %1, %1* %4, i64 0, i32 4
  %271 = load i32, i32* %270, align 4
  %272 = trunc i32 %271 to i8
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %269
  %275 = getelementptr inbounds %1, %1* %4, i64 0, i32 1
  %276 = load %32*, %32** %275, align 8
  %277 = bitcast %2* %0 to %32**
  store %32* %276, %32** %277, align 8
  %278 = getelementptr inbounds %32, %32* %276, i64 0, i32 0, i32 1
  %279 = bitcast %18* %278 to %64*
  %280 = getelementptr inbounds %64, %64* %279, i64 0, i32 1
  %281 = load i8, i8* %280, align 1
  %282 = and i8 %281, 2
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %284, label %310

284:                                              ; preds = %274
  %285 = getelementptr inbounds %32, %32* %276, i64 0, i32 0, i32 0
  %286 = load i32, i32* %285, align 8
  %287 = add i32 %286, 1
  store i32 %287, i32* %285, align 8
  br label %310

288:                                              ; preds = %267, %269
  %289 = load i64, i64* bitcast (%32** @zend_empty_string to i64*), align 8
  %290 = getelementptr inbounds %2, %2* %0, i64 0, i32 0, i32 0
  store i64 %289, i64* %290, align 8
  br label %310

291:                                              ; preds = %2
  %292 = load %32*, %32** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 2), align 8
  %293 = icmp eq %32* %292, null
  br i1 %293, label %306, label %294

294:                                              ; preds = %291
  %295 = bitcast %2* %0 to %32**
  store %32* %292, %32** %295, align 8
  %296 = getelementptr inbounds %32, %32* %292, i64 0, i32 0, i32 1
  %297 = bitcast %18* %296 to %64*
  %298 = getelementptr inbounds %64, %64* %297, i64 0, i32 1
  %299 = load i8, i8* %298, align 1
  %300 = and i8 %299, 2
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %310

302:                                              ; preds = %294
  %303 = getelementptr inbounds %32, %32* %292, i64 0, i32 0, i32 0
  %304 = load i32, i32* %303, align 8
  %305 = add i32 %304, 1
  store i32 %305, i32* %303, align 8
  br label %310

306:                                              ; preds = %291
  %307 = load i64, i64* bitcast (%32** @zend_empty_string to i64*), align 8
  %308 = getelementptr inbounds %2, %2* %0, i64 0, i32 0, i32 0
  store i64 %307, i64* %308, align 8
  br label %310

309:                                              ; preds = %2
  unreachable

310:                                              ; preds = %294, %274, %250, %228, %215, %168, %135, %12, %302, %284, %260, %236, %223, %177, %143, %21, %306, %288, %264, %240, %189, %147, %119, %7
  %311 = phi i32 [ 4, %7 ], [ %128, %119 ], [ 6, %147 ], [ 5126, %189 ], [ 6, %240 ], [ 6, %264 ], [ 6, %288 ], [ 6, %306 ], [ 5126, %21 ], [ 5126, %143 ], [ 5126, %177 ], [ 5126, %223 ], [ 5126, %236 ], [ 5126, %260 ], [ 5126, %284 ], [ 5126, %302 ], [ 6, %12 ], [ 6, %135 ], [ 6, %168 ], [ 6, %215 ], [ 6, %228 ], [ 6, %250 ], [ 6, %274 ], [ 6, %294 ]
  %312 = getelementptr inbounds %2, %2* %0, i64 0, i32 1, i32 0
  store i32 %311, i32* %312, align 8
  br label %313

313:                                              ; preds = %310, %245
  %314 = phi i8 [ 0, %245 ], [ 1, %310 ]
  ret i8 %314
}

; Function Attrs: norecurse nounwind readnone uwtable
define hidden zeroext i8 @zend_is_allowed_in_const_expr(i16 zeroext %0) local_unnamed_addr #10 {
  switch i16 %0, label %2 [
    i16 64, label %5
    i16 520, label %5
    i16 521, label %5
    i16 522, label %5
    i16 523, label %5
    i16 524, label %5
    i16 270, label %5
    i16 259, label %5
    i16 260, label %5
    i16 770, label %5
    i16 512, label %5
    i16 129, label %5
    i16 525, label %5
    i16 257, label %5
    i16 516, label %5
    i16 0, label %5
  ]

2:                                                ; preds = %1
  %3 = icmp eq i16 %0, 529
  %4 = zext i1 %3 to i8
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %6 = phi i8 [ 1, %1 ], [ %4, %2 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ]
  ret i8 %6
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_const_expr_class_const(%43** nocapture %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = load %43*, %43** %0, align 8
  %4 = getelementptr inbounds %43, %43* %3, i64 0, i32 3, i64 0
  %5 = load %43*, %43** %4, align 8
  %6 = getelementptr inbounds %43, %43* %3, i64 0, i32 3, i64 1
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %43, %43* %7, i64 0, i32 3
  %9 = bitcast [1 x %43*]* %8 to %32**
  %10 = load %32*, %32** %9, align 8
  %11 = bitcast %2* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = getelementptr inbounds %43, %43* %5, i64 0, i32 0
  %13 = load i16, i16* %12, align 8
  %14 = icmp eq i16 %13, 64
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @171, i64 0, i64 0)) #15
  unreachable

16:                                               ; preds = %1
  %17 = call fastcc zeroext i8 @255(%2* nonnull %2, %43* %5, %43* %7, i8 zeroext 1)
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %122

19:                                               ; preds = %16
  %20 = getelementptr inbounds %43, %43* %5, i64 0, i32 3
  %21 = bitcast [1 x %43*]* %20 to %32**
  %22 = load %32*, %32** %21, align 8
  %23 = getelementptr inbounds %32, %32* %22, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %26, label %32

26:                                               ; preds = %19
  %27 = getelementptr inbounds %32, %32* %22, i64 0, i32 3, i64 0
  %28 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %27, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 4) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %62, label %30

30:                                               ; preds = %26
  %31 = load i64, i64* %23, align 8
  br label %32

32:                                               ; preds = %30, %19
  %33 = phi i64 [ %31, %30 ], [ %24, %19 ]
  %34 = icmp eq i64 %33, 6
  br i1 %34, label %35, label %46

35:                                               ; preds = %32
  %36 = getelementptr inbounds %32, %32* %22, i64 0, i32 3, i64 0
  %37 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %36, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @17, i64 0, i64 0), i64 6) #16
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %62, label %39

39:                                               ; preds = %35
  %40 = load i64, i64* %23, align 8
  %41 = icmp eq i64 %40, 6
  br i1 %41, label %42, label %46

42:                                               ; preds = %39
  %43 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %36, i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @18, i64 0, i64 0), i64 6) #16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @172, i64 0, i64 0)) #15
  unreachable

46:                                               ; preds = %42, %39, %32
  %47 = getelementptr inbounds [1 x %43*], [1 x %43*]* %20, i64 1
  %48 = bitcast [1 x %43*]* %47 to i8*
  %49 = load i8, i8* %48, align 8
  %50 = icmp eq i8 %49, 6
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @8, i64 0, i64 0)) #15
  unreachable

52:                                               ; preds = %46
  %53 = load %32*, %32** %21, align 8
  %54 = getelementptr inbounds %43, %43* %5, i64 0, i32 1
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = tail call %32* @zend_resolve_class_name(%32* %53, i32 %56) #16
  %58 = getelementptr inbounds %32, %32* %57, i64 0, i32 2
  %59 = getelementptr inbounds %32, %32* %57, i64 0, i32 0, i32 1
  %60 = bitcast %18* %59 to %64*
  %61 = getelementptr inbounds %64, %64* %60, i64 0, i32 1
  br label %74

62:                                               ; preds = %26, %35
  %63 = phi i32 [ 2, %35 ], [ 1, %26 ]
  %64 = getelementptr inbounds %32, %32* %22, i64 0, i32 0, i32 1
  %65 = bitcast %18* %64 to %64*
  %66 = getelementptr inbounds %64, %64* %65, i64 0, i32 1
  %67 = load i8, i8* %66, align 1
  %68 = and i8 %67, 2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %62
  %71 = getelementptr inbounds %32, %32* %22, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 1
  store i32 %73, i32* %71, align 8
  br label %74

74:                                               ; preds = %70, %62, %52
  %75 = phi i8* [ %66, %70 ], [ %66, %62 ], [ %61, %52 ]
  %76 = phi i64* [ %23, %70 ], [ %23, %62 ], [ %58, %52 ]
  %77 = phi i32 [ %63, %70 ], [ %63, %62 ], [ 0, %52 ]
  %78 = phi %32* [ %22, %70 ], [ %22, %62 ], [ %57, %52 ]
  %79 = getelementptr inbounds %32, %32* %78, i64 0, i32 3, i64 0
  %80 = load i64, i64* %76, align 8
  %81 = getelementptr inbounds %32, %32* %10, i64 0, i32 3, i64 0
  %82 = getelementptr inbounds %32, %32* %10, i64 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %80, 2
  %85 = add i64 %84, %83
  %86 = add i64 %85, 32
  %87 = and i64 %86, -8
  %88 = tail call noalias i8* @_emalloc(i64 %87) #17
  %89 = bitcast i8* %88 to %32*
  %90 = bitcast i8* %88 to i32*
  store i32 1, i32* %90, align 8
  %91 = getelementptr inbounds i8, i8* %88, i64 4
  %92 = bitcast i8* %91 to i32*
  store i32 6, i32* %92, align 4
  %93 = getelementptr inbounds i8, i8* %88, i64 8
  %94 = bitcast i8* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 %85, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %88, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* nonnull align 1 %79, i64 %80, i1 false) #16
  %98 = getelementptr inbounds %32, %32* %89, i64 0, i32 3, i64 %80
  %99 = bitcast i8* %98 to i16*
  store i16 14906, i16* %99, align 1
  %100 = getelementptr inbounds i8, i8* %98, i64 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %100, i8* nonnull align 1 %81, i64 %83, i1 false) #16
  %101 = getelementptr inbounds %32, %32* %89, i64 0, i32 3, i64 %85
  store i8 0, i8* %101, align 1
  %102 = bitcast %2* %2 to i8**
  store i8* %88, i8** %102, align 8
  %103 = getelementptr inbounds %2, %2* %2, i64 0, i32 1
  %104 = getelementptr inbounds %4, %4* %103, i64 0, i32 0
  store i32 5387, i32* %104, align 8
  %105 = trunc i32 %77 to i8
  %106 = bitcast %4* %103 to %65*
  %107 = getelementptr inbounds %65, %65* %106, i64 0, i32 2
  store i8 %105, i8* %107, align 2
  tail call void @zend_ast_destroy(%43* %3) #16
  %108 = load i8, i8* %75, align 1
  %109 = and i8 %108, 2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %122

111:                                              ; preds = %74
  %112 = getelementptr inbounds %32, %32* %78, i64 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, -1
  store i32 %114, i32* %112, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %122

116:                                              ; preds = %111
  %117 = and i8 %108, 1
  %118 = icmp eq i8 %117, 0
  %119 = bitcast %32* %78 to i8*
  br i1 %118, label %121, label %120

120:                                              ; preds = %116
  tail call void @free(i8* %119) #16
  br label %122

121:                                              ; preds = %116
  tail call void @_efree(i8* %119) #16
  br label %122

122:                                              ; preds = %121, %120, %111, %74, %16
  %123 = call %43* @zend_ast_create_zval_ex(%2* nonnull %2, i16 zeroext 0) #16
  store %43* %123, %43** %0, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  ret void
}

declare dso_local void @zend_ast_destroy(%43*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_const_expr_const(%43** nocapture %0) local_unnamed_addr #0 {
  %2 = alloca i8, align 1
  %3 = alloca %2, align 8
  %4 = alloca %2, align 8
  %5 = load %43*, %43** %0, align 8
  %6 = getelementptr inbounds %43, %43* %5, i64 0, i32 3, i64 0
  %7 = load %43*, %43** %6, align 8
  %8 = getelementptr inbounds %43, %43* %7, i64 0, i32 3
  %9 = bitcast [1 x %43*]* %8 to %32**
  %10 = load %32*, %32** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #16
  %11 = bitcast %2* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = bitcast %2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #16
  %13 = getelementptr inbounds %43, %43* %7, i64 0, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = load %39*, %39** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 22, i32 7), align 8
  %17 = call %32* @zend_resolve_non_class_name(%32* %10, i32 %15, i8* nonnull %2, i8 zeroext 1, %39* %16) #16
  %18 = bitcast %2* %4 to %32**
  store %32* %17, %32** %18, align 8
  %19 = getelementptr inbounds %32, %32* %17, i64 0, i32 0, i32 1
  %20 = bitcast %18* %19 to %64*
  %21 = getelementptr inbounds %64, %64* %20, i64 0, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = and i8 %22, 2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 5126, i32 6
  %26 = getelementptr inbounds %2, %2* %4, i64 0, i32 1
  %27 = getelementptr inbounds %4, %4* %26, i64 0, i32 0
  store i32 %25, i32* %27, align 8
  %28 = load i8, i8* %2, align 1
  %29 = call fastcc zeroext i8 @241(%2* nonnull %3, %32* %17, i8 zeroext %28)
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %1
  %32 = load i8, i8* %21, align 1
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %46

35:                                               ; preds = %31
  %36 = getelementptr inbounds %32, %32* %17, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = add i32 %37, -1
  store i32 %38, i32* %36, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = and i8 %32, 1
  %42 = icmp eq i8 %41, 0
  %43 = bitcast %32* %17 to i8*
  br i1 %42, label %45, label %44

44:                                               ; preds = %40
  call void @free(i8* %43) #16
  br label %46

45:                                               ; preds = %40
  call void @_efree(i8* %43) #16
  br label %46

46:                                               ; preds = %31, %35, %44, %45
  call void @zend_ast_destroy(%43* %5) #16
  br label %53

47:                                               ; preds = %1
  store i32 5387, i32* %27, align 8
  %48 = icmp eq i8 %28, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %47
  %50 = bitcast %4* %26 to %65*
  %51 = getelementptr inbounds %65, %65* %50, i64 0, i32 2
  store i8 16, i8* %51, align 2
  br label %52

52:                                               ; preds = %47, %49
  call void @zend_ast_destroy(%43* %5) #16
  br label %53

53:                                               ; preds = %52, %46
  %54 = phi %2* [ %4, %52 ], [ %3, %46 ]
  %55 = call %43* @zend_ast_create_zval_ex(%2* nonnull %54, i16 zeroext 0) #16
  store %43* %55, %43** %0, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_const_expr_magic_const(%43** nocapture %0) local_unnamed_addr #0 {
  %2 = alloca %2, align 8
  %3 = load %43*, %43** %0, align 8
  %4 = bitcast %2* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #16
  %5 = tail call noalias i8* @_emalloc(i64 40) #17
  %6 = bitcast i8* %5 to i32*
  store i32 1, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  %8 = bitcast i8* %7 to i32*
  store i32 6, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %5, i64 8
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9>, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @173, i64 0, i64 0), i64 9, i1 false) #16
  %12 = getelementptr inbounds i8, i8* %5, i64 33
  store i8 0, i8* %12, align 1
  %13 = bitcast %2* %2 to i8**
  store i8* %5, i8** %13, align 8
  %14 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  store i32 8393995, i32* %14, align 8
  tail call void @zend_ast_destroy(%43* %3) #16
  %15 = call %43* @zend_ast_create_zval_ex(%2* nonnull %2, i16 zeroext 0) #16
  store %43* %15, %43** %0, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zend_compile_const_expr(%43** nocapture %0) #0 {
  %2 = alloca %2, align 8
  %3 = load %43*, %43** %0, align 8
  %4 = icmp eq %43* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %43, %43* %3, i64 0, i32 0
  %7 = load i16, i16* %6, align 8
  switch i16 %7, label %8 [
    i16 64, label %25
    i16 516, label %9
    i16 257, label %10
    i16 0, label %11
    i16 129, label %24
    i16 259, label %24
    i16 260, label %24
    i16 270, label %24
    i16 512, label %24
    i16 520, label %24
    i16 521, label %24
    i16 522, label %24
    i16 523, label %24
    i16 524, label %24
    i16 525, label %24
    i16 770, label %24
    i16 529, label %24
  ]

8:                                                ; preds = %5
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @174, i64 0, i64 0)) #15
  unreachable

9:                                                ; preds = %5
  tail call void @zend_compile_const_expr_class_const(%43** nonnull %0)
  br label %25

10:                                               ; preds = %5
  tail call void @zend_compile_const_expr_const(%43** nonnull %0)
  br label %25

11:                                               ; preds = %5
  %12 = bitcast %2* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #16
  %13 = tail call noalias i8* @_emalloc(i64 40) #17
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 6, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 8
  %18 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> <i64 0, i64 9>, <2 x i64>* %18, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @173, i64 0, i64 0), i64 9, i1 false) #16
  %20 = getelementptr inbounds i8, i8* %13, i64 33
  store i8 0, i8* %20, align 1
  %21 = bitcast %2* %2 to i8**
  store i8* %13, i8** %21, align 8
  %22 = getelementptr inbounds %2, %2* %2, i64 0, i32 1, i32 0
  store i32 8393995, i32* %22, align 8
  tail call void @zend_ast_destroy(%43* nonnull %3) #16
  %23 = call %43* @zend_ast_create_zval_ex(%2* nonnull %2, i16 zeroext 0) #16
  store %43* %23, %43** %0, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  br label %25

24:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  tail call void @zend_ast_apply(%43* nonnull %3, void (%43**)* nonnull @zend_compile_const_expr) #16
  br label %25

25:                                               ; preds = %5, %9, %10, %11, %24, %1
  ret void
}

declare dso_local void @zend_ast_apply(%43*, void (%43**)*) local_unnamed_addr #3

declare dso_local noalias i8* @_emalloc_16() local_unnamed_addr #3

declare dso_local %43* @zend_ast_copy(%43*) local_unnamed_addr #3

declare dso_local %2* @zend_hash_index_find(%39*, i64) local_unnamed_addr #3

declare dso_local void @_zval_dtor_func(%66*) local_unnamed_addr #3

declare dso_local i64 @zend_hash_func(i8*, i64) local_unnamed_addr #3

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @__zend_malloc(i64) local_unnamed_addr #8

declare dso_local %2* @zend_hash_str_find(%39*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @free(i8* nocapture) local_unnamed_addr #12

declare dso_local void @init_op(%9*) local_unnamed_addr #3

declare dso_local i8* @zend_stack_top(%45*) local_unnamed_addr #3

declare dso_local %32* @_zval_get_string_func(%2*) local_unnamed_addr #3

declare dso_local i32 @zend_stack_count(%45*) local_unnamed_addr #3

declare dso_local i8* @zend_stack_base(%45*) local_unnamed_addr #3

declare dso_local void @_zval_copy_ctor_func(%2*) local_unnamed_addr #3

declare dso_local void @zend_array_destroy(%39*) local_unnamed_addr #3

declare dso_local %43* @zend_ast_list_add(%43*, %43*) local_unnamed_addr #3

declare dso_local %32* @zend_ast_export(i8*, %43*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @258(%9* %0, i8 zeroext %1, i32 %2) unnamed_addr #0 {
  %4 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %5 = getelementptr inbounds %7, %7* %4, i64 0, i32 11
  %6 = load %9*, %9** %5, align 8
  %7 = icmp eq %9* %6, %0
  %8 = ptrtoint %9* %6 to i64
  br i1 %7, label %63, label %9

9:                                                ; preds = %3, %22
  %10 = phi %9* [ %11, %22 ], [ %0, %3 ]
  %11 = getelementptr inbounds %9, %9* %10, i64 -1
  %12 = getelementptr inbounds %9, %9* %10, i64 -1, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, %1
  br i1 %14, label %15, label %22

15:                                               ; preds = %9
  %16 = getelementptr inbounds %9, %9* %10, i64 -1, i32 3, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = getelementptr inbounds %9, %9* %10, i64 -1, i32 6
  %21 = load i8, i8* %20, align 4
  switch i8 %21, label %32 [
    i8 72, label %22
    i8 55, label %22
    i8 46, label %63
    i8 47, label %63
    i8 52, label %63
    i8 13, label %63
    i8 -117, label %63
    i8 -116, label %63
    i8 -111, label %63
    i8 -85, label %63
    i8 -84, label %63
    i8 -94, label %63
    i8 68, label %24
  ]

22:                                               ; preds = %9, %15, %19, %19
  %23 = icmp eq %9* %11, %6
  br i1 %23, label %63, label %9

24:                                               ; preds = %19
  %25 = getelementptr inbounds %9, %9* %10, i64 -1, i32 2, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %9, %9* %6, i64 %27
  %29 = getelementptr inbounds %9, %9* %28, i64 -1
  %30 = getelementptr inbounds %9, %9* %29, i64 1
  %31 = icmp eq %9* %30, %0
  br i1 %31, label %63, label %32

32:                                               ; preds = %19, %24
  %33 = phi %9* [ %28, %24 ], [ %10, %19 ]
  %34 = ptrtoint %9* %33 to i64
  %35 = sub i64 %34, %8
  %36 = lshr exact i64 %35, 5
  %37 = trunc i64 %36 to i32
  %38 = tail call fastcc i32 @259(%7* %4, i32 %37)
  %39 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %40 = getelementptr inbounds %7, %7* %39, i64 0, i32 11
  %41 = bitcast %9** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = ptrtoint %9* %0 to i64
  %44 = sub i64 %43, %42
  %45 = lshr exact i64 %44, 5
  %46 = trunc i64 %45 to i32
  %47 = getelementptr inbounds %7, %7* %4, i64 0, i32 17
  %48 = load %11*, %11** %47, align 8
  %49 = zext i32 %38 to i64
  %50 = getelementptr inbounds %11, %11* %48, i64 %49, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %46
  br i1 %52, label %53, label %59

53:                                               ; preds = %32
  %54 = getelementptr inbounds %7, %7* %4, i64 0, i32 15
  %55 = load i32, i32* %54, align 8
  %56 = add i32 %55, -1
  %57 = icmp eq i32 %56, %38
  br i1 %57, label %58, label %59

58:                                               ; preds = %53
  store i32 %38, i32* %54, align 8
  br label %63

59:                                               ; preds = %53, %32
  %60 = getelementptr inbounds %11, %11* %48, i64 %49, i32 2
  store i32 %46, i32* %60, align 4
  %61 = shl i32 %2, 4
  %62 = getelementptr inbounds %11, %11* %48, i64 %49, i32 0
  store i32 %61, i32* %62, align 4
  br label %63

63:                                               ; preds = %22, %19, %19, %19, %19, %19, %19, %19, %19, %19, %19, %3, %59, %58, %24
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @259(%7* nocapture %0, i32 %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %7, %7* %0, i64 0, i32 15
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %7, %7* %0, i64 0, i32 17
  br i1 %5, label %7, label %10

7:                                                ; preds = %2
  %8 = bitcast %11** %6 to i8**
  %9 = load i8*, i8** %8, align 8
  br label %20

10:                                               ; preds = %2
  %11 = load %11*, %11** %6, align 8
  %12 = add nsw i32 %4, -1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %11, %11* %11, i64 %13, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %15, %1
  %17 = bitcast %11* %11 to i8*
  br i1 %16, label %34, label %18

18:                                               ; preds = %10
  %19 = bitcast %11** %6 to i8**
  br label %20

20:                                               ; preds = %18, %7
  %21 = phi i8** [ %19, %18 ], [ %8, %7 ]
  %22 = phi i8* [ %17, %18 ], [ %9, %7 ]
  %23 = add nsw i32 %4, 1
  store i32 %23, i32* %3, align 8
  %24 = sext i32 %23 to i64
  %25 = mul nsw i64 %24, 12
  %26 = tail call i8* @_erealloc(i8* %22, i64 %25) #18
  %27 = bitcast i8* %26 to %11*
  store i8* %26, i8** %21, align 8
  %28 = load i32, i32* %3, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %11, %11* %27, i64 %29
  %31 = getelementptr inbounds %11, %11* %30, i64 -1
  %32 = getelementptr inbounds %11, %11* %31, i64 0, i32 1
  store i32 %1, i32* %32, align 4
  %33 = add nsw i32 %28, -1
  br label %156

34:                                               ; preds = %10
  %35 = add i32 %4, 1
  store i32 %35, i32* %3, align 8
  %36 = bitcast %11** %6 to i8**
  %37 = sext i32 %35 to i64
  %38 = mul nsw i64 %37, 12
  %39 = tail call i8* @_erealloc(i8* %17, i64 %38) #18
  store i8* %39, i8** %36, align 8
  %40 = zext i32 %4 to i64
  %41 = bitcast i8* %39 to %11*
  br label %42

42:                                               ; preds = %54, %34
  %43 = phi %11* [ %53, %54 ], [ %41, %34 ]
  %44 = phi i64 [ %60, %54 ], [ %40, %34 ]
  %45 = getelementptr inbounds %11, %11* %43, i64 %44
  %46 = trunc i64 %44 to i32
  %47 = add i32 %46, -1
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %11, %11* %43, i64 %48
  %50 = bitcast %11* %45 to i8*
  %51 = bitcast %11* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 12, i1 false)
  %52 = icmp eq i32 %47, 0
  %53 = load %11*, %11** %6, align 8
  br i1 %52, label %61, label %54

54:                                               ; preds = %42
  %55 = add i64 %44, 4294967294
  %56 = and i64 %55, 4294967295
  %57 = getelementptr inbounds %11, %11* %53, i64 %56, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp ugt i32 %58, %1
  %60 = add nsw i64 %44, -1
  br i1 %59, label %42, label %61

61:                                               ; preds = %54, %42
  %62 = and i64 %44, 4294967295
  %63 = zext i32 %47 to i64
  %64 = getelementptr inbounds %11, %11* %53, i64 %63, i32 1
  store i32 %1, i32* %64, align 4
  %65 = tail call i32 @zend_stack_is_empty(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %156

67:                                               ; preds = %61
  %68 = tail call i8* @zend_stack_top(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %69 = tail call i8* @zend_stack_base(%45* getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 0)) #16
  %70 = bitcast i8* %69 to %72*
  %71 = icmp ult i8* %68, %69
  br i1 %71, label %156, label %72

72:                                               ; preds = %67
  %73 = bitcast i8* %68 to %72*
  br label %74

74:                                               ; preds = %72, %85
  %75 = phi i32 [ %86, %85 ], [ 0, %72 ]
  %76 = phi %72* [ %87, %85 ], [ %73, %72 ]
  %77 = getelementptr inbounds %72, %72* %76, i64 0, i32 0
  %78 = load i8, i8* %77, align 4
  switch i8 %78, label %85 [
    i8 62, label %89
    i8 70, label %79
    i8 127, label %79
  ]

79:                                               ; preds = %74, %74
  %80 = getelementptr inbounds %72, %72* %76, i64 0, i32 3, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp ult i32 %81, %47
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = add i32 %81, 1
  store i32 %84, i32* %80, align 4
  br label %85

85:                                               ; preds = %74, %83
  %86 = phi i32 [ 1, %83 ], [ %75, %74 ]
  %87 = getelementptr inbounds %72, %72* %76, i64 -1
  %88 = icmp ult %72* %87, %70
  br i1 %88, label %89, label %74

89:                                               ; preds = %85, %79, %74
  %90 = phi i32 [ %86, %85 ], [ %75, %79 ], [ %75, %74 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %156, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %7, %7* %0, i64 0, i32 11
  %94 = load %9*, %9** %93, align 8
  %95 = load %11*, %11** %6, align 8
  %96 = getelementptr inbounds %11, %11* %95, i64 %62, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %7, %7* %0, i64 0, i32 10
  %99 = load i32, i32* %98, align 8
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %9, %9* %94, i64 %100
  %102 = icmp ult i32 %97, %99
  br i1 %102, label %103, label %156

103:                                              ; preds = %92
  %104 = ptrtoint %9* %94 to i64
  %105 = zext i32 %97 to i64
  %106 = getelementptr inbounds %9, %9* %94, i64 %105
  %107 = add nuw nsw i64 %105, 1
  %108 = getelementptr %9, %9* %94, i64 %107
  %109 = icmp ugt %9* %108, %101
  %110 = select i1 %109, %9* %108, %9* %101
  %111 = sub nsw i64 0, %105
  %112 = getelementptr %9, %9* %110, i64 %111, i32 0
  %113 = bitcast i8** %112 to i8*
  %114 = xor i64 %104, -1
  %115 = getelementptr i8, i8* %113, i64 %114
  %116 = ptrtoint i8* %115 to i64
  %117 = and i64 %116, 32
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %135

119:                                              ; preds = %103
  %120 = getelementptr inbounds %9, %9* %94, i64 %105, i32 6
  %121 = load i8, i8* %120, align 4
  switch i8 %121, label %133 [
    i8 70, label %122
    i8 127, label %122
  ]

122:                                              ; preds = %119, %119
  %123 = getelementptr inbounds %9, %9* %94, i64 %105, i32 4
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %9, %9* %94, i64 %105, i32 2, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, %47
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = add i32 %129, 1
  store i32 %132, i32* %128, align 4
  br label %133

133:                                              ; preds = %131, %127, %122, %119
  %134 = getelementptr inbounds %9, %9* %106, i64 1
  br label %135

135:                                              ; preds = %133, %103
  %136 = phi %9* [ %106, %103 ], [ %134, %133 ]
  %137 = icmp ult i8* %115, inttoptr (i64 32 to i8*)
  br i1 %137, label %156, label %138

138:                                              ; preds = %135, %169
  %139 = phi %9* [ %170, %169 ], [ %136, %135 ]
  %140 = getelementptr inbounds %9, %9* %139, i64 0, i32 6
  %141 = load i8, i8* %140, align 4
  switch i8 %141, label %153 [
    i8 70, label %142
    i8 127, label %142
  ]

142:                                              ; preds = %138, %138
  %143 = getelementptr inbounds %9, %9* %139, i64 0, i32 4
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %153, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %9, %9* %139, i64 0, i32 2, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = icmp ult i32 %149, %47
  br i1 %150, label %153, label %151

151:                                              ; preds = %147
  %152 = add i32 %149, 1
  store i32 %152, i32* %148, align 4
  br label %153

153:                                              ; preds = %138, %147, %142, %151
  %154 = getelementptr inbounds %9, %9* %139, i64 1, i32 6
  %155 = load i8, i8* %154, align 4
  switch i8 %155, label %169 [
    i8 70, label %158
    i8 127, label %158
  ]

156:                                              ; preds = %135, %169, %67, %92, %61, %89, %20
  %157 = phi i32 [ %33, %20 ], [ %47, %89 ], [ %47, %61 ], [ %47, %92 ], [ %47, %67 ], [ %47, %169 ], [ %47, %135 ]
  ret i32 %157

158:                                              ; preds = %153, %153
  %159 = getelementptr inbounds %9, %9* %139, i64 1, i32 4
  %160 = load i32, i32* %159, align 4
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %169, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %9, %9* %139, i64 1, i32 2, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp ult i32 %165, %47
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  %168 = add i32 %165, 1
  store i32 %168, i32* %164, align 4
  br label %169

169:                                              ; preds = %167, %163, %158, %153
  %170 = getelementptr inbounds %9, %9* %139, i64 2
  %171 = icmp ult %9* %170, %101
  br i1 %171, label %138, label %156
}

declare dso_local i32 @zend_stack_is_empty(%45*) local_unnamed_addr #3

declare dso_local %39* @zend_array_dup(%39*) local_unnamed_addr #3

declare dso_local void @_efree_8(i8*) local_unnamed_addr #3

declare dso_local %34* @get_next_brk_cont_element() local_unnamed_addr #3

declare dso_local i8* @_safe_erealloc(i8*, i64, i64, i64) local_unnamed_addr #3

declare dso_local i64 @_zval_get_long_func(%2*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @260() unnamed_addr #0 {
  %1 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %2 = getelementptr inbounds %7, %7* %1, i64 0, i32 3
  %3 = load %32*, %32** %2, align 8
  %4 = icmp eq %32* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @212, i64 0, i64 0)) #15
  unreachable

6:                                                ; preds = %0
  %7 = getelementptr inbounds %7, %7* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1073741824
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %52, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %7, %7* %1, i64 0, i32 8
  %13 = load %8*, %8** %12, align 8
  %14 = getelementptr inbounds %8, %8* %13, i64 -1, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = icmp eq i64 %16, 19
  br i1 %17, label %52, label %18

18:                                               ; preds = %11
  %19 = icmp ugt i64 %15, 511
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = trunc i64 %16 to i32
  %22 = tail call i8* @zend_get_type_by_const(i32 %21) #16
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @213, i64 0, i64 0), i8* %22) #15
  unreachable

23:                                               ; preds = %18
  %24 = and i64 %15, -4
  %25 = inttoptr i64 %24 to %32*
  %26 = getelementptr inbounds %32, %32* %25, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 11
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  %30 = getelementptr inbounds %32, %32* %25, i64 0, i32 3, i64 0
  %31 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %30, i64 11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @214, i64 0, i64 0), i64 11) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %52, label %33

33:                                               ; preds = %29
  %34 = load i64, i64* %26, align 8
  br label %35

35:                                               ; preds = %33, %23
  %36 = phi i64 [ %34, %33 ], [ %27, %23 ]
  %37 = icmp eq i64 %36, 8
  br i1 %37, label %38, label %44

38:                                               ; preds = %35
  %39 = getelementptr inbounds %32, %32* %25, i64 0, i32 3, i64 0
  %40 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %39, i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @215, i64 0, i64 0), i64 8) #16
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %38
  %43 = load i64, i64* %26, align 8
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i64 [ %43, %42 ], [ %36, %35 ]
  %46 = icmp eq i64 %45, 9
  %47 = getelementptr inbounds %32, %32* %25, i64 0, i32 3, i64 0
  br i1 %46, label %48, label %51

48:                                               ; preds = %44
  %49 = tail call i32 @zend_binary_strcasecmp(i8* nonnull %47, i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @216, i64 0, i64 0), i64 9) #16
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %44, %48
  tail call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @213, i64 0, i64 0), i8* nonnull %47) #15
  unreachable

52:                                               ; preds = %11, %29, %38, %48, %6
  %53 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %54 = getelementptr inbounds %7, %7* %53, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = or i32 %55, 8388608
  store i32 %56, i32* %54, align 4
  ret void
}

declare dso_local noalias i8* @_emalloc_24() local_unnamed_addr #3

declare dso_local %2* @_zend_hash_add_new(%39*, %32*, %2*) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #12

; Function Attrs: nounwind uwtable
define internal void @261(%2* nocapture readonly %0) #0 {
  %2 = bitcast %2* %0 to %32**
  %3 = load %32*, %32** %2, align 8
  %4 = getelementptr inbounds %32, %32* %3, i64 0, i32 0, i32 1
  %5 = bitcast %18* %4 to %64*
  %6 = getelementptr inbounds %64, %64* %5, i64 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %1
  %11 = getelementptr inbounds %32, %32* %3, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  store i32 %13, i32* %11, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = and i8 %7, 1
  %17 = icmp eq i8 %16, 0
  %18 = bitcast %32* %3 to i8*
  br i1 %17, label %20, label %19

19:                                               ; preds = %15
  tail call void @free(i8* %18) #16
  br label %21

20:                                               ; preds = %15
  tail call void @_efree(i8* %18) #16
  br label %21

21:                                               ; preds = %1, %10, %19, %20
  ret void
}

declare dso_local zeroext i8 @_is_numeric_string_ex(i8*, i64, i64*, double*, i32, i32*) local_unnamed_addr #3

declare dso_local i32 (%2*, %2*, %2*)* @get_binary_op(i32) local_unnamed_addr #3

declare dso_local i32 @is_smaller_function(%2*, %2*, %2*) local_unnamed_addr #3

declare dso_local i32 @is_smaller_or_equal_function(%2*, %2*, %2*) local_unnamed_addr #3

declare dso_local i32 (%2*, %2*)* @get_unary_op(i32) local_unnamed_addr #3

declare dso_local %43* @zend_ast_create_zval_ex(%2*, i16 zeroext) local_unnamed_addr #3

declare dso_local i32 @_array_init(%2*, i32) local_unnamed_addr #3

declare dso_local %2* @_zend_hash_index_update(%39*, i64, %2*) local_unnamed_addr #3

declare dso_local %2* @_zend_hash_next_index_insert(%39*, %2*) local_unnamed_addr #3

declare dso_local i32 @_zend_handle_numeric_str_ex(i8*, i64, i64*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #13

; Function Attrs: nounwind readnone
declare dso_local i32 @__isnan(double) local_unnamed_addr #14

declare dso_local i64 @zend_dval_to_lval_slow(double) local_unnamed_addr #3

declare dso_local void @zend_str_tolower(i8*, i64) local_unnamed_addr #3

declare dso_local i32 @zend_verify_const_access(%75*, %1*) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind
declare dso_local i8* @getcwd(i8*, i64) local_unnamed_addr #12

declare dso_local i32 @concat_function(%2*, %2*, %2*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc %9* @262(%37* nocapture %0, i32 %1, %37* nocapture %2) unnamed_addr #0 {
  %4 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %5 = tail call %9* @get_next_op(%7* %4) #16
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  store i8 2, i8* %8, align 8
  %9 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %10 = bitcast %38* %9 to i32*
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds %9, %9* %5, i64 0, i32 6
  store i8 54, i8* %11, align 4
  %12 = getelementptr inbounds %9, %9* %5, i64 0, i32 7
  store i8 8, i8* %12, align 1
  br label %29

13:                                               ; preds = %3
  %14 = getelementptr inbounds %9, %9* %5, i64 0, i32 6
  store i8 55, i8* %14, align 4
  %15 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %16 = load i8, i8* %15, align 8
  %17 = getelementptr inbounds %9, %9* %5, i64 0, i32 7
  store i8 %16, i8* %17, align 1
  %18 = icmp eq i8 %16, 1
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %21 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %22 = tail call i32 @zend_add_literal(%7* %20, %2* nonnull %21)
  %23 = getelementptr inbounds %9, %9* %5, i64 0, i32 1, i32 0
  store i32 %22, i32* %23, align 8
  br label %29

24:                                               ; preds = %13
  %25 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %26 = bitcast %38* %25 to i32*
  %27 = getelementptr inbounds %9, %9* %5, i64 0, i32 1, i32 0
  %28 = load i32, i32* %26, align 8
  store i32 %28, i32* %27, align 8
  br label %29

29:                                               ; preds = %7, %24, %19
  %30 = getelementptr inbounds %37, %37* %2, i64 0, i32 0
  %31 = load i8, i8* %30, align 8
  %32 = getelementptr inbounds %9, %9* %5, i64 0, i32 8
  store i8 %31, i8* %32, align 2
  %33 = icmp eq i8 %31, 1
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %36 = getelementptr inbounds %37, %37* %2, i64 0, i32 2, i32 0
  %37 = tail call i32 @zend_add_literal(%7* %35, %2* nonnull %36)
  br label %42

38:                                               ; preds = %29
  %39 = getelementptr inbounds %37, %37* %2, i64 0, i32 2
  %40 = bitcast %38* %39 to i32*
  %41 = load i32, i32* %40, align 8
  br label %42

42:                                               ; preds = %34, %38
  %43 = phi i32 [ %37, %34 ], [ %41, %38 ]
  %44 = getelementptr inbounds %9, %9* %5, i64 0, i32 2, i32 0
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %37, %37* %0, i64 0, i32 0
  %46 = load i8, i8* %45, align 8
  %47 = getelementptr inbounds %9, %9* %5, i64 0, i32 9
  store i8 %46, i8* %47, align 1
  %48 = icmp eq i8 %46, 1
  br i1 %48, label %49, label %53

49:                                               ; preds = %42
  %50 = load %7*, %7** getelementptr inbounds (%0, %0* @compiler_globals, i64 0, i32 4), align 8
  %51 = getelementptr inbounds %37, %37* %0, i64 0, i32 2, i32 0
  %52 = tail call i32 @zend_add_literal(%7* %50, %2* nonnull %51)
  br label %57

53:                                               ; preds = %42
  %54 = getelementptr inbounds %37, %37* %0, i64 0, i32 2
  %55 = bitcast %38* %54 to i32*
  %56 = load i32, i32* %55, align 8
  br label %57

57:                                               ; preds = %53, %49
  %58 = phi i32 [ %56, %53 ], [ %52, %49 ]
  %59 = getelementptr inbounds %9, %9* %5, i64 0, i32 3, i32 0
  store i32 %58, i32* %59, align 8
  %60 = getelementptr inbounds %9, %9* %5, i64 0, i32 4
  store i32 %1, i32* %60, align 4
  ret %9* %5
}

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn writeonly }
attributes #5 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable willreturn }
attributes #14 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind }
attributes #17 = { nounwind allocsize(0) }
attributes #18 = { nounwind allocsize(1) }
attributes #19 = { nounwind readonly }
attributes #20 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
