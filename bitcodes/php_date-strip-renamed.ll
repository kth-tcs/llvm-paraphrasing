; ModuleID = 'php_date-strip-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/ext/date/php_date.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i8*, i64, i8, i8 }
%1 = type { %2*, %1*, %29*, %4*, %29, %1*, %7*, i8**, %29* }
%2 = type { i8*, %3, %3, %3, i32, i32, i8, i8, i8, i8 }
%3 = type { i32 }
%4 = type { %5 }
%5 = type { i8, [3 x i8], i32, %28*, %6*, %4*, i32, i32, %25*, i32*, i32, %2*, i32, i32, %28**, i32, i32, %26*, %27*, %7*, %28*, i32, i32, %28*, i32, i32, %29*, i32, i8**, [6 x i8*] }
%6 = type { i8, %28*, %6*, i32, i32, i32, i32, %29*, %29*, %29*, %7, %7, %7, %4*, %4*, %4*, %4*, %4*, %4*, %4*, %4*, %4*, %4*, %4*, %4*, %4*, %12, %15* (%6*)*, %14* (%6*, %29*, i32)*, i32 (%6*, %6*)*, %4* (%6*, %28*)*, i32 (%29*, i8**, i64*, %17*)*, i32 (%29*, %6*, i8*, i64, %18*)*, i32, i32, %6**, %6**, %19**, %21**, %23 }
%7 = type { %8, %10, i32, %11*, i32, i32, i32, i32, i64, void (%29*)* }
%8 = type { i32, %9 }
%9 = type { i32 }
%10 = type { i32 }
%11 = type { %29, i64, %28* }
%12 = type { %13*, %4*, %4*, %4*, %4*, %4*, %4* }
%13 = type { void (%14*)*, i32 (%14*)*, %29* (%14*)*, void (%14*, %29*)*, void (%14*)*, void (%14*)*, void (%14*)* }
%14 = type { %15, %29, %13*, i64 }
%15 = type { %8, i32, %6*, %16*, %7*, [1 x %29] }
%16 = type { i32, void (%15*)*, void (%15*)*, %15* (%29*)*, %29* (%29*, %29*, i32, i8**, %29*)*, void (%29*, %29*, %29*, i8**)*, %29* (%29*, %29*, i32, %29*)*, void (%29*, %29*, %29*)*, %29* (%29*, %29*, i32, i8**)*, %29* (%29*, %29*)*, void (%29*, %29*)*, i32 (%29*, %29*, i32, i8**)*, void (%29*, %29*, i8**)*, i32 (%29*, %29*, i32)*, void (%29*, %29*)*, %7* (%29*)*, %4* (%15**, %28*, %29*)*, i32 (%28*, %15*, %1*, %29*)*, %4* (%15*)*, %28* (%15*)*, i32 (%29*, %29*)*, i32 (%29*, %29*, i32)*, i32 (%29*, i64*)*, %7* (%29*, i32*)*, i32 (%29*, %6**, %4**, %15**)*, %7* (%29*, %29**, i32*)*, i32 (i8, %29*, %29*, %29*)*, i32 (%29*, %29*, %29*)* }
%17 = type opaque
%18 = type opaque
%19 = type { %20*, %28*, i32 }
%20 = type { %28*, %6*, %28* }
%21 = type { %20*, %22* }
%22 = type { %6* }
%23 = type { %24 }
%24 = type { %28*, i32, i32, %28* }
%25 = type { %28*, i64, i8, i8 }
%26 = type { i32, i32, i32 }
%27 = type { i32, i32, i32, i32 }
%28 = type { %8, i64, i64, [1 x i8] }
%29 = type { %30, %31, %32 }
%30 = type { i64 }
%31 = type { i32 }
%32 = type { i32 }
%33 = type { i8*, i8*, %7*, %34*, i32 }
%34 = type { %35*, %35*, i32, i32 }
%35 = type { i32, i32, i8, i8* }
%36 = type { i16, i32, i8, i8, %37*, %38*, i8*, %39*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, void (%36*)*, i8*, i64, i8*, void (i8*)*, void (i8*)*, i32 ()*, i32, i8, i8*, i32, i8* }
%37 = type { %28*, i32 (%37*, %28*, i8*, i8*, i8*, i32)*, i8*, i8*, i8*, %28*, %28*, void (%37*, i32)*, i32, i32, i32, i32 }
%38 = type { i8*, i8*, i8*, i8 }
%39 = type { i8*, {}*, %0*, i32, i32 }
%40 = type { i8*, i32 (%37*, %28*, i8*, i8*, i8*, i32)*, i8*, i8*, i8*, i8*, void (%37*, i32)*, i32, i32, i32 }
%41 = type { i8*, i32, %42*, i8* }
%42 = type { i8*, i32 }
%43 = type { %29, %29, [32 x %7*], %7**, %7**, %7, %7, [1 x %44]*, i32, i32, %7*, %7*, %7*, %29*, %29*, %46*, %1*, %6*, i64, i32, %7*, %4*, i8, i8, i8, i8, i64, %7, %7, i32, %29, %29, %47, %47, %47, i32, %6*, i64, i32, %7*, %7*, %37*, %48, %15*, %15*, %2*, [3 x %2], %36*, i8, i8, i64, i32, i32, %49*, [16 x %49], i8*, i16, %4, %2, i8, [6 x i8*] }
%44 = type { [8 x i64], i32, %45 }
%45 = type { [16 x i64] }
%46 = type { %29*, %29*, %46* }
%47 = type { i32, i32, i32, i8* }
%48 = type { %15**, i32, i32, i32 }
%49 = type { %7*, i32 }
%50 = type { i64, i64 }
%51 = type { i32, i32 }
%52 = type { i64, i64, i64, i64, i64, i64, i64, i32, i8*, %53*, i32, %59, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%53 = type { i8*, %54, %55, i32*, i8*, %56*, i8*, %57*, i8, %58 }
%54 = type { i32, i32, i32, i32, i32, i32 }
%55 = type { i64, i64, i64, i64, i64, i64 }
%56 = type { i32, i32, i32, i32, i32 }
%57 = type { i32, i32 }
%58 = type { [3 x i8], double, double, i8* }
%59 = type { i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i64, %60, i32, i32 }
%60 = type { i32, i64 }
%61 = type { %52*, %7*, %15 }
%62 = type { i8, i8, i16 }
%63 = type { %8 }
%64 = type { i32, i32, %65, %7*, %15 }
%65 = type { %66 }
%66 = type { i64, i8*, i32 }
%67 = type { i32, i32, i32, i8*, i64 }
%68 = type { %59*, %7*, i32, %15 }
%69 = type { i8*, i32, float, i8* }
%70 = type { i32, %6*, %29 }
%71 = type { %52*, %6*, %52*, %52*, %59*, i32, i32, i32, %15 }
%72 = type { %39*, %36* }
%73 = type { %28*, i64 }
%74 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%75 = type { %14, %29, %71*, i32 }
%76 = type { i8, i8, i8, i8 }

@0 = private unnamed_addr constant [10 x i8] c"strtotime\00", align 1
@1 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @211, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@2 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@3 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @284, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@4 = private unnamed_addr constant [6 x i8] c"idate\00", align 1
@5 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @284, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@6 = private unnamed_addr constant [7 x i8] c"gmdate\00", align 1
@7 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @284, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@8 = private unnamed_addr constant [7 x i8] c"mktime\00", align 1
@9 = internal constant [7 x %0] [%0 zeroinitializer, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @216, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @285, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @286, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @203, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@10 = private unnamed_addr constant [9 x i8] c"gmmktime\00", align 1
@11 = internal constant [7 x %0] [%0 zeroinitializer, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @216, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @285, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @286, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @203, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@12 = private unnamed_addr constant [10 x i8] c"checkdate\00", align 1
@13 = internal constant [4 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @207, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@14 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@15 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @284, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@16 = private unnamed_addr constant [11 x i8] c"gmstrftime\00", align 1
@17 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @284, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@18 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@19 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@20 = private unnamed_addr constant [10 x i8] c"localtime\00", align 1
@21 = internal constant [3 x %0] [%0 zeroinitializer, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @284, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @287, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@22 = private unnamed_addr constant [8 x i8] c"getdate\00", align 1
@23 = internal constant [2 x %0] [%0 zeroinitializer, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @284, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@24 = private unnamed_addr constant [12 x i8] c"date_create\00", align 1
@25 = internal constant [3 x %0] [%0 zeroinitializer, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @288, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@26 = private unnamed_addr constant [22 x i8] c"date_create_immutable\00", align 1
@27 = private unnamed_addr constant [24 x i8] c"date_create_from_format\00", align 1
@28 = internal constant [4 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 ptrtoint ([14 x i8]* @290 to i64), i8 0, i8 0 }], align 16
@29 = private unnamed_addr constant [34 x i8] c"date_create_immutable_from_format\00", align 1
@30 = private unnamed_addr constant [11 x i8] c"date_parse\00", align 1
@31 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@32 = private unnamed_addr constant [23 x i8] c"date_parse_from_format\00", align 1
@33 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@34 = private unnamed_addr constant [21 x i8] c"date_get_last_errors\00", align 1
@35 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@36 = private unnamed_addr constant [12 x i8] c"date_format\00", align 1
@37 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@38 = private unnamed_addr constant [12 x i8] c"date_modify\00", align 1
@39 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @101, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@40 = private unnamed_addr constant [9 x i8] c"date_add\00", align 1
@41 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @291, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@42 = private unnamed_addr constant [9 x i8] c"date_sub\00", align 1
@43 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @291, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@44 = private unnamed_addr constant [18 x i8] c"date_timezone_get\00", align 1
@45 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@46 = private unnamed_addr constant [18 x i8] c"date_timezone_set\00", align 1
@47 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @288, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@48 = private unnamed_addr constant [16 x i8] c"date_offset_get\00", align 1
@49 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@50 = private unnamed_addr constant [10 x i8] c"date_diff\00", align 1
@51 = internal constant [4 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @292, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @293, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@52 = private unnamed_addr constant [14 x i8] c"date_time_set\00", align 1
@53 = internal constant [6 x %0] [%0 { i8* inttoptr (i64 3 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @216, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @217, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @218, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @294, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@54 = private unnamed_addr constant [14 x i8] c"date_date_set\00", align 1
@55 = internal constant [5 x %0] [%0 { i8* inttoptr (i64 4 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @207, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@56 = private unnamed_addr constant [17 x i8] c"date_isodate_set\00", align 1
@57 = internal constant [5 x %0] [%0 { i8* inttoptr (i64 3 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @295, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@58 = private unnamed_addr constant [19 x i8] c"date_timestamp_set\00", align 1
@59 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @296, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@60 = private unnamed_addr constant [19 x i8] c"date_timestamp_get\00", align 1
@61 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@62 = private unnamed_addr constant [14 x i8] c"timezone_open\00", align 1
@63 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @288, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@64 = private unnamed_addr constant [18 x i8] c"timezone_name_get\00", align 1
@65 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@66 = private unnamed_addr constant [24 x i8] c"timezone_name_from_abbr\00", align 1
@67 = internal constant [4 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @246, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @297, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @245, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@68 = private unnamed_addr constant [20 x i8] c"timezone_offset_get\00", align 1
@69 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 ptrtoint ([13 x i8]* @298 to i64), i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @299, i32 0, i32 0), i64 ptrtoint ([18 x i8]* @300 to i64), i8 0, i8 0 }], align 16
@70 = private unnamed_addr constant [25 x i8] c"timezone_transitions_get\00", align 1
@71 = internal constant [4 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @301, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @302, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@72 = private unnamed_addr constant [22 x i8] c"timezone_location_get\00", align 1
@73 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@74 = private unnamed_addr constant [26 x i8] c"timezone_identifiers_list\00", align 1
@75 = internal constant [3 x %0] [%0 zeroinitializer, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @303, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @304, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@76 = private unnamed_addr constant [28 x i8] c"timezone_abbreviations_list\00", align 1
@77 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@78 = private unnamed_addr constant [21 x i8] c"timezone_version_get\00", align 1
@79 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@80 = private unnamed_addr constant [38 x i8] c"date_interval_create_from_date_string\00", align 1
@81 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@82 = private unnamed_addr constant [21 x i8] c"date_interval_format\00", align 1
@83 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@84 = private unnamed_addr constant [26 x i8] c"date_default_timezone_set\00", align 1
@85 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @305, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@86 = private unnamed_addr constant [26 x i8] c"date_default_timezone_get\00", align 1
@87 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@88 = private unnamed_addr constant [13 x i8] c"date_sunrise\00", align 1
@89 = internal constant [7 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @248, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @249, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @306, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @307, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@90 = private unnamed_addr constant [12 x i8] c"date_sunset\00", align 1
@91 = internal constant [7 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @248, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @249, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @306, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @307, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@92 = private unnamed_addr constant [14 x i8] c"date_sun_info\00", align 1
@93 = internal constant [4 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @248, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @249, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@date_functions = hidden constant [49 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }] [{ i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @0, i32 0, i32 0), void (%1*, %29*)* @zif_strtotime, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @1, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), void (%1*, %29*)* @zif_date, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @3, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i32 0, i32 0), void (%1*, %29*)* @zif_idate, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @5, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @6, i32 0, i32 0), void (%1*, %29*)* @zif_gmdate, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @7, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @8, i32 0, i32 0), void (%1*, %29*)* @zif_mktime, %0* getelementptr inbounds ([7 x %0], [7 x %0]* @9, i32 0, i32 0), i32 6, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @10, i32 0, i32 0), void (%1*, %29*)* @zif_gmmktime, %0* getelementptr inbounds ([7 x %0], [7 x %0]* @11, i32 0, i32 0), i32 6, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @12, i32 0, i32 0), void (%1*, %29*)* @zif_checkdate, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @13, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @14, i32 0, i32 0), void (%1*, %29*)* @zif_strftime, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @15, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @16, i32 0, i32 0), void (%1*, %29*)* @zif_gmstrftime, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @17, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), void (%1*, %29*)* @zif_time, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @19, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @20, i32 0, i32 0), void (%1*, %29*)* @zif_localtime, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @21, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @22, i32 0, i32 0), void (%1*, %29*)* @zif_getdate, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @23, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @24, i32 0, i32 0), void (%1*, %29*)* @zif_date_create, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @25, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @26, i32 0, i32 0), void (%1*, %29*)* @zif_date_create_immutable, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @25, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @27, i32 0, i32 0), void (%1*, %29*)* @zif_date_create_from_format, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @28, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @29, i32 0, i32 0), void (%1*, %29*)* @zif_date_create_immutable_from_format, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @28, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @30, i32 0, i32 0), void (%1*, %29*)* @zif_date_parse, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @31, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @32, i32 0, i32 0), void (%1*, %29*)* @zif_date_parse_from_format, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @33, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @34, i32 0, i32 0), void (%1*, %29*)* @zif_date_get_last_errors, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @35, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @36, i32 0, i32 0), void (%1*, %29*)* @zif_date_format, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @37, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @38, i32 0, i32 0), void (%1*, %29*)* @zif_date_modify, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @39, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @40, i32 0, i32 0), void (%1*, %29*)* @zif_date_add, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @41, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @42, i32 0, i32 0), void (%1*, %29*)* @zif_date_sub, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @43, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @44, i32 0, i32 0), void (%1*, %29*)* @zif_date_timezone_get, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @45, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @46, i32 0, i32 0), void (%1*, %29*)* @zif_date_timezone_set, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @47, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @48, i32 0, i32 0), void (%1*, %29*)* @zif_date_offset_get, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @49, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @50, i32 0, i32 0), void (%1*, %29*)* @zif_date_diff, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @51, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @52, i32 0, i32 0), void (%1*, %29*)* @zif_date_time_set, %0* getelementptr inbounds ([6 x %0], [6 x %0]* @53, i32 0, i32 0), i32 5, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @54, i32 0, i32 0), void (%1*, %29*)* @zif_date_date_set, %0* getelementptr inbounds ([5 x %0], [5 x %0]* @55, i32 0, i32 0), i32 4, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @56, i32 0, i32 0), void (%1*, %29*)* @zif_date_isodate_set, %0* getelementptr inbounds ([5 x %0], [5 x %0]* @57, i32 0, i32 0), i32 4, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @58, i32 0, i32 0), void (%1*, %29*)* @zif_date_timestamp_set, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @59, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @60, i32 0, i32 0), void (%1*, %29*)* @zif_date_timestamp_get, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @61, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @62, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_open, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @63, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @64, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_name_get, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @65, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @66, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_name_from_abbr, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @67, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @68, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_offset_get, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @69, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @70, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_transitions_get, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @71, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @72, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_location_get, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @73, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @74, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_identifiers_list, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @75, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @76, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_abbreviations_list, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @77, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @78, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_version_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @79, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @80, i32 0, i32 0), void (%1*, %29*)* @zif_date_interval_create_from_date_string, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @81, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @82, i32 0, i32 0), void (%1*, %29*)* @zif_date_interval_format, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @83, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @84, i32 0, i32 0), void (%1*, %29*)* @zif_date_default_timezone_set, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @85, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @86, i32 0, i32 0), void (%1*, %29*)* @zif_date_default_timezone_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @87, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @88, i32 0, i32 0), void (%1*, %29*)* @zif_date_sunrise, %0* getelementptr inbounds ([7 x %0], [7 x %0]* @89, i32 0, i32 0), i32 6, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @90, i32 0, i32 0), void (%1*, %29*)* @zif_date_sunset, %0* getelementptr inbounds ([7 x %0], [7 x %0]* @91, i32 0, i32 0), i32 6, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @92, i32 0, i32 0), void (%1*, %29*)* @zif_date_sun_info, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @93, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } zeroinitializer], align 16
@94 = private unnamed_addr constant [12 x i8] c"__construct\00", align 1
@95 = private unnamed_addr constant [9 x i8] c"__wakeup\00", align 1
@96 = private unnamed_addr constant [12 x i8] c"__set_state\00", align 1
@97 = private unnamed_addr constant [17 x i8] c"createFromFormat\00", align 1
@98 = private unnamed_addr constant [14 x i8] c"getLastErrors\00", align 1
@99 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@100 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@101 = private unnamed_addr constant [7 x i8] c"modify\00", align 1
@102 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @101, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@103 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@104 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @291, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@105 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@106 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @291, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@107 = private unnamed_addr constant [12 x i8] c"getTimezone\00", align 1
@108 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@109 = private unnamed_addr constant [12 x i8] c"setTimezone\00", align 1
@110 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @288, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@111 = private unnamed_addr constant [10 x i8] c"getOffset\00", align 1
@112 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@113 = private unnamed_addr constant [8 x i8] c"setTime\00", align 1
@114 = internal constant [5 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @216, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @217, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @218, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @294, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@115 = private unnamed_addr constant [8 x i8] c"setDate\00", align 1
@116 = internal constant [4 x %0] [%0 { i8* inttoptr (i64 3 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @207, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@117 = private unnamed_addr constant [11 x i8] c"setISODate\00", align 1
@118 = internal constant [4 x %0] [%0 { i8* inttoptr (i64 2 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @295, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@119 = private unnamed_addr constant [13 x i8] c"setTimestamp\00", align 1
@120 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @296, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@121 = private unnamed_addr constant [13 x i8] c"getTimestamp\00", align 1
@122 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@123 = private unnamed_addr constant [5 x i8] c"diff\00", align 1
@124 = internal constant [3 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @293, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@date_funcs_date = hidden constant [19 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }] [{ i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i32 0, i32 0), void (%1*, %29*)* @zim_DateTime___construct, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @25, i32 0, i32 0), i32 2, i32 8448 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @95, i32 0, i32 0), void (%1*, %29*)* @zim_DateTime___wakeup, %0* null, i32 -1, i32 256 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @96, i32 0, i32 0), void (%1*, %29*)* @zim_DateTime___set_state, %0* null, i32 -1, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @97, i32 0, i32 0), void (%1*, %29*)* @zif_date_create_from_format, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @28, i32 0, i32 0), i32 3, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @98, i32 0, i32 0), void (%1*, %29*)* @zif_date_get_last_errors, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @35, i32 0, i32 0), i32 0, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), void (%1*, %29*)* @zif_date_format, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @100, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @101, i32 0, i32 0), void (%1*, %29*)* @zif_date_modify, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @102, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @103, i32 0, i32 0), void (%1*, %29*)* @zif_date_add, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @104, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @105, i32 0, i32 0), void (%1*, %29*)* @zif_date_sub, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @106, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @107, i32 0, i32 0), void (%1*, %29*)* @zif_date_timezone_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @108, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @109, i32 0, i32 0), void (%1*, %29*)* @zif_date_timezone_set, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @110, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @111, i32 0, i32 0), void (%1*, %29*)* @zif_date_offset_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @112, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @113, i32 0, i32 0), void (%1*, %29*)* @zif_date_time_set, %0* getelementptr inbounds ([5 x %0], [5 x %0]* @114, i32 0, i32 0), i32 4, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @115, i32 0, i32 0), void (%1*, %29*)* @zif_date_date_set, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @116, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @117, i32 0, i32 0), void (%1*, %29*)* @zif_date_isodate_set, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @118, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @119, i32 0, i32 0), void (%1*, %29*)* @zif_date_timestamp_set, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @120, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @121, i32 0, i32 0), void (%1*, %29*)* @zif_date_timestamp_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @122, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @123, i32 0, i32 0), void (%1*, %29*)* @zif_date_diff, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @124, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } zeroinitializer], align 16
@125 = private unnamed_addr constant [18 x i8] c"createFromMutable\00", align 1
@126 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @308, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@date_funcs_immutable = hidden constant [20 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }] [{ i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable___construct, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @25, i32 0, i32 0), i32 2, i32 8448 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @95, i32 0, i32 0), void (%1*, %29*)* @zim_DateTime___wakeup, %0* null, i32 -1, i32 256 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @96, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable___set_state, %0* null, i32 -1, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @97, i32 0, i32 0), void (%1*, %29*)* @zif_date_create_immutable_from_format, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @28, i32 0, i32 0), i32 3, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @98, i32 0, i32 0), void (%1*, %29*)* @zif_date_get_last_errors, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @35, i32 0, i32 0), i32 0, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), void (%1*, %29*)* @zif_date_format, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @100, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @107, i32 0, i32 0), void (%1*, %29*)* @zif_date_timezone_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @108, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @111, i32 0, i32 0), void (%1*, %29*)* @zif_date_offset_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @112, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @121, i32 0, i32 0), void (%1*, %29*)* @zif_date_timestamp_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @122, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @123, i32 0, i32 0), void (%1*, %29*)* @zif_date_diff, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @124, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @101, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable_modify, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @102, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @103, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable_add, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @104, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @105, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable_sub, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @106, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @109, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable_setTimezone, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @110, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @113, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable_setTime, %0* getelementptr inbounds ([5 x %0], [5 x %0]* @114, i32 0, i32 0), i32 4, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @115, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable_setDate, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @116, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @117, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable_setISODate, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @118, i32 0, i32 0), i32 3, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @119, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable_setTimestamp, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @120, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @125, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeImmutable_createFromMutable, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @126, i32 0, i32 0), i32 1, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } zeroinitializer], align 16
@127 = private unnamed_addr constant [8 x i8] c"getName\00", align 1
@128 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@129 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @289, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@130 = private unnamed_addr constant [15 x i8] c"getTransitions\00", align 1
@131 = internal constant [3 x %0] [%0 zeroinitializer, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @301, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @302, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@132 = private unnamed_addr constant [12 x i8] c"getLocation\00", align 1
@133 = internal constant [1 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }], align 16
@134 = private unnamed_addr constant [18 x i8] c"listAbbreviations\00", align 1
@135 = private unnamed_addr constant [16 x i8] c"listIdentifiers\00", align 1
@date_funcs_timezone = hidden constant [10 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }] [{ i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeZone___construct, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @63, i32 0, i32 0), i32 1, i32 8448 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @95, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeZone___wakeup, %0* null, i32 -1, i32 256 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @96, i32 0, i32 0), void (%1*, %29*)* @zim_DateTimeZone___set_state, %0* null, i32 -1, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @127, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_name_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @128, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @111, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_offset_get, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @129, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @130, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_transitions_get, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @131, i32 0, i32 0), i32 2, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @132, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_location_get, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @133, i32 0, i32 0), i32 0, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @134, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_abbreviations_list, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @77, i32 0, i32 0), i32 0, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @135, i32 0, i32 0), void (%1*, %29*)* @zif_timezone_identifiers_list, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @75, i32 0, i32 0), i32 2, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } zeroinitializer], align 16
@136 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @309, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@137 = internal constant [2 x %0] [%0 { i8* inttoptr (i64 -1 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@138 = private unnamed_addr constant [21 x i8] c"createFromDateString\00", align 1
@date_funcs_interval = hidden constant [6 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }] [{ i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i32 0, i32 0), void (%1*, %29*)* @zim_DateInterval___construct, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @136, i32 0, i32 0), i32 1, i32 8448 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @95, i32 0, i32 0), void (%1*, %29*)* @zim_DateInterval___wakeup, %0* null, i32 -1, i32 256 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @96, i32 0, i32 0), void (%1*, %29*)* @zim_DateInterval___set_state, %0* null, i32 -1, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), void (%1*, %29*)* @zif_date_interval_format, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @137, i32 0, i32 0), i32 1, i32 0 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @138, i32 0, i32 0), void (%1*, %29*)* @zif_date_interval_create_from_date_string, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @81, i32 0, i32 0), i32 1, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } zeroinitializer], align 16
@139 = internal constant [4 x %0] [%0 { i8* inttoptr (i64 3 to i8*), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @310, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @291, i32 0, i32 0), i64 0, i8 0, i8 0 }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @311, i32 0, i32 0), i64 0, i8 0, i8 0 }], align 16
@140 = private unnamed_addr constant [13 x i8] c"getStartDate\00", align 1
@141 = private unnamed_addr constant [11 x i8] c"getEndDate\00", align 1
@142 = private unnamed_addr constant [16 x i8] c"getDateInterval\00", align 1
@143 = private unnamed_addr constant [15 x i8] c"getRecurrences\00", align 1
@date_funcs_period = hidden constant [8 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }] [{ i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @94, i32 0, i32 0), void (%1*, %29*)* @zim_DatePeriod___construct, %0* getelementptr inbounds ([4 x %0], [4 x %0]* @139, i32 0, i32 0), i32 3, i32 8448 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @95, i32 0, i32 0), void (%1*, %29*)* @zim_DatePeriod___wakeup, %0* null, i32 -1, i32 256 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @96, i32 0, i32 0), void (%1*, %29*)* @zim_DatePeriod___set_state, %0* null, i32 -1, i32 257 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @140, i32 0, i32 0), void (%1*, %29*)* @zim_DatePeriod_getStartDate, %0* null, i32 -1, i32 256 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @141, i32 0, i32 0), void (%1*, %29*)* @zim_DatePeriod_getEndDate, %0* null, i32 -1, i32 256 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @142, i32 0, i32 0), void (%1*, %29*)* @zim_DatePeriod_getDateInterval, %0* null, i32 -1, i32 256 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @143, i32 0, i32 0), void (%1*, %29*)* @zim_DatePeriod_getRecurrences, %0* null, i32 -1, i32 256 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } zeroinitializer], align 16
@date_ce_date = common hidden global %6* null, align 8
@date_ce_immutable = common hidden global %6* null, align 8
@date_ce_interface = common hidden global %6* null, align 8
@date_ce_timezone = common hidden global %6* null, align 8
@144 = private unnamed_addr constant [11 x i8] c"7.2.28-dev\00", align 1
@date_globals = common hidden global %33 zeroinitializer, align 8
@145 = private unnamed_addr constant [16 x i8] c"API20170718,NTS\00", align 1
@date_module_entry = hidden global %36 { i16 168, i32 20170718, i8 0, i8 0, %37* null, %38* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), %39* bitcast ([49 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }]* @date_functions to %39*), i32 (i32, i32)* @zm_startup_date, i32 (i32, i32)* @zm_shutdown_date, i32 (i32, i32)* @zm_activate_date, i32 (i32, i32)* @zm_deactivate_date, void (%36*)* @zm_info_date, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @144, i32 0, i32 0), i64 40, i8* bitcast (%33* @date_globals to i8*), void (i8*)* bitcast (void (%33*)* @462 to void (i8*)*), void (i8*)* null, i32 ()* null, i32 0, i8 0, i8* null, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @145, i32 0, i32 0) }, align 8
@146 = internal constant [6 x %40] [%40 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @312, i32 0, i32 0), i32 (%37*, %28*, i8*, i8*, i8*, i32)* @522, i8* null, i8* bitcast (%33* @date_globals to i8*), i8* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @210, i32 0, i32 0), void (%37*, i32)* null, i32 7, i32 13, i32 0 }, %40 { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @313, i32 0, i32 0), i32 (%37*, %28*, i8*, i8*, i8*, i32)* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @314, i32 0, i32 0), void (%37*, i32)* null, i32 7, i32 21, i32 7 }, %40 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @315, i32 0, i32 0), i32 (%37*, %28*, i8*, i8*, i8*, i32)* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @316, i32 0, i32 0), void (%37*, i32)* null, i32 7, i32 22, i32 7 }, %40 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @317, i32 0, i32 0), i32 (%37*, %28*, i8*, i8*, i8*, i32)* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @318, i32 0, i32 0), void (%37*, i32)* null, i32 7, i32 18, i32 9 }, %40 { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @319, i32 0, i32 0), i32 (%37*, %28*, i8*, i8*, i8*, i32)* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @318, i32 0, i32 0), void (%37*, i32)* null, i32 7, i32 19, i32 9 }, %40 zeroinitializer], align 16
@147 = private unnamed_addr constant [10 x i8] c"DATE_ATOM\00", align 1
@148 = private unnamed_addr constant [14 x i8] c"Y-m-d\\TH:i:sP\00", align 1
@149 = private unnamed_addr constant [12 x i8] c"DATE_COOKIE\00", align 1
@150 = private unnamed_addr constant [17 x i8] c"l, d-M-Y H:i:s T\00", align 1
@151 = private unnamed_addr constant [13 x i8] c"DATE_ISO8601\00", align 1
@152 = private unnamed_addr constant [14 x i8] c"Y-m-d\\TH:i:sO\00", align 1
@153 = private unnamed_addr constant [12 x i8] c"DATE_RFC822\00", align 1
@154 = private unnamed_addr constant [17 x i8] c"D, d M y H:i:s O\00", align 1
@155 = private unnamed_addr constant [12 x i8] c"DATE_RFC850\00", align 1
@156 = private unnamed_addr constant [17 x i8] c"l, d-M-y H:i:s T\00", align 1
@157 = private unnamed_addr constant [13 x i8] c"DATE_RFC1036\00", align 1
@158 = private unnamed_addr constant [13 x i8] c"DATE_RFC1123\00", align 1
@159 = private unnamed_addr constant [17 x i8] c"D, d M Y H:i:s O\00", align 1
@160 = private unnamed_addr constant [13 x i8] c"DATE_RFC7231\00", align 1
@161 = private unnamed_addr constant [22 x i8] c"D, d M Y H:i:s \\G\\M\\T\00", align 1
@162 = private unnamed_addr constant [13 x i8] c"DATE_RFC2822\00", align 1
@163 = private unnamed_addr constant [13 x i8] c"DATE_RFC3339\00", align 1
@164 = private unnamed_addr constant [22 x i8] c"DATE_RFC3339_EXTENDED\00", align 1
@165 = private unnamed_addr constant [16 x i8] c"Y-m-d\\TH:i:s.vP\00", align 1
@166 = private unnamed_addr constant [9 x i8] c"DATE_RSS\00", align 1
@167 = private unnamed_addr constant [9 x i8] c"DATE_W3C\00", align 1
@168 = private unnamed_addr constant [23 x i8] c"SUNFUNCS_RET_TIMESTAMP\00", align 1
@169 = private unnamed_addr constant [20 x i8] c"SUNFUNCS_RET_STRING\00", align 1
@170 = private unnamed_addr constant [20 x i8] c"SUNFUNCS_RET_DOUBLE\00", align 1
@php_date_global_timezone_db = common hidden global %41* null, align 8
@php_date_global_timezone_db_enabled = common hidden global i32 0, align 4
@171 = private unnamed_addr constant [18 x i8] c"date/time support\00", align 1
@172 = private unnamed_addr constant [8 x i8] c"enabled\00", align 1
@173 = private unnamed_addr constant [16 x i8] c"timelib version\00", align 1
@174 = private unnamed_addr constant [8 x i8] c"2017.09\00", align 1
@175 = private unnamed_addr constant [34 x i8] c"\22Olson\22 Timezone Database Version\00", align 1
@176 = private unnamed_addr constant [18 x i8] c"Timezone Database\00", align 1
@177 = private unnamed_addr constant [9 x i8] c"external\00", align 1
@178 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@179 = private unnamed_addr constant [17 x i8] c"Default timezone\00", align 1
@180 = private unnamed_addr constant [59 x i8] c"Timezone database is corrupt - this should *never* happen!\00", align 1
@181 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@182 = internal global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @322, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @324, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @325, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @326, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @327, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @328, i32 0, i32 0)], align 16
@183 = internal global [7 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @330, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @331, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @332, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @333, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @334, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @335, i32 0, i32 0)], align 16
@184 = private unnamed_addr constant [14 x i8] c"GMT%c%02d%02d\00", align 1
@185 = private unnamed_addr constant [25 x i8] c"idate format is one char\00", align 1
@186 = private unnamed_addr constant [32 x i8] c"Unrecognized date format token.\00", align 1
@187 = private unnamed_addr constant [48 x i8] c"You should be using the time() function instead\00", align 1
@188 = private unnamed_addr constant [4 x i8] c"GMT\00", align 1
@189 = private unnamed_addr constant [7 x i8] c"tm_sec\00", align 1
@190 = private unnamed_addr constant [7 x i8] c"tm_min\00", align 1
@191 = private unnamed_addr constant [8 x i8] c"tm_hour\00", align 1
@192 = private unnamed_addr constant [8 x i8] c"tm_mday\00", align 1
@193 = private unnamed_addr constant [7 x i8] c"tm_mon\00", align 1
@194 = private unnamed_addr constant [8 x i8] c"tm_year\00", align 1
@195 = private unnamed_addr constant [8 x i8] c"tm_wday\00", align 1
@196 = private unnamed_addr constant [8 x i8] c"tm_yday\00", align 1
@197 = private unnamed_addr constant [9 x i8] c"tm_isdst\00", align 1
@198 = private unnamed_addr constant [8 x i8] c"seconds\00", align 1
@199 = private unnamed_addr constant [8 x i8] c"minutes\00", align 1
@200 = private unnamed_addr constant [6 x i8] c"hours\00", align 1
@201 = private unnamed_addr constant [5 x i8] c"mday\00", align 1
@202 = private unnamed_addr constant [5 x i8] c"wday\00", align 1
@203 = private unnamed_addr constant [4 x i8] c"mon\00", align 1
@204 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@205 = private unnamed_addr constant [5 x i8] c"yday\00", align 1
@206 = private unnamed_addr constant [8 x i8] c"weekday\00", align 1
@207 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@208 = internal global [12 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @371, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @372, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @373, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @374, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @363, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @375, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @376, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @377, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @378, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @379, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @380, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @381, i32 0, i32 0)], align 16
@date_period_it_funcs = hidden global %13 { void (%14*)* @475, i32 (%14*)* @476, %29* (%14*)* @477, void (%14*, %29*)* @478, void (%14*)* @479, void (%14*)* @480, void (%14*)* @481 }, align 8
@209 = private unnamed_addr constant [53 x i8] c"An iterator cannot be used with foreach by reference\00", align 1
@210 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@211 = private unnamed_addr constant [4 x i8] c"now\00", align 1
@212 = private unnamed_addr constant [57 x i8] c"Failed to parse time string (%s) at position %d (%c): %s\00", align 1
@213 = private unnamed_addr constant [47 x i8] c"Invalid serialization data for DateTime object\00", align 1
@214 = private unnamed_addr constant [56 x i8] c"Invalid serialization data for DateTimeImmutable object\00", align 1
@215 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@216 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@217 = private unnamed_addr constant [7 x i8] c"minute\00", align 1
@218 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@219 = private unnamed_addr constant [9 x i8] c"fraction\00", align 1
@220 = private unnamed_addr constant [13 x i8] c"is_localtime\00", align 1
@221 = private unnamed_addr constant [10 x i8] c"zone_type\00", align 1
@222 = private unnamed_addr constant [5 x i8] c"zone\00", align 1
@223 = private unnamed_addr constant [7 x i8] c"is_dst\00", align 1
@224 = private unnamed_addr constant [8 x i8] c"tz_abbr\00", align 1
@225 = private unnamed_addr constant [6 x i8] c"tz_id\00", align 1
@226 = private unnamed_addr constant [9 x i8] c"weekdays\00", align 1
@227 = private unnamed_addr constant [19 x i8] c"first_day_of_month\00", align 1
@228 = private unnamed_addr constant [18 x i8] c"last_day_of_month\00", align 1
@229 = private unnamed_addr constant [9 x i8] c"relative\00", align 1
@230 = private unnamed_addr constant [3 x i8] c"Os\00", align 1
@231 = private unnamed_addr constant [74 x i8] c"The DateTime object has not been correctly initialized by its constructor\00", align 1
@232 = private unnamed_addr constant [3 x i8] c"OO\00", align 1
@date_ce_interval = common hidden global %6* null, align 8
@233 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@234 = private unnamed_addr constant [7 x i8] c"Oll|ll\00", align 1
@235 = private unnamed_addr constant [5 x i8] c"Olll\00", align 1
@236 = private unnamed_addr constant [6 x i8] c"Oll|l\00", align 1
@237 = private unnamed_addr constant [3 x i8] c"Ol\00", align 1
@238 = private unnamed_addr constant [5 x i8] c"OO|b\00", align 1
@239 = private unnamed_addr constant [83 x i8] c"The DateTimeInterface object has not been correctly initialized by its constructor\00", align 1
@240 = private unnamed_addr constant [31 x i8] c"Timezone initialization failed\00", align 1
@241 = private unnamed_addr constant [78 x i8] c"The DateTimeZone object has not been correctly initialized by its constructor\00", align 1
@242 = private unnamed_addr constant [5 x i8] c"O|ll\00", align 1
@243 = private unnamed_addr constant [3 x i8] c"ts\00", align 1
@244 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@245 = private unnamed_addr constant [6 x i8] c"isdst\00", align 1
@246 = private unnamed_addr constant [5 x i8] c"abbr\00", align 1
@247 = private unnamed_addr constant [13 x i8] c"country_code\00", align 1
@248 = private unnamed_addr constant [9 x i8] c"latitude\00", align 1
@249 = private unnamed_addr constant [10 x i8] c"longitude\00", align 1
@250 = private unnamed_addr constant [9 x i8] c"comments\00", align 1
@251 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@252 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@253 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@254 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@255 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@256 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@257 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@258 = private unnamed_addr constant [7 x i8] c"invert\00", align 1
@259 = private unnamed_addr constant [5 x i8] c"days\00", align 1
@260 = private unnamed_addr constant [51 x i8] c"Unknown or bad format (%s) at position %d (%c): %s\00", align 1
@261 = private unnamed_addr constant [78 x i8] c"The DateInterval object has not been correctly initialized by its constructor\00", align 1
@262 = private unnamed_addr constant [6 x i8] c"OOl|l\00", align 1
@263 = private unnamed_addr constant [6 x i8] c"OOO|l\00", align 1
@264 = private unnamed_addr constant [4 x i8] c"s|l\00", align 1
@265 = private unnamed_addr constant [144 x i8] c"This constructor accepts either (DateTimeInterface, DateInterval, int) OR (DateTimeInterface, DateInterval, DateTime) OR (string) as arguments.\00", align 1
@266 = private unnamed_addr constant [52 x i8] c"The ISO interval '%s' did not contain a start date.\00", align 1
@267 = private unnamed_addr constant [51 x i8] c"The ISO interval '%s' did not contain an interval.\00", align 1
@268 = private unnamed_addr constant [73 x i8] c"The ISO interval '%s' did not contain an end date or a recurrence count.\00", align 1
@269 = private unnamed_addr constant [54 x i8] c"The recurrence count '%d' is invalid. Needs to be > 0\00", align 1
@270 = private unnamed_addr constant [60 x i8] c"A two-letter ISO 3166-1 compatible country code is expected\00", align 1
@271 = private unnamed_addr constant [4 x i8] c"dst\00", align 1
@272 = private unnamed_addr constant [12 x i8] c"timezone_id\00", align 1
@273 = private unnamed_addr constant [28 x i8] c"Timezone ID '%s' is invalid\00", align 1
@274 = private unnamed_addr constant [8 x i8] c"sunrise\00", align 1
@275 = private unnamed_addr constant [7 x i8] c"sunset\00", align 1
@276 = private unnamed_addr constant [8 x i8] c"transit\00", align 1
@277 = private unnamed_addr constant [21 x i8] c"civil_twilight_begin\00", align 1
@278 = private unnamed_addr constant [19 x i8] c"civil_twilight_end\00", align 1
@279 = private unnamed_addr constant [24 x i8] c"nautical_twilight_begin\00", align 1
@280 = private unnamed_addr constant [22 x i8] c"nautical_twilight_end\00", align 1
@281 = private unnamed_addr constant [28 x i8] c"astronomical_twilight_begin\00", align 1
@282 = private unnamed_addr constant [26 x i8] c"astronomical_twilight_end\00", align 1
@date_ce_period = common hidden global %6* null, align 8
@283 = private unnamed_addr constant [49 x i8] c"Invalid serialization data for DatePeriod object\00", align 1
@284 = private unnamed_addr constant [10 x i8] c"timestamp\00", align 1
@285 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@286 = private unnamed_addr constant [4 x i8] c"sec\00", align 1
@287 = private unnamed_addr constant [18 x i8] c"associative_array\00", align 1
@288 = private unnamed_addr constant [9 x i8] c"timezone\00", align 1
@289 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@290 = private unnamed_addr constant [14 x i8] c"?DateTimeZone\00", align 1
@291 = private unnamed_addr constant [9 x i8] c"interval\00", align 1
@292 = private unnamed_addr constant [8 x i8] c"object2\00", align 1
@293 = private unnamed_addr constant [9 x i8] c"absolute\00", align 1
@294 = private unnamed_addr constant [13 x i8] c"microseconds\00", align 1
@295 = private unnamed_addr constant [5 x i8] c"week\00", align 1
@296 = private unnamed_addr constant [14 x i8] c"unixtimestamp\00", align 1
@297 = private unnamed_addr constant [10 x i8] c"gmtoffset\00", align 1
@298 = private unnamed_addr constant [13 x i8] c"DateTimeZone\00", align 1
@299 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@300 = private unnamed_addr constant [18 x i8] c"DateTimeInterface\00", align 1
@301 = private unnamed_addr constant [16 x i8] c"timestamp_begin\00", align 1
@302 = private unnamed_addr constant [14 x i8] c"timestamp_end\00", align 1
@303 = private unnamed_addr constant [5 x i8] c"what\00", align 1
@304 = private unnamed_addr constant [8 x i8] c"country\00", align 1
@305 = private unnamed_addr constant [20 x i8] c"timezone_identifier\00", align 1
@306 = private unnamed_addr constant [7 x i8] c"zenith\00", align 1
@307 = private unnamed_addr constant [11 x i8] c"gmt_offset\00", align 1
@308 = private unnamed_addr constant [9 x i8] c"DateTime\00", align 1
@309 = private unnamed_addr constant [14 x i8] c"interval_spec\00", align 1
@310 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@311 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@312 = private unnamed_addr constant [14 x i8] c"date.timezone\00", align 1
@313 = private unnamed_addr constant [22 x i8] c"date.default_latitude\00", align 1
@314 = private unnamed_addr constant [8 x i8] c"31.7667\00", align 1
@315 = private unnamed_addr constant [23 x i8] c"date.default_longitude\00", align 1
@316 = private unnamed_addr constant [8 x i8] c"35.2333\00", align 1
@317 = private unnamed_addr constant [19 x i8] c"date.sunset_zenith\00", align 1
@318 = private unnamed_addr constant [10 x i8] c"90.583333\00", align 1
@319 = private unnamed_addr constant [20 x i8] c"date.sunrise_zenith\00", align 1
@320 = private unnamed_addr constant [74 x i8] c"Invalid date.timezone value '%s', we selected the timezone 'UTC' for now.\00", align 1
@321 = private unnamed_addr constant [4 x i8] c"UTC\00", align 1
@322 = private unnamed_addr constant [7 x i8] c"Sunday\00", align 1
@323 = private unnamed_addr constant [7 x i8] c"Monday\00", align 1
@324 = private unnamed_addr constant [8 x i8] c"Tuesday\00", align 1
@325 = private unnamed_addr constant [10 x i8] c"Wednesday\00", align 1
@326 = private unnamed_addr constant [9 x i8] c"Thursday\00", align 1
@327 = private unnamed_addr constant [7 x i8] c"Friday\00", align 1
@328 = private unnamed_addr constant [9 x i8] c"Saturday\00", align 1
@329 = private unnamed_addr constant [4 x i8] c"Sun\00", align 1
@330 = private unnamed_addr constant [4 x i8] c"Mon\00", align 1
@331 = private unnamed_addr constant [4 x i8] c"Tue\00", align 1
@332 = private unnamed_addr constant [4 x i8] c"Wed\00", align 1
@333 = private unnamed_addr constant [4 x i8] c"Thu\00", align 1
@334 = private unnamed_addr constant [4 x i8] c"Fri\00", align 1
@335 = private unnamed_addr constant [4 x i8] c"Sat\00", align 1
@zend_empty_string = external dso_local global %28*, align 8
@336 = private unnamed_addr constant [5 x i8] c"%02d\00", align 1
@337 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@338 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@339 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@340 = internal global [12 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @359, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @360, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @361, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @362, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @363, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @364, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @365, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @366, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @367, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @368, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @369, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @370, i32 0, i32 0)], align 16
@341 = private unnamed_addr constant [9 x i8] c"%s%04lld\00", align 1
@342 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@343 = private unnamed_addr constant [3 x i8] c"pm\00", align 1
@344 = private unnamed_addr constant [3 x i8] c"am\00", align 1
@345 = private unnamed_addr constant [3 x i8] c"PM\00", align 1
@346 = private unnamed_addr constant [3 x i8] c"AM\00", align 1
@347 = private unnamed_addr constant [5 x i8] c"%03d\00", align 1
@348 = private unnamed_addr constant [5 x i8] c"%06d\00", align 1
@349 = private unnamed_addr constant [13 x i8] c"%c%02d%s%02d\00", align 1
@350 = private unnamed_addr constant [2 x i8] c":\00", align 1
@351 = private unnamed_addr constant [12 x i8] c"%c%02d:%02d\00", align 1
@352 = private unnamed_addr constant [42 x i8] c"%04ld-%02d-%02dT%02d:%02d:%02d%c%02d:%02d\00", align 1
@353 = private unnamed_addr constant [46 x i8] c"%3s, %02d %3s %04ld %02d:%02d:%02d %c%02d%02d\00", align 1
@354 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@355 = private unnamed_addr constant [3 x i8] c"th\00", align 1
@356 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@357 = private unnamed_addr constant [3 x i8] c"nd\00", align 1
@358 = private unnamed_addr constant [3 x i8] c"rd\00", align 1
@359 = private unnamed_addr constant [4 x i8] c"Jan\00", align 1
@360 = private unnamed_addr constant [4 x i8] c"Feb\00", align 1
@361 = private unnamed_addr constant [4 x i8] c"Mar\00", align 1
@362 = private unnamed_addr constant [4 x i8] c"Apr\00", align 1
@363 = private unnamed_addr constant [4 x i8] c"May\00", align 1
@364 = private unnamed_addr constant [4 x i8] c"Jun\00", align 1
@365 = private unnamed_addr constant [4 x i8] c"Jul\00", align 1
@366 = private unnamed_addr constant [4 x i8] c"Aug\00", align 1
@367 = private unnamed_addr constant [4 x i8] c"Sep\00", align 1
@368 = private unnamed_addr constant [4 x i8] c"Oct\00", align 1
@369 = private unnamed_addr constant [4 x i8] c"Nov\00", align 1
@370 = private unnamed_addr constant [4 x i8] c"Dec\00", align 1
@371 = private unnamed_addr constant [8 x i8] c"January\00", align 1
@372 = private unnamed_addr constant [9 x i8] c"February\00", align 1
@373 = private unnamed_addr constant [6 x i8] c"March\00", align 1
@374 = private unnamed_addr constant [6 x i8] c"April\00", align 1
@375 = private unnamed_addr constant [5 x i8] c"June\00", align 1
@376 = private unnamed_addr constant [5 x i8] c"July\00", align 1
@377 = private unnamed_addr constant [7 x i8] c"August\00", align 1
@378 = private unnamed_addr constant [10 x i8] c"September\00", align 1
@379 = private unnamed_addr constant [8 x i8] c"October\00", align 1
@380 = private unnamed_addr constant [9 x i8] c"November\00", align 1
@381 = private unnamed_addr constant [9 x i8] c"December\00", align 1
@382 = private unnamed_addr constant [46 x i8] c"DatePeriod has not been initialized correctly\00", align 1
@zend_new_interned_string = external dso_local global %28* (%28*)*, align 8
@383 = private unnamed_addr constant [5 x i8] c"ATOM\00", align 1
@384 = private unnamed_addr constant [7 x i8] c"COOKIE\00", align 1
@385 = private unnamed_addr constant [8 x i8] c"ISO8601\00", align 1
@386 = private unnamed_addr constant [7 x i8] c"RFC822\00", align 1
@387 = private unnamed_addr constant [7 x i8] c"RFC850\00", align 1
@388 = private unnamed_addr constant [8 x i8] c"RFC1036\00", align 1
@389 = private unnamed_addr constant [8 x i8] c"RFC1123\00", align 1
@390 = private unnamed_addr constant [8 x i8] c"RFC7231\00", align 1
@391 = private unnamed_addr constant [8 x i8] c"RFC2822\00", align 1
@392 = private unnamed_addr constant [8 x i8] c"RFC3339\00", align 1
@393 = private unnamed_addr constant [17 x i8] c"RFC3339_EXTENDED\00", align 1
@394 = private unnamed_addr constant [4 x i8] c"RSS\00", align 1
@395 = private unnamed_addr constant [4 x i8] c"W3C\00", align 1
@396 = internal global %16 zeroinitializer, align 8
@397 = private unnamed_addr constant [18 x i8] c"DateTimeImmutable\00", align 1
@398 = internal global %16 zeroinitializer, align 8
@399 = internal global %16 zeroinitializer, align 8
@400 = private unnamed_addr constant [7 x i8] c"AFRICA\00", align 1
@401 = private unnamed_addr constant [8 x i8] c"AMERICA\00", align 1
@402 = private unnamed_addr constant [11 x i8] c"ANTARCTICA\00", align 1
@403 = private unnamed_addr constant [7 x i8] c"ARCTIC\00", align 1
@404 = private unnamed_addr constant [5 x i8] c"ASIA\00", align 1
@405 = private unnamed_addr constant [9 x i8] c"ATLANTIC\00", align 1
@406 = private unnamed_addr constant [10 x i8] c"AUSTRALIA\00", align 1
@407 = private unnamed_addr constant [7 x i8] c"EUROPE\00", align 1
@408 = private unnamed_addr constant [7 x i8] c"INDIAN\00", align 1
@409 = private unnamed_addr constant [8 x i8] c"PACIFIC\00", align 1
@410 = private unnamed_addr constant [4 x i8] c"ALL\00", align 1
@411 = private unnamed_addr constant [12 x i8] c"ALL_WITH_BC\00", align 1
@412 = private unnamed_addr constant [12 x i8] c"PER_COUNTRY\00", align 1
@413 = private unnamed_addr constant [13 x i8] c"DateInterval\00", align 1
@414 = internal global %16 zeroinitializer, align 8
@415 = private unnamed_addr constant [11 x i8] c"DatePeriod\00", align 1
@zend_ce_traversable = external dso_local global %6*, align 8
@416 = internal global %16 zeroinitializer, align 8
@417 = private unnamed_addr constant [19 x i8] c"EXCLUDE_START_DATE\00", align 1
@418 = internal constant [7 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }] [{ i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @99, i32 0, i32 0), void (%1*, %29*)* null, %0* getelementptr inbounds ([2 x %0], [2 x %0]* @100, i32 0, i32 0), i32 1, i32 258 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @107, i32 0, i32 0), void (%1*, %29*)* null, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @108, i32 0, i32 0), i32 0, i32 258 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @111, i32 0, i32 0), void (%1*, %29*)* null, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @112, i32 0, i32 0), i32 0, i32 258 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @121, i32 0, i32 0), void (%1*, %29*)* null, %0* getelementptr inbounds ([1 x %0], [1 x %0]* @122, i32 0, i32 0), i32 0, i32 258 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @123, i32 0, i32 0), void (%1*, %29*)* null, %0* getelementptr inbounds ([3 x %0], [3 x %0]* @124, i32 0, i32 0), i32 2, i32 258 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @95, i32 0, i32 0), void (%1*, %29*)* null, %0* null, i32 -1, i32 258 }, { i8*, void (%1*, %29*)*, %0*, i32, i32 } zeroinitializer], align 16
@419 = private unnamed_addr constant [55 x i8] c"DateTimeInterface can't be implemented by user classes\00", align 1
@420 = private unnamed_addr constant [69 x i8] c"Trying to compare an incomplete DateTime or DateTimeImmutable object\00", align 1
@421 = private unnamed_addr constant [14 x i8] c"Y-m-d H:i:s.u\00", align 1
@422 = private unnamed_addr constant [14 x i8] c"timezone_type\00", align 1
@executor_globals = external dso_local global %43, align 8
@423 = private unnamed_addr constant [17 x i8] c"weekday_behavior\00", align 1
@424 = private unnamed_addr constant [18 x i8] c"first_last_day_of\00", align 1
@425 = private unnamed_addr constant [13 x i8] c"special_type\00", align 1
@426 = private unnamed_addr constant [15 x i8] c"special_amount\00", align 1
@427 = private unnamed_addr constant [22 x i8] c"have_weekday_relative\00", align 1
@428 = private unnamed_addr constant [22 x i8] c"have_special_relative\00", align 1
@429 = private unnamed_addr constant [8 x i8] c"current\00", align 1
@430 = private unnamed_addr constant [12 x i8] c"recurrences\00", align 1
@431 = private unnamed_addr constant [19 x i8] c"include_start_date\00", align 1
@432 = private unnamed_addr constant [60 x i8] c"Retrieval of DatePeriod->%s for modification is unsupported\00", align 1
@std_object_handlers = external dso_local global %16, align 8
@433 = private unnamed_addr constant [41 x i8] c"Writing to DatePeriod->%s is unsupported\00", align 1
@434 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@435 = private unnamed_addr constant [14 x i8] c"warning_count\00", align 1
@436 = private unnamed_addr constant [9 x i8] c"warnings\00", align 1
@437 = private unnamed_addr constant [12 x i8] c"error_count\00", align 1
@438 = private unnamed_addr constant [7 x i8] c"errors\00", align 1
@439 = private unnamed_addr constant [76 x i8] c"Only non-special relative time specifications are supported for subtraction\00", align 1
@440 = private unnamed_addr constant [37 x i8] c"Timezone must not contain null bytes\00", align 1
@441 = private unnamed_addr constant [29 x i8] c"Unknown or bad timezone (%s)\00", align 1
@442 = private unnamed_addr constant [27 x i8] c"Unknown or bad format (%s)\00", align 1
@443 = private unnamed_addr constant [30 x i8] c"Failed to parse interval (%s)\00", align 1
@444 = private unnamed_addr constant [6 x i8] c"%02ld\00", align 1
@445 = private unnamed_addr constant [6 x i8] c"%06ld\00", align 1
@446 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@447 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@448 = private unnamed_addr constant [3 x i8] c"%%\00", align 1
@449 = private unnamed_addr constant [8 x i8] c"Africa/\00", align 1
@450 = private unnamed_addr constant [9 x i8] c"America/\00", align 1
@451 = private unnamed_addr constant [12 x i8] c"Antarctica/\00", align 1
@452 = private unnamed_addr constant [8 x i8] c"Arctic/\00", align 1
@453 = private unnamed_addr constant [6 x i8] c"Asia/\00", align 1
@454 = private unnamed_addr constant [10 x i8] c"Atlantic/\00", align 1
@455 = private unnamed_addr constant [11 x i8] c"Australia/\00", align 1
@456 = private unnamed_addr constant [8 x i8] c"Europe/\00", align 1
@457 = private unnamed_addr constant [8 x i8] c"Indian/\00", align 1
@458 = private unnamed_addr constant [9 x i8] c"Pacific/\00", align 1
@459 = private unnamed_addr constant [15 x i8] c"invalid format\00", align 1
@460 = private unnamed_addr constant [106 x i8] c"Wrong return format given, pick one of SUNFUNCS_RET_TIMESTAMP, SUNFUNCS_RET_STRING or SUNFUNCS_RET_DOUBLE\00", align 1
@461 = private unnamed_addr constant [10 x i8] c"%02d:%02d\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i64 @php_time() #0 {
  %1 = alloca i64, align 8
  %2 = alloca %50, align 8
  %3 = alloca i32, align 4
  %4 = bitcast %50* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %4) #15
  %5 = call i32 @gettimeofday(%50* %2, %51* null) #15
  %6 = icmp ne i32 %5, 0
  %7 = xor i1 %6, true
  %8 = xor i1 %7, true
  %9 = zext i1 %8 to i32
  %10 = sext i32 %9 to i64
  %11 = call i64 @llvm.expect.i64(i64 %10, i64 0)
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %0
  %14 = call i64 @time(i64* null) #15
  store i64 %14, i64* %1, align 8
  store i32 1, i32* %3, align 4
  br label %18

15:                                               ; preds = %0
  %16 = getelementptr inbounds %50, %50* %2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %1, align 8
  store i32 1, i32* %3, align 4
  br label %18

18:                                               ; preds = %15, %13
  %19 = bitcast %50* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %19) #15
  %20 = load i64, i64* %1, align 8
  ret i64 %20
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%50*, %51*) #2

; Function Attrs: nounwind readnone willreturn
declare i64 @llvm.expect.i64(i64, i64) #3

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_strtotime(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %34*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %52*, align 8
  %12 = alloca %52*, align 8
  %13 = alloca %53*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %29*, align 8
  %20 = alloca %29*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %28 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #15
  %29 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  %30 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  %31 = bitcast %34** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #15
  %32 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #15
  store i64 0, i64* %9, align 8
  %33 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #15
  %34 = bitcast %52** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #15
  %35 = bitcast %52** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %53** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  br label %37

37:                                               ; preds = %2
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #15
  store i32 0, i32* %14, align 4
  %39 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 1, i32* %15, align 4
  %40 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #15
  store i32 2, i32* %16, align 4
  %41 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  %42 = load %1*, %1** %3, align 8
  %43 = getelementptr inbounds %1, %1* %42, i32 0, i32 4
  %44 = getelementptr inbounds %29, %29* %43, i32 0, i32 2
  %45 = bitcast %32* %44 to i32*
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %17, align 4
  %47 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #15
  %48 = bitcast %29** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #15
  %49 = bitcast %29** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #15
  store %29* null, %29** %20, align 8
  %50 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #15
  store i32 0, i32* %21, align 4
  %51 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #15
  store i8* null, i8** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #15
  store i8 0, i8* %24, align 1
  %52 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #15
  store i32 0, i32* %25, align 4
  %53 = load i32, i32* %18, align 4
  %54 = load %29*, %29** %19, align 8
  %55 = load %29*, %29** %20, align 8
  %56 = load i32, i32* %21, align 4
  %57 = load i8*, i8** %22, align 8
  %58 = load i8, i8* %23, align 1
  %59 = load i8, i8* %24, align 1
  br label %60

60:                                               ; preds = %37
  %61 = load i32, i32* %17, align 4
  %62 = load i32, i32* %15, align 4
  %63 = icmp slt i32 %61, %62
  %64 = xor i1 %63, true
  %65 = xor i1 %64, true
  %66 = zext i1 %65 to i32
  %67 = sext i32 %66 to i64
  %68 = call i64 @llvm.expect.i64(i64 %67, i64 0)
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %89, label %70

70:                                               ; preds = %60
  %71 = load i32, i32* %17, align 4
  %72 = load i32, i32* %16, align 4
  %73 = icmp sgt i32 %71, %72
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 0)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %93

80:                                               ; preds = %70
  %81 = load i32, i32* %16, align 4
  %82 = icmp sge i32 %81, 0
  %83 = xor i1 %82, true
  %84 = xor i1 %83, true
  %85 = zext i1 %84 to i32
  %86 = sext i32 %85 to i64
  %87 = call i64 @llvm.expect.i64(i64 %86, i64 1)
  %88 = icmp ne i64 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %80, %60
  %90 = load i32, i32* %17, align 4
  %91 = load i32, i32* %15, align 4
  %92 = load i32, i32* %16, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %90, i32 %91, i32 %92)
  store i32 1, i32* %25, align 4
  br label %238

93:                                               ; preds = %80, %70
  store i32 0, i32* %18, align 4
  %94 = load %1*, %1** %3, align 8
  %95 = bitcast %1* %94 to %29*
  %96 = getelementptr inbounds %29, %29* %95, i64 4
  store %29* %96, %29** %19, align 8
  %97 = load i32, i32* %18, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %18, align 4
  br label %99

99:                                               ; preds = %93
  %100 = load i32, i32* %18, align 4
  %101 = load i32, i32* %15, align 4
  %102 = icmp sle i32 %100, %101
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  %104 = load i8, i8* %24, align 1
  %105 = zext i8 %104 to i32
  %106 = icmp eq i32 %105, 1
  br label %107

107:                                              ; preds = %103, %99
  %108 = phi i1 [ true, %99 ], [ %106, %103 ]
  %109 = xor i1 %108, true
  %110 = zext i1 %109 to i32
  %111 = sext i32 %110 to i64
  %112 = call i64 @llvm.expect.i64(i64 %111, i64 0)
  %113 = icmp ne i64 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %107
  unreachable

115:                                              ; preds = %107
  br label %116

116:                                              ; preds = %115
  br label %117

117:                                              ; preds = %116
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %18, align 4
  %120 = load i32, i32* %15, align 4
  %121 = icmp sgt i32 %119, %120
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = load i8, i8* %24, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp eq i32 %124, 0
  br label %126

126:                                              ; preds = %122, %118
  %127 = phi i1 [ true, %118 ], [ %125, %122 ]
  %128 = xor i1 %127, true
  %129 = zext i1 %128 to i32
  %130 = sext i32 %129 to i64
  %131 = call i64 @llvm.expect.i64(i64 %130, i64 0)
  %132 = icmp ne i64 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %126
  unreachable

134:                                              ; preds = %126
  br label %135

135:                                              ; preds = %134
  br label %136

136:                                              ; preds = %135
  %137 = load i8, i8* %24, align 1
  %138 = icmp ne i8 %137, 0
  br i1 %138, label %139, label %151

139:                                              ; preds = %136
  %140 = load i32, i32* %18, align 4
  %141 = load i32, i32* %17, align 4
  %142 = icmp sgt i32 %140, %141
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = zext i1 %144 to i32
  %146 = sext i32 %145 to i64
  %147 = call i64 @llvm.expect.i64(i64 %146, i64 0)
  %148 = icmp ne i64 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %139
  br label %238

150:                                              ; preds = %139
  br label %151

151:                                              ; preds = %150, %136
  %152 = load %29*, %29** %19, align 8
  %153 = getelementptr inbounds %29, %29* %152, i32 1
  store %29* %153, %29** %19, align 8
  %154 = load %29*, %29** %19, align 8
  store %29* %154, %29** %20, align 8
  %155 = load %29*, %29** %20, align 8
  %156 = call i32 @468(%29* %155, %28** %5, i32 0)
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = xor i1 %159, true
  %161 = zext i1 %160 to i32
  %162 = sext i32 %161 to i64
  %163 = call i64 @llvm.expect.i64(i64 %162, i64 0)
  %164 = icmp ne i64 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %151
  store i32 2, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %238

166:                                              ; preds = %151
  store i8 1, i8* %24, align 1
  %167 = load i32, i32* %18, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %18, align 4
  br label %169

169:                                              ; preds = %166
  %170 = load i32, i32* %18, align 4
  %171 = load i32, i32* %15, align 4
  %172 = icmp sle i32 %170, %171
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = load i8, i8* %24, align 1
  %175 = zext i8 %174 to i32
  %176 = icmp eq i32 %175, 1
  br label %177

177:                                              ; preds = %173, %169
  %178 = phi i1 [ true, %169 ], [ %176, %173 ]
  %179 = xor i1 %178, true
  %180 = zext i1 %179 to i32
  %181 = sext i32 %180 to i64
  %182 = call i64 @llvm.expect.i64(i64 %181, i64 0)
  %183 = icmp ne i64 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %177
  unreachable

185:                                              ; preds = %177
  br label %186

186:                                              ; preds = %185
  br label %187

187:                                              ; preds = %186
  br label %188

188:                                              ; preds = %187
  %189 = load i32, i32* %18, align 4
  %190 = load i32, i32* %15, align 4
  %191 = icmp sgt i32 %189, %190
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = load i8, i8* %24, align 1
  %194 = zext i8 %193 to i32
  %195 = icmp eq i32 %194, 0
  br label %196

196:                                              ; preds = %192, %188
  %197 = phi i1 [ true, %188 ], [ %195, %192 ]
  %198 = xor i1 %197, true
  %199 = zext i1 %198 to i32
  %200 = sext i32 %199 to i64
  %201 = call i64 @llvm.expect.i64(i64 %200, i64 0)
  %202 = icmp ne i64 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %196
  unreachable

204:                                              ; preds = %196
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  %207 = load i8, i8* %24, align 1
  %208 = icmp ne i8 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %206
  %210 = load i32, i32* %18, align 4
  %211 = load i32, i32* %17, align 4
  %212 = icmp sgt i32 %210, %211
  %213 = xor i1 %212, true
  %214 = xor i1 %213, true
  %215 = zext i1 %214 to i32
  %216 = sext i32 %215 to i64
  %217 = call i64 @llvm.expect.i64(i64 %216, i64 0)
  %218 = icmp ne i64 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %209
  br label %238

220:                                              ; preds = %209
  br label %221

221:                                              ; preds = %220, %206
  %222 = load %29*, %29** %19, align 8
  %223 = getelementptr inbounds %29, %29* %222, i32 1
  store %29* %223, %29** %19, align 8
  %224 = load %29*, %29** %19, align 8
  store %29* %224, %29** %20, align 8
  %225 = load %29*, %29** %20, align 8
  %226 = call i32 @469(%29* %225, i64* %9, i8* %23, i32 0, i32 0)
  %227 = icmp ne i32 %226, 0
  %228 = xor i1 %227, true
  %229 = xor i1 %228, true
  %230 = xor i1 %229, true
  %231 = zext i1 %230 to i32
  %232 = sext i32 %231 to i64
  %233 = call i64 @llvm.expect.i64(i64 %232, i64 0)
  %234 = icmp ne i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %221
  store i32 0, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %238

236:                                              ; preds = %221
  br label %237

237:                                              ; preds = %236
  br label %238

238:                                              ; preds = %237, %235, %219, %165, %149, %89
  %239 = load i32, i32* %25, align 4
  %240 = icmp ne i32 %239, 0
  %241 = xor i1 %240, true
  %242 = xor i1 %241, true
  %243 = zext i1 %242 to i32
  %244 = sext i32 %243 to i64
  %245 = call i64 @llvm.expect.i64(i64 %244, i64 0)
  %246 = icmp ne i64 %245, 0
  br i1 %246, label %247, label %276

247:                                              ; preds = %238
  %248 = load i32, i32* %25, align 4
  %249 = icmp eq i32 %248, 2
  br i1 %249, label %250, label %253

250:                                              ; preds = %247
  %251 = load i32, i32* %18, align 4
  %252 = load i8*, i8** %22, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %251, i8* %252)
  br label %269

253:                                              ; preds = %247
  %254 = load i32, i32* %25, align 4
  %255 = icmp eq i32 %254, 3
  br i1 %255, label %256, label %260

256:                                              ; preds = %253
  %257 = load i32, i32* %18, align 4
  %258 = load i8*, i8** %22, align 8
  %259 = load %29*, %29** %20, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %257, i8* %258, %29* %259)
  br label %268

260:                                              ; preds = %253
  %261 = load i32, i32* %25, align 4
  %262 = icmp eq i32 %261, 4
  br i1 %262, label %263, label %267

263:                                              ; preds = %260
  %264 = load i32, i32* %18, align 4
  %265 = load i32, i32* %21, align 4
  %266 = load %29*, %29** %20, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %264, i32 %265, %29* %266)
  br label %267

267:                                              ; preds = %263, %260
  br label %268

268:                                              ; preds = %267, %256
  br label %269

269:                                              ; preds = %268, %250
  br label %270

270:                                              ; preds = %269
  %271 = load %29*, %29** %4, align 8
  %272 = getelementptr inbounds %29, %29* %271, i32 0, i32 1
  %273 = bitcast %31* %272 to i32*
  store i32 2, i32* %273, align 8
  br label %274

274:                                              ; preds = %270
  br label %275

275:                                              ; preds = %274
  store i32 1, i32* %26, align 4
  br label %277

276:                                              ; preds = %238
  store i32 0, i32* %26, align 4
  br label %277

277:                                              ; preds = %276, %275
  %278 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #15
  %279 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %279) #15
  %280 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #15
  %281 = bitcast %29** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %281) #15
  %282 = bitcast %29** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %282) #15
  %283 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %283) #15
  %284 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %284) #15
  %285 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %285) #15
  %286 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %286) #15
  %287 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %287) #15
  %288 = load i32, i32* %26, align 4
  switch i32 %288, label %362 [
    i32 0, label %289
  ]

289:                                              ; preds = %277
  br label %290

290:                                              ; preds = %289
  br label %291

291:                                              ; preds = %290
  %292 = call %53* @get_timezone_info()
  store %53* %292, %53** %13, align 8
  %293 = call %52* @timelib_time_ctor()
  store %52* %293, %52** %12, align 8
  %294 = load %53*, %53** %13, align 8
  %295 = load %52*, %52** %12, align 8
  %296 = getelementptr inbounds %52, %52* %295, i32 0, i32 9
  store %53* %294, %53** %296, align 8
  %297 = load %52*, %52** %12, align 8
  %298 = getelementptr inbounds %52, %52* %297, i32 0, i32 21
  store i32 3, i32* %298, align 8
  %299 = load %52*, %52** %12, align 8
  %300 = load %1*, %1** %3, align 8
  %301 = getelementptr inbounds %1, %1* %300, i32 0, i32 4
  %302 = getelementptr inbounds %29, %29* %301, i32 0, i32 2
  %303 = bitcast %32* %302 to i32*
  %304 = load i32, i32* %303, align 4
  %305 = icmp eq i32 %304, 2
  br i1 %305, label %306, label %308

306:                                              ; preds = %291
  %307 = load i64, i64* %9, align 8
  br label %310

308:                                              ; preds = %291
  %309 = call i64 @php_time()
  br label %310

310:                                              ; preds = %308, %306
  %311 = phi i64 [ %307, %306 ], [ %309, %308 ]
  call void @timelib_unixtime2local(%52* %299, i64 %311)
  %312 = load %28*, %28** %5, align 8
  %313 = getelementptr inbounds %28, %28* %312, i32 0, i32 3
  %314 = getelementptr inbounds [1 x i8], [1 x i8]* %313, i32 0, i32 0
  %315 = load %28*, %28** %5, align 8
  %316 = getelementptr inbounds %28, %28* %315, i32 0, i32 2
  %317 = load i64, i64* %316, align 8
  %318 = load %41*, %41** @php_date_global_timezone_db, align 8
  %319 = icmp ne %41* %318, null
  br i1 %319, label %320, label %322

320:                                              ; preds = %310
  %321 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %324

322:                                              ; preds = %310
  %323 = call %41* @timelib_builtin_db()
  br label %324

324:                                              ; preds = %322, %320
  %325 = phi %41* [ %321, %320 ], [ %323, %322 ]
  %326 = call %52* @timelib_strtotime(i8* %314, i64 %317, %34** %8, %41* %325, %53* (i8*, %41*, i32*)* @php_date_parse_tzfile_wrapper)
  store %52* %326, %52** %11, align 8
  %327 = load %34*, %34** %8, align 8
  %328 = getelementptr inbounds %34, %34* %327, i32 0, i32 2
  %329 = load i32, i32* %328, align 8
  store i32 %329, i32* %6, align 4
  %330 = load %34*, %34** %8, align 8
  call void @timelib_error_container_dtor(%34* %330)
  %331 = load %52*, %52** %11, align 8
  %332 = load %52*, %52** %12, align 8
  call void @timelib_fill_holes(%52* %331, %52* %332, i32 2)
  %333 = load %52*, %52** %11, align 8
  %334 = load %53*, %53** %13, align 8
  call void @timelib_update_ts(%52* %333, %53* %334)
  %335 = load %52*, %52** %11, align 8
  %336 = call i64 @timelib_date_to_int(%52* %335, i32* %7)
  store i64 %336, i64* %10, align 8
  %337 = load %52*, %52** %12, align 8
  call void @timelib_time_dtor(%52* %337)
  %338 = load %52*, %52** %11, align 8
  call void @timelib_time_dtor(%52* %338)
  %339 = load i32, i32* %6, align 4
  %340 = icmp ne i32 %339, 0
  br i1 %340, label %344, label %341

341:                                              ; preds = %324
  %342 = load i32, i32* %7, align 4
  %343 = icmp ne i32 %342, 0
  br i1 %343, label %344, label %351

344:                                              ; preds = %341, %324
  br label %345

345:                                              ; preds = %344
  %346 = load %29*, %29** %4, align 8
  %347 = getelementptr inbounds %29, %29* %346, i32 0, i32 1
  %348 = bitcast %31* %347 to i32*
  store i32 2, i32* %348, align 8
  br label %349

349:                                              ; preds = %345
  br label %350

350:                                              ; preds = %349
  store i32 1, i32* %26, align 4
  br label %362

351:                                              ; preds = %341
  %352 = bitcast %29** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %352) #15
  %353 = load %29*, %29** %4, align 8
  store %29* %353, %29** %27, align 8
  %354 = load i64, i64* %10, align 8
  %355 = load %29*, %29** %27, align 8
  %356 = getelementptr inbounds %29, %29* %355, i32 0, i32 0
  %357 = bitcast %30* %356 to i64*
  store i64 %354, i64* %357, align 8
  %358 = load %29*, %29** %27, align 8
  %359 = getelementptr inbounds %29, %29* %358, i32 0, i32 1
  %360 = bitcast %31* %359 to i32*
  store i32 4, i32* %360, align 8
  %361 = bitcast %29** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %361) #15
  store i32 1, i32* %26, align 4
  br label %362

362:                                              ; preds = %351, %350, %277
  %363 = bitcast %53** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %363) #15
  %364 = bitcast %52** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %364) #15
  %365 = bitcast %52** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %365) #15
  %366 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %366) #15
  %367 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %367) #15
  %368 = bitcast %34** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %368) #15
  %369 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %369) #15
  %370 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %370) #15
  %371 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %1*, %1** %3, align 8
  %6 = load %29*, %29** %4, align 8
  call void @467(%1* %5, %29* %6, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_idate(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %22 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  store i64 0, i64* %6, align 8
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #15
  br label %25

25:                                               ; preds = %2
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 0, i32* %8, align 4
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 1, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 2, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  %30 = load %1*, %1** %3, align 8
  %31 = getelementptr inbounds %1, %1* %30, i32 0, i32 4
  %32 = getelementptr inbounds %29, %29* %31, i32 0, i32 2
  %33 = bitcast %32* %32 to i32*
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %11, align 4
  %35 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #15
  %36 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  %37 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  store %29* null, %29** %14, align 8
  %38 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #15
  store i32 0, i32* %15, align 4
  %39 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %40 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #15
  store i32 0, i32* %19, align 4
  %41 = load i32, i32* %12, align 4
  %42 = load %29*, %29** %13, align 8
  %43 = load %29*, %29** %14, align 8
  %44 = load i32, i32* %15, align 4
  %45 = load i8*, i8** %16, align 8
  %46 = load i8, i8* %17, align 1
  %47 = load i8, i8* %18, align 1
  br label %48

48:                                               ; preds = %25
  %49 = load i32, i32* %11, align 4
  %50 = load i32, i32* %9, align 4
  %51 = icmp slt i32 %49, %50
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 0)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %77, label %58

58:                                               ; preds = %48
  %59 = load i32, i32* %11, align 4
  %60 = load i32, i32* %10, align 4
  %61 = icmp sgt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %58
  %69 = load i32, i32* %10, align 4
  %70 = icmp sge i32 %69, 0
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 1)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %68, %48
  %78 = load i32, i32* %11, align 4
  %79 = load i32, i32* %9, align 4
  %80 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %78, i32 %79, i32 %80)
  store i32 1, i32* %19, align 4
  br label %226

81:                                               ; preds = %68, %58
  store i32 0, i32* %12, align 4
  %82 = load %1*, %1** %3, align 8
  %83 = bitcast %1* %82 to %29*
  %84 = getelementptr inbounds %29, %29* %83, i64 4
  store %29* %84, %29** %13, align 8
  %85 = load i32, i32* %12, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %12, align 4
  br label %87

87:                                               ; preds = %81
  %88 = load i32, i32* %12, align 4
  %89 = load i32, i32* %9, align 4
  %90 = icmp sle i32 %88, %89
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = load i8, i8* %18, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 1
  br label %95

95:                                               ; preds = %91, %87
  %96 = phi i1 [ true, %87 ], [ %94, %91 ]
  %97 = xor i1 %96, true
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = call i64 @llvm.expect.i64(i64 %99, i64 0)
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %95
  unreachable

103:                                              ; preds = %95
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  %107 = load i32, i32* %12, align 4
  %108 = load i32, i32* %9, align 4
  %109 = icmp sgt i32 %107, %108
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = load i8, i8* %18, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 0
  br label %114

114:                                              ; preds = %110, %106
  %115 = phi i1 [ true, %106 ], [ %113, %110 ]
  %116 = xor i1 %115, true
  %117 = zext i1 %116 to i32
  %118 = sext i32 %117 to i64
  %119 = call i64 @llvm.expect.i64(i64 %118, i64 0)
  %120 = icmp ne i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  unreachable

122:                                              ; preds = %114
  br label %123

123:                                              ; preds = %122
  br label %124

124:                                              ; preds = %123
  %125 = load i8, i8* %18, align 1
  %126 = icmp ne i8 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %124
  %128 = load i32, i32* %12, align 4
  %129 = load i32, i32* %11, align 4
  %130 = icmp sgt i32 %128, %129
  %131 = xor i1 %130, true
  %132 = xor i1 %131, true
  %133 = zext i1 %132 to i32
  %134 = sext i32 %133 to i64
  %135 = call i64 @llvm.expect.i64(i64 %134, i64 0)
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %127
  br label %226

138:                                              ; preds = %127
  br label %139

139:                                              ; preds = %138, %124
  %140 = load %29*, %29** %13, align 8
  %141 = getelementptr inbounds %29, %29* %140, i32 1
  store %29* %141, %29** %13, align 8
  %142 = load %29*, %29** %13, align 8
  store %29* %142, %29** %14, align 8
  %143 = load %29*, %29** %14, align 8
  %144 = call i32 @468(%29* %143, %28** %5, i32 0)
  %145 = icmp ne i32 %144, 0
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 0)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %139
  store i32 2, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %226

154:                                              ; preds = %139
  store i8 1, i8* %18, align 1
  %155 = load i32, i32* %12, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %12, align 4
  br label %157

157:                                              ; preds = %154
  %158 = load i32, i32* %12, align 4
  %159 = load i32, i32* %9, align 4
  %160 = icmp sle i32 %158, %159
  br i1 %160, label %165, label %161

161:                                              ; preds = %157
  %162 = load i8, i8* %18, align 1
  %163 = zext i8 %162 to i32
  %164 = icmp eq i32 %163, 1
  br label %165

165:                                              ; preds = %161, %157
  %166 = phi i1 [ true, %157 ], [ %164, %161 ]
  %167 = xor i1 %166, true
  %168 = zext i1 %167 to i32
  %169 = sext i32 %168 to i64
  %170 = call i64 @llvm.expect.i64(i64 %169, i64 0)
  %171 = icmp ne i64 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %165
  unreachable

173:                                              ; preds = %165
  br label %174

174:                                              ; preds = %173
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  %177 = load i32, i32* %12, align 4
  %178 = load i32, i32* %9, align 4
  %179 = icmp sgt i32 %177, %178
  br i1 %179, label %184, label %180

180:                                              ; preds = %176
  %181 = load i8, i8* %18, align 1
  %182 = zext i8 %181 to i32
  %183 = icmp eq i32 %182, 0
  br label %184

184:                                              ; preds = %180, %176
  %185 = phi i1 [ true, %176 ], [ %183, %180 ]
  %186 = xor i1 %185, true
  %187 = zext i1 %186 to i32
  %188 = sext i32 %187 to i64
  %189 = call i64 @llvm.expect.i64(i64 %188, i64 0)
  %190 = icmp ne i64 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %184
  unreachable

192:                                              ; preds = %184
  br label %193

193:                                              ; preds = %192
  br label %194

194:                                              ; preds = %193
  %195 = load i8, i8* %18, align 1
  %196 = icmp ne i8 %195, 0
  br i1 %196, label %197, label %209

197:                                              ; preds = %194
  %198 = load i32, i32* %12, align 4
  %199 = load i32, i32* %11, align 4
  %200 = icmp sgt i32 %198, %199
  %201 = xor i1 %200, true
  %202 = xor i1 %201, true
  %203 = zext i1 %202 to i32
  %204 = sext i32 %203 to i64
  %205 = call i64 @llvm.expect.i64(i64 %204, i64 0)
  %206 = icmp ne i64 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %197
  br label %226

208:                                              ; preds = %197
  br label %209

209:                                              ; preds = %208, %194
  %210 = load %29*, %29** %13, align 8
  %211 = getelementptr inbounds %29, %29* %210, i32 1
  store %29* %211, %29** %13, align 8
  %212 = load %29*, %29** %13, align 8
  store %29* %212, %29** %14, align 8
  %213 = load %29*, %29** %14, align 8
  %214 = call i32 @469(%29* %213, i64* %6, i8* %17, i32 0, i32 0)
  %215 = icmp ne i32 %214, 0
  %216 = xor i1 %215, true
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = zext i1 %218 to i32
  %220 = sext i32 %219 to i64
  %221 = call i64 @llvm.expect.i64(i64 %220, i64 0)
  %222 = icmp ne i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %209
  store i32 0, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %226

224:                                              ; preds = %209
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225, %223, %207, %153, %137, %77
  %227 = load i32, i32* %19, align 4
  %228 = icmp ne i32 %227, 0
  %229 = xor i1 %228, true
  %230 = xor i1 %229, true
  %231 = zext i1 %230 to i32
  %232 = sext i32 %231 to i64
  %233 = call i64 @llvm.expect.i64(i64 %232, i64 0)
  %234 = icmp ne i64 %233, 0
  br i1 %234, label %235, label %264

235:                                              ; preds = %226
  %236 = load i32, i32* %19, align 4
  %237 = icmp eq i32 %236, 2
  br i1 %237, label %238, label %241

238:                                              ; preds = %235
  %239 = load i32, i32* %12, align 4
  %240 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %239, i8* %240)
  br label %257

241:                                              ; preds = %235
  %242 = load i32, i32* %19, align 4
  %243 = icmp eq i32 %242, 3
  br i1 %243, label %244, label %248

244:                                              ; preds = %241
  %245 = load i32, i32* %12, align 4
  %246 = load i8*, i8** %16, align 8
  %247 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %245, i8* %246, %29* %247)
  br label %256

248:                                              ; preds = %241
  %249 = load i32, i32* %19, align 4
  %250 = icmp eq i32 %249, 4
  br i1 %250, label %251, label %255

251:                                              ; preds = %248
  %252 = load i32, i32* %12, align 4
  %253 = load i32, i32* %15, align 4
  %254 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %252, i32 %253, %29* %254)
  br label %255

255:                                              ; preds = %251, %248
  br label %256

256:                                              ; preds = %255, %244
  br label %257

257:                                              ; preds = %256, %238
  br label %258

258:                                              ; preds = %257
  %259 = load %29*, %29** %4, align 8
  %260 = getelementptr inbounds %29, %29* %259, i32 0, i32 1
  %261 = bitcast %31* %260 to i32*
  store i32 2, i32* %261, align 8
  br label %262

262:                                              ; preds = %258
  br label %263

263:                                              ; preds = %262
  store i32 1, i32* %20, align 4
  br label %265

264:                                              ; preds = %226
  store i32 0, i32* %20, align 4
  br label %265

265:                                              ; preds = %264, %263
  %266 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %266) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %267 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #15
  %268 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %268) #15
  %269 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %269) #15
  %270 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #15
  %271 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #15
  %272 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #15
  %273 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #15
  %274 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #15
  %275 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #15
  %276 = load i32, i32* %20, align 4
  switch i32 %276, label %328 [
    i32 0, label %277
  ]

277:                                              ; preds = %265
  br label %278

278:                                              ; preds = %277
  br label %279

279:                                              ; preds = %278
  %280 = load %28*, %28** %5, align 8
  %281 = getelementptr inbounds %28, %28* %280, i32 0, i32 2
  %282 = load i64, i64* %281, align 8
  %283 = icmp ne i64 %282, 1
  br i1 %283, label %284, label %291

284:                                              ; preds = %279
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @185, i32 0, i32 0))
  br label %285

285:                                              ; preds = %284
  %286 = load %29*, %29** %4, align 8
  %287 = getelementptr inbounds %29, %29* %286, i32 0, i32 1
  %288 = bitcast %31* %287 to i32*
  store i32 2, i32* %288, align 8
  br label %289

289:                                              ; preds = %285
  br label %290

290:                                              ; preds = %289
  store i32 1, i32* %20, align 4
  br label %328

291:                                              ; preds = %279
  %292 = load %1*, %1** %3, align 8
  %293 = getelementptr inbounds %1, %1* %292, i32 0, i32 4
  %294 = getelementptr inbounds %29, %29* %293, i32 0, i32 2
  %295 = bitcast %32* %294 to i32*
  %296 = load i32, i32* %295, align 4
  %297 = icmp eq i32 %296, 1
  br i1 %297, label %298, label %300

298:                                              ; preds = %291
  %299 = call i64 @php_time()
  store i64 %299, i64* %6, align 8
  br label %300

300:                                              ; preds = %298, %291
  %301 = load %28*, %28** %5, align 8
  %302 = getelementptr inbounds %28, %28* %301, i32 0, i32 3
  %303 = getelementptr inbounds [1 x i8], [1 x i8]* %302, i64 0, i64 0
  %304 = load i8, i8* %303, align 8
  %305 = load i64, i64* %6, align 8
  %306 = call i32 @php_idate(i8 signext %304, i64 %305, i32 0)
  store i32 %306, i32* %7, align 4
  %307 = load i32, i32* %7, align 4
  %308 = icmp eq i32 %307, -1
  br i1 %308, label %309, label %316

309:                                              ; preds = %300
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @186, i32 0, i32 0))
  br label %310

310:                                              ; preds = %309
  %311 = load %29*, %29** %4, align 8
  %312 = getelementptr inbounds %29, %29* %311, i32 0, i32 1
  %313 = bitcast %31* %312 to i32*
  store i32 2, i32* %313, align 8
  br label %314

314:                                              ; preds = %310
  br label %315

315:                                              ; preds = %314
  store i32 1, i32* %20, align 4
  br label %328

316:                                              ; preds = %300
  %317 = bitcast %29** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %317) #15
  %318 = load %29*, %29** %4, align 8
  store %29* %318, %29** %21, align 8
  %319 = load i32, i32* %7, align 4
  %320 = sext i32 %319 to i64
  %321 = load %29*, %29** %21, align 8
  %322 = getelementptr inbounds %29, %29* %321, i32 0, i32 0
  %323 = bitcast %30* %322 to i64*
  store i64 %320, i64* %323, align 8
  %324 = load %29*, %29** %21, align 8
  %325 = getelementptr inbounds %29, %29* %324, i32 0, i32 1
  %326 = bitcast %31* %325 to i32*
  store i32 4, i32* %326, align 8
  %327 = bitcast %29** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %327) #15
  store i32 1, i32* %20, align 4
  br label %328

328:                                              ; preds = %316, %315, %290, %265
  %329 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %329) #15
  %330 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %330) #15
  %331 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %331) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_gmdate(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %1*, %1** %3, align 8
  %6 = load %29*, %29** %4, align 8
  call void @467(%1* %5, %29* %6, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_mktime(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %1*, %1** %3, align 8
  %6 = load %29*, %29** %4, align 8
  call void @php_mktime(%1* %5, %29* %6, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_gmmktime(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %1*, %1** %3, align 8
  %6 = load %29*, %29** %4, align 8
  call void @php_mktime(%1* %5, %29* %6, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_checkdate(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 3, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 3, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %295

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %295

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @469(%29* %142, i64* %5, i8* %17, i32 0, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 0, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %295

153:                                              ; preds = %138
  %154 = load i32, i32* %12, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %12, align 4
  br label %156

156:                                              ; preds = %153
  %157 = load i32, i32* %12, align 4
  %158 = load i32, i32* %9, align 4
  %159 = icmp sle i32 %157, %158
  br i1 %159, label %164, label %160

160:                                              ; preds = %156
  %161 = load i8, i8* %18, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %162, 1
  br label %164

164:                                              ; preds = %160, %156
  %165 = phi i1 [ true, %156 ], [ %163, %160 ]
  %166 = xor i1 %165, true
  %167 = zext i1 %166 to i32
  %168 = sext i32 %167 to i64
  %169 = call i64 @llvm.expect.i64(i64 %168, i64 0)
  %170 = icmp ne i64 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %164
  unreachable

172:                                              ; preds = %164
  br label %173

173:                                              ; preds = %172
  br label %174

174:                                              ; preds = %173
  br label %175

175:                                              ; preds = %174
  %176 = load i32, i32* %12, align 4
  %177 = load i32, i32* %9, align 4
  %178 = icmp sgt i32 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = load i8, i8* %18, align 1
  %181 = zext i8 %180 to i32
  %182 = icmp eq i32 %181, 0
  br label %183

183:                                              ; preds = %179, %175
  %184 = phi i1 [ true, %175 ], [ %182, %179 ]
  %185 = xor i1 %184, true
  %186 = zext i1 %185 to i32
  %187 = sext i32 %186 to i64
  %188 = call i64 @llvm.expect.i64(i64 %187, i64 0)
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %183
  unreachable

191:                                              ; preds = %183
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  %194 = load i8, i8* %18, align 1
  %195 = icmp ne i8 %194, 0
  br i1 %195, label %196, label %208

196:                                              ; preds = %193
  %197 = load i32, i32* %12, align 4
  %198 = load i32, i32* %11, align 4
  %199 = icmp sgt i32 %197, %198
  %200 = xor i1 %199, true
  %201 = xor i1 %200, true
  %202 = zext i1 %201 to i32
  %203 = sext i32 %202 to i64
  %204 = call i64 @llvm.expect.i64(i64 %203, i64 0)
  %205 = icmp ne i64 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %196
  br label %295

207:                                              ; preds = %196
  br label %208

208:                                              ; preds = %207, %193
  %209 = load %29*, %29** %13, align 8
  %210 = getelementptr inbounds %29, %29* %209, i32 1
  store %29* %210, %29** %13, align 8
  %211 = load %29*, %29** %13, align 8
  store %29* %211, %29** %14, align 8
  %212 = load %29*, %29** %14, align 8
  %213 = call i32 @469(%29* %212, i64* %6, i8* %17, i32 0, i32 0)
  %214 = icmp ne i32 %213, 0
  %215 = xor i1 %214, true
  %216 = xor i1 %215, true
  %217 = xor i1 %216, true
  %218 = zext i1 %217 to i32
  %219 = sext i32 %218 to i64
  %220 = call i64 @llvm.expect.i64(i64 %219, i64 0)
  %221 = icmp ne i64 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %208
  store i32 0, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %295

223:                                              ; preds = %208
  %224 = load i32, i32* %12, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %12, align 4
  br label %226

226:                                              ; preds = %223
  %227 = load i32, i32* %12, align 4
  %228 = load i32, i32* %9, align 4
  %229 = icmp sle i32 %227, %228
  br i1 %229, label %234, label %230

230:                                              ; preds = %226
  %231 = load i8, i8* %18, align 1
  %232 = zext i8 %231 to i32
  %233 = icmp eq i32 %232, 1
  br label %234

234:                                              ; preds = %230, %226
  %235 = phi i1 [ true, %226 ], [ %233, %230 ]
  %236 = xor i1 %235, true
  %237 = zext i1 %236 to i32
  %238 = sext i32 %237 to i64
  %239 = call i64 @llvm.expect.i64(i64 %238, i64 0)
  %240 = icmp ne i64 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %234
  unreachable

242:                                              ; preds = %234
  br label %243

243:                                              ; preds = %242
  br label %244

244:                                              ; preds = %243
  br label %245

245:                                              ; preds = %244
  %246 = load i32, i32* %12, align 4
  %247 = load i32, i32* %9, align 4
  %248 = icmp sgt i32 %246, %247
  br i1 %248, label %253, label %249

249:                                              ; preds = %245
  %250 = load i8, i8* %18, align 1
  %251 = zext i8 %250 to i32
  %252 = icmp eq i32 %251, 0
  br label %253

253:                                              ; preds = %249, %245
  %254 = phi i1 [ true, %245 ], [ %252, %249 ]
  %255 = xor i1 %254, true
  %256 = zext i1 %255 to i32
  %257 = sext i32 %256 to i64
  %258 = call i64 @llvm.expect.i64(i64 %257, i64 0)
  %259 = icmp ne i64 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %253
  unreachable

261:                                              ; preds = %253
  br label %262

262:                                              ; preds = %261
  br label %263

263:                                              ; preds = %262
  %264 = load i8, i8* %18, align 1
  %265 = icmp ne i8 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %263
  %267 = load i32, i32* %12, align 4
  %268 = load i32, i32* %11, align 4
  %269 = icmp sgt i32 %267, %268
  %270 = xor i1 %269, true
  %271 = xor i1 %270, true
  %272 = zext i1 %271 to i32
  %273 = sext i32 %272 to i64
  %274 = call i64 @llvm.expect.i64(i64 %273, i64 0)
  %275 = icmp ne i64 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %266
  br label %295

277:                                              ; preds = %266
  br label %278

278:                                              ; preds = %277, %263
  %279 = load %29*, %29** %13, align 8
  %280 = getelementptr inbounds %29, %29* %279, i32 1
  store %29* %280, %29** %13, align 8
  %281 = load %29*, %29** %13, align 8
  store %29* %281, %29** %14, align 8
  %282 = load %29*, %29** %14, align 8
  %283 = call i32 @469(%29* %282, i64* %7, i8* %17, i32 0, i32 0)
  %284 = icmp ne i32 %283, 0
  %285 = xor i1 %284, true
  %286 = xor i1 %285, true
  %287 = xor i1 %286, true
  %288 = zext i1 %287 to i32
  %289 = sext i32 %288 to i64
  %290 = call i64 @llvm.expect.i64(i64 %289, i64 0)
  %291 = icmp ne i64 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %278
  store i32 0, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %295

293:                                              ; preds = %278
  br label %294

294:                                              ; preds = %293
  br label %295

295:                                              ; preds = %294, %292, %276, %222, %206, %152, %136, %76
  %296 = load i32, i32* %19, align 4
  %297 = icmp ne i32 %296, 0
  %298 = xor i1 %297, true
  %299 = xor i1 %298, true
  %300 = zext i1 %299 to i32
  %301 = sext i32 %300 to i64
  %302 = call i64 @llvm.expect.i64(i64 %301, i64 0)
  %303 = icmp ne i64 %302, 0
  br i1 %303, label %304, label %333

304:                                              ; preds = %295
  %305 = load i32, i32* %19, align 4
  %306 = icmp eq i32 %305, 2
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = load i32, i32* %12, align 4
  %309 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %308, i8* %309)
  br label %326

310:                                              ; preds = %304
  %311 = load i32, i32* %19, align 4
  %312 = icmp eq i32 %311, 3
  br i1 %312, label %313, label %317

313:                                              ; preds = %310
  %314 = load i32, i32* %12, align 4
  %315 = load i8*, i8** %16, align 8
  %316 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %314, i8* %315, %29* %316)
  br label %325

317:                                              ; preds = %310
  %318 = load i32, i32* %19, align 4
  %319 = icmp eq i32 %318, 4
  br i1 %319, label %320, label %324

320:                                              ; preds = %317
  %321 = load i32, i32* %12, align 4
  %322 = load i32, i32* %15, align 4
  %323 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %321, i32 %322, %29* %323)
  br label %324

324:                                              ; preds = %320, %317
  br label %325

325:                                              ; preds = %324, %313
  br label %326

326:                                              ; preds = %325, %307
  br label %327

327:                                              ; preds = %326
  %328 = load %29*, %29** %4, align 8
  %329 = getelementptr inbounds %29, %29* %328, i32 0, i32 1
  %330 = bitcast %31* %329 to i32*
  store i32 2, i32* %330, align 8
  br label %331

331:                                              ; preds = %327
  br label %332

332:                                              ; preds = %331
  store i32 1, i32* %20, align 4
  br label %334

333:                                              ; preds = %295
  store i32 0, i32* %20, align 4
  br label %334

334:                                              ; preds = %333, %332
  %335 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %335) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %336 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %336) #15
  %337 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %337) #15
  %338 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %338) #15
  %339 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %339) #15
  %340 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %340) #15
  %341 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %341) #15
  %342 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %342) #15
  %343 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %343) #15
  %344 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #15
  %345 = load i32, i32* %20, align 4
  switch i32 %345, label %374 [
    i32 0, label %346
  ]

346:                                              ; preds = %334
  br label %347

347:                                              ; preds = %346
  br label %348

348:                                              ; preds = %347
  %349 = load i64, i64* %7, align 8
  %350 = icmp slt i64 %349, 1
  br i1 %350, label %360, label %351

351:                                              ; preds = %348
  %352 = load i64, i64* %7, align 8
  %353 = icmp sgt i64 %352, 32767
  br i1 %353, label %360, label %354

354:                                              ; preds = %351
  %355 = load i64, i64* %7, align 8
  %356 = load i64, i64* %5, align 8
  %357 = load i64, i64* %6, align 8
  %358 = call i32 @timelib_valid_date(i64 %355, i64 %356, i64 %357)
  %359 = icmp ne i32 %358, 0
  br i1 %359, label %367, label %360

360:                                              ; preds = %354, %351, %348
  br label %361

361:                                              ; preds = %360
  %362 = load %29*, %29** %4, align 8
  %363 = getelementptr inbounds %29, %29* %362, i32 0, i32 1
  %364 = bitcast %31* %363 to i32*
  store i32 2, i32* %364, align 8
  br label %365

365:                                              ; preds = %361
  br label %366

366:                                              ; preds = %365
  store i32 1, i32* %20, align 4
  br label %374

367:                                              ; preds = %354
  br label %368

368:                                              ; preds = %367
  %369 = load %29*, %29** %4, align 8
  %370 = getelementptr inbounds %29, %29* %369, i32 0, i32 1
  %371 = bitcast %31* %370 to i32*
  store i32 3, i32* %371, align 8
  br label %372

372:                                              ; preds = %368
  br label %373

373:                                              ; preds = %372
  store i32 1, i32* %20, align 4
  br label %374

374:                                              ; preds = %373, %366, %334
  %375 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %375) #15
  %376 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %376) #15
  %377 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %377) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strftime(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %1*, %1** %3, align 8
  %6 = load %29*, %29** %4, align 8
  call void @php_strftime(%1* %5, %29* %6, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_gmstrftime(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %1*, %1** %3, align 8
  %6 = load %29*, %29** %4, align 8
  call void @php_strftime(%1* %5, %29* %6, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_time(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %6 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #15
  %7 = load %29*, %29** %4, align 8
  store %29* %7, %29** %5, align 8
  %8 = call i64 @php_time()
  %9 = load %29*, %29** %5, align 8
  %10 = getelementptr inbounds %29, %29* %9, i32 0, i32 0
  %11 = bitcast %30* %10 to i64*
  store i64 %8, i64* %11, align 8
  %12 = load %29*, %29** %5, align 8
  %13 = getelementptr inbounds %29, %29* %12, i32 0, i32 1
  %14 = bitcast %31* %13 to i32*
  store i32 4, i32* %14, align 8
  %15 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_localtime(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca %53*, align 8
  %8 = alloca %52*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %22 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = call i64 @php_time()
  store i64 %23, i64* %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %6) #15
  store i8 0, i8* %6, align 1
  %24 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  %25 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 0, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 0, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 2, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  %31 = load %1*, %1** %3, align 8
  %32 = getelementptr inbounds %1, %1* %31, i32 0, i32 4
  %33 = getelementptr inbounds %29, %29* %32, i32 0, i32 2
  %34 = bitcast %32* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #15
  %37 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  %38 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store %29* null, %29** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %29*, %29** %14, align 8
  %44 = load %29*, %29** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %227

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %1*, %1** %3, align 8
  %84 = bitcast %1* %83 to %29*
  %85 = getelementptr inbounds %29, %29* %84, i64 4
  store %29* %85, %29** %14, align 8
  store i8 1, i8* %19, align 1
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %227

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %29*, %29** %14, align 8
  %142 = getelementptr inbounds %29, %29* %141, i32 1
  store %29* %142, %29** %14, align 8
  %143 = load %29*, %29** %14, align 8
  store %29* %143, %29** %15, align 8
  %144 = load %29*, %29** %15, align 8
  %145 = call i32 @469(%29* %144, i64* %5, i8* %18, i32 0, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

155:                                              ; preds = %140
  %156 = load i32, i32* %13, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %13, align 4
  br label %158

158:                                              ; preds = %155
  %159 = load i32, i32* %13, align 4
  %160 = load i32, i32* %10, align 4
  %161 = icmp sle i32 %159, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i8, i8* %19, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 1
  br label %166

166:                                              ; preds = %162, %158
  %167 = phi i1 [ true, %158 ], [ %165, %162 ]
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  unreachable

174:                                              ; preds = %166
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %13, align 4
  %179 = load i32, i32* %10, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %19, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  %196 = load i8, i8* %19, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %195
  %199 = load i32, i32* %13, align 4
  %200 = load i32, i32* %12, align 4
  %201 = icmp sgt i32 %199, %200
  %202 = xor i1 %201, true
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %198
  br label %227

209:                                              ; preds = %198
  br label %210

210:                                              ; preds = %209, %195
  %211 = load %29*, %29** %14, align 8
  %212 = getelementptr inbounds %29, %29* %211, i32 1
  store %29* %212, %29** %14, align 8
  %213 = load %29*, %29** %14, align 8
  store %29* %213, %29** %15, align 8
  %214 = load %29*, %29** %15, align 8
  %215 = call i32 @474(%29* %214, i8* %6, i8* %18, i32 0)
  %216 = icmp ne i32 %215, 0
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %210
  store i32 1, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

225:                                              ; preds = %210
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226, %224, %208, %154, %138, %78
  %228 = load i32, i32* %20, align 4
  %229 = icmp ne i32 %228, 0
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i32
  %233 = sext i32 %232 to i64
  %234 = call i64 @llvm.expect.i64(i64 %233, i64 0)
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %236, label %265

236:                                              ; preds = %227
  %237 = load i32, i32* %20, align 4
  %238 = icmp eq i32 %237, 2
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load i32, i32* %13, align 4
  %241 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %240, i8* %241)
  br label %258

242:                                              ; preds = %236
  %243 = load i32, i32* %20, align 4
  %244 = icmp eq i32 %243, 3
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = load i32, i32* %13, align 4
  %247 = load i8*, i8** %17, align 8
  %248 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %246, i8* %247, %29* %248)
  br label %257

249:                                              ; preds = %242
  %250 = load i32, i32* %20, align 4
  %251 = icmp eq i32 %250, 4
  br i1 %251, label %252, label %256

252:                                              ; preds = %249
  %253 = load i32, i32* %13, align 4
  %254 = load i32, i32* %16, align 4
  %255 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %253, i32 %254, %29* %255)
  br label %256

256:                                              ; preds = %252, %249
  br label %257

257:                                              ; preds = %256, %245
  br label %258

258:                                              ; preds = %257, %239
  br label %259

259:                                              ; preds = %258
  %260 = load %29*, %29** %4, align 8
  %261 = getelementptr inbounds %29, %29* %260, i32 0, i32 1
  %262 = bitcast %31* %261 to i32*
  store i32 2, i32* %262, align 8
  br label %263

263:                                              ; preds = %259
  br label %264

264:                                              ; preds = %263
  store i32 1, i32* %21, align 4
  br label %266

265:                                              ; preds = %227
  store i32 0, i32* %21, align 4
  br label %266

266:                                              ; preds = %265, %264
  %267 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  %268 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #15
  %269 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #15
  %270 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #15
  %271 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271) #15
  %272 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #15
  %273 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #15
  %274 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #15
  %275 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #15
  %276 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #15
  %277 = load i32, i32* %21, align 4
  switch i32 %277, label %422 [
    i32 0, label %278
  ]

278:                                              ; preds = %266
  br label %279

279:                                              ; preds = %278
  br label %280

280:                                              ; preds = %279
  %281 = call %53* @get_timezone_info()
  store %53* %281, %53** %7, align 8
  %282 = call %52* @timelib_time_ctor()
  store %52* %282, %52** %8, align 8
  %283 = load %53*, %53** %7, align 8
  %284 = load %52*, %52** %8, align 8
  %285 = getelementptr inbounds %52, %52* %284, i32 0, i32 9
  store %53* %283, %53** %285, align 8
  %286 = load %52*, %52** %8, align 8
  %287 = getelementptr inbounds %52, %52* %286, i32 0, i32 21
  store i32 3, i32* %287, align 8
  %288 = load %52*, %52** %8, align 8
  %289 = load i64, i64* %5, align 8
  call void @timelib_unixtime2local(%52* %288, i64 %289)
  %290 = load %29*, %29** %4, align 8
  %291 = call i32 @_array_init(%29* %290, i32 0)
  %292 = load i8, i8* %6, align 1
  %293 = icmp ne i8 %292, 0
  br i1 %293, label %294, label %357

294:                                              ; preds = %280
  %295 = load %29*, %29** %4, align 8
  %296 = load %52*, %52** %8, align 8
  %297 = getelementptr inbounds %52, %52* %296, i32 0, i32 5
  %298 = load i64, i64* %297, align 8
  %299 = call i32 @add_assoc_long_ex(%29* %295, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @189, i32 0, i32 0), i64 6, i64 %298)
  %300 = load %29*, %29** %4, align 8
  %301 = load %52*, %52** %8, align 8
  %302 = getelementptr inbounds %52, %52* %301, i32 0, i32 4
  %303 = load i64, i64* %302, align 8
  %304 = call i32 @add_assoc_long_ex(%29* %300, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @190, i32 0, i32 0), i64 6, i64 %303)
  %305 = load %29*, %29** %4, align 8
  %306 = load %52*, %52** %8, align 8
  %307 = getelementptr inbounds %52, %52* %306, i32 0, i32 3
  %308 = load i64, i64* %307, align 8
  %309 = call i32 @add_assoc_long_ex(%29* %305, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @191, i32 0, i32 0), i64 7, i64 %308)
  %310 = load %29*, %29** %4, align 8
  %311 = load %52*, %52** %8, align 8
  %312 = getelementptr inbounds %52, %52* %311, i32 0, i32 2
  %313 = load i64, i64* %312, align 8
  %314 = call i32 @add_assoc_long_ex(%29* %310, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @192, i32 0, i32 0), i64 7, i64 %313)
  %315 = load %29*, %29** %4, align 8
  %316 = load %52*, %52** %8, align 8
  %317 = getelementptr inbounds %52, %52* %316, i32 0, i32 1
  %318 = load i64, i64* %317, align 8
  %319 = sub nsw i64 %318, 1
  %320 = call i32 @add_assoc_long_ex(%29* %315, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @193, i32 0, i32 0), i64 6, i64 %319)
  %321 = load %29*, %29** %4, align 8
  %322 = load %52*, %52** %8, align 8
  %323 = getelementptr inbounds %52, %52* %322, i32 0, i32 0
  %324 = load i64, i64* %323, align 8
  %325 = sub nsw i64 %324, 1900
  %326 = call i32 @add_assoc_long_ex(%29* %321, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @194, i32 0, i32 0), i64 7, i64 %325)
  %327 = load %29*, %29** %4, align 8
  %328 = load %52*, %52** %8, align 8
  %329 = getelementptr inbounds %52, %52* %328, i32 0, i32 0
  %330 = load i64, i64* %329, align 8
  %331 = load %52*, %52** %8, align 8
  %332 = getelementptr inbounds %52, %52* %331, i32 0, i32 1
  %333 = load i64, i64* %332, align 8
  %334 = load %52*, %52** %8, align 8
  %335 = getelementptr inbounds %52, %52* %334, i32 0, i32 2
  %336 = load i64, i64* %335, align 8
  %337 = call i64 @timelib_day_of_week(i64 %330, i64 %333, i64 %336)
  %338 = call i32 @add_assoc_long_ex(%29* %327, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @195, i32 0, i32 0), i64 7, i64 %337)
  %339 = load %29*, %29** %4, align 8
  %340 = load %52*, %52** %8, align 8
  %341 = getelementptr inbounds %52, %52* %340, i32 0, i32 0
  %342 = load i64, i64* %341, align 8
  %343 = load %52*, %52** %8, align 8
  %344 = getelementptr inbounds %52, %52* %343, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = load %52*, %52** %8, align 8
  %347 = getelementptr inbounds %52, %52* %346, i32 0, i32 2
  %348 = load i64, i64* %347, align 8
  %349 = call i64 @timelib_day_of_year(i64 %342, i64 %345, i64 %348)
  %350 = call i32 @add_assoc_long_ex(%29* %339, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @196, i32 0, i32 0), i64 7, i64 %349)
  %351 = load %29*, %29** %4, align 8
  %352 = load %52*, %52** %8, align 8
  %353 = getelementptr inbounds %52, %52* %352, i32 0, i32 10
  %354 = load i32, i32* %353, align 8
  %355 = sext i32 %354 to i64
  %356 = call i32 @add_assoc_long_ex(%29* %351, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @197, i32 0, i32 0), i64 8, i64 %355)
  br label %420

357:                                              ; preds = %280
  %358 = load %29*, %29** %4, align 8
  %359 = load %52*, %52** %8, align 8
  %360 = getelementptr inbounds %52, %52* %359, i32 0, i32 5
  %361 = load i64, i64* %360, align 8
  %362 = call i32 @add_next_index_long(%29* %358, i64 %361)
  %363 = load %29*, %29** %4, align 8
  %364 = load %52*, %52** %8, align 8
  %365 = getelementptr inbounds %52, %52* %364, i32 0, i32 4
  %366 = load i64, i64* %365, align 8
  %367 = call i32 @add_next_index_long(%29* %363, i64 %366)
  %368 = load %29*, %29** %4, align 8
  %369 = load %52*, %52** %8, align 8
  %370 = getelementptr inbounds %52, %52* %369, i32 0, i32 3
  %371 = load i64, i64* %370, align 8
  %372 = call i32 @add_next_index_long(%29* %368, i64 %371)
  %373 = load %29*, %29** %4, align 8
  %374 = load %52*, %52** %8, align 8
  %375 = getelementptr inbounds %52, %52* %374, i32 0, i32 2
  %376 = load i64, i64* %375, align 8
  %377 = call i32 @add_next_index_long(%29* %373, i64 %376)
  %378 = load %29*, %29** %4, align 8
  %379 = load %52*, %52** %8, align 8
  %380 = getelementptr inbounds %52, %52* %379, i32 0, i32 1
  %381 = load i64, i64* %380, align 8
  %382 = sub nsw i64 %381, 1
  %383 = call i32 @add_next_index_long(%29* %378, i64 %382)
  %384 = load %29*, %29** %4, align 8
  %385 = load %52*, %52** %8, align 8
  %386 = getelementptr inbounds %52, %52* %385, i32 0, i32 0
  %387 = load i64, i64* %386, align 8
  %388 = sub nsw i64 %387, 1900
  %389 = call i32 @add_next_index_long(%29* %384, i64 %388)
  %390 = load %29*, %29** %4, align 8
  %391 = load %52*, %52** %8, align 8
  %392 = getelementptr inbounds %52, %52* %391, i32 0, i32 0
  %393 = load i64, i64* %392, align 8
  %394 = load %52*, %52** %8, align 8
  %395 = getelementptr inbounds %52, %52* %394, i32 0, i32 1
  %396 = load i64, i64* %395, align 8
  %397 = load %52*, %52** %8, align 8
  %398 = getelementptr inbounds %52, %52* %397, i32 0, i32 2
  %399 = load i64, i64* %398, align 8
  %400 = call i64 @timelib_day_of_week(i64 %393, i64 %396, i64 %399)
  %401 = call i32 @add_next_index_long(%29* %390, i64 %400)
  %402 = load %29*, %29** %4, align 8
  %403 = load %52*, %52** %8, align 8
  %404 = getelementptr inbounds %52, %52* %403, i32 0, i32 0
  %405 = load i64, i64* %404, align 8
  %406 = load %52*, %52** %8, align 8
  %407 = getelementptr inbounds %52, %52* %406, i32 0, i32 1
  %408 = load i64, i64* %407, align 8
  %409 = load %52*, %52** %8, align 8
  %410 = getelementptr inbounds %52, %52* %409, i32 0, i32 2
  %411 = load i64, i64* %410, align 8
  %412 = call i64 @timelib_day_of_year(i64 %405, i64 %408, i64 %411)
  %413 = call i32 @add_next_index_long(%29* %402, i64 %412)
  %414 = load %29*, %29** %4, align 8
  %415 = load %52*, %52** %8, align 8
  %416 = getelementptr inbounds %52, %52* %415, i32 0, i32 10
  %417 = load i32, i32* %416, align 8
  %418 = sext i32 %417 to i64
  %419 = call i32 @add_next_index_long(%29* %414, i64 %418)
  br label %420

420:                                              ; preds = %357, %294
  %421 = load %52*, %52** %8, align 8
  call void @timelib_time_dtor(%52* %421)
  store i32 0, i32* %21, align 4
  br label %422

422:                                              ; preds = %420, %266
  %423 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %423) #15
  %424 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %424) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #15
  %425 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %425) #15
  %426 = load i32, i32* %21, align 4
  switch i32 %426, label %428 [
    i32 0, label %427
    i32 1, label %427
  ]

427:                                              ; preds = %422, %422
  ret void

428:                                              ; preds = %422
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_getdate(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %53*, align 8
  %7 = alloca %52*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = call i64 @php_time()
  store i64 %22, i64* %5, align 8
  %23 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  %24 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  br label %25

25:                                               ; preds = %2
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 0, i32* %8, align 4
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 0, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  %30 = load %1*, %1** %3, align 8
  %31 = getelementptr inbounds %1, %1* %30, i32 0, i32 4
  %32 = getelementptr inbounds %29, %29* %31, i32 0, i32 2
  %33 = bitcast %32* %32 to i32*
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %11, align 4
  %35 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #15
  %36 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  %37 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  store %29* null, %29** %14, align 8
  %38 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #15
  store i32 0, i32* %15, align 4
  %39 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %40 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #15
  store i32 0, i32* %19, align 4
  %41 = load i32, i32* %12, align 4
  %42 = load %29*, %29** %13, align 8
  %43 = load %29*, %29** %14, align 8
  %44 = load i32, i32* %15, align 4
  %45 = load i8*, i8** %16, align 8
  %46 = load i8, i8* %17, align 1
  %47 = load i8, i8* %18, align 1
  br label %48

48:                                               ; preds = %25
  %49 = load i32, i32* %11, align 4
  %50 = load i32, i32* %9, align 4
  %51 = icmp slt i32 %49, %50
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 0)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %77, label %58

58:                                               ; preds = %48
  %59 = load i32, i32* %11, align 4
  %60 = load i32, i32* %10, align 4
  %61 = icmp sgt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %58
  %69 = load i32, i32* %10, align 4
  %70 = icmp sge i32 %69, 0
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 1)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %68, %48
  %78 = load i32, i32* %11, align 4
  %79 = load i32, i32* %9, align 4
  %80 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %78, i32 %79, i32 %80)
  store i32 1, i32* %19, align 4
  br label %156

81:                                               ; preds = %68, %58
  store i32 0, i32* %12, align 4
  %82 = load %1*, %1** %3, align 8
  %83 = bitcast %1* %82 to %29*
  %84 = getelementptr inbounds %29, %29* %83, i64 4
  store %29* %84, %29** %13, align 8
  store i8 1, i8* %18, align 1
  %85 = load i32, i32* %12, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %12, align 4
  br label %87

87:                                               ; preds = %81
  %88 = load i32, i32* %12, align 4
  %89 = load i32, i32* %9, align 4
  %90 = icmp sle i32 %88, %89
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = load i8, i8* %18, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 1
  br label %95

95:                                               ; preds = %91, %87
  %96 = phi i1 [ true, %87 ], [ %94, %91 ]
  %97 = xor i1 %96, true
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = call i64 @llvm.expect.i64(i64 %99, i64 0)
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %95
  unreachable

103:                                              ; preds = %95
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  %107 = load i32, i32* %12, align 4
  %108 = load i32, i32* %9, align 4
  %109 = icmp sgt i32 %107, %108
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = load i8, i8* %18, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 0
  br label %114

114:                                              ; preds = %110, %106
  %115 = phi i1 [ true, %106 ], [ %113, %110 ]
  %116 = xor i1 %115, true
  %117 = zext i1 %116 to i32
  %118 = sext i32 %117 to i64
  %119 = call i64 @llvm.expect.i64(i64 %118, i64 0)
  %120 = icmp ne i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  unreachable

122:                                              ; preds = %114
  br label %123

123:                                              ; preds = %122
  br label %124

124:                                              ; preds = %123
  %125 = load i8, i8* %18, align 1
  %126 = icmp ne i8 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %124
  %128 = load i32, i32* %12, align 4
  %129 = load i32, i32* %11, align 4
  %130 = icmp sgt i32 %128, %129
  %131 = xor i1 %130, true
  %132 = xor i1 %131, true
  %133 = zext i1 %132 to i32
  %134 = sext i32 %133 to i64
  %135 = call i64 @llvm.expect.i64(i64 %134, i64 0)
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %127
  br label %156

138:                                              ; preds = %127
  br label %139

139:                                              ; preds = %138, %124
  %140 = load %29*, %29** %13, align 8
  %141 = getelementptr inbounds %29, %29* %140, i32 1
  store %29* %141, %29** %13, align 8
  %142 = load %29*, %29** %13, align 8
  store %29* %142, %29** %14, align 8
  %143 = load %29*, %29** %14, align 8
  %144 = call i32 @469(%29* %143, i64* %5, i8* %17, i32 0, i32 0)
  %145 = icmp ne i32 %144, 0
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 0)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %139
  store i32 0, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %156

154:                                              ; preds = %139
  br label %155

155:                                              ; preds = %154
  br label %156

156:                                              ; preds = %155, %153, %137, %77
  %157 = load i32, i32* %19, align 4
  %158 = icmp ne i32 %157, 0
  %159 = xor i1 %158, true
  %160 = xor i1 %159, true
  %161 = zext i1 %160 to i32
  %162 = sext i32 %161 to i64
  %163 = call i64 @llvm.expect.i64(i64 %162, i64 0)
  %164 = icmp ne i64 %163, 0
  br i1 %164, label %165, label %194

165:                                              ; preds = %156
  %166 = load i32, i32* %19, align 4
  %167 = icmp eq i32 %166, 2
  br i1 %167, label %168, label %171

168:                                              ; preds = %165
  %169 = load i32, i32* %12, align 4
  %170 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %169, i8* %170)
  br label %187

171:                                              ; preds = %165
  %172 = load i32, i32* %19, align 4
  %173 = icmp eq i32 %172, 3
  br i1 %173, label %174, label %178

174:                                              ; preds = %171
  %175 = load i32, i32* %12, align 4
  %176 = load i8*, i8** %16, align 8
  %177 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %175, i8* %176, %29* %177)
  br label %186

178:                                              ; preds = %171
  %179 = load i32, i32* %19, align 4
  %180 = icmp eq i32 %179, 4
  br i1 %180, label %181, label %185

181:                                              ; preds = %178
  %182 = load i32, i32* %12, align 4
  %183 = load i32, i32* %15, align 4
  %184 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %182, i32 %183, %29* %184)
  br label %185

185:                                              ; preds = %181, %178
  br label %186

186:                                              ; preds = %185, %174
  br label %187

187:                                              ; preds = %186, %168
  br label %188

188:                                              ; preds = %187
  %189 = load %29*, %29** %4, align 8
  %190 = getelementptr inbounds %29, %29* %189, i32 0, i32 1
  %191 = bitcast %31* %190 to i32*
  store i32 2, i32* %191, align 8
  br label %192

192:                                              ; preds = %188
  br label %193

193:                                              ; preds = %192
  store i32 1, i32* %20, align 4
  br label %195

194:                                              ; preds = %156
  store i32 0, i32* %20, align 4
  br label %195

195:                                              ; preds = %194, %193
  %196 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %197 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #15
  %198 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #15
  %199 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #15
  %200 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #15
  %201 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #15
  %202 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #15
  %203 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #15
  %204 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #15
  %205 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %205) #15
  %206 = load i32, i32* %20, align 4
  switch i32 %206, label %299 [
    i32 0, label %207
  ]

207:                                              ; preds = %195
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = call %53* @get_timezone_info()
  store %53* %210, %53** %6, align 8
  %211 = call %52* @timelib_time_ctor()
  store %52* %211, %52** %7, align 8
  %212 = load %53*, %53** %6, align 8
  %213 = load %52*, %52** %7, align 8
  %214 = getelementptr inbounds %52, %52* %213, i32 0, i32 9
  store %53* %212, %53** %214, align 8
  %215 = load %52*, %52** %7, align 8
  %216 = getelementptr inbounds %52, %52* %215, i32 0, i32 21
  store i32 3, i32* %216, align 8
  %217 = load %52*, %52** %7, align 8
  %218 = load i64, i64* %5, align 8
  call void @timelib_unixtime2local(%52* %217, i64 %218)
  %219 = load %29*, %29** %4, align 8
  %220 = call i32 @_array_init(%29* %219, i32 0)
  %221 = load %29*, %29** %4, align 8
  %222 = load %52*, %52** %7, align 8
  %223 = getelementptr inbounds %52, %52* %222, i32 0, i32 5
  %224 = load i64, i64* %223, align 8
  %225 = call i32 @add_assoc_long_ex(%29* %221, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @198, i32 0, i32 0), i64 7, i64 %224)
  %226 = load %29*, %29** %4, align 8
  %227 = load %52*, %52** %7, align 8
  %228 = getelementptr inbounds %52, %52* %227, i32 0, i32 4
  %229 = load i64, i64* %228, align 8
  %230 = call i32 @add_assoc_long_ex(%29* %226, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @199, i32 0, i32 0), i64 7, i64 %229)
  %231 = load %29*, %29** %4, align 8
  %232 = load %52*, %52** %7, align 8
  %233 = getelementptr inbounds %52, %52* %232, i32 0, i32 3
  %234 = load i64, i64* %233, align 8
  %235 = call i32 @add_assoc_long_ex(%29* %231, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @200, i32 0, i32 0), i64 5, i64 %234)
  %236 = load %29*, %29** %4, align 8
  %237 = load %52*, %52** %7, align 8
  %238 = getelementptr inbounds %52, %52* %237, i32 0, i32 2
  %239 = load i64, i64* %238, align 8
  %240 = call i32 @add_assoc_long_ex(%29* %236, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @201, i32 0, i32 0), i64 4, i64 %239)
  %241 = load %29*, %29** %4, align 8
  %242 = load %52*, %52** %7, align 8
  %243 = getelementptr inbounds %52, %52* %242, i32 0, i32 0
  %244 = load i64, i64* %243, align 8
  %245 = load %52*, %52** %7, align 8
  %246 = getelementptr inbounds %52, %52* %245, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = load %52*, %52** %7, align 8
  %249 = getelementptr inbounds %52, %52* %248, i32 0, i32 2
  %250 = load i64, i64* %249, align 8
  %251 = call i64 @timelib_day_of_week(i64 %244, i64 %247, i64 %250)
  %252 = call i32 @add_assoc_long_ex(%29* %241, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @202, i32 0, i32 0), i64 4, i64 %251)
  %253 = load %29*, %29** %4, align 8
  %254 = load %52*, %52** %7, align 8
  %255 = getelementptr inbounds %52, %52* %254, i32 0, i32 1
  %256 = load i64, i64* %255, align 8
  %257 = call i32 @add_assoc_long_ex(%29* %253, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @203, i32 0, i32 0), i64 3, i64 %256)
  %258 = load %29*, %29** %4, align 8
  %259 = load %52*, %52** %7, align 8
  %260 = getelementptr inbounds %52, %52* %259, i32 0, i32 0
  %261 = load i64, i64* %260, align 8
  %262 = call i32 @add_assoc_long_ex(%29* %258, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 4, i64 %261)
  %263 = load %29*, %29** %4, align 8
  %264 = load %52*, %52** %7, align 8
  %265 = getelementptr inbounds %52, %52* %264, i32 0, i32 0
  %266 = load i64, i64* %265, align 8
  %267 = load %52*, %52** %7, align 8
  %268 = getelementptr inbounds %52, %52* %267, i32 0, i32 1
  %269 = load i64, i64* %268, align 8
  %270 = load %52*, %52** %7, align 8
  %271 = getelementptr inbounds %52, %52* %270, i32 0, i32 2
  %272 = load i64, i64* %271, align 8
  %273 = call i64 @timelib_day_of_year(i64 %266, i64 %269, i64 %272)
  %274 = call i32 @add_assoc_long_ex(%29* %263, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @205, i32 0, i32 0), i64 4, i64 %273)
  %275 = load %29*, %29** %4, align 8
  %276 = load %52*, %52** %7, align 8
  %277 = getelementptr inbounds %52, %52* %276, i32 0, i32 0
  %278 = load i64, i64* %277, align 8
  %279 = load %52*, %52** %7, align 8
  %280 = getelementptr inbounds %52, %52* %279, i32 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = load %52*, %52** %7, align 8
  %283 = getelementptr inbounds %52, %52* %282, i32 0, i32 2
  %284 = load i64, i64* %283, align 8
  %285 = call i8* @php_date_full_day_name(i64 %278, i64 %281, i64 %284)
  %286 = call i32 @add_assoc_string_ex(%29* %275, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @206, i32 0, i32 0), i64 7, i8* %285)
  %287 = load %29*, %29** %4, align 8
  %288 = load %52*, %52** %7, align 8
  %289 = getelementptr inbounds %52, %52* %288, i32 0, i32 1
  %290 = load i64, i64* %289, align 8
  %291 = sub nsw i64 %290, 1
  %292 = getelementptr inbounds [12 x i8*], [12 x i8*]* @208, i64 0, i64 %291
  %293 = load i8*, i8** %292, align 8
  %294 = call i32 @add_assoc_string_ex(%29* %287, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @207, i32 0, i32 0), i64 5, i8* %293)
  %295 = load %29*, %29** %4, align 8
  %296 = load i64, i64* %5, align 8
  %297 = call i32 @add_index_long(%29* %295, i64 0, i64 %296)
  %298 = load %52*, %52** %7, align 8
  call void @timelib_time_dtor(%52* %298)
  store i32 0, i32* %20, align 4
  br label %299

299:                                              ; preds = %209, %195
  %300 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %300) #15
  %301 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %301) #15
  %302 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %302) #15
  %303 = load i32, i32* %20, align 4
  switch i32 %303, label %305 [
    i32 0, label %304
    i32 1, label %304
  ]

304:                                              ; preds = %299, %299
  ret void

305:                                              ; preds = %299
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_create(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  store %29* null, %29** %5, align 8
  %22 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  store i8* null, i8** %6, align 8
  %23 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  store i64 0, i64* %7, align 8
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 0, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 2, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %235

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  store i8 1, i8* %18, align 1
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %235

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @487(%29* %142, i8** %6, i64* %7, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %235

153:                                              ; preds = %138
  %154 = load i32, i32* %12, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %12, align 4
  br label %156

156:                                              ; preds = %153
  %157 = load i32, i32* %12, align 4
  %158 = load i32, i32* %9, align 4
  %159 = icmp sle i32 %157, %158
  br i1 %159, label %164, label %160

160:                                              ; preds = %156
  %161 = load i8, i8* %18, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %162, 1
  br label %164

164:                                              ; preds = %160, %156
  %165 = phi i1 [ true, %156 ], [ %163, %160 ]
  %166 = xor i1 %165, true
  %167 = zext i1 %166 to i32
  %168 = sext i32 %167 to i64
  %169 = call i64 @llvm.expect.i64(i64 %168, i64 0)
  %170 = icmp ne i64 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %164
  unreachable

172:                                              ; preds = %164
  br label %173

173:                                              ; preds = %172
  br label %174

174:                                              ; preds = %173
  br label %175

175:                                              ; preds = %174
  %176 = load i32, i32* %12, align 4
  %177 = load i32, i32* %9, align 4
  %178 = icmp sgt i32 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = load i8, i8* %18, align 1
  %181 = zext i8 %180 to i32
  %182 = icmp eq i32 %181, 0
  br label %183

183:                                              ; preds = %179, %175
  %184 = phi i1 [ true, %175 ], [ %182, %179 ]
  %185 = xor i1 %184, true
  %186 = zext i1 %185 to i32
  %187 = sext i32 %186 to i64
  %188 = call i64 @llvm.expect.i64(i64 %187, i64 0)
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %183
  unreachable

191:                                              ; preds = %183
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  %194 = load i8, i8* %18, align 1
  %195 = icmp ne i8 %194, 0
  br i1 %195, label %196, label %208

196:                                              ; preds = %193
  %197 = load i32, i32* %12, align 4
  %198 = load i32, i32* %11, align 4
  %199 = icmp sgt i32 %197, %198
  %200 = xor i1 %199, true
  %201 = xor i1 %200, true
  %202 = zext i1 %201 to i32
  %203 = sext i32 %202 to i64
  %204 = call i64 @llvm.expect.i64(i64 %203, i64 0)
  %205 = icmp ne i64 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %196
  br label %235

207:                                              ; preds = %196
  br label %208

208:                                              ; preds = %207, %193
  %209 = load %29*, %29** %13, align 8
  %210 = getelementptr inbounds %29, %29* %209, i32 1
  store %29* %210, %29** %13, align 8
  %211 = load %29*, %29** %13, align 8
  store %29* %211, %29** %14, align 8
  %212 = load %29*, %29** %14, align 8
  %213 = load %6*, %6** @date_ce_timezone, align 8
  %214 = call i32 @488(%29* %212, %29** %5, %6* %213, i32 1)
  %215 = icmp ne i32 %214, 0
  %216 = xor i1 %215, true
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = zext i1 %218 to i32
  %220 = sext i32 %219 to i64
  %221 = call i64 @llvm.expect.i64(i64 %220, i64 0)
  %222 = icmp ne i64 %221, 0
  br i1 %222, label %223, label %233

223:                                              ; preds = %208
  %224 = load %6*, %6** @date_ce_timezone, align 8
  %225 = icmp ne %6* %224, null
  br i1 %225, label %226, label %232

226:                                              ; preds = %223
  %227 = load %6*, %6** @date_ce_timezone, align 8
  %228 = getelementptr inbounds %6, %6* %227, i32 0, i32 1
  %229 = load %28*, %28** %228, align 8
  %230 = getelementptr inbounds %28, %28* %229, i32 0, i32 3
  %231 = getelementptr inbounds [1 x i8], [1 x i8]* %230, i32 0, i32 0
  store i8* %231, i8** %16, align 8
  store i32 3, i32* %19, align 4
  br label %235

232:                                              ; preds = %223
  store i32 7, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %235

233:                                              ; preds = %208
  br label %234

234:                                              ; preds = %233
  br label %235

235:                                              ; preds = %234, %232, %226, %206, %152, %136, %76
  %236 = load i32, i32* %19, align 4
  %237 = icmp ne i32 %236, 0
  %238 = xor i1 %237, true
  %239 = xor i1 %238, true
  %240 = zext i1 %239 to i32
  %241 = sext i32 %240 to i64
  %242 = call i64 @llvm.expect.i64(i64 %241, i64 0)
  %243 = icmp ne i64 %242, 0
  br i1 %243, label %244, label %273

244:                                              ; preds = %235
  %245 = load i32, i32* %19, align 4
  %246 = icmp eq i32 %245, 2
  br i1 %246, label %247, label %250

247:                                              ; preds = %244
  %248 = load i32, i32* %12, align 4
  %249 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %248, i8* %249)
  br label %266

250:                                              ; preds = %244
  %251 = load i32, i32* %19, align 4
  %252 = icmp eq i32 %251, 3
  br i1 %252, label %253, label %257

253:                                              ; preds = %250
  %254 = load i32, i32* %12, align 4
  %255 = load i8*, i8** %16, align 8
  %256 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %254, i8* %255, %29* %256)
  br label %265

257:                                              ; preds = %250
  %258 = load i32, i32* %19, align 4
  %259 = icmp eq i32 %258, 4
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = load i32, i32* %12, align 4
  %262 = load i32, i32* %15, align 4
  %263 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %261, i32 %262, %29* %263)
  br label %264

264:                                              ; preds = %260, %257
  br label %265

265:                                              ; preds = %264, %253
  br label %266

266:                                              ; preds = %265, %247
  br label %267

267:                                              ; preds = %266
  %268 = load %29*, %29** %4, align 8
  %269 = getelementptr inbounds %29, %29* %268, i32 0, i32 1
  %270 = bitcast %31* %269 to i32*
  store i32 2, i32* %270, align 8
  br label %271

271:                                              ; preds = %267
  br label %272

272:                                              ; preds = %271
  store i32 1, i32* %20, align 4
  br label %274

273:                                              ; preds = %235
  store i32 0, i32* %20, align 4
  br label %274

274:                                              ; preds = %273, %272
  %275 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %276 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %276) #15
  %277 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #15
  %278 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %278) #15
  %279 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %279) #15
  %280 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #15
  %281 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %281) #15
  %282 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #15
  %283 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %283) #15
  %284 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %284) #15
  %285 = load i32, i32* %20, align 4
  switch i32 %285, label %311 [
    i32 0, label %286
  ]

286:                                              ; preds = %274
  br label %287

287:                                              ; preds = %286
  br label %288

288:                                              ; preds = %287
  %289 = load %6*, %6** @date_ce_date, align 8
  %290 = load %29*, %29** %4, align 8
  %291 = call %29* @php_date_instantiate(%6* %289, %29* %290)
  %292 = load %29*, %29** %4, align 8
  %293 = getelementptr inbounds %29, %29* %292, i32 0, i32 0
  %294 = bitcast %30* %293 to %15**
  %295 = load %15*, %15** %294, align 8
  %296 = call %61* @489(%15* %295)
  %297 = load i8*, i8** %6, align 8
  %298 = load i64, i64* %7, align 8
  %299 = load %29*, %29** %5, align 8
  %300 = call i32 @php_date_initialize(%61* %296, i8* %297, i64 %298, i8* null, %29* %299, i32 0)
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %310, label %302

302:                                              ; preds = %288
  %303 = load %29*, %29** %4, align 8
  call void @_zval_ptr_dtor(%29* %303)
  br label %304

304:                                              ; preds = %302
  %305 = load %29*, %29** %4, align 8
  %306 = getelementptr inbounds %29, %29* %305, i32 0, i32 1
  %307 = bitcast %31* %306 to i32*
  store i32 2, i32* %307, align 8
  br label %308

308:                                              ; preds = %304
  br label %309

309:                                              ; preds = %308
  store i32 1, i32* %20, align 4
  br label %311

310:                                              ; preds = %288
  store i32 0, i32* %20, align 4
  br label %311

311:                                              ; preds = %310, %309, %274
  %312 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %312) #15
  %313 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %313) #15
  %314 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %314) #15
  %315 = load i32, i32* %20, align 4
  switch i32 %315, label %317 [
    i32 0, label %316
    i32 1, label %316
  ]

316:                                              ; preds = %311, %311
  ret void

317:                                              ; preds = %311
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_create_immutable(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  store %29* null, %29** %5, align 8
  %22 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  store i8* null, i8** %6, align 8
  %23 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  store i64 0, i64* %7, align 8
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 0, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 2, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %235

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  store i8 1, i8* %18, align 1
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %235

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @487(%29* %142, i8** %6, i64* %7, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %235

153:                                              ; preds = %138
  %154 = load i32, i32* %12, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %12, align 4
  br label %156

156:                                              ; preds = %153
  %157 = load i32, i32* %12, align 4
  %158 = load i32, i32* %9, align 4
  %159 = icmp sle i32 %157, %158
  br i1 %159, label %164, label %160

160:                                              ; preds = %156
  %161 = load i8, i8* %18, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %162, 1
  br label %164

164:                                              ; preds = %160, %156
  %165 = phi i1 [ true, %156 ], [ %163, %160 ]
  %166 = xor i1 %165, true
  %167 = zext i1 %166 to i32
  %168 = sext i32 %167 to i64
  %169 = call i64 @llvm.expect.i64(i64 %168, i64 0)
  %170 = icmp ne i64 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %164
  unreachable

172:                                              ; preds = %164
  br label %173

173:                                              ; preds = %172
  br label %174

174:                                              ; preds = %173
  br label %175

175:                                              ; preds = %174
  %176 = load i32, i32* %12, align 4
  %177 = load i32, i32* %9, align 4
  %178 = icmp sgt i32 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = load i8, i8* %18, align 1
  %181 = zext i8 %180 to i32
  %182 = icmp eq i32 %181, 0
  br label %183

183:                                              ; preds = %179, %175
  %184 = phi i1 [ true, %175 ], [ %182, %179 ]
  %185 = xor i1 %184, true
  %186 = zext i1 %185 to i32
  %187 = sext i32 %186 to i64
  %188 = call i64 @llvm.expect.i64(i64 %187, i64 0)
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %183
  unreachable

191:                                              ; preds = %183
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  %194 = load i8, i8* %18, align 1
  %195 = icmp ne i8 %194, 0
  br i1 %195, label %196, label %208

196:                                              ; preds = %193
  %197 = load i32, i32* %12, align 4
  %198 = load i32, i32* %11, align 4
  %199 = icmp sgt i32 %197, %198
  %200 = xor i1 %199, true
  %201 = xor i1 %200, true
  %202 = zext i1 %201 to i32
  %203 = sext i32 %202 to i64
  %204 = call i64 @llvm.expect.i64(i64 %203, i64 0)
  %205 = icmp ne i64 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %196
  br label %235

207:                                              ; preds = %196
  br label %208

208:                                              ; preds = %207, %193
  %209 = load %29*, %29** %13, align 8
  %210 = getelementptr inbounds %29, %29* %209, i32 1
  store %29* %210, %29** %13, align 8
  %211 = load %29*, %29** %13, align 8
  store %29* %211, %29** %14, align 8
  %212 = load %29*, %29** %14, align 8
  %213 = load %6*, %6** @date_ce_timezone, align 8
  %214 = call i32 @488(%29* %212, %29** %5, %6* %213, i32 1)
  %215 = icmp ne i32 %214, 0
  %216 = xor i1 %215, true
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = zext i1 %218 to i32
  %220 = sext i32 %219 to i64
  %221 = call i64 @llvm.expect.i64(i64 %220, i64 0)
  %222 = icmp ne i64 %221, 0
  br i1 %222, label %223, label %233

223:                                              ; preds = %208
  %224 = load %6*, %6** @date_ce_timezone, align 8
  %225 = icmp ne %6* %224, null
  br i1 %225, label %226, label %232

226:                                              ; preds = %223
  %227 = load %6*, %6** @date_ce_timezone, align 8
  %228 = getelementptr inbounds %6, %6* %227, i32 0, i32 1
  %229 = load %28*, %28** %228, align 8
  %230 = getelementptr inbounds %28, %28* %229, i32 0, i32 3
  %231 = getelementptr inbounds [1 x i8], [1 x i8]* %230, i32 0, i32 0
  store i8* %231, i8** %16, align 8
  store i32 3, i32* %19, align 4
  br label %235

232:                                              ; preds = %223
  store i32 7, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %235

233:                                              ; preds = %208
  br label %234

234:                                              ; preds = %233
  br label %235

235:                                              ; preds = %234, %232, %226, %206, %152, %136, %76
  %236 = load i32, i32* %19, align 4
  %237 = icmp ne i32 %236, 0
  %238 = xor i1 %237, true
  %239 = xor i1 %238, true
  %240 = zext i1 %239 to i32
  %241 = sext i32 %240 to i64
  %242 = call i64 @llvm.expect.i64(i64 %241, i64 0)
  %243 = icmp ne i64 %242, 0
  br i1 %243, label %244, label %273

244:                                              ; preds = %235
  %245 = load i32, i32* %19, align 4
  %246 = icmp eq i32 %245, 2
  br i1 %246, label %247, label %250

247:                                              ; preds = %244
  %248 = load i32, i32* %12, align 4
  %249 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %248, i8* %249)
  br label %266

250:                                              ; preds = %244
  %251 = load i32, i32* %19, align 4
  %252 = icmp eq i32 %251, 3
  br i1 %252, label %253, label %257

253:                                              ; preds = %250
  %254 = load i32, i32* %12, align 4
  %255 = load i8*, i8** %16, align 8
  %256 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %254, i8* %255, %29* %256)
  br label %265

257:                                              ; preds = %250
  %258 = load i32, i32* %19, align 4
  %259 = icmp eq i32 %258, 4
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = load i32, i32* %12, align 4
  %262 = load i32, i32* %15, align 4
  %263 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %261, i32 %262, %29* %263)
  br label %264

264:                                              ; preds = %260, %257
  br label %265

265:                                              ; preds = %264, %253
  br label %266

266:                                              ; preds = %265, %247
  br label %267

267:                                              ; preds = %266
  %268 = load %29*, %29** %4, align 8
  %269 = getelementptr inbounds %29, %29* %268, i32 0, i32 1
  %270 = bitcast %31* %269 to i32*
  store i32 2, i32* %270, align 8
  br label %271

271:                                              ; preds = %267
  br label %272

272:                                              ; preds = %271
  store i32 1, i32* %20, align 4
  br label %274

273:                                              ; preds = %235
  store i32 0, i32* %20, align 4
  br label %274

274:                                              ; preds = %273, %272
  %275 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %276 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %276) #15
  %277 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #15
  %278 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %278) #15
  %279 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %279) #15
  %280 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #15
  %281 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %281) #15
  %282 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #15
  %283 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %283) #15
  %284 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %284) #15
  %285 = load i32, i32* %20, align 4
  switch i32 %285, label %311 [
    i32 0, label %286
  ]

286:                                              ; preds = %274
  br label %287

287:                                              ; preds = %286
  br label %288

288:                                              ; preds = %287
  %289 = load %6*, %6** @date_ce_immutable, align 8
  %290 = load %29*, %29** %4, align 8
  %291 = call %29* @php_date_instantiate(%6* %289, %29* %290)
  %292 = load %29*, %29** %4, align 8
  %293 = getelementptr inbounds %29, %29* %292, i32 0, i32 0
  %294 = bitcast %30* %293 to %15**
  %295 = load %15*, %15** %294, align 8
  %296 = call %61* @489(%15* %295)
  %297 = load i8*, i8** %6, align 8
  %298 = load i64, i64* %7, align 8
  %299 = load %29*, %29** %5, align 8
  %300 = call i32 @php_date_initialize(%61* %296, i8* %297, i64 %298, i8* null, %29* %299, i32 0)
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %310, label %302

302:                                              ; preds = %288
  %303 = load %29*, %29** %4, align 8
  call void @_zval_ptr_dtor(%29* %303)
  br label %304

304:                                              ; preds = %302
  %305 = load %29*, %29** %4, align 8
  %306 = getelementptr inbounds %29, %29* %305, i32 0, i32 1
  %307 = bitcast %31* %306 to i32*
  store i32 2, i32* %307, align 8
  br label %308

308:                                              ; preds = %304
  br label %309

309:                                              ; preds = %308
  store i32 1, i32* %20, align 4
  br label %311

310:                                              ; preds = %288
  store i32 0, i32* %20, align 4
  br label %311

311:                                              ; preds = %310, %309, %274
  %312 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %312) #15
  %313 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %313) #15
  %314 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %314) #15
  %315 = load i32, i32* %20, align 4
  switch i32 %315, label %317 [
    i32 0, label %316
    i32 1, label %316
  ]

316:                                              ; preds = %311, %311
  ret void

317:                                              ; preds = %311
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_create_from_format(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %29*, align 8
  %16 = alloca %29*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %23 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  store %29* null, %29** %5, align 8
  %24 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  store i8* null, i8** %6, align 8
  %25 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  store i8* null, i8** %7, align 8
  %26 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  store i64 0, i64* %8, align 8
  %27 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #15
  store i64 0, i64* %9, align 8
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 0, i32* %10, align 4
  %30 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  store i32 2, i32* %11, align 4
  %31 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #15
  store i32 3, i32* %12, align 4
  %32 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #15
  %33 = load %1*, %1** %3, align 8
  %34 = getelementptr inbounds %1, %1* %33, i32 0, i32 4
  %35 = getelementptr inbounds %29, %29* %34, i32 0, i32 2
  %36 = bitcast %32* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %13, align 4
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #15
  %39 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #15
  %40 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store %29* null, %29** %16, align 8
  %41 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  store i32 0, i32* %17, align 4
  %42 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #15
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #15
  store i8 0, i8* %20, align 1
  %43 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #15
  store i32 0, i32* %21, align 4
  %44 = load i32, i32* %14, align 4
  %45 = load %29*, %29** %15, align 8
  %46 = load %29*, %29** %16, align 8
  %47 = load i32, i32* %17, align 4
  %48 = load i8*, i8** %18, align 8
  %49 = load i8, i8* %19, align 1
  %50 = load i8, i8* %20, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %13, align 4
  %53 = load i32, i32* %11, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %13, align 4
  %63 = load i32, i32* %12, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %12, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %13, align 4
  %82 = load i32, i32* %11, align 4
  %83 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %21, align 4
  br label %309

84:                                               ; preds = %71, %61
  store i32 0, i32* %14, align 4
  %85 = load %1*, %1** %3, align 8
  %86 = bitcast %1* %85 to %29*
  %87 = getelementptr inbounds %29, %29* %86, i64 4
  store %29* %87, %29** %15, align 8
  %88 = load i32, i32* %14, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %14, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %14, align 4
  %92 = load i32, i32* %11, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %20, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %14, align 4
  %111 = load i32, i32* %11, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %20, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %20, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %14, align 4
  %132 = load i32, i32* %13, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %309

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %29*, %29** %15, align 8
  %144 = getelementptr inbounds %29, %29* %143, i32 1
  store %29* %144, %29** %15, align 8
  %145 = load %29*, %29** %15, align 8
  store %29* %145, %29** %16, align 8
  %146 = load %29*, %29** %16, align 8
  %147 = call i32 @487(%29* %146, i8** %7, i64* %9, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %309

157:                                              ; preds = %142
  %158 = load i32, i32* %14, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %14, align 4
  br label %160

160:                                              ; preds = %157
  %161 = load i32, i32* %14, align 4
  %162 = load i32, i32* %11, align 4
  %163 = icmp sle i32 %161, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = load i8, i8* %20, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %166, 1
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi i1 [ true, %160 ], [ %167, %164 ]
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %168
  unreachable

176:                                              ; preds = %168
  br label %177

177:                                              ; preds = %176
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %14, align 4
  %181 = load i32, i32* %11, align 4
  %182 = icmp sgt i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %20, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 0
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  %198 = load i8, i8* %20, align 1
  %199 = icmp ne i8 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %197
  %201 = load i32, i32* %14, align 4
  %202 = load i32, i32* %13, align 4
  %203 = icmp sgt i32 %201, %202
  %204 = xor i1 %203, true
  %205 = xor i1 %204, true
  %206 = zext i1 %205 to i32
  %207 = sext i32 %206 to i64
  %208 = call i64 @llvm.expect.i64(i64 %207, i64 0)
  %209 = icmp ne i64 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %200
  br label %309

211:                                              ; preds = %200
  br label %212

212:                                              ; preds = %211, %197
  %213 = load %29*, %29** %15, align 8
  %214 = getelementptr inbounds %29, %29* %213, i32 1
  store %29* %214, %29** %15, align 8
  %215 = load %29*, %29** %15, align 8
  store %29* %215, %29** %16, align 8
  %216 = load %29*, %29** %16, align 8
  %217 = call i32 @487(%29* %216, i8** %6, i64* %8, i32 0)
  %218 = icmp ne i32 %217, 0
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i32
  %223 = sext i32 %222 to i64
  %224 = call i64 @llvm.expect.i64(i64 %223, i64 0)
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %212
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %309

227:                                              ; preds = %212
  store i8 1, i8* %20, align 1
  %228 = load i32, i32* %14, align 4
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %14, align 4
  br label %230

230:                                              ; preds = %227
  %231 = load i32, i32* %14, align 4
  %232 = load i32, i32* %11, align 4
  %233 = icmp sle i32 %231, %232
  br i1 %233, label %238, label %234

234:                                              ; preds = %230
  %235 = load i8, i8* %20, align 1
  %236 = zext i8 %235 to i32
  %237 = icmp eq i32 %236, 1
  br label %238

238:                                              ; preds = %234, %230
  %239 = phi i1 [ true, %230 ], [ %237, %234 ]
  %240 = xor i1 %239, true
  %241 = zext i1 %240 to i32
  %242 = sext i32 %241 to i64
  %243 = call i64 @llvm.expect.i64(i64 %242, i64 0)
  %244 = icmp ne i64 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %238
  unreachable

246:                                              ; preds = %238
  br label %247

247:                                              ; preds = %246
  br label %248

248:                                              ; preds = %247
  br label %249

249:                                              ; preds = %248
  %250 = load i32, i32* %14, align 4
  %251 = load i32, i32* %11, align 4
  %252 = icmp sgt i32 %250, %251
  br i1 %252, label %257, label %253

253:                                              ; preds = %249
  %254 = load i8, i8* %20, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp eq i32 %255, 0
  br label %257

257:                                              ; preds = %253, %249
  %258 = phi i1 [ true, %249 ], [ %256, %253 ]
  %259 = xor i1 %258, true
  %260 = zext i1 %259 to i32
  %261 = sext i32 %260 to i64
  %262 = call i64 @llvm.expect.i64(i64 %261, i64 0)
  %263 = icmp ne i64 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %257
  unreachable

265:                                              ; preds = %257
  br label %266

266:                                              ; preds = %265
  br label %267

267:                                              ; preds = %266
  %268 = load i8, i8* %20, align 1
  %269 = icmp ne i8 %268, 0
  br i1 %269, label %270, label %282

270:                                              ; preds = %267
  %271 = load i32, i32* %14, align 4
  %272 = load i32, i32* %13, align 4
  %273 = icmp sgt i32 %271, %272
  %274 = xor i1 %273, true
  %275 = xor i1 %274, true
  %276 = zext i1 %275 to i32
  %277 = sext i32 %276 to i64
  %278 = call i64 @llvm.expect.i64(i64 %277, i64 0)
  %279 = icmp ne i64 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %270
  br label %309

281:                                              ; preds = %270
  br label %282

282:                                              ; preds = %281, %267
  %283 = load %29*, %29** %15, align 8
  %284 = getelementptr inbounds %29, %29* %283, i32 1
  store %29* %284, %29** %15, align 8
  %285 = load %29*, %29** %15, align 8
  store %29* %285, %29** %16, align 8
  %286 = load %29*, %29** %16, align 8
  %287 = load %6*, %6** @date_ce_timezone, align 8
  %288 = call i32 @488(%29* %286, %29** %5, %6* %287, i32 1)
  %289 = icmp ne i32 %288, 0
  %290 = xor i1 %289, true
  %291 = xor i1 %290, true
  %292 = xor i1 %291, true
  %293 = zext i1 %292 to i32
  %294 = sext i32 %293 to i64
  %295 = call i64 @llvm.expect.i64(i64 %294, i64 0)
  %296 = icmp ne i64 %295, 0
  br i1 %296, label %297, label %307

297:                                              ; preds = %282
  %298 = load %6*, %6** @date_ce_timezone, align 8
  %299 = icmp ne %6* %298, null
  br i1 %299, label %300, label %306

300:                                              ; preds = %297
  %301 = load %6*, %6** @date_ce_timezone, align 8
  %302 = getelementptr inbounds %6, %6* %301, i32 0, i32 1
  %303 = load %28*, %28** %302, align 8
  %304 = getelementptr inbounds %28, %28* %303, i32 0, i32 3
  %305 = getelementptr inbounds [1 x i8], [1 x i8]* %304, i32 0, i32 0
  store i8* %305, i8** %18, align 8
  store i32 3, i32* %21, align 4
  br label %309

306:                                              ; preds = %297
  store i32 7, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %309

307:                                              ; preds = %282
  br label %308

308:                                              ; preds = %307
  br label %309

309:                                              ; preds = %308, %306, %300, %280, %226, %210, %156, %140, %80
  %310 = load i32, i32* %21, align 4
  %311 = icmp ne i32 %310, 0
  %312 = xor i1 %311, true
  %313 = xor i1 %312, true
  %314 = zext i1 %313 to i32
  %315 = sext i32 %314 to i64
  %316 = call i64 @llvm.expect.i64(i64 %315, i64 0)
  %317 = icmp ne i64 %316, 0
  br i1 %317, label %318, label %347

318:                                              ; preds = %309
  %319 = load i32, i32* %21, align 4
  %320 = icmp eq i32 %319, 2
  br i1 %320, label %321, label %324

321:                                              ; preds = %318
  %322 = load i32, i32* %14, align 4
  %323 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %322, i8* %323)
  br label %340

324:                                              ; preds = %318
  %325 = load i32, i32* %21, align 4
  %326 = icmp eq i32 %325, 3
  br i1 %326, label %327, label %331

327:                                              ; preds = %324
  %328 = load i32, i32* %14, align 4
  %329 = load i8*, i8** %18, align 8
  %330 = load %29*, %29** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %328, i8* %329, %29* %330)
  br label %339

331:                                              ; preds = %324
  %332 = load i32, i32* %21, align 4
  %333 = icmp eq i32 %332, 4
  br i1 %333, label %334, label %338

334:                                              ; preds = %331
  %335 = load i32, i32* %14, align 4
  %336 = load i32, i32* %17, align 4
  %337 = load %29*, %29** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %335, i32 %336, %29* %337)
  br label %338

338:                                              ; preds = %334, %331
  br label %339

339:                                              ; preds = %338, %327
  br label %340

340:                                              ; preds = %339, %321
  br label %341

341:                                              ; preds = %340
  %342 = load %29*, %29** %4, align 8
  %343 = getelementptr inbounds %29, %29* %342, i32 0, i32 1
  %344 = bitcast %31* %343 to i32*
  store i32 2, i32* %344, align 8
  br label %345

345:                                              ; preds = %341
  br label %346

346:                                              ; preds = %345
  store i32 1, i32* %22, align 4
  br label %348

347:                                              ; preds = %309
  store i32 0, i32* %22, align 4
  br label %348

348:                                              ; preds = %347, %346
  %349 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %349) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  %350 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %350) #15
  %351 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #15
  %352 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %352) #15
  %353 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %353) #15
  %354 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %354) #15
  %355 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %355) #15
  %356 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %356) #15
  %357 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %357) #15
  %358 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %358) #15
  %359 = load i32, i32* %22, align 4
  switch i32 %359, label %386 [
    i32 0, label %360
  ]

360:                                              ; preds = %348
  br label %361

361:                                              ; preds = %360
  br label %362

362:                                              ; preds = %361
  %363 = load %6*, %6** @date_ce_date, align 8
  %364 = load %29*, %29** %4, align 8
  %365 = call %29* @php_date_instantiate(%6* %363, %29* %364)
  %366 = load %29*, %29** %4, align 8
  %367 = getelementptr inbounds %29, %29* %366, i32 0, i32 0
  %368 = bitcast %30* %367 to %15**
  %369 = load %15*, %15** %368, align 8
  %370 = call %61* @489(%15* %369)
  %371 = load i8*, i8** %6, align 8
  %372 = load i64, i64* %8, align 8
  %373 = load i8*, i8** %7, align 8
  %374 = load %29*, %29** %5, align 8
  %375 = call i32 @php_date_initialize(%61* %370, i8* %371, i64 %372, i8* %373, %29* %374, i32 0)
  %376 = icmp ne i32 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %362
  %378 = load %29*, %29** %4, align 8
  call void @_zval_ptr_dtor(%29* %378)
  br label %379

379:                                              ; preds = %377
  %380 = load %29*, %29** %4, align 8
  %381 = getelementptr inbounds %29, %29* %380, i32 0, i32 1
  %382 = bitcast %31* %381 to i32*
  store i32 2, i32* %382, align 8
  br label %383

383:                                              ; preds = %379
  br label %384

384:                                              ; preds = %383
  store i32 1, i32* %22, align 4
  br label %386

385:                                              ; preds = %362
  store i32 0, i32* %22, align 4
  br label %386

386:                                              ; preds = %385, %384, %348
  %387 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %387) #15
  %388 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %388) #15
  %389 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %389) #15
  %390 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %390) #15
  %391 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %391) #15
  %392 = load i32, i32* %22, align 4
  switch i32 %392, label %394 [
    i32 0, label %393
    i32 1, label %393
  ]

393:                                              ; preds = %386, %386
  ret void

394:                                              ; preds = %386
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_create_immutable_from_format(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %29*, align 8
  %16 = alloca %29*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %23 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  store %29* null, %29** %5, align 8
  %24 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  store i8* null, i8** %6, align 8
  %25 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  store i8* null, i8** %7, align 8
  %26 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  store i64 0, i64* %8, align 8
  %27 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #15
  store i64 0, i64* %9, align 8
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 0, i32* %10, align 4
  %30 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  store i32 2, i32* %11, align 4
  %31 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #15
  store i32 3, i32* %12, align 4
  %32 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #15
  %33 = load %1*, %1** %3, align 8
  %34 = getelementptr inbounds %1, %1* %33, i32 0, i32 4
  %35 = getelementptr inbounds %29, %29* %34, i32 0, i32 2
  %36 = bitcast %32* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %13, align 4
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #15
  %39 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #15
  %40 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store %29* null, %29** %16, align 8
  %41 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  store i32 0, i32* %17, align 4
  %42 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #15
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #15
  store i8 0, i8* %20, align 1
  %43 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #15
  store i32 0, i32* %21, align 4
  %44 = load i32, i32* %14, align 4
  %45 = load %29*, %29** %15, align 8
  %46 = load %29*, %29** %16, align 8
  %47 = load i32, i32* %17, align 4
  %48 = load i8*, i8** %18, align 8
  %49 = load i8, i8* %19, align 1
  %50 = load i8, i8* %20, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %13, align 4
  %53 = load i32, i32* %11, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %13, align 4
  %63 = load i32, i32* %12, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %12, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %13, align 4
  %82 = load i32, i32* %11, align 4
  %83 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %21, align 4
  br label %309

84:                                               ; preds = %71, %61
  store i32 0, i32* %14, align 4
  %85 = load %1*, %1** %3, align 8
  %86 = bitcast %1* %85 to %29*
  %87 = getelementptr inbounds %29, %29* %86, i64 4
  store %29* %87, %29** %15, align 8
  %88 = load i32, i32* %14, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %14, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %14, align 4
  %92 = load i32, i32* %11, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %20, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %14, align 4
  %111 = load i32, i32* %11, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %20, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %20, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %14, align 4
  %132 = load i32, i32* %13, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %309

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %29*, %29** %15, align 8
  %144 = getelementptr inbounds %29, %29* %143, i32 1
  store %29* %144, %29** %15, align 8
  %145 = load %29*, %29** %15, align 8
  store %29* %145, %29** %16, align 8
  %146 = load %29*, %29** %16, align 8
  %147 = call i32 @487(%29* %146, i8** %7, i64* %9, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %309

157:                                              ; preds = %142
  %158 = load i32, i32* %14, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %14, align 4
  br label %160

160:                                              ; preds = %157
  %161 = load i32, i32* %14, align 4
  %162 = load i32, i32* %11, align 4
  %163 = icmp sle i32 %161, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = load i8, i8* %20, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %166, 1
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi i1 [ true, %160 ], [ %167, %164 ]
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %168
  unreachable

176:                                              ; preds = %168
  br label %177

177:                                              ; preds = %176
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %14, align 4
  %181 = load i32, i32* %11, align 4
  %182 = icmp sgt i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %20, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 0
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  %198 = load i8, i8* %20, align 1
  %199 = icmp ne i8 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %197
  %201 = load i32, i32* %14, align 4
  %202 = load i32, i32* %13, align 4
  %203 = icmp sgt i32 %201, %202
  %204 = xor i1 %203, true
  %205 = xor i1 %204, true
  %206 = zext i1 %205 to i32
  %207 = sext i32 %206 to i64
  %208 = call i64 @llvm.expect.i64(i64 %207, i64 0)
  %209 = icmp ne i64 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %200
  br label %309

211:                                              ; preds = %200
  br label %212

212:                                              ; preds = %211, %197
  %213 = load %29*, %29** %15, align 8
  %214 = getelementptr inbounds %29, %29* %213, i32 1
  store %29* %214, %29** %15, align 8
  %215 = load %29*, %29** %15, align 8
  store %29* %215, %29** %16, align 8
  %216 = load %29*, %29** %16, align 8
  %217 = call i32 @487(%29* %216, i8** %6, i64* %8, i32 0)
  %218 = icmp ne i32 %217, 0
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i32
  %223 = sext i32 %222 to i64
  %224 = call i64 @llvm.expect.i64(i64 %223, i64 0)
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %212
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %309

227:                                              ; preds = %212
  store i8 1, i8* %20, align 1
  %228 = load i32, i32* %14, align 4
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %14, align 4
  br label %230

230:                                              ; preds = %227
  %231 = load i32, i32* %14, align 4
  %232 = load i32, i32* %11, align 4
  %233 = icmp sle i32 %231, %232
  br i1 %233, label %238, label %234

234:                                              ; preds = %230
  %235 = load i8, i8* %20, align 1
  %236 = zext i8 %235 to i32
  %237 = icmp eq i32 %236, 1
  br label %238

238:                                              ; preds = %234, %230
  %239 = phi i1 [ true, %230 ], [ %237, %234 ]
  %240 = xor i1 %239, true
  %241 = zext i1 %240 to i32
  %242 = sext i32 %241 to i64
  %243 = call i64 @llvm.expect.i64(i64 %242, i64 0)
  %244 = icmp ne i64 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %238
  unreachable

246:                                              ; preds = %238
  br label %247

247:                                              ; preds = %246
  br label %248

248:                                              ; preds = %247
  br label %249

249:                                              ; preds = %248
  %250 = load i32, i32* %14, align 4
  %251 = load i32, i32* %11, align 4
  %252 = icmp sgt i32 %250, %251
  br i1 %252, label %257, label %253

253:                                              ; preds = %249
  %254 = load i8, i8* %20, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp eq i32 %255, 0
  br label %257

257:                                              ; preds = %253, %249
  %258 = phi i1 [ true, %249 ], [ %256, %253 ]
  %259 = xor i1 %258, true
  %260 = zext i1 %259 to i32
  %261 = sext i32 %260 to i64
  %262 = call i64 @llvm.expect.i64(i64 %261, i64 0)
  %263 = icmp ne i64 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %257
  unreachable

265:                                              ; preds = %257
  br label %266

266:                                              ; preds = %265
  br label %267

267:                                              ; preds = %266
  %268 = load i8, i8* %20, align 1
  %269 = icmp ne i8 %268, 0
  br i1 %269, label %270, label %282

270:                                              ; preds = %267
  %271 = load i32, i32* %14, align 4
  %272 = load i32, i32* %13, align 4
  %273 = icmp sgt i32 %271, %272
  %274 = xor i1 %273, true
  %275 = xor i1 %274, true
  %276 = zext i1 %275 to i32
  %277 = sext i32 %276 to i64
  %278 = call i64 @llvm.expect.i64(i64 %277, i64 0)
  %279 = icmp ne i64 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %270
  br label %309

281:                                              ; preds = %270
  br label %282

282:                                              ; preds = %281, %267
  %283 = load %29*, %29** %15, align 8
  %284 = getelementptr inbounds %29, %29* %283, i32 1
  store %29* %284, %29** %15, align 8
  %285 = load %29*, %29** %15, align 8
  store %29* %285, %29** %16, align 8
  %286 = load %29*, %29** %16, align 8
  %287 = load %6*, %6** @date_ce_timezone, align 8
  %288 = call i32 @488(%29* %286, %29** %5, %6* %287, i32 1)
  %289 = icmp ne i32 %288, 0
  %290 = xor i1 %289, true
  %291 = xor i1 %290, true
  %292 = xor i1 %291, true
  %293 = zext i1 %292 to i32
  %294 = sext i32 %293 to i64
  %295 = call i64 @llvm.expect.i64(i64 %294, i64 0)
  %296 = icmp ne i64 %295, 0
  br i1 %296, label %297, label %307

297:                                              ; preds = %282
  %298 = load %6*, %6** @date_ce_timezone, align 8
  %299 = icmp ne %6* %298, null
  br i1 %299, label %300, label %306

300:                                              ; preds = %297
  %301 = load %6*, %6** @date_ce_timezone, align 8
  %302 = getelementptr inbounds %6, %6* %301, i32 0, i32 1
  %303 = load %28*, %28** %302, align 8
  %304 = getelementptr inbounds %28, %28* %303, i32 0, i32 3
  %305 = getelementptr inbounds [1 x i8], [1 x i8]* %304, i32 0, i32 0
  store i8* %305, i8** %18, align 8
  store i32 3, i32* %21, align 4
  br label %309

306:                                              ; preds = %297
  store i32 7, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %309

307:                                              ; preds = %282
  br label %308

308:                                              ; preds = %307
  br label %309

309:                                              ; preds = %308, %306, %300, %280, %226, %210, %156, %140, %80
  %310 = load i32, i32* %21, align 4
  %311 = icmp ne i32 %310, 0
  %312 = xor i1 %311, true
  %313 = xor i1 %312, true
  %314 = zext i1 %313 to i32
  %315 = sext i32 %314 to i64
  %316 = call i64 @llvm.expect.i64(i64 %315, i64 0)
  %317 = icmp ne i64 %316, 0
  br i1 %317, label %318, label %347

318:                                              ; preds = %309
  %319 = load i32, i32* %21, align 4
  %320 = icmp eq i32 %319, 2
  br i1 %320, label %321, label %324

321:                                              ; preds = %318
  %322 = load i32, i32* %14, align 4
  %323 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %322, i8* %323)
  br label %340

324:                                              ; preds = %318
  %325 = load i32, i32* %21, align 4
  %326 = icmp eq i32 %325, 3
  br i1 %326, label %327, label %331

327:                                              ; preds = %324
  %328 = load i32, i32* %14, align 4
  %329 = load i8*, i8** %18, align 8
  %330 = load %29*, %29** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %328, i8* %329, %29* %330)
  br label %339

331:                                              ; preds = %324
  %332 = load i32, i32* %21, align 4
  %333 = icmp eq i32 %332, 4
  br i1 %333, label %334, label %338

334:                                              ; preds = %331
  %335 = load i32, i32* %14, align 4
  %336 = load i32, i32* %17, align 4
  %337 = load %29*, %29** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %335, i32 %336, %29* %337)
  br label %338

338:                                              ; preds = %334, %331
  br label %339

339:                                              ; preds = %338, %327
  br label %340

340:                                              ; preds = %339, %321
  br label %341

341:                                              ; preds = %340
  %342 = load %29*, %29** %4, align 8
  %343 = getelementptr inbounds %29, %29* %342, i32 0, i32 1
  %344 = bitcast %31* %343 to i32*
  store i32 2, i32* %344, align 8
  br label %345

345:                                              ; preds = %341
  br label %346

346:                                              ; preds = %345
  store i32 1, i32* %22, align 4
  br label %348

347:                                              ; preds = %309
  store i32 0, i32* %22, align 4
  br label %348

348:                                              ; preds = %347, %346
  %349 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %349) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  %350 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %350) #15
  %351 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #15
  %352 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %352) #15
  %353 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %353) #15
  %354 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %354) #15
  %355 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %355) #15
  %356 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %356) #15
  %357 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %357) #15
  %358 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %358) #15
  %359 = load i32, i32* %22, align 4
  switch i32 %359, label %386 [
    i32 0, label %360
  ]

360:                                              ; preds = %348
  br label %361

361:                                              ; preds = %360
  br label %362

362:                                              ; preds = %361
  %363 = load %6*, %6** @date_ce_immutable, align 8
  %364 = load %29*, %29** %4, align 8
  %365 = call %29* @php_date_instantiate(%6* %363, %29* %364)
  %366 = load %29*, %29** %4, align 8
  %367 = getelementptr inbounds %29, %29* %366, i32 0, i32 0
  %368 = bitcast %30* %367 to %15**
  %369 = load %15*, %15** %368, align 8
  %370 = call %61* @489(%15* %369)
  %371 = load i8*, i8** %6, align 8
  %372 = load i64, i64* %8, align 8
  %373 = load i8*, i8** %7, align 8
  %374 = load %29*, %29** %5, align 8
  %375 = call i32 @php_date_initialize(%61* %370, i8* %371, i64 %372, i8* %373, %29* %374, i32 0)
  %376 = icmp ne i32 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %362
  %378 = load %29*, %29** %4, align 8
  call void @_zval_ptr_dtor(%29* %378)
  br label %379

379:                                              ; preds = %377
  %380 = load %29*, %29** %4, align 8
  %381 = getelementptr inbounds %29, %29* %380, i32 0, i32 1
  %382 = bitcast %31* %381 to i32*
  store i32 2, i32* %382, align 8
  br label %383

383:                                              ; preds = %379
  br label %384

384:                                              ; preds = %383
  store i32 1, i32* %22, align 4
  br label %386

385:                                              ; preds = %362
  store i32 0, i32* %22, align 4
  br label %386

386:                                              ; preds = %385, %384, %348
  %387 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %387) #15
  %388 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %388) #15
  %389 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %389) #15
  %390 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %390) #15
  %391 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %391) #15
  %392 = load i32, i32* %22, align 4
  switch i32 %392, label %394 [
    i32 0, label %393
    i32 1, label %393
  ]

393:                                              ; preds = %386, %386
  ret void

394:                                              ; preds = %386
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_parse(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca %34*, align 8
  %7 = alloca %52*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %34** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 1, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @468(%29* %142, %28** %5, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %19, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %193

164:                                              ; preds = %155
  %165 = load i32, i32* %19, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %12, align 4
  %169 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %19, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %12, align 4
  %175 = load i8*, i8** %16, align 8
  %176 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %29* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %19, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %12, align 4
  %182 = load i32, i32* %15, align 4
  %183 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %29* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  br label %187

187:                                              ; preds = %186
  %188 = load %29*, %29** %4, align 8
  %189 = getelementptr inbounds %29, %29* %188, i32 0, i32 1
  %190 = bitcast %31* %189 to i32*
  store i32 2, i32* %190, align 8
  br label %191

191:                                              ; preds = %187
  br label %192

192:                                              ; preds = %191
  store i32 1, i32* %20, align 4
  br label %194

193:                                              ; preds = %155
  store i32 0, i32* %20, align 4
  br label %194

194:                                              ; preds = %193, %192
  %195 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %196 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #15
  %197 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #15
  %198 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #15
  %199 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #15
  %200 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #15
  %201 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #15
  %202 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #15
  %203 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #15
  %204 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #15
  %205 = load i32, i32* %20, align 4
  switch i32 %205, label %228 [
    i32 0, label %206
  ]

206:                                              ; preds = %194
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  %209 = load %28*, %28** %5, align 8
  %210 = getelementptr inbounds %28, %28* %209, i32 0, i32 3
  %211 = getelementptr inbounds [1 x i8], [1 x i8]* %210, i32 0, i32 0
  %212 = load %28*, %28** %5, align 8
  %213 = getelementptr inbounds %28, %28* %212, i32 0, i32 2
  %214 = load i64, i64* %213, align 8
  %215 = load %41*, %41** @php_date_global_timezone_db, align 8
  %216 = icmp ne %41* %215, null
  br i1 %216, label %217, label %219

217:                                              ; preds = %208
  %218 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %221

219:                                              ; preds = %208
  %220 = call %41* @timelib_builtin_db()
  br label %221

221:                                              ; preds = %219, %217
  %222 = phi %41* [ %218, %217 ], [ %220, %219 ]
  %223 = call %52* @timelib_strtotime(i8* %211, i64 %214, %34** %6, %41* %222, %53* (i8*, %41*, i32*)* @php_date_parse_tzfile_wrapper)
  store %52* %223, %52** %7, align 8
  %224 = load %1*, %1** %3, align 8
  %225 = load %29*, %29** %4, align 8
  %226 = load %52*, %52** %7, align 8
  %227 = load %34*, %34** %6, align 8
  call void @php_date_do_return_parsed_time(%1* %224, %29* %225, %52* %226, %34* %227)
  store i32 0, i32* %20, align 4
  br label %228

228:                                              ; preds = %221, %194
  %229 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #15
  %230 = bitcast %34** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #15
  %231 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #15
  %232 = load i32, i32* %20, align 4
  switch i32 %232, label %234 [
    i32 0, label %233
    i32 1, label %233
  ]

233:                                              ; preds = %228, %228
  ret void

234:                                              ; preds = %228
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_parse_from_format(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca %28*, align 8
  %7 = alloca %34*, align 8
  %8 = alloca %52*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %22 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  %24 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  %25 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 0, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 2, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 2, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  %31 = load %1*, %1** %3, align 8
  %32 = getelementptr inbounds %1, %1* %31, i32 0, i32 4
  %33 = getelementptr inbounds %29, %29* %32, i32 0, i32 2
  %34 = bitcast %32* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #15
  %37 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  %38 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store %29* null, %29** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %29*, %29** %14, align 8
  %44 = load %29*, %29** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %227

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %1*, %1** %3, align 8
  %84 = bitcast %1* %83 to %29*
  %85 = getelementptr inbounds %29, %29* %84, i64 4
  store %29* %85, %29** %14, align 8
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %227

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %29*, %29** %14, align 8
  %142 = getelementptr inbounds %29, %29* %141, i32 1
  store %29* %142, %29** %14, align 8
  %143 = load %29*, %29** %14, align 8
  store %29* %143, %29** %15, align 8
  %144 = load %29*, %29** %15, align 8
  %145 = call i32 @468(%29* %144, %28** %6, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

155:                                              ; preds = %140
  %156 = load i32, i32* %13, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %13, align 4
  br label %158

158:                                              ; preds = %155
  %159 = load i32, i32* %13, align 4
  %160 = load i32, i32* %10, align 4
  %161 = icmp sle i32 %159, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i8, i8* %19, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 1
  br label %166

166:                                              ; preds = %162, %158
  %167 = phi i1 [ true, %158 ], [ %165, %162 ]
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  unreachable

174:                                              ; preds = %166
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %13, align 4
  %179 = load i32, i32* %10, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %19, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  %196 = load i8, i8* %19, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %195
  %199 = load i32, i32* %13, align 4
  %200 = load i32, i32* %12, align 4
  %201 = icmp sgt i32 %199, %200
  %202 = xor i1 %201, true
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %198
  br label %227

209:                                              ; preds = %198
  br label %210

210:                                              ; preds = %209, %195
  %211 = load %29*, %29** %14, align 8
  %212 = getelementptr inbounds %29, %29* %211, i32 1
  store %29* %212, %29** %14, align 8
  %213 = load %29*, %29** %14, align 8
  store %29* %213, %29** %15, align 8
  %214 = load %29*, %29** %15, align 8
  %215 = call i32 @468(%29* %214, %28** %5, i32 0)
  %216 = icmp ne i32 %215, 0
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %210
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

225:                                              ; preds = %210
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226, %224, %208, %154, %138, %78
  %228 = load i32, i32* %20, align 4
  %229 = icmp ne i32 %228, 0
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i32
  %233 = sext i32 %232 to i64
  %234 = call i64 @llvm.expect.i64(i64 %233, i64 0)
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %236, label %265

236:                                              ; preds = %227
  %237 = load i32, i32* %20, align 4
  %238 = icmp eq i32 %237, 2
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load i32, i32* %13, align 4
  %241 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %240, i8* %241)
  br label %258

242:                                              ; preds = %236
  %243 = load i32, i32* %20, align 4
  %244 = icmp eq i32 %243, 3
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = load i32, i32* %13, align 4
  %247 = load i8*, i8** %17, align 8
  %248 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %246, i8* %247, %29* %248)
  br label %257

249:                                              ; preds = %242
  %250 = load i32, i32* %20, align 4
  %251 = icmp eq i32 %250, 4
  br i1 %251, label %252, label %256

252:                                              ; preds = %249
  %253 = load i32, i32* %13, align 4
  %254 = load i32, i32* %16, align 4
  %255 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %253, i32 %254, %29* %255)
  br label %256

256:                                              ; preds = %252, %249
  br label %257

257:                                              ; preds = %256, %245
  br label %258

258:                                              ; preds = %257, %239
  br label %259

259:                                              ; preds = %258
  %260 = load %29*, %29** %4, align 8
  %261 = getelementptr inbounds %29, %29* %260, i32 0, i32 1
  %262 = bitcast %31* %261 to i32*
  store i32 2, i32* %262, align 8
  br label %263

263:                                              ; preds = %259
  br label %264

264:                                              ; preds = %263
  store i32 1, i32* %21, align 4
  br label %266

265:                                              ; preds = %227
  store i32 0, i32* %21, align 4
  br label %266

266:                                              ; preds = %265, %264
  %267 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  %268 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #15
  %269 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #15
  %270 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #15
  %271 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271) #15
  %272 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #15
  %273 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #15
  %274 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #15
  %275 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #15
  %276 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #15
  %277 = load i32, i32* %21, align 4
  switch i32 %277, label %303 [
    i32 0, label %278
  ]

278:                                              ; preds = %266
  br label %279

279:                                              ; preds = %278
  br label %280

280:                                              ; preds = %279
  %281 = load %28*, %28** %6, align 8
  %282 = getelementptr inbounds %28, %28* %281, i32 0, i32 3
  %283 = getelementptr inbounds [1 x i8], [1 x i8]* %282, i32 0, i32 0
  %284 = load %28*, %28** %5, align 8
  %285 = getelementptr inbounds %28, %28* %284, i32 0, i32 3
  %286 = getelementptr inbounds [1 x i8], [1 x i8]* %285, i32 0, i32 0
  %287 = load %28*, %28** %5, align 8
  %288 = getelementptr inbounds %28, %28* %287, i32 0, i32 2
  %289 = load i64, i64* %288, align 8
  %290 = load %41*, %41** @php_date_global_timezone_db, align 8
  %291 = icmp ne %41* %290, null
  br i1 %291, label %292, label %294

292:                                              ; preds = %280
  %293 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %296

294:                                              ; preds = %280
  %295 = call %41* @timelib_builtin_db()
  br label %296

296:                                              ; preds = %294, %292
  %297 = phi %41* [ %293, %292 ], [ %295, %294 ]
  %298 = call %52* @timelib_parse_from_format(i8* %283, i8* %286, i64 %289, %34** %7, %41* %297, %53* (i8*, %41*, i32*)* @php_date_parse_tzfile_wrapper)
  store %52* %298, %52** %8, align 8
  %299 = load %1*, %1** %3, align 8
  %300 = load %29*, %29** %4, align 8
  %301 = load %52*, %52** %8, align 8
  %302 = load %34*, %34** %7, align 8
  call void @php_date_do_return_parsed_time(%1* %299, %29* %300, %52* %301, %34* %302)
  store i32 0, i32* %21, align 4
  br label %303

303:                                              ; preds = %296, %266
  %304 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %304) #15
  %305 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305) #15
  %306 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %306) #15
  %307 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %307) #15
  %308 = load i32, i32* %21, align 4
  switch i32 %308, label %310 [
    i32 0, label %309
    i32 1, label %309
  ]

309:                                              ; preds = %303, %303
  ret void

310:                                              ; preds = %303
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_get_last_errors(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %34*, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  %6 = icmp ne %34* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = load %29*, %29** %4, align 8
  %9 = call i32 @_array_init(%29* %8, i32 0)
  %10 = load %29*, %29** %4, align 8
  %11 = load %34*, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  call void @493(%29* %10, %34* %11)
  br label %18

12:                                               ; preds = %2
  br label %13

13:                                               ; preds = %12
  %14 = load %29*, %29** %4, align 8
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 1
  %16 = bitcast %31* %15 to i32*
  store i32 2, i32* %16, align 8
  br label %17

17:                                               ; preds = %13
  br label %18

18:                                               ; preds = %17, %7
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_format(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %29*, align 8
  %11 = alloca %28*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %12 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = load %1*, %1** %3, align 8
  %17 = getelementptr inbounds %1, %1* %16, i32 0, i32 4
  %18 = getelementptr inbounds %29, %29* %17, i32 0, i32 2
  %19 = bitcast %32* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = load %1*, %1** %3, align 8
  %22 = getelementptr inbounds %1, %1* %21, i32 0, i32 4
  %23 = call zeroext i8 @490(%29* %22)
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 8
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = load %1*, %1** %3, align 8
  %28 = getelementptr inbounds %1, %1* %27, i32 0, i32 4
  br label %30

29:                                               ; preds = %2
  br label %30

30:                                               ; preds = %29, %26
  %31 = phi %29* [ %28, %26 ], [ null, %29 ]
  %32 = load %6*, %6** @date_ce_interface, align 8
  %33 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %20, %29* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @230, i32 0, i32 0), %29** %5, %6* %32, i8** %7, i64* %8)
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  br label %36

36:                                               ; preds = %35
  %37 = load %29*, %29** %4, align 8
  %38 = getelementptr inbounds %29, %29* %37, i32 0, i32 1
  %39 = bitcast %31* %38 to i32*
  store i32 2, i32* %39, align 8
  br label %40

40:                                               ; preds = %36
  br label %41

41:                                               ; preds = %40
  store i32 1, i32* %9, align 4
  br label %97

42:                                               ; preds = %30
  %43 = load %29*, %29** %5, align 8
  %44 = getelementptr inbounds %29, %29* %43, i32 0, i32 0
  %45 = bitcast %30* %44 to %15**
  %46 = load %15*, %15** %45, align 8
  %47 = call %61* @489(%15* %46)
  store %61* %47, %61** %6, align 8
  %48 = load %61*, %61** %6, align 8
  %49 = getelementptr inbounds %61, %61* %48, i32 0, i32 0
  %50 = load %52*, %52** %49, align 8
  %51 = icmp ne %52* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %42
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %53

53:                                               ; preds = %52
  %54 = load %29*, %29** %4, align 8
  %55 = getelementptr inbounds %29, %29* %54, i32 0, i32 1
  %56 = bitcast %31* %55 to i32*
  store i32 2, i32* %56, align 8
  br label %57

57:                                               ; preds = %53
  br label %58

58:                                               ; preds = %57
  store i32 1, i32* %9, align 4
  br label %97

59:                                               ; preds = %42
  br label %60

60:                                               ; preds = %59
  %61 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #15
  %62 = load %29*, %29** %4, align 8
  store %29* %62, %29** %10, align 8
  %63 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #15
  %64 = load i8*, i8** %7, align 8
  %65 = load i64, i64* %8, align 8
  %66 = load %61*, %61** %6, align 8
  %67 = getelementptr inbounds %61, %61* %66, i32 0, i32 0
  %68 = load %52*, %52** %67, align 8
  %69 = load %61*, %61** %6, align 8
  %70 = getelementptr inbounds %61, %61* %69, i32 0, i32 0
  %71 = load %52*, %52** %70, align 8
  %72 = getelementptr inbounds %52, %52* %71, i32 0, i32 20
  %73 = load i32, i32* %72, align 4
  %74 = call %28* @466(i8* %64, i64 %65, %52* %68, i32 %73)
  store %28* %74, %28** %11, align 8
  %75 = load %28*, %28** %11, align 8
  %76 = load %29*, %29** %10, align 8
  %77 = getelementptr inbounds %29, %29* %76, i32 0, i32 0
  %78 = bitcast %30* %77 to %28**
  store %28* %75, %28** %78, align 8
  %79 = load %28*, %28** %11, align 8
  %80 = getelementptr inbounds %28, %28* %79, i32 0, i32 0
  %81 = getelementptr inbounds %8, %8* %80, i32 0, i32 1
  %82 = bitcast %9* %81 to %62*
  %83 = getelementptr inbounds %62, %62* %82, i32 0, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = and i32 %85, 2
  %87 = icmp ne i32 %86, 0
  %88 = zext i1 %87 to i64
  %89 = select i1 %87, i32 6, i32 5126
  %90 = load %29*, %29** %10, align 8
  %91 = getelementptr inbounds %29, %29* %90, i32 0, i32 1
  %92 = bitcast %31* %91 to i32*
  store i32 %89, i32* %92, align 8
  %93 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #15
  %94 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #15
  br label %95

95:                                               ; preds = %60
  br label %96

96:                                               ; preds = %95
  store i32 1, i32* %9, align 4
  br label %97

97:                                               ; preds = %96, %58, %41
  %98 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #15
  %99 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #15
  %100 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #15
  %101 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_modify(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %29*, align 8
  %10 = alloca %29*, align 8
  %11 = alloca %63*, align 8
  %12 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %13 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = load %1*, %1** %3, align 8
  %17 = getelementptr inbounds %1, %1* %16, i32 0, i32 4
  %18 = getelementptr inbounds %29, %29* %17, i32 0, i32 2
  %19 = bitcast %32* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = load %1*, %1** %3, align 8
  %22 = getelementptr inbounds %1, %1* %21, i32 0, i32 4
  %23 = call zeroext i8 @490(%29* %22)
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 8
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = load %1*, %1** %3, align 8
  %28 = getelementptr inbounds %1, %1* %27, i32 0, i32 4
  br label %30

29:                                               ; preds = %2
  br label %30

30:                                               ; preds = %29, %26
  %31 = phi %29* [ %28, %26 ], [ null, %29 ]
  %32 = load %6*, %6** @date_ce_date, align 8
  %33 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %20, %29* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @230, i32 0, i32 0), %29** %5, %6* %32, i8** %6, i64* %7)
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  br label %36

36:                                               ; preds = %35
  %37 = load %29*, %29** %4, align 8
  %38 = getelementptr inbounds %29, %29* %37, i32 0, i32 1
  %39 = bitcast %31* %38 to i32*
  store i32 2, i32* %39, align 8
  br label %40

40:                                               ; preds = %36
  br label %41

41:                                               ; preds = %40
  store i32 1, i32* %8, align 4
  br label %90

42:                                               ; preds = %30
  %43 = load %29*, %29** %5, align 8
  %44 = load i8*, i8** %6, align 8
  %45 = load i64, i64* %7, align 8
  %46 = call i32 @494(%29* %43, i8* %44, i64 %45)
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %42
  br label %49

49:                                               ; preds = %48
  %50 = load %29*, %29** %4, align 8
  %51 = getelementptr inbounds %29, %29* %50, i32 0, i32 1
  %52 = bitcast %31* %51 to i32*
  store i32 2, i32* %52, align 8
  br label %53

53:                                               ; preds = %49
  br label %54

54:                                               ; preds = %53
  store i32 1, i32* %8, align 4
  br label %90

55:                                               ; preds = %42
  %56 = load %29*, %29** %5, align 8
  %57 = call i32 @495(%29* %56)
  br label %58

58:                                               ; preds = %55
  %59 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #15
  %60 = load %29*, %29** %4, align 8
  store %29* %60, %29** %9, align 8
  %61 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #15
  %62 = load %29*, %29** %5, align 8
  store %29* %62, %29** %10, align 8
  %63 = bitcast %63** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #15
  %64 = load %29*, %29** %10, align 8
  %65 = getelementptr inbounds %29, %29* %64, i32 0, i32 0
  %66 = bitcast %30* %65 to %63**
  %67 = load %63*, %63** %66, align 8
  store %63* %67, %63** %11, align 8
  %68 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %68) #15
  %69 = load %29*, %29** %10, align 8
  %70 = getelementptr inbounds %29, %29* %69, i32 0, i32 1
  %71 = bitcast %31* %70 to i32*
  %72 = load i32, i32* %71, align 8
  store i32 %72, i32* %12, align 4
  br label %73

73:                                               ; preds = %58
  %74 = load %63*, %63** %11, align 8
  %75 = load %29*, %29** %9, align 8
  %76 = getelementptr inbounds %29, %29* %75, i32 0, i32 0
  %77 = bitcast %30* %76 to %63**
  store %63* %74, %63** %77, align 8
  %78 = load i32, i32* %12, align 4
  %79 = load %29*, %29** %9, align 8
  %80 = getelementptr inbounds %29, %29* %79, i32 0, i32 1
  %81 = bitcast %31* %80 to i32*
  store i32 %78, i32* %81, align 8
  br label %82

82:                                               ; preds = %73
  br label %83

83:                                               ; preds = %82
  %84 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %84) #15
  %85 = bitcast %63** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #15
  %86 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #15
  %87 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #15
  br label %88

88:                                               ; preds = %83
  br label %89

89:                                               ; preds = %88
  store i32 0, i32* %8, align 4
  br label %90

90:                                               ; preds = %89, %54, %41
  %91 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #15
  %92 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #15
  %93 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #15
  %94 = load i32, i32* %8, align 4
  switch i32 %94, label %96 [
    i32 0, label %95
    i32 1, label %95
  ]

95:                                               ; preds = %90, %90
  ret void

96:                                               ; preds = %90
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_add(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %29*, align 8
  %9 = alloca %29*, align 8
  %10 = alloca %63*, align 8
  %11 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %12 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %1*, %1** %3, align 8
  %15 = getelementptr inbounds %1, %1* %14, i32 0, i32 4
  %16 = getelementptr inbounds %29, %29* %15, i32 0, i32 2
  %17 = bitcast %32* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = load %1*, %1** %3, align 8
  %20 = getelementptr inbounds %1, %1* %19, i32 0, i32 4
  %21 = call zeroext i8 @490(%29* %20)
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 8
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = load %1*, %1** %3, align 8
  %26 = getelementptr inbounds %1, %1* %25, i32 0, i32 4
  br label %28

27:                                               ; preds = %2
  br label %28

28:                                               ; preds = %27, %24
  %29 = phi %29* [ %26, %24 ], [ null, %27 ]
  %30 = load %6*, %6** @date_ce_date, align 8
  %31 = load %6*, %6** @date_ce_interval, align 8
  %32 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %18, %29* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @232, i32 0, i32 0), %29** %5, %6* %30, %29** %6, %6* %31)
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  br label %35

35:                                               ; preds = %34
  %36 = load %29*, %29** %4, align 8
  %37 = getelementptr inbounds %29, %29* %36, i32 0, i32 1
  %38 = bitcast %31* %37 to i32*
  store i32 2, i32* %38, align 8
  br label %39

39:                                               ; preds = %35
  br label %40

40:                                               ; preds = %39
  store i32 1, i32* %7, align 4
  br label %79

41:                                               ; preds = %28
  %42 = load %29*, %29** %5, align 8
  %43 = load %29*, %29** %6, align 8
  %44 = load %29*, %29** %4, align 8
  call void @497(%29* %42, %29* %43, %29* %44)
  %45 = load %29*, %29** %5, align 8
  %46 = call i32 @495(%29* %45)
  br label %47

47:                                               ; preds = %41
  %48 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #15
  %49 = load %29*, %29** %4, align 8
  store %29* %49, %29** %8, align 8
  %50 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #15
  %51 = load %29*, %29** %5, align 8
  store %29* %51, %29** %9, align 8
  %52 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #15
  %53 = load %29*, %29** %9, align 8
  %54 = getelementptr inbounds %29, %29* %53, i32 0, i32 0
  %55 = bitcast %30* %54 to %63**
  %56 = load %63*, %63** %55, align 8
  store %63* %56, %63** %10, align 8
  %57 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #15
  %58 = load %29*, %29** %9, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 1
  %60 = bitcast %31* %59 to i32*
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %11, align 4
  br label %62

62:                                               ; preds = %47
  %63 = load %63*, %63** %10, align 8
  %64 = load %29*, %29** %8, align 8
  %65 = getelementptr inbounds %29, %29* %64, i32 0, i32 0
  %66 = bitcast %30* %65 to %63**
  store %63* %63, %63** %66, align 8
  %67 = load i32, i32* %11, align 4
  %68 = load %29*, %29** %8, align 8
  %69 = getelementptr inbounds %29, %29* %68, i32 0, i32 1
  %70 = bitcast %31* %69 to i32*
  store i32 %67, i32* %70, align 8
  br label %71

71:                                               ; preds = %62
  br label %72

72:                                               ; preds = %71
  %73 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %73) #15
  %74 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #15
  %75 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #15
  %76 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #15
  br label %77

77:                                               ; preds = %72
  br label %78

78:                                               ; preds = %77
  store i32 0, i32* %7, align 4
  br label %79

79:                                               ; preds = %78, %40
  %80 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #15
  %81 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81) #15
  %82 = load i32, i32* %7, align 4
  switch i32 %82, label %84 [
    i32 0, label %83
    i32 1, label %83
  ]

83:                                               ; preds = %79, %79
  ret void

84:                                               ; preds = %79
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_sub(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %29*, align 8
  %9 = alloca %29*, align 8
  %10 = alloca %63*, align 8
  %11 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %12 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %1*, %1** %3, align 8
  %15 = getelementptr inbounds %1, %1* %14, i32 0, i32 4
  %16 = getelementptr inbounds %29, %29* %15, i32 0, i32 2
  %17 = bitcast %32* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = load %1*, %1** %3, align 8
  %20 = getelementptr inbounds %1, %1* %19, i32 0, i32 4
  %21 = call zeroext i8 @490(%29* %20)
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 8
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = load %1*, %1** %3, align 8
  %26 = getelementptr inbounds %1, %1* %25, i32 0, i32 4
  br label %28

27:                                               ; preds = %2
  br label %28

28:                                               ; preds = %27, %24
  %29 = phi %29* [ %26, %24 ], [ null, %27 ]
  %30 = load %6*, %6** @date_ce_date, align 8
  %31 = load %6*, %6** @date_ce_interval, align 8
  %32 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %18, %29* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @232, i32 0, i32 0), %29** %5, %6* %30, %29** %6, %6* %31)
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  br label %35

35:                                               ; preds = %34
  %36 = load %29*, %29** %4, align 8
  %37 = getelementptr inbounds %29, %29* %36, i32 0, i32 1
  %38 = bitcast %31* %37 to i32*
  store i32 2, i32* %38, align 8
  br label %39

39:                                               ; preds = %35
  br label %40

40:                                               ; preds = %39
  store i32 1, i32* %7, align 4
  br label %79

41:                                               ; preds = %28
  %42 = load %29*, %29** %5, align 8
  %43 = load %29*, %29** %6, align 8
  %44 = load %29*, %29** %4, align 8
  call void @498(%29* %42, %29* %43, %29* %44)
  %45 = load %29*, %29** %5, align 8
  %46 = call i32 @495(%29* %45)
  br label %47

47:                                               ; preds = %41
  %48 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #15
  %49 = load %29*, %29** %4, align 8
  store %29* %49, %29** %8, align 8
  %50 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #15
  %51 = load %29*, %29** %5, align 8
  store %29* %51, %29** %9, align 8
  %52 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #15
  %53 = load %29*, %29** %9, align 8
  %54 = getelementptr inbounds %29, %29* %53, i32 0, i32 0
  %55 = bitcast %30* %54 to %63**
  %56 = load %63*, %63** %55, align 8
  store %63* %56, %63** %10, align 8
  %57 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #15
  %58 = load %29*, %29** %9, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 1
  %60 = bitcast %31* %59 to i32*
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %11, align 4
  br label %62

62:                                               ; preds = %47
  %63 = load %63*, %63** %10, align 8
  %64 = load %29*, %29** %8, align 8
  %65 = getelementptr inbounds %29, %29* %64, i32 0, i32 0
  %66 = bitcast %30* %65 to %63**
  store %63* %63, %63** %66, align 8
  %67 = load i32, i32* %11, align 4
  %68 = load %29*, %29** %8, align 8
  %69 = getelementptr inbounds %29, %29* %68, i32 0, i32 1
  %70 = bitcast %31* %69 to i32*
  store i32 %67, i32* %70, align 8
  br label %71

71:                                               ; preds = %62
  br label %72

72:                                               ; preds = %71
  %73 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %73) #15
  %74 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #15
  %75 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #15
  %76 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #15
  br label %77

77:                                               ; preds = %72
  br label %78

78:                                               ; preds = %77
  store i32 0, i32* %7, align 4
  br label %79

79:                                               ; preds = %78, %40
  %80 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #15
  %81 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81) #15
  %82 = load i32, i32* %7, align 4
  switch i32 %82, label %84 [
    i32 0, label %83
    i32 1, label %83
  ]

83:                                               ; preds = %79, %79
  ret void

84:                                               ; preds = %79
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_timezone_get(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca %64*, align 8
  %8 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %9 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = bitcast %64** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = load %1*, %1** %3, align 8
  %13 = getelementptr inbounds %1, %1* %12, i32 0, i32 4
  %14 = getelementptr inbounds %29, %29* %13, i32 0, i32 2
  %15 = bitcast %32* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = load %1*, %1** %3, align 8
  %18 = getelementptr inbounds %1, %1* %17, i32 0, i32 4
  %19 = call zeroext i8 @490(%29* %18)
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 8
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load %1*, %1** %3, align 8
  %24 = getelementptr inbounds %1, %1* %23, i32 0, i32 4
  br label %26

25:                                               ; preds = %2
  br label %26

26:                                               ; preds = %25, %22
  %27 = phi %29* [ %24, %22 ], [ null, %25 ]
  %28 = load %6*, %6** @date_ce_interface, align 8
  %29 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %16, %29* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @233, i32 0, i32 0), %29** %5, %6* %28)
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  br label %32

32:                                               ; preds = %31
  %33 = load %29*, %29** %4, align 8
  %34 = getelementptr inbounds %29, %29* %33, i32 0, i32 1
  %35 = bitcast %31* %34 to i32*
  store i32 2, i32* %35, align 8
  br label %36

36:                                               ; preds = %32
  br label %37

37:                                               ; preds = %36
  store i32 1, i32* %8, align 4
  br label %83

38:                                               ; preds = %26
  %39 = load %29*, %29** %5, align 8
  %40 = getelementptr inbounds %29, %29* %39, i32 0, i32 0
  %41 = bitcast %30* %40 to %15**
  %42 = load %15*, %15** %41, align 8
  %43 = call %61* @489(%15* %42)
  store %61* %43, %61** %6, align 8
  %44 = load %61*, %61** %6, align 8
  %45 = getelementptr inbounds %61, %61* %44, i32 0, i32 0
  %46 = load %52*, %52** %45, align 8
  %47 = icmp ne %52* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %38
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %49

49:                                               ; preds = %48
  %50 = load %29*, %29** %4, align 8
  %51 = getelementptr inbounds %29, %29* %50, i32 0, i32 1
  %52 = bitcast %31* %51 to i32*
  store i32 2, i32* %52, align 8
  br label %53

53:                                               ; preds = %49
  br label %54

54:                                               ; preds = %53
  store i32 1, i32* %8, align 4
  br label %83

55:                                               ; preds = %38
  %56 = load %61*, %61** %6, align 8
  %57 = getelementptr inbounds %61, %61* %56, i32 0, i32 0
  %58 = load %52*, %52** %57, align 8
  %59 = getelementptr inbounds %52, %52* %58, i32 0, i32 20
  %60 = load i32, i32* %59, align 4
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %75

62:                                               ; preds = %55
  %63 = load %6*, %6** @date_ce_timezone, align 8
  %64 = load %29*, %29** %4, align 8
  %65 = call %29* @php_date_instantiate(%6* %63, %29* %64)
  %66 = load %29*, %29** %4, align 8
  %67 = getelementptr inbounds %29, %29* %66, i32 0, i32 0
  %68 = bitcast %30* %67 to %15**
  %69 = load %15*, %15** %68, align 8
  %70 = call %64* @484(%15* %69)
  store %64* %70, %64** %7, align 8
  %71 = load %64*, %64** %7, align 8
  %72 = load %61*, %61** %6, align 8
  %73 = getelementptr inbounds %61, %61* %72, i32 0, i32 0
  %74 = load %52*, %52** %73, align 8
  call void @499(%64* %71, %52* %74)
  br label %82

75:                                               ; preds = %55
  br label %76

76:                                               ; preds = %75
  %77 = load %29*, %29** %4, align 8
  %78 = getelementptr inbounds %29, %29* %77, i32 0, i32 1
  %79 = bitcast %31* %78 to i32*
  store i32 2, i32* %79, align 8
  br label %80

80:                                               ; preds = %76
  br label %81

81:                                               ; preds = %80
  store i32 1, i32* %8, align 4
  br label %83

82:                                               ; preds = %62
  store i32 0, i32* %8, align 4
  br label %83

83:                                               ; preds = %82, %81, %54, %37
  %84 = bitcast %64** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #15
  %85 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #15
  %86 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #15
  %87 = load i32, i32* %8, align 4
  switch i32 %87, label %89 [
    i32 0, label %88
    i32 1, label %88
  ]

88:                                               ; preds = %83, %83
  ret void

89:                                               ; preds = %83
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_timezone_set(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %29*, align 8
  %9 = alloca %29*, align 8
  %10 = alloca %63*, align 8
  %11 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %12 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %1*, %1** %3, align 8
  %15 = getelementptr inbounds %1, %1* %14, i32 0, i32 4
  %16 = getelementptr inbounds %29, %29* %15, i32 0, i32 2
  %17 = bitcast %32* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = load %1*, %1** %3, align 8
  %20 = getelementptr inbounds %1, %1* %19, i32 0, i32 4
  %21 = call zeroext i8 @490(%29* %20)
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 8
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = load %1*, %1** %3, align 8
  %26 = getelementptr inbounds %1, %1* %25, i32 0, i32 4
  br label %28

27:                                               ; preds = %2
  br label %28

28:                                               ; preds = %27, %24
  %29 = phi %29* [ %26, %24 ], [ null, %27 ]
  %30 = load %6*, %6** @date_ce_date, align 8
  %31 = load %6*, %6** @date_ce_timezone, align 8
  %32 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %18, %29* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @232, i32 0, i32 0), %29** %5, %6* %30, %29** %6, %6* %31)
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  br label %35

35:                                               ; preds = %34
  %36 = load %29*, %29** %4, align 8
  %37 = getelementptr inbounds %29, %29* %36, i32 0, i32 1
  %38 = bitcast %31* %37 to i32*
  store i32 2, i32* %38, align 8
  br label %39

39:                                               ; preds = %35
  br label %40

40:                                               ; preds = %39
  store i32 1, i32* %7, align 4
  br label %79

41:                                               ; preds = %28
  %42 = load %29*, %29** %5, align 8
  %43 = load %29*, %29** %6, align 8
  %44 = load %29*, %29** %4, align 8
  call void @500(%29* %42, %29* %43, %29* %44)
  %45 = load %29*, %29** %5, align 8
  %46 = call i32 @495(%29* %45)
  br label %47

47:                                               ; preds = %41
  %48 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #15
  %49 = load %29*, %29** %4, align 8
  store %29* %49, %29** %8, align 8
  %50 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #15
  %51 = load %29*, %29** %5, align 8
  store %29* %51, %29** %9, align 8
  %52 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #15
  %53 = load %29*, %29** %9, align 8
  %54 = getelementptr inbounds %29, %29* %53, i32 0, i32 0
  %55 = bitcast %30* %54 to %63**
  %56 = load %63*, %63** %55, align 8
  store %63* %56, %63** %10, align 8
  %57 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #15
  %58 = load %29*, %29** %9, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 1
  %60 = bitcast %31* %59 to i32*
  %61 = load i32, i32* %60, align 8
  store i32 %61, i32* %11, align 4
  br label %62

62:                                               ; preds = %47
  %63 = load %63*, %63** %10, align 8
  %64 = load %29*, %29** %8, align 8
  %65 = getelementptr inbounds %29, %29* %64, i32 0, i32 0
  %66 = bitcast %30* %65 to %63**
  store %63* %63, %63** %66, align 8
  %67 = load i32, i32* %11, align 4
  %68 = load %29*, %29** %8, align 8
  %69 = getelementptr inbounds %29, %29* %68, i32 0, i32 1
  %70 = bitcast %31* %69 to i32*
  store i32 %67, i32* %70, align 8
  br label %71

71:                                               ; preds = %62
  br label %72

72:                                               ; preds = %71
  %73 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %73) #15
  %74 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #15
  %75 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #15
  %76 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #15
  br label %77

77:                                               ; preds = %72
  br label %78

78:                                               ; preds = %77
  store i32 0, i32* %7, align 4
  br label %79

79:                                               ; preds = %78, %40
  %80 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #15
  %81 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81) #15
  %82 = load i32, i32* %7, align 4
  switch i32 %82, label %84 [
    i32 0, label %83
    i32 1, label %83
  ]

83:                                               ; preds = %79, %79
  ret void

84:                                               ; preds = %79
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_offset_get(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca %67*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %29*, align 8
  %10 = alloca %29*, align 8
  %11 = alloca %29*, align 8
  %12 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %13 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast %67** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = load %1*, %1** %3, align 8
  %17 = getelementptr inbounds %1, %1* %16, i32 0, i32 4
  %18 = getelementptr inbounds %29, %29* %17, i32 0, i32 2
  %19 = bitcast %32* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = load %1*, %1** %3, align 8
  %22 = getelementptr inbounds %1, %1* %21, i32 0, i32 4
  %23 = call zeroext i8 @490(%29* %22)
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 8
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = load %1*, %1** %3, align 8
  %28 = getelementptr inbounds %1, %1* %27, i32 0, i32 4
  br label %30

29:                                               ; preds = %2
  br label %30

30:                                               ; preds = %29, %26
  %31 = phi %29* [ %28, %26 ], [ null, %29 ]
  %32 = load %6*, %6** @date_ce_interface, align 8
  %33 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %20, %29* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @233, i32 0, i32 0), %29** %5, %6* %32)
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  br label %36

36:                                               ; preds = %35
  %37 = load %29*, %29** %4, align 8
  %38 = getelementptr inbounds %29, %29* %37, i32 0, i32 1
  %39 = bitcast %31* %38 to i32*
  store i32 2, i32* %39, align 8
  br label %40

40:                                               ; preds = %36
  br label %41

41:                                               ; preds = %40
  store i32 1, i32* %8, align 4
  br label %148

42:                                               ; preds = %30
  %43 = load %29*, %29** %5, align 8
  %44 = getelementptr inbounds %29, %29* %43, i32 0, i32 0
  %45 = bitcast %30* %44 to %15**
  %46 = load %15*, %15** %45, align 8
  %47 = call %61* @489(%15* %46)
  store %61* %47, %61** %6, align 8
  %48 = load %61*, %61** %6, align 8
  %49 = getelementptr inbounds %61, %61* %48, i32 0, i32 0
  %50 = load %52*, %52** %49, align 8
  %51 = icmp ne %52* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %42
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %53

53:                                               ; preds = %52
  %54 = load %29*, %29** %4, align 8
  %55 = getelementptr inbounds %29, %29* %54, i32 0, i32 1
  %56 = bitcast %31* %55 to i32*
  store i32 2, i32* %56, align 8
  br label %57

57:                                               ; preds = %53
  br label %58

58:                                               ; preds = %57
  store i32 1, i32* %8, align 4
  br label %148

59:                                               ; preds = %42
  %60 = load %61*, %61** %6, align 8
  %61 = getelementptr inbounds %61, %61* %60, i32 0, i32 0
  %62 = load %52*, %52** %61, align 8
  %63 = getelementptr inbounds %52, %52* %62, i32 0, i32 20
  %64 = load i32, i32* %63, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %138

66:                                               ; preds = %59
  %67 = load %61*, %61** %6, align 8
  %68 = getelementptr inbounds %61, %61* %67, i32 0, i32 0
  %69 = load %52*, %52** %68, align 8
  %70 = getelementptr inbounds %52, %52* %69, i32 0, i32 21
  %71 = load i32, i32* %70, align 8
  switch i32 %71, label %137 [
    i32 3, label %72
    i32 1, label %98
    i32 2, label %114
  ]

72:                                               ; preds = %66
  %73 = load %61*, %61** %6, align 8
  %74 = getelementptr inbounds %61, %61* %73, i32 0, i32 0
  %75 = load %52*, %52** %74, align 8
  %76 = getelementptr inbounds %52, %52* %75, i32 0, i32 12
  %77 = load i64, i64* %76, align 8
  %78 = load %61*, %61** %6, align 8
  %79 = getelementptr inbounds %61, %61* %78, i32 0, i32 0
  %80 = load %52*, %52** %79, align 8
  %81 = getelementptr inbounds %52, %52* %80, i32 0, i32 9
  %82 = load %53*, %53** %81, align 8
  %83 = call %67* @timelib_get_time_zone_info(i64 %77, %53* %82)
  store %67* %83, %67** %7, align 8
  %84 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %84) #15
  %85 = load %29*, %29** %4, align 8
  store %29* %85, %29** %9, align 8
  %86 = load %67*, %67** %7, align 8
  %87 = getelementptr inbounds %67, %67* %86, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = sext i32 %88 to i64
  %90 = load %29*, %29** %9, align 8
  %91 = getelementptr inbounds %29, %29* %90, i32 0, i32 0
  %92 = bitcast %30* %91 to i64*
  store i64 %89, i64* %92, align 8
  %93 = load %29*, %29** %9, align 8
  %94 = getelementptr inbounds %29, %29* %93, i32 0, i32 1
  %95 = bitcast %31* %94 to i32*
  store i32 4, i32* %95, align 8
  %96 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #15
  %97 = load %67*, %67** %7, align 8
  call void @timelib_time_offset_dtor(%67* %97)
  br label %137

98:                                               ; preds = %66
  %99 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %99) #15
  %100 = load %29*, %29** %4, align 8
  store %29* %100, %29** %10, align 8
  %101 = load %61*, %61** %6, align 8
  %102 = getelementptr inbounds %61, %61* %101, i32 0, i32 0
  %103 = load %52*, %52** %102, align 8
  %104 = getelementptr inbounds %52, %52* %103, i32 0, i32 7
  %105 = load i32, i32* %104, align 8
  %106 = sext i32 %105 to i64
  %107 = load %29*, %29** %10, align 8
  %108 = getelementptr inbounds %29, %29* %107, i32 0, i32 0
  %109 = bitcast %30* %108 to i64*
  store i64 %106, i64* %109, align 8
  %110 = load %29*, %29** %10, align 8
  %111 = getelementptr inbounds %29, %29* %110, i32 0, i32 1
  %112 = bitcast %31* %111 to i32*
  store i32 4, i32* %112, align 8
  %113 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #15
  br label %137

114:                                              ; preds = %66
  %115 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %115) #15
  %116 = load %29*, %29** %4, align 8
  store %29* %116, %29** %11, align 8
  %117 = load %61*, %61** %6, align 8
  %118 = getelementptr inbounds %61, %61* %117, i32 0, i32 0
  %119 = load %52*, %52** %118, align 8
  %120 = getelementptr inbounds %52, %52* %119, i32 0, i32 7
  %121 = load i32, i32* %120, align 8
  %122 = load %61*, %61** %6, align 8
  %123 = getelementptr inbounds %61, %61* %122, i32 0, i32 0
  %124 = load %52*, %52** %123, align 8
  %125 = getelementptr inbounds %52, %52* %124, i32 0, i32 10
  %126 = load i32, i32* %125, align 8
  %127 = mul nsw i32 3600, %126
  %128 = add nsw i32 %121, %127
  %129 = sext i32 %128 to i64
  %130 = load %29*, %29** %11, align 8
  %131 = getelementptr inbounds %29, %29* %130, i32 0, i32 0
  %132 = bitcast %30* %131 to i64*
  store i64 %129, i64* %132, align 8
  %133 = load %29*, %29** %11, align 8
  %134 = getelementptr inbounds %29, %29* %133, i32 0, i32 1
  %135 = bitcast %31* %134 to i32*
  store i32 4, i32* %135, align 8
  %136 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #15
  br label %137

137:                                              ; preds = %66, %114, %98, %72
  store i32 1, i32* %8, align 4
  br label %148

138:                                              ; preds = %59
  %139 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %139) #15
  %140 = load %29*, %29** %4, align 8
  store %29* %140, %29** %12, align 8
  %141 = load %29*, %29** %12, align 8
  %142 = getelementptr inbounds %29, %29* %141, i32 0, i32 0
  %143 = bitcast %30* %142 to i64*
  store i64 0, i64* %143, align 8
  %144 = load %29*, %29** %12, align 8
  %145 = getelementptr inbounds %29, %29* %144, i32 0, i32 1
  %146 = bitcast %31* %145 to i32*
  store i32 4, i32* %146, align 8
  %147 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %147) #15
  store i32 1, i32* %8, align 4
  br label %148

148:                                              ; preds = %138, %137, %58, %41
  %149 = bitcast %67** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #15
  %150 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #15
  %151 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %151) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_diff(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %61*, align 8
  %8 = alloca %61*, align 8
  %9 = alloca %68*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %12 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast %61** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = bitcast %68** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #15
  store i8 0, i8* %10, align 1
  %17 = load %1*, %1** %3, align 8
  %18 = getelementptr inbounds %1, %1* %17, i32 0, i32 4
  %19 = getelementptr inbounds %29, %29* %18, i32 0, i32 2
  %20 = bitcast %32* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = load %1*, %1** %3, align 8
  %23 = getelementptr inbounds %1, %1* %22, i32 0, i32 4
  %24 = call zeroext i8 @490(%29* %23)
  %25 = zext i8 %24 to i32
  %26 = icmp eq i32 %25, 8
  br i1 %26, label %27, label %30

27:                                               ; preds = %2
  %28 = load %1*, %1** %3, align 8
  %29 = getelementptr inbounds %1, %1* %28, i32 0, i32 4
  br label %31

30:                                               ; preds = %2
  br label %31

31:                                               ; preds = %30, %27
  %32 = phi %29* [ %29, %27 ], [ null, %30 ]
  %33 = load %6*, %6** @date_ce_interface, align 8
  %34 = load %6*, %6** @date_ce_interface, align 8
  %35 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %21, %29* %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @238, i32 0, i32 0), %29** %5, %6* %33, %29** %6, %6* %34, i8* %10)
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %44

37:                                               ; preds = %31
  br label %38

38:                                               ; preds = %37
  %39 = load %29*, %29** %4, align 8
  %40 = getelementptr inbounds %29, %29* %39, i32 0, i32 1
  %41 = bitcast %31* %40 to i32*
  store i32 2, i32* %41, align 8
  br label %42

42:                                               ; preds = %38
  br label %43

43:                                               ; preds = %42
  store i32 1, i32* %11, align 4
  br label %112

44:                                               ; preds = %31
  %45 = load %29*, %29** %5, align 8
  %46 = getelementptr inbounds %29, %29* %45, i32 0, i32 0
  %47 = bitcast %30* %46 to %15**
  %48 = load %15*, %15** %47, align 8
  %49 = call %61* @489(%15* %48)
  store %61* %49, %61** %7, align 8
  %50 = load %29*, %29** %6, align 8
  %51 = getelementptr inbounds %29, %29* %50, i32 0, i32 0
  %52 = bitcast %30* %51 to %15**
  %53 = load %15*, %15** %52, align 8
  %54 = call %61* @489(%15* %53)
  store %61* %54, %61** %8, align 8
  %55 = load %61*, %61** %7, align 8
  %56 = getelementptr inbounds %61, %61* %55, i32 0, i32 0
  %57 = load %52*, %52** %56, align 8
  %58 = icmp ne %52* %57, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %44
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @239, i32 0, i32 0))
  br label %60

60:                                               ; preds = %59
  %61 = load %29*, %29** %4, align 8
  %62 = getelementptr inbounds %29, %29* %61, i32 0, i32 1
  %63 = bitcast %31* %62 to i32*
  store i32 2, i32* %63, align 8
  br label %64

64:                                               ; preds = %60
  br label %65

65:                                               ; preds = %64
  store i32 1, i32* %11, align 4
  br label %112

66:                                               ; preds = %44
  %67 = load %61*, %61** %8, align 8
  %68 = getelementptr inbounds %61, %61* %67, i32 0, i32 0
  %69 = load %52*, %52** %68, align 8
  %70 = icmp ne %52* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %66
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @239, i32 0, i32 0))
  br label %72

72:                                               ; preds = %71
  %73 = load %29*, %29** %4, align 8
  %74 = getelementptr inbounds %29, %29* %73, i32 0, i32 1
  %75 = bitcast %31* %74 to i32*
  store i32 2, i32* %75, align 8
  br label %76

76:                                               ; preds = %72
  br label %77

77:                                               ; preds = %76
  store i32 1, i32* %11, align 4
  br label %112

78:                                               ; preds = %66
  %79 = load %61*, %61** %7, align 8
  %80 = getelementptr inbounds %61, %61* %79, i32 0, i32 0
  %81 = load %52*, %52** %80, align 8
  call void @timelib_update_ts(%52* %81, %53* null)
  %82 = load %61*, %61** %8, align 8
  %83 = getelementptr inbounds %61, %61* %82, i32 0, i32 0
  %84 = load %52*, %52** %83, align 8
  call void @timelib_update_ts(%52* %84, %53* null)
  %85 = load %6*, %6** @date_ce_interval, align 8
  %86 = load %29*, %29** %4, align 8
  %87 = call %29* @php_date_instantiate(%6* %85, %29* %86)
  %88 = load %29*, %29** %4, align 8
  %89 = getelementptr inbounds %29, %29* %88, i32 0, i32 0
  %90 = bitcast %30* %89 to %15**
  %91 = load %15*, %15** %90, align 8
  %92 = call %68* @505(%15* %91)
  store %68* %92, %68** %9, align 8
  %93 = load %61*, %61** %7, align 8
  %94 = getelementptr inbounds %61, %61* %93, i32 0, i32 0
  %95 = load %52*, %52** %94, align 8
  %96 = load %61*, %61** %8, align 8
  %97 = getelementptr inbounds %61, %61* %96, i32 0, i32 0
  %98 = load %52*, %52** %97, align 8
  %99 = call %59* @timelib_diff(%52* %95, %52* %98)
  %100 = load %68*, %68** %9, align 8
  %101 = getelementptr inbounds %68, %68* %100, i32 0, i32 0
  store %59* %99, %59** %101, align 8
  %102 = load i8, i8* %10, align 1
  %103 = icmp ne i8 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %78
  %105 = load %68*, %68** %9, align 8
  %106 = getelementptr inbounds %68, %68* %105, i32 0, i32 0
  %107 = load %59*, %59** %106, align 8
  %108 = getelementptr inbounds %59, %59* %107, i32 0, i32 10
  store i32 0, i32* %108, align 4
  br label %109

109:                                              ; preds = %104, %78
  %110 = load %68*, %68** %9, align 8
  %111 = getelementptr inbounds %68, %68* %110, i32 0, i32 2
  store i32 1, i32* %111, align 8
  store i32 0, i32* %11, align 4
  br label %112

112:                                              ; preds = %109, %77, %65, %43
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #15
  %113 = bitcast %68** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #15
  %114 = bitcast %61** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #15
  %115 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #15
  %116 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #15
  %117 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #15
  %118 = load i32, i32* %11, align 4
  switch i32 %118, label %120 [
    i32 0, label %119
    i32 1, label %119
  ]

119:                                              ; preds = %112, %112
  ret void

120:                                              ; preds = %112
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_time_set(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %29*, align 8
  %12 = alloca %29*, align 8
  %13 = alloca %63*, align 8
  %14 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %15 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  %17 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #15
  %18 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  store i64 0, i64* %8, align 8
  %19 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #15
  store i64 0, i64* %9, align 8
  %20 = load %1*, %1** %3, align 8
  %21 = getelementptr inbounds %1, %1* %20, i32 0, i32 4
  %22 = getelementptr inbounds %29, %29* %21, i32 0, i32 2
  %23 = bitcast %32* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = load %1*, %1** %3, align 8
  %26 = getelementptr inbounds %1, %1* %25, i32 0, i32 4
  %27 = call zeroext i8 @490(%29* %26)
  %28 = zext i8 %27 to i32
  %29 = icmp eq i32 %28, 8
  br i1 %29, label %30, label %33

30:                                               ; preds = %2
  %31 = load %1*, %1** %3, align 8
  %32 = getelementptr inbounds %1, %1* %31, i32 0, i32 4
  br label %34

33:                                               ; preds = %2
  br label %34

34:                                               ; preds = %33, %30
  %35 = phi %29* [ %32, %30 ], [ null, %33 ]
  %36 = load %6*, %6** @date_ce_date, align 8
  %37 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %24, %29* %35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @234, i32 0, i32 0), %29** %5, %6* %36, i64* %6, i64* %7, i64* %8, i64* %9)
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  br label %40

40:                                               ; preds = %39
  %41 = load %29*, %29** %4, align 8
  %42 = getelementptr inbounds %29, %29* %41, i32 0, i32 1
  %43 = bitcast %31* %42 to i32*
  store i32 2, i32* %43, align 8
  br label %44

44:                                               ; preds = %40
  br label %45

45:                                               ; preds = %44
  store i32 1, i32* %10, align 4
  br label %87

46:                                               ; preds = %34
  %47 = load %29*, %29** %5, align 8
  %48 = load i64, i64* %6, align 8
  %49 = load i64, i64* %7, align 8
  %50 = load i64, i64* %8, align 8
  %51 = load i64, i64* %9, align 8
  %52 = load %29*, %29** %4, align 8
  call void @501(%29* %47, i64 %48, i64 %49, i64 %50, i64 %51, %29* %52)
  %53 = load %29*, %29** %5, align 8
  %54 = call i32 @495(%29* %53)
  br label %55

55:                                               ; preds = %46
  %56 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #15
  %57 = load %29*, %29** %4, align 8
  store %29* %57, %29** %11, align 8
  %58 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #15
  %59 = load %29*, %29** %5, align 8
  store %29* %59, %29** %12, align 8
  %60 = bitcast %63** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #15
  %61 = load %29*, %29** %12, align 8
  %62 = getelementptr inbounds %29, %29* %61, i32 0, i32 0
  %63 = bitcast %30* %62 to %63**
  %64 = load %63*, %63** %63, align 8
  store %63* %64, %63** %13, align 8
  %65 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %65) #15
  %66 = load %29*, %29** %12, align 8
  %67 = getelementptr inbounds %29, %29* %66, i32 0, i32 1
  %68 = bitcast %31* %67 to i32*
  %69 = load i32, i32* %68, align 8
  store i32 %69, i32* %14, align 4
  br label %70

70:                                               ; preds = %55
  %71 = load %63*, %63** %13, align 8
  %72 = load %29*, %29** %11, align 8
  %73 = getelementptr inbounds %29, %29* %72, i32 0, i32 0
  %74 = bitcast %30* %73 to %63**
  store %63* %71, %63** %74, align 8
  %75 = load i32, i32* %14, align 4
  %76 = load %29*, %29** %11, align 8
  %77 = getelementptr inbounds %29, %29* %76, i32 0, i32 1
  %78 = bitcast %31* %77 to i32*
  store i32 %75, i32* %78, align 8
  br label %79

79:                                               ; preds = %70
  br label %80

80:                                               ; preds = %79
  %81 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %81) #15
  %82 = bitcast %63** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #15
  %83 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #15
  %84 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #15
  br label %85

85:                                               ; preds = %80
  br label %86

86:                                               ; preds = %85
  store i32 0, i32* %10, align 4
  br label %87

87:                                               ; preds = %86, %45
  %88 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #15
  %89 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #15
  %90 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #15
  %91 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #15
  %92 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #15
  %93 = load i32, i32* %10, align 4
  switch i32 %93, label %95 [
    i32 0, label %94
    i32 1, label %94
  ]

94:                                               ; preds = %87, %87
  ret void

95:                                               ; preds = %87
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_date_set(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %29*, align 8
  %11 = alloca %29*, align 8
  %12 = alloca %63*, align 8
  %13 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %14 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  %17 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #15
  %18 = load %1*, %1** %3, align 8
  %19 = getelementptr inbounds %1, %1* %18, i32 0, i32 4
  %20 = getelementptr inbounds %29, %29* %19, i32 0, i32 2
  %21 = bitcast %32* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = load %1*, %1** %3, align 8
  %24 = getelementptr inbounds %1, %1* %23, i32 0, i32 4
  %25 = call zeroext i8 @490(%29* %24)
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 8
  br i1 %27, label %28, label %31

28:                                               ; preds = %2
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  br label %32

31:                                               ; preds = %2
  br label %32

32:                                               ; preds = %31, %28
  %33 = phi %29* [ %30, %28 ], [ null, %31 ]
  %34 = load %6*, %6** @date_ce_date, align 8
  %35 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %22, %29* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @235, i32 0, i32 0), %29** %5, %6* %34, i64* %6, i64* %7, i64* %8)
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  br label %38

38:                                               ; preds = %37
  %39 = load %29*, %29** %4, align 8
  %40 = getelementptr inbounds %29, %29* %39, i32 0, i32 1
  %41 = bitcast %31* %40 to i32*
  store i32 2, i32* %41, align 8
  br label %42

42:                                               ; preds = %38
  br label %43

43:                                               ; preds = %42
  store i32 1, i32* %9, align 4
  br label %84

44:                                               ; preds = %32
  %45 = load %29*, %29** %5, align 8
  %46 = load i64, i64* %6, align 8
  %47 = load i64, i64* %7, align 8
  %48 = load i64, i64* %8, align 8
  %49 = load %29*, %29** %4, align 8
  call void @502(%29* %45, i64 %46, i64 %47, i64 %48, %29* %49)
  %50 = load %29*, %29** %5, align 8
  %51 = call i32 @495(%29* %50)
  br label %52

52:                                               ; preds = %44
  %53 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #15
  %54 = load %29*, %29** %4, align 8
  store %29* %54, %29** %10, align 8
  %55 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #15
  %56 = load %29*, %29** %5, align 8
  store %29* %56, %29** %11, align 8
  %57 = bitcast %63** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #15
  %58 = load %29*, %29** %11, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 0
  %60 = bitcast %30* %59 to %63**
  %61 = load %63*, %63** %60, align 8
  store %63* %61, %63** %12, align 8
  %62 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #15
  %63 = load %29*, %29** %11, align 8
  %64 = getelementptr inbounds %29, %29* %63, i32 0, i32 1
  %65 = bitcast %31* %64 to i32*
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %13, align 4
  br label %67

67:                                               ; preds = %52
  %68 = load %63*, %63** %12, align 8
  %69 = load %29*, %29** %10, align 8
  %70 = getelementptr inbounds %29, %29* %69, i32 0, i32 0
  %71 = bitcast %30* %70 to %63**
  store %63* %68, %63** %71, align 8
  %72 = load i32, i32* %13, align 4
  %73 = load %29*, %29** %10, align 8
  %74 = getelementptr inbounds %29, %29* %73, i32 0, i32 1
  %75 = bitcast %31* %74 to i32*
  store i32 %72, i32* %75, align 8
  br label %76

76:                                               ; preds = %67
  br label %77

77:                                               ; preds = %76
  %78 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %78) #15
  %79 = bitcast %63** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #15
  %80 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #15
  %81 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81) #15
  br label %82

82:                                               ; preds = %77
  br label %83

83:                                               ; preds = %82
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %83, %43
  %85 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #15
  %86 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #15
  %87 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #15
  %88 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #15
  %89 = load i32, i32* %9, align 4
  switch i32 %89, label %91 [
    i32 0, label %90
    i32 1, label %90
  ]

90:                                               ; preds = %84, %84
  ret void

91:                                               ; preds = %84
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_isodate_set(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %29*, align 8
  %11 = alloca %29*, align 8
  %12 = alloca %63*, align 8
  %13 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %14 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  %17 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #15
  store i64 1, i64* %8, align 8
  %18 = load %1*, %1** %3, align 8
  %19 = getelementptr inbounds %1, %1* %18, i32 0, i32 4
  %20 = getelementptr inbounds %29, %29* %19, i32 0, i32 2
  %21 = bitcast %32* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = load %1*, %1** %3, align 8
  %24 = getelementptr inbounds %1, %1* %23, i32 0, i32 4
  %25 = call zeroext i8 @490(%29* %24)
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 8
  br i1 %27, label %28, label %31

28:                                               ; preds = %2
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  br label %32

31:                                               ; preds = %2
  br label %32

32:                                               ; preds = %31, %28
  %33 = phi %29* [ %30, %28 ], [ null, %31 ]
  %34 = load %6*, %6** @date_ce_date, align 8
  %35 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %22, %29* %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @236, i32 0, i32 0), %29** %5, %6* %34, i64* %6, i64* %7, i64* %8)
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  br label %38

38:                                               ; preds = %37
  %39 = load %29*, %29** %4, align 8
  %40 = getelementptr inbounds %29, %29* %39, i32 0, i32 1
  %41 = bitcast %31* %40 to i32*
  store i32 2, i32* %41, align 8
  br label %42

42:                                               ; preds = %38
  br label %43

43:                                               ; preds = %42
  store i32 1, i32* %9, align 4
  br label %84

44:                                               ; preds = %32
  %45 = load %29*, %29** %5, align 8
  %46 = load i64, i64* %6, align 8
  %47 = load i64, i64* %7, align 8
  %48 = load i64, i64* %8, align 8
  %49 = load %29*, %29** %4, align 8
  call void @503(%29* %45, i64 %46, i64 %47, i64 %48, %29* %49)
  %50 = load %29*, %29** %5, align 8
  %51 = call i32 @495(%29* %50)
  br label %52

52:                                               ; preds = %44
  %53 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #15
  %54 = load %29*, %29** %4, align 8
  store %29* %54, %29** %10, align 8
  %55 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #15
  %56 = load %29*, %29** %5, align 8
  store %29* %56, %29** %11, align 8
  %57 = bitcast %63** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #15
  %58 = load %29*, %29** %11, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 0
  %60 = bitcast %30* %59 to %63**
  %61 = load %63*, %63** %60, align 8
  store %63* %61, %63** %12, align 8
  %62 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #15
  %63 = load %29*, %29** %11, align 8
  %64 = getelementptr inbounds %29, %29* %63, i32 0, i32 1
  %65 = bitcast %31* %64 to i32*
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %13, align 4
  br label %67

67:                                               ; preds = %52
  %68 = load %63*, %63** %12, align 8
  %69 = load %29*, %29** %10, align 8
  %70 = getelementptr inbounds %29, %29* %69, i32 0, i32 0
  %71 = bitcast %30* %70 to %63**
  store %63* %68, %63** %71, align 8
  %72 = load i32, i32* %13, align 4
  %73 = load %29*, %29** %10, align 8
  %74 = getelementptr inbounds %29, %29* %73, i32 0, i32 1
  %75 = bitcast %31* %74 to i32*
  store i32 %72, i32* %75, align 8
  br label %76

76:                                               ; preds = %67
  br label %77

77:                                               ; preds = %76
  %78 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %78) #15
  %79 = bitcast %63** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #15
  %80 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #15
  %81 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81) #15
  br label %82

82:                                               ; preds = %77
  br label %83

83:                                               ; preds = %82
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %83, %43
  %85 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #15
  %86 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #15
  %87 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #15
  %88 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #15
  %89 = load i32, i32* %9, align 4
  switch i32 %89, label %91 [
    i32 0, label %90
    i32 1, label %90
  ]

90:                                               ; preds = %84, %84
  ret void

91:                                               ; preds = %84
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_timestamp_set(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %29*, align 8
  %9 = alloca %29*, align 8
  %10 = alloca %63*, align 8
  %11 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %12 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %1*, %1** %3, align 8
  %15 = getelementptr inbounds %1, %1* %14, i32 0, i32 4
  %16 = getelementptr inbounds %29, %29* %15, i32 0, i32 2
  %17 = bitcast %32* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = load %1*, %1** %3, align 8
  %20 = getelementptr inbounds %1, %1* %19, i32 0, i32 4
  %21 = call zeroext i8 @490(%29* %20)
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 8
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = load %1*, %1** %3, align 8
  %26 = getelementptr inbounds %1, %1* %25, i32 0, i32 4
  br label %28

27:                                               ; preds = %2
  br label %28

28:                                               ; preds = %27, %24
  %29 = phi %29* [ %26, %24 ], [ null, %27 ]
  %30 = load %6*, %6** @date_ce_date, align 8
  %31 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %18, %29* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @237, i32 0, i32 0), %29** %5, %6* %30, i64* %6)
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  br label %34

34:                                               ; preds = %33
  %35 = load %29*, %29** %4, align 8
  %36 = getelementptr inbounds %29, %29* %35, i32 0, i32 1
  %37 = bitcast %31* %36 to i32*
  store i32 2, i32* %37, align 8
  br label %38

38:                                               ; preds = %34
  br label %39

39:                                               ; preds = %38
  store i32 1, i32* %7, align 4
  br label %78

40:                                               ; preds = %28
  %41 = load %29*, %29** %5, align 8
  %42 = load i64, i64* %6, align 8
  %43 = load %29*, %29** %4, align 8
  call void @504(%29* %41, i64 %42, %29* %43)
  %44 = load %29*, %29** %5, align 8
  %45 = call i32 @495(%29* %44)
  br label %46

46:                                               ; preds = %40
  %47 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #15
  %48 = load %29*, %29** %4, align 8
  store %29* %48, %29** %8, align 8
  %49 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #15
  %50 = load %29*, %29** %5, align 8
  store %29* %50, %29** %9, align 8
  %51 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #15
  %52 = load %29*, %29** %9, align 8
  %53 = getelementptr inbounds %29, %29* %52, i32 0, i32 0
  %54 = bitcast %30* %53 to %63**
  %55 = load %63*, %63** %54, align 8
  store %63* %55, %63** %10, align 8
  %56 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %56) #15
  %57 = load %29*, %29** %9, align 8
  %58 = getelementptr inbounds %29, %29* %57, i32 0, i32 1
  %59 = bitcast %31* %58 to i32*
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %11, align 4
  br label %61

61:                                               ; preds = %46
  %62 = load %63*, %63** %10, align 8
  %63 = load %29*, %29** %8, align 8
  %64 = getelementptr inbounds %29, %29* %63, i32 0, i32 0
  %65 = bitcast %30* %64 to %63**
  store %63* %62, %63** %65, align 8
  %66 = load i32, i32* %11, align 4
  %67 = load %29*, %29** %8, align 8
  %68 = getelementptr inbounds %29, %29* %67, i32 0, i32 1
  %69 = bitcast %31* %68 to i32*
  store i32 %66, i32* %69, align 8
  br label %70

70:                                               ; preds = %61
  br label %71

71:                                               ; preds = %70
  %72 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %72) #15
  %73 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #15
  %74 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #15
  %75 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #15
  br label %76

76:                                               ; preds = %71
  br label %77

77:                                               ; preds = %76
  store i32 0, i32* %7, align 4
  br label %78

78:                                               ; preds = %77, %39
  %79 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #15
  %80 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #15
  %81 = load i32, i32* %7, align 4
  switch i32 %81, label %83 [
    i32 0, label %82
    i32 1, label %82
  ]

82:                                               ; preds = %78, %78
  ret void

83:                                               ; preds = %78
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_timestamp_get(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %11 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #15
  %15 = load %1*, %1** %3, align 8
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 4
  %17 = getelementptr inbounds %29, %29* %16, i32 0, i32 2
  %18 = bitcast %32* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = load %1*, %1** %3, align 8
  %21 = getelementptr inbounds %1, %1* %20, i32 0, i32 4
  %22 = call zeroext i8 @490(%29* %21)
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %23, 8
  br i1 %24, label %25, label %28

25:                                               ; preds = %2
  %26 = load %1*, %1** %3, align 8
  %27 = getelementptr inbounds %1, %1* %26, i32 0, i32 4
  br label %29

28:                                               ; preds = %2
  br label %29

29:                                               ; preds = %28, %25
  %30 = phi %29* [ %27, %25 ], [ null, %28 ]
  %31 = load %6*, %6** @date_ce_interface, align 8
  %32 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %19, %29* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @233, i32 0, i32 0), %29** %5, %6* %31)
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  br label %35

35:                                               ; preds = %34
  %36 = load %29*, %29** %4, align 8
  %37 = getelementptr inbounds %29, %29* %36, i32 0, i32 1
  %38 = bitcast %31* %37 to i32*
  store i32 2, i32* %38, align 8
  br label %39

39:                                               ; preds = %35
  br label %40

40:                                               ; preds = %39
  store i32 1, i32* %9, align 4
  br label %87

41:                                               ; preds = %29
  %42 = load %29*, %29** %5, align 8
  %43 = getelementptr inbounds %29, %29* %42, i32 0, i32 0
  %44 = bitcast %30* %43 to %15**
  %45 = load %15*, %15** %44, align 8
  %46 = call %61* @489(%15* %45)
  store %61* %46, %61** %6, align 8
  %47 = load %61*, %61** %6, align 8
  %48 = getelementptr inbounds %61, %61* %47, i32 0, i32 0
  %49 = load %52*, %52** %48, align 8
  %50 = icmp ne %52* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %41
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %52

52:                                               ; preds = %51
  %53 = load %29*, %29** %4, align 8
  %54 = getelementptr inbounds %29, %29* %53, i32 0, i32 1
  %55 = bitcast %31* %54 to i32*
  store i32 2, i32* %55, align 8
  br label %56

56:                                               ; preds = %52
  br label %57

57:                                               ; preds = %56
  store i32 1, i32* %9, align 4
  br label %87

58:                                               ; preds = %41
  %59 = load %61*, %61** %6, align 8
  %60 = getelementptr inbounds %61, %61* %59, i32 0, i32 0
  %61 = load %52*, %52** %60, align 8
  call void @timelib_update_ts(%52* %61, %53* null)
  %62 = load %61*, %61** %6, align 8
  %63 = getelementptr inbounds %61, %61* %62, i32 0, i32 0
  %64 = load %52*, %52** %63, align 8
  %65 = call i64 @timelib_date_to_int(%52* %64, i32* %8)
  store i64 %65, i64* %7, align 8
  %66 = load i32, i32* %8, align 4
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %58
  br label %69

69:                                               ; preds = %68
  %70 = load %29*, %29** %4, align 8
  %71 = getelementptr inbounds %29, %29* %70, i32 0, i32 1
  %72 = bitcast %31* %71 to i32*
  store i32 2, i32* %72, align 8
  br label %73

73:                                               ; preds = %69
  br label %74

74:                                               ; preds = %73
  store i32 1, i32* %9, align 4
  br label %87

75:                                               ; preds = %58
  %76 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #15
  %77 = load %29*, %29** %4, align 8
  store %29* %77, %29** %10, align 8
  %78 = load i64, i64* %7, align 8
  %79 = load %29*, %29** %10, align 8
  %80 = getelementptr inbounds %29, %29* %79, i32 0, i32 0
  %81 = bitcast %30* %80 to i64*
  store i64 %78, i64* %81, align 8
  %82 = load %29*, %29** %10, align 8
  %83 = getelementptr inbounds %29, %29* %82, i32 0, i32 1
  %84 = bitcast %31* %83 to i32*
  store i32 4, i32* %84, align 8
  %85 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #15
  br label %86

86:                                               ; preds = %75
  store i32 0, i32* %9, align 4
  br label %87

87:                                               ; preds = %86, %74, %57, %40
  %88 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %88) #15
  %89 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #15
  %90 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #15
  %91 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #15
  %92 = load i32, i32* %9, align 4
  switch i32 %92, label %94 [
    i32 0, label %93
    i32 1, label %93
  ]

93:                                               ; preds = %87, %87
  ret void

94:                                               ; preds = %87
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_timezone_open(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca %64*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %29*, align 8
  %13 = alloca %29*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %20 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #15
  store i32 0, i32* %7, align 4
  %24 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #15
  store i32 1, i32* %8, align 4
  %25 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 1, i32* %9, align 4
  %26 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  %27 = load %1*, %1** %3, align 8
  %28 = getelementptr inbounds %1, %1* %27, i32 0, i32 4
  %29 = getelementptr inbounds %29, %29* %28, i32 0, i32 2
  %30 = bitcast %32* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #15
  %33 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #15
  %34 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #15
  store %29* null, %29** %13, align 8
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #15
  store i32 0, i32* %14, align 4
  %36 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  store i8 0, i8* %17, align 1
  %37 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %18, align 4
  %38 = load i32, i32* %11, align 4
  %39 = load %29*, %29** %12, align 8
  %40 = load %29*, %29** %13, align 8
  %41 = load i32, i32* %14, align 4
  %42 = load i8*, i8** %15, align 8
  %43 = load i8, i8* %16, align 1
  %44 = load i8, i8* %17, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %10, align 4
  %47 = load i32, i32* %8, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %10, align 4
  %57 = load i32, i32* %9, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %9, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %10, align 4
  %76 = load i32, i32* %8, align 4
  %77 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %18, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %11, align 4
  %79 = load %1*, %1** %3, align 8
  %80 = bitcast %1* %79 to %29*
  %81 = getelementptr inbounds %29, %29* %80, i64 4
  store %29* %81, %29** %12, align 8
  %82 = load i32, i32* %11, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %11, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %11, align 4
  %86 = load i32, i32* %8, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %17, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %11, align 4
  %105 = load i32, i32* %8, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %17, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %17, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %11, align 4
  %126 = load i32, i32* %10, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %29*, %29** %12, align 8
  %138 = getelementptr inbounds %29, %29* %137, i32 1
  store %29* %138, %29** %12, align 8
  %139 = load %29*, %29** %12, align 8
  store %29* %139, %29** %13, align 8
  %140 = load %29*, %29** %13, align 8
  %141 = call i32 @468(%29* %140, %28** %5, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %18, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %191

162:                                              ; preds = %153
  %163 = load i32, i32* %18, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %11, align 4
  %167 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %18, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %11, align 4
  %173 = load i8*, i8** %15, align 8
  %174 = load %29*, %29** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %29* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %18, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %11, align 4
  %180 = load i32, i32* %14, align 4
  %181 = load %29*, %29** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %29* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  br label %185

185:                                              ; preds = %184
  %186 = load %29*, %29** %4, align 8
  %187 = getelementptr inbounds %29, %29* %186, i32 0, i32 1
  %188 = bitcast %31* %187 to i32*
  store i32 2, i32* %188, align 8
  br label %189

189:                                              ; preds = %185
  br label %190

190:                                              ; preds = %189
  store i32 1, i32* %19, align 4
  br label %192

191:                                              ; preds = %153
  store i32 0, i32* %19, align 4
  br label %192

192:                                              ; preds = %191, %190
  %193 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #15
  %194 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #15
  %195 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #15
  %196 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #15
  %197 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #15
  %198 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #15
  %199 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #15
  %200 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #15
  %201 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #15
  %202 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #15
  %203 = load i32, i32* %19, align 4
  switch i32 %203, label %232 [
    i32 0, label %204
  ]

204:                                              ; preds = %192
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  %207 = load %6*, %6** @date_ce_timezone, align 8
  %208 = load %29*, %29** %4, align 8
  %209 = call %29* @php_date_instantiate(%6* %207, %29* %208)
  %210 = getelementptr inbounds %29, %29* %209, i32 0, i32 0
  %211 = bitcast %30* %210 to %15**
  %212 = load %15*, %15** %211, align 8
  %213 = call %64* @484(%15* %212)
  store %64* %213, %64** %6, align 8
  %214 = load %64*, %64** %6, align 8
  %215 = load %28*, %28** %5, align 8
  %216 = getelementptr inbounds %28, %28* %215, i32 0, i32 3
  %217 = getelementptr inbounds [1 x i8], [1 x i8]* %216, i32 0, i32 0
  %218 = load %28*, %28** %5, align 8
  %219 = getelementptr inbounds %28, %28* %218, i32 0, i32 2
  %220 = load i64, i64* %219, align 8
  %221 = call i32 @506(%64* %214, i8* %217, i64 %220)
  %222 = icmp ne i32 0, %221
  br i1 %222, label %223, label %231

223:                                              ; preds = %206
  %224 = load %29*, %29** %4, align 8
  call void @_zval_ptr_dtor(%29* %224)
  br label %225

225:                                              ; preds = %223
  %226 = load %29*, %29** %4, align 8
  %227 = getelementptr inbounds %29, %29* %226, i32 0, i32 1
  %228 = bitcast %31* %227 to i32*
  store i32 2, i32* %228, align 8
  br label %229

229:                                              ; preds = %225
  br label %230

230:                                              ; preds = %229
  store i32 1, i32* %19, align 4
  br label %232

231:                                              ; preds = %206
  store i32 0, i32* %19, align 4
  br label %232

232:                                              ; preds = %231, %230, %192
  %233 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %233) #15
  %234 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234) #15
  %235 = load i32, i32* %19, align 4
  switch i32 %235, label %237 [
    i32 0, label %236
    i32 1, label %236
  ]

236:                                              ; preds = %232, %232
  ret void

237:                                              ; preds = %232
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_timezone_name_get(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %64*, align 8
  %7 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = load %1*, %1** %3, align 8
  %11 = getelementptr inbounds %1, %1* %10, i32 0, i32 4
  %12 = getelementptr inbounds %29, %29* %11, i32 0, i32 2
  %13 = bitcast %32* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = load %1*, %1** %3, align 8
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 4
  %17 = call zeroext i8 @490(%29* %16)
  %18 = zext i8 %17 to i32
  %19 = icmp eq i32 %18, 8
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = load %1*, %1** %3, align 8
  %22 = getelementptr inbounds %1, %1* %21, i32 0, i32 4
  br label %24

23:                                               ; preds = %2
  br label %24

24:                                               ; preds = %23, %20
  %25 = phi %29* [ %22, %20 ], [ null, %23 ]
  %26 = load %6*, %6** @date_ce_timezone, align 8
  %27 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %14, %29* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @233, i32 0, i32 0), %29** %5, %6* %26)
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  br label %30

30:                                               ; preds = %29
  %31 = load %29*, %29** %4, align 8
  %32 = getelementptr inbounds %29, %29* %31, i32 0, i32 1
  %33 = bitcast %31* %32 to i32*
  store i32 2, i32* %33, align 8
  br label %34

34:                                               ; preds = %30
  br label %35

35:                                               ; preds = %34
  store i32 1, i32* %7, align 4
  br label %56

36:                                               ; preds = %24
  %37 = load %29*, %29** %5, align 8
  %38 = getelementptr inbounds %29, %29* %37, i32 0, i32 0
  %39 = bitcast %30* %38 to %15**
  %40 = load %15*, %15** %39, align 8
  %41 = call %64* @484(%15* %40)
  store %64* %41, %64** %6, align 8
  %42 = load %64*, %64** %6, align 8
  %43 = getelementptr inbounds %64, %64* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %36
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @241, i32 0, i32 0))
  br label %47

47:                                               ; preds = %46
  %48 = load %29*, %29** %4, align 8
  %49 = getelementptr inbounds %29, %29* %48, i32 0, i32 1
  %50 = bitcast %31* %49 to i32*
  store i32 2, i32* %50, align 8
  br label %51

51:                                               ; preds = %47
  br label %52

52:                                               ; preds = %51
  store i32 1, i32* %7, align 4
  br label %56

53:                                               ; preds = %36
  %54 = load %64*, %64** %6, align 8
  %55 = load %29*, %29** %4, align 8
  call void @509(%64* %54, %29* %55)
  store i32 0, i32* %7, align 4
  br label %56

56:                                               ; preds = %53, %52, %35
  %57 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #15
  %58 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #15
  %59 = load i32, i32* %7, align 4
  switch i32 %59, label %61 [
    i32 0, label %60
    i32 1, label %60
  ]

60:                                               ; preds = %56, %56
  ret void

61:                                               ; preds = %56
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_timezone_name_from_abbr(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca %29*, align 8
  %24 = alloca %28*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %25 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  %26 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  %27 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #15
  store i64 -1, i64* %7, align 8
  %28 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #15
  store i64 -1, i64* %8, align 8
  br label %29

29:                                               ; preds = %2
  %30 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  store i32 0, i32* %9, align 4
  %31 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #15
  store i32 1, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #15
  store i32 3, i32* %11, align 4
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #15
  %34 = load %1*, %1** %3, align 8
  %35 = getelementptr inbounds %1, %1* %34, i32 0, i32 4
  %36 = getelementptr inbounds %29, %29* %35, i32 0, i32 2
  %37 = bitcast %32* %36 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %12, align 4
  %39 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  %40 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  %41 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #15
  store %29* null, %29** %15, align 8
  %42 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #15
  store i32 0, i32* %16, align 4
  %43 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #15
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  store i8 0, i8* %19, align 1
  %44 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #15
  store i32 0, i32* %20, align 4
  %45 = load i32, i32* %13, align 4
  %46 = load %29*, %29** %14, align 8
  %47 = load %29*, %29** %15, align 8
  %48 = load i32, i32* %16, align 4
  %49 = load i8*, i8** %17, align 8
  %50 = load i8, i8* %18, align 1
  %51 = load i8, i8* %19, align 1
  br label %52

52:                                               ; preds = %29
  %53 = load i32, i32* %12, align 4
  %54 = load i32, i32* %10, align 4
  %55 = icmp slt i32 %53, %54
  %56 = xor i1 %55, true
  %57 = xor i1 %56, true
  %58 = zext i1 %57 to i32
  %59 = sext i32 %58 to i64
  %60 = call i64 @llvm.expect.i64(i64 %59, i64 0)
  %61 = icmp ne i64 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %52
  %63 = load i32, i32* %12, align 4
  %64 = load i32, i32* %11, align 4
  %65 = icmp sgt i32 %63, %64
  %66 = xor i1 %65, true
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0)
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %85

72:                                               ; preds = %62
  %73 = load i32, i32* %11, align 4
  %74 = icmp sge i32 %73, 0
  %75 = xor i1 %74, true
  %76 = xor i1 %75, true
  %77 = zext i1 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = call i64 @llvm.expect.i64(i64 %78, i64 1)
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %72, %52
  %82 = load i32, i32* %12, align 4
  %83 = load i32, i32* %10, align 4
  %84 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %82, i32 %83, i32 %84)
  store i32 1, i32* %20, align 4
  br label %300

85:                                               ; preds = %72, %62
  store i32 0, i32* %13, align 4
  %86 = load %1*, %1** %3, align 8
  %87 = bitcast %1* %86 to %29*
  %88 = getelementptr inbounds %29, %29* %87, i64 4
  store %29* %88, %29** %14, align 8
  %89 = load i32, i32* %13, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %13, align 4
  br label %91

91:                                               ; preds = %85
  %92 = load i32, i32* %13, align 4
  %93 = load i32, i32* %10, align 4
  %94 = icmp sle i32 %92, %93
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = load i8, i8* %19, align 1
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %97, 1
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi i1 [ true, %91 ], [ %98, %95 ]
  %101 = xor i1 %100, true
  %102 = zext i1 %101 to i32
  %103 = sext i32 %102 to i64
  %104 = call i64 @llvm.expect.i64(i64 %103, i64 0)
  %105 = icmp ne i64 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %99
  unreachable

107:                                              ; preds = %99
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %13, align 4
  %112 = load i32, i32* %10, align 4
  %113 = icmp sgt i32 %111, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load i8, i8* %19, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp eq i32 %116, 0
  br label %118

118:                                              ; preds = %114, %110
  %119 = phi i1 [ true, %110 ], [ %117, %114 ]
  %120 = xor i1 %119, true
  %121 = zext i1 %120 to i32
  %122 = sext i32 %121 to i64
  %123 = call i64 @llvm.expect.i64(i64 %122, i64 0)
  %124 = icmp ne i64 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %118
  unreachable

126:                                              ; preds = %118
  br label %127

127:                                              ; preds = %126
  br label %128

128:                                              ; preds = %127
  %129 = load i8, i8* %19, align 1
  %130 = icmp ne i8 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %128
  %132 = load i32, i32* %13, align 4
  %133 = load i32, i32* %12, align 4
  %134 = icmp sgt i32 %132, %133
  %135 = xor i1 %134, true
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %131
  br label %300

142:                                              ; preds = %131
  br label %143

143:                                              ; preds = %142, %128
  %144 = load %29*, %29** %14, align 8
  %145 = getelementptr inbounds %29, %29* %144, i32 1
  store %29* %145, %29** %14, align 8
  %146 = load %29*, %29** %14, align 8
  store %29* %146, %29** %15, align 8
  %147 = load %29*, %29** %15, align 8
  %148 = call i32 @468(%29* %147, %28** %5, i32 0)
  %149 = icmp ne i32 %148, 0
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %143
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %300

158:                                              ; preds = %143
  store i8 1, i8* %19, align 1
  %159 = load i32, i32* %13, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %13, align 4
  br label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %13, align 4
  %163 = load i32, i32* %10, align 4
  %164 = icmp sle i32 %162, %163
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = load i8, i8* %19, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp eq i32 %167, 1
  br label %169

169:                                              ; preds = %165, %161
  %170 = phi i1 [ true, %161 ], [ %168, %165 ]
  %171 = xor i1 %170, true
  %172 = zext i1 %171 to i32
  %173 = sext i32 %172 to i64
  %174 = call i64 @llvm.expect.i64(i64 %173, i64 0)
  %175 = icmp ne i64 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %169
  unreachable

177:                                              ; preds = %169
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  br label %180

180:                                              ; preds = %179
  %181 = load i32, i32* %13, align 4
  %182 = load i32, i32* %10, align 4
  %183 = icmp sgt i32 %181, %182
  br i1 %183, label %188, label %184

184:                                              ; preds = %180
  %185 = load i8, i8* %19, align 1
  %186 = zext i8 %185 to i32
  %187 = icmp eq i32 %186, 0
  br label %188

188:                                              ; preds = %184, %180
  %189 = phi i1 [ true, %180 ], [ %187, %184 ]
  %190 = xor i1 %189, true
  %191 = zext i1 %190 to i32
  %192 = sext i32 %191 to i64
  %193 = call i64 @llvm.expect.i64(i64 %192, i64 0)
  %194 = icmp ne i64 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %188
  unreachable

196:                                              ; preds = %188
  br label %197

197:                                              ; preds = %196
  br label %198

198:                                              ; preds = %197
  %199 = load i8, i8* %19, align 1
  %200 = icmp ne i8 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %198
  %202 = load i32, i32* %13, align 4
  %203 = load i32, i32* %12, align 4
  %204 = icmp sgt i32 %202, %203
  %205 = xor i1 %204, true
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %201
  br label %300

212:                                              ; preds = %201
  br label %213

213:                                              ; preds = %212, %198
  %214 = load %29*, %29** %14, align 8
  %215 = getelementptr inbounds %29, %29* %214, i32 1
  store %29* %215, %29** %14, align 8
  %216 = load %29*, %29** %14, align 8
  store %29* %216, %29** %15, align 8
  %217 = load %29*, %29** %15, align 8
  %218 = call i32 @469(%29* %217, i64* %7, i8* %18, i32 0, i32 0)
  %219 = icmp ne i32 %218, 0
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = xor i1 %221, true
  %223 = zext i1 %222 to i32
  %224 = sext i32 %223 to i64
  %225 = call i64 @llvm.expect.i64(i64 %224, i64 0)
  %226 = icmp ne i64 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %213
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %300

228:                                              ; preds = %213
  %229 = load i32, i32* %13, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %13, align 4
  br label %231

231:                                              ; preds = %228
  %232 = load i32, i32* %13, align 4
  %233 = load i32, i32* %10, align 4
  %234 = icmp sle i32 %232, %233
  br i1 %234, label %239, label %235

235:                                              ; preds = %231
  %236 = load i8, i8* %19, align 1
  %237 = zext i8 %236 to i32
  %238 = icmp eq i32 %237, 1
  br label %239

239:                                              ; preds = %235, %231
  %240 = phi i1 [ true, %231 ], [ %238, %235 ]
  %241 = xor i1 %240, true
  %242 = zext i1 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call i64 @llvm.expect.i64(i64 %243, i64 0)
  %245 = icmp ne i64 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %239
  unreachable

247:                                              ; preds = %239
  br label %248

248:                                              ; preds = %247
  br label %249

249:                                              ; preds = %248
  br label %250

250:                                              ; preds = %249
  %251 = load i32, i32* %13, align 4
  %252 = load i32, i32* %10, align 4
  %253 = icmp sgt i32 %251, %252
  br i1 %253, label %258, label %254

254:                                              ; preds = %250
  %255 = load i8, i8* %19, align 1
  %256 = zext i8 %255 to i32
  %257 = icmp eq i32 %256, 0
  br label %258

258:                                              ; preds = %254, %250
  %259 = phi i1 [ true, %250 ], [ %257, %254 ]
  %260 = xor i1 %259, true
  %261 = zext i1 %260 to i32
  %262 = sext i32 %261 to i64
  %263 = call i64 @llvm.expect.i64(i64 %262, i64 0)
  %264 = icmp ne i64 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %258
  unreachable

266:                                              ; preds = %258
  br label %267

267:                                              ; preds = %266
  br label %268

268:                                              ; preds = %267
  %269 = load i8, i8* %19, align 1
  %270 = icmp ne i8 %269, 0
  br i1 %270, label %271, label %283

271:                                              ; preds = %268
  %272 = load i32, i32* %13, align 4
  %273 = load i32, i32* %12, align 4
  %274 = icmp sgt i32 %272, %273
  %275 = xor i1 %274, true
  %276 = xor i1 %275, true
  %277 = zext i1 %276 to i32
  %278 = sext i32 %277 to i64
  %279 = call i64 @llvm.expect.i64(i64 %278, i64 0)
  %280 = icmp ne i64 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %271
  br label %300

282:                                              ; preds = %271
  br label %283

283:                                              ; preds = %282, %268
  %284 = load %29*, %29** %14, align 8
  %285 = getelementptr inbounds %29, %29* %284, i32 1
  store %29* %285, %29** %14, align 8
  %286 = load %29*, %29** %14, align 8
  store %29* %286, %29** %15, align 8
  %287 = load %29*, %29** %15, align 8
  %288 = call i32 @469(%29* %287, i64* %8, i8* %18, i32 0, i32 0)
  %289 = icmp ne i32 %288, 0
  %290 = xor i1 %289, true
  %291 = xor i1 %290, true
  %292 = xor i1 %291, true
  %293 = zext i1 %292 to i32
  %294 = sext i32 %293 to i64
  %295 = call i64 @llvm.expect.i64(i64 %294, i64 0)
  %296 = icmp ne i64 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %283
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %300

298:                                              ; preds = %283
  br label %299

299:                                              ; preds = %298
  br label %300

300:                                              ; preds = %299, %297, %281, %227, %211, %157, %141, %81
  %301 = load i32, i32* %20, align 4
  %302 = icmp ne i32 %301, 0
  %303 = xor i1 %302, true
  %304 = xor i1 %303, true
  %305 = zext i1 %304 to i32
  %306 = sext i32 %305 to i64
  %307 = call i64 @llvm.expect.i64(i64 %306, i64 0)
  %308 = icmp ne i64 %307, 0
  br i1 %308, label %309, label %338

309:                                              ; preds = %300
  %310 = load i32, i32* %20, align 4
  %311 = icmp eq i32 %310, 2
  br i1 %311, label %312, label %315

312:                                              ; preds = %309
  %313 = load i32, i32* %13, align 4
  %314 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %313, i8* %314)
  br label %331

315:                                              ; preds = %309
  %316 = load i32, i32* %20, align 4
  %317 = icmp eq i32 %316, 3
  br i1 %317, label %318, label %322

318:                                              ; preds = %315
  %319 = load i32, i32* %13, align 4
  %320 = load i8*, i8** %17, align 8
  %321 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %319, i8* %320, %29* %321)
  br label %330

322:                                              ; preds = %315
  %323 = load i32, i32* %20, align 4
  %324 = icmp eq i32 %323, 4
  br i1 %324, label %325, label %329

325:                                              ; preds = %322
  %326 = load i32, i32* %13, align 4
  %327 = load i32, i32* %16, align 4
  %328 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %326, i32 %327, %29* %328)
  br label %329

329:                                              ; preds = %325, %322
  br label %330

330:                                              ; preds = %329, %318
  br label %331

331:                                              ; preds = %330, %312
  br label %332

332:                                              ; preds = %331
  %333 = load %29*, %29** %4, align 8
  %334 = getelementptr inbounds %29, %29* %333, i32 0, i32 1
  %335 = bitcast %31* %334 to i32*
  store i32 2, i32* %335, align 8
  br label %336

336:                                              ; preds = %332
  br label %337

337:                                              ; preds = %336
  store i32 1, i32* %21, align 4
  br label %339

338:                                              ; preds = %300
  store i32 0, i32* %21, align 4
  br label %339

339:                                              ; preds = %338, %337
  %340 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %340) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  %341 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %341) #15
  %342 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %342) #15
  %343 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %343) #15
  %344 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %344) #15
  %345 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #15
  %346 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %346) #15
  %347 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %347) #15
  %348 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %348) #15
  %349 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %349) #15
  %350 = load i32, i32* %21, align 4
  switch i32 %350, label %399 [
    i32 0, label %351
  ]

351:                                              ; preds = %339
  br label %352

352:                                              ; preds = %351
  br label %353

353:                                              ; preds = %352
  %354 = load %28*, %28** %5, align 8
  %355 = getelementptr inbounds %28, %28* %354, i32 0, i32 3
  %356 = getelementptr inbounds [1 x i8], [1 x i8]* %355, i32 0, i32 0
  %357 = load i64, i64* %7, align 8
  %358 = load i64, i64* %8, align 8
  %359 = trunc i64 %358 to i32
  %360 = call i8* @timelib_timezone_id_from_abbr(i8* %356, i64 %357, i32 %359)
  store i8* %360, i8** %6, align 8
  %361 = load i8*, i8** %6, align 8
  %362 = icmp ne i8* %361, null
  br i1 %362, label %363, label %392

363:                                              ; preds = %353
  br label %364

364:                                              ; preds = %363
  %365 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %365) #15
  %366 = load i8*, i8** %6, align 8
  store i8* %366, i8** %22, align 8
  br label %367

367:                                              ; preds = %364
  br label %368

368:                                              ; preds = %367
  %369 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %369) #15
  %370 = load %29*, %29** %4, align 8
  store %29* %370, %29** %23, align 8
  %371 = bitcast %28** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %371) #15
  %372 = load i8*, i8** %22, align 8
  %373 = load i8*, i8** %22, align 8
  %374 = call i64 @strlen(i8* %373) #16
  %375 = call %28* @510(i8* %372, i64 %374, i32 0)
  store %28* %375, %28** %24, align 8
  %376 = load %28*, %28** %24, align 8
  %377 = load %29*, %29** %23, align 8
  %378 = getelementptr inbounds %29, %29* %377, i32 0, i32 0
  %379 = bitcast %30* %378 to %28**
  store %28* %376, %28** %379, align 8
  %380 = load %29*, %29** %23, align 8
  %381 = getelementptr inbounds %29, %29* %380, i32 0, i32 1
  %382 = bitcast %31* %381 to i32*
  store i32 5126, i32* %382, align 8
  %383 = bitcast %28** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %383) #15
  %384 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %384) #15
  br label %385

385:                                              ; preds = %368
  br label %386

386:                                              ; preds = %385
  br label %387

387:                                              ; preds = %386
  br label %388

388:                                              ; preds = %387
  %389 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %389) #15
  br label %390

390:                                              ; preds = %388
  br label %391

391:                                              ; preds = %390
  store i32 1, i32* %21, align 4
  br label %399

392:                                              ; preds = %353
  br label %393

393:                                              ; preds = %392
  %394 = load %29*, %29** %4, align 8
  %395 = getelementptr inbounds %29, %29* %394, i32 0, i32 1
  %396 = bitcast %31* %395 to i32*
  store i32 2, i32* %396, align 8
  br label %397

397:                                              ; preds = %393
  br label %398

398:                                              ; preds = %397
  store i32 1, i32* %21, align 4
  br label %399

399:                                              ; preds = %398, %391, %339
  %400 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %400) #15
  %401 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %401) #15
  %402 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %402) #15
  %403 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %403) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_timezone_offset_get(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %64*, align 8
  %8 = alloca %61*, align 8
  %9 = alloca %67*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %29*, align 8
  %12 = alloca %29*, align 8
  %13 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %14 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = bitcast %64** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  %17 = bitcast %61** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #15
  %18 = bitcast %67** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  %19 = load %1*, %1** %3, align 8
  %20 = getelementptr inbounds %1, %1* %19, i32 0, i32 4
  %21 = getelementptr inbounds %29, %29* %20, i32 0, i32 2
  %22 = bitcast %32* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = load %1*, %1** %3, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 4
  %26 = call zeroext i8 @490(%29* %25)
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 8
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = load %1*, %1** %3, align 8
  %31 = getelementptr inbounds %1, %1* %30, i32 0, i32 4
  br label %33

32:                                               ; preds = %2
  br label %33

33:                                               ; preds = %32, %29
  %34 = phi %29* [ %31, %29 ], [ null, %32 ]
  %35 = load %6*, %6** @date_ce_timezone, align 8
  %36 = load %6*, %6** @date_ce_interface, align 8
  %37 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %23, %29* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @232, i32 0, i32 0), %29** %5, %6* %35, %29** %6, %6* %36)
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  br label %40

40:                                               ; preds = %39
  %41 = load %29*, %29** %4, align 8
  %42 = getelementptr inbounds %29, %29* %41, i32 0, i32 1
  %43 = bitcast %31* %42 to i32*
  store i32 2, i32* %43, align 8
  br label %44

44:                                               ; preds = %40
  br label %45

45:                                               ; preds = %44
  store i32 1, i32* %10, align 4
  br label %147

46:                                               ; preds = %33
  %47 = load %29*, %29** %5, align 8
  %48 = getelementptr inbounds %29, %29* %47, i32 0, i32 0
  %49 = bitcast %30* %48 to %15**
  %50 = load %15*, %15** %49, align 8
  %51 = call %64* @484(%15* %50)
  store %64* %51, %64** %7, align 8
  %52 = load %64*, %64** %7, align 8
  %53 = getelementptr inbounds %64, %64* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %46
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @241, i32 0, i32 0))
  br label %57

57:                                               ; preds = %56
  %58 = load %29*, %29** %4, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 1
  %60 = bitcast %31* %59 to i32*
  store i32 2, i32* %60, align 8
  br label %61

61:                                               ; preds = %57
  br label %62

62:                                               ; preds = %61
  store i32 1, i32* %10, align 4
  br label %147

63:                                               ; preds = %46
  %64 = load %29*, %29** %6, align 8
  %65 = getelementptr inbounds %29, %29* %64, i32 0, i32 0
  %66 = bitcast %30* %65 to %15**
  %67 = load %15*, %15** %66, align 8
  %68 = call %61* @489(%15* %67)
  store %61* %68, %61** %8, align 8
  %69 = load %61*, %61** %8, align 8
  %70 = getelementptr inbounds %61, %61* %69, i32 0, i32 0
  %71 = load %52*, %52** %70, align 8
  %72 = icmp ne %52* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %63
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @239, i32 0, i32 0))
  br label %74

74:                                               ; preds = %73
  %75 = load %29*, %29** %4, align 8
  %76 = getelementptr inbounds %29, %29* %75, i32 0, i32 1
  %77 = bitcast %31* %76 to i32*
  store i32 2, i32* %77, align 8
  br label %78

78:                                               ; preds = %74
  br label %79

79:                                               ; preds = %78
  store i32 1, i32* %10, align 4
  br label %147

80:                                               ; preds = %63
  %81 = load %64*, %64** %7, align 8
  %82 = getelementptr inbounds %64, %64* %81, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  switch i32 %83, label %146 [
    i32 3, label %84
    i32 1, label %109
    i32 2, label %123
  ]

84:                                               ; preds = %80
  %85 = load %61*, %61** %8, align 8
  %86 = getelementptr inbounds %61, %61* %85, i32 0, i32 0
  %87 = load %52*, %52** %86, align 8
  %88 = getelementptr inbounds %52, %52* %87, i32 0, i32 12
  %89 = load i64, i64* %88, align 8
  %90 = load %64*, %64** %7, align 8
  %91 = getelementptr inbounds %64, %64* %90, i32 0, i32 2
  %92 = bitcast %65* %91 to %53**
  %93 = load %53*, %53** %92, align 8
  %94 = call %67* @timelib_get_time_zone_info(i64 %89, %53* %93)
  store %67* %94, %67** %9, align 8
  %95 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %95) #15
  %96 = load %29*, %29** %4, align 8
  store %29* %96, %29** %11, align 8
  %97 = load %67*, %67** %9, align 8
  %98 = getelementptr inbounds %67, %67* %97, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = sext i32 %99 to i64
  %101 = load %29*, %29** %11, align 8
  %102 = getelementptr inbounds %29, %29* %101, i32 0, i32 0
  %103 = bitcast %30* %102 to i64*
  store i64 %100, i64* %103, align 8
  %104 = load %29*, %29** %11, align 8
  %105 = getelementptr inbounds %29, %29* %104, i32 0, i32 1
  %106 = bitcast %31* %105 to i32*
  store i32 4, i32* %106, align 8
  %107 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #15
  %108 = load %67*, %67** %9, align 8
  call void @timelib_time_offset_dtor(%67* %108)
  br label %146

109:                                              ; preds = %80
  %110 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %110) #15
  %111 = load %29*, %29** %4, align 8
  store %29* %111, %29** %12, align 8
  %112 = load %64*, %64** %7, align 8
  %113 = getelementptr inbounds %64, %64* %112, i32 0, i32 2
  %114 = bitcast %65* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = load %29*, %29** %12, align 8
  %117 = getelementptr inbounds %29, %29* %116, i32 0, i32 0
  %118 = bitcast %30* %117 to i64*
  store i64 %115, i64* %118, align 8
  %119 = load %29*, %29** %12, align 8
  %120 = getelementptr inbounds %29, %29* %119, i32 0, i32 1
  %121 = bitcast %31* %120 to i32*
  store i32 4, i32* %121, align 8
  %122 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #15
  store i32 1, i32* %10, align 4
  br label %147

123:                                              ; preds = %80
  %124 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %124) #15
  %125 = load %29*, %29** %4, align 8
  store %29* %125, %29** %13, align 8
  %126 = load %64*, %64** %7, align 8
  %127 = getelementptr inbounds %64, %64* %126, i32 0, i32 2
  %128 = bitcast %65* %127 to %66*
  %129 = getelementptr inbounds %66, %66* %128, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = load %64*, %64** %7, align 8
  %132 = getelementptr inbounds %64, %64* %131, i32 0, i32 2
  %133 = bitcast %65* %132 to %66*
  %134 = getelementptr inbounds %66, %66* %133, i32 0, i32 2
  %135 = load i32, i32* %134, align 8
  %136 = mul nsw i32 %135, 3600
  %137 = sext i32 %136 to i64
  %138 = add nsw i64 %130, %137
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 0, i32 0
  %141 = bitcast %30* %140 to i64*
  store i64 %138, i64* %141, align 8
  %142 = load %29*, %29** %13, align 8
  %143 = getelementptr inbounds %29, %29* %142, i32 0, i32 1
  %144 = bitcast %31* %143 to i32*
  store i32 4, i32* %144, align 8
  %145 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #15
  store i32 1, i32* %10, align 4
  br label %147

146:                                              ; preds = %80, %84
  store i32 0, i32* %10, align 4
  br label %147

147:                                              ; preds = %146, %123, %109, %79, %62, %45
  %148 = bitcast %67** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #15
  %149 = bitcast %61** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #15
  %150 = bitcast %64** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #15
  %151 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %151) #15
  %152 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %152) #15
  %153 = load i32, i32* %10, align 4
  switch i32 %153, label %155 [
    i32 0, label %154
    i32 1, label %154
  ]

154:                                              ; preds = %147, %147
  ret void

155:                                              ; preds = %147
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_timezone_transitions_get(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29, align 8
  %7 = alloca %64*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %14 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #15
  %16 = bitcast %64** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  %17 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #15
  %18 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #15
  store i32 0, i32* %9, align 4
  %19 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #15
  %20 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  store i64 -9223372036854775808, i64* %11, align 8
  %21 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  store i64 9223372036854775807, i64* %12, align 8
  %22 = load %1*, %1** %3, align 8
  %23 = getelementptr inbounds %1, %1* %22, i32 0, i32 4
  %24 = getelementptr inbounds %29, %29* %23, i32 0, i32 2
  %25 = bitcast %32* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = load %1*, %1** %3, align 8
  %28 = getelementptr inbounds %1, %1* %27, i32 0, i32 4
  %29 = call zeroext i8 @490(%29* %28)
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %32, label %35

32:                                               ; preds = %2
  %33 = load %1*, %1** %3, align 8
  %34 = getelementptr inbounds %1, %1* %33, i32 0, i32 4
  br label %36

35:                                               ; preds = %2
  br label %36

36:                                               ; preds = %35, %32
  %37 = phi %29* [ %34, %32 ], [ null, %35 ]
  %38 = load %6*, %6** @date_ce_timezone, align 8
  %39 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %26, %29* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @242, i32 0, i32 0), %29** %5, %6* %38, i64* %11, i64* %12)
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  br label %42

42:                                               ; preds = %41
  %43 = load %29*, %29** %4, align 8
  %44 = getelementptr inbounds %29, %29* %43, i32 0, i32 1
  %45 = bitcast %31* %44 to i32*
  store i32 2, i32* %45, align 8
  br label %46

46:                                               ; preds = %42
  br label %47

47:                                               ; preds = %46
  store i32 1, i32* %13, align 4
  br label %601

48:                                               ; preds = %36
  %49 = load %29*, %29** %5, align 8
  %50 = getelementptr inbounds %29, %29* %49, i32 0, i32 0
  %51 = bitcast %30* %50 to %15**
  %52 = load %15*, %15** %51, align 8
  %53 = call %64* @484(%15* %52)
  store %64* %53, %64** %7, align 8
  %54 = load %64*, %64** %7, align 8
  %55 = getelementptr inbounds %64, %64* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %48
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @241, i32 0, i32 0))
  br label %59

59:                                               ; preds = %58
  %60 = load %29*, %29** %4, align 8
  %61 = getelementptr inbounds %29, %29* %60, i32 0, i32 1
  %62 = bitcast %31* %61 to i32*
  store i32 2, i32* %62, align 8
  br label %63

63:                                               ; preds = %59
  br label %64

64:                                               ; preds = %63
  store i32 1, i32* %13, align 4
  br label %601

65:                                               ; preds = %48
  %66 = load %64*, %64** %7, align 8
  %67 = getelementptr inbounds %64, %64* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 3
  br i1 %69, label %70, label %77

70:                                               ; preds = %65
  br label %71

71:                                               ; preds = %70
  %72 = load %29*, %29** %4, align 8
  %73 = getelementptr inbounds %29, %29* %72, i32 0, i32 1
  %74 = bitcast %31* %73 to i32*
  store i32 2, i32* %74, align 8
  br label %75

75:                                               ; preds = %71
  br label %76

76:                                               ; preds = %75
  store i32 1, i32* %13, align 4
  br label %601

77:                                               ; preds = %65
  %78 = load %29*, %29** %4, align 8
  %79 = call i32 @_array_init(%29* %78, i32 0)
  %80 = load i64, i64* %11, align 8
  %81 = icmp eq i64 %80, -9223372036854775808
  br i1 %81, label %82, label %130

82:                                               ; preds = %77
  %83 = call i32 @_array_init(%29* %6, i32 0)
  %84 = load i64, i64* %11, align 8
  %85 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @243, i32 0, i32 0), i64 2, i64 %84)
  %86 = load i64, i64* %11, align 8
  %87 = call %28* @php_format_date(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i32 0, i32 0), i64 13, i64 %86, i32 0)
  %88 = call i32 @add_assoc_str_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 4, %28* %87)
  %89 = load %64*, %64** %7, align 8
  %90 = getelementptr inbounds %64, %64* %89, i32 0, i32 2
  %91 = bitcast %65* %90 to %53**
  %92 = load %53*, %53** %91, align 8
  %93 = getelementptr inbounds %53, %53* %92, i32 0, i32 5
  %94 = load %56*, %56** %93, align 8
  %95 = getelementptr inbounds %56, %56* %94, i64 0
  %96 = getelementptr inbounds %56, %56* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = sext i32 %97 to i64
  %99 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @244, i32 0, i32 0), i64 6, i64 %98)
  %100 = load %64*, %64** %7, align 8
  %101 = getelementptr inbounds %64, %64* %100, i32 0, i32 2
  %102 = bitcast %65* %101 to %53**
  %103 = load %53*, %53** %102, align 8
  %104 = getelementptr inbounds %53, %53* %103, i32 0, i32 5
  %105 = load %56*, %56** %104, align 8
  %106 = getelementptr inbounds %56, %56* %105, i64 0
  %107 = getelementptr inbounds %56, %56* %106, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = call i32 @add_assoc_bool_ex(%29* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @245, i32 0, i32 0), i64 5, i32 %108)
  %110 = load %64*, %64** %7, align 8
  %111 = getelementptr inbounds %64, %64* %110, i32 0, i32 2
  %112 = bitcast %65* %111 to %53**
  %113 = load %53*, %53** %112, align 8
  %114 = getelementptr inbounds %53, %53* %113, i32 0, i32 6
  %115 = load i8*, i8** %114, align 8
  %116 = load %64*, %64** %7, align 8
  %117 = getelementptr inbounds %64, %64* %116, i32 0, i32 2
  %118 = bitcast %65* %117 to %53**
  %119 = load %53*, %53** %118, align 8
  %120 = getelementptr inbounds %53, %53* %119, i32 0, i32 5
  %121 = load %56*, %56** %120, align 8
  %122 = getelementptr inbounds %56, %56* %121, i64 0
  %123 = getelementptr inbounds %56, %56* %122, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %115, i64 %125
  %127 = call i32 @add_assoc_string_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @246, i32 0, i32 0), i64 4, i8* %126)
  %128 = load %29*, %29** %4, align 8
  %129 = call i32 @add_next_index_zval(%29* %128, %29* %6)
  store i32 0, i32* %9, align 4
  store i32 1, i32* %10, align 4
  br label %305

130:                                              ; preds = %77
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %131 = load %64*, %64** %7, align 8
  %132 = getelementptr inbounds %64, %64* %131, i32 0, i32 2
  %133 = bitcast %65* %132 to %53**
  %134 = load %53*, %53** %133, align 8
  %135 = getelementptr inbounds %53, %53* %134, i32 0, i32 1
  %136 = getelementptr inbounds %54, %54* %135, i32 0, i32 3
  %137 = load i32, i32* %136, align 4
  %138 = icmp ugt i32 %137, 0
  br i1 %138, label %139, label %304

139:                                              ; preds = %130
  br label %140

140:                                              ; preds = %293, %139
  %141 = load %64*, %64** %7, align 8
  %142 = getelementptr inbounds %64, %64* %141, i32 0, i32 2
  %143 = bitcast %65* %142 to %53**
  %144 = load %53*, %53** %143, align 8
  %145 = getelementptr inbounds %53, %53* %144, i32 0, i32 3
  %146 = load i32*, i32** %145, align 8
  %147 = load i32, i32* %9, align 4
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i32, i32* %146, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = load i64, i64* %11, align 8
  %153 = icmp sgt i64 %151, %152
  br i1 %153, label %154, label %290

154:                                              ; preds = %140
  %155 = load i32, i32* %9, align 4
  %156 = icmp ugt i32 %155, 0
  br i1 %156, label %157, label %241

157:                                              ; preds = %154
  %158 = call i32 @_array_init(%29* %6, i32 0)
  %159 = load i64, i64* %11, align 8
  %160 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @243, i32 0, i32 0), i64 2, i64 %159)
  %161 = load i64, i64* %11, align 8
  %162 = call %28* @php_format_date(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i32 0, i32 0), i64 13, i64 %161, i32 0)
  %163 = call i32 @add_assoc_str_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 4, %28* %162)
  %164 = load %64*, %64** %7, align 8
  %165 = getelementptr inbounds %64, %64* %164, i32 0, i32 2
  %166 = bitcast %65* %165 to %53**
  %167 = load %53*, %53** %166, align 8
  %168 = getelementptr inbounds %53, %53* %167, i32 0, i32 5
  %169 = load %56*, %56** %168, align 8
  %170 = load %64*, %64** %7, align 8
  %171 = getelementptr inbounds %64, %64* %170, i32 0, i32 2
  %172 = bitcast %65* %171 to %53**
  %173 = load %53*, %53** %172, align 8
  %174 = getelementptr inbounds %53, %53* %173, i32 0, i32 4
  %175 = load i8*, i8** %174, align 8
  %176 = load i32, i32* %9, align 4
  %177 = sub i32 %176, 1
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %175, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i64
  %182 = getelementptr inbounds %56, %56* %169, i64 %181
  %183 = getelementptr inbounds %56, %56* %182, i32 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = sext i32 %184 to i64
  %186 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @244, i32 0, i32 0), i64 6, i64 %185)
  %187 = load %64*, %64** %7, align 8
  %188 = getelementptr inbounds %64, %64* %187, i32 0, i32 2
  %189 = bitcast %65* %188 to %53**
  %190 = load %53*, %53** %189, align 8
  %191 = getelementptr inbounds %53, %53* %190, i32 0, i32 5
  %192 = load %56*, %56** %191, align 8
  %193 = load %64*, %64** %7, align 8
  %194 = getelementptr inbounds %64, %64* %193, i32 0, i32 2
  %195 = bitcast %65* %194 to %53**
  %196 = load %53*, %53** %195, align 8
  %197 = getelementptr inbounds %53, %53* %196, i32 0, i32 4
  %198 = load i8*, i8** %197, align 8
  %199 = load i32, i32* %9, align 4
  %200 = sub i32 %199, 1
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* %198, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds %56, %56* %192, i64 %204
  %206 = getelementptr inbounds %56, %56* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = call i32 @add_assoc_bool_ex(%29* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @245, i32 0, i32 0), i64 5, i32 %207)
  %209 = load %64*, %64** %7, align 8
  %210 = getelementptr inbounds %64, %64* %209, i32 0, i32 2
  %211 = bitcast %65* %210 to %53**
  %212 = load %53*, %53** %211, align 8
  %213 = getelementptr inbounds %53, %53* %212, i32 0, i32 6
  %214 = load i8*, i8** %213, align 8
  %215 = load %64*, %64** %7, align 8
  %216 = getelementptr inbounds %64, %64* %215, i32 0, i32 2
  %217 = bitcast %65* %216 to %53**
  %218 = load %53*, %53** %217, align 8
  %219 = getelementptr inbounds %53, %53* %218, i32 0, i32 5
  %220 = load %56*, %56** %219, align 8
  %221 = load %64*, %64** %7, align 8
  %222 = getelementptr inbounds %64, %64* %221, i32 0, i32 2
  %223 = bitcast %65* %222 to %53**
  %224 = load %53*, %53** %223, align 8
  %225 = getelementptr inbounds %53, %53* %224, i32 0, i32 4
  %226 = load i8*, i8** %225, align 8
  %227 = load i32, i32* %9, align 4
  %228 = sub i32 %227, 1
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds i8, i8* %226, i64 %229
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds %56, %56* %220, i64 %232
  %234 = getelementptr inbounds %56, %56* %233, i32 0, i32 2
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* %214, i64 %236
  %238 = call i32 @add_assoc_string_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @246, i32 0, i32 0), i64 4, i8* %237)
  %239 = load %29*, %29** %4, align 8
  %240 = call i32 @add_next_index_zval(%29* %239, %29* %6)
  br label %289

241:                                              ; preds = %154
  %242 = call i32 @_array_init(%29* %6, i32 0)
  %243 = load i64, i64* %11, align 8
  %244 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @243, i32 0, i32 0), i64 2, i64 %243)
  %245 = load i64, i64* %11, align 8
  %246 = call %28* @php_format_date(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i32 0, i32 0), i64 13, i64 %245, i32 0)
  %247 = call i32 @add_assoc_str_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 4, %28* %246)
  %248 = load %64*, %64** %7, align 8
  %249 = getelementptr inbounds %64, %64* %248, i32 0, i32 2
  %250 = bitcast %65* %249 to %53**
  %251 = load %53*, %53** %250, align 8
  %252 = getelementptr inbounds %53, %53* %251, i32 0, i32 5
  %253 = load %56*, %56** %252, align 8
  %254 = getelementptr inbounds %56, %56* %253, i64 0
  %255 = getelementptr inbounds %56, %56* %254, i32 0, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = sext i32 %256 to i64
  %258 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @244, i32 0, i32 0), i64 6, i64 %257)
  %259 = load %64*, %64** %7, align 8
  %260 = getelementptr inbounds %64, %64* %259, i32 0, i32 2
  %261 = bitcast %65* %260 to %53**
  %262 = load %53*, %53** %261, align 8
  %263 = getelementptr inbounds %53, %53* %262, i32 0, i32 5
  %264 = load %56*, %56** %263, align 8
  %265 = getelementptr inbounds %56, %56* %264, i64 0
  %266 = getelementptr inbounds %56, %56* %265, i32 0, i32 1
  %267 = load i32, i32* %266, align 4
  %268 = call i32 @add_assoc_bool_ex(%29* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @245, i32 0, i32 0), i64 5, i32 %267)
  %269 = load %64*, %64** %7, align 8
  %270 = getelementptr inbounds %64, %64* %269, i32 0, i32 2
  %271 = bitcast %65* %270 to %53**
  %272 = load %53*, %53** %271, align 8
  %273 = getelementptr inbounds %53, %53* %272, i32 0, i32 6
  %274 = load i8*, i8** %273, align 8
  %275 = load %64*, %64** %7, align 8
  %276 = getelementptr inbounds %64, %64* %275, i32 0, i32 2
  %277 = bitcast %65* %276 to %53**
  %278 = load %53*, %53** %277, align 8
  %279 = getelementptr inbounds %53, %53* %278, i32 0, i32 5
  %280 = load %56*, %56** %279, align 8
  %281 = getelementptr inbounds %56, %56* %280, i64 0
  %282 = getelementptr inbounds %56, %56* %281, i32 0, i32 2
  %283 = load i32, i32* %282, align 4
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds i8, i8* %274, i64 %284
  %286 = call i32 @add_assoc_string_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @246, i32 0, i32 0), i64 4, i8* %285)
  %287 = load %29*, %29** %4, align 8
  %288 = call i32 @add_next_index_zval(%29* %287, %29* %6)
  br label %289

289:                                              ; preds = %241, %157
  store i32 1, i32* %10, align 4
  br label %303

290:                                              ; preds = %140
  %291 = load i32, i32* %9, align 4
  %292 = add i32 %291, 1
  store i32 %292, i32* %9, align 4
  br label %293

293:                                              ; preds = %290
  %294 = load i32, i32* %9, align 4
  %295 = load %64*, %64** %7, align 8
  %296 = getelementptr inbounds %64, %64* %295, i32 0, i32 2
  %297 = bitcast %65* %296 to %53**
  %298 = load %53*, %53** %297, align 8
  %299 = getelementptr inbounds %53, %53* %298, i32 0, i32 1
  %300 = getelementptr inbounds %54, %54* %299, i32 0, i32 3
  %301 = load i32, i32* %300, align 4
  %302 = icmp ult i32 %294, %301
  br i1 %302, label %140, label %303

303:                                              ; preds = %293, %289
  br label %304

304:                                              ; preds = %303, %130
  br label %305

305:                                              ; preds = %304, %82
  %306 = load i32, i32* %10, align 4
  %307 = icmp ne i32 %306, 0
  br i1 %307, label %468, label %308

308:                                              ; preds = %305
  %309 = load %64*, %64** %7, align 8
  %310 = getelementptr inbounds %64, %64* %309, i32 0, i32 2
  %311 = bitcast %65* %310 to %53**
  %312 = load %53*, %53** %311, align 8
  %313 = getelementptr inbounds %53, %53* %312, i32 0, i32 1
  %314 = getelementptr inbounds %54, %54* %313, i32 0, i32 3
  %315 = load i32, i32* %314, align 4
  %316 = icmp ugt i32 %315, 0
  br i1 %316, label %317, label %419

317:                                              ; preds = %308
  %318 = call i32 @_array_init(%29* %6, i32 0)
  %319 = load i64, i64* %11, align 8
  %320 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @243, i32 0, i32 0), i64 2, i64 %319)
  %321 = load i64, i64* %11, align 8
  %322 = call %28* @php_format_date(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i32 0, i32 0), i64 13, i64 %321, i32 0)
  %323 = call i32 @add_assoc_str_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 4, %28* %322)
  %324 = load %64*, %64** %7, align 8
  %325 = getelementptr inbounds %64, %64* %324, i32 0, i32 2
  %326 = bitcast %65* %325 to %53**
  %327 = load %53*, %53** %326, align 8
  %328 = getelementptr inbounds %53, %53* %327, i32 0, i32 5
  %329 = load %56*, %56** %328, align 8
  %330 = load %64*, %64** %7, align 8
  %331 = getelementptr inbounds %64, %64* %330, i32 0, i32 2
  %332 = bitcast %65* %331 to %53**
  %333 = load %53*, %53** %332, align 8
  %334 = getelementptr inbounds %53, %53* %333, i32 0, i32 4
  %335 = load i8*, i8** %334, align 8
  %336 = load %64*, %64** %7, align 8
  %337 = getelementptr inbounds %64, %64* %336, i32 0, i32 2
  %338 = bitcast %65* %337 to %53**
  %339 = load %53*, %53** %338, align 8
  %340 = getelementptr inbounds %53, %53* %339, i32 0, i32 1
  %341 = getelementptr inbounds %54, %54* %340, i32 0, i32 3
  %342 = load i32, i32* %341, align 4
  %343 = sub i32 %342, 1
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds i8, i8* %335, i64 %344
  %346 = load i8, i8* %345, align 1
  %347 = zext i8 %346 to i64
  %348 = getelementptr inbounds %56, %56* %329, i64 %347
  %349 = getelementptr inbounds %56, %56* %348, i32 0, i32 0
  %350 = load i32, i32* %349, align 4
  %351 = sext i32 %350 to i64
  %352 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @244, i32 0, i32 0), i64 6, i64 %351)
  %353 = load %64*, %64** %7, align 8
  %354 = getelementptr inbounds %64, %64* %353, i32 0, i32 2
  %355 = bitcast %65* %354 to %53**
  %356 = load %53*, %53** %355, align 8
  %357 = getelementptr inbounds %53, %53* %356, i32 0, i32 5
  %358 = load %56*, %56** %357, align 8
  %359 = load %64*, %64** %7, align 8
  %360 = getelementptr inbounds %64, %64* %359, i32 0, i32 2
  %361 = bitcast %65* %360 to %53**
  %362 = load %53*, %53** %361, align 8
  %363 = getelementptr inbounds %53, %53* %362, i32 0, i32 4
  %364 = load i8*, i8** %363, align 8
  %365 = load %64*, %64** %7, align 8
  %366 = getelementptr inbounds %64, %64* %365, i32 0, i32 2
  %367 = bitcast %65* %366 to %53**
  %368 = load %53*, %53** %367, align 8
  %369 = getelementptr inbounds %53, %53* %368, i32 0, i32 1
  %370 = getelementptr inbounds %54, %54* %369, i32 0, i32 3
  %371 = load i32, i32* %370, align 4
  %372 = sub i32 %371, 1
  %373 = zext i32 %372 to i64
  %374 = getelementptr inbounds i8, i8* %364, i64 %373
  %375 = load i8, i8* %374, align 1
  %376 = zext i8 %375 to i64
  %377 = getelementptr inbounds %56, %56* %358, i64 %376
  %378 = getelementptr inbounds %56, %56* %377, i32 0, i32 1
  %379 = load i32, i32* %378, align 4
  %380 = call i32 @add_assoc_bool_ex(%29* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @245, i32 0, i32 0), i64 5, i32 %379)
  %381 = load %64*, %64** %7, align 8
  %382 = getelementptr inbounds %64, %64* %381, i32 0, i32 2
  %383 = bitcast %65* %382 to %53**
  %384 = load %53*, %53** %383, align 8
  %385 = getelementptr inbounds %53, %53* %384, i32 0, i32 6
  %386 = load i8*, i8** %385, align 8
  %387 = load %64*, %64** %7, align 8
  %388 = getelementptr inbounds %64, %64* %387, i32 0, i32 2
  %389 = bitcast %65* %388 to %53**
  %390 = load %53*, %53** %389, align 8
  %391 = getelementptr inbounds %53, %53* %390, i32 0, i32 5
  %392 = load %56*, %56** %391, align 8
  %393 = load %64*, %64** %7, align 8
  %394 = getelementptr inbounds %64, %64* %393, i32 0, i32 2
  %395 = bitcast %65* %394 to %53**
  %396 = load %53*, %53** %395, align 8
  %397 = getelementptr inbounds %53, %53* %396, i32 0, i32 4
  %398 = load i8*, i8** %397, align 8
  %399 = load %64*, %64** %7, align 8
  %400 = getelementptr inbounds %64, %64* %399, i32 0, i32 2
  %401 = bitcast %65* %400 to %53**
  %402 = load %53*, %53** %401, align 8
  %403 = getelementptr inbounds %53, %53* %402, i32 0, i32 1
  %404 = getelementptr inbounds %54, %54* %403, i32 0, i32 3
  %405 = load i32, i32* %404, align 4
  %406 = sub i32 %405, 1
  %407 = zext i32 %406 to i64
  %408 = getelementptr inbounds i8, i8* %398, i64 %407
  %409 = load i8, i8* %408, align 1
  %410 = zext i8 %409 to i64
  %411 = getelementptr inbounds %56, %56* %392, i64 %410
  %412 = getelementptr inbounds %56, %56* %411, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = zext i32 %413 to i64
  %415 = getelementptr inbounds i8, i8* %386, i64 %414
  %416 = call i32 @add_assoc_string_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @246, i32 0, i32 0), i64 4, i8* %415)
  %417 = load %29*, %29** %4, align 8
  %418 = call i32 @add_next_index_zval(%29* %417, %29* %6)
  br label %467

419:                                              ; preds = %308
  %420 = call i32 @_array_init(%29* %6, i32 0)
  %421 = load i64, i64* %11, align 8
  %422 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @243, i32 0, i32 0), i64 2, i64 %421)
  %423 = load i64, i64* %11, align 8
  %424 = call %28* @php_format_date(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i32 0, i32 0), i64 13, i64 %423, i32 0)
  %425 = call i32 @add_assoc_str_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 4, %28* %424)
  %426 = load %64*, %64** %7, align 8
  %427 = getelementptr inbounds %64, %64* %426, i32 0, i32 2
  %428 = bitcast %65* %427 to %53**
  %429 = load %53*, %53** %428, align 8
  %430 = getelementptr inbounds %53, %53* %429, i32 0, i32 5
  %431 = load %56*, %56** %430, align 8
  %432 = getelementptr inbounds %56, %56* %431, i64 0
  %433 = getelementptr inbounds %56, %56* %432, i32 0, i32 0
  %434 = load i32, i32* %433, align 4
  %435 = sext i32 %434 to i64
  %436 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @244, i32 0, i32 0), i64 6, i64 %435)
  %437 = load %64*, %64** %7, align 8
  %438 = getelementptr inbounds %64, %64* %437, i32 0, i32 2
  %439 = bitcast %65* %438 to %53**
  %440 = load %53*, %53** %439, align 8
  %441 = getelementptr inbounds %53, %53* %440, i32 0, i32 5
  %442 = load %56*, %56** %441, align 8
  %443 = getelementptr inbounds %56, %56* %442, i64 0
  %444 = getelementptr inbounds %56, %56* %443, i32 0, i32 1
  %445 = load i32, i32* %444, align 4
  %446 = call i32 @add_assoc_bool_ex(%29* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @245, i32 0, i32 0), i64 5, i32 %445)
  %447 = load %64*, %64** %7, align 8
  %448 = getelementptr inbounds %64, %64* %447, i32 0, i32 2
  %449 = bitcast %65* %448 to %53**
  %450 = load %53*, %53** %449, align 8
  %451 = getelementptr inbounds %53, %53* %450, i32 0, i32 6
  %452 = load i8*, i8** %451, align 8
  %453 = load %64*, %64** %7, align 8
  %454 = getelementptr inbounds %64, %64* %453, i32 0, i32 2
  %455 = bitcast %65* %454 to %53**
  %456 = load %53*, %53** %455, align 8
  %457 = getelementptr inbounds %53, %53* %456, i32 0, i32 5
  %458 = load %56*, %56** %457, align 8
  %459 = getelementptr inbounds %56, %56* %458, i64 0
  %460 = getelementptr inbounds %56, %56* %459, i32 0, i32 2
  %461 = load i32, i32* %460, align 4
  %462 = zext i32 %461 to i64
  %463 = getelementptr inbounds i8, i8* %452, i64 %462
  %464 = call i32 @add_assoc_string_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @246, i32 0, i32 0), i64 4, i8* %463)
  %465 = load %29*, %29** %4, align 8
  %466 = call i32 @add_next_index_zval(%29* %465, %29* %6)
  br label %467

467:                                              ; preds = %419, %317
  br label %600

468:                                              ; preds = %305
  %469 = load i32, i32* %9, align 4
  store i32 %469, i32* %8, align 4
  br label %470

470:                                              ; preds = %596, %468
  %471 = load i32, i32* %8, align 4
  %472 = load %64*, %64** %7, align 8
  %473 = getelementptr inbounds %64, %64* %472, i32 0, i32 2
  %474 = bitcast %65* %473 to %53**
  %475 = load %53*, %53** %474, align 8
  %476 = getelementptr inbounds %53, %53* %475, i32 0, i32 1
  %477 = getelementptr inbounds %54, %54* %476, i32 0, i32 3
  %478 = load i32, i32* %477, align 4
  %479 = icmp ult i32 %471, %478
  br i1 %479, label %480, label %599

480:                                              ; preds = %470
  %481 = load %64*, %64** %7, align 8
  %482 = getelementptr inbounds %64, %64* %481, i32 0, i32 2
  %483 = bitcast %65* %482 to %53**
  %484 = load %53*, %53** %483, align 8
  %485 = getelementptr inbounds %53, %53* %484, i32 0, i32 3
  %486 = load i32*, i32** %485, align 8
  %487 = load i32, i32* %8, align 4
  %488 = zext i32 %487 to i64
  %489 = getelementptr inbounds i32, i32* %486, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = sext i32 %490 to i64
  %492 = load i64, i64* %12, align 8
  %493 = icmp slt i64 %491, %492
  br i1 %493, label %494, label %595

494:                                              ; preds = %480
  %495 = call i32 @_array_init(%29* %6, i32 0)
  %496 = load %64*, %64** %7, align 8
  %497 = getelementptr inbounds %64, %64* %496, i32 0, i32 2
  %498 = bitcast %65* %497 to %53**
  %499 = load %53*, %53** %498, align 8
  %500 = getelementptr inbounds %53, %53* %499, i32 0, i32 3
  %501 = load i32*, i32** %500, align 8
  %502 = load i32, i32* %8, align 4
  %503 = zext i32 %502 to i64
  %504 = getelementptr inbounds i32, i32* %501, i64 %503
  %505 = load i32, i32* %504, align 4
  %506 = sext i32 %505 to i64
  %507 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @243, i32 0, i32 0), i64 2, i64 %506)
  %508 = load %64*, %64** %7, align 8
  %509 = getelementptr inbounds %64, %64* %508, i32 0, i32 2
  %510 = bitcast %65* %509 to %53**
  %511 = load %53*, %53** %510, align 8
  %512 = getelementptr inbounds %53, %53* %511, i32 0, i32 3
  %513 = load i32*, i32** %512, align 8
  %514 = load i32, i32* %8, align 4
  %515 = zext i32 %514 to i64
  %516 = getelementptr inbounds i32, i32* %513, i64 %515
  %517 = load i32, i32* %516, align 4
  %518 = sext i32 %517 to i64
  %519 = call %28* @php_format_date(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i32 0, i32 0), i64 13, i64 %518, i32 0)
  %520 = call i32 @add_assoc_str_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i32 0, i32 0), i64 4, %28* %519)
  %521 = load %64*, %64** %7, align 8
  %522 = getelementptr inbounds %64, %64* %521, i32 0, i32 2
  %523 = bitcast %65* %522 to %53**
  %524 = load %53*, %53** %523, align 8
  %525 = getelementptr inbounds %53, %53* %524, i32 0, i32 5
  %526 = load %56*, %56** %525, align 8
  %527 = load %64*, %64** %7, align 8
  %528 = getelementptr inbounds %64, %64* %527, i32 0, i32 2
  %529 = bitcast %65* %528 to %53**
  %530 = load %53*, %53** %529, align 8
  %531 = getelementptr inbounds %53, %53* %530, i32 0, i32 4
  %532 = load i8*, i8** %531, align 8
  %533 = load i32, i32* %8, align 4
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds i8, i8* %532, i64 %534
  %536 = load i8, i8* %535, align 1
  %537 = zext i8 %536 to i64
  %538 = getelementptr inbounds %56, %56* %526, i64 %537
  %539 = getelementptr inbounds %56, %56* %538, i32 0, i32 0
  %540 = load i32, i32* %539, align 4
  %541 = sext i32 %540 to i64
  %542 = call i32 @add_assoc_long_ex(%29* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @244, i32 0, i32 0), i64 6, i64 %541)
  %543 = load %64*, %64** %7, align 8
  %544 = getelementptr inbounds %64, %64* %543, i32 0, i32 2
  %545 = bitcast %65* %544 to %53**
  %546 = load %53*, %53** %545, align 8
  %547 = getelementptr inbounds %53, %53* %546, i32 0, i32 5
  %548 = load %56*, %56** %547, align 8
  %549 = load %64*, %64** %7, align 8
  %550 = getelementptr inbounds %64, %64* %549, i32 0, i32 2
  %551 = bitcast %65* %550 to %53**
  %552 = load %53*, %53** %551, align 8
  %553 = getelementptr inbounds %53, %53* %552, i32 0, i32 4
  %554 = load i8*, i8** %553, align 8
  %555 = load i32, i32* %8, align 4
  %556 = zext i32 %555 to i64
  %557 = getelementptr inbounds i8, i8* %554, i64 %556
  %558 = load i8, i8* %557, align 1
  %559 = zext i8 %558 to i64
  %560 = getelementptr inbounds %56, %56* %548, i64 %559
  %561 = getelementptr inbounds %56, %56* %560, i32 0, i32 1
  %562 = load i32, i32* %561, align 4
  %563 = call i32 @add_assoc_bool_ex(%29* %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @245, i32 0, i32 0), i64 5, i32 %562)
  %564 = load %64*, %64** %7, align 8
  %565 = getelementptr inbounds %64, %64* %564, i32 0, i32 2
  %566 = bitcast %65* %565 to %53**
  %567 = load %53*, %53** %566, align 8
  %568 = getelementptr inbounds %53, %53* %567, i32 0, i32 6
  %569 = load i8*, i8** %568, align 8
  %570 = load %64*, %64** %7, align 8
  %571 = getelementptr inbounds %64, %64* %570, i32 0, i32 2
  %572 = bitcast %65* %571 to %53**
  %573 = load %53*, %53** %572, align 8
  %574 = getelementptr inbounds %53, %53* %573, i32 0, i32 5
  %575 = load %56*, %56** %574, align 8
  %576 = load %64*, %64** %7, align 8
  %577 = getelementptr inbounds %64, %64* %576, i32 0, i32 2
  %578 = bitcast %65* %577 to %53**
  %579 = load %53*, %53** %578, align 8
  %580 = getelementptr inbounds %53, %53* %579, i32 0, i32 4
  %581 = load i8*, i8** %580, align 8
  %582 = load i32, i32* %8, align 4
  %583 = zext i32 %582 to i64
  %584 = getelementptr inbounds i8, i8* %581, i64 %583
  %585 = load i8, i8* %584, align 1
  %586 = zext i8 %585 to i64
  %587 = getelementptr inbounds %56, %56* %575, i64 %586
  %588 = getelementptr inbounds %56, %56* %587, i32 0, i32 2
  %589 = load i32, i32* %588, align 4
  %590 = zext i32 %589 to i64
  %591 = getelementptr inbounds i8, i8* %569, i64 %590
  %592 = call i32 @add_assoc_string_ex(%29* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @246, i32 0, i32 0), i64 4, i8* %591)
  %593 = load %29*, %29** %4, align 8
  %594 = call i32 @add_next_index_zval(%29* %593, %29* %6)
  br label %595

595:                                              ; preds = %494, %480
  br label %596

596:                                              ; preds = %595
  %597 = load i32, i32* %8, align 4
  %598 = add i32 %597, 1
  store i32 %598, i32* %8, align 4
  br label %470

599:                                              ; preds = %470
  br label %600

600:                                              ; preds = %599, %467
  store i32 0, i32* %13, align 4
  br label %601

601:                                              ; preds = %600, %76, %64, %47
  %602 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %602) #15
  %603 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %603) #15
  %604 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %604) #15
  %605 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %605) #15
  %606 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %606) #15
  %607 = bitcast %64** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %607) #15
  %608 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %608) #15
  %609 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %609) #15
  %610 = load i32, i32* %13, align 4
  switch i32 %610, label %612 [
    i32 0, label %611
    i32 1, label %611
  ]

611:                                              ; preds = %601, %601
  ret void

612:                                              ; preds = %601
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_timezone_location_get(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %64*, align 8
  %7 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = load %1*, %1** %3, align 8
  %11 = getelementptr inbounds %1, %1* %10, i32 0, i32 4
  %12 = getelementptr inbounds %29, %29* %11, i32 0, i32 2
  %13 = bitcast %32* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = load %1*, %1** %3, align 8
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 4
  %17 = call zeroext i8 @490(%29* %16)
  %18 = zext i8 %17 to i32
  %19 = icmp eq i32 %18, 8
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = load %1*, %1** %3, align 8
  %22 = getelementptr inbounds %1, %1* %21, i32 0, i32 4
  br label %24

23:                                               ; preds = %2
  br label %24

24:                                               ; preds = %23, %20
  %25 = phi %29* [ %22, %20 ], [ null, %23 ]
  %26 = load %6*, %6** @date_ce_timezone, align 8
  %27 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %14, %29* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @233, i32 0, i32 0), %29** %5, %6* %26)
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  br label %30

30:                                               ; preds = %29
  %31 = load %29*, %29** %4, align 8
  %32 = getelementptr inbounds %29, %29* %31, i32 0, i32 1
  %33 = bitcast %31* %32 to i32*
  store i32 2, i32* %33, align 8
  br label %34

34:                                               ; preds = %30
  br label %35

35:                                               ; preds = %34
  store i32 1, i32* %7, align 4
  br label %104

36:                                               ; preds = %24
  %37 = load %29*, %29** %5, align 8
  %38 = getelementptr inbounds %29, %29* %37, i32 0, i32 0
  %39 = bitcast %30* %38 to %15**
  %40 = load %15*, %15** %39, align 8
  %41 = call %64* @484(%15* %40)
  store %64* %41, %64** %6, align 8
  %42 = load %64*, %64** %6, align 8
  %43 = getelementptr inbounds %64, %64* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %36
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @241, i32 0, i32 0))
  br label %47

47:                                               ; preds = %46
  %48 = load %29*, %29** %4, align 8
  %49 = getelementptr inbounds %29, %29* %48, i32 0, i32 1
  %50 = bitcast %31* %49 to i32*
  store i32 2, i32* %50, align 8
  br label %51

51:                                               ; preds = %47
  br label %52

52:                                               ; preds = %51
  store i32 1, i32* %7, align 4
  br label %104

53:                                               ; preds = %36
  %54 = load %64*, %64** %6, align 8
  %55 = getelementptr inbounds %64, %64* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp ne i32 %56, 3
  br i1 %57, label %58, label %65

58:                                               ; preds = %53
  br label %59

59:                                               ; preds = %58
  %60 = load %29*, %29** %4, align 8
  %61 = getelementptr inbounds %29, %29* %60, i32 0, i32 1
  %62 = bitcast %31* %61 to i32*
  store i32 2, i32* %62, align 8
  br label %63

63:                                               ; preds = %59
  br label %64

64:                                               ; preds = %63
  store i32 1, i32* %7, align 4
  br label %104

65:                                               ; preds = %53
  %66 = load %29*, %29** %4, align 8
  %67 = call i32 @_array_init(%29* %66, i32 0)
  %68 = load %29*, %29** %4, align 8
  %69 = load %64*, %64** %6, align 8
  %70 = getelementptr inbounds %64, %64* %69, i32 0, i32 2
  %71 = bitcast %65* %70 to %53**
  %72 = load %53*, %53** %71, align 8
  %73 = getelementptr inbounds %53, %53* %72, i32 0, i32 9
  %74 = getelementptr inbounds %58, %58* %73, i32 0, i32 0
  %75 = getelementptr inbounds [3 x i8], [3 x i8]* %74, i32 0, i32 0
  %76 = call i32 @add_assoc_string_ex(%29* %68, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @247, i32 0, i32 0), i64 12, i8* %75)
  %77 = load %29*, %29** %4, align 8
  %78 = load %64*, %64** %6, align 8
  %79 = getelementptr inbounds %64, %64* %78, i32 0, i32 2
  %80 = bitcast %65* %79 to %53**
  %81 = load %53*, %53** %80, align 8
  %82 = getelementptr inbounds %53, %53* %81, i32 0, i32 9
  %83 = getelementptr inbounds %58, %58* %82, i32 0, i32 1
  %84 = load double, double* %83, align 8
  %85 = call i32 @add_assoc_double_ex(%29* %77, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @248, i32 0, i32 0), i64 8, double %84)
  %86 = load %29*, %29** %4, align 8
  %87 = load %64*, %64** %6, align 8
  %88 = getelementptr inbounds %64, %64* %87, i32 0, i32 2
  %89 = bitcast %65* %88 to %53**
  %90 = load %53*, %53** %89, align 8
  %91 = getelementptr inbounds %53, %53* %90, i32 0, i32 9
  %92 = getelementptr inbounds %58, %58* %91, i32 0, i32 2
  %93 = load double, double* %92, align 8
  %94 = call i32 @add_assoc_double_ex(%29* %86, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @249, i32 0, i32 0), i64 9, double %93)
  %95 = load %29*, %29** %4, align 8
  %96 = load %64*, %64** %6, align 8
  %97 = getelementptr inbounds %64, %64* %96, i32 0, i32 2
  %98 = bitcast %65* %97 to %53**
  %99 = load %53*, %53** %98, align 8
  %100 = getelementptr inbounds %53, %53* %99, i32 0, i32 9
  %101 = getelementptr inbounds %58, %58* %100, i32 0, i32 3
  %102 = load i8*, i8** %101, align 8
  %103 = call i32 @add_assoc_string_ex(%29* %95, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @250, i32 0, i32 0), i64 8, i8* %102)
  store i32 0, i32* %7, align 4
  br label %104

104:                                              ; preds = %65, %64, %52, %35
  %105 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #15
  %106 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %106) #15
  %107 = load i32, i32* %7, align 4
  switch i32 %107, label %109 [
    i32 0, label %108
    i32 1, label %108
  ]

108:                                              ; preds = %104, %104
  ret void

109:                                              ; preds = %104
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_timezone_identifiers_list(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %41*, align 8
  %6 = alloca %42*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %29*, align 8
  %18 = alloca %29*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %25 = bitcast %41** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  %26 = bitcast %42** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  %27 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  %28 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #15
  store i64 2047, i64* %9, align 8
  %30 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #15
  store i8* null, i8** %10, align 8
  %31 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #15
  store i64 0, i64* %11, align 8
  br label %32

32:                                               ; preds = %2
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #15
  store i32 0, i32* %12, align 4
  %34 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  store i32 0, i32* %13, align 4
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #15
  store i32 2, i32* %14, align 4
  %36 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #15
  %37 = load %1*, %1** %3, align 8
  %38 = getelementptr inbounds %1, %1* %37, i32 0, i32 4
  %39 = getelementptr inbounds %29, %29* %38, i32 0, i32 2
  %40 = bitcast %32* %39 to i32*
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %15, align 4
  %42 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #15
  %43 = bitcast %29** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #15
  %44 = bitcast %29** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #15
  store %29* null, %29** %18, align 8
  %45 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #15
  store i32 0, i32* %19, align 4
  %46 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #15
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #15
  store i8 0, i8* %22, align 1
  %47 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #15
  store i32 0, i32* %23, align 4
  %48 = load i32, i32* %16, align 4
  %49 = load %29*, %29** %17, align 8
  %50 = load %29*, %29** %18, align 8
  %51 = load i32, i32* %19, align 4
  %52 = load i8*, i8** %20, align 8
  %53 = load i8, i8* %21, align 1
  %54 = load i8, i8* %22, align 1
  br label %55

55:                                               ; preds = %32
  %56 = load i32, i32* %15, align 4
  %57 = load i32, i32* %13, align 4
  %58 = icmp slt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %84, label %65

65:                                               ; preds = %55
  %66 = load i32, i32* %15, align 4
  %67 = load i32, i32* %14, align 4
  %68 = icmp sgt i32 %66, %67
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 0)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %88

75:                                               ; preds = %65
  %76 = load i32, i32* %14, align 4
  %77 = icmp sge i32 %76, 0
  %78 = xor i1 %77, true
  %79 = xor i1 %78, true
  %80 = zext i1 %79 to i32
  %81 = sext i32 %80 to i64
  %82 = call i64 @llvm.expect.i64(i64 %81, i64 1)
  %83 = icmp ne i64 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %75, %55
  %85 = load i32, i32* %15, align 4
  %86 = load i32, i32* %13, align 4
  %87 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %85, i32 %86, i32 %87)
  store i32 1, i32* %23, align 4
  br label %233

88:                                               ; preds = %75, %65
  store i32 0, i32* %16, align 4
  %89 = load %1*, %1** %3, align 8
  %90 = bitcast %1* %89 to %29*
  %91 = getelementptr inbounds %29, %29* %90, i64 4
  store %29* %91, %29** %17, align 8
  store i8 1, i8* %22, align 1
  %92 = load i32, i32* %16, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %16, align 4
  br label %94

94:                                               ; preds = %88
  %95 = load i32, i32* %16, align 4
  %96 = load i32, i32* %13, align 4
  %97 = icmp sle i32 %95, %96
  br i1 %97, label %102, label %98

98:                                               ; preds = %94
  %99 = load i8, i8* %22, align 1
  %100 = zext i8 %99 to i32
  %101 = icmp eq i32 %100, 1
  br label %102

102:                                              ; preds = %98, %94
  %103 = phi i1 [ true, %94 ], [ %101, %98 ]
  %104 = xor i1 %103, true
  %105 = zext i1 %104 to i32
  %106 = sext i32 %105 to i64
  %107 = call i64 @llvm.expect.i64(i64 %106, i64 0)
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %102
  unreachable

110:                                              ; preds = %102
  br label %111

111:                                              ; preds = %110
  br label %112

112:                                              ; preds = %111
  br label %113

113:                                              ; preds = %112
  %114 = load i32, i32* %16, align 4
  %115 = load i32, i32* %13, align 4
  %116 = icmp sgt i32 %114, %115
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = load i8, i8* %22, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, 0
  br label %121

121:                                              ; preds = %117, %113
  %122 = phi i1 [ true, %113 ], [ %120, %117 ]
  %123 = xor i1 %122, true
  %124 = zext i1 %123 to i32
  %125 = sext i32 %124 to i64
  %126 = call i64 @llvm.expect.i64(i64 %125, i64 0)
  %127 = icmp ne i64 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %121
  unreachable

129:                                              ; preds = %121
  br label %130

130:                                              ; preds = %129
  br label %131

131:                                              ; preds = %130
  %132 = load i8, i8* %22, align 1
  %133 = icmp ne i8 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %131
  %135 = load i32, i32* %16, align 4
  %136 = load i32, i32* %15, align 4
  %137 = icmp sgt i32 %135, %136
  %138 = xor i1 %137, true
  %139 = xor i1 %138, true
  %140 = zext i1 %139 to i32
  %141 = sext i32 %140 to i64
  %142 = call i64 @llvm.expect.i64(i64 %141, i64 0)
  %143 = icmp ne i64 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %134
  br label %233

145:                                              ; preds = %134
  br label %146

146:                                              ; preds = %145, %131
  %147 = load %29*, %29** %17, align 8
  %148 = getelementptr inbounds %29, %29* %147, i32 1
  store %29* %148, %29** %17, align 8
  %149 = load %29*, %29** %17, align 8
  store %29* %149, %29** %18, align 8
  %150 = load %29*, %29** %18, align 8
  %151 = call i32 @469(%29* %150, i64* %9, i8* %21, i32 0, i32 0)
  %152 = icmp ne i32 %151, 0
  %153 = xor i1 %152, true
  %154 = xor i1 %153, true
  %155 = xor i1 %154, true
  %156 = zext i1 %155 to i32
  %157 = sext i32 %156 to i64
  %158 = call i64 @llvm.expect.i64(i64 %157, i64 0)
  %159 = icmp ne i64 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %146
  store i32 0, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %233

161:                                              ; preds = %146
  %162 = load i32, i32* %16, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %16, align 4
  br label %164

164:                                              ; preds = %161
  %165 = load i32, i32* %16, align 4
  %166 = load i32, i32* %13, align 4
  %167 = icmp sle i32 %165, %166
  br i1 %167, label %172, label %168

168:                                              ; preds = %164
  %169 = load i8, i8* %22, align 1
  %170 = zext i8 %169 to i32
  %171 = icmp eq i32 %170, 1
  br label %172

172:                                              ; preds = %168, %164
  %173 = phi i1 [ true, %164 ], [ %171, %168 ]
  %174 = xor i1 %173, true
  %175 = zext i1 %174 to i32
  %176 = sext i32 %175 to i64
  %177 = call i64 @llvm.expect.i64(i64 %176, i64 0)
  %178 = icmp ne i64 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %172
  unreachable

180:                                              ; preds = %172
  br label %181

181:                                              ; preds = %180
  br label %182

182:                                              ; preds = %181
  br label %183

183:                                              ; preds = %182
  %184 = load i32, i32* %16, align 4
  %185 = load i32, i32* %13, align 4
  %186 = icmp sgt i32 %184, %185
  br i1 %186, label %191, label %187

187:                                              ; preds = %183
  %188 = load i8, i8* %22, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp eq i32 %189, 0
  br label %191

191:                                              ; preds = %187, %183
  %192 = phi i1 [ true, %183 ], [ %190, %187 ]
  %193 = xor i1 %192, true
  %194 = zext i1 %193 to i32
  %195 = sext i32 %194 to i64
  %196 = call i64 @llvm.expect.i64(i64 %195, i64 0)
  %197 = icmp ne i64 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %191
  unreachable

199:                                              ; preds = %191
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  %202 = load i8, i8* %22, align 1
  %203 = icmp ne i8 %202, 0
  br i1 %203, label %204, label %216

204:                                              ; preds = %201
  %205 = load i32, i32* %16, align 4
  %206 = load i32, i32* %15, align 4
  %207 = icmp sgt i32 %205, %206
  %208 = xor i1 %207, true
  %209 = xor i1 %208, true
  %210 = zext i1 %209 to i32
  %211 = sext i32 %210 to i64
  %212 = call i64 @llvm.expect.i64(i64 %211, i64 0)
  %213 = icmp ne i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %204
  br label %233

215:                                              ; preds = %204
  br label %216

216:                                              ; preds = %215, %201
  %217 = load %29*, %29** %17, align 8
  %218 = getelementptr inbounds %29, %29* %217, i32 1
  store %29* %218, %29** %17, align 8
  %219 = load %29*, %29** %17, align 8
  store %29* %219, %29** %18, align 8
  %220 = load %29*, %29** %18, align 8
  %221 = call i32 @487(%29* %220, i8** %10, i64* %11, i32 1)
  %222 = icmp ne i32 %221, 0
  %223 = xor i1 %222, true
  %224 = xor i1 %223, true
  %225 = xor i1 %224, true
  %226 = zext i1 %225 to i32
  %227 = sext i32 %226 to i64
  %228 = call i64 @llvm.expect.i64(i64 %227, i64 0)
  %229 = icmp ne i64 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %216
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %233

231:                                              ; preds = %216
  br label %232

232:                                              ; preds = %231
  br label %233

233:                                              ; preds = %232, %230, %214, %160, %144, %84
  %234 = load i32, i32* %23, align 4
  %235 = icmp ne i32 %234, 0
  %236 = xor i1 %235, true
  %237 = xor i1 %236, true
  %238 = zext i1 %237 to i32
  %239 = sext i32 %238 to i64
  %240 = call i64 @llvm.expect.i64(i64 %239, i64 0)
  %241 = icmp ne i64 %240, 0
  br i1 %241, label %242, label %271

242:                                              ; preds = %233
  %243 = load i32, i32* %23, align 4
  %244 = icmp eq i32 %243, 2
  br i1 %244, label %245, label %248

245:                                              ; preds = %242
  %246 = load i32, i32* %16, align 4
  %247 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %246, i8* %247)
  br label %264

248:                                              ; preds = %242
  %249 = load i32, i32* %23, align 4
  %250 = icmp eq i32 %249, 3
  br i1 %250, label %251, label %255

251:                                              ; preds = %248
  %252 = load i32, i32* %16, align 4
  %253 = load i8*, i8** %20, align 8
  %254 = load %29*, %29** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %252, i8* %253, %29* %254)
  br label %263

255:                                              ; preds = %248
  %256 = load i32, i32* %23, align 4
  %257 = icmp eq i32 %256, 4
  br i1 %257, label %258, label %262

258:                                              ; preds = %255
  %259 = load i32, i32* %16, align 4
  %260 = load i32, i32* %19, align 4
  %261 = load %29*, %29** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %259, i32 %260, %29* %261)
  br label %262

262:                                              ; preds = %258, %255
  br label %263

263:                                              ; preds = %262, %251
  br label %264

264:                                              ; preds = %263, %245
  br label %265

265:                                              ; preds = %264
  %266 = load %29*, %29** %4, align 8
  %267 = getelementptr inbounds %29, %29* %266, i32 0, i32 1
  %268 = bitcast %31* %267 to i32*
  store i32 2, i32* %268, align 8
  br label %269

269:                                              ; preds = %265
  br label %270

270:                                              ; preds = %269
  store i32 1, i32* %24, align 4
  br label %272

271:                                              ; preds = %233
  store i32 0, i32* %24, align 4
  br label %272

272:                                              ; preds = %271, %270
  %273 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #15
  %274 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #15
  %275 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #15
  %276 = bitcast %29** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %276) #15
  %277 = bitcast %29** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %277) #15
  %278 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #15
  %279 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #15
  %280 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #15
  %281 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %281) #15
  %282 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #15
  %283 = load i32, i32* %24, align 4
  switch i32 %283, label %413 [
    i32 0, label %284
  ]

284:                                              ; preds = %272
  br label %285

285:                                              ; preds = %284
  br label %286

286:                                              ; preds = %285
  %287 = load i64, i64* %9, align 8
  %288 = icmp eq i64 %287, 4096
  br i1 %288, label %289, label %299

289:                                              ; preds = %286
  %290 = load i64, i64* %11, align 8
  %291 = icmp ne i64 %290, 2
  br i1 %291, label %292, label %299

292:                                              ; preds = %289
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @270, i32 0, i32 0))
  br label %293

293:                                              ; preds = %292
  %294 = load %29*, %29** %4, align 8
  %295 = getelementptr inbounds %29, %29* %294, i32 0, i32 1
  %296 = bitcast %31* %295 to i32*
  store i32 2, i32* %296, align 8
  br label %297

297:                                              ; preds = %293
  br label %298

298:                                              ; preds = %297
  store i32 1, i32* %24, align 4
  br label %413

299:                                              ; preds = %289, %286
  %300 = load %41*, %41** @php_date_global_timezone_db, align 8
  %301 = icmp ne %41* %300, null
  br i1 %301, label %302, label %304

302:                                              ; preds = %299
  %303 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %306

304:                                              ; preds = %299
  %305 = call %41* @timelib_builtin_db()
  br label %306

306:                                              ; preds = %304, %302
  %307 = phi %41* [ %303, %302 ], [ %305, %304 ]
  store %41* %307, %41** %5, align 8
  %308 = load %41*, %41** %5, align 8
  %309 = call %42* @timelib_timezone_identifiers_list(%41* %308, i32* %8)
  store %42* %309, %42** %6, align 8
  %310 = load %29*, %29** %4, align 8
  %311 = call i32 @_array_init(%29* %310, i32 0)
  store i32 0, i32* %7, align 4
  br label %312

312:                                              ; preds = %409, %306
  %313 = load i32, i32* %7, align 4
  %314 = load i32, i32* %8, align 4
  %315 = icmp slt i32 %313, %314
  br i1 %315, label %316, label %412

316:                                              ; preds = %312
  %317 = load i64, i64* %9, align 8
  %318 = icmp eq i64 %317, 4096
  br i1 %318, label %319, label %369

319:                                              ; preds = %316
  %320 = load %41*, %41** %5, align 8
  %321 = getelementptr inbounds %41, %41* %320, i32 0, i32 3
  %322 = load i8*, i8** %321, align 8
  %323 = load %42*, %42** %6, align 8
  %324 = load i32, i32* %7, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds %42, %42* %323, i64 %325
  %327 = getelementptr inbounds %42, %42* %326, i32 0, i32 1
  %328 = load i32, i32* %327, align 8
  %329 = add i32 %328, 5
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds i8, i8* %322, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i32
  %334 = load i8*, i8** %10, align 8
  %335 = getelementptr inbounds i8, i8* %334, i64 0
  %336 = load i8, i8* %335, align 1
  %337 = sext i8 %336 to i32
  %338 = icmp eq i32 %333, %337
  br i1 %338, label %339, label %368

339:                                              ; preds = %319
  %340 = load %41*, %41** %5, align 8
  %341 = getelementptr inbounds %41, %41* %340, i32 0, i32 3
  %342 = load i8*, i8** %341, align 8
  %343 = load %42*, %42** %6, align 8
  %344 = load i32, i32* %7, align 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds %42, %42* %343, i64 %345
  %347 = getelementptr inbounds %42, %42* %346, i32 0, i32 1
  %348 = load i32, i32* %347, align 8
  %349 = add i32 %348, 6
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds i8, i8* %342, i64 %350
  %352 = load i8, i8* %351, align 1
  %353 = zext i8 %352 to i32
  %354 = load i8*, i8** %10, align 8
  %355 = getelementptr inbounds i8, i8* %354, i64 1
  %356 = load i8, i8* %355, align 1
  %357 = sext i8 %356 to i32
  %358 = icmp eq i32 %353, %357
  br i1 %358, label %359, label %368

359:                                              ; preds = %339
  %360 = load %29*, %29** %4, align 8
  %361 = load %42*, %42** %6, align 8
  %362 = load i32, i32* %7, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds %42, %42* %361, i64 %363
  %365 = getelementptr inbounds %42, %42* %364, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  %367 = call i32 @add_next_index_string(%29* %360, i8* %366)
  br label %368

368:                                              ; preds = %359, %339, %319
  br label %408

369:                                              ; preds = %316
  %370 = load i64, i64* %9, align 8
  %371 = icmp eq i64 %370, 4095
  br i1 %371, label %398, label %372

372:                                              ; preds = %369
  %373 = load %42*, %42** %6, align 8
  %374 = load i32, i32* %7, align 4
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds %42, %42* %373, i64 %375
  %377 = getelementptr inbounds %42, %42* %376, i32 0, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = load i64, i64* %9, align 8
  %380 = call i32 @518(i8* %378, i64 %379)
  %381 = icmp ne i32 %380, 0
  br i1 %381, label %382, label %407

382:                                              ; preds = %372
  %383 = load %41*, %41** %5, align 8
  %384 = getelementptr inbounds %41, %41* %383, i32 0, i32 3
  %385 = load i8*, i8** %384, align 8
  %386 = load %42*, %42** %6, align 8
  %387 = load i32, i32* %7, align 4
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds %42, %42* %386, i64 %388
  %390 = getelementptr inbounds %42, %42* %389, i32 0, i32 1
  %391 = load i32, i32* %390, align 8
  %392 = add i32 %391, 4
  %393 = zext i32 %392 to i64
  %394 = getelementptr inbounds i8, i8* %385, i64 %393
  %395 = load i8, i8* %394, align 1
  %396 = zext i8 %395 to i32
  %397 = icmp eq i32 %396, 1
  br i1 %397, label %398, label %407

398:                                              ; preds = %382, %369
  %399 = load %29*, %29** %4, align 8
  %400 = load %42*, %42** %6, align 8
  %401 = load i32, i32* %7, align 4
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds %42, %42* %400, i64 %402
  %404 = getelementptr inbounds %42, %42* %403, i32 0, i32 0
  %405 = load i8*, i8** %404, align 8
  %406 = call i32 @add_next_index_string(%29* %399, i8* %405)
  br label %407

407:                                              ; preds = %398, %382, %372
  br label %408

408:                                              ; preds = %407, %368
  br label %409

409:                                              ; preds = %408
  %410 = load i32, i32* %7, align 4
  %411 = add nsw i32 %410, 1
  store i32 %411, i32* %7, align 4
  br label %312

412:                                              ; preds = %312
  store i32 0, i32* %24, align 4
  br label %413

413:                                              ; preds = %412, %298, %272
  %414 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %414) #15
  %415 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %415) #15
  %416 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %416) #15
  %417 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %417) #15
  %418 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %418) #15
  %419 = bitcast %42** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %419) #15
  %420 = bitcast %41** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %420) #15
  %421 = load i32, i32* %24, align 4
  switch i32 %421, label %423 [
    i32 0, label %422
    i32 1, label %422
  ]

422:                                              ; preds = %413, %413
  ret void

423:                                              ; preds = %413
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_timezone_abbreviations_list(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %69*, align 8
  %6 = alloca %69*, align 8
  %7 = alloca %29, align 8
  %8 = alloca %29*, align 8
  %9 = alloca %29, align 8
  %10 = alloca %29*, align 8
  %11 = alloca %29*, align 8
  %12 = alloca %63*, align 8
  %13 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %14 = bitcast %69** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast %69** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = bitcast %29* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %16) #15
  %17 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #15
  %18 = bitcast %29* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %18) #15
  %19 = call %69* @timelib_timezone_abbreviations_list()
  store %69* %19, %69** %5, align 8
  %20 = load %29*, %29** %4, align 8
  %21 = call i32 @_array_init(%29* %20, i32 0)
  %22 = load %69*, %69** %5, align 8
  store %69* %22, %69** %6, align 8
  br label %23

23:                                               ; preds = %107, %2
  %24 = call i32 @_array_init(%29* %7, i32 0)
  %25 = load %69*, %69** %6, align 8
  %26 = getelementptr inbounds %69, %69* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = call i32 @add_assoc_bool_ex(%29* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @271, i32 0, i32 0), i64 3, i32 %27)
  %29 = load %69*, %69** %6, align 8
  %30 = getelementptr inbounds %69, %69* %29, i32 0, i32 2
  %31 = load float, float* %30, align 4
  %32 = fptosi float %31 to i64
  %33 = call i32 @add_assoc_long_ex(%29* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @244, i32 0, i32 0), i64 6, i64 %32)
  %34 = load %69*, %69** %6, align 8
  %35 = getelementptr inbounds %69, %69* %34, i32 0, i32 3
  %36 = load i8*, i8** %35, align 8
  %37 = icmp ne i8* %36, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %23
  %39 = load %69*, %69** %6, align 8
  %40 = getelementptr inbounds %69, %69* %39, i32 0, i32 3
  %41 = load i8*, i8** %40, align 8
  %42 = call i32 @add_assoc_string_ex(%29* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @272, i32 0, i32 0), i64 11, i8* %41)
  br label %45

43:                                               ; preds = %23
  %44 = call i32 @add_assoc_null_ex(%29* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @272, i32 0, i32 0), i64 11)
  br label %45

45:                                               ; preds = %43, %38
  %46 = load %29*, %29** %4, align 8
  %47 = getelementptr inbounds %29, %29* %46, i32 0, i32 0
  %48 = bitcast %30* %47 to %7**
  %49 = load %7*, %7** %48, align 8
  %50 = load %69*, %69** %6, align 8
  %51 = getelementptr inbounds %69, %69* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = load %69*, %69** %6, align 8
  %54 = getelementptr inbounds %69, %69* %53, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = call i64 @strlen(i8* %55) #16
  %57 = call %29* @zend_hash_str_find(%7* %49, i8* %52, i64 %56)
  store %29* %57, %29** %8, align 8
  %58 = load %29*, %29** %8, align 8
  %59 = icmp ne %29* %58, null
  br i1 %59, label %71, label %60

60:                                               ; preds = %45
  %61 = call i32 @_array_init(%29* %9, i32 0)
  %62 = load %29*, %29** %4, align 8
  %63 = load %69*, %69** %6, align 8
  %64 = getelementptr inbounds %69, %69* %63, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = load %69*, %69** %6, align 8
  %67 = getelementptr inbounds %69, %69* %66, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = call i64 @strlen(i8* %68) #16
  %70 = call i32 @add_assoc_zval_ex(%29* %62, i8* %65, i64 %69, %29* %9)
  br label %103

71:                                               ; preds = %45
  br label %72

72:                                               ; preds = %71
  %73 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #15
  store %29* %9, %29** %10, align 8
  %74 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #15
  %75 = load %29*, %29** %8, align 8
  store %29* %75, %29** %11, align 8
  %76 = bitcast %63** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #15
  %77 = load %29*, %29** %11, align 8
  %78 = getelementptr inbounds %29, %29* %77, i32 0, i32 0
  %79 = bitcast %30* %78 to %63**
  %80 = load %63*, %63** %79, align 8
  store %63* %80, %63** %12, align 8
  %81 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %81) #15
  %82 = load %29*, %29** %11, align 8
  %83 = getelementptr inbounds %29, %29* %82, i32 0, i32 1
  %84 = bitcast %31* %83 to i32*
  %85 = load i32, i32* %84, align 8
  store i32 %85, i32* %13, align 4
  br label %86

86:                                               ; preds = %72
  %87 = load %63*, %63** %12, align 8
  %88 = load %29*, %29** %10, align 8
  %89 = getelementptr inbounds %29, %29* %88, i32 0, i32 0
  %90 = bitcast %30* %89 to %63**
  store %63* %87, %63** %90, align 8
  %91 = load i32, i32* %13, align 4
  %92 = load %29*, %29** %10, align 8
  %93 = getelementptr inbounds %29, %29* %92, i32 0, i32 1
  %94 = bitcast %31* %93 to i32*
  store i32 %91, i32* %94, align 8
  br label %95

95:                                               ; preds = %86
  br label %96

96:                                               ; preds = %95
  %97 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %97) #15
  %98 = bitcast %63** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #15
  %99 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #15
  %100 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #15
  br label %101

101:                                              ; preds = %96
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102, %60
  %104 = call i32 @add_next_index_zval(%29* %9, %29* %7)
  %105 = load %69*, %69** %6, align 8
  %106 = getelementptr inbounds %69, %69* %105, i32 1
  store %69* %106, %69** %6, align 8
  br label %107

107:                                              ; preds = %103
  %108 = load %69*, %69** %6, align 8
  %109 = getelementptr inbounds %69, %69* %108, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = icmp ne i8* %110, null
  br i1 %111, label %23, label %112

112:                                              ; preds = %107
  %113 = bitcast %29* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %113) #15
  %114 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #15
  %115 = bitcast %29* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %115) #15
  %116 = bitcast %69** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #15
  %117 = bitcast %69** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_timezone_version_get(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %41*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %29*, align 8
  %8 = alloca %28*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %9 = bitcast %41** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = load %41*, %41** @php_date_global_timezone_db, align 8
  %11 = icmp ne %41* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %16

14:                                               ; preds = %2
  %15 = call %41* @timelib_builtin_db()
  br label %16

16:                                               ; preds = %14, %12
  %17 = phi %41* [ %13, %12 ], [ %15, %14 ]
  store %41* %17, %41** %5, align 8
  br label %18

18:                                               ; preds = %16
  %19 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #15
  %20 = load %41*, %41** %5, align 8
  %21 = getelementptr inbounds %41, %41* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  store i8* %22, i8** %6, align 8
  br label %23

23:                                               ; preds = %18
  br label %24

24:                                               ; preds = %23
  %25 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  %26 = load %29*, %29** %4, align 8
  store %29* %26, %29** %7, align 8
  %27 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #15
  %28 = load i8*, i8** %6, align 8
  %29 = load i8*, i8** %6, align 8
  %30 = call i64 @strlen(i8* %29) #16
  %31 = call %28* @510(i8* %28, i64 %30, i32 0)
  store %28* %31, %28** %8, align 8
  %32 = load %28*, %28** %8, align 8
  %33 = load %29*, %29** %7, align 8
  %34 = getelementptr inbounds %29, %29* %33, i32 0, i32 0
  %35 = bitcast %30* %34 to %28**
  store %28* %32, %28** %35, align 8
  %36 = load %29*, %29** %7, align 8
  %37 = getelementptr inbounds %29, %29* %36, i32 0, i32 1
  %38 = bitcast %31* %37 to i32*
  store i32 5126, i32* %38, align 8
  %39 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #15
  %40 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #15
  br label %41

41:                                               ; preds = %24
  br label %42

42:                                               ; preds = %41
  br label %43

43:                                               ; preds = %42
  br label %44

44:                                               ; preds = %43
  %45 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #15
  br label %46

46:                                               ; preds = %44
  br label %47

47:                                               ; preds = %46
  %48 = bitcast %41** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_interval_create_from_date_string(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca %52*, align 8
  %7 = alloca %34*, align 8
  %8 = alloca %68*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %22 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  store %28* null, %28** %5, align 8
  %23 = bitcast %52** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  %24 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  store %34* null, %34** %7, align 8
  %25 = bitcast %68** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 0, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 1, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  %31 = load %1*, %1** %3, align 8
  %32 = getelementptr inbounds %1, %1* %31, i32 0, i32 4
  %33 = getelementptr inbounds %29, %29* %32, i32 0, i32 2
  %34 = bitcast %32* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #15
  %37 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  %38 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store %29* null, %29** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %29*, %29** %14, align 8
  %44 = load %29*, %29** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %157

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %1*, %1** %3, align 8
  %84 = bitcast %1* %83 to %29*
  %85 = getelementptr inbounds %29, %29* %84, i64 4
  store %29* %85, %29** %14, align 8
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %157

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %29*, %29** %14, align 8
  %142 = getelementptr inbounds %29, %29* %141, i32 1
  store %29* %142, %29** %14, align 8
  %143 = load %29*, %29** %14, align 8
  store %29* %143, %29** %15, align 8
  %144 = load %29*, %29** %15, align 8
  %145 = call i32 @468(%29* %144, %28** %5, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %157

155:                                              ; preds = %140
  br label %156

156:                                              ; preds = %155
  br label %157

157:                                              ; preds = %156, %154, %138, %78
  %158 = load i32, i32* %20, align 4
  %159 = icmp ne i32 %158, 0
  %160 = xor i1 %159, true
  %161 = xor i1 %160, true
  %162 = zext i1 %161 to i32
  %163 = sext i32 %162 to i64
  %164 = call i64 @llvm.expect.i64(i64 %163, i64 0)
  %165 = icmp ne i64 %164, 0
  br i1 %165, label %166, label %195

166:                                              ; preds = %157
  %167 = load i32, i32* %20, align 4
  %168 = icmp eq i32 %167, 2
  br i1 %168, label %169, label %172

169:                                              ; preds = %166
  %170 = load i32, i32* %13, align 4
  %171 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %170, i8* %171)
  br label %188

172:                                              ; preds = %166
  %173 = load i32, i32* %20, align 4
  %174 = icmp eq i32 %173, 3
  br i1 %174, label %175, label %179

175:                                              ; preds = %172
  %176 = load i32, i32* %13, align 4
  %177 = load i8*, i8** %17, align 8
  %178 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %176, i8* %177, %29* %178)
  br label %187

179:                                              ; preds = %172
  %180 = load i32, i32* %20, align 4
  %181 = icmp eq i32 %180, 4
  br i1 %181, label %182, label %186

182:                                              ; preds = %179
  %183 = load i32, i32* %13, align 4
  %184 = load i32, i32* %16, align 4
  %185 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %183, i32 %184, %29* %185)
  br label %186

186:                                              ; preds = %182, %179
  br label %187

187:                                              ; preds = %186, %175
  br label %188

188:                                              ; preds = %187, %169
  br label %189

189:                                              ; preds = %188
  %190 = load %29*, %29** %4, align 8
  %191 = getelementptr inbounds %29, %29* %190, i32 0, i32 1
  %192 = bitcast %31* %191 to i32*
  store i32 2, i32* %192, align 8
  br label %193

193:                                              ; preds = %189
  br label %194

194:                                              ; preds = %193
  store i32 1, i32* %21, align 4
  br label %196

195:                                              ; preds = %157
  store i32 0, i32* %21, align 4
  br label %196

196:                                              ; preds = %195, %194
  %197 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  %198 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #15
  %199 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #15
  %200 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #15
  %201 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %201) #15
  %202 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #15
  %203 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #15
  %204 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #15
  %205 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %205) #15
  %206 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %206) #15
  %207 = load i32, i32* %21, align 4
  switch i32 %207, label %290 [
    i32 0, label %208
  ]

208:                                              ; preds = %196
  br label %209

209:                                              ; preds = %208
  br label %210

210:                                              ; preds = %209
  %211 = load %28*, %28** %5, align 8
  %212 = getelementptr inbounds %28, %28* %211, i32 0, i32 3
  %213 = getelementptr inbounds [1 x i8], [1 x i8]* %212, i32 0, i32 0
  %214 = load %28*, %28** %5, align 8
  %215 = getelementptr inbounds %28, %28* %214, i32 0, i32 2
  %216 = load i64, i64* %215, align 8
  %217 = load %41*, %41** @php_date_global_timezone_db, align 8
  %218 = icmp ne %41* %217, null
  br i1 %218, label %219, label %221

219:                                              ; preds = %210
  %220 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %223

221:                                              ; preds = %210
  %222 = call %41* @timelib_builtin_db()
  br label %223

223:                                              ; preds = %221, %219
  %224 = phi %41* [ %220, %219 ], [ %222, %221 ]
  %225 = call %52* @timelib_strtotime(i8* %213, i64 %216, %34** %7, %41* %224, %53* (i8*, %41*, i32*)* @php_date_parse_tzfile_wrapper)
  store %52* %225, %52** %6, align 8
  %226 = load %34*, %34** %7, align 8
  %227 = getelementptr inbounds %34, %34* %226, i32 0, i32 2
  %228 = load i32, i32* %227, align 8
  %229 = icmp sgt i32 %228, 0
  br i1 %229, label %230, label %271

230:                                              ; preds = %223
  %231 = load %28*, %28** %5, align 8
  %232 = getelementptr inbounds %28, %28* %231, i32 0, i32 3
  %233 = getelementptr inbounds [1 x i8], [1 x i8]* %232, i32 0, i32 0
  %234 = load %34*, %34** %7, align 8
  %235 = getelementptr inbounds %34, %34* %234, i32 0, i32 0
  %236 = load %35*, %35** %235, align 8
  %237 = getelementptr inbounds %35, %35* %236, i64 0
  %238 = getelementptr inbounds %35, %35* %237, i32 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = load %34*, %34** %7, align 8
  %241 = getelementptr inbounds %34, %34* %240, i32 0, i32 0
  %242 = load %35*, %35** %241, align 8
  %243 = getelementptr inbounds %35, %35* %242, i64 0
  %244 = getelementptr inbounds %35, %35* %243, i32 0, i32 2
  %245 = load i8, i8* %244, align 8
  %246 = sext i8 %245 to i32
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %248, label %256

248:                                              ; preds = %230
  %249 = load %34*, %34** %7, align 8
  %250 = getelementptr inbounds %34, %34* %249, i32 0, i32 0
  %251 = load %35*, %35** %250, align 8
  %252 = getelementptr inbounds %35, %35* %251, i64 0
  %253 = getelementptr inbounds %35, %35* %252, i32 0, i32 2
  %254 = load i8, i8* %253, align 8
  %255 = sext i8 %254 to i32
  br label %257

256:                                              ; preds = %230
  br label %257

257:                                              ; preds = %256, %248
  %258 = phi i32 [ %255, %248 ], [ 32, %256 ]
  %259 = load %34*, %34** %7, align 8
  %260 = getelementptr inbounds %34, %34* %259, i32 0, i32 0
  %261 = load %35*, %35** %260, align 8
  %262 = getelementptr inbounds %35, %35* %261, i64 0
  %263 = getelementptr inbounds %35, %35* %262, i32 0, i32 3
  %264 = load i8*, i8** %263, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @260, i32 0, i32 0), i8* %233, i32 %239, i32 %258, i8* %264)
  br label %265

265:                                              ; preds = %257
  %266 = load %29*, %29** %4, align 8
  %267 = getelementptr inbounds %29, %29* %266, i32 0, i32 1
  %268 = bitcast %31* %267 to i32*
  store i32 2, i32* %268, align 8
  br label %269

269:                                              ; preds = %265
  br label %270

270:                                              ; preds = %269
  br label %287

271:                                              ; preds = %223
  %272 = load %6*, %6** @date_ce_interval, align 8
  %273 = load %29*, %29** %4, align 8
  %274 = call %29* @php_date_instantiate(%6* %272, %29* %273)
  %275 = load %29*, %29** %4, align 8
  %276 = getelementptr inbounds %29, %29* %275, i32 0, i32 0
  %277 = bitcast %30* %276 to %15**
  %278 = load %15*, %15** %277, align 8
  %279 = call %68* @505(%15* %278)
  store %68* %279, %68** %8, align 8
  %280 = load %52*, %52** %6, align 8
  %281 = getelementptr inbounds %52, %52* %280, i32 0, i32 11
  %282 = call %59* @timelib_rel_time_clone(%59* %281)
  %283 = load %68*, %68** %8, align 8
  %284 = getelementptr inbounds %68, %68* %283, i32 0, i32 0
  store %59* %282, %59** %284, align 8
  %285 = load %68*, %68** %8, align 8
  %286 = getelementptr inbounds %68, %68* %285, i32 0, i32 2
  store i32 1, i32* %286, align 8
  br label %287

287:                                              ; preds = %271, %270
  %288 = load %52*, %52** %6, align 8
  call void @timelib_time_dtor(%52* %288)
  %289 = load %34*, %34** %7, align 8
  call void @timelib_error_container_dtor(%34* %289)
  store i32 0, i32* %21, align 4
  br label %290

290:                                              ; preds = %287, %196
  %291 = bitcast %68** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %291) #15
  %292 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %292) #15
  %293 = bitcast %52** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %293) #15
  %294 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %294) #15
  %295 = load i32, i32* %21, align 4
  switch i32 %295, label %297 [
    i32 0, label %296
    i32 1, label %296
  ]

296:                                              ; preds = %290, %290
  ret void

297:                                              ; preds = %290
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_interval_format(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %68*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %29*, align 8
  %11 = alloca %28*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %12 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = load %1*, %1** %3, align 8
  %17 = getelementptr inbounds %1, %1* %16, i32 0, i32 4
  %18 = getelementptr inbounds %29, %29* %17, i32 0, i32 2
  %19 = bitcast %32* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = load %1*, %1** %3, align 8
  %22 = getelementptr inbounds %1, %1* %21, i32 0, i32 4
  %23 = call zeroext i8 @490(%29* %22)
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 8
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = load %1*, %1** %3, align 8
  %28 = getelementptr inbounds %1, %1* %27, i32 0, i32 4
  br label %30

29:                                               ; preds = %2
  br label %30

30:                                               ; preds = %29, %26
  %31 = phi %29* [ %28, %26 ], [ null, %29 ]
  %32 = load %6*, %6** @date_ce_interval, align 8
  %33 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %20, %29* %31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @230, i32 0, i32 0), %29** %5, %6* %32, i8** %7, i64* %8)
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  br label %36

36:                                               ; preds = %35
  %37 = load %29*, %29** %4, align 8
  %38 = getelementptr inbounds %29, %29* %37, i32 0, i32 1
  %39 = bitcast %31* %38 to i32*
  store i32 2, i32* %39, align 8
  br label %40

40:                                               ; preds = %36
  br label %41

41:                                               ; preds = %40
  store i32 1, i32* %9, align 4
  br label %92

42:                                               ; preds = %30
  %43 = load %29*, %29** %5, align 8
  %44 = getelementptr inbounds %29, %29* %43, i32 0, i32 0
  %45 = bitcast %30* %44 to %15**
  %46 = load %15*, %15** %45, align 8
  %47 = call %68* @505(%15* %46)
  store %68* %47, %68** %6, align 8
  %48 = load %68*, %68** %6, align 8
  %49 = getelementptr inbounds %68, %68* %48, i32 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %42
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @261, i32 0, i32 0))
  br label %53

53:                                               ; preds = %52
  %54 = load %29*, %29** %4, align 8
  %55 = getelementptr inbounds %29, %29* %54, i32 0, i32 1
  %56 = bitcast %31* %55 to i32*
  store i32 2, i32* %56, align 8
  br label %57

57:                                               ; preds = %53
  br label %58

58:                                               ; preds = %57
  store i32 1, i32* %9, align 4
  br label %92

59:                                               ; preds = %42
  br label %60

60:                                               ; preds = %59
  %61 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #15
  %62 = load %29*, %29** %4, align 8
  store %29* %62, %29** %10, align 8
  %63 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #15
  %64 = load i8*, i8** %7, align 8
  %65 = load i64, i64* %8, align 8
  %66 = load %68*, %68** %6, align 8
  %67 = getelementptr inbounds %68, %68* %66, i32 0, i32 0
  %68 = load %59*, %59** %67, align 8
  %69 = call %28* @516(i8* %64, i64 %65, %59* %68)
  store %28* %69, %28** %11, align 8
  %70 = load %28*, %28** %11, align 8
  %71 = load %29*, %29** %10, align 8
  %72 = getelementptr inbounds %29, %29* %71, i32 0, i32 0
  %73 = bitcast %30* %72 to %28**
  store %28* %70, %28** %73, align 8
  %74 = load %28*, %28** %11, align 8
  %75 = getelementptr inbounds %28, %28* %74, i32 0, i32 0
  %76 = getelementptr inbounds %8, %8* %75, i32 0, i32 1
  %77 = bitcast %9* %76 to %62*
  %78 = getelementptr inbounds %62, %62* %77, i32 0, i32 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = and i32 %80, 2
  %82 = icmp ne i32 %81, 0
  %83 = zext i1 %82 to i64
  %84 = select i1 %82, i32 6, i32 5126
  %85 = load %29*, %29** %10, align 8
  %86 = getelementptr inbounds %29, %29* %85, i32 0, i32 1
  %87 = bitcast %31* %86 to i32*
  store i32 %84, i32* %87, align 8
  %88 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #15
  %89 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #15
  br label %90

90:                                               ; preds = %60
  br label %91

91:                                               ; preds = %90
  store i32 1, i32* %9, align 4
  br label %92

92:                                               ; preds = %91, %58, %41
  %93 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #15
  %94 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #15
  %95 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #15
  %96 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_default_timezone_set(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %29*, align 8
  %13 = alloca %29*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %20 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #15
  store i32 0, i32* %7, align 4
  %24 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #15
  store i32 1, i32* %8, align 4
  %25 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 1, i32* %9, align 4
  %26 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  %27 = load %1*, %1** %3, align 8
  %28 = getelementptr inbounds %1, %1* %27, i32 0, i32 4
  %29 = getelementptr inbounds %29, %29* %28, i32 0, i32 2
  %30 = bitcast %32* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #15
  %33 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #15
  %34 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #15
  store %29* null, %29** %13, align 8
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #15
  store i32 0, i32* %14, align 4
  %36 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  store i8 0, i8* %17, align 1
  %37 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %18, align 4
  %38 = load i32, i32* %11, align 4
  %39 = load %29*, %29** %12, align 8
  %40 = load %29*, %29** %13, align 8
  %41 = load i32, i32* %14, align 4
  %42 = load i8*, i8** %15, align 8
  %43 = load i8, i8* %16, align 1
  %44 = load i8, i8* %17, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %10, align 4
  %47 = load i32, i32* %8, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %10, align 4
  %57 = load i32, i32* %9, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %9, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %10, align 4
  %76 = load i32, i32* %8, align 4
  %77 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %18, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %11, align 4
  %79 = load %1*, %1** %3, align 8
  %80 = bitcast %1* %79 to %29*
  %81 = getelementptr inbounds %29, %29* %80, i64 4
  store %29* %81, %29** %12, align 8
  %82 = load i32, i32* %11, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %11, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %11, align 4
  %86 = load i32, i32* %8, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %17, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %11, align 4
  %105 = load i32, i32* %8, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %17, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %17, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %11, align 4
  %126 = load i32, i32* %10, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %29*, %29** %12, align 8
  %138 = getelementptr inbounds %29, %29* %137, i32 1
  store %29* %138, %29** %12, align 8
  %139 = load %29*, %29** %12, align 8
  store %29* %139, %29** %13, align 8
  %140 = load %29*, %29** %13, align 8
  %141 = call i32 @487(%29* %140, i8** %5, i64* %6, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %18, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %191

162:                                              ; preds = %153
  %163 = load i32, i32* %18, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %11, align 4
  %167 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %18, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %11, align 4
  %173 = load i8*, i8** %15, align 8
  %174 = load %29*, %29** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %29* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %18, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %11, align 4
  %180 = load i32, i32* %14, align 4
  %181 = load %29*, %29** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %29* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  br label %185

185:                                              ; preds = %184
  %186 = load %29*, %29** %4, align 8
  %187 = getelementptr inbounds %29, %29* %186, i32 0, i32 1
  %188 = bitcast %31* %187 to i32*
  store i32 2, i32* %188, align 8
  br label %189

189:                                              ; preds = %185
  br label %190

190:                                              ; preds = %189
  store i32 1, i32* %19, align 4
  br label %192

191:                                              ; preds = %153
  store i32 0, i32* %19, align 4
  br label %192

192:                                              ; preds = %191, %190
  %193 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #15
  %194 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #15
  %195 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #15
  %196 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #15
  %197 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #15
  %198 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #15
  %199 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #15
  %200 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #15
  %201 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #15
  %202 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #15
  %203 = load i32, i32* %19, align 4
  switch i32 %203, label %241 [
    i32 0, label %204
  ]

204:                                              ; preds = %192
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  %207 = load i8*, i8** %5, align 8
  %208 = load %41*, %41** @php_date_global_timezone_db, align 8
  %209 = icmp ne %41* %208, null
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  %211 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %214

212:                                              ; preds = %206
  %213 = call %41* @timelib_builtin_db()
  br label %214

214:                                              ; preds = %212, %210
  %215 = phi %41* [ %211, %210 ], [ %213, %212 ]
  %216 = call i32 @timelib_timezone_id_is_valid(i8* %207, %41* %215)
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %226, label %218

218:                                              ; preds = %214
  %219 = load i8*, i8** %5, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @273, i32 0, i32 0), i8* %219)
  br label %220

220:                                              ; preds = %218
  %221 = load %29*, %29** %4, align 8
  %222 = getelementptr inbounds %29, %29* %221, i32 0, i32 1
  %223 = bitcast %31* %222 to i32*
  store i32 2, i32* %223, align 8
  br label %224

224:                                              ; preds = %220
  br label %225

225:                                              ; preds = %224
  store i32 1, i32* %19, align 4
  br label %241

226:                                              ; preds = %214
  %227 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  %228 = icmp ne i8* %227, null
  br i1 %228, label %229, label %231

229:                                              ; preds = %226
  %230 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  call void @_efree(i8* %230)
  store i8* null, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  br label %231

231:                                              ; preds = %229, %226
  %232 = load i8*, i8** %5, align 8
  %233 = load i64, i64* %6, align 8
  %234 = call noalias i8* @_estrndup(i8* %232, i64 %233)
  store i8* %234, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  br label %235

235:                                              ; preds = %231
  %236 = load %29*, %29** %4, align 8
  %237 = getelementptr inbounds %29, %29* %236, i32 0, i32 1
  %238 = bitcast %31* %237 to i32*
  store i32 3, i32* %238, align 8
  br label %239

239:                                              ; preds = %235
  br label %240

240:                                              ; preds = %239
  store i32 1, i32* %19, align 4
  br label %241

241:                                              ; preds = %240, %225, %192
  %242 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %242) #15
  %243 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %243) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_default_timezone_get(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %53*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %29*, align 8
  %8 = alloca %28*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %9 = bitcast %53** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = call %53* @get_timezone_info()
  store %53* %10, %53** %5, align 8
  br label %11

11:                                               ; preds = %2
  %12 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = load %53*, %53** %5, align 8
  %14 = getelementptr inbounds %53, %53* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %6, align 8
  br label %16

16:                                               ; preds = %11
  br label %17

17:                                               ; preds = %16
  %18 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  %19 = load %29*, %29** %4, align 8
  store %29* %19, %29** %7, align 8
  %20 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = load i8*, i8** %6, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = call i64 @strlen(i8* %22) #16
  %24 = call %28* @510(i8* %21, i64 %23, i32 0)
  store %28* %24, %28** %8, align 8
  %25 = load %28*, %28** %8, align 8
  %26 = load %29*, %29** %7, align 8
  %27 = getelementptr inbounds %29, %29* %26, i32 0, i32 0
  %28 = bitcast %30* %27 to %28**
  store %28* %25, %28** %28, align 8
  %29 = load %29*, %29** %7, align 8
  %30 = getelementptr inbounds %29, %29* %29, i32 0, i32 1
  %31 = bitcast %31* %30 to i32*
  store i32 5126, i32* %31, align 8
  %32 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #15
  %33 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #15
  br label %34

34:                                               ; preds = %17
  br label %35

35:                                               ; preds = %34
  br label %36

36:                                               ; preds = %35
  br label %37

37:                                               ; preds = %36
  %38 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #15
  br label %39

39:                                               ; preds = %37
  br label %40

40:                                               ; preds = %39
  %41 = bitcast %53** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_sunrise(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %1*, %1** %3, align 8
  %6 = load %29*, %29** %4, align 8
  call void @519(%1* %5, %29* %6, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_sunset(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %1*, %1** %3, align 8
  %6 = load %29*, %29** %4, align 8
  call void @519(%1* %5, %29* %6, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_date_sun_info(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca %52*, align 8
  %9 = alloca %52*, align 8
  %10 = alloca %53*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca double, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %29*, align 8
  %23 = alloca %29*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %30 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #15
  %31 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #15
  %32 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #15
  %33 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #15
  %34 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #15
  %35 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #15
  %37 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  %38 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  %39 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #15
  %40 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #15
  %41 = bitcast double* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #15
  br label %42

42:                                               ; preds = %2
  %43 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #15
  store i32 0, i32* %17, align 4
  %44 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #15
  store i32 3, i32* %18, align 4
  %45 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #15
  store i32 3, i32* %19, align 4
  %46 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #15
  %47 = load %1*, %1** %3, align 8
  %48 = getelementptr inbounds %1, %1* %47, i32 0, i32 4
  %49 = getelementptr inbounds %29, %29* %48, i32 0, i32 2
  %50 = bitcast %32* %49 to i32*
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %20, align 4
  %52 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #15
  %53 = bitcast %29** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #15
  %54 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #15
  store %29* null, %29** %23, align 8
  %55 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #15
  store i32 0, i32* %24, align 4
  %56 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #15
  store i8* null, i8** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %26) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %27) #15
  store i8 0, i8* %27, align 1
  %57 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #15
  store i32 0, i32* %28, align 4
  %58 = load i32, i32* %21, align 4
  %59 = load %29*, %29** %22, align 8
  %60 = load %29*, %29** %23, align 8
  %61 = load i32, i32* %24, align 4
  %62 = load i8*, i8** %25, align 8
  %63 = load i8, i8* %26, align 1
  %64 = load i8, i8* %27, align 1
  br label %65

65:                                               ; preds = %42
  %66 = load i32, i32* %20, align 4
  %67 = load i32, i32* %18, align 4
  %68 = icmp slt i32 %66, %67
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 0)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %94, label %75

75:                                               ; preds = %65
  %76 = load i32, i32* %20, align 4
  %77 = load i32, i32* %19, align 4
  %78 = icmp sgt i32 %76, %77
  %79 = xor i1 %78, true
  %80 = xor i1 %79, true
  %81 = zext i1 %80 to i32
  %82 = sext i32 %81 to i64
  %83 = call i64 @llvm.expect.i64(i64 %82, i64 0)
  %84 = icmp ne i64 %83, 0
  br i1 %84, label %85, label %98

85:                                               ; preds = %75
  %86 = load i32, i32* %19, align 4
  %87 = icmp sge i32 %86, 0
  %88 = xor i1 %87, true
  %89 = xor i1 %88, true
  %90 = zext i1 %89 to i32
  %91 = sext i32 %90 to i64
  %92 = call i64 @llvm.expect.i64(i64 %91, i64 1)
  %93 = icmp ne i64 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %85, %65
  %95 = load i32, i32* %20, align 4
  %96 = load i32, i32* %18, align 4
  %97 = load i32, i32* %19, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %95, i32 %96, i32 %97)
  store i32 1, i32* %28, align 4
  br label %313

98:                                               ; preds = %85, %75
  store i32 0, i32* %21, align 4
  %99 = load %1*, %1** %3, align 8
  %100 = bitcast %1* %99 to %29*
  %101 = getelementptr inbounds %29, %29* %100, i64 4
  store %29* %101, %29** %22, align 8
  %102 = load i32, i32* %21, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %21, align 4
  br label %104

104:                                              ; preds = %98
  %105 = load i32, i32* %21, align 4
  %106 = load i32, i32* %18, align 4
  %107 = icmp sle i32 %105, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %104
  %109 = load i8, i8* %27, align 1
  %110 = zext i8 %109 to i32
  %111 = icmp eq i32 %110, 1
  br label %112

112:                                              ; preds = %108, %104
  %113 = phi i1 [ true, %104 ], [ %111, %108 ]
  %114 = xor i1 %113, true
  %115 = zext i1 %114 to i32
  %116 = sext i32 %115 to i64
  %117 = call i64 @llvm.expect.i64(i64 %116, i64 0)
  %118 = icmp ne i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %112
  unreachable

120:                                              ; preds = %112
  br label %121

121:                                              ; preds = %120
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i32, i32* %21, align 4
  %125 = load i32, i32* %18, align 4
  %126 = icmp sgt i32 %124, %125
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = load i8, i8* %27, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 0
  br label %131

131:                                              ; preds = %127, %123
  %132 = phi i1 [ true, %123 ], [ %130, %127 ]
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %131
  unreachable

139:                                              ; preds = %131
  br label %140

140:                                              ; preds = %139
  br label %141

141:                                              ; preds = %140
  %142 = load i8, i8* %27, align 1
  %143 = icmp ne i8 %142, 0
  br i1 %143, label %144, label %156

144:                                              ; preds = %141
  %145 = load i32, i32* %21, align 4
  %146 = load i32, i32* %20, align 4
  %147 = icmp sgt i32 %145, %146
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %144
  br label %313

155:                                              ; preds = %144
  br label %156

156:                                              ; preds = %155, %141
  %157 = load %29*, %29** %22, align 8
  %158 = getelementptr inbounds %29, %29* %157, i32 1
  store %29* %158, %29** %22, align 8
  %159 = load %29*, %29** %22, align 8
  store %29* %159, %29** %23, align 8
  %160 = load %29*, %29** %23, align 8
  %161 = call i32 @469(%29* %160, i64* %5, i8* %26, i32 0, i32 0)
  %162 = icmp ne i32 %161, 0
  %163 = xor i1 %162, true
  %164 = xor i1 %163, true
  %165 = xor i1 %164, true
  %166 = zext i1 %165 to i32
  %167 = sext i32 %166 to i64
  %168 = call i64 @llvm.expect.i64(i64 %167, i64 0)
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %156
  store i32 0, i32* %24, align 4
  store i32 4, i32* %28, align 4
  br label %313

171:                                              ; preds = %156
  %172 = load i32, i32* %21, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %21, align 4
  br label %174

174:                                              ; preds = %171
  %175 = load i32, i32* %21, align 4
  %176 = load i32, i32* %18, align 4
  %177 = icmp sle i32 %175, %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = load i8, i8* %27, align 1
  %180 = zext i8 %179 to i32
  %181 = icmp eq i32 %180, 1
  br label %182

182:                                              ; preds = %178, %174
  %183 = phi i1 [ true, %174 ], [ %181, %178 ]
  %184 = xor i1 %183, true
  %185 = zext i1 %184 to i32
  %186 = sext i32 %185 to i64
  %187 = call i64 @llvm.expect.i64(i64 %186, i64 0)
  %188 = icmp ne i64 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %182
  unreachable

190:                                              ; preds = %182
  br label %191

191:                                              ; preds = %190
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  %194 = load i32, i32* %21, align 4
  %195 = load i32, i32* %18, align 4
  %196 = icmp sgt i32 %194, %195
  br i1 %196, label %201, label %197

197:                                              ; preds = %193
  %198 = load i8, i8* %27, align 1
  %199 = zext i8 %198 to i32
  %200 = icmp eq i32 %199, 0
  br label %201

201:                                              ; preds = %197, %193
  %202 = phi i1 [ true, %193 ], [ %200, %197 ]
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %201
  unreachable

209:                                              ; preds = %201
  br label %210

210:                                              ; preds = %209
  br label %211

211:                                              ; preds = %210
  %212 = load i8, i8* %27, align 1
  %213 = icmp ne i8 %212, 0
  br i1 %213, label %214, label %226

214:                                              ; preds = %211
  %215 = load i32, i32* %21, align 4
  %216 = load i32, i32* %20, align 4
  %217 = icmp sgt i32 %215, %216
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %214
  br label %313

225:                                              ; preds = %214
  br label %226

226:                                              ; preds = %225, %211
  %227 = load %29*, %29** %22, align 8
  %228 = getelementptr inbounds %29, %29* %227, i32 1
  store %29* %228, %29** %22, align 8
  %229 = load %29*, %29** %22, align 8
  store %29* %229, %29** %23, align 8
  %230 = load %29*, %29** %23, align 8
  %231 = call i32 @520(%29* %230, double* %6, i8* %26, i32 0)
  %232 = icmp ne i32 %231, 0
  %233 = xor i1 %232, true
  %234 = xor i1 %233, true
  %235 = xor i1 %234, true
  %236 = zext i1 %235 to i32
  %237 = sext i32 %236 to i64
  %238 = call i64 @llvm.expect.i64(i64 %237, i64 0)
  %239 = icmp ne i64 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %226
  store i32 8, i32* %24, align 4
  store i32 4, i32* %28, align 4
  br label %313

241:                                              ; preds = %226
  %242 = load i32, i32* %21, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %21, align 4
  br label %244

244:                                              ; preds = %241
  %245 = load i32, i32* %21, align 4
  %246 = load i32, i32* %18, align 4
  %247 = icmp sle i32 %245, %246
  br i1 %247, label %252, label %248

248:                                              ; preds = %244
  %249 = load i8, i8* %27, align 1
  %250 = zext i8 %249 to i32
  %251 = icmp eq i32 %250, 1
  br label %252

252:                                              ; preds = %248, %244
  %253 = phi i1 [ true, %244 ], [ %251, %248 ]
  %254 = xor i1 %253, true
  %255 = zext i1 %254 to i32
  %256 = sext i32 %255 to i64
  %257 = call i64 @llvm.expect.i64(i64 %256, i64 0)
  %258 = icmp ne i64 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %252
  unreachable

260:                                              ; preds = %252
  br label %261

261:                                              ; preds = %260
  br label %262

262:                                              ; preds = %261
  br label %263

263:                                              ; preds = %262
  %264 = load i32, i32* %21, align 4
  %265 = load i32, i32* %18, align 4
  %266 = icmp sgt i32 %264, %265
  br i1 %266, label %271, label %267

267:                                              ; preds = %263
  %268 = load i8, i8* %27, align 1
  %269 = zext i8 %268 to i32
  %270 = icmp eq i32 %269, 0
  br label %271

271:                                              ; preds = %267, %263
  %272 = phi i1 [ true, %263 ], [ %270, %267 ]
  %273 = xor i1 %272, true
  %274 = zext i1 %273 to i32
  %275 = sext i32 %274 to i64
  %276 = call i64 @llvm.expect.i64(i64 %275, i64 0)
  %277 = icmp ne i64 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %271
  unreachable

279:                                              ; preds = %271
  br label %280

280:                                              ; preds = %279
  br label %281

281:                                              ; preds = %280
  %282 = load i8, i8* %27, align 1
  %283 = icmp ne i8 %282, 0
  br i1 %283, label %284, label %296

284:                                              ; preds = %281
  %285 = load i32, i32* %21, align 4
  %286 = load i32, i32* %20, align 4
  %287 = icmp sgt i32 %285, %286
  %288 = xor i1 %287, true
  %289 = xor i1 %288, true
  %290 = zext i1 %289 to i32
  %291 = sext i32 %290 to i64
  %292 = call i64 @llvm.expect.i64(i64 %291, i64 0)
  %293 = icmp ne i64 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %284
  br label %313

295:                                              ; preds = %284
  br label %296

296:                                              ; preds = %295, %281
  %297 = load %29*, %29** %22, align 8
  %298 = getelementptr inbounds %29, %29* %297, i32 1
  store %29* %298, %29** %22, align 8
  %299 = load %29*, %29** %22, align 8
  store %29* %299, %29** %23, align 8
  %300 = load %29*, %29** %23, align 8
  %301 = call i32 @520(%29* %300, double* %7, i8* %26, i32 0)
  %302 = icmp ne i32 %301, 0
  %303 = xor i1 %302, true
  %304 = xor i1 %303, true
  %305 = xor i1 %304, true
  %306 = zext i1 %305 to i32
  %307 = sext i32 %306 to i64
  %308 = call i64 @llvm.expect.i64(i64 %307, i64 0)
  %309 = icmp ne i64 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %296
  store i32 8, i32* %24, align 4
  store i32 4, i32* %28, align 4
  br label %313

311:                                              ; preds = %296
  br label %312

312:                                              ; preds = %311
  br label %313

313:                                              ; preds = %312, %310, %294, %240, %224, %170, %154, %94
  %314 = load i32, i32* %28, align 4
  %315 = icmp ne i32 %314, 0
  %316 = xor i1 %315, true
  %317 = xor i1 %316, true
  %318 = zext i1 %317 to i32
  %319 = sext i32 %318 to i64
  %320 = call i64 @llvm.expect.i64(i64 %319, i64 0)
  %321 = icmp ne i64 %320, 0
  br i1 %321, label %322, label %351

322:                                              ; preds = %313
  %323 = load i32, i32* %28, align 4
  %324 = icmp eq i32 %323, 2
  br i1 %324, label %325, label %328

325:                                              ; preds = %322
  %326 = load i32, i32* %21, align 4
  %327 = load i8*, i8** %25, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %326, i8* %327)
  br label %344

328:                                              ; preds = %322
  %329 = load i32, i32* %28, align 4
  %330 = icmp eq i32 %329, 3
  br i1 %330, label %331, label %335

331:                                              ; preds = %328
  %332 = load i32, i32* %21, align 4
  %333 = load i8*, i8** %25, align 8
  %334 = load %29*, %29** %23, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %332, i8* %333, %29* %334)
  br label %343

335:                                              ; preds = %328
  %336 = load i32, i32* %28, align 4
  %337 = icmp eq i32 %336, 4
  br i1 %337, label %338, label %342

338:                                              ; preds = %335
  %339 = load i32, i32* %21, align 4
  %340 = load i32, i32* %24, align 4
  %341 = load %29*, %29** %23, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %339, i32 %340, %29* %341)
  br label %342

342:                                              ; preds = %338, %335
  br label %343

343:                                              ; preds = %342, %331
  br label %344

344:                                              ; preds = %343, %325
  br label %345

345:                                              ; preds = %344
  %346 = load %29*, %29** %4, align 8
  %347 = getelementptr inbounds %29, %29* %346, i32 0, i32 1
  %348 = bitcast %31* %347 to i32*
  store i32 2, i32* %348, align 8
  br label %349

349:                                              ; preds = %345
  br label %350

350:                                              ; preds = %349
  store i32 1, i32* %29, align 4
  br label %352

351:                                              ; preds = %313
  store i32 0, i32* %29, align 4
  br label %352

352:                                              ; preds = %351, %350
  %353 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %353) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %27) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %26) #15
  %354 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %354) #15
  %355 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %355) #15
  %356 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %356) #15
  %357 = bitcast %29** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %357) #15
  %358 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %358) #15
  %359 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %359) #15
  %360 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %360) #15
  %361 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %361) #15
  %362 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %362) #15
  %363 = load i32, i32* %29, align 4
  switch i32 %363, label %512 [
    i32 0, label %364
  ]

364:                                              ; preds = %352
  br label %365

365:                                              ; preds = %364
  br label %366

366:                                              ; preds = %365
  %367 = call %52* @timelib_time_ctor()
  store %52* %367, %52** %8, align 8
  %368 = call %53* @get_timezone_info()
  store %53* %368, %53** %10, align 8
  %369 = load %53*, %53** %10, align 8
  %370 = load %52*, %52** %8, align 8
  %371 = getelementptr inbounds %52, %52* %370, i32 0, i32 9
  store %53* %369, %53** %371, align 8
  %372 = load %52*, %52** %8, align 8
  %373 = getelementptr inbounds %52, %52* %372, i32 0, i32 21
  store i32 3, i32* %373, align 8
  %374 = load %52*, %52** %8, align 8
  %375 = load i64, i64* %5, align 8
  call void @timelib_unixtime2local(%52* %374, i64 %375)
  %376 = call %52* @timelib_time_ctor()
  store %52* %376, %52** %9, align 8
  %377 = load %29*, %29** %4, align 8
  %378 = call i32 @_array_init(%29* %377, i32 0)
  %379 = load %52*, %52** %8, align 8
  %380 = load double, double* %7, align 8
  %381 = load double, double* %6, align 8
  %382 = call i32 @timelib_astro_rise_set_altitude(%52* %379, double %380, double %381, double 0xBFE2AAAAAAAAAAAB, i32 1, double* %16, double* %16, i64* %12, i64* %13, i64* %14)
  store i32 %382, i32* %11, align 4
  %383 = load i32, i32* %11, align 4
  switch i32 %383, label %394 [
    i32 -1, label %384
    i32 1, label %389
  ]

384:                                              ; preds = %366
  %385 = load %29*, %29** %4, align 8
  %386 = call i32 @add_assoc_bool_ex(%29* %385, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @274, i32 0, i32 0), i64 7, i32 0)
  %387 = load %29*, %29** %4, align 8
  %388 = call i32 @add_assoc_bool_ex(%29* %387, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @275, i32 0, i32 0), i64 6, i32 0)
  br label %409

389:                                              ; preds = %366
  %390 = load %29*, %29** %4, align 8
  %391 = call i32 @add_assoc_bool_ex(%29* %390, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @274, i32 0, i32 0), i64 7, i32 1)
  %392 = load %29*, %29** %4, align 8
  %393 = call i32 @add_assoc_bool_ex(%29* %392, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @275, i32 0, i32 0), i64 6, i32 1)
  br label %409

394:                                              ; preds = %366
  %395 = load i64, i64* %12, align 8
  %396 = load %52*, %52** %9, align 8
  %397 = getelementptr inbounds %52, %52* %396, i32 0, i32 12
  store i64 %395, i64* %397, align 8
  %398 = load %29*, %29** %4, align 8
  %399 = load %52*, %52** %9, align 8
  %400 = call i64 @timelib_date_to_int(%52* %399, i32* %15)
  %401 = call i32 @add_assoc_long_ex(%29* %398, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @274, i32 0, i32 0), i64 7, i64 %400)
  %402 = load i64, i64* %13, align 8
  %403 = load %52*, %52** %9, align 8
  %404 = getelementptr inbounds %52, %52* %403, i32 0, i32 12
  store i64 %402, i64* %404, align 8
  %405 = load %29*, %29** %4, align 8
  %406 = load %52*, %52** %9, align 8
  %407 = call i64 @timelib_date_to_int(%52* %406, i32* %15)
  %408 = call i32 @add_assoc_long_ex(%29* %405, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @275, i32 0, i32 0), i64 6, i64 %407)
  br label %409

409:                                              ; preds = %394, %389, %384
  %410 = load i64, i64* %14, align 8
  %411 = load %52*, %52** %9, align 8
  %412 = getelementptr inbounds %52, %52* %411, i32 0, i32 12
  store i64 %410, i64* %412, align 8
  %413 = load %29*, %29** %4, align 8
  %414 = load %52*, %52** %9, align 8
  %415 = call i64 @timelib_date_to_int(%52* %414, i32* %15)
  %416 = call i32 @add_assoc_long_ex(%29* %413, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @276, i32 0, i32 0), i64 7, i64 %415)
  %417 = load %52*, %52** %8, align 8
  %418 = load double, double* %7, align 8
  %419 = load double, double* %6, align 8
  %420 = call i32 @timelib_astro_rise_set_altitude(%52* %417, double %418, double %419, double -6.000000e+00, i32 0, double* %16, double* %16, i64* %12, i64* %13, i64* %14)
  store i32 %420, i32* %11, align 4
  %421 = load i32, i32* %11, align 4
  switch i32 %421, label %432 [
    i32 -1, label %422
    i32 1, label %427
  ]

422:                                              ; preds = %409
  %423 = load %29*, %29** %4, align 8
  %424 = call i32 @add_assoc_bool_ex(%29* %423, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @277, i32 0, i32 0), i64 20, i32 0)
  %425 = load %29*, %29** %4, align 8
  %426 = call i32 @add_assoc_bool_ex(%29* %425, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @278, i32 0, i32 0), i64 18, i32 0)
  br label %447

427:                                              ; preds = %409
  %428 = load %29*, %29** %4, align 8
  %429 = call i32 @add_assoc_bool_ex(%29* %428, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @277, i32 0, i32 0), i64 20, i32 1)
  %430 = load %29*, %29** %4, align 8
  %431 = call i32 @add_assoc_bool_ex(%29* %430, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @278, i32 0, i32 0), i64 18, i32 1)
  br label %447

432:                                              ; preds = %409
  %433 = load i64, i64* %12, align 8
  %434 = load %52*, %52** %9, align 8
  %435 = getelementptr inbounds %52, %52* %434, i32 0, i32 12
  store i64 %433, i64* %435, align 8
  %436 = load %29*, %29** %4, align 8
  %437 = load %52*, %52** %9, align 8
  %438 = call i64 @timelib_date_to_int(%52* %437, i32* %15)
  %439 = call i32 @add_assoc_long_ex(%29* %436, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @277, i32 0, i32 0), i64 20, i64 %438)
  %440 = load i64, i64* %13, align 8
  %441 = load %52*, %52** %9, align 8
  %442 = getelementptr inbounds %52, %52* %441, i32 0, i32 12
  store i64 %440, i64* %442, align 8
  %443 = load %29*, %29** %4, align 8
  %444 = load %52*, %52** %9, align 8
  %445 = call i64 @timelib_date_to_int(%52* %444, i32* %15)
  %446 = call i32 @add_assoc_long_ex(%29* %443, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @278, i32 0, i32 0), i64 18, i64 %445)
  br label %447

447:                                              ; preds = %432, %427, %422
  %448 = load %52*, %52** %8, align 8
  %449 = load double, double* %7, align 8
  %450 = load double, double* %6, align 8
  %451 = call i32 @timelib_astro_rise_set_altitude(%52* %448, double %449, double %450, double -1.200000e+01, i32 0, double* %16, double* %16, i64* %12, i64* %13, i64* %14)
  store i32 %451, i32* %11, align 4
  %452 = load i32, i32* %11, align 4
  switch i32 %452, label %463 [
    i32 -1, label %453
    i32 1, label %458
  ]

453:                                              ; preds = %447
  %454 = load %29*, %29** %4, align 8
  %455 = call i32 @add_assoc_bool_ex(%29* %454, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @279, i32 0, i32 0), i64 23, i32 0)
  %456 = load %29*, %29** %4, align 8
  %457 = call i32 @add_assoc_bool_ex(%29* %456, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @280, i32 0, i32 0), i64 21, i32 0)
  br label %478

458:                                              ; preds = %447
  %459 = load %29*, %29** %4, align 8
  %460 = call i32 @add_assoc_bool_ex(%29* %459, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @279, i32 0, i32 0), i64 23, i32 1)
  %461 = load %29*, %29** %4, align 8
  %462 = call i32 @add_assoc_bool_ex(%29* %461, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @280, i32 0, i32 0), i64 21, i32 1)
  br label %478

463:                                              ; preds = %447
  %464 = load i64, i64* %12, align 8
  %465 = load %52*, %52** %9, align 8
  %466 = getelementptr inbounds %52, %52* %465, i32 0, i32 12
  store i64 %464, i64* %466, align 8
  %467 = load %29*, %29** %4, align 8
  %468 = load %52*, %52** %9, align 8
  %469 = call i64 @timelib_date_to_int(%52* %468, i32* %15)
  %470 = call i32 @add_assoc_long_ex(%29* %467, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @279, i32 0, i32 0), i64 23, i64 %469)
  %471 = load i64, i64* %13, align 8
  %472 = load %52*, %52** %9, align 8
  %473 = getelementptr inbounds %52, %52* %472, i32 0, i32 12
  store i64 %471, i64* %473, align 8
  %474 = load %29*, %29** %4, align 8
  %475 = load %52*, %52** %9, align 8
  %476 = call i64 @timelib_date_to_int(%52* %475, i32* %15)
  %477 = call i32 @add_assoc_long_ex(%29* %474, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @280, i32 0, i32 0), i64 21, i64 %476)
  br label %478

478:                                              ; preds = %463, %458, %453
  %479 = load %52*, %52** %8, align 8
  %480 = load double, double* %7, align 8
  %481 = load double, double* %6, align 8
  %482 = call i32 @timelib_astro_rise_set_altitude(%52* %479, double %480, double %481, double -1.800000e+01, i32 0, double* %16, double* %16, i64* %12, i64* %13, i64* %14)
  store i32 %482, i32* %11, align 4
  %483 = load i32, i32* %11, align 4
  switch i32 %483, label %494 [
    i32 -1, label %484
    i32 1, label %489
  ]

484:                                              ; preds = %478
  %485 = load %29*, %29** %4, align 8
  %486 = call i32 @add_assoc_bool_ex(%29* %485, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @281, i32 0, i32 0), i64 27, i32 0)
  %487 = load %29*, %29** %4, align 8
  %488 = call i32 @add_assoc_bool_ex(%29* %487, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @282, i32 0, i32 0), i64 25, i32 0)
  br label %509

489:                                              ; preds = %478
  %490 = load %29*, %29** %4, align 8
  %491 = call i32 @add_assoc_bool_ex(%29* %490, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @281, i32 0, i32 0), i64 27, i32 1)
  %492 = load %29*, %29** %4, align 8
  %493 = call i32 @add_assoc_bool_ex(%29* %492, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @282, i32 0, i32 0), i64 25, i32 1)
  br label %509

494:                                              ; preds = %478
  %495 = load i64, i64* %12, align 8
  %496 = load %52*, %52** %9, align 8
  %497 = getelementptr inbounds %52, %52* %496, i32 0, i32 12
  store i64 %495, i64* %497, align 8
  %498 = load %29*, %29** %4, align 8
  %499 = load %52*, %52** %9, align 8
  %500 = call i64 @timelib_date_to_int(%52* %499, i32* %15)
  %501 = call i32 @add_assoc_long_ex(%29* %498, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @281, i32 0, i32 0), i64 27, i64 %500)
  %502 = load i64, i64* %13, align 8
  %503 = load %52*, %52** %9, align 8
  %504 = getelementptr inbounds %52, %52* %503, i32 0, i32 12
  store i64 %502, i64* %504, align 8
  %505 = load %29*, %29** %4, align 8
  %506 = load %52*, %52** %9, align 8
  %507 = call i64 @timelib_date_to_int(%52* %506, i32* %15)
  %508 = call i32 @add_assoc_long_ex(%29* %505, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @282, i32 0, i32 0), i64 25, i64 %507)
  br label %509

509:                                              ; preds = %494, %489, %484
  %510 = load %52*, %52** %8, align 8
  call void @timelib_time_dtor(%52* %510)
  %511 = load %52*, %52** %9, align 8
  call void @timelib_time_dtor(%52* %511)
  store i32 0, i32* %29, align 4
  br label %512

512:                                              ; preds = %509, %352
  %513 = bitcast double* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %513) #15
  %514 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %514) #15
  %515 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %515) #15
  %516 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %516) #15
  %517 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %517) #15
  %518 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %518) #15
  %519 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %519) #15
  %520 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %520) #15
  %521 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %521) #15
  %522 = bitcast double* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %522) #15
  %523 = bitcast double* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %523) #15
  %524 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %524) #15
  %525 = load i32, i32* %29, align 4
  switch i32 %525, label %527 [
    i32 0, label %526
    i32 1, label %526
  ]

526:                                              ; preds = %512, %512
  ret void

527:                                              ; preds = %512
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTime___construct(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %70, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %22 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  store %29* null, %29** %5, align 8
  %23 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  store i8* null, i8** %6, align 8
  %24 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  store i64 0, i64* %7, align 8
  %25 = bitcast %70* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %25) #15
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 4, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 0, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 2, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  %31 = load %1*, %1** %3, align 8
  %32 = getelementptr inbounds %1, %1* %31, i32 0, i32 4
  %33 = getelementptr inbounds %29, %29* %32, i32 0, i32 2
  %34 = bitcast %32* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #15
  %37 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  %38 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store %29* null, %29** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %29*, %29** %14, align 8
  %44 = load %29*, %29** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 4, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %237

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %1*, %1** %3, align 8
  %84 = bitcast %1* %83 to %29*
  %85 = getelementptr inbounds %29, %29* %84, i64 4
  store %29* %85, %29** %14, align 8
  store i8 1, i8* %19, align 1
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %237

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %29*, %29** %14, align 8
  %142 = getelementptr inbounds %29, %29* %141, i32 1
  store %29* %142, %29** %14, align 8
  %143 = load %29*, %29** %14, align 8
  store %29* %143, %29** %15, align 8
  %144 = load %29*, %29** %15, align 8
  %145 = call i32 @487(%29* %144, i8** %6, i64* %7, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %237

155:                                              ; preds = %140
  %156 = load i32, i32* %13, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %13, align 4
  br label %158

158:                                              ; preds = %155
  %159 = load i32, i32* %13, align 4
  %160 = load i32, i32* %10, align 4
  %161 = icmp sle i32 %159, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i8, i8* %19, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 1
  br label %166

166:                                              ; preds = %162, %158
  %167 = phi i1 [ true, %158 ], [ %165, %162 ]
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  unreachable

174:                                              ; preds = %166
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %13, align 4
  %179 = load i32, i32* %10, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %19, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  %196 = load i8, i8* %19, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %195
  %199 = load i32, i32* %13, align 4
  %200 = load i32, i32* %12, align 4
  %201 = icmp sgt i32 %199, %200
  %202 = xor i1 %201, true
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %198
  br label %237

209:                                              ; preds = %198
  br label %210

210:                                              ; preds = %209, %195
  %211 = load %29*, %29** %14, align 8
  %212 = getelementptr inbounds %29, %29* %211, i32 1
  store %29* %212, %29** %14, align 8
  %213 = load %29*, %29** %14, align 8
  store %29* %213, %29** %15, align 8
  %214 = load %29*, %29** %15, align 8
  %215 = load %6*, %6** @date_ce_timezone, align 8
  %216 = call i32 @488(%29* %214, %29** %5, %6* %215, i32 1)
  %217 = icmp ne i32 %216, 0
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = zext i1 %220 to i32
  %222 = sext i32 %221 to i64
  %223 = call i64 @llvm.expect.i64(i64 %222, i64 0)
  %224 = icmp ne i64 %223, 0
  br i1 %224, label %225, label %235

225:                                              ; preds = %210
  %226 = load %6*, %6** @date_ce_timezone, align 8
  %227 = icmp ne %6* %226, null
  br i1 %227, label %228, label %234

228:                                              ; preds = %225
  %229 = load %6*, %6** @date_ce_timezone, align 8
  %230 = getelementptr inbounds %6, %6* %229, i32 0, i32 1
  %231 = load %28*, %28** %230, align 8
  %232 = getelementptr inbounds %28, %28* %231, i32 0, i32 3
  %233 = getelementptr inbounds [1 x i8], [1 x i8]* %232, i32 0, i32 0
  store i8* %233, i8** %17, align 8
  store i32 3, i32* %20, align 4
  br label %237

234:                                              ; preds = %225
  store i32 7, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %237

235:                                              ; preds = %210
  br label %236

236:                                              ; preds = %235
  br label %237

237:                                              ; preds = %236, %234, %228, %208, %154, %138, %78
  %238 = load i32, i32* %20, align 4
  %239 = icmp ne i32 %238, 0
  %240 = xor i1 %239, true
  %241 = xor i1 %240, true
  %242 = zext i1 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call i64 @llvm.expect.i64(i64 %243, i64 0)
  %245 = icmp ne i64 %244, 0
  br i1 %245, label %246, label %269

246:                                              ; preds = %237
  %247 = load i32, i32* %20, align 4
  %248 = icmp eq i32 %247, 2
  br i1 %248, label %249, label %252

249:                                              ; preds = %246
  %250 = load i32, i32* %13, align 4
  %251 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 4, i32 2, i32 %250, i8* %251)
  br label %268

252:                                              ; preds = %246
  %253 = load i32, i32* %20, align 4
  %254 = icmp eq i32 %253, 3
  br i1 %254, label %255, label %259

255:                                              ; preds = %252
  %256 = load i32, i32* %13, align 4
  %257 = load i8*, i8** %17, align 8
  %258 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 4, i32 %256, i8* %257, %29* %258)
  br label %267

259:                                              ; preds = %252
  %260 = load i32, i32* %20, align 4
  %261 = icmp eq i32 %260, 4
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = load i32, i32* %13, align 4
  %264 = load i32, i32* %16, align 4
  %265 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 4, i32 %263, i32 %264, %29* %265)
  br label %266

266:                                              ; preds = %262, %259
  br label %267

267:                                              ; preds = %266, %255
  br label %268

268:                                              ; preds = %267, %249
  store i32 1, i32* %21, align 4
  br label %270

269:                                              ; preds = %237
  store i32 0, i32* %21, align 4
  br label %270

270:                                              ; preds = %269, %268
  %271 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  %272 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #15
  %273 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #15
  %274 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #15
  %275 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %275) #15
  %276 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #15
  %277 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #15
  %278 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #15
  %279 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #15
  %280 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #15
  %281 = load i32, i32* %21, align 4
  switch i32 %281, label %304 [
    i32 0, label %282
  ]

282:                                              ; preds = %270
  br label %283

283:                                              ; preds = %282
  br label %284

284:                                              ; preds = %283
  call void @zend_replace_error_handling(i32 2, %6* null, %70* %8)
  %285 = load %1*, %1** %3, align 8
  %286 = getelementptr inbounds %1, %1* %285, i32 0, i32 4
  %287 = call zeroext i8 @490(%29* %286)
  %288 = zext i8 %287 to i32
  %289 = icmp eq i32 %288, 8
  br i1 %289, label %290, label %293

290:                                              ; preds = %284
  %291 = load %1*, %1** %3, align 8
  %292 = getelementptr inbounds %1, %1* %291, i32 0, i32 4
  br label %294

293:                                              ; preds = %284
  br label %294

294:                                              ; preds = %293, %290
  %295 = phi %29* [ %292, %290 ], [ null, %293 ]
  %296 = getelementptr inbounds %29, %29* %295, i32 0, i32 0
  %297 = bitcast %30* %296 to %15**
  %298 = load %15*, %15** %297, align 8
  %299 = call %61* @489(%15* %298)
  %300 = load i8*, i8** %6, align 8
  %301 = load i64, i64* %7, align 8
  %302 = load %29*, %29** %5, align 8
  %303 = call i32 @php_date_initialize(%61* %299, i8* %300, i64 %301, i8* null, %29* %302, i32 1)
  call void @zend_restore_error_handling(%70* %8)
  store i32 0, i32* %21, align 4
  br label %304

304:                                              ; preds = %294, %270
  %305 = bitcast %70* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %305) #15
  %306 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %306) #15
  %307 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %307) #15
  %308 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %308) #15
  %309 = load i32, i32* %21, align 4
  switch i32 %309, label %311 [
    i32 0, label %310
    i32 1, label %310
  ]

310:                                              ; preds = %304, %304
  ret void

311:                                              ; preds = %304
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTime___wakeup(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca %7*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = load %1*, %1** %3, align 8
  %10 = getelementptr inbounds %1, %1* %9, i32 0, i32 4
  %11 = call zeroext i8 @490(%29* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %1*, %1** %3, align 8
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %29* [ %16, %14 ], [ null, %17 ]
  store %29* %19, %29** %5, align 8
  %20 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = load %29*, %29** %5, align 8
  %23 = getelementptr inbounds %29, %29* %22, i32 0, i32 0
  %24 = bitcast %30* %23 to %15**
  %25 = load %15*, %15** %24, align 8
  %26 = call %61* @489(%15* %25)
  store %61* %26, %61** %6, align 8
  %27 = load %29*, %29** %5, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 0
  %29 = bitcast %30* %28 to %15**
  %30 = load %15*, %15** %29, align 8
  %31 = getelementptr inbounds %15, %15* %30, i32 0, i32 3
  %32 = load %16*, %16** %31, align 8
  %33 = getelementptr inbounds %16, %16* %32, i32 0, i32 15
  %34 = load %7* (%29*)*, %7* (%29*)** %33, align 8
  %35 = load %29*, %29** %5, align 8
  %36 = call %7* %34(%29* %35)
  store %7* %36, %7** %7, align 8
  %37 = load %7*, %7** %7, align 8
  %38 = call i32 @492(%61** %6, %7* %37)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %18
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @213, i32 0, i32 0))
  br label %41

41:                                               ; preds = %40, %18
  %42 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #15
  %43 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #15
  %44 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTime___set_state(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %61*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %7*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %61** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 1, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @491(%29* %142, %29** %6, i32 0, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 3, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %19, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %193

164:                                              ; preds = %155
  %165 = load i32, i32* %19, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %12, align 4
  %169 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %19, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %12, align 4
  %175 = load i8*, i8** %16, align 8
  %176 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %29* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %19, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %12, align 4
  %182 = load i32, i32* %15, align 4
  %183 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %29* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  br label %187

187:                                              ; preds = %186
  %188 = load %29*, %29** %4, align 8
  %189 = getelementptr inbounds %29, %29* %188, i32 0, i32 1
  %190 = bitcast %31* %189 to i32*
  store i32 2, i32* %190, align 8
  br label %191

191:                                              ; preds = %187
  br label %192

192:                                              ; preds = %191
  store i32 1, i32* %20, align 4
  br label %194

193:                                              ; preds = %155
  store i32 0, i32* %20, align 4
  br label %194

194:                                              ; preds = %193, %192
  %195 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %196 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #15
  %197 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #15
  %198 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #15
  %199 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #15
  %200 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #15
  %201 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #15
  %202 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #15
  %203 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #15
  %204 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #15
  %205 = load i32, i32* %20, align 4
  switch i32 %205, label %226 [
    i32 0, label %206
  ]

206:                                              ; preds = %194
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  %209 = load %29*, %29** %6, align 8
  %210 = getelementptr inbounds %29, %29* %209, i32 0, i32 0
  %211 = bitcast %30* %210 to %7**
  %212 = load %7*, %7** %211, align 8
  store %7* %212, %7** %7, align 8
  %213 = load %6*, %6** @date_ce_date, align 8
  %214 = load %29*, %29** %4, align 8
  %215 = call %29* @php_date_instantiate(%6* %213, %29* %214)
  %216 = load %29*, %29** %4, align 8
  %217 = getelementptr inbounds %29, %29* %216, i32 0, i32 0
  %218 = bitcast %30* %217 to %15**
  %219 = load %15*, %15** %218, align 8
  %220 = call %61* @489(%15* %219)
  store %61* %220, %61** %5, align 8
  %221 = load %7*, %7** %7, align 8
  %222 = call i32 @492(%61** %5, %7* %221)
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %208
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @213, i32 0, i32 0))
  br label %225

225:                                              ; preds = %224, %208
  store i32 0, i32* %20, align 4
  br label %226

226:                                              ; preds = %225, %194
  %227 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %227) #15
  %228 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %228) #15
  %229 = bitcast %61** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #15
  %230 = load i32, i32* %20, align 4
  switch i32 %230, label %232 [
    i32 0, label %231
    i32 1, label %231
  ]

231:                                              ; preds = %226, %226
  ret void

232:                                              ; preds = %226
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable___construct(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %70, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %22 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  store %29* null, %29** %5, align 8
  %23 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  store i8* null, i8** %6, align 8
  %24 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  store i64 0, i64* %7, align 8
  %25 = bitcast %70* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %25) #15
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 4, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 0, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 2, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  %31 = load %1*, %1** %3, align 8
  %32 = getelementptr inbounds %1, %1* %31, i32 0, i32 4
  %33 = getelementptr inbounds %29, %29* %32, i32 0, i32 2
  %34 = bitcast %32* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #15
  %37 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  %38 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store %29* null, %29** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %29*, %29** %14, align 8
  %44 = load %29*, %29** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 4, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %237

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %1*, %1** %3, align 8
  %84 = bitcast %1* %83 to %29*
  %85 = getelementptr inbounds %29, %29* %84, i64 4
  store %29* %85, %29** %14, align 8
  store i8 1, i8* %19, align 1
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %237

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %29*, %29** %14, align 8
  %142 = getelementptr inbounds %29, %29* %141, i32 1
  store %29* %142, %29** %14, align 8
  %143 = load %29*, %29** %14, align 8
  store %29* %143, %29** %15, align 8
  %144 = load %29*, %29** %15, align 8
  %145 = call i32 @487(%29* %144, i8** %6, i64* %7, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %237

155:                                              ; preds = %140
  %156 = load i32, i32* %13, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %13, align 4
  br label %158

158:                                              ; preds = %155
  %159 = load i32, i32* %13, align 4
  %160 = load i32, i32* %10, align 4
  %161 = icmp sle i32 %159, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i8, i8* %19, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 1
  br label %166

166:                                              ; preds = %162, %158
  %167 = phi i1 [ true, %158 ], [ %165, %162 ]
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  unreachable

174:                                              ; preds = %166
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %13, align 4
  %179 = load i32, i32* %10, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %19, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  %196 = load i8, i8* %19, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %195
  %199 = load i32, i32* %13, align 4
  %200 = load i32, i32* %12, align 4
  %201 = icmp sgt i32 %199, %200
  %202 = xor i1 %201, true
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %198
  br label %237

209:                                              ; preds = %198
  br label %210

210:                                              ; preds = %209, %195
  %211 = load %29*, %29** %14, align 8
  %212 = getelementptr inbounds %29, %29* %211, i32 1
  store %29* %212, %29** %14, align 8
  %213 = load %29*, %29** %14, align 8
  store %29* %213, %29** %15, align 8
  %214 = load %29*, %29** %15, align 8
  %215 = load %6*, %6** @date_ce_timezone, align 8
  %216 = call i32 @488(%29* %214, %29** %5, %6* %215, i32 1)
  %217 = icmp ne i32 %216, 0
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = zext i1 %220 to i32
  %222 = sext i32 %221 to i64
  %223 = call i64 @llvm.expect.i64(i64 %222, i64 0)
  %224 = icmp ne i64 %223, 0
  br i1 %224, label %225, label %235

225:                                              ; preds = %210
  %226 = load %6*, %6** @date_ce_timezone, align 8
  %227 = icmp ne %6* %226, null
  br i1 %227, label %228, label %234

228:                                              ; preds = %225
  %229 = load %6*, %6** @date_ce_timezone, align 8
  %230 = getelementptr inbounds %6, %6* %229, i32 0, i32 1
  %231 = load %28*, %28** %230, align 8
  %232 = getelementptr inbounds %28, %28* %231, i32 0, i32 3
  %233 = getelementptr inbounds [1 x i8], [1 x i8]* %232, i32 0, i32 0
  store i8* %233, i8** %17, align 8
  store i32 3, i32* %20, align 4
  br label %237

234:                                              ; preds = %225
  store i32 7, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %237

235:                                              ; preds = %210
  br label %236

236:                                              ; preds = %235
  br label %237

237:                                              ; preds = %236, %234, %228, %208, %154, %138, %78
  %238 = load i32, i32* %20, align 4
  %239 = icmp ne i32 %238, 0
  %240 = xor i1 %239, true
  %241 = xor i1 %240, true
  %242 = zext i1 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call i64 @llvm.expect.i64(i64 %243, i64 0)
  %245 = icmp ne i64 %244, 0
  br i1 %245, label %246, label %269

246:                                              ; preds = %237
  %247 = load i32, i32* %20, align 4
  %248 = icmp eq i32 %247, 2
  br i1 %248, label %249, label %252

249:                                              ; preds = %246
  %250 = load i32, i32* %13, align 4
  %251 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 4, i32 2, i32 %250, i8* %251)
  br label %268

252:                                              ; preds = %246
  %253 = load i32, i32* %20, align 4
  %254 = icmp eq i32 %253, 3
  br i1 %254, label %255, label %259

255:                                              ; preds = %252
  %256 = load i32, i32* %13, align 4
  %257 = load i8*, i8** %17, align 8
  %258 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 4, i32 %256, i8* %257, %29* %258)
  br label %267

259:                                              ; preds = %252
  %260 = load i32, i32* %20, align 4
  %261 = icmp eq i32 %260, 4
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = load i32, i32* %13, align 4
  %264 = load i32, i32* %16, align 4
  %265 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 4, i32 %263, i32 %264, %29* %265)
  br label %266

266:                                              ; preds = %262, %259
  br label %267

267:                                              ; preds = %266, %255
  br label %268

268:                                              ; preds = %267, %249
  store i32 1, i32* %21, align 4
  br label %270

269:                                              ; preds = %237
  store i32 0, i32* %21, align 4
  br label %270

270:                                              ; preds = %269, %268
  %271 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  %272 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #15
  %273 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #15
  %274 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #15
  %275 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %275) #15
  %276 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #15
  %277 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #15
  %278 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #15
  %279 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #15
  %280 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #15
  %281 = load i32, i32* %21, align 4
  switch i32 %281, label %304 [
    i32 0, label %282
  ]

282:                                              ; preds = %270
  br label %283

283:                                              ; preds = %282
  br label %284

284:                                              ; preds = %283
  call void @zend_replace_error_handling(i32 2, %6* null, %70* %8)
  %285 = load %1*, %1** %3, align 8
  %286 = getelementptr inbounds %1, %1* %285, i32 0, i32 4
  %287 = call zeroext i8 @490(%29* %286)
  %288 = zext i8 %287 to i32
  %289 = icmp eq i32 %288, 8
  br i1 %289, label %290, label %293

290:                                              ; preds = %284
  %291 = load %1*, %1** %3, align 8
  %292 = getelementptr inbounds %1, %1* %291, i32 0, i32 4
  br label %294

293:                                              ; preds = %284
  br label %294

294:                                              ; preds = %293, %290
  %295 = phi %29* [ %292, %290 ], [ null, %293 ]
  %296 = getelementptr inbounds %29, %29* %295, i32 0, i32 0
  %297 = bitcast %30* %296 to %15**
  %298 = load %15*, %15** %297, align 8
  %299 = call %61* @489(%15* %298)
  %300 = load i8*, i8** %6, align 8
  %301 = load i64, i64* %7, align 8
  %302 = load %29*, %29** %5, align 8
  %303 = call i32 @php_date_initialize(%61* %299, i8* %300, i64 %301, i8* null, %29* %302, i32 1)
  call void @zend_restore_error_handling(%70* %8)
  store i32 0, i32* %21, align 4
  br label %304

304:                                              ; preds = %294, %270
  %305 = bitcast %70* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %305) #15
  %306 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %306) #15
  %307 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %307) #15
  %308 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %308) #15
  %309 = load i32, i32* %21, align 4
  switch i32 %309, label %311 [
    i32 0, label %310
    i32 1, label %310
  ]

310:                                              ; preds = %304, %304
  ret void

311:                                              ; preds = %304
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable___set_state(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %61*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %7*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %61** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 1, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @491(%29* %142, %29** %6, i32 0, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 3, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %19, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %193

164:                                              ; preds = %155
  %165 = load i32, i32* %19, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %12, align 4
  %169 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %19, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %12, align 4
  %175 = load i8*, i8** %16, align 8
  %176 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %29* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %19, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %12, align 4
  %182 = load i32, i32* %15, align 4
  %183 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %29* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  br label %187

187:                                              ; preds = %186
  %188 = load %29*, %29** %4, align 8
  %189 = getelementptr inbounds %29, %29* %188, i32 0, i32 1
  %190 = bitcast %31* %189 to i32*
  store i32 2, i32* %190, align 8
  br label %191

191:                                              ; preds = %187
  br label %192

192:                                              ; preds = %191
  store i32 1, i32* %20, align 4
  br label %194

193:                                              ; preds = %155
  store i32 0, i32* %20, align 4
  br label %194

194:                                              ; preds = %193, %192
  %195 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %196 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #15
  %197 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #15
  %198 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #15
  %199 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #15
  %200 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #15
  %201 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #15
  %202 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #15
  %203 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #15
  %204 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #15
  %205 = load i32, i32* %20, align 4
  switch i32 %205, label %226 [
    i32 0, label %206
  ]

206:                                              ; preds = %194
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  %209 = load %29*, %29** %6, align 8
  %210 = getelementptr inbounds %29, %29* %209, i32 0, i32 0
  %211 = bitcast %30* %210 to %7**
  %212 = load %7*, %7** %211, align 8
  store %7* %212, %7** %7, align 8
  %213 = load %6*, %6** @date_ce_immutable, align 8
  %214 = load %29*, %29** %4, align 8
  %215 = call %29* @php_date_instantiate(%6* %213, %29* %214)
  %216 = load %29*, %29** %4, align 8
  %217 = getelementptr inbounds %29, %29* %216, i32 0, i32 0
  %218 = bitcast %30* %217 to %15**
  %219 = load %15*, %15** %218, align 8
  %220 = call %61* @489(%15* %219)
  store %61* %220, %61** %5, align 8
  %221 = load %7*, %7** %7, align 8
  %222 = call i32 @492(%61** %5, %7* %221)
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %208
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @214, i32 0, i32 0))
  br label %225

225:                                              ; preds = %224, %208
  store i32 0, i32* %20, align 4
  br label %226

226:                                              ; preds = %225, %194
  %227 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %227) #15
  %228 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %228) #15
  %229 = bitcast %61** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #15
  %230 = load i32, i32* %20, align 4
  switch i32 %230, label %232 [
    i32 0, label %231
    i32 1, label %231
  ]

231:                                              ; preds = %226, %226
  ret void

232:                                              ; preds = %226
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable_modify(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %11 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #15
  %13 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = load %1*, %1** %3, align 8
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 4
  %17 = getelementptr inbounds %29, %29* %16, i32 0, i32 2
  %18 = bitcast %32* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = load %1*, %1** %3, align 8
  %21 = getelementptr inbounds %1, %1* %20, i32 0, i32 4
  %22 = call zeroext i8 @490(%29* %21)
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %23, 8
  br i1 %24, label %25, label %28

25:                                               ; preds = %2
  %26 = load %1*, %1** %3, align 8
  %27 = getelementptr inbounds %1, %1* %26, i32 0, i32 4
  br label %29

28:                                               ; preds = %2
  br label %29

29:                                               ; preds = %28, %25
  %30 = phi %29* [ %27, %25 ], [ null, %28 ]
  %31 = load %6*, %6** @date_ce_immutable, align 8
  %32 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %19, %29* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @230, i32 0, i32 0), %29** %5, %6* %31, i8** %7, i64* %8)
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  br label %35

35:                                               ; preds = %34
  %36 = load %29*, %29** %4, align 8
  %37 = getelementptr inbounds %29, %29* %36, i32 0, i32 1
  %38 = bitcast %31* %37 to i32*
  store i32 2, i32* %38, align 8
  br label %39

39:                                               ; preds = %35
  br label %40

40:                                               ; preds = %39
  store i32 1, i32* %9, align 4
  br label %70

41:                                               ; preds = %29
  %42 = load %29*, %29** %5, align 8
  call void @496(%29* %42, %29* %6)
  %43 = load i8*, i8** %7, align 8
  %44 = load i64, i64* %8, align 8
  %45 = call i32 @494(%29* %6, i8* %43, i64 %44)
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %41
  br label %48

48:                                               ; preds = %47
  %49 = load %29*, %29** %4, align 8
  %50 = getelementptr inbounds %29, %29* %49, i32 0, i32 1
  %51 = bitcast %31* %50 to i32*
  store i32 2, i32* %51, align 8
  br label %52

52:                                               ; preds = %48
  br label %53

53:                                               ; preds = %52
  store i32 1, i32* %9, align 4
  br label %70

54:                                               ; preds = %41
  br label %55

55:                                               ; preds = %54
  %56 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #15
  %57 = load %29*, %29** %4, align 8
  store %29* %57, %29** %10, align 8
  %58 = getelementptr inbounds %29, %29* %6, i32 0, i32 0
  %59 = bitcast %30* %58 to %15**
  %60 = load %15*, %15** %59, align 8
  %61 = load %29*, %29** %10, align 8
  %62 = getelementptr inbounds %29, %29* %61, i32 0, i32 0
  %63 = bitcast %30* %62 to %15**
  store %15* %60, %15** %63, align 8
  %64 = load %29*, %29** %10, align 8
  %65 = getelementptr inbounds %29, %29* %64, i32 0, i32 1
  %66 = bitcast %31* %65 to i32*
  store i32 1032, i32* %66, align 8
  %67 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %67) #15
  br label %68

68:                                               ; preds = %55
  br label %69

69:                                               ; preds = %68
  store i32 0, i32* %9, align 4
  br label %70

70:                                               ; preds = %69, %53, %40
  %71 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %71) #15
  %72 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #15
  %73 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %73) #15
  %74 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #15
  %75 = load i32, i32* %9, align 4
  switch i32 %75, label %77 [
    i32 0, label %76
    i32 1, label %76
  ]

76:                                               ; preds = %70, %70
  ret void

77:                                               ; preds = %70
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable_add(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %29, align 8
  %8 = alloca i32, align 4
  %9 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %10 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = bitcast %29* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #15
  %13 = load %1*, %1** %3, align 8
  %14 = getelementptr inbounds %1, %1* %13, i32 0, i32 4
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 2
  %16 = bitcast %32* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = load %1*, %1** %3, align 8
  %19 = getelementptr inbounds %1, %1* %18, i32 0, i32 4
  %20 = call zeroext i8 @490(%29* %19)
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 8
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = load %1*, %1** %3, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 4
  br label %27

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %26, %23
  %28 = phi %29* [ %25, %23 ], [ null, %26 ]
  %29 = load %6*, %6** @date_ce_immutable, align 8
  %30 = load %6*, %6** @date_ce_interval, align 8
  %31 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %17, %29* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @232, i32 0, i32 0), %29** %5, %6* %29, %29** %6, %6* %30)
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  br label %34

34:                                               ; preds = %33
  %35 = load %29*, %29** %4, align 8
  %36 = getelementptr inbounds %29, %29* %35, i32 0, i32 1
  %37 = bitcast %31* %36 to i32*
  store i32 2, i32* %37, align 8
  br label %38

38:                                               ; preds = %34
  br label %39

39:                                               ; preds = %38
  store i32 1, i32* %8, align 4
  br label %59

40:                                               ; preds = %27
  %41 = load %29*, %29** %5, align 8
  call void @496(%29* %41, %29* %7)
  %42 = load %29*, %29** %6, align 8
  %43 = load %29*, %29** %4, align 8
  call void @497(%29* %7, %29* %42, %29* %43)
  br label %44

44:                                               ; preds = %40
  %45 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #15
  %46 = load %29*, %29** %4, align 8
  store %29* %46, %29** %9, align 8
  %47 = getelementptr inbounds %29, %29* %7, i32 0, i32 0
  %48 = bitcast %30* %47 to %15**
  %49 = load %15*, %15** %48, align 8
  %50 = load %29*, %29** %9, align 8
  %51 = getelementptr inbounds %29, %29* %50, i32 0, i32 0
  %52 = bitcast %30* %51 to %15**
  store %15* %49, %15** %52, align 8
  %53 = load %29*, %29** %9, align 8
  %54 = getelementptr inbounds %29, %29* %53, i32 0, i32 1
  %55 = bitcast %31* %54 to i32*
  store i32 1032, i32* %55, align 8
  %56 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #15
  br label %57

57:                                               ; preds = %44
  br label %58

58:                                               ; preds = %57
  store i32 0, i32* %8, align 4
  br label %59

59:                                               ; preds = %58, %39
  %60 = bitcast %29* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %60) #15
  %61 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #15
  %62 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #15
  %63 = load i32, i32* %8, align 4
  switch i32 %63, label %65 [
    i32 0, label %64
    i32 1, label %64
  ]

64:                                               ; preds = %59, %59
  ret void

65:                                               ; preds = %59
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable_sub(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %29, align 8
  %8 = alloca i32, align 4
  %9 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %10 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = bitcast %29* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #15
  %13 = load %1*, %1** %3, align 8
  %14 = getelementptr inbounds %1, %1* %13, i32 0, i32 4
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 2
  %16 = bitcast %32* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = load %1*, %1** %3, align 8
  %19 = getelementptr inbounds %1, %1* %18, i32 0, i32 4
  %20 = call zeroext i8 @490(%29* %19)
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 8
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = load %1*, %1** %3, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 4
  br label %27

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %26, %23
  %28 = phi %29* [ %25, %23 ], [ null, %26 ]
  %29 = load %6*, %6** @date_ce_immutable, align 8
  %30 = load %6*, %6** @date_ce_interval, align 8
  %31 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %17, %29* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @232, i32 0, i32 0), %29** %5, %6* %29, %29** %6, %6* %30)
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  br label %34

34:                                               ; preds = %33
  %35 = load %29*, %29** %4, align 8
  %36 = getelementptr inbounds %29, %29* %35, i32 0, i32 1
  %37 = bitcast %31* %36 to i32*
  store i32 2, i32* %37, align 8
  br label %38

38:                                               ; preds = %34
  br label %39

39:                                               ; preds = %38
  store i32 1, i32* %8, align 4
  br label %59

40:                                               ; preds = %27
  %41 = load %29*, %29** %5, align 8
  call void @496(%29* %41, %29* %7)
  %42 = load %29*, %29** %6, align 8
  %43 = load %29*, %29** %4, align 8
  call void @498(%29* %7, %29* %42, %29* %43)
  br label %44

44:                                               ; preds = %40
  %45 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #15
  %46 = load %29*, %29** %4, align 8
  store %29* %46, %29** %9, align 8
  %47 = getelementptr inbounds %29, %29* %7, i32 0, i32 0
  %48 = bitcast %30* %47 to %15**
  %49 = load %15*, %15** %48, align 8
  %50 = load %29*, %29** %9, align 8
  %51 = getelementptr inbounds %29, %29* %50, i32 0, i32 0
  %52 = bitcast %30* %51 to %15**
  store %15* %49, %15** %52, align 8
  %53 = load %29*, %29** %9, align 8
  %54 = getelementptr inbounds %29, %29* %53, i32 0, i32 1
  %55 = bitcast %31* %54 to i32*
  store i32 1032, i32* %55, align 8
  %56 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #15
  br label %57

57:                                               ; preds = %44
  br label %58

58:                                               ; preds = %57
  store i32 0, i32* %8, align 4
  br label %59

59:                                               ; preds = %58, %39
  %60 = bitcast %29* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %60) #15
  %61 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #15
  %62 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #15
  %63 = load i32, i32* %8, align 4
  switch i32 %63, label %65 [
    i32 0, label %64
    i32 1, label %64
  ]

64:                                               ; preds = %59, %59
  ret void

65:                                               ; preds = %59
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable_setTimezone(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29, align 8
  %7 = alloca %29*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %10 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #15
  %12 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = load %1*, %1** %3, align 8
  %14 = getelementptr inbounds %1, %1* %13, i32 0, i32 4
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 2
  %16 = bitcast %32* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = load %1*, %1** %3, align 8
  %19 = getelementptr inbounds %1, %1* %18, i32 0, i32 4
  %20 = call zeroext i8 @490(%29* %19)
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 8
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = load %1*, %1** %3, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 4
  br label %27

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %26, %23
  %28 = phi %29* [ %25, %23 ], [ null, %26 ]
  %29 = load %6*, %6** @date_ce_immutable, align 8
  %30 = load %6*, %6** @date_ce_timezone, align 8
  %31 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %17, %29* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @232, i32 0, i32 0), %29** %5, %6* %29, %29** %7, %6* %30)
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  br label %34

34:                                               ; preds = %33
  %35 = load %29*, %29** %4, align 8
  %36 = getelementptr inbounds %29, %29* %35, i32 0, i32 1
  %37 = bitcast %31* %36 to i32*
  store i32 2, i32* %37, align 8
  br label %38

38:                                               ; preds = %34
  br label %39

39:                                               ; preds = %38
  store i32 1, i32* %8, align 4
  br label %59

40:                                               ; preds = %27
  %41 = load %29*, %29** %5, align 8
  call void @496(%29* %41, %29* %6)
  %42 = load %29*, %29** %7, align 8
  %43 = load %29*, %29** %4, align 8
  call void @500(%29* %6, %29* %42, %29* %43)
  br label %44

44:                                               ; preds = %40
  %45 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #15
  %46 = load %29*, %29** %4, align 8
  store %29* %46, %29** %9, align 8
  %47 = getelementptr inbounds %29, %29* %6, i32 0, i32 0
  %48 = bitcast %30* %47 to %15**
  %49 = load %15*, %15** %48, align 8
  %50 = load %29*, %29** %9, align 8
  %51 = getelementptr inbounds %29, %29* %50, i32 0, i32 0
  %52 = bitcast %30* %51 to %15**
  store %15* %49, %15** %52, align 8
  %53 = load %29*, %29** %9, align 8
  %54 = getelementptr inbounds %29, %29* %53, i32 0, i32 1
  %55 = bitcast %31* %54 to i32*
  store i32 1032, i32* %55, align 8
  %56 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #15
  br label %57

57:                                               ; preds = %44
  br label %58

58:                                               ; preds = %57
  store i32 0, i32* %8, align 4
  br label %59

59:                                               ; preds = %58, %39
  %60 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #15
  %61 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %61) #15
  %62 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #15
  %63 = load i32, i32* %8, align 4
  switch i32 %63, label %65 [
    i32 0, label %64
    i32 1, label %64
  ]

64:                                               ; preds = %59, %59
  ret void

65:                                               ; preds = %59
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable_setTime(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %13 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #15
  %15 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  %17 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #15
  store i64 0, i64* %9, align 8
  %18 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  store i64 0, i64* %10, align 8
  %19 = load %1*, %1** %3, align 8
  %20 = getelementptr inbounds %1, %1* %19, i32 0, i32 4
  %21 = getelementptr inbounds %29, %29* %20, i32 0, i32 2
  %22 = bitcast %32* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = load %1*, %1** %3, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 4
  %26 = call zeroext i8 @490(%29* %25)
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 8
  br i1 %28, label %29, label %32

29:                                               ; preds = %2
  %30 = load %1*, %1** %3, align 8
  %31 = getelementptr inbounds %1, %1* %30, i32 0, i32 4
  br label %33

32:                                               ; preds = %2
  br label %33

33:                                               ; preds = %32, %29
  %34 = phi %29* [ %31, %29 ], [ null, %32 ]
  %35 = load %6*, %6** @date_ce_immutable, align 8
  %36 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %23, %29* %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @234, i32 0, i32 0), %29** %5, %6* %35, i64* %7, i64* %8, i64* %9, i64* %10)
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %45

38:                                               ; preds = %33
  br label %39

39:                                               ; preds = %38
  %40 = load %29*, %29** %4, align 8
  %41 = getelementptr inbounds %29, %29* %40, i32 0, i32 1
  %42 = bitcast %31* %41 to i32*
  store i32 2, i32* %42, align 8
  br label %43

43:                                               ; preds = %39
  br label %44

44:                                               ; preds = %43
  store i32 1, i32* %11, align 4
  br label %67

45:                                               ; preds = %33
  %46 = load %29*, %29** %5, align 8
  call void @496(%29* %46, %29* %6)
  %47 = load i64, i64* %7, align 8
  %48 = load i64, i64* %8, align 8
  %49 = load i64, i64* %9, align 8
  %50 = load i64, i64* %10, align 8
  %51 = load %29*, %29** %4, align 8
  call void @501(%29* %6, i64 %47, i64 %48, i64 %49, i64 %50, %29* %51)
  br label %52

52:                                               ; preds = %45
  %53 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #15
  %54 = load %29*, %29** %4, align 8
  store %29* %54, %29** %12, align 8
  %55 = getelementptr inbounds %29, %29* %6, i32 0, i32 0
  %56 = bitcast %30* %55 to %15**
  %57 = load %15*, %15** %56, align 8
  %58 = load %29*, %29** %12, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 0
  %60 = bitcast %30* %59 to %15**
  store %15* %57, %15** %60, align 8
  %61 = load %29*, %29** %12, align 8
  %62 = getelementptr inbounds %29, %29* %61, i32 0, i32 1
  %63 = bitcast %31* %62 to i32*
  store i32 1032, i32* %63, align 8
  %64 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #15
  br label %65

65:                                               ; preds = %52
  br label %66

66:                                               ; preds = %65
  store i32 0, i32* %11, align 4
  br label %67

67:                                               ; preds = %66, %44
  %68 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %68) #15
  %69 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %69) #15
  %70 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %70) #15
  %71 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %71) #15
  %72 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %72) #15
  %73 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #15
  %74 = load i32, i32* %11, align 4
  switch i32 %74, label %76 [
    i32 0, label %75
    i32 1, label %75
  ]

75:                                               ; preds = %67, %67
  ret void

76:                                               ; preds = %67
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable_setDate(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %12 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #15
  %14 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  %17 = load %1*, %1** %3, align 8
  %18 = getelementptr inbounds %1, %1* %17, i32 0, i32 4
  %19 = getelementptr inbounds %29, %29* %18, i32 0, i32 2
  %20 = bitcast %32* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = load %1*, %1** %3, align 8
  %23 = getelementptr inbounds %1, %1* %22, i32 0, i32 4
  %24 = call zeroext i8 @490(%29* %23)
  %25 = zext i8 %24 to i32
  %26 = icmp eq i32 %25, 8
  br i1 %26, label %27, label %30

27:                                               ; preds = %2
  %28 = load %1*, %1** %3, align 8
  %29 = getelementptr inbounds %1, %1* %28, i32 0, i32 4
  br label %31

30:                                               ; preds = %2
  br label %31

31:                                               ; preds = %30, %27
  %32 = phi %29* [ %29, %27 ], [ null, %30 ]
  %33 = load %6*, %6** @date_ce_immutable, align 8
  %34 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %21, %29* %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @235, i32 0, i32 0), %29** %5, %6* %33, i64* %7, i64* %8, i64* %9)
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  br label %37

37:                                               ; preds = %36
  %38 = load %29*, %29** %4, align 8
  %39 = getelementptr inbounds %29, %29* %38, i32 0, i32 1
  %40 = bitcast %31* %39 to i32*
  store i32 2, i32* %40, align 8
  br label %41

41:                                               ; preds = %37
  br label %42

42:                                               ; preds = %41
  store i32 1, i32* %10, align 4
  br label %64

43:                                               ; preds = %31
  %44 = load %29*, %29** %5, align 8
  call void @496(%29* %44, %29* %6)
  %45 = load i64, i64* %7, align 8
  %46 = load i64, i64* %8, align 8
  %47 = load i64, i64* %9, align 8
  %48 = load %29*, %29** %4, align 8
  call void @502(%29* %6, i64 %45, i64 %46, i64 %47, %29* %48)
  br label %49

49:                                               ; preds = %43
  %50 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #15
  %51 = load %29*, %29** %4, align 8
  store %29* %51, %29** %11, align 8
  %52 = getelementptr inbounds %29, %29* %6, i32 0, i32 0
  %53 = bitcast %30* %52 to %15**
  %54 = load %15*, %15** %53, align 8
  %55 = load %29*, %29** %11, align 8
  %56 = getelementptr inbounds %29, %29* %55, i32 0, i32 0
  %57 = bitcast %30* %56 to %15**
  store %15* %54, %15** %57, align 8
  %58 = load %29*, %29** %11, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 1
  %60 = bitcast %31* %59 to i32*
  store i32 1032, i32* %60, align 8
  %61 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #15
  br label %62

62:                                               ; preds = %49
  br label %63

63:                                               ; preds = %62
  store i32 0, i32* %10, align 4
  br label %64

64:                                               ; preds = %63, %42
  %65 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #15
  %66 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %66) #15
  %67 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %67) #15
  %68 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %68) #15
  %69 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %69) #15
  %70 = load i32, i32* %10, align 4
  switch i32 %70, label %72 [
    i32 0, label %71
    i32 1, label %71
  ]

71:                                               ; preds = %64, %64
  ret void

72:                                               ; preds = %64
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable_setISODate(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %12 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #15
  %14 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  store i64 1, i64* %9, align 8
  %17 = load %1*, %1** %3, align 8
  %18 = getelementptr inbounds %1, %1* %17, i32 0, i32 4
  %19 = getelementptr inbounds %29, %29* %18, i32 0, i32 2
  %20 = bitcast %32* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = load %1*, %1** %3, align 8
  %23 = getelementptr inbounds %1, %1* %22, i32 0, i32 4
  %24 = call zeroext i8 @490(%29* %23)
  %25 = zext i8 %24 to i32
  %26 = icmp eq i32 %25, 8
  br i1 %26, label %27, label %30

27:                                               ; preds = %2
  %28 = load %1*, %1** %3, align 8
  %29 = getelementptr inbounds %1, %1* %28, i32 0, i32 4
  br label %31

30:                                               ; preds = %2
  br label %31

31:                                               ; preds = %30, %27
  %32 = phi %29* [ %29, %27 ], [ null, %30 ]
  %33 = load %6*, %6** @date_ce_immutable, align 8
  %34 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %21, %29* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @236, i32 0, i32 0), %29** %5, %6* %33, i64* %7, i64* %8, i64* %9)
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  br label %37

37:                                               ; preds = %36
  %38 = load %29*, %29** %4, align 8
  %39 = getelementptr inbounds %29, %29* %38, i32 0, i32 1
  %40 = bitcast %31* %39 to i32*
  store i32 2, i32* %40, align 8
  br label %41

41:                                               ; preds = %37
  br label %42

42:                                               ; preds = %41
  store i32 1, i32* %10, align 4
  br label %64

43:                                               ; preds = %31
  %44 = load %29*, %29** %5, align 8
  call void @496(%29* %44, %29* %6)
  %45 = load i64, i64* %7, align 8
  %46 = load i64, i64* %8, align 8
  %47 = load i64, i64* %9, align 8
  %48 = load %29*, %29** %4, align 8
  call void @503(%29* %6, i64 %45, i64 %46, i64 %47, %29* %48)
  br label %49

49:                                               ; preds = %43
  %50 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #15
  %51 = load %29*, %29** %4, align 8
  store %29* %51, %29** %11, align 8
  %52 = getelementptr inbounds %29, %29* %6, i32 0, i32 0
  %53 = bitcast %30* %52 to %15**
  %54 = load %15*, %15** %53, align 8
  %55 = load %29*, %29** %11, align 8
  %56 = getelementptr inbounds %29, %29* %55, i32 0, i32 0
  %57 = bitcast %30* %56 to %15**
  store %15* %54, %15** %57, align 8
  %58 = load %29*, %29** %11, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 1
  %60 = bitcast %31* %59 to i32*
  store i32 1032, i32* %60, align 8
  %61 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #15
  br label %62

62:                                               ; preds = %49
  br label %63

63:                                               ; preds = %62
  store i32 0, i32* %10, align 4
  br label %64

64:                                               ; preds = %63, %42
  %65 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #15
  %66 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %66) #15
  %67 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %67) #15
  %68 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %68) #15
  %69 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %69) #15
  %70 = load i32, i32* %10, align 4
  switch i32 %70, label %72 [
    i32 0, label %71
    i32 1, label %71
  ]

71:                                               ; preds = %64, %64
  ret void

72:                                               ; preds = %64
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable_setTimestamp(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %10 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #15
  %12 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = load %1*, %1** %3, align 8
  %14 = getelementptr inbounds %1, %1* %13, i32 0, i32 4
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 2
  %16 = bitcast %32* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = load %1*, %1** %3, align 8
  %19 = getelementptr inbounds %1, %1* %18, i32 0, i32 4
  %20 = call zeroext i8 @490(%29* %19)
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %21, 8
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = load %1*, %1** %3, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 4
  br label %27

26:                                               ; preds = %2
  br label %27

27:                                               ; preds = %26, %23
  %28 = phi %29* [ %25, %23 ], [ null, %26 ]
  %29 = load %6*, %6** @date_ce_immutable, align 8
  %30 = call i32 (i32, %29*, i8*, ...) @zend_parse_method_parameters(i32 %17, %29* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @237, i32 0, i32 0), %29** %5, %6* %29, i64* %7)
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  br label %33

33:                                               ; preds = %32
  %34 = load %29*, %29** %4, align 8
  %35 = getelementptr inbounds %29, %29* %34, i32 0, i32 1
  %36 = bitcast %31* %35 to i32*
  store i32 2, i32* %36, align 8
  br label %37

37:                                               ; preds = %33
  br label %38

38:                                               ; preds = %37
  store i32 1, i32* %8, align 4
  br label %58

39:                                               ; preds = %27
  %40 = load %29*, %29** %5, align 8
  call void @496(%29* %40, %29* %6)
  %41 = load i64, i64* %7, align 8
  %42 = load %29*, %29** %4, align 8
  call void @504(%29* %6, i64 %41, %29* %42)
  br label %43

43:                                               ; preds = %39
  %44 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #15
  %45 = load %29*, %29** %4, align 8
  store %29* %45, %29** %9, align 8
  %46 = getelementptr inbounds %29, %29* %6, i32 0, i32 0
  %47 = bitcast %30* %46 to %15**
  %48 = load %15*, %15** %47, align 8
  %49 = load %29*, %29** %9, align 8
  %50 = getelementptr inbounds %29, %29* %49, i32 0, i32 0
  %51 = bitcast %30* %50 to %15**
  store %15* %48, %15** %51, align 8
  %52 = load %29*, %29** %9, align 8
  %53 = getelementptr inbounds %29, %29* %52, i32 0, i32 1
  %54 = bitcast %31* %53 to i32*
  store i32 1032, i32* %54, align 8
  %55 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %55) #15
  br label %56

56:                                               ; preds = %43
  br label %57

57:                                               ; preds = %56
  store i32 0, i32* %8, align 4
  br label %58

58:                                               ; preds = %57, %38
  %59 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #15
  %60 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %60) #15
  %61 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #15
  %62 = load i32, i32* %8, align 4
  switch i32 %62, label %64 [
    i32 0, label %63
    i32 1, label %63
  ]

63:                                               ; preds = %58, %58
  ret void

64:                                               ; preds = %58
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeImmutable_createFromMutable(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca %61*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  store %29* null, %29** %5, align 8
  %22 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  store %61* null, %61** %6, align 8
  %23 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  store %61* null, %61** %7, align 8
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 1, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %165

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %165

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = load %6*, %6** @date_ce_date, align 8
  %144 = call i32 @488(%29* %142, %29** %5, %6* %143, i32 0)
  %145 = icmp ne i32 %144, 0
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 0)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %163

153:                                              ; preds = %138
  %154 = load %6*, %6** @date_ce_date, align 8
  %155 = icmp ne %6* %154, null
  br i1 %155, label %156, label %162

156:                                              ; preds = %153
  %157 = load %6*, %6** @date_ce_date, align 8
  %158 = getelementptr inbounds %6, %6* %157, i32 0, i32 1
  %159 = load %28*, %28** %158, align 8
  %160 = getelementptr inbounds %28, %28* %159, i32 0, i32 3
  %161 = getelementptr inbounds [1 x i8], [1 x i8]* %160, i32 0, i32 0
  store i8* %161, i8** %16, align 8
  store i32 3, i32* %19, align 4
  br label %165

162:                                              ; preds = %153
  store i32 7, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %165

163:                                              ; preds = %138
  br label %164

164:                                              ; preds = %163
  br label %165

165:                                              ; preds = %164, %162, %156, %136, %76
  %166 = load i32, i32* %19, align 4
  %167 = icmp ne i32 %166, 0
  %168 = xor i1 %167, true
  %169 = xor i1 %168, true
  %170 = zext i1 %169 to i32
  %171 = sext i32 %170 to i64
  %172 = call i64 @llvm.expect.i64(i64 %171, i64 0)
  %173 = icmp ne i64 %172, 0
  br i1 %173, label %174, label %197

174:                                              ; preds = %165
  %175 = load i32, i32* %19, align 4
  %176 = icmp eq i32 %175, 2
  br i1 %176, label %177, label %180

177:                                              ; preds = %174
  %178 = load i32, i32* %12, align 4
  %179 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %178, i8* %179)
  br label %196

180:                                              ; preds = %174
  %181 = load i32, i32* %19, align 4
  %182 = icmp eq i32 %181, 3
  br i1 %182, label %183, label %187

183:                                              ; preds = %180
  %184 = load i32, i32* %12, align 4
  %185 = load i8*, i8** %16, align 8
  %186 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %184, i8* %185, %29* %186)
  br label %195

187:                                              ; preds = %180
  %188 = load i32, i32* %19, align 4
  %189 = icmp eq i32 %188, 4
  br i1 %189, label %190, label %194

190:                                              ; preds = %187
  %191 = load i32, i32* %12, align 4
  %192 = load i32, i32* %15, align 4
  %193 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %191, i32 %192, %29* %193)
  br label %194

194:                                              ; preds = %190, %187
  br label %195

195:                                              ; preds = %194, %183
  br label %196

196:                                              ; preds = %195, %177
  store i32 1, i32* %20, align 4
  br label %198

197:                                              ; preds = %165
  store i32 0, i32* %20, align 4
  br label %198

198:                                              ; preds = %197, %196
  %199 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %200 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #15
  %201 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #15
  %202 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %202) #15
  %203 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203) #15
  %204 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #15
  %205 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %205) #15
  %206 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %206) #15
  %207 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %207) #15
  %208 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %208) #15
  %209 = load i32, i32* %20, align 4
  switch i32 %209, label %272 [
    i32 0, label %210
  ]

210:                                              ; preds = %198
  br label %211

211:                                              ; preds = %210
  br label %212

212:                                              ; preds = %211
  %213 = load %6*, %6** @date_ce_immutable, align 8
  %214 = load %29*, %29** %4, align 8
  %215 = call %29* @php_date_instantiate(%6* %213, %29* %214)
  %216 = load %29*, %29** %5, align 8
  %217 = getelementptr inbounds %29, %29* %216, i32 0, i32 0
  %218 = bitcast %30* %217 to %15**
  %219 = load %15*, %15** %218, align 8
  %220 = call %61* @489(%15* %219)
  store %61* %220, %61** %7, align 8
  %221 = load %29*, %29** %4, align 8
  %222 = getelementptr inbounds %29, %29* %221, i32 0, i32 0
  %223 = bitcast %30* %222 to %15**
  %224 = load %15*, %15** %223, align 8
  %225 = call %61* @489(%15* %224)
  store %61* %225, %61** %6, align 8
  %226 = call %52* @timelib_time_ctor()
  %227 = load %61*, %61** %6, align 8
  %228 = getelementptr inbounds %61, %61* %227, i32 0, i32 0
  store %52* %226, %52** %228, align 8
  %229 = load %61*, %61** %6, align 8
  %230 = getelementptr inbounds %61, %61* %229, i32 0, i32 0
  %231 = load %52*, %52** %230, align 8
  %232 = load %61*, %61** %7, align 8
  %233 = getelementptr inbounds %61, %61* %232, i32 0, i32 0
  %234 = load %52*, %52** %233, align 8
  %235 = bitcast %52* %231 to i8*
  %236 = bitcast %52* %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* align 8 %236, i64 240, i1 false)
  %237 = load %61*, %61** %7, align 8
  %238 = getelementptr inbounds %61, %61* %237, i32 0, i32 0
  %239 = load %52*, %52** %238, align 8
  %240 = getelementptr inbounds %52, %52* %239, i32 0, i32 8
  %241 = load i8*, i8** %240, align 8
  %242 = icmp ne i8* %241, null
  br i1 %242, label %243, label %254

243:                                              ; preds = %212
  %244 = load %61*, %61** %7, align 8
  %245 = getelementptr inbounds %61, %61* %244, i32 0, i32 0
  %246 = load %52*, %52** %245, align 8
  %247 = getelementptr inbounds %52, %52* %246, i32 0, i32 8
  %248 = load i8*, i8** %247, align 8
  %249 = call noalias i8* @_estrdup(i8* %248)
  %250 = load %61*, %61** %6, align 8
  %251 = getelementptr inbounds %61, %61* %250, i32 0, i32 0
  %252 = load %52*, %52** %251, align 8
  %253 = getelementptr inbounds %52, %52* %252, i32 0, i32 8
  store i8* %249, i8** %253, align 8
  br label %254

254:                                              ; preds = %243, %212
  %255 = load %61*, %61** %7, align 8
  %256 = getelementptr inbounds %61, %61* %255, i32 0, i32 0
  %257 = load %52*, %52** %256, align 8
  %258 = getelementptr inbounds %52, %52* %257, i32 0, i32 9
  %259 = load %53*, %53** %258, align 8
  %260 = icmp ne %53* %259, null
  br i1 %260, label %261, label %271

261:                                              ; preds = %254
  %262 = load %61*, %61** %7, align 8
  %263 = getelementptr inbounds %61, %61* %262, i32 0, i32 0
  %264 = load %52*, %52** %263, align 8
  %265 = getelementptr inbounds %52, %52* %264, i32 0, i32 9
  %266 = load %53*, %53** %265, align 8
  %267 = load %61*, %61** %6, align 8
  %268 = getelementptr inbounds %61, %61* %267, i32 0, i32 0
  %269 = load %52*, %52** %268, align 8
  %270 = getelementptr inbounds %52, %52* %269, i32 0, i32 9
  store %53* %266, %53** %270, align 8
  br label %271

271:                                              ; preds = %261, %254
  store i32 0, i32* %20, align 4
  br label %272

272:                                              ; preds = %271, %198
  %273 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #15
  %274 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #15
  %275 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %275) #15
  %276 = load i32, i32* %20, align 4
  switch i32 %276, label %278 [
    i32 0, label %277
    i32 1, label %277
  ]

277:                                              ; preds = %272, %272
  ret void

278:                                              ; preds = %272
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeZone___construct(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca %64*, align 8
  %7 = alloca %70, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast %70* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %23) #15
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 4, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 1, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 4, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @468(%29* %142, %28** %5, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %19, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %19, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %12, align 4
  %169 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 4, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %19, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %12, align 4
  %175 = load i8*, i8** %16, align 8
  %176 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 4, i32 %174, i8* %175, %29* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %19, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %12, align 4
  %182 = load i32, i32* %15, align 4
  %183 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 4, i32 %181, i32 %182, %29* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %20, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %20, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %190 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #15
  %191 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #15
  %192 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #15
  %193 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #15
  %194 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #15
  %195 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #15
  %196 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #15
  %197 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #15
  %198 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #15
  %199 = load i32, i32* %20, align 4
  switch i32 %199, label %226 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  call void @zend_replace_error_handling(i32 2, %6* null, %70* %7)
  %203 = load %1*, %1** %3, align 8
  %204 = getelementptr inbounds %1, %1* %203, i32 0, i32 4
  %205 = call zeroext i8 @490(%29* %204)
  %206 = zext i8 %205 to i32
  %207 = icmp eq i32 %206, 8
  br i1 %207, label %208, label %211

208:                                              ; preds = %202
  %209 = load %1*, %1** %3, align 8
  %210 = getelementptr inbounds %1, %1* %209, i32 0, i32 4
  br label %212

211:                                              ; preds = %202
  br label %212

212:                                              ; preds = %211, %208
  %213 = phi %29* [ %210, %208 ], [ null, %211 ]
  %214 = getelementptr inbounds %29, %29* %213, i32 0, i32 0
  %215 = bitcast %30* %214 to %15**
  %216 = load %15*, %15** %215, align 8
  %217 = call %64* @484(%15* %216)
  store %64* %217, %64** %6, align 8
  %218 = load %64*, %64** %6, align 8
  %219 = load %28*, %28** %5, align 8
  %220 = getelementptr inbounds %28, %28* %219, i32 0, i32 3
  %221 = getelementptr inbounds [1 x i8], [1 x i8]* %220, i32 0, i32 0
  %222 = load %28*, %28** %5, align 8
  %223 = getelementptr inbounds %28, %28* %222, i32 0, i32 2
  %224 = load i64, i64* %223, align 8
  %225 = call i32 @506(%64* %218, i8* %221, i64 %224)
  call void @zend_restore_error_handling(%70* %7)
  store i32 0, i32* %20, align 4
  br label %226

226:                                              ; preds = %212, %188
  %227 = bitcast %70* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %227) #15
  %228 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %228) #15
  %229 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #15
  %230 = load i32, i32* %20, align 4
  switch i32 %230, label %232 [
    i32 0, label %231
    i32 1, label %231
  ]

231:                                              ; preds = %226, %226
  ret void

232:                                              ; preds = %226
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeZone___wakeup(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %64*, align 8
  %7 = alloca %7*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = load %1*, %1** %3, align 8
  %10 = getelementptr inbounds %1, %1* %9, i32 0, i32 4
  %11 = call zeroext i8 @490(%29* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %1*, %1** %3, align 8
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %29* [ %16, %14 ], [ null, %17 ]
  store %29* %19, %29** %5, align 8
  %20 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = load %29*, %29** %5, align 8
  %23 = getelementptr inbounds %29, %29* %22, i32 0, i32 0
  %24 = bitcast %30* %23 to %15**
  %25 = load %15*, %15** %24, align 8
  %26 = call %64* @484(%15* %25)
  store %64* %26, %64** %6, align 8
  %27 = load %29*, %29** %5, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 0
  %29 = bitcast %30* %28 to %15**
  %30 = load %15*, %15** %29, align 8
  %31 = getelementptr inbounds %15, %15* %30, i32 0, i32 3
  %32 = load %16*, %16** %31, align 8
  %33 = getelementptr inbounds %16, %16* %32, i32 0, i32 15
  %34 = load %7* (%29*)*, %7* (%29*)** %33, align 8
  %35 = load %29*, %29** %5, align 8
  %36 = call %7* %34(%29* %35)
  store %7* %36, %7** %7, align 8
  %37 = load %7*, %7** %7, align 8
  %38 = call i32 @507(%29** %4, %64** %6, %7* %37)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %18
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @240, i32 0, i32 0))
  br label %41

41:                                               ; preds = %40, %18
  %42 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #15
  %43 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #15
  %44 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateTimeZone___set_state(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %64*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %7*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %64** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 1, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @491(%29* %142, %29** %6, i32 0, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 3, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %19, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %19, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %12, align 4
  %169 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %19, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %12, align 4
  %175 = load i8*, i8** %16, align 8
  %176 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %29* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %19, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %12, align 4
  %182 = load i32, i32* %15, align 4
  %183 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %29* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %20, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %20, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %190 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #15
  %191 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #15
  %192 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #15
  %193 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #15
  %194 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #15
  %195 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #15
  %196 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #15
  %197 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #15
  %198 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #15
  %199 = load i32, i32* %20, align 4
  switch i32 %199, label %221 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load %29*, %29** %6, align 8
  %204 = getelementptr inbounds %29, %29* %203, i32 0, i32 0
  %205 = bitcast %30* %204 to %7**
  %206 = load %7*, %7** %205, align 8
  store %7* %206, %7** %7, align 8
  %207 = load %6*, %6** @date_ce_timezone, align 8
  %208 = load %29*, %29** %4, align 8
  %209 = call %29* @php_date_instantiate(%6* %207, %29* %208)
  %210 = load %29*, %29** %4, align 8
  %211 = getelementptr inbounds %29, %29* %210, i32 0, i32 0
  %212 = bitcast %30* %211 to %15**
  %213 = load %15*, %15** %212, align 8
  %214 = call %64* @484(%15* %213)
  store %64* %214, %64** %5, align 8
  %215 = load %7*, %7** %7, align 8
  %216 = call i32 @507(%29** %4, %64** %5, %7* %215)
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %202
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @240, i32 0, i32 0))
  %219 = load %29*, %29** %4, align 8
  call void @508(%29* %219)
  br label %220

220:                                              ; preds = %218, %202
  store i32 0, i32* %20, align 4
  br label %221

221:                                              ; preds = %220, %188
  %222 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #15
  %223 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #15
  %224 = bitcast %64** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #15
  %225 = load i32, i32* %20, align 4
  switch i32 %225, label %227 [
    i32 0, label %226
    i32 1, label %226
  ]

226:                                              ; preds = %221, %221
  ret void

227:                                              ; preds = %221
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateInterval___construct(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca %68*, align 8
  %7 = alloca %59*, align 8
  %8 = alloca %70, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %22 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  store %28* null, %28** %5, align 8
  %23 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  %24 = bitcast %59** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  %25 = bitcast %70* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %25) #15
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 4, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 1, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  %31 = load %1*, %1** %3, align 8
  %32 = getelementptr inbounds %1, %1* %31, i32 0, i32 4
  %33 = getelementptr inbounds %29, %29* %32, i32 0, i32 2
  %34 = bitcast %32* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #15
  %37 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  %38 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store %29* null, %29** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %29*, %29** %14, align 8
  %44 = load %29*, %29** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 4, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %157

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %1*, %1** %3, align 8
  %84 = bitcast %1* %83 to %29*
  %85 = getelementptr inbounds %29, %29* %84, i64 4
  store %29* %85, %29** %14, align 8
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %157

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %29*, %29** %14, align 8
  %142 = getelementptr inbounds %29, %29* %141, i32 1
  store %29* %142, %29** %14, align 8
  %143 = load %29*, %29** %14, align 8
  store %29* %143, %29** %15, align 8
  %144 = load %29*, %29** %15, align 8
  %145 = call i32 @468(%29* %144, %28** %5, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %157

155:                                              ; preds = %140
  br label %156

156:                                              ; preds = %155
  br label %157

157:                                              ; preds = %156, %154, %138, %78
  %158 = load i32, i32* %20, align 4
  %159 = icmp ne i32 %158, 0
  %160 = xor i1 %159, true
  %161 = xor i1 %160, true
  %162 = zext i1 %161 to i32
  %163 = sext i32 %162 to i64
  %164 = call i64 @llvm.expect.i64(i64 %163, i64 0)
  %165 = icmp ne i64 %164, 0
  br i1 %165, label %166, label %189

166:                                              ; preds = %157
  %167 = load i32, i32* %20, align 4
  %168 = icmp eq i32 %167, 2
  br i1 %168, label %169, label %172

169:                                              ; preds = %166
  %170 = load i32, i32* %13, align 4
  %171 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 4, i32 2, i32 %170, i8* %171)
  br label %188

172:                                              ; preds = %166
  %173 = load i32, i32* %20, align 4
  %174 = icmp eq i32 %173, 3
  br i1 %174, label %175, label %179

175:                                              ; preds = %172
  %176 = load i32, i32* %13, align 4
  %177 = load i8*, i8** %17, align 8
  %178 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 4, i32 %176, i8* %177, %29* %178)
  br label %187

179:                                              ; preds = %172
  %180 = load i32, i32* %20, align 4
  %181 = icmp eq i32 %180, 4
  br i1 %181, label %182, label %186

182:                                              ; preds = %179
  %183 = load i32, i32* %13, align 4
  %184 = load i32, i32* %16, align 4
  %185 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 4, i32 %183, i32 %184, %29* %185)
  br label %186

186:                                              ; preds = %182, %179
  br label %187

187:                                              ; preds = %186, %175
  br label %188

188:                                              ; preds = %187, %169
  store i32 1, i32* %21, align 4
  br label %190

189:                                              ; preds = %157
  store i32 0, i32* %21, align 4
  br label %190

190:                                              ; preds = %189, %188
  %191 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  %192 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #15
  %193 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #15
  %194 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #15
  %195 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #15
  %196 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #15
  %197 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #15
  %198 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #15
  %199 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #15
  %200 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #15
  %201 = load i32, i32* %21, align 4
  switch i32 %201, label %235 [
    i32 0, label %202
  ]

202:                                              ; preds = %190
  br label %203

203:                                              ; preds = %202
  br label %204

204:                                              ; preds = %203
  call void @zend_replace_error_handling(i32 2, %6* null, %70* %8)
  %205 = load %28*, %28** %5, align 8
  %206 = getelementptr inbounds %28, %28* %205, i32 0, i32 3
  %207 = getelementptr inbounds [1 x i8], [1 x i8]* %206, i32 0, i32 0
  %208 = load %28*, %28** %5, align 8
  %209 = getelementptr inbounds %28, %28* %208, i32 0, i32 2
  %210 = load i64, i64* %209, align 8
  %211 = call i32 @514(%59** %7, i8* %207, i64 %210)
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %234

213:                                              ; preds = %204
  %214 = load %1*, %1** %3, align 8
  %215 = getelementptr inbounds %1, %1* %214, i32 0, i32 4
  %216 = call zeroext i8 @490(%29* %215)
  %217 = zext i8 %216 to i32
  %218 = icmp eq i32 %217, 8
  br i1 %218, label %219, label %222

219:                                              ; preds = %213
  %220 = load %1*, %1** %3, align 8
  %221 = getelementptr inbounds %1, %1* %220, i32 0, i32 4
  br label %223

222:                                              ; preds = %213
  br label %223

223:                                              ; preds = %222, %219
  %224 = phi %29* [ %221, %219 ], [ null, %222 ]
  %225 = getelementptr inbounds %29, %29* %224, i32 0, i32 0
  %226 = bitcast %30* %225 to %15**
  %227 = load %15*, %15** %226, align 8
  %228 = call %68* @505(%15* %227)
  store %68* %228, %68** %6, align 8
  %229 = load %59*, %59** %7, align 8
  %230 = load %68*, %68** %6, align 8
  %231 = getelementptr inbounds %68, %68* %230, i32 0, i32 0
  store %59* %229, %59** %231, align 8
  %232 = load %68*, %68** %6, align 8
  %233 = getelementptr inbounds %68, %68* %232, i32 0, i32 2
  store i32 1, i32* %233, align 8
  br label %234

234:                                              ; preds = %223, %204
  call void @zend_restore_error_handling(%70* %8)
  store i32 0, i32* %21, align 4
  br label %235

235:                                              ; preds = %234, %190
  %236 = bitcast %70* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %236) #15
  %237 = bitcast %59** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %237) #15
  %238 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #15
  %239 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %239) #15
  %240 = load i32, i32* %21, align 4
  switch i32 %240, label %242 [
    i32 0, label %241
    i32 1, label %241
  ]

241:                                              ; preds = %235, %235
  ret void

242:                                              ; preds = %235
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateInterval___wakeup(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %68*, align 8
  %7 = alloca %7*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = load %1*, %1** %3, align 8
  %10 = getelementptr inbounds %1, %1* %9, i32 0, i32 4
  %11 = call zeroext i8 @490(%29* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %1*, %1** %3, align 8
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %29* [ %16, %14 ], [ null, %17 ]
  store %29* %19, %29** %5, align 8
  %20 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = load %29*, %29** %5, align 8
  %23 = getelementptr inbounds %29, %29* %22, i32 0, i32 0
  %24 = bitcast %30* %23 to %15**
  %25 = load %15*, %15** %24, align 8
  %26 = call %68* @505(%15* %25)
  store %68* %26, %68** %6, align 8
  %27 = load %29*, %29** %5, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 0
  %29 = bitcast %30* %28 to %15**
  %30 = load %15*, %15** %29, align 8
  %31 = getelementptr inbounds %15, %15* %30, i32 0, i32 3
  %32 = load %16*, %16** %31, align 8
  %33 = getelementptr inbounds %16, %16* %32, i32 0, i32 15
  %34 = load %7* (%29*)*, %7* (%29*)** %33, align 8
  %35 = load %29*, %29** %5, align 8
  %36 = call %7* %34(%29* %35)
  store %7* %36, %7** %7, align 8
  %37 = load %7*, %7** %7, align 8
  %38 = call i32 @515(%29** %4, %68** %6, %7* %37)
  %39 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #15
  %40 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #15
  %41 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DateInterval___set_state(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %68*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %7*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %68** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 1, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @491(%29* %142, %29** %6, i32 0, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 3, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %19, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %193

164:                                              ; preds = %155
  %165 = load i32, i32* %19, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %12, align 4
  %169 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %19, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %12, align 4
  %175 = load i8*, i8** %16, align 8
  %176 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %29* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %19, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %12, align 4
  %182 = load i32, i32* %15, align 4
  %183 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %29* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  br label %187

187:                                              ; preds = %186
  %188 = load %29*, %29** %4, align 8
  %189 = getelementptr inbounds %29, %29* %188, i32 0, i32 1
  %190 = bitcast %31* %189 to i32*
  store i32 2, i32* %190, align 8
  br label %191

191:                                              ; preds = %187
  br label %192

192:                                              ; preds = %191
  store i32 1, i32* %20, align 4
  br label %194

193:                                              ; preds = %155
  store i32 0, i32* %20, align 4
  br label %194

194:                                              ; preds = %193, %192
  %195 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %196 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #15
  %197 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #15
  %198 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #15
  %199 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #15
  %200 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #15
  %201 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #15
  %202 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #15
  %203 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #15
  %204 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #15
  %205 = load i32, i32* %20, align 4
  switch i32 %205, label %223 [
    i32 0, label %206
  ]

206:                                              ; preds = %194
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  %209 = load %29*, %29** %6, align 8
  %210 = getelementptr inbounds %29, %29* %209, i32 0, i32 0
  %211 = bitcast %30* %210 to %7**
  %212 = load %7*, %7** %211, align 8
  store %7* %212, %7** %7, align 8
  %213 = load %6*, %6** @date_ce_interval, align 8
  %214 = load %29*, %29** %4, align 8
  %215 = call %29* @php_date_instantiate(%6* %213, %29* %214)
  %216 = load %29*, %29** %4, align 8
  %217 = getelementptr inbounds %29, %29* %216, i32 0, i32 0
  %218 = bitcast %30* %217 to %15**
  %219 = load %15*, %15** %218, align 8
  %220 = call %68* @505(%15* %219)
  store %68* %220, %68** %5, align 8
  %221 = load %7*, %7** %7, align 8
  %222 = call i32 @515(%29** %4, %68** %5, %7* %221)
  store i32 0, i32* %20, align 4
  br label %223

223:                                              ; preds = %208, %194
  %224 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #15
  %225 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #15
  %226 = bitcast %68** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %226) #15
  %227 = load i32, i32* %20, align 4
  switch i32 %227, label %229 [
    i32 0, label %228
    i32 1, label %228
  ]

228:                                              ; preds = %223, %223
  ret void

229:                                              ; preds = %223
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DatePeriod___construct(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %71*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca %68*, align 8
  %8 = alloca %29*, align 8
  %9 = alloca %29*, align 8
  %10 = alloca %29*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca %52*, align 8
  %16 = alloca %70, align 8
  %17 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %18 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  %19 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #15
  %20 = bitcast %68** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  store %29* null, %29** %9, align 8
  %23 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  %24 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  store i64 0, i64* %11, align 8
  %25 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  store i64 0, i64* %12, align 8
  %26 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  store i8* null, i8** %13, align 8
  %27 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #15
  store i64 0, i64* %14, align 8
  %28 = bitcast %52** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #15
  %29 = bitcast %70* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %29) #15
  call void @zend_replace_error_handling(i32 2, %6* null, %70* %16)
  %30 = load %1*, %1** %3, align 8
  %31 = getelementptr inbounds %1, %1* %30, i32 0, i32 4
  %32 = getelementptr inbounds %29, %29* %31, i32 0, i32 2
  %33 = bitcast %32* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = load %6*, %6** @date_ce_interface, align 8
  %36 = load %6*, %6** @date_ce_interval, align 8
  %37 = call i32 (i32, i32, i8*, ...) @zend_parse_parameters_ex(i32 2, i32 %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @262, i32 0, i32 0), %29** %8, %6* %35, %29** %10, %6* %36, i64* %11, i64* %12)
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %61

39:                                               ; preds = %2
  %40 = load %1*, %1** %3, align 8
  %41 = getelementptr inbounds %1, %1* %40, i32 0, i32 4
  %42 = getelementptr inbounds %29, %29* %41, i32 0, i32 2
  %43 = bitcast %32* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = load %6*, %6** @date_ce_interface, align 8
  %46 = load %6*, %6** @date_ce_interval, align 8
  %47 = load %6*, %6** @date_ce_interface, align 8
  %48 = call i32 (i32, i32, i8*, ...) @zend_parse_parameters_ex(i32 2, i32 %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @263, i32 0, i32 0), %29** %8, %6* %45, %29** %10, %6* %46, %29** %9, %6* %47, i64* %12)
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %50, label %60

50:                                               ; preds = %39
  %51 = load %1*, %1** %3, align 8
  %52 = getelementptr inbounds %1, %1* %51, i32 0, i32 4
  %53 = getelementptr inbounds %29, %29* %52, i32 0, i32 2
  %54 = bitcast %32* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = call i32 (i32, i32, i8*, ...) @zend_parse_parameters_ex(i32 2, i32 %55, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @264, i32 0, i32 0), i8** %13, i64* %14, i64* %12)
  %57 = icmp eq i32 %56, -1
  br i1 %57, label %58, label %59

58:                                               ; preds = %50
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([144 x i8], [144 x i8]* @265, i32 0, i32 0))
  call void @zend_restore_error_handling(%70* %16)
  store i32 1, i32* %17, align 4
  br label %248

59:                                               ; preds = %50
  br label %60

60:                                               ; preds = %59, %39
  br label %61

61:                                               ; preds = %60, %2
  %62 = load %1*, %1** %3, align 8
  %63 = getelementptr inbounds %1, %1* %62, i32 0, i32 4
  %64 = call zeroext i8 @490(%29* %63)
  %65 = zext i8 %64 to i32
  %66 = icmp eq i32 %65, 8
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = load %1*, %1** %3, align 8
  %69 = getelementptr inbounds %1, %1* %68, i32 0, i32 4
  br label %71

70:                                               ; preds = %61
  br label %71

71:                                               ; preds = %70, %67
  %72 = phi %29* [ %69, %67 ], [ null, %70 ]
  %73 = getelementptr inbounds %29, %29* %72, i32 0, i32 0
  %74 = bitcast %30* %73 to %15**
  %75 = load %15*, %15** %74, align 8
  %76 = call %71* @482(%15* %75)
  store %71* %76, %71** %5, align 8
  %77 = load %71*, %71** %5, align 8
  %78 = getelementptr inbounds %71, %71* %77, i32 0, i32 2
  store %52* null, %52** %78, align 8
  %79 = load i8*, i8** %13, align 8
  %80 = icmp ne i8* %79, null
  br i1 %80, label %81, label %136

81:                                               ; preds = %71
  %82 = load %71*, %71** %5, align 8
  %83 = getelementptr inbounds %71, %71* %82, i32 0, i32 0
  %84 = load %71*, %71** %5, align 8
  %85 = getelementptr inbounds %71, %71* %84, i32 0, i32 3
  %86 = load %71*, %71** %5, align 8
  %87 = getelementptr inbounds %71, %71* %86, i32 0, i32 4
  %88 = load i8*, i8** %13, align 8
  %89 = load i64, i64* %14, align 8
  %90 = call i32 @517(%52** %83, %52** %85, %59** %87, i64* %11, i8* %88, i64 %89)
  %91 = load %71*, %71** %5, align 8
  %92 = getelementptr inbounds %71, %71* %91, i32 0, i32 0
  %93 = load %52*, %52** %92, align 8
  %94 = icmp eq %52* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %81
  %96 = load i8*, i8** %13, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @266, i32 0, i32 0), i8* %96)
  br label %97

97:                                               ; preds = %95, %81
  %98 = load %71*, %71** %5, align 8
  %99 = getelementptr inbounds %71, %71* %98, i32 0, i32 4
  %100 = load %59*, %59** %99, align 8
  %101 = icmp eq %59* %100, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  %103 = load i8*, i8** %13, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @267, i32 0, i32 0), i8* %103)
  br label %104

104:                                              ; preds = %102, %97
  %105 = load %71*, %71** %5, align 8
  %106 = getelementptr inbounds %71, %71* %105, i32 0, i32 3
  %107 = load %52*, %52** %106, align 8
  %108 = icmp eq %52* %107, null
  br i1 %108, label %109, label %114

109:                                              ; preds = %104
  %110 = load i64, i64* %11, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = load i8*, i8** %13, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @268, i32 0, i32 0), i8* %113)
  br label %114

114:                                              ; preds = %112, %109, %104
  %115 = load %71*, %71** %5, align 8
  %116 = getelementptr inbounds %71, %71* %115, i32 0, i32 0
  %117 = load %52*, %52** %116, align 8
  %118 = icmp ne %52* %117, null
  br i1 %118, label %119, label %123

119:                                              ; preds = %114
  %120 = load %71*, %71** %5, align 8
  %121 = getelementptr inbounds %71, %71* %120, i32 0, i32 0
  %122 = load %52*, %52** %121, align 8
  call void @timelib_update_ts(%52* %122, %53* null)
  br label %123

123:                                              ; preds = %119, %114
  %124 = load %71*, %71** %5, align 8
  %125 = getelementptr inbounds %71, %71* %124, i32 0, i32 3
  %126 = load %52*, %52** %125, align 8
  %127 = icmp ne %52* %126, null
  br i1 %127, label %128, label %132

128:                                              ; preds = %123
  %129 = load %71*, %71** %5, align 8
  %130 = getelementptr inbounds %71, %71* %129, i32 0, i32 3
  %131 = load %52*, %52** %130, align 8
  call void @timelib_update_ts(%52* %131, %53* null)
  br label %132

132:                                              ; preds = %128, %123
  %133 = load %6*, %6** @date_ce_date, align 8
  %134 = load %71*, %71** %5, align 8
  %135 = getelementptr inbounds %71, %71* %134, i32 0, i32 1
  store %6* %133, %6** %135, align 8
  br label %218

136:                                              ; preds = %71
  %137 = load %29*, %29** %10, align 8
  %138 = getelementptr inbounds %29, %29* %137, i32 0, i32 0
  %139 = bitcast %30* %138 to %15**
  %140 = load %15*, %15** %139, align 8
  %141 = call %68* @505(%15* %140)
  store %68* %141, %68** %7, align 8
  %142 = load %29*, %29** %8, align 8
  %143 = getelementptr inbounds %29, %29* %142, i32 0, i32 0
  %144 = bitcast %30* %143 to %15**
  %145 = load %15*, %15** %144, align 8
  %146 = call %61* @489(%15* %145)
  store %61* %146, %61** %6, align 8
  %147 = call %52* @timelib_time_ctor()
  store %52* %147, %52** %15, align 8
  %148 = load %52*, %52** %15, align 8
  %149 = bitcast %52* %148 to i8*
  %150 = load %61*, %61** %6, align 8
  %151 = getelementptr inbounds %61, %61* %150, i32 0, i32 0
  %152 = load %52*, %52** %151, align 8
  %153 = bitcast %52* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %153, i64 240, i1 false)
  %154 = load %61*, %61** %6, align 8
  %155 = getelementptr inbounds %61, %61* %154, i32 0, i32 0
  %156 = load %52*, %52** %155, align 8
  %157 = getelementptr inbounds %52, %52* %156, i32 0, i32 8
  %158 = load i8*, i8** %157, align 8
  %159 = icmp ne i8* %158, null
  br i1 %159, label %160, label %169

160:                                              ; preds = %136
  %161 = load %61*, %61** %6, align 8
  %162 = getelementptr inbounds %61, %61* %161, i32 0, i32 0
  %163 = load %52*, %52** %162, align 8
  %164 = getelementptr inbounds %52, %52* %163, i32 0, i32 8
  %165 = load i8*, i8** %164, align 8
  %166 = call noalias i8* @_estrdup(i8* %165)
  %167 = load %52*, %52** %15, align 8
  %168 = getelementptr inbounds %52, %52* %167, i32 0, i32 8
  store i8* %166, i8** %168, align 8
  br label %169

169:                                              ; preds = %160, %136
  %170 = load %61*, %61** %6, align 8
  %171 = getelementptr inbounds %61, %61* %170, i32 0, i32 0
  %172 = load %52*, %52** %171, align 8
  %173 = getelementptr inbounds %52, %52* %172, i32 0, i32 9
  %174 = load %53*, %53** %173, align 8
  %175 = icmp ne %53* %174, null
  br i1 %175, label %176, label %184

176:                                              ; preds = %169
  %177 = load %61*, %61** %6, align 8
  %178 = getelementptr inbounds %61, %61* %177, i32 0, i32 0
  %179 = load %52*, %52** %178, align 8
  %180 = getelementptr inbounds %52, %52* %179, i32 0, i32 9
  %181 = load %53*, %53** %180, align 8
  %182 = load %52*, %52** %15, align 8
  %183 = getelementptr inbounds %52, %52* %182, i32 0, i32 9
  store %53* %181, %53** %183, align 8
  br label %184

184:                                              ; preds = %176, %169
  %185 = load %52*, %52** %15, align 8
  %186 = load %71*, %71** %5, align 8
  %187 = getelementptr inbounds %71, %71* %186, i32 0, i32 0
  store %52* %185, %52** %187, align 8
  %188 = load %29*, %29** %8, align 8
  %189 = getelementptr inbounds %29, %29* %188, i32 0, i32 0
  %190 = bitcast %30* %189 to %15**
  %191 = load %15*, %15** %190, align 8
  %192 = getelementptr inbounds %15, %15* %191, i32 0, i32 2
  %193 = load %6*, %6** %192, align 8
  %194 = load %71*, %71** %5, align 8
  %195 = getelementptr inbounds %71, %71* %194, i32 0, i32 1
  store %6* %193, %6** %195, align 8
  %196 = load %68*, %68** %7, align 8
  %197 = getelementptr inbounds %68, %68* %196, i32 0, i32 0
  %198 = load %59*, %59** %197, align 8
  %199 = call %59* @timelib_rel_time_clone(%59* %198)
  %200 = load %71*, %71** %5, align 8
  %201 = getelementptr inbounds %71, %71* %200, i32 0, i32 4
  store %59* %199, %59** %201, align 8
  %202 = load %29*, %29** %9, align 8
  %203 = icmp ne %29* %202, null
  br i1 %203, label %204, label %217

204:                                              ; preds = %184
  %205 = load %29*, %29** %9, align 8
  %206 = getelementptr inbounds %29, %29* %205, i32 0, i32 0
  %207 = bitcast %30* %206 to %15**
  %208 = load %15*, %15** %207, align 8
  %209 = call %61* @489(%15* %208)
  store %61* %209, %61** %6, align 8
  %210 = load %61*, %61** %6, align 8
  %211 = getelementptr inbounds %61, %61* %210, i32 0, i32 0
  %212 = load %52*, %52** %211, align 8
  %213 = call %52* @timelib_time_clone(%52* %212)
  store %52* %213, %52** %15, align 8
  %214 = load %52*, %52** %15, align 8
  %215 = load %71*, %71** %5, align 8
  %216 = getelementptr inbounds %71, %71* %215, i32 0, i32 3
  store %52* %214, %52** %216, align 8
  br label %217

217:                                              ; preds = %204, %184
  br label %218

218:                                              ; preds = %217, %132
  %219 = load %71*, %71** %5, align 8
  %220 = getelementptr inbounds %71, %71* %219, i32 0, i32 3
  %221 = load %52*, %52** %220, align 8
  %222 = icmp eq %52* %221, null
  br i1 %222, label %223, label %229

223:                                              ; preds = %218
  %224 = load i64, i64* %11, align 8
  %225 = icmp slt i64 %224, 1
  br i1 %225, label %226, label %229

226:                                              ; preds = %223
  %227 = load i64, i64* %11, align 8
  %228 = trunc i64 %227 to i32
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @269, i32 0, i32 0), i32 %228)
  br label %229

229:                                              ; preds = %226, %223, %218
  %230 = load i64, i64* %12, align 8
  %231 = and i64 %230, 1
  %232 = icmp ne i64 %231, 0
  %233 = xor i1 %232, true
  %234 = zext i1 %233 to i32
  %235 = load %71*, %71** %5, align 8
  %236 = getelementptr inbounds %71, %71* %235, i32 0, i32 7
  store i32 %234, i32* %236, align 8
  %237 = load i64, i64* %11, align 8
  %238 = load %71*, %71** %5, align 8
  %239 = getelementptr inbounds %71, %71* %238, i32 0, i32 7
  %240 = load i32, i32* %239, align 8
  %241 = sext i32 %240 to i64
  %242 = add nsw i64 %237, %241
  %243 = trunc i64 %242 to i32
  %244 = load %71*, %71** %5, align 8
  %245 = getelementptr inbounds %71, %71* %244, i32 0, i32 5
  store i32 %243, i32* %245, align 8
  %246 = load %71*, %71** %5, align 8
  %247 = getelementptr inbounds %71, %71* %246, i32 0, i32 6
  store i32 1, i32* %247, align 4
  call void @zend_restore_error_handling(%70* %16)
  store i32 0, i32* %17, align 4
  br label %248

248:                                              ; preds = %229, %58
  %249 = bitcast %70* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %249) #15
  %250 = bitcast %52** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %250) #15
  %251 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %251) #15
  %252 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %252) #15
  %253 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %253) #15
  %254 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %254) #15
  %255 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %255) #15
  %256 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %256) #15
  %257 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #15
  %258 = bitcast %68** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %258) #15
  %259 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #15
  %260 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #15
  %261 = load i32, i32* %17, align 4
  switch i32 %261, label %263 [
    i32 0, label %262
    i32 1, label %262
  ]

262:                                              ; preds = %248, %248
  ret void

263:                                              ; preds = %248
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DatePeriod___wakeup(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %71*, align 8
  %7 = alloca %7*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = load %1*, %1** %3, align 8
  %10 = getelementptr inbounds %1, %1* %9, i32 0, i32 4
  %11 = call zeroext i8 @490(%29* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load %1*, %1** %3, align 8
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 4
  br label %18

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %17, %14
  %19 = phi %29* [ %16, %14 ], [ null, %17 ]
  store %29* %19, %29** %5, align 8
  %20 = bitcast %71** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = load %29*, %29** %5, align 8
  %23 = getelementptr inbounds %29, %29* %22, i32 0, i32 0
  %24 = bitcast %30* %23 to %15**
  %25 = load %15*, %15** %24, align 8
  %26 = call %71* @482(%15* %25)
  store %71* %26, %71** %6, align 8
  %27 = load %29*, %29** %5, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 0
  %29 = bitcast %30* %28 to %15**
  %30 = load %15*, %15** %29, align 8
  %31 = getelementptr inbounds %15, %15* %30, i32 0, i32 3
  %32 = load %16*, %16** %31, align 8
  %33 = getelementptr inbounds %16, %16* %32, i32 0, i32 15
  %34 = load %7* (%29*)*, %7* (%29*)** %33, align 8
  %35 = load %29*, %29** %5, align 8
  %36 = call %7* %34(%29* %35)
  store %7* %36, %7** %7, align 8
  %37 = load %71*, %71** %6, align 8
  %38 = load %7*, %7** %7, align 8
  %39 = call i32 @521(%71* %37, %7* %38)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %18
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @283, i32 0, i32 0))
  br label %42

42:                                               ; preds = %41, %18
  %43 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #15
  %44 = bitcast %71** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #15
  %45 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DatePeriod___set_state(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %71*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %7*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %21 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #15
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #15
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 1, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  %29 = load %1*, %1** %3, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 4
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = bitcast %32* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #15
  %35 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store %29* null, %29** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #15
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %29*, %29** %13, align 8
  %42 = load %29*, %29** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %1*, %1** %3, align 8
  %82 = bitcast %1* %81 to %29*
  %83 = getelementptr inbounds %29, %29* %82, i64 4
  store %29* %83, %29** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %29*, %29** %13, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 1
  store %29* %140, %29** %13, align 8
  %141 = load %29*, %29** %13, align 8
  store %29* %141, %29** %14, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = call i32 @491(%29* %142, %29** %6, i32 0, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 3, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %19, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %193

164:                                              ; preds = %155
  %165 = load i32, i32* %19, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %12, align 4
  %169 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %19, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %12, align 4
  %175 = load i8*, i8** %16, align 8
  %176 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %29* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %19, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %12, align 4
  %182 = load i32, i32* %15, align 4
  %183 = load %29*, %29** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %29* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  br label %187

187:                                              ; preds = %186
  %188 = load %29*, %29** %4, align 8
  %189 = getelementptr inbounds %29, %29* %188, i32 0, i32 1
  %190 = bitcast %31* %189 to i32*
  store i32 2, i32* %190, align 8
  br label %191

191:                                              ; preds = %187
  br label %192

192:                                              ; preds = %191
  store i32 1, i32* %20, align 4
  br label %194

193:                                              ; preds = %155
  store i32 0, i32* %20, align 4
  br label %194

194:                                              ; preds = %193, %192
  %195 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #15
  %196 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #15
  %197 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #15
  %198 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #15
  %199 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #15
  %200 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #15
  %201 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #15
  %202 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #15
  %203 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #15
  %204 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #15
  %205 = load i32, i32* %20, align 4
  switch i32 %205, label %227 [
    i32 0, label %206
  ]

206:                                              ; preds = %194
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  %209 = load %29*, %29** %6, align 8
  %210 = getelementptr inbounds %29, %29* %209, i32 0, i32 0
  %211 = bitcast %30* %210 to %7**
  %212 = load %7*, %7** %211, align 8
  store %7* %212, %7** %7, align 8
  %213 = load %29*, %29** %4, align 8
  %214 = load %6*, %6** @date_ce_period, align 8
  %215 = call i32 @_object_init_ex(%29* %213, %6* %214)
  %216 = load %29*, %29** %4, align 8
  %217 = getelementptr inbounds %29, %29* %216, i32 0, i32 0
  %218 = bitcast %30* %217 to %15**
  %219 = load %15*, %15** %218, align 8
  %220 = call %71* @482(%15* %219)
  store %71* %220, %71** %5, align 8
  %221 = load %71*, %71** %5, align 8
  %222 = load %7*, %7** %7, align 8
  %223 = call i32 @521(%71* %221, %7* %222)
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %226, label %225

225:                                              ; preds = %208
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @283, i32 0, i32 0))
  br label %226

226:                                              ; preds = %225, %208
  store i32 0, i32* %20, align 4
  br label %227

227:                                              ; preds = %226, %194
  %228 = bitcast %7** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %228) #15
  %229 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #15
  %230 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #15
  %231 = load i32, i32* %20, align 4
  switch i32 %231, label %233 [
    i32 0, label %232
    i32 1, label %232
  ]

232:                                              ; preds = %227, %227
  ret void

233:                                              ; preds = %227
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DatePeriod_getStartDate(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %71*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = load %1*, %1** %3, align 8
  %11 = getelementptr inbounds %1, %1* %10, i32 0, i32 4
  %12 = getelementptr inbounds %29, %29* %11, i32 0, i32 2
  %13 = bitcast %32* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = xor i1 %15, true
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 1)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  br label %30

23:                                               ; preds = %2
  %24 = load %1*, %1** %3, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 4
  %26 = getelementptr inbounds %29, %29* %25, i32 0, i32 2
  %27 = bitcast %32* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @210, i32 0, i32 0))
  br label %30

30:                                               ; preds = %23, %22
  %31 = phi i32 [ 0, %22 ], [ %29, %23 ]
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  store i32 1, i32* %7, align 4
  br label %106

34:                                               ; preds = %30
  %35 = load %1*, %1** %3, align 8
  %36 = getelementptr inbounds %1, %1* %35, i32 0, i32 4
  %37 = call zeroext i8 @490(%29* %36)
  %38 = zext i8 %37 to i32
  %39 = icmp eq i32 %38, 8
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = load %1*, %1** %3, align 8
  %42 = getelementptr inbounds %1, %1* %41, i32 0, i32 4
  br label %44

43:                                               ; preds = %34
  br label %44

44:                                               ; preds = %43, %40
  %45 = phi %29* [ %42, %40 ], [ null, %43 ]
  %46 = getelementptr inbounds %29, %29* %45, i32 0, i32 0
  %47 = bitcast %30* %46 to %15**
  %48 = load %15*, %15** %47, align 8
  %49 = call %71* @482(%15* %48)
  store %71* %49, %71** %5, align 8
  %50 = load %71*, %71** %5, align 8
  %51 = getelementptr inbounds %71, %71* %50, i32 0, i32 1
  %52 = load %6*, %6** %51, align 8
  %53 = load %29*, %29** %4, align 8
  %54 = call %29* @php_date_instantiate(%6* %52, %29* %53)
  %55 = load %29*, %29** %4, align 8
  %56 = getelementptr inbounds %29, %29* %55, i32 0, i32 0
  %57 = bitcast %30* %56 to %15**
  %58 = load %15*, %15** %57, align 8
  %59 = call %61* @489(%15* %58)
  store %61* %59, %61** %6, align 8
  %60 = call %52* @timelib_time_ctor()
  %61 = load %61*, %61** %6, align 8
  %62 = getelementptr inbounds %61, %61* %61, i32 0, i32 0
  store %52* %60, %52** %62, align 8
  %63 = load %61*, %61** %6, align 8
  %64 = getelementptr inbounds %61, %61* %63, i32 0, i32 0
  %65 = load %52*, %52** %64, align 8
  %66 = load %71*, %71** %5, align 8
  %67 = getelementptr inbounds %71, %71* %66, i32 0, i32 0
  %68 = load %52*, %52** %67, align 8
  %69 = bitcast %52* %65 to i8*
  %70 = bitcast %52* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 240, i1 false)
  %71 = load %71*, %71** %5, align 8
  %72 = getelementptr inbounds %71, %71* %71, i32 0, i32 0
  %73 = load %52*, %52** %72, align 8
  %74 = getelementptr inbounds %52, %52* %73, i32 0, i32 8
  %75 = load i8*, i8** %74, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %77, label %88

77:                                               ; preds = %44
  %78 = load %71*, %71** %5, align 8
  %79 = getelementptr inbounds %71, %71* %78, i32 0, i32 0
  %80 = load %52*, %52** %79, align 8
  %81 = getelementptr inbounds %52, %52* %80, i32 0, i32 8
  %82 = load i8*, i8** %81, align 8
  %83 = call noalias i8* @_estrdup(i8* %82)
  %84 = load %61*, %61** %6, align 8
  %85 = getelementptr inbounds %61, %61* %84, i32 0, i32 0
  %86 = load %52*, %52** %85, align 8
  %87 = getelementptr inbounds %52, %52* %86, i32 0, i32 8
  store i8* %83, i8** %87, align 8
  br label %88

88:                                               ; preds = %77, %44
  %89 = load %71*, %71** %5, align 8
  %90 = getelementptr inbounds %71, %71* %89, i32 0, i32 0
  %91 = load %52*, %52** %90, align 8
  %92 = getelementptr inbounds %52, %52* %91, i32 0, i32 9
  %93 = load %53*, %53** %92, align 8
  %94 = icmp ne %53* %93, null
  br i1 %94, label %95, label %105

95:                                               ; preds = %88
  %96 = load %71*, %71** %5, align 8
  %97 = getelementptr inbounds %71, %71* %96, i32 0, i32 0
  %98 = load %52*, %52** %97, align 8
  %99 = getelementptr inbounds %52, %52* %98, i32 0, i32 9
  %100 = load %53*, %53** %99, align 8
  %101 = load %61*, %61** %6, align 8
  %102 = getelementptr inbounds %61, %61* %101, i32 0, i32 0
  %103 = load %52*, %52** %102, align 8
  %104 = getelementptr inbounds %52, %52* %103, i32 0, i32 9
  store %53* %100, %53** %104, align 8
  br label %105

105:                                              ; preds = %95, %88
  store i32 0, i32* %7, align 4
  br label %106

106:                                              ; preds = %105, %33
  %107 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #15
  %108 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #15
  %109 = load i32, i32* %7, align 4
  switch i32 %109, label %111 [
    i32 0, label %110
    i32 1, label %110
  ]

110:                                              ; preds = %106, %106
  ret void

111:                                              ; preds = %106
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DatePeriod_getEndDate(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %71*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = load %1*, %1** %3, align 8
  %11 = getelementptr inbounds %1, %1* %10, i32 0, i32 4
  %12 = getelementptr inbounds %29, %29* %11, i32 0, i32 2
  %13 = bitcast %32* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = xor i1 %15, true
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 1)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  br label %30

23:                                               ; preds = %2
  %24 = load %1*, %1** %3, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 4
  %26 = getelementptr inbounds %29, %29* %25, i32 0, i32 2
  %27 = bitcast %32* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @210, i32 0, i32 0))
  br label %30

30:                                               ; preds = %23, %22
  %31 = phi i32 [ 0, %22 ], [ %29, %23 ]
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  store i32 1, i32* %7, align 4
  br label %112

34:                                               ; preds = %30
  %35 = load %1*, %1** %3, align 8
  %36 = getelementptr inbounds %1, %1* %35, i32 0, i32 4
  %37 = call zeroext i8 @490(%29* %36)
  %38 = zext i8 %37 to i32
  %39 = icmp eq i32 %38, 8
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = load %1*, %1** %3, align 8
  %42 = getelementptr inbounds %1, %1* %41, i32 0, i32 4
  br label %44

43:                                               ; preds = %34
  br label %44

44:                                               ; preds = %43, %40
  %45 = phi %29* [ %42, %40 ], [ null, %43 ]
  %46 = getelementptr inbounds %29, %29* %45, i32 0, i32 0
  %47 = bitcast %30* %46 to %15**
  %48 = load %15*, %15** %47, align 8
  %49 = call %71* @482(%15* %48)
  store %71* %49, %71** %5, align 8
  %50 = load %71*, %71** %5, align 8
  %51 = getelementptr inbounds %71, %71* %50, i32 0, i32 3
  %52 = load %52*, %52** %51, align 8
  %53 = icmp ne %52* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %44
  store i32 1, i32* %7, align 4
  br label %112

55:                                               ; preds = %44
  %56 = load %71*, %71** %5, align 8
  %57 = getelementptr inbounds %71, %71* %56, i32 0, i32 1
  %58 = load %6*, %6** %57, align 8
  %59 = load %29*, %29** %4, align 8
  %60 = call %29* @php_date_instantiate(%6* %58, %29* %59)
  %61 = load %29*, %29** %4, align 8
  %62 = getelementptr inbounds %29, %29* %61, i32 0, i32 0
  %63 = bitcast %30* %62 to %15**
  %64 = load %15*, %15** %63, align 8
  %65 = call %61* @489(%15* %64)
  store %61* %65, %61** %6, align 8
  %66 = call %52* @timelib_time_ctor()
  %67 = load %61*, %61** %6, align 8
  %68 = getelementptr inbounds %61, %61* %67, i32 0, i32 0
  store %52* %66, %52** %68, align 8
  %69 = load %61*, %61** %6, align 8
  %70 = getelementptr inbounds %61, %61* %69, i32 0, i32 0
  %71 = load %52*, %52** %70, align 8
  %72 = load %71*, %71** %5, align 8
  %73 = getelementptr inbounds %71, %71* %72, i32 0, i32 3
  %74 = load %52*, %52** %73, align 8
  %75 = bitcast %52* %71 to i8*
  %76 = bitcast %52* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 240, i1 false)
  %77 = load %71*, %71** %5, align 8
  %78 = getelementptr inbounds %71, %71* %77, i32 0, i32 3
  %79 = load %52*, %52** %78, align 8
  %80 = getelementptr inbounds %52, %52* %79, i32 0, i32 8
  %81 = load i8*, i8** %80, align 8
  %82 = icmp ne i8* %81, null
  br i1 %82, label %83, label %94

83:                                               ; preds = %55
  %84 = load %71*, %71** %5, align 8
  %85 = getelementptr inbounds %71, %71* %84, i32 0, i32 3
  %86 = load %52*, %52** %85, align 8
  %87 = getelementptr inbounds %52, %52* %86, i32 0, i32 8
  %88 = load i8*, i8** %87, align 8
  %89 = call noalias i8* @_estrdup(i8* %88)
  %90 = load %61*, %61** %6, align 8
  %91 = getelementptr inbounds %61, %61* %90, i32 0, i32 0
  %92 = load %52*, %52** %91, align 8
  %93 = getelementptr inbounds %52, %52* %92, i32 0, i32 8
  store i8* %89, i8** %93, align 8
  br label %94

94:                                               ; preds = %83, %55
  %95 = load %71*, %71** %5, align 8
  %96 = getelementptr inbounds %71, %71* %95, i32 0, i32 3
  %97 = load %52*, %52** %96, align 8
  %98 = getelementptr inbounds %52, %52* %97, i32 0, i32 9
  %99 = load %53*, %53** %98, align 8
  %100 = icmp ne %53* %99, null
  br i1 %100, label %101, label %111

101:                                              ; preds = %94
  %102 = load %71*, %71** %5, align 8
  %103 = getelementptr inbounds %71, %71* %102, i32 0, i32 3
  %104 = load %52*, %52** %103, align 8
  %105 = getelementptr inbounds %52, %52* %104, i32 0, i32 9
  %106 = load %53*, %53** %105, align 8
  %107 = load %61*, %61** %6, align 8
  %108 = getelementptr inbounds %61, %61* %107, i32 0, i32 0
  %109 = load %52*, %52** %108, align 8
  %110 = getelementptr inbounds %52, %52* %109, i32 0, i32 9
  store %53* %106, %53** %110, align 8
  br label %111

111:                                              ; preds = %101, %94
  store i32 0, i32* %7, align 4
  br label %112

112:                                              ; preds = %111, %54, %33
  %113 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #15
  %114 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #15
  %115 = load i32, i32* %7, align 4
  switch i32 %115, label %117 [
    i32 0, label %116
    i32 1, label %116
  ]

116:                                              ; preds = %112, %112
  ret void

117:                                              ; preds = %112
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DatePeriod_getDateInterval(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %71*, align 8
  %6 = alloca %68*, align 8
  %7 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = load %1*, %1** %3, align 8
  %11 = getelementptr inbounds %1, %1* %10, i32 0, i32 4
  %12 = getelementptr inbounds %29, %29* %11, i32 0, i32 2
  %13 = bitcast %32* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = xor i1 %15, true
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 1)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  br label %30

23:                                               ; preds = %2
  %24 = load %1*, %1** %3, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 4
  %26 = getelementptr inbounds %29, %29* %25, i32 0, i32 2
  %27 = bitcast %32* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @210, i32 0, i32 0))
  br label %30

30:                                               ; preds = %23, %22
  %31 = phi i32 [ 0, %22 ], [ %29, %23 ]
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  store i32 1, i32* %7, align 4
  br label %66

34:                                               ; preds = %30
  %35 = load %1*, %1** %3, align 8
  %36 = getelementptr inbounds %1, %1* %35, i32 0, i32 4
  %37 = call zeroext i8 @490(%29* %36)
  %38 = zext i8 %37 to i32
  %39 = icmp eq i32 %38, 8
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = load %1*, %1** %3, align 8
  %42 = getelementptr inbounds %1, %1* %41, i32 0, i32 4
  br label %44

43:                                               ; preds = %34
  br label %44

44:                                               ; preds = %43, %40
  %45 = phi %29* [ %42, %40 ], [ null, %43 ]
  %46 = getelementptr inbounds %29, %29* %45, i32 0, i32 0
  %47 = bitcast %30* %46 to %15**
  %48 = load %15*, %15** %47, align 8
  %49 = call %71* @482(%15* %48)
  store %71* %49, %71** %5, align 8
  %50 = load %6*, %6** @date_ce_interval, align 8
  %51 = load %29*, %29** %4, align 8
  %52 = call %29* @php_date_instantiate(%6* %50, %29* %51)
  %53 = load %29*, %29** %4, align 8
  %54 = getelementptr inbounds %29, %29* %53, i32 0, i32 0
  %55 = bitcast %30* %54 to %15**
  %56 = load %15*, %15** %55, align 8
  %57 = call %68* @505(%15* %56)
  store %68* %57, %68** %6, align 8
  %58 = load %71*, %71** %5, align 8
  %59 = getelementptr inbounds %71, %71* %58, i32 0, i32 4
  %60 = load %59*, %59** %59, align 8
  %61 = call %59* @timelib_rel_time_clone(%59* %60)
  %62 = load %68*, %68** %6, align 8
  %63 = getelementptr inbounds %68, %68* %62, i32 0, i32 0
  store %59* %61, %59** %63, align 8
  %64 = load %68*, %68** %6, align 8
  %65 = getelementptr inbounds %68, %68* %64, i32 0, i32 2
  store i32 1, i32* %65, align 8
  store i32 0, i32* %7, align 4
  br label %66

66:                                               ; preds = %44, %33
  %67 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %67) #15
  %68 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %68) #15
  %69 = load i32, i32* %7, align 4
  switch i32 %69, label %71 [
    i32 0, label %70
    i32 1, label %70
  ]

70:                                               ; preds = %66, %66
  ret void

71:                                               ; preds = %66
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zim_DatePeriod_getRecurrences(%1* %0, %29* %1) #0 {
  %3 = alloca %1*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %71*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %29*, align 8
  store %1* %0, %1** %3, align 8
  store %29* %1, %29** %4, align 8
  %8 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = load %1*, %1** %3, align 8
  %10 = getelementptr inbounds %1, %1* %9, i32 0, i32 4
  %11 = getelementptr inbounds %29, %29* %10, i32 0, i32 2
  %12 = bitcast %32* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = xor i1 %14, true
  %16 = xor i1 %15, true
  %17 = zext i1 %16 to i32
  %18 = sext i32 %17 to i64
  %19 = call i64 @llvm.expect.i64(i64 %18, i64 1)
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  br label %29

22:                                               ; preds = %2
  %23 = load %1*, %1** %3, align 8
  %24 = getelementptr inbounds %1, %1* %23, i32 0, i32 4
  %25 = getelementptr inbounds %29, %29* %24, i32 0, i32 2
  %26 = bitcast %32* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %27, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @210, i32 0, i32 0))
  br label %29

29:                                               ; preds = %22, %21
  %30 = phi i32 [ 0, %21 ], [ %28, %22 ]
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  store i32 1, i32* %6, align 4
  br label %76

33:                                               ; preds = %29
  %34 = load %1*, %1** %3, align 8
  %35 = getelementptr inbounds %1, %1* %34, i32 0, i32 4
  %36 = call zeroext i8 @490(%29* %35)
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = load %1*, %1** %3, align 8
  %41 = getelementptr inbounds %1, %1* %40, i32 0, i32 4
  br label %43

42:                                               ; preds = %33
  br label %43

43:                                               ; preds = %42, %39
  %44 = phi %29* [ %41, %39 ], [ null, %42 ]
  %45 = getelementptr inbounds %29, %29* %44, i32 0, i32 0
  %46 = bitcast %30* %45 to %15**
  %47 = load %15*, %15** %46, align 8
  %48 = call %71* @482(%15* %47)
  store %71* %48, %71** %5, align 8
  %49 = load %71*, %71** %5, align 8
  %50 = getelementptr inbounds %71, %71* %49, i32 0, i32 5
  %51 = load i32, i32* %50, align 8
  %52 = load %71*, %71** %5, align 8
  %53 = getelementptr inbounds %71, %71* %52, i32 0, i32 7
  %54 = load i32, i32* %53, align 8
  %55 = sub nsw i32 %51, %54
  %56 = icmp eq i32 0, %55
  br i1 %56, label %57, label %58

57:                                               ; preds = %43
  store i32 1, i32* %6, align 4
  br label %76

58:                                               ; preds = %43
  %59 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #15
  %60 = load %29*, %29** %4, align 8
  store %29* %60, %29** %7, align 8
  %61 = load %71*, %71** %5, align 8
  %62 = getelementptr inbounds %71, %71* %61, i32 0, i32 5
  %63 = load i32, i32* %62, align 8
  %64 = load %71*, %71** %5, align 8
  %65 = getelementptr inbounds %71, %71* %64, i32 0, i32 7
  %66 = load i32, i32* %65, align 8
  %67 = sub nsw i32 %63, %66
  %68 = sext i32 %67 to i64
  %69 = load %29*, %29** %7, align 8
  %70 = getelementptr inbounds %29, %29* %69, i32 0, i32 0
  %71 = bitcast %30* %70 to i64*
  store i64 %68, i64* %71, align 8
  %72 = load %29*, %29** %7, align 8
  %73 = getelementptr inbounds %29, %29* %72, i32 0, i32 1
  %74 = bitcast %31* %73 to i32*
  store i32 4, i32* %74, align 8
  %75 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #15
  store i32 1, i32* %6, align 4
  br label %76

76:                                               ; preds = %58, %57, %32
  %77 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #15
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local %6* @php_date_get_date_ce() #0 {
  %1 = load %6*, %6** @date_ce_date, align 8
  ret %6* %1
}

; Function Attrs: nounwind uwtable
define dso_local %6* @php_date_get_immutable_ce() #0 {
  %1 = load %6*, %6** @date_ce_immutable, align 8
  ret %6* %1
}

; Function Attrs: nounwind uwtable
define dso_local %6* @php_date_get_interface_ce() #0 {
  %1 = load %6*, %6** @date_ce_interface, align 8
  ret %6* %1
}

; Function Attrs: nounwind uwtable
define dso_local %6* @php_date_get_timezone_ce() #0 {
  %1 = load %6*, %6** @date_ce_timezone, align 8
  ret %6* %1
}

; Function Attrs: nounwind uwtable
define hidden i32 @zm_startup_date(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = call i32 @zend_register_ini_entries(%40* getelementptr inbounds ([6 x %40], [6 x %40]* @146, i32 0, i32 0), i32 %5)
  call void @463()
  %7 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @147, i32 0, i32 0), i64 9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @148, i32 0, i32 0), i32 3, i32 %7)
  %8 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @149, i32 0, i32 0), i64 11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @150, i32 0, i32 0), i32 3, i32 %8)
  %9 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @151, i32 0, i32 0), i64 12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i32 0, i32 0), i32 3, i32 %9)
  %10 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @153, i32 0, i32 0), i64 11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @154, i32 0, i32 0), i32 3, i32 %10)
  %11 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @155, i32 0, i32 0), i64 11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @156, i32 0, i32 0), i32 3, i32 %11)
  %12 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @157, i32 0, i32 0), i64 12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @154, i32 0, i32 0), i32 3, i32 %12)
  %13 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @158, i32 0, i32 0), i64 12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @159, i32 0, i32 0), i32 3, i32 %13)
  %14 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @160, i32 0, i32 0), i64 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @161, i32 0, i32 0), i32 3, i32 %14)
  %15 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @162, i32 0, i32 0), i64 12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @159, i32 0, i32 0), i32 3, i32 %15)
  %16 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @163, i32 0, i32 0), i64 12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @148, i32 0, i32 0), i32 3, i32 %16)
  %17 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @164, i32 0, i32 0), i64 21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @165, i32 0, i32 0), i32 3, i32 %17)
  %18 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @166, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @159, i32 0, i32 0), i32 3, i32 %18)
  %19 = load i32, i32* %4, align 4
  call void @zend_register_string_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @167, i32 0, i32 0), i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @148, i32 0, i32 0), i32 3, i32 %19)
  %20 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @168, i32 0, i32 0), i64 22, i64 0, i32 3, i32 %20)
  %21 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @169, i32 0, i32 0), i64 19, i64 1, i32 3, i32 %21)
  %22 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @170, i32 0, i32 0), i64 19, i64 2, i32 3, i32 %22)
  store %41* null, %41** @php_date_global_timezone_db, align 8
  store i32 0, i32* @php_date_global_timezone_db_enabled, align 4
  store %34* null, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden i32 @zm_shutdown_date(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  call void @zend_unregister_ini_entries(i32 %5)
  %6 = load %34*, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  %7 = icmp ne %34* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load %34*, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  call void @timelib_error_container_dtor(%34* %9)
  br label %10

10:                                               ; preds = %8, %2
  store i8* null, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden i32 @zm_activate_date(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  call void @_efree(i8* %8)
  br label %9

9:                                                ; preds = %7, %2
  store i8* null, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  store %7* null, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  store %34* null, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden i32 @zm_deactivate_date(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  call void @_efree(i8* %8)
  br label %9

9:                                                ; preds = %7, %2
  store i8* null, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  %10 = load %7*, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  %11 = icmp ne %7* %10, null
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = load %7*, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  call void @zend_hash_destroy(%7* %13)
  br label %14

14:                                               ; preds = %12
  %15 = load %7*, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  %16 = bitcast %7* %15 to i8*
  call void @_efree_56(i8* %16)
  br label %17

17:                                               ; preds = %14
  store %7* null, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  br label %18

18:                                               ; preds = %17, %9
  %19 = load %34*, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  %20 = icmp ne %34* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = load %34*, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  call void @timelib_error_container_dtor(%34* %22)
  store %34* null, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  br label %23

23:                                               ; preds = %21, %18
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zm_info_date(%36* %0) #0 {
  %2 = alloca %36*, align 8
  %3 = alloca %41*, align 8
  store %36* %0, %36** %2, align 8
  %4 = bitcast %41** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %41*, %41** @php_date_global_timezone_db, align 8
  %6 = icmp ne %41* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %11

9:                                                ; preds = %1
  %10 = call %41* @timelib_builtin_db()
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi %41* [ %8, %7 ], [ %10, %9 ]
  store %41* %12, %41** %3, align 8
  call void @php_info_print_table_start()
  call void (i32, ...) @php_info_print_table_row(i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @171, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @172, i32 0, i32 0))
  call void (i32, ...) @php_info_print_table_row(i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @173, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @174, i32 0, i32 0))
  %13 = load %41*, %41** %3, align 8
  %14 = getelementptr inbounds %41, %41* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void (i32, ...) @php_info_print_table_row(i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @175, i32 0, i32 0), i8* %15)
  %16 = load i32, i32* @php_date_global_timezone_db_enabled, align 4
  %17 = icmp ne i32 %16, 0
  %18 = zext i1 %17 to i64
  %19 = select i1 %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @177, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @178, i32 0, i32 0)
  call void (i32, ...) @php_info_print_table_row(i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @176, i32 0, i32 0), i8* %19)
  %20 = load %41*, %41** %3, align 8
  %21 = call i8* @464(%41* %20)
  call void (i32, ...) @php_info_print_table_row(i32 2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @179, i32 0, i32 0), i8* %21)
  call void @php_info_print_table_end()
  %22 = load %36*, %36** %2, align 8
  call void @display_ini_entries(%36* %22)
  %23 = bitcast %41** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #15
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @462(%33* %0) #0 {
  %2 = alloca %33*, align 8
  store %33* %0, %33** %2, align 8
  %3 = load %33*, %33** %2, align 8
  %4 = getelementptr inbounds %33, %33* %3, i32 0, i32 0
  store i8* null, i8** %4, align 8
  %5 = load %33*, %33** %2, align 8
  %6 = getelementptr inbounds %33, %33* %5, i32 0, i32 1
  store i8* null, i8** %6, align 8
  %7 = load %33*, %33** %2, align 8
  %8 = getelementptr inbounds %33, %33* %7, i32 0, i32 2
  store %7* null, %7** %8, align 8
  %9 = load %33*, %33** %2, align 8
  %10 = getelementptr inbounds %33, %33* %9, i32 0, i32 4
  store i32 0, i32* %10, align 8
  ret void
}

declare dso_local void @_efree(i8*) #4

declare dso_local void @zend_hash_destroy(%7*) #4

declare dso_local void @_efree_56(i8*) #4

declare dso_local void @timelib_error_container_dtor(%34*) #4

declare dso_local i32 @zend_register_ini_entries(%40*, i32) #4

; Function Attrs: nounwind uwtable
define internal void @463() #0 {
  %1 = alloca %6, align 8
  %2 = alloca %6, align 8
  %3 = alloca %6, align 8
  %4 = alloca %6, align 8
  %5 = alloca %6, align 8
  %6 = alloca %6, align 8
  %7 = alloca %28*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca %28*, align 8
  %10 = alloca %28*, align 8
  %11 = alloca %28*, align 8
  %12 = alloca %28*, align 8
  %13 = bitcast %6* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 504, i8* %13) #15
  %14 = bitcast %6* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 504, i8* %14) #15
  %15 = bitcast %6* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 504, i8* %15) #15
  %16 = bitcast %6* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 504, i8* %16) #15
  %17 = bitcast %6* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 504, i8* %17) #15
  %18 = bitcast %6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 504, i8* %18) #15
  %19 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #15
  %20 = call %28* @510(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @300, i32 0, i32 0), i64 17, i32 1)
  store %28* %20, %28** %7, align 8
  %21 = load %28* (%28*)*, %28* (%28*)** @zend_new_interned_string, align 8
  %22 = load %28*, %28** %7, align 8
  %23 = call %28* %21(%28* %22)
  %24 = getelementptr inbounds %6, %6* %6, i32 0, i32 1
  store %28* %23, %28** %24, align 8
  %25 = getelementptr inbounds %6, %6* %6, i32 0, i32 13
  store %4* null, %4** %25, align 8
  %26 = getelementptr inbounds %6, %6* %6, i32 0, i32 14
  store %4* null, %4** %26, align 8
  %27 = getelementptr inbounds %6, %6* %6, i32 0, i32 15
  store %4* null, %4** %27, align 8
  %28 = getelementptr inbounds %6, %6* %6, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %28, align 8
  %29 = getelementptr inbounds %6, %6* %6, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %29, align 8
  %30 = getelementptr inbounds %6, %6* %6, i32 0, i32 27
  store %15* (%6*)* null, %15* (%6*)** %30, align 8
  %31 = getelementptr inbounds %6, %6* %6, i32 0, i32 29
  store i32 (%6*, %6*)* null, i32 (%6*, %6*)** %31, align 8
  %32 = getelementptr inbounds %6, %6* %6, i32 0, i32 30
  store %4* (%6*, %28*)* null, %4* (%6*, %28*)** %32, align 8
  %33 = getelementptr inbounds %6, %6* %6, i32 0, i32 20
  store %4* null, %4** %33, align 8
  %34 = getelementptr inbounds %6, %6* %6, i32 0, i32 21
  store %4* null, %4** %34, align 8
  %35 = getelementptr inbounds %6, %6* %6, i32 0, i32 22
  store %4* null, %4** %35, align 8
  %36 = getelementptr inbounds %6, %6* %6, i32 0, i32 16
  store %4* null, %4** %36, align 8
  %37 = getelementptr inbounds %6, %6* %6, i32 0, i32 17
  store %4* null, %4** %37, align 8
  %38 = getelementptr inbounds %6, %6* %6, i32 0, i32 18
  store %4* null, %4** %38, align 8
  %39 = getelementptr inbounds %6, %6* %6, i32 0, i32 19
  store %4* null, %4** %39, align 8
  %40 = getelementptr inbounds %6, %6* %6, i32 0, i32 23
  store %4* null, %4** %40, align 8
  %41 = getelementptr inbounds %6, %6* %6, i32 0, i32 24
  store %4* null, %4** %41, align 8
  %42 = getelementptr inbounds %6, %6* %6, i32 0, i32 25
  store %4* null, %4** %42, align 8
  %43 = getelementptr inbounds %6, %6* %6, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %43, align 8
  %44 = getelementptr inbounds %6, %6* %6, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %44, align 8
  %45 = getelementptr inbounds %6, %6* %6, i32 0, i32 2
  store %6* null, %6** %45, align 8
  %46 = getelementptr inbounds %6, %6* %6, i32 0, i32 33
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %6, %6* %6, i32 0, i32 36
  store %6** null, %6*** %47, align 8
  %48 = getelementptr inbounds %6, %6* %6, i32 0, i32 34
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %6, %6* %6, i32 0, i32 37
  store %19** null, %19*** %49, align 8
  %50 = getelementptr inbounds %6, %6* %6, i32 0, i32 38
  store %21** null, %21*** %50, align 8
  %51 = getelementptr inbounds %6, %6* %6, i32 0, i32 35
  store %6** null, %6*** %51, align 8
  %52 = getelementptr inbounds %6, %6* %6, i32 0, i32 28
  store %14* (%6*, %29*, i32)* null, %14* (%6*, %29*, i32)** %52, align 8
  %53 = getelementptr inbounds %6, %6* %6, i32 0, i32 26
  %54 = getelementptr inbounds %12, %12* %53, i32 0, i32 0
  store %13* null, %13** %54, align 8
  %55 = getelementptr inbounds %6, %6* %6, i32 0, i32 39
  %56 = bitcast %23* %55 to %72*
  %57 = getelementptr inbounds %72, %72* %56, i32 0, i32 1
  store %36* null, %36** %57, align 8
  %58 = getelementptr inbounds %6, %6* %6, i32 0, i32 39
  %59 = bitcast %23* %58 to %72*
  %60 = getelementptr inbounds %72, %72* %59, i32 0, i32 0
  store %39* getelementptr inbounds ([7 x %39], [7 x %39]* bitcast ([7 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }]* @418 to [7 x %39]*), i32 0, i32 0), %39** %60, align 8
  %61 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #15
  %62 = call %6* @zend_register_internal_interface(%6* %6)
  store %6* %62, %6** @date_ce_interface, align 8
  %63 = load %6*, %6** @date_ce_interface, align 8
  %64 = getelementptr inbounds %6, %6* %63, i32 0, i32 29
  store i32 (%6*, %6*)* @532, i32 (%6*, %6*)** %64, align 8
  %65 = load %6*, %6** @date_ce_interface, align 8
  %66 = call i32 @zend_declare_class_constant_stringl(%6* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @383, i32 0, i32 0), i64 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @148, i32 0, i32 0), i64 13)
  %67 = load %6*, %6** @date_ce_interface, align 8
  %68 = call i32 @zend_declare_class_constant_stringl(%6* %67, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @384, i32 0, i32 0), i64 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @150, i32 0, i32 0), i64 16)
  %69 = load %6*, %6** @date_ce_interface, align 8
  %70 = call i32 @zend_declare_class_constant_stringl(%6* %69, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @385, i32 0, i32 0), i64 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @152, i32 0, i32 0), i64 13)
  %71 = load %6*, %6** @date_ce_interface, align 8
  %72 = call i32 @zend_declare_class_constant_stringl(%6* %71, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @386, i32 0, i32 0), i64 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @154, i32 0, i32 0), i64 16)
  %73 = load %6*, %6** @date_ce_interface, align 8
  %74 = call i32 @zend_declare_class_constant_stringl(%6* %73, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @387, i32 0, i32 0), i64 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @156, i32 0, i32 0), i64 16)
  %75 = load %6*, %6** @date_ce_interface, align 8
  %76 = call i32 @zend_declare_class_constant_stringl(%6* %75, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @388, i32 0, i32 0), i64 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @154, i32 0, i32 0), i64 16)
  %77 = load %6*, %6** @date_ce_interface, align 8
  %78 = call i32 @zend_declare_class_constant_stringl(%6* %77, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @389, i32 0, i32 0), i64 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @159, i32 0, i32 0), i64 16)
  %79 = load %6*, %6** @date_ce_interface, align 8
  %80 = call i32 @zend_declare_class_constant_stringl(%6* %79, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @390, i32 0, i32 0), i64 7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @161, i32 0, i32 0), i64 21)
  %81 = load %6*, %6** @date_ce_interface, align 8
  %82 = call i32 @zend_declare_class_constant_stringl(%6* %81, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @391, i32 0, i32 0), i64 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @159, i32 0, i32 0), i64 16)
  %83 = load %6*, %6** @date_ce_interface, align 8
  %84 = call i32 @zend_declare_class_constant_stringl(%6* %83, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @392, i32 0, i32 0), i64 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @148, i32 0, i32 0), i64 13)
  %85 = load %6*, %6** @date_ce_interface, align 8
  %86 = call i32 @zend_declare_class_constant_stringl(%6* %85, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @393, i32 0, i32 0), i64 16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @165, i32 0, i32 0), i64 15)
  %87 = load %6*, %6** @date_ce_interface, align 8
  %88 = call i32 @zend_declare_class_constant_stringl(%6* %87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @394, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @159, i32 0, i32 0), i64 16)
  %89 = load %6*, %6** @date_ce_interface, align 8
  %90 = call i32 @zend_declare_class_constant_stringl(%6* %89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @395, i32 0, i32 0), i64 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @148, i32 0, i32 0), i64 13)
  %91 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %91) #15
  %92 = call %28* @510(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @308, i32 0, i32 0), i64 8, i32 1)
  store %28* %92, %28** %8, align 8
  %93 = load %28* (%28*)*, %28* (%28*)** @zend_new_interned_string, align 8
  %94 = load %28*, %28** %8, align 8
  %95 = call %28* %93(%28* %94)
  %96 = getelementptr inbounds %6, %6* %1, i32 0, i32 1
  store %28* %95, %28** %96, align 8
  %97 = getelementptr inbounds %6, %6* %1, i32 0, i32 13
  store %4* null, %4** %97, align 8
  %98 = getelementptr inbounds %6, %6* %1, i32 0, i32 14
  store %4* null, %4** %98, align 8
  %99 = getelementptr inbounds %6, %6* %1, i32 0, i32 15
  store %4* null, %4** %99, align 8
  %100 = getelementptr inbounds %6, %6* %1, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %100, align 8
  %101 = getelementptr inbounds %6, %6* %1, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %101, align 8
  %102 = getelementptr inbounds %6, %6* %1, i32 0, i32 27
  store %15* (%6*)* null, %15* (%6*)** %102, align 8
  %103 = getelementptr inbounds %6, %6* %1, i32 0, i32 29
  store i32 (%6*, %6*)* null, i32 (%6*, %6*)** %103, align 8
  %104 = getelementptr inbounds %6, %6* %1, i32 0, i32 30
  store %4* (%6*, %28*)* null, %4* (%6*, %28*)** %104, align 8
  %105 = getelementptr inbounds %6, %6* %1, i32 0, i32 20
  store %4* null, %4** %105, align 8
  %106 = getelementptr inbounds %6, %6* %1, i32 0, i32 21
  store %4* null, %4** %106, align 8
  %107 = getelementptr inbounds %6, %6* %1, i32 0, i32 22
  store %4* null, %4** %107, align 8
  %108 = getelementptr inbounds %6, %6* %1, i32 0, i32 16
  store %4* null, %4** %108, align 8
  %109 = getelementptr inbounds %6, %6* %1, i32 0, i32 17
  store %4* null, %4** %109, align 8
  %110 = getelementptr inbounds %6, %6* %1, i32 0, i32 18
  store %4* null, %4** %110, align 8
  %111 = getelementptr inbounds %6, %6* %1, i32 0, i32 19
  store %4* null, %4** %111, align 8
  %112 = getelementptr inbounds %6, %6* %1, i32 0, i32 23
  store %4* null, %4** %112, align 8
  %113 = getelementptr inbounds %6, %6* %1, i32 0, i32 24
  store %4* null, %4** %113, align 8
  %114 = getelementptr inbounds %6, %6* %1, i32 0, i32 25
  store %4* null, %4** %114, align 8
  %115 = getelementptr inbounds %6, %6* %1, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %115, align 8
  %116 = getelementptr inbounds %6, %6* %1, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %116, align 8
  %117 = getelementptr inbounds %6, %6* %1, i32 0, i32 2
  store %6* null, %6** %117, align 8
  %118 = getelementptr inbounds %6, %6* %1, i32 0, i32 33
  store i32 0, i32* %118, align 8
  %119 = getelementptr inbounds %6, %6* %1, i32 0, i32 36
  store %6** null, %6*** %119, align 8
  %120 = getelementptr inbounds %6, %6* %1, i32 0, i32 34
  store i32 0, i32* %120, align 4
  %121 = getelementptr inbounds %6, %6* %1, i32 0, i32 37
  store %19** null, %19*** %121, align 8
  %122 = getelementptr inbounds %6, %6* %1, i32 0, i32 38
  store %21** null, %21*** %122, align 8
  %123 = getelementptr inbounds %6, %6* %1, i32 0, i32 35
  store %6** null, %6*** %123, align 8
  %124 = getelementptr inbounds %6, %6* %1, i32 0, i32 28
  store %14* (%6*, %29*, i32)* null, %14* (%6*, %29*, i32)** %124, align 8
  %125 = getelementptr inbounds %6, %6* %1, i32 0, i32 26
  %126 = getelementptr inbounds %12, %12* %125, i32 0, i32 0
  store %13* null, %13** %126, align 8
  %127 = getelementptr inbounds %6, %6* %1, i32 0, i32 39
  %128 = bitcast %23* %127 to %72*
  %129 = getelementptr inbounds %72, %72* %128, i32 0, i32 1
  store %36* null, %36** %129, align 8
  %130 = getelementptr inbounds %6, %6* %1, i32 0, i32 39
  %131 = bitcast %23* %130 to %72*
  %132 = getelementptr inbounds %72, %72* %131, i32 0, i32 0
  store %39* getelementptr inbounds ([19 x %39], [19 x %39]* bitcast ([19 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }]* @date_funcs_date to [19 x %39]*), i32 0, i32 0), %39** %132, align 8
  %133 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #15
  %134 = getelementptr inbounds %6, %6* %1, i32 0, i32 27
  store %15* (%6*)* @533, %15* (%6*)** %134, align 8
  %135 = call %6* @zend_register_internal_class_ex(%6* %1, %6* null)
  store %6* %135, %6** @date_ce_date, align 8
  %136 = call %16* @zend_get_std_object_handlers()
  %137 = bitcast %16* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%16* @396 to i8*), i8* align 8 %137, i64 224, i1 false)
  store i32 ptrtoint (%15* getelementptr inbounds (%61, %61* null, i32 0, i32 2) to i32), i32* getelementptr inbounds (%16, %16* @396, i32 0, i32 0), align 8
  store void (%15*)* @534, void (%15*)** getelementptr inbounds (%16, %16* @396, i32 0, i32 1), align 8
  store %15* (%29*)* @535, %15* (%29*)** getelementptr inbounds (%16, %16* @396, i32 0, i32 3), align 8
  store i32 (%29*, %29*)* @536, i32 (%29*, %29*)** getelementptr inbounds (%16, %16* @396, i32 0, i32 20), align 8
  store %7* (%29*)* @537, %7* (%29*)** getelementptr inbounds (%16, %16* @396, i32 0, i32 15), align 8
  store %7* (%29*, %29**, i32*)* @538, %7* (%29*, %29**, i32*)** getelementptr inbounds (%16, %16* @396, i32 0, i32 25), align 8
  %138 = load %6*, %6** @date_ce_date, align 8
  %139 = load %6*, %6** @date_ce_interface, align 8
  call void (%6*, i32, ...) @zend_class_implements(%6* %138, i32 1, %6* %139)
  %140 = bitcast %28** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %140) #15
  %141 = call %28* @510(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @397, i32 0, i32 0), i64 17, i32 1)
  store %28* %141, %28** %9, align 8
  %142 = load %28* (%28*)*, %28* (%28*)** @zend_new_interned_string, align 8
  %143 = load %28*, %28** %9, align 8
  %144 = call %28* %142(%28* %143)
  %145 = getelementptr inbounds %6, %6* %2, i32 0, i32 1
  store %28* %144, %28** %145, align 8
  %146 = getelementptr inbounds %6, %6* %2, i32 0, i32 13
  store %4* null, %4** %146, align 8
  %147 = getelementptr inbounds %6, %6* %2, i32 0, i32 14
  store %4* null, %4** %147, align 8
  %148 = getelementptr inbounds %6, %6* %2, i32 0, i32 15
  store %4* null, %4** %148, align 8
  %149 = getelementptr inbounds %6, %6* %2, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %149, align 8
  %150 = getelementptr inbounds %6, %6* %2, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %150, align 8
  %151 = getelementptr inbounds %6, %6* %2, i32 0, i32 27
  store %15* (%6*)* null, %15* (%6*)** %151, align 8
  %152 = getelementptr inbounds %6, %6* %2, i32 0, i32 29
  store i32 (%6*, %6*)* null, i32 (%6*, %6*)** %152, align 8
  %153 = getelementptr inbounds %6, %6* %2, i32 0, i32 30
  store %4* (%6*, %28*)* null, %4* (%6*, %28*)** %153, align 8
  %154 = getelementptr inbounds %6, %6* %2, i32 0, i32 20
  store %4* null, %4** %154, align 8
  %155 = getelementptr inbounds %6, %6* %2, i32 0, i32 21
  store %4* null, %4** %155, align 8
  %156 = getelementptr inbounds %6, %6* %2, i32 0, i32 22
  store %4* null, %4** %156, align 8
  %157 = getelementptr inbounds %6, %6* %2, i32 0, i32 16
  store %4* null, %4** %157, align 8
  %158 = getelementptr inbounds %6, %6* %2, i32 0, i32 17
  store %4* null, %4** %158, align 8
  %159 = getelementptr inbounds %6, %6* %2, i32 0, i32 18
  store %4* null, %4** %159, align 8
  %160 = getelementptr inbounds %6, %6* %2, i32 0, i32 19
  store %4* null, %4** %160, align 8
  %161 = getelementptr inbounds %6, %6* %2, i32 0, i32 23
  store %4* null, %4** %161, align 8
  %162 = getelementptr inbounds %6, %6* %2, i32 0, i32 24
  store %4* null, %4** %162, align 8
  %163 = getelementptr inbounds %6, %6* %2, i32 0, i32 25
  store %4* null, %4** %163, align 8
  %164 = getelementptr inbounds %6, %6* %2, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %164, align 8
  %165 = getelementptr inbounds %6, %6* %2, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %165, align 8
  %166 = getelementptr inbounds %6, %6* %2, i32 0, i32 2
  store %6* null, %6** %166, align 8
  %167 = getelementptr inbounds %6, %6* %2, i32 0, i32 33
  store i32 0, i32* %167, align 8
  %168 = getelementptr inbounds %6, %6* %2, i32 0, i32 36
  store %6** null, %6*** %168, align 8
  %169 = getelementptr inbounds %6, %6* %2, i32 0, i32 34
  store i32 0, i32* %169, align 4
  %170 = getelementptr inbounds %6, %6* %2, i32 0, i32 37
  store %19** null, %19*** %170, align 8
  %171 = getelementptr inbounds %6, %6* %2, i32 0, i32 38
  store %21** null, %21*** %171, align 8
  %172 = getelementptr inbounds %6, %6* %2, i32 0, i32 35
  store %6** null, %6*** %172, align 8
  %173 = getelementptr inbounds %6, %6* %2, i32 0, i32 28
  store %14* (%6*, %29*, i32)* null, %14* (%6*, %29*, i32)** %173, align 8
  %174 = getelementptr inbounds %6, %6* %2, i32 0, i32 26
  %175 = getelementptr inbounds %12, %12* %174, i32 0, i32 0
  store %13* null, %13** %175, align 8
  %176 = getelementptr inbounds %6, %6* %2, i32 0, i32 39
  %177 = bitcast %23* %176 to %72*
  %178 = getelementptr inbounds %72, %72* %177, i32 0, i32 1
  store %36* null, %36** %178, align 8
  %179 = getelementptr inbounds %6, %6* %2, i32 0, i32 39
  %180 = bitcast %23* %179 to %72*
  %181 = getelementptr inbounds %72, %72* %180, i32 0, i32 0
  store %39* getelementptr inbounds ([20 x %39], [20 x %39]* bitcast ([20 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }]* @date_funcs_immutable to [20 x %39]*), i32 0, i32 0), %39** %181, align 8
  %182 = bitcast %28** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #15
  %183 = getelementptr inbounds %6, %6* %2, i32 0, i32 27
  store %15* (%6*)* @533, %15* (%6*)** %183, align 8
  %184 = call %6* @zend_register_internal_class_ex(%6* %2, %6* null)
  store %6* %184, %6** @date_ce_immutable, align 8
  %185 = call %16* @zend_get_std_object_handlers()
  %186 = bitcast %16* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%16* @398 to i8*), i8* align 8 %186, i64 224, i1 false)
  store %15* (%29*)* @535, %15* (%29*)** getelementptr inbounds (%16, %16* @398, i32 0, i32 3), align 8
  store i32 (%29*, %29*)* @536, i32 (%29*, %29*)** getelementptr inbounds (%16, %16* @398, i32 0, i32 20), align 8
  store %7* (%29*)* @537, %7* (%29*)** getelementptr inbounds (%16, %16* @398, i32 0, i32 15), align 8
  store %7* (%29*, %29**, i32*)* @538, %7* (%29*, %29**, i32*)** getelementptr inbounds (%16, %16* @398, i32 0, i32 25), align 8
  %187 = load %6*, %6** @date_ce_immutable, align 8
  %188 = load %6*, %6** @date_ce_interface, align 8
  call void (%6*, i32, ...) @zend_class_implements(%6* %187, i32 1, %6* %188)
  %189 = bitcast %28** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %189) #15
  %190 = call %28* @510(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @298, i32 0, i32 0), i64 12, i32 1)
  store %28* %190, %28** %10, align 8
  %191 = load %28* (%28*)*, %28* (%28*)** @zend_new_interned_string, align 8
  %192 = load %28*, %28** %10, align 8
  %193 = call %28* %191(%28* %192)
  %194 = getelementptr inbounds %6, %6* %3, i32 0, i32 1
  store %28* %193, %28** %194, align 8
  %195 = getelementptr inbounds %6, %6* %3, i32 0, i32 13
  store %4* null, %4** %195, align 8
  %196 = getelementptr inbounds %6, %6* %3, i32 0, i32 14
  store %4* null, %4** %196, align 8
  %197 = getelementptr inbounds %6, %6* %3, i32 0, i32 15
  store %4* null, %4** %197, align 8
  %198 = getelementptr inbounds %6, %6* %3, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %198, align 8
  %199 = getelementptr inbounds %6, %6* %3, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %199, align 8
  %200 = getelementptr inbounds %6, %6* %3, i32 0, i32 27
  store %15* (%6*)* null, %15* (%6*)** %200, align 8
  %201 = getelementptr inbounds %6, %6* %3, i32 0, i32 29
  store i32 (%6*, %6*)* null, i32 (%6*, %6*)** %201, align 8
  %202 = getelementptr inbounds %6, %6* %3, i32 0, i32 30
  store %4* (%6*, %28*)* null, %4* (%6*, %28*)** %202, align 8
  %203 = getelementptr inbounds %6, %6* %3, i32 0, i32 20
  store %4* null, %4** %203, align 8
  %204 = getelementptr inbounds %6, %6* %3, i32 0, i32 21
  store %4* null, %4** %204, align 8
  %205 = getelementptr inbounds %6, %6* %3, i32 0, i32 22
  store %4* null, %4** %205, align 8
  %206 = getelementptr inbounds %6, %6* %3, i32 0, i32 16
  store %4* null, %4** %206, align 8
  %207 = getelementptr inbounds %6, %6* %3, i32 0, i32 17
  store %4* null, %4** %207, align 8
  %208 = getelementptr inbounds %6, %6* %3, i32 0, i32 18
  store %4* null, %4** %208, align 8
  %209 = getelementptr inbounds %6, %6* %3, i32 0, i32 19
  store %4* null, %4** %209, align 8
  %210 = getelementptr inbounds %6, %6* %3, i32 0, i32 23
  store %4* null, %4** %210, align 8
  %211 = getelementptr inbounds %6, %6* %3, i32 0, i32 24
  store %4* null, %4** %211, align 8
  %212 = getelementptr inbounds %6, %6* %3, i32 0, i32 25
  store %4* null, %4** %212, align 8
  %213 = getelementptr inbounds %6, %6* %3, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %213, align 8
  %214 = getelementptr inbounds %6, %6* %3, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %214, align 8
  %215 = getelementptr inbounds %6, %6* %3, i32 0, i32 2
  store %6* null, %6** %215, align 8
  %216 = getelementptr inbounds %6, %6* %3, i32 0, i32 33
  store i32 0, i32* %216, align 8
  %217 = getelementptr inbounds %6, %6* %3, i32 0, i32 36
  store %6** null, %6*** %217, align 8
  %218 = getelementptr inbounds %6, %6* %3, i32 0, i32 34
  store i32 0, i32* %218, align 4
  %219 = getelementptr inbounds %6, %6* %3, i32 0, i32 37
  store %19** null, %19*** %219, align 8
  %220 = getelementptr inbounds %6, %6* %3, i32 0, i32 38
  store %21** null, %21*** %220, align 8
  %221 = getelementptr inbounds %6, %6* %3, i32 0, i32 35
  store %6** null, %6*** %221, align 8
  %222 = getelementptr inbounds %6, %6* %3, i32 0, i32 28
  store %14* (%6*, %29*, i32)* null, %14* (%6*, %29*, i32)** %222, align 8
  %223 = getelementptr inbounds %6, %6* %3, i32 0, i32 26
  %224 = getelementptr inbounds %12, %12* %223, i32 0, i32 0
  store %13* null, %13** %224, align 8
  %225 = getelementptr inbounds %6, %6* %3, i32 0, i32 39
  %226 = bitcast %23* %225 to %72*
  %227 = getelementptr inbounds %72, %72* %226, i32 0, i32 1
  store %36* null, %36** %227, align 8
  %228 = getelementptr inbounds %6, %6* %3, i32 0, i32 39
  %229 = bitcast %23* %228 to %72*
  %230 = getelementptr inbounds %72, %72* %229, i32 0, i32 0
  store %39* getelementptr inbounds ([10 x %39], [10 x %39]* bitcast ([10 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }]* @date_funcs_timezone to [10 x %39]*), i32 0, i32 0), %39** %230, align 8
  %231 = bitcast %28** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #15
  %232 = getelementptr inbounds %6, %6* %3, i32 0, i32 27
  store %15* (%6*)* @539, %15* (%6*)** %232, align 8
  %233 = call %6* @zend_register_internal_class_ex(%6* %3, %6* null)
  store %6* %233, %6** @date_ce_timezone, align 8
  %234 = call %16* @zend_get_std_object_handlers()
  %235 = bitcast %16* %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%16* @399 to i8*), i8* align 8 %235, i64 224, i1 false)
  store i32 ptrtoint (%15* getelementptr inbounds (%64, %64* null, i32 0, i32 4) to i32), i32* getelementptr inbounds (%16, %16* @399, i32 0, i32 0), align 8
  store void (%15*)* @540, void (%15*)** getelementptr inbounds (%16, %16* @399, i32 0, i32 1), align 8
  store %15* (%29*)* @541, %15* (%29*)** getelementptr inbounds (%16, %16* @399, i32 0, i32 3), align 8
  store %7* (%29*)* @542, %7* (%29*)** getelementptr inbounds (%16, %16* @399, i32 0, i32 15), align 8
  store %7* (%29*, %29**, i32*)* @543, %7* (%29*, %29**, i32*)** getelementptr inbounds (%16, %16* @399, i32 0, i32 25), align 8
  store %7* (%29*, i32*)* @544, %7* (%29*, i32*)** getelementptr inbounds (%16, %16* @399, i32 0, i32 23), align 8
  %236 = load %6*, %6** @date_ce_timezone, align 8
  %237 = call i32 @zend_declare_class_constant_long(%6* %236, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @400, i32 0, i32 0), i64 6, i64 1)
  %238 = load %6*, %6** @date_ce_timezone, align 8
  %239 = call i32 @zend_declare_class_constant_long(%6* %238, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @401, i32 0, i32 0), i64 7, i64 2)
  %240 = load %6*, %6** @date_ce_timezone, align 8
  %241 = call i32 @zend_declare_class_constant_long(%6* %240, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @402, i32 0, i32 0), i64 10, i64 4)
  %242 = load %6*, %6** @date_ce_timezone, align 8
  %243 = call i32 @zend_declare_class_constant_long(%6* %242, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @403, i32 0, i32 0), i64 6, i64 8)
  %244 = load %6*, %6** @date_ce_timezone, align 8
  %245 = call i32 @zend_declare_class_constant_long(%6* %244, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @404, i32 0, i32 0), i64 4, i64 16)
  %246 = load %6*, %6** @date_ce_timezone, align 8
  %247 = call i32 @zend_declare_class_constant_long(%6* %246, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @405, i32 0, i32 0), i64 8, i64 32)
  %248 = load %6*, %6** @date_ce_timezone, align 8
  %249 = call i32 @zend_declare_class_constant_long(%6* %248, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @406, i32 0, i32 0), i64 9, i64 64)
  %250 = load %6*, %6** @date_ce_timezone, align 8
  %251 = call i32 @zend_declare_class_constant_long(%6* %250, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @407, i32 0, i32 0), i64 6, i64 128)
  %252 = load %6*, %6** @date_ce_timezone, align 8
  %253 = call i32 @zend_declare_class_constant_long(%6* %252, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @408, i32 0, i32 0), i64 6, i64 256)
  %254 = load %6*, %6** @date_ce_timezone, align 8
  %255 = call i32 @zend_declare_class_constant_long(%6* %254, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @409, i32 0, i32 0), i64 7, i64 512)
  %256 = load %6*, %6** @date_ce_timezone, align 8
  %257 = call i32 @zend_declare_class_constant_long(%6* %256, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @321, i32 0, i32 0), i64 3, i64 1024)
  %258 = load %6*, %6** @date_ce_timezone, align 8
  %259 = call i32 @zend_declare_class_constant_long(%6* %258, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @410, i32 0, i32 0), i64 3, i64 2047)
  %260 = load %6*, %6** @date_ce_timezone, align 8
  %261 = call i32 @zend_declare_class_constant_long(%6* %260, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @411, i32 0, i32 0), i64 11, i64 4095)
  %262 = load %6*, %6** @date_ce_timezone, align 8
  %263 = call i32 @zend_declare_class_constant_long(%6* %262, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @412, i32 0, i32 0), i64 11, i64 4096)
  %264 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %264) #15
  %265 = call %28* @510(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @413, i32 0, i32 0), i64 12, i32 1)
  store %28* %265, %28** %11, align 8
  %266 = load %28* (%28*)*, %28* (%28*)** @zend_new_interned_string, align 8
  %267 = load %28*, %28** %11, align 8
  %268 = call %28* %266(%28* %267)
  %269 = getelementptr inbounds %6, %6* %4, i32 0, i32 1
  store %28* %268, %28** %269, align 8
  %270 = getelementptr inbounds %6, %6* %4, i32 0, i32 13
  store %4* null, %4** %270, align 8
  %271 = getelementptr inbounds %6, %6* %4, i32 0, i32 14
  store %4* null, %4** %271, align 8
  %272 = getelementptr inbounds %6, %6* %4, i32 0, i32 15
  store %4* null, %4** %272, align 8
  %273 = getelementptr inbounds %6, %6* %4, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %273, align 8
  %274 = getelementptr inbounds %6, %6* %4, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %274, align 8
  %275 = getelementptr inbounds %6, %6* %4, i32 0, i32 27
  store %15* (%6*)* null, %15* (%6*)** %275, align 8
  %276 = getelementptr inbounds %6, %6* %4, i32 0, i32 29
  store i32 (%6*, %6*)* null, i32 (%6*, %6*)** %276, align 8
  %277 = getelementptr inbounds %6, %6* %4, i32 0, i32 30
  store %4* (%6*, %28*)* null, %4* (%6*, %28*)** %277, align 8
  %278 = getelementptr inbounds %6, %6* %4, i32 0, i32 20
  store %4* null, %4** %278, align 8
  %279 = getelementptr inbounds %6, %6* %4, i32 0, i32 21
  store %4* null, %4** %279, align 8
  %280 = getelementptr inbounds %6, %6* %4, i32 0, i32 22
  store %4* null, %4** %280, align 8
  %281 = getelementptr inbounds %6, %6* %4, i32 0, i32 16
  store %4* null, %4** %281, align 8
  %282 = getelementptr inbounds %6, %6* %4, i32 0, i32 17
  store %4* null, %4** %282, align 8
  %283 = getelementptr inbounds %6, %6* %4, i32 0, i32 18
  store %4* null, %4** %283, align 8
  %284 = getelementptr inbounds %6, %6* %4, i32 0, i32 19
  store %4* null, %4** %284, align 8
  %285 = getelementptr inbounds %6, %6* %4, i32 0, i32 23
  store %4* null, %4** %285, align 8
  %286 = getelementptr inbounds %6, %6* %4, i32 0, i32 24
  store %4* null, %4** %286, align 8
  %287 = getelementptr inbounds %6, %6* %4, i32 0, i32 25
  store %4* null, %4** %287, align 8
  %288 = getelementptr inbounds %6, %6* %4, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %288, align 8
  %289 = getelementptr inbounds %6, %6* %4, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %289, align 8
  %290 = getelementptr inbounds %6, %6* %4, i32 0, i32 2
  store %6* null, %6** %290, align 8
  %291 = getelementptr inbounds %6, %6* %4, i32 0, i32 33
  store i32 0, i32* %291, align 8
  %292 = getelementptr inbounds %6, %6* %4, i32 0, i32 36
  store %6** null, %6*** %292, align 8
  %293 = getelementptr inbounds %6, %6* %4, i32 0, i32 34
  store i32 0, i32* %293, align 4
  %294 = getelementptr inbounds %6, %6* %4, i32 0, i32 37
  store %19** null, %19*** %294, align 8
  %295 = getelementptr inbounds %6, %6* %4, i32 0, i32 38
  store %21** null, %21*** %295, align 8
  %296 = getelementptr inbounds %6, %6* %4, i32 0, i32 35
  store %6** null, %6*** %296, align 8
  %297 = getelementptr inbounds %6, %6* %4, i32 0, i32 28
  store %14* (%6*, %29*, i32)* null, %14* (%6*, %29*, i32)** %297, align 8
  %298 = getelementptr inbounds %6, %6* %4, i32 0, i32 26
  %299 = getelementptr inbounds %12, %12* %298, i32 0, i32 0
  store %13* null, %13** %299, align 8
  %300 = getelementptr inbounds %6, %6* %4, i32 0, i32 39
  %301 = bitcast %23* %300 to %72*
  %302 = getelementptr inbounds %72, %72* %301, i32 0, i32 1
  store %36* null, %36** %302, align 8
  %303 = getelementptr inbounds %6, %6* %4, i32 0, i32 39
  %304 = bitcast %23* %303 to %72*
  %305 = getelementptr inbounds %72, %72* %304, i32 0, i32 0
  store %39* getelementptr inbounds ([6 x %39], [6 x %39]* bitcast ([6 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }]* @date_funcs_interval to [6 x %39]*), i32 0, i32 0), %39** %305, align 8
  %306 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %306) #15
  %307 = getelementptr inbounds %6, %6* %4, i32 0, i32 27
  store %15* (%6*)* @545, %15* (%6*)** %307, align 8
  %308 = call %6* @zend_register_internal_class_ex(%6* %4, %6* null)
  store %6* %308, %6** @date_ce_interval, align 8
  %309 = call %16* @zend_get_std_object_handlers()
  %310 = bitcast %16* %309 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%16* @414 to i8*), i8* align 8 %310, i64 224, i1 false)
  store i32 ptrtoint (%15* getelementptr inbounds (%68, %68* null, i32 0, i32 3) to i32), i32* getelementptr inbounds (%16, %16* @414, i32 0, i32 0), align 8
  store void (%15*)* @546, void (%15*)** getelementptr inbounds (%16, %16* @414, i32 0, i32 1), align 8
  store %15* (%29*)* @547, %15* (%29*)** getelementptr inbounds (%16, %16* @414, i32 0, i32 3), align 8
  store i32 (%29*, %29*, i32, i8**)* @548, i32 (%29*, %29*, i32, i8**)** getelementptr inbounds (%16, %16* @414, i32 0, i32 11), align 8
  store %29* (%29*, %29*, i32, i8**, %29*)* @date_interval_read_property, %29* (%29*, %29*, i32, i8**, %29*)** getelementptr inbounds (%16, %16* @414, i32 0, i32 4), align 8
  store void (%29*, %29*, %29*, i8**)* @date_interval_write_property, void (%29*, %29*, %29*, i8**)** getelementptr inbounds (%16, %16* @414, i32 0, i32 5), align 8
  store %7* (%29*)* @549, %7* (%29*)** getelementptr inbounds (%16, %16* @414, i32 0, i32 15), align 8
  store %29* (%29*, %29*, i32, i8**)* @550, %29* (%29*, %29*, i32, i8**)** getelementptr inbounds (%16, %16* @414, i32 0, i32 8), align 8
  store %7* (%29*, %29**, i32*)* @551, %7* (%29*, %29**, i32*)** getelementptr inbounds (%16, %16* @414, i32 0, i32 25), align 8
  %311 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %311) #15
  %312 = call %28* @510(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @415, i32 0, i32 0), i64 10, i32 1)
  store %28* %312, %28** %12, align 8
  %313 = load %28* (%28*)*, %28* (%28*)** @zend_new_interned_string, align 8
  %314 = load %28*, %28** %12, align 8
  %315 = call %28* %313(%28* %314)
  %316 = getelementptr inbounds %6, %6* %5, i32 0, i32 1
  store %28* %315, %28** %316, align 8
  %317 = getelementptr inbounds %6, %6* %5, i32 0, i32 13
  store %4* null, %4** %317, align 8
  %318 = getelementptr inbounds %6, %6* %5, i32 0, i32 14
  store %4* null, %4** %318, align 8
  %319 = getelementptr inbounds %6, %6* %5, i32 0, i32 15
  store %4* null, %4** %319, align 8
  %320 = getelementptr inbounds %6, %6* %5, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %320, align 8
  %321 = getelementptr inbounds %6, %6* %5, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %321, align 8
  %322 = getelementptr inbounds %6, %6* %5, i32 0, i32 27
  store %15* (%6*)* null, %15* (%6*)** %322, align 8
  %323 = getelementptr inbounds %6, %6* %5, i32 0, i32 29
  store i32 (%6*, %6*)* null, i32 (%6*, %6*)** %323, align 8
  %324 = getelementptr inbounds %6, %6* %5, i32 0, i32 30
  store %4* (%6*, %28*)* null, %4* (%6*, %28*)** %324, align 8
  %325 = getelementptr inbounds %6, %6* %5, i32 0, i32 20
  store %4* null, %4** %325, align 8
  %326 = getelementptr inbounds %6, %6* %5, i32 0, i32 21
  store %4* null, %4** %326, align 8
  %327 = getelementptr inbounds %6, %6* %5, i32 0, i32 22
  store %4* null, %4** %327, align 8
  %328 = getelementptr inbounds %6, %6* %5, i32 0, i32 16
  store %4* null, %4** %328, align 8
  %329 = getelementptr inbounds %6, %6* %5, i32 0, i32 17
  store %4* null, %4** %329, align 8
  %330 = getelementptr inbounds %6, %6* %5, i32 0, i32 18
  store %4* null, %4** %330, align 8
  %331 = getelementptr inbounds %6, %6* %5, i32 0, i32 19
  store %4* null, %4** %331, align 8
  %332 = getelementptr inbounds %6, %6* %5, i32 0, i32 23
  store %4* null, %4** %332, align 8
  %333 = getelementptr inbounds %6, %6* %5, i32 0, i32 24
  store %4* null, %4** %333, align 8
  %334 = getelementptr inbounds %6, %6* %5, i32 0, i32 25
  store %4* null, %4** %334, align 8
  %335 = getelementptr inbounds %6, %6* %5, i32 0, i32 31
  store i32 (%29*, i8**, i64*, %17*)* null, i32 (%29*, i8**, i64*, %17*)** %335, align 8
  %336 = getelementptr inbounds %6, %6* %5, i32 0, i32 32
  store i32 (%29*, %6*, i8*, i64, %18*)* null, i32 (%29*, %6*, i8*, i64, %18*)** %336, align 8
  %337 = getelementptr inbounds %6, %6* %5, i32 0, i32 2
  store %6* null, %6** %337, align 8
  %338 = getelementptr inbounds %6, %6* %5, i32 0, i32 33
  store i32 0, i32* %338, align 8
  %339 = getelementptr inbounds %6, %6* %5, i32 0, i32 36
  store %6** null, %6*** %339, align 8
  %340 = getelementptr inbounds %6, %6* %5, i32 0, i32 34
  store i32 0, i32* %340, align 4
  %341 = getelementptr inbounds %6, %6* %5, i32 0, i32 37
  store %19** null, %19*** %341, align 8
  %342 = getelementptr inbounds %6, %6* %5, i32 0, i32 38
  store %21** null, %21*** %342, align 8
  %343 = getelementptr inbounds %6, %6* %5, i32 0, i32 35
  store %6** null, %6*** %343, align 8
  %344 = getelementptr inbounds %6, %6* %5, i32 0, i32 28
  store %14* (%6*, %29*, i32)* null, %14* (%6*, %29*, i32)** %344, align 8
  %345 = getelementptr inbounds %6, %6* %5, i32 0, i32 26
  %346 = getelementptr inbounds %12, %12* %345, i32 0, i32 0
  store %13* null, %13** %346, align 8
  %347 = getelementptr inbounds %6, %6* %5, i32 0, i32 39
  %348 = bitcast %23* %347 to %72*
  %349 = getelementptr inbounds %72, %72* %348, i32 0, i32 1
  store %36* null, %36** %349, align 8
  %350 = getelementptr inbounds %6, %6* %5, i32 0, i32 39
  %351 = bitcast %23* %350 to %72*
  %352 = getelementptr inbounds %72, %72* %351, i32 0, i32 0
  store %39* getelementptr inbounds ([8 x %39], [8 x %39]* bitcast ([8 x { i8*, void (%1*, %29*)*, %0*, i32, i32 }]* @date_funcs_period to [8 x %39]*), i32 0, i32 0), %39** %352, align 8
  %353 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %353) #15
  %354 = getelementptr inbounds %6, %6* %5, i32 0, i32 27
  store %15* (%6*)* @552, %15* (%6*)** %354, align 8
  %355 = call %6* @zend_register_internal_class_ex(%6* %5, %6* null)
  store %6* %355, %6** @date_ce_period, align 8
  %356 = load %6*, %6** @date_ce_period, align 8
  %357 = getelementptr inbounds %6, %6* %356, i32 0, i32 28
  store %14* (%6*, %29*, i32)* @date_object_period_get_iterator, %14* (%6*, %29*, i32)** %357, align 8
  %358 = load %6*, %6** @date_ce_period, align 8
  %359 = getelementptr inbounds %6, %6* %358, i32 0, i32 26
  %360 = getelementptr inbounds %12, %12* %359, i32 0, i32 0
  store %13* @date_period_it_funcs, %13** %360, align 8
  %361 = load %6*, %6** @date_ce_period, align 8
  %362 = load %6*, %6** @zend_ce_traversable, align 8
  call void (%6*, i32, ...) @zend_class_implements(%6* %361, i32 1, %6* %362)
  %363 = call %16* @zend_get_std_object_handlers()
  %364 = bitcast %16* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%16* @416 to i8*), i8* align 8 %364, i64 224, i1 false)
  store i32 ptrtoint (%15* getelementptr inbounds (%71, %71* null, i32 0, i32 8) to i32), i32* getelementptr inbounds (%16, %16* @416, i32 0, i32 0), align 8
  store void (%15*)* @553, void (%15*)** getelementptr inbounds (%16, %16* @416, i32 0, i32 1), align 8
  store %15* (%29*)* @554, %15* (%29*)** getelementptr inbounds (%16, %16* @416, i32 0, i32 3), align 8
  store %7* (%29*)* @555, %7* (%29*)** getelementptr inbounds (%16, %16* @416, i32 0, i32 15), align 8
  store %29* (%29*, %29*, i32, i8**)* null, %29* (%29*, %29*, i32, i8**)** getelementptr inbounds (%16, %16* @416, i32 0, i32 8), align 8
  store %7* (%29*, %29**, i32*)* @556, %7* (%29*, %29**, i32*)** getelementptr inbounds (%16, %16* @416, i32 0, i32 25), align 8
  store %29* (%29*, %29*, i32, i8**, %29*)* @557, %29* (%29*, %29*, i32, i8**, %29*)** getelementptr inbounds (%16, %16* @416, i32 0, i32 4), align 8
  store void (%29*, %29*, %29*, i8**)* @558, void (%29*, %29*, %29*, i8**)** getelementptr inbounds (%16, %16* @416, i32 0, i32 5), align 8
  %365 = load %6*, %6** @date_ce_period, align 8
  %366 = call i32 @zend_declare_class_constant_long(%6* %365, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @417, i32 0, i32 0), i64 18, i64 1)
  %367 = bitcast %6* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 504, i8* %367) #15
  %368 = bitcast %6* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 504, i8* %368) #15
  %369 = bitcast %6* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 504, i8* %369) #15
  %370 = bitcast %6* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 504, i8* %370) #15
  %371 = bitcast %6* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 504, i8* %371) #15
  %372 = bitcast %6* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 504, i8* %372) #15
  ret void
}

declare dso_local void @zend_register_string_constant(i8*, i64, i8*, i32, i32) #4

declare dso_local void @zend_register_long_constant(i8*, i64, i64, i32, i32) #4

declare dso_local void @zend_unregister_ini_entries(i32) #4

declare dso_local %41* @timelib_builtin_db() #4

declare dso_local void @php_info_print_table_start() #4

declare dso_local void @php_info_print_table_row(i32, ...) #4

; Function Attrs: nounwind uwtable
define internal i8* @464(%41* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %41*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca i32, align 4
  store %41* %0, %41** %3, align 8
  %6 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  %10 = call i64 @strlen(i8* %9) #16
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 1), align 8
  store i8* %13, i8** %2, align 8
  br label %76

14:                                               ; preds = %8, %1
  %15 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %56, label %17

17:                                               ; preds = %14
  %18 = bitcast %29** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  %19 = call %29* @cfg_get_entry(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @312, i32 0, i32 0), i64 14)
  store %29* %19, %29** %4, align 8
  %20 = icmp ne %29* null, %19
  br i1 %20, label %21, label %51

21:                                               ; preds = %17
  %22 = load %29*, %29** %4, align 8
  %23 = call zeroext i8 @490(%29* %22)
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 6
  br i1 %25, label %26, label %51

26:                                               ; preds = %21
  %27 = load %29*, %29** %4, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 0
  %29 = bitcast %30* %28 to %28**
  %30 = load %28*, %28** %29, align 8
  %31 = getelementptr inbounds %28, %28* %30, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %32, 0
  br i1 %33, label %34, label %51

34:                                               ; preds = %26
  %35 = load %29*, %29** %4, align 8
  %36 = getelementptr inbounds %29, %29* %35, i32 0, i32 0
  %37 = bitcast %30* %36 to %28**
  %38 = load %28*, %28** %37, align 8
  %39 = getelementptr inbounds %28, %28* %38, i32 0, i32 3
  %40 = getelementptr inbounds [1 x i8], [1 x i8]* %39, i32 0, i32 0
  %41 = load %41*, %41** %3, align 8
  %42 = call i32 @timelib_timezone_id_is_valid(i8* %40, %41* %41)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %34
  %45 = load %29*, %29** %4, align 8
  %46 = getelementptr inbounds %29, %29* %45, i32 0, i32 0
  %47 = bitcast %30* %46 to %28**
  %48 = load %28*, %28** %47, align 8
  %49 = getelementptr inbounds %28, %28* %48, i32 0, i32 3
  %50 = getelementptr inbounds [1 x i8], [1 x i8]* %49, i32 0, i32 0
  store i8* %50, i8** %2, align 8
  store i32 1, i32* %5, align 4
  br label %52

51:                                               ; preds = %34, %26, %21, %17
  store i32 0, i32* %5, align 4
  br label %52

52:                                               ; preds = %51, %44
  %53 = bitcast %29** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #15
  %54 = load i32, i32* %5, align 4
  switch i32 %54, label %78 [
    i32 0, label %55
    i32 1, label %76
  ]

55:                                               ; preds = %52
  br label %75

56:                                               ; preds = %14
  %57 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  %58 = load i8, i8* %57, align 1
  %59 = icmp ne i8 %58, 0
  br i1 %59, label %60, label %74

60:                                               ; preds = %56
  %61 = load i32, i32* getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 4), align 8
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  store i8* %64, i8** %2, align 8
  br label %76

65:                                               ; preds = %60
  %66 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  %67 = load %41*, %41** %3, align 8
  %68 = call i32 @timelib_timezone_id_is_valid(i8* %66, %41* %67)
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @320, i32 0, i32 0), i8* %71)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @321, i32 0, i32 0), i8** %2, align 8
  br label %76

72:                                               ; preds = %65
  store i32 1, i32* getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 4), align 8
  %73 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  store i8* %73, i8** %2, align 8
  br label %76

74:                                               ; preds = %56
  br label %75

75:                                               ; preds = %74, %55
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @321, i32 0, i32 0), i8** %2, align 8
  br label %76

76:                                               ; preds = %75, %72, %70, %63, %52, %12
  %77 = load i8*, i8** %2, align 8
  ret i8* %77

78:                                               ; preds = %52
  unreachable
}

declare dso_local void @php_info_print_table_end() #4

declare dso_local void @display_ini_entries(%36*) #4

; Function Attrs: nounwind uwtable
define hidden %53* @php_date_parse_tzfile_wrapper(i8* %0, %41* %1, i32* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %41*, align 8
  %6 = alloca i32*, align 8
  store i8* %0, i8** %4, align 8
  store %41* %1, %41** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load %41*, %41** %5, align 8
  %9 = call %53* @465(i8* %7, %41* %8)
  ret %53* %9
}

; Function Attrs: nounwind uwtable
define internal %53* @465(i8* %0, %41* %1) #0 {
  %3 = alloca %53*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %41*, align 8
  %6 = alloca %53*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store %41* %1, %41** %5, align 8
  %9 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #15
  %11 = load %7*, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  %12 = icmp ne %7* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %2
  %14 = call noalias i8* @_emalloc_56()
  %15 = bitcast i8* %14 to %7*
  store %7* %15, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  %16 = load %7*, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  call void @_zend_hash_init(%7* %16, i32 4, void (%29*)* @523, i8 zeroext 0)
  br label %17

17:                                               ; preds = %13, %2
  %18 = load %7*, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  %19 = load i8*, i8** %4, align 8
  %20 = load i8*, i8** %4, align 8
  %21 = call i64 @strlen(i8* %20) #16
  %22 = call i8* @524(%7* %18, i8* %19, i64 %21)
  %23 = bitcast i8* %22 to %53*
  store %53* %23, %53** %6, align 8
  %24 = icmp ne %53* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %17
  %26 = load %53*, %53** %6, align 8
  store %53* %26, %53** %3, align 8
  store i32 1, i32* %8, align 4
  br label %43

27:                                               ; preds = %17
  %28 = load i8*, i8** %4, align 8
  %29 = load %41*, %41** %5, align 8
  %30 = call %53* @timelib_parse_tzfile(i8* %28, %41* %29, i32* %7)
  store %53* %30, %53** %6, align 8
  %31 = load %53*, %53** %6, align 8
  %32 = icmp ne %53* %31, null
  br i1 %32, label %33, label %41

33:                                               ; preds = %27
  %34 = load %7*, %7** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 2), align 8
  %35 = load i8*, i8** %4, align 8
  %36 = load i8*, i8** %4, align 8
  %37 = call i64 @strlen(i8* %36) #16
  %38 = load %53*, %53** %6, align 8
  %39 = bitcast %53* %38 to i8*
  %40 = call i8* @525(%7* %34, i8* %35, i64 %37, i8* %39)
  br label %41

41:                                               ; preds = %33, %27
  %42 = load %53*, %53** %6, align 8
  store %53* %42, %53** %3, align 8
  store i32 1, i32* %8, align 4
  br label %43

43:                                               ; preds = %41, %25
  %44 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %44) #15
  %45 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #15
  %46 = load %53*, %53** %3, align 8
  ret %53* %46
}

; Function Attrs: nounwind uwtable
define dso_local %53* @get_timezone_info() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %53*, align 8
  %3 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #15
  %4 = bitcast %53** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %41*, %41** @php_date_global_timezone_db, align 8
  %6 = icmp ne %41* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %0
  %8 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %11

9:                                                ; preds = %0
  %10 = call %41* @timelib_builtin_db()
  br label %11

11:                                               ; preds = %9, %7
  %12 = phi %41* [ %8, %7 ], [ %10, %9 ]
  %13 = call i8* @464(%41* %12)
  store i8* %13, i8** %1, align 8
  %14 = load i8*, i8** %1, align 8
  %15 = load %41*, %41** @php_date_global_timezone_db, align 8
  %16 = icmp ne %41* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %11
  %18 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %21

19:                                               ; preds = %11
  %20 = call %41* @timelib_builtin_db()
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi %41* [ %18, %17 ], [ %20, %19 ]
  %23 = call %53* @465(i8* %14, %41* %22)
  store %53* %23, %53** %2, align 8
  %24 = load %53*, %53** %2, align 8
  %25 = icmp ne %53* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @180, i32 0, i32 0))
  br label %27

27:                                               ; preds = %26, %21
  %28 = load %53*, %53** %2, align 8
  %29 = bitcast %53** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #15
  %30 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #15
  ret %53* %28
}

declare dso_local void @php_error_docref0(i8*, i32, i8*, ...) #4

; Function Attrs: nounwind uwtable
define hidden i8* @php_date_full_day_name(i64 %0, i64 %1, i64 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  %10 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = load i64, i64* %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = load i64, i64* %7, align 8
  %14 = call i64 @timelib_day_of_week(i64 %11, i64 %12, i64 %13)
  store i64 %14, i64* %8, align 8
  %15 = load i64, i64* %8, align 8
  %16 = icmp slt i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @181, i32 0, i32 0), i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %22

18:                                               ; preds = %3
  %19 = load i64, i64* %8, align 8
  %20 = getelementptr inbounds [7 x i8*], [7 x i8*]* @182, i64 0, i64 %19
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %22

22:                                               ; preds = %18, %17
  %23 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #15
  %24 = load i8*, i8** %4, align 8
  ret i8* %24
}

declare dso_local i64 @timelib_day_of_week(i64, i64, i64) #4

; Function Attrs: nounwind uwtable
define hidden i8* @php_date_short_day_name(i64 %0, i64 %1, i64 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  %10 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = load i64, i64* %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = load i64, i64* %7, align 8
  %14 = call i64 @timelib_day_of_week(i64 %11, i64 %12, i64 %13)
  store i64 %14, i64* %8, align 8
  %15 = load i64, i64* %8, align 8
  %16 = icmp slt i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @181, i32 0, i32 0), i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %22

18:                                               ; preds = %3
  %19 = load i64, i64* %8, align 8
  %20 = getelementptr inbounds [7 x i8*], [7 x i8*]* @183, i64 0, i64 %19
  %21 = load i8*, i8** %20, align 8
  store i8* %21, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %22

22:                                               ; preds = %18, %17
  %23 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #15
  %24 = load i8*, i8** %4, align 8
  ret i8* %24
}

; Function Attrs: nounwind uwtable
define dso_local %28* @php_format_date(i8* %0, i64 %1, i64 %2, i32 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %52*, align 8
  %10 = alloca %53*, align 8
  %11 = alloca %28*, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %12 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = call %52* @timelib_time_ctor()
  store %52* %15, %52** %9, align 8
  %16 = load i32, i32* %8, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %4
  %19 = call %53* @get_timezone_info()
  store %53* %19, %53** %10, align 8
  %20 = load %53*, %53** %10, align 8
  %21 = load %52*, %52** %9, align 8
  %22 = getelementptr inbounds %52, %52* %21, i32 0, i32 9
  store %53* %20, %53** %22, align 8
  %23 = load %52*, %52** %9, align 8
  %24 = getelementptr inbounds %52, %52* %23, i32 0, i32 21
  store i32 3, i32* %24, align 8
  %25 = load %52*, %52** %9, align 8
  %26 = load i64, i64* %7, align 8
  call void @timelib_unixtime2local(%52* %25, i64 %26)
  br label %30

27:                                               ; preds = %4
  store %53* null, %53** %10, align 8
  %28 = load %52*, %52** %9, align 8
  %29 = load i64, i64* %7, align 8
  call void @timelib_unixtime2gmt(%52* %28, i64 %29)
  br label %30

30:                                               ; preds = %27, %18
  %31 = load i8*, i8** %5, align 8
  %32 = load i64, i64* %6, align 8
  %33 = load %52*, %52** %9, align 8
  %34 = load i32, i32* %8, align 4
  %35 = call %28* @466(i8* %31, i64 %32, %52* %33, i32 %34)
  store %28* %35, %28** %11, align 8
  %36 = load %52*, %52** %9, align 8
  call void @timelib_time_dtor(%52* %36)
  %37 = load %28*, %28** %11, align 8
  %38 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #15
  %39 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #15
  %40 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #15
  ret %28* %37
}

declare dso_local %52* @timelib_time_ctor() #4

declare dso_local void @timelib_unixtime2local(%52*, i64) #4

declare dso_local void @timelib_unixtime2gmt(%52*, i64) #4

; Function Attrs: nounwind uwtable
define internal %28* @466(i8* %0, i64 %1, %52* %2, i32 %3) #0 {
  %5 = alloca %28*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %52*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %73, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca [97 x i8], align 16
  %14 = alloca %67*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store %52* %2, %52** %8, align 8
  store i32 %3, i32* %9, align 4
  %21 = bitcast %73* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %21) #15
  %22 = bitcast %73* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  %23 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  %24 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #15
  store i32 0, i32* %12, align 4
  %25 = bitcast [97 x i8]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 97, i8* %25) #15
  %26 = bitcast %67** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  store %67* null, %67** %14, align 8
  %27 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #15
  %28 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #15
  %29 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  %30 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  store i32 0, i32* %18, align 4
  %31 = load i64, i64* %7, align 8
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %4
  %34 = load %28*, %28** @zend_empty_string, align 8
  store %28* %34, %28** %5, align 8
  store i32 1, i32* %19, align 4
  br label %787

35:                                               ; preds = %4
  %36 = load i32, i32* %9, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %136

38:                                               ; preds = %35
  %39 = load %52*, %52** %8, align 8
  %40 = getelementptr inbounds %52, %52* %39, i32 0, i32 21
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %68

43:                                               ; preds = %38
  %44 = call %67* @timelib_time_offset_ctor()
  store %67* %44, %67** %14, align 8
  %45 = load %52*, %52** %8, align 8
  %46 = getelementptr inbounds %52, %52* %45, i32 0, i32 7
  %47 = load i32, i32* %46, align 8
  %48 = load %52*, %52** %8, align 8
  %49 = getelementptr inbounds %52, %52* %48, i32 0, i32 10
  %50 = load i32, i32* %49, align 8
  %51 = mul nsw i32 %50, 3600
  %52 = add nsw i32 %47, %51
  %53 = load %67*, %67** %14, align 8
  %54 = getelementptr inbounds %67, %67* %53, i32 0, i32 0
  store i32 %52, i32* %54, align 8
  %55 = load %67*, %67** %14, align 8
  %56 = getelementptr inbounds %67, %67* %55, i32 0, i32 1
  store i32 0, i32* %56, align 4
  %57 = load %52*, %52** %8, align 8
  %58 = getelementptr inbounds %52, %52* %57, i32 0, i32 10
  %59 = load i32, i32* %58, align 8
  %60 = load %67*, %67** %14, align 8
  %61 = getelementptr inbounds %67, %67* %60, i32 0, i32 2
  store i32 %59, i32* %61, align 8
  %62 = load %52*, %52** %8, align 8
  %63 = getelementptr inbounds %52, %52* %62, i32 0, i32 8
  %64 = load i8*, i8** %63, align 8
  %65 = call noalias i8* @_estrdup(i8* %64)
  %66 = load %67*, %67** %14, align 8
  %67 = getelementptr inbounds %67, %67* %66, i32 0, i32 3
  store i8* %65, i8** %67, align 8
  br label %135

68:                                               ; preds = %38
  %69 = load %52*, %52** %8, align 8
  %70 = getelementptr inbounds %52, %52* %69, i32 0, i32 21
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %126

73:                                               ; preds = %68
  %74 = call %67* @timelib_time_offset_ctor()
  store %67* %74, %67** %14, align 8
  %75 = load %52*, %52** %8, align 8
  %76 = getelementptr inbounds %52, %52* %75, i32 0, i32 7
  %77 = load i32, i32* %76, align 8
  %78 = load %67*, %67** %14, align 8
  %79 = getelementptr inbounds %67, %67* %78, i32 0, i32 0
  store i32 %77, i32* %79, align 8
  %80 = load %67*, %67** %14, align 8
  %81 = getelementptr inbounds %67, %67* %80, i32 0, i32 1
  store i32 0, i32* %81, align 4
  %82 = load %67*, %67** %14, align 8
  %83 = getelementptr inbounds %67, %67* %82, i32 0, i32 2
  store i32 0, i32* %83, align 8
  %84 = call noalias i8* @_emalloc_16()
  %85 = load %67*, %67** %14, align 8
  %86 = getelementptr inbounds %67, %67* %85, i32 0, i32 3
  store i8* %84, i8** %86, align 8
  %87 = load %67*, %67** %14, align 8
  %88 = getelementptr inbounds %67, %67* %87, i32 0, i32 3
  %89 = load i8*, i8** %88, align 8
  %90 = load i32, i32* %9, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %73
  %93 = load %67*, %67** %14, align 8
  %94 = getelementptr inbounds %67, %67* %93, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = icmp slt i32 %95, 0
  %97 = zext i1 %96 to i64
  %98 = select i1 %96, i32 45, i32 43
  br label %100

99:                                               ; preds = %73
  br label %100

100:                                              ; preds = %99, %92
  %101 = phi i32 [ %98, %92 ], [ 43, %99 ]
  %102 = load i32, i32* %9, align 4
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = load %67*, %67** %14, align 8
  %106 = getelementptr inbounds %67, %67* %105, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = sdiv i32 %107, 3600
  %109 = call i32 @abs(i32 %108) #17
  br label %111

110:                                              ; preds = %100
  br label %111

111:                                              ; preds = %110, %104
  %112 = phi i32 [ %109, %104 ], [ 0, %110 ]
  %113 = load i32, i32* %9, align 4
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %122

115:                                              ; preds = %111
  %116 = load %67*, %67** %14, align 8
  %117 = getelementptr inbounds %67, %67* %116, i32 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = srem i32 %118, 3600
  %120 = sdiv i32 %119, 60
  %121 = call i32 @abs(i32 %120) #17
  br label %123

122:                                              ; preds = %111
  br label %123

123:                                              ; preds = %122, %115
  %124 = phi i32 [ %121, %115 ], [ 0, %122 ]
  %125 = call i32 (i8*, i64, i8*, ...) @ap_php_snprintf(i8* %89, i64 9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @184, i32 0, i32 0), i32 %101, i32 %112, i32 %124)
  br label %134

126:                                              ; preds = %68
  %127 = load %52*, %52** %8, align 8
  %128 = getelementptr inbounds %52, %52* %127, i32 0, i32 12
  %129 = load i64, i64* %128, align 8
  %130 = load %52*, %52** %8, align 8
  %131 = getelementptr inbounds %52, %52* %130, i32 0, i32 9
  %132 = load %53*, %53** %131, align 8
  %133 = call %67* @timelib_get_time_zone_info(i64 %129, %53* %132)
  store %67* %133, %67** %14, align 8
  br label %134

134:                                              ; preds = %126, %123
  br label %135

135:                                              ; preds = %134, %43
  br label %136

136:                                              ; preds = %135, %35
  store i64 0, i64* %11, align 8
  br label %137

137:                                              ; preds = %776, %136
  %138 = load i64, i64* %11, align 8
  %139 = load i64, i64* %7, align 8
  %140 = icmp ult i64 %138, %139
  br i1 %140, label %141, label %779

141:                                              ; preds = %137
  store i32 0, i32* %17, align 4
  %142 = load i8*, i8** %6, align 8
  %143 = load i64, i64* %11, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  switch i32 %146, label %765 [
    i32 100, label %147
    i32 68, label %154
    i32 106, label %167
    i32 108, label %174
    i32 83, label %187
    i32 119, label %194
    i32 78, label %208
    i32 122, label %222
    i32 87, label %236
    i32 111, label %254
    i32 70, label %271
    i32 109, label %280
    i32 77, label %287
    i32 110, label %296
    i32 116, label %303
    i32 76, label %314
    i32 121, label %342
    i32 89, label %350
    i32 97, label %363
    i32 65, label %372
    i32 66, label %381
    i32 103, label %411
    i32 71, label %428
    i32 104, label %435
    i32 72, label %452
    i32 105, label %459
    i32 115, label %466
    i32 117, label %473
    i32 118, label %482
    i32 73, label %492
    i32 80, label %504
    i32 79, label %505
    i32 84, label %547
    i32 101, label %559
    i32 90, label %605
    i32 99, label %617
    i32 114, label %678
    i32 85, label %751
    i32 92, label %757
  ]

147:                                              ; preds = %141
  %148 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %149 = load %52*, %52** %8, align 8
  %150 = getelementptr inbounds %52, %52* %149, i32 0, i32 2
  %151 = load i64, i64* %150, align 8
  %152 = trunc i64 %151 to i32
  %153 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %148, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %152)
  store i32 %153, i32* %12, align 4
  br label %772

154:                                              ; preds = %141
  %155 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %156 = load %52*, %52** %8, align 8
  %157 = getelementptr inbounds %52, %52* %156, i32 0, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = load %52*, %52** %8, align 8
  %160 = getelementptr inbounds %52, %52* %159, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = load %52*, %52** %8, align 8
  %163 = getelementptr inbounds %52, %52* %162, i32 0, i32 2
  %164 = load i64, i64* %163, align 8
  %165 = call i8* @php_date_short_day_name(i64 %158, i64 %161, i64 %164)
  %166 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %155, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %165)
  store i32 %166, i32* %12, align 4
  br label %772

167:                                              ; preds = %141
  %168 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %169 = load %52*, %52** %8, align 8
  %170 = getelementptr inbounds %52, %52* %169, i32 0, i32 2
  %171 = load i64, i64* %170, align 8
  %172 = trunc i64 %171 to i32
  %173 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %168, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %172)
  store i32 %173, i32* %12, align 4
  br label %772

174:                                              ; preds = %141
  %175 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %176 = load %52*, %52** %8, align 8
  %177 = getelementptr inbounds %52, %52* %176, i32 0, i32 0
  %178 = load i64, i64* %177, align 8
  %179 = load %52*, %52** %8, align 8
  %180 = getelementptr inbounds %52, %52* %179, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = load %52*, %52** %8, align 8
  %183 = getelementptr inbounds %52, %52* %182, i32 0, i32 2
  %184 = load i64, i64* %183, align 8
  %185 = call i8* @php_date_full_day_name(i64 %178, i64 %181, i64 %184)
  %186 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %175, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %185)
  store i32 %186, i32* %12, align 4
  br label %772

187:                                              ; preds = %141
  %188 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %189 = load %52*, %52** %8, align 8
  %190 = getelementptr inbounds %52, %52* %189, i32 0, i32 2
  %191 = load i64, i64* %190, align 8
  %192 = call i8* @526(i64 %191)
  %193 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %188, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %192)
  store i32 %193, i32* %12, align 4
  br label %772

194:                                              ; preds = %141
  %195 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %196 = load %52*, %52** %8, align 8
  %197 = getelementptr inbounds %52, %52* %196, i32 0, i32 0
  %198 = load i64, i64* %197, align 8
  %199 = load %52*, %52** %8, align 8
  %200 = getelementptr inbounds %52, %52* %199, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = load %52*, %52** %8, align 8
  %203 = getelementptr inbounds %52, %52* %202, i32 0, i32 2
  %204 = load i64, i64* %203, align 8
  %205 = call i64 @timelib_day_of_week(i64 %198, i64 %201, i64 %204)
  %206 = trunc i64 %205 to i32
  %207 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %195, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %206)
  store i32 %207, i32* %12, align 4
  br label %772

208:                                              ; preds = %141
  %209 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %210 = load %52*, %52** %8, align 8
  %211 = getelementptr inbounds %52, %52* %210, i32 0, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = load %52*, %52** %8, align 8
  %214 = getelementptr inbounds %52, %52* %213, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = load %52*, %52** %8, align 8
  %217 = getelementptr inbounds %52, %52* %216, i32 0, i32 2
  %218 = load i64, i64* %217, align 8
  %219 = call i64 @timelib_iso_day_of_week(i64 %212, i64 %215, i64 %218)
  %220 = trunc i64 %219 to i32
  %221 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %209, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %220)
  store i32 %221, i32* %12, align 4
  br label %772

222:                                              ; preds = %141
  %223 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %224 = load %52*, %52** %8, align 8
  %225 = getelementptr inbounds %52, %52* %224, i32 0, i32 0
  %226 = load i64, i64* %225, align 8
  %227 = load %52*, %52** %8, align 8
  %228 = getelementptr inbounds %52, %52* %227, i32 0, i32 1
  %229 = load i64, i64* %228, align 8
  %230 = load %52*, %52** %8, align 8
  %231 = getelementptr inbounds %52, %52* %230, i32 0, i32 2
  %232 = load i64, i64* %231, align 8
  %233 = call i64 @timelib_day_of_year(i64 %226, i64 %229, i64 %232)
  %234 = trunc i64 %233 to i32
  %235 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %223, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %234)
  store i32 %235, i32* %12, align 4
  br label %772

236:                                              ; preds = %141
  %237 = load i32, i32* %18, align 4
  %238 = icmp ne i32 %237, 0
  br i1 %238, label %249, label %239

239:                                              ; preds = %236
  %240 = load %52*, %52** %8, align 8
  %241 = getelementptr inbounds %52, %52* %240, i32 0, i32 0
  %242 = load i64, i64* %241, align 8
  %243 = load %52*, %52** %8, align 8
  %244 = getelementptr inbounds %52, %52* %243, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = load %52*, %52** %8, align 8
  %247 = getelementptr inbounds %52, %52* %246, i32 0, i32 2
  %248 = load i64, i64* %247, align 8
  call void @timelib_isoweek_from_date(i64 %242, i64 %245, i64 %248, i64* %15, i64* %16)
  store i32 1, i32* %18, align 4
  br label %249

249:                                              ; preds = %239, %236
  %250 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %251 = load i64, i64* %15, align 8
  %252 = trunc i64 %251 to i32
  %253 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %250, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %252)
  store i32 %253, i32* %12, align 4
  br label %772

254:                                              ; preds = %141
  %255 = load i32, i32* %18, align 4
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %267, label %257

257:                                              ; preds = %254
  %258 = load %52*, %52** %8, align 8
  %259 = getelementptr inbounds %52, %52* %258, i32 0, i32 0
  %260 = load i64, i64* %259, align 8
  %261 = load %52*, %52** %8, align 8
  %262 = getelementptr inbounds %52, %52* %261, i32 0, i32 1
  %263 = load i64, i64* %262, align 8
  %264 = load %52*, %52** %8, align 8
  %265 = getelementptr inbounds %52, %52* %264, i32 0, i32 2
  %266 = load i64, i64* %265, align 8
  call void @timelib_isoweek_from_date(i64 %260, i64 %263, i64 %266, i64* %15, i64* %16)
  store i32 1, i32* %18, align 4
  br label %267

267:                                              ; preds = %257, %254
  %268 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %269 = load i64, i64* %16, align 8
  %270 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %268, i64 97, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @339, i32 0, i32 0), i64 %269)
  store i32 %270, i32* %12, align 4
  br label %772

271:                                              ; preds = %141
  %272 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %273 = load %52*, %52** %8, align 8
  %274 = getelementptr inbounds %52, %52* %273, i32 0, i32 1
  %275 = load i64, i64* %274, align 8
  %276 = sub nsw i64 %275, 1
  %277 = getelementptr inbounds [12 x i8*], [12 x i8*]* @208, i64 0, i64 %276
  %278 = load i8*, i8** %277, align 8
  %279 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %272, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %278)
  store i32 %279, i32* %12, align 4
  br label %772

280:                                              ; preds = %141
  %281 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %282 = load %52*, %52** %8, align 8
  %283 = getelementptr inbounds %52, %52* %282, i32 0, i32 1
  %284 = load i64, i64* %283, align 8
  %285 = trunc i64 %284 to i32
  %286 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %281, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %285)
  store i32 %286, i32* %12, align 4
  br label %772

287:                                              ; preds = %141
  %288 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %289 = load %52*, %52** %8, align 8
  %290 = getelementptr inbounds %52, %52* %289, i32 0, i32 1
  %291 = load i64, i64* %290, align 8
  %292 = sub nsw i64 %291, 1
  %293 = getelementptr inbounds [12 x i8*], [12 x i8*]* @340, i64 0, i64 %292
  %294 = load i8*, i8** %293, align 8
  %295 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %288, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %294)
  store i32 %295, i32* %12, align 4
  br label %772

296:                                              ; preds = %141
  %297 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %298 = load %52*, %52** %8, align 8
  %299 = getelementptr inbounds %52, %52* %298, i32 0, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = trunc i64 %300 to i32
  %302 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %297, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %301)
  store i32 %302, i32* %12, align 4
  br label %772

303:                                              ; preds = %141
  %304 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %305 = load %52*, %52** %8, align 8
  %306 = getelementptr inbounds %52, %52* %305, i32 0, i32 0
  %307 = load i64, i64* %306, align 8
  %308 = load %52*, %52** %8, align 8
  %309 = getelementptr inbounds %52, %52* %308, i32 0, i32 1
  %310 = load i64, i64* %309, align 8
  %311 = call i64 @timelib_days_in_month(i64 %307, i64 %310)
  %312 = trunc i64 %311 to i32
  %313 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %304, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %312)
  store i32 %313, i32* %12, align 4
  br label %772

314:                                              ; preds = %141
  %315 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %316 = load %52*, %52** %8, align 8
  %317 = getelementptr inbounds %52, %52* %316, i32 0, i32 0
  %318 = load i64, i64* %317, align 8
  %319 = trunc i64 %318 to i32
  %320 = srem i32 %319, 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %338

322:                                              ; preds = %314
  %323 = load %52*, %52** %8, align 8
  %324 = getelementptr inbounds %52, %52* %323, i32 0, i32 0
  %325 = load i64, i64* %324, align 8
  %326 = trunc i64 %325 to i32
  %327 = srem i32 %326, 100
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %336, label %329

329:                                              ; preds = %322
  %330 = load %52*, %52** %8, align 8
  %331 = getelementptr inbounds %52, %52* %330, i32 0, i32 0
  %332 = load i64, i64* %331, align 8
  %333 = trunc i64 %332 to i32
  %334 = srem i32 %333, 400
  %335 = icmp eq i32 %334, 0
  br label %336

336:                                              ; preds = %329, %322
  %337 = phi i1 [ true, %322 ], [ %335, %329 ]
  br label %338

338:                                              ; preds = %336, %314
  %339 = phi i1 [ false, %314 ], [ %337, %336 ]
  %340 = zext i1 %339 to i32
  %341 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %315, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %340)
  store i32 %341, i32* %12, align 4
  br label %772

342:                                              ; preds = %141
  %343 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %344 = load %52*, %52** %8, align 8
  %345 = getelementptr inbounds %52, %52* %344, i32 0, i32 0
  %346 = load i64, i64* %345, align 8
  %347 = srem i64 %346, 100
  %348 = trunc i64 %347 to i32
  %349 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %343, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %348)
  store i32 %349, i32* %12, align 4
  br label %772

350:                                              ; preds = %141
  %351 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %352 = load %52*, %52** %8, align 8
  %353 = getelementptr inbounds %52, %52* %352, i32 0, i32 0
  %354 = load i64, i64* %353, align 8
  %355 = icmp slt i64 %354, 0
  %356 = zext i1 %355 to i64
  %357 = select i1 %355, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @342, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @210, i32 0, i32 0)
  %358 = load %52*, %52** %8, align 8
  %359 = getelementptr inbounds %52, %52* %358, i32 0, i32 0
  %360 = load i64, i64* %359, align 8
  %361 = call i64 @527(i64 %360)
  %362 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %351, i64 97, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @341, i32 0, i32 0), i8* %357, i64 %361)
  store i32 %362, i32* %12, align 4
  br label %772

363:                                              ; preds = %141
  %364 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %365 = load %52*, %52** %8, align 8
  %366 = getelementptr inbounds %52, %52* %365, i32 0, i32 3
  %367 = load i64, i64* %366, align 8
  %368 = icmp sge i64 %367, 12
  %369 = zext i1 %368 to i64
  %370 = select i1 %368, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @343, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @344, i32 0, i32 0)
  %371 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %364, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %370)
  store i32 %371, i32* %12, align 4
  br label %772

372:                                              ; preds = %141
  %373 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %374 = load %52*, %52** %8, align 8
  %375 = getelementptr inbounds %52, %52* %374, i32 0, i32 3
  %376 = load i64, i64* %375, align 8
  %377 = icmp sge i64 %376, 12
  %378 = zext i1 %377 to i64
  %379 = select i1 %377, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @345, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @346, i32 0, i32 0)
  %380 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %373, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %379)
  store i32 %380, i32* %12, align 4
  br label %772

381:                                              ; preds = %141
  %382 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %382) #15
  %383 = load %52*, %52** %8, align 8
  %384 = getelementptr inbounds %52, %52* %383, i32 0, i32 12
  %385 = load i64, i64* %384, align 8
  %386 = load %52*, %52** %8, align 8
  %387 = getelementptr inbounds %52, %52* %386, i32 0, i32 12
  %388 = load i64, i64* %387, align 8
  %389 = load %52*, %52** %8, align 8
  %390 = getelementptr inbounds %52, %52* %389, i32 0, i32 12
  %391 = load i64, i64* %390, align 8
  %392 = srem i64 %391, 86400
  %393 = add nsw i64 %392, 3600
  %394 = sub nsw i64 %388, %393
  %395 = sub nsw i64 %385, %394
  %396 = mul nsw i64 %395, 10
  %397 = trunc i64 %396 to i32
  store i32 %397, i32* %20, align 4
  %398 = load i32, i32* %20, align 4
  %399 = icmp slt i32 %398, 0
  br i1 %399, label %400, label %403

400:                                              ; preds = %381
  %401 = load i32, i32* %20, align 4
  %402 = add nsw i32 %401, 864000
  store i32 %402, i32* %20, align 4
  br label %403

403:                                              ; preds = %400, %381
  %404 = load i32, i32* %20, align 4
  %405 = sdiv i32 %404, 864
  %406 = srem i32 %405, 1000
  store i32 %406, i32* %20, align 4
  %407 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %408 = load i32, i32* %20, align 4
  %409 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %407, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @347, i32 0, i32 0), i32 %408)
  store i32 %409, i32* %12, align 4
  store i32 5, i32* %19, align 4
  %410 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %410) #15
  br label %772

411:                                              ; preds = %141
  %412 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %413 = load %52*, %52** %8, align 8
  %414 = getelementptr inbounds %52, %52* %413, i32 0, i32 3
  %415 = load i64, i64* %414, align 8
  %416 = srem i64 %415, 12
  %417 = icmp ne i64 %416, 0
  br i1 %417, label %418, label %424

418:                                              ; preds = %411
  %419 = load %52*, %52** %8, align 8
  %420 = getelementptr inbounds %52, %52* %419, i32 0, i32 3
  %421 = load i64, i64* %420, align 8
  %422 = trunc i64 %421 to i32
  %423 = srem i32 %422, 12
  br label %425

424:                                              ; preds = %411
  br label %425

425:                                              ; preds = %424, %418
  %426 = phi i32 [ %423, %418 ], [ 12, %424 ]
  %427 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %412, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %426)
  store i32 %427, i32* %12, align 4
  br label %772

428:                                              ; preds = %141
  %429 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %430 = load %52*, %52** %8, align 8
  %431 = getelementptr inbounds %52, %52* %430, i32 0, i32 3
  %432 = load i64, i64* %431, align 8
  %433 = trunc i64 %432 to i32
  %434 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %429, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %433)
  store i32 %434, i32* %12, align 4
  br label %772

435:                                              ; preds = %141
  %436 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %437 = load %52*, %52** %8, align 8
  %438 = getelementptr inbounds %52, %52* %437, i32 0, i32 3
  %439 = load i64, i64* %438, align 8
  %440 = srem i64 %439, 12
  %441 = icmp ne i64 %440, 0
  br i1 %441, label %442, label %448

442:                                              ; preds = %435
  %443 = load %52*, %52** %8, align 8
  %444 = getelementptr inbounds %52, %52* %443, i32 0, i32 3
  %445 = load i64, i64* %444, align 8
  %446 = trunc i64 %445 to i32
  %447 = srem i32 %446, 12
  br label %449

448:                                              ; preds = %435
  br label %449

449:                                              ; preds = %448, %442
  %450 = phi i32 [ %447, %442 ], [ 12, %448 ]
  %451 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %436, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %450)
  store i32 %451, i32* %12, align 4
  br label %772

452:                                              ; preds = %141
  %453 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %454 = load %52*, %52** %8, align 8
  %455 = getelementptr inbounds %52, %52* %454, i32 0, i32 3
  %456 = load i64, i64* %455, align 8
  %457 = trunc i64 %456 to i32
  %458 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %453, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %457)
  store i32 %458, i32* %12, align 4
  br label %772

459:                                              ; preds = %141
  %460 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %461 = load %52*, %52** %8, align 8
  %462 = getelementptr inbounds %52, %52* %461, i32 0, i32 4
  %463 = load i64, i64* %462, align 8
  %464 = trunc i64 %463 to i32
  %465 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %460, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %464)
  store i32 %465, i32* %12, align 4
  br label %772

466:                                              ; preds = %141
  %467 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %468 = load %52*, %52** %8, align 8
  %469 = getelementptr inbounds %52, %52* %468, i32 0, i32 5
  %470 = load i64, i64* %469, align 8
  %471 = trunc i64 %470 to i32
  %472 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %467, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %471)
  store i32 %472, i32* %12, align 4
  br label %772

473:                                              ; preds = %141
  %474 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %475 = load %52*, %52** %8, align 8
  %476 = getelementptr inbounds %52, %52* %475, i32 0, i32 6
  %477 = load i64, i64* %476, align 8
  %478 = sitofp i64 %477 to double
  %479 = call double @llvm.floor.f64(double %478)
  %480 = fptosi double %479 to i32
  %481 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %474, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @348, i32 0, i32 0), i32 %480)
  store i32 %481, i32* %12, align 4
  br label %772

482:                                              ; preds = %141
  %483 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %484 = load %52*, %52** %8, align 8
  %485 = getelementptr inbounds %52, %52* %484, i32 0, i32 6
  %486 = load i64, i64* %485, align 8
  %487 = sdiv i64 %486, 1000
  %488 = sitofp i64 %487 to double
  %489 = call double @llvm.floor.f64(double %488)
  %490 = fptosi double %489 to i32
  %491 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %483, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @347, i32 0, i32 0), i32 %490)
  store i32 %491, i32* %12, align 4
  br label %772

492:                                              ; preds = %141
  %493 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %494 = load i32, i32* %9, align 4
  %495 = icmp ne i32 %494, 0
  br i1 %495, label %496, label %500

496:                                              ; preds = %492
  %497 = load %67*, %67** %14, align 8
  %498 = getelementptr inbounds %67, %67* %497, i32 0, i32 2
  %499 = load i32, i32* %498, align 8
  br label %501

500:                                              ; preds = %492
  br label %501

501:                                              ; preds = %500, %496
  %502 = phi i32 [ %499, %496 ], [ 0, %500 ]
  %503 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %493, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %502)
  store i32 %503, i32* %12, align 4
  br label %772

504:                                              ; preds = %141
  store i32 1, i32* %17, align 4
  br label %505

505:                                              ; preds = %141, %504
  %506 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %507 = load i32, i32* %9, align 4
  %508 = icmp ne i32 %507, 0
  br i1 %508, label %509, label %516

509:                                              ; preds = %505
  %510 = load %67*, %67** %14, align 8
  %511 = getelementptr inbounds %67, %67* %510, i32 0, i32 0
  %512 = load i32, i32* %511, align 8
  %513 = icmp slt i32 %512, 0
  %514 = zext i1 %513 to i64
  %515 = select i1 %513, i32 45, i32 43
  br label %517

516:                                              ; preds = %505
  br label %517

517:                                              ; preds = %516, %509
  %518 = phi i32 [ %515, %509 ], [ 43, %516 ]
  %519 = load i32, i32* %9, align 4
  %520 = icmp ne i32 %519, 0
  br i1 %520, label %521, label %527

521:                                              ; preds = %517
  %522 = load %67*, %67** %14, align 8
  %523 = getelementptr inbounds %67, %67* %522, i32 0, i32 0
  %524 = load i32, i32* %523, align 8
  %525 = sdiv i32 %524, 3600
  %526 = call i32 @abs(i32 %525) #17
  br label %528

527:                                              ; preds = %517
  br label %528

528:                                              ; preds = %527, %521
  %529 = phi i32 [ %526, %521 ], [ 0, %527 ]
  %530 = load i32, i32* %17, align 4
  %531 = icmp ne i32 %530, 0
  %532 = zext i1 %531 to i64
  %533 = select i1 %531, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @350, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @210, i32 0, i32 0)
  %534 = load i32, i32* %9, align 4
  %535 = icmp ne i32 %534, 0
  br i1 %535, label %536, label %543

536:                                              ; preds = %528
  %537 = load %67*, %67** %14, align 8
  %538 = getelementptr inbounds %67, %67* %537, i32 0, i32 0
  %539 = load i32, i32* %538, align 8
  %540 = srem i32 %539, 3600
  %541 = sdiv i32 %540, 60
  %542 = call i32 @abs(i32 %541) #17
  br label %544

543:                                              ; preds = %528
  br label %544

544:                                              ; preds = %543, %536
  %545 = phi i32 [ %542, %536 ], [ 0, %543 ]
  %546 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %506, i64 97, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @349, i32 0, i32 0), i32 %518, i32 %529, i8* %533, i32 %545)
  store i32 %546, i32* %12, align 4
  br label %772

547:                                              ; preds = %141
  %548 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %549 = load i32, i32* %9, align 4
  %550 = icmp ne i32 %549, 0
  br i1 %550, label %551, label %555

551:                                              ; preds = %547
  %552 = load %67*, %67** %14, align 8
  %553 = getelementptr inbounds %67, %67* %552, i32 0, i32 3
  %554 = load i8*, i8** %553, align 8
  br label %556

555:                                              ; preds = %547
  br label %556

556:                                              ; preds = %555, %551
  %557 = phi i8* [ %554, %551 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @188, i32 0, i32 0), %555 ]
  %558 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %548, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %557)
  store i32 %558, i32* %12, align 4
  br label %772

559:                                              ; preds = %141
  %560 = load i32, i32* %9, align 4
  %561 = icmp ne i32 %560, 0
  br i1 %561, label %565, label %562

562:                                              ; preds = %559
  %563 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %564 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %563, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @321, i32 0, i32 0))
  store i32 %564, i32* %12, align 4
  br label %604

565:                                              ; preds = %559
  %566 = load %52*, %52** %8, align 8
  %567 = getelementptr inbounds %52, %52* %566, i32 0, i32 21
  %568 = load i32, i32* %567, align 8
  switch i32 %568, label %603 [
    i32 3, label %569
    i32 2, label %577
    i32 1, label %583
  ]

569:                                              ; preds = %565
  %570 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %571 = load %52*, %52** %8, align 8
  %572 = getelementptr inbounds %52, %52* %571, i32 0, i32 9
  %573 = load %53*, %53** %572, align 8
  %574 = getelementptr inbounds %53, %53* %573, i32 0, i32 0
  %575 = load i8*, i8** %574, align 8
  %576 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %570, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %575)
  store i32 %576, i32* %12, align 4
  br label %603

577:                                              ; preds = %565
  %578 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %579 = load %67*, %67** %14, align 8
  %580 = getelementptr inbounds %67, %67* %579, i32 0, i32 3
  %581 = load i8*, i8** %580, align 8
  %582 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %578, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %581)
  store i32 %582, i32* %12, align 4
  br label %603

583:                                              ; preds = %565
  %584 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %585 = load %67*, %67** %14, align 8
  %586 = getelementptr inbounds %67, %67* %585, i32 0, i32 0
  %587 = load i32, i32* %586, align 8
  %588 = icmp slt i32 %587, 0
  %589 = zext i1 %588 to i64
  %590 = select i1 %588, i32 45, i32 43
  %591 = load %67*, %67** %14, align 8
  %592 = getelementptr inbounds %67, %67* %591, i32 0, i32 0
  %593 = load i32, i32* %592, align 8
  %594 = sdiv i32 %593, 3600
  %595 = call i32 @abs(i32 %594) #17
  %596 = load %67*, %67** %14, align 8
  %597 = getelementptr inbounds %67, %67* %596, i32 0, i32 0
  %598 = load i32, i32* %597, align 8
  %599 = srem i32 %598, 3600
  %600 = sdiv i32 %599, 60
  %601 = call i32 @abs(i32 %600) #17
  %602 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %584, i64 97, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @351, i32 0, i32 0), i32 %590, i32 %595, i32 %601)
  store i32 %602, i32* %12, align 4
  br label %603

603:                                              ; preds = %565, %583, %577, %569
  br label %604

604:                                              ; preds = %603, %562
  br label %772

605:                                              ; preds = %141
  %606 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %607 = load i32, i32* %9, align 4
  %608 = icmp ne i32 %607, 0
  br i1 %608, label %609, label %613

609:                                              ; preds = %605
  %610 = load %67*, %67** %14, align 8
  %611 = getelementptr inbounds %67, %67* %610, i32 0, i32 0
  %612 = load i32, i32* %611, align 8
  br label %614

613:                                              ; preds = %605
  br label %614

614:                                              ; preds = %613, %609
  %615 = phi i32 [ %612, %609 ], [ 0, %613 ]
  %616 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %606, i64 97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %615)
  store i32 %616, i32* %12, align 4
  br label %772

617:                                              ; preds = %141
  %618 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %619 = load %52*, %52** %8, align 8
  %620 = getelementptr inbounds %52, %52* %619, i32 0, i32 0
  %621 = load i64, i64* %620, align 8
  %622 = load %52*, %52** %8, align 8
  %623 = getelementptr inbounds %52, %52* %622, i32 0, i32 1
  %624 = load i64, i64* %623, align 8
  %625 = trunc i64 %624 to i32
  %626 = load %52*, %52** %8, align 8
  %627 = getelementptr inbounds %52, %52* %626, i32 0, i32 2
  %628 = load i64, i64* %627, align 8
  %629 = trunc i64 %628 to i32
  %630 = load %52*, %52** %8, align 8
  %631 = getelementptr inbounds %52, %52* %630, i32 0, i32 3
  %632 = load i64, i64* %631, align 8
  %633 = trunc i64 %632 to i32
  %634 = load %52*, %52** %8, align 8
  %635 = getelementptr inbounds %52, %52* %634, i32 0, i32 4
  %636 = load i64, i64* %635, align 8
  %637 = trunc i64 %636 to i32
  %638 = load %52*, %52** %8, align 8
  %639 = getelementptr inbounds %52, %52* %638, i32 0, i32 5
  %640 = load i64, i64* %639, align 8
  %641 = trunc i64 %640 to i32
  %642 = load i32, i32* %9, align 4
  %643 = icmp ne i32 %642, 0
  br i1 %643, label %644, label %651

644:                                              ; preds = %617
  %645 = load %67*, %67** %14, align 8
  %646 = getelementptr inbounds %67, %67* %645, i32 0, i32 0
  %647 = load i32, i32* %646, align 8
  %648 = icmp slt i32 %647, 0
  %649 = zext i1 %648 to i64
  %650 = select i1 %648, i32 45, i32 43
  br label %652

651:                                              ; preds = %617
  br label %652

652:                                              ; preds = %651, %644
  %653 = phi i32 [ %650, %644 ], [ 43, %651 ]
  %654 = load i32, i32* %9, align 4
  %655 = icmp ne i32 %654, 0
  br i1 %655, label %656, label %662

656:                                              ; preds = %652
  %657 = load %67*, %67** %14, align 8
  %658 = getelementptr inbounds %67, %67* %657, i32 0, i32 0
  %659 = load i32, i32* %658, align 8
  %660 = sdiv i32 %659, 3600
  %661 = call i32 @abs(i32 %660) #17
  br label %663

662:                                              ; preds = %652
  br label %663

663:                                              ; preds = %662, %656
  %664 = phi i32 [ %661, %656 ], [ 0, %662 ]
  %665 = load i32, i32* %9, align 4
  %666 = icmp ne i32 %665, 0
  br i1 %666, label %667, label %674

667:                                              ; preds = %663
  %668 = load %67*, %67** %14, align 8
  %669 = getelementptr inbounds %67, %67* %668, i32 0, i32 0
  %670 = load i32, i32* %669, align 8
  %671 = srem i32 %670, 3600
  %672 = sdiv i32 %671, 60
  %673 = call i32 @abs(i32 %672) #17
  br label %675

674:                                              ; preds = %663
  br label %675

675:                                              ; preds = %674, %667
  %676 = phi i32 [ %673, %667 ], [ 0, %674 ]
  %677 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %618, i64 97, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @352, i32 0, i32 0), i64 %621, i32 %625, i32 %629, i32 %633, i32 %637, i32 %641, i32 %653, i32 %664, i32 %676)
  store i32 %677, i32* %12, align 4
  br label %772

678:                                              ; preds = %141
  %679 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %680 = load %52*, %52** %8, align 8
  %681 = getelementptr inbounds %52, %52* %680, i32 0, i32 0
  %682 = load i64, i64* %681, align 8
  %683 = load %52*, %52** %8, align 8
  %684 = getelementptr inbounds %52, %52* %683, i32 0, i32 1
  %685 = load i64, i64* %684, align 8
  %686 = load %52*, %52** %8, align 8
  %687 = getelementptr inbounds %52, %52* %686, i32 0, i32 2
  %688 = load i64, i64* %687, align 8
  %689 = call i8* @php_date_short_day_name(i64 %682, i64 %685, i64 %688)
  %690 = load %52*, %52** %8, align 8
  %691 = getelementptr inbounds %52, %52* %690, i32 0, i32 2
  %692 = load i64, i64* %691, align 8
  %693 = trunc i64 %692 to i32
  %694 = load %52*, %52** %8, align 8
  %695 = getelementptr inbounds %52, %52* %694, i32 0, i32 1
  %696 = load i64, i64* %695, align 8
  %697 = sub nsw i64 %696, 1
  %698 = getelementptr inbounds [12 x i8*], [12 x i8*]* @340, i64 0, i64 %697
  %699 = load i8*, i8** %698, align 8
  %700 = load %52*, %52** %8, align 8
  %701 = getelementptr inbounds %52, %52* %700, i32 0, i32 0
  %702 = load i64, i64* %701, align 8
  %703 = load %52*, %52** %8, align 8
  %704 = getelementptr inbounds %52, %52* %703, i32 0, i32 3
  %705 = load i64, i64* %704, align 8
  %706 = trunc i64 %705 to i32
  %707 = load %52*, %52** %8, align 8
  %708 = getelementptr inbounds %52, %52* %707, i32 0, i32 4
  %709 = load i64, i64* %708, align 8
  %710 = trunc i64 %709 to i32
  %711 = load %52*, %52** %8, align 8
  %712 = getelementptr inbounds %52, %52* %711, i32 0, i32 5
  %713 = load i64, i64* %712, align 8
  %714 = trunc i64 %713 to i32
  %715 = load i32, i32* %9, align 4
  %716 = icmp ne i32 %715, 0
  br i1 %716, label %717, label %724

717:                                              ; preds = %678
  %718 = load %67*, %67** %14, align 8
  %719 = getelementptr inbounds %67, %67* %718, i32 0, i32 0
  %720 = load i32, i32* %719, align 8
  %721 = icmp slt i32 %720, 0
  %722 = zext i1 %721 to i64
  %723 = select i1 %721, i32 45, i32 43
  br label %725

724:                                              ; preds = %678
  br label %725

725:                                              ; preds = %724, %717
  %726 = phi i32 [ %723, %717 ], [ 43, %724 ]
  %727 = load i32, i32* %9, align 4
  %728 = icmp ne i32 %727, 0
  br i1 %728, label %729, label %735

729:                                              ; preds = %725
  %730 = load %67*, %67** %14, align 8
  %731 = getelementptr inbounds %67, %67* %730, i32 0, i32 0
  %732 = load i32, i32* %731, align 8
  %733 = sdiv i32 %732, 3600
  %734 = call i32 @abs(i32 %733) #17
  br label %736

735:                                              ; preds = %725
  br label %736

736:                                              ; preds = %735, %729
  %737 = phi i32 [ %734, %729 ], [ 0, %735 ]
  %738 = load i32, i32* %9, align 4
  %739 = icmp ne i32 %738, 0
  br i1 %739, label %740, label %747

740:                                              ; preds = %736
  %741 = load %67*, %67** %14, align 8
  %742 = getelementptr inbounds %67, %67* %741, i32 0, i32 0
  %743 = load i32, i32* %742, align 8
  %744 = srem i32 %743, 3600
  %745 = sdiv i32 %744, 60
  %746 = call i32 @abs(i32 %745) #17
  br label %748

747:                                              ; preds = %736
  br label %748

748:                                              ; preds = %747, %740
  %749 = phi i32 [ %746, %740 ], [ 0, %747 ]
  %750 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %679, i64 97, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @353, i32 0, i32 0), i8* %689, i32 %693, i8* %699, i64 %702, i32 %706, i32 %710, i32 %714, i32 %726, i32 %737, i32 %749)
  store i32 %750, i32* %12, align 4
  br label %772

751:                                              ; preds = %141
  %752 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %753 = load %52*, %52** %8, align 8
  %754 = getelementptr inbounds %52, %52* %753, i32 0, i32 12
  %755 = load i64, i64* %754, align 8
  %756 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %752, i64 97, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @354, i32 0, i32 0), i64 %755)
  store i32 %756, i32* %12, align 4
  br label %772

757:                                              ; preds = %141
  %758 = load i64, i64* %11, align 8
  %759 = load i64, i64* %7, align 8
  %760 = icmp ult i64 %758, %759
  br i1 %760, label %761, label %764

761:                                              ; preds = %757
  %762 = load i64, i64* %11, align 8
  %763 = add i64 %762, 1
  store i64 %763, i64* %11, align 8
  br label %764

764:                                              ; preds = %761, %757
  br label %765

765:                                              ; preds = %141, %764
  %766 = load i8*, i8** %6, align 8
  %767 = load i64, i64* %11, align 8
  %768 = getelementptr inbounds i8, i8* %766, i64 %767
  %769 = load i8, i8* %768, align 1
  %770 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i64 0, i64 0
  store i8 %769, i8* %770, align 16
  %771 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i64 0, i64 1
  store i8 0, i8* %771, align 1
  store i32 1, i32* %12, align 4
  br label %772

772:                                              ; preds = %765, %751, %748, %675, %614, %604, %556, %544, %501, %482, %473, %466, %459, %452, %449, %428, %425, %403, %372, %363, %350, %342, %338, %303, %296, %287, %280, %271, %267, %249, %222, %208, %194, %187, %174, %167, %154, %147
  %773 = getelementptr inbounds [97 x i8], [97 x i8]* %13, i32 0, i32 0
  %774 = load i32, i32* %12, align 4
  %775 = sext i32 %774 to i64
  call void @528(%73* %10, i8* %773, i64 %775, i8 zeroext 0)
  br label %776

776:                                              ; preds = %772
  %777 = load i64, i64* %11, align 8
  %778 = add i64 %777, 1
  store i64 %778, i64* %11, align 8
  br label %137

779:                                              ; preds = %137
  call void @529(%73* %10)
  %780 = load i32, i32* %9, align 4
  %781 = icmp ne i32 %780, 0
  br i1 %781, label %782, label %784

782:                                              ; preds = %779
  %783 = load %67*, %67** %14, align 8
  call void @timelib_time_offset_dtor(%67* %783)
  br label %784

784:                                              ; preds = %782, %779
  %785 = getelementptr inbounds %73, %73* %10, i32 0, i32 0
  %786 = load %28*, %28** %785, align 8
  store %28* %786, %28** %5, align 8
  store i32 1, i32* %19, align 4
  br label %787

787:                                              ; preds = %784, %33
  %788 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %788) #15
  %789 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %789) #15
  %790 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %790) #15
  %791 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %791) #15
  %792 = bitcast %67** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %792) #15
  %793 = bitcast [97 x i8]* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 97, i8* %793) #15
  %794 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %794) #15
  %795 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %795) #15
  %796 = bitcast %73* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %796) #15
  %797 = load %28*, %28** %5, align 8
  ret %28* %797
}

declare dso_local void @timelib_time_dtor(%52*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @php_idate(i8 signext %0, i64 %1, i32 %2) #0 {
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %52*, align 8
  %8 = alloca %53*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %67*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store i8 %0, i8* %4, align 1
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %13 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #15
  store i32 -1, i32* %9, align 4
  %16 = bitcast %67** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  store %67* null, %67** %10, align 8
  %17 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #15
  %18 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  %19 = call %52* @timelib_time_ctor()
  store %52* %19, %52** %7, align 8
  %20 = load i32, i32* %6, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %3
  %23 = call %53* @get_timezone_info()
  store %53* %23, %53** %8, align 8
  %24 = load %53*, %53** %8, align 8
  %25 = load %52*, %52** %7, align 8
  %26 = getelementptr inbounds %52, %52* %25, i32 0, i32 9
  store %53* %24, %53** %26, align 8
  %27 = load %52*, %52** %7, align 8
  %28 = getelementptr inbounds %52, %52* %27, i32 0, i32 21
  store i32 3, i32* %28, align 8
  %29 = load %52*, %52** %7, align 8
  %30 = load i64, i64* %5, align 8
  call void @timelib_unixtime2local(%52* %29, i64 %30)
  br label %34

31:                                               ; preds = %3
  store %53* null, %53** %8, align 8
  %32 = load %52*, %52** %7, align 8
  %33 = load i64, i64* %5, align 8
  call void @timelib_unixtime2gmt(%52* %32, i64 %33)
  br label %34

34:                                               ; preds = %31, %22
  %35 = load i32, i32* %6, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %143, label %37

37:                                               ; preds = %34
  %38 = load %52*, %52** %7, align 8
  %39 = getelementptr inbounds %52, %52* %38, i32 0, i32 21
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %42, label %67

42:                                               ; preds = %37
  %43 = call %67* @timelib_time_offset_ctor()
  store %67* %43, %67** %10, align 8
  %44 = load %52*, %52** %7, align 8
  %45 = getelementptr inbounds %52, %52* %44, i32 0, i32 7
  %46 = load i32, i32* %45, align 8
  %47 = load %52*, %52** %7, align 8
  %48 = getelementptr inbounds %52, %52* %47, i32 0, i32 10
  %49 = load i32, i32* %48, align 8
  %50 = mul nsw i32 %49, 3600
  %51 = add nsw i32 %46, %50
  %52 = load %67*, %67** %10, align 8
  %53 = getelementptr inbounds %67, %67* %52, i32 0, i32 0
  store i32 %51, i32* %53, align 8
  %54 = load %67*, %67** %10, align 8
  %55 = getelementptr inbounds %67, %67* %54, i32 0, i32 1
  store i32 0, i32* %55, align 4
  %56 = load %52*, %52** %7, align 8
  %57 = getelementptr inbounds %52, %52* %56, i32 0, i32 10
  %58 = load i32, i32* %57, align 8
  %59 = load %67*, %67** %10, align 8
  %60 = getelementptr inbounds %67, %67* %59, i32 0, i32 2
  store i32 %58, i32* %60, align 8
  %61 = load %52*, %52** %7, align 8
  %62 = getelementptr inbounds %52, %52* %61, i32 0, i32 8
  %63 = load i8*, i8** %62, align 8
  %64 = call noalias i8* @_estrdup(i8* %63)
  %65 = load %67*, %67** %10, align 8
  %66 = getelementptr inbounds %67, %67* %65, i32 0, i32 3
  store i8* %64, i8** %66, align 8
  br label %142

67:                                               ; preds = %37
  %68 = load %52*, %52** %7, align 8
  %69 = getelementptr inbounds %52, %52* %68, i32 0, i32 21
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %133

72:                                               ; preds = %67
  %73 = call %67* @timelib_time_offset_ctor()
  store %67* %73, %67** %10, align 8
  %74 = load %52*, %52** %7, align 8
  %75 = getelementptr inbounds %52, %52* %74, i32 0, i32 7
  %76 = load i32, i32* %75, align 8
  %77 = load %52*, %52** %7, align 8
  %78 = getelementptr inbounds %52, %52* %77, i32 0, i32 10
  %79 = load i32, i32* %78, align 8
  %80 = mul nsw i32 %79, 3600
  %81 = add nsw i32 %76, %80
  %82 = load %67*, %67** %10, align 8
  %83 = getelementptr inbounds %67, %67* %82, i32 0, i32 0
  store i32 %81, i32* %83, align 8
  %84 = load %67*, %67** %10, align 8
  %85 = getelementptr inbounds %67, %67* %84, i32 0, i32 1
  store i32 0, i32* %85, align 4
  %86 = load %52*, %52** %7, align 8
  %87 = getelementptr inbounds %52, %52* %86, i32 0, i32 10
  %88 = load i32, i32* %87, align 8
  %89 = load %67*, %67** %10, align 8
  %90 = getelementptr inbounds %67, %67* %89, i32 0, i32 2
  store i32 %88, i32* %90, align 8
  %91 = call noalias i8* @_emalloc_16()
  %92 = load %67*, %67** %10, align 8
  %93 = getelementptr inbounds %67, %67* %92, i32 0, i32 3
  store i8* %91, i8** %93, align 8
  %94 = load %67*, %67** %10, align 8
  %95 = getelementptr inbounds %67, %67* %94, i32 0, i32 3
  %96 = load i8*, i8** %95, align 8
  %97 = load i32, i32* %6, align 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %72
  %100 = load %67*, %67** %10, align 8
  %101 = getelementptr inbounds %67, %67* %100, i32 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = icmp slt i32 %102, 0
  %104 = zext i1 %103 to i64
  %105 = select i1 %103, i32 45, i32 43
  br label %107

106:                                              ; preds = %72
  br label %107

107:                                              ; preds = %106, %99
  %108 = phi i32 [ %105, %99 ], [ 43, %106 ]
  %109 = load i32, i32* %6, align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %107
  %112 = load %67*, %67** %10, align 8
  %113 = getelementptr inbounds %67, %67* %112, i32 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = sdiv i32 %114, 3600
  %116 = call i32 @abs(i32 %115) #17
  br label %118

117:                                              ; preds = %107
  br label %118

118:                                              ; preds = %117, %111
  %119 = phi i32 [ %116, %111 ], [ 0, %117 ]
  %120 = load i32, i32* %6, align 4
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = load %67*, %67** %10, align 8
  %124 = getelementptr inbounds %67, %67* %123, i32 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = srem i32 %125, 3600
  %127 = sdiv i32 %126, 60
  %128 = call i32 @abs(i32 %127) #17
  br label %130

129:                                              ; preds = %118
  br label %130

130:                                              ; preds = %129, %122
  %131 = phi i32 [ %128, %122 ], [ 0, %129 ]
  %132 = call i32 (i8*, i64, i8*, ...) @ap_php_snprintf(i8* %96, i64 9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @184, i32 0, i32 0), i32 %108, i32 %119, i32 %131)
  br label %141

133:                                              ; preds = %67
  %134 = load %52*, %52** %7, align 8
  %135 = getelementptr inbounds %52, %52* %134, i32 0, i32 12
  %136 = load i64, i64* %135, align 8
  %137 = load %52*, %52** %7, align 8
  %138 = getelementptr inbounds %52, %52* %137, i32 0, i32 9
  %139 = load %53*, %53** %138, align 8
  %140 = call %67* @timelib_get_time_zone_info(i64 %136, %53* %139)
  store %67* %140, %67** %10, align 8
  br label %141

141:                                              ; preds = %133, %130
  br label %142

142:                                              ; preds = %141, %42
  br label %143

143:                                              ; preds = %142, %34
  %144 = load %52*, %52** %7, align 8
  %145 = getelementptr inbounds %52, %52* %144, i32 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = load %52*, %52** %7, align 8
  %148 = getelementptr inbounds %52, %52* %147, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = load %52*, %52** %7, align 8
  %151 = getelementptr inbounds %52, %52* %150, i32 0, i32 2
  %152 = load i64, i64* %151, align 8
  call void @timelib_isoweek_from_date(i64 %146, i64 %149, i64 %152, i64* %11, i64* %12)
  %153 = load i8, i8* %4, align 1
  %154 = sext i8 %153 to i32
  switch i32 %154, label %318 [
    i32 100, label %155
    i32 106, label %155
    i32 119, label %160
    i32 122, label %172
    i32 87, label %184
    i32 109, label %187
    i32 110, label %187
    i32 116, label %192
    i32 76, label %201
    i32 121, label %227
    i32 89, label %233
    i32 66, label %238
    i32 103, label %263
    i32 104, label %263
    i32 72, label %278
    i32 71, label %278
    i32 105, label %283
    i32 115, label %288
    i32 73, label %293
    i32 90, label %303
    i32 85, label %313
  ]

155:                                              ; preds = %143, %143
  %156 = load %52*, %52** %7, align 8
  %157 = getelementptr inbounds %52, %52* %156, i32 0, i32 2
  %158 = load i64, i64* %157, align 8
  %159 = trunc i64 %158 to i32
  store i32 %159, i32* %9, align 4
  br label %318

160:                                              ; preds = %143
  %161 = load %52*, %52** %7, align 8
  %162 = getelementptr inbounds %52, %52* %161, i32 0, i32 0
  %163 = load i64, i64* %162, align 8
  %164 = load %52*, %52** %7, align 8
  %165 = getelementptr inbounds %52, %52* %164, i32 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = load %52*, %52** %7, align 8
  %168 = getelementptr inbounds %52, %52* %167, i32 0, i32 2
  %169 = load i64, i64* %168, align 8
  %170 = call i64 @timelib_day_of_week(i64 %163, i64 %166, i64 %169)
  %171 = trunc i64 %170 to i32
  store i32 %171, i32* %9, align 4
  br label %318

172:                                              ; preds = %143
  %173 = load %52*, %52** %7, align 8
  %174 = getelementptr inbounds %52, %52* %173, i32 0, i32 0
  %175 = load i64, i64* %174, align 8
  %176 = load %52*, %52** %7, align 8
  %177 = getelementptr inbounds %52, %52* %176, i32 0, i32 1
  %178 = load i64, i64* %177, align 8
  %179 = load %52*, %52** %7, align 8
  %180 = getelementptr inbounds %52, %52* %179, i32 0, i32 2
  %181 = load i64, i64* %180, align 8
  %182 = call i64 @timelib_day_of_year(i64 %175, i64 %178, i64 %181)
  %183 = trunc i64 %182 to i32
  store i32 %183, i32* %9, align 4
  br label %318

184:                                              ; preds = %143
  %185 = load i64, i64* %11, align 8
  %186 = trunc i64 %185 to i32
  store i32 %186, i32* %9, align 4
  br label %318

187:                                              ; preds = %143, %143
  %188 = load %52*, %52** %7, align 8
  %189 = getelementptr inbounds %52, %52* %188, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = trunc i64 %190 to i32
  store i32 %191, i32* %9, align 4
  br label %318

192:                                              ; preds = %143
  %193 = load %52*, %52** %7, align 8
  %194 = getelementptr inbounds %52, %52* %193, i32 0, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = load %52*, %52** %7, align 8
  %197 = getelementptr inbounds %52, %52* %196, i32 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = call i64 @timelib_days_in_month(i64 %195, i64 %198)
  %200 = trunc i64 %199 to i32
  store i32 %200, i32* %9, align 4
  br label %318

201:                                              ; preds = %143
  %202 = load %52*, %52** %7, align 8
  %203 = getelementptr inbounds %52, %52* %202, i32 0, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = trunc i64 %204 to i32
  %206 = srem i32 %205, 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %224

208:                                              ; preds = %201
  %209 = load %52*, %52** %7, align 8
  %210 = getelementptr inbounds %52, %52* %209, i32 0, i32 0
  %211 = load i64, i64* %210, align 8
  %212 = trunc i64 %211 to i32
  %213 = srem i32 %212, 100
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %222, label %215

215:                                              ; preds = %208
  %216 = load %52*, %52** %7, align 8
  %217 = getelementptr inbounds %52, %52* %216, i32 0, i32 0
  %218 = load i64, i64* %217, align 8
  %219 = trunc i64 %218 to i32
  %220 = srem i32 %219, 400
  %221 = icmp eq i32 %220, 0
  br label %222

222:                                              ; preds = %215, %208
  %223 = phi i1 [ true, %208 ], [ %221, %215 ]
  br label %224

224:                                              ; preds = %222, %201
  %225 = phi i1 [ false, %201 ], [ %223, %222 ]
  %226 = zext i1 %225 to i32
  store i32 %226, i32* %9, align 4
  br label %318

227:                                              ; preds = %143
  %228 = load %52*, %52** %7, align 8
  %229 = getelementptr inbounds %52, %52* %228, i32 0, i32 0
  %230 = load i64, i64* %229, align 8
  %231 = srem i64 %230, 100
  %232 = trunc i64 %231 to i32
  store i32 %232, i32* %9, align 4
  br label %318

233:                                              ; preds = %143
  %234 = load %52*, %52** %7, align 8
  %235 = getelementptr inbounds %52, %52* %234, i32 0, i32 0
  %236 = load i64, i64* %235, align 8
  %237 = trunc i64 %236 to i32
  store i32 %237, i32* %9, align 4
  br label %318

238:                                              ; preds = %143
  %239 = load %52*, %52** %7, align 8
  %240 = getelementptr inbounds %52, %52* %239, i32 0, i32 12
  %241 = load i64, i64* %240, align 8
  %242 = load %52*, %52** %7, align 8
  %243 = getelementptr inbounds %52, %52* %242, i32 0, i32 12
  %244 = load i64, i64* %243, align 8
  %245 = load %52*, %52** %7, align 8
  %246 = getelementptr inbounds %52, %52* %245, i32 0, i32 12
  %247 = load i64, i64* %246, align 8
  %248 = srem i64 %247, 86400
  %249 = add nsw i64 %248, 3600
  %250 = sub nsw i64 %244, %249
  %251 = sub nsw i64 %241, %250
  %252 = mul nsw i64 %251, 10
  %253 = trunc i64 %252 to i32
  store i32 %253, i32* %9, align 4
  %254 = load i32, i32* %9, align 4
  %255 = icmp slt i32 %254, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %238
  %257 = load i32, i32* %9, align 4
  %258 = add nsw i32 %257, 864000
  store i32 %258, i32* %9, align 4
  br label %259

259:                                              ; preds = %256, %238
  %260 = load i32, i32* %9, align 4
  %261 = sdiv i32 %260, 864
  %262 = srem i32 %261, 1000
  store i32 %262, i32* %9, align 4
  br label %318

263:                                              ; preds = %143, %143
  %264 = load %52*, %52** %7, align 8
  %265 = getelementptr inbounds %52, %52* %264, i32 0, i32 3
  %266 = load i64, i64* %265, align 8
  %267 = srem i64 %266, 12
  %268 = icmp ne i64 %267, 0
  br i1 %268, label %269, label %275

269:                                              ; preds = %263
  %270 = load %52*, %52** %7, align 8
  %271 = getelementptr inbounds %52, %52* %270, i32 0, i32 3
  %272 = load i64, i64* %271, align 8
  %273 = trunc i64 %272 to i32
  %274 = srem i32 %273, 12
  br label %276

275:                                              ; preds = %263
  br label %276

276:                                              ; preds = %275, %269
  %277 = phi i32 [ %274, %269 ], [ 12, %275 ]
  store i32 %277, i32* %9, align 4
  br label %318

278:                                              ; preds = %143, %143
  %279 = load %52*, %52** %7, align 8
  %280 = getelementptr inbounds %52, %52* %279, i32 0, i32 3
  %281 = load i64, i64* %280, align 8
  %282 = trunc i64 %281 to i32
  store i32 %282, i32* %9, align 4
  br label %318

283:                                              ; preds = %143
  %284 = load %52*, %52** %7, align 8
  %285 = getelementptr inbounds %52, %52* %284, i32 0, i32 4
  %286 = load i64, i64* %285, align 8
  %287 = trunc i64 %286 to i32
  store i32 %287, i32* %9, align 4
  br label %318

288:                                              ; preds = %143
  %289 = load %52*, %52** %7, align 8
  %290 = getelementptr inbounds %52, %52* %289, i32 0, i32 5
  %291 = load i64, i64* %290, align 8
  %292 = trunc i64 %291 to i32
  store i32 %292, i32* %9, align 4
  br label %318

293:                                              ; preds = %143
  %294 = load i32, i32* %6, align 4
  %295 = icmp ne i32 %294, 0
  br i1 %295, label %300, label %296

296:                                              ; preds = %293
  %297 = load %67*, %67** %10, align 8
  %298 = getelementptr inbounds %67, %67* %297, i32 0, i32 2
  %299 = load i32, i32* %298, align 8
  br label %301

300:                                              ; preds = %293
  br label %301

301:                                              ; preds = %300, %296
  %302 = phi i32 [ %299, %296 ], [ 0, %300 ]
  store i32 %302, i32* %9, align 4
  br label %318

303:                                              ; preds = %143
  %304 = load i32, i32* %6, align 4
  %305 = icmp ne i32 %304, 0
  br i1 %305, label %310, label %306

306:                                              ; preds = %303
  %307 = load %67*, %67** %10, align 8
  %308 = getelementptr inbounds %67, %67* %307, i32 0, i32 0
  %309 = load i32, i32* %308, align 8
  br label %311

310:                                              ; preds = %303
  br label %311

311:                                              ; preds = %310, %306
  %312 = phi i32 [ %309, %306 ], [ 0, %310 ]
  store i32 %312, i32* %9, align 4
  br label %318

313:                                              ; preds = %143
  %314 = load %52*, %52** %7, align 8
  %315 = getelementptr inbounds %52, %52* %314, i32 0, i32 12
  %316 = load i64, i64* %315, align 8
  %317 = trunc i64 %316 to i32
  store i32 %317, i32* %9, align 4
  br label %318

318:                                              ; preds = %143, %313, %311, %301, %288, %283, %278, %276, %259, %233, %227, %224, %192, %187, %184, %172, %160, %155
  %319 = load i32, i32* %6, align 4
  %320 = icmp ne i32 %319, 0
  br i1 %320, label %323, label %321

321:                                              ; preds = %318
  %322 = load %67*, %67** %10, align 8
  call void @timelib_time_offset_dtor(%67* %322)
  br label %323

323:                                              ; preds = %321, %318
  %324 = load %52*, %52** %7, align 8
  call void @timelib_time_dtor(%52* %324)
  %325 = load i32, i32* %9, align 4
  %326 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %326) #15
  %327 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %327) #15
  %328 = bitcast %67** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %328) #15
  %329 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %329) #15
  %330 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %330) #15
  %331 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %331) #15
  ret i32 %325
}

declare dso_local %67* @timelib_time_offset_ctor() #4

declare dso_local noalias i8* @_estrdup(i8*) #4

declare dso_local noalias i8* @_emalloc_16() #4

declare dso_local i32 @ap_php_snprintf(i8*, i64, i8*, ...) #4

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #5

declare dso_local %67* @timelib_get_time_zone_info(i64, %53*) #4

declare dso_local void @timelib_isoweek_from_date(i64, i64, i64, i64*, i64*) #4

declare dso_local i64 @timelib_day_of_year(i64, i64, i64) #4

declare dso_local i64 @timelib_days_in_month(i64, i64) #4

declare dso_local void @timelib_time_offset_dtor(%67*) #4

; Function Attrs: nounwind uwtable
define internal void @467(%1* %0, %29* %1, i32 %2) #0 {
  %4 = alloca %1*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %28*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %29*, align 8
  %23 = alloca %28*, align 8
  store %1* %0, %1** %4, align 8
  store %29* %1, %29** %5, align 8
  store i32 %2, i32* %6, align 4
  %24 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  %25 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  br label %26

26:                                               ; preds = %3
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #15
  store i32 0, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 2, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #15
  %31 = load %1*, %1** %4, align 8
  %32 = getelementptr inbounds %1, %1* %31, i32 0, i32 4
  %33 = getelementptr inbounds %29, %29* %32, i32 0, i32 2
  %34 = bitcast %32* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #15
  %37 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  %38 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  store %29* null, %29** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #15
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #15
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #15
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %29*, %29** %14, align 8
  %44 = load %29*, %29** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %227

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %1*, %1** %4, align 8
  %84 = bitcast %1* %83 to %29*
  %85 = getelementptr inbounds %29, %29* %84, i64 4
  store %29* %85, %29** %14, align 8
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %227

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %29*, %29** %14, align 8
  %142 = getelementptr inbounds %29, %29* %141, i32 1
  store %29* %142, %29** %14, align 8
  %143 = load %29*, %29** %14, align 8
  store %29* %143, %29** %15, align 8
  %144 = load %29*, %29** %15, align 8
  %145 = call i32 @468(%29* %144, %28** %7, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

155:                                              ; preds = %140
  store i8 1, i8* %19, align 1
  %156 = load i32, i32* %13, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %13, align 4
  br label %158

158:                                              ; preds = %155
  %159 = load i32, i32* %13, align 4
  %160 = load i32, i32* %10, align 4
  %161 = icmp sle i32 %159, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i8, i8* %19, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 1
  br label %166

166:                                              ; preds = %162, %158
  %167 = phi i1 [ true, %158 ], [ %165, %162 ]
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  unreachable

174:                                              ; preds = %166
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %13, align 4
  %179 = load i32, i32* %10, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %19, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  %196 = load i8, i8* %19, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %195
  %199 = load i32, i32* %13, align 4
  %200 = load i32, i32* %12, align 4
  %201 = icmp sgt i32 %199, %200
  %202 = xor i1 %201, true
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %198
  br label %227

209:                                              ; preds = %198
  br label %210

210:                                              ; preds = %209, %195
  %211 = load %29*, %29** %14, align 8
  %212 = getelementptr inbounds %29, %29* %211, i32 1
  store %29* %212, %29** %14, align 8
  %213 = load %29*, %29** %14, align 8
  store %29* %213, %29** %15, align 8
  %214 = load %29*, %29** %15, align 8
  %215 = call i32 @469(%29* %214, i64* %8, i8* %18, i32 0, i32 0)
  %216 = icmp ne i32 %215, 0
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %210
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

225:                                              ; preds = %210
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226, %224, %208, %154, %138, %78
  %228 = load i32, i32* %20, align 4
  %229 = icmp ne i32 %228, 0
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i32
  %233 = sext i32 %232 to i64
  %234 = call i64 @llvm.expect.i64(i64 %233, i64 0)
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %236, label %265

236:                                              ; preds = %227
  %237 = load i32, i32* %20, align 4
  %238 = icmp eq i32 %237, 2
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load i32, i32* %13, align 4
  %241 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %240, i8* %241)
  br label %258

242:                                              ; preds = %236
  %243 = load i32, i32* %20, align 4
  %244 = icmp eq i32 %243, 3
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = load i32, i32* %13, align 4
  %247 = load i8*, i8** %17, align 8
  %248 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %246, i8* %247, %29* %248)
  br label %257

249:                                              ; preds = %242
  %250 = load i32, i32* %20, align 4
  %251 = icmp eq i32 %250, 4
  br i1 %251, label %252, label %256

252:                                              ; preds = %249
  %253 = load i32, i32* %13, align 4
  %254 = load i32, i32* %16, align 4
  %255 = load %29*, %29** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %253, i32 %254, %29* %255)
  br label %256

256:                                              ; preds = %252, %249
  br label %257

257:                                              ; preds = %256, %245
  br label %258

258:                                              ; preds = %257, %239
  br label %259

259:                                              ; preds = %258
  %260 = load %29*, %29** %5, align 8
  %261 = getelementptr inbounds %29, %29* %260, i32 0, i32 1
  %262 = bitcast %31* %261 to i32*
  store i32 2, i32* %262, align 8
  br label %263

263:                                              ; preds = %259
  br label %264

264:                                              ; preds = %263
  store i32 1, i32* %21, align 4
  br label %266

265:                                              ; preds = %227
  store i32 0, i32* %21, align 4
  br label %266

266:                                              ; preds = %265, %264
  %267 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #15
  %268 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #15
  %269 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #15
  %270 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #15
  %271 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271) #15
  %272 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #15
  %273 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #15
  %274 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #15
  %275 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #15
  %276 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #15
  %277 = load i32, i32* %21, align 4
  switch i32 %277, label %325 [
    i32 0, label %278
  ]

278:                                              ; preds = %266
  br label %279

279:                                              ; preds = %278
  br label %280

280:                                              ; preds = %279
  %281 = load %1*, %1** %4, align 8
  %282 = getelementptr inbounds %1, %1* %281, i32 0, i32 4
  %283 = getelementptr inbounds %29, %29* %282, i32 0, i32 2
  %284 = bitcast %32* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 1
  br i1 %286, label %287, label %289

287:                                              ; preds = %280
  %288 = call i64 @php_time()
  store i64 %288, i64* %8, align 8
  br label %289

289:                                              ; preds = %287, %280
  br label %290

290:                                              ; preds = %289
  %291 = bitcast %29** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %291) #15
  %292 = load %29*, %29** %5, align 8
  store %29* %292, %29** %22, align 8
  %293 = bitcast %28** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %293) #15
  %294 = load %28*, %28** %7, align 8
  %295 = getelementptr inbounds %28, %28* %294, i32 0, i32 3
  %296 = getelementptr inbounds [1 x i8], [1 x i8]* %295, i32 0, i32 0
  %297 = load %28*, %28** %7, align 8
  %298 = getelementptr inbounds %28, %28* %297, i32 0, i32 2
  %299 = load i64, i64* %298, align 8
  %300 = load i64, i64* %8, align 8
  %301 = load i32, i32* %6, align 4
  %302 = call %28* @php_format_date(i8* %296, i64 %299, i64 %300, i32 %301)
  store %28* %302, %28** %23, align 8
  %303 = load %28*, %28** %23, align 8
  %304 = load %29*, %29** %22, align 8
  %305 = getelementptr inbounds %29, %29* %304, i32 0, i32 0
  %306 = bitcast %30* %305 to %28**
  store %28* %303, %28** %306, align 8
  %307 = load %28*, %28** %23, align 8
  %308 = getelementptr inbounds %28, %28* %307, i32 0, i32 0
  %309 = getelementptr inbounds %8, %8* %308, i32 0, i32 1
  %310 = bitcast %9* %309 to %62*
  %311 = getelementptr inbounds %62, %62* %310, i32 0, i32 1
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i32
  %314 = and i32 %313, 2
  %315 = icmp ne i32 %314, 0
  %316 = zext i1 %315 to i64
  %317 = select i1 %315, i32 6, i32 5126
  %318 = load %29*, %29** %22, align 8
  %319 = getelementptr inbounds %29, %29* %318, i32 0, i32 1
  %320 = bitcast %31* %319 to i32*
  store i32 %317, i32* %320, align 8
  %321 = bitcast %28** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %321) #15
  %322 = bitcast %29** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %322) #15
  br label %323

323:                                              ; preds = %290
  br label %324

324:                                              ; preds = %323
  store i32 1, i32* %21, align 4
  br label %325

325:                                              ; preds = %324, %266
  %326 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %326) #15
  %327 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %327) #15
  ret void
}

declare dso_local void @zend_wrong_parameters_count_error(i8 zeroext, i32, i32, i32) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @468(%29* %0, %28** %1, i32 %2) #6 {
  %4 = alloca i32, align 4
  %5 = alloca %29*, align 8
  %6 = alloca %28**, align 8
  %7 = alloca i32, align 4
  store %29* %0, %29** %5, align 8
  store %28** %1, %28*** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %29*, %29** %5, align 8
  %9 = call zeroext i8 @490(%29* %8)
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 6
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = call i64 @llvm.expect.i64(i64 %15, i64 1)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %3
  %19 = load %29*, %29** %5, align 8
  %20 = getelementptr inbounds %29, %29* %19, i32 0, i32 0
  %21 = bitcast %30* %20 to %28**
  %22 = load %28*, %28** %21, align 8
  %23 = load %28**, %28*** %6, align 8
  store %28* %22, %28** %23, align 8
  br label %39

24:                                               ; preds = %3
  %25 = load i32, i32* %7, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = load %29*, %29** %5, align 8
  %29 = call zeroext i8 @490(%29* %28)
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = load %28**, %28*** %6, align 8
  store %28* null, %28** %33, align 8
  br label %38

34:                                               ; preds = %27, %24
  %35 = load %29*, %29** %5, align 8
  %36 = load %28**, %28*** %6, align 8
  %37 = call i32 @zend_parse_arg_str_slow(%29* %35, %28** %36)
  store i32 %37, i32* %4, align 4
  br label %40

38:                                               ; preds = %32
  br label %39

39:                                               ; preds = %38, %18
  store i32 1, i32* %4, align 4
  br label %40

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %4, align 4
  ret i32 %41
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @469(%29* %0, i64* %1, i8* %2, i32 %3, i32 %4) #6 {
  %6 = alloca i32, align 4
  %7 = alloca %29*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %29* %0, %29** %7, align 8
  store i64* %1, i64** %8, align 8
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %12 = load i32, i32* %10, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = load i8*, i8** %9, align 8
  store i8 0, i8* %15, align 1
  br label %16

16:                                               ; preds = %14, %5
  %17 = load %29*, %29** %7, align 8
  %18 = call zeroext i8 @490(%29* %17)
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 4
  %21 = xor i1 %20, true
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i32
  %24 = sext i32 %23 to i64
  %25 = call i64 @llvm.expect.i64(i64 %24, i64 1)
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %16
  %28 = load %29*, %29** %7, align 8
  %29 = getelementptr inbounds %29, %29* %28, i32 0, i32 0
  %30 = bitcast %30* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = load i64*, i64** %8, align 8
  store i64 %31, i64* %32, align 8
  br label %56

33:                                               ; preds = %16
  %34 = load i32, i32* %10, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %33
  %37 = load %29*, %29** %7, align 8
  %38 = call zeroext i8 @490(%29* %37)
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = load i8*, i8** %9, align 8
  store i8 1, i8* %42, align 1
  %43 = load i64*, i64** %8, align 8
  store i64 0, i64* %43, align 8
  br label %55

44:                                               ; preds = %36, %33
  %45 = load i32, i32* %11, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = load %29*, %29** %7, align 8
  %49 = load i64*, i64** %8, align 8
  %50 = call i32 @zend_parse_arg_long_cap_slow(%29* %48, i64* %49)
  store i32 %50, i32* %6, align 4
  br label %57

51:                                               ; preds = %44
  %52 = load %29*, %29** %7, align 8
  %53 = load i64*, i64** %8, align 8
  %54 = call i32 @zend_parse_arg_long_slow(%29* %52, i64* %53)
  store i32 %54, i32* %6, align 4
  br label %57

55:                                               ; preds = %41
  br label %56

56:                                               ; preds = %55, %27
  store i32 1, i32* %6, align 4
  br label %57

57:                                               ; preds = %56, %51, %47
  %58 = load i32, i32* %6, align 4
  ret i32 %58
}

declare dso_local void @zend_wrong_callback_error(i8 zeroext, i32, i32, i8*) #4

declare dso_local void @zend_wrong_parameter_class_error(i8 zeroext, i32, i8*, %29*) #4

declare dso_local void @zend_wrong_parameter_type_error(i8 zeroext, i32, i32, %29*) #4

; Function Attrs: nounwind uwtable
define dso_local void @php_date_set_tzdb(%41* %0) #0 {
  %2 = alloca %41*, align 8
  %3 = alloca %41*, align 8
  store %41* %0, %41** %2, align 8
  %4 = bitcast %41** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = call %41* @timelib_builtin_db()
  store %41* %5, %41** %3, align 8
  %6 = load %41*, %41** %2, align 8
  %7 = getelementptr inbounds %41, %41* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = load %41*, %41** %3, align 8
  %10 = getelementptr inbounds %41, %41* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = call i32 @php_version_compare(i8* %8, i8* %11)
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %1
  %15 = load %41*, %41** %2, align 8
  store %41* %15, %41** @php_date_global_timezone_db, align 8
  store i32 1, i32* @php_date_global_timezone_db_enabled, align 4
  br label %16

16:                                               ; preds = %14, %1
  %17 = bitcast %41** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #15
  ret void
}

declare dso_local i32 @php_version_compare(i8*, i8*) #4

; Function Attrs: nounwind uwtable
define dso_local i64 @php_parse_date(i8* %0, i64* %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %52*, align 8
  %7 = alloca %34*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64* %1, i64** %5, align 8
  %11 = bitcast %52** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  store %34* null, %34** %7, align 8
  %13 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #15
  %14 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  %15 = load i8*, i8** %4, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = call i64 @strlen(i8* %16) #16
  %18 = load %41*, %41** @php_date_global_timezone_db, align 8
  %19 = icmp ne %41* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %24

22:                                               ; preds = %2
  %23 = call %41* @timelib_builtin_db()
  br label %24

24:                                               ; preds = %22, %20
  %25 = phi %41* [ %21, %20 ], [ %23, %22 ]
  %26 = call %52* @timelib_strtotime(i8* %15, i64 %17, %34** %7, %41* %25, %53* (i8*, %41*, i32*)* @php_date_parse_tzfile_wrapper)
  store %52* %26, %52** %6, align 8
  %27 = load %34*, %34** %7, align 8
  %28 = getelementptr inbounds %34, %34* %27, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = load %52*, %52** %6, align 8
  call void @timelib_time_dtor(%52* %32)
  %33 = load %34*, %34** %7, align 8
  call void @timelib_error_container_dtor(%34* %33)
  store i64 -1, i64* %3, align 8
  store i32 1, i32* %10, align 4
  br label %45

34:                                               ; preds = %24
  %35 = load %34*, %34** %7, align 8
  call void @timelib_error_container_dtor(%34* %35)
  %36 = load %52*, %52** %6, align 8
  call void @timelib_update_ts(%52* %36, %53* null)
  %37 = load %52*, %52** %6, align 8
  %38 = call i64 @timelib_date_to_int(%52* %37, i32* %8)
  store i64 %38, i64* %9, align 8
  %39 = load %52*, %52** %6, align 8
  call void @timelib_time_dtor(%52* %39)
  %40 = load i32, i32* %8, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  store i64 -1, i64* %3, align 8
  store i32 1, i32* %10, align 4
  br label %45

43:                                               ; preds = %34
  %44 = load i64, i64* %9, align 8
  store i64 %44, i64* %3, align 8
  store i32 1, i32* %10, align 4
  br label %45

45:                                               ; preds = %43, %42, %31
  %46 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #15
  %47 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %47) #15
  %48 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #15
  %49 = bitcast %52** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #15
  %50 = load i64, i64* %3, align 8
  ret i64 %50
}

declare dso_local %52* @timelib_strtotime(i8*, i64, %34**, %41*, %53* (i8*, %41*, i32*)*) #4

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

declare dso_local void @timelib_update_ts(%52*, %53*) #4

declare dso_local i64 @timelib_date_to_int(%52*, i32*) #4

declare dso_local void @timelib_fill_holes(%52*, %52*, i32) #4

; Function Attrs: nounwind uwtable
define dso_local void @php_mktime(%1* %0, %29* %1, i32 %2) #0 {
  %4 = alloca %1*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %52*, align 8
  %14 = alloca %53*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %29*, align 8
  %24 = alloca %29*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i8*, align 8
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %29*, align 8
  store %1* %0, %1** %4, align 8
  store %29* %1, %29** %5, align 8
  store i32 %2, i32* %6, align 4
  %32 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #15
  store i64 0, i64* %7, align 8
  %33 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #15
  store i64 0, i64* %8, align 8
  %34 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #15
  store i64 0, i64* %9, align 8
  %35 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  store i64 0, i64* %10, align 8
  %36 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store i64 0, i64* %11, align 8
  %37 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  store i64 0, i64* %12, align 8
  %38 = bitcast %52** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  %39 = bitcast %53** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #15
  store %53* null, %53** %14, align 8
  %40 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  %41 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #15
  store i64 0, i64* %16, align 8
  %42 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #15
  br label %43

43:                                               ; preds = %3
  %44 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #15
  store i32 0, i32* %18, align 4
  %45 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #15
  store i32 0, i32* %19, align 4
  %46 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #15
  store i32 6, i32* %20, align 4
  %47 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #15
  %48 = load %1*, %1** %4, align 8
  %49 = getelementptr inbounds %1, %1* %48, i32 0, i32 4
  %50 = getelementptr inbounds %29, %29* %49, i32 0, i32 2
  %51 = bitcast %32* %50 to i32*
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %21, align 4
  %53 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #15
  %54 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #15
  %55 = bitcast %29** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #15
  store %29* null, %29** %24, align 8
  %56 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %56) #15
  store i32 0, i32* %25, align 4
  %57 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #15
  store i8* null, i8** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %27) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %28) #15
  store i8 0, i8* %28, align 1
  %58 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #15
  store i32 0, i32* %29, align 4
  %59 = load i32, i32* %22, align 4
  %60 = load %29*, %29** %23, align 8
  %61 = load %29*, %29** %24, align 8
  %62 = load i32, i32* %25, align 4
  %63 = load i8*, i8** %26, align 8
  %64 = load i8, i8* %27, align 1
  %65 = load i8, i8* %28, align 1
  br label %66

66:                                               ; preds = %43
  %67 = load i32, i32* %21, align 4
  %68 = load i32, i32* %19, align 4
  %69 = icmp slt i32 %67, %68
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 0)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %95, label %76

76:                                               ; preds = %66
  %77 = load i32, i32* %21, align 4
  %78 = load i32, i32* %20, align 4
  %79 = icmp sgt i32 %77, %78
  %80 = xor i1 %79, true
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = call i64 @llvm.expect.i64(i64 %83, i64 0)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %99

86:                                               ; preds = %76
  %87 = load i32, i32* %20, align 4
  %88 = icmp sge i32 %87, 0
  %89 = xor i1 %88, true
  %90 = xor i1 %89, true
  %91 = zext i1 %90 to i32
  %92 = sext i32 %91 to i64
  %93 = call i64 @llvm.expect.i64(i64 %92, i64 1)
  %94 = icmp ne i64 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %86, %66
  %96 = load i32, i32* %21, align 4
  %97 = load i32, i32* %19, align 4
  %98 = load i32, i32* %20, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %96, i32 %97, i32 %98)
  store i32 1, i32* %29, align 4
  br label %524

99:                                               ; preds = %86, %76
  store i32 0, i32* %22, align 4
  %100 = load %1*, %1** %4, align 8
  %101 = bitcast %1* %100 to %29*
  %102 = getelementptr inbounds %29, %29* %101, i64 4
  store %29* %102, %29** %23, align 8
  store i8 1, i8* %28, align 1
  %103 = load i32, i32* %22, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %22, align 4
  br label %105

105:                                              ; preds = %99
  %106 = load i32, i32* %22, align 4
  %107 = load i32, i32* %19, align 4
  %108 = icmp sle i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %28, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 1
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  br label %124

124:                                              ; preds = %123
  %125 = load i32, i32* %22, align 4
  %126 = load i32, i32* %19, align 4
  %127 = icmp sgt i32 %125, %126
  br i1 %127, label %132, label %128

128:                                              ; preds = %124
  %129 = load i8, i8* %28, align 1
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, 0
  br label %132

132:                                              ; preds = %128, %124
  %133 = phi i1 [ true, %124 ], [ %131, %128 ]
  %134 = xor i1 %133, true
  %135 = zext i1 %134 to i32
  %136 = sext i32 %135 to i64
  %137 = call i64 @llvm.expect.i64(i64 %136, i64 0)
  %138 = icmp ne i64 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %132
  unreachable

140:                                              ; preds = %132
  br label %141

141:                                              ; preds = %140
  br label %142

142:                                              ; preds = %141
  %143 = load i8, i8* %28, align 1
  %144 = icmp ne i8 %143, 0
  br i1 %144, label %145, label %157

145:                                              ; preds = %142
  %146 = load i32, i32* %22, align 4
  %147 = load i32, i32* %21, align 4
  %148 = icmp sgt i32 %146, %147
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = zext i1 %150 to i32
  %152 = sext i32 %151 to i64
  %153 = call i64 @llvm.expect.i64(i64 %152, i64 0)
  %154 = icmp ne i64 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %145
  br label %524

156:                                              ; preds = %145
  br label %157

157:                                              ; preds = %156, %142
  %158 = load %29*, %29** %23, align 8
  %159 = getelementptr inbounds %29, %29* %158, i32 1
  store %29* %159, %29** %23, align 8
  %160 = load %29*, %29** %23, align 8
  store %29* %160, %29** %24, align 8
  %161 = load %29*, %29** %24, align 8
  %162 = call i32 @469(%29* %161, i64* %7, i8* %27, i32 0, i32 0)
  %163 = icmp ne i32 %162, 0
  %164 = xor i1 %163, true
  %165 = xor i1 %164, true
  %166 = xor i1 %165, true
  %167 = zext i1 %166 to i32
  %168 = sext i32 %167 to i64
  %169 = call i64 @llvm.expect.i64(i64 %168, i64 0)
  %170 = icmp ne i64 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %157
  store i32 0, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %524

172:                                              ; preds = %157
  %173 = load i32, i32* %22, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %22, align 4
  br label %175

175:                                              ; preds = %172
  %176 = load i32, i32* %22, align 4
  %177 = load i32, i32* %19, align 4
  %178 = icmp sle i32 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = load i8, i8* %28, align 1
  %181 = zext i8 %180 to i32
  %182 = icmp eq i32 %181, 1
  br label %183

183:                                              ; preds = %179, %175
  %184 = phi i1 [ true, %175 ], [ %182, %179 ]
  %185 = xor i1 %184, true
  %186 = zext i1 %185 to i32
  %187 = sext i32 %186 to i64
  %188 = call i64 @llvm.expect.i64(i64 %187, i64 0)
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %183
  unreachable

191:                                              ; preds = %183
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  br label %194

194:                                              ; preds = %193
  %195 = load i32, i32* %22, align 4
  %196 = load i32, i32* %19, align 4
  %197 = icmp sgt i32 %195, %196
  br i1 %197, label %202, label %198

198:                                              ; preds = %194
  %199 = load i8, i8* %28, align 1
  %200 = zext i8 %199 to i32
  %201 = icmp eq i32 %200, 0
  br label %202

202:                                              ; preds = %198, %194
  %203 = phi i1 [ true, %194 ], [ %201, %198 ]
  %204 = xor i1 %203, true
  %205 = zext i1 %204 to i32
  %206 = sext i32 %205 to i64
  %207 = call i64 @llvm.expect.i64(i64 %206, i64 0)
  %208 = icmp ne i64 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %202
  unreachable

210:                                              ; preds = %202
  br label %211

211:                                              ; preds = %210
  br label %212

212:                                              ; preds = %211
  %213 = load i8, i8* %28, align 1
  %214 = icmp ne i8 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %212
  %216 = load i32, i32* %22, align 4
  %217 = load i32, i32* %21, align 4
  %218 = icmp sgt i32 %216, %217
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = zext i1 %220 to i32
  %222 = sext i32 %221 to i64
  %223 = call i64 @llvm.expect.i64(i64 %222, i64 0)
  %224 = icmp ne i64 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %215
  br label %524

226:                                              ; preds = %215
  br label %227

227:                                              ; preds = %226, %212
  %228 = load %29*, %29** %23, align 8
  %229 = getelementptr inbounds %29, %29* %228, i32 1
  store %29* %229, %29** %23, align 8
  %230 = load %29*, %29** %23, align 8
  store %29* %230, %29** %24, align 8
  %231 = load %29*, %29** %24, align 8
  %232 = call i32 @469(%29* %231, i64* %8, i8* %27, i32 0, i32 0)
  %233 = icmp ne i32 %232, 0
  %234 = xor i1 %233, true
  %235 = xor i1 %234, true
  %236 = xor i1 %235, true
  %237 = zext i1 %236 to i32
  %238 = sext i32 %237 to i64
  %239 = call i64 @llvm.expect.i64(i64 %238, i64 0)
  %240 = icmp ne i64 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %227
  store i32 0, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %524

242:                                              ; preds = %227
  %243 = load i32, i32* %22, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %22, align 4
  br label %245

245:                                              ; preds = %242
  %246 = load i32, i32* %22, align 4
  %247 = load i32, i32* %19, align 4
  %248 = icmp sle i32 %246, %247
  br i1 %248, label %253, label %249

249:                                              ; preds = %245
  %250 = load i8, i8* %28, align 1
  %251 = zext i8 %250 to i32
  %252 = icmp eq i32 %251, 1
  br label %253

253:                                              ; preds = %249, %245
  %254 = phi i1 [ true, %245 ], [ %252, %249 ]
  %255 = xor i1 %254, true
  %256 = zext i1 %255 to i32
  %257 = sext i32 %256 to i64
  %258 = call i64 @llvm.expect.i64(i64 %257, i64 0)
  %259 = icmp ne i64 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %253
  unreachable

261:                                              ; preds = %253
  br label %262

262:                                              ; preds = %261
  br label %263

263:                                              ; preds = %262
  br label %264

264:                                              ; preds = %263
  %265 = load i32, i32* %22, align 4
  %266 = load i32, i32* %19, align 4
  %267 = icmp sgt i32 %265, %266
  br i1 %267, label %272, label %268

268:                                              ; preds = %264
  %269 = load i8, i8* %28, align 1
  %270 = zext i8 %269 to i32
  %271 = icmp eq i32 %270, 0
  br label %272

272:                                              ; preds = %268, %264
  %273 = phi i1 [ true, %264 ], [ %271, %268 ]
  %274 = xor i1 %273, true
  %275 = zext i1 %274 to i32
  %276 = sext i32 %275 to i64
  %277 = call i64 @llvm.expect.i64(i64 %276, i64 0)
  %278 = icmp ne i64 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %272
  unreachable

280:                                              ; preds = %272
  br label %281

281:                                              ; preds = %280
  br label %282

282:                                              ; preds = %281
  %283 = load i8, i8* %28, align 1
  %284 = icmp ne i8 %283, 0
  br i1 %284, label %285, label %297

285:                                              ; preds = %282
  %286 = load i32, i32* %22, align 4
  %287 = load i32, i32* %21, align 4
  %288 = icmp sgt i32 %286, %287
  %289 = xor i1 %288, true
  %290 = xor i1 %289, true
  %291 = zext i1 %290 to i32
  %292 = sext i32 %291 to i64
  %293 = call i64 @llvm.expect.i64(i64 %292, i64 0)
  %294 = icmp ne i64 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %285
  br label %524

296:                                              ; preds = %285
  br label %297

297:                                              ; preds = %296, %282
  %298 = load %29*, %29** %23, align 8
  %299 = getelementptr inbounds %29, %29* %298, i32 1
  store %29* %299, %29** %23, align 8
  %300 = load %29*, %29** %23, align 8
  store %29* %300, %29** %24, align 8
  %301 = load %29*, %29** %24, align 8
  %302 = call i32 @469(%29* %301, i64* %9, i8* %27, i32 0, i32 0)
  %303 = icmp ne i32 %302, 0
  %304 = xor i1 %303, true
  %305 = xor i1 %304, true
  %306 = xor i1 %305, true
  %307 = zext i1 %306 to i32
  %308 = sext i32 %307 to i64
  %309 = call i64 @llvm.expect.i64(i64 %308, i64 0)
  %310 = icmp ne i64 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %297
  store i32 0, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %524

312:                                              ; preds = %297
  %313 = load i32, i32* %22, align 4
  %314 = add nsw i32 %313, 1
  store i32 %314, i32* %22, align 4
  br label %315

315:                                              ; preds = %312
  %316 = load i32, i32* %22, align 4
  %317 = load i32, i32* %19, align 4
  %318 = icmp sle i32 %316, %317
  br i1 %318, label %323, label %319

319:                                              ; preds = %315
  %320 = load i8, i8* %28, align 1
  %321 = zext i8 %320 to i32
  %322 = icmp eq i32 %321, 1
  br label %323

323:                                              ; preds = %319, %315
  %324 = phi i1 [ true, %315 ], [ %322, %319 ]
  %325 = xor i1 %324, true
  %326 = zext i1 %325 to i32
  %327 = sext i32 %326 to i64
  %328 = call i64 @llvm.expect.i64(i64 %327, i64 0)
  %329 = icmp ne i64 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %323
  unreachable

331:                                              ; preds = %323
  br label %332

332:                                              ; preds = %331
  br label %333

333:                                              ; preds = %332
  br label %334

334:                                              ; preds = %333
  %335 = load i32, i32* %22, align 4
  %336 = load i32, i32* %19, align 4
  %337 = icmp sgt i32 %335, %336
  br i1 %337, label %342, label %338

338:                                              ; preds = %334
  %339 = load i8, i8* %28, align 1
  %340 = zext i8 %339 to i32
  %341 = icmp eq i32 %340, 0
  br label %342

342:                                              ; preds = %338, %334
  %343 = phi i1 [ true, %334 ], [ %341, %338 ]
  %344 = xor i1 %343, true
  %345 = zext i1 %344 to i32
  %346 = sext i32 %345 to i64
  %347 = call i64 @llvm.expect.i64(i64 %346, i64 0)
  %348 = icmp ne i64 %347, 0
  br i1 %348, label %349, label %350

349:                                              ; preds = %342
  unreachable

350:                                              ; preds = %342
  br label %351

351:                                              ; preds = %350
  br label %352

352:                                              ; preds = %351
  %353 = load i8, i8* %28, align 1
  %354 = icmp ne i8 %353, 0
  br i1 %354, label %355, label %367

355:                                              ; preds = %352
  %356 = load i32, i32* %22, align 4
  %357 = load i32, i32* %21, align 4
  %358 = icmp sgt i32 %356, %357
  %359 = xor i1 %358, true
  %360 = xor i1 %359, true
  %361 = zext i1 %360 to i32
  %362 = sext i32 %361 to i64
  %363 = call i64 @llvm.expect.i64(i64 %362, i64 0)
  %364 = icmp ne i64 %363, 0
  br i1 %364, label %365, label %366

365:                                              ; preds = %355
  br label %524

366:                                              ; preds = %355
  br label %367

367:                                              ; preds = %366, %352
  %368 = load %29*, %29** %23, align 8
  %369 = getelementptr inbounds %29, %29* %368, i32 1
  store %29* %369, %29** %23, align 8
  %370 = load %29*, %29** %23, align 8
  store %29* %370, %29** %24, align 8
  %371 = load %29*, %29** %24, align 8
  %372 = call i32 @469(%29* %371, i64* %10, i8* %27, i32 0, i32 0)
  %373 = icmp ne i32 %372, 0
  %374 = xor i1 %373, true
  %375 = xor i1 %374, true
  %376 = xor i1 %375, true
  %377 = zext i1 %376 to i32
  %378 = sext i32 %377 to i64
  %379 = call i64 @llvm.expect.i64(i64 %378, i64 0)
  %380 = icmp ne i64 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %367
  store i32 0, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %524

382:                                              ; preds = %367
  %383 = load i32, i32* %22, align 4
  %384 = add nsw i32 %383, 1
  store i32 %384, i32* %22, align 4
  br label %385

385:                                              ; preds = %382
  %386 = load i32, i32* %22, align 4
  %387 = load i32, i32* %19, align 4
  %388 = icmp sle i32 %386, %387
  br i1 %388, label %393, label %389

389:                                              ; preds = %385
  %390 = load i8, i8* %28, align 1
  %391 = zext i8 %390 to i32
  %392 = icmp eq i32 %391, 1
  br label %393

393:                                              ; preds = %389, %385
  %394 = phi i1 [ true, %385 ], [ %392, %389 ]
  %395 = xor i1 %394, true
  %396 = zext i1 %395 to i32
  %397 = sext i32 %396 to i64
  %398 = call i64 @llvm.expect.i64(i64 %397, i64 0)
  %399 = icmp ne i64 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %393
  unreachable

401:                                              ; preds = %393
  br label %402

402:                                              ; preds = %401
  br label %403

403:                                              ; preds = %402
  br label %404

404:                                              ; preds = %403
  %405 = load i32, i32* %22, align 4
  %406 = load i32, i32* %19, align 4
  %407 = icmp sgt i32 %405, %406
  br i1 %407, label %412, label %408

408:                                              ; preds = %404
  %409 = load i8, i8* %28, align 1
  %410 = zext i8 %409 to i32
  %411 = icmp eq i32 %410, 0
  br label %412

412:                                              ; preds = %408, %404
  %413 = phi i1 [ true, %404 ], [ %411, %408 ]
  %414 = xor i1 %413, true
  %415 = zext i1 %414 to i32
  %416 = sext i32 %415 to i64
  %417 = call i64 @llvm.expect.i64(i64 %416, i64 0)
  %418 = icmp ne i64 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %412
  unreachable

420:                                              ; preds = %412
  br label %421

421:                                              ; preds = %420
  br label %422

422:                                              ; preds = %421
  %423 = load i8, i8* %28, align 1
  %424 = icmp ne i8 %423, 0
  br i1 %424, label %425, label %437

425:                                              ; preds = %422
  %426 = load i32, i32* %22, align 4
  %427 = load i32, i32* %21, align 4
  %428 = icmp sgt i32 %426, %427
  %429 = xor i1 %428, true
  %430 = xor i1 %429, true
  %431 = zext i1 %430 to i32
  %432 = sext i32 %431 to i64
  %433 = call i64 @llvm.expect.i64(i64 %432, i64 0)
  %434 = icmp ne i64 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %425
  br label %524

436:                                              ; preds = %425
  br label %437

437:                                              ; preds = %436, %422
  %438 = load %29*, %29** %23, align 8
  %439 = getelementptr inbounds %29, %29* %438, i32 1
  store %29* %439, %29** %23, align 8
  %440 = load %29*, %29** %23, align 8
  store %29* %440, %29** %24, align 8
  %441 = load %29*, %29** %24, align 8
  %442 = call i32 @469(%29* %441, i64* %11, i8* %27, i32 0, i32 0)
  %443 = icmp ne i32 %442, 0
  %444 = xor i1 %443, true
  %445 = xor i1 %444, true
  %446 = xor i1 %445, true
  %447 = zext i1 %446 to i32
  %448 = sext i32 %447 to i64
  %449 = call i64 @llvm.expect.i64(i64 %448, i64 0)
  %450 = icmp ne i64 %449, 0
  br i1 %450, label %451, label %452

451:                                              ; preds = %437
  store i32 0, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %524

452:                                              ; preds = %437
  %453 = load i32, i32* %22, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %22, align 4
  br label %455

455:                                              ; preds = %452
  %456 = load i32, i32* %22, align 4
  %457 = load i32, i32* %19, align 4
  %458 = icmp sle i32 %456, %457
  br i1 %458, label %463, label %459

459:                                              ; preds = %455
  %460 = load i8, i8* %28, align 1
  %461 = zext i8 %460 to i32
  %462 = icmp eq i32 %461, 1
  br label %463

463:                                              ; preds = %459, %455
  %464 = phi i1 [ true, %455 ], [ %462, %459 ]
  %465 = xor i1 %464, true
  %466 = zext i1 %465 to i32
  %467 = sext i32 %466 to i64
  %468 = call i64 @llvm.expect.i64(i64 %467, i64 0)
  %469 = icmp ne i64 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %463
  unreachable

471:                                              ; preds = %463
  br label %472

472:                                              ; preds = %471
  br label %473

473:                                              ; preds = %472
  br label %474

474:                                              ; preds = %473
  %475 = load i32, i32* %22, align 4
  %476 = load i32, i32* %19, align 4
  %477 = icmp sgt i32 %475, %476
  br i1 %477, label %482, label %478

478:                                              ; preds = %474
  %479 = load i8, i8* %28, align 1
  %480 = zext i8 %479 to i32
  %481 = icmp eq i32 %480, 0
  br label %482

482:                                              ; preds = %478, %474
  %483 = phi i1 [ true, %474 ], [ %481, %478 ]
  %484 = xor i1 %483, true
  %485 = zext i1 %484 to i32
  %486 = sext i32 %485 to i64
  %487 = call i64 @llvm.expect.i64(i64 %486, i64 0)
  %488 = icmp ne i64 %487, 0
  br i1 %488, label %489, label %490

489:                                              ; preds = %482
  unreachable

490:                                              ; preds = %482
  br label %491

491:                                              ; preds = %490
  br label %492

492:                                              ; preds = %491
  %493 = load i8, i8* %28, align 1
  %494 = icmp ne i8 %493, 0
  br i1 %494, label %495, label %507

495:                                              ; preds = %492
  %496 = load i32, i32* %22, align 4
  %497 = load i32, i32* %21, align 4
  %498 = icmp sgt i32 %496, %497
  %499 = xor i1 %498, true
  %500 = xor i1 %499, true
  %501 = zext i1 %500 to i32
  %502 = sext i32 %501 to i64
  %503 = call i64 @llvm.expect.i64(i64 %502, i64 0)
  %504 = icmp ne i64 %503, 0
  br i1 %504, label %505, label %506

505:                                              ; preds = %495
  br label %524

506:                                              ; preds = %495
  br label %507

507:                                              ; preds = %506, %492
  %508 = load %29*, %29** %23, align 8
  %509 = getelementptr inbounds %29, %29* %508, i32 1
  store %29* %509, %29** %23, align 8
  %510 = load %29*, %29** %23, align 8
  store %29* %510, %29** %24, align 8
  %511 = load %29*, %29** %24, align 8
  %512 = call i32 @469(%29* %511, i64* %12, i8* %27, i32 0, i32 0)
  %513 = icmp ne i32 %512, 0
  %514 = xor i1 %513, true
  %515 = xor i1 %514, true
  %516 = xor i1 %515, true
  %517 = zext i1 %516 to i32
  %518 = sext i32 %517 to i64
  %519 = call i64 @llvm.expect.i64(i64 %518, i64 0)
  %520 = icmp ne i64 %519, 0
  br i1 %520, label %521, label %522

521:                                              ; preds = %507
  store i32 0, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %524

522:                                              ; preds = %507
  br label %523

523:                                              ; preds = %522
  br label %524

524:                                              ; preds = %523, %521, %505, %451, %435, %381, %365, %311, %295, %241, %225, %171, %155, %95
  %525 = load i32, i32* %29, align 4
  %526 = icmp ne i32 %525, 0
  %527 = xor i1 %526, true
  %528 = xor i1 %527, true
  %529 = zext i1 %528 to i32
  %530 = sext i32 %529 to i64
  %531 = call i64 @llvm.expect.i64(i64 %530, i64 0)
  %532 = icmp ne i64 %531, 0
  br i1 %532, label %533, label %562

533:                                              ; preds = %524
  %534 = load i32, i32* %29, align 4
  %535 = icmp eq i32 %534, 2
  br i1 %535, label %536, label %539

536:                                              ; preds = %533
  %537 = load i32, i32* %22, align 4
  %538 = load i8*, i8** %26, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %537, i8* %538)
  br label %555

539:                                              ; preds = %533
  %540 = load i32, i32* %29, align 4
  %541 = icmp eq i32 %540, 3
  br i1 %541, label %542, label %546

542:                                              ; preds = %539
  %543 = load i32, i32* %22, align 4
  %544 = load i8*, i8** %26, align 8
  %545 = load %29*, %29** %24, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %543, i8* %544, %29* %545)
  br label %554

546:                                              ; preds = %539
  %547 = load i32, i32* %29, align 4
  %548 = icmp eq i32 %547, 4
  br i1 %548, label %549, label %553

549:                                              ; preds = %546
  %550 = load i32, i32* %22, align 4
  %551 = load i32, i32* %25, align 4
  %552 = load %29*, %29** %24, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %550, i32 %551, %29* %552)
  br label %553

553:                                              ; preds = %549, %546
  br label %554

554:                                              ; preds = %553, %542
  br label %555

555:                                              ; preds = %554, %536
  br label %556

556:                                              ; preds = %555
  %557 = load %29*, %29** %5, align 8
  %558 = getelementptr inbounds %29, %29* %557, i32 0, i32 1
  %559 = bitcast %31* %558 to i32*
  store i32 2, i32* %559, align 8
  br label %560

560:                                              ; preds = %556
  br label %561

561:                                              ; preds = %560
  store i32 1, i32* %30, align 4
  br label %563

562:                                              ; preds = %524
  store i32 0, i32* %30, align 4
  br label %563

563:                                              ; preds = %562, %561
  %564 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %564) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %28) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %27) #15
  %565 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %565) #15
  %566 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %566) #15
  %567 = bitcast %29** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %567) #15
  %568 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %568) #15
  %569 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %569) #15
  %570 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %570) #15
  %571 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %571) #15
  %572 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %572) #15
  %573 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %573) #15
  %574 = load i32, i32* %30, align 4
  switch i32 %574, label %678 [
    i32 0, label %575
  ]

575:                                              ; preds = %563
  br label %576

576:                                              ; preds = %575
  br label %577

577:                                              ; preds = %576
  %578 = call %52* @timelib_time_ctor()
  store %52* %578, %52** %13, align 8
  %579 = load i32, i32* %6, align 4
  %580 = icmp ne i32 %579, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %577
  %582 = load %52*, %52** %13, align 8
  %583 = call i64 @php_time()
  call void @timelib_unixtime2gmt(%52* %582, i64 %583)
  br label %593

584:                                              ; preds = %577
  %585 = call %53* @get_timezone_info()
  store %53* %585, %53** %14, align 8
  %586 = load %53*, %53** %14, align 8
  %587 = load %52*, %52** %13, align 8
  %588 = getelementptr inbounds %52, %52* %587, i32 0, i32 9
  store %53* %586, %53** %588, align 8
  %589 = load %52*, %52** %13, align 8
  %590 = getelementptr inbounds %52, %52* %589, i32 0, i32 21
  store i32 3, i32* %590, align 8
  %591 = load %52*, %52** %13, align 8
  %592 = call i64 @php_time()
  call void @timelib_unixtime2local(%52* %591, i64 %592)
  br label %593

593:                                              ; preds = %584, %581
  %594 = load %1*, %1** %4, align 8
  %595 = getelementptr inbounds %1, %1* %594, i32 0, i32 4
  %596 = getelementptr inbounds %29, %29* %595, i32 0, i32 2
  %597 = bitcast %32* %596 to i32*
  %598 = load i32, i32* %597, align 4
  switch i32 %598, label %642 [
    i32 7, label %599
    i32 6, label %599
    i32 5, label %622
    i32 4, label %626
    i32 3, label %630
    i32 2, label %634
    i32 1, label %638
  ]

599:                                              ; preds = %593, %593
  %600 = load i64, i64* %12, align 8
  %601 = icmp sge i64 %600, 0
  br i1 %601, label %602, label %608

602:                                              ; preds = %599
  %603 = load i64, i64* %12, align 8
  %604 = icmp slt i64 %603, 70
  br i1 %604, label %605, label %608

605:                                              ; preds = %602
  %606 = load i64, i64* %12, align 8
  %607 = add nsw i64 %606, 2000
  store i64 %607, i64* %12, align 8
  br label %618

608:                                              ; preds = %602, %599
  %609 = load i64, i64* %12, align 8
  %610 = icmp sge i64 %609, 70
  br i1 %610, label %611, label %617

611:                                              ; preds = %608
  %612 = load i64, i64* %12, align 8
  %613 = icmp sle i64 %612, 100
  br i1 %613, label %614, label %617

614:                                              ; preds = %611
  %615 = load i64, i64* %12, align 8
  %616 = add nsw i64 %615, 1900
  store i64 %616, i64* %12, align 8
  br label %617

617:                                              ; preds = %614, %611, %608
  br label %618

618:                                              ; preds = %617, %605
  %619 = load i64, i64* %12, align 8
  %620 = load %52*, %52** %13, align 8
  %621 = getelementptr inbounds %52, %52* %620, i32 0, i32 0
  store i64 %619, i64* %621, align 8
  br label %622

622:                                              ; preds = %593, %618
  %623 = load i64, i64* %11, align 8
  %624 = load %52*, %52** %13, align 8
  %625 = getelementptr inbounds %52, %52* %624, i32 0, i32 2
  store i64 %623, i64* %625, align 8
  br label %626

626:                                              ; preds = %593, %622
  %627 = load i64, i64* %10, align 8
  %628 = load %52*, %52** %13, align 8
  %629 = getelementptr inbounds %52, %52* %628, i32 0, i32 1
  store i64 %627, i64* %629, align 8
  br label %630

630:                                              ; preds = %593, %626
  %631 = load i64, i64* %9, align 8
  %632 = load %52*, %52** %13, align 8
  %633 = getelementptr inbounds %52, %52* %632, i32 0, i32 5
  store i64 %631, i64* %633, align 8
  br label %634

634:                                              ; preds = %593, %630
  %635 = load i64, i64* %8, align 8
  %636 = load %52*, %52** %13, align 8
  %637 = getelementptr inbounds %52, %52* %636, i32 0, i32 4
  store i64 %635, i64* %637, align 8
  br label %638

638:                                              ; preds = %593, %634
  %639 = load i64, i64* %7, align 8
  %640 = load %52*, %52** %13, align 8
  %641 = getelementptr inbounds %52, %52* %640, i32 0, i32 3
  store i64 %639, i64* %641, align 8
  br label %643

642:                                              ; preds = %593
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8192, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @187, i32 0, i32 0))
  br label %643

643:                                              ; preds = %642, %638
  %644 = load i32, i32* %6, align 4
  %645 = icmp ne i32 %644, 0
  br i1 %645, label %646, label %648

646:                                              ; preds = %643
  %647 = load %52*, %52** %13, align 8
  call void @timelib_update_ts(%52* %647, %53* null)
  br label %651

648:                                              ; preds = %643
  %649 = load %52*, %52** %13, align 8
  %650 = load %53*, %53** %14, align 8
  call void @timelib_update_ts(%52* %649, %53* %650)
  br label %651

651:                                              ; preds = %648, %646
  %652 = load %52*, %52** %13, align 8
  %653 = call i64 @timelib_date_to_int(%52* %652, i32* %17)
  store i64 %653, i64* %15, align 8
  %654 = load i64, i64* %16, align 8
  %655 = load i64, i64* %15, align 8
  %656 = add nsw i64 %655, %654
  store i64 %656, i64* %15, align 8
  %657 = load %52*, %52** %13, align 8
  call void @timelib_time_dtor(%52* %657)
  %658 = load i32, i32* %17, align 4
  %659 = icmp ne i32 %658, 0
  br i1 %659, label %660, label %667

660:                                              ; preds = %651
  br label %661

661:                                              ; preds = %660
  %662 = load %29*, %29** %5, align 8
  %663 = getelementptr inbounds %29, %29* %662, i32 0, i32 1
  %664 = bitcast %31* %663 to i32*
  store i32 2, i32* %664, align 8
  br label %665

665:                                              ; preds = %661
  br label %666

666:                                              ; preds = %665
  store i32 1, i32* %30, align 4
  br label %678

667:                                              ; preds = %651
  %668 = bitcast %29** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %668) #15
  %669 = load %29*, %29** %5, align 8
  store %29* %669, %29** %31, align 8
  %670 = load i64, i64* %15, align 8
  %671 = load %29*, %29** %31, align 8
  %672 = getelementptr inbounds %29, %29* %671, i32 0, i32 0
  %673 = bitcast %30* %672 to i64*
  store i64 %670, i64* %673, align 8
  %674 = load %29*, %29** %31, align 8
  %675 = getelementptr inbounds %29, %29* %674, i32 0, i32 1
  %676 = bitcast %31* %675 to i32*
  store i32 4, i32* %676, align 8
  %677 = bitcast %29** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %677) #15
  store i32 1, i32* %30, align 4
  br label %678

678:                                              ; preds = %667, %666, %563
  %679 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %679) #15
  %680 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %680) #15
  %681 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %681) #15
  %682 = bitcast %53** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %682) #15
  %683 = bitcast %52** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %683) #15
  %684 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %684) #15
  %685 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %685) #15
  %686 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %686) #15
  %687 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %687) #15
  %688 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %688) #15
  %689 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %689) #15
  ret void
}

declare dso_local i32 @timelib_valid_date(i64, i64, i64) #4

; Function Attrs: nounwind uwtable
define dso_local void @php_strftime(%1* %0, %29* %1, i32 %2) #0 {
  %4 = alloca %1*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %28*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %74, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %52*, align 8
  %14 = alloca %53*, align 8
  %15 = alloca %67*, align 8
  %16 = alloca %28*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %29*, align 8
  %23 = alloca %29*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %29*, align 8
  %31 = alloca %28*, align 8
  store %1* %0, %1** %4, align 8
  store %29* %1, %29** %5, align 8
  store i32 %2, i32* %6, align 4
  %32 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #15
  %33 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #15
  store i64 0, i64* %8, align 8
  %34 = bitcast %74* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* %34) #15
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #15
  store i32 5, i32* %10, align 4
  %36 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #15
  store i64 256, i64* %11, align 8
  %37 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  %38 = bitcast %52** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  %39 = bitcast %53** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #15
  %40 = bitcast %67** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  store %67* null, %67** %15, align 8
  %41 = bitcast %28** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #15
  %42 = call i64 @php_time()
  store i64 %42, i64* %8, align 8
  br label %43

43:                                               ; preds = %3
  %44 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #15
  store i32 0, i32* %17, align 4
  %45 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #15
  store i32 1, i32* %18, align 4
  %46 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #15
  store i32 2, i32* %19, align 4
  %47 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #15
  %48 = load %1*, %1** %4, align 8
  %49 = getelementptr inbounds %1, %1* %48, i32 0, i32 4
  %50 = getelementptr inbounds %29, %29* %49, i32 0, i32 2
  %51 = bitcast %32* %50 to i32*
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %20, align 4
  %53 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #15
  %54 = bitcast %29** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #15
  %55 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #15
  store %29* null, %29** %23, align 8
  %56 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %56) #15
  store i32 0, i32* %24, align 4
  %57 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #15
  store i8* null, i8** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %26) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %27) #15
  store i8 0, i8* %27, align 1
  %58 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #15
  store i32 0, i32* %28, align 4
  %59 = load i32, i32* %21, align 4
  %60 = load %29*, %29** %22, align 8
  %61 = load %29*, %29** %23, align 8
  %62 = load i32, i32* %24, align 4
  %63 = load i8*, i8** %25, align 8
  %64 = load i8, i8* %26, align 1
  %65 = load i8, i8* %27, align 1
  br label %66

66:                                               ; preds = %43
  %67 = load i32, i32* %20, align 4
  %68 = load i32, i32* %18, align 4
  %69 = icmp slt i32 %67, %68
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 0)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %95, label %76

76:                                               ; preds = %66
  %77 = load i32, i32* %20, align 4
  %78 = load i32, i32* %19, align 4
  %79 = icmp sgt i32 %77, %78
  %80 = xor i1 %79, true
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = call i64 @llvm.expect.i64(i64 %83, i64 0)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %99

86:                                               ; preds = %76
  %87 = load i32, i32* %19, align 4
  %88 = icmp sge i32 %87, 0
  %89 = xor i1 %88, true
  %90 = xor i1 %89, true
  %91 = zext i1 %90 to i32
  %92 = sext i32 %91 to i64
  %93 = call i64 @llvm.expect.i64(i64 %92, i64 1)
  %94 = icmp ne i64 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %86, %66
  %96 = load i32, i32* %20, align 4
  %97 = load i32, i32* %18, align 4
  %98 = load i32, i32* %19, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %96, i32 %97, i32 %98)
  store i32 1, i32* %28, align 4
  br label %244

99:                                               ; preds = %86, %76
  store i32 0, i32* %21, align 4
  %100 = load %1*, %1** %4, align 8
  %101 = bitcast %1* %100 to %29*
  %102 = getelementptr inbounds %29, %29* %101, i64 4
  store %29* %102, %29** %22, align 8
  %103 = load i32, i32* %21, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %21, align 4
  br label %105

105:                                              ; preds = %99
  %106 = load i32, i32* %21, align 4
  %107 = load i32, i32* %18, align 4
  %108 = icmp sle i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %27, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 1
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  br label %124

124:                                              ; preds = %123
  %125 = load i32, i32* %21, align 4
  %126 = load i32, i32* %18, align 4
  %127 = icmp sgt i32 %125, %126
  br i1 %127, label %132, label %128

128:                                              ; preds = %124
  %129 = load i8, i8* %27, align 1
  %130 = zext i8 %129 to i32
  %131 = icmp eq i32 %130, 0
  br label %132

132:                                              ; preds = %128, %124
  %133 = phi i1 [ true, %124 ], [ %131, %128 ]
  %134 = xor i1 %133, true
  %135 = zext i1 %134 to i32
  %136 = sext i32 %135 to i64
  %137 = call i64 @llvm.expect.i64(i64 %136, i64 0)
  %138 = icmp ne i64 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %132
  unreachable

140:                                              ; preds = %132
  br label %141

141:                                              ; preds = %140
  br label %142

142:                                              ; preds = %141
  %143 = load i8, i8* %27, align 1
  %144 = icmp ne i8 %143, 0
  br i1 %144, label %145, label %157

145:                                              ; preds = %142
  %146 = load i32, i32* %21, align 4
  %147 = load i32, i32* %20, align 4
  %148 = icmp sgt i32 %146, %147
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = zext i1 %150 to i32
  %152 = sext i32 %151 to i64
  %153 = call i64 @llvm.expect.i64(i64 %152, i64 0)
  %154 = icmp ne i64 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %145
  br label %244

156:                                              ; preds = %145
  br label %157

157:                                              ; preds = %156, %142
  %158 = load %29*, %29** %22, align 8
  %159 = getelementptr inbounds %29, %29* %158, i32 1
  store %29* %159, %29** %22, align 8
  %160 = load %29*, %29** %22, align 8
  store %29* %160, %29** %23, align 8
  %161 = load %29*, %29** %23, align 8
  %162 = call i32 @468(%29* %161, %28** %7, i32 0)
  %163 = icmp ne i32 %162, 0
  %164 = xor i1 %163, true
  %165 = xor i1 %164, true
  %166 = xor i1 %165, true
  %167 = zext i1 %166 to i32
  %168 = sext i32 %167 to i64
  %169 = call i64 @llvm.expect.i64(i64 %168, i64 0)
  %170 = icmp ne i64 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %157
  store i32 2, i32* %24, align 4
  store i32 4, i32* %28, align 4
  br label %244

172:                                              ; preds = %157
  store i8 1, i8* %27, align 1
  %173 = load i32, i32* %21, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %21, align 4
  br label %175

175:                                              ; preds = %172
  %176 = load i32, i32* %21, align 4
  %177 = load i32, i32* %18, align 4
  %178 = icmp sle i32 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = load i8, i8* %27, align 1
  %181 = zext i8 %180 to i32
  %182 = icmp eq i32 %181, 1
  br label %183

183:                                              ; preds = %179, %175
  %184 = phi i1 [ true, %175 ], [ %182, %179 ]
  %185 = xor i1 %184, true
  %186 = zext i1 %185 to i32
  %187 = sext i32 %186 to i64
  %188 = call i64 @llvm.expect.i64(i64 %187, i64 0)
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %183
  unreachable

191:                                              ; preds = %183
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  br label %194

194:                                              ; preds = %193
  %195 = load i32, i32* %21, align 4
  %196 = load i32, i32* %18, align 4
  %197 = icmp sgt i32 %195, %196
  br i1 %197, label %202, label %198

198:                                              ; preds = %194
  %199 = load i8, i8* %27, align 1
  %200 = zext i8 %199 to i32
  %201 = icmp eq i32 %200, 0
  br label %202

202:                                              ; preds = %198, %194
  %203 = phi i1 [ true, %194 ], [ %201, %198 ]
  %204 = xor i1 %203, true
  %205 = zext i1 %204 to i32
  %206 = sext i32 %205 to i64
  %207 = call i64 @llvm.expect.i64(i64 %206, i64 0)
  %208 = icmp ne i64 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %202
  unreachable

210:                                              ; preds = %202
  br label %211

211:                                              ; preds = %210
  br label %212

212:                                              ; preds = %211
  %213 = load i8, i8* %27, align 1
  %214 = icmp ne i8 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %212
  %216 = load i32, i32* %21, align 4
  %217 = load i32, i32* %20, align 4
  %218 = icmp sgt i32 %216, %217
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = zext i1 %220 to i32
  %222 = sext i32 %221 to i64
  %223 = call i64 @llvm.expect.i64(i64 %222, i64 0)
  %224 = icmp ne i64 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %215
  br label %244

226:                                              ; preds = %215
  br label %227

227:                                              ; preds = %226, %212
  %228 = load %29*, %29** %22, align 8
  %229 = getelementptr inbounds %29, %29* %228, i32 1
  store %29* %229, %29** %22, align 8
  %230 = load %29*, %29** %22, align 8
  store %29* %230, %29** %23, align 8
  %231 = load %29*, %29** %23, align 8
  %232 = call i32 @469(%29* %231, i64* %8, i8* %26, i32 0, i32 0)
  %233 = icmp ne i32 %232, 0
  %234 = xor i1 %233, true
  %235 = xor i1 %234, true
  %236 = xor i1 %235, true
  %237 = zext i1 %236 to i32
  %238 = sext i32 %237 to i64
  %239 = call i64 @llvm.expect.i64(i64 %238, i64 0)
  %240 = icmp ne i64 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %227
  store i32 0, i32* %24, align 4
  store i32 4, i32* %28, align 4
  br label %244

242:                                              ; preds = %227
  br label %243

243:                                              ; preds = %242
  br label %244

244:                                              ; preds = %243, %241, %225, %171, %155, %95
  %245 = load i32, i32* %28, align 4
  %246 = icmp ne i32 %245, 0
  %247 = xor i1 %246, true
  %248 = xor i1 %247, true
  %249 = zext i1 %248 to i32
  %250 = sext i32 %249 to i64
  %251 = call i64 @llvm.expect.i64(i64 %250, i64 0)
  %252 = icmp ne i64 %251, 0
  br i1 %252, label %253, label %282

253:                                              ; preds = %244
  %254 = load i32, i32* %28, align 4
  %255 = icmp eq i32 %254, 2
  br i1 %255, label %256, label %259

256:                                              ; preds = %253
  %257 = load i32, i32* %21, align 4
  %258 = load i8*, i8** %25, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %257, i8* %258)
  br label %275

259:                                              ; preds = %253
  %260 = load i32, i32* %28, align 4
  %261 = icmp eq i32 %260, 3
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = load i32, i32* %21, align 4
  %264 = load i8*, i8** %25, align 8
  %265 = load %29*, %29** %23, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %263, i8* %264, %29* %265)
  br label %274

266:                                              ; preds = %259
  %267 = load i32, i32* %28, align 4
  %268 = icmp eq i32 %267, 4
  br i1 %268, label %269, label %273

269:                                              ; preds = %266
  %270 = load i32, i32* %21, align 4
  %271 = load i32, i32* %24, align 4
  %272 = load %29*, %29** %23, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %270, i32 %271, %29* %272)
  br label %273

273:                                              ; preds = %269, %266
  br label %274

274:                                              ; preds = %273, %262
  br label %275

275:                                              ; preds = %274, %256
  br label %276

276:                                              ; preds = %275
  %277 = load %29*, %29** %5, align 8
  %278 = getelementptr inbounds %29, %29* %277, i32 0, i32 1
  %279 = bitcast %31* %278 to i32*
  store i32 2, i32* %279, align 8
  br label %280

280:                                              ; preds = %276
  br label %281

281:                                              ; preds = %280
  store i32 1, i32* %29, align 4
  br label %283

282:                                              ; preds = %244
  store i32 0, i32* %29, align 4
  br label %283

283:                                              ; preds = %282, %281
  %284 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %284) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %27) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %26) #15
  %285 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285) #15
  %286 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %286) #15
  %287 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %287) #15
  %288 = bitcast %29** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %288) #15
  %289 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %289) #15
  %290 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %290) #15
  %291 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %291) #15
  %292 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %292) #15
  %293 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %293) #15
  %294 = load i32, i32* %29, align 4
  switch i32 %294, label %476 [
    i32 0, label %295
  ]

295:                                              ; preds = %283
  br label %296

296:                                              ; preds = %295
  br label %297

297:                                              ; preds = %296
  %298 = load %28*, %28** %7, align 8
  %299 = getelementptr inbounds %28, %28* %298, i32 0, i32 2
  %300 = load i64, i64* %299, align 8
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %309

302:                                              ; preds = %297
  br label %303

303:                                              ; preds = %302
  %304 = load %29*, %29** %5, align 8
  %305 = getelementptr inbounds %29, %29* %304, i32 0, i32 1
  %306 = bitcast %31* %305 to i32*
  store i32 2, i32* %306, align 8
  br label %307

307:                                              ; preds = %303
  br label %308

308:                                              ; preds = %307
  store i32 1, i32* %29, align 4
  br label %476

309:                                              ; preds = %297
  %310 = call %52* @timelib_time_ctor()
  store %52* %310, %52** %13, align 8
  %311 = load i32, i32* %6, align 4
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %313, label %316

313:                                              ; preds = %309
  store %53* null, %53** %14, align 8
  %314 = load %52*, %52** %13, align 8
  %315 = load i64, i64* %8, align 8
  call void @timelib_unixtime2gmt(%52* %314, i64 %315)
  br label %325

316:                                              ; preds = %309
  %317 = call %53* @get_timezone_info()
  store %53* %317, %53** %14, align 8
  %318 = load %53*, %53** %14, align 8
  %319 = load %52*, %52** %13, align 8
  %320 = getelementptr inbounds %52, %52* %319, i32 0, i32 9
  store %53* %318, %53** %320, align 8
  %321 = load %52*, %52** %13, align 8
  %322 = getelementptr inbounds %52, %52* %321, i32 0, i32 21
  store i32 3, i32* %322, align 8
  %323 = load %52*, %52** %13, align 8
  %324 = load i64, i64* %8, align 8
  call void @timelib_unixtime2local(%52* %323, i64 %324)
  br label %325

325:                                              ; preds = %316, %313
  %326 = load %52*, %52** %13, align 8
  %327 = getelementptr inbounds %52, %52* %326, i32 0, i32 5
  %328 = load i64, i64* %327, align 8
  %329 = trunc i64 %328 to i32
  %330 = getelementptr inbounds %74, %74* %9, i32 0, i32 0
  store i32 %329, i32* %330, align 8
  %331 = load %52*, %52** %13, align 8
  %332 = getelementptr inbounds %52, %52* %331, i32 0, i32 4
  %333 = load i64, i64* %332, align 8
  %334 = trunc i64 %333 to i32
  %335 = getelementptr inbounds %74, %74* %9, i32 0, i32 1
  store i32 %334, i32* %335, align 4
  %336 = load %52*, %52** %13, align 8
  %337 = getelementptr inbounds %52, %52* %336, i32 0, i32 3
  %338 = load i64, i64* %337, align 8
  %339 = trunc i64 %338 to i32
  %340 = getelementptr inbounds %74, %74* %9, i32 0, i32 2
  store i32 %339, i32* %340, align 8
  %341 = load %52*, %52** %13, align 8
  %342 = getelementptr inbounds %52, %52* %341, i32 0, i32 2
  %343 = load i64, i64* %342, align 8
  %344 = trunc i64 %343 to i32
  %345 = getelementptr inbounds %74, %74* %9, i32 0, i32 3
  store i32 %344, i32* %345, align 4
  %346 = load %52*, %52** %13, align 8
  %347 = getelementptr inbounds %52, %52* %346, i32 0, i32 1
  %348 = load i64, i64* %347, align 8
  %349 = sub nsw i64 %348, 1
  %350 = trunc i64 %349 to i32
  %351 = getelementptr inbounds %74, %74* %9, i32 0, i32 4
  store i32 %350, i32* %351, align 8
  %352 = load %52*, %52** %13, align 8
  %353 = getelementptr inbounds %52, %52* %352, i32 0, i32 0
  %354 = load i64, i64* %353, align 8
  %355 = sub nsw i64 %354, 1900
  %356 = trunc i64 %355 to i32
  %357 = getelementptr inbounds %74, %74* %9, i32 0, i32 5
  store i32 %356, i32* %357, align 4
  %358 = load %52*, %52** %13, align 8
  %359 = getelementptr inbounds %52, %52* %358, i32 0, i32 0
  %360 = load i64, i64* %359, align 8
  %361 = load %52*, %52** %13, align 8
  %362 = getelementptr inbounds %52, %52* %361, i32 0, i32 1
  %363 = load i64, i64* %362, align 8
  %364 = load %52*, %52** %13, align 8
  %365 = getelementptr inbounds %52, %52* %364, i32 0, i32 2
  %366 = load i64, i64* %365, align 8
  %367 = call i64 @timelib_day_of_week(i64 %360, i64 %363, i64 %366)
  %368 = trunc i64 %367 to i32
  %369 = getelementptr inbounds %74, %74* %9, i32 0, i32 6
  store i32 %368, i32* %369, align 8
  %370 = load %52*, %52** %13, align 8
  %371 = getelementptr inbounds %52, %52* %370, i32 0, i32 0
  %372 = load i64, i64* %371, align 8
  %373 = load %52*, %52** %13, align 8
  %374 = getelementptr inbounds %52, %52* %373, i32 0, i32 1
  %375 = load i64, i64* %374, align 8
  %376 = load %52*, %52** %13, align 8
  %377 = getelementptr inbounds %52, %52* %376, i32 0, i32 2
  %378 = load i64, i64* %377, align 8
  %379 = call i64 @timelib_day_of_year(i64 %372, i64 %375, i64 %378)
  %380 = trunc i64 %379 to i32
  %381 = getelementptr inbounds %74, %74* %9, i32 0, i32 7
  store i32 %380, i32* %381, align 4
  %382 = load i32, i32* %6, align 4
  %383 = icmp ne i32 %382, 0
  br i1 %383, label %384, label %388

384:                                              ; preds = %325
  %385 = getelementptr inbounds %74, %74* %9, i32 0, i32 8
  store i32 0, i32* %385, align 8
  %386 = getelementptr inbounds %74, %74* %9, i32 0, i32 9
  store i64 0, i64* %386, align 8
  %387 = getelementptr inbounds %74, %74* %9, i32 0, i32 10
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @188, i32 0, i32 0), i8** %387, align 8
  br label %405

388:                                              ; preds = %325
  %389 = load i64, i64* %8, align 8
  %390 = load %53*, %53** %14, align 8
  %391 = call %67* @timelib_get_time_zone_info(i64 %389, %53* %390)
  store %67* %391, %67** %15, align 8
  %392 = load %67*, %67** %15, align 8
  %393 = getelementptr inbounds %67, %67* %392, i32 0, i32 2
  %394 = load i32, i32* %393, align 8
  %395 = getelementptr inbounds %74, %74* %9, i32 0, i32 8
  store i32 %394, i32* %395, align 8
  %396 = load %67*, %67** %15, align 8
  %397 = getelementptr inbounds %67, %67* %396, i32 0, i32 0
  %398 = load i32, i32* %397, align 8
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds %74, %74* %9, i32 0, i32 9
  store i64 %399, i64* %400, align 8
  %401 = load %67*, %67** %15, align 8
  %402 = getelementptr inbounds %67, %67* %401, i32 0, i32 3
  %403 = load i8*, i8** %402, align 8
  %404 = getelementptr inbounds %74, %74* %9, i32 0, i32 10
  store i8* %403, i8** %404, align 8
  br label %405

405:                                              ; preds = %388, %384
  %406 = load i64, i64* %11, align 8
  %407 = call %28* @470(i64 %406, i32 0)
  store %28* %407, %28** %16, align 8
  br label %408

408:                                              ; preds = %434, %405
  %409 = load %28*, %28** %16, align 8
  %410 = getelementptr inbounds %28, %28* %409, i32 0, i32 3
  %411 = getelementptr inbounds [1 x i8], [1 x i8]* %410, i32 0, i32 0
  %412 = load i64, i64* %11, align 8
  %413 = load %28*, %28** %7, align 8
  %414 = getelementptr inbounds %28, %28* %413, i32 0, i32 3
  %415 = getelementptr inbounds [1 x i8], [1 x i8]* %414, i32 0, i32 0
  %416 = call i64 @strftime(i8* %411, i64 %412, i8* %415, %74* %9) #15
  store i64 %416, i64* %12, align 8
  %417 = load i64, i64* %11, align 8
  %418 = icmp eq i64 %416, %417
  br i1 %418, label %422, label %419

419:                                              ; preds = %408
  %420 = load i64, i64* %12, align 8
  %421 = icmp eq i64 %420, 0
  br label %422

422:                                              ; preds = %419, %408
  %423 = phi i1 [ true, %408 ], [ %421, %419 ]
  br i1 %423, label %424, label %435

424:                                              ; preds = %422
  %425 = load i64, i64* %11, align 8
  %426 = mul i64 %425, 2
  store i64 %426, i64* %11, align 8
  %427 = load %28*, %28** %16, align 8
  %428 = load i64, i64* %11, align 8
  %429 = call %28* @471(%28* %427, i64 %428, i32 0)
  store %28* %429, %28** %16, align 8
  %430 = load i32, i32* %10, align 4
  %431 = add nsw i32 %430, -1
  store i32 %431, i32* %10, align 4
  %432 = icmp ne i32 %431, 0
  br i1 %432, label %434, label %433

433:                                              ; preds = %424
  br label %435

434:                                              ; preds = %424
  br label %408

435:                                              ; preds = %433, %422
  %436 = load %52*, %52** %13, align 8
  call void @timelib_time_dtor(%52* %436)
  %437 = load i32, i32* %6, align 4
  %438 = icmp ne i32 %437, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %435
  %440 = load %67*, %67** %15, align 8
  call void @timelib_time_offset_dtor(%67* %440)
  br label %441

441:                                              ; preds = %439, %435
  %442 = load i64, i64* %12, align 8
  %443 = icmp ne i64 %442, 0
  br i1 %443, label %444, label %468

444:                                              ; preds = %441
  %445 = load i64, i64* %12, align 8
  %446 = load i64, i64* %11, align 8
  %447 = icmp ne i64 %445, %446
  br i1 %447, label %448, label %468

448:                                              ; preds = %444
  %449 = load %28*, %28** %16, align 8
  %450 = load i64, i64* %12, align 8
  %451 = call %28* @472(%28* %449, i64 %450, i32 0)
  store %28* %451, %28** %16, align 8
  br label %452

452:                                              ; preds = %448
  %453 = bitcast %29** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %453) #15
  %454 = load %29*, %29** %5, align 8
  store %29* %454, %29** %30, align 8
  %455 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %455) #15
  %456 = load %28*, %28** %16, align 8
  store %28* %456, %28** %31, align 8
  %457 = load %28*, %28** %31, align 8
  %458 = load %29*, %29** %30, align 8
  %459 = getelementptr inbounds %29, %29* %458, i32 0, i32 0
  %460 = bitcast %30* %459 to %28**
  store %28* %457, %28** %460, align 8
  %461 = load %29*, %29** %30, align 8
  %462 = getelementptr inbounds %29, %29* %461, i32 0, i32 1
  %463 = bitcast %31* %462 to i32*
  store i32 5126, i32* %463, align 8
  %464 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %464) #15
  %465 = bitcast %29** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %465) #15
  br label %466

466:                                              ; preds = %452
  br label %467

467:                                              ; preds = %466
  store i32 1, i32* %29, align 4
  br label %476

468:                                              ; preds = %444, %441
  %469 = load %28*, %28** %16, align 8
  call void @473(%28* %469)
  br label %470

470:                                              ; preds = %468
  %471 = load %29*, %29** %5, align 8
  %472 = getelementptr inbounds %29, %29* %471, i32 0, i32 1
  %473 = bitcast %31* %472 to i32*
  store i32 2, i32* %473, align 8
  br label %474

474:                                              ; preds = %470
  br label %475

475:                                              ; preds = %474
  store i32 1, i32* %29, align 4
  br label %476

476:                                              ; preds = %475, %467, %308, %283
  %477 = bitcast %28** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %477) #15
  %478 = bitcast %67** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %478) #15
  %479 = bitcast %53** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %479) #15
  %480 = bitcast %52** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %480) #15
  %481 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %481) #15
  %482 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %482) #15
  %483 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %483) #15
  %484 = bitcast %74* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 56, i8* %484) #15
  %485 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %485) #15
  %486 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %486) #15
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %28* @470(i64 %0, i32 %1) #6 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %28*, align 8
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #15
  %7 = load i32, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = load i64, i64* %3, align 8
  %11 = add i64 ptrtoint (i8* getelementptr inbounds (%28, %28* null, i32 0, i32 3, i32 0) to i64), %10
  %12 = add i64 %11, 1
  %13 = add i64 %12, 8
  %14 = sub i64 %13, 1
  %15 = and i64 %14, -8
  %16 = call noalias i8* @__zend_malloc(i64 %15) #18
  br label %25

17:                                               ; preds = %2
  %18 = load i64, i64* %3, align 8
  %19 = add i64 ptrtoint (i8* getelementptr inbounds (%28, %28* null, i32 0, i32 3, i32 0) to i64), %18
  %20 = add i64 %19, 1
  %21 = add i64 %20, 8
  %22 = sub i64 %21, 1
  %23 = and i64 %22, -8
  %24 = call noalias i8* @_emalloc(i64 %23) #18
  br label %25

25:                                               ; preds = %17, %9
  %26 = phi i8* [ %16, %9 ], [ %24, %17 ]
  %27 = bitcast i8* %26 to %28*
  store %28* %27, %28** %5, align 8
  %28 = load %28*, %28** %5, align 8
  %29 = getelementptr inbounds %28, %28* %28, i32 0, i32 0
  %30 = getelementptr inbounds %8, %8* %29, i32 0, i32 0
  store i32 1, i32* %30, align 8
  %31 = load i32, i32* %4, align 4
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i32 1, i32 0
  %35 = shl i32 %34, 8
  %36 = or i32 6, %35
  %37 = load %28*, %28** %5, align 8
  %38 = getelementptr inbounds %28, %28* %37, i32 0, i32 0
  %39 = getelementptr inbounds %8, %8* %38, i32 0, i32 1
  %40 = bitcast %9* %39 to i32*
  store i32 %36, i32* %40, align 4
  %41 = load %28*, %28** %5, align 8
  call void @531(%28* %41)
  %42 = load i64, i64* %3, align 8
  %43 = load %28*, %28** %5, align 8
  %44 = getelementptr inbounds %28, %28* %43, i32 0, i32 2
  store i64 %42, i64* %44, align 8
  %45 = load %28*, %28** %5, align 8
  %46 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #15
  ret %28* %45
}

; Function Attrs: nounwind
declare dso_local i64 @strftime(i8*, i64, i8*, %74*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal %28* @471(%28* %0, i64 %1, i32 %2) #6 {
  %4 = alloca %28*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %28*, align 8
  %9 = alloca i32, align 4
  store %28* %0, %28** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  br label %11

11:                                               ; preds = %3
  %12 = load i64, i64* %6, align 8
  %13 = load %28*, %28** %5, align 8
  %14 = getelementptr inbounds %28, %28* %13, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp uge i64 %12, %15
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 0)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  unreachable

23:                                               ; preds = %11
  br label %24

24:                                               ; preds = %23
  br label %25

25:                                               ; preds = %24
  %26 = load %28*, %28** %5, align 8
  %27 = getelementptr inbounds %28, %28* %26, i32 0, i32 0
  %28 = getelementptr inbounds %8, %8* %27, i32 0, i32 1
  %29 = bitcast %9* %28 to %62*
  %30 = getelementptr inbounds %62, %62* %29, i32 0, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = and i32 %32, 2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %85, label %35

35:                                               ; preds = %25
  %36 = load %28*, %28** %5, align 8
  %37 = getelementptr inbounds %28, %28* %36, i32 0, i32 0
  %38 = getelementptr inbounds %8, %8* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  %41 = xor i1 %40, true
  %42 = xor i1 %41, true
  %43 = zext i1 %42 to i32
  %44 = sext i32 %43 to i64
  %45 = call i64 @llvm.expect.i64(i64 %44, i64 1)
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %78

47:                                               ; preds = %35
  %48 = load i32, i32* %7, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = load %28*, %28** %5, align 8
  %52 = bitcast %28* %51 to i8*
  %53 = load i64, i64* %6, align 8
  %54 = add i64 ptrtoint (i8* getelementptr inbounds (%28, %28* null, i32 0, i32 3, i32 0) to i64), %53
  %55 = add i64 %54, 1
  %56 = add i64 %55, 8
  %57 = sub i64 %56, 1
  %58 = and i64 %57, -8
  %59 = call i8* @__zend_realloc(i8* %52, i64 %58) #19
  br label %70

60:                                               ; preds = %47
  %61 = load %28*, %28** %5, align 8
  %62 = bitcast %28* %61 to i8*
  %63 = load i64, i64* %6, align 8
  %64 = add i64 ptrtoint (i8* getelementptr inbounds (%28, %28* null, i32 0, i32 3, i32 0) to i64), %63
  %65 = add i64 %64, 1
  %66 = add i64 %65, 8
  %67 = sub i64 %66, 1
  %68 = and i64 %67, -8
  %69 = call i8* @_erealloc(i8* %62, i64 %68) #19
  br label %70

70:                                               ; preds = %60, %50
  %71 = phi i8* [ %59, %50 ], [ %69, %60 ]
  %72 = bitcast i8* %71 to %28*
  store %28* %72, %28** %8, align 8
  %73 = load i64, i64* %6, align 8
  %74 = load %28*, %28** %8, align 8
  %75 = getelementptr inbounds %28, %28* %74, i32 0, i32 2
  store i64 %73, i64* %75, align 8
  %76 = load %28*, %28** %8, align 8
  call void @531(%28* %76)
  %77 = load %28*, %28** %8, align 8
  store %28* %77, %28** %4, align 8
  store i32 1, i32* %9, align 4
  br label %100

78:                                               ; preds = %35
  %79 = load %28*, %28** %5, align 8
  %80 = getelementptr inbounds %28, %28* %79, i32 0, i32 0
  %81 = getelementptr inbounds %8, %8* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 8
  br label %84

84:                                               ; preds = %78
  br label %85

85:                                               ; preds = %84, %25
  %86 = load i64, i64* %6, align 8
  %87 = load i32, i32* %7, align 4
  %88 = call %28* @470(i64 %86, i32 %87)
  store %28* %88, %28** %8, align 8
  %89 = load %28*, %28** %8, align 8
  %90 = getelementptr inbounds %28, %28* %89, i32 0, i32 3
  %91 = getelementptr inbounds [1 x i8], [1 x i8]* %90, i32 0, i32 0
  %92 = load %28*, %28** %5, align 8
  %93 = getelementptr inbounds %28, %28* %92, i32 0, i32 3
  %94 = getelementptr inbounds [1 x i8], [1 x i8]* %93, i32 0, i32 0
  %95 = load %28*, %28** %5, align 8
  %96 = getelementptr inbounds %28, %28* %95, i32 0, i32 2
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %94, i64 %98, i1 false)
  %99 = load %28*, %28** %8, align 8
  store %28* %99, %28** %4, align 8
  store i32 1, i32* %9, align 4
  br label %100

100:                                              ; preds = %85, %70
  %101 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #15
  %102 = load %28*, %28** %4, align 8
  ret %28* %102
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %28* @472(%28* %0, i64 %1, i32 %2) #6 {
  %4 = alloca %28*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %28*, align 8
  %9 = alloca i32, align 4
  store %28* %0, %28** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  br label %11

11:                                               ; preds = %3
  %12 = load i64, i64* %6, align 8
  %13 = load %28*, %28** %5, align 8
  %14 = getelementptr inbounds %28, %28* %13, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp ule i64 %12, %15
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 0)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  unreachable

23:                                               ; preds = %11
  br label %24

24:                                               ; preds = %23
  br label %25

25:                                               ; preds = %24
  %26 = load %28*, %28** %5, align 8
  %27 = getelementptr inbounds %28, %28* %26, i32 0, i32 0
  %28 = getelementptr inbounds %8, %8* %27, i32 0, i32 1
  %29 = bitcast %9* %28 to %62*
  %30 = getelementptr inbounds %62, %62* %29, i32 0, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = and i32 %32, 2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %85, label %35

35:                                               ; preds = %25
  %36 = load %28*, %28** %5, align 8
  %37 = getelementptr inbounds %28, %28* %36, i32 0, i32 0
  %38 = getelementptr inbounds %8, %8* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  %41 = xor i1 %40, true
  %42 = xor i1 %41, true
  %43 = zext i1 %42 to i32
  %44 = sext i32 %43 to i64
  %45 = call i64 @llvm.expect.i64(i64 %44, i64 1)
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %78

47:                                               ; preds = %35
  %48 = load i32, i32* %7, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = load %28*, %28** %5, align 8
  %52 = bitcast %28* %51 to i8*
  %53 = load i64, i64* %6, align 8
  %54 = add i64 ptrtoint (i8* getelementptr inbounds (%28, %28* null, i32 0, i32 3, i32 0) to i64), %53
  %55 = add i64 %54, 1
  %56 = add i64 %55, 8
  %57 = sub i64 %56, 1
  %58 = and i64 %57, -8
  %59 = call i8* @__zend_realloc(i8* %52, i64 %58) #19
  br label %70

60:                                               ; preds = %47
  %61 = load %28*, %28** %5, align 8
  %62 = bitcast %28* %61 to i8*
  %63 = load i64, i64* %6, align 8
  %64 = add i64 ptrtoint (i8* getelementptr inbounds (%28, %28* null, i32 0, i32 3, i32 0) to i64), %63
  %65 = add i64 %64, 1
  %66 = add i64 %65, 8
  %67 = sub i64 %66, 1
  %68 = and i64 %67, -8
  %69 = call i8* @_erealloc(i8* %62, i64 %68) #19
  br label %70

70:                                               ; preds = %60, %50
  %71 = phi i8* [ %59, %50 ], [ %69, %60 ]
  %72 = bitcast i8* %71 to %28*
  store %28* %72, %28** %8, align 8
  %73 = load i64, i64* %6, align 8
  %74 = load %28*, %28** %8, align 8
  %75 = getelementptr inbounds %28, %28* %74, i32 0, i32 2
  store i64 %73, i64* %75, align 8
  %76 = load %28*, %28** %8, align 8
  call void @531(%28* %76)
  %77 = load %28*, %28** %8, align 8
  store %28* %77, %28** %4, align 8
  store i32 1, i32* %9, align 4
  br label %98

78:                                               ; preds = %35
  %79 = load %28*, %28** %5, align 8
  %80 = getelementptr inbounds %28, %28* %79, i32 0, i32 0
  %81 = getelementptr inbounds %8, %8* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 8
  br label %84

84:                                               ; preds = %78
  br label %85

85:                                               ; preds = %84, %25
  %86 = load i64, i64* %6, align 8
  %87 = load i32, i32* %7, align 4
  %88 = call %28* @470(i64 %86, i32 %87)
  store %28* %88, %28** %8, align 8
  %89 = load %28*, %28** %8, align 8
  %90 = getelementptr inbounds %28, %28* %89, i32 0, i32 3
  %91 = getelementptr inbounds [1 x i8], [1 x i8]* %90, i32 0, i32 0
  %92 = load %28*, %28** %5, align 8
  %93 = getelementptr inbounds %28, %28* %92, i32 0, i32 3
  %94 = getelementptr inbounds [1 x i8], [1 x i8]* %93, i32 0, i32 0
  %95 = load i64, i64* %6, align 8
  %96 = add i64 %95, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %94, i64 %96, i1 false)
  %97 = load %28*, %28** %8, align 8
  store %28* %97, %28** %4, align 8
  store i32 1, i32* %9, align 4
  br label %98

98:                                               ; preds = %85, %70
  %99 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #15
  %100 = load %28*, %28** %4, align 8
  ret %28* %100
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @473(%28* %0) #6 {
  %2 = alloca %28*, align 8
  store %28* %0, %28** %2, align 8
  %3 = load %28*, %28** %2, align 8
  %4 = getelementptr inbounds %28, %28* %3, i32 0, i32 0
  %5 = getelementptr inbounds %8, %8* %4, i32 0, i32 1
  %6 = bitcast %9* %5 to %62*
  %7 = getelementptr inbounds %62, %62* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %43, label %12

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12
  %14 = load %28*, %28** %2, align 8
  %15 = getelementptr inbounds %28, %28* %14, i32 0, i32 0
  %16 = getelementptr inbounds %8, %8* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ule i32 %17, 1
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = call i64 @llvm.expect.i64(i64 %21, i64 0)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  unreachable

25:                                               ; preds = %13
  br label %26

26:                                               ; preds = %25
  %27 = load %28*, %28** %2, align 8
  %28 = getelementptr inbounds %28, %28* %27, i32 0, i32 0
  %29 = getelementptr inbounds %8, %8* %28, i32 0, i32 1
  %30 = bitcast %9* %29 to %62*
  %31 = getelementptr inbounds %62, %62* %30, i32 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %26
  %37 = load %28*, %28** %2, align 8
  %38 = bitcast %28* %37 to i8*
  call void @free(i8* %38) #15
  br label %42

39:                                               ; preds = %26
  %40 = load %28*, %28** %2, align 8
  %41 = bitcast %28* %40 to i8*
  call void @_efree(i8* %41)
  br label %42

42:                                               ; preds = %39, %36
  br label %43

43:                                               ; preds = %42, %1
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @474(%29* %0, i8* %1, i8* %2, i32 %3) #6 {
  %5 = alloca i32, align 4
  %6 = alloca %29*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %29* %0, %29** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = load i8*, i8** %8, align 8
  store i8 0, i8* %13, align 1
  br label %14

14:                                               ; preds = %12, %4
  %15 = load %29*, %29** %6, align 8
  %16 = call zeroext i8 @490(%29* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 3
  %19 = xor i1 %18, true
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = call i64 @llvm.expect.i64(i64 %22, i64 1)
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %14
  %26 = load i8*, i8** %7, align 8
  store i8 1, i8* %26, align 1
  br label %57

27:                                               ; preds = %14
  %28 = load %29*, %29** %6, align 8
  %29 = call zeroext i8 @490(%29* %28)
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 2
  %32 = xor i1 %31, true
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = sext i32 %34 to i64
  %36 = call i64 @llvm.expect.i64(i64 %35, i64 1)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = load i8*, i8** %7, align 8
  store i8 0, i8* %39, align 1
  br label %56

40:                                               ; preds = %27
  %41 = load i32, i32* %9, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %40
  %44 = load %29*, %29** %6, align 8
  %45 = call zeroext i8 @490(%29* %44)
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = load i8*, i8** %8, align 8
  store i8 1, i8* %49, align 1
  %50 = load i8*, i8** %7, align 8
  store i8 0, i8* %50, align 1
  br label %55

51:                                               ; preds = %43, %40
  %52 = load %29*, %29** %6, align 8
  %53 = load i8*, i8** %7, align 8
  %54 = call i32 @zend_parse_arg_bool_slow(%29* %52, i8* %53)
  store i32 %54, i32* %5, align 4
  br label %58

55:                                               ; preds = %48
  br label %56

56:                                               ; preds = %55, %38
  br label %57

57:                                               ; preds = %56, %25
  store i32 1, i32* %5, align 4
  br label %58

58:                                               ; preds = %57, %51
  %59 = load i32, i32* %5, align 4
  ret i32 %59
}

declare dso_local i32 @_array_init(%29*, i32) #4

declare dso_local i32 @add_assoc_long_ex(%29*, i8*, i64, i64) #4

declare dso_local i32 @add_next_index_long(%29*, i64) #4

declare dso_local i32 @add_assoc_string_ex(%29*, i8*, i64, i8*) #4

declare dso_local i32 @add_index_long(%29*, i64, i64) #4

; Function Attrs: nounwind uwtable
define internal void @475(%14* %0) #0 {
  %2 = alloca %14*, align 8
  %3 = alloca %75*, align 8
  store %14* %0, %14** %2, align 8
  %4 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %14*, %14** %2, align 8
  %6 = bitcast %14* %5 to %75*
  store %75* %6, %75** %3, align 8
  %7 = load %14*, %14** %2, align 8
  call void @481(%14* %7)
  %8 = load %75*, %75** %3, align 8
  %9 = getelementptr inbounds %75, %75* %8, i32 0, i32 0
  %10 = getelementptr inbounds %14, %14* %9, i32 0, i32 1
  call void @_zval_ptr_dtor(%29* %10)
  %11 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #15
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @476(%14* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %14*, align 8
  %4 = alloca %75*, align 8
  %5 = alloca %71*, align 8
  %6 = alloca %52*, align 8
  %7 = alloca i32, align 4
  store %14* %0, %14** %3, align 8
  %8 = bitcast %75** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = load %14*, %14** %3, align 8
  %10 = bitcast %14* %9 to %75*
  store %75* %10, %75** %4, align 8
  %11 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = load %75*, %75** %4, align 8
  %13 = getelementptr inbounds %75, %75* %12, i32 0, i32 0
  %14 = getelementptr inbounds %14, %14* %13, i32 0, i32 1
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 0
  %16 = bitcast %30* %15 to %15**
  %17 = load %15*, %15** %16, align 8
  %18 = call %71* @482(%15* %17)
  store %71* %18, %71** %5, align 8
  %19 = bitcast %52** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #15
  %20 = load %71*, %71** %5, align 8
  %21 = getelementptr inbounds %71, %71* %20, i32 0, i32 2
  %22 = load %52*, %52** %21, align 8
  store %52* %22, %52** %6, align 8
  %23 = load %71*, %71** %5, align 8
  %24 = getelementptr inbounds %71, %71* %23, i32 0, i32 7
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %1
  %28 = load %75*, %75** %4, align 8
  %29 = getelementptr inbounds %75, %75* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %46

32:                                               ; preds = %27, %1
  %33 = load %52*, %52** %6, align 8
  %34 = getelementptr inbounds %52, %52* %33, i32 0, i32 16
  store i32 1, i32* %34, align 4
  %35 = load %52*, %52** %6, align 8
  %36 = getelementptr inbounds %52, %52* %35, i32 0, i32 11
  %37 = load %71*, %71** %5, align 8
  %38 = getelementptr inbounds %71, %71* %37, i32 0, i32 4
  %39 = load %59*, %59** %38, align 8
  %40 = bitcast %59* %36 to i8*
  %41 = bitcast %59* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 104, i1 false)
  %42 = load %52*, %52** %6, align 8
  %43 = getelementptr inbounds %52, %52* %42, i32 0, i32 18
  store i32 0, i32* %43, align 4
  %44 = load %52*, %52** %6, align 8
  call void @timelib_update_ts(%52* %44, %53* null)
  %45 = load %52*, %52** %6, align 8
  call void @timelib_update_from_sse(%52* %45)
  br label %46

46:                                               ; preds = %32, %27
  %47 = load %71*, %71** %5, align 8
  %48 = getelementptr inbounds %71, %71* %47, i32 0, i32 3
  %49 = load %52*, %52** %48, align 8
  %50 = icmp ne %52* %49, null
  br i1 %50, label %51, label %65

51:                                               ; preds = %46
  %52 = load %71*, %71** %5, align 8
  %53 = getelementptr inbounds %71, %71* %52, i32 0, i32 2
  %54 = load %52*, %52** %53, align 8
  %55 = getelementptr inbounds %52, %52* %54, i32 0, i32 12
  %56 = load i64, i64* %55, align 8
  %57 = load %71*, %71** %5, align 8
  %58 = getelementptr inbounds %71, %71* %57, i32 0, i32 3
  %59 = load %52*, %52** %58, align 8
  %60 = getelementptr inbounds %52, %52* %59, i32 0, i32 12
  %61 = load i64, i64* %60, align 8
  %62 = icmp slt i64 %56, %61
  %63 = zext i1 %62 to i64
  %64 = select i1 %62, i32 0, i32 -1
  store i32 %64, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %75

65:                                               ; preds = %46
  %66 = load %75*, %75** %4, align 8
  %67 = getelementptr inbounds %75, %75* %66, i32 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = load %71*, %71** %5, align 8
  %70 = getelementptr inbounds %71, %71* %69, i32 0, i32 5
  %71 = load i32, i32* %70, align 8
  %72 = icmp slt i32 %68, %71
  %73 = zext i1 %72 to i64
  %74 = select i1 %72, i32 0, i32 -1
  store i32 %74, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %75

75:                                               ; preds = %65, %51
  %76 = bitcast %52** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #15
  %77 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #15
  %78 = bitcast %75** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78) #15
  %79 = load i32, i32* %2, align 4
  ret i32 %79
}

; Function Attrs: nounwind uwtable
define internal %29* @477(%14* %0) #0 {
  %2 = alloca %14*, align 8
  %3 = alloca %75*, align 8
  %4 = alloca %71*, align 8
  %5 = alloca %52*, align 8
  %6 = alloca %61*, align 8
  store %14* %0, %14** %2, align 8
  %7 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #15
  %8 = load %14*, %14** %2, align 8
  %9 = bitcast %14* %8 to %75*
  store %75* %9, %75** %3, align 8
  %10 = bitcast %71** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = load %75*, %75** %3, align 8
  %12 = getelementptr inbounds %75, %75* %11, i32 0, i32 0
  %13 = getelementptr inbounds %14, %14* %12, i32 0, i32 1
  %14 = getelementptr inbounds %29, %29* %13, i32 0, i32 0
  %15 = bitcast %30* %14 to %15**
  %16 = load %15*, %15** %15, align 8
  %17 = call %71* @482(%15* %16)
  store %71* %17, %71** %4, align 8
  %18 = bitcast %52** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  %19 = load %71*, %71** %4, align 8
  %20 = getelementptr inbounds %71, %71* %19, i32 0, i32 2
  %21 = load %52*, %52** %20, align 8
  store %52* %21, %52** %5, align 8
  %22 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = load %71*, %71** %4, align 8
  %24 = getelementptr inbounds %71, %71* %23, i32 0, i32 1
  %25 = load %6*, %6** %24, align 8
  %26 = load %75*, %75** %3, align 8
  %27 = getelementptr inbounds %75, %75* %26, i32 0, i32 1
  %28 = call %29* @php_date_instantiate(%6* %25, %29* %27)
  %29 = load %75*, %75** %3, align 8
  %30 = getelementptr inbounds %75, %75* %29, i32 0, i32 1
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 0
  %32 = bitcast %30* %31 to %15**
  %33 = load %15*, %15** %32, align 8
  %34 = call %61* @489(%15* %33)
  store %61* %34, %61** %6, align 8
  %35 = call %52* @timelib_time_ctor()
  %36 = load %61*, %61** %6, align 8
  %37 = getelementptr inbounds %61, %61* %36, i32 0, i32 0
  store %52* %35, %52** %37, align 8
  %38 = load %61*, %61** %6, align 8
  %39 = getelementptr inbounds %61, %61* %38, i32 0, i32 0
  %40 = load %52*, %52** %39, align 8
  %41 = load %52*, %52** %5, align 8
  %42 = bitcast %52* %40 to i8*
  %43 = bitcast %52* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 240, i1 false)
  %44 = load %52*, %52** %5, align 8
  %45 = getelementptr inbounds %52, %52* %44, i32 0, i32 8
  %46 = load i8*, i8** %45, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %57

48:                                               ; preds = %1
  %49 = load %52*, %52** %5, align 8
  %50 = getelementptr inbounds %52, %52* %49, i32 0, i32 8
  %51 = load i8*, i8** %50, align 8
  %52 = call noalias i8* @_estrdup(i8* %51)
  %53 = load %61*, %61** %6, align 8
  %54 = getelementptr inbounds %61, %61* %53, i32 0, i32 0
  %55 = load %52*, %52** %54, align 8
  %56 = getelementptr inbounds %52, %52* %55, i32 0, i32 8
  store i8* %52, i8** %56, align 8
  br label %57

57:                                               ; preds = %48, %1
  %58 = load %52*, %52** %5, align 8
  %59 = getelementptr inbounds %52, %52* %58, i32 0, i32 9
  %60 = load %53*, %53** %59, align 8
  %61 = icmp ne %53* %60, null
  br i1 %61, label %62, label %70

62:                                               ; preds = %57
  %63 = load %52*, %52** %5, align 8
  %64 = getelementptr inbounds %52, %52* %63, i32 0, i32 9
  %65 = load %53*, %53** %64, align 8
  %66 = load %61*, %61** %6, align 8
  %67 = getelementptr inbounds %61, %61* %66, i32 0, i32 0
  %68 = load %52*, %52** %67, align 8
  %69 = getelementptr inbounds %52, %52* %68, i32 0, i32 9
  store %53* %65, %53** %69, align 8
  br label %70

70:                                               ; preds = %62, %57
  %71 = load %75*, %75** %3, align 8
  %72 = getelementptr inbounds %75, %75* %71, i32 0, i32 1
  %73 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #15
  %74 = bitcast %52** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #15
  %75 = bitcast %71** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #15
  %76 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #15
  ret %29* %72
}

; Function Attrs: nounwind uwtable
define internal void @478(%14* %0, %29* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %75*, align 8
  %6 = alloca %29*, align 8
  store %14* %0, %14** %3, align 8
  store %29* %1, %29** %4, align 8
  %7 = bitcast %75** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #15
  %8 = load %14*, %14** %3, align 8
  %9 = bitcast %14* %8 to %75*
  store %75* %9, %75** %5, align 8
  %10 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = load %29*, %29** %4, align 8
  store %29* %11, %29** %6, align 8
  %12 = load %75*, %75** %5, align 8
  %13 = getelementptr inbounds %75, %75* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = load %29*, %29** %6, align 8
  %17 = getelementptr inbounds %29, %29* %16, i32 0, i32 0
  %18 = bitcast %30* %17 to i64*
  store i64 %15, i64* %18, align 8
  %19 = load %29*, %29** %6, align 8
  %20 = getelementptr inbounds %29, %29* %19, i32 0, i32 1
  %21 = bitcast %31* %20 to i32*
  store i32 4, i32* %21, align 8
  %22 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #15
  %23 = bitcast %75** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #15
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @479(%14* %0) #0 {
  %2 = alloca %14*, align 8
  %3 = alloca %75*, align 8
  store %14* %0, %14** %2, align 8
  %4 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %14*, %14** %2, align 8
  %6 = bitcast %14* %5 to %75*
  store %75* %6, %75** %3, align 8
  %7 = load %75*, %75** %3, align 8
  %8 = getelementptr inbounds %75, %75* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = load %14*, %14** %2, align 8
  call void @481(%14* %11)
  %12 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #15
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @480(%14* %0) #0 {
  %2 = alloca %14*, align 8
  %3 = alloca %75*, align 8
  %4 = alloca i32, align 4
  store %14* %0, %14** %2, align 8
  %5 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #15
  %6 = load %14*, %14** %2, align 8
  %7 = bitcast %14* %6 to %75*
  store %75* %7, %75** %3, align 8
  %8 = load %75*, %75** %3, align 8
  %9 = getelementptr inbounds %75, %75* %8, i32 0, i32 3
  store i32 0, i32* %9, align 8
  %10 = load %75*, %75** %3, align 8
  %11 = getelementptr inbounds %75, %75* %10, i32 0, i32 2
  %12 = load %71*, %71** %11, align 8
  %13 = getelementptr inbounds %71, %71* %12, i32 0, i32 2
  %14 = load %52*, %52** %13, align 8
  %15 = icmp ne %52* %14, null
  br i1 %15, label %16, label %22

16:                                               ; preds = %1
  %17 = load %75*, %75** %3, align 8
  %18 = getelementptr inbounds %75, %75* %17, i32 0, i32 2
  %19 = load %71*, %71** %18, align 8
  %20 = getelementptr inbounds %71, %71* %19, i32 0, i32 2
  %21 = load %52*, %52** %20, align 8
  call void @timelib_time_dtor(%52* %21)
  br label %22

22:                                               ; preds = %16, %1
  %23 = load %75*, %75** %3, align 8
  %24 = getelementptr inbounds %75, %75* %23, i32 0, i32 2
  %25 = load %71*, %71** %24, align 8
  %26 = getelementptr inbounds %71, %71* %25, i32 0, i32 0
  %27 = load %52*, %52** %26, align 8
  %28 = icmp ne %52* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @382, i32 0, i32 0))
  store i32 1, i32* %4, align 4
  br label %42

30:                                               ; preds = %22
  %31 = load %75*, %75** %3, align 8
  %32 = getelementptr inbounds %75, %75* %31, i32 0, i32 2
  %33 = load %71*, %71** %32, align 8
  %34 = getelementptr inbounds %71, %71* %33, i32 0, i32 0
  %35 = load %52*, %52** %34, align 8
  %36 = call %52* @timelib_time_clone(%52* %35)
  %37 = load %75*, %75** %3, align 8
  %38 = getelementptr inbounds %75, %75* %37, i32 0, i32 2
  %39 = load %71*, %71** %38, align 8
  %40 = getelementptr inbounds %71, %71* %39, i32 0, i32 2
  store %52* %36, %52** %40, align 8
  %41 = load %14*, %14** %2, align 8
  call void @481(%14* %41)
  store i32 0, i32* %4, align 4
  br label %42

42:                                               ; preds = %30, %29
  %43 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #15
  %44 = load i32, i32* %4, align 4
  switch i32 %44, label %46 [
    i32 0, label %45
    i32 1, label %45
  ]

45:                                               ; preds = %42, %42
  ret void

46:                                               ; preds = %42
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @481(%14* %0) #0 {
  %2 = alloca %14*, align 8
  %3 = alloca %75*, align 8
  store %14* %0, %14** %2, align 8
  %4 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %14*, %14** %2, align 8
  %6 = bitcast %14* %5 to %75*
  store %75* %6, %75** %3, align 8
  %7 = load %75*, %75** %3, align 8
  %8 = getelementptr inbounds %75, %75* %7, i32 0, i32 1
  %9 = call zeroext i8 @490(%29* %8)
  %10 = zext i8 %9 to i32
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = load %75*, %75** %3, align 8
  %14 = getelementptr inbounds %75, %75* %13, i32 0, i32 1
  call void @_zval_ptr_dtor(%29* %14)
  br label %15

15:                                               ; preds = %12
  %16 = load %75*, %75** %3, align 8
  %17 = getelementptr inbounds %75, %75* %16, i32 0, i32 1
  %18 = getelementptr inbounds %29, %29* %17, i32 0, i32 1
  %19 = bitcast %31* %18 to i32*
  store i32 0, i32* %19, align 8
  br label %20

20:                                               ; preds = %15
  br label %21

21:                                               ; preds = %20
  br label %22

22:                                               ; preds = %21, %1
  %23 = bitcast %75** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden %14* @date_object_period_get_iterator(%6* %0, %29* %1, i32 %2) #0 {
  %4 = alloca %6*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %75*, align 8
  %8 = alloca %29*, align 8
  %9 = alloca %29*, align 8
  %10 = alloca %63*, align 8
  %11 = alloca i32, align 4
  store %6* %0, %6** %4, align 8
  store %29* %1, %29** %5, align 8
  store i32 %2, i32* %6, align 4
  %12 = bitcast %75** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = call noalias i8* @_emalloc_128()
  %14 = bitcast i8* %13 to %75*
  store %75* %14, %75** %7, align 8
  %15 = load i32, i32* %6, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  call void (i32, i8*, ...) @zend_error(i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @209, i32 0, i32 0))
  br label %18

18:                                               ; preds = %17, %3
  %19 = load %75*, %75** %7, align 8
  %20 = bitcast %75* %19 to %14*
  call void @zend_iterator_init(%14* %20)
  br label %21

21:                                               ; preds = %18
  %22 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #15
  %23 = load %75*, %75** %7, align 8
  %24 = getelementptr inbounds %75, %75* %23, i32 0, i32 0
  %25 = getelementptr inbounds %14, %14* %24, i32 0, i32 1
  store %29* %25, %29** %8, align 8
  %26 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  %27 = load %29*, %29** %5, align 8
  store %29* %27, %29** %9, align 8
  %28 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #15
  %29 = load %29*, %29** %9, align 8
  %30 = getelementptr inbounds %29, %29* %29, i32 0, i32 0
  %31 = bitcast %30* %30 to %63**
  %32 = load %63*, %63** %31, align 8
  store %63* %32, %63** %10, align 8
  %33 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #15
  %34 = load %29*, %29** %9, align 8
  %35 = getelementptr inbounds %29, %29* %34, i32 0, i32 1
  %36 = bitcast %31* %35 to i32*
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %11, align 4
  br label %38

38:                                               ; preds = %21
  %39 = load %63*, %63** %10, align 8
  %40 = load %29*, %29** %8, align 8
  %41 = getelementptr inbounds %29, %29* %40, i32 0, i32 0
  %42 = bitcast %30* %41 to %63**
  store %63* %39, %63** %42, align 8
  %43 = load i32, i32* %11, align 4
  %44 = load %29*, %29** %8, align 8
  %45 = getelementptr inbounds %29, %29* %44, i32 0, i32 1
  %46 = bitcast %31* %45 to i32*
  store i32 %43, i32* %46, align 8
  br label %47

47:                                               ; preds = %38
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %11, align 4
  %50 = and i32 %49, 1024
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = load %63*, %63** %10, align 8
  %54 = getelementptr inbounds %63, %63* %53, i32 0, i32 0
  %55 = getelementptr inbounds %8, %8* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %55, align 4
  br label %58

58:                                               ; preds = %52, %48
  %59 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %59) #15
  %60 = bitcast %63** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #15
  %61 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #15
  %62 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #15
  br label %63

63:                                               ; preds = %58
  br label %64

64:                                               ; preds = %63
  %65 = load %75*, %75** %7, align 8
  %66 = getelementptr inbounds %75, %75* %65, i32 0, i32 0
  %67 = getelementptr inbounds %14, %14* %66, i32 0, i32 2
  store %13* @date_period_it_funcs, %13** %67, align 8
  %68 = load %29*, %29** %5, align 8
  %69 = getelementptr inbounds %29, %29* %68, i32 0, i32 0
  %70 = bitcast %30* %69 to %15**
  %71 = load %15*, %15** %70, align 8
  %72 = call %71* @482(%15* %71)
  %73 = load %75*, %75** %7, align 8
  %74 = getelementptr inbounds %75, %75* %73, i32 0, i32 2
  store %71* %72, %71** %74, align 8
  br label %75

75:                                               ; preds = %64
  %76 = load %75*, %75** %7, align 8
  %77 = getelementptr inbounds %75, %75* %76, i32 0, i32 1
  %78 = getelementptr inbounds %29, %29* %77, i32 0, i32 1
  %79 = bitcast %31* %78 to i32*
  store i32 0, i32* %79, align 8
  br label %80

80:                                               ; preds = %75
  br label %81

81:                                               ; preds = %80
  %82 = load %75*, %75** %7, align 8
  %83 = bitcast %75* %82 to %14*
  %84 = bitcast %75** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #15
  ret %14* %83
}

declare dso_local noalias i8* @_emalloc_128() #4

declare dso_local void @zend_error(i32, i8*, ...) #4

declare dso_local void @zend_iterator_init(%14*) #4

; Function Attrs: inlinehint nounwind uwtable
define internal %71* @482(%15* %0) #8 {
  %2 = alloca %15*, align 8
  store %15* %0, %15** %2, align 8
  %3 = load %15*, %15** %2, align 8
  %4 = bitcast %15* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 sub (i64 0, i64 ptrtoint (%15* getelementptr inbounds (%71, %71* null, i32 0, i32 8) to i64))
  %6 = bitcast i8* %5 to %71*
  ret %71* %6
}

; Function Attrs: nounwind uwtable
define dso_local %29* @php_date_instantiate(%6* %0, %29* %1) #0 {
  %3 = alloca %6*, align 8
  %4 = alloca %29*, align 8
  store %6* %0, %6** %3, align 8
  store %29* %1, %29** %4, align 8
  %5 = load %29*, %29** %4, align 8
  %6 = load %6*, %6** %3, align 8
  %7 = call i32 @_object_init_ex(%29* %5, %6* %6)
  %8 = load %29*, %29** %4, align 8
  ret %29* %8
}

declare dso_local i32 @_object_init_ex(%29*, %6*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @php_date_initialize(%61* %0, i8* %1, i64 %2, i8* %3, %29* %4, i32 %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %61*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %29*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %52*, align 8
  %15 = alloca %53*, align 8
  %16 = alloca %34*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca %64*, align 8
  store %61* %0, %61** %8, align 8
  store i8* %1, i8** %9, align 8
  store i64 %2, i64* %10, align 8
  store i8* %3, i8** %11, align 8
  store %29* %4, %29** %12, align 8
  store i32 %5, i32* %13, align 4
  %25 = bitcast %52** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #15
  %26 = bitcast %53** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  store %53* null, %53** %15, align 8
  %27 = bitcast %34** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #15
  store %34* null, %34** %16, align 8
  %28 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #15
  store i32 3, i32* %17, align 4
  %29 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #15
  store i32 0, i32* %18, align 4
  %30 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #15
  store i8* null, i8** %19, align 8
  %31 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #15
  store i64 0, i64* %20, align 8
  %32 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #15
  %33 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #15
  %34 = load %61*, %61** %8, align 8
  %35 = getelementptr inbounds %61, %61* %34, i32 0, i32 0
  %36 = load %52*, %52** %35, align 8
  %37 = icmp ne %52* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %6
  %39 = load %61*, %61** %8, align 8
  %40 = getelementptr inbounds %61, %61* %39, i32 0, i32 0
  %41 = load %52*, %52** %40, align 8
  call void @timelib_time_dtor(%52* %41)
  br label %42

42:                                               ; preds = %38, %6
  %43 = load i8*, i8** %11, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %45, label %72

45:                                               ; preds = %42
  %46 = load i8*, i8** %11, align 8
  %47 = load i64, i64* %10, align 8
  %48 = icmp ne i64 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = load i8*, i8** %9, align 8
  br label %52

51:                                               ; preds = %45
  br label %52

52:                                               ; preds = %51, %49
  %53 = phi i8* [ %50, %49 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @210, i32 0, i32 0), %51 ]
  %54 = load i64, i64* %10, align 8
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = load i64, i64* %10, align 8
  br label %59

58:                                               ; preds = %52
  br label %59

59:                                               ; preds = %58, %56
  %60 = phi i64 [ %57, %56 ], [ 0, %58 ]
  %61 = load %41*, %41** @php_date_global_timezone_db, align 8
  %62 = icmp ne %41* %61, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %67

65:                                               ; preds = %59
  %66 = call %41* @timelib_builtin_db()
  br label %67

67:                                               ; preds = %65, %63
  %68 = phi %41* [ %64, %63 ], [ %66, %65 ]
  %69 = call %52* @timelib_parse_from_format(i8* %46, i8* %53, i64 %60, %34** %16, %41* %68, %53* (i8*, %41*, i32*)* @php_date_parse_tzfile_wrapper)
  %70 = load %61*, %61** %8, align 8
  %71 = getelementptr inbounds %61, %61* %70, i32 0, i32 0
  store %52* %69, %52** %71, align 8
  br label %98

72:                                               ; preds = %42
  %73 = load i64, i64* %10, align 8
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = load i8*, i8** %9, align 8
  br label %78

77:                                               ; preds = %72
  br label %78

78:                                               ; preds = %77, %75
  %79 = phi i8* [ %76, %75 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @211, i32 0, i32 0), %77 ]
  %80 = load i64, i64* %10, align 8
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  %83 = load i64, i64* %10, align 8
  br label %85

84:                                               ; preds = %78
  br label %85

85:                                               ; preds = %84, %82
  %86 = phi i64 [ %83, %82 ], [ 3, %84 ]
  %87 = load %41*, %41** @php_date_global_timezone_db, align 8
  %88 = icmp ne %41* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %93

91:                                               ; preds = %85
  %92 = call %41* @timelib_builtin_db()
  br label %93

93:                                               ; preds = %91, %89
  %94 = phi %41* [ %90, %89 ], [ %92, %91 ]
  %95 = call %52* @timelib_strtotime(i8* %79, i64 %86, %34** %16, %41* %94, %53* (i8*, %41*, i32*)* @php_date_parse_tzfile_wrapper)
  %96 = load %61*, %61** %8, align 8
  %97 = getelementptr inbounds %61, %61* %96, i32 0, i32 0
  store %52* %95, %52** %97, align 8
  br label %98

98:                                               ; preds = %93, %67
  %99 = load %34*, %34** %16, align 8
  call void @483(%34* %99)
  %100 = load i32, i32* %13, align 4
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %131

102:                                              ; preds = %98
  %103 = load %34*, %34** %16, align 8
  %104 = icmp ne %34* %103, null
  br i1 %104, label %105, label %131

105:                                              ; preds = %102
  %106 = load %34*, %34** %16, align 8
  %107 = getelementptr inbounds %34, %34* %106, i32 0, i32 2
  %108 = load i32, i32* %107, align 8
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %131

110:                                              ; preds = %105
  %111 = load i8*, i8** %9, align 8
  %112 = load %34*, %34** %16, align 8
  %113 = getelementptr inbounds %34, %34* %112, i32 0, i32 0
  %114 = load %35*, %35** %113, align 8
  %115 = getelementptr inbounds %35, %35* %114, i64 0
  %116 = getelementptr inbounds %35, %35* %115, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = load %34*, %34** %16, align 8
  %119 = getelementptr inbounds %34, %34* %118, i32 0, i32 0
  %120 = load %35*, %35** %119, align 8
  %121 = getelementptr inbounds %35, %35* %120, i64 0
  %122 = getelementptr inbounds %35, %35* %121, i32 0, i32 2
  %123 = load i8, i8* %122, align 8
  %124 = sext i8 %123 to i32
  %125 = load %34*, %34** %16, align 8
  %126 = getelementptr inbounds %34, %34* %125, i32 0, i32 0
  %127 = load %35*, %35** %126, align 8
  %128 = getelementptr inbounds %35, %35* %127, i64 0
  %129 = getelementptr inbounds %35, %35* %128, i32 0, i32 3
  %130 = load i8*, i8** %129, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @212, i32 0, i32 0), i8* %111, i32 %117, i32 %124, i8* %130)
  br label %131

131:                                              ; preds = %110, %105, %102, %98
  %132 = load %34*, %34** %16, align 8
  %133 = icmp ne %34* %132, null
  br i1 %133, label %134, label %145

134:                                              ; preds = %131
  %135 = load %34*, %34** %16, align 8
  %136 = getelementptr inbounds %34, %34* %135, i32 0, i32 2
  %137 = load i32, i32* %136, align 8
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %145

139:                                              ; preds = %134
  %140 = load %61*, %61** %8, align 8
  %141 = getelementptr inbounds %61, %61* %140, i32 0, i32 0
  %142 = load %52*, %52** %141, align 8
  call void @timelib_time_dtor(%52* %142)
  %143 = load %61*, %61** %8, align 8
  %144 = getelementptr inbounds %61, %61* %143, i32 0, i32 0
  store %52* null, %52** %144, align 8
  store i32 0, i32* %7, align 4
  store i32 1, i32* %23, align 4
  br label %254

145:                                              ; preds = %134, %131
  %146 = load %29*, %29** %12, align 8
  %147 = icmp ne %29* %146, null
  br i1 %147, label %148, label %190

148:                                              ; preds = %145
  %149 = bitcast %64** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %149) #15
  %150 = load %29*, %29** %12, align 8
  %151 = getelementptr inbounds %29, %29* %150, i32 0, i32 0
  %152 = bitcast %30* %151 to %15**
  %153 = load %15*, %15** %152, align 8
  %154 = call %64* @484(%15* %153)
  store %64* %154, %64** %24, align 8
  %155 = load %64*, %64** %24, align 8
  %156 = getelementptr inbounds %64, %64* %155, i32 0, i32 1
  %157 = load i32, i32* %156, align 4
  switch i32 %157, label %185 [
    i32 3, label %158
    i32 1, label %163
    i32 2, label %168
  ]

158:                                              ; preds = %148
  %159 = load %64*, %64** %24, align 8
  %160 = getelementptr inbounds %64, %64* %159, i32 0, i32 2
  %161 = bitcast %65* %160 to %53**
  %162 = load %53*, %53** %161, align 8
  store %53* %162, %53** %15, align 8
  br label %185

163:                                              ; preds = %148
  %164 = load %64*, %64** %24, align 8
  %165 = getelementptr inbounds %64, %64* %164, i32 0, i32 2
  %166 = bitcast %65* %165 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %20, align 8
  br label %185

168:                                              ; preds = %148
  %169 = load %64*, %64** %24, align 8
  %170 = getelementptr inbounds %64, %64* %169, i32 0, i32 2
  %171 = bitcast %65* %170 to %66*
  %172 = getelementptr inbounds %66, %66* %171, i32 0, i32 0
  %173 = load i64, i64* %172, align 8
  store i64 %173, i64* %20, align 8
  %174 = load %64*, %64** %24, align 8
  %175 = getelementptr inbounds %64, %64* %174, i32 0, i32 2
  %176 = bitcast %65* %175 to %66*
  %177 = getelementptr inbounds %66, %66* %176, i32 0, i32 2
  %178 = load i32, i32* %177, align 8
  store i32 %178, i32* %18, align 4
  %179 = load %64*, %64** %24, align 8
  %180 = getelementptr inbounds %64, %64* %179, i32 0, i32 2
  %181 = bitcast %65* %180 to %66*
  %182 = getelementptr inbounds %66, %66* %181, i32 0, i32 1
  %183 = load i8*, i8** %182, align 8
  %184 = call noalias i8* @_estrdup(i8* %183)
  store i8* %184, i8** %19, align 8
  br label %185

185:                                              ; preds = %148, %168, %163, %158
  %186 = load %64*, %64** %24, align 8
  %187 = getelementptr inbounds %64, %64* %186, i32 0, i32 1
  %188 = load i32, i32* %187, align 4
  store i32 %188, i32* %17, align 4
  %189 = bitcast %64** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #15
  br label %206

190:                                              ; preds = %145
  %191 = load %61*, %61** %8, align 8
  %192 = getelementptr inbounds %61, %61* %191, i32 0, i32 0
  %193 = load %52*, %52** %192, align 8
  %194 = getelementptr inbounds %52, %52* %193, i32 0, i32 9
  %195 = load %53*, %53** %194, align 8
  %196 = icmp ne %53* %195, null
  br i1 %196, label %197, label %203

197:                                              ; preds = %190
  %198 = load %61*, %61** %8, align 8
  %199 = getelementptr inbounds %61, %61* %198, i32 0, i32 0
  %200 = load %52*, %52** %199, align 8
  %201 = getelementptr inbounds %52, %52* %200, i32 0, i32 9
  %202 = load %53*, %53** %201, align 8
  store %53* %202, %53** %15, align 8
  br label %205

203:                                              ; preds = %190
  %204 = call %53* @get_timezone_info()
  store %53* %204, %53** %15, align 8
  br label %205

205:                                              ; preds = %203, %197
  br label %206

206:                                              ; preds = %205, %185
  %207 = call %52* @timelib_time_ctor()
  store %52* %207, %52** %14, align 8
  %208 = load i32, i32* %17, align 4
  %209 = load %52*, %52** %14, align 8
  %210 = getelementptr inbounds %52, %52* %209, i32 0, i32 21
  store i32 %208, i32* %210, align 8
  %211 = load i32, i32* %17, align 4
  switch i32 %211, label %232 [
    i32 3, label %212
    i32 1, label %216
    i32 2, label %221
  ]

212:                                              ; preds = %206
  %213 = load %53*, %53** %15, align 8
  %214 = load %52*, %52** %14, align 8
  %215 = getelementptr inbounds %52, %52* %214, i32 0, i32 9
  store %53* %213, %53** %215, align 8
  br label %232

216:                                              ; preds = %206
  %217 = load i64, i64* %20, align 8
  %218 = trunc i64 %217 to i32
  %219 = load %52*, %52** %14, align 8
  %220 = getelementptr inbounds %52, %52* %219, i32 0, i32 7
  store i32 %218, i32* %220, align 8
  br label %232

221:                                              ; preds = %206
  %222 = load i64, i64* %20, align 8
  %223 = trunc i64 %222 to i32
  %224 = load %52*, %52** %14, align 8
  %225 = getelementptr inbounds %52, %52* %224, i32 0, i32 7
  store i32 %223, i32* %225, align 8
  %226 = load i32, i32* %18, align 4
  %227 = load %52*, %52** %14, align 8
  %228 = getelementptr inbounds %52, %52* %227, i32 0, i32 10
  store i32 %226, i32* %228, align 8
  %229 = load i8*, i8** %19, align 8
  %230 = load %52*, %52** %14, align 8
  %231 = getelementptr inbounds %52, %52* %230, i32 0, i32 8
  store i8* %229, i8** %231, align 8
  br label %232

232:                                              ; preds = %206, %221, %216, %212
  call void @485(i64* %21, i64* %22)
  %233 = load %52*, %52** %14, align 8
  %234 = load i64, i64* %21, align 8
  call void @timelib_unixtime2local(%52* %233, i64 %234)
  %235 = load %52*, %52** %14, align 8
  %236 = load i64, i64* %22, align 8
  %237 = trunc i64 %236 to i32
  call void @486(%52* %235, i32 %237)
  %238 = load %61*, %61** %8, align 8
  %239 = getelementptr inbounds %61, %61* %238, i32 0, i32 0
  %240 = load %52*, %52** %239, align 8
  %241 = load %52*, %52** %14, align 8
  call void @timelib_fill_holes(%52* %240, %52* %241, i32 2)
  %242 = load %61*, %61** %8, align 8
  %243 = getelementptr inbounds %61, %61* %242, i32 0, i32 0
  %244 = load %52*, %52** %243, align 8
  %245 = load %53*, %53** %15, align 8
  call void @timelib_update_ts(%52* %244, %53* %245)
  %246 = load %61*, %61** %8, align 8
  %247 = getelementptr inbounds %61, %61* %246, i32 0, i32 0
  %248 = load %52*, %52** %247, align 8
  call void @timelib_update_from_sse(%52* %248)
  %249 = load %61*, %61** %8, align 8
  %250 = getelementptr inbounds %61, %61* %249, i32 0, i32 0
  %251 = load %52*, %52** %250, align 8
  %252 = getelementptr inbounds %52, %52* %251, i32 0, i32 16
  store i32 0, i32* %252, align 4
  %253 = load %52*, %52** %14, align 8
  call void @timelib_time_dtor(%52* %253)
  store i32 1, i32* %7, align 4
  store i32 1, i32* %23, align 4
  br label %254

254:                                              ; preds = %232, %139
  %255 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %255) #15
  %256 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %256) #15
  %257 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #15
  %258 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %258) #15
  %259 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %259) #15
  %260 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %260) #15
  %261 = bitcast %34** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %261) #15
  %262 = bitcast %53** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #15
  %263 = bitcast %52** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %263) #15
  %264 = load i32, i32* %7, align 4
  ret i32 %264
}

declare dso_local %52* @timelib_parse_from_format(i8*, i8*, i64, %34**, %41*, %53* (i8*, %41*, i32*)*) #4

; Function Attrs: nounwind uwtable
define internal void @483(%34* %0) #0 {
  %2 = alloca %34*, align 8
  store %34* %0, %34** %2, align 8
  %3 = load %34*, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  %4 = icmp ne %34* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load %34*, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  call void @timelib_error_container_dtor(%34* %6)
  store %34* null, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  br label %7

7:                                                ; preds = %5, %1
  %8 = load %34*, %34** %2, align 8
  store %34* %8, %34** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 3), align 8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal %64* @484(%15* %0) #8 {
  %2 = alloca %15*, align 8
  store %15* %0, %15** %2, align 8
  %3 = load %15*, %15** %2, align 8
  %4 = bitcast %15* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 sub (i64 0, i64 ptrtoint (%15* getelementptr inbounds (%64, %64* null, i32 0, i32 4) to i64))
  %6 = bitcast i8* %5 to %64*
  ret %64* %6
}

; Function Attrs: nounwind uwtable
define internal void @485(i64* %0, i64* %1) #0 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca %50, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = bitcast %50* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %6) #15
  %7 = bitcast %50* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  %8 = call i32 @gettimeofday(%50* %5, %51* null) #15
  %9 = getelementptr inbounds %50, %50* %5, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = load i64*, i64** %3, align 8
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %50, %50* %5, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = load i64*, i64** %4, align 8
  store i64 %13, i64* %14, align 8
  %15 = bitcast %50* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %15) #15
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @486(%52* %0, i32 %1) #0 {
  %3 = alloca %52*, align 8
  %4 = alloca i32, align 4
  store %52* %0, %52** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = load %52*, %52** %3, align 8
  %8 = getelementptr inbounds %52, %52* %7, i32 0, i32 6
  store i64 %6, i64* %8, align 8
  ret void
}

declare dso_local void @timelib_update_from_sse(%52*) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @487(%29* %0, i8** %1, i64* %2, i32 %3) #6 {
  %5 = alloca i32, align 4
  %6 = alloca %29*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %28*, align 8
  %11 = alloca i32, align 4
  store %29* %0, %29** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  %12 = bitcast %28** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = load %29*, %29** %6, align 8
  %14 = load i32, i32* %9, align 4
  %15 = call i32 @468(%29* %13, %28** %10, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

18:                                               ; preds = %4
  %19 = load i32, i32* %9, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = load %28*, %28** %10, align 8
  %23 = icmp ne %28* %22, null
  %24 = xor i1 %23, true
  %25 = xor i1 %24, true
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = call i64 @llvm.expect.i64(i64 %28, i64 0)
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %21
  %32 = load i8**, i8*** %7, align 8
  store i8* null, i8** %32, align 8
  %33 = load i64*, i64** %8, align 8
  store i64 0, i64* %33, align 8
  br label %43

34:                                               ; preds = %21, %18
  %35 = load %28*, %28** %10, align 8
  %36 = getelementptr inbounds %28, %28* %35, i32 0, i32 3
  %37 = getelementptr inbounds [1 x i8], [1 x i8]* %36, i32 0, i32 0
  %38 = load i8**, i8*** %7, align 8
  store i8* %37, i8** %38, align 8
  %39 = load %28*, %28** %10, align 8
  %40 = getelementptr inbounds %28, %28* %39, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = load i64*, i64** %8, align 8
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %34, %31
  store i32 1, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

44:                                               ; preds = %43, %17
  %45 = bitcast %28** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #15
  %46 = load i32, i32* %5, align 4
  ret i32 %46
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @488(%29* %0, %29** %1, %6* %2, i32 %3) #6 {
  %5 = alloca i32, align 4
  %6 = alloca %29*, align 8
  %7 = alloca %29**, align 8
  %8 = alloca %6*, align 8
  %9 = alloca i32, align 4
  store %29* %0, %29** %6, align 8
  store %29** %1, %29*** %7, align 8
  store %6* %2, %6** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load %29*, %29** %6, align 8
  %11 = call zeroext i8 @490(%29* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = call i64 @llvm.expect.i64(i64 %17, i64 1)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %4
  %21 = load %6*, %6** %8, align 8
  %22 = icmp ne %6* %21, null
  br i1 %22, label %23, label %40

23:                                               ; preds = %20
  %24 = load %29*, %29** %6, align 8
  %25 = getelementptr inbounds %29, %29* %24, i32 0, i32 0
  %26 = bitcast %30* %25 to %15**
  %27 = load %15*, %15** %26, align 8
  %28 = getelementptr inbounds %15, %15* %27, i32 0, i32 2
  %29 = load %6*, %6** %28, align 8
  %30 = load %6*, %6** %8, align 8
  %31 = call zeroext i8 @instanceof_function(%6* %29, %6* %30)
  %32 = zext i8 %31 to i32
  %33 = icmp ne i32 %32, 0
  %34 = xor i1 %33, true
  %35 = xor i1 %34, true
  %36 = zext i1 %35 to i32
  %37 = sext i32 %36 to i64
  %38 = call i64 @llvm.expect.i64(i64 %37, i64 1)
  %39 = icmp ne i64 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %23, %20
  %41 = load %29*, %29** %6, align 8
  %42 = load %29**, %29*** %7, align 8
  store %29* %41, %29** %42, align 8
  br label %61

43:                                               ; preds = %23, %4
  %44 = load i32, i32* %9, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %59

46:                                               ; preds = %43
  %47 = load %29*, %29** %6, align 8
  %48 = call zeroext i8 @490(%29* %47)
  %49 = zext i8 %48 to i32
  %50 = icmp eq i32 %49, 1
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 1)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %46
  %58 = load %29**, %29*** %7, align 8
  store %29* null, %29** %58, align 8
  br label %60

59:                                               ; preds = %46, %43
  store i32 0, i32* %5, align 4
  br label %62

60:                                               ; preds = %57
  br label %61

61:                                               ; preds = %60, %40
  store i32 1, i32* %5, align 4
  br label %62

62:                                               ; preds = %61, %59
  %63 = load i32, i32* %5, align 4
  ret i32 %63
}

; Function Attrs: inlinehint nounwind uwtable
define internal %61* @489(%15* %0) #8 {
  %2 = alloca %15*, align 8
  store %15* %0, %15** %2, align 8
  %3 = load %15*, %15** %2, align 8
  %4 = bitcast %15* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 sub (i64 0, i64 ptrtoint (%15* getelementptr inbounds (%61, %61* null, i32 0, i32 2) to i64))
  %6 = bitcast i8* %5 to %61*
  ret %61* %6
}

declare dso_local void @_zval_ptr_dtor(%29*) #4

declare dso_local void @zend_replace_error_handling(i32, %6*, %70*) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i8 @490(%29* %0) #6 {
  %2 = alloca %29*, align 8
  store %29* %0, %29** %2, align 8
  %3 = load %29*, %29** %2, align 8
  %4 = getelementptr inbounds %29, %29* %3, i32 0, i32 1
  %5 = bitcast %31* %4 to %76*
  %6 = getelementptr inbounds %76, %76* %5, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  ret i8 %7
}

declare dso_local void @zend_restore_error_handling(%70*) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @491(%29* %0, %29** %1, i32 %2, i32 %3) #6 {
  %5 = alloca i32, align 4
  %6 = alloca %29*, align 8
  %7 = alloca %29**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %29* %0, %29** %6, align 8
  store %29** %1, %29*** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %10 = load %29*, %29** %6, align 8
  %11 = call zeroext i8 @490(%29* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 7
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = call i64 @llvm.expect.i64(i64 %17, i64 1)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %4
  %21 = load i32, i32* %9, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %37

23:                                               ; preds = %20
  %24 = load %29*, %29** %6, align 8
  %25 = call zeroext i8 @490(%29* %24)
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 8
  %28 = xor i1 %27, true
  %29 = xor i1 %28, true
  %30 = zext i1 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = call i64 @llvm.expect.i64(i64 %31, i64 1)
  %33 = icmp ne i64 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %23, %4
  %35 = load %29*, %29** %6, align 8
  %36 = load %29**, %29*** %7, align 8
  store %29* %35, %29** %36, align 8
  br label %55

37:                                               ; preds = %23, %20
  %38 = load i32, i32* %8, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %53

40:                                               ; preds = %37
  %41 = load %29*, %29** %6, align 8
  %42 = call zeroext i8 @490(%29* %41)
  %43 = zext i8 %42 to i32
  %44 = icmp eq i32 %43, 1
  %45 = xor i1 %44, true
  %46 = xor i1 %45, true
  %47 = zext i1 %46 to i32
  %48 = sext i32 %47 to i64
  %49 = call i64 @llvm.expect.i64(i64 %48, i64 1)
  %50 = icmp ne i64 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %40
  %52 = load %29**, %29*** %7, align 8
  store %29* null, %29** %52, align 8
  br label %54

53:                                               ; preds = %40, %37
  store i32 0, i32* %5, align 4
  br label %56

54:                                               ; preds = %51
  br label %55

55:                                               ; preds = %54, %34
  store i32 1, i32* %5, align 4
  br label %56

56:                                               ; preds = %55, %53
  %57 = load i32, i32* %5, align 4
  ret i32 %57
}

; Function Attrs: nounwind uwtable
define internal i32 @492(%61** %0, %7* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %61**, align 8
  %5 = alloca %7*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %29*, align 8
  %8 = alloca %29*, align 8
  %9 = alloca %29, align 8
  %10 = alloca %53*, align 8
  %11 = alloca %64*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %61** %0, %61*** %4, align 8
  store %7* %1, %7** %5, align 8
  %16 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  %17 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #15
  %18 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  %19 = bitcast %29* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %19) #15
  %20 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast %64** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = load %7*, %7** %5, align 8
  %23 = call %29* @zend_hash_str_find(%7* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i64 4)
  store %29* %23, %29** %6, align 8
  %24 = load %29*, %29** %6, align 8
  %25 = icmp ne %29* %24, null
  br i1 %25, label %26, label %184

26:                                               ; preds = %2
  %27 = load %29*, %29** %6, align 8
  %28 = call zeroext i8 @490(%29* %27)
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %31, label %184

31:                                               ; preds = %26
  %32 = load %7*, %7** %5, align 8
  %33 = call %29* @zend_hash_str_find(%7* %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @422, i32 0, i32 0), i64 13)
  store %29* %33, %29** %8, align 8
  %34 = load %29*, %29** %8, align 8
  %35 = icmp ne %29* %34, null
  br i1 %35, label %36, label %183

36:                                               ; preds = %31
  %37 = load %29*, %29** %8, align 8
  %38 = call zeroext i8 @490(%29* %37)
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %39, 4
  br i1 %40, label %41, label %183

41:                                               ; preds = %36
  %42 = load %7*, %7** %5, align 8
  %43 = call %29* @zend_hash_str_find(%7* %42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @288, i32 0, i32 0), i64 8)
  store %29* %43, %29** %7, align 8
  %44 = load %29*, %29** %7, align 8
  %45 = icmp ne %29* %44, null
  br i1 %45, label %46, label %182

46:                                               ; preds = %41
  %47 = load %29*, %29** %7, align 8
  %48 = call zeroext i8 @490(%29* %47)
  %49 = zext i8 %48 to i32
  %50 = icmp eq i32 %49, 6
  br i1 %50, label %51, label %182

51:                                               ; preds = %46
  %52 = load %29*, %29** %8, align 8
  %53 = getelementptr inbounds %29, %29* %52, i32 0, i32 0
  %54 = bitcast %30* %53 to i64*
  %55 = load i64, i64* %54, align 8
  switch i64 %55, label %181 [
    i64 1, label %56
    i64 2, label %56
    i64 3, label %126
  ]

56:                                               ; preds = %51, %51
  %57 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #15
  %58 = load %29*, %29** %6, align 8
  %59 = getelementptr inbounds %29, %29* %58, i32 0, i32 0
  %60 = bitcast %30* %59 to %28**
  %61 = load %28*, %28** %60, align 8
  %62 = getelementptr inbounds %28, %28* %61, i32 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = load %29*, %29** %7, align 8
  %65 = getelementptr inbounds %29, %29* %64, i32 0, i32 0
  %66 = bitcast %30* %65 to %28**
  %67 = load %28*, %28** %66, align 8
  %68 = getelementptr inbounds %28, %28* %67, i32 0, i32 2
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %63, %69
  %71 = add i64 %70, 2
  %72 = call noalias i8* @_emalloc(i64 %71) #18
  store i8* %72, i8** %12, align 8
  %73 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #15
  %74 = load i8*, i8** %12, align 8
  %75 = load %29*, %29** %6, align 8
  %76 = getelementptr inbounds %29, %29* %75, i32 0, i32 0
  %77 = bitcast %30* %76 to %28**
  %78 = load %28*, %28** %77, align 8
  %79 = getelementptr inbounds %28, %28* %78, i32 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = load %29*, %29** %7, align 8
  %82 = getelementptr inbounds %29, %29* %81, i32 0, i32 0
  %83 = bitcast %30* %82 to %28**
  %84 = load %28*, %28** %83, align 8
  %85 = getelementptr inbounds %28, %28* %84, i32 0, i32 2
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %80, %86
  %88 = add i64 %87, 2
  %89 = load %29*, %29** %6, align 8
  %90 = getelementptr inbounds %29, %29* %89, i32 0, i32 0
  %91 = bitcast %30* %90 to %28**
  %92 = load %28*, %28** %91, align 8
  %93 = getelementptr inbounds %28, %28* %92, i32 0, i32 3
  %94 = getelementptr inbounds [1 x i8], [1 x i8]* %93, i32 0, i32 0
  %95 = load %29*, %29** %7, align 8
  %96 = getelementptr inbounds %29, %29* %95, i32 0, i32 0
  %97 = bitcast %30* %96 to %28**
  %98 = load %28*, %28** %97, align 8
  %99 = getelementptr inbounds %28, %28* %98, i32 0, i32 3
  %100 = getelementptr inbounds [1 x i8], [1 x i8]* %99, i32 0, i32 0
  %101 = call i32 (i8*, i64, i8*, ...) @ap_php_snprintf(i8* %74, i64 %88, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @434, i32 0, i32 0), i8* %94, i8* %100)
  %102 = load %61**, %61*** %4, align 8
  %103 = load %61*, %61** %102, align 8
  %104 = load i8*, i8** %12, align 8
  %105 = load %29*, %29** %6, align 8
  %106 = getelementptr inbounds %29, %29* %105, i32 0, i32 0
  %107 = bitcast %30* %106 to %28**
  %108 = load %28*, %28** %107, align 8
  %109 = getelementptr inbounds %28, %28* %108, i32 0, i32 2
  %110 = load i64, i64* %109, align 8
  %111 = load %29*, %29** %7, align 8
  %112 = getelementptr inbounds %29, %29* %111, i32 0, i32 0
  %113 = bitcast %30* %112 to %28**
  %114 = load %28*, %28** %113, align 8
  %115 = getelementptr inbounds %28, %28* %114, i32 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %110, %116
  %118 = add i64 %117, 1
  %119 = call i32 @php_date_initialize(%61* %103, i8* %104, i64 %118, i8* null, %29* null, i32 0)
  store i32 %119, i32* %13, align 4
  %120 = load i8*, i8** %12, align 8
  call void @_efree(i8* %120)
  %121 = load i32, i32* %13, align 4
  %122 = icmp eq i32 1, %121
  %123 = zext i1 %122 to i32
  store i32 %123, i32* %3, align 4
  store i32 1, i32* %14, align 4
  %124 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %124) #15
  %125 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #15
  br label %185

126:                                              ; preds = %51
  %127 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %127) #15
  %128 = load %29*, %29** %7, align 8
  %129 = getelementptr inbounds %29, %29* %128, i32 0, i32 0
  %130 = bitcast %30* %129 to %28**
  %131 = load %28*, %28** %130, align 8
  %132 = getelementptr inbounds %28, %28* %131, i32 0, i32 3
  %133 = getelementptr inbounds [1 x i8], [1 x i8]* %132, i32 0, i32 0
  %134 = load %41*, %41** @php_date_global_timezone_db, align 8
  %135 = icmp ne %41* %134, null
  br i1 %135, label %136, label %138

136:                                              ; preds = %126
  %137 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %140

138:                                              ; preds = %126
  %139 = call %41* @timelib_builtin_db()
  br label %140

140:                                              ; preds = %138, %136
  %141 = phi %41* [ %137, %136 ], [ %139, %138 ]
  %142 = call %53* @465(i8* %133, %41* %141)
  store %53* %142, %53** %10, align 8
  %143 = load %53*, %53** %10, align 8
  %144 = icmp eq %53* %143, null
  br i1 %144, label %145, label %146

145:                                              ; preds = %140
  store i32 0, i32* %3, align 4
  store i32 1, i32* %14, align 4
  br label %179

146:                                              ; preds = %140
  %147 = load %6*, %6** @date_ce_timezone, align 8
  %148 = call %29* @php_date_instantiate(%6* %147, %29* %9)
  %149 = getelementptr inbounds %29, %29* %148, i32 0, i32 0
  %150 = bitcast %30* %149 to %15**
  %151 = load %15*, %15** %150, align 8
  %152 = call %64* @484(%15* %151)
  store %64* %152, %64** %11, align 8
  %153 = load %64*, %64** %11, align 8
  %154 = getelementptr inbounds %64, %64* %153, i32 0, i32 1
  store i32 3, i32* %154, align 4
  %155 = load %53*, %53** %10, align 8
  %156 = load %64*, %64** %11, align 8
  %157 = getelementptr inbounds %64, %64* %156, i32 0, i32 2
  %158 = bitcast %65* %157 to %53**
  store %53* %155, %53** %158, align 8
  %159 = load %64*, %64** %11, align 8
  %160 = getelementptr inbounds %64, %64* %159, i32 0, i32 0
  store i32 1, i32* %160, align 8
  %161 = load %61**, %61*** %4, align 8
  %162 = load %61*, %61** %161, align 8
  %163 = load %29*, %29** %6, align 8
  %164 = getelementptr inbounds %29, %29* %163, i32 0, i32 0
  %165 = bitcast %30* %164 to %28**
  %166 = load %28*, %28** %165, align 8
  %167 = getelementptr inbounds %28, %28* %166, i32 0, i32 3
  %168 = getelementptr inbounds [1 x i8], [1 x i8]* %167, i32 0, i32 0
  %169 = load %29*, %29** %6, align 8
  %170 = getelementptr inbounds %29, %29* %169, i32 0, i32 0
  %171 = bitcast %30* %170 to %28**
  %172 = load %28*, %28** %171, align 8
  %173 = getelementptr inbounds %28, %28* %172, i32 0, i32 2
  %174 = load i64, i64* %173, align 8
  %175 = call i32 @php_date_initialize(%61* %162, i8* %168, i64 %174, i8* null, %29* %9, i32 0)
  store i32 %175, i32* %15, align 4
  call void @_zval_ptr_dtor(%29* %9)
  %176 = load i32, i32* %15, align 4
  %177 = icmp eq i32 1, %176
  %178 = zext i1 %177 to i32
  store i32 %178, i32* %3, align 4
  store i32 1, i32* %14, align 4
  br label %179

179:                                              ; preds = %146, %145
  %180 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %180) #15
  br label %185

181:                                              ; preds = %51
  br label %182

182:                                              ; preds = %181, %46, %41
  br label %183

183:                                              ; preds = %182, %36, %31
  br label %184

184:                                              ; preds = %183, %26, %2
  store i32 0, i32* %3, align 4
  store i32 1, i32* %14, align 4
  br label %185

185:                                              ; preds = %184, %179, %56
  %186 = bitcast %64** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %186) #15
  %187 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %187) #15
  %188 = bitcast %29* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %188) #15
  %189 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #15
  %190 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #15
  %191 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #15
  %192 = load i32, i32* %3, align 4
  ret i32 %192
}

declare dso_local void @zend_throw_error(%6*, i8*, ...) #4

; Function Attrs: nounwind uwtable
define internal void @493(%29* %0, %34* %1) #0 {
  %3 = alloca %29*, align 8
  %4 = alloca %34*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %29, align 8
  store %29* %0, %29** %3, align 8
  store %34* %1, %34** %4, align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #15
  %8 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %8) #15
  %9 = load %29*, %29** %3, align 8
  %10 = load %34*, %34** %4, align 8
  %11 = getelementptr inbounds %34, %34* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = call i32 @add_assoc_long_ex(%29* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @435, i32 0, i32 0), i64 13, i64 %13)
  %15 = call i32 @_array_init(%29* %6, i32 0)
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %41, %2
  %17 = load i32, i32* %5, align 4
  %18 = load %34*, %34** %4, align 8
  %19 = getelementptr inbounds %34, %34* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %17, %20
  br i1 %21, label %22, label %44

22:                                               ; preds = %16
  %23 = load %34*, %34** %4, align 8
  %24 = getelementptr inbounds %34, %34* %23, i32 0, i32 1
  %25 = load %35*, %35** %24, align 8
  %26 = load i32, i32* %5, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %35, %35* %25, i64 %27
  %29 = getelementptr inbounds %35, %35* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = load %34*, %34** %4, align 8
  %33 = getelementptr inbounds %34, %34* %32, i32 0, i32 1
  %34 = load %35*, %35** %33, align 8
  %35 = load i32, i32* %5, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %35, %35* %34, i64 %36
  %38 = getelementptr inbounds %35, %35* %37, i32 0, i32 3
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 @add_index_string(%29* %6, i64 %31, i8* %39)
  br label %41

41:                                               ; preds = %22
  %42 = load i32, i32* %5, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %5, align 4
  br label %16

44:                                               ; preds = %16
  %45 = load %29*, %29** %3, align 8
  %46 = call i32 @add_assoc_zval_ex(%29* %45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @436, i32 0, i32 0), i64 8, %29* %6)
  %47 = load %29*, %29** %3, align 8
  %48 = load %34*, %34** %4, align 8
  %49 = getelementptr inbounds %34, %34* %48, i32 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = sext i32 %50 to i64
  %52 = call i32 @add_assoc_long_ex(%29* %47, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @437, i32 0, i32 0), i64 11, i64 %51)
  %53 = call i32 @_array_init(%29* %6, i32 0)
  store i32 0, i32* %5, align 4
  br label %54

54:                                               ; preds = %79, %44
  %55 = load i32, i32* %5, align 4
  %56 = load %34*, %34** %4, align 8
  %57 = getelementptr inbounds %34, %34* %56, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = icmp slt i32 %55, %58
  br i1 %59, label %60, label %82

60:                                               ; preds = %54
  %61 = load %34*, %34** %4, align 8
  %62 = getelementptr inbounds %34, %34* %61, i32 0, i32 0
  %63 = load %35*, %35** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %35, %35* %63, i64 %65
  %67 = getelementptr inbounds %35, %35* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = load %34*, %34** %4, align 8
  %71 = getelementptr inbounds %34, %34* %70, i32 0, i32 0
  %72 = load %35*, %35** %71, align 8
  %73 = load i32, i32* %5, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %35, %35* %72, i64 %74
  %76 = getelementptr inbounds %35, %35* %75, i32 0, i32 3
  %77 = load i8*, i8** %76, align 8
  %78 = call i32 @add_index_string(%29* %6, i64 %69, i8* %77)
  br label %79

79:                                               ; preds = %60
  %80 = load i32, i32* %5, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %5, align 4
  br label %54

82:                                               ; preds = %54
  %83 = load %29*, %29** %3, align 8
  %84 = call i32 @add_assoc_zval_ex(%29* %83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @438, i32 0, i32 0), i64 6, %29* %6)
  %85 = bitcast %29* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %85) #15
  %86 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %86) #15
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @php_date_do_return_parsed_time(%1* %0, %29* %1, %52* %2, %34* %3) #0 {
  %5 = alloca %1*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %52*, align 8
  %8 = alloca %34*, align 8
  %9 = alloca %29, align 8
  store %1* %0, %1** %5, align 8
  store %29* %1, %29** %6, align 8
  store %52* %2, %52** %7, align 8
  store %34* %3, %34** %8, align 8
  %10 = bitcast %29* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #15
  %11 = load %29*, %29** %6, align 8
  %12 = call i32 @_array_init(%29* %11, i32 0)
  %13 = load %52*, %52** %7, align 8
  %14 = getelementptr inbounds %52, %52* %13, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, -99999
  br i1 %16, label %17, label %20

17:                                               ; preds = %4
  %18 = load %29*, %29** %6, align 8
  %19 = call i32 @add_assoc_bool_ex(%29* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 4, i32 0)
  br label %26

20:                                               ; preds = %4
  %21 = load %29*, %29** %6, align 8
  %22 = load %52*, %52** %7, align 8
  %23 = getelementptr inbounds %52, %52* %22, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = call i32 @add_assoc_long_ex(%29* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 4, i64 %24)
  br label %26

26:                                               ; preds = %20, %17
  %27 = load %52*, %52** %7, align 8
  %28 = getelementptr inbounds %52, %52* %27, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, -99999
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = load %29*, %29** %6, align 8
  %33 = call i32 @add_assoc_bool_ex(%29* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @207, i32 0, i32 0), i64 5, i32 0)
  br label %40

34:                                               ; preds = %26
  %35 = load %29*, %29** %6, align 8
  %36 = load %52*, %52** %7, align 8
  %37 = getelementptr inbounds %52, %52* %36, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = call i32 @add_assoc_long_ex(%29* %35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @207, i32 0, i32 0), i64 5, i64 %38)
  br label %40

40:                                               ; preds = %34, %31
  %41 = load %52*, %52** %7, align 8
  %42 = getelementptr inbounds %52, %52* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, -99999
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = load %29*, %29** %6, align 8
  %47 = call i32 @add_assoc_bool_ex(%29* %46, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 3, i32 0)
  br label %54

48:                                               ; preds = %40
  %49 = load %29*, %29** %6, align 8
  %50 = load %52*, %52** %7, align 8
  %51 = getelementptr inbounds %52, %52* %50, i32 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = call i32 @add_assoc_long_ex(%29* %49, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 3, i64 %52)
  br label %54

54:                                               ; preds = %48, %45
  %55 = load %52*, %52** %7, align 8
  %56 = getelementptr inbounds %52, %52* %55, i32 0, i32 3
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, -99999
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = load %29*, %29** %6, align 8
  %61 = call i32 @add_assoc_bool_ex(%29* %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @216, i32 0, i32 0), i64 4, i32 0)
  br label %68

62:                                               ; preds = %54
  %63 = load %29*, %29** %6, align 8
  %64 = load %52*, %52** %7, align 8
  %65 = getelementptr inbounds %52, %52* %64, i32 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = call i32 @add_assoc_long_ex(%29* %63, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @216, i32 0, i32 0), i64 4, i64 %66)
  br label %68

68:                                               ; preds = %62, %59
  %69 = load %52*, %52** %7, align 8
  %70 = getelementptr inbounds %52, %52* %69, i32 0, i32 4
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, -99999
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = load %29*, %29** %6, align 8
  %75 = call i32 @add_assoc_bool_ex(%29* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @217, i32 0, i32 0), i64 6, i32 0)
  br label %82

76:                                               ; preds = %68
  %77 = load %29*, %29** %6, align 8
  %78 = load %52*, %52** %7, align 8
  %79 = getelementptr inbounds %52, %52* %78, i32 0, i32 4
  %80 = load i64, i64* %79, align 8
  %81 = call i32 @add_assoc_long_ex(%29* %77, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @217, i32 0, i32 0), i64 6, i64 %80)
  br label %82

82:                                               ; preds = %76, %73
  %83 = load %52*, %52** %7, align 8
  %84 = getelementptr inbounds %52, %52* %83, i32 0, i32 5
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, -99999
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = load %29*, %29** %6, align 8
  %89 = call i32 @add_assoc_bool_ex(%29* %88, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @218, i32 0, i32 0), i64 6, i32 0)
  br label %96

90:                                               ; preds = %82
  %91 = load %29*, %29** %6, align 8
  %92 = load %52*, %52** %7, align 8
  %93 = getelementptr inbounds %52, %52* %92, i32 0, i32 5
  %94 = load i64, i64* %93, align 8
  %95 = call i32 @add_assoc_long_ex(%29* %91, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @218, i32 0, i32 0), i64 6, i64 %94)
  br label %96

96:                                               ; preds = %90, %87
  %97 = load %52*, %52** %7, align 8
  %98 = getelementptr inbounds %52, %52* %97, i32 0, i32 6
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, -99999
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = load %29*, %29** %6, align 8
  %103 = call i32 @add_assoc_bool_ex(%29* %102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @219, i32 0, i32 0), i64 8, i32 0)
  br label %112

104:                                              ; preds = %96
  %105 = load %29*, %29** %6, align 8
  %106 = load %52*, %52** %7, align 8
  %107 = getelementptr inbounds %52, %52* %106, i32 0, i32 6
  %108 = load i64, i64* %107, align 8
  %109 = sitofp i64 %108 to double
  %110 = fdiv double %109, 1.000000e+06
  %111 = call i32 @add_assoc_double_ex(%29* %105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @219, i32 0, i32 0), i64 8, double %110)
  br label %112

112:                                              ; preds = %104, %101
  %113 = load %29*, %29** %6, align 8
  %114 = load %34*, %34** %8, align 8
  call void @493(%29* %113, %34* %114)
  %115 = load %34*, %34** %8, align 8
  call void @timelib_error_container_dtor(%34* %115)
  %116 = load %29*, %29** %6, align 8
  %117 = load %52*, %52** %7, align 8
  %118 = getelementptr inbounds %52, %52* %117, i32 0, i32 20
  %119 = load i32, i32* %118, align 4
  %120 = call i32 @add_assoc_bool_ex(%29* %116, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @220, i32 0, i32 0), i64 12, i32 %119)
  %121 = load %52*, %52** %7, align 8
  %122 = getelementptr inbounds %52, %52* %121, i32 0, i32 20
  %123 = load i32, i32* %122, align 4
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %217

125:                                              ; preds = %112
  %126 = load %52*, %52** %7, align 8
  %127 = getelementptr inbounds %52, %52* %126, i32 0, i32 21
  %128 = load i32, i32* %127, align 8
  %129 = icmp eq i32 %128, -99999
  br i1 %129, label %130, label %133

130:                                              ; preds = %125
  %131 = load %29*, %29** %6, align 8
  %132 = call i32 @add_assoc_bool_ex(%29* %131, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @221, i32 0, i32 0), i64 9, i32 0)
  br label %140

133:                                              ; preds = %125
  %134 = load %29*, %29** %6, align 8
  %135 = load %52*, %52** %7, align 8
  %136 = getelementptr inbounds %52, %52* %135, i32 0, i32 21
  %137 = load i32, i32* %136, align 8
  %138 = zext i32 %137 to i64
  %139 = call i32 @add_assoc_long_ex(%29* %134, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @221, i32 0, i32 0), i64 9, i64 %138)
  br label %140

140:                                              ; preds = %133, %130
  %141 = load %52*, %52** %7, align 8
  %142 = getelementptr inbounds %52, %52* %141, i32 0, i32 21
  %143 = load i32, i32* %142, align 8
  switch i32 %143, label %216 [
    i32 1, label %144
    i32 3, label %165
    i32 2, label %190
  ]

144:                                              ; preds = %140
  %145 = load %52*, %52** %7, align 8
  %146 = getelementptr inbounds %52, %52* %145, i32 0, i32 7
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %147, -99999
  br i1 %148, label %149, label %152

149:                                              ; preds = %144
  %150 = load %29*, %29** %6, align 8
  %151 = call i32 @add_assoc_bool_ex(%29* %150, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @222, i32 0, i32 0), i64 4, i32 0)
  br label %159

152:                                              ; preds = %144
  %153 = load %29*, %29** %6, align 8
  %154 = load %52*, %52** %7, align 8
  %155 = getelementptr inbounds %52, %52* %154, i32 0, i32 7
  %156 = load i32, i32* %155, align 8
  %157 = sext i32 %156 to i64
  %158 = call i32 @add_assoc_long_ex(%29* %153, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @222, i32 0, i32 0), i64 4, i64 %157)
  br label %159

159:                                              ; preds = %152, %149
  %160 = load %29*, %29** %6, align 8
  %161 = load %52*, %52** %7, align 8
  %162 = getelementptr inbounds %52, %52* %161, i32 0, i32 10
  %163 = load i32, i32* %162, align 8
  %164 = call i32 @add_assoc_bool_ex(%29* %160, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @223, i32 0, i32 0), i64 6, i32 %163)
  br label %216

165:                                              ; preds = %140
  %166 = load %52*, %52** %7, align 8
  %167 = getelementptr inbounds %52, %52* %166, i32 0, i32 8
  %168 = load i8*, i8** %167, align 8
  %169 = icmp ne i8* %168, null
  br i1 %169, label %170, label %176

170:                                              ; preds = %165
  %171 = load %29*, %29** %6, align 8
  %172 = load %52*, %52** %7, align 8
  %173 = getelementptr inbounds %52, %52* %172, i32 0, i32 8
  %174 = load i8*, i8** %173, align 8
  %175 = call i32 @add_assoc_string_ex(%29* %171, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @224, i32 0, i32 0), i64 7, i8* %174)
  br label %176

176:                                              ; preds = %170, %165
  %177 = load %52*, %52** %7, align 8
  %178 = getelementptr inbounds %52, %52* %177, i32 0, i32 9
  %179 = load %53*, %53** %178, align 8
  %180 = icmp ne %53* %179, null
  br i1 %180, label %181, label %189

181:                                              ; preds = %176
  %182 = load %29*, %29** %6, align 8
  %183 = load %52*, %52** %7, align 8
  %184 = getelementptr inbounds %52, %52* %183, i32 0, i32 9
  %185 = load %53*, %53** %184, align 8
  %186 = getelementptr inbounds %53, %53* %185, i32 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = call i32 @add_assoc_string_ex(%29* %182, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @225, i32 0, i32 0), i64 5, i8* %187)
  br label %189

189:                                              ; preds = %181, %176
  br label %216

190:                                              ; preds = %140
  %191 = load %52*, %52** %7, align 8
  %192 = getelementptr inbounds %52, %52* %191, i32 0, i32 7
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, -99999
  br i1 %194, label %195, label %198

195:                                              ; preds = %190
  %196 = load %29*, %29** %6, align 8
  %197 = call i32 @add_assoc_bool_ex(%29* %196, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @222, i32 0, i32 0), i64 4, i32 0)
  br label %205

198:                                              ; preds = %190
  %199 = load %29*, %29** %6, align 8
  %200 = load %52*, %52** %7, align 8
  %201 = getelementptr inbounds %52, %52* %200, i32 0, i32 7
  %202 = load i32, i32* %201, align 8
  %203 = sext i32 %202 to i64
  %204 = call i32 @add_assoc_long_ex(%29* %199, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @222, i32 0, i32 0), i64 4, i64 %203)
  br label %205

205:                                              ; preds = %198, %195
  %206 = load %29*, %29** %6, align 8
  %207 = load %52*, %52** %7, align 8
  %208 = getelementptr inbounds %52, %52* %207, i32 0, i32 10
  %209 = load i32, i32* %208, align 8
  %210 = call i32 @add_assoc_bool_ex(%29* %206, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @223, i32 0, i32 0), i64 6, i32 %209)
  %211 = load %29*, %29** %6, align 8
  %212 = load %52*, %52** %7, align 8
  %213 = getelementptr inbounds %52, %52* %212, i32 0, i32 8
  %214 = load i8*, i8** %213, align 8
  %215 = call i32 @add_assoc_string_ex(%29* %211, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @224, i32 0, i32 0), i64 7, i8* %214)
  br label %216

216:                                              ; preds = %140, %205, %189, %159
  br label %217

217:                                              ; preds = %216, %112
  %218 = load %52*, %52** %7, align 8
  %219 = getelementptr inbounds %52, %52* %218, i32 0, i32 16
  %220 = load i32, i32* %219, align 4
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %222, label %312

222:                                              ; preds = %217
  %223 = call i32 @_array_init(%29* %9, i32 0)
  %224 = load %52*, %52** %7, align 8
  %225 = getelementptr inbounds %52, %52* %224, i32 0, i32 11
  %226 = getelementptr inbounds %59, %59* %225, i32 0, i32 0
  %227 = load i64, i64* %226, align 8
  %228 = call i32 @add_assoc_long_ex(%29* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i64 4, i64 %227)
  %229 = load %52*, %52** %7, align 8
  %230 = getelementptr inbounds %52, %52* %229, i32 0, i32 11
  %231 = getelementptr inbounds %59, %59* %230, i32 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = call i32 @add_assoc_long_ex(%29* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @207, i32 0, i32 0), i64 5, i64 %232)
  %234 = load %52*, %52** %7, align 8
  %235 = getelementptr inbounds %52, %52* %234, i32 0, i32 11
  %236 = getelementptr inbounds %59, %59* %235, i32 0, i32 2
  %237 = load i64, i64* %236, align 8
  %238 = call i32 @add_assoc_long_ex(%29* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @215, i32 0, i32 0), i64 3, i64 %237)
  %239 = load %52*, %52** %7, align 8
  %240 = getelementptr inbounds %52, %52* %239, i32 0, i32 11
  %241 = getelementptr inbounds %59, %59* %240, i32 0, i32 3
  %242 = load i64, i64* %241, align 8
  %243 = call i32 @add_assoc_long_ex(%29* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @216, i32 0, i32 0), i64 4, i64 %242)
  %244 = load %52*, %52** %7, align 8
  %245 = getelementptr inbounds %52, %52* %244, i32 0, i32 11
  %246 = getelementptr inbounds %59, %59* %245, i32 0, i32 4
  %247 = load i64, i64* %246, align 8
  %248 = call i32 @add_assoc_long_ex(%29* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @217, i32 0, i32 0), i64 6, i64 %247)
  %249 = load %52*, %52** %7, align 8
  %250 = getelementptr inbounds %52, %52* %249, i32 0, i32 11
  %251 = getelementptr inbounds %59, %59* %250, i32 0, i32 5
  %252 = load i64, i64* %251, align 8
  %253 = call i32 @add_assoc_long_ex(%29* %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @218, i32 0, i32 0), i64 6, i64 %252)
  %254 = load %52*, %52** %7, align 8
  %255 = getelementptr inbounds %52, %52* %254, i32 0, i32 11
  %256 = getelementptr inbounds %59, %59* %255, i32 0, i32 13
  %257 = load i32, i32* %256, align 8
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %222
  %260 = load %52*, %52** %7, align 8
  %261 = getelementptr inbounds %52, %52* %260, i32 0, i32 11
  %262 = getelementptr inbounds %59, %59* %261, i32 0, i32 7
  %263 = load i32, i32* %262, align 8
  %264 = sext i32 %263 to i64
  %265 = call i32 @add_assoc_long_ex(%29* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @206, i32 0, i32 0), i64 7, i64 %264)
  br label %266

266:                                              ; preds = %259, %222
  %267 = load %52*, %52** %7, align 8
  %268 = getelementptr inbounds %52, %52* %267, i32 0, i32 11
  %269 = getelementptr inbounds %59, %59* %268, i32 0, i32 14
  %270 = load i32, i32* %269, align 4
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %272, label %286

272:                                              ; preds = %266
  %273 = load %52*, %52** %7, align 8
  %274 = getelementptr inbounds %52, %52* %273, i32 0, i32 11
  %275 = getelementptr inbounds %59, %59* %274, i32 0, i32 12
  %276 = getelementptr inbounds %60, %60* %275, i32 0, i32 0
  %277 = load i32, i32* %276, align 8
  %278 = icmp eq i32 %277, 1
  br i1 %278, label %279, label %286

279:                                              ; preds = %272
  %280 = load %52*, %52** %7, align 8
  %281 = getelementptr inbounds %52, %52* %280, i32 0, i32 11
  %282 = getelementptr inbounds %59, %59* %281, i32 0, i32 12
  %283 = getelementptr inbounds %60, %60* %282, i32 0, i32 1
  %284 = load i64, i64* %283, align 8
  %285 = call i32 @add_assoc_long_ex(%29* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @226, i32 0, i32 0), i64 8, i64 %284)
  br label %286

286:                                              ; preds = %279, %272, %266
  %287 = load %52*, %52** %7, align 8
  %288 = getelementptr inbounds %52, %52* %287, i32 0, i32 11
  %289 = getelementptr inbounds %59, %59* %288, i32 0, i32 9
  %290 = load i32, i32* %289, align 8
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %292, label %309

292:                                              ; preds = %286
  %293 = load %52*, %52** %7, align 8
  %294 = getelementptr inbounds %52, %52* %293, i32 0, i32 11
  %295 = getelementptr inbounds %59, %59* %294, i32 0, i32 9
  %296 = load i32, i32* %295, align 8
  %297 = icmp eq i32 %296, 1
  %298 = zext i1 %297 to i64
  %299 = select i1 %297, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @228, i32 0, i32 0)
  %300 = load %52*, %52** %7, align 8
  %301 = getelementptr inbounds %52, %52* %300, i32 0, i32 11
  %302 = getelementptr inbounds %59, %59* %301, i32 0, i32 9
  %303 = load i32, i32* %302, align 8
  %304 = icmp eq i32 %303, 1
  %305 = zext i1 %304 to i64
  %306 = select i1 %304, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @228, i32 0, i32 0)
  %307 = call i64 @strlen(i8* %306) #16
  %308 = call i32 @add_assoc_bool_ex(%29* %9, i8* %299, i64 %307, i32 1)
  br label %309

309:                                              ; preds = %292, %286
  %310 = load %29*, %29** %6, align 8
  %311 = call i32 @add_assoc_zval_ex(%29* %310, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @229, i32 0, i32 0), i64 8, %29* %9)
  br label %312

312:                                              ; preds = %309, %217
  %313 = load %52*, %52** %7, align 8
  call void @timelib_time_dtor(%52* %313)
  %314 = bitcast %29* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %314) #15
  ret void
}

declare dso_local i32 @add_assoc_bool_ex(%29*, i8*, i64, i32) #4

declare dso_local i32 @add_assoc_double_ex(%29*, i8*, i64, double) #4

declare dso_local i32 @add_assoc_zval_ex(%29*, i8*, i64, %29*) #4

declare dso_local i32 @zend_parse_method_parameters(i32, %29*, i8*, ...) #4

; Function Attrs: nounwind uwtable
define internal i32 @494(%29* %0, i8* %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %29*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %61*, align 8
  %9 = alloca %52*, align 8
  %10 = alloca %34*, align 8
  %11 = alloca i32, align 4
  store %29* %0, %29** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %12 = bitcast %61** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast %34** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  store %34* null, %34** %10, align 8
  %15 = load %29*, %29** %5, align 8
  %16 = getelementptr inbounds %29, %29* %15, i32 0, i32 0
  %17 = bitcast %30* %16 to %15**
  %18 = load %15*, %15** %17, align 8
  %19 = call %61* @489(%15* %18)
  store %61* %19, %61** %8, align 8
  %20 = load %61*, %61** %8, align 8
  %21 = getelementptr inbounds %61, %61* %20, i32 0, i32 0
  %22 = load %52*, %52** %21, align 8
  %23 = icmp ne %52* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %3
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  store i32 0, i32* %4, align 4
  store i32 1, i32* %11, align 4
  br label %208

25:                                               ; preds = %3
  %26 = load i8*, i8** %6, align 8
  %27 = load i64, i64* %7, align 8
  %28 = load %41*, %41** @php_date_global_timezone_db, align 8
  %29 = icmp ne %41* %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %34

32:                                               ; preds = %25
  %33 = call %41* @timelib_builtin_db()
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi %41* [ %31, %30 ], [ %33, %32 ]
  %36 = call %52* @timelib_strtotime(i8* %26, i64 %27, %34** %10, %41* %35, %53* (i8*, %41*, i32*)* @php_date_parse_tzfile_wrapper)
  store %52* %36, %52** %9, align 8
  %37 = load %34*, %34** %10, align 8
  call void @483(%34* %37)
  %38 = load %34*, %34** %10, align 8
  %39 = icmp ne %34* %38, null
  br i1 %39, label %40, label %67

40:                                               ; preds = %34
  %41 = load %34*, %34** %10, align 8
  %42 = getelementptr inbounds %34, %34* %41, i32 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %40
  %46 = load i8*, i8** %6, align 8
  %47 = load %34*, %34** %10, align 8
  %48 = getelementptr inbounds %34, %34* %47, i32 0, i32 0
  %49 = load %35*, %35** %48, align 8
  %50 = getelementptr inbounds %35, %35* %49, i64 0
  %51 = getelementptr inbounds %35, %35* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = load %34*, %34** %10, align 8
  %54 = getelementptr inbounds %34, %34* %53, i32 0, i32 0
  %55 = load %35*, %35** %54, align 8
  %56 = getelementptr inbounds %35, %35* %55, i64 0
  %57 = getelementptr inbounds %35, %35* %56, i32 0, i32 2
  %58 = load i8, i8* %57, align 8
  %59 = sext i8 %58 to i32
  %60 = load %34*, %34** %10, align 8
  %61 = getelementptr inbounds %34, %34* %60, i32 0, i32 0
  %62 = load %35*, %35** %61, align 8
  %63 = getelementptr inbounds %35, %35* %62, i64 0
  %64 = getelementptr inbounds %35, %35* %63, i32 0, i32 3
  %65 = load i8*, i8** %64, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @212, i32 0, i32 0), i8* %46, i32 %52, i32 %59, i8* %65)
  %66 = load %52*, %52** %9, align 8
  call void @timelib_time_dtor(%52* %66)
  store i32 0, i32* %4, align 4
  store i32 1, i32* %11, align 4
  br label %208

67:                                               ; preds = %40, %34
  %68 = load %61*, %61** %8, align 8
  %69 = getelementptr inbounds %61, %61* %68, i32 0, i32 0
  %70 = load %52*, %52** %69, align 8
  %71 = getelementptr inbounds %52, %52* %70, i32 0, i32 11
  %72 = bitcast %59* %71 to i8*
  %73 = load %52*, %52** %9, align 8
  %74 = getelementptr inbounds %52, %52* %73, i32 0, i32 11
  %75 = bitcast %59* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %75, i64 104, i1 false)
  %76 = load %52*, %52** %9, align 8
  %77 = getelementptr inbounds %52, %52* %76, i32 0, i32 16
  %78 = load i32, i32* %77, align 4
  %79 = load %61*, %61** %8, align 8
  %80 = getelementptr inbounds %61, %61* %79, i32 0, i32 0
  %81 = load %52*, %52** %80, align 8
  %82 = getelementptr inbounds %52, %52* %81, i32 0, i32 16
  store i32 %78, i32* %82, align 4
  %83 = load %61*, %61** %8, align 8
  %84 = getelementptr inbounds %61, %61* %83, i32 0, i32 0
  %85 = load %52*, %52** %84, align 8
  %86 = getelementptr inbounds %52, %52* %85, i32 0, i32 18
  store i32 0, i32* %86, align 4
  %87 = load %52*, %52** %9, align 8
  %88 = getelementptr inbounds %52, %52* %87, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp ne i64 %89, -99999
  br i1 %90, label %91, label %99

91:                                               ; preds = %67
  %92 = load %52*, %52** %9, align 8
  %93 = getelementptr inbounds %52, %52* %92, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = load %61*, %61** %8, align 8
  %96 = getelementptr inbounds %61, %61* %95, i32 0, i32 0
  %97 = load %52*, %52** %96, align 8
  %98 = getelementptr inbounds %52, %52* %97, i32 0, i32 0
  store i64 %94, i64* %98, align 8
  br label %99

99:                                               ; preds = %91, %67
  %100 = load %52*, %52** %9, align 8
  %101 = getelementptr inbounds %52, %52* %100, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = icmp ne i64 %102, -99999
  br i1 %103, label %104, label %112

104:                                              ; preds = %99
  %105 = load %52*, %52** %9, align 8
  %106 = getelementptr inbounds %52, %52* %105, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = load %61*, %61** %8, align 8
  %109 = getelementptr inbounds %61, %61* %108, i32 0, i32 0
  %110 = load %52*, %52** %109, align 8
  %111 = getelementptr inbounds %52, %52* %110, i32 0, i32 1
  store i64 %107, i64* %111, align 8
  br label %112

112:                                              ; preds = %104, %99
  %113 = load %52*, %52** %9, align 8
  %114 = getelementptr inbounds %52, %52* %113, i32 0, i32 2
  %115 = load i64, i64* %114, align 8
  %116 = icmp ne i64 %115, -99999
  br i1 %116, label %117, label %125

117:                                              ; preds = %112
  %118 = load %52*, %52** %9, align 8
  %119 = getelementptr inbounds %52, %52* %118, i32 0, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = load %61*, %61** %8, align 8
  %122 = getelementptr inbounds %61, %61* %121, i32 0, i32 0
  %123 = load %52*, %52** %122, align 8
  %124 = getelementptr inbounds %52, %52* %123, i32 0, i32 2
  store i64 %120, i64* %124, align 8
  br label %125

125:                                              ; preds = %117, %112
  %126 = load %52*, %52** %9, align 8
  %127 = getelementptr inbounds %52, %52* %126, i32 0, i32 3
  %128 = load i64, i64* %127, align 8
  %129 = icmp ne i64 %128, -99999
  br i1 %129, label %130, label %178

130:                                              ; preds = %125
  %131 = load %52*, %52** %9, align 8
  %132 = getelementptr inbounds %52, %52* %131, i32 0, i32 3
  %133 = load i64, i64* %132, align 8
  %134 = load %61*, %61** %8, align 8
  %135 = getelementptr inbounds %61, %61* %134, i32 0, i32 0
  %136 = load %52*, %52** %135, align 8
  %137 = getelementptr inbounds %52, %52* %136, i32 0, i32 3
  store i64 %133, i64* %137, align 8
  %138 = load %52*, %52** %9, align 8
  %139 = getelementptr inbounds %52, %52* %138, i32 0, i32 4
  %140 = load i64, i64* %139, align 8
  %141 = icmp ne i64 %140, -99999
  br i1 %141, label %142, label %168

142:                                              ; preds = %130
  %143 = load %52*, %52** %9, align 8
  %144 = getelementptr inbounds %52, %52* %143, i32 0, i32 4
  %145 = load i64, i64* %144, align 8
  %146 = load %61*, %61** %8, align 8
  %147 = getelementptr inbounds %61, %61* %146, i32 0, i32 0
  %148 = load %52*, %52** %147, align 8
  %149 = getelementptr inbounds %52, %52* %148, i32 0, i32 4
  store i64 %145, i64* %149, align 8
  %150 = load %52*, %52** %9, align 8
  %151 = getelementptr inbounds %52, %52* %150, i32 0, i32 5
  %152 = load i64, i64* %151, align 8
  %153 = icmp ne i64 %152, -99999
  br i1 %153, label %154, label %162

154:                                              ; preds = %142
  %155 = load %52*, %52** %9, align 8
  %156 = getelementptr inbounds %52, %52* %155, i32 0, i32 5
  %157 = load i64, i64* %156, align 8
  %158 = load %61*, %61** %8, align 8
  %159 = getelementptr inbounds %61, %61* %158, i32 0, i32 0
  %160 = load %52*, %52** %159, align 8
  %161 = getelementptr inbounds %52, %52* %160, i32 0, i32 5
  store i64 %157, i64* %161, align 8
  br label %167

162:                                              ; preds = %142
  %163 = load %61*, %61** %8, align 8
  %164 = getelementptr inbounds %61, %61* %163, i32 0, i32 0
  %165 = load %52*, %52** %164, align 8
  %166 = getelementptr inbounds %52, %52* %165, i32 0, i32 5
  store i64 0, i64* %166, align 8
  br label %167

167:                                              ; preds = %162, %154
  br label %177

168:                                              ; preds = %130
  %169 = load %61*, %61** %8, align 8
  %170 = getelementptr inbounds %61, %61* %169, i32 0, i32 0
  %171 = load %52*, %52** %170, align 8
  %172 = getelementptr inbounds %52, %52* %171, i32 0, i32 4
  store i64 0, i64* %172, align 8
  %173 = load %61*, %61** %8, align 8
  %174 = getelementptr inbounds %61, %61* %173, i32 0, i32 0
  %175 = load %52*, %52** %174, align 8
  %176 = getelementptr inbounds %52, %52* %175, i32 0, i32 5
  store i64 0, i64* %176, align 8
  br label %177

177:                                              ; preds = %168, %167
  br label %178

178:                                              ; preds = %177, %125
  %179 = load %52*, %52** %9, align 8
  %180 = getelementptr inbounds %52, %52* %179, i32 0, i32 6
  %181 = load i64, i64* %180, align 8
  %182 = icmp ne i64 %181, -99999
  br i1 %182, label %183, label %191

183:                                              ; preds = %178
  %184 = load %52*, %52** %9, align 8
  %185 = getelementptr inbounds %52, %52* %184, i32 0, i32 6
  %186 = load i64, i64* %185, align 8
  %187 = load %61*, %61** %8, align 8
  %188 = getelementptr inbounds %61, %61* %187, i32 0, i32 0
  %189 = load %52*, %52** %188, align 8
  %190 = getelementptr inbounds %52, %52* %189, i32 0, i32 6
  store i64 %186, i64* %190, align 8
  br label %191

191:                                              ; preds = %183, %178
  %192 = load %52*, %52** %9, align 8
  call void @timelib_time_dtor(%52* %192)
  %193 = load %61*, %61** %8, align 8
  %194 = getelementptr inbounds %61, %61* %193, i32 0, i32 0
  %195 = load %52*, %52** %194, align 8
  call void @timelib_update_ts(%52* %195, %53* null)
  %196 = load %61*, %61** %8, align 8
  %197 = getelementptr inbounds %61, %61* %196, i32 0, i32 0
  %198 = load %52*, %52** %197, align 8
  call void @timelib_update_from_sse(%52* %198)
  %199 = load %61*, %61** %8, align 8
  %200 = getelementptr inbounds %61, %61* %199, i32 0, i32 0
  %201 = load %52*, %52** %200, align 8
  %202 = getelementptr inbounds %52, %52* %201, i32 0, i32 16
  store i32 0, i32* %202, align 4
  %203 = load %61*, %61** %8, align 8
  %204 = getelementptr inbounds %61, %61* %203, i32 0, i32 0
  %205 = load %52*, %52** %204, align 8
  %206 = getelementptr inbounds %52, %52* %205, i32 0, i32 11
  %207 = bitcast %59* %206 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 104, i1 false)
  store i32 1, i32* %4, align 4
  store i32 1, i32* %11, align 4
  br label %208

208:                                              ; preds = %191, %45, %24
  %209 = bitcast %34** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %209) #15
  %210 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %210) #15
  %211 = bitcast %61** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %211) #15
  %212 = load i32, i32* %4, align 4
  ret i32 %212
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @495(%29* %0) #6 {
  %2 = alloca %29*, align 8
  store %29* %0, %29** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %29*, %29** %2, align 8
  %5 = getelementptr inbounds %29, %29* %4, i32 0, i32 1
  %6 = bitcast %31* %5 to %76*
  %7 = getelementptr inbounds %76, %76* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  unreachable

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18
  %20 = load %29*, %29** %2, align 8
  %21 = getelementptr inbounds %29, %29* %20, i32 0, i32 0
  %22 = bitcast %30* %21 to %63**
  %23 = load %63*, %63** %22, align 8
  %24 = getelementptr inbounds %63, %63* %23, i32 0, i32 0
  %25 = getelementptr inbounds %8, %8* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %25, align 4
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define internal void @496(%29* %0, %29* %1) #0 {
  %3 = alloca %29*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  store %29* %0, %29** %3, align 8
  store %29* %1, %29** %4, align 8
  br label %6

6:                                                ; preds = %2
  %7 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #15
  %8 = load %29*, %29** %4, align 8
  store %29* %8, %29** %5, align 8
  %9 = load %29*, %29** %3, align 8
  %10 = call %15* @535(%29* %9)
  %11 = load %29*, %29** %5, align 8
  %12 = getelementptr inbounds %29, %29* %11, i32 0, i32 0
  %13 = bitcast %30* %12 to %15**
  store %15* %10, %15** %13, align 8
  %14 = load %29*, %29** %5, align 8
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 1
  %16 = bitcast %31* %15 to i32*
  store i32 1032, i32* %16, align 8
  %17 = bitcast %29** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #15
  br label %18

18:                                               ; preds = %6
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @497(%29* %0, %29* %1, %29* %2) #0 {
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %61*, align 8
  %8 = alloca %68*, align 8
  %9 = alloca %52*, align 8
  %10 = alloca i32, align 4
  store %29* %0, %29** %4, align 8
  store %29* %1, %29** %5, align 8
  store %29* %2, %29** %6, align 8
  %11 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = bitcast %68** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %29*, %29** %4, align 8
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 0
  %16 = bitcast %30* %15 to %15**
  %17 = load %15*, %15** %16, align 8
  %18 = call %61* @489(%15* %17)
  store %61* %18, %61** %7, align 8
  %19 = load %61*, %61** %7, align 8
  %20 = getelementptr inbounds %61, %61* %19, i32 0, i32 0
  %21 = load %52*, %52** %20, align 8
  %22 = icmp ne %52* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %3
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %24

24:                                               ; preds = %23
  %25 = load %29*, %29** %6, align 8
  %26 = getelementptr inbounds %29, %29* %25, i32 0, i32 1
  %27 = bitcast %31* %26 to i32*
  store i32 2, i32* %27, align 8
  br label %28

28:                                               ; preds = %24
  br label %29

29:                                               ; preds = %28
  store i32 1, i32* %10, align 4
  br label %61

30:                                               ; preds = %3
  %31 = load %29*, %29** %5, align 8
  %32 = getelementptr inbounds %29, %29* %31, i32 0, i32 0
  %33 = bitcast %30* %32 to %15**
  %34 = load %15*, %15** %33, align 8
  %35 = call %68* @505(%15* %34)
  store %68* %35, %68** %8, align 8
  %36 = load %68*, %68** %8, align 8
  %37 = getelementptr inbounds %68, %68* %36, i32 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %30
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @261, i32 0, i32 0))
  br label %41

41:                                               ; preds = %40
  %42 = load %29*, %29** %6, align 8
  %43 = getelementptr inbounds %29, %29* %42, i32 0, i32 1
  %44 = bitcast %31* %43 to i32*
  store i32 2, i32* %44, align 8
  br label %45

45:                                               ; preds = %41
  br label %46

46:                                               ; preds = %45
  store i32 1, i32* %10, align 4
  br label %61

47:                                               ; preds = %30
  %48 = load %61*, %61** %7, align 8
  %49 = getelementptr inbounds %61, %61* %48, i32 0, i32 0
  %50 = load %52*, %52** %49, align 8
  %51 = load %68*, %68** %8, align 8
  %52 = getelementptr inbounds %68, %68* %51, i32 0, i32 0
  %53 = load %59*, %59** %52, align 8
  %54 = call %52* @timelib_add(%52* %50, %59* %53)
  store %52* %54, %52** %9, align 8
  %55 = load %61*, %61** %7, align 8
  %56 = getelementptr inbounds %61, %61* %55, i32 0, i32 0
  %57 = load %52*, %52** %56, align 8
  call void @timelib_time_dtor(%52* %57)
  %58 = load %52*, %52** %9, align 8
  %59 = load %61*, %61** %7, align 8
  %60 = getelementptr inbounds %61, %61* %59, i32 0, i32 0
  store %52* %58, %52** %60, align 8
  store i32 0, i32* %10, align 4
  br label %61

61:                                               ; preds = %47, %46, %29
  %62 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #15
  %63 = bitcast %68** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #15
  %64 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #15
  %65 = load i32, i32* %10, align 4
  switch i32 %65, label %67 [
    i32 0, label %66
    i32 1, label %66
  ]

66:                                               ; preds = %61, %61
  ret void

67:                                               ; preds = %61
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @498(%29* %0, %29* %1, %29* %2) #0 {
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %61*, align 8
  %8 = alloca %68*, align 8
  %9 = alloca %52*, align 8
  %10 = alloca i32, align 4
  store %29* %0, %29** %4, align 8
  store %29* %1, %29** %5, align 8
  store %29* %2, %29** %6, align 8
  %11 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = bitcast %68** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %29*, %29** %4, align 8
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 0
  %16 = bitcast %30* %15 to %15**
  %17 = load %15*, %15** %16, align 8
  %18 = call %61* @489(%15* %17)
  store %61* %18, %61** %7, align 8
  %19 = load %61*, %61** %7, align 8
  %20 = getelementptr inbounds %61, %61* %19, i32 0, i32 0
  %21 = load %52*, %52** %20, align 8
  %22 = icmp ne %52* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %3
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %24

24:                                               ; preds = %23
  %25 = load %29*, %29** %6, align 8
  %26 = getelementptr inbounds %29, %29* %25, i32 0, i32 1
  %27 = bitcast %31* %26 to i32*
  store i32 2, i32* %27, align 8
  br label %28

28:                                               ; preds = %24
  br label %29

29:                                               ; preds = %28
  store i32 1, i32* %10, align 4
  br label %69

30:                                               ; preds = %3
  %31 = load %29*, %29** %5, align 8
  %32 = getelementptr inbounds %29, %29* %31, i32 0, i32 0
  %33 = bitcast %30* %32 to %15**
  %34 = load %15*, %15** %33, align 8
  %35 = call %68* @505(%15* %34)
  store %68* %35, %68** %8, align 8
  %36 = load %68*, %68** %8, align 8
  %37 = getelementptr inbounds %68, %68* %36, i32 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %30
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @261, i32 0, i32 0))
  br label %41

41:                                               ; preds = %40
  %42 = load %29*, %29** %6, align 8
  %43 = getelementptr inbounds %29, %29* %42, i32 0, i32 1
  %44 = bitcast %31* %43 to i32*
  store i32 2, i32* %44, align 8
  br label %45

45:                                               ; preds = %41
  br label %46

46:                                               ; preds = %45
  store i32 1, i32* %10, align 4
  br label %69

47:                                               ; preds = %30
  %48 = load %68*, %68** %8, align 8
  %49 = getelementptr inbounds %68, %68* %48, i32 0, i32 0
  %50 = load %59*, %59** %49, align 8
  %51 = getelementptr inbounds %59, %59* %50, i32 0, i32 14
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %47
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @439, i32 0, i32 0))
  store i32 1, i32* %10, align 4
  br label %69

55:                                               ; preds = %47
  %56 = load %61*, %61** %7, align 8
  %57 = getelementptr inbounds %61, %61* %56, i32 0, i32 0
  %58 = load %52*, %52** %57, align 8
  %59 = load %68*, %68** %8, align 8
  %60 = getelementptr inbounds %68, %68* %59, i32 0, i32 0
  %61 = load %59*, %59** %60, align 8
  %62 = call %52* @timelib_sub(%52* %58, %59* %61)
  store %52* %62, %52** %9, align 8
  %63 = load %61*, %61** %7, align 8
  %64 = getelementptr inbounds %61, %61* %63, i32 0, i32 0
  %65 = load %52*, %52** %64, align 8
  call void @timelib_time_dtor(%52* %65)
  %66 = load %52*, %52** %9, align 8
  %67 = load %61*, %61** %7, align 8
  %68 = getelementptr inbounds %61, %61* %67, i32 0, i32 0
  store %52* %66, %52** %68, align 8
  store i32 0, i32* %10, align 4
  br label %69

69:                                               ; preds = %55, %54, %46, %29
  %70 = bitcast %52** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %70) #15
  %71 = bitcast %68** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %71) #15
  %72 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #15
  %73 = load i32, i32* %10, align 4
  switch i32 %73, label %75 [
    i32 0, label %74
    i32 1, label %74
  ]

74:                                               ; preds = %69, %69
  ret void

75:                                               ; preds = %69
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @499(%64* %0, %52* %1) #0 {
  %3 = alloca %64*, align 8
  %4 = alloca %52*, align 8
  store %64* %0, %64** %3, align 8
  store %52* %1, %52** %4, align 8
  %5 = load %64*, %64** %3, align 8
  %6 = getelementptr inbounds %64, %64* %5, i32 0, i32 0
  store i32 1, i32* %6, align 8
  %7 = load %52*, %52** %4, align 8
  %8 = getelementptr inbounds %52, %52* %7, i32 0, i32 21
  %9 = load i32, i32* %8, align 8
  %10 = load %64*, %64** %3, align 8
  %11 = getelementptr inbounds %64, %64* %10, i32 0, i32 1
  store i32 %9, i32* %11, align 4
  %12 = load %52*, %52** %4, align 8
  %13 = getelementptr inbounds %52, %52* %12, i32 0, i32 21
  %14 = load i32, i32* %13, align 8
  switch i32 %14, label %54 [
    i32 3, label %15
    i32 1, label %22
    i32 2, label %30
  ]

15:                                               ; preds = %2
  %16 = load %52*, %52** %4, align 8
  %17 = getelementptr inbounds %52, %52* %16, i32 0, i32 9
  %18 = load %53*, %53** %17, align 8
  %19 = load %64*, %64** %3, align 8
  %20 = getelementptr inbounds %64, %64* %19, i32 0, i32 2
  %21 = bitcast %65* %20 to %53**
  store %53* %18, %53** %21, align 8
  br label %54

22:                                               ; preds = %2
  %23 = load %52*, %52** %4, align 8
  %24 = getelementptr inbounds %52, %52* %23, i32 0, i32 7
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = load %64*, %64** %3, align 8
  %28 = getelementptr inbounds %64, %64* %27, i32 0, i32 2
  %29 = bitcast %65* %28 to i64*
  store i64 %26, i64* %29, align 8
  br label %54

30:                                               ; preds = %2
  %31 = load %52*, %52** %4, align 8
  %32 = getelementptr inbounds %52, %52* %31, i32 0, i32 7
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  %35 = load %64*, %64** %3, align 8
  %36 = getelementptr inbounds %64, %64* %35, i32 0, i32 2
  %37 = bitcast %65* %36 to %66*
  %38 = getelementptr inbounds %66, %66* %37, i32 0, i32 0
  store i64 %34, i64* %38, align 8
  %39 = load %52*, %52** %4, align 8
  %40 = getelementptr inbounds %52, %52* %39, i32 0, i32 10
  %41 = load i32, i32* %40, align 8
  %42 = load %64*, %64** %3, align 8
  %43 = getelementptr inbounds %64, %64* %42, i32 0, i32 2
  %44 = bitcast %65* %43 to %66*
  %45 = getelementptr inbounds %66, %66* %44, i32 0, i32 2
  store i32 %41, i32* %45, align 8
  %46 = load %52*, %52** %4, align 8
  %47 = getelementptr inbounds %52, %52* %46, i32 0, i32 8
  %48 = load i8*, i8** %47, align 8
  %49 = call noalias i8* @_estrdup(i8* %48)
  %50 = load %64*, %64** %3, align 8
  %51 = getelementptr inbounds %64, %64* %50, i32 0, i32 2
  %52 = bitcast %65* %51 to %66*
  %53 = getelementptr inbounds %66, %66* %52, i32 0, i32 1
  store i8* %49, i8** %53, align 8
  br label %54

54:                                               ; preds = %2, %30, %22, %15
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @500(%29* %0, %29* %1, %29* %2) #0 {
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %61*, align 8
  %8 = alloca %64*, align 8
  %9 = alloca i32, align 4
  store %29* %0, %29** %4, align 8
  store %29* %1, %29** %5, align 8
  store %29* %2, %29** %6, align 8
  %10 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = bitcast %64** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = load %29*, %29** %4, align 8
  %13 = getelementptr inbounds %29, %29* %12, i32 0, i32 0
  %14 = bitcast %30* %13 to %15**
  %15 = load %15*, %15** %14, align 8
  %16 = call %61* @489(%15* %15)
  store %61* %16, %61** %7, align 8
  %17 = load %61*, %61** %7, align 8
  %18 = getelementptr inbounds %61, %61* %17, i32 0, i32 0
  %19 = load %52*, %52** %18, align 8
  %20 = icmp ne %52* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %3
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %22

22:                                               ; preds = %21
  %23 = load %29*, %29** %6, align 8
  %24 = getelementptr inbounds %29, %29* %23, i32 0, i32 1
  %25 = bitcast %31* %24 to i32*
  store i32 2, i32* %25, align 8
  br label %26

26:                                               ; preds = %22
  br label %27

27:                                               ; preds = %26
  store i32 1, i32* %9, align 4
  br label %69

28:                                               ; preds = %3
  %29 = load %29*, %29** %5, align 8
  %30 = getelementptr inbounds %29, %29* %29, i32 0, i32 0
  %31 = bitcast %30* %30 to %15**
  %32 = load %15*, %15** %31, align 8
  %33 = call %64* @484(%15* %32)
  store %64* %33, %64** %8, align 8
  %34 = load %64*, %64** %8, align 8
  %35 = getelementptr inbounds %64, %64* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  switch i32 %36, label %60 [
    i32 1, label %37
    i32 2, label %45
    i32 3, label %52
  ]

37:                                               ; preds = %28
  %38 = load %61*, %61** %7, align 8
  %39 = getelementptr inbounds %61, %61* %38, i32 0, i32 0
  %40 = load %52*, %52** %39, align 8
  %41 = load %64*, %64** %8, align 8
  %42 = getelementptr inbounds %64, %64* %41, i32 0, i32 2
  %43 = bitcast %65* %42 to i64*
  %44 = load i64, i64* %43, align 8
  call void @timelib_set_timezone_from_offset(%52* %40, i64 %44)
  br label %60

45:                                               ; preds = %28
  %46 = load %61*, %61** %7, align 8
  %47 = getelementptr inbounds %61, %61* %46, i32 0, i32 0
  %48 = load %52*, %52** %47, align 8
  %49 = load %64*, %64** %8, align 8
  %50 = getelementptr inbounds %64, %64* %49, i32 0, i32 2
  %51 = bitcast %65* %50 to %66*
  call void @timelib_set_timezone_from_abbr(%52* %48, %66* byval(%66) align 8 %51)
  br label %60

52:                                               ; preds = %28
  %53 = load %61*, %61** %7, align 8
  %54 = getelementptr inbounds %61, %61* %53, i32 0, i32 0
  %55 = load %52*, %52** %54, align 8
  %56 = load %64*, %64** %8, align 8
  %57 = getelementptr inbounds %64, %64* %56, i32 0, i32 2
  %58 = bitcast %65* %57 to %53**
  %59 = load %53*, %53** %58, align 8
  call void @timelib_set_timezone(%52* %55, %53* %59)
  br label %60

60:                                               ; preds = %28, %52, %45, %37
  %61 = load %61*, %61** %7, align 8
  %62 = getelementptr inbounds %61, %61* %61, i32 0, i32 0
  %63 = load %52*, %52** %62, align 8
  %64 = load %61*, %61** %7, align 8
  %65 = getelementptr inbounds %61, %61* %64, i32 0, i32 0
  %66 = load %52*, %52** %65, align 8
  %67 = getelementptr inbounds %52, %52* %66, i32 0, i32 12
  %68 = load i64, i64* %67, align 8
  call void @timelib_unixtime2local(%52* %63, i64 %68)
  store i32 0, i32* %9, align 4
  br label %69

69:                                               ; preds = %60, %27
  %70 = bitcast %64** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %70) #15
  %71 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %71) #15
  %72 = load i32, i32* %9, align 4
  switch i32 %72, label %74 [
    i32 0, label %73
    i32 1, label %73
  ]

73:                                               ; preds = %69, %69
  ret void

74:                                               ; preds = %69
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @501(%29* %0, i64 %1, i64 %2, i64 %3, i64 %4, %29* %5) #0 {
  %7 = alloca %29*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %29*, align 8
  %13 = alloca %61*, align 8
  %14 = alloca i32, align 4
  store %29* %0, %29** %7, align 8
  store i64 %1, i64* %8, align 8
  store i64 %2, i64* %9, align 8
  store i64 %3, i64* %10, align 8
  store i64 %4, i64* %11, align 8
  store %29* %5, %29** %12, align 8
  %15 = bitcast %61** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = load %29*, %29** %7, align 8
  %17 = getelementptr inbounds %29, %29* %16, i32 0, i32 0
  %18 = bitcast %30* %17 to %15**
  %19 = load %15*, %15** %18, align 8
  %20 = call %61* @489(%15* %19)
  store %61* %20, %61** %13, align 8
  %21 = load %61*, %61** %13, align 8
  %22 = getelementptr inbounds %61, %61* %21, i32 0, i32 0
  %23 = load %52*, %52** %22, align 8
  %24 = icmp ne %52* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %6
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %26

26:                                               ; preds = %25
  %27 = load %29*, %29** %12, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 1
  %29 = bitcast %31* %28 to i32*
  store i32 2, i32* %29, align 8
  br label %30

30:                                               ; preds = %26
  br label %31

31:                                               ; preds = %30
  store i32 1, i32* %14, align 4
  br label %56

32:                                               ; preds = %6
  %33 = load i64, i64* %8, align 8
  %34 = load %61*, %61** %13, align 8
  %35 = getelementptr inbounds %61, %61* %34, i32 0, i32 0
  %36 = load %52*, %52** %35, align 8
  %37 = getelementptr inbounds %52, %52* %36, i32 0, i32 3
  store i64 %33, i64* %37, align 8
  %38 = load i64, i64* %9, align 8
  %39 = load %61*, %61** %13, align 8
  %40 = getelementptr inbounds %61, %61* %39, i32 0, i32 0
  %41 = load %52*, %52** %40, align 8
  %42 = getelementptr inbounds %52, %52* %41, i32 0, i32 4
  store i64 %38, i64* %42, align 8
  %43 = load i64, i64* %10, align 8
  %44 = load %61*, %61** %13, align 8
  %45 = getelementptr inbounds %61, %61* %44, i32 0, i32 0
  %46 = load %52*, %52** %45, align 8
  %47 = getelementptr inbounds %52, %52* %46, i32 0, i32 5
  store i64 %43, i64* %47, align 8
  %48 = load i64, i64* %11, align 8
  %49 = load %61*, %61** %13, align 8
  %50 = getelementptr inbounds %61, %61* %49, i32 0, i32 0
  %51 = load %52*, %52** %50, align 8
  %52 = getelementptr inbounds %52, %52* %51, i32 0, i32 6
  store i64 %48, i64* %52, align 8
  %53 = load %61*, %61** %13, align 8
  %54 = getelementptr inbounds %61, %61* %53, i32 0, i32 0
  %55 = load %52*, %52** %54, align 8
  call void @timelib_update_ts(%52* %55, %53* null)
  store i32 0, i32* %14, align 4
  br label %56

56:                                               ; preds = %32, %31
  %57 = bitcast %61** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #15
  %58 = load i32, i32* %14, align 4
  switch i32 %58, label %60 [
    i32 0, label %59
    i32 1, label %59
  ]

59:                                               ; preds = %56, %56
  ret void

60:                                               ; preds = %56
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @502(%29* %0, i64 %1, i64 %2, i64 %3, %29* %4) #0 {
  %6 = alloca %29*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %29*, align 8
  %11 = alloca %61*, align 8
  %12 = alloca i32, align 4
  store %29* %0, %29** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 %3, i64* %9, align 8
  store %29* %4, %29** %10, align 8
  %13 = bitcast %61** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %29*, %29** %6, align 8
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 0
  %16 = bitcast %30* %15 to %15**
  %17 = load %15*, %15** %16, align 8
  %18 = call %61* @489(%15* %17)
  store %61* %18, %61** %11, align 8
  %19 = load %61*, %61** %11, align 8
  %20 = getelementptr inbounds %61, %61* %19, i32 0, i32 0
  %21 = load %52*, %52** %20, align 8
  %22 = icmp ne %52* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %5
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %24

24:                                               ; preds = %23
  %25 = load %29*, %29** %10, align 8
  %26 = getelementptr inbounds %29, %29* %25, i32 0, i32 1
  %27 = bitcast %31* %26 to i32*
  store i32 2, i32* %27, align 8
  br label %28

28:                                               ; preds = %24
  br label %29

29:                                               ; preds = %28
  store i32 1, i32* %12, align 4
  br label %49

30:                                               ; preds = %5
  %31 = load i64, i64* %7, align 8
  %32 = load %61*, %61** %11, align 8
  %33 = getelementptr inbounds %61, %61* %32, i32 0, i32 0
  %34 = load %52*, %52** %33, align 8
  %35 = getelementptr inbounds %52, %52* %34, i32 0, i32 0
  store i64 %31, i64* %35, align 8
  %36 = load i64, i64* %8, align 8
  %37 = load %61*, %61** %11, align 8
  %38 = getelementptr inbounds %61, %61* %37, i32 0, i32 0
  %39 = load %52*, %52** %38, align 8
  %40 = getelementptr inbounds %52, %52* %39, i32 0, i32 1
  store i64 %36, i64* %40, align 8
  %41 = load i64, i64* %9, align 8
  %42 = load %61*, %61** %11, align 8
  %43 = getelementptr inbounds %61, %61* %42, i32 0, i32 0
  %44 = load %52*, %52** %43, align 8
  %45 = getelementptr inbounds %52, %52* %44, i32 0, i32 2
  store i64 %41, i64* %45, align 8
  %46 = load %61*, %61** %11, align 8
  %47 = getelementptr inbounds %61, %61* %46, i32 0, i32 0
  %48 = load %52*, %52** %47, align 8
  call void @timelib_update_ts(%52* %48, %53* null)
  store i32 0, i32* %12, align 4
  br label %49

49:                                               ; preds = %30, %29
  %50 = bitcast %61** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #15
  %51 = load i32, i32* %12, align 4
  switch i32 %51, label %53 [
    i32 0, label %52
    i32 1, label %52
  ]

52:                                               ; preds = %49, %49
  ret void

53:                                               ; preds = %49
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @503(%29* %0, i64 %1, i64 %2, i64 %3, %29* %4) #0 {
  %6 = alloca %29*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %29*, align 8
  %11 = alloca %61*, align 8
  %12 = alloca i32, align 4
  store %29* %0, %29** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 %3, i64* %9, align 8
  store %29* %4, %29** %10, align 8
  %13 = bitcast %61** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %29*, %29** %6, align 8
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 0
  %16 = bitcast %30* %15 to %15**
  %17 = load %15*, %15** %16, align 8
  %18 = call %61* @489(%15* %17)
  store %61* %18, %61** %11, align 8
  %19 = load %61*, %61** %11, align 8
  %20 = getelementptr inbounds %61, %61* %19, i32 0, i32 0
  %21 = load %52*, %52** %20, align 8
  %22 = icmp ne %52* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %5
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %24

24:                                               ; preds = %23
  %25 = load %29*, %29** %10, align 8
  %26 = getelementptr inbounds %29, %29* %25, i32 0, i32 1
  %27 = bitcast %31* %26 to i32*
  store i32 2, i32* %27, align 8
  br label %28

28:                                               ; preds = %24
  br label %29

29:                                               ; preds = %28
  store i32 1, i32* %12, align 4
  br label %65

30:                                               ; preds = %5
  %31 = load i64, i64* %7, align 8
  %32 = load %61*, %61** %11, align 8
  %33 = getelementptr inbounds %61, %61* %32, i32 0, i32 0
  %34 = load %52*, %52** %33, align 8
  %35 = getelementptr inbounds %52, %52* %34, i32 0, i32 0
  store i64 %31, i64* %35, align 8
  %36 = load %61*, %61** %11, align 8
  %37 = getelementptr inbounds %61, %61* %36, i32 0, i32 0
  %38 = load %52*, %52** %37, align 8
  %39 = getelementptr inbounds %52, %52* %38, i32 0, i32 1
  store i64 1, i64* %39, align 8
  %40 = load %61*, %61** %11, align 8
  %41 = getelementptr inbounds %61, %61* %40, i32 0, i32 0
  %42 = load %52*, %52** %41, align 8
  %43 = getelementptr inbounds %52, %52* %42, i32 0, i32 2
  store i64 1, i64* %43, align 8
  %44 = load %61*, %61** %11, align 8
  %45 = getelementptr inbounds %61, %61* %44, i32 0, i32 0
  %46 = load %52*, %52** %45, align 8
  %47 = getelementptr inbounds %52, %52* %46, i32 0, i32 11
  %48 = bitcast %59* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 104, i1 false)
  %49 = load i64, i64* %7, align 8
  %50 = load i64, i64* %8, align 8
  %51 = load i64, i64* %9, align 8
  %52 = call i64 @timelib_daynr_from_weeknr(i64 %49, i64 %50, i64 %51)
  %53 = load %61*, %61** %11, align 8
  %54 = getelementptr inbounds %61, %61* %53, i32 0, i32 0
  %55 = load %52*, %52** %54, align 8
  %56 = getelementptr inbounds %52, %52* %55, i32 0, i32 11
  %57 = getelementptr inbounds %59, %59* %56, i32 0, i32 2
  store i64 %52, i64* %57, align 8
  %58 = load %61*, %61** %11, align 8
  %59 = getelementptr inbounds %61, %61* %58, i32 0, i32 0
  %60 = load %52*, %52** %59, align 8
  %61 = getelementptr inbounds %52, %52* %60, i32 0, i32 16
  store i32 1, i32* %61, align 4
  %62 = load %61*, %61** %11, align 8
  %63 = getelementptr inbounds %61, %61* %62, i32 0, i32 0
  %64 = load %52*, %52** %63, align 8
  call void @timelib_update_ts(%52* %64, %53* null)
  store i32 0, i32* %12, align 4
  br label %65

65:                                               ; preds = %30, %29
  %66 = bitcast %61** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %66) #15
  %67 = load i32, i32* %12, align 4
  switch i32 %67, label %69 [
    i32 0, label %68
    i32 1, label %68
  ]

68:                                               ; preds = %65, %65
  ret void

69:                                               ; preds = %65
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @504(%29* %0, i64 %1, %29* %2) #0 {
  %4 = alloca %29*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %61*, align 8
  %8 = alloca i32, align 4
  store %29* %0, %29** %4, align 8
  store i64 %1, i64* %5, align 8
  store %29* %2, %29** %6, align 8
  %9 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = load %29*, %29** %4, align 8
  %11 = getelementptr inbounds %29, %29* %10, i32 0, i32 0
  %12 = bitcast %30* %11 to %15**
  %13 = load %15*, %15** %12, align 8
  %14 = call %61* @489(%15* %13)
  store %61* %14, %61** %7, align 8
  %15 = load %61*, %61** %7, align 8
  %16 = getelementptr inbounds %61, %61* %15, i32 0, i32 0
  %17 = load %52*, %52** %16, align 8
  %18 = icmp ne %52* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %3
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @231, i32 0, i32 0))
  br label %20

20:                                               ; preds = %19
  %21 = load %29*, %29** %6, align 8
  %22 = getelementptr inbounds %29, %29* %21, i32 0, i32 1
  %23 = bitcast %31* %22 to i32*
  store i32 2, i32* %23, align 8
  br label %24

24:                                               ; preds = %20
  br label %25

25:                                               ; preds = %24
  store i32 1, i32* %8, align 4
  br label %37

26:                                               ; preds = %3
  %27 = load %61*, %61** %7, align 8
  %28 = getelementptr inbounds %61, %61* %27, i32 0, i32 0
  %29 = load %52*, %52** %28, align 8
  %30 = load i64, i64* %5, align 8
  call void @timelib_unixtime2local(%52* %29, i64 %30)
  %31 = load %61*, %61** %7, align 8
  %32 = getelementptr inbounds %61, %61* %31, i32 0, i32 0
  %33 = load %52*, %52** %32, align 8
  call void @timelib_update_ts(%52* %33, %53* null)
  %34 = load %61*, %61** %7, align 8
  %35 = getelementptr inbounds %61, %61* %34, i32 0, i32 0
  %36 = load %52*, %52** %35, align 8
  call void @486(%52* %36, i32 0)
  store i32 0, i32* %8, align 4
  br label %37

37:                                               ; preds = %26, %25
  %38 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #15
  %39 = load i32, i32* %8, align 4
  switch i32 %39, label %41 [
    i32 0, label %40
    i32 1, label %40
  ]

40:                                               ; preds = %37, %37
  ret void

41:                                               ; preds = %37
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal %68* @505(%15* %0) #8 {
  %2 = alloca %15*, align 8
  store %15* %0, %15** %2, align 8
  %3 = load %15*, %15** %2, align 8
  %4 = bitcast %15* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 sub (i64 0, i64 ptrtoint (%15* getelementptr inbounds (%68, %68* null, i32 0, i32 3) to i64))
  %6 = bitcast i8* %5 to %68*
  ret %68* %6
}

declare dso_local %59* @timelib_diff(%52*, %52*) #4

; Function Attrs: nounwind uwtable
define internal i32 @506(%64* %0, i8* %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %64*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %52*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  store %64* %0, %64** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %13 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = call noalias i8* @_ecalloc(i64 1, i64 240) #20
  %15 = bitcast i8* %14 to %52*
  store %52* %15, %52** %8, align 8
  %16 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #15
  %17 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #15
  %18 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  %19 = load i8*, i8** %6, align 8
  store i8* %19, i8** %11, align 8
  %20 = load i8*, i8** %6, align 8
  %21 = call i64 @strlen(i8* %20) #16
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %21, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %3
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @440, i32 0, i32 0))
  %25 = load %52*, %52** %8, align 8
  %26 = bitcast %52* %25 to i8*
  call void @_efree(i8* %26)
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %12, align 4
  br label %55

27:                                               ; preds = %3
  %28 = load %52*, %52** %8, align 8
  %29 = load %41*, %41** @php_date_global_timezone_db, align 8
  %30 = icmp ne %41* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %35

33:                                               ; preds = %27
  %34 = call %41* @timelib_builtin_db()
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi %41* [ %32, %31 ], [ %34, %33 ]
  %37 = call i64 @timelib_parse_zone(i8** %6, i32* %9, %52* %28, i32* %10, %41* %36, %53* (i8*, %41*, i32*)* @php_date_parse_tzfile_wrapper)
  %38 = trunc i64 %37 to i32
  %39 = load %52*, %52** %8, align 8
  %40 = getelementptr inbounds %52, %52* %39, i32 0, i32 7
  store i32 %38, i32* %40, align 8
  %41 = load i32, i32* %10, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %35
  %44 = load i8*, i8** %11, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @441, i32 0, i32 0), i8* %44)
  %45 = load %52*, %52** %8, align 8
  %46 = bitcast %52* %45 to i8*
  call void @_efree(i8* %46)
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %12, align 4
  br label %55

47:                                               ; preds = %35
  %48 = load %64*, %64** %5, align 8
  %49 = load %52*, %52** %8, align 8
  call void @499(%64* %48, %52* %49)
  %50 = load %52*, %52** %8, align 8
  %51 = getelementptr inbounds %52, %52* %50, i32 0, i32 8
  %52 = load i8*, i8** %51, align 8
  call void @_efree(i8* %52)
  %53 = load %52*, %52** %8, align 8
  %54 = bitcast %52* %53 to i8*
  call void @_efree(i8* %54)
  store i32 0, i32* %4, align 4
  store i32 1, i32* %12, align 4
  br label %55

55:                                               ; preds = %47, %43, %24
  %56 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #15
  %57 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %57) #15
  %58 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %58) #15
  %59 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #15
  %60 = load i32, i32* %4, align 4
  ret i32 %60
}

; Function Attrs: nounwind uwtable
define internal i32 @507(%29** %0, %64** %1, %7* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %29**, align 8
  %6 = alloca %64**, align 8
  %7 = alloca %7*, align 8
  %8 = alloca %29*, align 8
  %9 = alloca %29*, align 8
  %10 = alloca i32, align 4
  store %29** %0, %29*** %5, align 8
  store %64** %1, %64*** %6, align 8
  store %7* %2, %7** %7, align 8
  %11 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = load %7*, %7** %7, align 8
  %14 = call %29* @zend_hash_str_find(%7* %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @422, i32 0, i32 0), i64 13)
  store %29* %14, %29** %9, align 8
  %15 = icmp ne %29* %14, null
  br i1 %15, label %16, label %52

16:                                               ; preds = %3
  %17 = load %7*, %7** %7, align 8
  %18 = call %29* @zend_hash_str_find(%7* %17, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @288, i32 0, i32 0), i64 8)
  store %29* %18, %29** %8, align 8
  %19 = icmp ne %29* %18, null
  br i1 %19, label %20, label %51

20:                                               ; preds = %16
  %21 = load %29*, %29** %9, align 8
  %22 = call zeroext i8 @490(%29* %21)
  %23 = zext i8 %22 to i32
  %24 = icmp ne i32 %23, 4
  br i1 %24, label %25, label %26

25:                                               ; preds = %20
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %53

26:                                               ; preds = %20
  %27 = load %29*, %29** %8, align 8
  %28 = call zeroext i8 @490(%29* %27)
  %29 = zext i8 %28 to i32
  %30 = icmp ne i32 %29, 6
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %53

32:                                               ; preds = %26
  %33 = load %64**, %64*** %6, align 8
  %34 = load %64*, %64** %33, align 8
  %35 = load %29*, %29** %8, align 8
  %36 = getelementptr inbounds %29, %29* %35, i32 0, i32 0
  %37 = bitcast %30* %36 to %28**
  %38 = load %28*, %28** %37, align 8
  %39 = getelementptr inbounds %28, %28* %38, i32 0, i32 3
  %40 = getelementptr inbounds [1 x i8], [1 x i8]* %39, i32 0, i32 0
  %41 = load %29*, %29** %8, align 8
  %42 = getelementptr inbounds %29, %29* %41, i32 0, i32 0
  %43 = bitcast %30* %42 to %28**
  %44 = load %28*, %28** %43, align 8
  %45 = getelementptr inbounds %28, %28* %44, i32 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = call i32 @506(%64* %34, i8* %40, i64 %46)
  %48 = icmp eq i32 0, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %32
  store i32 0, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %53

50:                                               ; preds = %32
  br label %51

51:                                               ; preds = %50, %16
  br label %52

52:                                               ; preds = %51, %3
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %53

53:                                               ; preds = %52, %49, %31, %25
  %54 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #15
  %55 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %55) #15
  %56 = load i32, i32* %4, align 4
  ret i32 %56
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @508(%29* %0) #6 {
  %2 = alloca %29*, align 8
  store %29* %0, %29** %2, align 8
  %3 = load %29*, %29** %2, align 8
  %4 = getelementptr inbounds %29, %29* %3, i32 0, i32 1
  %5 = bitcast %31* %4 to %76*
  %6 = getelementptr inbounds %76, %76* %5, i32 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %1
  %12 = load %29*, %29** %2, align 8
  %13 = call i32 @568(%29* %12)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = load %29*, %29** %2, align 8
  %17 = getelementptr inbounds %29, %29* %16, i32 0, i32 0
  %18 = bitcast %30* %17 to %63**
  %19 = load %63*, %63** %18, align 8
  call void @_zval_dtor_func(%63* %19)
  br label %20

20:                                               ; preds = %15, %11, %1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @509(%64* %0, %29* %1) #0 {
  %3 = alloca %64*, align 8
  %4 = alloca %29*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %28*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %29*, align 8
  %11 = alloca %28*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %29*, align 8
  %14 = alloca %28*, align 8
  store %64* %0, %64** %3, align 8
  store %29* %1, %29** %4, align 8
  %15 = load %64*, %64** %3, align 8
  %16 = getelementptr inbounds %64, %64* %15, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  switch i32 %17, label %129 [
    i32 3, label %18
    i32 1, label %51
    i32 2, label %97
  ]

18:                                               ; preds = %2
  br label %19

19:                                               ; preds = %18
  %20 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = load %64*, %64** %3, align 8
  %22 = getelementptr inbounds %64, %64* %21, i32 0, i32 2
  %23 = bitcast %65* %22 to %53**
  %24 = load %53*, %53** %23, align 8
  %25 = getelementptr inbounds %53, %53* %24, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  store i8* %26, i8** %5, align 8
  br label %27

27:                                               ; preds = %19
  br label %28

28:                                               ; preds = %27
  %29 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #15
  %30 = load %29*, %29** %4, align 8
  store %29* %30, %29** %6, align 8
  %31 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #15
  %32 = load i8*, i8** %5, align 8
  %33 = load i8*, i8** %5, align 8
  %34 = call i64 @strlen(i8* %33) #16
  %35 = call %28* @510(i8* %32, i64 %34, i32 0)
  store %28* %35, %28** %7, align 8
  %36 = load %28*, %28** %7, align 8
  %37 = load %29*, %29** %6, align 8
  %38 = getelementptr inbounds %29, %29* %37, i32 0, i32 0
  %39 = bitcast %30* %38 to %28**
  store %28* %36, %28** %39, align 8
  %40 = load %29*, %29** %6, align 8
  %41 = getelementptr inbounds %29, %29* %40, i32 0, i32 1
  %42 = bitcast %31* %41 to i32*
  store i32 5126, i32* %42, align 8
  %43 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #15
  %44 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #15
  br label %45

45:                                               ; preds = %28
  br label %46

46:                                               ; preds = %45
  br label %47

47:                                               ; preds = %46
  br label %48

48:                                               ; preds = %47
  %49 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #15
  br label %50

50:                                               ; preds = %48
  br label %129

51:                                               ; preds = %2
  %52 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #15
  %53 = call %28* @470(i64 9, i32 0)
  store %28* %53, %28** %8, align 8
  %54 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #15
  %55 = load %64*, %64** %3, align 8
  %56 = getelementptr inbounds %64, %64* %55, i32 0, i32 2
  %57 = bitcast %65* %56 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %9, align 8
  %59 = load %28*, %28** %8, align 8
  %60 = getelementptr inbounds %28, %28* %59, i32 0, i32 3
  %61 = getelementptr inbounds [1 x i8], [1 x i8]* %60, i32 0, i32 0
  %62 = load i64, i64* %9, align 8
  %63 = icmp slt i64 %62, 0
  %64 = zext i1 %63 to i64
  %65 = select i1 %63, i32 45, i32 43
  %66 = load i64, i64* %9, align 8
  %67 = sdiv i64 %66, 3600
  %68 = trunc i64 %67 to i32
  %69 = call i32 @abs(i32 %68) #17
  %70 = load i64, i64* %9, align 8
  %71 = srem i64 %70, 3600
  %72 = trunc i64 %71 to i32
  %73 = sdiv i32 %72, 60
  %74 = call i32 @abs(i32 %73) #17
  %75 = call i32 (i8*, i64, i8*, ...) @ap_php_snprintf(i8* %61, i64 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @351, i32 0, i32 0), i32 %65, i32 %69, i32 %74)
  %76 = sext i32 %75 to i64
  %77 = load %28*, %28** %8, align 8
  %78 = getelementptr inbounds %28, %28* %77, i32 0, i32 2
  store i64 %76, i64* %78, align 8
  br label %79

79:                                               ; preds = %51
  %80 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #15
  %81 = load %29*, %29** %4, align 8
  store %29* %81, %29** %10, align 8
  %82 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82) #15
  %83 = load %28*, %28** %8, align 8
  store %28* %83, %28** %11, align 8
  %84 = load %28*, %28** %11, align 8
  %85 = load %29*, %29** %10, align 8
  %86 = getelementptr inbounds %29, %29* %85, i32 0, i32 0
  %87 = bitcast %30* %86 to %28**
  store %28* %84, %28** %87, align 8
  %88 = load %29*, %29** %10, align 8
  %89 = getelementptr inbounds %29, %29* %88, i32 0, i32 1
  %90 = bitcast %31* %89 to i32*
  store i32 5126, i32* %90, align 8
  %91 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #15
  %92 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #15
  br label %93

93:                                               ; preds = %79
  br label %94

94:                                               ; preds = %93
  %95 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #15
  %96 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #15
  br label %129

97:                                               ; preds = %2
  br label %98

98:                                               ; preds = %97
  %99 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %99) #15
  %100 = load %64*, %64** %3, align 8
  %101 = getelementptr inbounds %64, %64* %100, i32 0, i32 2
  %102 = bitcast %65* %101 to %66*
  %103 = getelementptr inbounds %66, %66* %102, i32 0, i32 1
  %104 = load i8*, i8** %103, align 8
  store i8* %104, i8** %12, align 8
  br label %105

105:                                              ; preds = %98
  br label %106

106:                                              ; preds = %105
  %107 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %107) #15
  %108 = load %29*, %29** %4, align 8
  store %29* %108, %29** %13, align 8
  %109 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #15
  %110 = load i8*, i8** %12, align 8
  %111 = load i8*, i8** %12, align 8
  %112 = call i64 @strlen(i8* %111) #16
  %113 = call %28* @510(i8* %110, i64 %112, i32 0)
  store %28* %113, %28** %14, align 8
  %114 = load %28*, %28** %14, align 8
  %115 = load %29*, %29** %13, align 8
  %116 = getelementptr inbounds %29, %29* %115, i32 0, i32 0
  %117 = bitcast %30* %116 to %28**
  store %28* %114, %28** %117, align 8
  %118 = load %29*, %29** %13, align 8
  %119 = getelementptr inbounds %29, %29* %118, i32 0, i32 1
  %120 = bitcast %31* %119 to i32*
  store i32 5126, i32* %120, align 8
  %121 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %121) #15
  %122 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #15
  br label %123

123:                                              ; preds = %106
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  %127 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #15
  br label %128

128:                                              ; preds = %126
  br label %129

129:                                              ; preds = %2, %128, %94, %50
  ret void
}

declare dso_local i8* @timelib_timezone_id_from_abbr(i8*, i64, i32) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal %28* @510(i8* %0, i64 %1, i32 %2) #6 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %28*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = load i64, i64* %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call %28* @470(i64 %9, i32 %10)
  store %28* %11, %28** %7, align 8
  %12 = load %28*, %28** %7, align 8
  %13 = getelementptr inbounds %28, %28* %12, i32 0, i32 3
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i32 0, i32 0
  %15 = load i8*, i8** %4, align 8
  %16 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 %15, i64 %16, i1 false)
  %17 = load %28*, %28** %7, align 8
  %18 = getelementptr inbounds %28, %28* %17, i32 0, i32 3
  %19 = load i64, i64* %5, align 8
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i64 0, i64 %19
  store i8 0, i8* %20, align 1
  %21 = load %28*, %28** %7, align 8
  %22 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #15
  ret %28* %21
}

declare dso_local i32 @add_assoc_str_ex(%29*, i8*, i64, %28*) #4

declare dso_local i32 @add_next_index_zval(%29*, %29*) #4

; Function Attrs: nounwind uwtable
define hidden %29* @date_interval_read_property(%29* %0, %29* %1, i32 %2, i8** %3, %29* %4) #0 {
  %6 = alloca %29*, align 8
  %7 = alloca %29*, align 8
  %8 = alloca %29*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca %29*, align 8
  %12 = alloca %68*, align 8
  %13 = alloca %29*, align 8
  %14 = alloca %29, align 8
  %15 = alloca i64, align 8
  %16 = alloca double, align 8
  %17 = alloca i32, align 4
  %18 = alloca %29*, align 8
  %19 = alloca %29*, align 8
  store %29* %0, %29** %7, align 8
  store %29* %1, %29** %8, align 8
  store i32 %2, i32* %9, align 4
  store i8** %3, i8*** %10, align 8
  store %29* %4, %29** %11, align 8
  %20 = bitcast %68** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %29* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %22) #15
  %23 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  store i64 -1, i64* %15, align 8
  %24 = bitcast double* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  store double -1.000000e+00, double* %16, align 8
  %25 = load %29*, %29** %8, align 8
  %26 = call zeroext i8 @490(%29* %25)
  %27 = zext i8 %26 to i32
  %28 = icmp ne i32 %27, 6
  br i1 %28, label %29, label %38

29:                                               ; preds = %5
  %30 = load %29*, %29** %8, align 8
  %31 = bitcast %29* %14 to i8*
  %32 = bitcast %29* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false)
  call void @511(%29* %14)
  %33 = call zeroext i8 @490(%29* %14)
  %34 = zext i8 %33 to i32
  %35 = icmp ne i32 %34, 6
  br i1 %35, label %36, label %37

36:                                               ; preds = %29
  call void @_convert_to_string(%29* %14)
  br label %37

37:                                               ; preds = %36, %29
  store %29* %14, %29** %8, align 8
  store i8** null, i8*** %10, align 8
  br label %38

38:                                               ; preds = %37, %5
  %39 = load %29*, %29** %7, align 8
  %40 = getelementptr inbounds %29, %29* %39, i32 0, i32 0
  %41 = bitcast %30* %40 to %15**
  %42 = load %15*, %15** %41, align 8
  %43 = call %68* @505(%15* %42)
  store %68* %43, %68** %12, align 8
  %44 = load %68*, %68** %12, align 8
  %45 = getelementptr inbounds %68, %68* %44, i32 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %38
  %49 = call %16* @zend_get_std_object_handlers()
  %50 = getelementptr inbounds %16, %16* %49, i32 0, i32 4
  %51 = load %29* (%29*, %29*, i32, i8**, %29*)*, %29* (%29*, %29*, i32, i8**, %29*)** %50, align 8
  %52 = load %29*, %29** %7, align 8
  %53 = load %29*, %29** %8, align 8
  %54 = load i32, i32* %9, align 4
  %55 = load i8**, i8*** %10, align 8
  %56 = load %29*, %29** %11, align 8
  %57 = call %29* %51(%29* %52, %29* %53, i32 %54, i8** %55, %29* %56)
  store %29* %57, %29** %13, align 8
  %58 = load %29*, %29** %8, align 8
  %59 = icmp eq %29* %58, %14
  br i1 %59, label %60, label %62

60:                                               ; preds = %48
  %61 = load %29*, %29** %8, align 8
  call void @508(%29* %61)
  br label %62

62:                                               ; preds = %60, %48
  %63 = load %29*, %29** %13, align 8
  store %29* %63, %29** %6, align 8
  store i32 1, i32* %17, align 4
  br label %264

64:                                               ; preds = %38
  br label %65

65:                                               ; preds = %64
  %66 = load %29*, %29** %8, align 8
  %67 = getelementptr inbounds %29, %29* %66, i32 0, i32 0
  %68 = bitcast %30* %67 to %28**
  %69 = load %28*, %28** %68, align 8
  %70 = getelementptr inbounds %28, %28* %69, i32 0, i32 3
  %71 = getelementptr inbounds [1 x i8], [1 x i8]* %70, i32 0, i32 0
  %72 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @251, i32 0, i32 0)) #16
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %65
  %75 = load %68*, %68** %12, align 8
  %76 = getelementptr inbounds %68, %68* %75, i32 0, i32 0
  %77 = load %59*, %59** %76, align 8
  %78 = getelementptr inbounds %59, %59* %77, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %15, align 8
  br label %220

80:                                               ; preds = %65
  %81 = load %29*, %29** %8, align 8
  %82 = getelementptr inbounds %29, %29* %81, i32 0, i32 0
  %83 = bitcast %30* %82 to %28**
  %84 = load %28*, %28** %83, align 8
  %85 = getelementptr inbounds %28, %28* %84, i32 0, i32 3
  %86 = getelementptr inbounds [1 x i8], [1 x i8]* %85, i32 0, i32 0
  %87 = call i32 @strcmp(i8* %86, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @252, i32 0, i32 0)) #16
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %95

89:                                               ; preds = %80
  %90 = load %68*, %68** %12, align 8
  %91 = getelementptr inbounds %68, %68* %90, i32 0, i32 0
  %92 = load %59*, %59** %91, align 8
  %93 = getelementptr inbounds %59, %59* %92, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %15, align 8
  br label %220

95:                                               ; preds = %80
  %96 = load %29*, %29** %8, align 8
  %97 = getelementptr inbounds %29, %29* %96, i32 0, i32 0
  %98 = bitcast %30* %97 to %28**
  %99 = load %28*, %28** %98, align 8
  %100 = getelementptr inbounds %28, %28* %99, i32 0, i32 3
  %101 = getelementptr inbounds [1 x i8], [1 x i8]* %100, i32 0, i32 0
  %102 = call i32 @strcmp(i8* %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @253, i32 0, i32 0)) #16
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %95
  %105 = load %68*, %68** %12, align 8
  %106 = getelementptr inbounds %68, %68* %105, i32 0, i32 0
  %107 = load %59*, %59** %106, align 8
  %108 = getelementptr inbounds %59, %59* %107, i32 0, i32 2
  %109 = load i64, i64* %108, align 8
  store i64 %109, i64* %15, align 8
  br label %220

110:                                              ; preds = %95
  %111 = load %29*, %29** %8, align 8
  %112 = getelementptr inbounds %29, %29* %111, i32 0, i32 0
  %113 = bitcast %30* %112 to %28**
  %114 = load %28*, %28** %113, align 8
  %115 = getelementptr inbounds %28, %28* %114, i32 0, i32 3
  %116 = getelementptr inbounds [1 x i8], [1 x i8]* %115, i32 0, i32 0
  %117 = call i32 @strcmp(i8* %116, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @254, i32 0, i32 0)) #16
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %125

119:                                              ; preds = %110
  %120 = load %68*, %68** %12, align 8
  %121 = getelementptr inbounds %68, %68* %120, i32 0, i32 0
  %122 = load %59*, %59** %121, align 8
  %123 = getelementptr inbounds %59, %59* %122, i32 0, i32 3
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %15, align 8
  br label %220

125:                                              ; preds = %110
  %126 = load %29*, %29** %8, align 8
  %127 = getelementptr inbounds %29, %29* %126, i32 0, i32 0
  %128 = bitcast %30* %127 to %28**
  %129 = load %28*, %28** %128, align 8
  %130 = getelementptr inbounds %28, %28* %129, i32 0, i32 3
  %131 = getelementptr inbounds [1 x i8], [1 x i8]* %130, i32 0, i32 0
  %132 = call i32 @strcmp(i8* %131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @255, i32 0, i32 0)) #16
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %140

134:                                              ; preds = %125
  %135 = load %68*, %68** %12, align 8
  %136 = getelementptr inbounds %68, %68* %135, i32 0, i32 0
  %137 = load %59*, %59** %136, align 8
  %138 = getelementptr inbounds %59, %59* %137, i32 0, i32 4
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %15, align 8
  br label %220

140:                                              ; preds = %125
  %141 = load %29*, %29** %8, align 8
  %142 = getelementptr inbounds %29, %29* %141, i32 0, i32 0
  %143 = bitcast %30* %142 to %28**
  %144 = load %28*, %28** %143, align 8
  %145 = getelementptr inbounds %28, %28* %144, i32 0, i32 3
  %146 = getelementptr inbounds [1 x i8], [1 x i8]* %145, i32 0, i32 0
  %147 = call i32 @strcmp(i8* %146, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @256, i32 0, i32 0)) #16
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %155

149:                                              ; preds = %140
  %150 = load %68*, %68** %12, align 8
  %151 = getelementptr inbounds %68, %68* %150, i32 0, i32 0
  %152 = load %59*, %59** %151, align 8
  %153 = getelementptr inbounds %59, %59* %152, i32 0, i32 5
  %154 = load i64, i64* %153, align 8
  store i64 %154, i64* %15, align 8
  br label %220

155:                                              ; preds = %140
  %156 = load %29*, %29** %8, align 8
  %157 = getelementptr inbounds %29, %29* %156, i32 0, i32 0
  %158 = bitcast %30* %157 to %28**
  %159 = load %28*, %28** %158, align 8
  %160 = getelementptr inbounds %28, %28* %159, i32 0, i32 3
  %161 = getelementptr inbounds [1 x i8], [1 x i8]* %160, i32 0, i32 0
  %162 = call i32 @strcmp(i8* %161, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @257, i32 0, i32 0)) #16
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %172

164:                                              ; preds = %155
  %165 = load %68*, %68** %12, align 8
  %166 = getelementptr inbounds %68, %68* %165, i32 0, i32 0
  %167 = load %59*, %59** %166, align 8
  %168 = getelementptr inbounds %59, %59* %167, i32 0, i32 6
  %169 = load i64, i64* %168, align 8
  %170 = sitofp i64 %169 to double
  %171 = fdiv double %170, 1.000000e+06
  store double %171, double* %16, align 8
  br label %220

172:                                              ; preds = %155
  %173 = load %29*, %29** %8, align 8
  %174 = getelementptr inbounds %29, %29* %173, i32 0, i32 0
  %175 = bitcast %30* %174 to %28**
  %176 = load %28*, %28** %175, align 8
  %177 = getelementptr inbounds %28, %28* %176, i32 0, i32 3
  %178 = getelementptr inbounds [1 x i8], [1 x i8]* %177, i32 0, i32 0
  %179 = call i32 @strcmp(i8* %178, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @258, i32 0, i32 0)) #16
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %188

181:                                              ; preds = %172
  %182 = load %68*, %68** %12, align 8
  %183 = getelementptr inbounds %68, %68* %182, i32 0, i32 0
  %184 = load %59*, %59** %183, align 8
  %185 = getelementptr inbounds %59, %59* %184, i32 0, i32 10
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  store i64 %187, i64* %15, align 8
  br label %220

188:                                              ; preds = %172
  %189 = load %29*, %29** %8, align 8
  %190 = getelementptr inbounds %29, %29* %189, i32 0, i32 0
  %191 = bitcast %30* %190 to %28**
  %192 = load %28*, %28** %191, align 8
  %193 = getelementptr inbounds %28, %28* %192, i32 0, i32 3
  %194 = getelementptr inbounds [1 x i8], [1 x i8]* %193, i32 0, i32 0
  %195 = call i32 @strcmp(i8* %194, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @259, i32 0, i32 0)) #16
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %203

197:                                              ; preds = %188
  %198 = load %68*, %68** %12, align 8
  %199 = getelementptr inbounds %68, %68* %198, i32 0, i32 0
  %200 = load %59*, %59** %199, align 8
  %201 = getelementptr inbounds %59, %59* %200, i32 0, i32 11
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %15, align 8
  br label %220

203:                                              ; preds = %188
  %204 = call %16* @zend_get_std_object_handlers()
  %205 = getelementptr inbounds %16, %16* %204, i32 0, i32 4
  %206 = load %29* (%29*, %29*, i32, i8**, %29*)*, %29* (%29*, %29*, i32, i8**, %29*)** %205, align 8
  %207 = load %29*, %29** %7, align 8
  %208 = load %29*, %29** %8, align 8
  %209 = load i32, i32* %9, align 4
  %210 = load i8**, i8*** %10, align 8
  %211 = load %29*, %29** %11, align 8
  %212 = call %29* %206(%29* %207, %29* %208, i32 %209, i8** %210, %29* %211)
  store %29* %212, %29** %13, align 8
  %213 = load %29*, %29** %8, align 8
  %214 = icmp eq %29* %213, %14
  br i1 %214, label %215, label %217

215:                                              ; preds = %203
  %216 = load %29*, %29** %8, align 8
  call void @508(%29* %216)
  br label %217

217:                                              ; preds = %215, %203
  %218 = load %29*, %29** %13, align 8
  store %29* %218, %29** %6, align 8
  store i32 1, i32* %17, align 4
  br label %264

219:                                              ; No predecessors!
  br label %220

220:                                              ; preds = %219, %197, %181, %164, %149, %134, %119, %104, %89, %74
  %221 = load %29*, %29** %11, align 8
  store %29* %221, %29** %13, align 8
  %222 = load double, double* %16, align 8
  %223 = fcmp une double %222, -1.000000e+00
  br i1 %223, label %224, label %235

224:                                              ; preds = %220
  %225 = bitcast %29** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %225) #15
  %226 = load %29*, %29** %13, align 8
  store %29* %226, %29** %18, align 8
  %227 = load double, double* %16, align 8
  %228 = load %29*, %29** %18, align 8
  %229 = getelementptr inbounds %29, %29* %228, i32 0, i32 0
  %230 = bitcast %30* %229 to double*
  store double %227, double* %230, align 8
  %231 = load %29*, %29** %18, align 8
  %232 = getelementptr inbounds %29, %29* %231, i32 0, i32 1
  %233 = bitcast %31* %232 to i32*
  store i32 5, i32* %233, align 8
  %234 = bitcast %29** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234) #15
  br label %257

235:                                              ; preds = %220
  %236 = load i64, i64* %15, align 8
  %237 = icmp ne i64 %236, -99999
  br i1 %237, label %238, label %249

238:                                              ; preds = %235
  %239 = bitcast %29** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %239) #15
  %240 = load %29*, %29** %13, align 8
  store %29* %240, %29** %19, align 8
  %241 = load i64, i64* %15, align 8
  %242 = load %29*, %29** %19, align 8
  %243 = getelementptr inbounds %29, %29* %242, i32 0, i32 0
  %244 = bitcast %30* %243 to i64*
  store i64 %241, i64* %244, align 8
  %245 = load %29*, %29** %19, align 8
  %246 = getelementptr inbounds %29, %29* %245, i32 0, i32 1
  %247 = bitcast %31* %246 to i32*
  store i32 4, i32* %247, align 8
  %248 = bitcast %29** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #15
  br label %256

249:                                              ; preds = %235
  br label %250

250:                                              ; preds = %249
  %251 = load %29*, %29** %13, align 8
  %252 = getelementptr inbounds %29, %29* %251, i32 0, i32 1
  %253 = bitcast %31* %252 to i32*
  store i32 2, i32* %253, align 8
  br label %254

254:                                              ; preds = %250
  br label %255

255:                                              ; preds = %254
  br label %256

256:                                              ; preds = %255, %238
  br label %257

257:                                              ; preds = %256, %224
  %258 = load %29*, %29** %8, align 8
  %259 = icmp eq %29* %258, %14
  br i1 %259, label %260, label %262

260:                                              ; preds = %257
  %261 = load %29*, %29** %8, align 8
  call void @508(%29* %261)
  br label %262

262:                                              ; preds = %260, %257
  %263 = load %29*, %29** %13, align 8
  store %29* %263, %29** %6, align 8
  store i32 1, i32* %17, align 4
  br label %264

264:                                              ; preds = %262, %217, %62
  %265 = bitcast double* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %265) #15
  %266 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %266) #15
  %267 = bitcast %29* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %267) #15
  %268 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #15
  %269 = bitcast %68** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %269) #15
  %270 = load %29*, %29** %6, align 8
  ret %29* %270
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @511(%29* %0) #6 {
  %2 = alloca %29*, align 8
  store %29* %0, %29** %2, align 8
  %3 = load %29*, %29** %2, align 8
  %4 = getelementptr inbounds %29, %29* %3, i32 0, i32 1
  %5 = bitcast %31* %4 to %76*
  %6 = getelementptr inbounds %76, %76* %5, i32 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %1
  %12 = load %29*, %29** %2, align 8
  %13 = getelementptr inbounds %29, %29* %12, i32 0, i32 1
  %14 = bitcast %31* %13 to %76*
  %15 = getelementptr inbounds %76, %76* %14, i32 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = and i32 %17, 16
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %35

20:                                               ; preds = %11, %1
  %21 = load %29*, %29** %2, align 8
  %22 = getelementptr inbounds %29, %29* %21, i32 0, i32 1
  %23 = bitcast %31* %22 to %76*
  %24 = getelementptr inbounds %76, %76* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %26, 16
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = load %29*, %29** %2, align 8
  call void @_zval_copy_ctor_func(%29* %30)
  br label %34

31:                                               ; preds = %20
  %32 = load %29*, %29** %2, align 8
  %33 = call i32 @495(%29* %32)
  br label %34

34:                                               ; preds = %31, %29
  br label %35

35:                                               ; preds = %34, %11
  ret void
}

declare dso_local void @_convert_to_string(%29*) #4

declare dso_local %16* @zend_get_std_object_handlers() #4

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind uwtable
define hidden void @date_interval_write_property(%29* %0, %29* %1, %29* %2, i8** %3) #0 {
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %29*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca %68*, align 8
  %10 = alloca %29, align 8
  %11 = alloca i32, align 4
  store %29* %0, %29** %5, align 8
  store %29* %1, %29** %6, align 8
  store %29* %2, %29** %7, align 8
  store i8** %3, i8*** %8, align 8
  %12 = bitcast %68** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = bitcast %29* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #15
  %14 = load %29*, %29** %6, align 8
  %15 = call zeroext i8 @490(%29* %14)
  %16 = zext i8 %15 to i32
  %17 = icmp ne i32 %16, 6
  br i1 %17, label %18, label %27

18:                                               ; preds = %4
  %19 = load %29*, %29** %6, align 8
  %20 = bitcast %29* %10 to i8*
  %21 = bitcast %29* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false)
  call void @511(%29* %10)
  %22 = call zeroext i8 @490(%29* %10)
  %23 = zext i8 %22 to i32
  %24 = icmp ne i32 %23, 6
  br i1 %24, label %25, label %26

25:                                               ; preds = %18
  call void @_convert_to_string(%29* %10)
  br label %26

26:                                               ; preds = %25, %18
  store %29* %10, %29** %6, align 8
  store i8** null, i8*** %8, align 8
  br label %27

27:                                               ; preds = %26, %4
  %28 = load %29*, %29** %5, align 8
  %29 = getelementptr inbounds %29, %29* %28, i32 0, i32 0
  %30 = bitcast %30* %29 to %15**
  %31 = load %15*, %15** %30, align 8
  %32 = call %68* @505(%15* %31)
  store %68* %32, %68** %9, align 8
  %33 = load %68*, %68** %9, align 8
  %34 = getelementptr inbounds %68, %68* %33, i32 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %27
  %38 = call %16* @zend_get_std_object_handlers()
  %39 = getelementptr inbounds %16, %16* %38, i32 0, i32 5
  %40 = load void (%29*, %29*, %29*, i8**)*, void (%29*, %29*, %29*, i8**)** %39, align 8
  %41 = load %29*, %29** %5, align 8
  %42 = load %29*, %29** %6, align 8
  %43 = load %29*, %29** %7, align 8
  %44 = load i8**, i8*** %8, align 8
  call void %40(%29* %41, %29* %42, %29* %43, i8** %44)
  %45 = load %29*, %29** %6, align 8
  %46 = icmp eq %29* %45, %10
  br i1 %46, label %47, label %49

47:                                               ; preds = %37
  %48 = load %29*, %29** %6, align 8
  call void @508(%29* %48)
  br label %49

49:                                               ; preds = %47, %37
  store i32 1, i32* %11, align 4
  br label %197

50:                                               ; preds = %27
  br label %51

51:                                               ; preds = %50
  %52 = load %29*, %29** %6, align 8
  %53 = getelementptr inbounds %29, %29* %52, i32 0, i32 0
  %54 = bitcast %30* %53 to %28**
  %55 = load %28*, %28** %54, align 8
  %56 = getelementptr inbounds %28, %28* %55, i32 0, i32 3
  %57 = getelementptr inbounds [1 x i8], [1 x i8]* %56, i32 0, i32 0
  %58 = call i32 @strcmp(i8* %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @251, i32 0, i32 0)) #16
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %51
  %61 = load %29*, %29** %7, align 8
  %62 = call i64 @512(%29* %61)
  %63 = load %68*, %68** %9, align 8
  %64 = getelementptr inbounds %68, %68* %63, i32 0, i32 0
  %65 = load %59*, %59** %64, align 8
  %66 = getelementptr inbounds %59, %59* %65, i32 0, i32 0
  store i64 %62, i64* %66, align 8
  br label %191

67:                                               ; preds = %51
  %68 = load %29*, %29** %6, align 8
  %69 = getelementptr inbounds %29, %29* %68, i32 0, i32 0
  %70 = bitcast %30* %69 to %28**
  %71 = load %28*, %28** %70, align 8
  %72 = getelementptr inbounds %28, %28* %71, i32 0, i32 3
  %73 = getelementptr inbounds [1 x i8], [1 x i8]* %72, i32 0, i32 0
  %74 = call i32 @strcmp(i8* %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @252, i32 0, i32 0)) #16
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %67
  %77 = load %29*, %29** %7, align 8
  %78 = call i64 @512(%29* %77)
  %79 = load %68*, %68** %9, align 8
  %80 = getelementptr inbounds %68, %68* %79, i32 0, i32 0
  %81 = load %59*, %59** %80, align 8
  %82 = getelementptr inbounds %59, %59* %81, i32 0, i32 1
  store i64 %78, i64* %82, align 8
  br label %191

83:                                               ; preds = %67
  %84 = load %29*, %29** %6, align 8
  %85 = getelementptr inbounds %29, %29* %84, i32 0, i32 0
  %86 = bitcast %30* %85 to %28**
  %87 = load %28*, %28** %86, align 8
  %88 = getelementptr inbounds %28, %28* %87, i32 0, i32 3
  %89 = getelementptr inbounds [1 x i8], [1 x i8]* %88, i32 0, i32 0
  %90 = call i32 @strcmp(i8* %89, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @253, i32 0, i32 0)) #16
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %83
  %93 = load %29*, %29** %7, align 8
  %94 = call i64 @512(%29* %93)
  %95 = load %68*, %68** %9, align 8
  %96 = getelementptr inbounds %68, %68* %95, i32 0, i32 0
  %97 = load %59*, %59** %96, align 8
  %98 = getelementptr inbounds %59, %59* %97, i32 0, i32 2
  store i64 %94, i64* %98, align 8
  br label %191

99:                                               ; preds = %83
  %100 = load %29*, %29** %6, align 8
  %101 = getelementptr inbounds %29, %29* %100, i32 0, i32 0
  %102 = bitcast %30* %101 to %28**
  %103 = load %28*, %28** %102, align 8
  %104 = getelementptr inbounds %28, %28* %103, i32 0, i32 3
  %105 = getelementptr inbounds [1 x i8], [1 x i8]* %104, i32 0, i32 0
  %106 = call i32 @strcmp(i8* %105, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @254, i32 0, i32 0)) #16
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %115

108:                                              ; preds = %99
  %109 = load %29*, %29** %7, align 8
  %110 = call i64 @512(%29* %109)
  %111 = load %68*, %68** %9, align 8
  %112 = getelementptr inbounds %68, %68* %111, i32 0, i32 0
  %113 = load %59*, %59** %112, align 8
  %114 = getelementptr inbounds %59, %59* %113, i32 0, i32 3
  store i64 %110, i64* %114, align 8
  br label %191

115:                                              ; preds = %99
  %116 = load %29*, %29** %6, align 8
  %117 = getelementptr inbounds %29, %29* %116, i32 0, i32 0
  %118 = bitcast %30* %117 to %28**
  %119 = load %28*, %28** %118, align 8
  %120 = getelementptr inbounds %28, %28* %119, i32 0, i32 3
  %121 = getelementptr inbounds [1 x i8], [1 x i8]* %120, i32 0, i32 0
  %122 = call i32 @strcmp(i8* %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @255, i32 0, i32 0)) #16
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %115
  %125 = load %29*, %29** %7, align 8
  %126 = call i64 @512(%29* %125)
  %127 = load %68*, %68** %9, align 8
  %128 = getelementptr inbounds %68, %68* %127, i32 0, i32 0
  %129 = load %59*, %59** %128, align 8
  %130 = getelementptr inbounds %59, %59* %129, i32 0, i32 4
  store i64 %126, i64* %130, align 8
  br label %191

131:                                              ; preds = %115
  %132 = load %29*, %29** %6, align 8
  %133 = getelementptr inbounds %29, %29* %132, i32 0, i32 0
  %134 = bitcast %30* %133 to %28**
  %135 = load %28*, %28** %134, align 8
  %136 = getelementptr inbounds %28, %28* %135, i32 0, i32 3
  %137 = getelementptr inbounds [1 x i8], [1 x i8]* %136, i32 0, i32 0
  %138 = call i32 @strcmp(i8* %137, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @256, i32 0, i32 0)) #16
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %147

140:                                              ; preds = %131
  %141 = load %29*, %29** %7, align 8
  %142 = call i64 @512(%29* %141)
  %143 = load %68*, %68** %9, align 8
  %144 = getelementptr inbounds %68, %68* %143, i32 0, i32 0
  %145 = load %59*, %59** %144, align 8
  %146 = getelementptr inbounds %59, %59* %145, i32 0, i32 5
  store i64 %142, i64* %146, align 8
  br label %191

147:                                              ; preds = %131
  %148 = load %29*, %29** %6, align 8
  %149 = getelementptr inbounds %29, %29* %148, i32 0, i32 0
  %150 = bitcast %30* %149 to %28**
  %151 = load %28*, %28** %150, align 8
  %152 = getelementptr inbounds %28, %28* %151, i32 0, i32 3
  %153 = getelementptr inbounds [1 x i8], [1 x i8]* %152, i32 0, i32 0
  %154 = call i32 @strcmp(i8* %153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @257, i32 0, i32 0)) #16
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %165

156:                                              ; preds = %147
  %157 = load %29*, %29** %7, align 8
  %158 = call double @513(%29* %157)
  %159 = fmul double %158, 1.000000e+06
  %160 = fptosi double %159 to i64
  %161 = load %68*, %68** %9, align 8
  %162 = getelementptr inbounds %68, %68* %161, i32 0, i32 0
  %163 = load %59*, %59** %162, align 8
  %164 = getelementptr inbounds %59, %59* %163, i32 0, i32 6
  store i64 %160, i64* %164, align 8
  br label %191

165:                                              ; preds = %147
  %166 = load %29*, %29** %6, align 8
  %167 = getelementptr inbounds %29, %29* %166, i32 0, i32 0
  %168 = bitcast %30* %167 to %28**
  %169 = load %28*, %28** %168, align 8
  %170 = getelementptr inbounds %28, %28* %169, i32 0, i32 3
  %171 = getelementptr inbounds [1 x i8], [1 x i8]* %170, i32 0, i32 0
  %172 = call i32 @strcmp(i8* %171, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @258, i32 0, i32 0)) #16
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %182

174:                                              ; preds = %165
  %175 = load %29*, %29** %7, align 8
  %176 = call i64 @512(%29* %175)
  %177 = trunc i64 %176 to i32
  %178 = load %68*, %68** %9, align 8
  %179 = getelementptr inbounds %68, %68* %178, i32 0, i32 0
  %180 = load %59*, %59** %179, align 8
  %181 = getelementptr inbounds %59, %59* %180, i32 0, i32 10
  store i32 %177, i32* %181, align 4
  br label %191

182:                                              ; preds = %165
  %183 = call %16* @zend_get_std_object_handlers()
  %184 = getelementptr inbounds %16, %16* %183, i32 0, i32 5
  %185 = load void (%29*, %29*, %29*, i8**)*, void (%29*, %29*, %29*, i8**)** %184, align 8
  %186 = load %29*, %29** %5, align 8
  %187 = load %29*, %29** %6, align 8
  %188 = load %29*, %29** %7, align 8
  %189 = load i8**, i8*** %8, align 8
  call void %185(%29* %186, %29* %187, %29* %188, i8** %189)
  br label %190

190:                                              ; preds = %182
  br label %191

191:                                              ; preds = %190, %174, %156, %140, %124, %108, %92, %76, %60
  %192 = load %29*, %29** %6, align 8
  %193 = icmp eq %29* %192, %10
  br i1 %193, label %194, label %196

194:                                              ; preds = %191
  %195 = load %29*, %29** %6, align 8
  call void @508(%29* %195)
  br label %196

196:                                              ; preds = %194, %191
  store i32 0, i32* %11, align 4
  br label %197

197:                                              ; preds = %196, %49
  %198 = bitcast %29* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %198) #15
  %199 = bitcast %68** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #15
  %200 = load i32, i32* %11, align 4
  switch i32 %200, label %202 [
    i32 0, label %201
    i32 1, label %201
  ]

201:                                              ; preds = %197, %197
  ret void

202:                                              ; preds = %197
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @512(%29* %0) #6 {
  %2 = alloca %29*, align 8
  store %29* %0, %29** %2, align 8
  %3 = load %29*, %29** %2, align 8
  %4 = call zeroext i8 @490(%29* %3)
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = load %29*, %29** %2, align 8
  %9 = getelementptr inbounds %29, %29* %8, i32 0, i32 0
  %10 = bitcast %30* %9 to i64*
  %11 = load i64, i64* %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = load %29*, %29** %2, align 8
  %14 = call i64 @_zval_get_long_func(%29* %13)
  br label %15

15:                                               ; preds = %12, %7
  %16 = phi i64 [ %11, %7 ], [ %14, %12 ]
  ret i64 %16
}

; Function Attrs: alwaysinline nounwind uwtable
define internal double @513(%29* %0) #6 {
  %2 = alloca %29*, align 8
  store %29* %0, %29** %2, align 8
  %3 = load %29*, %29** %2, align 8
  %4 = call zeroext i8 @490(%29* %3)
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 5
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = load %29*, %29** %2, align 8
  %9 = getelementptr inbounds %29, %29* %8, i32 0, i32 0
  %10 = bitcast %30* %9 to double*
  %11 = load double, double* %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = load %29*, %29** %2, align 8
  %14 = call double @_zval_get_double_func(%29* %13)
  br label %15

15:                                               ; preds = %12, %7
  %16 = phi double [ %11, %7 ], [ %14, %12 ]
  ret double %16
}

; Function Attrs: nounwind uwtable
define internal i32 @514(%59** %0, i8* %1, i64 %2) #0 {
  %4 = alloca %59**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %52*, align 8
  %8 = alloca %52*, align 8
  %9 = alloca %59*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %34*, align 8
  store %59** %0, %59*** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %13 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  store %52* null, %52** %7, align 8
  %14 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  store %52* null, %52** %8, align 8
  %15 = bitcast %59** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  store %59* null, %59** %9, align 8
  %16 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #15
  store i32 0, i32* %10, align 4
  %17 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #15
  store i32 0, i32* %11, align 4
  %18 = bitcast %34** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #15
  %19 = load i8*, i8** %5, align 8
  %20 = load i64, i64* %6, align 8
  call void @timelib_strtointerval(i8* %19, i64 %20, %52** %7, %52** %8, %59** %9, i32* %10, %34** %12)
  %21 = load %34*, %34** %12, align 8
  %22 = getelementptr inbounds %34, %34* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %3
  %26 = load i8*, i8** %5, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @442, i32 0, i32 0), i8* %26)
  store i32 -1, i32* %11, align 4
  br label %50

27:                                               ; preds = %3
  %28 = load %59*, %59** %9, align 8
  %29 = icmp ne %59* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = load %59*, %59** %9, align 8
  %32 = load %59**, %59*** %4, align 8
  store %59* %31, %59** %32, align 8
  store i32 0, i32* %11, align 4
  br label %49

33:                                               ; preds = %27
  %34 = load %52*, %52** %7, align 8
  %35 = icmp ne %52* %34, null
  br i1 %35, label %36, label %46

36:                                               ; preds = %33
  %37 = load %52*, %52** %8, align 8
  %38 = icmp ne %52* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %36
  %40 = load %52*, %52** %7, align 8
  call void @timelib_update_ts(%52* %40, %53* null)
  %41 = load %52*, %52** %8, align 8
  call void @timelib_update_ts(%52* %41, %53* null)
  %42 = load %52*, %52** %7, align 8
  %43 = load %52*, %52** %8, align 8
  %44 = call %59* @timelib_diff(%52* %42, %52* %43)
  %45 = load %59**, %59*** %4, align 8
  store %59* %44, %59** %45, align 8
  store i32 0, i32* %11, align 4
  br label %48

46:                                               ; preds = %36, %33
  %47 = load i8*, i8** %5, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @443, i32 0, i32 0), i8* %47)
  store i32 -1, i32* %11, align 4
  br label %48

48:                                               ; preds = %46, %39
  br label %49

49:                                               ; preds = %48, %30
  br label %50

50:                                               ; preds = %49, %25
  %51 = load %34*, %34** %12, align 8
  call void @timelib_error_container_dtor(%34* %51)
  %52 = load %52*, %52** %7, align 8
  %53 = bitcast %52* %52 to i8*
  call void @_efree(i8* %53)
  %54 = load %52*, %52** %8, align 8
  %55 = bitcast %52* %54 to i8*
  call void @_efree(i8* %55)
  %56 = load i32, i32* %11, align 4
  %57 = bitcast %34** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #15
  %58 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %58) #15
  %59 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %59) #15
  %60 = bitcast %59** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #15
  %61 = bitcast %52** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #15
  %62 = bitcast %52** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #15
  ret i32 %56
}

; Function Attrs: nounwind uwtable
define internal i32 @515(%29** %0, %68** %1, %7* %2) #0 {
  %4 = alloca %29**, align 8
  %5 = alloca %68**, align 8
  %6 = alloca %7*, align 8
  %7 = alloca %29*, align 8
  %8 = alloca %29*, align 8
  %9 = alloca %29*, align 8
  %10 = alloca %29*, align 8
  %11 = alloca %29*, align 8
  %12 = alloca %29*, align 8
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca %29*, align 8
  %17 = alloca %29*, align 8
  %18 = alloca %29*, align 8
  %19 = alloca %28*, align 8
  %20 = alloca %29*, align 8
  %21 = alloca %29*, align 8
  %22 = alloca %28*, align 8
  %23 = alloca %29*, align 8
  %24 = alloca %29*, align 8
  store %29** %0, %29*** %4, align 8
  store %68** %1, %68*** %5, align 8
  store %7* %2, %7** %6, align 8
  %25 = call %59* @timelib_rel_time_ctor()
  %26 = load %68**, %68*** %5, align 8
  %27 = load %68*, %68** %26, align 8
  %28 = getelementptr inbounds %68, %68* %27, i32 0, i32 0
  store %59* %25, %59** %28, align 8
  br label %29

29:                                               ; preds = %3
  %30 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #15
  %31 = load %7*, %7** %6, align 8
  %32 = call %29* @zend_hash_str_find(%7* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @251, i32 0, i32 0), i64 1)
  store %29* %32, %29** %7, align 8
  %33 = load %29*, %29** %7, align 8
  %34 = icmp ne %29* %33, null
  br i1 %34, label %35, label %48

35:                                               ; preds = %29
  %36 = load %29*, %29** %7, align 8
  %37 = call zeroext i8 @490(%29* %36)
  %38 = zext i8 %37 to i32
  %39 = icmp sle i32 %38, 6
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = load %29*, %29** %7, align 8
  %42 = call i64 @512(%29* %41)
  %43 = load %68**, %68*** %5, align 8
  %44 = load %68*, %68** %43, align 8
  %45 = getelementptr inbounds %68, %68* %44, i32 0, i32 0
  %46 = load %59*, %59** %45, align 8
  %47 = getelementptr inbounds %59, %59* %46, i32 0, i32 0
  store i64 %42, i64* %47, align 8
  br label %54

48:                                               ; preds = %35, %29
  %49 = load %68**, %68*** %5, align 8
  %50 = load %68*, %68** %49, align 8
  %51 = getelementptr inbounds %68, %68* %50, i32 0, i32 0
  %52 = load %59*, %59** %51, align 8
  %53 = getelementptr inbounds %59, %59* %52, i32 0, i32 0
  store i64 -1, i64* %53, align 8
  br label %54

54:                                               ; preds = %48, %40
  %55 = bitcast %29** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %55) #15
  br label %56

56:                                               ; preds = %54
  br label %57

57:                                               ; preds = %56
  %58 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #15
  %59 = load %7*, %7** %6, align 8
  %60 = call %29* @zend_hash_str_find(%7* %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @252, i32 0, i32 0), i64 1)
  store %29* %60, %29** %8, align 8
  %61 = load %29*, %29** %8, align 8
  %62 = icmp ne %29* %61, null
  br i1 %62, label %63, label %76

63:                                               ; preds = %57
  %64 = load %29*, %29** %8, align 8
  %65 = call zeroext i8 @490(%29* %64)
  %66 = zext i8 %65 to i32
  %67 = icmp sle i32 %66, 6
  br i1 %67, label %68, label %76

68:                                               ; preds = %63
  %69 = load %29*, %29** %8, align 8
  %70 = call i64 @512(%29* %69)
  %71 = load %68**, %68*** %5, align 8
  %72 = load %68*, %68** %71, align 8
  %73 = getelementptr inbounds %68, %68* %72, i32 0, i32 0
  %74 = load %59*, %59** %73, align 8
  %75 = getelementptr inbounds %59, %59* %74, i32 0, i32 1
  store i64 %70, i64* %75, align 8
  br label %82

76:                                               ; preds = %63, %57
  %77 = load %68**, %68*** %5, align 8
  %78 = load %68*, %68** %77, align 8
  %79 = getelementptr inbounds %68, %68* %78, i32 0, i32 0
  %80 = load %59*, %59** %79, align 8
  %81 = getelementptr inbounds %59, %59* %80, i32 0, i32 1
  store i64 -1, i64* %81, align 8
  br label %82

82:                                               ; preds = %76, %68
  %83 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #15
  br label %84

84:                                               ; preds = %82
  br label %85

85:                                               ; preds = %84
  %86 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %86) #15
  %87 = load %7*, %7** %6, align 8
  %88 = call %29* @zend_hash_str_find(%7* %87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @253, i32 0, i32 0), i64 1)
  store %29* %88, %29** %9, align 8
  %89 = load %29*, %29** %9, align 8
  %90 = icmp ne %29* %89, null
  br i1 %90, label %91, label %104

91:                                               ; preds = %85
  %92 = load %29*, %29** %9, align 8
  %93 = call zeroext i8 @490(%29* %92)
  %94 = zext i8 %93 to i32
  %95 = icmp sle i32 %94, 6
  br i1 %95, label %96, label %104

96:                                               ; preds = %91
  %97 = load %29*, %29** %9, align 8
  %98 = call i64 @512(%29* %97)
  %99 = load %68**, %68*** %5, align 8
  %100 = load %68*, %68** %99, align 8
  %101 = getelementptr inbounds %68, %68* %100, i32 0, i32 0
  %102 = load %59*, %59** %101, align 8
  %103 = getelementptr inbounds %59, %59* %102, i32 0, i32 2
  store i64 %98, i64* %103, align 8
  br label %110

104:                                              ; preds = %91, %85
  %105 = load %68**, %68*** %5, align 8
  %106 = load %68*, %68** %105, align 8
  %107 = getelementptr inbounds %68, %68* %106, i32 0, i32 0
  %108 = load %59*, %59** %107, align 8
  %109 = getelementptr inbounds %59, %59* %108, i32 0, i32 2
  store i64 -1, i64* %109, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #15
  br label %112

112:                                              ; preds = %110
  br label %113

113:                                              ; preds = %112
  %114 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %114) #15
  %115 = load %7*, %7** %6, align 8
  %116 = call %29* @zend_hash_str_find(%7* %115, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @254, i32 0, i32 0), i64 1)
  store %29* %116, %29** %10, align 8
  %117 = load %29*, %29** %10, align 8
  %118 = icmp ne %29* %117, null
  br i1 %118, label %119, label %132

119:                                              ; preds = %113
  %120 = load %29*, %29** %10, align 8
  %121 = call zeroext i8 @490(%29* %120)
  %122 = zext i8 %121 to i32
  %123 = icmp sle i32 %122, 6
  br i1 %123, label %124, label %132

124:                                              ; preds = %119
  %125 = load %29*, %29** %10, align 8
  %126 = call i64 @512(%29* %125)
  %127 = load %68**, %68*** %5, align 8
  %128 = load %68*, %68** %127, align 8
  %129 = getelementptr inbounds %68, %68* %128, i32 0, i32 0
  %130 = load %59*, %59** %129, align 8
  %131 = getelementptr inbounds %59, %59* %130, i32 0, i32 3
  store i64 %126, i64* %131, align 8
  br label %138

132:                                              ; preds = %119, %113
  %133 = load %68**, %68*** %5, align 8
  %134 = load %68*, %68** %133, align 8
  %135 = getelementptr inbounds %68, %68* %134, i32 0, i32 0
  %136 = load %59*, %59** %135, align 8
  %137 = getelementptr inbounds %59, %59* %136, i32 0, i32 3
  store i64 -1, i64* %137, align 8
  br label %138

138:                                              ; preds = %132, %124
  %139 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %139) #15
  br label %140

140:                                              ; preds = %138
  br label %141

141:                                              ; preds = %140
  %142 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %142) #15
  %143 = load %7*, %7** %6, align 8
  %144 = call %29* @zend_hash_str_find(%7* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @255, i32 0, i32 0), i64 1)
  store %29* %144, %29** %11, align 8
  %145 = load %29*, %29** %11, align 8
  %146 = icmp ne %29* %145, null
  br i1 %146, label %147, label %160

147:                                              ; preds = %141
  %148 = load %29*, %29** %11, align 8
  %149 = call zeroext i8 @490(%29* %148)
  %150 = zext i8 %149 to i32
  %151 = icmp sle i32 %150, 6
  br i1 %151, label %152, label %160

152:                                              ; preds = %147
  %153 = load %29*, %29** %11, align 8
  %154 = call i64 @512(%29* %153)
  %155 = load %68**, %68*** %5, align 8
  %156 = load %68*, %68** %155, align 8
  %157 = getelementptr inbounds %68, %68* %156, i32 0, i32 0
  %158 = load %59*, %59** %157, align 8
  %159 = getelementptr inbounds %59, %59* %158, i32 0, i32 4
  store i64 %154, i64* %159, align 8
  br label %166

160:                                              ; preds = %147, %141
  %161 = load %68**, %68*** %5, align 8
  %162 = load %68*, %68** %161, align 8
  %163 = getelementptr inbounds %68, %68* %162, i32 0, i32 0
  %164 = load %59*, %59** %163, align 8
  %165 = getelementptr inbounds %59, %59* %164, i32 0, i32 4
  store i64 -1, i64* %165, align 8
  br label %166

166:                                              ; preds = %160, %152
  %167 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #15
  br label %168

168:                                              ; preds = %166
  br label %169

169:                                              ; preds = %168
  %170 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %170) #15
  %171 = load %7*, %7** %6, align 8
  %172 = call %29* @zend_hash_str_find(%7* %171, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @256, i32 0, i32 0), i64 1)
  store %29* %172, %29** %12, align 8
  %173 = load %29*, %29** %12, align 8
  %174 = icmp ne %29* %173, null
  br i1 %174, label %175, label %188

175:                                              ; preds = %169
  %176 = load %29*, %29** %12, align 8
  %177 = call zeroext i8 @490(%29* %176)
  %178 = zext i8 %177 to i32
  %179 = icmp sle i32 %178, 6
  br i1 %179, label %180, label %188

180:                                              ; preds = %175
  %181 = load %29*, %29** %12, align 8
  %182 = call i64 @512(%29* %181)
  %183 = load %68**, %68*** %5, align 8
  %184 = load %68*, %68** %183, align 8
  %185 = getelementptr inbounds %68, %68* %184, i32 0, i32 0
  %186 = load %59*, %59** %185, align 8
  %187 = getelementptr inbounds %59, %59* %186, i32 0, i32 5
  store i64 %182, i64* %187, align 8
  br label %194

188:                                              ; preds = %175, %169
  %189 = load %68**, %68*** %5, align 8
  %190 = load %68*, %68** %189, align 8
  %191 = getelementptr inbounds %68, %68* %190, i32 0, i32 0
  %192 = load %59*, %59** %191, align 8
  %193 = getelementptr inbounds %59, %59* %192, i32 0, i32 5
  store i64 -1, i64* %193, align 8
  br label %194

194:                                              ; preds = %188, %180
  %195 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #15
  br label %196

196:                                              ; preds = %194
  br label %197

197:                                              ; preds = %196
  %198 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %198) #15
  %199 = load %7*, %7** %6, align 8
  %200 = call %29* @zend_hash_str_find(%7* %199, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @257, i32 0, i32 0), i64 1)
  store %29* %200, %29** %13, align 8
  %201 = load %29*, %29** %13, align 8
  %202 = icmp ne %29* %201, null
  br i1 %202, label %203, label %213

203:                                              ; preds = %197
  %204 = load %29*, %29** %13, align 8
  %205 = call double @513(%29* %204)
  %206 = fmul double %205, 1.000000e+06
  %207 = fptosi double %206 to i64
  %208 = load %68**, %68*** %5, align 8
  %209 = load %68*, %68** %208, align 8
  %210 = getelementptr inbounds %68, %68* %209, i32 0, i32 0
  %211 = load %59*, %59** %210, align 8
  %212 = getelementptr inbounds %59, %59* %211, i32 0, i32 6
  store i64 %207, i64* %212, align 8
  br label %219

213:                                              ; preds = %197
  %214 = load %68**, %68*** %5, align 8
  %215 = load %68*, %68** %214, align 8
  %216 = getelementptr inbounds %68, %68* %215, i32 0, i32 0
  %217 = load %59*, %59** %216, align 8
  %218 = getelementptr inbounds %59, %59* %217, i32 0, i32 6
  store i64 -1000000, i64* %218, align 8
  br label %219

219:                                              ; preds = %213, %203
  %220 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %220) #15
  br label %221

221:                                              ; preds = %219
  br label %222

222:                                              ; preds = %221
  %223 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %223) #15
  %224 = load %7*, %7** %6, align 8
  %225 = call %29* @zend_hash_str_find(%7* %224, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @206, i32 0, i32 0), i64 7)
  store %29* %225, %29** %14, align 8
  %226 = load %29*, %29** %14, align 8
  %227 = icmp ne %29* %226, null
  br i1 %227, label %228, label %242

228:                                              ; preds = %222
  %229 = load %29*, %29** %14, align 8
  %230 = call zeroext i8 @490(%29* %229)
  %231 = zext i8 %230 to i32
  %232 = icmp sle i32 %231, 6
  br i1 %232, label %233, label %242

233:                                              ; preds = %228
  %234 = load %29*, %29** %14, align 8
  %235 = call i64 @512(%29* %234)
  %236 = trunc i64 %235 to i32
  %237 = load %68**, %68*** %5, align 8
  %238 = load %68*, %68** %237, align 8
  %239 = getelementptr inbounds %68, %68* %238, i32 0, i32 0
  %240 = load %59*, %59** %239, align 8
  %241 = getelementptr inbounds %59, %59* %240, i32 0, i32 7
  store i32 %236, i32* %241, align 8
  br label %248

242:                                              ; preds = %228, %222
  %243 = load %68**, %68*** %5, align 8
  %244 = load %68*, %68** %243, align 8
  %245 = getelementptr inbounds %68, %68* %244, i32 0, i32 0
  %246 = load %59*, %59** %245, align 8
  %247 = getelementptr inbounds %59, %59* %246, i32 0, i32 7
  store i32 -1, i32* %247, align 8
  br label %248

248:                                              ; preds = %242, %233
  %249 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %249) #15
  br label %250

250:                                              ; preds = %248
  br label %251

251:                                              ; preds = %250
  %252 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %252) #15
  %253 = load %7*, %7** %6, align 8
  %254 = call %29* @zend_hash_str_find(%7* %253, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @423, i32 0, i32 0), i64 16)
  store %29* %254, %29** %15, align 8
  %255 = load %29*, %29** %15, align 8
  %256 = icmp ne %29* %255, null
  br i1 %256, label %257, label %271

257:                                              ; preds = %251
  %258 = load %29*, %29** %15, align 8
  %259 = call zeroext i8 @490(%29* %258)
  %260 = zext i8 %259 to i32
  %261 = icmp sle i32 %260, 6
  br i1 %261, label %262, label %271

262:                                              ; preds = %257
  %263 = load %29*, %29** %15, align 8
  %264 = call i64 @512(%29* %263)
  %265 = trunc i64 %264 to i32
  %266 = load %68**, %68*** %5, align 8
  %267 = load %68*, %68** %266, align 8
  %268 = getelementptr inbounds %68, %68* %267, i32 0, i32 0
  %269 = load %59*, %59** %268, align 8
  %270 = getelementptr inbounds %59, %59* %269, i32 0, i32 8
  store i32 %265, i32* %270, align 4
  br label %277

271:                                              ; preds = %257, %251
  %272 = load %68**, %68*** %5, align 8
  %273 = load %68*, %68** %272, align 8
  %274 = getelementptr inbounds %68, %68* %273, i32 0, i32 0
  %275 = load %59*, %59** %274, align 8
  %276 = getelementptr inbounds %59, %59* %275, i32 0, i32 8
  store i32 -1, i32* %276, align 4
  br label %277

277:                                              ; preds = %271, %262
  %278 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %278) #15
  br label %279

279:                                              ; preds = %277
  br label %280

280:                                              ; preds = %279
  %281 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %281) #15
  %282 = load %7*, %7** %6, align 8
  %283 = call %29* @zend_hash_str_find(%7* %282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @424, i32 0, i32 0), i64 17)
  store %29* %283, %29** %16, align 8
  %284 = load %29*, %29** %16, align 8
  %285 = icmp ne %29* %284, null
  br i1 %285, label %286, label %300

286:                                              ; preds = %280
  %287 = load %29*, %29** %16, align 8
  %288 = call zeroext i8 @490(%29* %287)
  %289 = zext i8 %288 to i32
  %290 = icmp sle i32 %289, 6
  br i1 %290, label %291, label %300

291:                                              ; preds = %286
  %292 = load %29*, %29** %16, align 8
  %293 = call i64 @512(%29* %292)
  %294 = trunc i64 %293 to i32
  %295 = load %68**, %68*** %5, align 8
  %296 = load %68*, %68** %295, align 8
  %297 = getelementptr inbounds %68, %68* %296, i32 0, i32 0
  %298 = load %59*, %59** %297, align 8
  %299 = getelementptr inbounds %59, %59* %298, i32 0, i32 9
  store i32 %294, i32* %299, align 8
  br label %306

300:                                              ; preds = %286, %280
  %301 = load %68**, %68*** %5, align 8
  %302 = load %68*, %68** %301, align 8
  %303 = getelementptr inbounds %68, %68* %302, i32 0, i32 0
  %304 = load %59*, %59** %303, align 8
  %305 = getelementptr inbounds %59, %59* %304, i32 0, i32 9
  store i32 -1, i32* %305, align 8
  br label %306

306:                                              ; preds = %300, %291
  %307 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %307) #15
  br label %308

308:                                              ; preds = %306
  br label %309

309:                                              ; preds = %308
  %310 = bitcast %29** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %310) #15
  %311 = load %7*, %7** %6, align 8
  %312 = call %29* @zend_hash_str_find(%7* %311, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @258, i32 0, i32 0), i64 6)
  store %29* %312, %29** %17, align 8
  %313 = load %29*, %29** %17, align 8
  %314 = icmp ne %29* %313, null
  br i1 %314, label %315, label %329

315:                                              ; preds = %309
  %316 = load %29*, %29** %17, align 8
  %317 = call zeroext i8 @490(%29* %316)
  %318 = zext i8 %317 to i32
  %319 = icmp sle i32 %318, 6
  br i1 %319, label %320, label %329

320:                                              ; preds = %315
  %321 = load %29*, %29** %17, align 8
  %322 = call i64 @512(%29* %321)
  %323 = trunc i64 %322 to i32
  %324 = load %68**, %68*** %5, align 8
  %325 = load %68*, %68** %324, align 8
  %326 = getelementptr inbounds %68, %68* %325, i32 0, i32 0
  %327 = load %59*, %59** %326, align 8
  %328 = getelementptr inbounds %59, %59* %327, i32 0, i32 10
  store i32 %323, i32* %328, align 4
  br label %335

329:                                              ; preds = %315, %309
  %330 = load %68**, %68*** %5, align 8
  %331 = load %68*, %68** %330, align 8
  %332 = getelementptr inbounds %68, %68* %331, i32 0, i32 0
  %333 = load %59*, %59** %332, align 8
  %334 = getelementptr inbounds %59, %59* %333, i32 0, i32 10
  store i32 0, i32* %334, align 4
  br label %335

335:                                              ; preds = %329, %320
  %336 = bitcast %29** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %336) #15
  br label %337

337:                                              ; preds = %335
  br label %338

338:                                              ; preds = %337
  %339 = bitcast %29** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %339) #15
  %340 = load %7*, %7** %6, align 8
  %341 = call %29* @zend_hash_str_find(%7* %340, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @259, i32 0, i32 0), i64 4)
  store %29* %341, %29** %18, align 8
  %342 = load %29*, %29** %18, align 8
  %343 = icmp ne %29* %342, null
  br i1 %343, label %344, label %355

344:                                              ; preds = %338
  %345 = load %29*, %29** %18, align 8
  %346 = call zeroext i8 @490(%29* %345)
  %347 = zext i8 %346 to i32
  %348 = icmp eq i32 %347, 2
  br i1 %348, label %349, label %355

349:                                              ; preds = %344
  %350 = load %68**, %68*** %5, align 8
  %351 = load %68*, %68** %350, align 8
  %352 = getelementptr inbounds %68, %68* %351, i32 0, i32 0
  %353 = load %59*, %59** %352, align 8
  %354 = getelementptr inbounds %59, %59* %353, i32 0, i32 11
  store i64 -99999, i64* %354, align 8
  br label %385

355:                                              ; preds = %344, %338
  %356 = load %29*, %29** %18, align 8
  %357 = icmp ne %29* %356, null
  br i1 %357, label %358, label %378

358:                                              ; preds = %355
  %359 = load %29*, %29** %18, align 8
  %360 = call zeroext i8 @490(%29* %359)
  %361 = zext i8 %360 to i32
  %362 = icmp sle i32 %361, 6
  br i1 %362, label %363, label %378

363:                                              ; preds = %358
  %364 = bitcast %28** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %364) #15
  %365 = load %29*, %29** %18, align 8
  %366 = call %28* @564(%29* %365)
  store %28* %366, %28** %19, align 8
  %367 = load %28*, %28** %19, align 8
  %368 = getelementptr inbounds %28, %28* %367, i32 0, i32 3
  %369 = getelementptr inbounds [1 x i8], [1 x i8]* %368, i32 0, i32 0
  %370 = call i64 @atoll(i8* %369) #16
  %371 = load %68**, %68*** %5, align 8
  %372 = load %68*, %68** %371, align 8
  %373 = getelementptr inbounds %68, %68* %372, i32 0, i32 0
  %374 = load %59*, %59** %373, align 8
  %375 = getelementptr inbounds %59, %59* %374, i32 0, i32 11
  store i64 %370, i64* %375, align 8
  %376 = load %28*, %28** %19, align 8
  call void @566(%28* %376)
  %377 = bitcast %28** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %377) #15
  br label %384

378:                                              ; preds = %358, %355
  %379 = load %68**, %68*** %5, align 8
  %380 = load %68*, %68** %379, align 8
  %381 = getelementptr inbounds %68, %68* %380, i32 0, i32 0
  %382 = load %59*, %59** %381, align 8
  %383 = getelementptr inbounds %59, %59* %382, i32 0, i32 11
  store i64 -1, i64* %383, align 8
  br label %384

384:                                              ; preds = %378, %363
  br label %385

385:                                              ; preds = %384, %349
  %386 = bitcast %29** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %386) #15
  br label %387

387:                                              ; preds = %385
  br label %388

388:                                              ; preds = %387
  %389 = bitcast %29** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %389) #15
  %390 = load %7*, %7** %6, align 8
  %391 = call %29* @zend_hash_str_find(%7* %390, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @425, i32 0, i32 0), i64 12)
  store %29* %391, %29** %20, align 8
  %392 = load %29*, %29** %20, align 8
  %393 = icmp ne %29* %392, null
  br i1 %393, label %394, label %409

394:                                              ; preds = %388
  %395 = load %29*, %29** %20, align 8
  %396 = call zeroext i8 @490(%29* %395)
  %397 = zext i8 %396 to i32
  %398 = icmp sle i32 %397, 6
  br i1 %398, label %399, label %409

399:                                              ; preds = %394
  %400 = load %29*, %29** %20, align 8
  %401 = call i64 @512(%29* %400)
  %402 = trunc i64 %401 to i32
  %403 = load %68**, %68*** %5, align 8
  %404 = load %68*, %68** %403, align 8
  %405 = getelementptr inbounds %68, %68* %404, i32 0, i32 0
  %406 = load %59*, %59** %405, align 8
  %407 = getelementptr inbounds %59, %59* %406, i32 0, i32 12
  %408 = getelementptr inbounds %60, %60* %407, i32 0, i32 0
  store i32 %402, i32* %408, align 8
  br label %416

409:                                              ; preds = %394, %388
  %410 = load %68**, %68*** %5, align 8
  %411 = load %68*, %68** %410, align 8
  %412 = getelementptr inbounds %68, %68* %411, i32 0, i32 0
  %413 = load %59*, %59** %412, align 8
  %414 = getelementptr inbounds %59, %59* %413, i32 0, i32 12
  %415 = getelementptr inbounds %60, %60* %414, i32 0, i32 0
  store i32 0, i32* %415, align 8
  br label %416

416:                                              ; preds = %409, %399
  %417 = bitcast %29** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %417) #15
  br label %418

418:                                              ; preds = %416
  br label %419

419:                                              ; preds = %418
  %420 = bitcast %29** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %420) #15
  %421 = load %7*, %7** %6, align 8
  %422 = call %29* @zend_hash_str_find(%7* %421, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @426, i32 0, i32 0), i64 14)
  store %29* %422, %29** %21, align 8
  %423 = load %29*, %29** %21, align 8
  %424 = icmp ne %29* %423, null
  br i1 %424, label %425, label %446

425:                                              ; preds = %419
  %426 = load %29*, %29** %21, align 8
  %427 = call zeroext i8 @490(%29* %426)
  %428 = zext i8 %427 to i32
  %429 = icmp sle i32 %428, 6
  br i1 %429, label %430, label %446

430:                                              ; preds = %425
  %431 = bitcast %28** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %431) #15
  %432 = load %29*, %29** %21, align 8
  %433 = call %28* @564(%29* %432)
  store %28* %433, %28** %22, align 8
  %434 = load %28*, %28** %22, align 8
  %435 = getelementptr inbounds %28, %28* %434, i32 0, i32 3
  %436 = getelementptr inbounds [1 x i8], [1 x i8]* %435, i32 0, i32 0
  %437 = call i64 @atoll(i8* %436) #16
  %438 = load %68**, %68*** %5, align 8
  %439 = load %68*, %68** %438, align 8
  %440 = getelementptr inbounds %68, %68* %439, i32 0, i32 0
  %441 = load %59*, %59** %440, align 8
  %442 = getelementptr inbounds %59, %59* %441, i32 0, i32 12
  %443 = getelementptr inbounds %60, %60* %442, i32 0, i32 1
  store i64 %437, i64* %443, align 8
  %444 = load %28*, %28** %22, align 8
  call void @566(%28* %444)
  %445 = bitcast %28** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %445) #15
  br label %453

446:                                              ; preds = %425, %419
  %447 = load %68**, %68*** %5, align 8
  %448 = load %68*, %68** %447, align 8
  %449 = getelementptr inbounds %68, %68* %448, i32 0, i32 0
  %450 = load %59*, %59** %449, align 8
  %451 = getelementptr inbounds %59, %59* %450, i32 0, i32 12
  %452 = getelementptr inbounds %60, %60* %451, i32 0, i32 1
  store i64 -1, i64* %452, align 8
  br label %453

453:                                              ; preds = %446, %430
  %454 = bitcast %29** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %454) #15
  br label %455

455:                                              ; preds = %453
  br label %456

456:                                              ; preds = %455
  %457 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %457) #15
  %458 = load %7*, %7** %6, align 8
  %459 = call %29* @zend_hash_str_find(%7* %458, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @427, i32 0, i32 0), i64 21)
  store %29* %459, %29** %23, align 8
  %460 = load %29*, %29** %23, align 8
  %461 = icmp ne %29* %460, null
  br i1 %461, label %462, label %476

462:                                              ; preds = %456
  %463 = load %29*, %29** %23, align 8
  %464 = call zeroext i8 @490(%29* %463)
  %465 = zext i8 %464 to i32
  %466 = icmp sle i32 %465, 6
  br i1 %466, label %467, label %476

467:                                              ; preds = %462
  %468 = load %29*, %29** %23, align 8
  %469 = call i64 @512(%29* %468)
  %470 = trunc i64 %469 to i32
  %471 = load %68**, %68*** %5, align 8
  %472 = load %68*, %68** %471, align 8
  %473 = getelementptr inbounds %68, %68* %472, i32 0, i32 0
  %474 = load %59*, %59** %473, align 8
  %475 = getelementptr inbounds %59, %59* %474, i32 0, i32 13
  store i32 %470, i32* %475, align 8
  br label %482

476:                                              ; preds = %462, %456
  %477 = load %68**, %68*** %5, align 8
  %478 = load %68*, %68** %477, align 8
  %479 = getelementptr inbounds %68, %68* %478, i32 0, i32 0
  %480 = load %59*, %59** %479, align 8
  %481 = getelementptr inbounds %59, %59* %480, i32 0, i32 13
  store i32 0, i32* %481, align 8
  br label %482

482:                                              ; preds = %476, %467
  %483 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %483) #15
  br label %484

484:                                              ; preds = %482
  br label %485

485:                                              ; preds = %484
  %486 = bitcast %29** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %486) #15
  %487 = load %7*, %7** %6, align 8
  %488 = call %29* @zend_hash_str_find(%7* %487, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @428, i32 0, i32 0), i64 21)
  store %29* %488, %29** %24, align 8
  %489 = load %29*, %29** %24, align 8
  %490 = icmp ne %29* %489, null
  br i1 %490, label %491, label %505

491:                                              ; preds = %485
  %492 = load %29*, %29** %24, align 8
  %493 = call zeroext i8 @490(%29* %492)
  %494 = zext i8 %493 to i32
  %495 = icmp sle i32 %494, 6
  br i1 %495, label %496, label %505

496:                                              ; preds = %491
  %497 = load %29*, %29** %24, align 8
  %498 = call i64 @512(%29* %497)
  %499 = trunc i64 %498 to i32
  %500 = load %68**, %68*** %5, align 8
  %501 = load %68*, %68** %500, align 8
  %502 = getelementptr inbounds %68, %68* %501, i32 0, i32 0
  %503 = load %59*, %59** %502, align 8
  %504 = getelementptr inbounds %59, %59* %503, i32 0, i32 14
  store i32 %499, i32* %504, align 4
  br label %511

505:                                              ; preds = %491, %485
  %506 = load %68**, %68*** %5, align 8
  %507 = load %68*, %68** %506, align 8
  %508 = getelementptr inbounds %68, %68* %507, i32 0, i32 0
  %509 = load %59*, %59** %508, align 8
  %510 = getelementptr inbounds %59, %59* %509, i32 0, i32 14
  store i32 0, i32* %510, align 4
  br label %511

511:                                              ; preds = %505, %496
  %512 = bitcast %29** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %512) #15
  br label %513

513:                                              ; preds = %511
  %514 = load %68**, %68*** %5, align 8
  %515 = load %68*, %68** %514, align 8
  %516 = getelementptr inbounds %68, %68* %515, i32 0, i32 2
  store i32 1, i32* %516, align 8
  ret i32 0
}

declare dso_local %59* @timelib_rel_time_clone(%59*) #4

; Function Attrs: nounwind uwtable
define internal %28* @516(i8* %0, i64 %1, %59* %2) #0 {
  %4 = alloca %28*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %59*, align 8
  %8 = alloca %73, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [33 x i8], align 16
  %13 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store %59* %2, %59** %7, align 8
  %14 = bitcast %73* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #15
  %15 = bitcast %73* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  %16 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #15
  %17 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #15
  %18 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #15
  store i32 0, i32* %11, align 4
  %19 = bitcast [33 x i8]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 33, i8* %19) #15
  %20 = load i64, i64* %6, align 8
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %3
  %23 = load %28*, %28** @zend_empty_string, align 8
  store %28* %23, %28** %4, align 8
  store i32 1, i32* %13, align 4
  br label %209

24:                                               ; preds = %3
  store i64 0, i64* %9, align 8
  br label %25

25:                                               ; preds = %197, %24
  %26 = load i64, i64* %9, align 8
  %27 = load i64, i64* %6, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %200

29:                                               ; preds = %25
  %30 = load i32, i32* %11, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %182

32:                                               ; preds = %29
  %33 = load i8*, i8** %5, align 8
  %34 = load i64, i64* %9, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  switch i32 %37, label %170 [
    i32 89, label %38
    i32 121, label %45
    i32 77, label %52
    i32 109, label %59
    i32 68, label %66
    i32 100, label %73
    i32 72, label %80
    i32 104, label %87
    i32 73, label %94
    i32 105, label %101
    i32 83, label %108
    i32 115, label %114
    i32 70, label %120
    i32 102, label %126
    i32 97, label %132
    i32 114, label %149
    i32 82, label %158
    i32 37, label %167
  ]

38:                                               ; preds = %32
  %39 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %40 = load %59*, %59** %7, align 8
  %41 = getelementptr inbounds %59, %59* %40, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %39, i64 33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %43)
  store i32 %44, i32* %10, align 4
  br label %178

45:                                               ; preds = %32
  %46 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %47 = load %59*, %59** %7, align 8
  %48 = getelementptr inbounds %59, %59* %47, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %46, i64 33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %50)
  store i32 %51, i32* %10, align 4
  br label %178

52:                                               ; preds = %32
  %53 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %54 = load %59*, %59** %7, align 8
  %55 = getelementptr inbounds %59, %59* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %53, i64 33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %57)
  store i32 %58, i32* %10, align 4
  br label %178

59:                                               ; preds = %32
  %60 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %61 = load %59*, %59** %7, align 8
  %62 = getelementptr inbounds %59, %59* %61, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %60, i64 33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %64)
  store i32 %65, i32* %10, align 4
  br label %178

66:                                               ; preds = %32
  %67 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %68 = load %59*, %59** %7, align 8
  %69 = getelementptr inbounds %59, %59* %68, i32 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %67, i64 33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %71)
  store i32 %72, i32* %10, align 4
  br label %178

73:                                               ; preds = %32
  %74 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %75 = load %59*, %59** %7, align 8
  %76 = getelementptr inbounds %59, %59* %75, i32 0, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %74, i64 33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %78)
  store i32 %79, i32* %10, align 4
  br label %178

80:                                               ; preds = %32
  %81 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %82 = load %59*, %59** %7, align 8
  %83 = getelementptr inbounds %59, %59* %82, i32 0, i32 3
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i32
  %86 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %81, i64 33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %85)
  store i32 %86, i32* %10, align 4
  br label %178

87:                                               ; preds = %32
  %88 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %89 = load %59*, %59** %7, align 8
  %90 = getelementptr inbounds %59, %59* %89, i32 0, i32 3
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %91 to i32
  %93 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %88, i64 33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %92)
  store i32 %93, i32* %10, align 4
  br label %178

94:                                               ; preds = %32
  %95 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %96 = load %59*, %59** %7, align 8
  %97 = getelementptr inbounds %59, %59* %96, i32 0, i32 4
  %98 = load i64, i64* %97, align 8
  %99 = trunc i64 %98 to i32
  %100 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %95, i64 33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i32 %99)
  store i32 %100, i32* %10, align 4
  br label %178

101:                                              ; preds = %32
  %102 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %103 = load %59*, %59** %7, align 8
  %104 = getelementptr inbounds %59, %59* %103, i32 0, i32 4
  %105 = load i64, i64* %104, align 8
  %106 = trunc i64 %105 to i32
  %107 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %102, i64 33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %106)
  store i32 %107, i32* %10, align 4
  br label %178

108:                                              ; preds = %32
  %109 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %110 = load %59*, %59** %7, align 8
  %111 = getelementptr inbounds %59, %59* %110, i32 0, i32 5
  %112 = load i64, i64* %111, align 8
  %113 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %109, i64 33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @444, i32 0, i32 0), i64 %112)
  store i32 %113, i32* %10, align 4
  br label %178

114:                                              ; preds = %32
  %115 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %116 = load %59*, %59** %7, align 8
  %117 = getelementptr inbounds %59, %59* %116, i32 0, i32 5
  %118 = load i64, i64* %117, align 8
  %119 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %115, i64 33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @339, i32 0, i32 0), i64 %118)
  store i32 %119, i32* %10, align 4
  br label %178

120:                                              ; preds = %32
  %121 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %122 = load %59*, %59** %7, align 8
  %123 = getelementptr inbounds %59, %59* %122, i32 0, i32 6
  %124 = load i64, i64* %123, align 8
  %125 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %121, i64 33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @445, i32 0, i32 0), i64 %124)
  store i32 %125, i32* %10, align 4
  br label %178

126:                                              ; preds = %32
  %127 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %128 = load %59*, %59** %7, align 8
  %129 = getelementptr inbounds %59, %59* %128, i32 0, i32 6
  %130 = load i64, i64* %129, align 8
  %131 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %127, i64 33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @339, i32 0, i32 0), i64 %130)
  store i32 %131, i32* %10, align 4
  br label %178

132:                                              ; preds = %32
  %133 = load %59*, %59** %7, align 8
  %134 = getelementptr inbounds %59, %59* %133, i32 0, i32 11
  %135 = load i64, i64* %134, align 8
  %136 = trunc i64 %135 to i32
  %137 = icmp ne i32 %136, -99999
  br i1 %137, label %138, label %145

138:                                              ; preds = %132
  %139 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %140 = load %59*, %59** %7, align 8
  %141 = getelementptr inbounds %59, %59* %140, i32 0, i32 11
  %142 = load i64, i64* %141, align 8
  %143 = trunc i64 %142 to i32
  %144 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %139, i64 33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @338, i32 0, i32 0), i32 %143)
  store i32 %144, i32* %10, align 4
  br label %148

145:                                              ; preds = %132
  %146 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %147 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %146, i64 33, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @446, i32 0, i32 0))
  store i32 %147, i32* %10, align 4
  br label %148

148:                                              ; preds = %145, %138
  br label %178

149:                                              ; preds = %32
  %150 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %151 = load %59*, %59** %7, align 8
  %152 = getelementptr inbounds %59, %59* %151, i32 0, i32 10
  %153 = load i32, i32* %152, align 4
  %154 = icmp ne i32 %153, 0
  %155 = zext i1 %154 to i64
  %156 = select i1 %154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @342, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @210, i32 0, i32 0)
  %157 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %150, i64 33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @337, i32 0, i32 0), i8* %156)
  store i32 %157, i32* %10, align 4
  br label %178

158:                                              ; preds = %32
  %159 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %160 = load %59*, %59** %7, align 8
  %161 = getelementptr inbounds %59, %59* %160, i32 0, i32 10
  %162 = load i32, i32* %161, align 4
  %163 = icmp ne i32 %162, 0
  %164 = zext i1 %163 to i64
  %165 = select i1 %163, i32 45, i32 43
  %166 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %159, i64 33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @447, i32 0, i32 0), i32 %165)
  store i32 %166, i32* %10, align 4
  br label %178

167:                                              ; preds = %32
  %168 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %169 = call i32 (i8*, i64, i8*, ...) @ap_php_slprintf(i8* %168, i64 33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @448, i32 0, i32 0))
  store i32 %169, i32* %10, align 4
  br label %178

170:                                              ; preds = %32
  %171 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i64 0, i64 0
  store i8 37, i8* %171, align 16
  %172 = load i8*, i8** %5, align 8
  %173 = load i64, i64* %9, align 8
  %174 = getelementptr inbounds i8, i8* %172, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i64 0, i64 1
  store i8 %175, i8* %176, align 1
  %177 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i64 0, i64 2
  store i8 0, i8* %177, align 2
  store i32 2, i32* %10, align 4
  br label %178

178:                                              ; preds = %170, %167, %158, %149, %148, %126, %120, %114, %108, %101, %94, %87, %80, %73, %66, %59, %52, %45, %38
  %179 = getelementptr inbounds [33 x i8], [33 x i8]* %12, i32 0, i32 0
  %180 = load i32, i32* %10, align 4
  %181 = sext i32 %180 to i64
  call void @528(%73* %8, i8* %179, i64 %181, i8 zeroext 0)
  store i32 0, i32* %11, align 4
  br label %196

182:                                              ; preds = %29
  %183 = load i8*, i8** %5, align 8
  %184 = load i64, i64* %9, align 8
  %185 = getelementptr inbounds i8, i8* %183, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %187, 37
  br i1 %188, label %189, label %190

189:                                              ; preds = %182
  store i32 1, i32* %11, align 4
  br label %195

190:                                              ; preds = %182
  %191 = load i8*, i8** %5, align 8
  %192 = load i64, i64* %9, align 8
  %193 = getelementptr inbounds i8, i8* %191, i64 %192
  %194 = load i8, i8* %193, align 1
  call void @569(%73* %8, i8 signext %194, i8 zeroext 0)
  br label %195

195:                                              ; preds = %190, %189
  br label %196

196:                                              ; preds = %195, %178
  br label %197

197:                                              ; preds = %196
  %198 = load i64, i64* %9, align 8
  %199 = add i64 %198, 1
  store i64 %199, i64* %9, align 8
  br label %25

200:                                              ; preds = %25
  call void @529(%73* %8)
  %201 = getelementptr inbounds %73, %73* %8, i32 0, i32 0
  %202 = load %28*, %28** %201, align 8
  %203 = icmp eq %28* %202, null
  br i1 %203, label %204, label %206

204:                                              ; preds = %200
  %205 = load %28*, %28** @zend_empty_string, align 8
  store %28* %205, %28** %4, align 8
  store i32 1, i32* %13, align 4
  br label %209

206:                                              ; preds = %200
  %207 = getelementptr inbounds %73, %73* %8, i32 0, i32 0
  %208 = load %28*, %28** %207, align 8
  store %28* %208, %28** %4, align 8
  store i32 1, i32* %13, align 4
  br label %209

209:                                              ; preds = %206, %204, %22
  %210 = bitcast [33 x i8]* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 33, i8* %210) #15
  %211 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %211) #15
  %212 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %212) #15
  %213 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %213) #15
  %214 = bitcast %73* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %214) #15
  %215 = load %28*, %28** %4, align 8
  ret %28* %215
}

declare dso_local i32 @zend_parse_parameters_ex(i32, i32, i8*, ...) #4

; Function Attrs: nounwind uwtable
define internal i32 @517(%52** %0, %52** %1, %59** %2, i64* %3, i8* %4, i64 %5) #0 {
  %7 = alloca %52**, align 8
  %8 = alloca %52**, align 8
  %9 = alloca %59**, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %52*, align 8
  %14 = alloca %52*, align 8
  %15 = alloca %59*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %34*, align 8
  store %52** %0, %52*** %7, align 8
  store %52** %1, %52*** %8, align 8
  store %59** %2, %59*** %9, align 8
  store i64* %3, i64** %10, align 8
  store i8* %4, i8** %11, align 8
  store i64 %5, i64* %12, align 8
  %19 = bitcast %52** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #15
  store %52* null, %52** %13, align 8
  %20 = bitcast %52** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  store %52* null, %52** %14, align 8
  %21 = bitcast %59** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  store %59* null, %59** %15, align 8
  %22 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #15
  store i32 0, i32* %16, align 4
  %23 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #15
  store i32 0, i32* %17, align 4
  %24 = bitcast %34** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  %25 = load i8*, i8** %11, align 8
  %26 = load i64, i64* %12, align 8
  call void @timelib_strtointerval(i8* %25, i64 %26, %52** %13, %52** %14, %59** %15, i32* %16, %34** %18)
  %27 = load %34*, %34** %18, align 8
  %28 = getelementptr inbounds %34, %34* %27, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %6
  %32 = load i8*, i8** %11, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @442, i32 0, i32 0), i8* %32)
  store i32 -1, i32* %17, align 4
  br label %43

33:                                               ; preds = %6
  %34 = load %52*, %52** %13, align 8
  %35 = load %52**, %52*** %7, align 8
  store %52* %34, %52** %35, align 8
  %36 = load %52*, %52** %14, align 8
  %37 = load %52**, %52*** %8, align 8
  store %52* %36, %52** %37, align 8
  %38 = load %59*, %59** %15, align 8
  %39 = load %59**, %59*** %9, align 8
  store %59* %38, %59** %39, align 8
  %40 = load i32, i32* %16, align 4
  %41 = sext i32 %40 to i64
  %42 = load i64*, i64** %10, align 8
  store i64 %41, i64* %42, align 8
  store i32 0, i32* %17, align 4
  br label %43

43:                                               ; preds = %33, %31
  %44 = load %34*, %34** %18, align 8
  call void @timelib_error_container_dtor(%34* %44)
  %45 = load i32, i32* %17, align 4
  %46 = bitcast %34** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #15
  %47 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %47) #15
  %48 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %48) #15
  %49 = bitcast %59** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #15
  %50 = bitcast %52** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #15
  %51 = bitcast %52** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #15
  ret i32 %45
}

declare dso_local %52* @timelib_time_clone(%52*) #4

declare dso_local i32 @zend_parse_parameters(i32, i8*, ...) #4

declare dso_local %42* @timelib_timezone_identifiers_list(%41*, i32*) #4

declare dso_local i32 @add_next_index_string(%29*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @518(i8* %0, i64 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = load i8*, i8** %4, align 8
  %11 = call i32 @strncasecmp(i8* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @449, i32 0, i32 0), i64 7) #16
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  store i32 1, i32* %3, align 4
  br label %105

14:                                               ; preds = %9, %2
  %15 = load i64, i64* %5, align 8
  %16 = and i64 %15, 2
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %23

18:                                               ; preds = %14
  %19 = load i8*, i8** %4, align 8
  %20 = call i32 @strncasecmp(i8* %19, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @450, i32 0, i32 0), i64 8) #16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  store i32 1, i32* %3, align 4
  br label %105

23:                                               ; preds = %18, %14
  %24 = load i64, i64* %5, align 8
  %25 = and i64 %24, 4
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %23
  %28 = load i8*, i8** %4, align 8
  %29 = call i32 @strncasecmp(i8* %28, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @451, i32 0, i32 0), i64 11) #16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  store i32 1, i32* %3, align 4
  br label %105

32:                                               ; preds = %27, %23
  %33 = load i64, i64* %5, align 8
  %34 = and i64 %33, 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %32
  %37 = load i8*, i8** %4, align 8
  %38 = call i32 @strncasecmp(i8* %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @452, i32 0, i32 0), i64 7) #16
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  store i32 1, i32* %3, align 4
  br label %105

41:                                               ; preds = %36, %32
  %42 = load i64, i64* %5, align 8
  %43 = and i64 %42, 16
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %41
  %46 = load i8*, i8** %4, align 8
  %47 = call i32 @strncasecmp(i8* %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @453, i32 0, i32 0), i64 5) #16
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  store i32 1, i32* %3, align 4
  br label %105

50:                                               ; preds = %45, %41
  %51 = load i64, i64* %5, align 8
  %52 = and i64 %51, 32
  %53 = icmp ne i64 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load i8*, i8** %4, align 8
  %56 = call i32 @strncasecmp(i8* %55, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @454, i32 0, i32 0), i64 9) #16
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %54
  store i32 1, i32* %3, align 4
  br label %105

59:                                               ; preds = %54, %50
  %60 = load i64, i64* %5, align 8
  %61 = and i64 %60, 64
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %59
  %64 = load i8*, i8** %4, align 8
  %65 = call i32 @strncasecmp(i8* %64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @455, i32 0, i32 0), i64 10) #16
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  store i32 1, i32* %3, align 4
  br label %105

68:                                               ; preds = %63, %59
  %69 = load i64, i64* %5, align 8
  %70 = and i64 %69, 128
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %68
  %73 = load i8*, i8** %4, align 8
  %74 = call i32 @strncasecmp(i8* %73, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @456, i32 0, i32 0), i64 7) #16
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  store i32 1, i32* %3, align 4
  br label %105

77:                                               ; preds = %72, %68
  %78 = load i64, i64* %5, align 8
  %79 = and i64 %78, 256
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %86

81:                                               ; preds = %77
  %82 = load i8*, i8** %4, align 8
  %83 = call i32 @strncasecmp(i8* %82, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @457, i32 0, i32 0), i64 7) #16
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  store i32 1, i32* %3, align 4
  br label %105

86:                                               ; preds = %81, %77
  %87 = load i64, i64* %5, align 8
  %88 = and i64 %87, 512
  %89 = icmp ne i64 %88, 0
  br i1 %89, label %90, label %95

90:                                               ; preds = %86
  %91 = load i8*, i8** %4, align 8
  %92 = call i32 @strncasecmp(i8* %91, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @458, i32 0, i32 0), i64 8) #16
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %90
  store i32 1, i32* %3, align 4
  br label %105

95:                                               ; preds = %90, %86
  %96 = load i64, i64* %5, align 8
  %97 = and i64 %96, 1024
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %104

99:                                               ; preds = %95
  %100 = load i8*, i8** %4, align 8
  %101 = call i32 @strncasecmp(i8* %100, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @321, i32 0, i32 0), i64 3) #16
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  store i32 1, i32* %3, align 4
  br label %105

104:                                              ; preds = %99, %95
  store i32 0, i32* %3, align 4
  br label %105

105:                                              ; preds = %104, %103, %94, %85, %76, %67, %58, %49, %40, %31, %22, %13
  %106 = load i32, i32* %3, align 4
  ret i32 %106
}

declare dso_local %69* @timelib_timezone_abbreviations_list() #4

declare dso_local i32 @add_assoc_null_ex(%29*, i8*, i64) #4

declare dso_local %29* @zend_hash_str_find(%7*, i8*, i64) #4

declare dso_local i32 @timelib_timezone_id_is_valid(i8*, %41*) #4

declare dso_local noalias i8* @_estrndup(i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal void @519(%1* %0, %29* %1, i32 %2) #0 {
  %4 = alloca %1*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  %21 = alloca %52*, align 8
  %22 = alloca %53*, align 8
  %23 = alloca %28*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %29*, align 8
  %30 = alloca %29*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i8*, align 8
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %29*, align 8
  %38 = alloca %29*, align 8
  %39 = alloca %28*, align 8
  %40 = alloca %29*, align 8
  store %1* %0, %1** %4, align 8
  store %29* %1, %29** %5, align 8
  store i32 %2, i32* %6, align 4
  %41 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #15
  store double 0.000000e+00, double* %7, align 8
  %42 = bitcast double* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #15
  store double 0.000000e+00, double* %8, align 8
  %43 = bitcast double* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #15
  store double 0.000000e+00, double* %9, align 8
  %44 = bitcast double* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #15
  store double 0.000000e+00, double* %10, align 8
  %45 = bitcast double* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #15
  %46 = bitcast double* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #15
  %47 = bitcast double* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #15
  %48 = bitcast double* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #15
  %49 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #15
  %50 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #15
  %51 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #15
  %52 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #15
  %53 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #15
  store i64 0, i64* %19, align 8
  %54 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #15
  %55 = bitcast %52** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #15
  %56 = bitcast %53** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #15
  %57 = bitcast %28** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #15
  br label %58

58:                                               ; preds = %3
  %59 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #15
  store i32 0, i32* %24, align 4
  %60 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #15
  store i32 1, i32* %25, align 4
  %61 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #15
  store i32 6, i32* %26, align 4
  %62 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #15
  %63 = load %1*, %1** %4, align 8
  %64 = getelementptr inbounds %1, %1* %63, i32 0, i32 4
  %65 = getelementptr inbounds %29, %29* %64, i32 0, i32 2
  %66 = bitcast %32* %65 to i32*
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %27, align 4
  %68 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %68) #15
  %69 = bitcast %29** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %69) #15
  %70 = bitcast %29** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %70) #15
  store %29* null, %29** %30, align 8
  %71 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %71) #15
  store i32 0, i32* %31, align 4
  %72 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #15
  store i8* null, i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %33) #15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %34) #15
  store i8 0, i8* %34, align 1
  %73 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #15
  store i32 0, i32* %35, align 4
  %74 = load i32, i32* %28, align 4
  %75 = load %29*, %29** %29, align 8
  %76 = load %29*, %29** %30, align 8
  %77 = load i32, i32* %31, align 4
  %78 = load i8*, i8** %32, align 8
  %79 = load i8, i8* %33, align 1
  %80 = load i8, i8* %34, align 1
  br label %81

81:                                               ; preds = %58
  %82 = load i32, i32* %27, align 4
  %83 = load i32, i32* %25, align 4
  %84 = icmp slt i32 %82, %83
  %85 = xor i1 %84, true
  %86 = xor i1 %85, true
  %87 = zext i1 %86 to i32
  %88 = sext i32 %87 to i64
  %89 = call i64 @llvm.expect.i64(i64 %88, i64 0)
  %90 = icmp ne i64 %89, 0
  br i1 %90, label %110, label %91

91:                                               ; preds = %81
  %92 = load i32, i32* %27, align 4
  %93 = load i32, i32* %26, align 4
  %94 = icmp sgt i32 %92, %93
  %95 = xor i1 %94, true
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %114

101:                                              ; preds = %91
  %102 = load i32, i32* %26, align 4
  %103 = icmp sge i32 %102, 0
  %104 = xor i1 %103, true
  %105 = xor i1 %104, true
  %106 = zext i1 %105 to i32
  %107 = sext i32 %106 to i64
  %108 = call i64 @llvm.expect.i64(i64 %107, i64 1)
  %109 = icmp ne i64 %108, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %101, %81
  %111 = load i32, i32* %27, align 4
  %112 = load i32, i32* %25, align 4
  %113 = load i32, i32* %26, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %111, i32 %112, i32 %113)
  store i32 1, i32* %35, align 4
  br label %539

114:                                              ; preds = %101, %91
  store i32 0, i32* %28, align 4
  %115 = load %1*, %1** %4, align 8
  %116 = bitcast %1* %115 to %29*
  %117 = getelementptr inbounds %29, %29* %116, i64 4
  store %29* %117, %29** %29, align 8
  %118 = load i32, i32* %28, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %28, align 4
  br label %120

120:                                              ; preds = %114
  %121 = load i32, i32* %28, align 4
  %122 = load i32, i32* %25, align 4
  %123 = icmp sle i32 %121, %122
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = load i8, i8* %34, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp eq i32 %126, 1
  br label %128

128:                                              ; preds = %124, %120
  %129 = phi i1 [ true, %120 ], [ %127, %124 ]
  %130 = xor i1 %129, true
  %131 = zext i1 %130 to i32
  %132 = sext i32 %131 to i64
  %133 = call i64 @llvm.expect.i64(i64 %132, i64 0)
  %134 = icmp ne i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %128
  unreachable

136:                                              ; preds = %128
  br label %137

137:                                              ; preds = %136
  br label %138

138:                                              ; preds = %137
  br label %139

139:                                              ; preds = %138
  %140 = load i32, i32* %28, align 4
  %141 = load i32, i32* %25, align 4
  %142 = icmp sgt i32 %140, %141
  br i1 %142, label %147, label %143

143:                                              ; preds = %139
  %144 = load i8, i8* %34, align 1
  %145 = zext i8 %144 to i32
  %146 = icmp eq i32 %145, 0
  br label %147

147:                                              ; preds = %143, %139
  %148 = phi i1 [ true, %139 ], [ %146, %143 ]
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %147
  unreachable

155:                                              ; preds = %147
  br label %156

156:                                              ; preds = %155
  br label %157

157:                                              ; preds = %156
  %158 = load i8, i8* %34, align 1
  %159 = icmp ne i8 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %157
  %161 = load i32, i32* %28, align 4
  %162 = load i32, i32* %27, align 4
  %163 = icmp sgt i32 %161, %162
  %164 = xor i1 %163, true
  %165 = xor i1 %164, true
  %166 = zext i1 %165 to i32
  %167 = sext i32 %166 to i64
  %168 = call i64 @llvm.expect.i64(i64 %167, i64 0)
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %160
  br label %539

171:                                              ; preds = %160
  br label %172

172:                                              ; preds = %171, %157
  %173 = load %29*, %29** %29, align 8
  %174 = getelementptr inbounds %29, %29* %173, i32 1
  store %29* %174, %29** %29, align 8
  %175 = load %29*, %29** %29, align 8
  store %29* %175, %29** %30, align 8
  %176 = load %29*, %29** %30, align 8
  %177 = call i32 @469(%29* %176, i64* %18, i8* %33, i32 0, i32 0)
  %178 = icmp ne i32 %177, 0
  %179 = xor i1 %178, true
  %180 = xor i1 %179, true
  %181 = xor i1 %180, true
  %182 = zext i1 %181 to i32
  %183 = sext i32 %182 to i64
  %184 = call i64 @llvm.expect.i64(i64 %183, i64 0)
  %185 = icmp ne i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %172
  store i32 0, i32* %31, align 4
  store i32 4, i32* %35, align 4
  br label %539

187:                                              ; preds = %172
  store i8 1, i8* %34, align 1
  %188 = load i32, i32* %28, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %28, align 4
  br label %190

190:                                              ; preds = %187
  %191 = load i32, i32* %28, align 4
  %192 = load i32, i32* %25, align 4
  %193 = icmp sle i32 %191, %192
  br i1 %193, label %198, label %194

194:                                              ; preds = %190
  %195 = load i8, i8* %34, align 1
  %196 = zext i8 %195 to i32
  %197 = icmp eq i32 %196, 1
  br label %198

198:                                              ; preds = %194, %190
  %199 = phi i1 [ true, %190 ], [ %197, %194 ]
  %200 = xor i1 %199, true
  %201 = zext i1 %200 to i32
  %202 = sext i32 %201 to i64
  %203 = call i64 @llvm.expect.i64(i64 %202, i64 0)
  %204 = icmp ne i64 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %198
  unreachable

206:                                              ; preds = %198
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = load i32, i32* %28, align 4
  %211 = load i32, i32* %25, align 4
  %212 = icmp sgt i32 %210, %211
  br i1 %212, label %217, label %213

213:                                              ; preds = %209
  %214 = load i8, i8* %34, align 1
  %215 = zext i8 %214 to i32
  %216 = icmp eq i32 %215, 0
  br label %217

217:                                              ; preds = %213, %209
  %218 = phi i1 [ true, %209 ], [ %216, %213 ]
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %217
  unreachable

225:                                              ; preds = %217
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226
  %228 = load i8, i8* %34, align 1
  %229 = icmp ne i8 %228, 0
  br i1 %229, label %230, label %242

230:                                              ; preds = %227
  %231 = load i32, i32* %28, align 4
  %232 = load i32, i32* %27, align 4
  %233 = icmp sgt i32 %231, %232
  %234 = xor i1 %233, true
  %235 = xor i1 %234, true
  %236 = zext i1 %235 to i32
  %237 = sext i32 %236 to i64
  %238 = call i64 @llvm.expect.i64(i64 %237, i64 0)
  %239 = icmp ne i64 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %230
  br label %539

241:                                              ; preds = %230
  br label %242

242:                                              ; preds = %241, %227
  %243 = load %29*, %29** %29, align 8
  %244 = getelementptr inbounds %29, %29* %243, i32 1
  store %29* %244, %29** %29, align 8
  %245 = load %29*, %29** %29, align 8
  store %29* %245, %29** %30, align 8
  %246 = load %29*, %29** %30, align 8
  %247 = call i32 @469(%29* %246, i64* %19, i8* %33, i32 0, i32 0)
  %248 = icmp ne i32 %247, 0
  %249 = xor i1 %248, true
  %250 = xor i1 %249, true
  %251 = xor i1 %250, true
  %252 = zext i1 %251 to i32
  %253 = sext i32 %252 to i64
  %254 = call i64 @llvm.expect.i64(i64 %253, i64 0)
  %255 = icmp ne i64 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %242
  store i32 0, i32* %31, align 4
  store i32 4, i32* %35, align 4
  br label %539

257:                                              ; preds = %242
  %258 = load i32, i32* %28, align 4
  %259 = add nsw i32 %258, 1
  store i32 %259, i32* %28, align 4
  br label %260

260:                                              ; preds = %257
  %261 = load i32, i32* %28, align 4
  %262 = load i32, i32* %25, align 4
  %263 = icmp sle i32 %261, %262
  br i1 %263, label %268, label %264

264:                                              ; preds = %260
  %265 = load i8, i8* %34, align 1
  %266 = zext i8 %265 to i32
  %267 = icmp eq i32 %266, 1
  br label %268

268:                                              ; preds = %264, %260
  %269 = phi i1 [ true, %260 ], [ %267, %264 ]
  %270 = xor i1 %269, true
  %271 = zext i1 %270 to i32
  %272 = sext i32 %271 to i64
  %273 = call i64 @llvm.expect.i64(i64 %272, i64 0)
  %274 = icmp ne i64 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %268
  unreachable

276:                                              ; preds = %268
  br label %277

277:                                              ; preds = %276
  br label %278

278:                                              ; preds = %277
  br label %279

279:                                              ; preds = %278
  %280 = load i32, i32* %28, align 4
  %281 = load i32, i32* %25, align 4
  %282 = icmp sgt i32 %280, %281
  br i1 %282, label %287, label %283

283:                                              ; preds = %279
  %284 = load i8, i8* %34, align 1
  %285 = zext i8 %284 to i32
  %286 = icmp eq i32 %285, 0
  br label %287

287:                                              ; preds = %283, %279
  %288 = phi i1 [ true, %279 ], [ %286, %283 ]
  %289 = xor i1 %288, true
  %290 = zext i1 %289 to i32
  %291 = sext i32 %290 to i64
  %292 = call i64 @llvm.expect.i64(i64 %291, i64 0)
  %293 = icmp ne i64 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %287
  unreachable

295:                                              ; preds = %287
  br label %296

296:                                              ; preds = %295
  br label %297

297:                                              ; preds = %296
  %298 = load i8, i8* %34, align 1
  %299 = icmp ne i8 %298, 0
  br i1 %299, label %300, label %312

300:                                              ; preds = %297
  %301 = load i32, i32* %28, align 4
  %302 = load i32, i32* %27, align 4
  %303 = icmp sgt i32 %301, %302
  %304 = xor i1 %303, true
  %305 = xor i1 %304, true
  %306 = zext i1 %305 to i32
  %307 = sext i32 %306 to i64
  %308 = call i64 @llvm.expect.i64(i64 %307, i64 0)
  %309 = icmp ne i64 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %300
  br label %539

311:                                              ; preds = %300
  br label %312

312:                                              ; preds = %311, %297
  %313 = load %29*, %29** %29, align 8
  %314 = getelementptr inbounds %29, %29* %313, i32 1
  store %29* %314, %29** %29, align 8
  %315 = load %29*, %29** %29, align 8
  store %29* %315, %29** %30, align 8
  %316 = load %29*, %29** %30, align 8
  %317 = call i32 @520(%29* %316, double* %7, i8* %33, i32 0)
  %318 = icmp ne i32 %317, 0
  %319 = xor i1 %318, true
  %320 = xor i1 %319, true
  %321 = xor i1 %320, true
  %322 = zext i1 %321 to i32
  %323 = sext i32 %322 to i64
  %324 = call i64 @llvm.expect.i64(i64 %323, i64 0)
  %325 = icmp ne i64 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %312
  store i32 8, i32* %31, align 4
  store i32 4, i32* %35, align 4
  br label %539

327:                                              ; preds = %312
  %328 = load i32, i32* %28, align 4
  %329 = add nsw i32 %328, 1
  store i32 %329, i32* %28, align 4
  br label %330

330:                                              ; preds = %327
  %331 = load i32, i32* %28, align 4
  %332 = load i32, i32* %25, align 4
  %333 = icmp sle i32 %331, %332
  br i1 %333, label %338, label %334

334:                                              ; preds = %330
  %335 = load i8, i8* %34, align 1
  %336 = zext i8 %335 to i32
  %337 = icmp eq i32 %336, 1
  br label %338

338:                                              ; preds = %334, %330
  %339 = phi i1 [ true, %330 ], [ %337, %334 ]
  %340 = xor i1 %339, true
  %341 = zext i1 %340 to i32
  %342 = sext i32 %341 to i64
  %343 = call i64 @llvm.expect.i64(i64 %342, i64 0)
  %344 = icmp ne i64 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %338
  unreachable

346:                                              ; preds = %338
  br label %347

347:                                              ; preds = %346
  br label %348

348:                                              ; preds = %347
  br label %349

349:                                              ; preds = %348
  %350 = load i32, i32* %28, align 4
  %351 = load i32, i32* %25, align 4
  %352 = icmp sgt i32 %350, %351
  br i1 %352, label %357, label %353

353:                                              ; preds = %349
  %354 = load i8, i8* %34, align 1
  %355 = zext i8 %354 to i32
  %356 = icmp eq i32 %355, 0
  br label %357

357:                                              ; preds = %353, %349
  %358 = phi i1 [ true, %349 ], [ %356, %353 ]
  %359 = xor i1 %358, true
  %360 = zext i1 %359 to i32
  %361 = sext i32 %360 to i64
  %362 = call i64 @llvm.expect.i64(i64 %361, i64 0)
  %363 = icmp ne i64 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %357
  unreachable

365:                                              ; preds = %357
  br label %366

366:                                              ; preds = %365
  br label %367

367:                                              ; preds = %366
  %368 = load i8, i8* %34, align 1
  %369 = icmp ne i8 %368, 0
  br i1 %369, label %370, label %382

370:                                              ; preds = %367
  %371 = load i32, i32* %28, align 4
  %372 = load i32, i32* %27, align 4
  %373 = icmp sgt i32 %371, %372
  %374 = xor i1 %373, true
  %375 = xor i1 %374, true
  %376 = zext i1 %375 to i32
  %377 = sext i32 %376 to i64
  %378 = call i64 @llvm.expect.i64(i64 %377, i64 0)
  %379 = icmp ne i64 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %370
  br label %539

381:                                              ; preds = %370
  br label %382

382:                                              ; preds = %381, %367
  %383 = load %29*, %29** %29, align 8
  %384 = getelementptr inbounds %29, %29* %383, i32 1
  store %29* %384, %29** %29, align 8
  %385 = load %29*, %29** %29, align 8
  store %29* %385, %29** %30, align 8
  %386 = load %29*, %29** %30, align 8
  %387 = call i32 @520(%29* %386, double* %8, i8* %33, i32 0)
  %388 = icmp ne i32 %387, 0
  %389 = xor i1 %388, true
  %390 = xor i1 %389, true
  %391 = xor i1 %390, true
  %392 = zext i1 %391 to i32
  %393 = sext i32 %392 to i64
  %394 = call i64 @llvm.expect.i64(i64 %393, i64 0)
  %395 = icmp ne i64 %394, 0
  br i1 %395, label %396, label %397

396:                                              ; preds = %382
  store i32 8, i32* %31, align 4
  store i32 4, i32* %35, align 4
  br label %539

397:                                              ; preds = %382
  %398 = load i32, i32* %28, align 4
  %399 = add nsw i32 %398, 1
  store i32 %399, i32* %28, align 4
  br label %400

400:                                              ; preds = %397
  %401 = load i32, i32* %28, align 4
  %402 = load i32, i32* %25, align 4
  %403 = icmp sle i32 %401, %402
  br i1 %403, label %408, label %404

404:                                              ; preds = %400
  %405 = load i8, i8* %34, align 1
  %406 = zext i8 %405 to i32
  %407 = icmp eq i32 %406, 1
  br label %408

408:                                              ; preds = %404, %400
  %409 = phi i1 [ true, %400 ], [ %407, %404 ]
  %410 = xor i1 %409, true
  %411 = zext i1 %410 to i32
  %412 = sext i32 %411 to i64
  %413 = call i64 @llvm.expect.i64(i64 %412, i64 0)
  %414 = icmp ne i64 %413, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %408
  unreachable

416:                                              ; preds = %408
  br label %417

417:                                              ; preds = %416
  br label %418

418:                                              ; preds = %417
  br label %419

419:                                              ; preds = %418
  %420 = load i32, i32* %28, align 4
  %421 = load i32, i32* %25, align 4
  %422 = icmp sgt i32 %420, %421
  br i1 %422, label %427, label %423

423:                                              ; preds = %419
  %424 = load i8, i8* %34, align 1
  %425 = zext i8 %424 to i32
  %426 = icmp eq i32 %425, 0
  br label %427

427:                                              ; preds = %423, %419
  %428 = phi i1 [ true, %419 ], [ %426, %423 ]
  %429 = xor i1 %428, true
  %430 = zext i1 %429 to i32
  %431 = sext i32 %430 to i64
  %432 = call i64 @llvm.expect.i64(i64 %431, i64 0)
  %433 = icmp ne i64 %432, 0
  br i1 %433, label %434, label %435

434:                                              ; preds = %427
  unreachable

435:                                              ; preds = %427
  br label %436

436:                                              ; preds = %435
  br label %437

437:                                              ; preds = %436
  %438 = load i8, i8* %34, align 1
  %439 = icmp ne i8 %438, 0
  br i1 %439, label %440, label %452

440:                                              ; preds = %437
  %441 = load i32, i32* %28, align 4
  %442 = load i32, i32* %27, align 4
  %443 = icmp sgt i32 %441, %442
  %444 = xor i1 %443, true
  %445 = xor i1 %444, true
  %446 = zext i1 %445 to i32
  %447 = sext i32 %446 to i64
  %448 = call i64 @llvm.expect.i64(i64 %447, i64 0)
  %449 = icmp ne i64 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %440
  br label %539

451:                                              ; preds = %440
  br label %452

452:                                              ; preds = %451, %437
  %453 = load %29*, %29** %29, align 8
  %454 = getelementptr inbounds %29, %29* %453, i32 1
  store %29* %454, %29** %29, align 8
  %455 = load %29*, %29** %29, align 8
  store %29* %455, %29** %30, align 8
  %456 = load %29*, %29** %30, align 8
  %457 = call i32 @520(%29* %456, double* %9, i8* %33, i32 0)
  %458 = icmp ne i32 %457, 0
  %459 = xor i1 %458, true
  %460 = xor i1 %459, true
  %461 = xor i1 %460, true
  %462 = zext i1 %461 to i32
  %463 = sext i32 %462 to i64
  %464 = call i64 @llvm.expect.i64(i64 %463, i64 0)
  %465 = icmp ne i64 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %452
  store i32 8, i32* %31, align 4
  store i32 4, i32* %35, align 4
  br label %539

467:                                              ; preds = %452
  %468 = load i32, i32* %28, align 4
  %469 = add nsw i32 %468, 1
  store i32 %469, i32* %28, align 4
  br label %470

470:                                              ; preds = %467
  %471 = load i32, i32* %28, align 4
  %472 = load i32, i32* %25, align 4
  %473 = icmp sle i32 %471, %472
  br i1 %473, label %478, label %474

474:                                              ; preds = %470
  %475 = load i8, i8* %34, align 1
  %476 = zext i8 %475 to i32
  %477 = icmp eq i32 %476, 1
  br label %478

478:                                              ; preds = %474, %470
  %479 = phi i1 [ true, %470 ], [ %477, %474 ]
  %480 = xor i1 %479, true
  %481 = zext i1 %480 to i32
  %482 = sext i32 %481 to i64
  %483 = call i64 @llvm.expect.i64(i64 %482, i64 0)
  %484 = icmp ne i64 %483, 0
  br i1 %484, label %485, label %486

485:                                              ; preds = %478
  unreachable

486:                                              ; preds = %478
  br label %487

487:                                              ; preds = %486
  br label %488

488:                                              ; preds = %487
  br label %489

489:                                              ; preds = %488
  %490 = load i32, i32* %28, align 4
  %491 = load i32, i32* %25, align 4
  %492 = icmp sgt i32 %490, %491
  br i1 %492, label %497, label %493

493:                                              ; preds = %489
  %494 = load i8, i8* %34, align 1
  %495 = zext i8 %494 to i32
  %496 = icmp eq i32 %495, 0
  br label %497

497:                                              ; preds = %493, %489
  %498 = phi i1 [ true, %489 ], [ %496, %493 ]
  %499 = xor i1 %498, true
  %500 = zext i1 %499 to i32
  %501 = sext i32 %500 to i64
  %502 = call i64 @llvm.expect.i64(i64 %501, i64 0)
  %503 = icmp ne i64 %502, 0
  br i1 %503, label %504, label %505

504:                                              ; preds = %497
  unreachable

505:                                              ; preds = %497
  br label %506

506:                                              ; preds = %505
  br label %507

507:                                              ; preds = %506
  %508 = load i8, i8* %34, align 1
  %509 = icmp ne i8 %508, 0
  br i1 %509, label %510, label %522

510:                                              ; preds = %507
  %511 = load i32, i32* %28, align 4
  %512 = load i32, i32* %27, align 4
  %513 = icmp sgt i32 %511, %512
  %514 = xor i1 %513, true
  %515 = xor i1 %514, true
  %516 = zext i1 %515 to i32
  %517 = sext i32 %516 to i64
  %518 = call i64 @llvm.expect.i64(i64 %517, i64 0)
  %519 = icmp ne i64 %518, 0
  br i1 %519, label %520, label %521

520:                                              ; preds = %510
  br label %539

521:                                              ; preds = %510
  br label %522

522:                                              ; preds = %521, %507
  %523 = load %29*, %29** %29, align 8
  %524 = getelementptr inbounds %29, %29* %523, i32 1
  store %29* %524, %29** %29, align 8
  %525 = load %29*, %29** %29, align 8
  store %29* %525, %29** %30, align 8
  %526 = load %29*, %29** %30, align 8
  %527 = call i32 @520(%29* %526, double* %10, i8* %33, i32 0)
  %528 = icmp ne i32 %527, 0
  %529 = xor i1 %528, true
  %530 = xor i1 %529, true
  %531 = xor i1 %530, true
  %532 = zext i1 %531 to i32
  %533 = sext i32 %532 to i64
  %534 = call i64 @llvm.expect.i64(i64 %533, i64 0)
  %535 = icmp ne i64 %534, 0
  br i1 %535, label %536, label %537

536:                                              ; preds = %522
  store i32 8, i32* %31, align 4
  store i32 4, i32* %35, align 4
  br label %539

537:                                              ; preds = %522
  br label %538

538:                                              ; preds = %537
  br label %539

539:                                              ; preds = %538, %536, %520, %466, %450, %396, %380, %326, %310, %256, %240, %186, %170, %110
  %540 = load i32, i32* %35, align 4
  %541 = icmp ne i32 %540, 0
  %542 = xor i1 %541, true
  %543 = xor i1 %542, true
  %544 = zext i1 %543 to i32
  %545 = sext i32 %544 to i64
  %546 = call i64 @llvm.expect.i64(i64 %545, i64 0)
  %547 = icmp ne i64 %546, 0
  br i1 %547, label %548, label %577

548:                                              ; preds = %539
  %549 = load i32, i32* %35, align 4
  %550 = icmp eq i32 %549, 2
  br i1 %550, label %551, label %554

551:                                              ; preds = %548
  %552 = load i32, i32* %28, align 4
  %553 = load i8*, i8** %32, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %552, i8* %553)
  br label %570

554:                                              ; preds = %548
  %555 = load i32, i32* %35, align 4
  %556 = icmp eq i32 %555, 3
  br i1 %556, label %557, label %561

557:                                              ; preds = %554
  %558 = load i32, i32* %28, align 4
  %559 = load i8*, i8** %32, align 8
  %560 = load %29*, %29** %30, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %558, i8* %559, %29* %560)
  br label %569

561:                                              ; preds = %554
  %562 = load i32, i32* %35, align 4
  %563 = icmp eq i32 %562, 4
  br i1 %563, label %564, label %568

564:                                              ; preds = %561
  %565 = load i32, i32* %28, align 4
  %566 = load i32, i32* %31, align 4
  %567 = load %29*, %29** %30, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %565, i32 %566, %29* %567)
  br label %568

568:                                              ; preds = %564, %561
  br label %569

569:                                              ; preds = %568, %557
  br label %570

570:                                              ; preds = %569, %551
  br label %571

571:                                              ; preds = %570
  %572 = load %29*, %29** %5, align 8
  %573 = getelementptr inbounds %29, %29* %572, i32 0, i32 1
  %574 = bitcast %31* %573 to i32*
  store i32 2, i32* %574, align 8
  br label %575

575:                                              ; preds = %571
  br label %576

576:                                              ; preds = %575
  store i32 1, i32* %36, align 4
  br label %578

577:                                              ; preds = %539
  store i32 0, i32* %36, align 4
  br label %578

578:                                              ; preds = %577, %576
  %579 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %579) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %34) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %33) #15
  %580 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %580) #15
  %581 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %581) #15
  %582 = bitcast %29** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %582) #15
  %583 = bitcast %29** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %583) #15
  %584 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %584) #15
  %585 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %585) #15
  %586 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %586) #15
  %587 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %587) #15
  %588 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %588) #15
  %589 = load i32, i32* %36, align 4
  switch i32 %589, label %759 [
    i32 0, label %590
  ]

590:                                              ; preds = %578
  br label %591

591:                                              ; preds = %590
  br label %592

592:                                              ; preds = %591
  %593 = load %1*, %1** %4, align 8
  %594 = getelementptr inbounds %1, %1* %593, i32 0, i32 4
  %595 = getelementptr inbounds %29, %29* %594, i32 0, i32 2
  %596 = bitcast %32* %595 to i32*
  %597 = load i32, i32* %596, align 4
  switch i32 %597, label %612 [
    i32 1, label %598
    i32 2, label %599
    i32 3, label %601
    i32 4, label %603
    i32 5, label %611
    i32 6, label %611
  ]

598:                                              ; preds = %592
  store i64 1, i64* %19, align 8
  br label %599

599:                                              ; preds = %592, %598
  %600 = call double @zend_ini_double(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @313, i32 0, i32 0), i32 21, i32 0)
  store double %600, double* %7, align 8
  br label %601

601:                                              ; preds = %592, %599
  %602 = call double @zend_ini_double(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @315, i32 0, i32 0), i32 22, i32 0)
  store double %602, double* %8, align 8
  br label %603

603:                                              ; preds = %592, %601
  %604 = load i32, i32* %6, align 4
  %605 = icmp ne i32 %604, 0
  br i1 %605, label %606, label %608

606:                                              ; preds = %603
  %607 = call double @zend_ini_double(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @317, i32 0, i32 0), i32 18, i32 0)
  store double %607, double* %9, align 8
  br label %610

608:                                              ; preds = %603
  %609 = call double @zend_ini_double(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @319, i32 0, i32 0), i32 19, i32 0)
  store double %609, double* %9, align 8
  br label %610

610:                                              ; preds = %608, %606
  br label %611

611:                                              ; preds = %592, %592, %610
  br label %619

612:                                              ; preds = %592
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @459, i32 0, i32 0))
  br label %613

613:                                              ; preds = %612
  %614 = load %29*, %29** %5, align 8
  %615 = getelementptr inbounds %29, %29* %614, i32 0, i32 1
  %616 = bitcast %31* %615 to i32*
  store i32 2, i32* %616, align 8
  br label %617

617:                                              ; preds = %613
  br label %618

618:                                              ; preds = %617
  store i32 1, i32* %36, align 4
  br label %759

619:                                              ; preds = %611
  %620 = load i64, i64* %19, align 8
  %621 = icmp ne i64 %620, 0
  br i1 %621, label %622, label %635

622:                                              ; preds = %619
  %623 = load i64, i64* %19, align 8
  %624 = icmp ne i64 %623, 1
  br i1 %624, label %625, label %635

625:                                              ; preds = %622
  %626 = load i64, i64* %19, align 8
  %627 = icmp ne i64 %626, 2
  br i1 %627, label %628, label %635

628:                                              ; preds = %625
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @460, i32 0, i32 0))
  br label %629

629:                                              ; preds = %628
  %630 = load %29*, %29** %5, align 8
  %631 = getelementptr inbounds %29, %29* %630, i32 0, i32 1
  %632 = bitcast %31* %631 to i32*
  store i32 2, i32* %632, align 8
  br label %633

633:                                              ; preds = %629
  br label %634

634:                                              ; preds = %633
  store i32 1, i32* %36, align 4
  br label %759

635:                                              ; preds = %625, %622, %619
  %636 = load double, double* %9, align 8
  %637 = fsub double 9.000000e+01, %636
  store double %637, double* %11, align 8
  %638 = call %52* @timelib_time_ctor()
  store %52* %638, %52** %21, align 8
  %639 = call %53* @get_timezone_info()
  store %53* %639, %53** %22, align 8
  %640 = load %53*, %53** %22, align 8
  %641 = load %52*, %52** %21, align 8
  %642 = getelementptr inbounds %52, %52* %641, i32 0, i32 9
  store %53* %640, %53** %642, align 8
  %643 = load %52*, %52** %21, align 8
  %644 = getelementptr inbounds %52, %52* %643, i32 0, i32 21
  store i32 3, i32* %644, align 8
  %645 = load %1*, %1** %4, align 8
  %646 = getelementptr inbounds %1, %1* %645, i32 0, i32 4
  %647 = getelementptr inbounds %29, %29* %646, i32 0, i32 2
  %648 = bitcast %32* %647 to i32*
  %649 = load i32, i32* %648, align 4
  %650 = icmp ule i32 %649, 5
  br i1 %650, label %651, label %656

651:                                              ; preds = %635
  %652 = load %52*, %52** %21, align 8
  %653 = call i64 @timelib_get_current_offset(%52* %652)
  %654 = sdiv i64 %653, 3600
  %655 = sitofp i64 %654 to double
  store double %655, double* %10, align 8
  br label %656

656:                                              ; preds = %651, %635
  %657 = load %52*, %52** %21, align 8
  %658 = load i64, i64* %18, align 8
  call void @timelib_unixtime2local(%52* %657, i64 %658)
  %659 = load %52*, %52** %21, align 8
  %660 = load double, double* %8, align 8
  %661 = load double, double* %7, align 8
  %662 = load double, double* %11, align 8
  %663 = call i32 @timelib_astro_rise_set_altitude(%52* %659, double %660, double %661, double %662, i32 1, double* %12, double* %13, i64* %15, i64* %16, i64* %17)
  store i32 %663, i32* %20, align 4
  %664 = load %52*, %52** %21, align 8
  call void @timelib_time_dtor(%52* %664)
  %665 = load i32, i32* %20, align 4
  %666 = icmp ne i32 %665, 0
  br i1 %666, label %667, label %674

667:                                              ; preds = %656
  br label %668

668:                                              ; preds = %667
  %669 = load %29*, %29** %5, align 8
  %670 = getelementptr inbounds %29, %29* %669, i32 0, i32 1
  %671 = bitcast %31* %670 to i32*
  store i32 2, i32* %671, align 8
  br label %672

672:                                              ; preds = %668
  br label %673

673:                                              ; preds = %672
  store i32 1, i32* %36, align 4
  br label %759

674:                                              ; preds = %656
  %675 = load i64, i64* %19, align 8
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %677, label %695

677:                                              ; preds = %674
  %678 = bitcast %29** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %678) #15
  %679 = load %29*, %29** %5, align 8
  store %29* %679, %29** %37, align 8
  %680 = load i32, i32* %6, align 4
  %681 = icmp ne i32 %680, 0
  br i1 %681, label %682, label %684

682:                                              ; preds = %677
  %683 = load i64, i64* %16, align 8
  br label %686

684:                                              ; preds = %677
  %685 = load i64, i64* %15, align 8
  br label %686

686:                                              ; preds = %684, %682
  %687 = phi i64 [ %683, %682 ], [ %685, %684 ]
  %688 = load %29*, %29** %37, align 8
  %689 = getelementptr inbounds %29, %29* %688, i32 0, i32 0
  %690 = bitcast %30* %689 to i64*
  store i64 %687, i64* %690, align 8
  %691 = load %29*, %29** %37, align 8
  %692 = getelementptr inbounds %29, %29* %691, i32 0, i32 1
  %693 = bitcast %31* %692 to i32*
  store i32 4, i32* %693, align 8
  %694 = bitcast %29** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %694) #15
  store i32 1, i32* %36, align 4
  br label %759

695:                                              ; preds = %674
  %696 = load i32, i32* %6, align 4
  %697 = icmp ne i32 %696, 0
  br i1 %697, label %698, label %700

698:                                              ; preds = %695
  %699 = load double, double* %13, align 8
  br label %702

700:                                              ; preds = %695
  %701 = load double, double* %12, align 8
  br label %702

702:                                              ; preds = %700, %698
  %703 = phi double [ %699, %698 ], [ %701, %700 ]
  %704 = load double, double* %10, align 8
  %705 = fadd double %703, %704
  store double %705, double* %14, align 8
  %706 = load double, double* %14, align 8
  %707 = fcmp ogt double %706, 2.400000e+01
  br i1 %707, label %711, label %708

708:                                              ; preds = %702
  %709 = load double, double* %14, align 8
  %710 = fcmp olt double %709, 0.000000e+00
  br i1 %710, label %711, label %718

711:                                              ; preds = %708, %702
  %712 = load double, double* %14, align 8
  %713 = fdiv double %712, 2.400000e+01
  %714 = call double @llvm.floor.f64(double %713)
  %715 = fmul double %714, 2.400000e+01
  %716 = load double, double* %14, align 8
  %717 = fsub double %716, %715
  store double %717, double* %14, align 8
  br label %718

718:                                              ; preds = %711, %708
  %719 = load i64, i64* %19, align 8
  switch i64 %719, label %758 [
    i64 1, label %720
    i64 2, label %747
  ]

720:                                              ; preds = %718
  %721 = load double, double* %14, align 8
  %722 = fptosi double %721 to i32
  %723 = load double, double* %14, align 8
  %724 = load double, double* %14, align 8
  %725 = fptosi double %724 to i32
  %726 = sitofp i32 %725 to double
  %727 = fsub double %723, %726
  %728 = fmul double 6.000000e+01, %727
  %729 = fptosi double %728 to i32
  %730 = call %28* (i64, i8*, ...) @zend_strpprintf(i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @461, i32 0, i32 0), i32 %722, i32 %729)
  store %28* %730, %28** %23, align 8
  br label %731

731:                                              ; preds = %720
  %732 = bitcast %29** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %732) #15
  %733 = load %29*, %29** %5, align 8
  store %29* %733, %29** %38, align 8
  %734 = bitcast %28** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %734) #15
  %735 = load %28*, %28** %23, align 8
  store %28* %735, %28** %39, align 8
  %736 = load %28*, %28** %39, align 8
  %737 = load %29*, %29** %38, align 8
  %738 = getelementptr inbounds %29, %29* %737, i32 0, i32 0
  %739 = bitcast %30* %738 to %28**
  store %28* %736, %28** %739, align 8
  %740 = load %29*, %29** %38, align 8
  %741 = getelementptr inbounds %29, %29* %740, i32 0, i32 1
  %742 = bitcast %31* %741 to i32*
  store i32 5126, i32* %742, align 8
  %743 = bitcast %28** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %743) #15
  %744 = bitcast %29** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %744) #15
  br label %745

745:                                              ; preds = %731
  br label %746

746:                                              ; preds = %745
  store i32 1, i32* %36, align 4
  br label %759

747:                                              ; preds = %718
  %748 = bitcast %29** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %748) #15
  %749 = load %29*, %29** %5, align 8
  store %29* %749, %29** %40, align 8
  %750 = load double, double* %14, align 8
  %751 = load %29*, %29** %40, align 8
  %752 = getelementptr inbounds %29, %29* %751, i32 0, i32 0
  %753 = bitcast %30* %752 to double*
  store double %750, double* %753, align 8
  %754 = load %29*, %29** %40, align 8
  %755 = getelementptr inbounds %29, %29* %754, i32 0, i32 1
  %756 = bitcast %31* %755 to i32*
  store i32 5, i32* %756, align 8
  %757 = bitcast %29** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %757) #15
  store i32 1, i32* %36, align 4
  br label %759

758:                                              ; preds = %718
  store i32 0, i32* %36, align 4
  br label %759

759:                                              ; preds = %758, %747, %746, %686, %673, %634, %618, %578
  %760 = bitcast %28** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %760) #15
  %761 = bitcast %53** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %761) #15
  %762 = bitcast %52** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %762) #15
  %763 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %763) #15
  %764 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %764) #15
  %765 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %765) #15
  %766 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %766) #15
  %767 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %767) #15
  %768 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %768) #15
  %769 = bitcast double* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %769) #15
  %770 = bitcast double* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %770) #15
  %771 = bitcast double* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %771) #15
  %772 = bitcast double* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %772) #15
  %773 = bitcast double* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %773) #15
  %774 = bitcast double* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %774) #15
  %775 = bitcast double* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %775) #15
  %776 = bitcast double* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %776) #15
  %777 = load i32, i32* %36, align 4
  switch i32 %777, label %779 [
    i32 0, label %778
    i32 1, label %778
  ]

778:                                              ; preds = %759, %759
  ret void

779:                                              ; preds = %759
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @520(%29* %0, double* %1, i8* %2, i32 %3) #6 {
  %5 = alloca i32, align 4
  %6 = alloca %29*, align 8
  %7 = alloca double*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %29* %0, %29** %6, align 8
  store double* %1, double** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = load i8*, i8** %8, align 8
  store i8 0, i8* %13, align 1
  br label %14

14:                                               ; preds = %12, %4
  %15 = load %29*, %29** %6, align 8
  %16 = call zeroext i8 @490(%29* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 5
  %19 = xor i1 %18, true
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = call i64 @llvm.expect.i64(i64 %22, i64 1)
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = load %29*, %29** %6, align 8
  %27 = getelementptr inbounds %29, %29* %26, i32 0, i32 0
  %28 = bitcast %30* %27 to double*
  %29 = load double, double* %28, align 8
  %30 = load double*, double** %7, align 8
  store double %29, double* %30, align 8
  br label %47

31:                                               ; preds = %14
  %32 = load i32, i32* %9, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = load %29*, %29** %6, align 8
  %36 = call zeroext i8 @490(%29* %35)
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = load i8*, i8** %8, align 8
  store i8 1, i8* %40, align 1
  %41 = load double*, double** %7, align 8
  store double 0.000000e+00, double* %41, align 8
  br label %46

42:                                               ; preds = %34, %31
  %43 = load %29*, %29** %6, align 8
  %44 = load double*, double** %7, align 8
  %45 = call i32 @zend_parse_arg_double_slow(%29* %43, double* %44)
  store i32 %45, i32* %5, align 4
  br label %48

46:                                               ; preds = %39
  br label %47

47:                                               ; preds = %46, %25
  store i32 1, i32* %5, align 4
  br label %48

48:                                               ; preds = %47, %42
  %49 = load i32, i32* %5, align 4
  ret i32 %49
}

declare dso_local i32 @timelib_astro_rise_set_altitude(%52*, double, double, double, i32, double*, double*, i64*, i64*, i64*) #4

; Function Attrs: nounwind uwtable
define internal i32 @521(%71* %0, %7* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %71*, align 8
  %5 = alloca %7*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %61*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %61*, align 8
  %10 = alloca %61*, align 8
  %11 = alloca %68*, align 8
  store %71* %0, %71** %4, align 8
  store %7* %1, %7** %5, align 8
  %12 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = load %7*, %7** %5, align 8
  %14 = call %29* @zend_hash_str_find(%7* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @310, i32 0, i32 0), i64 5)
  store %29* %14, %29** %6, align 8
  %15 = load %29*, %29** %6, align 8
  %16 = icmp ne %29* %15, null
  br i1 %16, label %17, label %63

17:                                               ; preds = %2
  %18 = load %29*, %29** %6, align 8
  %19 = call zeroext i8 @490(%29* %18)
  %20 = zext i8 %19 to i32
  %21 = icmp eq i32 %20, 8
  br i1 %21, label %22, label %55

22:                                               ; preds = %17
  %23 = load %29*, %29** %6, align 8
  %24 = getelementptr inbounds %29, %29* %23, i32 0, i32 0
  %25 = bitcast %30* %24 to %15**
  %26 = load %15*, %15** %25, align 8
  %27 = getelementptr inbounds %15, %15* %26, i32 0, i32 2
  %28 = load %6*, %6** %27, align 8
  %29 = load %6*, %6** @date_ce_interface, align 8
  %30 = call zeroext i8 @instanceof_function(%6* %28, %6* %29)
  %31 = zext i8 %30 to i32
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %55

33:                                               ; preds = %22
  %34 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #15
  %35 = load %29*, %29** %6, align 8
  %36 = getelementptr inbounds %29, %29* %35, i32 0, i32 0
  %37 = bitcast %30* %36 to %15**
  %38 = load %15*, %15** %37, align 8
  %39 = call %61* @489(%15* %38)
  store %61* %39, %61** %7, align 8
  %40 = load %61*, %61** %7, align 8
  %41 = getelementptr inbounds %61, %61* %40, i32 0, i32 0
  %42 = load %52*, %52** %41, align 8
  %43 = call %52* @timelib_time_clone(%52* %42)
  %44 = load %71*, %71** %4, align 8
  %45 = getelementptr inbounds %71, %71* %44, i32 0, i32 0
  store %52* %43, %52** %45, align 8
  %46 = load %29*, %29** %6, align 8
  %47 = getelementptr inbounds %29, %29* %46, i32 0, i32 0
  %48 = bitcast %30* %47 to %15**
  %49 = load %15*, %15** %48, align 8
  %50 = getelementptr inbounds %15, %15* %49, i32 0, i32 2
  %51 = load %6*, %6** %50, align 8
  %52 = load %71*, %71** %4, align 8
  %53 = getelementptr inbounds %71, %71* %52, i32 0, i32 1
  store %6* %51, %6** %53, align 8
  %54 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #15
  br label %62

55:                                               ; preds = %22, %17
  %56 = load %29*, %29** %6, align 8
  %57 = call zeroext i8 @490(%29* %56)
  %58 = zext i8 %57 to i32
  %59 = icmp ne i32 %58, 1
  br i1 %59, label %60, label %61

60:                                               ; preds = %55
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

61:                                               ; preds = %55
  br label %62

62:                                               ; preds = %61, %33
  br label %64

63:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

64:                                               ; preds = %62
  %65 = load %7*, %7** %5, align 8
  %66 = call %29* @zend_hash_str_find(%7* %65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @311, i32 0, i32 0), i64 3)
  store %29* %66, %29** %6, align 8
  %67 = load %29*, %29** %6, align 8
  %68 = icmp ne %29* %67, null
  br i1 %68, label %69, label %107

69:                                               ; preds = %64
  %70 = load %29*, %29** %6, align 8
  %71 = call zeroext i8 @490(%29* %70)
  %72 = zext i8 %71 to i32
  %73 = icmp eq i32 %72, 8
  br i1 %73, label %74, label %99

74:                                               ; preds = %69
  %75 = load %29*, %29** %6, align 8
  %76 = getelementptr inbounds %29, %29* %75, i32 0, i32 0
  %77 = bitcast %30* %76 to %15**
  %78 = load %15*, %15** %77, align 8
  %79 = getelementptr inbounds %15, %15* %78, i32 0, i32 2
  %80 = load %6*, %6** %79, align 8
  %81 = load %6*, %6** @date_ce_interface, align 8
  %82 = call zeroext i8 @instanceof_function(%6* %80, %6* %81)
  %83 = zext i8 %82 to i32
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %99

85:                                               ; preds = %74
  %86 = bitcast %61** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %86) #15
  %87 = load %29*, %29** %6, align 8
  %88 = getelementptr inbounds %29, %29* %87, i32 0, i32 0
  %89 = bitcast %30* %88 to %15**
  %90 = load %15*, %15** %89, align 8
  %91 = call %61* @489(%15* %90)
  store %61* %91, %61** %9, align 8
  %92 = load %61*, %61** %9, align 8
  %93 = getelementptr inbounds %61, %61* %92, i32 0, i32 0
  %94 = load %52*, %52** %93, align 8
  %95 = call %52* @timelib_time_clone(%52* %94)
  %96 = load %71*, %71** %4, align 8
  %97 = getelementptr inbounds %71, %71* %96, i32 0, i32 3
  store %52* %95, %52** %97, align 8
  %98 = bitcast %61** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #15
  br label %106

99:                                               ; preds = %74, %69
  %100 = load %29*, %29** %6, align 8
  %101 = call zeroext i8 @490(%29* %100)
  %102 = zext i8 %101 to i32
  %103 = icmp ne i32 %102, 1
  br i1 %103, label %104, label %105

104:                                              ; preds = %99
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

105:                                              ; preds = %99
  br label %106

106:                                              ; preds = %105, %85
  br label %108

107:                                              ; preds = %64
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

108:                                              ; preds = %106
  %109 = load %7*, %7** %5, align 8
  %110 = call %29* @zend_hash_str_find(%7* %109, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @429, i32 0, i32 0), i64 7)
  store %29* %110, %29** %6, align 8
  %111 = load %29*, %29** %6, align 8
  %112 = icmp ne %29* %111, null
  br i1 %112, label %113, label %151

113:                                              ; preds = %108
  %114 = load %29*, %29** %6, align 8
  %115 = call zeroext i8 @490(%29* %114)
  %116 = zext i8 %115 to i32
  %117 = icmp eq i32 %116, 8
  br i1 %117, label %118, label %143

118:                                              ; preds = %113
  %119 = load %29*, %29** %6, align 8
  %120 = getelementptr inbounds %29, %29* %119, i32 0, i32 0
  %121 = bitcast %30* %120 to %15**
  %122 = load %15*, %15** %121, align 8
  %123 = getelementptr inbounds %15, %15* %122, i32 0, i32 2
  %124 = load %6*, %6** %123, align 8
  %125 = load %6*, %6** @date_ce_interface, align 8
  %126 = call zeroext i8 @instanceof_function(%6* %124, %6* %125)
  %127 = zext i8 %126 to i32
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %143

129:                                              ; preds = %118
  %130 = bitcast %61** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %130) #15
  %131 = load %29*, %29** %6, align 8
  %132 = getelementptr inbounds %29, %29* %131, i32 0, i32 0
  %133 = bitcast %30* %132 to %15**
  %134 = load %15*, %15** %133, align 8
  %135 = call %61* @489(%15* %134)
  store %61* %135, %61** %10, align 8
  %136 = load %61*, %61** %10, align 8
  %137 = getelementptr inbounds %61, %61* %136, i32 0, i32 0
  %138 = load %52*, %52** %137, align 8
  %139 = call %52* @timelib_time_clone(%52* %138)
  %140 = load %71*, %71** %4, align 8
  %141 = getelementptr inbounds %71, %71* %140, i32 0, i32 2
  store %52* %139, %52** %141, align 8
  %142 = bitcast %61** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #15
  br label %150

143:                                              ; preds = %118, %113
  %144 = load %29*, %29** %6, align 8
  %145 = call zeroext i8 @490(%29* %144)
  %146 = zext i8 %145 to i32
  %147 = icmp ne i32 %146, 1
  br i1 %147, label %148, label %149

148:                                              ; preds = %143
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

149:                                              ; preds = %143
  br label %150

150:                                              ; preds = %149, %129
  br label %152

151:                                              ; preds = %108
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

152:                                              ; preds = %150
  %153 = load %7*, %7** %5, align 8
  %154 = call %29* @zend_hash_str_find(%7* %153, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @291, i32 0, i32 0), i64 8)
  store %29* %154, %29** %6, align 8
  %155 = load %29*, %29** %6, align 8
  %156 = icmp ne %29* %155, null
  br i1 %156, label %157, label %187

157:                                              ; preds = %152
  %158 = load %29*, %29** %6, align 8
  %159 = call zeroext i8 @490(%29* %158)
  %160 = zext i8 %159 to i32
  %161 = icmp eq i32 %160, 8
  br i1 %161, label %162, label %185

162:                                              ; preds = %157
  %163 = load %29*, %29** %6, align 8
  %164 = getelementptr inbounds %29, %29* %163, i32 0, i32 0
  %165 = bitcast %30* %164 to %15**
  %166 = load %15*, %15** %165, align 8
  %167 = getelementptr inbounds %15, %15* %166, i32 0, i32 2
  %168 = load %6*, %6** %167, align 8
  %169 = load %6*, %6** @date_ce_interval, align 8
  %170 = icmp eq %6* %168, %169
  br i1 %170, label %171, label %185

171:                                              ; preds = %162
  %172 = bitcast %68** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %172) #15
  %173 = load %29*, %29** %6, align 8
  %174 = getelementptr inbounds %29, %29* %173, i32 0, i32 0
  %175 = bitcast %30* %174 to %15**
  %176 = load %15*, %15** %175, align 8
  %177 = call %68* @505(%15* %176)
  store %68* %177, %68** %11, align 8
  %178 = load %68*, %68** %11, align 8
  %179 = getelementptr inbounds %68, %68* %178, i32 0, i32 0
  %180 = load %59*, %59** %179, align 8
  %181 = call %59* @timelib_rel_time_clone(%59* %180)
  %182 = load %71*, %71** %4, align 8
  %183 = getelementptr inbounds %71, %71* %182, i32 0, i32 4
  store %59* %181, %59** %183, align 8
  %184 = bitcast %68** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184) #15
  br label %186

185:                                              ; preds = %162, %157
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

186:                                              ; preds = %171
  br label %188

187:                                              ; preds = %152
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

188:                                              ; preds = %186
  %189 = load %7*, %7** %5, align 8
  %190 = call %29* @zend_hash_str_find(%7* %189, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @430, i32 0, i32 0), i64 11)
  store %29* %190, %29** %6, align 8
  %191 = load %29*, %29** %6, align 8
  %192 = icmp ne %29* %191, null
  br i1 %192, label %193, label %218

193:                                              ; preds = %188
  %194 = load %29*, %29** %6, align 8
  %195 = call zeroext i8 @490(%29* %194)
  %196 = zext i8 %195 to i32
  %197 = icmp eq i32 %196, 4
  br i1 %197, label %198, label %218

198:                                              ; preds = %193
  %199 = load %29*, %29** %6, align 8
  %200 = getelementptr inbounds %29, %29* %199, i32 0, i32 0
  %201 = bitcast %30* %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp sge i64 %202, 0
  br i1 %203, label %204, label %218

204:                                              ; preds = %198
  %205 = load %29*, %29** %6, align 8
  %206 = getelementptr inbounds %29, %29* %205, i32 0, i32 0
  %207 = bitcast %30* %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = icmp sle i64 %208, 2147483647
  br i1 %209, label %210, label %218

210:                                              ; preds = %204
  %211 = load %29*, %29** %6, align 8
  %212 = getelementptr inbounds %29, %29* %211, i32 0, i32 0
  %213 = bitcast %30* %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = trunc i64 %214 to i32
  %216 = load %71*, %71** %4, align 8
  %217 = getelementptr inbounds %71, %71* %216, i32 0, i32 5
  store i32 %215, i32* %217, align 8
  br label %219

218:                                              ; preds = %204, %198, %193, %188
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

219:                                              ; preds = %210
  %220 = load %7*, %7** %5, align 8
  %221 = call %29* @zend_hash_str_find(%7* %220, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @431, i32 0, i32 0), i64 18)
  store %29* %221, %29** %6, align 8
  %222 = load %29*, %29** %6, align 8
  %223 = icmp ne %29* %222, null
  br i1 %223, label %224, label %242

224:                                              ; preds = %219
  %225 = load %29*, %29** %6, align 8
  %226 = call zeroext i8 @490(%29* %225)
  %227 = zext i8 %226 to i32
  %228 = icmp eq i32 %227, 2
  br i1 %228, label %234, label %229

229:                                              ; preds = %224
  %230 = load %29*, %29** %6, align 8
  %231 = call zeroext i8 @490(%29* %230)
  %232 = zext i8 %231 to i32
  %233 = icmp eq i32 %232, 3
  br i1 %233, label %234, label %242

234:                                              ; preds = %229, %224
  %235 = load %29*, %29** %6, align 8
  %236 = call zeroext i8 @490(%29* %235)
  %237 = zext i8 %236 to i32
  %238 = icmp eq i32 %237, 3
  %239 = zext i1 %238 to i32
  %240 = load %71*, %71** %4, align 8
  %241 = getelementptr inbounds %71, %71* %240, i32 0, i32 7
  store i32 %239, i32* %241, align 8
  br label %243

242:                                              ; preds = %229, %219
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

243:                                              ; preds = %234
  %244 = load %71*, %71** %4, align 8
  %245 = getelementptr inbounds %71, %71* %244, i32 0, i32 6
  store i32 1, i32* %245, align 4
  store i32 1, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %246

246:                                              ; preds = %243, %242, %218, %187, %185, %151, %148, %107, %104, %63, %60
  %247 = bitcast %29** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #15
  %248 = load i32, i32* %3, align 4
  ret i32 %248
}

; Function Attrs: nounwind uwtable
define internal i32 @522(%37* %0, %28* %1, i8* %2, i8* %3, i8* %4, i32 %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %37*, align 8
  %9 = alloca %28*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store %37* %0, %37** %8, align 8
  store %28* %1, %28** %9, align 8
  store i8* %2, i8** %10, align 8
  store i8* %3, i8** %11, align 8
  store i8* %4, i8** %12, align 8
  store i32 %5, i32* %13, align 4
  %14 = load %37*, %37** %8, align 8
  %15 = load %28*, %28** %9, align 8
  %16 = load i8*, i8** %10, align 8
  %17 = load i8*, i8** %11, align 8
  %18 = load i8*, i8** %12, align 8
  %19 = load i32, i32* %13, align 4
  %20 = call i32 @OnUpdateString(%37* %14, %28* %15, i8* %16, i8* %17, i8* %18, i32 %19)
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %23

22:                                               ; preds = %6
  store i32 -1, i32* %7, align 4
  br label %52

23:                                               ; preds = %6
  store i32 0, i32* getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 4), align 8
  %24 = load i32, i32* %13, align 4
  %25 = icmp eq i32 %24, 16
  br i1 %25, label %26, label %51

26:                                               ; preds = %23
  %27 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  %28 = load %41*, %41** @php_date_global_timezone_db, align 8
  %29 = icmp ne %41* %28, null
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = load %41*, %41** @php_date_global_timezone_db, align 8
  br label %34

32:                                               ; preds = %26
  %33 = call %41* @timelib_builtin_db()
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi %41* [ %31, %30 ], [ %33, %32 ]
  %36 = call i32 @timelib_timezone_id_is_valid(i8* %27, %41* %35)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %49, label %38

38:                                               ; preds = %34
  %39 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  %40 = icmp ne i8* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %38
  %42 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = load i8*, i8** getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 0), align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @320, i32 0, i32 0), i8* %47)
  br label %48

48:                                               ; preds = %46, %41, %38
  br label %50

49:                                               ; preds = %34
  store i32 1, i32* getelementptr inbounds (%33, %33* @date_globals, i32 0, i32 4), align 8
  br label %50

50:                                               ; preds = %49, %48
  br label %51

51:                                               ; preds = %50, %23
  store i32 0, i32* %7, align 4
  br label %52

52:                                               ; preds = %51, %22
  %53 = load i32, i32* %7, align 4
  ret i32 %53
}

declare dso_local i32 @OnUpdateString(%37*, %28*, i8*, i8*, i8*, i32) #4

declare dso_local noalias i8* @_emalloc_56() #4

declare dso_local void @_zend_hash_init(%7*, i32, void (%29*)*, i8 zeroext) #4

; Function Attrs: nounwind uwtable
define internal void @523(%29* %0) #0 {
  %2 = alloca %29*, align 8
  %3 = alloca %53*, align 8
  store %29* %0, %29** %2, align 8
  %4 = bitcast %53** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %29*, %29** %2, align 8
  %6 = getelementptr inbounds %29, %29* %5, i32 0, i32 0
  %7 = bitcast %30* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to %53*
  store %53* %9, %53** %3, align 8
  %10 = load %53*, %53** %3, align 8
  call void @timelib_tzinfo_dtor(%53* %10)
  %11 = bitcast %53** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #15
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @524(%7* %0, i8* %1, i64 %2) #6 {
  %4 = alloca i8*, align 8
  %5 = alloca %7*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %29*, align 8
  %9 = alloca i32, align 4
  store %7* %0, %7** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %10 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = load %7*, %7** %5, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = load i64, i64* %7, align 8
  %14 = call %29* @zend_hash_str_find(%7* %11, i8* %12, i64 %13)
  store %29* %14, %29** %8, align 8
  %15 = load %29*, %29** %8, align 8
  %16 = icmp ne %29* %15, null
  br i1 %16, label %17, label %37

17:                                               ; preds = %3
  br label %18

18:                                               ; preds = %17
  %19 = load %29*, %29** %8, align 8
  %20 = getelementptr inbounds %29, %29* %19, i32 0, i32 0
  %21 = bitcast %30* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ne i8* %22, null
  %24 = xor i1 %23, true
  %25 = zext i1 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = call i64 @llvm.expect.i64(i64 %26, i64 0)
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %18
  unreachable

30:                                               ; preds = %18
  br label %31

31:                                               ; preds = %30
  br label %32

32:                                               ; preds = %31
  %33 = load %29*, %29** %8, align 8
  %34 = getelementptr inbounds %29, %29* %33, i32 0, i32 0
  %35 = bitcast %30* %34 to i8**
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

37:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

38:                                               ; preds = %37, %32
  %39 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #15
  %40 = load i8*, i8** %4, align 8
  ret i8* %40
}

declare dso_local %53* @timelib_parse_tzfile(i8*, %41*, i32*) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @525(%7* %0, i8* %1, i64 %2, i8* %3) #6 {
  %5 = alloca i8*, align 8
  %6 = alloca %7*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %29, align 8
  %11 = alloca %29*, align 8
  %12 = alloca i32, align 4
  store %7* %0, %7** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  %13 = bitcast %29* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #15
  %14 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #15
  br label %15

15:                                               ; preds = %4
  %16 = load i8*, i8** %9, align 8
  %17 = getelementptr inbounds %29, %29* %10, i32 0, i32 0
  %18 = bitcast %30* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds %29, %29* %10, i32 0, i32 1
  %20 = bitcast %31* %19 to i32*
  store i32 17, i32* %20, align 8
  br label %21

21:                                               ; preds = %15
  br label %22

22:                                               ; preds = %21
  %23 = load %7*, %7** %6, align 8
  %24 = load i8*, i8** %7, align 8
  %25 = load i64, i64* %8, align 8
  %26 = call %29* @_zend_hash_str_add(%7* %23, i8* %24, i64 %25, %29* %10)
  store %29* %26, %29** %11, align 8
  %27 = load %29*, %29** %11, align 8
  %28 = icmp ne %29* %27, null
  br i1 %28, label %29, label %49

29:                                               ; preds = %22
  br label %30

30:                                               ; preds = %29
  %31 = load %29*, %29** %11, align 8
  %32 = getelementptr inbounds %29, %29* %31, i32 0, i32 0
  %33 = bitcast %30* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = icmp ne i8* %34, null
  %36 = xor i1 %35, true
  %37 = zext i1 %36 to i32
  %38 = sext i32 %37 to i64
  %39 = call i64 @llvm.expect.i64(i64 %38, i64 0)
  %40 = icmp ne i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %30
  unreachable

42:                                               ; preds = %30
  br label %43

43:                                               ; preds = %42
  br label %44

44:                                               ; preds = %43
  %45 = load %29*, %29** %11, align 8
  %46 = getelementptr inbounds %29, %29* %45, i32 0, i32 0
  %47 = bitcast %30* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  store i8* %48, i8** %5, align 8
  store i32 1, i32* %12, align 4
  br label %50

49:                                               ; preds = %22
  store i8* null, i8** %5, align 8
  store i32 1, i32* %12, align 4
  br label %50

50:                                               ; preds = %49, %44
  %51 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #15
  %52 = bitcast %29* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %52) #15
  %53 = load i8*, i8** %5, align 8
  ret i8* %53
}

declare dso_local void @timelib_tzinfo_dtor(%53*) #4

declare dso_local %29* @_zend_hash_str_add(%7*, i8*, i64, %29*) #4

declare dso_local %29* @cfg_get_entry(i8*, i64) #4

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

declare dso_local i32 @ap_php_slprintf(i8*, i64, i8*, ...) #4

; Function Attrs: nounwind uwtable
define internal i8* @526(i64 %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  %5 = icmp sge i64 %4, 10
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = load i64, i64* %3, align 8
  %8 = icmp sle i64 %7, 19
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @355, i32 0, i32 0), i8** %2, align 8
  br label %18

10:                                               ; preds = %6, %1
  %11 = load i64, i64* %3, align 8
  %12 = srem i64 %11, 10
  switch i64 %12, label %16 [
    i64 1, label %13
    i64 2, label %14
    i64 3, label %15
  ]

13:                                               ; preds = %10
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @356, i32 0, i32 0), i8** %2, align 8
  br label %18

14:                                               ; preds = %10
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @357, i32 0, i32 0), i8** %2, align 8
  br label %18

15:                                               ; preds = %10
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @358, i32 0, i32 0), i8** %2, align 8
  br label %18

16:                                               ; preds = %10
  br label %17

17:                                               ; preds = %16
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @355, i32 0, i32 0), i8** %2, align 8
  br label %18

18:                                               ; preds = %17, %15, %14, %13, %9
  %19 = load i8*, i8** %2, align 8
  ret i8* %19
}

declare dso_local i64 @timelib_iso_day_of_week(i64, i64, i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @527(i64 %0) #8 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = icmp sge i64 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load i64, i64* %2, align 8
  br label %10

7:                                                ; preds = %1
  %8 = load i64, i64* %2, align 8
  %9 = sub nsw i64 0, %8
  br label %10

10:                                               ; preds = %7, %5
  %11 = phi i64 [ %6, %5 ], [ %9, %7 ]
  ret i64 %11
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #10

; Function Attrs: alwaysinline nounwind uwtable
define internal void @528(%73* %0, i8* %1, i64 %2, i8 zeroext %3) #6 {
  %5 = alloca %73*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  store %73* %0, %73** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8 %3, i8* %8, align 1
  %10 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = load %73*, %73** %5, align 8
  %12 = load i64, i64* %7, align 8
  %13 = load i8, i8* %8, align 1
  %14 = call i64 @530(%73* %11, i64 %12, i8 zeroext %13)
  store i64 %14, i64* %9, align 8
  %15 = load %73*, %73** %5, align 8
  %16 = getelementptr inbounds %73, %73* %15, i32 0, i32 0
  %17 = load %28*, %28** %16, align 8
  %18 = getelementptr inbounds %28, %28* %17, i32 0, i32 3
  %19 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i32 0, i32 0
  %20 = load %73*, %73** %5, align 8
  %21 = getelementptr inbounds %73, %73* %20, i32 0, i32 0
  %22 = load %28*, %28** %21, align 8
  %23 = getelementptr inbounds %28, %28* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %19, i64 %24
  %26 = load i8*, i8** %6, align 8
  %27 = load i64, i64* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %27, i1 false)
  %28 = load i64, i64* %9, align 8
  %29 = load %73*, %73** %5, align 8
  %30 = getelementptr inbounds %73, %73* %29, i32 0, i32 0
  %31 = load %28*, %28** %30, align 8
  %32 = getelementptr inbounds %28, %28* %31, i32 0, i32 2
  store i64 %28, i64* %32, align 8
  %33 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #15
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @529(%73* %0) #6 {
  %2 = alloca %73*, align 8
  store %73* %0, %73** %2, align 8
  %3 = load %73*, %73** %2, align 8
  %4 = getelementptr inbounds %73, %73* %3, i32 0, i32 0
  %5 = load %28*, %28** %4, align 8
  %6 = icmp ne %28* %5, null
  br i1 %6, label %7, label %18

7:                                                ; preds = %1
  %8 = load %73*, %73** %2, align 8
  %9 = getelementptr inbounds %73, %73* %8, i32 0, i32 0
  %10 = load %28*, %28** %9, align 8
  %11 = getelementptr inbounds %28, %28* %10, i32 0, i32 3
  %12 = load %73*, %73** %2, align 8
  %13 = getelementptr inbounds %73, %73* %12, i32 0, i32 0
  %14 = load %28*, %28** %13, align 8
  %15 = getelementptr inbounds %28, %28* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds [1 x i8], [1 x i8]* %11, i64 0, i64 %16
  store i8 0, i8* %17, align 1
  br label %18

18:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @530(%73* %0, i64 %1, i8 zeroext %2) #6 {
  %4 = alloca %73*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  store %73* %0, %73** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8 %2, i8* %6, align 1
  %7 = load %73*, %73** %4, align 8
  %8 = getelementptr inbounds %73, %73* %7, i32 0, i32 0
  %9 = load %28*, %28** %8, align 8
  %10 = icmp ne %28* %9, null
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = call i64 @llvm.expect.i64(i64 %15, i64 0)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %3
  br label %39

19:                                               ; preds = %3
  %20 = load %73*, %73** %4, align 8
  %21 = getelementptr inbounds %73, %73* %20, i32 0, i32 0
  %22 = load %28*, %28** %21, align 8
  %23 = getelementptr inbounds %28, %28* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %5, align 8
  %26 = add i64 %25, %24
  store i64 %26, i64* %5, align 8
  %27 = load i64, i64* %5, align 8
  %28 = load %73*, %73** %4, align 8
  %29 = getelementptr inbounds %73, %73* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp uge i64 %27, %30
  %32 = xor i1 %31, true
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = sext i32 %34 to i64
  %36 = call i64 @llvm.expect.i64(i64 %35, i64 0)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %19
  br label %39

39:                                               ; preds = %38, %18
  %40 = load i8, i8* %6, align 1
  %41 = icmp ne i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = load %73*, %73** %4, align 8
  %44 = load i64, i64* %5, align 8
  call void @smart_str_realloc(%73* %43, i64 %44)
  br label %48

45:                                               ; preds = %39
  %46 = load %73*, %73** %4, align 8
  %47 = load i64, i64* %5, align 8
  call void @smart_str_erealloc(%73* %46, i64 %47)
  br label %48

48:                                               ; preds = %45, %42
  br label %49

49:                                               ; preds = %48, %19
  br label %50

50:                                               ; preds = %49
  %51 = load i64, i64* %5, align 8
  ret i64 %51
}

declare dso_local void @smart_str_realloc(%73*, i64) #4

declare dso_local void @smart_str_erealloc(%73*, i64) #4

declare dso_local i32 @zend_parse_arg_str_slow(%29*, %28**) #4

declare dso_local i32 @zend_parse_arg_long_cap_slow(%29*, i64*) #4

declare dso_local i32 @zend_parse_arg_long_slow(%29*, i64*) #4

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @__zend_malloc(i64) #11

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @_emalloc(i64) #11

; Function Attrs: alwaysinline nounwind uwtable
define internal void @531(%28* %0) #6 {
  %2 = alloca %28*, align 8
  store %28* %0, %28** %2, align 8
  %3 = load %28*, %28** %2, align 8
  %4 = getelementptr inbounds %28, %28* %3, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: allocsize(1)
declare dso_local i8* @__zend_realloc(i8*, i64) #12

; Function Attrs: allocsize(1)
declare dso_local i8* @_erealloc(i8*, i64) #12

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

declare dso_local i32 @zend_parse_arg_bool_slow(%29*, i8*) #4

declare dso_local %6* @zend_register_internal_interface(%6*) #4

; Function Attrs: nounwind uwtable
define internal i32 @532(%6* %0, %6* %1) #0 {
  %3 = alloca %6*, align 8
  %4 = alloca %6*, align 8
  store %6* %0, %6** %3, align 8
  store %6* %1, %6** %4, align 8
  %5 = load %6*, %6** %4, align 8
  %6 = getelementptr inbounds %6, %6* %5, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %21

10:                                               ; preds = %2
  %11 = load %6*, %6** %4, align 8
  %12 = load %6*, %6** @date_ce_date, align 8
  %13 = call zeroext i8 @instanceof_function(%6* %11, %6* %12)
  %14 = icmp ne i8 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = load %6*, %6** %4, align 8
  %17 = load %6*, %6** @date_ce_immutable, align 8
  %18 = call zeroext i8 @instanceof_function(%6* %16, %6* %17)
  %19 = icmp ne i8 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  call void (i32, i8*, ...) @zend_error(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @419, i32 0, i32 0))
  br label %21

21:                                               ; preds = %20, %15, %10, %2
  ret i32 0
}

declare dso_local i32 @zend_declare_class_constant_stringl(%6*, i8*, i64, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal %15* @533(%6* %0) #0 {
  %2 = alloca %6*, align 8
  store %6* %0, %6** %2, align 8
  %3 = load %6*, %6** %2, align 8
  %4 = call %15* @559(%6* %3, i32 1)
  ret %15* %4
}

declare dso_local %6* @zend_register_internal_class_ex(%6*, %6*) #4

; Function Attrs: nounwind uwtable
define internal void @534(%15* %0) #0 {
  %2 = alloca %15*, align 8
  %3 = alloca %61*, align 8
  store %15* %0, %15** %2, align 8
  %4 = bitcast %61** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %15*, %15** %2, align 8
  %6 = call %61* @489(%15* %5)
  store %61* %6, %61** %3, align 8
  %7 = load %61*, %61** %3, align 8
  %8 = getelementptr inbounds %61, %61* %7, i32 0, i32 0
  %9 = load %52*, %52** %8, align 8
  %10 = icmp ne %52* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = load %61*, %61** %3, align 8
  %13 = getelementptr inbounds %61, %61* %12, i32 0, i32 0
  %14 = load %52*, %52** %13, align 8
  call void @timelib_time_dtor(%52* %14)
  br label %15

15:                                               ; preds = %11, %1
  %16 = load %61*, %61** %3, align 8
  %17 = getelementptr inbounds %61, %61* %16, i32 0, i32 2
  call void @zend_object_std_dtor(%15* %17)
  %18 = bitcast %61** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #15
  ret void
}

; Function Attrs: nounwind uwtable
define internal %15* @535(%29* %0) #0 {
  %2 = alloca %15*, align 8
  %3 = alloca %29*, align 8
  %4 = alloca %61*, align 8
  %5 = alloca %61*, align 8
  %6 = alloca i32, align 4
  store %29* %0, %29** %3, align 8
  %7 = bitcast %61** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #15
  %8 = load %29*, %29** %3, align 8
  %9 = getelementptr inbounds %29, %29* %8, i32 0, i32 0
  %10 = bitcast %30* %9 to %15**
  %11 = load %15*, %15** %10, align 8
  %12 = call %61* @489(%15* %11)
  store %61* %12, %61** %4, align 8
  %13 = bitcast %61** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %61*, %61** %4, align 8
  %15 = getelementptr inbounds %61, %61* %14, i32 0, i32 2
  %16 = getelementptr inbounds %15, %15* %15, i32 0, i32 2
  %17 = load %6*, %6** %16, align 8
  %18 = call %15* @559(%6* %17, i32 0)
  %19 = call %61* @489(%15* %18)
  store %61* %19, %61** %5, align 8
  %20 = load %61*, %61** %5, align 8
  %21 = getelementptr inbounds %61, %61* %20, i32 0, i32 2
  %22 = load %61*, %61** %4, align 8
  %23 = getelementptr inbounds %61, %61* %22, i32 0, i32 2
  call void @zend_objects_clone_members(%15* %21, %15* %23)
  %24 = load %61*, %61** %4, align 8
  %25 = getelementptr inbounds %61, %61* %24, i32 0, i32 0
  %26 = load %52*, %52** %25, align 8
  %27 = icmp ne %52* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %1
  %29 = load %61*, %61** %5, align 8
  %30 = getelementptr inbounds %61, %61* %29, i32 0, i32 2
  store %15* %30, %15** %2, align 8
  store i32 1, i32* %6, align 4
  br label %80

31:                                               ; preds = %1
  %32 = call %52* @timelib_time_ctor()
  %33 = load %61*, %61** %5, align 8
  %34 = getelementptr inbounds %61, %61* %33, i32 0, i32 0
  store %52* %32, %52** %34, align 8
  %35 = load %61*, %61** %5, align 8
  %36 = getelementptr inbounds %61, %61* %35, i32 0, i32 0
  %37 = load %52*, %52** %36, align 8
  %38 = load %61*, %61** %4, align 8
  %39 = getelementptr inbounds %61, %61* %38, i32 0, i32 0
  %40 = load %52*, %52** %39, align 8
  %41 = bitcast %52* %37 to i8*
  %42 = bitcast %52* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 240, i1 false)
  %43 = load %61*, %61** %4, align 8
  %44 = getelementptr inbounds %61, %61* %43, i32 0, i32 0
  %45 = load %52*, %52** %44, align 8
  %46 = getelementptr inbounds %52, %52* %45, i32 0, i32 8
  %47 = load i8*, i8** %46, align 8
  %48 = icmp ne i8* %47, null
  br i1 %48, label %49, label %60

49:                                               ; preds = %31
  %50 = load %61*, %61** %4, align 8
  %51 = getelementptr inbounds %61, %61* %50, i32 0, i32 0
  %52 = load %52*, %52** %51, align 8
  %53 = getelementptr inbounds %52, %52* %52, i32 0, i32 8
  %54 = load i8*, i8** %53, align 8
  %55 = call noalias i8* @_estrdup(i8* %54)
  %56 = load %61*, %61** %5, align 8
  %57 = getelementptr inbounds %61, %61* %56, i32 0, i32 0
  %58 = load %52*, %52** %57, align 8
  %59 = getelementptr inbounds %52, %52* %58, i32 0, i32 8
  store i8* %55, i8** %59, align 8
  br label %60

60:                                               ; preds = %49, %31
  %61 = load %61*, %61** %4, align 8
  %62 = getelementptr inbounds %61, %61* %61, i32 0, i32 0
  %63 = load %52*, %52** %62, align 8
  %64 = getelementptr inbounds %52, %52* %63, i32 0, i32 9
  %65 = load %53*, %53** %64, align 8
  %66 = icmp ne %53* %65, null
  br i1 %66, label %67, label %77

67:                                               ; preds = %60
  %68 = load %61*, %61** %4, align 8
  %69 = getelementptr inbounds %61, %61* %68, i32 0, i32 0
  %70 = load %52*, %52** %69, align 8
  %71 = getelementptr inbounds %52, %52* %70, i32 0, i32 9
  %72 = load %53*, %53** %71, align 8
  %73 = load %61*, %61** %5, align 8
  %74 = getelementptr inbounds %61, %61* %73, i32 0, i32 0
  %75 = load %52*, %52** %74, align 8
  %76 = getelementptr inbounds %52, %52* %75, i32 0, i32 9
  store %53* %72, %53** %76, align 8
  br label %77

77:                                               ; preds = %67, %60
  %78 = load %61*, %61** %5, align 8
  %79 = getelementptr inbounds %61, %61* %78, i32 0, i32 2
  store %15* %79, %15** %2, align 8
  store i32 1, i32* %6, align 4
  br label %80

80:                                               ; preds = %77, %28
  %81 = bitcast %61** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81) #15
  %82 = bitcast %61** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %82) #15
  %83 = load %15*, %15** %2, align 8
  ret %15* %83
}

; Function Attrs: nounwind uwtable
define internal i32 @536(%29* %0, %29* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %29*, align 8
  %5 = alloca %29*, align 8
  %6 = alloca %61*, align 8
  %7 = alloca %61*, align 8
  %8 = alloca i32, align 4
  store %29* %0, %29** %4, align 8
  store %29* %1, %29** %5, align 8
  %9 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = load %29*, %29** %4, align 8
  %11 = getelementptr inbounds %29, %29* %10, i32 0, i32 0
  %12 = bitcast %30* %11 to %15**
  %13 = load %15*, %15** %12, align 8
  %14 = call %61* @489(%15* %13)
  store %61* %14, %61** %6, align 8
  %15 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = load %29*, %29** %5, align 8
  %17 = getelementptr inbounds %29, %29* %16, i32 0, i32 0
  %18 = bitcast %30* %17 to %15**
  %19 = load %15*, %15** %18, align 8
  %20 = call %61* @489(%15* %19)
  store %61* %20, %61** %7, align 8
  %21 = load %61*, %61** %6, align 8
  %22 = getelementptr inbounds %61, %61* %21, i32 0, i32 0
  %23 = load %52*, %52** %22, align 8
  %24 = icmp ne %52* %23, null
  br i1 %24, label %25, label %30

25:                                               ; preds = %2
  %26 = load %61*, %61** %7, align 8
  %27 = getelementptr inbounds %61, %61* %26, i32 0, i32 0
  %28 = load %52*, %52** %27, align 8
  %29 = icmp ne %52* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %25, %2
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @420, i32 0, i32 0))
  store i32 1, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %71

31:                                               ; preds = %25
  %32 = load %61*, %61** %6, align 8
  %33 = getelementptr inbounds %61, %61* %32, i32 0, i32 0
  %34 = load %52*, %52** %33, align 8
  %35 = getelementptr inbounds %52, %52* %34, i32 0, i32 18
  %36 = load i32, i32* %35, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %31
  %39 = load %61*, %61** %6, align 8
  %40 = getelementptr inbounds %61, %61* %39, i32 0, i32 0
  %41 = load %52*, %52** %40, align 8
  %42 = load %61*, %61** %6, align 8
  %43 = getelementptr inbounds %61, %61* %42, i32 0, i32 0
  %44 = load %52*, %52** %43, align 8
  %45 = getelementptr inbounds %52, %52* %44, i32 0, i32 9
  %46 = load %53*, %53** %45, align 8
  call void @timelib_update_ts(%52* %41, %53* %46)
  br label %47

47:                                               ; preds = %38, %31
  %48 = load %61*, %61** %7, align 8
  %49 = getelementptr inbounds %61, %61* %48, i32 0, i32 0
  %50 = load %52*, %52** %49, align 8
  %51 = getelementptr inbounds %52, %52* %50, i32 0, i32 18
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %47
  %55 = load %61*, %61** %7, align 8
  %56 = getelementptr inbounds %61, %61* %55, i32 0, i32 0
  %57 = load %52*, %52** %56, align 8
  %58 = load %61*, %61** %7, align 8
  %59 = getelementptr inbounds %61, %61* %58, i32 0, i32 0
  %60 = load %52*, %52** %59, align 8
  %61 = getelementptr inbounds %52, %52* %60, i32 0, i32 9
  %62 = load %53*, %53** %61, align 8
  call void @timelib_update_ts(%52* %57, %53* %62)
  br label %63

63:                                               ; preds = %54, %47
  %64 = load %61*, %61** %6, align 8
  %65 = getelementptr inbounds %61, %61* %64, i32 0, i32 0
  %66 = load %52*, %52** %65, align 8
  %67 = load %61*, %61** %7, align 8
  %68 = getelementptr inbounds %61, %61* %67, i32 0, i32 0
  %69 = load %52*, %52** %68, align 8
  %70 = call i32 @timelib_time_compare(%52* %66, %52* %69)
  store i32 %70, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %71

71:                                               ; preds = %63, %30
  %72 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #15
  %73 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #15
  %74 = load i32, i32* %3, align 4
  ret i32 %74
}

; Function Attrs: nounwind uwtable
define internal %7* @537(%29* %0) #0 {
  %2 = alloca %7*, align 8
  %3 = alloca %29*, align 8
  %4 = alloca %7*, align 8
  %5 = alloca %29, align 8
  %6 = alloca %61*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %29*, align 8
  %9 = alloca %28*, align 8
  %10 = alloca %29*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %29*, align 8
  %13 = alloca %28*, align 8
  %14 = alloca %28*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %29*, align 8
  %17 = alloca %28*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca %29*, align 8
  %20 = alloca %28*, align 8
  store %29* %0, %29** %3, align 8
  %21 = bitcast %7** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #15
  %22 = bitcast %29* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %22) #15
  %23 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  %24 = load %29*, %29** %3, align 8
  %25 = getelementptr inbounds %29, %29* %24, i32 0, i32 0
  %26 = bitcast %30* %25 to %15**
  %27 = load %15*, %15** %26, align 8
  %28 = call %61* @489(%15* %27)
  store %61* %28, %61** %6, align 8
  %29 = load %29*, %29** %3, align 8
  %30 = call %7* @zend_std_get_properties(%29* %29)
  store %7* %30, %7** %4, align 8
  %31 = load %61*, %61** %6, align 8
  %32 = getelementptr inbounds %61, %61* %31, i32 0, i32 0
  %33 = load %52*, %52** %32, align 8
  %34 = icmp ne %52* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %1
  %36 = load %7*, %7** %4, align 8
  store %7* %36, %7** %2, align 8
  store i32 1, i32* %7, align 4
  br label %215

37:                                               ; preds = %1
  br label %38

38:                                               ; preds = %37
  %39 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #15
  store %29* %5, %29** %8, align 8
  %40 = bitcast %28** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  %41 = load %61*, %61** %6, align 8
  %42 = getelementptr inbounds %61, %61* %41, i32 0, i32 0
  %43 = load %52*, %52** %42, align 8
  %44 = call %28* @466(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @421, i32 0, i32 0), i64 13, %52* %43, i32 1)
  store %28* %44, %28** %9, align 8
  %45 = load %28*, %28** %9, align 8
  %46 = load %29*, %29** %8, align 8
  %47 = getelementptr inbounds %29, %29* %46, i32 0, i32 0
  %48 = bitcast %30* %47 to %28**
  store %28* %45, %28** %48, align 8
  %49 = load %28*, %28** %9, align 8
  %50 = getelementptr inbounds %28, %28* %49, i32 0, i32 0
  %51 = getelementptr inbounds %8, %8* %50, i32 0, i32 1
  %52 = bitcast %9* %51 to %62*
  %53 = getelementptr inbounds %62, %62* %52, i32 0, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = and i32 %55, 2
  %57 = icmp ne i32 %56, 0
  %58 = zext i1 %57 to i64
  %59 = select i1 %57, i32 6, i32 5126
  %60 = load %29*, %29** %8, align 8
  %61 = getelementptr inbounds %29, %29* %60, i32 0, i32 1
  %62 = bitcast %31* %61 to i32*
  store i32 %59, i32* %62, align 8
  %63 = bitcast %28** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #15
  %64 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #15
  br label %65

65:                                               ; preds = %38
  br label %66

66:                                               ; preds = %65
  %67 = load %7*, %7** %4, align 8
  %68 = call %29* @_zend_hash_str_update(%7* %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i64 4, %29* %5)
  %69 = load %61*, %61** %6, align 8
  %70 = getelementptr inbounds %61, %61* %69, i32 0, i32 0
  %71 = load %52*, %52** %70, align 8
  %72 = getelementptr inbounds %52, %52* %71, i32 0, i32 20
  %73 = load i32, i32* %72, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %213

75:                                               ; preds = %66
  %76 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #15
  store %29* %5, %29** %10, align 8
  %77 = load %61*, %61** %6, align 8
  %78 = getelementptr inbounds %61, %61* %77, i32 0, i32 0
  %79 = load %52*, %52** %78, align 8
  %80 = getelementptr inbounds %52, %52* %79, i32 0, i32 21
  %81 = load i32, i32* %80, align 8
  %82 = zext i32 %81 to i64
  %83 = load %29*, %29** %10, align 8
  %84 = getelementptr inbounds %29, %29* %83, i32 0, i32 0
  %85 = bitcast %30* %84 to i64*
  store i64 %82, i64* %85, align 8
  %86 = load %29*, %29** %10, align 8
  %87 = getelementptr inbounds %29, %29* %86, i32 0, i32 1
  %88 = bitcast %31* %87 to i32*
  store i32 4, i32* %88, align 8
  %89 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #15
  %90 = load %7*, %7** %4, align 8
  %91 = call %29* @_zend_hash_str_update(%7* %90, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @422, i32 0, i32 0), i64 13, %29* %5)
  %92 = load %61*, %61** %6, align 8
  %93 = getelementptr inbounds %61, %61* %92, i32 0, i32 0
  %94 = load %52*, %52** %93, align 8
  %95 = getelementptr inbounds %52, %52* %94, i32 0, i32 21
  %96 = load i32, i32* %95, align 8
  switch i32 %96, label %210 [
    i32 3, label %97
    i32 1, label %131
    i32 2, label %178
  ]

97:                                               ; preds = %75
  br label %98

98:                                               ; preds = %97
  %99 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %99) #15
  %100 = load %61*, %61** %6, align 8
  %101 = getelementptr inbounds %61, %61* %100, i32 0, i32 0
  %102 = load %52*, %52** %101, align 8
  %103 = getelementptr inbounds %52, %52* %102, i32 0, i32 9
  %104 = load %53*, %53** %103, align 8
  %105 = getelementptr inbounds %53, %53* %104, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  store i8* %106, i8** %11, align 8
  br label %107

107:                                              ; preds = %98
  br label %108

108:                                              ; preds = %107
  %109 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #15
  store %29* %5, %29** %12, align 8
  %110 = bitcast %28** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %110) #15
  %111 = load i8*, i8** %11, align 8
  %112 = load i8*, i8** %11, align 8
  %113 = call i64 @strlen(i8* %112) #16
  %114 = call %28* @510(i8* %111, i64 %113, i32 0)
  store %28* %114, %28** %13, align 8
  %115 = load %28*, %28** %13, align 8
  %116 = load %29*, %29** %12, align 8
  %117 = getelementptr inbounds %29, %29* %116, i32 0, i32 0
  %118 = bitcast %30* %117 to %28**
  store %28* %115, %28** %118, align 8
  %119 = load %29*, %29** %12, align 8
  %120 = getelementptr inbounds %29, %29* %119, i32 0, i32 1
  %121 = bitcast %31* %120 to i32*
  store i32 5126, i32* %121, align 8
  %122 = bitcast %28** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #15
  %123 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #15
  br label %124

124:                                              ; preds = %108
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #15
  br label %129

129:                                              ; preds = %127
  br label %130

130:                                              ; preds = %129
  br label %210

131:                                              ; preds = %75
  %132 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %132) #15
  %133 = call %28* @470(i64 9, i32 0)
  store %28* %133, %28** %14, align 8
  %134 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %134) #15
  %135 = load %61*, %61** %6, align 8
  %136 = getelementptr inbounds %61, %61* %135, i32 0, i32 0
  %137 = load %52*, %52** %136, align 8
  %138 = getelementptr inbounds %52, %52* %137, i32 0, i32 7
  %139 = load i32, i32* %138, align 8
  %140 = sext i32 %139 to i64
  store i64 %140, i64* %15, align 8
  %141 = load %28*, %28** %14, align 8
  %142 = getelementptr inbounds %28, %28* %141, i32 0, i32 3
  %143 = getelementptr inbounds [1 x i8], [1 x i8]* %142, i32 0, i32 0
  %144 = load i64, i64* %15, align 8
  %145 = icmp slt i64 %144, 0
  %146 = zext i1 %145 to i64
  %147 = select i1 %145, i32 45, i32 43
  %148 = load i64, i64* %15, align 8
  %149 = sdiv i64 %148, 3600
  %150 = trunc i64 %149 to i32
  %151 = call i32 @abs(i32 %150) #17
  %152 = load i64, i64* %15, align 8
  %153 = srem i64 %152, 3600
  %154 = sdiv i64 %153, 60
  %155 = trunc i64 %154 to i32
  %156 = call i32 @abs(i32 %155) #17
  %157 = call i32 (i8*, i64, i8*, ...) @ap_php_snprintf(i8* %143, i64 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @351, i32 0, i32 0), i32 %147, i32 %151, i32 %156)
  %158 = sext i32 %157 to i64
  %159 = load %28*, %28** %14, align 8
  %160 = getelementptr inbounds %28, %28* %159, i32 0, i32 2
  store i64 %158, i64* %160, align 8
  br label %161

161:                                              ; preds = %131
  %162 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %162) #15
  store %29* %5, %29** %16, align 8
  %163 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163) #15
  %164 = load %28*, %28** %14, align 8
  store %28* %164, %28** %17, align 8
  %165 = load %28*, %28** %17, align 8
  %166 = load %29*, %29** %16, align 8
  %167 = getelementptr inbounds %29, %29* %166, i32 0, i32 0
  %168 = bitcast %30* %167 to %28**
  store %28* %165, %28** %168, align 8
  %169 = load %29*, %29** %16, align 8
  %170 = getelementptr inbounds %29, %29* %169, i32 0, i32 1
  %171 = bitcast %31* %170 to i32*
  store i32 5126, i32* %171, align 8
  %172 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %172) #15
  %173 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %173) #15
  br label %174

174:                                              ; preds = %161
  br label %175

175:                                              ; preds = %174
  %176 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %176) #15
  %177 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %177) #15
  br label %210

178:                                              ; preds = %75
  br label %179

179:                                              ; preds = %178
  %180 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %180) #15
  %181 = load %61*, %61** %6, align 8
  %182 = getelementptr inbounds %61, %61* %181, i32 0, i32 0
  %183 = load %52*, %52** %182, align 8
  %184 = getelementptr inbounds %52, %52* %183, i32 0, i32 8
  %185 = load i8*, i8** %184, align 8
  store i8* %185, i8** %18, align 8
  br label %186

186:                                              ; preds = %179
  br label %187

187:                                              ; preds = %186
  %188 = bitcast %29** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %188) #15
  store %29* %5, %29** %19, align 8
  %189 = bitcast %28** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %189) #15
  %190 = load i8*, i8** %18, align 8
  %191 = load i8*, i8** %18, align 8
  %192 = call i64 @strlen(i8* %191) #16
  %193 = call %28* @510(i8* %190, i64 %192, i32 0)
  store %28* %193, %28** %20, align 8
  %194 = load %28*, %28** %20, align 8
  %195 = load %29*, %29** %19, align 8
  %196 = getelementptr inbounds %29, %29* %195, i32 0, i32 0
  %197 = bitcast %30* %196 to %28**
  store %28* %194, %28** %197, align 8
  %198 = load %29*, %29** %19, align 8
  %199 = getelementptr inbounds %29, %29* %198, i32 0, i32 1
  %200 = bitcast %31* %199 to i32*
  store i32 5126, i32* %200, align 8
  %201 = bitcast %28** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %201) #15
  %202 = bitcast %29** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %202) #15
  br label %203

203:                                              ; preds = %187
  br label %204

204:                                              ; preds = %203
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  %207 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %207) #15
  br label %208

208:                                              ; preds = %206
  br label %209

209:                                              ; preds = %208
  br label %210

210:                                              ; preds = %75, %209, %175, %130
  %211 = load %7*, %7** %4, align 8
  %212 = call %29* @_zend_hash_str_update(%7* %211, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @288, i32 0, i32 0), i64 8, %29* %5)
  br label %213

213:                                              ; preds = %210, %66
  %214 = load %7*, %7** %4, align 8
  store %7* %214, %7** %2, align 8
  store i32 1, i32* %7, align 4
  br label %215

215:                                              ; preds = %213, %35
  %216 = bitcast %61** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %216) #15
  %217 = bitcast %29* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %217) #15
  %218 = bitcast %7** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %218) #15
  %219 = load %7*, %7** %2, align 8
  ret %7* %219
}

; Function Attrs: nounwind uwtable
define internal %7* @538(%29* %0, %29** %1, i32* %2) #0 {
  %4 = alloca %29*, align 8
  %5 = alloca %29**, align 8
  %6 = alloca i32*, align 8
  store %29* %0, %29** %4, align 8
  store %29** %1, %29*** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %29**, %29*** %5, align 8
  store %29* null, %29** %7, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 0, i32* %8, align 4
  %9 = load %29*, %29** %4, align 8
  %10 = call %7* @zend_std_get_properties(%29* %9)
  ret %7* %10
}

declare dso_local void @zend_class_implements(%6*, i32, ...) #4

; Function Attrs: nounwind uwtable
define internal %15* @539(%6* %0) #0 {
  %2 = alloca %6*, align 8
  store %6* %0, %6** %2, align 8
  %3 = load %6*, %6** %2, align 8
  %4 = call %15* @561(%6* %3, i32 1)
  ret %15* %4
}

; Function Attrs: nounwind uwtable
define internal void @540(%15* %0) #0 {
  %2 = alloca %15*, align 8
  %3 = alloca %64*, align 8
  store %15* %0, %15** %2, align 8
  %4 = bitcast %64** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %15*, %15** %2, align 8
  %6 = call %64* @484(%15* %5)
  store %64* %6, %64** %3, align 8
  %7 = load %64*, %64** %3, align 8
  %8 = getelementptr inbounds %64, %64* %7, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %17

11:                                               ; preds = %1
  %12 = load %64*, %64** %3, align 8
  %13 = getelementptr inbounds %64, %64* %12, i32 0, i32 2
  %14 = bitcast %65* %13 to %66*
  %15 = getelementptr inbounds %66, %66* %14, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  call void @_efree(i8* %16)
  br label %17

17:                                               ; preds = %11, %1
  %18 = load %64*, %64** %3, align 8
  %19 = getelementptr inbounds %64, %64* %18, i32 0, i32 4
  call void @zend_object_std_dtor(%15* %19)
  %20 = bitcast %64** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #15
  ret void
}

; Function Attrs: nounwind uwtable
define internal %15* @541(%29* %0) #0 {
  %2 = alloca %15*, align 8
  %3 = alloca %29*, align 8
  %4 = alloca %64*, align 8
  %5 = alloca %64*, align 8
  %6 = alloca i32, align 4
  store %29* %0, %29** %3, align 8
  %7 = bitcast %64** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #15
  %8 = load %29*, %29** %3, align 8
  %9 = getelementptr inbounds %29, %29* %8, i32 0, i32 0
  %10 = bitcast %30* %9 to %15**
  %11 = load %15*, %15** %10, align 8
  %12 = call %64* @484(%15* %11)
  store %64* %12, %64** %4, align 8
  %13 = bitcast %64** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %64*, %64** %4, align 8
  %15 = getelementptr inbounds %64, %64* %14, i32 0, i32 4
  %16 = getelementptr inbounds %15, %15* %15, i32 0, i32 2
  %17 = load %6*, %6** %16, align 8
  %18 = call %15* @561(%6* %17, i32 0)
  %19 = call %64* @484(%15* %18)
  store %64* %19, %64** %5, align 8
  %20 = load %64*, %64** %5, align 8
  %21 = getelementptr inbounds %64, %64* %20, i32 0, i32 4
  %22 = load %64*, %64** %4, align 8
  %23 = getelementptr inbounds %64, %64* %22, i32 0, i32 4
  call void @zend_objects_clone_members(%15* %21, %15* %23)
  %24 = load %64*, %64** %4, align 8
  %25 = getelementptr inbounds %64, %64* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %1
  %29 = load %64*, %64** %5, align 8
  %30 = getelementptr inbounds %64, %64* %29, i32 0, i32 4
  store %15* %30, %15** %2, align 8
  store i32 1, i32* %6, align 4
  br label %90

31:                                               ; preds = %1
  %32 = load %64*, %64** %4, align 8
  %33 = getelementptr inbounds %64, %64* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = load %64*, %64** %5, align 8
  %36 = getelementptr inbounds %64, %64* %35, i32 0, i32 1
  store i32 %34, i32* %36, align 4
  %37 = load %64*, %64** %5, align 8
  %38 = getelementptr inbounds %64, %64* %37, i32 0, i32 0
  store i32 1, i32* %38, align 8
  %39 = load %64*, %64** %5, align 8
  %40 = getelementptr inbounds %64, %64* %39, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  switch i32 %41, label %87 [
    i32 3, label %42
    i32 1, label %50
    i32 2, label %58
  ]

42:                                               ; preds = %31
  %43 = load %64*, %64** %4, align 8
  %44 = getelementptr inbounds %64, %64* %43, i32 0, i32 2
  %45 = bitcast %65* %44 to %53**
  %46 = load %53*, %53** %45, align 8
  %47 = load %64*, %64** %5, align 8
  %48 = getelementptr inbounds %64, %64* %47, i32 0, i32 2
  %49 = bitcast %65* %48 to %53**
  store %53* %46, %53** %49, align 8
  br label %87

50:                                               ; preds = %31
  %51 = load %64*, %64** %4, align 8
  %52 = getelementptr inbounds %64, %64* %51, i32 0, i32 2
  %53 = bitcast %65* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = load %64*, %64** %5, align 8
  %56 = getelementptr inbounds %64, %64* %55, i32 0, i32 2
  %57 = bitcast %65* %56 to i64*
  store i64 %54, i64* %57, align 8
  br label %87

58:                                               ; preds = %31
  %59 = load %64*, %64** %4, align 8
  %60 = getelementptr inbounds %64, %64* %59, i32 0, i32 2
  %61 = bitcast %65* %60 to %66*
  %62 = getelementptr inbounds %66, %66* %61, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = load %64*, %64** %5, align 8
  %65 = getelementptr inbounds %64, %64* %64, i32 0, i32 2
  %66 = bitcast %65* %65 to %66*
  %67 = getelementptr inbounds %66, %66* %66, i32 0, i32 0
  store i64 %63, i64* %67, align 8
  %68 = load %64*, %64** %4, align 8
  %69 = getelementptr inbounds %64, %64* %68, i32 0, i32 2
  %70 = bitcast %65* %69 to %66*
  %71 = getelementptr inbounds %66, %66* %70, i32 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = load %64*, %64** %5, align 8
  %74 = getelementptr inbounds %64, %64* %73, i32 0, i32 2
  %75 = bitcast %65* %74 to %66*
  %76 = getelementptr inbounds %66, %66* %75, i32 0, i32 2
  store i32 %72, i32* %76, align 8
  %77 = load %64*, %64** %4, align 8
  %78 = getelementptr inbounds %64, %64* %77, i32 0, i32 2
  %79 = bitcast %65* %78 to %66*
  %80 = getelementptr inbounds %66, %66* %79, i32 0, i32 1
  %81 = load i8*, i8** %80, align 8
  %82 = call noalias i8* @_estrdup(i8* %81)
  %83 = load %64*, %64** %5, align 8
  %84 = getelementptr inbounds %64, %64* %83, i32 0, i32 2
  %85 = bitcast %65* %84 to %66*
  %86 = getelementptr inbounds %66, %66* %85, i32 0, i32 1
  store i8* %82, i8** %86, align 8
  br label %87

87:                                               ; preds = %31, %58, %50, %42
  %88 = load %64*, %64** %5, align 8
  %89 = getelementptr inbounds %64, %64* %88, i32 0, i32 4
  store %15* %89, %15** %2, align 8
  store i32 1, i32* %6, align 4
  br label %90

90:                                               ; preds = %87, %28
  %91 = bitcast %64** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #15
  %92 = bitcast %64** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #15
  %93 = load %15*, %15** %2, align 8
  ret %15* %93
}

; Function Attrs: nounwind uwtable
define internal %7* @542(%29* %0) #0 {
  %2 = alloca %7*, align 8
  %3 = alloca %29*, align 8
  %4 = alloca %7*, align 8
  %5 = alloca %29, align 8
  %6 = alloca %64*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %29*, align 8
  store %29* %0, %29** %3, align 8
  %9 = bitcast %7** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #15
  %10 = bitcast %29* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #15
  %11 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = load %29*, %29** %3, align 8
  %13 = getelementptr inbounds %29, %29* %12, i32 0, i32 0
  %14 = bitcast %30* %13 to %15**
  %15 = load %15*, %15** %14, align 8
  %16 = call %64* @484(%15* %15)
  store %64* %16, %64** %6, align 8
  %17 = load %29*, %29** %3, align 8
  %18 = call %7* @zend_std_get_properties(%29* %17)
  store %7* %18, %7** %4, align 8
  %19 = load %64*, %64** %6, align 8
  %20 = getelementptr inbounds %64, %64* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %1
  %24 = load %7*, %7** %4, align 8
  store %7* %24, %7** %2, align 8
  store i32 1, i32* %7, align 4
  br label %44

25:                                               ; preds = %1
  %26 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  store %29* %5, %29** %8, align 8
  %27 = load %64*, %64** %6, align 8
  %28 = getelementptr inbounds %64, %64* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = load %29*, %29** %8, align 8
  %32 = getelementptr inbounds %29, %29* %31, i32 0, i32 0
  %33 = bitcast %30* %32 to i64*
  store i64 %30, i64* %33, align 8
  %34 = load %29*, %29** %8, align 8
  %35 = getelementptr inbounds %29, %29* %34, i32 0, i32 1
  %36 = bitcast %31* %35 to i32*
  store i32 4, i32* %36, align 8
  %37 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #15
  %38 = load %7*, %7** %4, align 8
  %39 = call %29* @_zend_hash_str_update(%7* %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @422, i32 0, i32 0), i64 13, %29* %5)
  %40 = load %64*, %64** %6, align 8
  call void @509(%64* %40, %29* %5)
  %41 = load %7*, %7** %4, align 8
  %42 = call %29* @_zend_hash_str_update(%7* %41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @288, i32 0, i32 0), i64 8, %29* %5)
  %43 = load %7*, %7** %4, align 8
  store %7* %43, %7** %2, align 8
  store i32 1, i32* %7, align 4
  br label %44

44:                                               ; preds = %25, %23
  %45 = bitcast %64** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #15
  %46 = bitcast %29* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %46) #15
  %47 = bitcast %7** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #15
  %48 = load %7*, %7** %2, align 8
  ret %7* %48
}

; Function Attrs: nounwind uwtable
define internal %7* @543(%29* %0, %29** %1, i32* %2) #0 {
  %4 = alloca %29*, align 8
  %5 = alloca %29**, align 8
  %6 = alloca i32*, align 8
  store %29* %0, %29** %4, align 8
  store %29** %1, %29*** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %29**, %29*** %5, align 8
  store %29* null, %29** %7, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 0, i32* %8, align 4
  %9 = load %29*, %29** %4, align 8
  %10 = call %7* @zend_std_get_properties(%29* %9)
  ret %7* %10
}

; Function Attrs: nounwind uwtable
define internal %7* @544(%29* %0, i32* %1) #0 {
  %3 = alloca %29*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %7*, align 8
  %6 = alloca %7*, align 8
  %7 = alloca %29, align 8
  %8 = alloca %64*, align 8
  %9 = alloca %29*, align 8
  store %29* %0, %29** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = bitcast %7** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #15
  %11 = bitcast %7** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = bitcast %29* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #15
  %13 = bitcast %64** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = load %29*, %29** %3, align 8
  %15 = getelementptr inbounds %29, %29* %14, i32 0, i32 0
  %16 = bitcast %30* %15 to %15**
  %17 = load %15*, %15** %16, align 8
  %18 = call %64* @484(%15* %17)
  store %64* %18, %64** %8, align 8
  %19 = load %29*, %29** %3, align 8
  %20 = call %7* @zend_std_get_properties(%29* %19)
  store %7* %20, %7** %6, align 8
  %21 = load i32*, i32** %4, align 8
  store i32 1, i32* %21, align 4
  %22 = load %7*, %7** %6, align 8
  %23 = call %7* @zend_array_dup(%7* %22)
  store %7* %23, %7** %5, align 8
  %24 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  store %29* %7, %29** %9, align 8
  %25 = load %64*, %64** %8, align 8
  %26 = getelementptr inbounds %64, %64* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = load %29*, %29** %9, align 8
  %30 = getelementptr inbounds %29, %29* %29, i32 0, i32 0
  %31 = bitcast %30* %30 to i64*
  store i64 %28, i64* %31, align 8
  %32 = load %29*, %29** %9, align 8
  %33 = getelementptr inbounds %29, %29* %32, i32 0, i32 1
  %34 = bitcast %31* %33 to i32*
  store i32 4, i32* %34, align 8
  %35 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #15
  %36 = load %7*, %7** %5, align 8
  %37 = call %29* @_zend_hash_str_update(%7* %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @422, i32 0, i32 0), i64 13, %29* %7)
  %38 = load %64*, %64** %8, align 8
  call void @509(%64* %38, %29* %7)
  %39 = load %7*, %7** %5, align 8
  %40 = call %29* @_zend_hash_str_update(%7* %39, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @288, i32 0, i32 0), i64 8, %29* %7)
  %41 = load %7*, %7** %5, align 8
  %42 = bitcast %64** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #15
  %43 = bitcast %29* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %43) #15
  %44 = bitcast %7** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #15
  %45 = bitcast %7** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #15
  ret %7* %41
}

declare dso_local i32 @zend_declare_class_constant_long(%6*, i8*, i64, i64) #4

; Function Attrs: nounwind uwtable
define internal %15* @545(%6* %0) #0 {
  %2 = alloca %6*, align 8
  store %6* %0, %6** %2, align 8
  %3 = load %6*, %6** %2, align 8
  %4 = call %15* @562(%6* %3, i32 1)
  ret %15* %4
}

; Function Attrs: nounwind uwtable
define internal void @546(%15* %0) #0 {
  %2 = alloca %15*, align 8
  %3 = alloca %68*, align 8
  store %15* %0, %15** %2, align 8
  %4 = bitcast %68** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %15*, %15** %2, align 8
  %6 = call %68* @505(%15* %5)
  store %68* %6, %68** %3, align 8
  %7 = load %68*, %68** %3, align 8
  %8 = getelementptr inbounds %68, %68* %7, i32 0, i32 0
  %9 = load %59*, %59** %8, align 8
  call void @timelib_rel_time_dtor(%59* %9)
  %10 = load %68*, %68** %3, align 8
  %11 = getelementptr inbounds %68, %68* %10, i32 0, i32 3
  call void @zend_object_std_dtor(%15* %11)
  %12 = bitcast %68** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #15
  ret void
}

; Function Attrs: nounwind uwtable
define internal %15* @547(%29* %0) #0 {
  %2 = alloca %29*, align 8
  %3 = alloca %68*, align 8
  %4 = alloca %68*, align 8
  store %29* %0, %29** %2, align 8
  %5 = bitcast %68** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #15
  %6 = load %29*, %29** %2, align 8
  %7 = getelementptr inbounds %29, %29* %6, i32 0, i32 0
  %8 = bitcast %30* %7 to %15**
  %9 = load %15*, %15** %8, align 8
  %10 = call %68* @505(%15* %9)
  store %68* %10, %68** %3, align 8
  %11 = bitcast %68** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = load %68*, %68** %3, align 8
  %13 = getelementptr inbounds %68, %68* %12, i32 0, i32 3
  %14 = getelementptr inbounds %15, %15* %13, i32 0, i32 2
  %15 = load %6*, %6** %14, align 8
  %16 = call %15* @562(%6* %15, i32 0)
  %17 = call %68* @505(%15* %16)
  store %68* %17, %68** %4, align 8
  %18 = load %68*, %68** %4, align 8
  %19 = getelementptr inbounds %68, %68* %18, i32 0, i32 3
  %20 = load %68*, %68** %3, align 8
  %21 = getelementptr inbounds %68, %68* %20, i32 0, i32 3
  call void @zend_objects_clone_members(%15* %19, %15* %21)
  %22 = load %68*, %68** %3, align 8
  %23 = getelementptr inbounds %68, %68* %22, i32 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = load %68*, %68** %4, align 8
  %26 = getelementptr inbounds %68, %68* %25, i32 0, i32 2
  store i32 %24, i32* %26, align 8
  %27 = load %68*, %68** %3, align 8
  %28 = getelementptr inbounds %68, %68* %27, i32 0, i32 0
  %29 = load %59*, %59** %28, align 8
  %30 = icmp ne %59* %29, null
  br i1 %30, label %31, label %38

31:                                               ; preds = %1
  %32 = load %68*, %68** %3, align 8
  %33 = getelementptr inbounds %68, %68* %32, i32 0, i32 0
  %34 = load %59*, %59** %33, align 8
  %35 = call %59* @timelib_rel_time_clone(%59* %34)
  %36 = load %68*, %68** %4, align 8
  %37 = getelementptr inbounds %68, %68* %36, i32 0, i32 0
  store %59* %35, %59** %37, align 8
  br label %38

38:                                               ; preds = %31, %1
  %39 = load %68*, %68** %4, align 8
  %40 = getelementptr inbounds %68, %68* %39, i32 0, i32 3
  %41 = bitcast %68** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #15
  %42 = bitcast %68** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #15
  ret %15* %40
}

; Function Attrs: nounwind uwtable
define internal i32 @548(%29* %0, %29* %1, i32 %2, i8** %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %29*, align 8
  %7 = alloca %29*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca %68*, align 8
  %11 = alloca %29, align 8
  %12 = alloca %29, align 8
  %13 = alloca %29*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %29*, align 8
  %16 = alloca %29*, align 8
  %17 = alloca %63*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %29* %0, %29** %6, align 8
  store %29* %1, %29** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8** %3, i8*** %9, align 8
  %20 = bitcast %68** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = bitcast %29* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %21) #15
  %22 = bitcast %29* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %22) #15
  %23 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #15
  %24 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #15
  store i32 0, i32* %14, align 4
  %25 = load %29*, %29** %7, align 8
  %26 = call zeroext i8 @490(%29* %25)
  %27 = zext i8 %26 to i32
  %28 = icmp ne i32 %27, 6
  %29 = xor i1 %28, true
  %30 = xor i1 %29, true
  %31 = zext i1 %30 to i32
  %32 = sext i32 %31 to i64
  %33 = call i64 @llvm.expect.i64(i64 %32, i64 0)
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %82

35:                                               ; preds = %4
  br label %36

36:                                               ; preds = %35
  %37 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #15
  store %29* %11, %29** %15, align 8
  %38 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #15
  %39 = load %29*, %29** %7, align 8
  store %29* %39, %29** %16, align 8
  %40 = bitcast %63** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #15
  %41 = load %29*, %29** %16, align 8
  %42 = getelementptr inbounds %29, %29* %41, i32 0, i32 0
  %43 = bitcast %30* %42 to %63**
  %44 = load %63*, %63** %43, align 8
  store %63* %44, %63** %17, align 8
  %45 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #15
  %46 = load %29*, %29** %16, align 8
  %47 = getelementptr inbounds %29, %29* %46, i32 0, i32 1
  %48 = bitcast %31* %47 to i32*
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %18, align 4
  br label %50

50:                                               ; preds = %36
  %51 = load %63*, %63** %17, align 8
  %52 = load %29*, %29** %15, align 8
  %53 = getelementptr inbounds %29, %29* %52, i32 0, i32 0
  %54 = bitcast %30* %53 to %63**
  store %63* %51, %63** %54, align 8
  %55 = load i32, i32* %18, align 4
  %56 = load %29*, %29** %15, align 8
  %57 = getelementptr inbounds %29, %29* %56, i32 0, i32 1
  %58 = bitcast %31* %57 to i32*
  store i32 %55, i32* %58, align 8
  br label %59

59:                                               ; preds = %50
  br label %60

60:                                               ; preds = %59
  %61 = load i32, i32* %18, align 4
  %62 = and i32 %61, 1024
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = load %63*, %63** %17, align 8
  %66 = getelementptr inbounds %63, %63* %65, i32 0, i32 0
  %67 = getelementptr inbounds %8, %8* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %67, align 4
  br label %70

70:                                               ; preds = %64, %60
  %71 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %71) #15
  %72 = bitcast %63** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #15
  %73 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #15
  %74 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #15
  br label %75

75:                                               ; preds = %70
  br label %76

76:                                               ; preds = %75
  %77 = call zeroext i8 @490(%29* %11)
  %78 = zext i8 %77 to i32
  %79 = icmp ne i32 %78, 6
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  call void @_convert_to_string(%29* %11)
  br label %81

81:                                               ; preds = %80, %76
  store %29* %11, %29** %7, align 8
  store i8** null, i8*** %9, align 8
  br label %82

82:                                               ; preds = %81, %4
  %83 = load %29*, %29** %6, align 8
  %84 = getelementptr inbounds %29, %29* %83, i32 0, i32 0
  %85 = bitcast %30* %84 to %15**
  %86 = load %15*, %15** %85, align 8
  %87 = call %68* @505(%15* %86)
  store %68* %87, %68** %10, align 8
  %88 = load %68*, %68** %10, align 8
  %89 = getelementptr inbounds %68, %68* %88, i32 0, i32 2
  %90 = load i32, i32* %89, align 8
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %107, label %92

92:                                               ; preds = %82
  %93 = call %16* @zend_get_std_object_handlers()
  %94 = getelementptr inbounds %16, %16* %93, i32 0, i32 11
  %95 = load i32 (%29*, %29*, i32, i8**)*, i32 (%29*, %29*, i32, i8**)** %94, align 8
  %96 = load %29*, %29** %6, align 8
  %97 = load %29*, %29** %7, align 8
  %98 = load i32, i32* %8, align 4
  %99 = load i8**, i8*** %9, align 8
  %100 = call i32 %95(%29* %96, %29* %97, i32 %98, i8** %99)
  store i32 %100, i32* %14, align 4
  %101 = load %29*, %29** %7, align 8
  %102 = icmp eq %29* %101, %11
  br i1 %102, label %103, label %105

103:                                              ; preds = %92
  %104 = load %29*, %29** %7, align 8
  call void @508(%29* %104)
  br label %105

105:                                              ; preds = %103, %92
  %106 = load i32, i32* %14, align 4
  store i32 %106, i32* %5, align 4
  store i32 1, i32* %19, align 4
  br label %152

107:                                              ; preds = %82
  %108 = load %29*, %29** %6, align 8
  %109 = load %29*, %29** %7, align 8
  %110 = load i8**, i8*** %9, align 8
  %111 = call %29* @date_interval_read_property(%29* %108, %29* %109, i32 3, i8** %110, %29* %12)
  store %29* %111, %29** %13, align 8
  %112 = load %29*, %29** %13, align 8
  %113 = icmp ne %29* %112, getelementptr inbounds (%43, %43* @executor_globals, i32 0, i32 0)
  br i1 %113, label %114, label %136

114:                                              ; preds = %107
  %115 = load i32, i32* %8, align 4
  %116 = icmp eq i32 %115, 2
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  store i32 1, i32* %14, align 4
  br label %135

118:                                              ; preds = %114
  %119 = load i32, i32* %8, align 4
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %124

121:                                              ; preds = %118
  %122 = load %29*, %29** %13, align 8
  %123 = call i32 @zend_is_true(%29* %122)
  store i32 %123, i32* %14, align 4
  br label %134

124:                                              ; preds = %118
  %125 = load i32, i32* %8, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %133

127:                                              ; preds = %124
  %128 = load %29*, %29** %13, align 8
  %129 = call zeroext i8 @490(%29* %128)
  %130 = zext i8 %129 to i32
  %131 = icmp ne i32 %130, 1
  %132 = zext i1 %131 to i32
  store i32 %132, i32* %14, align 4
  br label %133

133:                                              ; preds = %127, %124
  br label %134

134:                                              ; preds = %133, %121
  br label %135

135:                                              ; preds = %134, %117
  br label %145

136:                                              ; preds = %107
  %137 = call %16* @zend_get_std_object_handlers()
  %138 = getelementptr inbounds %16, %16* %137, i32 0, i32 11
  %139 = load i32 (%29*, %29*, i32, i8**)*, i32 (%29*, %29*, i32, i8**)** %138, align 8
  %140 = load %29*, %29** %6, align 8
  %141 = load %29*, %29** %7, align 8
  %142 = load i32, i32* %8, align 4
  %143 = load i8**, i8*** %9, align 8
  %144 = call i32 %139(%29* %140, %29* %141, i32 %142, i8** %143)
  store i32 %144, i32* %14, align 4
  br label %145

145:                                              ; preds = %136, %135
  %146 = load %29*, %29** %7, align 8
  %147 = icmp eq %29* %146, %11
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = load %29*, %29** %7, align 8
  call void @508(%29* %149)
  br label %150

150:                                              ; preds = %148, %145
  %151 = load i32, i32* %14, align 4
  store i32 %151, i32* %5, align 4
  store i32 1, i32* %19, align 4
  br label %152

152:                                              ; preds = %150, %105
  %153 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %153) #15
  %154 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #15
  %155 = bitcast %29* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %155) #15
  %156 = bitcast %29* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %156) #15
  %157 = bitcast %68** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #15
  %158 = load i32, i32* %5, align 4
  ret i32 %158
}

; Function Attrs: nounwind uwtable
define internal %7* @549(%29* %0) #0 {
  %2 = alloca %7*, align 8
  %3 = alloca %29*, align 8
  %4 = alloca %7*, align 8
  %5 = alloca %29, align 8
  %6 = alloca %68*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %29*, align 8
  %9 = alloca %29*, align 8
  %10 = alloca %29*, align 8
  %11 = alloca %29*, align 8
  %12 = alloca %29*, align 8
  %13 = alloca %29*, align 8
  %14 = alloca %29*, align 8
  %15 = alloca %29*, align 8
  %16 = alloca %29*, align 8
  %17 = alloca %29*, align 8
  %18 = alloca %29*, align 8
  %19 = alloca %29*, align 8
  %20 = alloca %29*, align 8
  %21 = alloca %29*, align 8
  %22 = alloca %29*, align 8
  %23 = alloca %29*, align 8
  store %29* %0, %29** %3, align 8
  %24 = bitcast %7** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #15
  %25 = bitcast %29* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %25) #15
  %26 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #15
  %27 = load %29*, %29** %3, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 0
  %29 = bitcast %30* %28 to %15**
  %30 = load %15*, %15** %29, align 8
  %31 = call %68* @505(%15* %30)
  store %68* %31, %68** %6, align 8
  %32 = load %29*, %29** %3, align 8
  %33 = call %7* @zend_std_get_properties(%29* %32)
  store %7* %33, %7** %4, align 8
  %34 = load %68*, %68** %6, align 8
  %35 = getelementptr inbounds %68, %68* %34, i32 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %1
  %39 = load %7*, %7** %4, align 8
  store %7* %39, %7** %2, align 8
  store i32 1, i32* %7, align 4
  br label %309

40:                                               ; preds = %1
  %41 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #15
  store %29* %5, %29** %8, align 8
  %42 = load %68*, %68** %6, align 8
  %43 = getelementptr inbounds %68, %68* %42, i32 0, i32 0
  %44 = load %59*, %59** %43, align 8
  %45 = getelementptr inbounds %59, %59* %44, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = load %29*, %29** %8, align 8
  %48 = getelementptr inbounds %29, %29* %47, i32 0, i32 0
  %49 = bitcast %30* %48 to i64*
  store i64 %46, i64* %49, align 8
  %50 = load %29*, %29** %8, align 8
  %51 = getelementptr inbounds %29, %29* %50, i32 0, i32 1
  %52 = bitcast %31* %51 to i32*
  store i32 4, i32* %52, align 8
  %53 = bitcast %29** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #15
  %54 = load %7*, %7** %4, align 8
  %55 = call %29* @_zend_hash_str_update(%7* %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @251, i32 0, i32 0), i64 1, %29* %5)
  %56 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #15
  store %29* %5, %29** %9, align 8
  %57 = load %68*, %68** %6, align 8
  %58 = getelementptr inbounds %68, %68* %57, i32 0, i32 0
  %59 = load %59*, %59** %58, align 8
  %60 = getelementptr inbounds %59, %59* %59, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = load %29*, %29** %9, align 8
  %63 = getelementptr inbounds %29, %29* %62, i32 0, i32 0
  %64 = bitcast %30* %63 to i64*
  store i64 %61, i64* %64, align 8
  %65 = load %29*, %29** %9, align 8
  %66 = getelementptr inbounds %29, %29* %65, i32 0, i32 1
  %67 = bitcast %31* %66 to i32*
  store i32 4, i32* %67, align 8
  %68 = bitcast %29** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %68) #15
  %69 = load %7*, %7** %4, align 8
  %70 = call %29* @_zend_hash_str_update(%7* %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @252, i32 0, i32 0), i64 1, %29* %5)
  %71 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #15
  store %29* %5, %29** %10, align 8
  %72 = load %68*, %68** %6, align 8
  %73 = getelementptr inbounds %68, %68* %72, i32 0, i32 0
  %74 = load %59*, %59** %73, align 8
  %75 = getelementptr inbounds %59, %59* %74, i32 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = load %29*, %29** %10, align 8
  %78 = getelementptr inbounds %29, %29* %77, i32 0, i32 0
  %79 = bitcast %30* %78 to i64*
  store i64 %76, i64* %79, align 8
  %80 = load %29*, %29** %10, align 8
  %81 = getelementptr inbounds %29, %29* %80, i32 0, i32 1
  %82 = bitcast %31* %81 to i32*
  store i32 4, i32* %82, align 8
  %83 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #15
  %84 = load %7*, %7** %4, align 8
  %85 = call %29* @_zend_hash_str_update(%7* %84, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @253, i32 0, i32 0), i64 1, %29* %5)
  %86 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %86) #15
  store %29* %5, %29** %11, align 8
  %87 = load %68*, %68** %6, align 8
  %88 = getelementptr inbounds %68, %68* %87, i32 0, i32 0
  %89 = load %59*, %59** %88, align 8
  %90 = getelementptr inbounds %59, %59* %89, i32 0, i32 3
  %91 = load i64, i64* %90, align 8
  %92 = load %29*, %29** %11, align 8
  %93 = getelementptr inbounds %29, %29* %92, i32 0, i32 0
  %94 = bitcast %30* %93 to i64*
  store i64 %91, i64* %94, align 8
  %95 = load %29*, %29** %11, align 8
  %96 = getelementptr inbounds %29, %29* %95, i32 0, i32 1
  %97 = bitcast %31* %96 to i32*
  store i32 4, i32* %97, align 8
  %98 = bitcast %29** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #15
  %99 = load %7*, %7** %4, align 8
  %100 = call %29* @_zend_hash_str_update(%7* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @254, i32 0, i32 0), i64 1, %29* %5)
  %101 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %101) #15
  store %29* %5, %29** %12, align 8
  %102 = load %68*, %68** %6, align 8
  %103 = getelementptr inbounds %68, %68* %102, i32 0, i32 0
  %104 = load %59*, %59** %103, align 8
  %105 = getelementptr inbounds %59, %59* %104, i32 0, i32 4
  %106 = load i64, i64* %105, align 8
  %107 = load %29*, %29** %12, align 8
  %108 = getelementptr inbounds %29, %29* %107, i32 0, i32 0
  %109 = bitcast %30* %108 to i64*
  store i64 %106, i64* %109, align 8
  %110 = load %29*, %29** %12, align 8
  %111 = getelementptr inbounds %29, %29* %110, i32 0, i32 1
  %112 = bitcast %31* %111 to i32*
  store i32 4, i32* %112, align 8
  %113 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #15
  %114 = load %7*, %7** %4, align 8
  %115 = call %29* @_zend_hash_str_update(%7* %114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @255, i32 0, i32 0), i64 1, %29* %5)
  %116 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %116) #15
  store %29* %5, %29** %13, align 8
  %117 = load %68*, %68** %6, align 8
  %118 = getelementptr inbounds %68, %68* %117, i32 0, i32 0
  %119 = load %59*, %59** %118, align 8
  %120 = getelementptr inbounds %59, %59* %119, i32 0, i32 5
  %121 = load i64, i64* %120, align 8
  %122 = load %29*, %29** %13, align 8
  %123 = getelementptr inbounds %29, %29* %122, i32 0, i32 0
  %124 = bitcast %30* %123 to i64*
  store i64 %121, i64* %124, align 8
  %125 = load %29*, %29** %13, align 8
  %126 = getelementptr inbounds %29, %29* %125, i32 0, i32 1
  %127 = bitcast %31* %126 to i32*
  store i32 4, i32* %127, align 8
  %128 = bitcast %29** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #15
  %129 = load %7*, %7** %4, align 8
  %130 = call %29* @_zend_hash_str_update(%7* %129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @256, i32 0, i32 0), i64 1, %29* %5)
  %131 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %131) #15
  store %29* %5, %29** %14, align 8
  %132 = load %68*, %68** %6, align 8
  %133 = getelementptr inbounds %68, %68* %132, i32 0, i32 0
  %134 = load %59*, %59** %133, align 8
  %135 = getelementptr inbounds %59, %59* %134, i32 0, i32 6
  %136 = load i64, i64* %135, align 8
  %137 = sitofp i64 %136 to double
  %138 = fdiv double %137, 1.000000e+06
  %139 = load %29*, %29** %14, align 8
  %140 = getelementptr inbounds %29, %29* %139, i32 0, i32 0
  %141 = bitcast %30* %140 to double*
  store double %138, double* %141, align 8
  %142 = load %29*, %29** %14, align 8
  %143 = getelementptr inbounds %29, %29* %142, i32 0, i32 1
  %144 = bitcast %31* %143 to i32*
  store i32 5, i32* %144, align 8
  %145 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #15
  %146 = load %7*, %7** %4, align 8
  %147 = call %29* @_zend_hash_str_update(%7* %146, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @257, i32 0, i32 0), i64 1, %29* %5)
  %148 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %148) #15
  store %29* %5, %29** %15, align 8
  %149 = load %68*, %68** %6, align 8
  %150 = getelementptr inbounds %68, %68* %149, i32 0, i32 0
  %151 = load %59*, %59** %150, align 8
  %152 = getelementptr inbounds %59, %59* %151, i32 0, i32 7
  %153 = load i32, i32* %152, align 8
  %154 = sext i32 %153 to i64
  %155 = load %29*, %29** %15, align 8
  %156 = getelementptr inbounds %29, %29* %155, i32 0, i32 0
  %157 = bitcast %30* %156 to i64*
  store i64 %154, i64* %157, align 8
  %158 = load %29*, %29** %15, align 8
  %159 = getelementptr inbounds %29, %29* %158, i32 0, i32 1
  %160 = bitcast %31* %159 to i32*
  store i32 4, i32* %160, align 8
  %161 = bitcast %29** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161) #15
  %162 = load %7*, %7** %4, align 8
  %163 = call %29* @_zend_hash_str_update(%7* %162, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @206, i32 0, i32 0), i64 7, %29* %5)
  %164 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %164) #15
  store %29* %5, %29** %16, align 8
  %165 = load %68*, %68** %6, align 8
  %166 = getelementptr inbounds %68, %68* %165, i32 0, i32 0
  %167 = load %59*, %59** %166, align 8
  %168 = getelementptr inbounds %59, %59* %167, i32 0, i32 8
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = load %29*, %29** %16, align 8
  %172 = getelementptr inbounds %29, %29* %171, i32 0, i32 0
  %173 = bitcast %30* %172 to i64*
  store i64 %170, i64* %173, align 8
  %174 = load %29*, %29** %16, align 8
  %175 = getelementptr inbounds %29, %29* %174, i32 0, i32 1
  %176 = bitcast %31* %175 to i32*
  store i32 4, i32* %176, align 8
  %177 = bitcast %29** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %177) #15
  %178 = load %7*, %7** %4, align 8
  %179 = call %29* @_zend_hash_str_update(%7* %178, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @423, i32 0, i32 0), i64 16, %29* %5)
  %180 = bitcast %29** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %180) #15
  store %29* %5, %29** %17, align 8
  %181 = load %68*, %68** %6, align 8
  %182 = getelementptr inbounds %68, %68* %181, i32 0, i32 0
  %183 = load %59*, %59** %182, align 8
  %184 = getelementptr inbounds %59, %59* %183, i32 0, i32 9
  %185 = load i32, i32* %184, align 8
  %186 = sext i32 %185 to i64
  %187 = load %29*, %29** %17, align 8
  %188 = getelementptr inbounds %29, %29* %187, i32 0, i32 0
  %189 = bitcast %30* %188 to i64*
  store i64 %186, i64* %189, align 8
  %190 = load %29*, %29** %17, align 8
  %191 = getelementptr inbounds %29, %29* %190, i32 0, i32 1
  %192 = bitcast %31* %191 to i32*
  store i32 4, i32* %192, align 8
  %193 = bitcast %29** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #15
  %194 = load %7*, %7** %4, align 8
  %195 = call %29* @_zend_hash_str_update(%7* %194, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @424, i32 0, i32 0), i64 17, %29* %5)
  %196 = bitcast %29** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %196) #15
  store %29* %5, %29** %18, align 8
  %197 = load %68*, %68** %6, align 8
  %198 = getelementptr inbounds %68, %68* %197, i32 0, i32 0
  %199 = load %59*, %59** %198, align 8
  %200 = getelementptr inbounds %59, %59* %199, i32 0, i32 10
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = load %29*, %29** %18, align 8
  %204 = getelementptr inbounds %29, %29* %203, i32 0, i32 0
  %205 = bitcast %30* %204 to i64*
  store i64 %202, i64* %205, align 8
  %206 = load %29*, %29** %18, align 8
  %207 = getelementptr inbounds %29, %29* %206, i32 0, i32 1
  %208 = bitcast %31* %207 to i32*
  store i32 4, i32* %208, align 8
  %209 = bitcast %29** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %209) #15
  %210 = load %7*, %7** %4, align 8
  %211 = call %29* @_zend_hash_str_update(%7* %210, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @258, i32 0, i32 0), i64 6, %29* %5)
  %212 = load %68*, %68** %6, align 8
  %213 = getelementptr inbounds %68, %68* %212, i32 0, i32 0
  %214 = load %59*, %59** %213, align 8
  %215 = getelementptr inbounds %59, %59* %214, i32 0, i32 11
  %216 = load i64, i64* %215, align 8
  %217 = icmp ne i64 %216, -99999
  br i1 %217, label %218, label %234

218:                                              ; preds = %40
  %219 = bitcast %29** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %219) #15
  store %29* %5, %29** %19, align 8
  %220 = load %68*, %68** %6, align 8
  %221 = getelementptr inbounds %68, %68* %220, i32 0, i32 0
  %222 = load %59*, %59** %221, align 8
  %223 = getelementptr inbounds %59, %59* %222, i32 0, i32 11
  %224 = load i64, i64* %223, align 8
  %225 = load %29*, %29** %19, align 8
  %226 = getelementptr inbounds %29, %29* %225, i32 0, i32 0
  %227 = bitcast %30* %226 to i64*
  store i64 %224, i64* %227, align 8
  %228 = load %29*, %29** %19, align 8
  %229 = getelementptr inbounds %29, %29* %228, i32 0, i32 1
  %230 = bitcast %31* %229 to i32*
  store i32 4, i32* %230, align 8
  %231 = bitcast %29** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #15
  %232 = load %7*, %7** %4, align 8
  %233 = call %29* @_zend_hash_str_update(%7* %232, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @259, i32 0, i32 0), i64 4, %29* %5)
  br label %242

234:                                              ; preds = %40
  br label %235

235:                                              ; preds = %234
  %236 = getelementptr inbounds %29, %29* %5, i32 0, i32 1
  %237 = bitcast %31* %236 to i32*
  store i32 2, i32* %237, align 8
  br label %238

238:                                              ; preds = %235
  br label %239

239:                                              ; preds = %238
  %240 = load %7*, %7** %4, align 8
  %241 = call %29* @_zend_hash_str_update(%7* %240, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @259, i32 0, i32 0), i64 4, %29* %5)
  br label %242

242:                                              ; preds = %239, %218
  %243 = bitcast %29** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %243) #15
  store %29* %5, %29** %20, align 8
  %244 = load %68*, %68** %6, align 8
  %245 = getelementptr inbounds %68, %68* %244, i32 0, i32 0
  %246 = load %59*, %59** %245, align 8
  %247 = getelementptr inbounds %59, %59* %246, i32 0, i32 12
  %248 = getelementptr inbounds %60, %60* %247, i32 0, i32 0
  %249 = load i32, i32* %248, align 8
  %250 = zext i32 %249 to i64
  %251 = load %29*, %29** %20, align 8
  %252 = getelementptr inbounds %29, %29* %251, i32 0, i32 0
  %253 = bitcast %30* %252 to i64*
  store i64 %250, i64* %253, align 8
  %254 = load %29*, %29** %20, align 8
  %255 = getelementptr inbounds %29, %29* %254, i32 0, i32 1
  %256 = bitcast %31* %255 to i32*
  store i32 4, i32* %256, align 8
  %257 = bitcast %29** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #15
  %258 = load %7*, %7** %4, align 8
  %259 = call %29* @_zend_hash_str_update(%7* %258, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @425, i32 0, i32 0), i64 12, %29* %5)
  %260 = bitcast %29** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %260) #15
  store %29* %5, %29** %21, align 8
  %261 = load %68*, %68** %6, align 8
  %262 = getelementptr inbounds %68, %68* %261, i32 0, i32 0
  %263 = load %59*, %59** %262, align 8
  %264 = getelementptr inbounds %59, %59* %263, i32 0, i32 12
  %265 = getelementptr inbounds %60, %60* %264, i32 0, i32 1
  %266 = load i64, i64* %265, align 8
  %267 = load %29*, %29** %21, align 8
  %268 = getelementptr inbounds %29, %29* %267, i32 0, i32 0
  %269 = bitcast %30* %268 to i64*
  store i64 %266, i64* %269, align 8
  %270 = load %29*, %29** %21, align 8
  %271 = getelementptr inbounds %29, %29* %270, i32 0, i32 1
  %272 = bitcast %31* %271 to i32*
  store i32 4, i32* %272, align 8
  %273 = bitcast %29** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #15
  %274 = load %7*, %7** %4, align 8
  %275 = call %29* @_zend_hash_str_update(%7* %274, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @426, i32 0, i32 0), i64 14, %29* %5)
  %276 = bitcast %29** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %276) #15
  store %29* %5, %29** %22, align 8
  %277 = load %68*, %68** %6, align 8
  %278 = getelementptr inbounds %68, %68* %277, i32 0, i32 0
  %279 = load %59*, %59** %278, align 8
  %280 = getelementptr inbounds %59, %59* %279, i32 0, i32 13
  %281 = load i32, i32* %280, align 8
  %282 = zext i32 %281 to i64
  %283 = load %29*, %29** %22, align 8
  %284 = getelementptr inbounds %29, %29* %283, i32 0, i32 0
  %285 = bitcast %30* %284 to i64*
  store i64 %282, i64* %285, align 8
  %286 = load %29*, %29** %22, align 8
  %287 = getelementptr inbounds %29, %29* %286, i32 0, i32 1
  %288 = bitcast %31* %287 to i32*
  store i32 4, i32* %288, align 8
  %289 = bitcast %29** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %289) #15
  %290 = load %7*, %7** %4, align 8
  %291 = call %29* @_zend_hash_str_update(%7* %290, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @427, i32 0, i32 0), i64 21, %29* %5)
  %292 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %292) #15
  store %29* %5, %29** %23, align 8
  %293 = load %68*, %68** %6, align 8
  %294 = getelementptr inbounds %68, %68* %293, i32 0, i32 0
  %295 = load %59*, %59** %294, align 8
  %296 = getelementptr inbounds %59, %59* %295, i32 0, i32 14
  %297 = load i32, i32* %296, align 4
  %298 = zext i32 %297 to i64
  %299 = load %29*, %29** %23, align 8
  %300 = getelementptr inbounds %29, %29* %299, i32 0, i32 0
  %301 = bitcast %30* %300 to i64*
  store i64 %298, i64* %301, align 8
  %302 = load %29*, %29** %23, align 8
  %303 = getelementptr inbounds %29, %29* %302, i32 0, i32 1
  %304 = bitcast %31* %303 to i32*
  store i32 4, i32* %304, align 8
  %305 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305) #15
  %306 = load %7*, %7** %4, align 8
  %307 = call %29* @_zend_hash_str_update(%7* %306, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @428, i32 0, i32 0), i64 21, %29* %5)
  %308 = load %7*, %7** %4, align 8
  store %7* %308, %7** %2, align 8
  store i32 1, i32* %7, align 4
  br label %309

309:                                              ; preds = %242, %38
  %310 = bitcast %68** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %310) #15
  %311 = bitcast %29* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %311) #15
  %312 = bitcast %7** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %312) #15
  %313 = load %7*, %7** %2, align 8
  ret %7* %313
}

; Function Attrs: nounwind uwtable
define internal %29* @550(%29* %0, %29* %1, i32 %2, i8** %3) #0 {
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8**, align 8
  %9 = alloca %29, align 8
  %10 = alloca %29*, align 8
  store %29* %0, %29** %5, align 8
  store %29* %1, %29** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8** %3, i8*** %8, align 8
  %11 = bitcast %29* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #15
  %12 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #15
  %13 = load %29*, %29** %6, align 8
  %14 = call zeroext i8 @490(%29* %13)
  %15 = zext i8 %14 to i32
  %16 = icmp ne i32 %15, 6
  br i1 %16, label %17, label %26

17:                                               ; preds = %4
  %18 = load %29*, %29** %6, align 8
  %19 = bitcast %29* %9 to i8*
  %20 = bitcast %29* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false)
  call void @511(%29* %9)
  %21 = call zeroext i8 @490(%29* %9)
  %22 = zext i8 %21 to i32
  %23 = icmp ne i32 %22, 6
  br i1 %23, label %24, label %25

24:                                               ; preds = %17
  call void @_convert_to_string(%29* %9)
  br label %25

25:                                               ; preds = %24, %17
  store %29* %9, %29** %6, align 8
  store i8** null, i8*** %8, align 8
  br label %26

26:                                               ; preds = %25, %4
  %27 = load %29*, %29** %6, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 0
  %29 = bitcast %30* %28 to %28**
  %30 = load %28*, %28** %29, align 8
  %31 = getelementptr inbounds %28, %28* %30, i32 0, i32 3
  %32 = getelementptr inbounds [1 x i8], [1 x i8]* %31, i32 0, i32 0
  %33 = load %29*, %29** %6, align 8
  %34 = getelementptr inbounds %29, %29* %33, i32 0, i32 0
  %35 = bitcast %30* %34 to %28**
  %36 = load %28*, %28** %35, align 8
  %37 = getelementptr inbounds %28, %28* %36, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = call i32 @zend_binary_strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @251, i32 0, i32 0), i64 1, i8* %32, i64 %38)
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %161, label %41

41:                                               ; preds = %26
  %42 = load %29*, %29** %6, align 8
  %43 = getelementptr inbounds %29, %29* %42, i32 0, i32 0
  %44 = bitcast %30* %43 to %28**
  %45 = load %28*, %28** %44, align 8
  %46 = getelementptr inbounds %28, %28* %45, i32 0, i32 3
  %47 = getelementptr inbounds [1 x i8], [1 x i8]* %46, i32 0, i32 0
  %48 = load %29*, %29** %6, align 8
  %49 = getelementptr inbounds %29, %29* %48, i32 0, i32 0
  %50 = bitcast %30* %49 to %28**
  %51 = load %28*, %28** %50, align 8
  %52 = getelementptr inbounds %28, %28* %51, i32 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = call i32 @zend_binary_strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @252, i32 0, i32 0), i64 1, i8* %47, i64 %53)
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %161, label %56

56:                                               ; preds = %41
  %57 = load %29*, %29** %6, align 8
  %58 = getelementptr inbounds %29, %29* %57, i32 0, i32 0
  %59 = bitcast %30* %58 to %28**
  %60 = load %28*, %28** %59, align 8
  %61 = getelementptr inbounds %28, %28* %60, i32 0, i32 3
  %62 = getelementptr inbounds [1 x i8], [1 x i8]* %61, i32 0, i32 0
  %63 = load %29*, %29** %6, align 8
  %64 = getelementptr inbounds %29, %29* %63, i32 0, i32 0
  %65 = bitcast %30* %64 to %28**
  %66 = load %28*, %28** %65, align 8
  %67 = getelementptr inbounds %28, %28* %66, i32 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = call i32 @zend_binary_strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @253, i32 0, i32 0), i64 1, i8* %62, i64 %68)
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %161, label %71

71:                                               ; preds = %56
  %72 = load %29*, %29** %6, align 8
  %73 = getelementptr inbounds %29, %29* %72, i32 0, i32 0
  %74 = bitcast %30* %73 to %28**
  %75 = load %28*, %28** %74, align 8
  %76 = getelementptr inbounds %28, %28* %75, i32 0, i32 3
  %77 = getelementptr inbounds [1 x i8], [1 x i8]* %76, i32 0, i32 0
  %78 = load %29*, %29** %6, align 8
  %79 = getelementptr inbounds %29, %29* %78, i32 0, i32 0
  %80 = bitcast %30* %79 to %28**
  %81 = load %28*, %28** %80, align 8
  %82 = getelementptr inbounds %28, %28* %81, i32 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = call i32 @zend_binary_strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @254, i32 0, i32 0), i64 1, i8* %77, i64 %83)
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %161, label %86

86:                                               ; preds = %71
  %87 = load %29*, %29** %6, align 8
  %88 = getelementptr inbounds %29, %29* %87, i32 0, i32 0
  %89 = bitcast %30* %88 to %28**
  %90 = load %28*, %28** %89, align 8
  %91 = getelementptr inbounds %28, %28* %90, i32 0, i32 3
  %92 = getelementptr inbounds [1 x i8], [1 x i8]* %91, i32 0, i32 0
  %93 = load %29*, %29** %6, align 8
  %94 = getelementptr inbounds %29, %29* %93, i32 0, i32 0
  %95 = bitcast %30* %94 to %28**
  %96 = load %28*, %28** %95, align 8
  %97 = getelementptr inbounds %28, %28* %96, i32 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = call i32 @zend_binary_strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @255, i32 0, i32 0), i64 1, i8* %92, i64 %98)
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %161, label %101

101:                                              ; preds = %86
  %102 = load %29*, %29** %6, align 8
  %103 = getelementptr inbounds %29, %29* %102, i32 0, i32 0
  %104 = bitcast %30* %103 to %28**
  %105 = load %28*, %28** %104, align 8
  %106 = getelementptr inbounds %28, %28* %105, i32 0, i32 3
  %107 = getelementptr inbounds [1 x i8], [1 x i8]* %106, i32 0, i32 0
  %108 = load %29*, %29** %6, align 8
  %109 = getelementptr inbounds %29, %29* %108, i32 0, i32 0
  %110 = bitcast %30* %109 to %28**
  %111 = load %28*, %28** %110, align 8
  %112 = getelementptr inbounds %28, %28* %111, i32 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = call i32 @zend_binary_strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @256, i32 0, i32 0), i64 1, i8* %107, i64 %113)
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %161, label %116

116:                                              ; preds = %101
  %117 = load %29*, %29** %6, align 8
  %118 = getelementptr inbounds %29, %29* %117, i32 0, i32 0
  %119 = bitcast %30* %118 to %28**
  %120 = load %28*, %28** %119, align 8
  %121 = getelementptr inbounds %28, %28* %120, i32 0, i32 3
  %122 = getelementptr inbounds [1 x i8], [1 x i8]* %121, i32 0, i32 0
  %123 = load %29*, %29** %6, align 8
  %124 = getelementptr inbounds %29, %29* %123, i32 0, i32 0
  %125 = bitcast %30* %124 to %28**
  %126 = load %28*, %28** %125, align 8
  %127 = getelementptr inbounds %28, %28* %126, i32 0, i32 2
  %128 = load i64, i64* %127, align 8
  %129 = call i32 @zend_binary_strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @257, i32 0, i32 0), i64 1, i8* %122, i64 %128)
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %161, label %131

131:                                              ; preds = %116
  %132 = load %29*, %29** %6, align 8
  %133 = getelementptr inbounds %29, %29* %132, i32 0, i32 0
  %134 = bitcast %30* %133 to %28**
  %135 = load %28*, %28** %134, align 8
  %136 = getelementptr inbounds %28, %28* %135, i32 0, i32 3
  %137 = getelementptr inbounds [1 x i8], [1 x i8]* %136, i32 0, i32 0
  %138 = load %29*, %29** %6, align 8
  %139 = getelementptr inbounds %29, %29* %138, i32 0, i32 0
  %140 = bitcast %30* %139 to %28**
  %141 = load %28*, %28** %140, align 8
  %142 = getelementptr inbounds %28, %28* %141, i32 0, i32 2
  %143 = load i64, i64* %142, align 8
  %144 = call i32 @zend_binary_strcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @259, i32 0, i32 0), i64 4, i8* %137, i64 %143)
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %161, label %146

146:                                              ; preds = %131
  %147 = load %29*, %29** %6, align 8
  %148 = getelementptr inbounds %29, %29* %147, i32 0, i32 0
  %149 = bitcast %30* %148 to %28**
  %150 = load %28*, %28** %149, align 8
  %151 = getelementptr inbounds %28, %28* %150, i32 0, i32 3
  %152 = getelementptr inbounds [1 x i8], [1 x i8]* %151, i32 0, i32 0
  %153 = load %29*, %29** %6, align 8
  %154 = getelementptr inbounds %29, %29* %153, i32 0, i32 0
  %155 = bitcast %30* %154 to %28**
  %156 = load %28*, %28** %155, align 8
  %157 = getelementptr inbounds %28, %28* %156, i32 0, i32 2
  %158 = load i64, i64* %157, align 8
  %159 = call i32 @zend_binary_strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @258, i32 0, i32 0), i64 6, i8* %152, i64 %158)
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %146, %131, %116, %101, %86, %71, %56, %41, %26
  store %29* null, %29** %10, align 8
  br label %171

162:                                              ; preds = %146
  %163 = call %16* @zend_get_std_object_handlers()
  %164 = getelementptr inbounds %16, %16* %163, i32 0, i32 8
  %165 = load %29* (%29*, %29*, i32, i8**)*, %29* (%29*, %29*, i32, i8**)** %164, align 8
  %166 = load %29*, %29** %5, align 8
  %167 = load %29*, %29** %6, align 8
  %168 = load i32, i32* %7, align 4
  %169 = load i8**, i8*** %8, align 8
  %170 = call %29* %165(%29* %166, %29* %167, i32 %168, i8** %169)
  store %29* %170, %29** %10, align 8
  br label %171

171:                                              ; preds = %162, %161
  %172 = load %29*, %29** %6, align 8
  %173 = icmp eq %29* %172, %9
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  %175 = load %29*, %29** %6, align 8
  call void @508(%29* %175)
  br label %176

176:                                              ; preds = %174, %171
  %177 = load %29*, %29** %10, align 8
  %178 = bitcast %29** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %178) #15
  %179 = bitcast %29* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %179) #15
  ret %29* %177
}

; Function Attrs: nounwind uwtable
define internal %7* @551(%29* %0, %29** %1, i32* %2) #0 {
  %4 = alloca %29*, align 8
  %5 = alloca %29**, align 8
  %6 = alloca i32*, align 8
  store %29* %0, %29** %4, align 8
  store %29** %1, %29*** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %29**, %29*** %5, align 8
  store %29* null, %29** %7, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 0, i32* %8, align 4
  %9 = load %29*, %29** %4, align 8
  %10 = call %7* @zend_std_get_properties(%29* %9)
  ret %7* %10
}

; Function Attrs: nounwind uwtable
define internal %15* @552(%6* %0) #0 {
  %2 = alloca %6*, align 8
  store %6* %0, %6** %2, align 8
  %3 = load %6*, %6** %2, align 8
  %4 = call %15* @563(%6* %3, i32 1)
  ret %15* %4
}

; Function Attrs: nounwind uwtable
define internal void @553(%15* %0) #0 {
  %2 = alloca %15*, align 8
  %3 = alloca %71*, align 8
  store %15* %0, %15** %2, align 8
  %4 = bitcast %71** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #15
  %5 = load %15*, %15** %2, align 8
  %6 = call %71* @482(%15* %5)
  store %71* %6, %71** %3, align 8
  %7 = load %71*, %71** %3, align 8
  %8 = getelementptr inbounds %71, %71* %7, i32 0, i32 0
  %9 = load %52*, %52** %8, align 8
  %10 = icmp ne %52* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = load %71*, %71** %3, align 8
  %13 = getelementptr inbounds %71, %71* %12, i32 0, i32 0
  %14 = load %52*, %52** %13, align 8
  call void @timelib_time_dtor(%52* %14)
  br label %15

15:                                               ; preds = %11, %1
  %16 = load %71*, %71** %3, align 8
  %17 = getelementptr inbounds %71, %71* %16, i32 0, i32 2
  %18 = load %52*, %52** %17, align 8
  %19 = icmp ne %52* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = load %71*, %71** %3, align 8
  %22 = getelementptr inbounds %71, %71* %21, i32 0, i32 2
  %23 = load %52*, %52** %22, align 8
  call void @timelib_time_dtor(%52* %23)
  br label %24

24:                                               ; preds = %20, %15
  %25 = load %71*, %71** %3, align 8
  %26 = getelementptr inbounds %71, %71* %25, i32 0, i32 3
  %27 = load %52*, %52** %26, align 8
  %28 = icmp ne %52* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = load %71*, %71** %3, align 8
  %31 = getelementptr inbounds %71, %71* %30, i32 0, i32 3
  %32 = load %52*, %52** %31, align 8
  call void @timelib_time_dtor(%52* %32)
  br label %33

33:                                               ; preds = %29, %24
  %34 = load %71*, %71** %3, align 8
  %35 = getelementptr inbounds %71, %71* %34, i32 0, i32 4
  %36 = load %59*, %59** %35, align 8
  call void @timelib_rel_time_dtor(%59* %36)
  %37 = load %71*, %71** %3, align 8
  %38 = getelementptr inbounds %71, %71* %37, i32 0, i32 8
  call void @zend_object_std_dtor(%15* %38)
  %39 = bitcast %71** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #15
  ret void
}

; Function Attrs: nounwind uwtable
define internal %15* @554(%29* %0) #0 {
  %2 = alloca %29*, align 8
  %3 = alloca %71*, align 8
  %4 = alloca %71*, align 8
  store %29* %0, %29** %2, align 8
  %5 = bitcast %71** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #15
  %6 = load %29*, %29** %2, align 8
  %7 = getelementptr inbounds %29, %29* %6, i32 0, i32 0
  %8 = bitcast %30* %7 to %15**
  %9 = load %15*, %15** %8, align 8
  %10 = call %71* @482(%15* %9)
  store %71* %10, %71** %3, align 8
  %11 = bitcast %71** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = load %71*, %71** %3, align 8
  %13 = getelementptr inbounds %71, %71* %12, i32 0, i32 8
  %14 = getelementptr inbounds %15, %15* %13, i32 0, i32 2
  %15 = load %6*, %6** %14, align 8
  %16 = call %15* @563(%6* %15, i32 0)
  %17 = call %71* @482(%15* %16)
  store %71* %17, %71** %4, align 8
  %18 = load %71*, %71** %4, align 8
  %19 = getelementptr inbounds %71, %71* %18, i32 0, i32 8
  %20 = load %71*, %71** %3, align 8
  %21 = getelementptr inbounds %71, %71* %20, i32 0, i32 8
  call void @zend_objects_clone_members(%15* %19, %15* %21)
  %22 = load %71*, %71** %3, align 8
  %23 = getelementptr inbounds %71, %71* %22, i32 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = load %71*, %71** %4, align 8
  %26 = getelementptr inbounds %71, %71* %25, i32 0, i32 6
  store i32 %24, i32* %26, align 4
  %27 = load %71*, %71** %3, align 8
  %28 = getelementptr inbounds %71, %71* %27, i32 0, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = load %71*, %71** %4, align 8
  %31 = getelementptr inbounds %71, %71* %30, i32 0, i32 5
  store i32 %29, i32* %31, align 8
  %32 = load %71*, %71** %3, align 8
  %33 = getelementptr inbounds %71, %71* %32, i32 0, i32 7
  %34 = load i32, i32* %33, align 8
  %35 = load %71*, %71** %4, align 8
  %36 = getelementptr inbounds %71, %71* %35, i32 0, i32 7
  store i32 %34, i32* %36, align 8
  %37 = load %71*, %71** %3, align 8
  %38 = getelementptr inbounds %71, %71* %37, i32 0, i32 1
  %39 = load %6*, %6** %38, align 8
  %40 = load %71*, %71** %4, align 8
  %41 = getelementptr inbounds %71, %71* %40, i32 0, i32 1
  store %6* %39, %6** %41, align 8
  %42 = load %71*, %71** %3, align 8
  %43 = getelementptr inbounds %71, %71* %42, i32 0, i32 0
  %44 = load %52*, %52** %43, align 8
  %45 = icmp ne %52* %44, null
  br i1 %45, label %46, label %53

46:                                               ; preds = %1
  %47 = load %71*, %71** %3, align 8
  %48 = getelementptr inbounds %71, %71* %47, i32 0, i32 0
  %49 = load %52*, %52** %48, align 8
  %50 = call %52* @timelib_time_clone(%52* %49)
  %51 = load %71*, %71** %4, align 8
  %52 = getelementptr inbounds %71, %71* %51, i32 0, i32 0
  store %52* %50, %52** %52, align 8
  br label %53

53:                                               ; preds = %46, %1
  %54 = load %71*, %71** %3, align 8
  %55 = getelementptr inbounds %71, %71* %54, i32 0, i32 2
  %56 = load %52*, %52** %55, align 8
  %57 = icmp ne %52* %56, null
  br i1 %57, label %58, label %65

58:                                               ; preds = %53
  %59 = load %71*, %71** %3, align 8
  %60 = getelementptr inbounds %71, %71* %59, i32 0, i32 2
  %61 = load %52*, %52** %60, align 8
  %62 = call %52* @timelib_time_clone(%52* %61)
  %63 = load %71*, %71** %4, align 8
  %64 = getelementptr inbounds %71, %71* %63, i32 0, i32 2
  store %52* %62, %52** %64, align 8
  br label %65

65:                                               ; preds = %58, %53
  %66 = load %71*, %71** %3, align 8
  %67 = getelementptr inbounds %71, %71* %66, i32 0, i32 3
  %68 = load %52*, %52** %67, align 8
  %69 = icmp ne %52* %68, null
  br i1 %69, label %70, label %77

70:                                               ; preds = %65
  %71 = load %71*, %71** %3, align 8
  %72 = getelementptr inbounds %71, %71* %71, i32 0, i32 3
  %73 = load %52*, %52** %72, align 8
  %74 = call %52* @timelib_time_clone(%52* %73)
  %75 = load %71*, %71** %4, align 8
  %76 = getelementptr inbounds %71, %71* %75, i32 0, i32 3
  store %52* %74, %52** %76, align 8
  br label %77

77:                                               ; preds = %70, %65
  %78 = load %71*, %71** %3, align 8
  %79 = getelementptr inbounds %71, %71* %78, i32 0, i32 4
  %80 = load %59*, %59** %79, align 8
  %81 = icmp ne %59* %80, null
  br i1 %81, label %82, label %89

82:                                               ; preds = %77
  %83 = load %71*, %71** %3, align 8
  %84 = getelementptr inbounds %71, %71* %83, i32 0, i32 4
  %85 = load %59*, %59** %84, align 8
  %86 = call %59* @timelib_rel_time_clone(%59* %85)
  %87 = load %71*, %71** %4, align 8
  %88 = getelementptr inbounds %71, %71* %87, i32 0, i32 4
  store %59* %86, %59** %88, align 8
  br label %89

89:                                               ; preds = %82, %77
  %90 = load %71*, %71** %4, align 8
  %91 = getelementptr inbounds %71, %71* %90, i32 0, i32 8
  %92 = bitcast %71** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #15
  %93 = bitcast %71** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #15
  ret %15* %91
}

; Function Attrs: nounwind uwtable
define internal %7* @555(%29* %0) #0 {
  %2 = alloca %7*, align 8
  %3 = alloca %29*, align 8
  %4 = alloca %7*, align 8
  %5 = alloca %29, align 8
  %6 = alloca %71*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %61*, align 8
  %9 = alloca %61*, align 8
  %10 = alloca %61*, align 8
  %11 = alloca %68*, align 8
  %12 = alloca %29*, align 8
  store %29* %0, %29** %3, align 8
  %13 = bitcast %7** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #15
  %14 = bitcast %29* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #15
  %15 = bitcast %71** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #15
  %16 = load %29*, %29** %3, align 8
  %17 = getelementptr inbounds %29, %29* %16, i32 0, i32 0
  %18 = bitcast %30* %17 to %15**
  %19 = load %15*, %15** %18, align 8
  %20 = call %71* @482(%15* %19)
  store %71* %20, %71** %6, align 8
  %21 = load %29*, %29** %3, align 8
  %22 = call %7* @zend_std_get_properties(%29* %21)
  store %7* %22, %7** %4, align 8
  %23 = load %71*, %71** %6, align 8
  %24 = getelementptr inbounds %71, %71* %23, i32 0, i32 0
  %25 = load %52*, %52** %24, align 8
  %26 = icmp ne %52* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %1
  %28 = load %7*, %7** %4, align 8
  store %7* %28, %7** %2, align 8
  store i32 1, i32* %7, align 4
  br label %178

29:                                               ; preds = %1
  %30 = load %71*, %71** %6, align 8
  %31 = getelementptr inbounds %71, %71* %30, i32 0, i32 0
  %32 = load %52*, %52** %31, align 8
  %33 = icmp ne %52* %32, null
  br i1 %33, label %34, label %51

34:                                               ; preds = %29
  %35 = bitcast %61** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #15
  %36 = load %71*, %71** %6, align 8
  %37 = getelementptr inbounds %71, %71* %36, i32 0, i32 1
  %38 = load %6*, %6** %37, align 8
  %39 = call i32 @_object_init_ex(%29* %5, %6* %38)
  %40 = getelementptr inbounds %29, %29* %5, i32 0, i32 0
  %41 = bitcast %30* %40 to %15**
  %42 = load %15*, %15** %41, align 8
  %43 = call %61* @489(%15* %42)
  store %61* %43, %61** %8, align 8
  %44 = load %71*, %71** %6, align 8
  %45 = getelementptr inbounds %71, %71* %44, i32 0, i32 0
  %46 = load %52*, %52** %45, align 8
  %47 = call %52* @timelib_time_clone(%52* %46)
  %48 = load %61*, %61** %8, align 8
  %49 = getelementptr inbounds %61, %61* %48, i32 0, i32 0
  store %52* %47, %52** %49, align 8
  %50 = bitcast %61** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #15
  br label %57

51:                                               ; preds = %29
  br label %52

52:                                               ; preds = %51
  %53 = getelementptr inbounds %29, %29* %5, i32 0, i32 1
  %54 = bitcast %31* %53 to i32*
  store i32 1, i32* %54, align 8
  br label %55

55:                                               ; preds = %52
  br label %56

56:                                               ; preds = %55
  br label %57

57:                                               ; preds = %56, %34
  %58 = load %7*, %7** %4, align 8
  %59 = call %29* @_zend_hash_str_update(%7* %58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @310, i32 0, i32 0), i64 5, %29* %5)
  %60 = load %71*, %71** %6, align 8
  %61 = getelementptr inbounds %71, %71* %60, i32 0, i32 2
  %62 = load %52*, %52** %61, align 8
  %63 = icmp ne %52* %62, null
  br i1 %63, label %64, label %81

64:                                               ; preds = %57
  %65 = bitcast %61** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %65) #15
  %66 = load %71*, %71** %6, align 8
  %67 = getelementptr inbounds %71, %71* %66, i32 0, i32 1
  %68 = load %6*, %6** %67, align 8
  %69 = call i32 @_object_init_ex(%29* %5, %6* %68)
  %70 = getelementptr inbounds %29, %29* %5, i32 0, i32 0
  %71 = bitcast %30* %70 to %15**
  %72 = load %15*, %15** %71, align 8
  %73 = call %61* @489(%15* %72)
  store %61* %73, %61** %9, align 8
  %74 = load %71*, %71** %6, align 8
  %75 = getelementptr inbounds %71, %71* %74, i32 0, i32 2
  %76 = load %52*, %52** %75, align 8
  %77 = call %52* @timelib_time_clone(%52* %76)
  %78 = load %61*, %61** %9, align 8
  %79 = getelementptr inbounds %61, %61* %78, i32 0, i32 0
  store %52* %77, %52** %79, align 8
  %80 = bitcast %61** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #15
  br label %87

81:                                               ; preds = %57
  br label %82

82:                                               ; preds = %81
  %83 = getelementptr inbounds %29, %29* %5, i32 0, i32 1
  %84 = bitcast %31* %83 to i32*
  store i32 1, i32* %84, align 8
  br label %85

85:                                               ; preds = %82
  br label %86

86:                                               ; preds = %85
  br label %87

87:                                               ; preds = %86, %64
  %88 = load %7*, %7** %4, align 8
  %89 = call %29* @_zend_hash_str_update(%7* %88, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @429, i32 0, i32 0), i64 7, %29* %5)
  %90 = load %71*, %71** %6, align 8
  %91 = getelementptr inbounds %71, %71* %90, i32 0, i32 3
  %92 = load %52*, %52** %91, align 8
  %93 = icmp ne %52* %92, null
  br i1 %93, label %94, label %111

94:                                               ; preds = %87
  %95 = bitcast %61** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %95) #15
  %96 = load %71*, %71** %6, align 8
  %97 = getelementptr inbounds %71, %71* %96, i32 0, i32 1
  %98 = load %6*, %6** %97, align 8
  %99 = call i32 @_object_init_ex(%29* %5, %6* %98)
  %100 = getelementptr inbounds %29, %29* %5, i32 0, i32 0
  %101 = bitcast %30* %100 to %15**
  %102 = load %15*, %15** %101, align 8
  %103 = call %61* @489(%15* %102)
  store %61* %103, %61** %10, align 8
  %104 = load %71*, %71** %6, align 8
  %105 = getelementptr inbounds %71, %71* %104, i32 0, i32 3
  %106 = load %52*, %52** %105, align 8
  %107 = call %52* @timelib_time_clone(%52* %106)
  %108 = load %61*, %61** %10, align 8
  %109 = getelementptr inbounds %61, %61* %108, i32 0, i32 0
  store %52* %107, %52** %109, align 8
  %110 = bitcast %61** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110) #15
  br label %117

111:                                              ; preds = %87
  br label %112

112:                                              ; preds = %111
  %113 = getelementptr inbounds %29, %29* %5, i32 0, i32 1
  %114 = bitcast %31* %113 to i32*
  store i32 1, i32* %114, align 8
  br label %115

115:                                              ; preds = %112
  br label %116

116:                                              ; preds = %115
  br label %117

117:                                              ; preds = %116, %94
  %118 = load %7*, %7** %4, align 8
  %119 = call %29* @_zend_hash_str_update(%7* %118, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @311, i32 0, i32 0), i64 3, %29* %5)
  %120 = load %71*, %71** %6, align 8
  %121 = getelementptr inbounds %71, %71* %120, i32 0, i32 4
  %122 = load %59*, %59** %121, align 8
  %123 = icmp ne %59* %122, null
  br i1 %123, label %124, label %141

124:                                              ; preds = %117
  %125 = bitcast %68** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %125) #15
  %126 = load %6*, %6** @date_ce_interval, align 8
  %127 = call i32 @_object_init_ex(%29* %5, %6* %126)
  %128 = getelementptr inbounds %29, %29* %5, i32 0, i32 0
  %129 = bitcast %30* %128 to %15**
  %130 = load %15*, %15** %129, align 8
  %131 = call %68* @505(%15* %130)
  store %68* %131, %68** %11, align 8
  %132 = load %71*, %71** %6, align 8
  %133 = getelementptr inbounds %71, %71* %132, i32 0, i32 4
  %134 = load %59*, %59** %133, align 8
  %135 = call %59* @timelib_rel_time_clone(%59* %134)
  %136 = load %68*, %68** %11, align 8
  %137 = getelementptr inbounds %68, %68* %136, i32 0, i32 0
  store %59* %135, %59** %137, align 8
  %138 = load %68*, %68** %11, align 8
  %139 = getelementptr inbounds %68, %68* %138, i32 0, i32 2
  store i32 1, i32* %139, align 8
  %140 = bitcast %68** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %140) #15
  br label %147

141:                                              ; preds = %117
  br label %142

142:                                              ; preds = %141
  %143 = getelementptr inbounds %29, %29* %5, i32 0, i32 1
  %144 = bitcast %31* %143 to i32*
  store i32 1, i32* %144, align 8
  br label %145

145:                                              ; preds = %142
  br label %146

146:                                              ; preds = %145
  br label %147

147:                                              ; preds = %146, %124
  %148 = load %7*, %7** %4, align 8
  %149 = call %29* @_zend_hash_str_update(%7* %148, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @291, i32 0, i32 0), i64 8, %29* %5)
  %150 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %150) #15
  store %29* %5, %29** %12, align 8
  %151 = load %71*, %71** %6, align 8
  %152 = getelementptr inbounds %71, %71* %151, i32 0, i32 5
  %153 = load i32, i32* %152, align 8
  %154 = sext i32 %153 to i64
  %155 = load %29*, %29** %12, align 8
  %156 = getelementptr inbounds %29, %29* %155, i32 0, i32 0
  %157 = bitcast %30* %156 to i64*
  store i64 %154, i64* %157, align 8
  %158 = load %29*, %29** %12, align 8
  %159 = getelementptr inbounds %29, %29* %158, i32 0, i32 1
  %160 = bitcast %31* %159 to i32*
  store i32 4, i32* %160, align 8
  %161 = bitcast %29** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161) #15
  %162 = load %7*, %7** %4, align 8
  %163 = call %29* @_zend_hash_str_update(%7* %162, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @430, i32 0, i32 0), i64 11, %29* %5)
  br label %164

164:                                              ; preds = %147
  %165 = load %71*, %71** %6, align 8
  %166 = getelementptr inbounds %71, %71* %165, i32 0, i32 7
  %167 = load i32, i32* %166, align 8
  %168 = icmp ne i32 %167, 0
  %169 = zext i1 %168 to i64
  %170 = select i1 %168, i32 3, i32 2
  %171 = getelementptr inbounds %29, %29* %5, i32 0, i32 1
  %172 = bitcast %31* %171 to i32*
  store i32 %170, i32* %172, align 8
  br label %173

173:                                              ; preds = %164
  br label %174

174:                                              ; preds = %173
  %175 = load %7*, %7** %4, align 8
  %176 = call %29* @_zend_hash_str_update(%7* %175, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @431, i32 0, i32 0), i64 18, %29* %5)
  %177 = load %7*, %7** %4, align 8
  store %7* %177, %7** %2, align 8
  store i32 1, i32* %7, align 4
  br label %178

178:                                              ; preds = %174, %27
  %179 = bitcast %71** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %179) #15
  %180 = bitcast %29* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %180) #15
  %181 = bitcast %7** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %181) #15
  %182 = load %7*, %7** %2, align 8
  ret %7* %182
}

; Function Attrs: nounwind uwtable
define internal %7* @556(%29* %0, %29** %1, i32* %2) #0 {
  %4 = alloca %29*, align 8
  %5 = alloca %29**, align 8
  %6 = alloca i32*, align 8
  store %29* %0, %29** %4, align 8
  store %29** %1, %29*** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %29**, %29*** %5, align 8
  store %29* null, %29** %7, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 0, i32* %8, align 4
  %9 = load %29*, %29** %4, align 8
  %10 = call %7* @zend_std_get_properties(%29* %9)
  ret %7* %10
}

; Function Attrs: nounwind uwtable
define internal %29* @557(%29* %0, %29* %1, i32 %2, i8** %3, %29* %4) #0 {
  %6 = alloca %29*, align 8
  %7 = alloca %29*, align 8
  %8 = alloca %29*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8**, align 8
  %11 = alloca %29*, align 8
  %12 = alloca %28*, align 8
  %13 = alloca i32, align 4
  store %29* %0, %29** %7, align 8
  store %29* %1, %29** %8, align 8
  store i32 %2, i32* %9, align 4
  store i8** %3, i8*** %10, align 8
  store %29* %4, %29** %11, align 8
  %14 = load i32, i32* %9, align 4
  %15 = icmp ne i32 %14, 3
  br i1 %15, label %16, label %37

16:                                               ; preds = %5
  %17 = load i32, i32* %9, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %37

19:                                               ; preds = %16
  %20 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #15
  %21 = load %29*, %29** %8, align 8
  %22 = call %28* @564(%29* %21)
  store %28* %22, %28** %12, align 8
  %23 = load %28*, %28** %12, align 8
  %24 = call i32 @565(%28* %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %19
  %27 = load %28*, %28** %12, align 8
  %28 = getelementptr inbounds %28, %28* %27, i32 0, i32 3
  %29 = getelementptr inbounds [1 x i8], [1 x i8]* %28, i32 0, i32 0
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @432, i32 0, i32 0), i8* %29)
  %30 = load %28*, %28** %12, align 8
  call void @566(%28* %30)
  store %29* getelementptr inbounds (%43, %43* @executor_globals, i32 0, i32 0), %29** %6, align 8
  store i32 1, i32* %13, align 4
  br label %33

31:                                               ; preds = %19
  %32 = load %28*, %28** %12, align 8
  call void @566(%28* %32)
  store i32 0, i32* %13, align 4
  br label %33

33:                                               ; preds = %31, %26
  %34 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #15
  %35 = load i32, i32* %13, align 4
  switch i32 %35, label %57 [
    i32 0, label %36
    i32 1, label %55
  ]

36:                                               ; preds = %33
  br label %37

37:                                               ; preds = %36, %16, %5
  %38 = load %29*, %29** %7, align 8
  %39 = getelementptr inbounds %29, %29* %38, i32 0, i32 0
  %40 = bitcast %30* %39 to %15**
  %41 = load %15*, %15** %40, align 8
  %42 = getelementptr inbounds %15, %15* %41, i32 0, i32 3
  %43 = load %16*, %16** %42, align 8
  %44 = getelementptr inbounds %16, %16* %43, i32 0, i32 15
  %45 = load %7* (%29*)*, %7* (%29*)** %44, align 8
  %46 = load %29*, %29** %7, align 8
  %47 = call %7* %45(%29* %46)
  %48 = load %29* (%29*, %29*, i32, i8**, %29*)*, %29* (%29*, %29*, i32, i8**, %29*)** getelementptr inbounds (%16, %16* @std_object_handlers, i32 0, i32 4), align 8
  %49 = load %29*, %29** %7, align 8
  %50 = load %29*, %29** %8, align 8
  %51 = load i32, i32* %9, align 4
  %52 = load i8**, i8*** %10, align 8
  %53 = load %29*, %29** %11, align 8
  %54 = call %29* %48(%29* %49, %29* %50, i32 %51, i8** %52, %29* %53)
  store %29* %54, %29** %6, align 8
  br label %55

55:                                               ; preds = %37, %33
  %56 = load %29*, %29** %6, align 8
  ret %29* %56

57:                                               ; preds = %33
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @558(%29* %0, %29* %1, %29* %2, i8** %3) #0 {
  %5 = alloca %29*, align 8
  %6 = alloca %29*, align 8
  %7 = alloca %29*, align 8
  %8 = alloca i8**, align 8
  %9 = alloca %28*, align 8
  %10 = alloca i32, align 4
  store %29* %0, %29** %5, align 8
  store %29* %1, %29** %6, align 8
  store %29* %2, %29** %7, align 8
  store i8** %3, i8*** %8, align 8
  %11 = bitcast %28** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #15
  %12 = load %29*, %29** %6, align 8
  %13 = call %28* @564(%29* %12)
  store %28* %13, %28** %9, align 8
  %14 = load %28*, %28** %9, align 8
  %15 = call i32 @565(%28* %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %4
  %18 = load %28*, %28** %9, align 8
  %19 = getelementptr inbounds %28, %28* %18, i32 0, i32 3
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %19, i32 0, i32 0
  call void (%6*, i8*, ...) @zend_throw_error(%6* null, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @433, i32 0, i32 0), i8* %20)
  %21 = load %28*, %28** %9, align 8
  call void @566(%28* %21)
  store i32 1, i32* %10, align 4
  br label %29

22:                                               ; preds = %4
  %23 = load %28*, %28** %9, align 8
  call void @566(%28* %23)
  %24 = load void (%29*, %29*, %29*, i8**)*, void (%29*, %29*, %29*, i8**)** getelementptr inbounds (%16, %16* @std_object_handlers, i32 0, i32 5), align 8
  %25 = load %29*, %29** %5, align 8
  %26 = load %29*, %29** %6, align 8
  %27 = load %29*, %29** %7, align 8
  %28 = load i8**, i8*** %8, align 8
  call void %24(%29* %25, %29* %26, %29* %27, i8** %28)
  store i32 0, i32* %10, align 4
  br label %29

29:                                               ; preds = %22, %17
  %30 = bitcast %28** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #15
  %31 = load i32, i32* %10, align 4
  switch i32 %31, label %33 [
    i32 0, label %32
    i32 1, label %32
  ]

32:                                               ; preds = %29, %29
  ret void

33:                                               ; preds = %29
  unreachable
}

declare dso_local zeroext i8 @instanceof_function(%6*, %6*) #4

; Function Attrs: inlinehint nounwind uwtable
define internal %15* @559(%6* %0, i32 %1) #8 {
  %3 = alloca %6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %61*, align 8
  store %6* %0, %6** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %61** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #15
  %7 = load %6*, %6** %3, align 8
  %8 = call i64 @560(%6* %7)
  %9 = add i64 72, %8
  %10 = call noalias i8* @_ecalloc(i64 1, i64 %9) #20
  %11 = bitcast i8* %10 to %61*
  store %61* %11, %61** %5, align 8
  %12 = load %61*, %61** %5, align 8
  %13 = getelementptr inbounds %61, %61* %12, i32 0, i32 2
  %14 = load %6*, %6** %3, align 8
  call void @zend_object_std_init(%15* %13, %6* %14)
  %15 = load i32, i32* %4, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = load %61*, %61** %5, align 8
  %19 = getelementptr inbounds %61, %61* %18, i32 0, i32 2
  %20 = load %6*, %6** %3, align 8
  call void @object_properties_init(%15* %19, %6* %20)
  br label %21

21:                                               ; preds = %17, %2
  %22 = load %61*, %61** %5, align 8
  %23 = getelementptr inbounds %61, %61* %22, i32 0, i32 2
  %24 = getelementptr inbounds %15, %15* %23, i32 0, i32 3
  store %16* @396, %16** %24, align 8
  %25 = load %61*, %61** %5, align 8
  %26 = getelementptr inbounds %61, %61* %25, i32 0, i32 2
  %27 = bitcast %61** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #15
  ret %15* %26
}

; Function Attrs: allocsize(0,1)
declare dso_local noalias i8* @_ecalloc(i64, i64) #13

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @560(%6* %0) #6 {
  %2 = alloca %6*, align 8
  store %6* %0, %6** %2, align 8
  %3 = load %6*, %6** %2, align 8
  %4 = getelementptr inbounds %6, %6* %3, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = load %6*, %6** %2, align 8
  %7 = getelementptr inbounds %6, %6* %6, i32 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 16777216
  %10 = icmp ne i32 %9, 0
  %11 = zext i1 %10 to i64
  %12 = select i1 %10, i32 0, i32 1
  %13 = sub nsw i32 %5, %12
  %14 = sext i32 %13 to i64
  %15 = mul i64 16, %14
  ret i64 %15
}

declare dso_local void @zend_object_std_init(%15*, %6*) #4

declare dso_local void @object_properties_init(%15*, %6*) #4

declare dso_local void @zend_object_std_dtor(%15*) #4

declare dso_local void @zend_objects_clone_members(%15*, %15*) #4

declare dso_local i32 @timelib_time_compare(%52*, %52*) #4

declare dso_local %7* @zend_std_get_properties(%29*) #4

declare dso_local %29* @_zend_hash_str_update(%7*, i8*, i64, %29*) #4

; Function Attrs: inlinehint nounwind uwtable
define internal %15* @561(%6* %0, i32 %1) #8 {
  %3 = alloca %6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %64*, align 8
  store %6* %0, %6** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %64** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #15
  %7 = load %6*, %6** %3, align 8
  %8 = call i64 @560(%6* %7)
  %9 = add i64 96, %8
  %10 = call noalias i8* @_ecalloc(i64 1, i64 %9) #20
  %11 = bitcast i8* %10 to %64*
  store %64* %11, %64** %5, align 8
  %12 = load %64*, %64** %5, align 8
  %13 = getelementptr inbounds %64, %64* %12, i32 0, i32 4
  %14 = load %6*, %6** %3, align 8
  call void @zend_object_std_init(%15* %13, %6* %14)
  %15 = load i32, i32* %4, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = load %64*, %64** %5, align 8
  %19 = getelementptr inbounds %64, %64* %18, i32 0, i32 4
  %20 = load %6*, %6** %3, align 8
  call void @object_properties_init(%15* %19, %6* %20)
  br label %21

21:                                               ; preds = %17, %2
  %22 = load %64*, %64** %5, align 8
  %23 = getelementptr inbounds %64, %64* %22, i32 0, i32 4
  %24 = getelementptr inbounds %15, %15* %23, i32 0, i32 3
  store %16* @399, %16** %24, align 8
  %25 = load %64*, %64** %5, align 8
  %26 = getelementptr inbounds %64, %64* %25, i32 0, i32 4
  %27 = bitcast %64** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #15
  ret %15* %26
}

declare dso_local %7* @zend_array_dup(%7*) #4

; Function Attrs: inlinehint nounwind uwtable
define internal %15* @562(%6* %0, i32 %1) #8 {
  %3 = alloca %6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %68*, align 8
  store %6* %0, %6** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %68** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #15
  %7 = load %6*, %6** %3, align 8
  %8 = call i64 @560(%6* %7)
  %9 = add i64 80, %8
  %10 = call noalias i8* @_ecalloc(i64 1, i64 %9) #20
  %11 = bitcast i8* %10 to %68*
  store %68* %11, %68** %5, align 8
  %12 = load %68*, %68** %5, align 8
  %13 = getelementptr inbounds %68, %68* %12, i32 0, i32 3
  %14 = load %6*, %6** %3, align 8
  call void @zend_object_std_init(%15* %13, %6* %14)
  %15 = load i32, i32* %4, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = load %68*, %68** %5, align 8
  %19 = getelementptr inbounds %68, %68* %18, i32 0, i32 3
  %20 = load %6*, %6** %3, align 8
  call void @object_properties_init(%15* %19, %6* %20)
  br label %21

21:                                               ; preds = %17, %2
  %22 = load %68*, %68** %5, align 8
  %23 = getelementptr inbounds %68, %68* %22, i32 0, i32 3
  %24 = getelementptr inbounds %15, %15* %23, i32 0, i32 3
  store %16* @414, %16** %24, align 8
  %25 = load %68*, %68** %5, align 8
  %26 = getelementptr inbounds %68, %68* %25, i32 0, i32 3
  %27 = bitcast %68** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #15
  ret %15* %26
}

declare dso_local void @timelib_rel_time_dtor(%59*) #4

declare dso_local i32 @zend_is_true(%29*) #4

declare dso_local i32 @zend_binary_strcmp(i8*, i64, i8*, i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal %15* @563(%6* %0, i32 %1) #8 {
  %3 = alloca %6*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %71*, align 8
  store %6* %0, %6** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #15
  %7 = load %6*, %6** %3, align 8
  %8 = call i64 @560(%6* %7)
  %9 = add i64 112, %8
  %10 = call noalias i8* @_ecalloc(i64 1, i64 %9) #20
  %11 = bitcast i8* %10 to %71*
  store %71* %11, %71** %5, align 8
  %12 = load %71*, %71** %5, align 8
  %13 = getelementptr inbounds %71, %71* %12, i32 0, i32 8
  %14 = load %6*, %6** %3, align 8
  call void @zend_object_std_init(%15* %13, %6* %14)
  %15 = load i32, i32* %4, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = load %71*, %71** %5, align 8
  %19 = getelementptr inbounds %71, %71* %18, i32 0, i32 8
  %20 = load %6*, %6** %3, align 8
  call void @object_properties_init(%15* %19, %6* %20)
  br label %21

21:                                               ; preds = %17, %2
  %22 = load %71*, %71** %5, align 8
  %23 = getelementptr inbounds %71, %71* %22, i32 0, i32 8
  %24 = getelementptr inbounds %15, %15* %23, i32 0, i32 3
  store %16* @416, %16** %24, align 8
  %25 = load %71*, %71** %5, align 8
  %26 = getelementptr inbounds %71, %71* %25, i32 0, i32 8
  %27 = bitcast %71** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #15
  ret %15* %26
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %28* @564(%29* %0) #6 {
  %2 = alloca %29*, align 8
  store %29* %0, %29** %2, align 8
  %3 = load %29*, %29** %2, align 8
  %4 = call zeroext i8 @490(%29* %3)
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load %29*, %29** %2, align 8
  %9 = getelementptr inbounds %29, %29* %8, i32 0, i32 0
  %10 = bitcast %30* %9 to %28**
  %11 = load %28*, %28** %10, align 8
  %12 = call %28* @567(%28* %11)
  br label %16

13:                                               ; preds = %1
  %14 = load %29*, %29** %2, align 8
  %15 = call %28* @_zval_get_string_func(%29* %14)
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %28* [ %12, %7 ], [ %15, %13 ]
  ret %28* %17
}

; Function Attrs: nounwind uwtable
define internal i32 @565(%28* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %28*, align 8
  store %28* %0, %28** %3, align 8
  %4 = load %28*, %28** %3, align 8
  %5 = getelementptr inbounds %28, %28* %4, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 11
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load %28*, %28** %3, align 8
  %10 = getelementptr inbounds %28, %28* %9, i32 0, i32 3
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %10, i32 0, i32 0
  %12 = call i32 @memcmp(i8* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @430, i32 0, i32 0), i64 11) #16
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %69

14:                                               ; preds = %8, %1
  %15 = load %28*, %28** %3, align 8
  %16 = getelementptr inbounds %28, %28* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 18
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = load %28*, %28** %3, align 8
  %21 = getelementptr inbounds %28, %28* %20, i32 0, i32 3
  %22 = getelementptr inbounds [1 x i8], [1 x i8]* %21, i32 0, i32 0
  %23 = call i32 @memcmp(i8* %22, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @431, i32 0, i32 0), i64 18) #16
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %69

25:                                               ; preds = %19, %14
  %26 = load %28*, %28** %3, align 8
  %27 = getelementptr inbounds %28, %28* %26, i32 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 5
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = load %28*, %28** %3, align 8
  %32 = getelementptr inbounds %28, %28* %31, i32 0, i32 3
  %33 = getelementptr inbounds [1 x i8], [1 x i8]* %32, i32 0, i32 0
  %34 = call i32 @memcmp(i8* %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @310, i32 0, i32 0), i64 5) #16
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %69

36:                                               ; preds = %30, %25
  %37 = load %28*, %28** %3, align 8
  %38 = getelementptr inbounds %28, %28* %37, i32 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 7
  br i1 %40, label %41, label %47

41:                                               ; preds = %36
  %42 = load %28*, %28** %3, align 8
  %43 = getelementptr inbounds %28, %28* %42, i32 0, i32 3
  %44 = getelementptr inbounds [1 x i8], [1 x i8]* %43, i32 0, i32 0
  %45 = call i32 @memcmp(i8* %44, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @429, i32 0, i32 0), i64 7) #16
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %69

47:                                               ; preds = %41, %36
  %48 = load %28*, %28** %3, align 8
  %49 = getelementptr inbounds %28, %28* %48, i32 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 3
  br i1 %51, label %52, label %58

52:                                               ; preds = %47
  %53 = load %28*, %28** %3, align 8
  %54 = getelementptr inbounds %28, %28* %53, i32 0, i32 3
  %55 = getelementptr inbounds [1 x i8], [1 x i8]* %54, i32 0, i32 0
  %56 = call i32 @memcmp(i8* %55, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @311, i32 0, i32 0), i64 3) #16
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %69

58:                                               ; preds = %52, %47
  %59 = load %28*, %28** %3, align 8
  %60 = getelementptr inbounds %28, %28* %59, i32 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 8
  br i1 %62, label %63, label %70

63:                                               ; preds = %58
  %64 = load %28*, %28** %3, align 8
  %65 = getelementptr inbounds %28, %28* %64, i32 0, i32 3
  %66 = getelementptr inbounds [1 x i8], [1 x i8]* %65, i32 0, i32 0
  %67 = call i32 @memcmp(i8* %66, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @291, i32 0, i32 0), i64 8) #16
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %63, %52, %41, %30, %19, %8
  store i32 1, i32* %2, align 4
  br label %71

70:                                               ; preds = %63, %58
  store i32 0, i32* %2, align 4
  br label %71

71:                                               ; preds = %70, %69
  %72 = load i32, i32* %2, align 4
  ret i32 %72
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @566(%28* %0) #6 {
  %2 = alloca %28*, align 8
  store %28* %0, %28** %2, align 8
  %3 = load %28*, %28** %2, align 8
  %4 = getelementptr inbounds %28, %28* %3, i32 0, i32 0
  %5 = getelementptr inbounds %8, %8* %4, i32 0, i32 1
  %6 = bitcast %9* %5 to %62*
  %7 = getelementptr inbounds %62, %62* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %1
  %13 = load %28*, %28** %2, align 8
  %14 = getelementptr inbounds %28, %28* %13, i32 0, i32 0
  %15 = getelementptr inbounds %8, %8* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %12
  %20 = load %28*, %28** %2, align 8
  %21 = getelementptr inbounds %28, %28* %20, i32 0, i32 0
  %22 = getelementptr inbounds %8, %8* %21, i32 0, i32 1
  %23 = bitcast %9* %22 to %62*
  %24 = getelementptr inbounds %62, %62* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %26, 1
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load %28*, %28** %2, align 8
  %31 = bitcast %28* %30 to i8*
  call void @free(i8* %31) #15
  br label %35

32:                                               ; preds = %19
  %33 = load %28*, %28** %2, align 8
  %34 = bitcast %28* %33 to i8*
  call void @_efree(i8* %34)
  br label %35

35:                                               ; preds = %32, %29
  br label %36

36:                                               ; preds = %35, %12
  br label %37

37:                                               ; preds = %36, %1
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %28* @567(%28* %0) #6 {
  %2 = alloca %28*, align 8
  store %28* %0, %28** %2, align 8
  %3 = load %28*, %28** %2, align 8
  %4 = getelementptr inbounds %28, %28* %3, i32 0, i32 0
  %5 = getelementptr inbounds %8, %8* %4, i32 0, i32 1
  %6 = bitcast %9* %5 to %62*
  %7 = getelementptr inbounds %62, %62* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = load %28*, %28** %2, align 8
  %14 = getelementptr inbounds %28, %28* %13, i32 0, i32 0
  %15 = getelementptr inbounds %8, %8* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  br label %18

18:                                               ; preds = %12, %1
  %19 = load %28*, %28** %2, align 8
  ret %28* %19
}

declare dso_local %28* @_zval_get_string_func(%29*) #4

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

declare dso_local i32 @add_index_string(%29*, i64, i8*) #4

declare dso_local %52* @timelib_add(%52*, %59*) #4

declare dso_local %52* @timelib_sub(%52*, %59*) #4

declare dso_local void @timelib_set_timezone_from_offset(%52*, i64) #4

declare dso_local void @timelib_set_timezone_from_abbr(%52*, %66* byval(%66) align 8) #4

declare dso_local void @timelib_set_timezone(%52*, %53*) #4

declare dso_local i64 @timelib_daynr_from_weeknr(i64, i64, i64) #4

declare dso_local i64 @timelib_parse_zone(i8**, i32*, %52*, i32*, %41*, %53* (i8*, %41*, i32*)*) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @568(%29* %0) #6 {
  %2 = alloca %29*, align 8
  store %29* %0, %29** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %29*, %29** %2, align 8
  %5 = getelementptr inbounds %29, %29* %4, i32 0, i32 1
  %6 = bitcast %31* %5 to %76*
  %7 = getelementptr inbounds %76, %76* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  unreachable

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18
  %20 = load %29*, %29** %2, align 8
  %21 = getelementptr inbounds %29, %29* %20, i32 0, i32 0
  %22 = bitcast %30* %21 to %63**
  %23 = load %63*, %63** %22, align 8
  %24 = getelementptr inbounds %63, %63* %23, i32 0, i32 0
  %25 = getelementptr inbounds %8, %8* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %25, align 4
  ret i32 %27
}

declare dso_local void @_zval_dtor_func(%63*) #4

declare dso_local void @_zval_copy_ctor_func(%29*) #4

declare dso_local i64 @_zval_get_long_func(%29*) #4

declare dso_local double @_zval_get_double_func(%29*) #4

declare dso_local void @timelib_strtointerval(i8*, i64, %52**, %52**, %59**, i32*, %34**) #4

declare dso_local %59* @timelib_rel_time_ctor() #4

; Function Attrs: inlinehint nounwind readonly uwtable
define available_externally dso_local i64 @atoll(i8* nonnull %0) #14 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i64 @strtoll(i8* %3, i8** null, i32 10) #15
  ret i64 %4
}

; Function Attrs: nounwind
declare dso_local i64 @strtoll(i8*, i8**, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @569(%73* %0, i8 signext %1, i8 zeroext %2) #6 {
  %4 = alloca %73*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  store %73* %0, %73** %4, align 8
  store i8 %1, i8* %5, align 1
  store i8 %2, i8* %6, align 1
  %8 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #15
  %9 = load %73*, %73** %4, align 8
  %10 = load i8, i8* %6, align 1
  %11 = call i64 @530(%73* %9, i64 1, i8 zeroext %10)
  store i64 %11, i64* %7, align 8
  %12 = load i8, i8* %5, align 1
  %13 = load %73*, %73** %4, align 8
  %14 = getelementptr inbounds %73, %73* %13, i32 0, i32 0
  %15 = load %28*, %28** %14, align 8
  %16 = getelementptr inbounds %28, %28* %15, i32 0, i32 3
  %17 = load i64, i64* %7, align 8
  %18 = sub i64 %17, 1
  %19 = getelementptr inbounds [1 x i8], [1 x i8]* %16, i64 0, i64 %18
  store i8 %12, i8* %19, align 1
  %20 = load i64, i64* %7, align 8
  %21 = load %73*, %73** %4, align 8
  %22 = getelementptr inbounds %73, %73* %21, i32 0, i32 0
  %23 = load %28*, %28** %22, align 8
  %24 = getelementptr inbounds %28, %28* %23, i32 0, i32 2
  store i64 %20, i64* %24, align 8
  %25 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #15
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #7

declare dso_local double @zend_ini_double(i8*, i32, i32) #4

declare dso_local i64 @timelib_get_current_offset(%52*) #4

declare dso_local %28* @zend_strpprintf(i64, i8*, ...) #4

declare dso_local i32 @zend_parse_arg_double_slow(%29*, double*) #4

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone willreturn }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nounwind willreturn writeonly }
attributes #10 = { nounwind readnone speculatable willreturn }
attributes #11 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { nounwind readnone }
attributes #18 = { allocsize(0) }
attributes #19 = { allocsize(1) }
attributes #20 = { allocsize(0,1) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
