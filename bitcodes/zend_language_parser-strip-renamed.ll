; ModuleID = 'zend_language_parser-strip-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/Zend/zend_language_parser.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { %1* }
%1 = type { i16, i16, i32, [1 x %1*] }
%2 = type { %46, %3*, %34*, i32, %9*, %41*, %41*, %41, %41*, i8, i8, i8, i8, i8, %31, %33*, i32, i8, %34*, i32, i32, %35, %37, %45*, %41, %44**, i64, i8, i8, i8, %1*, %45*, %46 }
%3 = type { i8, %34*, %3*, i32, i32, i32, i32, %4*, %4*, %4*, %41, %41, %41, %8*, %8*, %8*, %8*, %8*, %8*, %8*, %8*, %8*, %8*, %8*, %8*, %8*, %15, %18* (%3*)*, %17* (%3*, %4*, i32)*, i32 (%3*, %3*)*, %8* (%3*, %34*)*, i32 (%4*, i8**, i64*, %23*)*, i32 (%4*, %3*, i8*, i64, %24*)*, i32, i32, %3**, %3**, %25**, %27**, %29 }
%4 = type { %5, %6, %7 }
%5 = type { i64 }
%6 = type { i32 }
%7 = type { i32 }
%8 = type { %9 }
%9 = type { i8, [3 x i8], i32, %34*, %3*, %8*, i32, i32, %10*, i32*, i32, %11*, i32, i32, %34**, i32, i32, %13*, %14*, %41*, %34*, i32, i32, %34*, i32, i32, %4*, i32, i8**, [6 x i8*] }
%10 = type { %34*, i64, i8, i8 }
%11 = type { i8*, %12, %12, %12, i32, i32, i8, i8, i8, i8 }
%12 = type { i32 }
%13 = type { i32, i32, i32 }
%14 = type { i32, i32, i32, i32 }
%15 = type { %16*, %8*, %8*, %8*, %8*, %8*, %8* }
%16 = type { void (%17*)*, i32 (%17*)*, %4* (%17*)*, void (%17*, %4*)*, void (%17*)*, void (%17*)*, void (%17*)* }
%17 = type { %18, %4, %16*, i64 }
%18 = type { %19, i32, %3*, %21*, %41*, [1 x %4] }
%19 = type { i32, %20 }
%20 = type { i32 }
%21 = type { i32, void (%18*)*, void (%18*)*, %18* (%4*)*, %4* (%4*, %4*, i32, i8**, %4*)*, void (%4*, %4*, %4*, i8**)*, %4* (%4*, %4*, i32, %4*)*, void (%4*, %4*, %4*)*, %4* (%4*, %4*, i32, i8**)*, %4* (%4*, %4*)*, void (%4*, %4*)*, i32 (%4*, %4*, i32, i8**)*, void (%4*, %4*, i8**)*, i32 (%4*, %4*, i32)*, void (%4*, %4*)*, %41* (%4*)*, %8* (%18**, %34*, %4*)*, i32 (%34*, %18*, %22*, %4*)*, %8* (%18*)*, %34* (%18*)*, i32 (%4*, %4*)*, i32 (%4*, %4*, i32)*, i32 (%4*, i64*)*, %41* (%4*, i32*)*, i32 (%4*, %3**, %8**, %18**)*, %41* (%4*, %4**, i32*)*, i32 (i8, %4*, %4*, %4*)*, i32 (%4*, %4*, %4*)* }
%22 = type { %11*, %22*, %4*, %8*, %4, %22*, %41*, i8**, %4* }
%23 = type opaque
%24 = type opaque
%25 = type { %26*, %34*, i32 }
%26 = type { %34*, %3*, %34* }
%27 = type { %26*, %28* }
%28 = type { %3* }
%29 = type { %30 }
%30 = type { %34*, i32, i32, %34* }
%31 = type { %32*, %32*, i64, i64, void (i8*)*, i8, %32* }
%32 = type { %32*, %32*, [1 x i8] }
%33 = type opaque
%34 = type { %19, i64, i64, [1 x i8] }
%35 = type { i32, i32, i32, i32, i32, i32, i32, i32, %36*, %41* }
%36 = type { i32, i32, i32, i32 }
%37 = type { %38, %39, %34*, i8, i8, %41*, %41*, %41*, %41 }
%38 = type { i64 }
%39 = type { i8, i8, %40 }
%40 = type { %4 }
%41 = type { %19, %42, i32, %43*, i32, i32, i32, i32, i64, void (%4*)* }
%42 = type { i32 }
%43 = type { %4, i64, %34* }
%44 = type opaque
%45 = type { i8*, i8*, %45* }
%46 = type { i32, i32, i32, i8* }
%47 = type { %48*, %48*, i32, i8*, i8*, i8*, i8*, i8*, i32, %46, %52, i8*, i64, i8*, i64, i64 (i8**, i64*, i8*, i64)*, i64 (i8**, i64*, i8*, i64)*, %44*, i32, void (i32, i32, i32, i8*)*, i8* }
%48 = type { %49, i8*, %34*, i32, i8 }
%49 = type { %50 }
%50 = type { i8*, i32, %51, i64 (i8*, i8*, i64)*, i64 (i8*)*, void (i8*)* }
%51 = type { i64, i64, i8*, i8*, i8*, void (i8*)* }
%52 = type { i32, i32, i8**, i8**, i8 }
%53 = type { %0 }
%54 = type { i8, i8, i16 }
%55 = type { i16, i16, i32, i32, [1 x %1*] }
%56 = type { i16, i16, %4 }
%57 = type { i8, i8, i8, i8 }

@0 = internal global %0 zeroinitializer, align 8
@1 = internal constant [945 x i16] [i16 -722, i16 89, i16 1216, i16 -722, i16 5565, i16 5565, i16 -54, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 585, i16 585, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 4893, i16 308, i16 5565, i16 26, i16 -722, i16 -722, i16 -722, i16 -722, i16 97, i16 -722, i16 -722, i16 -722, i16 -51, i16 -19, i16 5565, i16 4618, i16 -17, i16 85, i16 99, i16 101, i16 103, i16 5565, i16 5565, i16 145, i16 -722, i16 157, i16 5565, i16 175, i16 5565, i16 234, i16 29, i16 180, i16 182, i16 192, i16 200, i16 -722, i16 -722, i16 -722, i16 202, i16 208, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 321, i16 82, i16 -722, i16 333, i16 5565, i16 -722, i16 -722, i16 338, i16 388, i16 23, i16 274, i16 -23, i16 -722, i16 -722, i16 -722, i16 -722, i16 38, i16 -722, i16 -722, i16 -722, i16 179, i16 -722, i16 247, i16 -722, i16 -722, i16 -722, i16 399, i16 -722, i16 303, i16 -5, i16 -722, i16 389, i16 6625, i16 305, i16 20, i16 306, i16 310, i16 351, i16 -722, i16 -722, i16 -722, i16 354, i16 -722, i16 326, i16 399, i16 7331, i16 7331, i16 5565, i16 7331, i16 7331, i16 1527, i16 1201, i16 1527, i16 408, i16 408, i16 165, i16 408, i16 4893, i16 -722, i16 5565, i16 328, i16 389, i16 18, i16 18, i16 408, i16 408, i16 408, i16 408, i16 408, i16 408, i16 408, i16 408, i16 585, i16 343, i16 7237, i16 322, i16 -722, i16 493, i16 -722, i16 -722, i16 -722, i16 -722, i16 352, i16 306, i16 -722, i16 19, i16 -722, i16 491, i16 33, i16 -722, i16 399, i16 -722, i16 5565, i16 -722, i16 5565, i16 48, i16 -722, i16 7331, i16 416, i16 5565, i16 5565, i16 5565, i16 157, i16 5565, i16 7331, i16 353, i16 357, i16 365, i16 509, i16 49, i16 -722, i16 367, i16 -722, i16 6672, i16 -722, i16 -722, i16 333, i16 -12, i16 139, i16 377, i16 51, i16 -722, i16 -722, i16 53, i16 -722, i16 -722, i16 585, i16 5565, i16 5565, i16 373, i16 460, i16 464, i16 466, i16 4893, i16 4893, i16 73, i16 449, i16 -722, i16 5005, i16 585, i16 348, i16 -722, i16 333, i16 -30, i16 390, i16 274, i16 6719, i16 1379, i16 264, i16 393, i16 420, i16 264, i16 301, i16 5565, i16 -722, i16 477, i16 4781, i16 -722, i16 -722, i16 -722, i16 407, i16 4618, i16 409, i16 543, i16 423, i16 -722, i16 492, i16 3498, i16 5565, i16 5565, i16 5565, i16 5565, i16 5117, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 314, i16 5565, i16 -722, i16 3498, i16 5565, i16 -3, i16 5565, i16 -722, i16 5229, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 5565, i16 -722, i16 -722, i16 -722, i16 6766, i16 5565, i16 424, i16 6813, i16 14, i16 4893, i16 5341, i16 572, i16 4893, i16 306, i16 29, i16 -722, i16 -722, i16 5565, i16 -3, i16 29, i16 5565, i16 5565, i16 505, i16 -722, i16 -722, i16 434, i16 6860, i16 5565, i16 -722, i16 437, i16 6907, i16 436, i16 593, i16 7331, i16 7189, i16 16, i16 6954, i16 -722, i16 -722, i16 -722, i16 5565, i16 157, i16 -722, i16 -722, i16 1542, i16 -722, i16 28, i16 -722, i16 522, i16 -15, i16 333, i16 107, i16 451, i16 57, i16 -722, i16 162, i16 -722, i16 29, i16 -722, i16 32, i16 -722, i16 65, i16 7331, i16 71, i16 -722, i16 7001, i16 452, i16 479, i16 -722, i16 486, i16 461, i16 475, i16 456, i16 551, i16 -722, i16 -722, i16 -8, i16 6046, i16 478, i16 -722, i16 -722, i16 -722, i16 274, i16 -722, i16 480, i16 -722, i16 270, i16 487, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 6093, i16 -722, i16 5565, i16 -722, i16 75, i16 -722, i16 7331, i16 563, i16 5565, i16 -722, i16 5565, i16 -722, i16 -722, i16 -722, i16 490, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 5565, i16 -722, i16 -722, i16 495, i16 497, i16 306, i16 488, i16 1367, i16 1041, i16 1527, i16 5565, i16 7284, i16 1690, i16 1851, i16 2014, i16 2177, i16 2337, i16 2499, i16 2662, i16 2662, i16 2662, i16 2662, i16 2662, i16 801, i16 801, i16 801, i16 801, i16 574, i16 574, i16 565, i16 565, i16 565, i16 165, i16 165, i16 165, i16 -722, i16 408, i16 495, i16 497, i16 306, i16 496, i16 -722, i16 5565, i16 -722, i16 306, i16 6141, i16 585, i16 1527, i16 1527, i16 1527, i16 1527, i16 1527, i16 1527, i16 1527, i16 1527, i16 1527, i16 1527, i16 1527, i16 1527, i16 1527, i16 -722, i16 1527, i16 -722, i16 504, i16 507, i16 585, i16 506, i16 7331, i16 5565, i16 -722, i16 479, i16 -722, i16 500, i16 -722, i16 -722, i16 6188, i16 7331, i16 -722, i16 513, i16 -722, i16 3803, i16 -722, i16 5565, i16 3966, i16 5565, i16 5565, i16 677, i16 -722, i16 25, i16 7331, i16 -722, i16 -722, i16 -9, i16 -722, i16 327, i16 230, i16 8, i16 -722, i16 -722, i16 333, i16 239, i16 -722, i16 -722, i16 585, i16 489, i16 5565, i16 -722, i16 -722, i16 -722, i16 144, i16 520, i16 516, i16 144, i16 -722, i16 661, i16 -722, i16 589, i16 -722, i16 -722, i16 -722, i16 519, i16 -722, i16 5565, i16 -722, i16 -722, i16 -722, i16 -722, i16 890, i16 524, i16 -722, i16 7331, i16 5453, i16 -722, i16 479, i16 7048, i16 7095, i16 1705, i16 528, i16 271, i16 6236, i16 -722, i16 -722, i16 1690, i16 5565, i16 -722, i16 -722, i16 6283, i16 -722, i16 -722, i16 18, i16 661, i16 15, i16 4893, i16 1527, i16 520, i16 -722, i16 -722, i16 271, i16 -722, i16 -722, i16 7142, i16 -722, i16 -722, i16 -722, i16 529, i16 7331, i16 585, i16 4893, i16 530, i16 83, i16 86, i16 4129, i16 531, i16 535, i16 -722, i16 -722, i16 148, i16 327, i16 333, i16 687, i16 -722, i16 -722, i16 21, i16 333, i16 -722, i16 -722, i16 -722, i16 -722, i16 144, i16 -722, i16 -722, i16 -722, i16 689, i16 540, i16 5565, i16 -722, i16 -722, i16 5999, i16 1053, i16 -722, i16 544, i16 -722, i16 520, i16 4618, i16 672, i16 547, i16 271, i16 263, i16 -722, i16 -722, i16 -722, i16 546, i16 700, i16 -722, i16 675, i16 -722, i16 -722, i16 -722, i16 1690, i16 -722, i16 557, i16 -722, i16 560, i16 3640, i16 562, i16 1868, i16 5565, i16 88, i16 561, i16 4893, i16 677, i16 4292, i16 -722, i16 -722, i16 -722, i16 -722, i16 448, i16 -722, i16 54, i16 569, i16 567, i16 -722, i16 687, i16 -722, i16 327, i16 577, i16 333, i16 732, i16 -722, i16 689, i16 584, i16 41, i16 144, i16 -722, i16 1527, i16 586, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 588, i16 -722, i16 631, i16 307, i16 -722, i16 594, i16 661, i16 595, i16 631, i16 -722, i16 597, i16 599, i16 91, i16 601, i16 605, i16 -722, i16 -722, i16 -722, i16 2031, i16 473, i16 606, i16 5565, i16 36, i16 250, i16 -722, i16 144, i16 -722, i16 610, i16 -722, i16 -722, i16 732, i16 333, i16 612, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 144, i16 -722, i16 -722, i16 -722, i16 683, i16 232, i16 717, i16 -722, i16 -722, i16 369, i16 -722, i16 614, i16 3640, i16 746, i16 620, i16 746, i16 -722, i16 -722, i16 694, i16 -722, i16 746, i16 -722, i16 4455, i16 -722, i16 4292, i16 2194, i16 622, i16 624, i16 -722, i16 5715, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 392, i16 2357, i16 -722, i16 618, i16 -722, i16 -722, i16 415, i16 45, i16 768, i16 62, i16 -722, i16 6355, i16 399, i16 -722, i16 -722, i16 -722, i16 307, i16 -722, i16 59, i16 -722, i16 769, i16 442, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 627, i16 -722, i16 -722, i16 -722, i16 3640, i16 144, i16 630, i16 -722, i16 -722, i16 -722, i16 -722, i16 5728, i16 -722, i16 5565, i16 -722, i16 683, i16 -722, i16 773, i16 67, i16 -722, i16 6355, i16 655, i16 -722, i16 638, i16 707, i16 -722, i16 76, i16 -722, i16 639, i16 5565, i16 -722, i16 643, i16 2520, i16 -722, i16 3640, i16 -722, i16 644, i16 703, i16 326, i16 -722, i16 -722, i16 656, i16 5866, i16 -722, i16 647, i16 651, i16 711, i16 697, i16 7331, i16 -722, i16 5565, i16 6355, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 59, i16 -722, i16 -722, i16 7331, i16 -722, i16 658, i16 -722, i16 6355, i16 -722, i16 -722, i16 -722, i16 -722, i16 6493, i16 144, i16 -722, i16 7331, i16 -722, i16 662, i16 2683, i16 -722, i16 2846, i16 3009, i16 -722, i16 3172, i16 -722, i16 -722, i16 -722, i16 6355, i16 689, i16 -722, i16 271, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 663, i16 -722, i16 -722, i16 -722, i16 746, i16 -722, i16 283, i16 -722, i16 -722, i16 -722, i16 3335, i16 -722, i16 -722], align 16
@2 = internal constant [393 x i8] c`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C", align 16
@3 = internal constant [7399 x i16] [i16 2, i16 27, i16 2, i16 16, i16 17, i16 117, i16 84, i16 185, i16 2, i16 663, i16 16, i16 17, i16 2, i16 2, i16 189, i16 2, i16 130, i16 27, i16 16, i16 17, i16 632, i16 374, i16 8, i16 8, i16 8, i16 559, i16 240, i16 29, i16 4, i16 5, i16 108, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 8, i16 8, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 163, i16 28, i16 8, i16 41, i16 30, i16 8, i16 8, i16 272, i16 8, i16 68, i16 8, i16 783, i16 68, i16 40, i16 8, i16 30, i16 728, i16 83, i16 681, i16 8, i16 47, i16 48, i16 8, i16 83, i16 8, i16 52, i16 55, i16 54, i16 8, i16 83, i16 84, i16 27, i16 8, i16 8, i16 629, i16 68, i16 68, i16 68, i16 0, i16 102, i16 83, i16 206, i16 207, i16 792, i16 36, i16 74, i16 14, i16 76, i16 797, i16 14, i16 77, i16 14, i16 157, i16 83, i16 14, i16 157, i16 84, i16 545, i16 770, i16 84, i16 56, i16 114, i16 84, i16 76, i16 77, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 48, i16 777, i16 154, i16 130, i16 52, i16 30, i16 151, i16 159, i16 102, i16 313, i16 145, i16 677, i16 157, i16 796, i16 110, i16 82, i16 157, i16 145, i16 157, i16 68, i16 154, i16 84, i16 120, i16 160, i16 151, i16 145, i16 130, i16 130, i16 130, i16 160, i16 157, i16 161, i16 130, i16 160, i16 132, i16 160, i16 117, i16 105, i16 106, i16 120, i16 165, i16 125, i16 339, i16 83, i16 827, i16 701, i16 160, i16 151, i16 151, i16 608, i16 158, i16 158, i16 158, i16 357, i16 162, i16 162, i16 160, i16 160, i16 160, i16 160, i16 154, i16 160, i16 298, i16 160, i16 199, i16 908, i16 165, i16 165, i16 158, i16 167, i16 159, i16 199, i16 165, i16 159, i16 172, i16 173, i16 174, i16 212, i16 176, i16 199, i16 161, i16 130, i16 159, i16 160, i16 212, i16 159, i16 159, i16 102, i16 159, i16 189, i16 159, i16 191, i16 212, i16 161, i16 159, i16 399, i16 220, i16 397, i16 55, i16 159, i16 83, i16 158, i16 200, i16 201, i16 159, i16 83, i16 83, i16 158, i16 206, i16 207, i16 67, i16 158, i16 158, i16 211, i16 154, i16 215, i16 936, i16 165, i16 83, i16 158, i16 157, i16 269, i16 158, i16 83, i16 158, i16 234, i16 601, i16 158, i16 226, i16 72, i16 73, i16 229, i16 831, i16 909, i16 157, i16 834, i16 157, i16 269, i16 157, i16 154, i16 114, i16 115, i16 648, i16 241, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 154, i16 270, i16 240, i16 152, i16 273, i16 154, i16 275, i16 29, i16 277, i16 278, i16 279, i16 280, i16 281, i16 282, i16 283, i16 284, i16 285, i16 286, i16 287, i16 288, i16 289, i16 926, i16 241, i16 154, i16 83, i16 294, i16 72, i16 73, i16 74, i16 298, i16 299, i16 269, i16 301, i16 710, i16 272, i16 712, i16 274, i16 306, i16 333, i16 102, i16 309, i16 310, i16 160, i16 29, i16 157, i16 68, i16 157, i16 316, i16 102, i16 110, i16 111, i16 110, i16 111, i16 83, i16 273, i16 84, i16 157, i16 927, i16 928, i16 929, i16 329, i16 83, i16 105, i16 106, i16 157, i16 303, i16 157, i16 937, i16 339, i16 307, i16 308, i16 941, i16 157, i16 344, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 306, i16 717, i16 564, i16 75, i16 154, i16 84, i16 722, i16 86, i16 154, i16 75, i16 83, i16 83, i16 84, i16 154, i16 569, i16 132, i16 133, i16 83, i16 84, i16 574, i16 130, i16 346, i16 480, i16 132, i16 133, i16 84, i16 588, i16 86, i16 57, i16 58, i16 83, i16 161, i16 388, i16 149, i16 150, i16 152, i16 83, i16 154, i16 394, i16 68, i16 396, i16 151, i16 84, i16 152, i16 86, i16 154, i16 34, i16 157, i16 154, i16 158, i16 160, i16 767, i16 84, i16 125, i16 86, i16 36, i16 514, i16 110, i16 111, i16 132, i16 133, i16 519, i16 159, i16 160, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 149, i16 150, i16 80, i16 81, i16 151, i16 633, i16 151, i16 68, i16 636, i16 152, i16 152, i16 154, i16 154, i16 157, i16 110, i16 164, i16 152, i16 157, i16 154, i16 148, i16 149, i16 150, i16 84, i16 165, i16 86, i16 67, i16 84, i16 652, i16 653, i16 165, i16 154, i16 130, i16 664, i16 658, i16 162, i16 157, i16 117, i16 149, i16 150, i16 120, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 148, i16 149, i16 150, i16 475, i16 157, i16 8, i16 151, i16 151, i16 84, i16 49, i16 86, i16 16, i16 521, i16 485, i16 94, i16 160, i16 159, i16 627, i16 696, i16 521, i16 159, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 521, i16 159, i16 16, i16 159, i16 540, i16 642, i16 707, i16 161, i16 158, i16 117, i16 84, i16 540, i16 120, i16 159, i16 149, i16 150, i16 83, i16 84, i16 517, i16 540, i16 83, i16 719, i16 89, i16 721, i16 83, i16 561, i16 83, i16 160, i16 733, i16 104, i16 105, i16 106, i16 561, i16 163, i16 735, i16 584, i16 117, i16 83, i16 587, i16 120, i16 561, i16 157, i16 578, i16 157, i16 543, i16 555, i16 149, i16 150, i16 558, i16 578, i16 30, i16 752, i16 83, i16 161, i16 104, i16 105, i16 106, i16 578, i16 557, i16 159, i16 559, i16 560, i16 763, i16 162, i16 613, i16 16, i16 84, i16 704, i16 569, i16 158, i16 768, i16 157, i16 159, i16 574, i16 148, i16 149, i16 150, i16 602, i16 8, i16 602, i16 161, i16 580, i16 83, i16 632, i16 128, i16 602, i16 611, i16 159, i16 159, i16 602, i16 602, i16 128, i16 602, i16 51, i16 52, i16 53, i16 158, i16 55, i16 597, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 641, i16 55, i16 606, i16 809, i16 67, i16 158, i16 83, i16 641, i16 850, i16 663, i16 820, i16 161, i16 160, i16 67, i16 618, i16 641, i16 157, i16 859, i16 83, i16 157, i16 159, i16 129, i16 162, i16 627, i16 157, i16 68, i16 157, i16 681, i16 682, i16 835, i16 162, i16 646, i16 75, i16 157, i16 162, i16 157, i16 842, i16 158, i16 642, i16 881, i16 83, i16 84, i16 157, i16 673, i16 87, i16 673, i16 652, i16 653, i16 160, i16 16, i16 89, i16 673, i16 658, i16 162, i16 158, i16 673, i16 673, i16 157, i16 673, i16 157, i16 159, i16 903, i16 159, i16 678, i16 705, i16 669, i16 159, i16 8, i16 698, i16 8, i16 700, i16 705, i16 160, i16 727, i16 30, i16 159, i16 158, i16 887, i16 159, i16 705, i16 8, i16 923, i16 892, i16 36, i16 824, i16 36, i16 740, i16 158, i16 894, i16 132, i16 158, i16 706, i16 898, i16 159, i16 900, i16 162, i16 902, i16 701, i16 157, i16 160, i16 704, i16 911, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 762, i16 152, i16 161, i16 154, i16 8, i16 719, i16 157, i16 721, i16 160, i16 68, i16 158, i16 161, i16 117, i16 155, i16 165, i16 777, i16 75, i16 755, i16 209, i16 160, i16 159, i16 158, i16 213, i16 158, i16 83, i16 84, i16 940, i16 158, i16 87, i16 159, i16 221, i16 84, i16 223, i16 224, i16 225, i16 161, i16 117, i16 161, i16 160, i16 120, i16 30, i16 157, i16 84, i16 161, i16 782, i16 159, i16 758, i16 159, i16 16, i16 16, i16 159, i16 789, i16 158, i16 16, i16 768, i16 84, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 160, i16 160, i16 802, i16 84, i16 828, i16 160, i16 160, i16 102, i16 159, i16 151, i16 131, i16 132, i16 159, i16 813, i16 799, i16 102, i16 801, i16 118, i16 161, i16 159, i16 844, i16 157, i16 908, i16 158, i16 55, i16 652, i16 850, i16 721, i16 191, i16 719, i16 344, i16 152, i16 578, i16 154, i16 175, i16 89, i16 157, i16 705, i16 801, i16 806, i16 740, i16 606, i16 828, i16 843, i16 165, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 881, i16 55, i16 346, i16 682, i16 311, i16 881, i16 854, i16 890, i16 330, i16 745, i16 316, i16 302, i16 896, i16 67, i16 871, i16 272, i16 873, i16 269, i16 307, i16 301, i16 580, i16 852, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 909, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 868, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 926, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 914, i16 889, i16 916, i16 917, i16 -1, i16 919, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 942, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 117, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 11, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 67, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 117, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 14, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 29, i16 15, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 67, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 117, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 10, i16 11, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 67, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 29, i16 15, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 67, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 67, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 74, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 67, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 67, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 101, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 67, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 99, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 97, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 161, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 9, i16 10, i16 11, i16 12, i16 13, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 69, i16 70, i16 -1, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 -1, i16 -1, i16 83, i16 84, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 -1, i16 125, i16 126, i16 127, i16 128, i16 129, i16 -1, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 152, i16 153, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 160, i16 -1, i16 -1, i16 -1, i16 -1, i16 165, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 76, i16 77, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 30, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 30, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 30, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 30, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 30, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 85, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 -1, i16 96, i16 -1, i16 98, i16 -1, i16 100, i16 -1, i16 -1, i16 103, i16 -1, i16 -1, i16 -1, i16 107, i16 108, i16 109, i16 110, i16 -1, i16 112, i16 113, i16 -1, i16 -1, i16 116, i16 -1, i16 -1, i16 119, i16 -1, i16 121, i16 122, i16 123, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 159, i16 160, i16 -1, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 -1, i16 -1, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 -1, i16 -1, i16 -1, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 -1, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 110, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 122, i16 123, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 36, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 155, i16 -1, i16 157, i16 158, i16 -1, i16 48, i16 49, i16 -1, i16 163, i16 164, i16 165, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 -1, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 110, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 122, i16 123, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 163, i16 164, i16 165, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 -1, i16 -1, i16 87, i16 88, i16 -1, i16 90, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 110, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 122, i16 123, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 30, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 163, i16 164, i16 165, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 -1, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 110, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 122, i16 123, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 36, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 163, i16 164, i16 165, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 -1, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 110, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 122, i16 123, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 36, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 163, i16 164, i16 165, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 -1, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 110, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 122, i16 123, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 163, i16 164, i16 165, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 -1, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 110, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 -1, i16 122, i16 123, i16 12, i16 13, i16 -1, i16 15, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 155, i16 -1, i16 157, i16 -1, i16 -1, i16 48, i16 49, i16 -1, i16 163, i16 164, i16 165, i16 54, i16 -1, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 -1, i16 68, i16 69, i16 70, i16 -1, i16 -1, i16 -1, i16 -1, i16 75, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 81, i16 82, i16 83, i16 84, i16 -1, i16 -1, i16 87, i16 -1, i16 -1, i16 90, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 110, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 122, i16 123, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 131, i16 132, i16 -1, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 147, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 157, i16 -1, i16 9, i16 10, i16 11, i16 -1, i16 163, i16 164, i16 165, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 9, i16 10, i16 11, i16 12, i16 13, i16 -1, i16 -1, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 69, i16 70, i16 -1, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 -1, i16 -1, i16 83, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 -1, i16 125, i16 126, i16 127, i16 128, i16 129, i16 -1, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 3, i16 4, i16 5, i16 6, i16 7, i16 159, i16 9, i16 10, i16 11, i16 12, i16 13, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 161, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 69, i16 70, i16 -1, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 -1, i16 -1, i16 83, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 -1, i16 125, i16 126, i16 127, i16 128, i16 129, i16 -1, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 -1, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 154, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 161, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 162, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 161, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 161, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 161, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 161, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 9, i16 10, i16 11, i16 12, i16 13, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 161, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 69, i16 70, i16 -1, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 -1, i16 -1, i16 83, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 161, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 -1, i16 125, i16 126, i16 127, i16 128, i16 129, i16 -1, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 3, i16 4, i16 5, i16 6, i16 7, i16 -1, i16 9, i16 10, i16 11, i16 12, i16 13, i16 152, i16 153, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 69, i16 70, i16 -1, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 -1, i16 -1, i16 83, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 -1, i16 125, i16 126, i16 127, i16 128, i16 129, i16 -1, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 152, i16 153, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 159, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 159, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 14, i16 -1, i16 158, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 102, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 158, i16 -1, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 9, i16 10, i16 11, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 29, i16 -1, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 -1, i16 55, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 67], align 16
@4 = internal constant [7399 x i16] [i16 99, i16 153, i16 87, i16 133, i16 133, i16 292, i16 230, i16 333, i16 88, i16 724, i16 134, i16 134, i16 91, i16 92, i16 336, i16 86, i16 295, i16 155, i16 135, i16 136, i16 697, i16 602, i16 -471, i16 -470, i16 330, i16 639, i16 478, i16 163, i16 118, i16 119, i16 276, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 129, i16 578, i16 311, i16 137, i16 138, i16 139, i16 140, i16 141, i16 142, i16 143, i16 144, i16 147, i16 313, i16 159, i16 727, i16 171, i16 647, i16 316, i16 330, i16 512, i16 344, i16 597, i16 346, i16 825, i16 -433, i16 170, i16 344, i16 807, i16 786, i16 387, i16 737, i16 854, i16 177, i16 177, i16 -165, i16 387, i16 890, i16 177, i16 190, i16 186, i16 580, i16 516, i16 35, i16 157, i16 606, i16 896, i16 696, i16 -431, i16 306, i16 273, i16 3, i16 337, i16 387, i16 359, i16 360, i16 831, i16 863, i16 216, i16 705, i16 218, i16 834, i16 -189, i16 219, i16 -190, i16 120, i16 387, i16 -192, i16 165, i16 35, i16 629, i16 818, i16 160, i16 198, i16 163, i16 35, i16 30, i16 31, i16 771, i16 772, i16 773, i16 774, i16 775, i16 776, i16 179, i16 819, i16 228, i16 -433, i16 184, i16 164, i16 -394, i16 372, i16 337, i16 553, i16 133, i16 733, i16 229, i16 833, i16 50, i16 227, i16 167, i16 134, i16 172, i16 361, i16 338, i16 864, i16 293, i16 569, i16 -433, i16 297, i16 -431, i16 307, i16 274, i16 652, i16 -436, i16 598, i16 147, i16 -433, i16 296, i16 517, i16 777, i16 758, i16 759, i16 778, i16 82, i16 231, i16 336, i16 115, i16 860, i16 748, i16 658, i16 -431, i16 308, i16 677, i16 -471, i16 -470, i16 562, i16 586, i16 -471, i16 -470, i16 -431, i16 309, i16 275, i16 721, i16 567, i16 226, i16 539, i16 648, i16 133, i16 923, i16 82, i16 177, i16 579, i16 315, i16 312, i16 134, i16 82, i16 808, i16 319, i16 322, i16 323, i16 133, i16 325, i16 350, i16 779, i16 362, i16 849, i16 850, i16 134, i16 317, i16 331, i16 337, i16 345, i16 335, i16 347, i16 340, i16 367, i16 761, i16 573, i16 612, i16 99, i16 611, i16 269, i16 855, i16 115, i16 -165, i16 351, i16 354, i16 891, i16 115, i16 180, i16 581, i16 147, i16 147, i16 270, i16 607, i16 897, i16 366, i16 215, i16 371, i16 937, i16 314, i16 181, i16 706, i16 173, i16 153, i16 -189, i16 115, i16 -190, i16 395, i16 673, i16 -192, i16 386, i16 233, i16 234, i16 392, i16 867, i16 924, i16 174, i16 870, i16 175, i16 155, i16 176, i16 571, i16 714, i16 715, i16 713, i16 177, i16 482, i16 483, i16 484, i16 486, i16 487, i16 488, i16 489, i16 490, i16 491, i16 492, i16 493, i16 494, i16 495, i16 496, i16 497, i16 498, i16 499, i16 500, i16 501, i16 502, i16 503, i16 504, i16 505, i16 506, i16 507, i16 508, i16 509, i16 339, i16 511, i16 479, i16 116, i16 177, i16 76, i16 520, i16 682, i16 522, i16 523, i16 524, i16 525, i16 526, i16 527, i16 528, i16 529, i16 530, i16 531, i16 532, i16 533, i16 534, i16 932, i16 481, i16 574, i16 115, i16 536, i16 235, i16 236, i16 237, i16 147, i16 542, i16 157, i16 147, i16 756, i16 513, i16 760, i16 518, i16 177, i16 99, i16 337, i16 550, i16 551, i16 185, i16 682, i16 199, i16 -432, i16 200, i16 170, i16 337, i16 50, i16 823, i16 187, i16 188, i16 115, i16 515, i16 208, i16 201, i16 933, i16 934, i16 935, i16 564, i16 115, i16 758, i16 759, i16 202, i16 546, i16 206, i16 938, i16 570, i16 518, i16 549, i16 943, i16 207, i16 575, i16 277, i16 278, i16 279, i16 280, i16 281, i16 282, i16 283, i16 284, i16 285, i16 286, i16 287, i16 288, i16 289, i16 547, i16 764, i16 650, i16 131, i16 657, i16 208, i16 769, i16 368, i16 189, i16 131, i16 115, i16 115, i16 35, i16 228, i16 656, i16 683, i16 684, i16 115, i16 35, i16 336, i16 -432, i16 198, i16 615, i16 683, i16 684, i16 208, i16 668, i16 209, i16 290, i16 291, i16 115, i16 810, i16 605, i16 211, i16 212, i16 116, i16 115, i16 76, i16 609, i16 -431, i16 610, i16 -432, i16 208, i16 116, i16 221, i16 76, i16 844, i16 -435, i16 228, i16 -219, i16 -432, i16 815, i16 208, i16 152, i16 368, i16 238, i16 619, i16 187, i16 188, i16 683, i16 684, i16 622, i16 939, i16 940, i16 771, i16 772, i16 773, i16 774, i16 775, i16 776, i16 211, i16 212, i16 223, i16 225, i16 240, i16 698, i16 272, i16 241, i16 700, i16 116, i16 116, i16 76, i16 76, i16 229, i16 50, i16 385, i16 116, i16 -434, i16 76, i16 210, i16 211, i16 212, i16 208, i16 82, i16 224, i16 270, i16 845, i16 656, i16 718, i16 82, i16 215, i16 -431, i16 725, i16 723, i16 300, i16 -436, i16 777, i16 211, i16 212, i16 778, i16 771, i16 772, i16 773, i16 774, i16 775, i16 776, i16 369, i16 211, i16 212, i16 614, i16 298, i16 301, i16 -431, i16 303, i16 208, i16 591, i16 368, i16 310, i16 133, i16 617, i16 318, i16 -431, i16 326, i16 695, i16 744, i16 134, i16 327, i16 771, i16 772, i16 773, i16 774, i16 775, i16 776, i16 624, i16 328, i16 329, i16 332, i16 133, i16 703, i16 755, i16 826, i16 355, i16 777, i16 208, i16 134, i16 778, i16 343, i16 211, i16 212, i16 592, i16 593, i16 621, i16 626, i16 356, i16 656, i16 594, i16 723, i16 357, i16 133, i16 358, i16 374, i16 788, i16 757, i16 758, i16 759, i16 134, i16 384, i16 789, i16 662, i16 777, i16 387, i16 666, i16 778, i16 645, i16 394, i16 133, i16 396, i16 628, i16 634, i16 211, i16 212, i16 637, i16 134, i16 397, i16 802, i16 399, i16 848, i16 804, i16 758, i16 759, i16 350, i16 635, i16 398, i16 322, i16 640, i16 813, i16 537, i16 685, i16 543, i16 160, i16 750, i16 575, i16 554, i16 816, i16 557, i16 559, i16 575, i16 363, i16 211, i16 212, i16 99, i16 560, i16 87, i16 869, i16 351, i16 568, i16 685, i16 584, i16 88, i16 99, i16 572, i16 583, i16 91, i16 92, i16 587, i16 86, i16 266, i16 267, i16 268, i16 589, i16 269, i16 672, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 133, i16 269, i16 392, i16 843, i16 270, i16 590, i16 596, i16 134, i16 879, i16 666, i16 853, i16 600, i16 601, i16 270, i16 693, i16 702, i16 603, i16 892, i16 608, i16 613, i16 660, i16 663, i16 616, i16 147, i16 -457, i16 130, i16 -459, i16 685, i16 685, i16 871, i16 620, i16 708, i16 131, i16 -435, i16 630, i16 627, i16 873, i16 625, i16 147, i16 879, i16 115, i16 35, i16 632, i16 99, i16 37, i16 87, i16 575, i16 575, i16 665, i16 669, i16 670, i16 88, i16 575, i16 671, i16 675, i16 91, i16 92, i16 681, i16 86, i16 704, i16 701, i16 920, i16 710, i16 734, i16 133, i16 729, i16 712, i16 719, i16 99, i16 727, i16 99, i16 134, i16 728, i16 785, i16 735, i16 732, i16 739, i16 910, i16 736, i16 645, i16 740, i16 931, i16 913, i16 741, i16 859, i16 641, i16 685, i16 743, i16 914, i16 65, i16 745, i16 753, i16 916, i16 746, i16 917, i16 749, i16 919, i16 322, i16 762, i16 763, i16 147, i16 925, i16 771, i16 772, i16 773, i16 774, i16 775, i16 776, i16 811, i16 116, i16 766, i16 76, i16 768, i16 575, i16 132, i16 575, i16 770, i16 642, i16 790, i16 787, i16 791, i16 794, i16 82, i16 666, i16 131, i16 99, i16 364, i16 796, i16 798, i16 799, i16 370, i16 800, i16 115, i16 35, i16 942, i16 801, i16 37, i16 805, i16 364, i16 820, i16 370, i16 364, i16 370, i16 814, i16 777, i16 817, i16 827, i16 778, i16 828, i16 830, i16 832, i16 847, i16 824, i16 840, i16 806, i16 841, i16 852, i16 868, i16 872, i16 99, i16 875, i16 889, i16 575, i16 895, i16 771, i16 772, i16 773, i16 774, i16 775, i16 776, i16 894, i16 898, i16 99, i16 -271, i16 685, i16 900, i16 902, i16 -77, i16 906, i16 903, i16 643, i16 65, i16 907, i16 99, i16 836, i16 908, i16 753, i16 909, i16 893, i16 918, i16 874, i16 926, i16 922, i16 936, i16 191, i16 717, i16 880, i16 767, i16 342, i16 765, i16 576, i16 116, i16 659, i16 76, i16 324, i16 232, i16 132, i16 751, i16 838, i16 842, i16 793, i16 676, i16 861, i16 99, i16 82, i16 -472, i16 -472, i16 -472, i16 -472, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 880, i16 269, i16 577, i16 738, i16 552, i16 905, i16 888, i16 912, i16 565, i16 797, i16 556, i16 545, i16 915, i16 270, i16 99, i16 514, i16 99, i16 510, i16 548, i16 544, i16 661, i16 887, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 666, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 899, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 685, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 99, i16 911, i16 99, i16 99, i16 0, i16 99, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 99, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 0, i16 54, i16 55, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 74, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 674, i16 244, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 270, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 0, i16 54, i16 55, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 74, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 731, i16 294, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 245, i16 11, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 270, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 0, i16 0, i16 54, i16 55, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 74, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 243, i16 244, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 270, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 377, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 245, i16 11, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 270, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 566, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 270, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 680, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 270, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 747, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 270, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 803, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 270, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 839, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 846, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 901, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 -472, i16 -472, i16 -472, i16 -472, i16 -472, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 927, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 928, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 929, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 930, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 944, i16 0, i16 80, i16 81, i16 82, i16 401, i16 402, i16 403, i16 404, i16 405, i16 0, i16 406, i16 407, i16 408, i16 409, i16 410, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 411, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 412, i16 413, i16 0, i16 414, i16 415, i16 416, i16 417, i16 418, i16 419, i16 420, i16 421, i16 422, i16 0, i16 0, i16 423, i16 35, i16 0, i16 0, i16 0, i16 0, i16 0, i16 424, i16 425, i16 426, i16 427, i16 428, i16 429, i16 430, i16 431, i16 432, i16 433, i16 434, i16 435, i16 436, i16 437, i16 438, i16 439, i16 440, i16 441, i16 442, i16 443, i16 444, i16 445, i16 446, i16 447, i16 448, i16 449, i16 450, i16 451, i16 452, i16 453, i16 454, i16 455, i16 456, i16 457, i16 0, i16 458, i16 459, i16 460, i16 461, i16 462, i16 0, i16 463, i16 464, i16 465, i16 466, i16 467, i16 468, i16 469, i16 470, i16 471, i16 472, i16 0, i16 0, i16 0, i16 0, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 473, i16 474, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 475, i16 0, i16 0, i16 0, i16 0, i16 82, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 30, i16 31, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 376, i16 61, i16 62, i16 63, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 633, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 636, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 707, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 752, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 835, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 29, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 34, i16 35, i16 36, i16 0, i16 37, i16 0, i16 0, i16 38, i16 39, i16 40, i16 41, i16 42, i16 0, i16 43, i16 0, i16 44, i16 0, i16 45, i16 0, i16 0, i16 46, i16 0, i16 0, i16 0, i16 47, i16 48, i16 49, i16 50, i16 0, i16 52, i16 53, i16 0, i16 0, i16 54, i16 0, i16 0, i16 56, i16 0, i16 57, i16 58, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 78, i16 79, i16 0, i16 0, i16 80, i16 81, i16 82, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 0, i16 0, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 12, i16 13, i16 0, i16 0, i16 0, i16 0, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 115, i16 35, i16 0, i16 0, i16 37, i16 0, i16 0, i16 38, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 50, i16 0, i16 0, i16 0, i16 0, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 58, i16 59, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 145, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 388, i16 0, i16 77, i16 389, i16 0, i16 12, i16 13, i16 0, i16 80, i16 81, i16 82, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 115, i16 35, i16 0, i16 0, i16 37, i16 0, i16 0, i16 38, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 50, i16 0, i16 0, i16 0, i16 0, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 58, i16 59, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 146, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 0, i16 12, i16 13, i16 0, i16 80, i16 81, i16 82, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 115, i16 35, i16 0, i16 0, i16 37, i16 365, i16 0, i16 38, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 50, i16 0, i16 0, i16 0, i16 0, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 58, i16 59, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 485, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 0, i16 12, i16 13, i16 0, i16 80, i16 81, i16 82, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 115, i16 35, i16 0, i16 0, i16 37, i16 0, i16 0, i16 38, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 50, i16 0, i16 0, i16 0, i16 0, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 58, i16 59, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 521, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 0, i16 12, i16 13, i16 0, i16 80, i16 81, i16 82, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 115, i16 35, i16 0, i16 0, i16 37, i16 0, i16 0, i16 38, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 50, i16 0, i16 0, i16 0, i16 0, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 58, i16 59, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 540, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 0, i16 12, i16 13, i16 0, i16 80, i16 81, i16 82, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 115, i16 35, i16 0, i16 0, i16 37, i16 0, i16 0, i16 38, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 50, i16 0, i16 0, i16 0, i16 0, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 58, i16 59, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 541, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 0, i16 12, i16 13, i16 0, i16 80, i16 81, i16 82, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 115, i16 35, i16 0, i16 0, i16 37, i16 0, i16 0, i16 38, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 50, i16 0, i16 0, i16 0, i16 0, i16 4, i16 5, i16 6, i16 7, i16 8, i16 0, i16 0, i16 58, i16 59, i16 9, i16 10, i16 0, i16 11, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 388, i16 0, i16 77, i16 0, i16 0, i16 12, i16 13, i16 0, i16 80, i16 81, i16 82, i16 14, i16 0, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 0, i16 26, i16 27, i16 28, i16 0, i16 0, i16 0, i16 0, i16 114, i16 0, i16 0, i16 0, i16 0, i16 0, i16 32, i16 33, i16 115, i16 35, i16 0, i16 0, i16 37, i16 0, i16 0, i16 38, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 50, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 58, i16 59, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 64, i16 65, i16 0, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 73, i16 0, i16 0, i16 0, i16 0, i16 116, i16 75, i16 76, i16 0, i16 0, i16 77, i16 0, i16 242, i16 243, i16 244, i16 0, i16 80, i16 81, i16 82, i16 401, i16 402, i16 403, i16 404, i16 405, i16 0, i16 406, i16 407, i16 408, i16 409, i16 410, i16 0, i16 0, i16 245, i16 807, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 411, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 412, i16 413, i16 0, i16 414, i16 415, i16 416, i16 417, i16 418, i16 419, i16 420, i16 421, i16 422, i16 0, i16 0, i16 876, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 424, i16 425, i16 426, i16 427, i16 428, i16 429, i16 430, i16 431, i16 432, i16 433, i16 434, i16 435, i16 436, i16 437, i16 438, i16 439, i16 440, i16 441, i16 442, i16 443, i16 444, i16 445, i16 446, i16 447, i16 448, i16 449, i16 450, i16 451, i16 452, i16 453, i16 454, i16 455, i16 456, i16 457, i16 0, i16 458, i16 459, i16 460, i16 461, i16 462, i16 0, i16 463, i16 464, i16 465, i16 466, i16 467, i16 468, i16 469, i16 470, i16 471, i16 472, i16 401, i16 402, i16 403, i16 404, i16 405, i16 808, i16 406, i16 407, i16 408, i16 409, i16 410, i16 877, i16 474, i16 76, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 878, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 411, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 412, i16 413, i16 0, i16 414, i16 415, i16 416, i16 417, i16 418, i16 419, i16 420, i16 421, i16 422, i16 0, i16 0, i16 876, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 424, i16 425, i16 426, i16 427, i16 428, i16 429, i16 430, i16 431, i16 432, i16 433, i16 434, i16 435, i16 436, i16 437, i16 438, i16 439, i16 440, i16 441, i16 442, i16 443, i16 444, i16 445, i16 446, i16 447, i16 448, i16 449, i16 450, i16 451, i16 452, i16 453, i16 454, i16 455, i16 456, i16 457, i16 0, i16 458, i16 459, i16 460, i16 461, i16 462, i16 0, i16 463, i16 464, i16 465, i16 466, i16 467, i16 468, i16 469, i16 470, i16 471, i16 472, i16 0, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 877, i16 474, i16 76, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 904, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 730, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 599, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 604, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 623, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 631, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 401, i16 402, i16 403, i16 404, i16 405, i16 0, i16 406, i16 407, i16 408, i16 409, i16 410, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 692, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 411, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 412, i16 413, i16 0, i16 414, i16 415, i16 416, i16 417, i16 418, i16 419, i16 420, i16 421, i16 422, i16 0, i16 0, i16 423, i16 0, i16 0, i16 0, i16 0, i16 0, i16 694, i16 424, i16 425, i16 426, i16 427, i16 428, i16 429, i16 430, i16 431, i16 432, i16 433, i16 434, i16 435, i16 436, i16 437, i16 438, i16 439, i16 440, i16 441, i16 442, i16 443, i16 444, i16 445, i16 446, i16 447, i16 448, i16 449, i16 450, i16 451, i16 452, i16 453, i16 454, i16 455, i16 456, i16 457, i16 0, i16 458, i16 459, i16 460, i16 461, i16 462, i16 0, i16 463, i16 464, i16 465, i16 466, i16 467, i16 468, i16 469, i16 470, i16 471, i16 472, i16 401, i16 402, i16 403, i16 404, i16 405, i16 0, i16 406, i16 407, i16 408, i16 409, i16 410, i16 473, i16 474, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 411, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 412, i16 413, i16 0, i16 414, i16 415, i16 416, i16 771, i16 772, i16 773, i16 774, i16 775, i16 776, i16 0, i16 0, i16 921, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 424, i16 425, i16 426, i16 427, i16 428, i16 429, i16 430, i16 431, i16 432, i16 433, i16 434, i16 435, i16 436, i16 437, i16 438, i16 439, i16 440, i16 441, i16 442, i16 443, i16 444, i16 445, i16 446, i16 447, i16 448, i16 449, i16 450, i16 451, i16 452, i16 453, i16 454, i16 455, i16 456, i16 457, i16 0, i16 458, i16 459, i16 460, i16 461, i16 462, i16 0, i16 463, i16 464, i16 465, i16 466, i16 467, i16 468, i16 469, i16 470, i16 471, i16 472, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 473, i16 474, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 271, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 334, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 375, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 535, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 538, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 555, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 558, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 563, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 582, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 678, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 242, i16 243, i16 244, i16 0, i16 0, i16 299, i16 0, i16 679, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 561, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 699, i16 0, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 618, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 242, i16 243, i16 244, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 245, i16 0, i16 246, i16 247, i16 248, i16 249, i16 250, i16 251, i16 252, i16 253, i16 254, i16 255, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 264, i16 265, i16 266, i16 267, i16 268, i16 0, i16 269, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 270], align 16
@5 = internal constant [945 x i16] [i16 80, i16 0, i16 2, i16 1, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 372, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 464, i16 0, i16 0, i16 393, i16 177, i16 178, i16 407, i16 408, i16 81, i16 446, i16 145, i16 406, i16 397, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 428, i16 428, i16 0, i16 378, i16 0, i16 428, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 173, i16 179, i16 181, i16 0, i16 0, i16 409, i16 410, i16 411, i16 416, i16 412, i16 413, i16 414, i16 0, i16 95, i16 415, i16 0, i16 0, i16 152, i16 125, i16 399, i16 0, i16 0, i16 83, i16 423, i16 79, i16 86, i16 87, i16 88, i16 0, i16 175, i16 89, i16 90, i16 212, i16 133, i16 0, i16 134, i16 355, i16 427, i16 381, i16 442, i16 0, i16 421, i16 369, i16 422, i16 0, i16 0, i16 430, i16 0, i16 443, i16 426, i16 437, i16 444, i16 359, i16 393, i16 81, i16 0, i16 381, i16 491, i16 492, i16 0, i16 494, i16 495, i16 371, i16 373, i16 375, i16 340, i16 341, i16 342, i16 343, i16 464, i16 393, i16 0, i16 433, i16 0, i16 320, i16 322, i16 360, i16 361, i16 362, i16 363, i16 364, i16 365, i16 366, i16 368, i16 0, i16 0, i16 469, i16 0, i16 467, i16 463, i16 465, i16 298, i16 394, i16 301, i16 395, i16 402, i16 451, i16 396, i16 306, i16 244, i16 0, i16 243, i16 381, i16 156, i16 428, i16 367, i16 0, i16 0, i16 292, i16 293, i16 0, i16 0, i16 294, i16 0, i16 0, i16 0, i16 429, i16 0, i16 0, i16 0, i16 0, i16 0, i16 123, i16 0, i16 125, i16 0, i16 102, i16 103, i16 0, i16 118, i16 0, i16 0, i16 0, i16 120, i16 115, i16 0, i16 240, i16 241, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 464, i16 464, i16 478, i16 0, i16 418, i16 0, i16 0, i16 0, i16 476, i16 0, i16 93, i16 0, i16 85, i16 0, i16 0, i16 400, i16 0, i16 401, i16 0, i16 0, i16 0, i16 448, i16 0, i16 0, i16 389, i16 171, i16 176, i16 0, i16 0, i16 0, i16 0, i16 0, i16 382, i16 379, i16 0, i16 428, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 146, i16 0, i16 428, i16 0, i16 0, i16 392, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 319, i16 321, i16 379, i16 0, i16 0, i16 0, i16 0, i16 431, i16 464, i16 0, i16 405, i16 464, i16 402, i16 0, i16 403, i16 300, i16 428, i16 0, i16 0, i16 0, i16 0, i16 0, i16 143, i16 379, i16 0, i16 0, i16 0, i16 144, i16 0, i16 0, i16 0, i16 295, i16 297, i16 0, i16 0, i16 0, i16 139, i16 140, i16 155, i16 0, i16 0, i16 101, i16 141, i16 0, i16 154, i16 118, i16 121, i16 0, i16 0, i16 0, i16 118, i16 0, i16 0, i16 97, i16 0, i16 99, i16 0, i16 142, i16 0, i16 163, i16 431, i16 498, i16 0, i16 496, i16 0, i16 0, i16 183, i16 379, i16 185, i16 0, i16 0, i16 0, i16 0, i16 417, i16 477, i16 0, i16 0, i16 431, i16 475, i16 420, i16 474, i16 84, i16 92, i16 0, i16 80, i16 354, i16 0, i16 132, i16 124, i16 126, i16 127, i16 128, i16 129, i16 130, i16 370, i16 419, i16 0, i16 82, i16 0, i16 233, i16 0, i16 235, i16 237, i16 0, i16 0, i16 213, i16 0, i16 125, i16 216, i16 379, i16 0, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 46, i16 47, i16 11, i16 12, i16 13, i16 16, i16 17, i16 18, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 14, i16 15, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 49, i16 50, i16 51, i16 52, i16 53, i16 41, i16 42, i16 43, i16 44, i16 45, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 61, i16 59, i16 60, i16 56, i16 57, i16 48, i16 54, i16 55, i16 66, i16 67, i16 68, i16 62, i16 63, i16 65, i16 64, i16 58, i16 69, i16 0, i16 70, i16 78, i16 424, i16 449, i16 0, i16 0, i16 325, i16 327, i16 326, i16 0, i16 0, i16 358, i16 323, i16 324, i16 328, i16 330, i16 329, i16 346, i16 347, i16 344, i16 345, i16 352, i16 348, i16 349, i16 350, i16 351, i16 338, i16 339, i16 332, i16 333, i16 331, i16 334, i16 336, i16 337, i16 353, i16 335, i16 425, i16 450, i16 0, i16 0, i16 460, i16 0, i16 462, i16 445, i16 0, i16 0, i16 304, i16 307, i16 308, i16 309, i16 311, i16 312, i16 313, i16 314, i16 315, i16 316, i16 317, i16 318, i16 310, i16 493, i16 374, i16 405, i16 432, i16 0, i16 0, i16 0, i16 468, i16 0, i16 466, i16 183, i16 455, i16 0, i16 454, i16 456, i16 0, i16 245, i16 242, i16 0, i16 398, i16 0, i16 291, i16 0, i16 0, i16 294, i16 0, i16 0, i16 150, i16 0, i16 379, i16 122, i16 157, i16 0, i16 119, i16 0, i16 118, i16 0, i16 98, i16 100, i16 0, i16 118, i16 114, i16 239, i16 0, i16 0, i16 0, i16 489, i16 490, i16 91, i16 0, i16 187, i16 0, i16 0, i16 379, i16 0, i16 404, i16 0, i16 485, i16 488, i16 486, i16 0, i16 480, i16 0, i16 482, i16 481, i16 484, i16 80, i16 0, i16 0, i16 447, i16 238, i16 0, i16 234, i16 183, i16 0, i16 0, i16 0, i16 0, i16 224, i16 0, i16 390, i16 439, i16 357, i16 0, i16 391, i16 438, i16 0, i16 441, i16 440, i16 305, i16 473, i16 431, i16 464, i16 303, i16 187, i16 452, i16 453, i16 224, i16 125, i16 210, i16 0, i16 125, i16 208, i16 135, i16 0, i16 296, i16 0, i16 464, i16 0, i16 0, i16 431, i16 0, i16 203, i16 203, i16 138, i16 290, i16 161, i16 0, i16 0, i16 108, i16 111, i16 116, i16 0, i16 0, i16 164, i16 147, i16 497, i16 184, i16 0, i16 379, i16 247, i16 252, i16 186, i16 0, i16 0, i16 487, i16 479, i16 0, i16 0, i16 96, i16 0, i16 236, i16 187, i16 0, i16 0, i16 0, i16 224, i16 0, i16 228, i16 229, i16 230, i16 0, i16 218, i16 220, i16 167, i16 225, i16 226, i16 458, i16 356, i16 461, i16 0, i16 379, i16 0, i16 214, i16 0, i16 0, i16 294, i16 431, i16 0, i16 464, i16 0, i16 0, i16 125, i16 197, i16 151, i16 203, i16 0, i16 203, i16 0, i16 0, i16 0, i16 153, i16 108, i16 117, i16 109, i16 0, i16 0, i16 108, i16 113, i16 188, i16 0, i16 273, i16 0, i16 247, i16 302, i16 0, i16 94, i16 131, i16 379, i16 211, i16 125, i16 217, i16 0, i16 227, i16 383, i16 224, i16 168, i16 169, i16 472, i16 0, i16 383, i16 136, i16 0, i16 0, i16 405, i16 0, i16 0, i16 125, i16 195, i16 148, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 199, i16 0, i16 125, i16 0, i16 110, i16 106, i16 108, i16 109, i16 0, i16 247, i16 280, i16 281, i16 282, i16 279, i16 278, i16 277, i16 0, i16 272, i16 180, i16 246, i16 0, i16 0, i16 274, i16 275, i16 253, i16 273, i16 483, i16 0, i16 215, i16 231, i16 0, i16 231, i16 221, i16 170, i16 0, i16 247, i16 231, i16 209, i16 0, i16 191, i16 0, i16 0, i16 0, i16 0, i16 201, i16 0, i16 206, i16 207, i16 125, i16 200, i16 159, i16 0, i16 0, i16 107, i16 0, i16 112, i16 104, i16 273, i16 0, i16 379, i16 0, i16 284, i16 0, i16 381, i16 276, i16 182, i16 247, i16 0, i16 380, i16 0, i16 380, i16 222, i16 273, i16 380, i16 125, i16 193, i16 137, i16 149, i16 0, i16 198, i16 202, i16 125, i16 205, i16 0, i16 0, i16 162, i16 105, i16 174, i16 254, i16 0, i16 250, i16 0, i16 285, i16 0, i16 248, i16 0, i16 0, i16 288, i16 0, i16 273, i16 232, i16 0, i16 0, i16 387, i16 0, i16 386, i16 0, i16 0, i16 299, i16 0, i16 0, i16 196, i16 204, i16 160, i16 0, i16 81, i16 58, i16 255, i16 266, i16 0, i16 0, i16 257, i16 0, i16 0, i16 0, i16 267, i16 379, i16 283, i16 0, i16 0, i16 249, i16 379, i16 172, i16 125, i16 388, i16 0, i16 384, i16 125, i16 223, i16 125, i16 0, i16 125, i16 0, i16 256, i16 258, i16 259, i16 260, i16 0, i16 0, i16 286, i16 379, i16 287, i16 0, i16 0, i16 385, i16 0, i16 0, i16 194, i16 0, i16 268, i16 262, i16 263, i16 265, i16 261, i16 289, i16 224, i16 380, i16 380, i16 380, i16 158, i16 264, i16 0, i16 166, i16 376, i16 377, i16 231, i16 380, i16 0, i16 269, i16 125, i16 380, i16 0, i16 251, i16 270], align 16
@6 = internal constant [499 x i8] calign 16
@compiler_globals = external dso_local global %2, align 8
@7 = private unnamed_addr constant [60 x i8] c"__HALT_COMPILER() can only be used from the outermost scope\00", align 1
@8 = private unnamed_addr constant [10 x i8] c"{closure}\00", align 1
@zend_known_strings = external dso_local global %34**, align 8
@zend_empty_string = external dso_local global %34*, align 8
@9 = internal constant [499 x i16] [i16 0, i16 166, i16 167, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 168, i16 169, i16 169, i16 169, i16 169, i16 169, i16 169, i16 169, i16 170, i16 170, i16 171, i16 171, i16 172, i16 172, i16 173, i16 173, i16 173, i16 174, i16 174, i16 174, i16 174, i16 174, i16 174, i16 174, i16 175, i16 174, i16 176, i16 174, i16 174, i16 174, i16 174, i16 174, i16 174, i16 177, i16 177, i16 178, i16 178, i16 179, i16 179, i16 180, i16 180, i16 181, i16 181, i16 182, i16 182, i16 183, i16 183, i16 184, i16 184, i16 185, i16 185, i16 186, i16 186, i16 187, i16 187, i16 188, i16 188, i16 189, i16 189, i16 189, i16 189, i16 189, i16 189, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 191, i16 190, i16 190, i16 190, i16 190, i16 190, i16 190, i16 192, i16 192, i16 193, i16 193, i16 194, i16 194, i16 195, i16 195, i16 196, i16 197, i16 198, i16 198, i16 199, i16 199, i16 201, i16 200, i16 202, i16 200, i16 203, i16 203, i16 204, i16 204, i16 206, i16 205, i16 208, i16 207, i16 209, i16 209, i16 210, i16 210, i16 211, i16 211, i16 212, i16 212, i16 212, i16 212, i16 213, i16 213, i16 214, i16 214, i16 215, i16 215, i16 216, i16 216, i16 216, i16 216, i16 217, i16 217, i16 217, i16 218, i16 218, i16 219, i16 219, i16 220, i16 220, i16 221, i16 221, i16 222, i16 222, i16 223, i16 223, i16 224, i16 224, i16 225, i16 225, i16 226, i16 226, i16 227, i16 227, i16 228, i16 228, i16 229, i16 229, i16 229, i16 230, i16 230, i16 231, i16 231, i16 232, i16 232, i16 233, i16 233, i16 234, i16 234, i16 235, i16 236, i16 236, i16 237, i16 237, i16 238, i16 238, i16 239, i16 239, i16 239, i16 239, i16 240, i16 240, i16 241, i16 241, i16 241, i16 242, i16 242, i16 243, i16 243, i16 244, i16 245, i16 245, i16 245, i16 245, i16 246, i16 246, i16 247, i16 248, i16 248, i16 249, i16 249, i16 250, i16 250, i16 251, i16 251, i16 252, i16 252, i16 252, i16 252, i16 252, i16 252, i16 253, i16 253, i16 254, i16 254, i16 255, i16 255, i16 256, i16 257, i16 258, i16 258, i16 259, i16 260, i16 260, i16 261, i16 261, i16 263, i16 262, i16 264, i16 264, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 265, i16 266, i16 267, i16 268, i16 269, i16 269, i16 270, i16 270, i16 271, i16 271, i16 272, i16 272, i16 273, i16 273, i16 273, i16 273, i16 274, i16 274, i16 275, i16 275, i16 276, i16 276, i16 277, i16 277, i16 277, i16 278, i16 278, i16 279, i16 279, i16 279, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 280, i16 281, i16 281, i16 281, i16 282, i16 282, i16 283, i16 283, i16 284, i16 285, i16 285, i16 285, i16 286, i16 286, i16 286, i16 287, i16 287, i16 287, i16 287, i16 287, i16 287, i16 288, i16 288, i16 288, i16 289, i16 289, i16 289, i16 290, i16 290, i16 291, i16 291, i16 291, i16 291, i16 291, i16 291, i16 292, i16 292, i16 292, i16 293, i16 293, i16 293, i16 294, i16 295, i16 295, i16 296, i16 296, i16 297, i16 297, i16 297, i16 297, i16 297, i16 297, i16 298, i16 298, i16 298, i16 298, i16 299, i16 299, i16 299, i16 299, i16 299, i16 299, i16 299, i16 300, i16 300, i16 300, i16 300, i16 301, i16 301, i16 301, i16 301, i16 301, i16 301, i16 301, i16 302, i16 302, i16 303], align 16
@10 = internal constant [138 x i16] [i16 -722, i16 -722, i16 -88, i16 -722, i16 -214, i16 -353, i16 22, i16 -26, i16 -722, i16 -722, i16 -722, i16 767, i16 -722, i16 -722, i16 -336, i16 171, i16 104, i16 635, i16 108, i16 -175, i16 484, i16 657, i16 -178, i16 -722, i16 13, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 252, i16 0, i16 -722, i16 -722, i16 6, i16 -722, i16 -722, i16 -722, i16 744, i16 10, i16 -722, i16 11, i16 -722, i16 -437, i16 -722, i16 -544, i16 130, i16 -722, i16 35, i16 -722, i16 -722, i16 -384, i16 31, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -612, i16 -722, i16 98, i16 -722, i16 12, i16 176, i16 -698, i16 -78, i16 -722, i16 233, i16 -722, i16 511, i16 -722, i16 548, i16 -661, i16 -722, i16 -654, i16 -722, i16 -722, i16 -21, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -721, i16 -722, i16 7, i16 -722, i16 -28, i16 533, i16 -722, i16 549, i16 -534, i16 -722, i16 -722, i16 -722, i16 -722, i16 -722, i16 -2, i16 -182, i16 -577, i16 -112, i16 119, i16 -722, i16 -29, i16 -722, i16 -10, i16 603, i16 -722, i16 -722, i16 564, i16 -13, i16 -722, i16 -6, i16 24, i16 74, i16 -722, i16 -722, i16 -722, i16 -722, i16 2, i16 55, i16 -722, i16 -722, i16 598, i16 566, i16 -114, i16 573, i16 -722, i16 -722, i16 372, i16 545, i16 -722, i16 -722, i16 -722, i16 295], align 16
@11 = internal constant [138 x i16] [i16 -1, i16 1, i16 476, i16 477, i16 856, i16 2, i16 83, i16 84, i16 85, i16 373, i16 217, i16 653, i16 341, i16 192, i16 720, i16 654, i16 722, i16 193, i16 655, i16 194, i16 195, i16 182, i16 220, i16 378, i16 379, i16 646, i16 651, i16 812, i16 716, i16 348, i16 349, i16 380, i16 742, i16 795, i16 381, i16 393, i16 203, i16 89, i16 90, i16 382, i16 204, i16 383, i16 205, i16 585, i16 588, i16 664, i16 644, i16 837, i16 754, i16 709, i16 649, i16 711, i16 809, i16 638, i16 93, i16 94, i16 95, i16 96, i16 686, i16 687, i16 688, i16 689, i16 690, i16 691, i16 829, i16 304, i16 390, i16 391, i16 196, i16 197, i16 161, i16 162, i16 726, i16 780, i16 667, i16 851, i16 881, i16 882, i16 883, i16 884, i16 885, i16 886, i16 941, i16 781, i16 782, i16 783, i16 784, i16 821, i16 822, i16 857, i16 858, i16 183, i16 168, i16 169, i16 320, i16 321, i16 154, i16 302, i16 97, i16 98, i16 117, i16 400, i16 862, i16 239, i16 792, i16 865, i16 866, i16 100, i16 101, i16 156, i16 166, i16 222, i16 305, i16 102, i16 103, i16 104, i16 105, i16 178, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 158, i16 480, i16 519, i16 148, i16 149, i16 150, i16 151, i16 213, i16 214, i16 595, i16 113, i16 352, i16 353], align 16
@12 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@13 = private unnamed_addr constant [18 x i8] c"Error: discarding\00", align 1
@14 = private unnamed_addr constant [15 x i8] c"Error: popping\00", align 1
@15 = internal constant [945 x i16] [i16 0, i16 167, i16 171, i16 0, i16 3, i16 4, i16 5, i16 6, i16 7, i16 12, i16 13, i16 15, i16 48, i16 49, i16 54, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 68, i16 69, i16 70, i16 75, i16 76, i16 77, i16 81, i16 82, i16 83, i16 84, i16 85, i16 87, i16 90, i16 91, i16 92, i16 93, i16 94, i16 96, i16 98, i16 100, i16 103, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 116, i16 117, i16 119, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 131, i16 132, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 147, i16 152, i16 153, i16 154, i16 157, i16 159, i16 160, i16 163, i16 164, i16 165, i16 172, i16 173, i16 174, i16 190, i16 197, i16 200, i16 203, i16 204, i16 205, i16 207, i16 220, i16 221, i16 222, i16 223, i16 264, i16 265, i16 266, i16 273, i16 274, i16 279, i16 280, i16 281, i16 282, i16 284, i16 285, i16 286, i16 287, i16 288, i16 289, i16 290, i16 301, i16 75, i16 83, i16 152, i16 266, i16 282, i16 282, i16 157, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 68, i16 75, i16 157, i16 279, i16 281, i16 288, i16 288, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 36, i16 131, i16 282, i16 294, i16 295, i16 296, i16 297, i16 125, i16 173, i16 262, i16 274, i16 275, i16 289, i16 291, i16 282, i16 84, i16 236, i16 237, i16 266, i16 30, i16 157, i16 276, i16 157, i16 258, i16 259, i16 282, i16 190, i16 157, i16 157, i16 157, i16 157, i16 157, i16 282, i16 283, i16 283, i16 83, i16 83, i16 187, i16 257, i16 283, i16 160, i16 282, i16 110, i16 111, i16 154, i16 172, i16 177, i16 179, i16 183, i16 185, i16 186, i16 234, i16 235, i16 289, i16 157, i16 157, i16 157, i16 157, i16 202, i16 206, i16 208, i16 157, i16 157, i16 84, i16 86, i16 148, i16 149, i16 150, i16 298, i16 299, i16 154, i16 172, i16 176, i16 172, i16 282, i16 188, i16 86, i16 277, i16 298, i16 86, i16 298, i16 160, i16 289, i16 154, i16 157, i16 231, i16 125, i16 204, i16 72, i16 73, i16 72, i16 73, i16 74, i16 36, i16 269, i16 151, i16 68, i16 9, i16 10, i16 11, i16 29, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 55, i16 67, i16 159, i16 151, i16 68, i16 130, i16 160, i16 231, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 57, i16 58, i16 269, i16 282, i16 14, i16 294, i16 282, i16 288, i16 157, i16 14, i16 162, i16 8, i16 263, i16 151, i16 231, i16 278, i16 68, i16 130, i16 151, i16 160, i16 16, i16 8, i16 159, i16 269, i16 283, i16 282, i16 8, i16 159, i16 94, i16 282, i16 260, i16 261, i16 282, i16 282, i16 187, i16 282, i16 159, i16 159, i16 159, i16 16, i16 8, i16 159, i16 159, i16 188, i16 159, i16 172, i16 185, i16 102, i16 154, i16 154, i16 172, i16 178, i16 183, i16 159, i16 8, i16 159, i16 8, i16 159, i16 195, i16 196, i16 288, i16 282, i16 302, i16 303, i16 282, i16 158, i16 83, i16 83, i16 83, i16 294, i16 294, i16 68, i16 130, i16 148, i16 299, i16 88, i16 282, i16 288, i16 86, i16 148, i16 299, i16 172, i16 159, i16 175, i16 160, i16 158, i16 124, i16 161, i16 189, i16 190, i16 197, i16 200, i16 205, i16 207, i16 163, i16 164, i16 282, i16 83, i16 155, i16 158, i16 232, i16 233, i16 282, i16 201, i16 157, i16 190, i16 157, i16 30, i16 159, i16 83, i16 267, i16 3, i16 4, i16 5, i16 6, i16 7, i16 9, i16 10, i16 11, i16 12, i16 13, i16 55, i16 69, i16 70, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 83, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 125, i16 126, i16 127, i16 128, i16 129, i16 131, i16 132, i16 133, i16 134, i16 135, i16 136, i16 137, i16 138, i16 139, i16 140, i16 152, i16 153, i16 160, i16 168, i16 169, i16 170, i16 289, i16 292, i16 283, i16 282, i16 282, i16 282, i16 30, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 275, i16 282, i16 170, i16 289, i16 292, i16 283, i16 83, i16 160, i16 289, i16 293, i16 282, i16 36, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 282, i16 158, i16 282, i16 162, i16 158, i16 294, i16 36, i16 131, i16 282, i16 16, i16 295, i16 278, i16 289, i16 283, i16 293, i16 289, i16 282, i16 282, i16 237, i16 267, i16 158, i16 158, i16 259, i16 157, i16 158, i16 159, i16 8, i16 102, i16 158, i16 158, i16 282, i16 257, i16 161, i16 154, i16 83, i16 160, i16 172, i16 154, i16 159, i16 159, i16 154, i16 172, i16 186, i16 235, i16 8, i16 158, i16 8, i16 158, i16 158, i16 159, i16 128, i16 209, i16 267, i16 128, i16 210, i16 158, i16 158, i16 49, i16 83, i16 84, i16 89, i16 300, i16 83, i16 68, i16 161, i16 161, i16 161, i16 160, i16 171, i16 157, i16 161, i16 282, i16 8, i16 158, i16 83, i16 282, i16 282, i16 188, i16 267, i16 157, i16 282, i16 231, i16 162, i16 282, i16 30, i16 231, i16 162, i16 282, i16 231, i16 161, i16 288, i16 158, i16 288, i16 157, i16 282, i16 209, i16 162, i16 161, i16 157, i16 30, i16 190, i16 282, i16 30, i16 190, i16 219, i16 260, i16 282, i16 36, i16 68, i16 131, i16 212, i16 288, i16 191, i16 30, i16 160, i16 216, i16 267, i16 192, i16 160, i16 177, i16 181, i16 184, i16 185, i16 154, i16 160, i16 196, i16 159, i16 303, i16 173, i16 129, i16 211, i16 160, i16 173, i16 240, i16 267, i16 16, i16 89, i16 162, i16 282, i16 171, i16 161, i16 158, i16 233, i16 209, i16 158, i16 158, i16 74, i16 157, i16 29, i16 132, i16 133, i16 173, i16 224, i16 225, i16 226, i16 227, i16 228, i16 229, i16 161, i16 282, i16 161, i16 294, i16 211, i16 224, i16 188, i16 158, i16 188, i16 159, i16 288, i16 294, i16 157, i16 14, i16 158, i16 30, i16 190, i16 215, i16 159, i16 217, i16 159, i16 217, i16 114, i16 115, i16 194, i16 181, i16 185, i16 8, i16 180, i16 160, i16 182, i16 185, i16 240, i16 267, i16 238, i16 8, i16 160, i16 282, i16 162, i16 161, i16 159, i16 211, i16 190, i16 30, i16 159, i16 224, i16 229, i16 158, i16 8, i16 36, i16 198, i16 158, i16 267, i16 158, i16 159, i16 95, i16 260, i16 162, i16 294, i16 212, i16 30, i16 190, i16 214, i16 188, i16 217, i16 104, i16 105, i16 106, i16 217, i16 161, i16 157, i16 160, i16 180, i16 184, i16 161, i16 182, i16 8, i16 180, i16 160, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 117, i16 120, i16 161, i16 239, i16 249, i16 250, i16 251, i16 252, i16 173, i16 238, i16 161, i16 267, i16 188, i16 158, i16 117, i16 270, i16 226, i16 155, i16 199, i16 160, i16 270, i16 159, i16 158, i16 158, i16 158, i16 188, i16 101, i16 104, i16 159, i16 282, i16 30, i16 159, i16 218, i16 161, i16 173, i16 193, i16 188, i16 161, i16 180, i16 185, i16 161, i16 238, i16 240, i16 84, i16 253, i16 254, i16 111, i16 266, i16 252, i16 161, i16 160, i16 30, i16 230, i16 157, i16 230, i16 84, i16 238, i16 230, i16 30, i16 190, i16 213, i16 214, i16 99, i16 159, i16 159, i16 218, i16 188, i16 34, i16 84, i16 161, i16 161, i16 161, i16 159, i16 160, i16 241, i16 16, i16 267, i16 8, i16 159, i16 170, i16 255, i16 256, i16 269, i16 238, i16 228, i16 268, i16 36, i16 84, i16 271, i16 272, i16 268, i16 16, i16 161, i16 268, i16 188, i16 159, i16 188, i16 173, i16 158, i16 83, i16 152, i16 161, i16 170, i16 173, i16 242, i16 243, i16 244, i16 245, i16 246, i16 247, i16 282, i16 254, i16 16, i16 8, i16 159, i16 170, i16 161, i16 160, i16 84, i16 8, i16 158, i16 160, i16 282, i16 160, i16 97, i16 160, i16 151, i16 161, i16 243, i16 159, i16 159, i16 102, i16 118, i16 267, i16 282, i16 256, i16 267, i16 188, i16 272, i16 188, i16 188, i16 159, i16 188, i16 170, i16 83, i16 168, i16 252, i16 240, i16 267, i16 157, i16 161, i16 161, i16 161, i16 161, i16 170, i16 224, i16 268, i16 268, i16 268, i16 158, i16 230, i16 268, i16 159, i16 160, i16 248, i16 188, i16 268, i16 161], align 16
@16 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@17 = private unnamed_addr constant [30 x i8] c"Cleanup: discarding lookahead\00", align 1
@18 = private unnamed_addr constant [17 x i8] c"Cleanup: popping\00", align 1
@19 = internal constant [305 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @30, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @33, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @34, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @36, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @37, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @39, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @40, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @42, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @43, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @46, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @47, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @48, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @50, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @53, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @54, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @57, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @58, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @59, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @61, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @62, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @64, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @65, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @66, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @67, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @68, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @69, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @70, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @71, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @72, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @73, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @74, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @76, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @78, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @80, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @81, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @82, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @84, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @85, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @86, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @88, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @89, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @90, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @91, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @92, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @93, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @94, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @95, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @96, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @97, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @99, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @100, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @101, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @102, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @103, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @104, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @105, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @106, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @107, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @108, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @109, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @111, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @112, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @113, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @114, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @115, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @116, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @117, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @118, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @119, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @120, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @121, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @122, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @123, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @124, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @125, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @126, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @127, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @128, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @129, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @131, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @132, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @133, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @134, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @135, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @136, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @137, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @138, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @139, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @140, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @141, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @142, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @143, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @144, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @145, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @146, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @147, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @148, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @149, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @150, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @151, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @152, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @153, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @154, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @155, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @156, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @157, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @158, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @159, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @160, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @161, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @162, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @163, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @164, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @165, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @166, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @167, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @168, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @169, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @170, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @171, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @172, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @173, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @174, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @175, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @176, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @177, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @178, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @179, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @180, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @181, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @182, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @183, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @184, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @185, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @186, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @187, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @188, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @189, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @191, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @192, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @193, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @194, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @195, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @196, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @197, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @198, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @199, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @200, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @201, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @202, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @203, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @204, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @205, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @206, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @207, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @208, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @209, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @210, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @211, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @212, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @213, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @214, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @215, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @216, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @217, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @218, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @219, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @220, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @221, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @222, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @223, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @224, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @225, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @226, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @228, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @229, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @230, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @231, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @232, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @233, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @234, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @235, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @236, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @237, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @238, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @239, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @240, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @241, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @242, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @243, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @244, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @245, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @246, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @247, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @248, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @249, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @250, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @251, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @252, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @254, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @255, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @256, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @257, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @258, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @259, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @260, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @261, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @262, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @263, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @264, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @265, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @266, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @267, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @268, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @269, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @270, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @271, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @272, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @273, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @274, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @275, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @276, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @277, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @278, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @279, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @280, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @281, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @282, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @283, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @284, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @285, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @286, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @287, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @288, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @289, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @290, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @291, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @292, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @293, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @294, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @295, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @296, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @297, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @298, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @299, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @300, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @301, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @302, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @303, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @304, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @305, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @306, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @307, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @308, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @309, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @310, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @311, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @312, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @313, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @314, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @315, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @316, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @317, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @318, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @319, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @320, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @321, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @322, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @323, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @324, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @325, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @326, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @327, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @328, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @330, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @331, i32 0, i32 0), i8* null], align 16
@20 = private unnamed_addr constant [28 x i8] c"syntax error, unexpected %s\00", align 1
@21 = private unnamed_addr constant [42 x i8] c"syntax error, unexpected %s, expecting %s\00", align 1
@22 = private unnamed_addr constant [48 x i8] c"syntax error, unexpected %s, expecting %s or %s\00", align 1
@23 = private unnamed_addr constant [54 x i8] c"syntax error, unexpected %s, expecting %s or %s or %s\00", align 1
@24 = private unnamed_addr constant [60 x i8] c"syntax error, unexpected %s, expecting %s or %s or %s or %s\00", align 1
@language_scanner_globals = external dso_local global %47, align 8
@25 = private unnamed_addr constant [14 x i8] c"\22end of file\22\00", align 1
@26 = private unnamed_addr constant [12 x i8] c"end of file\00", align 1
@27 = private unnamed_addr constant [12 x i8] c"'%.*s' %.*s\00", align 1
@28 = private unnamed_addr constant [7 x i8] c"'%.*s'\00", align 1
@29 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@30 = private unnamed_addr constant [11 x i8] c"$undefined\00", align 1
@31 = private unnamed_addr constant [22 x i8] c"\22include (T_INCLUDE)\22\00", align 1
@32 = private unnamed_addr constant [32 x i8] c"\22include_once (T_INCLUDE_ONCE)\22\00", align 1
@33 = private unnamed_addr constant [16 x i8] c"\22eval (T_EVAL)\22\00", align 1
@34 = private unnamed_addr constant [22 x i8] c"\22require (T_REQUIRE)\22\00", align 1
@35 = private unnamed_addr constant [32 x i8] c"\22require_once (T_REQUIRE_ONCE)\22\00", align 1
@36 = private unnamed_addr constant [4 x i8] c"','\00", align 1
@37 = private unnamed_addr constant [20 x i8] c"\22or (T_LOGICAL_OR)\22\00", align 1
@38 = private unnamed_addr constant [22 x i8] c"\22xor (T_LOGICAL_XOR)\22\00", align 1
@39 = private unnamed_addr constant [22 x i8] c"\22and (T_LOGICAL_AND)\22\00", align 1
@40 = private unnamed_addr constant [18 x i8] c"\22print (T_PRINT)\22\00", align 1
@41 = private unnamed_addr constant [18 x i8] c"\22yield (T_YIELD)\22\00", align 1
@42 = private unnamed_addr constant [22 x i8] c"\22=> (T_DOUBLE_ARROW)\22\00", align 1
@43 = private unnamed_addr constant [28 x i8] c"\22yield from (T_YIELD_FROM)\22\00", align 1
@44 = private unnamed_addr constant [4 x i8] c"'='\00", align 1
@45 = private unnamed_addr constant [20 x i8] c"\22+= (T_PLUS_EQUAL)\22\00", align 1
@46 = private unnamed_addr constant [21 x i8] c"\22-= (T_MINUS_EQUAL)\22\00", align 1
@47 = private unnamed_addr constant [19 x i8] c"\22*= (T_MUL_EQUAL)\22\00", align 1
@48 = private unnamed_addr constant [19 x i8] c"\22/= (T_DIV_EQUAL)\22\00", align 1
@49 = private unnamed_addr constant [22 x i8] c"\22.= (T_CONCAT_EQUAL)\22\00", align 1
@50 = private unnamed_addr constant [19 x i8] c"\22%= (T_MOD_EQUAL)\22\00", align 1
@51 = private unnamed_addr constant [19 x i8] c"\22&= (T_AND_EQUAL)\22\00", align 1
@52 = private unnamed_addr constant [18 x i8] c"\22|= (T_OR_EQUAL)\22\00", align 1
@53 = private unnamed_addr constant [19 x i8] c"\22^= (T_XOR_EQUAL)\22\00", align 1
@54 = private unnamed_addr constant [19 x i8] c"\22<<= (T_SL_EQUAL)\22\00", align 1
@55 = private unnamed_addr constant [19 x i8] c"\22>>= (T_SR_EQUAL)\22\00", align 1
@56 = private unnamed_addr constant [20 x i8] c"\22**= (T_POW_EQUAL)\22\00", align 1
@57 = private unnamed_addr constant [4 x i8] c"'?'\00", align 1
@58 = private unnamed_addr constant [4 x i8] c"':'\00", align 1
@59 = private unnamed_addr constant [18 x i8] c"\22?? (T_COALESCE)\22\00", align 1
@60 = private unnamed_addr constant [20 x i8] c"\22|| (T_BOOLEAN_OR)\22\00", align 1
@61 = private unnamed_addr constant [21 x i8] c"\22&& (T_BOOLEAN_AND)\22\00", align 1
@62 = private unnamed_addr constant [4 x i8] c"'|'\00", align 1
@63 = private unnamed_addr constant [4 x i8] c"'^'\00", align 1
@64 = private unnamed_addr constant [4 x i8] c"'&'\00", align 1
@65 = private unnamed_addr constant [18 x i8] c"\22== (T_IS_EQUAL)\22\00", align 1
@66 = private unnamed_addr constant [22 x i8] c"\22!= (T_IS_NOT_EQUAL)\22\00", align 1
@67 = private unnamed_addr constant [23 x i8] c"\22=== (T_IS_IDENTICAL)\22\00", align 1
@68 = private unnamed_addr constant [27 x i8] c"\22!== (T_IS_NOT_IDENTICAL)\22\00", align 1
@69 = private unnamed_addr constant [20 x i8] c"\22<=> (T_SPACESHIP)\22\00", align 1
@70 = private unnamed_addr constant [4 x i8] c"'<'\00", align 1
@71 = private unnamed_addr constant [29 x i8] c"\22<= (T_IS_SMALLER_OR_EQUAL)\22\00", align 1
@72 = private unnamed_addr constant [4 x i8] c"'>'\00", align 1
@73 = private unnamed_addr constant [29 x i8] c"\22>= (T_IS_GREATER_OR_EQUAL)\22\00", align 1
@74 = private unnamed_addr constant [12 x i8] c"\22<< (T_SL)\22\00", align 1
@75 = private unnamed_addr constant [12 x i8] c"\22>> (T_SR)\22\00", align 1
@76 = private unnamed_addr constant [4 x i8] c"'+'\00", align 1
@77 = private unnamed_addr constant [4 x i8] c"'-'\00", align 1
@78 = private unnamed_addr constant [4 x i8] c"'.'\00", align 1
@79 = private unnamed_addr constant [4 x i8] c"'*'\00", align 1
@80 = private unnamed_addr constant [4 x i8] c"'/'\00", align 1
@81 = private unnamed_addr constant [4 x i8] c"'%'\00", align 1
@82 = private unnamed_addr constant [4 x i8] c"'!'\00", align 1
@83 = private unnamed_addr constant [28 x i8] c"\22instanceof (T_INSTANCEOF)\22\00", align 1
@84 = private unnamed_addr constant [4 x i8] c"'~'\00", align 1
@85 = private unnamed_addr constant [13 x i8] c"\22++ (T_INC)\22\00", align 1
@86 = private unnamed_addr constant [13 x i8] c"\22-- (T_DEC)\22\00", align 1
@87 = private unnamed_addr constant [21 x i8] c"\22(int) (T_INT_CAST)\22\00", align 1
@88 = private unnamed_addr constant [27 x i8] c"\22(double) (T_DOUBLE_CAST)\22\00", align 1
@89 = private unnamed_addr constant [27 x i8] c"\22(string) (T_STRING_CAST)\22\00", align 1
@90 = private unnamed_addr constant [25 x i8] c"\22(array) (T_ARRAY_CAST)\22\00", align 1
@91 = private unnamed_addr constant [27 x i8] c"\22(object) (T_OBJECT_CAST)\22\00", align 1
@92 = private unnamed_addr constant [23 x i8] c"\22(bool) (T_BOOL_CAST)\22\00", align 1
@93 = private unnamed_addr constant [25 x i8] c"\22(unset) (T_UNSET_CAST)\22\00", align 1
@94 = private unnamed_addr constant [4 x i8] c"'@'\00", align 1
@95 = private unnamed_addr constant [13 x i8] c"\22** (T_POW)\22\00", align 1
@96 = private unnamed_addr constant [4 x i8] c"'['\00", align 1
@97 = private unnamed_addr constant [14 x i8] c"\22new (T_NEW)\22\00", align 1
@98 = private unnamed_addr constant [18 x i8] c"\22clone (T_CLONE)\22\00", align 1
@99 = private unnamed_addr constant [9 x i8] c"T_NOELSE\00", align 1
@100 = private unnamed_addr constant [20 x i8] c"\22elseif (T_ELSEIF)\22\00", align 1
@101 = private unnamed_addr constant [16 x i8] c"\22else (T_ELSE)\22\00", align 1
@102 = private unnamed_addr constant [18 x i8] c"\22endif (T_ENDIF)\22\00", align 1
@103 = private unnamed_addr constant [20 x i8] c"\22static (T_STATIC)\22\00", align 1
@104 = private unnamed_addr constant [24 x i8] c"\22abstract (T_ABSTRACT)\22\00", align 1
@105 = private unnamed_addr constant [18 x i8] c"\22final (T_FINAL)\22\00", align 1
@106 = private unnamed_addr constant [22 x i8] c"\22private (T_PRIVATE)\22\00", align 1
@107 = private unnamed_addr constant [26 x i8] c"\22protected (T_PROTECTED)\22\00", align 1
@108 = private unnamed_addr constant [20 x i8] c"\22public (T_PUBLIC)\22\00", align 1
@109 = private unnamed_addr constant [29 x i8] c"\22integer number (T_LNUMBER)\22\00", align 1
@110 = private unnamed_addr constant [36 x i8] c"\22floating-point number (T_DNUMBER)\22\00", align 1
@111 = private unnamed_addr constant [24 x i8] c"\22identifier (T_STRING)\22\00", align 1
@112 = private unnamed_addr constant [24 x i8] c"\22variable (T_VARIABLE)\22\00", align 1
@113 = private unnamed_addr constant [14 x i8] c"T_INLINE_HTML\00", align 1
@114 = private unnamed_addr constant [59 x i8] c"\22quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)\22\00", align 1
@115 = private unnamed_addr constant [45 x i8] c"\22quoted-string (T_CONSTANT_ENCAPSED_STRING)\22\00", align 1
@116 = private unnamed_addr constant [35 x i8] c"\22variable name (T_STRING_VARNAME)\22\00", align 1
@117 = private unnamed_addr constant [24 x i8] c"\22number (T_NUM_STRING)\22\00", align 1
@118 = private unnamed_addr constant [16 x i8] c"\22exit (T_EXIT)\22\00", align 1
@119 = private unnamed_addr constant [12 x i8] c"\22if (T_IF)\22\00", align 1
@120 = private unnamed_addr constant [16 x i8] c"\22echo (T_ECHO)\22\00", align 1
@121 = private unnamed_addr constant [12 x i8] c"\22do (T_DO)\22\00", align 1
@122 = private unnamed_addr constant [18 x i8] c"\22while (T_WHILE)\22\00", align 1
@123 = private unnamed_addr constant [24 x i8] c"\22endwhile (T_ENDWHILE)\22\00", align 1
@124 = private unnamed_addr constant [14 x i8] c"\22for (T_FOR)\22\00", align 1
@125 = private unnamed_addr constant [20 x i8] c"\22endfor (T_ENDFOR)\22\00", align 1
@126 = private unnamed_addr constant [22 x i8] c"\22foreach (T_FOREACH)\22\00", align 1
@127 = private unnamed_addr constant [28 x i8] c"\22endforeach (T_ENDFOREACH)\22\00", align 1
@128 = private unnamed_addr constant [22 x i8] c"\22declare (T_DECLARE)\22\00", align 1
@129 = private unnamed_addr constant [28 x i8] c"\22enddeclare (T_ENDDECLARE)\22\00", align 1
@130 = private unnamed_addr constant [12 x i8] c"\22as (T_AS)\22\00", align 1
@131 = private unnamed_addr constant [20 x i8] c"\22switch (T_SWITCH)\22\00", align 1
@132 = private unnamed_addr constant [26 x i8] c"\22endswitch (T_ENDSWITCH)\22\00", align 1
@133 = private unnamed_addr constant [16 x i8] c"\22case (T_CASE)\22\00", align 1
@134 = private unnamed_addr constant [22 x i8] c"\22default (T_DEFAULT)\22\00", align 1
@135 = private unnamed_addr constant [18 x i8] c"\22break (T_BREAK)\22\00", align 1
@136 = private unnamed_addr constant [24 x i8] c"\22continue (T_CONTINUE)\22\00", align 1
@137 = private unnamed_addr constant [16 x i8] c"\22goto (T_GOTO)\22\00", align 1
@138 = private unnamed_addr constant [24 x i8] c"\22function (T_FUNCTION)\22\00", align 1
@139 = private unnamed_addr constant [18 x i8] c"\22const (T_CONST)\22\00", align 1
@140 = private unnamed_addr constant [20 x i8] c"\22return (T_RETURN)\22\00", align 1
@141 = private unnamed_addr constant [14 x i8] c"\22try (T_TRY)\22\00", align 1
@142 = private unnamed_addr constant [18 x i8] c"\22catch (T_CATCH)\22\00", align 1
@143 = private unnamed_addr constant [22 x i8] c"\22finally (T_FINALLY)\22\00", align 1
@144 = private unnamed_addr constant [18 x i8] c"\22throw (T_THROW)\22\00", align 1
@145 = private unnamed_addr constant [14 x i8] c"\22use (T_USE)\22\00", align 1
@146 = private unnamed_addr constant [26 x i8] c"\22insteadof (T_INSTEADOF)\22\00", align 1
@147 = private unnamed_addr constant [20 x i8] c"\22global (T_GLOBAL)\22\00", align 1
@148 = private unnamed_addr constant [14 x i8] c"\22var (T_VAR)\22\00", align 1
@149 = private unnamed_addr constant [18 x i8] c"\22unset (T_UNSET)\22\00", align 1
@150 = private unnamed_addr constant [18 x i8] c"\22isset (T_ISSET)\22\00", align 1
@151 = private unnamed_addr constant [18 x i8] c"\22empty (T_EMPTY)\22\00", align 1
@152 = private unnamed_addr constant [36 x i8] c"\22__halt_compiler (T_HALT_COMPILER)\22\00", align 1
@153 = private unnamed_addr constant [18 x i8] c"\22class (T_CLASS)\22\00", align 1
@154 = private unnamed_addr constant [18 x i8] c"\22trait (T_TRAIT)\22\00", align 1
@155 = private unnamed_addr constant [26 x i8] c"\22interface (T_INTERFACE)\22\00", align 1
@156 = private unnamed_addr constant [22 x i8] c"\22extends (T_EXTENDS)\22\00", align 1
@157 = private unnamed_addr constant [28 x i8] c"\22implements (T_IMPLEMENTS)\22\00", align 1
@158 = private unnamed_addr constant [25 x i8] c"\22-> (T_OBJECT_OPERATOR)\22\00", align 1
@159 = private unnamed_addr constant [16 x i8] c"\22list (T_LIST)\22\00", align 1
@160 = private unnamed_addr constant [18 x i8] c"\22array (T_ARRAY)\22\00", align 1
@161 = private unnamed_addr constant [24 x i8] c"\22callable (T_CALLABLE)\22\00", align 1
@162 = private unnamed_addr constant [20 x i8] c"\22__LINE__ (T_LINE)\22\00", align 1
@163 = private unnamed_addr constant [20 x i8] c"\22__FILE__ (T_FILE)\22\00", align 1
@164 = private unnamed_addr constant [18 x i8] c"\22__DIR__ (T_DIR)\22\00", align 1
@165 = private unnamed_addr constant [24 x i8] c"\22__CLASS__ (T_CLASS_C)\22\00", align 1
@166 = private unnamed_addr constant [24 x i8] c"\22__TRAIT__ (T_TRAIT_C)\22\00", align 1
@167 = private unnamed_addr constant [26 x i8] c"\22__METHOD__ (T_METHOD_C)\22\00", align 1
@168 = private unnamed_addr constant [26 x i8] c"\22__FUNCTION__ (T_FUNC_C)\22\00", align 1
@169 = private unnamed_addr constant [22 x i8] c"\22comment (T_COMMENT)\22\00", align 1
@170 = private unnamed_addr constant [30 x i8] c"\22doc comment (T_DOC_COMMENT)\22\00", align 1
@171 = private unnamed_addr constant [24 x i8] c"\22open tag (T_OPEN_TAG)\22\00", align 1
@172 = private unnamed_addr constant [44 x i8] c"\22open tag with echo (T_OPEN_TAG_WITH_ECHO)\22\00", align 1
@173 = private unnamed_addr constant [26 x i8] c"\22close tag (T_CLOSE_TAG)\22\00", align 1
@174 = private unnamed_addr constant [28 x i8] c"\22whitespace (T_WHITESPACE)\22\00", align 1
@175 = private unnamed_addr constant [34 x i8] c"\22heredoc start (T_START_HEREDOC)\22\00", align 1
@176 = private unnamed_addr constant [30 x i8] c"\22heredoc end (T_END_HEREDOC)\22\00", align 1
@177 = private unnamed_addr constant [34 x i8] c"\22${ (T_DOLLAR_OPEN_CURLY_BRACES)\22\00", align 1
@178 = private unnamed_addr constant [20 x i8] c"\22{$ (T_CURLY_OPEN)\22\00", align 1
@179 = private unnamed_addr constant [30 x i8] c"\22:: (T_PAAMAYIM_NEKUDOTAYIM)\22\00", align 1
@180 = private unnamed_addr constant [26 x i8] c"\22namespace (T_NAMESPACE)\22\00", align 1
@181 = private unnamed_addr constant [25 x i8] c"\22__NAMESPACE__ (T_NS_C)\22\00", align 1
@182 = private unnamed_addr constant [22 x i8] c"\22\\\\ (T_NS_SEPARATOR)\22\00", align 1
@183 = private unnamed_addr constant [19 x i8] c"\22... (T_ELLIPSIS)\22\00", align 1
@184 = private unnamed_addr constant [8 x i8] c"T_ERROR\00", align 1
@185 = private unnamed_addr constant [4 x i8] c"'('\00", align 1
@186 = private unnamed_addr constant [4 x i8] c"')'\00", align 1
@187 = private unnamed_addr constant [4 x i8] c"';'\00", align 1
@188 = private unnamed_addr constant [4 x i8] c"'{'\00", align 1
@189 = private unnamed_addr constant [4 x i8] c"'}'\00", align 1
@190 = private unnamed_addr constant [4 x i8] c"']'\00", align 1
@191 = private unnamed_addr constant [4 x i8] c"'`'\00", align 1
@192 = private unnamed_addr constant [4 x i8] c"'\22'\00", align 1
@193 = private unnamed_addr constant [4 x i8] c"'$'\00", align 1
@194 = private unnamed_addr constant [8 x i8] c"$accept\00", align 1
@195 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@196 = private unnamed_addr constant [23 x i8] c"reserved_non_modifiers\00", align 1
@197 = private unnamed_addr constant [14 x i8] c"semi_reserved\00", align 1
@198 = private unnamed_addr constant [11 x i8] c"identifier\00", align 1
@199 = private unnamed_addr constant [19 x i8] c"top_statement_list\00", align 1
@200 = private unnamed_addr constant [15 x i8] c"namespace_name\00", align 1
@201 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@202 = private unnamed_addr constant [14 x i8] c"top_statement\00", align 1
@203 = private unnamed_addr constant [4 x i8] c"$@1\00", align 1
@204 = private unnamed_addr constant [4 x i8] c"$@2\00", align 1
@205 = private unnamed_addr constant [9 x i8] c"use_type\00", align 1
@206 = private unnamed_addr constant [22 x i8] c"group_use_declaration\00", align 1
@207 = private unnamed_addr constant [28 x i8] c"mixed_group_use_declaration\00", align 1
@208 = private unnamed_addr constant [15 x i8] c"possible_comma\00", align 1
@209 = private unnamed_addr constant [24 x i8] c"inline_use_declarations\00", align 1
@210 = private unnamed_addr constant [28 x i8] c"unprefixed_use_declarations\00", align 1
@211 = private unnamed_addr constant [17 x i8] c"use_declarations\00", align 1
@212 = private unnamed_addr constant [23 x i8] c"inline_use_declaration\00", align 1
@213 = private unnamed_addr constant [27 x i8] c"unprefixed_use_declaration\00", align 1
@214 = private unnamed_addr constant [16 x i8] c"use_declaration\00", align 1
@215 = private unnamed_addr constant [11 x i8] c"const_list\00", align 1
@216 = private unnamed_addr constant [21 x i8] c"inner_statement_list\00", align 1
@217 = private unnamed_addr constant [16 x i8] c"inner_statement\00", align 1
@218 = private unnamed_addr constant [10 x i8] c"statement\00", align 1
@219 = private unnamed_addr constant [4 x i8] c"$@3\00", align 1
@220 = private unnamed_addr constant [11 x i8] c"catch_list\00", align 1
@221 = private unnamed_addr constant [16 x i8] c"catch_name_list\00", align 1
@222 = private unnamed_addr constant [18 x i8] c"finally_statement\00", align 1
@223 = private unnamed_addr constant [16 x i8] c"unset_variables\00", align 1
@224 = private unnamed_addr constant [15 x i8] c"unset_variable\00", align 1
@225 = private unnamed_addr constant [31 x i8] c"function_declaration_statement\00", align 1
@226 = private unnamed_addr constant [13 x i8] c"is_reference\00", align 1
@227 = private unnamed_addr constant [12 x i8] c"is_variadic\00", align 1
@228 = private unnamed_addr constant [28 x i8] c"class_declaration_statement\00", align 1
@229 = private unnamed_addr constant [3 x i8] c"@4\00", align 1
@230 = private unnamed_addr constant [3 x i8] c"@5\00", align 1
@231 = private unnamed_addr constant [16 x i8] c"class_modifiers\00", align 1
@232 = private unnamed_addr constant [15 x i8] c"class_modifier\00", align 1
@233 = private unnamed_addr constant [28 x i8] c"trait_declaration_statement\00", align 1
@234 = private unnamed_addr constant [3 x i8] c"@6\00", align 1
@235 = private unnamed_addr constant [32 x i8] c"interface_declaration_statement\00", align 1
@236 = private unnamed_addr constant [3 x i8] c"@7\00", align 1
@237 = private unnamed_addr constant [13 x i8] c"extends_from\00", align 1
@238 = private unnamed_addr constant [23 x i8] c"interface_extends_list\00", align 1
@239 = private unnamed_addr constant [16 x i8] c"implements_list\00", align 1
@240 = private unnamed_addr constant [17 x i8] c"foreach_variable\00", align 1
@241 = private unnamed_addr constant [14 x i8] c"for_statement\00", align 1
@242 = private unnamed_addr constant [18 x i8] c"foreach_statement\00", align 1
@243 = private unnamed_addr constant [18 x i8] c"declare_statement\00", align 1
@244 = private unnamed_addr constant [17 x i8] c"switch_case_list\00", align 1
@245 = private unnamed_addr constant [10 x i8] c"case_list\00", align 1
@246 = private unnamed_addr constant [15 x i8] c"case_separator\00", align 1
@247 = private unnamed_addr constant [16 x i8] c"while_statement\00", align 1
@248 = private unnamed_addr constant [21 x i8] c"if_stmt_without_else\00", align 1
@249 = private unnamed_addr constant [8 x i8] c"if_stmt\00", align 1
@250 = private unnamed_addr constant [25 x i8] c"alt_if_stmt_without_else\00", align 1
@251 = private unnamed_addr constant [12 x i8] c"alt_if_stmt\00", align 1
@252 = private unnamed_addr constant [15 x i8] c"parameter_list\00", align 1
@253 = private unnamed_addr constant [25 x i8] c"non_empty_parameter_list\00", align 1
@254 = private unnamed_addr constant [10 x i8] c"parameter\00", align 1
@255 = private unnamed_addr constant [14 x i8] c"optional_type\00", align 1
@256 = private unnamed_addr constant [10 x i8] c"type_expr\00", align 1
@257 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@258 = private unnamed_addr constant [12 x i8] c"return_type\00", align 1
@259 = private unnamed_addr constant [14 x i8] c"argument_list\00", align 1
@260 = private unnamed_addr constant [24 x i8] c"non_empty_argument_list\00", align 1
@261 = private unnamed_addr constant [9 x i8] c"argument\00", align 1
@262 = private unnamed_addr constant [16 x i8] c"global_var_list\00", align 1
@263 = private unnamed_addr constant [11 x i8] c"global_var\00", align 1
@264 = private unnamed_addr constant [16 x i8] c"static_var_list\00", align 1
@265 = private unnamed_addr constant [11 x i8] c"static_var\00", align 1
@266 = private unnamed_addr constant [21 x i8] c"class_statement_list\00", align 1
@267 = private unnamed_addr constant [16 x i8] c"class_statement\00", align 1
@268 = private unnamed_addr constant [10 x i8] c"name_list\00", align 1
@269 = private unnamed_addr constant [18 x i8] c"trait_adaptations\00", align 1
@270 = private unnamed_addr constant [22 x i8] c"trait_adaptation_list\00", align 1
@271 = private unnamed_addr constant [17 x i8] c"trait_adaptation\00", align 1
@272 = private unnamed_addr constant [17 x i8] c"trait_precedence\00", align 1
@273 = private unnamed_addr constant [12 x i8] c"trait_alias\00", align 1
@274 = private unnamed_addr constant [23 x i8] c"trait_method_reference\00", align 1
@275 = private unnamed_addr constant [32 x i8] c"absolute_trait_method_reference\00", align 1
@276 = private unnamed_addr constant [12 x i8] c"method_body\00", align 1
@277 = private unnamed_addr constant [19 x i8] c"variable_modifiers\00", align 1
@278 = private unnamed_addr constant [17 x i8] c"method_modifiers\00", align 1
@279 = private unnamed_addr constant [27 x i8] c"non_empty_member_modifiers\00", align 1
@280 = private unnamed_addr constant [16 x i8] c"member_modifier\00", align 1
@281 = private unnamed_addr constant [14 x i8] c"property_list\00", align 1
@282 = private unnamed_addr constant [9 x i8] c"property\00", align 1
@283 = private unnamed_addr constant [17 x i8] c"class_const_list\00", align 1
@284 = private unnamed_addr constant [17 x i8] c"class_const_decl\00", align 1
@285 = private unnamed_addr constant [11 x i8] c"const_decl\00", align 1
@286 = private unnamed_addr constant [15 x i8] c"echo_expr_list\00", align 1
@287 = private unnamed_addr constant [10 x i8] c"echo_expr\00", align 1
@288 = private unnamed_addr constant [10 x i8] c"for_exprs\00", align 1
@289 = private unnamed_addr constant [20 x i8] c"non_empty_for_exprs\00", align 1
@290 = private unnamed_addr constant [16 x i8] c"anonymous_class\00", align 1
@291 = private unnamed_addr constant [3 x i8] c"@8\00", align 1
@292 = private unnamed_addr constant [9 x i8] c"new_expr\00", align 1
@293 = private unnamed_addr constant [22 x i8] c"expr_without_variable\00", align 1
@294 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@295 = private unnamed_addr constant [19 x i8] c"backup_doc_comment\00", align 1
@296 = private unnamed_addr constant [16 x i8] c"backup_fn_flags\00", align 1
@297 = private unnamed_addr constant [12 x i8] c"returns_ref\00", align 1
@298 = private unnamed_addr constant [13 x i8] c"lexical_vars\00", align 1
@299 = private unnamed_addr constant [17 x i8] c"lexical_var_list\00", align 1
@300 = private unnamed_addr constant [12 x i8] c"lexical_var\00", align 1
@301 = private unnamed_addr constant [14 x i8] c"function_call\00", align 1
@302 = private unnamed_addr constant [11 x i8] c"class_name\00", align 1
@303 = private unnamed_addr constant [21 x i8] c"class_name_reference\00", align 1
@304 = private unnamed_addr constant [10 x i8] c"exit_expr\00", align 1
@305 = private unnamed_addr constant [15 x i8] c"backticks_expr\00", align 1
@306 = private unnamed_addr constant [15 x i8] c"ctor_arguments\00", align 1
@307 = private unnamed_addr constant [22 x i8] c"dereferencable_scalar\00", align 1
@308 = private unnamed_addr constant [7 x i8] c"scalar\00", align 1
@309 = private unnamed_addr constant [9 x i8] c"constant\00", align 1
@310 = private unnamed_addr constant [5 x i8] c"expr\00", align 1
@311 = private unnamed_addr constant [14 x i8] c"optional_expr\00", align 1
@312 = private unnamed_addr constant [20 x i8] c"variable_class_name\00", align 1
@313 = private unnamed_addr constant [15 x i8] c"dereferencable\00", align 1
@314 = private unnamed_addr constant [14 x i8] c"callable_expr\00", align 1
@315 = private unnamed_addr constant [18 x i8] c"callable_variable\00", align 1
@316 = private unnamed_addr constant [9 x i8] c"variable\00", align 1
@317 = private unnamed_addr constant [16 x i8] c"simple_variable\00", align 1
@318 = private unnamed_addr constant [14 x i8] c"static_member\00", align 1
@319 = private unnamed_addr constant [13 x i8] c"new_variable\00", align 1
@320 = private unnamed_addr constant [12 x i8] c"member_name\00", align 1
@321 = private unnamed_addr constant [14 x i8] c"property_name\00", align 1
@322 = private unnamed_addr constant [16 x i8] c"array_pair_list\00", align 1
@323 = private unnamed_addr constant [20 x i8] c"possible_array_pair\00", align 1
@324 = private unnamed_addr constant [26 x i8] c"non_empty_array_pair_list\00", align 1
@325 = private unnamed_addr constant [11 x i8] c"array_pair\00", align 1
@326 = private unnamed_addr constant [12 x i8] c"encaps_list\00", align 1
@327 = private unnamed_addr constant [11 x i8] c"encaps_var\00", align 1
@328 = private unnamed_addr constant [18 x i8] c"encaps_var_offset\00", align 1
@329 = private unnamed_addr constant [27 x i8] c"internal_functions_in_yacc\00", align 1
@330 = private unnamed_addr constant [16 x i8] c"isset_variables\00", align 1
@331 = private unnamed_addr constant [15 x i8] c"isset_variable\00", align 1
@332 = private unnamed_addr constant [9 x i8] c"Deleting\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @zendparse() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %0, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [200 x i16], align 16
  %8 = alloca i16*, align 8
  %9 = alloca i16*, align 8
  %10 = alloca [200 x %0], align 16
  %11 = alloca %0*, align 8
  %12 = alloca %0*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %0, align 8
  %18 = alloca [128 x i8], align 16
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i16*, align 8
  %24 = alloca %53*, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i32, align 4
  %28 = alloca %4, align 8
  %29 = alloca %4, align 8
  %30 = alloca %1*, align 8
  %31 = alloca %4, align 8
  %32 = alloca %4*, align 8
  %33 = alloca %34*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i32, align 4
  %36 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #9
  %37 = bitcast %0* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #9
  %38 = bitcast %0* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 bitcast (%0* @0 to i8*), i64 8, i1 false)
  %39 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #9
  %40 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #9
  %41 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #9
  %42 = bitcast [200 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 400, i8* %42) #9
  %43 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #9
  %44 = bitcast i16** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #9
  %45 = bitcast [200 x %0]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1600, i8* %45) #9
  %46 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #9
  %47 = bitcast %0** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #9
  %48 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #9
  %49 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #9
  %50 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #9
  %51 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #9
  store i32 0, i32* %16, align 4
  %52 = bitcast %0* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #9
  %53 = bitcast [128 x i8]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* %53) #9
  %54 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #9
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* %18, i32 0, i32 0
  store i8* %55, i8** %19, align 8
  %56 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #9
  store i64 128, i64* %20, align 8
  %57 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #9
  store i32 0, i32* %21, align 4
  %58 = getelementptr inbounds [200 x i16], [200 x i16]* %7, i32 0, i32 0
  store i16* %58, i16** %8, align 8
  store i16* %58, i16** %9, align 8
  %59 = getelementptr inbounds [200 x %0], [200 x %0]* %10, i32 0, i32 0
  store %0* %59, %0** %11, align 8
  store %0* %59, %0** %12, align 8
  store i64 200, i64* %13, align 8
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %4, align 4
  store i32 -2, i32* %2, align 4
  br label %63

60:                                               ; preds = %4125, %3975, %252
  %61 = load i16*, i16** %9, align 8
  %62 = getelementptr inbounds i16, i16* %61, i32 1
  store i16* %62, i16** %9, align 8
  br label %63

63:                                               ; preds = %60, %0
  %64 = load i32, i32* %5, align 4
  %65 = trunc i32 %64 to i16
  %66 = load i16*, i16** %9, align 8
  store i16 %65, i16* %66, align 2
  %67 = load i16*, i16** %8, align 8
  %68 = load i64, i64* %13, align 8
  %69 = getelementptr inbounds i16, i16* %67, i64 %68
  %70 = getelementptr inbounds i16, i16* %69, i64 -1
  %71 = load i16*, i16** %9, align 8
  %72 = icmp ule i16* %70, %71
  br i1 %72, label %73, label %178

73:                                               ; preds = %63
  %74 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #9
  %75 = load i16*, i16** %9, align 8
  %76 = load i16*, i16** %8, align 8
  %77 = ptrtoint i16* %75 to i64
  %78 = ptrtoint i16* %76 to i64
  %79 = sub i64 %77, %78
  %80 = sdiv exact i64 %79, 2
  %81 = add nsw i64 %80, 1
  store i64 %81, i64* %22, align 8
  %82 = load i64, i64* %13, align 8
  %83 = icmp ule i64 10000, %82
  br i1 %83, label %84, label %85

84:                                               ; preds = %73
  store i32 4, i32* %27, align 4
  br label %174

85:                                               ; preds = %73
  %86 = load i64, i64* %13, align 8
  %87 = mul i64 %86, 2
  store i64 %87, i64* %13, align 8
  %88 = load i64, i64* %13, align 8
  %89 = icmp ult i64 10000, %88
  br i1 %89, label %90, label %91

90:                                               ; preds = %85
  store i64 10000, i64* %13, align 8
  br label %91

91:                                               ; preds = %90, %85
  %92 = bitcast i16** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %92) #9
  %93 = load i16*, i16** %8, align 8
  store i16* %93, i16** %23, align 8
  %94 = bitcast %53** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %94) #9
  %95 = load i64, i64* %13, align 8
  %96 = mul i64 %95, 10
  %97 = add i64 %96, 7
  %98 = call noalias i8* @malloc(i64 %97) #9
  %99 = bitcast i8* %98 to %53*
  store %53* %99, %53** %24, align 8
  %100 = load %53*, %53** %24, align 8
  %101 = icmp ne %53* %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %91
  store i32 4, i32* %27, align 4
  br label %153

103:                                              ; preds = %91
  br label %104

104:                                              ; preds = %103
  %105 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %105) #9
  %106 = load %53*, %53** %24, align 8
  %107 = bitcast %53* %106 to i16*
  %108 = bitcast i16* %107 to i8*
  %109 = load i16*, i16** %8, align 8
  %110 = bitcast i16* %109 to i8*
  %111 = load i64, i64* %22, align 8
  %112 = mul i64 %111, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 2 %110, i64 %112, i1 false)
  %113 = load %53*, %53** %24, align 8
  %114 = bitcast %53* %113 to i16*
  store i16* %114, i16** %8, align 8
  %115 = load i64, i64* %13, align 8
  %116 = mul i64 %115, 2
  %117 = add i64 %116, 7
  store i64 %117, i64* %25, align 8
  %118 = load i64, i64* %25, align 8
  %119 = udiv i64 %118, 8
  %120 = load %53*, %53** %24, align 8
  %121 = getelementptr inbounds %53, %53* %120, i64 %119
  store %53* %121, %53** %24, align 8
  %122 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #9
  br label %123

123:                                              ; preds = %104
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %126) #9
  %127 = load %53*, %53** %24, align 8
  %128 = bitcast %53* %127 to %0*
  %129 = bitcast %0* %128 to i8*
  %130 = load %0*, %0** %11, align 8
  %131 = bitcast %0* %130 to i8*
  %132 = load i64, i64* %22, align 8
  %133 = mul i64 %132, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %131, i64 %133, i1 false)
  %134 = load %53*, %53** %24, align 8
  %135 = bitcast %53* %134 to %0*
  store %0* %135, %0** %11, align 8
  %136 = load i64, i64* %13, align 8
  %137 = mul i64 %136, 8
  %138 = add i64 %137, 7
  store i64 %138, i64* %26, align 8
  %139 = load i64, i64* %26, align 8
  %140 = udiv i64 %139, 8
  %141 = load %53*, %53** %24, align 8
  %142 = getelementptr inbounds %53, %53* %141, i64 %140
  store %53* %142, %53** %24, align 8
  %143 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #9
  br label %144

144:                                              ; preds = %125
  br label %145

145:                                              ; preds = %144
  %146 = load i16*, i16** %23, align 8
  %147 = getelementptr inbounds [200 x i16], [200 x i16]* %7, i32 0, i32 0
  %148 = icmp ne i16* %146, %147
  br i1 %148, label %149, label %152

149:                                              ; preds = %145
  %150 = load i16*, i16** %23, align 8
  %151 = bitcast i16* %150 to i8*
  call void @free(i8* %151) #9
  br label %152

152:                                              ; preds = %149, %145
  store i32 0, i32* %27, align 4
  br label %153

153:                                              ; preds = %102, %152
  %154 = bitcast %53** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #9
  %155 = bitcast i16** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %155) #9
  %156 = load i32, i32* %27, align 4
  switch i32 %156, label %174 [
    i32 0, label %157
  ]

157:                                              ; preds = %153
  %158 = load i16*, i16** %8, align 8
  %159 = load i64, i64* %22, align 8
  %160 = getelementptr inbounds i16, i16* %158, i64 %159
  %161 = getelementptr inbounds i16, i16* %160, i64 -1
  store i16* %161, i16** %9, align 8
  %162 = load %0*, %0** %11, align 8
  %163 = load i64, i64* %22, align 8
  %164 = getelementptr inbounds %0, %0* %162, i64 %163
  %165 = getelementptr inbounds %0, %0* %164, i64 -1
  store %0* %165, %0** %12, align 8
  %166 = load i16*, i16** %8, align 8
  %167 = load i64, i64* %13, align 8
  %168 = getelementptr inbounds i16, i16* %166, i64 %167
  %169 = getelementptr inbounds i16, i16* %168, i64 -1
  %170 = load i16*, i16** %9, align 8
  %171 = icmp ule i16* %169, %170
  br i1 %171, label %172, label %173

172:                                              ; preds = %157
  store i32 9, i32* %27, align 4
  br label %174

173:                                              ; preds = %157
  store i32 0, i32* %27, align 4
  br label %174

174:                                              ; preds = %172, %84, %173, %153
  %175 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %175) #9
  %176 = load i32, i32* %27, align 4
  switch i32 %176, label %4192 [
    i32 0, label %177
    i32 9, label %4132
    i32 4, label %4133
  ]

177:                                              ; preds = %174
  br label %178

178:                                              ; preds = %177, %63
  %179 = load i32, i32* %5, align 4
  %180 = icmp eq i32 %179, 3
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  br label %4131

182:                                              ; preds = %178
  br label %183

183:                                              ; preds = %182
  %184 = load i32, i32* %5, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [945 x i16], [945 x i16]* @1, i64 0, i64 %185
  %187 = load i16, i16* %186, align 2
  %188 = sext i16 %187 to i32
  store i32 %188, i32* %14, align 4
  %189 = load i32, i32* %14, align 4
  %190 = icmp eq i32 %189, -722
  br i1 %190, label %191, label %192

191:                                              ; preds = %183
  br label %258

192:                                              ; preds = %183
  %193 = load i32, i32* %2, align 4
  %194 = icmp eq i32 %193, -2
  br i1 %194, label %195, label %197

195:                                              ; preds = %192
  %196 = call i32 @zendlex(%0* %3)
  store i32 %196, i32* %2, align 4
  br label %197

197:                                              ; preds = %195, %192
  %198 = load i32, i32* %2, align 4
  %199 = icmp sle i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  store i32 0, i32* %16, align 4
  store i32 0, i32* %2, align 4
  br label %213

201:                                              ; preds = %197
  %202 = load i32, i32* %2, align 4
  %203 = icmp ule i32 %202, 392
  br i1 %203, label %204, label %210

204:                                              ; preds = %201
  %205 = load i32, i32* %2, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [393 x i8], [393 x i8]* @2, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  br label %211

210:                                              ; preds = %201
  br label %211

211:                                              ; preds = %210, %204
  %212 = phi i32 [ %209, %204 ], [ 2, %210 ]
  store i32 %212, i32* %16, align 4
  br label %213

213:                                              ; preds = %211, %200
  %214 = load i32, i32* %16, align 4
  %215 = load i32, i32* %14, align 4
  %216 = add nsw i32 %215, %214
  store i32 %216, i32* %14, align 4
  %217 = load i32, i32* %14, align 4
  %218 = icmp slt i32 %217, 0
  br i1 %218, label %230, label %219

219:                                              ; preds = %213
  %220 = load i32, i32* %14, align 4
  %221 = icmp slt i32 7398, %220
  br i1 %221, label %230, label %222

222:                                              ; preds = %219
  %223 = load i32, i32* %14, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [7399 x i16], [7399 x i16]* @3, i64 0, i64 %224
  %226 = load i16, i16* %225, align 2
  %227 = sext i16 %226 to i32
  %228 = load i32, i32* %16, align 4
  %229 = icmp ne i32 %227, %228
  br i1 %229, label %230, label %231

230:                                              ; preds = %222, %219, %213
  br label %258

231:                                              ; preds = %222
  %232 = load i32, i32* %14, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [7399 x i16], [7399 x i16]* @4, i64 0, i64 %233
  %235 = load i16, i16* %234, align 2
  %236 = sext i16 %235 to i32
  store i32 %236, i32* %14, align 4
  %237 = load i32, i32* %14, align 4
  %238 = icmp sle i32 %237, 0
  br i1 %238, label %239, label %246

239:                                              ; preds = %231
  %240 = load i32, i32* %14, align 4
  %241 = icmp eq i32 %240, -472
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  br label %3976

243:                                              ; preds = %239
  %244 = load i32, i32* %14, align 4
  %245 = sub nsw i32 0, %244
  store i32 %245, i32* %14, align 4
  br label %268

246:                                              ; preds = %231
  %247 = load i32, i32* %6, align 4
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %249, label %252

249:                                              ; preds = %246
  %250 = load i32, i32* %6, align 4
  %251 = add nsw i32 %250, -1
  store i32 %251, i32* %6, align 4
  br label %252

252:                                              ; preds = %249, %246
  store i32 -2, i32* %2, align 4
  %253 = load i32, i32* %14, align 4
  store i32 %253, i32* %5, align 4
  %254 = load %0*, %0** %12, align 8
  %255 = getelementptr inbounds %0, %0* %254, i32 1
  store %0* %255, %0** %12, align 8
  %256 = bitcast %0* %255 to i8*
  %257 = bitcast %0* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 8, i1 false)
  br label %60

258:                                              ; preds = %230, %191
  %259 = load i32, i32* %5, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [945 x i16], [945 x i16]* @5, i64 0, i64 %260
  %262 = load i16, i16* %261, align 2
  %263 = zext i16 %262 to i32
  store i32 %263, i32* %14, align 4
  %264 = load i32, i32* %14, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %258
  br label %3976

267:                                              ; preds = %258
  br label %268

268:                                              ; preds = %267, %243
  %269 = load i32, i32* %14, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [499 x i8], [499 x i8]* @6, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  store i32 %273, i32* %21, align 4
  %274 = load %0*, %0** %12, align 8
  %275 = load i32, i32* %21, align 4
  %276 = sub nsw i32 1, %275
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds %0, %0* %274, i64 %277
  %279 = bitcast %0* %17 to i8*
  %280 = bitcast %0* %278 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 8, i1 false)
  %281 = load i32, i32* %14, align 4
  switch i32 %281, label %3916 [
    i32 2, label %282
    i32 77, label %287
    i32 78, label %293
    i32 79, label %298
    i32 80, label %309
    i32 81, label %312
    i32 82, label %318
    i32 83, label %329
    i32 84, label %338
    i32 85, label %347
    i32 86, label %356
    i32 87, label %362
    i32 88, label %368
    i32 89, label %374
    i32 90, label %380
    i32 91, label %386
    i32 92, label %391
    i32 93, label %406
    i32 94, label %415
    i32 95, label %426
    i32 96, label %435
    i32 97, label %442
    i32 98, label %448
    i32 99, label %462
    i32 100, label %471
    i32 101, label %485
    i32 102, label %491
    i32 103, label %493
    i32 104, label %495
    i32 105, label %506
    i32 106, label %517
    i32 107, label %528
    i32 110, label %539
    i32 111, label %550
    i32 112, label %557
    i32 113, label %568
    i32 114, label %575
    i32 115, label %586
    i32 116, label %593
    i32 117, label %602
    i32 118, label %616
    i32 119, label %623
    i32 120, label %634
    i32 121, label %640
    i32 122, label %646
    i32 123, label %657
    i32 124, label %664
    i32 125, label %675
    i32 126, label %678
    i32 127, label %684
    i32 128, label %690
    i32 129, label %696
    i32 130, label %702
    i32 131, label %708
    i32 132, label %710
    i32 133, label %716
    i32 134, label %722
    i32 135, label %728
    i32 136, label %739
    i32 137, label %750
    i32 138, label %769
    i32 139, label %780
    i32 140, label %787
    i32 141, label %794
    i32 142, label %801
    i32 143, label %807
    i32 144, label %813
    i32 145, label %819
    i32 146, label %826
    i32 147, label %832
    i32 148, label %838
    i32 149, label %853
    i32 150, label %872
    i32 151, label %877
    i32 152, label %888
    i32 153, label %890
    i32 154, label %905
    i32 155, label %912
    i32 156, label %919
    i32 157, label %926
    i32 158, label %929
    i32 159, label %949
    i32 160, label %956
    i32 161, label %967
    i32 162, label %969
    i32 163, label %975
    i32 164, label %982
    i32 165, label %993
    i32 166, label %1000
    i32 167, label %1044
    i32 168, label %1046
    i32 169, label %1048
    i32 170, label %1050
    i32 171, label %1052
    i32 172, label %1056
    i32 173, label %1090
    i32 174, label %1094
    i32 175, label %1123
    i32 176, label %1129
    i32 177, label %1143
    i32 178, label %1145
    i32 179, label %1147
    i32 180, label %1151
    i32 181, label %1172
    i32 182, label %1176
    i32 183, label %1201
    i32 184, label %1203
    i32 185, label %1209
    i32 186, label %1211
    i32 187, label %1217
    i32 188, label %1219
    i32 189, label %1225
    i32 190, label %1231
    i32 191, label %1238
    i32 192, label %1247
    i32 193, label %1256
    i32 194, label %1262
    i32 195, label %1268
    i32 196, label %1274
    i32 197, label %1280
    i32 198, label %1286
    i32 199, label %1292
    i32 200, label %1298
    i32 201, label %1304
    i32 202, label %1310
    i32 203, label %1316
    i32 204, label %1319
    i32 205, label %1335
    i32 208, label %1347
    i32 209, label %1353
    i32 210, label %1359
    i32 211, label %1371
    i32 212, label %1387
    i32 213, label %1393
    i32 214, label %1405
    i32 215, label %1417
    i32 216, label %1433
    i32 217, label %1439
    i32 218, label %1451
    i32 219, label %1457
    i32 220, label %1460
    i32 221, label %1467
    i32 222, label %1478
    i32 223, label %1499
    i32 224, label %1524
    i32 225, label %1526
    i32 226, label %1532
    i32 227, label %1538
    i32 228, label %1551
    i32 229, label %1554
    i32 230, label %1557
    i32 231, label %1563
    i32 232, label %1565
    i32 233, label %1571
    i32 234, label %1574
    i32 235, label %1580
    i32 236, label %1587
    i32 237, label %1598
    i32 238, label %1604
    i32 239, label %1611
    i32 240, label %1622
    i32 241, label %1629
    i32 242, label %1637
    i32 243, label %1648
    i32 244, label %1655
    i32 245, label %1662
    i32 246, label %1673
    i32 247, label %1684
    i32 248, label %1687
    i32 249, label %1701
    i32 250, label %1715
    i32 251, label %1726
    i32 252, label %1775
    i32 253, label %1782
    i32 254, label %1793
    i32 255, label %1795
    i32 256, label %1797
    i32 257, label %1803
    i32 258, label %1810
    i32 259, label %1821
    i32 260, label %1827
    i32 261, label %1833
    i32 262, label %1844
    i32 263, label %1855
    i32 264, label %1865
    i32 265, label %1881
    i32 266, label %1893
    i32 267, label %1900
    i32 268, label %1906
    i32 269, label %1917
    i32 270, label %1919
    i32 271, label %1925
    i32 272, label %1931
    i32 273, label %1933
    i32 274, label %1935
    i32 275, label %1950
    i32 276, label %1956
    i32 277, label %1970
    i32 278, label %1972
    i32 279, label %1974
    i32 280, label %1976
    i32 281, label %1978
    i32 282, label %1980
    i32 283, label %1982
    i32 284, label %1993
    i32 285, label %2000
    i32 286, label %2021
    i32 287, label %2046
    i32 288, label %2057
    i32 289, label %2064
    i32 290, label %2089
    i32 291, label %2114
    i32 292, label %2125
    i32 293, label %2132
    i32 294, label %2139
    i32 295, label %2141
    i32 296, label %2147
    i32 297, label %2158
    i32 298, label %2165
    i32 299, label %2169
    i32 300, label %2201
    i32 301, label %2212
    i32 302, label %2218
    i32 303, label %2234
    i32 304, label %2250
    i32 305, label %2261
    i32 306, label %2272
    i32 307, label %2279
    i32 308, label %2290
    i32 309, label %2301
    i32 310, label %2312
    i32 311, label %2323
    i32 312, label %2334
    i32 313, label %2345
    i32 314, label %2356
    i32 315, label %2367
    i32 316, label %2378
    i32 317, label %2389
    i32 318, label %2400
    i32 319, label %2411
    i32 320, label %2418
    i32 321, label %2425
    i32 322, label %2432
    i32 323, label %2439
    i32 324, label %2450
    i32 325, label %2461
    i32 326, label %2472
    i32 327, label %2483
    i32 328, label %2494
    i32 329, label %2505
    i32 330, label %2516
    i32 331, label %2527
    i32 332, label %2538
    i32 333, label %2549
    i32 334, label %2560
    i32 335, label %2571
    i32 336, label %2582
    i32 337, label %2593
    i32 338, label %2604
    i32 339, label %2615
    i32 340, label %2626
    i32 341, label %2633
    i32 342, label %2640
    i32 343, label %2647
    i32 344, label %2654
    i32 345, label %2665
    i32 346, label %2676
    i32 347, label %2687
    i32 348, label %2698
    i32 349, label %2709
    i32 350, label %2720
    i32 351, label %2731
    i32 352, label %2742
    i32 353, label %2753
    i32 354, label %2764
    i32 355, label %2770
    i32 356, label %2776
    i32 357, label %2791
    i32 358, label %2802
    i32 359, label %2813
    i32 360, label %2819
    i32 361, label %2826
    i32 362, label %2833
    i32 363, label %2840
    i32 364, label %2847
    i32 365, label %2854
    i32 366, label %2861
    i32 367, label %2868
    i32 368, label %2875
    i32 369, label %2882
    i32 370, label %2888
    i32 371, label %2895
    i32 372, label %2902
    i32 373, label %2907
    i32 374, label %2916
    i32 375, label %2929
    i32 376, label %2938
    i32 377, label %2982
    i32 378, label %3027
    i32 379, label %3031
    i32 380, label %3034
    i32 381, label %3038
    i32 382, label %3040
    i32 383, label %3042
    i32 384, label %3044
    i32 385, label %3050
    i32 386, label %3061
    i32 387, label %3068
    i32 388, label %3074
    i32 389, label %3083
    i32 390, label %3094
    i32 391, label %3109
    i32 392, label %3124
    i32 393, label %3135
    i32 394, label %3157
    i32 395, label %3163
    i32 396, label %3169
    i32 397, label %3175
    i32 398, label %3177
    i32 399, label %3183
    i32 400, label %3187
    i32 401, label %3193
    i32 402, label %3199
    i32 403, label %3202
    i32 404, label %3208
    i32 405, label %3217
    i32 406, label %3226
    i32 407, label %3232
    i32 408, label %3238
    i32 409, label %3244
    i32 410, label %3247
    i32 411, label %3250
    i32 412, label %3253
    i32 413, label %3256
    i32 414, label %3259
    i32 415, label %3262
    i32 416, label %3265
    i32 417, label %3268
    i32 418, label %3274
    i32 419, label %3278
    i32 420, label %3284
    i32 421, label %3290
    i32 422, label %3296
    i32 423, label %3302
    i32 424, label %3309
    i32 425, label %3320
    i32 426, label %3331
    i32 427, label %3337
    i32 428, label %3343
    i32 429, label %3345
    i32 430, label %3351
    i32 431, label %3357
    i32 432, label %3363
    i32 433, label %3369
    i32 434, label %3375
    i32 435, label %3381
    i32 436, label %3387
    i32 437, label %3393
    i32 438, label %3400
    i32 439, label %3411
    i32 440, label %3422
    i32 441, label %3433
    i32 442, label %3448
    i32 443, label %3454
    i32 444, label %3460
    i32 445, label %3466
    i32 446, label %3477
    i32 447, label %3483
    i32 448, label %3489
    i32 449, label %3496
    i32 450, label %3507
    i32 451, label %3518
    i32 452, label %3525
    i32 453, label %3536
    i32 454, label %3547
    i32 455, label %3558
    i32 456, label %3569
    i32 457, label %3580
    i32 458, label %3586
    i32 459, label %3592
    i32 460, label %3599
    i32 461, label %3605
    i32 462, label %3611
    i32 463, label %3618
    i32 464, label %3625
    i32 465, label %3627
    i32 466, label %3633
    i32 467, label %3644
    i32 468, label %3651
    i32 469, label %3662
    i32 470, label %3669
    i32 471, label %3680
    i32 472, label %3687
    i32 473, label %3703
    i32 474, label %3715
    i32 475, label %3726
    i32 476, label %3737
    i32 477, label %3744
    i32 478, label %3755
    i32 479, label %3762
    i32 480, label %3774
    i32 481, label %3786
    i32 482, label %3793
    i32 483, label %3800
    i32 484, label %3812
    i32 485, label %3818
    i32 486, label %3824
    i32 487, label %3830
    i32 488, label %3837
    i32 489, label %3844
    i32 490, label %3850
    i32 491, label %3857
    i32 492, label %3864
    i32 493, label %3871
    i32 494, label %3878
    i32 495, label %3885
    i32 496, label %3892
    i32 497, label %3898
    i32 498, label %3909
  ]

282:                                              ; preds = %268
  %283 = load %0*, %0** %12, align 8
  %284 = getelementptr inbounds %0, %0* %283, i64 0
  %285 = bitcast %0* %284 to %1**
  %286 = load %1*, %1** %285, align 8
  store %1* %286, %1** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 30), align 8
  br label %3917

287:                                              ; preds = %268
  %288 = load %0*, %0** %12, align 8
  %289 = getelementptr inbounds %0, %0* %288, i64 0
  %290 = bitcast %0* %289 to %1**
  %291 = load %1*, %1** %290, align 8
  %292 = bitcast %0* %17 to %1**
  store %1* %291, %1** %292, align 8
  br label %3917

293:                                              ; preds = %268
  %294 = bitcast %4* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %294) #9
  call void @zend_lex_tstring(%4* %28)
  %295 = call %1* @333(%4* %28)
  %296 = bitcast %0* %17 to %1**
  store %1* %295, %1** %296, align 8
  %297 = bitcast %4* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %297) #9
  br label %3917

298:                                              ; preds = %268
  %299 = load %0*, %0** %12, align 8
  %300 = getelementptr inbounds %0, %0* %299, i64 -1
  %301 = bitcast %0* %300 to %1**
  %302 = load %1*, %1** %301, align 8
  %303 = load %0*, %0** %12, align 8
  %304 = getelementptr inbounds %0, %0* %303, i64 0
  %305 = bitcast %0* %304 to %1**
  %306 = load %1*, %1** %305, align 8
  %307 = call %1* @zend_ast_list_add(%1* %302, %1* %306)
  %308 = bitcast %0* %17 to %1**
  store %1* %307, %1** %308, align 8
  br label %3917

309:                                              ; preds = %268
  %310 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 0, i16 zeroext 132)
  %311 = bitcast %0* %17 to %1**
  store %1* %310, %1** %311, align 8
  br label %3917

312:                                              ; preds = %268
  %313 = load %0*, %0** %12, align 8
  %314 = getelementptr inbounds %0, %0* %313, i64 0
  %315 = bitcast %0* %314 to %1**
  %316 = load %1*, %1** %315, align 8
  %317 = bitcast %0* %17 to %1**
  store %1* %316, %1** %317, align 8
  br label %3917

318:                                              ; preds = %268
  %319 = load %0*, %0** %12, align 8
  %320 = getelementptr inbounds %0, %0* %319, i64 -2
  %321 = bitcast %0* %320 to %1**
  %322 = load %1*, %1** %321, align 8
  %323 = load %0*, %0** %12, align 8
  %324 = getelementptr inbounds %0, %0* %323, i64 0
  %325 = bitcast %0* %324 to %1**
  %326 = load %1*, %1** %325, align 8
  %327 = call %1* @zend_ast_append_str(%1* %322, %1* %326)
  %328 = bitcast %0* %17 to %1**
  store %1* %327, %1** %328, align 8
  br label %3917

329:                                              ; preds = %268
  %330 = load %0*, %0** %12, align 8
  %331 = getelementptr inbounds %0, %0* %330, i64 0
  %332 = bitcast %0* %331 to %1**
  %333 = load %1*, %1** %332, align 8
  %334 = bitcast %0* %17 to %1**
  store %1* %333, %1** %334, align 8
  %335 = bitcast %0* %17 to %1**
  %336 = load %1*, %1** %335, align 8
  %337 = getelementptr inbounds %1, %1* %336, i32 0, i32 1
  store i16 1, i16* %337, align 2
  br label %3917

338:                                              ; preds = %268
  %339 = load %0*, %0** %12, align 8
  %340 = getelementptr inbounds %0, %0* %339, i64 0
  %341 = bitcast %0* %340 to %1**
  %342 = load %1*, %1** %341, align 8
  %343 = bitcast %0* %17 to %1**
  store %1* %342, %1** %343, align 8
  %344 = bitcast %0* %17 to %1**
  %345 = load %1*, %1** %344, align 8
  %346 = getelementptr inbounds %1, %1* %345, i32 0, i32 1
  store i16 2, i16* %346, align 2
  br label %3917

347:                                              ; preds = %268
  %348 = load %0*, %0** %12, align 8
  %349 = getelementptr inbounds %0, %0* %348, i64 0
  %350 = bitcast %0* %349 to %1**
  %351 = load %1*, %1** %350, align 8
  %352 = bitcast %0* %17 to %1**
  store %1* %351, %1** %352, align 8
  %353 = bitcast %0* %17 to %1**
  %354 = load %1*, %1** %353, align 8
  %355 = getelementptr inbounds %1, %1* %354, i32 0, i32 1
  store i16 0, i16* %355, align 2
  br label %3917

356:                                              ; preds = %268
  %357 = load %0*, %0** %12, align 8
  %358 = getelementptr inbounds %0, %0* %357, i64 0
  %359 = bitcast %0* %358 to %1**
  %360 = load %1*, %1** %359, align 8
  %361 = bitcast %0* %17 to %1**
  store %1* %360, %1** %361, align 8
  br label %3917

362:                                              ; preds = %268
  %363 = load %0*, %0** %12, align 8
  %364 = getelementptr inbounds %0, %0* %363, i64 0
  %365 = bitcast %0* %364 to %1**
  %366 = load %1*, %1** %365, align 8
  %367 = bitcast %0* %17 to %1**
  store %1* %366, %1** %367, align 8
  br label %3917

368:                                              ; preds = %268
  %369 = load %0*, %0** %12, align 8
  %370 = getelementptr inbounds %0, %0* %369, i64 0
  %371 = bitcast %0* %370 to %1**
  %372 = load %1*, %1** %371, align 8
  %373 = bitcast %0* %17 to %1**
  store %1* %372, %1** %373, align 8
  br label %3917

374:                                              ; preds = %268
  %375 = load %0*, %0** %12, align 8
  %376 = getelementptr inbounds %0, %0* %375, i64 0
  %377 = bitcast %0* %376 to %1**
  %378 = load %1*, %1** %377, align 8
  %379 = bitcast %0* %17 to %1**
  store %1* %378, %1** %379, align 8
  br label %3917

380:                                              ; preds = %268
  %381 = load %0*, %0** %12, align 8
  %382 = getelementptr inbounds %0, %0* %381, i64 0
  %383 = bitcast %0* %382 to %1**
  %384 = load %1*, %1** %383, align 8
  %385 = bitcast %0* %17 to %1**
  store %1* %384, %1** %385, align 8
  br label %3917

386:                                              ; preds = %268
  %387 = call i64 @zend_get_scanned_file_offset()
  %388 = call %1* @334(i64 %387)
  %389 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 281, %1* %388)
  %390 = bitcast %0* %17 to %1**
  store %1* %389, %1** %390, align 8
  call void @zend_stop_lexing()
  br label %3917

391:                                              ; preds = %268
  %392 = load %0*, %0** %12, align 8
  %393 = getelementptr inbounds %0, %0* %392, i64 -1
  %394 = bitcast %0* %393 to %1**
  %395 = load %1*, %1** %394, align 8
  %396 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 540, %1* %395, i8* null)
  %397 = bitcast %0* %17 to %1**
  store %1* %396, %1** %397, align 8
  br label %398

398:                                              ; preds = %391
  %399 = load %34*, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  %400 = icmp ne %34* %399, null
  br i1 %400, label %401, label %403

401:                                              ; preds = %398
  %402 = load %34*, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  call void @335(%34* %402)
  store %34* null, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  br label %403

403:                                              ; preds = %401, %398
  br label %404

404:                                              ; preds = %403
  br label %405

405:                                              ; preds = %404
  br label %3917

406:                                              ; preds = %268
  br label %407

407:                                              ; preds = %406
  %408 = load %34*, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  %409 = icmp ne %34* %408, null
  br i1 %409, label %410, label %412

410:                                              ; preds = %407
  %411 = load %34*, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  call void @335(%34* %411)
  store %34* null, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  br label %412

412:                                              ; preds = %410, %407
  br label %413

413:                                              ; preds = %412
  br label %414

414:                                              ; preds = %413
  br label %3917

415:                                              ; preds = %268
  %416 = load %0*, %0** %12, align 8
  %417 = getelementptr inbounds %0, %0* %416, i64 -4
  %418 = bitcast %0* %417 to %1**
  %419 = load %1*, %1** %418, align 8
  %420 = load %0*, %0** %12, align 8
  %421 = getelementptr inbounds %0, %0* %420, i64 -1
  %422 = bitcast %0* %421 to %1**
  %423 = load %1*, %1** %422, align 8
  %424 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 540, %1* %419, %1* %423)
  %425 = bitcast %0* %17 to %1**
  store %1* %424, %1** %425, align 8
  br label %3917

426:                                              ; preds = %268
  br label %427

427:                                              ; preds = %426
  %428 = load %34*, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  %429 = icmp ne %34* %428, null
  br i1 %429, label %430, label %432

430:                                              ; preds = %427
  %431 = load %34*, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  call void @335(%34* %431)
  store %34* null, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  br label %432

432:                                              ; preds = %430, %427
  br label %433

433:                                              ; preds = %432
  br label %434

434:                                              ; preds = %433
  br label %3917

435:                                              ; preds = %268
  %436 = load %0*, %0** %12, align 8
  %437 = getelementptr inbounds %0, %0* %436, i64 -1
  %438 = bitcast %0* %437 to %1**
  %439 = load %1*, %1** %438, align 8
  %440 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 540, i8* null, %1* %439)
  %441 = bitcast %0* %17 to %1**
  store %1* %440, %1** %441, align 8
  br label %3917

442:                                              ; preds = %268
  %443 = load %0*, %0** %12, align 8
  %444 = getelementptr inbounds %0, %0* %443, i64 -1
  %445 = bitcast %0* %444 to %1**
  %446 = load %1*, %1** %445, align 8
  %447 = bitcast %0* %17 to %1**
  store %1* %446, %1** %447, align 8
  br label %3917

448:                                              ; preds = %268
  %449 = load %0*, %0** %12, align 8
  %450 = getelementptr inbounds %0, %0* %449, i64 -1
  %451 = bitcast %0* %450 to %1**
  %452 = load %1*, %1** %451, align 8
  %453 = bitcast %0* %17 to %1**
  store %1* %452, %1** %453, align 8
  %454 = load %0*, %0** %12, align 8
  %455 = getelementptr inbounds %0, %0* %454, i64 -2
  %456 = bitcast %0* %455 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = trunc i64 %457 to i16
  %459 = bitcast %0* %17 to %1**
  %460 = load %1*, %1** %459, align 8
  %461 = getelementptr inbounds %1, %1* %460, i32 0, i32 1
  store i16 %458, i16* %461, align 2
  br label %3917

462:                                              ; preds = %268
  %463 = load %0*, %0** %12, align 8
  %464 = getelementptr inbounds %0, %0* %463, i64 -1
  %465 = bitcast %0* %464 to %1**
  %466 = load %1*, %1** %465, align 8
  %467 = bitcast %0* %17 to %1**
  store %1* %466, %1** %467, align 8
  %468 = bitcast %0* %17 to %1**
  %469 = load %1*, %1** %468, align 8
  %470 = getelementptr inbounds %1, %1* %469, i32 0, i32 1
  store i16 1, i16* %470, align 2
  br label %3917

471:                                              ; preds = %268
  %472 = load %0*, %0** %12, align 8
  %473 = getelementptr inbounds %0, %0* %472, i64 -1
  %474 = bitcast %0* %473 to %1**
  %475 = load %1*, %1** %474, align 8
  %476 = bitcast %0* %17 to %1**
  store %1* %475, %1** %476, align 8
  %477 = load %0*, %0** %12, align 8
  %478 = getelementptr inbounds %0, %0* %477, i64 -2
  %479 = bitcast %0* %478 to i64*
  %480 = load i64, i64* %479, align 8
  %481 = trunc i64 %480 to i16
  %482 = bitcast %0* %17 to %1**
  %483 = load %1*, %1** %482, align 8
  %484 = getelementptr inbounds %1, %1* %483, i32 0, i32 1
  store i16 %481, i16* %484, align 2
  br label %3917

485:                                              ; preds = %268
  %486 = load %0*, %0** %12, align 8
  %487 = getelementptr inbounds %0, %0* %486, i64 -1
  %488 = bitcast %0* %487 to %1**
  %489 = load %1*, %1** %488, align 8
  %490 = bitcast %0* %17 to %1**
  store %1* %489, %1** %490, align 8
  br label %3917

491:                                              ; preds = %268
  %492 = bitcast %0* %17 to i64*
  store i64 2, i64* %492, align 8
  br label %3917

493:                                              ; preds = %268
  %494 = bitcast %0* %17 to i64*
  store i64 4, i64* %494, align 8
  br label %3917

495:                                              ; preds = %268
  %496 = load %0*, %0** %12, align 8
  %497 = getelementptr inbounds %0, %0* %496, i64 -5
  %498 = bitcast %0* %497 to %1**
  %499 = load %1*, %1** %498, align 8
  %500 = load %0*, %0** %12, align 8
  %501 = getelementptr inbounds %0, %0* %500, i64 -2
  %502 = bitcast %0* %501 to %1**
  %503 = load %1*, %1** %502, align 8
  %504 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 543, %1* %499, %1* %503)
  %505 = bitcast %0* %17 to %1**
  store %1* %504, %1** %505, align 8
  br label %3917

506:                                              ; preds = %268
  %507 = load %0*, %0** %12, align 8
  %508 = getelementptr inbounds %0, %0* %507, i64 -5
  %509 = bitcast %0* %508 to %1**
  %510 = load %1*, %1** %509, align 8
  %511 = load %0*, %0** %12, align 8
  %512 = getelementptr inbounds %0, %0* %511, i64 -2
  %513 = bitcast %0* %512 to %1**
  %514 = load %1*, %1** %513, align 8
  %515 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 543, %1* %510, %1* %514)
  %516 = bitcast %0* %17 to %1**
  store %1* %515, %1** %516, align 8
  br label %3917

517:                                              ; preds = %268
  %518 = load %0*, %0** %12, align 8
  %519 = getelementptr inbounds %0, %0* %518, i64 -5
  %520 = bitcast %0* %519 to %1**
  %521 = load %1*, %1** %520, align 8
  %522 = load %0*, %0** %12, align 8
  %523 = getelementptr inbounds %0, %0* %522, i64 -2
  %524 = bitcast %0* %523 to %1**
  %525 = load %1*, %1** %524, align 8
  %526 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 543, %1* %521, %1* %525)
  %527 = bitcast %0* %17 to %1**
  store %1* %526, %1** %527, align 8
  br label %3917

528:                                              ; preds = %268
  %529 = load %0*, %0** %12, align 8
  %530 = getelementptr inbounds %0, %0* %529, i64 -5
  %531 = bitcast %0* %530 to %1**
  %532 = load %1*, %1** %531, align 8
  %533 = load %0*, %0** %12, align 8
  %534 = getelementptr inbounds %0, %0* %533, i64 -2
  %535 = bitcast %0* %534 to %1**
  %536 = load %1*, %1** %535, align 8
  %537 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 543, %1* %532, %1* %536)
  %538 = bitcast %0* %17 to %1**
  store %1* %537, %1** %538, align 8
  br label %3917

539:                                              ; preds = %268
  %540 = load %0*, %0** %12, align 8
  %541 = getelementptr inbounds %0, %0* %540, i64 -2
  %542 = bitcast %0* %541 to %1**
  %543 = load %1*, %1** %542, align 8
  %544 = load %0*, %0** %12, align 8
  %545 = getelementptr inbounds %0, %0* %544, i64 0
  %546 = bitcast %0* %545 to %1**
  %547 = load %1*, %1** %546, align 8
  %548 = call %1* @zend_ast_list_add(%1* %543, %1* %547)
  %549 = bitcast %0* %17 to %1**
  store %1* %548, %1** %549, align 8
  br label %3917

550:                                              ; preds = %268
  %551 = load %0*, %0** %12, align 8
  %552 = getelementptr inbounds %0, %0* %551, i64 0
  %553 = bitcast %0* %552 to %1**
  %554 = load %1*, %1** %553, align 8
  %555 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 143, %1* %554)
  %556 = bitcast %0* %17 to %1**
  store %1* %555, %1** %556, align 8
  br label %3917

557:                                              ; preds = %268
  %558 = load %0*, %0** %12, align 8
  %559 = getelementptr inbounds %0, %0* %558, i64 -2
  %560 = bitcast %0* %559 to %1**
  %561 = load %1*, %1** %560, align 8
  %562 = load %0*, %0** %12, align 8
  %563 = getelementptr inbounds %0, %0* %562, i64 0
  %564 = bitcast %0* %563 to %1**
  %565 = load %1*, %1** %564, align 8
  %566 = call %1* @zend_ast_list_add(%1* %561, %1* %565)
  %567 = bitcast %0* %17 to %1**
  store %1* %566, %1** %567, align 8
  br label %3917

568:                                              ; preds = %268
  %569 = load %0*, %0** %12, align 8
  %570 = getelementptr inbounds %0, %0* %569, i64 0
  %571 = bitcast %0* %570 to %1**
  %572 = load %1*, %1** %571, align 8
  %573 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 143, %1* %572)
  %574 = bitcast %0* %17 to %1**
  store %1* %573, %1** %574, align 8
  br label %3917

575:                                              ; preds = %268
  %576 = load %0*, %0** %12, align 8
  %577 = getelementptr inbounds %0, %0* %576, i64 -2
  %578 = bitcast %0* %577 to %1**
  %579 = load %1*, %1** %578, align 8
  %580 = load %0*, %0** %12, align 8
  %581 = getelementptr inbounds %0, %0* %580, i64 0
  %582 = bitcast %0* %581 to %1**
  %583 = load %1*, %1** %582, align 8
  %584 = call %1* @zend_ast_list_add(%1* %579, %1* %583)
  %585 = bitcast %0* %17 to %1**
  store %1* %584, %1** %585, align 8
  br label %3917

586:                                              ; preds = %268
  %587 = load %0*, %0** %12, align 8
  %588 = getelementptr inbounds %0, %0* %587, i64 0
  %589 = bitcast %0* %588 to %1**
  %590 = load %1*, %1** %589, align 8
  %591 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 143, %1* %590)
  %592 = bitcast %0* %17 to %1**
  store %1* %591, %1** %592, align 8
  br label %3917

593:                                              ; preds = %268
  %594 = load %0*, %0** %12, align 8
  %595 = getelementptr inbounds %0, %0* %594, i64 0
  %596 = bitcast %0* %595 to %1**
  %597 = load %1*, %1** %596, align 8
  %598 = bitcast %0* %17 to %1**
  store %1* %597, %1** %598, align 8
  %599 = bitcast %0* %17 to %1**
  %600 = load %1*, %1** %599, align 8
  %601 = getelementptr inbounds %1, %1* %600, i32 0, i32 1
  store i16 1, i16* %601, align 2
  br label %3917

602:                                              ; preds = %268
  %603 = load %0*, %0** %12, align 8
  %604 = getelementptr inbounds %0, %0* %603, i64 0
  %605 = bitcast %0* %604 to %1**
  %606 = load %1*, %1** %605, align 8
  %607 = bitcast %0* %17 to %1**
  store %1* %606, %1** %607, align 8
  %608 = load %0*, %0** %12, align 8
  %609 = getelementptr inbounds %0, %0* %608, i64 -1
  %610 = bitcast %0* %609 to i64*
  %611 = load i64, i64* %610, align 8
  %612 = trunc i64 %611 to i16
  %613 = bitcast %0* %17 to %1**
  %614 = load %1*, %1** %613, align 8
  %615 = getelementptr inbounds %1, %1* %614, i32 0, i32 1
  store i16 %612, i16* %615, align 2
  br label %3917

616:                                              ; preds = %268
  %617 = load %0*, %0** %12, align 8
  %618 = getelementptr inbounds %0, %0* %617, i64 0
  %619 = bitcast %0* %618 to %1**
  %620 = load %1*, %1** %619, align 8
  %621 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 541, %1* %620, i8* null)
  %622 = bitcast %0* %17 to %1**
  store %1* %621, %1** %622, align 8
  br label %3917

623:                                              ; preds = %268
  %624 = load %0*, %0** %12, align 8
  %625 = getelementptr inbounds %0, %0* %624, i64 -2
  %626 = bitcast %0* %625 to %1**
  %627 = load %1*, %1** %626, align 8
  %628 = load %0*, %0** %12, align 8
  %629 = getelementptr inbounds %0, %0* %628, i64 0
  %630 = bitcast %0* %629 to %1**
  %631 = load %1*, %1** %630, align 8
  %632 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 541, %1* %627, %1* %631)
  %633 = bitcast %0* %17 to %1**
  store %1* %632, %1** %633, align 8
  br label %3917

634:                                              ; preds = %268
  %635 = load %0*, %0** %12, align 8
  %636 = getelementptr inbounds %0, %0* %635, i64 0
  %637 = bitcast %0* %636 to %1**
  %638 = load %1*, %1** %637, align 8
  %639 = bitcast %0* %17 to %1**
  store %1* %638, %1** %639, align 8
  br label %3917

640:                                              ; preds = %268
  %641 = load %0*, %0** %12, align 8
  %642 = getelementptr inbounds %0, %0* %641, i64 0
  %643 = bitcast %0* %642 to %1**
  %644 = load %1*, %1** %643, align 8
  %645 = bitcast %0* %17 to %1**
  store %1* %644, %1** %645, align 8
  br label %3917

646:                                              ; preds = %268
  %647 = load %0*, %0** %12, align 8
  %648 = getelementptr inbounds %0, %0* %647, i64 -2
  %649 = bitcast %0* %648 to %1**
  %650 = load %1*, %1** %649, align 8
  %651 = load %0*, %0** %12, align 8
  %652 = getelementptr inbounds %0, %0* %651, i64 0
  %653 = bitcast %0* %652 to %1**
  %654 = load %1*, %1** %653, align 8
  %655 = call %1* @zend_ast_list_add(%1* %650, %1* %654)
  %656 = bitcast %0* %17 to %1**
  store %1* %655, %1** %656, align 8
  br label %3917

657:                                              ; preds = %268
  %658 = load %0*, %0** %12, align 8
  %659 = getelementptr inbounds %0, %0* %658, i64 0
  %660 = bitcast %0* %659 to %1**
  %661 = load %1*, %1** %660, align 8
  %662 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 139, %1* %661)
  %663 = bitcast %0* %17 to %1**
  store %1* %662, %1** %663, align 8
  br label %3917

664:                                              ; preds = %268
  %665 = load %0*, %0** %12, align 8
  %666 = getelementptr inbounds %0, %0* %665, i64 -1
  %667 = bitcast %0* %666 to %1**
  %668 = load %1*, %1** %667, align 8
  %669 = load %0*, %0** %12, align 8
  %670 = getelementptr inbounds %0, %0* %669, i64 0
  %671 = bitcast %0* %670 to %1**
  %672 = load %1*, %1** %671, align 8
  %673 = call %1* @zend_ast_list_add(%1* %668, %1* %672)
  %674 = bitcast %0* %17 to %1**
  store %1* %673, %1** %674, align 8
  br label %3917

675:                                              ; preds = %268
  %676 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 0, i16 zeroext 132)
  %677 = bitcast %0* %17 to %1**
  store %1* %676, %1** %677, align 8
  br label %3917

678:                                              ; preds = %268
  %679 = load %0*, %0** %12, align 8
  %680 = getelementptr inbounds %0, %0* %679, i64 0
  %681 = bitcast %0* %680 to %1**
  %682 = load %1*, %1** %681, align 8
  %683 = bitcast %0* %17 to %1**
  store %1* %682, %1** %683, align 8
  br label %3917

684:                                              ; preds = %268
  %685 = load %0*, %0** %12, align 8
  %686 = getelementptr inbounds %0, %0* %685, i64 0
  %687 = bitcast %0* %686 to %1**
  %688 = load %1*, %1** %687, align 8
  %689 = bitcast %0* %17 to %1**
  store %1* %688, %1** %689, align 8
  br label %3917

690:                                              ; preds = %268
  %691 = load %0*, %0** %12, align 8
  %692 = getelementptr inbounds %0, %0* %691, i64 0
  %693 = bitcast %0* %692 to %1**
  %694 = load %1*, %1** %693, align 8
  %695 = bitcast %0* %17 to %1**
  store %1* %694, %1** %695, align 8
  br label %3917

696:                                              ; preds = %268
  %697 = load %0*, %0** %12, align 8
  %698 = getelementptr inbounds %0, %0* %697, i64 0
  %699 = bitcast %0* %698 to %1**
  %700 = load %1*, %1** %699, align 8
  %701 = bitcast %0* %17 to %1**
  store %1* %700, %1** %701, align 8
  br label %3917

702:                                              ; preds = %268
  %703 = load %0*, %0** %12, align 8
  %704 = getelementptr inbounds %0, %0* %703, i64 0
  %705 = bitcast %0* %704 to %1**
  %706 = load %1*, %1** %705, align 8
  %707 = bitcast %0* %17 to %1**
  store %1* %706, %1** %707, align 8
  br label %3917

708:                                              ; preds = %268
  %709 = bitcast %0* %17 to %1**
  store %1* null, %1** %709, align 8
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @7, i32 0, i32 0)) #10
  unreachable

710:                                              ; preds = %268
  %711 = load %0*, %0** %12, align 8
  %712 = getelementptr inbounds %0, %0* %711, i64 -1
  %713 = bitcast %0* %712 to %1**
  %714 = load %1*, %1** %713, align 8
  %715 = bitcast %0* %17 to %1**
  store %1* %714, %1** %715, align 8
  br label %3917

716:                                              ; preds = %268
  %717 = load %0*, %0** %12, align 8
  %718 = getelementptr inbounds %0, %0* %717, i64 0
  %719 = bitcast %0* %718 to %1**
  %720 = load %1*, %1** %719, align 8
  %721 = bitcast %0* %17 to %1**
  store %1* %720, %1** %721, align 8
  br label %3917

722:                                              ; preds = %268
  %723 = load %0*, %0** %12, align 8
  %724 = getelementptr inbounds %0, %0* %723, i64 0
  %725 = bitcast %0* %724 to %1**
  %726 = load %1*, %1** %725, align 8
  %727 = bitcast %0* %17 to %1**
  store %1* %726, %1** %727, align 8
  br label %3917

728:                                              ; preds = %268
  %729 = load %0*, %0** %12, align 8
  %730 = getelementptr inbounds %0, %0* %729, i64 -2
  %731 = bitcast %0* %730 to %1**
  %732 = load %1*, %1** %731, align 8
  %733 = load %0*, %0** %12, align 8
  %734 = getelementptr inbounds %0, %0* %733, i64 0
  %735 = bitcast %0* %734 to %1**
  %736 = load %1*, %1** %735, align 8
  %737 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 531, %1* %732, %1* %736)
  %738 = bitcast %0* %17 to %1**
  store %1* %737, %1** %738, align 8
  br label %3917

739:                                              ; preds = %268
  %740 = load %0*, %0** %12, align 8
  %741 = getelementptr inbounds %0, %0* %740, i64 -5
  %742 = bitcast %0* %741 to %1**
  %743 = load %1*, %1** %742, align 8
  %744 = load %0*, %0** %12, align 8
  %745 = getelementptr inbounds %0, %0* %744, i64 -2
  %746 = bitcast %0* %745 to %1**
  %747 = load %1*, %1** %746, align 8
  %748 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 532, %1* %743, %1* %747)
  %749 = bitcast %0* %17 to %1**
  store %1* %748, %1** %749, align 8
  br label %3917

750:                                              ; preds = %268
  %751 = load %0*, %0** %12, align 8
  %752 = getelementptr inbounds %0, %0* %751, i64 -6
  %753 = bitcast %0* %752 to %1**
  %754 = load %1*, %1** %753, align 8
  %755 = load %0*, %0** %12, align 8
  %756 = getelementptr inbounds %0, %0* %755, i64 -4
  %757 = bitcast %0* %756 to %1**
  %758 = load %1*, %1** %757, align 8
  %759 = load %0*, %0** %12, align 8
  %760 = getelementptr inbounds %0, %0* %759, i64 -2
  %761 = bitcast %0* %760 to %1**
  %762 = load %1*, %1** %761, align 8
  %763 = load %0*, %0** %12, align 8
  %764 = getelementptr inbounds %0, %0* %763, i64 0
  %765 = bitcast %0* %764 to %1**
  %766 = load %1*, %1** %765, align 8
  %767 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 1024, %1* %754, %1* %758, %1* %762, %1* %766)
  %768 = bitcast %0* %17 to %1**
  store %1* %767, %1** %768, align 8
  br label %3917

769:                                              ; preds = %268
  %770 = load %0*, %0** %12, align 8
  %771 = getelementptr inbounds %0, %0* %770, i64 -2
  %772 = bitcast %0* %771 to %1**
  %773 = load %1*, %1** %772, align 8
  %774 = load %0*, %0** %12, align 8
  %775 = getelementptr inbounds %0, %0* %774, i64 0
  %776 = bitcast %0* %775 to %1**
  %777 = load %1*, %1** %776, align 8
  %778 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 534, %1* %773, %1* %777)
  %779 = bitcast %0* %17 to %1**
  store %1* %778, %1** %779, align 8
  br label %3917

780:                                              ; preds = %268
  %781 = load %0*, %0** %12, align 8
  %782 = getelementptr inbounds %0, %0* %781, i64 -1
  %783 = bitcast %0* %782 to %1**
  %784 = load %1*, %1** %783, align 8
  %785 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 285, %1* %784)
  %786 = bitcast %0* %17 to %1**
  store %1* %785, %1** %786, align 8
  br label %3917

787:                                              ; preds = %268
  %788 = load %0*, %0** %12, align 8
  %789 = getelementptr inbounds %0, %0* %788, i64 -1
  %790 = bitcast %0* %789 to %1**
  %791 = load %1*, %1** %790, align 8
  %792 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 286, %1* %791)
  %793 = bitcast %0* %17 to %1**
  store %1* %792, %1** %793, align 8
  br label %3917

794:                                              ; preds = %268
  %795 = load %0*, %0** %12, align 8
  %796 = getelementptr inbounds %0, %0* %795, i64 -1
  %797 = bitcast %0* %796 to %1**
  %798 = load %1*, %1** %797, align 8
  %799 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 278, %1* %798)
  %800 = bitcast %0* %17 to %1**
  store %1* %799, %1** %800, align 8
  br label %3917

801:                                              ; preds = %268
  %802 = load %0*, %0** %12, align 8
  %803 = getelementptr inbounds %0, %0* %802, i64 -1
  %804 = bitcast %0* %803 to %1**
  %805 = load %1*, %1** %804, align 8
  %806 = bitcast %0* %17 to %1**
  store %1* %805, %1** %806, align 8
  br label %3917

807:                                              ; preds = %268
  %808 = load %0*, %0** %12, align 8
  %809 = getelementptr inbounds %0, %0* %808, i64 -1
  %810 = bitcast %0* %809 to %1**
  %811 = load %1*, %1** %810, align 8
  %812 = bitcast %0* %17 to %1**
  store %1* %811, %1** %812, align 8
  br label %3917

813:                                              ; preds = %268
  %814 = load %0*, %0** %12, align 8
  %815 = getelementptr inbounds %0, %0* %814, i64 -1
  %816 = bitcast %0* %815 to %1**
  %817 = load %1*, %1** %816, align 8
  %818 = bitcast %0* %17 to %1**
  store %1* %817, %1** %818, align 8
  br label %3917

819:                                              ; preds = %268
  %820 = load %0*, %0** %12, align 8
  %821 = getelementptr inbounds %0, %0* %820, i64 0
  %822 = bitcast %0* %821 to %1**
  %823 = load %1*, %1** %822, align 8
  %824 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 282, %1* %823)
  %825 = bitcast %0* %17 to %1**
  store %1* %824, %1** %825, align 8
  br label %3917

826:                                              ; preds = %268
  %827 = load %0*, %0** %12, align 8
  %828 = getelementptr inbounds %0, %0* %827, i64 -1
  %829 = bitcast %0* %828 to %1**
  %830 = load %1*, %1** %829, align 8
  %831 = bitcast %0* %17 to %1**
  store %1* %830, %1** %831, align 8
  br label %3917

832:                                              ; preds = %268
  %833 = load %0*, %0** %12, align 8
  %834 = getelementptr inbounds %0, %0* %833, i64 -2
  %835 = bitcast %0* %834 to %1**
  %836 = load %1*, %1** %835, align 8
  %837 = bitcast %0* %17 to %1**
  store %1* %836, %1** %837, align 8
  br label %3917

838:                                              ; preds = %268
  %839 = load %0*, %0** %12, align 8
  %840 = getelementptr inbounds %0, %0* %839, i64 -4
  %841 = bitcast %0* %840 to %1**
  %842 = load %1*, %1** %841, align 8
  %843 = load %0*, %0** %12, align 8
  %844 = getelementptr inbounds %0, %0* %843, i64 -2
  %845 = bitcast %0* %844 to %1**
  %846 = load %1*, %1** %845, align 8
  %847 = load %0*, %0** %12, align 8
  %848 = getelementptr inbounds %0, %0* %847, i64 0
  %849 = bitcast %0* %848 to %1**
  %850 = load %1*, %1** %849, align 8
  %851 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 1025, %1* %842, %1* %846, i8* null, %1* %850)
  %852 = bitcast %0* %17 to %1**
  store %1* %851, %1** %852, align 8
  br label %3917

853:                                              ; preds = %268
  %854 = load %0*, %0** %12, align 8
  %855 = getelementptr inbounds %0, %0* %854, i64 -6
  %856 = bitcast %0* %855 to %1**
  %857 = load %1*, %1** %856, align 8
  %858 = load %0*, %0** %12, align 8
  %859 = getelementptr inbounds %0, %0* %858, i64 -2
  %860 = bitcast %0* %859 to %1**
  %861 = load %1*, %1** %860, align 8
  %862 = load %0*, %0** %12, align 8
  %863 = getelementptr inbounds %0, %0* %862, i64 -4
  %864 = bitcast %0* %863 to %1**
  %865 = load %1*, %1** %864, align 8
  %866 = load %0*, %0** %12, align 8
  %867 = getelementptr inbounds %0, %0* %866, i64 0
  %868 = bitcast %0* %867 to %1**
  %869 = load %1*, %1** %868, align 8
  %870 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 1025, %1* %857, %1* %861, %1* %865, %1* %869)
  %871 = bitcast %0* %17 to %1**
  store %1* %870, %1** %871, align 8
  br label %3917

872:                                              ; preds = %268
  %873 = load %0*, %0** %12, align 8
  %874 = getelementptr inbounds %0, %0* %873, i64 -1
  %875 = bitcast %0* %874 to %1**
  %876 = load %1*, %1** %875, align 8
  call void @zend_handle_encoding_declaration(%1* %876)
  br label %3917

877:                                              ; preds = %268
  %878 = load %0*, %0** %12, align 8
  %879 = getelementptr inbounds %0, %0* %878, i64 -3
  %880 = bitcast %0* %879 to %1**
  %881 = load %1*, %1** %880, align 8
  %882 = load %0*, %0** %12, align 8
  %883 = getelementptr inbounds %0, %0* %882, i64 0
  %884 = bitcast %0* %883 to %1**
  %885 = load %1*, %1** %884, align 8
  %886 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 536, %1* %881, %1* %885)
  %887 = bitcast %0* %17 to %1**
  store %1* %886, %1** %887, align 8
  br label %3917

888:                                              ; preds = %268
  %889 = bitcast %0* %17 to %1**
  store %1* null, %1** %889, align 8
  br label %3917

890:                                              ; preds = %268
  %891 = load %0*, %0** %12, align 8
  %892 = getelementptr inbounds %0, %0* %891, i64 -3
  %893 = bitcast %0* %892 to %1**
  %894 = load %1*, %1** %893, align 8
  %895 = load %0*, %0** %12, align 8
  %896 = getelementptr inbounds %0, %0* %895, i64 -1
  %897 = bitcast %0* %896 to %1**
  %898 = load %1*, %1** %897, align 8
  %899 = load %0*, %0** %12, align 8
  %900 = getelementptr inbounds %0, %0* %899, i64 0
  %901 = bitcast %0* %900 to %1**
  %902 = load %1*, %1** %901, align 8
  %903 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 771, %1* %894, %1* %898, %1* %902)
  %904 = bitcast %0* %17 to %1**
  store %1* %903, %1** %904, align 8
  br label %3917

905:                                              ; preds = %268
  %906 = load %0*, %0** %12, align 8
  %907 = getelementptr inbounds %0, %0* %906, i64 -1
  %908 = bitcast %0* %907 to %1**
  %909 = load %1*, %1** %908, align 8
  %910 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 283, %1* %909)
  %911 = bitcast %0* %17 to %1**
  store %1* %910, %1** %911, align 8
  br label %3917

912:                                              ; preds = %268
  %913 = load %0*, %0** %12, align 8
  %914 = getelementptr inbounds %0, %0* %913, i64 -1
  %915 = bitcast %0* %914 to %1**
  %916 = load %1*, %1** %915, align 8
  %917 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 284, %1* %916)
  %918 = bitcast %0* %17 to %1**
  store %1* %917, %1** %918, align 8
  br label %3917

919:                                              ; preds = %268
  %920 = load %0*, %0** %12, align 8
  %921 = getelementptr inbounds %0, %0* %920, i64 -1
  %922 = bitcast %0* %921 to %1**
  %923 = load %1*, %1** %922, align 8
  %924 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 279, %1* %923)
  %925 = bitcast %0* %17 to %1**
  store %1* %924, %1** %925, align 8
  br label %3917

926:                                              ; preds = %268
  %927 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 0, i16 zeroext 135)
  %928 = bitcast %0* %17 to %1**
  store %1* %927, %1** %928, align 8
  br label %3917

929:                                              ; preds = %268
  %930 = load %0*, %0** %12, align 8
  %931 = getelementptr inbounds %0, %0* %930, i64 -8
  %932 = bitcast %0* %931 to %1**
  %933 = load %1*, %1** %932, align 8
  %934 = load %0*, %0** %12, align 8
  %935 = getelementptr inbounds %0, %0* %934, i64 -5
  %936 = bitcast %0* %935 to %1**
  %937 = load %1*, %1** %936, align 8
  %938 = load %0*, %0** %12, align 8
  %939 = getelementptr inbounds %0, %0* %938, i64 -4
  %940 = bitcast %0* %939 to %1**
  %941 = load %1*, %1** %940, align 8
  %942 = load %0*, %0** %12, align 8
  %943 = getelementptr inbounds %0, %0* %942, i64 -1
  %944 = bitcast %0* %943 to %1**
  %945 = load %1*, %1** %944, align 8
  %946 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 772, %1* %937, %1* %941, %1* %945)
  %947 = call %1* @zend_ast_list_add(%1* %933, %1* %946)
  %948 = bitcast %0* %17 to %1**
  store %1* %947, %1** %948, align 8
  br label %3917

949:                                              ; preds = %268
  %950 = load %0*, %0** %12, align 8
  %951 = getelementptr inbounds %0, %0* %950, i64 0
  %952 = bitcast %0* %951 to %1**
  %953 = load %1*, %1** %952, align 8
  %954 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 141, %1* %953)
  %955 = bitcast %0* %17 to %1**
  store %1* %954, %1** %955, align 8
  br label %3917

956:                                              ; preds = %268
  %957 = load %0*, %0** %12, align 8
  %958 = getelementptr inbounds %0, %0* %957, i64 -2
  %959 = bitcast %0* %958 to %1**
  %960 = load %1*, %1** %959, align 8
  %961 = load %0*, %0** %12, align 8
  %962 = getelementptr inbounds %0, %0* %961, i64 0
  %963 = bitcast %0* %962 to %1**
  %964 = load %1*, %1** %963, align 8
  %965 = call %1* @zend_ast_list_add(%1* %960, %1* %964)
  %966 = bitcast %0* %17 to %1**
  store %1* %965, %1** %966, align 8
  br label %3917

967:                                              ; preds = %268
  %968 = bitcast %0* %17 to %1**
  store %1* null, %1** %968, align 8
  br label %3917

969:                                              ; preds = %268
  %970 = load %0*, %0** %12, align 8
  %971 = getelementptr inbounds %0, %0* %970, i64 -1
  %972 = bitcast %0* %971 to %1**
  %973 = load %1*, %1** %972, align 8
  %974 = bitcast %0* %17 to %1**
  store %1* %973, %1** %974, align 8
  br label %3917

975:                                              ; preds = %268
  %976 = load %0*, %0** %12, align 8
  %977 = getelementptr inbounds %0, %0* %976, i64 0
  %978 = bitcast %0* %977 to %1**
  %979 = load %1*, %1** %978, align 8
  %980 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 132, %1* %979)
  %981 = bitcast %0* %17 to %1**
  store %1* %980, %1** %981, align 8
  br label %3917

982:                                              ; preds = %268
  %983 = load %0*, %0** %12, align 8
  %984 = getelementptr inbounds %0, %0* %983, i64 -2
  %985 = bitcast %0* %984 to %1**
  %986 = load %1*, %1** %985, align 8
  %987 = load %0*, %0** %12, align 8
  %988 = getelementptr inbounds %0, %0* %987, i64 0
  %989 = bitcast %0* %988 to %1**
  %990 = load %1*, %1** %989, align 8
  %991 = call %1* @zend_ast_list_add(%1* %986, %1* %990)
  %992 = bitcast %0* %17 to %1**
  store %1* %991, %1** %992, align 8
  br label %3917

993:                                              ; preds = %268
  %994 = load %0*, %0** %12, align 8
  %995 = getelementptr inbounds %0, %0* %994, i64 0
  %996 = bitcast %0* %995 to %1**
  %997 = load %1*, %1** %996, align 8
  %998 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 277, %1* %997)
  %999 = bitcast %0* %17 to %1**
  store %1* %998, %1** %999, align 8
  br label %3917

1000:                                             ; preds = %268
  %1001 = load %0*, %0** %12, align 8
  %1002 = getelementptr inbounds %0, %0* %1001, i64 -11
  %1003 = bitcast %0* %1002 to i64*
  %1004 = load i64, i64* %1003, align 8
  %1005 = load %0*, %0** %12, align 8
  %1006 = getelementptr inbounds %0, %0* %1005, i64 0
  %1007 = bitcast %0* %1006 to i64*
  %1008 = load i64, i64* %1007, align 8
  %1009 = or i64 %1004, %1008
  %1010 = trunc i64 %1009 to i32
  %1011 = load %0*, %0** %12, align 8
  %1012 = getelementptr inbounds %0, %0* %1011, i64 -12
  %1013 = bitcast %0* %1012 to i64*
  %1014 = load i64, i64* %1013, align 8
  %1015 = trunc i64 %1014 to i32
  %1016 = load %0*, %0** %12, align 8
  %1017 = getelementptr inbounds %0, %0* %1016, i64 -9
  %1018 = bitcast %0* %1017 to %34**
  %1019 = load %34*, %34** %1018, align 8
  %1020 = load %0*, %0** %12, align 8
  %1021 = getelementptr inbounds %0, %0* %1020, i64 -10
  %1022 = bitcast %0* %1021 to %1**
  %1023 = load %1*, %1** %1022, align 8
  %1024 = call %34* @336(%1* %1023)
  %1025 = load %0*, %0** %12, align 8
  %1026 = getelementptr inbounds %0, %0* %1025, i64 -7
  %1027 = bitcast %0* %1026 to %1**
  %1028 = load %1*, %1** %1027, align 8
  %1029 = load %0*, %0** %12, align 8
  %1030 = getelementptr inbounds %0, %0* %1029, i64 -2
  %1031 = bitcast %0* %1030 to %1**
  %1032 = load %1*, %1** %1031, align 8
  %1033 = load %0*, %0** %12, align 8
  %1034 = getelementptr inbounds %0, %0* %1033, i64 -5
  %1035 = bitcast %0* %1034 to %1**
  %1036 = load %1*, %1** %1035, align 8
  %1037 = call %1* @zend_ast_create_decl(i16 zeroext 66, i32 %1010, i32 %1015, %34* %1019, %34* %1024, %1* %1028, %1* null, %1* %1032, %1* %1036)
  %1038 = bitcast %0* %17 to %1**
  store %1* %1037, %1** %1038, align 8
  %1039 = load %0*, %0** %12, align 8
  %1040 = getelementptr inbounds %0, %0* %1039, i64 -4
  %1041 = bitcast %0* %1040 to i64*
  %1042 = load i64, i64* %1041, align 8
  %1043 = trunc i64 %1042 to i32
  store i32 %1043, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  br label %3917

1044:                                             ; preds = %268
  %1045 = bitcast %0* %17 to i64*
  store i64 0, i64* %1045, align 8
  br label %3917

1046:                                             ; preds = %268
  %1047 = bitcast %0* %17 to i64*
  store i64 1, i64* %1047, align 8
  br label %3917

1048:                                             ; preds = %268
  %1049 = bitcast %0* %17 to i64*
  store i64 0, i64* %1049, align 8
  br label %3917

1050:                                             ; preds = %268
  %1051 = bitcast %0* %17 to i64*
  store i64 2, i64* %1051, align 8
  br label %3917

1052:                                             ; preds = %268
  %1053 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 3), align 8
  %1054 = sext i32 %1053 to i64
  %1055 = bitcast %0* %17 to i64*
  store i64 %1054, i64* %1055, align 8
  br label %3917

1056:                                             ; preds = %268
  %1057 = load %0*, %0** %12, align 8
  %1058 = getelementptr inbounds %0, %0* %1057, i64 -9
  %1059 = bitcast %0* %1058 to i64*
  %1060 = load i64, i64* %1059, align 8
  %1061 = trunc i64 %1060 to i32
  %1062 = load %0*, %0** %12, align 8
  %1063 = getelementptr inbounds %0, %0* %1062, i64 -7
  %1064 = bitcast %0* %1063 to i64*
  %1065 = load i64, i64* %1064, align 8
  %1066 = trunc i64 %1065 to i32
  %1067 = load %0*, %0** %12, align 8
  %1068 = getelementptr inbounds %0, %0* %1067, i64 -3
  %1069 = bitcast %0* %1068 to %34**
  %1070 = load %34*, %34** %1069, align 8
  %1071 = load %0*, %0** %12, align 8
  %1072 = getelementptr inbounds %0, %0* %1071, i64 -6
  %1073 = bitcast %0* %1072 to %1**
  %1074 = load %1*, %1** %1073, align 8
  %1075 = call %34* @336(%1* %1074)
  %1076 = load %0*, %0** %12, align 8
  %1077 = getelementptr inbounds %0, %0* %1076, i64 -5
  %1078 = bitcast %0* %1077 to %1**
  %1079 = load %1*, %1** %1078, align 8
  %1080 = load %0*, %0** %12, align 8
  %1081 = getelementptr inbounds %0, %0* %1080, i64 -4
  %1082 = bitcast %0* %1081 to %1**
  %1083 = load %1*, %1** %1082, align 8
  %1084 = load %0*, %0** %12, align 8
  %1085 = getelementptr inbounds %0, %0* %1084, i64 -1
  %1086 = bitcast %0* %1085 to %1**
  %1087 = load %1*, %1** %1086, align 8
  %1088 = call %1* @zend_ast_create_decl(i16 zeroext 69, i32 %1061, i32 %1066, %34* %1070, %34* %1075, %1* %1079, %1* %1083, %1* %1087, %1* null)
  %1089 = bitcast %0* %17 to %1**
  store %1* %1088, %1** %1089, align 8
  br label %3917

1090:                                             ; preds = %268
  %1091 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 3), align 8
  %1092 = sext i32 %1091 to i64
  %1093 = bitcast %0* %17 to i64*
  store i64 %1092, i64* %1093, align 8
  br label %3917

1094:                                             ; preds = %268
  %1095 = load %0*, %0** %12, align 8
  %1096 = getelementptr inbounds %0, %0* %1095, i64 -7
  %1097 = bitcast %0* %1096 to i64*
  %1098 = load i64, i64* %1097, align 8
  %1099 = trunc i64 %1098 to i32
  %1100 = load %0*, %0** %12, align 8
  %1101 = getelementptr inbounds %0, %0* %1100, i64 -3
  %1102 = bitcast %0* %1101 to %34**
  %1103 = load %34*, %34** %1102, align 8
  %1104 = load %0*, %0** %12, align 8
  %1105 = getelementptr inbounds %0, %0* %1104, i64 -6
  %1106 = bitcast %0* %1105 to %1**
  %1107 = load %1*, %1** %1106, align 8
  %1108 = call %34* @336(%1* %1107)
  %1109 = load %0*, %0** %12, align 8
  %1110 = getelementptr inbounds %0, %0* %1109, i64 -5
  %1111 = bitcast %0* %1110 to %1**
  %1112 = load %1*, %1** %1111, align 8
  %1113 = load %0*, %0** %12, align 8
  %1114 = getelementptr inbounds %0, %0* %1113, i64 -4
  %1115 = bitcast %0* %1114 to %1**
  %1116 = load %1*, %1** %1115, align 8
  %1117 = load %0*, %0** %12, align 8
  %1118 = getelementptr inbounds %0, %0* %1117, i64 -1
  %1119 = bitcast %0* %1118 to %1**
  %1120 = load %1*, %1** %1119, align 8
  %1121 = call %1* @zend_ast_create_decl(i16 zeroext 69, i32 0, i32 %1099, %34* %1103, %34* %1108, %1* %1112, %1* %1116, %1* %1120, %1* null)
  %1122 = bitcast %0* %17 to %1**
  store %1* %1121, %1** %1122, align 8
  br label %3917

1123:                                             ; preds = %268
  %1124 = load %0*, %0** %12, align 8
  %1125 = getelementptr inbounds %0, %0* %1124, i64 0
  %1126 = bitcast %0* %1125 to i64*
  %1127 = load i64, i64* %1126, align 8
  %1128 = bitcast %0* %17 to i64*
  store i64 %1127, i64* %1128, align 8
  br label %3917

1129:                                             ; preds = %268
  %1130 = load %0*, %0** %12, align 8
  %1131 = getelementptr inbounds %0, %0* %1130, i64 -1
  %1132 = bitcast %0* %1131 to i64*
  %1133 = load i64, i64* %1132, align 8
  %1134 = trunc i64 %1133 to i32
  %1135 = load %0*, %0** %12, align 8
  %1136 = getelementptr inbounds %0, %0* %1135, i64 0
  %1137 = bitcast %0* %1136 to i64*
  %1138 = load i64, i64* %1137, align 8
  %1139 = trunc i64 %1138 to i32
  %1140 = call i32 @zend_add_class_modifier(i32 %1134, i32 %1139)
  %1141 = zext i32 %1140 to i64
  %1142 = bitcast %0* %17 to i64*
  store i64 %1141, i64* %1142, align 8
  br label %3917

1143:                                             ; preds = %268
  %1144 = bitcast %0* %17 to i64*
  store i64 32, i64* %1144, align 8
  br label %3917

1145:                                             ; preds = %268
  %1146 = bitcast %0* %17 to i64*
  store i64 4, i64* %1146, align 8
  br label %3917

1147:                                             ; preds = %268
  %1148 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 3), align 8
  %1149 = sext i32 %1148 to i64
  %1150 = bitcast %0* %17 to i64*
  store i64 %1149, i64* %1150, align 8
  br label %3917

1151:                                             ; preds = %268
  %1152 = load %0*, %0** %12, align 8
  %1153 = getelementptr inbounds %0, %0* %1152, i64 -5
  %1154 = bitcast %0* %1153 to i64*
  %1155 = load i64, i64* %1154, align 8
  %1156 = trunc i64 %1155 to i32
  %1157 = load %0*, %0** %12, align 8
  %1158 = getelementptr inbounds %0, %0* %1157, i64 -3
  %1159 = bitcast %0* %1158 to %34**
  %1160 = load %34*, %34** %1159, align 8
  %1161 = load %0*, %0** %12, align 8
  %1162 = getelementptr inbounds %0, %0* %1161, i64 -4
  %1163 = bitcast %0* %1162 to %1**
  %1164 = load %1*, %1** %1163, align 8
  %1165 = call %34* @336(%1* %1164)
  %1166 = load %0*, %0** %12, align 8
  %1167 = getelementptr inbounds %0, %0* %1166, i64 -1
  %1168 = bitcast %0* %1167 to %1**
  %1169 = load %1*, %1** %1168, align 8
  %1170 = call %1* @zend_ast_create_decl(i16 zeroext 69, i32 128, i32 %1156, %34* %1160, %34* %1165, %1* null, %1* null, %1* %1169, %1* null)
  %1171 = bitcast %0* %17 to %1**
  store %1* %1170, %1** %1171, align 8
  br label %3917

1172:                                             ; preds = %268
  %1173 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 3), align 8
  %1174 = sext i32 %1173 to i64
  %1175 = bitcast %0* %17 to i64*
  store i64 %1174, i64* %1175, align 8
  br label %3917

1176:                                             ; preds = %268
  %1177 = load %0*, %0** %12, align 8
  %1178 = getelementptr inbounds %0, %0* %1177, i64 -6
  %1179 = bitcast %0* %1178 to i64*
  %1180 = load i64, i64* %1179, align 8
  %1181 = trunc i64 %1180 to i32
  %1182 = load %0*, %0** %12, align 8
  %1183 = getelementptr inbounds %0, %0* %1182, i64 -3
  %1184 = bitcast %0* %1183 to %34**
  %1185 = load %34*, %34** %1184, align 8
  %1186 = load %0*, %0** %12, align 8
  %1187 = getelementptr inbounds %0, %0* %1186, i64 -5
  %1188 = bitcast %0* %1187 to %1**
  %1189 = load %1*, %1** %1188, align 8
  %1190 = call %34* @336(%1* %1189)
  %1191 = load %0*, %0** %12, align 8
  %1192 = getelementptr inbounds %0, %0* %1191, i64 -4
  %1193 = bitcast %0* %1192 to %1**
  %1194 = load %1*, %1** %1193, align 8
  %1195 = load %0*, %0** %12, align 8
  %1196 = getelementptr inbounds %0, %0* %1195, i64 -1
  %1197 = bitcast %0* %1196 to %1**
  %1198 = load %1*, %1** %1197, align 8
  %1199 = call %1* @zend_ast_create_decl(i16 zeroext 69, i32 64, i32 %1181, %34* %1185, %34* %1190, %1* null, %1* %1194, %1* %1198, %1* null)
  %1200 = bitcast %0* %17 to %1**
  store %1* %1199, %1** %1200, align 8
  br label %3917

1201:                                             ; preds = %268
  %1202 = bitcast %0* %17 to %1**
  store %1* null, %1** %1202, align 8
  br label %3917

1203:                                             ; preds = %268
  %1204 = load %0*, %0** %12, align 8
  %1205 = getelementptr inbounds %0, %0* %1204, i64 0
  %1206 = bitcast %0* %1205 to %1**
  %1207 = load %1*, %1** %1206, align 8
  %1208 = bitcast %0* %17 to %1**
  store %1* %1207, %1** %1208, align 8
  br label %3917

1209:                                             ; preds = %268
  %1210 = bitcast %0* %17 to %1**
  store %1* null, %1** %1210, align 8
  br label %3917

1211:                                             ; preds = %268
  %1212 = load %0*, %0** %12, align 8
  %1213 = getelementptr inbounds %0, %0* %1212, i64 0
  %1214 = bitcast %0* %1213 to %1**
  %1215 = load %1*, %1** %1214, align 8
  %1216 = bitcast %0* %17 to %1**
  store %1* %1215, %1** %1216, align 8
  br label %3917

1217:                                             ; preds = %268
  %1218 = bitcast %0* %17 to %1**
  store %1* null, %1** %1218, align 8
  br label %3917

1219:                                             ; preds = %268
  %1220 = load %0*, %0** %12, align 8
  %1221 = getelementptr inbounds %0, %0* %1220, i64 0
  %1222 = bitcast %0* %1221 to %1**
  %1223 = load %1*, %1** %1222, align 8
  %1224 = bitcast %0* %17 to %1**
  store %1* %1223, %1** %1224, align 8
  br label %3917

1225:                                             ; preds = %268
  %1226 = load %0*, %0** %12, align 8
  %1227 = getelementptr inbounds %0, %0* %1226, i64 0
  %1228 = bitcast %0* %1227 to %1**
  %1229 = load %1*, %1** %1228, align 8
  %1230 = bitcast %0* %17 to %1**
  store %1* %1229, %1** %1230, align 8
  br label %3917

1231:                                             ; preds = %268
  %1232 = load %0*, %0** %12, align 8
  %1233 = getelementptr inbounds %0, %0* %1232, i64 0
  %1234 = bitcast %0* %1233 to %1**
  %1235 = load %1*, %1** %1234, align 8
  %1236 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 280, %1* %1235)
  %1237 = bitcast %0* %17 to %1**
  store %1* %1236, %1** %1237, align 8
  br label %3917

1238:                                             ; preds = %268
  %1239 = load %0*, %0** %12, align 8
  %1240 = getelementptr inbounds %0, %0* %1239, i64 -1
  %1241 = bitcast %0* %1240 to %1**
  %1242 = load %1*, %1** %1241, align 8
  %1243 = bitcast %0* %17 to %1**
  store %1* %1242, %1** %1243, align 8
  %1244 = bitcast %0* %17 to %1**
  %1245 = load %1*, %1** %1244, align 8
  %1246 = getelementptr inbounds %1, %1* %1245, i32 0, i32 1
  store i16 1, i16* %1246, align 2
  br label %3917

1247:                                             ; preds = %268
  %1248 = load %0*, %0** %12, align 8
  %1249 = getelementptr inbounds %0, %0* %1248, i64 -1
  %1250 = bitcast %0* %1249 to %1**
  %1251 = load %1*, %1** %1250, align 8
  %1252 = bitcast %0* %17 to %1**
  store %1* %1251, %1** %1252, align 8
  %1253 = bitcast %0* %17 to %1**
  %1254 = load %1*, %1** %1253, align 8
  %1255 = getelementptr inbounds %1, %1* %1254, i32 0, i32 1
  store i16 3, i16* %1255, align 2
  br label %3917

1256:                                             ; preds = %268
  %1257 = load %0*, %0** %12, align 8
  %1258 = getelementptr inbounds %0, %0* %1257, i64 0
  %1259 = bitcast %0* %1258 to %1**
  %1260 = load %1*, %1** %1259, align 8
  %1261 = bitcast %0* %17 to %1**
  store %1* %1260, %1** %1261, align 8
  br label %3917

1262:                                             ; preds = %268
  %1263 = load %0*, %0** %12, align 8
  %1264 = getelementptr inbounds %0, %0* %1263, i64 -2
  %1265 = bitcast %0* %1264 to %1**
  %1266 = load %1*, %1** %1265, align 8
  %1267 = bitcast %0* %17 to %1**
  store %1* %1266, %1** %1267, align 8
  br label %3917

1268:                                             ; preds = %268
  %1269 = load %0*, %0** %12, align 8
  %1270 = getelementptr inbounds %0, %0* %1269, i64 0
  %1271 = bitcast %0* %1270 to %1**
  %1272 = load %1*, %1** %1271, align 8
  %1273 = bitcast %0* %17 to %1**
  store %1* %1272, %1** %1273, align 8
  br label %3917

1274:                                             ; preds = %268
  %1275 = load %0*, %0** %12, align 8
  %1276 = getelementptr inbounds %0, %0* %1275, i64 -2
  %1277 = bitcast %0* %1276 to %1**
  %1278 = load %1*, %1** %1277, align 8
  %1279 = bitcast %0* %17 to %1**
  store %1* %1278, %1** %1279, align 8
  br label %3917

1280:                                             ; preds = %268
  %1281 = load %0*, %0** %12, align 8
  %1282 = getelementptr inbounds %0, %0* %1281, i64 0
  %1283 = bitcast %0* %1282 to %1**
  %1284 = load %1*, %1** %1283, align 8
  %1285 = bitcast %0* %17 to %1**
  store %1* %1284, %1** %1285, align 8
  br label %3917

1286:                                             ; preds = %268
  %1287 = load %0*, %0** %12, align 8
  %1288 = getelementptr inbounds %0, %0* %1287, i64 -2
  %1289 = bitcast %0* %1288 to %1**
  %1290 = load %1*, %1** %1289, align 8
  %1291 = bitcast %0* %17 to %1**
  store %1* %1290, %1** %1291, align 8
  br label %3917

1292:                                             ; preds = %268
  %1293 = load %0*, %0** %12, align 8
  %1294 = getelementptr inbounds %0, %0* %1293, i64 -1
  %1295 = bitcast %0* %1294 to %1**
  %1296 = load %1*, %1** %1295, align 8
  %1297 = bitcast %0* %17 to %1**
  store %1* %1296, %1** %1297, align 8
  br label %3917

1298:                                             ; preds = %268
  %1299 = load %0*, %0** %12, align 8
  %1300 = getelementptr inbounds %0, %0* %1299, i64 -1
  %1301 = bitcast %0* %1300 to %1**
  %1302 = load %1*, %1** %1301, align 8
  %1303 = bitcast %0* %17 to %1**
  store %1* %1302, %1** %1303, align 8
  br label %3917

1304:                                             ; preds = %268
  %1305 = load %0*, %0** %12, align 8
  %1306 = getelementptr inbounds %0, %0* %1305, i64 -2
  %1307 = bitcast %0* %1306 to %1**
  %1308 = load %1*, %1** %1307, align 8
  %1309 = bitcast %0* %17 to %1**
  store %1* %1308, %1** %1309, align 8
  br label %3917

1310:                                             ; preds = %268
  %1311 = load %0*, %0** %12, align 8
  %1312 = getelementptr inbounds %0, %0* %1311, i64 -2
  %1313 = bitcast %0* %1312 to %1**
  %1314 = load %1*, %1** %1313, align 8
  %1315 = bitcast %0* %17 to %1**
  store %1* %1314, %1** %1315, align 8
  br label %3917

1316:                                             ; preds = %268
  %1317 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 0, i16 zeroext 134)
  %1318 = bitcast %0* %17 to %1**
  store %1* %1317, %1** %1318, align 8
  br label %3917

1319:                                             ; preds = %268
  %1320 = load %0*, %0** %12, align 8
  %1321 = getelementptr inbounds %0, %0* %1320, i64 -4
  %1322 = bitcast %0* %1321 to %1**
  %1323 = load %1*, %1** %1322, align 8
  %1324 = load %0*, %0** %12, align 8
  %1325 = getelementptr inbounds %0, %0* %1324, i64 -2
  %1326 = bitcast %0* %1325 to %1**
  %1327 = load %1*, %1** %1326, align 8
  %1328 = load %0*, %0** %12, align 8
  %1329 = getelementptr inbounds %0, %0* %1328, i64 0
  %1330 = bitcast %0* %1329 to %1**
  %1331 = load %1*, %1** %1330, align 8
  %1332 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 535, %1* %1327, %1* %1331)
  %1333 = call %1* @zend_ast_list_add(%1* %1323, %1* %1332)
  %1334 = bitcast %0* %17 to %1**
  store %1* %1333, %1** %1334, align 8
  br label %3917

1335:                                             ; preds = %268
  %1336 = load %0*, %0** %12, align 8
  %1337 = getelementptr inbounds %0, %0* %1336, i64 -3
  %1338 = bitcast %0* %1337 to %1**
  %1339 = load %1*, %1** %1338, align 8
  %1340 = load %0*, %0** %12, align 8
  %1341 = getelementptr inbounds %0, %0* %1340, i64 0
  %1342 = bitcast %0* %1341 to %1**
  %1343 = load %1*, %1** %1342, align 8
  %1344 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 535, i8* null, %1* %1343)
  %1345 = call %1* @zend_ast_list_add(%1* %1339, %1* %1344)
  %1346 = bitcast %0* %17 to %1**
  store %1* %1345, %1** %1346, align 8
  br label %3917

1347:                                             ; preds = %268
  %1348 = load %0*, %0** %12, align 8
  %1349 = getelementptr inbounds %0, %0* %1348, i64 0
  %1350 = bitcast %0* %1349 to %1**
  %1351 = load %1*, %1** %1350, align 8
  %1352 = bitcast %0* %17 to %1**
  store %1* %1351, %1** %1352, align 8
  br label %3917

1353:                                             ; preds = %268
  %1354 = load %0*, %0** %12, align 8
  %1355 = getelementptr inbounds %0, %0* %1354, i64 -2
  %1356 = bitcast %0* %1355 to %1**
  %1357 = load %1*, %1** %1356, align 8
  %1358 = bitcast %0* %17 to %1**
  store %1* %1357, %1** %1358, align 8
  br label %3917

1359:                                             ; preds = %268
  %1360 = load %0*, %0** %12, align 8
  %1361 = getelementptr inbounds %0, %0* %1360, i64 -2
  %1362 = bitcast %0* %1361 to %1**
  %1363 = load %1*, %1** %1362, align 8
  %1364 = load %0*, %0** %12, align 8
  %1365 = getelementptr inbounds %0, %0* %1364, i64 0
  %1366 = bitcast %0* %1365 to %1**
  %1367 = load %1*, %1** %1366, align 8
  %1368 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 533, %1* %1363, %1* %1367)
  %1369 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 133, %1* %1368)
  %1370 = bitcast %0* %17 to %1**
  store %1* %1369, %1** %1370, align 8
  br label %3917

1371:                                             ; preds = %268
  %1372 = load %0*, %0** %12, align 8
  %1373 = getelementptr inbounds %0, %0* %1372, i64 -5
  %1374 = bitcast %0* %1373 to %1**
  %1375 = load %1*, %1** %1374, align 8
  %1376 = load %0*, %0** %12, align 8
  %1377 = getelementptr inbounds %0, %0* %1376, i64 -2
  %1378 = bitcast %0* %1377 to %1**
  %1379 = load %1*, %1** %1378, align 8
  %1380 = load %0*, %0** %12, align 8
  %1381 = getelementptr inbounds %0, %0* %1380, i64 0
  %1382 = bitcast %0* %1381 to %1**
  %1383 = load %1*, %1** %1382, align 8
  %1384 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 533, %1* %1379, %1* %1383)
  %1385 = call %1* @zend_ast_list_add(%1* %1375, %1* %1384)
  %1386 = bitcast %0* %17 to %1**
  store %1* %1385, %1** %1386, align 8
  br label %3917

1387:                                             ; preds = %268
  %1388 = load %0*, %0** %12, align 8
  %1389 = getelementptr inbounds %0, %0* %1388, i64 0
  %1390 = bitcast %0* %1389 to %1**
  %1391 = load %1*, %1** %1390, align 8
  %1392 = bitcast %0* %17 to %1**
  store %1* %1391, %1** %1392, align 8
  br label %3917

1393:                                             ; preds = %268
  %1394 = load %0*, %0** %12, align 8
  %1395 = getelementptr inbounds %0, %0* %1394, i64 -2
  %1396 = bitcast %0* %1395 to %1**
  %1397 = load %1*, %1** %1396, align 8
  %1398 = load %0*, %0** %12, align 8
  %1399 = getelementptr inbounds %0, %0* %1398, i64 0
  %1400 = bitcast %0* %1399 to %1**
  %1401 = load %1*, %1** %1400, align 8
  %1402 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 533, i8* null, %1* %1401)
  %1403 = call %1* @zend_ast_list_add(%1* %1397, %1* %1402)
  %1404 = bitcast %0* %17 to %1**
  store %1* %1403, %1** %1404, align 8
  br label %3917

1405:                                             ; preds = %268
  %1406 = load %0*, %0** %12, align 8
  %1407 = getelementptr inbounds %0, %0* %1406, i64 -3
  %1408 = bitcast %0* %1407 to %1**
  %1409 = load %1*, %1** %1408, align 8
  %1410 = load %0*, %0** %12, align 8
  %1411 = getelementptr inbounds %0, %0* %1410, i64 0
  %1412 = bitcast %0* %1411 to %1**
  %1413 = load %1*, %1** %1412, align 8
  %1414 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 533, %1* %1409, %1* %1413)
  %1415 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 133, %1* %1414)
  %1416 = bitcast %0* %17 to %1**
  store %1* %1415, %1** %1416, align 8
  br label %3917

1417:                                             ; preds = %268
  %1418 = load %0*, %0** %12, align 8
  %1419 = getelementptr inbounds %0, %0* %1418, i64 -6
  %1420 = bitcast %0* %1419 to %1**
  %1421 = load %1*, %1** %1420, align 8
  %1422 = load %0*, %0** %12, align 8
  %1423 = getelementptr inbounds %0, %0* %1422, i64 -3
  %1424 = bitcast %0* %1423 to %1**
  %1425 = load %1*, %1** %1424, align 8
  %1426 = load %0*, %0** %12, align 8
  %1427 = getelementptr inbounds %0, %0* %1426, i64 0
  %1428 = bitcast %0* %1427 to %1**
  %1429 = load %1*, %1** %1428, align 8
  %1430 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 533, %1* %1425, %1* %1429)
  %1431 = call %1* @zend_ast_list_add(%1* %1421, %1* %1430)
  %1432 = bitcast %0* %17 to %1**
  store %1* %1431, %1** %1432, align 8
  br label %3917

1433:                                             ; preds = %268
  %1434 = load %0*, %0** %12, align 8
  %1435 = getelementptr inbounds %0, %0* %1434, i64 -2
  %1436 = bitcast %0* %1435 to %1**
  %1437 = load %1*, %1** %1436, align 8
  %1438 = bitcast %0* %17 to %1**
  store %1* %1437, %1** %1438, align 8
  br label %3917

1439:                                             ; preds = %268
  %1440 = load %0*, %0** %12, align 8
  %1441 = getelementptr inbounds %0, %0* %1440, i64 -5
  %1442 = bitcast %0* %1441 to %1**
  %1443 = load %1*, %1** %1442, align 8
  %1444 = load %0*, %0** %12, align 8
  %1445 = getelementptr inbounds %0, %0* %1444, i64 -2
  %1446 = bitcast %0* %1445 to %1**
  %1447 = load %1*, %1** %1446, align 8
  %1448 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 533, i8* null, %1* %1447)
  %1449 = call %1* @zend_ast_list_add(%1* %1443, %1* %1448)
  %1450 = bitcast %0* %17 to %1**
  store %1* %1449, %1** %1450, align 8
  br label %3917

1451:                                             ; preds = %268
  %1452 = load %0*, %0** %12, align 8
  %1453 = getelementptr inbounds %0, %0* %1452, i64 0
  %1454 = bitcast %0* %1453 to %1**
  %1455 = load %1*, %1** %1454, align 8
  %1456 = bitcast %0* %17 to %1**
  store %1* %1455, %1** %1456, align 8
  br label %3917

1457:                                             ; preds = %268
  %1458 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 0, i16 zeroext 136)
  %1459 = bitcast %0* %17 to %1**
  store %1* %1458, %1** %1459, align 8
  br label %3917

1460:                                             ; preds = %268
  %1461 = load %0*, %0** %12, align 8
  %1462 = getelementptr inbounds %0, %0* %1461, i64 0
  %1463 = bitcast %0* %1462 to %1**
  %1464 = load %1*, %1** %1463, align 8
  %1465 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 136, %1* %1464)
  %1466 = bitcast %0* %17 to %1**
  store %1* %1465, %1** %1466, align 8
  br label %3917

1467:                                             ; preds = %268
  %1468 = load %0*, %0** %12, align 8
  %1469 = getelementptr inbounds %0, %0* %1468, i64 -2
  %1470 = bitcast %0* %1469 to %1**
  %1471 = load %1*, %1** %1470, align 8
  %1472 = load %0*, %0** %12, align 8
  %1473 = getelementptr inbounds %0, %0* %1472, i64 0
  %1474 = bitcast %0* %1473 to %1**
  %1475 = load %1*, %1** %1474, align 8
  %1476 = call %1* @zend_ast_list_add(%1* %1471, %1* %1475)
  %1477 = bitcast %0* %17 to %1**
  store %1* %1476, %1** %1477, align 8
  br label %3917

1478:                                             ; preds = %268
  %1479 = load %0*, %0** %12, align 8
  %1480 = getelementptr inbounds %0, %0* %1479, i64 -2
  %1481 = bitcast %0* %1480 to i64*
  %1482 = load i64, i64* %1481, align 8
  %1483 = load %0*, %0** %12, align 8
  %1484 = getelementptr inbounds %0, %0* %1483, i64 -1
  %1485 = bitcast %0* %1484 to i64*
  %1486 = load i64, i64* %1485, align 8
  %1487 = or i64 %1482, %1486
  %1488 = trunc i64 %1487 to i16
  %1489 = load %0*, %0** %12, align 8
  %1490 = getelementptr inbounds %0, %0* %1489, i64 -3
  %1491 = bitcast %0* %1490 to %1**
  %1492 = load %1*, %1** %1491, align 8
  %1493 = load %0*, %0** %12, align 8
  %1494 = getelementptr inbounds %0, %0* %1493, i64 0
  %1495 = bitcast %0* %1494 to %1**
  %1496 = load %1*, %1** %1495, align 8
  %1497 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 773, i16 zeroext %1488, %1* %1492, %1* %1496, i8* null)
  %1498 = bitcast %0* %17 to %1**
  store %1* %1497, %1** %1498, align 8
  br label %3917

1499:                                             ; preds = %268
  %1500 = load %0*, %0** %12, align 8
  %1501 = getelementptr inbounds %0, %0* %1500, i64 -4
  %1502 = bitcast %0* %1501 to i64*
  %1503 = load i64, i64* %1502, align 8
  %1504 = load %0*, %0** %12, align 8
  %1505 = getelementptr inbounds %0, %0* %1504, i64 -3
  %1506 = bitcast %0* %1505 to i64*
  %1507 = load i64, i64* %1506, align 8
  %1508 = or i64 %1503, %1507
  %1509 = trunc i64 %1508 to i16
  %1510 = load %0*, %0** %12, align 8
  %1511 = getelementptr inbounds %0, %0* %1510, i64 -5
  %1512 = bitcast %0* %1511 to %1**
  %1513 = load %1*, %1** %1512, align 8
  %1514 = load %0*, %0** %12, align 8
  %1515 = getelementptr inbounds %0, %0* %1514, i64 -2
  %1516 = bitcast %0* %1515 to %1**
  %1517 = load %1*, %1** %1516, align 8
  %1518 = load %0*, %0** %12, align 8
  %1519 = getelementptr inbounds %0, %0* %1518, i64 0
  %1520 = bitcast %0* %1519 to %1**
  %1521 = load %1*, %1** %1520, align 8
  %1522 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 773, i16 zeroext %1509, %1* %1513, %1* %1517, %1* %1521)
  %1523 = bitcast %0* %17 to %1**
  store %1* %1522, %1** %1523, align 8
  br label %3917

1524:                                             ; preds = %268
  %1525 = bitcast %0* %17 to %1**
  store %1* null, %1** %1525, align 8
  br label %3917

1526:                                             ; preds = %268
  %1527 = load %0*, %0** %12, align 8
  %1528 = getelementptr inbounds %0, %0* %1527, i64 0
  %1529 = bitcast %0* %1528 to %1**
  %1530 = load %1*, %1** %1529, align 8
  %1531 = bitcast %0* %17 to %1**
  store %1* %1530, %1** %1531, align 8
  br label %3917

1532:                                             ; preds = %268
  %1533 = load %0*, %0** %12, align 8
  %1534 = getelementptr inbounds %0, %0* %1533, i64 0
  %1535 = bitcast %0* %1534 to %1**
  %1536 = load %1*, %1** %1535, align 8
  %1537 = bitcast %0* %17 to %1**
  store %1* %1536, %1** %1537, align 8
  br label %3917

1538:                                             ; preds = %268
  %1539 = load %0*, %0** %12, align 8
  %1540 = getelementptr inbounds %0, %0* %1539, i64 0
  %1541 = bitcast %0* %1540 to %1**
  %1542 = load %1*, %1** %1541, align 8
  %1543 = bitcast %0* %17 to %1**
  store %1* %1542, %1** %1543, align 8
  %1544 = bitcast %0* %17 to %1**
  %1545 = load %1*, %1** %1544, align 8
  %1546 = getelementptr inbounds %1, %1* %1545, i32 0, i32 1
  %1547 = load i16, i16* %1546, align 2
  %1548 = zext i16 %1547 to i32
  %1549 = or i32 %1548, 256
  %1550 = trunc i32 %1549 to i16
  store i16 %1550, i16* %1546, align 2
  br label %3917

1551:                                             ; preds = %268
  %1552 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 1, i16 zeroext 7)
  %1553 = bitcast %0* %17 to %1**
  store %1* %1552, %1** %1553, align 8
  br label %3917

1554:                                             ; preds = %268
  %1555 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 1, i16 zeroext 14)
  %1556 = bitcast %0* %17 to %1**
  store %1* %1555, %1** %1556, align 8
  br label %3917

1557:                                             ; preds = %268
  %1558 = load %0*, %0** %12, align 8
  %1559 = getelementptr inbounds %0, %0* %1558, i64 0
  %1560 = bitcast %0* %1559 to %1**
  %1561 = load %1*, %1** %1560, align 8
  %1562 = bitcast %0* %17 to %1**
  store %1* %1561, %1** %1562, align 8
  br label %3917

1563:                                             ; preds = %268
  %1564 = bitcast %0* %17 to %1**
  store %1* null, %1** %1564, align 8
  br label %3917

1565:                                             ; preds = %268
  %1566 = load %0*, %0** %12, align 8
  %1567 = getelementptr inbounds %0, %0* %1566, i64 0
  %1568 = bitcast %0* %1567 to %1**
  %1569 = load %1*, %1** %1568, align 8
  %1570 = bitcast %0* %17 to %1**
  store %1* %1569, %1** %1570, align 8
  br label %3917

1571:                                             ; preds = %268
  %1572 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 0, i16 zeroext 128)
  %1573 = bitcast %0* %17 to %1**
  store %1* %1572, %1** %1573, align 8
  br label %3917

1574:                                             ; preds = %268
  %1575 = load %0*, %0** %12, align 8
  %1576 = getelementptr inbounds %0, %0* %1575, i64 -1
  %1577 = bitcast %0* %1576 to %1**
  %1578 = load %1*, %1** %1577, align 8
  %1579 = bitcast %0* %17 to %1**
  store %1* %1578, %1** %1579, align 8
  br label %3917

1580:                                             ; preds = %268
  %1581 = load %0*, %0** %12, align 8
  %1582 = getelementptr inbounds %0, %0* %1581, i64 0
  %1583 = bitcast %0* %1582 to %1**
  %1584 = load %1*, %1** %1583, align 8
  %1585 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 128, %1* %1584)
  %1586 = bitcast %0* %17 to %1**
  store %1* %1585, %1** %1586, align 8
  br label %3917

1587:                                             ; preds = %268
  %1588 = load %0*, %0** %12, align 8
  %1589 = getelementptr inbounds %0, %0* %1588, i64 -2
  %1590 = bitcast %0* %1589 to %1**
  %1591 = load %1*, %1** %1590, align 8
  %1592 = load %0*, %0** %12, align 8
  %1593 = getelementptr inbounds %0, %0* %1592, i64 0
  %1594 = bitcast %0* %1593 to %1**
  %1595 = load %1*, %1** %1594, align 8
  %1596 = call %1* @zend_ast_list_add(%1* %1591, %1* %1595)
  %1597 = bitcast %0* %17 to %1**
  store %1* %1596, %1** %1597, align 8
  br label %3917

1598:                                             ; preds = %268
  %1599 = load %0*, %0** %12, align 8
  %1600 = getelementptr inbounds %0, %0* %1599, i64 0
  %1601 = bitcast %0* %1600 to %1**
  %1602 = load %1*, %1** %1601, align 8
  %1603 = bitcast %0* %17 to %1**
  store %1* %1602, %1** %1603, align 8
  br label %3917

1604:                                             ; preds = %268
  %1605 = load %0*, %0** %12, align 8
  %1606 = getelementptr inbounds %0, %0* %1605, i64 0
  %1607 = bitcast %0* %1606 to %1**
  %1608 = load %1*, %1** %1607, align 8
  %1609 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 258, %1* %1608)
  %1610 = bitcast %0* %17 to %1**
  store %1* %1609, %1** %1610, align 8
  br label %3917

1611:                                             ; preds = %268
  %1612 = load %0*, %0** %12, align 8
  %1613 = getelementptr inbounds %0, %0* %1612, i64 -2
  %1614 = bitcast %0* %1613 to %1**
  %1615 = load %1*, %1** %1614, align 8
  %1616 = load %0*, %0** %12, align 8
  %1617 = getelementptr inbounds %0, %0* %1616, i64 0
  %1618 = bitcast %0* %1617 to %1**
  %1619 = load %1*, %1** %1618, align 8
  %1620 = call %1* @zend_ast_list_add(%1* %1615, %1* %1619)
  %1621 = bitcast %0* %17 to %1**
  store %1* %1620, %1** %1621, align 8
  br label %3917

1622:                                             ; preds = %268
  %1623 = load %0*, %0** %12, align 8
  %1624 = getelementptr inbounds %0, %0* %1623, i64 0
  %1625 = bitcast %0* %1624 to %1**
  %1626 = load %1*, %1** %1625, align 8
  %1627 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 132, %1* %1626)
  %1628 = bitcast %0* %17 to %1**
  store %1* %1627, %1** %1628, align 8
  br label %3917

1629:                                             ; preds = %268
  %1630 = load %0*, %0** %12, align 8
  %1631 = getelementptr inbounds %0, %0* %1630, i64 0
  %1632 = bitcast %0* %1631 to %1**
  %1633 = load %1*, %1** %1632, align 8
  %1634 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %1633)
  %1635 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 276, %1* %1634)
  %1636 = bitcast %0* %17 to %1**
  store %1* %1635, %1** %1636, align 8
  br label %3917

1637:                                             ; preds = %268
  %1638 = load %0*, %0** %12, align 8
  %1639 = getelementptr inbounds %0, %0* %1638, i64 -2
  %1640 = bitcast %0* %1639 to %1**
  %1641 = load %1*, %1** %1640, align 8
  %1642 = load %0*, %0** %12, align 8
  %1643 = getelementptr inbounds %0, %0* %1642, i64 0
  %1644 = bitcast %0* %1643 to %1**
  %1645 = load %1*, %1** %1644, align 8
  %1646 = call %1* @zend_ast_list_add(%1* %1641, %1* %1645)
  %1647 = bitcast %0* %17 to %1**
  store %1* %1646, %1** %1647, align 8
  br label %3917

1648:                                             ; preds = %268
  %1649 = load %0*, %0** %12, align 8
  %1650 = getelementptr inbounds %0, %0* %1649, i64 0
  %1651 = bitcast %0* %1650 to %1**
  %1652 = load %1*, %1** %1651, align 8
  %1653 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 132, %1* %1652)
  %1654 = bitcast %0* %17 to %1**
  store %1* %1653, %1** %1654, align 8
  br label %3917

1655:                                             ; preds = %268
  %1656 = load %0*, %0** %12, align 8
  %1657 = getelementptr inbounds %0, %0* %1656, i64 0
  %1658 = bitcast %0* %1657 to %1**
  %1659 = load %1*, %1** %1658, align 8
  %1660 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 530, %1* %1659, i8* null)
  %1661 = bitcast %0* %17 to %1**
  store %1* %1660, %1** %1661, align 8
  br label %3917

1662:                                             ; preds = %268
  %1663 = load %0*, %0** %12, align 8
  %1664 = getelementptr inbounds %0, %0* %1663, i64 -2
  %1665 = bitcast %0* %1664 to %1**
  %1666 = load %1*, %1** %1665, align 8
  %1667 = load %0*, %0** %12, align 8
  %1668 = getelementptr inbounds %0, %0* %1667, i64 0
  %1669 = bitcast %0* %1668 to %1**
  %1670 = load %1*, %1** %1669, align 8
  %1671 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 530, %1* %1666, %1* %1670)
  %1672 = bitcast %0* %17 to %1**
  store %1* %1671, %1** %1672, align 8
  br label %3917

1673:                                             ; preds = %268
  %1674 = load %0*, %0** %12, align 8
  %1675 = getelementptr inbounds %0, %0* %1674, i64 -1
  %1676 = bitcast %0* %1675 to %1**
  %1677 = load %1*, %1** %1676, align 8
  %1678 = load %0*, %0** %12, align 8
  %1679 = getelementptr inbounds %0, %0* %1678, i64 0
  %1680 = bitcast %0* %1679 to %1**
  %1681 = load %1*, %1** %1680, align 8
  %1682 = call %1* @zend_ast_list_add(%1* %1677, %1* %1681)
  %1683 = bitcast %0* %17 to %1**
  store %1* %1682, %1** %1683, align 8
  br label %3917

1684:                                             ; preds = %268
  %1685 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 0, i16 zeroext 132)
  %1686 = bitcast %0* %17 to %1**
  store %1* %1685, %1** %1686, align 8
  br label %3917

1687:                                             ; preds = %268
  %1688 = load %0*, %0** %12, align 8
  %1689 = getelementptr inbounds %0, %0* %1688, i64 -1
  %1690 = bitcast %0* %1689 to %1**
  %1691 = load %1*, %1** %1690, align 8
  %1692 = bitcast %0* %17 to %1**
  store %1* %1691, %1** %1692, align 8
  %1693 = load %0*, %0** %12, align 8
  %1694 = getelementptr inbounds %0, %0* %1693, i64 -2
  %1695 = bitcast %0* %1694 to i64*
  %1696 = load i64, i64* %1695, align 8
  %1697 = trunc i64 %1696 to i16
  %1698 = bitcast %0* %17 to %1**
  %1699 = load %1*, %1** %1698, align 8
  %1700 = getelementptr inbounds %1, %1* %1699, i32 0, i32 1
  store i16 %1697, i16* %1700, align 2
  br label %3917

1701:                                             ; preds = %268
  %1702 = load %0*, %0** %12, align 8
  %1703 = getelementptr inbounds %0, %0* %1702, i64 -1
  %1704 = bitcast %0* %1703 to %1**
  %1705 = load %1*, %1** %1704, align 8
  %1706 = bitcast %0* %17 to %1**
  store %1* %1705, %1** %1706, align 8
  %1707 = load %0*, %0** %12, align 8
  %1708 = getelementptr inbounds %0, %0* %1707, i64 -3
  %1709 = bitcast %0* %1708 to i64*
  %1710 = load i64, i64* %1709, align 8
  %1711 = trunc i64 %1710 to i16
  %1712 = bitcast %0* %17 to %1**
  %1713 = load %1*, %1** %1712, align 8
  %1714 = getelementptr inbounds %1, %1* %1713, i32 0, i32 1
  store i16 %1711, i16* %1714, align 2
  br label %3917

1715:                                             ; preds = %268
  %1716 = load %0*, %0** %12, align 8
  %1717 = getelementptr inbounds %0, %0* %1716, i64 -1
  %1718 = bitcast %0* %1717 to %1**
  %1719 = load %1*, %1** %1718, align 8
  %1720 = load %0*, %0** %12, align 8
  %1721 = getelementptr inbounds %0, %0* %1720, i64 0
  %1722 = bitcast %0* %1721 to %1**
  %1723 = load %1*, %1** %1722, align 8
  %1724 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 537, %1* %1719, %1* %1723)
  %1725 = bitcast %0* %17 to %1**
  store %1* %1724, %1** %1725, align 8
  br label %3917

1726:                                             ; preds = %268
  %1727 = load %0*, %0** %12, align 8
  %1728 = getelementptr inbounds %0, %0* %1727, i64 -9
  %1729 = bitcast %0* %1728 to i64*
  %1730 = load i64, i64* %1729, align 8
  %1731 = load %0*, %0** %12, align 8
  %1732 = getelementptr inbounds %0, %0* %1731, i64 -11
  %1733 = bitcast %0* %1732 to i64*
  %1734 = load i64, i64* %1733, align 8
  %1735 = or i64 %1730, %1734
  %1736 = load %0*, %0** %12, align 8
  %1737 = getelementptr inbounds %0, %0* %1736, i64 0
  %1738 = bitcast %0* %1737 to i64*
  %1739 = load i64, i64* %1738, align 8
  %1740 = or i64 %1735, %1739
  %1741 = trunc i64 %1740 to i32
  %1742 = load %0*, %0** %12, align 8
  %1743 = getelementptr inbounds %0, %0* %1742, i64 -10
  %1744 = bitcast %0* %1743 to i64*
  %1745 = load i64, i64* %1744, align 8
  %1746 = trunc i64 %1745 to i32
  %1747 = load %0*, %0** %12, align 8
  %1748 = getelementptr inbounds %0, %0* %1747, i64 -7
  %1749 = bitcast %0* %1748 to %34**
  %1750 = load %34*, %34** %1749, align 8
  %1751 = load %0*, %0** %12, align 8
  %1752 = getelementptr inbounds %0, %0* %1751, i64 -8
  %1753 = bitcast %0* %1752 to %1**
  %1754 = load %1*, %1** %1753, align 8
  %1755 = call %34* @336(%1* %1754)
  %1756 = load %0*, %0** %12, align 8
  %1757 = getelementptr inbounds %0, %0* %1756, i64 -5
  %1758 = bitcast %0* %1757 to %1**
  %1759 = load %1*, %1** %1758, align 8
  %1760 = load %0*, %0** %12, align 8
  %1761 = getelementptr inbounds %0, %0* %1760, i64 -1
  %1762 = bitcast %0* %1761 to %1**
  %1763 = load %1*, %1** %1762, align 8
  %1764 = load %0*, %0** %12, align 8
  %1765 = getelementptr inbounds %0, %0* %1764, i64 -3
  %1766 = bitcast %0* %1765 to %1**
  %1767 = load %1*, %1** %1766, align 8
  %1768 = call %1* @zend_ast_create_decl(i16 zeroext 68, i32 %1741, i32 %1746, %34* %1750, %34* %1755, %1* %1759, %1* null, %1* %1763, %1* %1767)
  %1769 = bitcast %0* %17 to %1**
  store %1* %1768, %1** %1769, align 8
  %1770 = load %0*, %0** %12, align 8
  %1771 = getelementptr inbounds %0, %0* %1770, i64 -2
  %1772 = bitcast %0* %1771 to i64*
  %1773 = load i64, i64* %1772, align 8
  %1774 = trunc i64 %1773 to i32
  store i32 %1774, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  br label %3917

1775:                                             ; preds = %268
  %1776 = load %0*, %0** %12, align 8
  %1777 = getelementptr inbounds %0, %0* %1776, i64 0
  %1778 = bitcast %0* %1777 to %1**
  %1779 = load %1*, %1** %1778, align 8
  %1780 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 141, %1* %1779)
  %1781 = bitcast %0* %17 to %1**
  store %1* %1780, %1** %1781, align 8
  br label %3917

1782:                                             ; preds = %268
  %1783 = load %0*, %0** %12, align 8
  %1784 = getelementptr inbounds %0, %0* %1783, i64 -2
  %1785 = bitcast %0* %1784 to %1**
  %1786 = load %1*, %1** %1785, align 8
  %1787 = load %0*, %0** %12, align 8
  %1788 = getelementptr inbounds %0, %0* %1787, i64 0
  %1789 = bitcast %0* %1788 to %1**
  %1790 = load %1*, %1** %1789, align 8
  %1791 = call %1* @zend_ast_list_add(%1* %1786, %1* %1790)
  %1792 = bitcast %0* %17 to %1**
  store %1* %1791, %1** %1792, align 8
  br label %3917

1793:                                             ; preds = %268
  %1794 = bitcast %0* %17 to %1**
  store %1* null, %1** %1794, align 8
  br label %3917

1795:                                             ; preds = %268
  %1796 = bitcast %0* %17 to %1**
  store %1* null, %1** %1796, align 8
  br label %3917

1797:                                             ; preds = %268
  %1798 = load %0*, %0** %12, align 8
  %1799 = getelementptr inbounds %0, %0* %1798, i64 -1
  %1800 = bitcast %0* %1799 to %1**
  %1801 = load %1*, %1** %1800, align 8
  %1802 = bitcast %0* %17 to %1**
  store %1* %1801, %1** %1802, align 8
  br label %3917

1803:                                             ; preds = %268
  %1804 = load %0*, %0** %12, align 8
  %1805 = getelementptr inbounds %0, %0* %1804, i64 0
  %1806 = bitcast %0* %1805 to %1**
  %1807 = load %1*, %1** %1806, align 8
  %1808 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 142, %1* %1807)
  %1809 = bitcast %0* %17 to %1**
  store %1* %1808, %1** %1809, align 8
  br label %3917

1810:                                             ; preds = %268
  %1811 = load %0*, %0** %12, align 8
  %1812 = getelementptr inbounds %0, %0* %1811, i64 -1
  %1813 = bitcast %0* %1812 to %1**
  %1814 = load %1*, %1** %1813, align 8
  %1815 = load %0*, %0** %12, align 8
  %1816 = getelementptr inbounds %0, %0* %1815, i64 0
  %1817 = bitcast %0* %1816 to %1**
  %1818 = load %1*, %1** %1817, align 8
  %1819 = call %1* @zend_ast_list_add(%1* %1814, %1* %1818)
  %1820 = bitcast %0* %17 to %1**
  store %1* %1819, %1** %1820, align 8
  br label %3917

1821:                                             ; preds = %268
  %1822 = load %0*, %0** %12, align 8
  %1823 = getelementptr inbounds %0, %0* %1822, i64 -1
  %1824 = bitcast %0* %1823 to %1**
  %1825 = load %1*, %1** %1824, align 8
  %1826 = bitcast %0* %17 to %1**
  store %1* %1825, %1** %1826, align 8
  br label %3917

1827:                                             ; preds = %268
  %1828 = load %0*, %0** %12, align 8
  %1829 = getelementptr inbounds %0, %0* %1828, i64 -1
  %1830 = bitcast %0* %1829 to %1**
  %1831 = load %1*, %1** %1830, align 8
  %1832 = bitcast %0* %17 to %1**
  store %1* %1831, %1** %1832, align 8
  br label %3917

1833:                                             ; preds = %268
  %1834 = load %0*, %0** %12, align 8
  %1835 = getelementptr inbounds %0, %0* %1834, i64 -2
  %1836 = bitcast %0* %1835 to %1**
  %1837 = load %1*, %1** %1836, align 8
  %1838 = load %0*, %0** %12, align 8
  %1839 = getelementptr inbounds %0, %0* %1838, i64 0
  %1840 = bitcast %0* %1839 to %1**
  %1841 = load %1*, %1** %1840, align 8
  %1842 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 538, %1* %1837, %1* %1841)
  %1843 = bitcast %0* %17 to %1**
  store %1* %1842, %1** %1843, align 8
  br label %3917

1844:                                             ; preds = %268
  %1845 = load %0*, %0** %12, align 8
  %1846 = getelementptr inbounds %0, %0* %1845, i64 -2
  %1847 = bitcast %0* %1846 to %1**
  %1848 = load %1*, %1** %1847, align 8
  %1849 = load %0*, %0** %12, align 8
  %1850 = getelementptr inbounds %0, %0* %1849, i64 0
  %1851 = bitcast %0* %1850 to %1**
  %1852 = load %1*, %1** %1851, align 8
  %1853 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 542, i16 zeroext 0, %1* %1848, %1* %1852)
  %1854 = bitcast %0* %17 to %1**
  store %1* %1853, %1** %1854, align 8
  br label %3917

1855:                                             ; preds = %268
  %1856 = bitcast %4* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %1856) #9
  call void @zend_lex_tstring(%4* %29)
  %1857 = load %0*, %0** %12, align 8
  %1858 = getelementptr inbounds %0, %0* %1857, i64 -2
  %1859 = bitcast %0* %1858 to %1**
  %1860 = load %1*, %1** %1859, align 8
  %1861 = call %1* @333(%4* %29)
  %1862 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 542, i16 zeroext 0, %1* %1860, %1* %1861)
  %1863 = bitcast %0* %17 to %1**
  store %1* %1862, %1** %1863, align 8
  %1864 = bitcast %4* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %1864) #9
  br label %3917

1865:                                             ; preds = %268
  %1866 = load %0*, %0** %12, align 8
  %1867 = getelementptr inbounds %0, %0* %1866, i64 -1
  %1868 = bitcast %0* %1867 to i64*
  %1869 = load i64, i64* %1868, align 8
  %1870 = trunc i64 %1869 to i16
  %1871 = load %0*, %0** %12, align 8
  %1872 = getelementptr inbounds %0, %0* %1871, i64 -3
  %1873 = bitcast %0* %1872 to %1**
  %1874 = load %1*, %1** %1873, align 8
  %1875 = load %0*, %0** %12, align 8
  %1876 = getelementptr inbounds %0, %0* %1875, i64 0
  %1877 = bitcast %0* %1876 to %1**
  %1878 = load %1*, %1** %1877, align 8
  %1879 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 542, i16 zeroext %1870, %1* %1874, %1* %1878)
  %1880 = bitcast %0* %17 to %1**
  store %1* %1879, %1** %1880, align 8
  br label %3917

1881:                                             ; preds = %268
  %1882 = load %0*, %0** %12, align 8
  %1883 = getelementptr inbounds %0, %0* %1882, i64 0
  %1884 = bitcast %0* %1883 to i64*
  %1885 = load i64, i64* %1884, align 8
  %1886 = trunc i64 %1885 to i16
  %1887 = load %0*, %0** %12, align 8
  %1888 = getelementptr inbounds %0, %0* %1887, i64 -2
  %1889 = bitcast %0* %1888 to %1**
  %1890 = load %1*, %1** %1889, align 8
  %1891 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 542, i16 zeroext %1886, %1* %1890, i8* null)
  %1892 = bitcast %0* %17 to %1**
  store %1* %1891, %1** %1892, align 8
  br label %3917

1893:                                             ; preds = %268
  %1894 = load %0*, %0** %12, align 8
  %1895 = getelementptr inbounds %0, %0* %1894, i64 0
  %1896 = bitcast %0* %1895 to %1**
  %1897 = load %1*, %1** %1896, align 8
  %1898 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 539, i8* null, %1* %1897)
  %1899 = bitcast %0* %17 to %1**
  store %1* %1898, %1** %1899, align 8
  br label %3917

1900:                                             ; preds = %268
  %1901 = load %0*, %0** %12, align 8
  %1902 = getelementptr inbounds %0, %0* %1901, i64 0
  %1903 = bitcast %0* %1902 to %1**
  %1904 = load %1*, %1** %1903, align 8
  %1905 = bitcast %0* %17 to %1**
  store %1* %1904, %1** %1905, align 8
  br label %3917

1906:                                             ; preds = %268
  %1907 = load %0*, %0** %12, align 8
  %1908 = getelementptr inbounds %0, %0* %1907, i64 -2
  %1909 = bitcast %0* %1908 to %1**
  %1910 = load %1*, %1** %1909, align 8
  %1911 = load %0*, %0** %12, align 8
  %1912 = getelementptr inbounds %0, %0* %1911, i64 0
  %1913 = bitcast %0* %1912 to %1**
  %1914 = load %1*, %1** %1913, align 8
  %1915 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 539, %1* %1910, %1* %1914)
  %1916 = bitcast %0* %17 to %1**
  store %1* %1915, %1** %1916, align 8
  br label %3917

1917:                                             ; preds = %268
  %1918 = bitcast %0* %17 to %1**
  store %1* null, %1** %1918, align 8
  br label %3917

1919:                                             ; preds = %268
  %1920 = load %0*, %0** %12, align 8
  %1921 = getelementptr inbounds %0, %0* %1920, i64 -1
  %1922 = bitcast %0* %1921 to %1**
  %1923 = load %1*, %1** %1922, align 8
  %1924 = bitcast %0* %17 to %1**
  store %1* %1923, %1** %1924, align 8
  br label %3917

1925:                                             ; preds = %268
  %1926 = load %0*, %0** %12, align 8
  %1927 = getelementptr inbounds %0, %0* %1926, i64 0
  %1928 = bitcast %0* %1927 to i64*
  %1929 = load i64, i64* %1928, align 8
  %1930 = bitcast %0* %17 to i64*
  store i64 %1929, i64* %1930, align 8
  br label %3917

1931:                                             ; preds = %268
  %1932 = bitcast %0* %17 to i64*
  store i64 256, i64* %1932, align 8
  br label %3917

1933:                                             ; preds = %268
  %1934 = bitcast %0* %17 to i64*
  store i64 256, i64* %1934, align 8
  br label %3917

1935:                                             ; preds = %268
  %1936 = load %0*, %0** %12, align 8
  %1937 = getelementptr inbounds %0, %0* %1936, i64 0
  %1938 = bitcast %0* %1937 to i64*
  %1939 = load i64, i64* %1938, align 8
  %1940 = bitcast %0* %17 to i64*
  store i64 %1939, i64* %1940, align 8
  %1941 = bitcast %0* %17 to i64*
  %1942 = load i64, i64* %1941, align 8
  %1943 = and i64 %1942, 1792
  %1944 = icmp ne i64 %1943, 0
  br i1 %1944, label %1949, label %1945

1945:                                             ; preds = %1935
  %1946 = bitcast %0* %17 to i64*
  %1947 = load i64, i64* %1946, align 8
  %1948 = or i64 %1947, 256
  store i64 %1948, i64* %1946, align 8
  br label %1949

1949:                                             ; preds = %1945, %1935
  br label %3917

1950:                                             ; preds = %268
  %1951 = load %0*, %0** %12, align 8
  %1952 = getelementptr inbounds %0, %0* %1951, i64 0
  %1953 = bitcast %0* %1952 to i64*
  %1954 = load i64, i64* %1953, align 8
  %1955 = bitcast %0* %17 to i64*
  store i64 %1954, i64* %1955, align 8
  br label %3917

1956:                                             ; preds = %268
  %1957 = load %0*, %0** %12, align 8
  %1958 = getelementptr inbounds %0, %0* %1957, i64 -1
  %1959 = bitcast %0* %1958 to i64*
  %1960 = load i64, i64* %1959, align 8
  %1961 = trunc i64 %1960 to i32
  %1962 = load %0*, %0** %12, align 8
  %1963 = getelementptr inbounds %0, %0* %1962, i64 0
  %1964 = bitcast %0* %1963 to i64*
  %1965 = load i64, i64* %1964, align 8
  %1966 = trunc i64 %1965 to i32
  %1967 = call i32 @zend_add_member_modifier(i32 %1961, i32 %1966)
  %1968 = zext i32 %1967 to i64
  %1969 = bitcast %0* %17 to i64*
  store i64 %1968, i64* %1969, align 8
  br label %3917

1970:                                             ; preds = %268
  %1971 = bitcast %0* %17 to i64*
  store i64 256, i64* %1971, align 8
  br label %3917

1972:                                             ; preds = %268
  %1973 = bitcast %0* %17 to i64*
  store i64 512, i64* %1973, align 8
  br label %3917

1974:                                             ; preds = %268
  %1975 = bitcast %0* %17 to i64*
  store i64 1024, i64* %1975, align 8
  br label %3917

1976:                                             ; preds = %268
  %1977 = bitcast %0* %17 to i64*
  store i64 1, i64* %1977, align 8
  br label %3917

1978:                                             ; preds = %268
  %1979 = bitcast %0* %17 to i64*
  store i64 2, i64* %1979, align 8
  br label %3917

1980:                                             ; preds = %268
  %1981 = bitcast %0* %17 to i64*
  store i64 4, i64* %1981, align 8
  br label %3917

1982:                                             ; preds = %268
  %1983 = load %0*, %0** %12, align 8
  %1984 = getelementptr inbounds %0, %0* %1983, i64 -2
  %1985 = bitcast %0* %1984 to %1**
  %1986 = load %1*, %1** %1985, align 8
  %1987 = load %0*, %0** %12, align 8
  %1988 = getelementptr inbounds %0, %0* %1987, i64 0
  %1989 = bitcast %0* %1988 to %1**
  %1990 = load %1*, %1** %1989, align 8
  %1991 = call %1* @zend_ast_list_add(%1* %1986, %1* %1990)
  %1992 = bitcast %0* %17 to %1**
  store %1* %1991, %1** %1992, align 8
  br label %3917

1993:                                             ; preds = %268
  %1994 = load %0*, %0** %12, align 8
  %1995 = getelementptr inbounds %0, %0* %1994, i64 0
  %1996 = bitcast %0* %1995 to %1**
  %1997 = load %1*, %1** %1996, align 8
  %1998 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 138, %1* %1997)
  %1999 = bitcast %0* %17 to %1**
  store %1* %1998, %1** %1999, align 8
  br label %3917

2000:                                             ; preds = %268
  %2001 = load %0*, %0** %12, align 8
  %2002 = getelementptr inbounds %0, %0* %2001, i64 -1
  %2003 = bitcast %0* %2002 to %1**
  %2004 = load %1*, %1** %2003, align 8
  %2005 = load %0*, %0** %12, align 8
  %2006 = getelementptr inbounds %0, %0* %2005, i64 0
  %2007 = bitcast %0* %2006 to %34**
  %2008 = load %34*, %34** %2007, align 8
  %2009 = icmp ne %34* %2008, null
  br i1 %2009, label %2010, label %2016

2010:                                             ; preds = %2000
  %2011 = load %0*, %0** %12, align 8
  %2012 = getelementptr inbounds %0, %0* %2011, i64 0
  %2013 = bitcast %0* %2012 to %34**
  %2014 = load %34*, %34** %2013, align 8
  %2015 = call %1* @337(%34* %2014)
  br label %2017

2016:                                             ; preds = %2000
  br label %2017

2017:                                             ; preds = %2016, %2010
  %2018 = phi %1* [ %2015, %2010 ], [ null, %2016 ]
  %2019 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 774, %1* %2004, i8* null, %1* %2018)
  %2020 = bitcast %0* %17 to %1**
  store %1* %2019, %1** %2020, align 8
  br label %3917

2021:                                             ; preds = %268
  %2022 = load %0*, %0** %12, align 8
  %2023 = getelementptr inbounds %0, %0* %2022, i64 -3
  %2024 = bitcast %0* %2023 to %1**
  %2025 = load %1*, %1** %2024, align 8
  %2026 = load %0*, %0** %12, align 8
  %2027 = getelementptr inbounds %0, %0* %2026, i64 -1
  %2028 = bitcast %0* %2027 to %1**
  %2029 = load %1*, %1** %2028, align 8
  %2030 = load %0*, %0** %12, align 8
  %2031 = getelementptr inbounds %0, %0* %2030, i64 0
  %2032 = bitcast %0* %2031 to %34**
  %2033 = load %34*, %34** %2032, align 8
  %2034 = icmp ne %34* %2033, null
  br i1 %2034, label %2035, label %2041

2035:                                             ; preds = %2021
  %2036 = load %0*, %0** %12, align 8
  %2037 = getelementptr inbounds %0, %0* %2036, i64 0
  %2038 = bitcast %0* %2037 to %34**
  %2039 = load %34*, %34** %2038, align 8
  %2040 = call %1* @337(%34* %2039)
  br label %2042

2041:                                             ; preds = %2021
  br label %2042

2042:                                             ; preds = %2041, %2035
  %2043 = phi %1* [ %2040, %2035 ], [ null, %2041 ]
  %2044 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 774, %1* %2025, %1* %2029, %1* %2043)
  %2045 = bitcast %0* %17 to %1**
  store %1* %2044, %1** %2045, align 8
  br label %3917

2046:                                             ; preds = %268
  %2047 = load %0*, %0** %12, align 8
  %2048 = getelementptr inbounds %0, %0* %2047, i64 -2
  %2049 = bitcast %0* %2048 to %1**
  %2050 = load %1*, %1** %2049, align 8
  %2051 = load %0*, %0** %12, align 8
  %2052 = getelementptr inbounds %0, %0* %2051, i64 0
  %2053 = bitcast %0* %2052 to %1**
  %2054 = load %1*, %1** %2053, align 8
  %2055 = call %1* @zend_ast_list_add(%1* %2050, %1* %2054)
  %2056 = bitcast %0* %17 to %1**
  store %1* %2055, %1** %2056, align 8
  br label %3917

2057:                                             ; preds = %268
  %2058 = load %0*, %0** %12, align 8
  %2059 = getelementptr inbounds %0, %0* %2058, i64 0
  %2060 = bitcast %0* %2059 to %1**
  %2061 = load %1*, %1** %2060, align 8
  %2062 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 140, %1* %2061)
  %2063 = bitcast %0* %17 to %1**
  store %1* %2062, %1** %2063, align 8
  br label %3917

2064:                                             ; preds = %268
  %2065 = load %0*, %0** %12, align 8
  %2066 = getelementptr inbounds %0, %0* %2065, i64 -3
  %2067 = bitcast %0* %2066 to %1**
  %2068 = load %1*, %1** %2067, align 8
  %2069 = load %0*, %0** %12, align 8
  %2070 = getelementptr inbounds %0, %0* %2069, i64 -1
  %2071 = bitcast %0* %2070 to %1**
  %2072 = load %1*, %1** %2071, align 8
  %2073 = load %0*, %0** %12, align 8
  %2074 = getelementptr inbounds %0, %0* %2073, i64 0
  %2075 = bitcast %0* %2074 to %34**
  %2076 = load %34*, %34** %2075, align 8
  %2077 = icmp ne %34* %2076, null
  br i1 %2077, label %2078, label %2084

2078:                                             ; preds = %2064
  %2079 = load %0*, %0** %12, align 8
  %2080 = getelementptr inbounds %0, %0* %2079, i64 0
  %2081 = bitcast %0* %2080 to %34**
  %2082 = load %34*, %34** %2081, align 8
  %2083 = call %1* @337(%34* %2082)
  br label %2085

2084:                                             ; preds = %2064
  br label %2085

2085:                                             ; preds = %2084, %2078
  %2086 = phi %1* [ %2083, %2078 ], [ null, %2084 ]
  %2087 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 775, %1* %2068, %1* %2072, %1* %2086)
  %2088 = bitcast %0* %17 to %1**
  store %1* %2087, %1** %2088, align 8
  br label %3917

2089:                                             ; preds = %268
  %2090 = load %0*, %0** %12, align 8
  %2091 = getelementptr inbounds %0, %0* %2090, i64 -3
  %2092 = bitcast %0* %2091 to %1**
  %2093 = load %1*, %1** %2092, align 8
  %2094 = load %0*, %0** %12, align 8
  %2095 = getelementptr inbounds %0, %0* %2094, i64 -1
  %2096 = bitcast %0* %2095 to %1**
  %2097 = load %1*, %1** %2096, align 8
  %2098 = load %0*, %0** %12, align 8
  %2099 = getelementptr inbounds %0, %0* %2098, i64 0
  %2100 = bitcast %0* %2099 to %34**
  %2101 = load %34*, %34** %2100, align 8
  %2102 = icmp ne %34* %2101, null
  br i1 %2102, label %2103, label %2109

2103:                                             ; preds = %2089
  %2104 = load %0*, %0** %12, align 8
  %2105 = getelementptr inbounds %0, %0* %2104, i64 0
  %2106 = bitcast %0* %2105 to %34**
  %2107 = load %34*, %34** %2106, align 8
  %2108 = call %1* @337(%34* %2107)
  br label %2110

2109:                                             ; preds = %2089
  br label %2110

2110:                                             ; preds = %2109, %2103
  %2111 = phi %1* [ %2108, %2103 ], [ null, %2109 ]
  %2112 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 775, %1* %2093, %1* %2097, %1* %2111)
  %2113 = bitcast %0* %17 to %1**
  store %1* %2112, %1** %2113, align 8
  br label %3917

2114:                                             ; preds = %268
  %2115 = load %0*, %0** %12, align 8
  %2116 = getelementptr inbounds %0, %0* %2115, i64 -2
  %2117 = bitcast %0* %2116 to %1**
  %2118 = load %1*, %1** %2117, align 8
  %2119 = load %0*, %0** %12, align 8
  %2120 = getelementptr inbounds %0, %0* %2119, i64 0
  %2121 = bitcast %0* %2120 to %1**
  %2122 = load %1*, %1** %2121, align 8
  %2123 = call %1* @zend_ast_list_add(%1* %2118, %1* %2122)
  %2124 = bitcast %0* %17 to %1**
  store %1* %2123, %1** %2124, align 8
  br label %3917

2125:                                             ; preds = %268
  %2126 = load %0*, %0** %12, align 8
  %2127 = getelementptr inbounds %0, %0* %2126, i64 0
  %2128 = bitcast %0* %2127 to %1**
  %2129 = load %1*, %1** %2128, align 8
  %2130 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 132, %1* %2129)
  %2131 = bitcast %0* %17 to %1**
  store %1* %2130, %1** %2131, align 8
  br label %3917

2132:                                             ; preds = %268
  %2133 = load %0*, %0** %12, align 8
  %2134 = getelementptr inbounds %0, %0* %2133, i64 0
  %2135 = bitcast %0* %2134 to %1**
  %2136 = load %1*, %1** %2135, align 8
  %2137 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 282, %1* %2136)
  %2138 = bitcast %0* %17 to %1**
  store %1* %2137, %1** %2138, align 8
  br label %3917

2139:                                             ; preds = %268
  %2140 = bitcast %0* %17 to %1**
  store %1* null, %1** %2140, align 8
  br label %3917

2141:                                             ; preds = %268
  %2142 = load %0*, %0** %12, align 8
  %2143 = getelementptr inbounds %0, %0* %2142, i64 0
  %2144 = bitcast %0* %2143 to %1**
  %2145 = load %1*, %1** %2144, align 8
  %2146 = bitcast %0* %17 to %1**
  store %1* %2145, %1** %2146, align 8
  br label %3917

2147:                                             ; preds = %268
  %2148 = load %0*, %0** %12, align 8
  %2149 = getelementptr inbounds %0, %0* %2148, i64 -2
  %2150 = bitcast %0* %2149 to %1**
  %2151 = load %1*, %1** %2150, align 8
  %2152 = load %0*, %0** %12, align 8
  %2153 = getelementptr inbounds %0, %0* %2152, i64 0
  %2154 = bitcast %0* %2153 to %1**
  %2155 = load %1*, %1** %2154, align 8
  %2156 = call %1* @zend_ast_list_add(%1* %2151, %1* %2155)
  %2157 = bitcast %0* %17 to %1**
  store %1* %2156, %1** %2157, align 8
  br label %3917

2158:                                             ; preds = %268
  %2159 = load %0*, %0** %12, align 8
  %2160 = getelementptr inbounds %0, %0* %2159, i64 0
  %2161 = bitcast %0* %2160 to %1**
  %2162 = load %1*, %1** %2161, align 8
  %2163 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 131, %1* %2162)
  %2164 = bitcast %0* %17 to %1**
  store %1* %2163, %1** %2164, align 8
  br label %3917

2165:                                             ; preds = %268
  %2166 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 3), align 8
  %2167 = sext i32 %2166 to i64
  %2168 = bitcast %0* %17 to i64*
  store i64 %2167, i64* %2168, align 8
  br label %3917

2169:                                             ; preds = %268
  %2170 = bitcast %1** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2170) #9
  %2171 = load %0*, %0** %12, align 8
  %2172 = getelementptr inbounds %0, %0* %2171, i64 -7
  %2173 = bitcast %0* %2172 to i64*
  %2174 = load i64, i64* %2173, align 8
  %2175 = trunc i64 %2174 to i32
  %2176 = load %0*, %0** %12, align 8
  %2177 = getelementptr inbounds %0, %0* %2176, i64 -3
  %2178 = bitcast %0* %2177 to %34**
  %2179 = load %34*, %34** %2178, align 8
  %2180 = load %0*, %0** %12, align 8
  %2181 = getelementptr inbounds %0, %0* %2180, i64 -5
  %2182 = bitcast %0* %2181 to %1**
  %2183 = load %1*, %1** %2182, align 8
  %2184 = load %0*, %0** %12, align 8
  %2185 = getelementptr inbounds %0, %0* %2184, i64 -4
  %2186 = bitcast %0* %2185 to %1**
  %2187 = load %1*, %1** %2186, align 8
  %2188 = load %0*, %0** %12, align 8
  %2189 = getelementptr inbounds %0, %0* %2188, i64 -1
  %2190 = bitcast %0* %2189 to %1**
  %2191 = load %1*, %1** %2190, align 8
  %2192 = call %1* @zend_ast_create_decl(i16 zeroext 69, i32 256, i32 %2175, %34* %2179, %34* null, %1* %2183, %1* %2187, %1* %2191, %1* null)
  store %1* %2192, %1** %30, align 8
  %2193 = load %1*, %1** %30, align 8
  %2194 = load %0*, %0** %12, align 8
  %2195 = getelementptr inbounds %0, %0* %2194, i64 -6
  %2196 = bitcast %0* %2195 to %1**
  %2197 = load %1*, %1** %2196, align 8
  %2198 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 526, %1* %2193, %1* %2197)
  %2199 = bitcast %0* %17 to %1**
  store %1* %2198, %1** %2199, align 8
  %2200 = bitcast %1** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2200) #9
  br label %3917

2201:                                             ; preds = %268
  %2202 = load %0*, %0** %12, align 8
  %2203 = getelementptr inbounds %0, %0* %2202, i64 -1
  %2204 = bitcast %0* %2203 to %1**
  %2205 = load %1*, %1** %2204, align 8
  %2206 = load %0*, %0** %12, align 8
  %2207 = getelementptr inbounds %0, %0* %2206, i64 0
  %2208 = bitcast %0* %2207 to %1**
  %2209 = load %1*, %1** %2208, align 8
  %2210 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 526, %1* %2205, %1* %2209)
  %2211 = bitcast %0* %17 to %1**
  store %1* %2210, %1** %2211, align 8
  br label %3917

2212:                                             ; preds = %268
  %2213 = load %0*, %0** %12, align 8
  %2214 = getelementptr inbounds %0, %0* %2213, i64 0
  %2215 = bitcast %0* %2214 to %1**
  %2216 = load %1*, %1** %2215, align 8
  %2217 = bitcast %0* %17 to %1**
  store %1* %2216, %1** %2217, align 8
  br label %3917

2218:                                             ; preds = %268
  %2219 = load %0*, %0** %12, align 8
  %2220 = getelementptr inbounds %0, %0* %2219, i64 -3
  %2221 = bitcast %0* %2220 to %1**
  %2222 = load %1*, %1** %2221, align 8
  %2223 = getelementptr inbounds %1, %1* %2222, i32 0, i32 1
  store i16 1, i16* %2223, align 2
  %2224 = load %0*, %0** %12, align 8
  %2225 = getelementptr inbounds %0, %0* %2224, i64 -3
  %2226 = bitcast %0* %2225 to %1**
  %2227 = load %1*, %1** %2226, align 8
  %2228 = load %0*, %0** %12, align 8
  %2229 = getelementptr inbounds %0, %0* %2228, i64 0
  %2230 = bitcast %0* %2229 to %1**
  %2231 = load %1*, %1** %2230, align 8
  %2232 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 517, %1* %2227, %1* %2231)
  %2233 = bitcast %0* %17 to %1**
  store %1* %2232, %1** %2233, align 8
  br label %3917

2234:                                             ; preds = %268
  %2235 = load %0*, %0** %12, align 8
  %2236 = getelementptr inbounds %0, %0* %2235, i64 -3
  %2237 = bitcast %0* %2236 to %1**
  %2238 = load %1*, %1** %2237, align 8
  %2239 = getelementptr inbounds %1, %1* %2238, i32 0, i32 1
  store i16 3, i16* %2239, align 2
  %2240 = load %0*, %0** %12, align 8
  %2241 = getelementptr inbounds %0, %0* %2240, i64 -3
  %2242 = bitcast %0* %2241 to %1**
  %2243 = load %1*, %1** %2242, align 8
  %2244 = load %0*, %0** %12, align 8
  %2245 = getelementptr inbounds %0, %0* %2244, i64 0
  %2246 = bitcast %0* %2245 to %1**
  %2247 = load %1*, %1** %2246, align 8
  %2248 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 517, %1* %2243, %1* %2247)
  %2249 = bitcast %0* %17 to %1**
  store %1* %2248, %1** %2249, align 8
  br label %3917

2250:                                             ; preds = %268
  %2251 = load %0*, %0** %12, align 8
  %2252 = getelementptr inbounds %0, %0* %2251, i64 -2
  %2253 = bitcast %0* %2252 to %1**
  %2254 = load %1*, %1** %2253, align 8
  %2255 = load %0*, %0** %12, align 8
  %2256 = getelementptr inbounds %0, %0* %2255, i64 0
  %2257 = bitcast %0* %2256 to %1**
  %2258 = load %1*, %1** %2257, align 8
  %2259 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 517, %1* %2254, %1* %2258)
  %2260 = bitcast %0* %17 to %1**
  store %1* %2259, %1** %2260, align 8
  br label %3917

2261:                                             ; preds = %268
  %2262 = load %0*, %0** %12, align 8
  %2263 = getelementptr inbounds %0, %0* %2262, i64 -3
  %2264 = bitcast %0* %2263 to %1**
  %2265 = load %1*, %1** %2264, align 8
  %2266 = load %0*, %0** %12, align 8
  %2267 = getelementptr inbounds %0, %0* %2266, i64 0
  %2268 = bitcast %0* %2267 to %1**
  %2269 = load %1*, %1** %2268, align 8
  %2270 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 518, %1* %2265, %1* %2269)
  %2271 = bitcast %0* %17 to %1**
  store %1* %2270, %1** %2271, align 8
  br label %3917

2272:                                             ; preds = %268
  %2273 = load %0*, %0** %12, align 8
  %2274 = getelementptr inbounds %0, %0* %2273, i64 0
  %2275 = bitcast %0* %2274 to %1**
  %2276 = load %1*, %1** %2275, align 8
  %2277 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 266, %1* %2276)
  %2278 = bitcast %0* %17 to %1**
  store %1* %2277, %1** %2278, align 8
  br label %3917

2279:                                             ; preds = %268
  %2280 = load %0*, %0** %12, align 8
  %2281 = getelementptr inbounds %0, %0* %2280, i64 -2
  %2282 = bitcast %0* %2281 to %1**
  %2283 = load %1*, %1** %2282, align 8
  %2284 = load %0*, %0** %12, align 8
  %2285 = getelementptr inbounds %0, %0* %2284, i64 0
  %2286 = bitcast %0* %2285 to %1**
  %2287 = load %1*, %1** %2286, align 8
  %2288 = call %1* @338(i32 23, %1* %2283, %1* %2287)
  %2289 = bitcast %0* %17 to %1**
  store %1* %2288, %1** %2289, align 8
  br label %3917

2290:                                             ; preds = %268
  %2291 = load %0*, %0** %12, align 8
  %2292 = getelementptr inbounds %0, %0* %2291, i64 -2
  %2293 = bitcast %0* %2292 to %1**
  %2294 = load %1*, %1** %2293, align 8
  %2295 = load %0*, %0** %12, align 8
  %2296 = getelementptr inbounds %0, %0* %2295, i64 0
  %2297 = bitcast %0* %2296 to %1**
  %2298 = load %1*, %1** %2297, align 8
  %2299 = call %1* @338(i32 24, %1* %2294, %1* %2298)
  %2300 = bitcast %0* %17 to %1**
  store %1* %2299, %1** %2300, align 8
  br label %3917

2301:                                             ; preds = %268
  %2302 = load %0*, %0** %12, align 8
  %2303 = getelementptr inbounds %0, %0* %2302, i64 -2
  %2304 = bitcast %0* %2303 to %1**
  %2305 = load %1*, %1** %2304, align 8
  %2306 = load %0*, %0** %12, align 8
  %2307 = getelementptr inbounds %0, %0* %2306, i64 0
  %2308 = bitcast %0* %2307 to %1**
  %2309 = load %1*, %1** %2308, align 8
  %2310 = call %1* @338(i32 25, %1* %2305, %1* %2309)
  %2311 = bitcast %0* %17 to %1**
  store %1* %2310, %1** %2311, align 8
  br label %3917

2312:                                             ; preds = %268
  %2313 = load %0*, %0** %12, align 8
  %2314 = getelementptr inbounds %0, %0* %2313, i64 -2
  %2315 = bitcast %0* %2314 to %1**
  %2316 = load %1*, %1** %2315, align 8
  %2317 = load %0*, %0** %12, align 8
  %2318 = getelementptr inbounds %0, %0* %2317, i64 0
  %2319 = bitcast %0* %2318 to %1**
  %2320 = load %1*, %1** %2319, align 8
  %2321 = call %1* @338(i32 167, %1* %2316, %1* %2320)
  %2322 = bitcast %0* %17 to %1**
  store %1* %2321, %1** %2322, align 8
  br label %3917

2323:                                             ; preds = %268
  %2324 = load %0*, %0** %12, align 8
  %2325 = getelementptr inbounds %0, %0* %2324, i64 -2
  %2326 = bitcast %0* %2325 to %1**
  %2327 = load %1*, %1** %2326, align 8
  %2328 = load %0*, %0** %12, align 8
  %2329 = getelementptr inbounds %0, %0* %2328, i64 0
  %2330 = bitcast %0* %2329 to %1**
  %2331 = load %1*, %1** %2330, align 8
  %2332 = call %1* @338(i32 26, %1* %2327, %1* %2331)
  %2333 = bitcast %0* %17 to %1**
  store %1* %2332, %1** %2333, align 8
  br label %3917

2334:                                             ; preds = %268
  %2335 = load %0*, %0** %12, align 8
  %2336 = getelementptr inbounds %0, %0* %2335, i64 -2
  %2337 = bitcast %0* %2336 to %1**
  %2338 = load %1*, %1** %2337, align 8
  %2339 = load %0*, %0** %12, align 8
  %2340 = getelementptr inbounds %0, %0* %2339, i64 0
  %2341 = bitcast %0* %2340 to %1**
  %2342 = load %1*, %1** %2341, align 8
  %2343 = call %1* @338(i32 30, %1* %2338, %1* %2342)
  %2344 = bitcast %0* %17 to %1**
  store %1* %2343, %1** %2344, align 8
  br label %3917

2345:                                             ; preds = %268
  %2346 = load %0*, %0** %12, align 8
  %2347 = getelementptr inbounds %0, %0* %2346, i64 -2
  %2348 = bitcast %0* %2347 to %1**
  %2349 = load %1*, %1** %2348, align 8
  %2350 = load %0*, %0** %12, align 8
  %2351 = getelementptr inbounds %0, %0* %2350, i64 0
  %2352 = bitcast %0* %2351 to %1**
  %2353 = load %1*, %1** %2352, align 8
  %2354 = call %1* @338(i32 27, %1* %2349, %1* %2353)
  %2355 = bitcast %0* %17 to %1**
  store %1* %2354, %1** %2355, align 8
  br label %3917

2356:                                             ; preds = %268
  %2357 = load %0*, %0** %12, align 8
  %2358 = getelementptr inbounds %0, %0* %2357, i64 -2
  %2359 = bitcast %0* %2358 to %1**
  %2360 = load %1*, %1** %2359, align 8
  %2361 = load %0*, %0** %12, align 8
  %2362 = getelementptr inbounds %0, %0* %2361, i64 0
  %2363 = bitcast %0* %2362 to %1**
  %2364 = load %1*, %1** %2363, align 8
  %2365 = call %1* @338(i32 32, %1* %2360, %1* %2364)
  %2366 = bitcast %0* %17 to %1**
  store %1* %2365, %1** %2366, align 8
  br label %3917

2367:                                             ; preds = %268
  %2368 = load %0*, %0** %12, align 8
  %2369 = getelementptr inbounds %0, %0* %2368, i64 -2
  %2370 = bitcast %0* %2369 to %1**
  %2371 = load %1*, %1** %2370, align 8
  %2372 = load %0*, %0** %12, align 8
  %2373 = getelementptr inbounds %0, %0* %2372, i64 0
  %2374 = bitcast %0* %2373 to %1**
  %2375 = load %1*, %1** %2374, align 8
  %2376 = call %1* @338(i32 31, %1* %2371, %1* %2375)
  %2377 = bitcast %0* %17 to %1**
  store %1* %2376, %1** %2377, align 8
  br label %3917

2378:                                             ; preds = %268
  %2379 = load %0*, %0** %12, align 8
  %2380 = getelementptr inbounds %0, %0* %2379, i64 -2
  %2381 = bitcast %0* %2380 to %1**
  %2382 = load %1*, %1** %2381, align 8
  %2383 = load %0*, %0** %12, align 8
  %2384 = getelementptr inbounds %0, %0* %2383, i64 0
  %2385 = bitcast %0* %2384 to %1**
  %2386 = load %1*, %1** %2385, align 8
  %2387 = call %1* @338(i32 33, %1* %2382, %1* %2386)
  %2388 = bitcast %0* %17 to %1**
  store %1* %2387, %1** %2388, align 8
  br label %3917

2389:                                             ; preds = %268
  %2390 = load %0*, %0** %12, align 8
  %2391 = getelementptr inbounds %0, %0* %2390, i64 -2
  %2392 = bitcast %0* %2391 to %1**
  %2393 = load %1*, %1** %2392, align 8
  %2394 = load %0*, %0** %12, align 8
  %2395 = getelementptr inbounds %0, %0* %2394, i64 0
  %2396 = bitcast %0* %2395 to %1**
  %2397 = load %1*, %1** %2396, align 8
  %2398 = call %1* @338(i32 28, %1* %2393, %1* %2397)
  %2399 = bitcast %0* %17 to %1**
  store %1* %2398, %1** %2399, align 8
  br label %3917

2400:                                             ; preds = %268
  %2401 = load %0*, %0** %12, align 8
  %2402 = getelementptr inbounds %0, %0* %2401, i64 -2
  %2403 = bitcast %0* %2402 to %1**
  %2404 = load %1*, %1** %2403, align 8
  %2405 = load %0*, %0** %12, align 8
  %2406 = getelementptr inbounds %0, %0* %2405, i64 0
  %2407 = bitcast %0* %2406 to %1**
  %2408 = load %1*, %1** %2407, align 8
  %2409 = call %1* @338(i32 29, %1* %2404, %1* %2408)
  %2410 = bitcast %0* %17 to %1**
  store %1* %2409, %1** %2410, align 8
  br label %3917

2411:                                             ; preds = %268
  %2412 = load %0*, %0** %12, align 8
  %2413 = getelementptr inbounds %0, %0* %2412, i64 -1
  %2414 = bitcast %0* %2413 to %1**
  %2415 = load %1*, %1** %2414, align 8
  %2416 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 273, %1* %2415)
  %2417 = bitcast %0* %17 to %1**
  store %1* %2416, %1** %2417, align 8
  br label %3917

2418:                                             ; preds = %268
  %2419 = load %0*, %0** %12, align 8
  %2420 = getelementptr inbounds %0, %0* %2419, i64 0
  %2421 = bitcast %0* %2420 to %1**
  %2422 = load %1*, %1** %2421, align 8
  %2423 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 271, %1* %2422)
  %2424 = bitcast %0* %17 to %1**
  store %1* %2423, %1** %2424, align 8
  br label %3917

2425:                                             ; preds = %268
  %2426 = load %0*, %0** %12, align 8
  %2427 = getelementptr inbounds %0, %0* %2426, i64 -1
  %2428 = bitcast %0* %2427 to %1**
  %2429 = load %1*, %1** %2428, align 8
  %2430 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 274, %1* %2429)
  %2431 = bitcast %0* %17 to %1**
  store %1* %2430, %1** %2431, align 8
  br label %3917

2432:                                             ; preds = %268
  %2433 = load %0*, %0** %12, align 8
  %2434 = getelementptr inbounds %0, %0* %2433, i64 0
  %2435 = bitcast %0* %2434 to %1**
  %2436 = load %1*, %1** %2435, align 8
  %2437 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 272, %1* %2436)
  %2438 = bitcast %0* %17 to %1**
  store %1* %2437, %1** %2438, align 8
  br label %3917

2439:                                             ; preds = %268
  %2440 = load %0*, %0** %12, align 8
  %2441 = getelementptr inbounds %0, %0* %2440, i64 -2
  %2442 = bitcast %0* %2441 to %1**
  %2443 = load %1*, %1** %2442, align 8
  %2444 = load %0*, %0** %12, align 8
  %2445 = getelementptr inbounds %0, %0* %2444, i64 0
  %2446 = bitcast %0* %2445 to %1**
  %2447 = load %1*, %1** %2446, align 8
  %2448 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 524, %1* %2443, %1* %2447)
  %2449 = bitcast %0* %17 to %1**
  store %1* %2448, %1** %2449, align 8
  br label %3917

2450:                                             ; preds = %268
  %2451 = load %0*, %0** %12, align 8
  %2452 = getelementptr inbounds %0, %0* %2451, i64 -2
  %2453 = bitcast %0* %2452 to %1**
  %2454 = load %1*, %1** %2453, align 8
  %2455 = load %0*, %0** %12, align 8
  %2456 = getelementptr inbounds %0, %0* %2455, i64 0
  %2457 = bitcast %0* %2456 to %1**
  %2458 = load %1*, %1** %2457, align 8
  %2459 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 523, %1* %2454, %1* %2458)
  %2460 = bitcast %0* %17 to %1**
  store %1* %2459, %1** %2460, align 8
  br label %3917

2461:                                             ; preds = %268
  %2462 = load %0*, %0** %12, align 8
  %2463 = getelementptr inbounds %0, %0* %2462, i64 -2
  %2464 = bitcast %0* %2463 to %1**
  %2465 = load %1*, %1** %2464, align 8
  %2466 = load %0*, %0** %12, align 8
  %2467 = getelementptr inbounds %0, %0* %2466, i64 0
  %2468 = bitcast %0* %2467 to %1**
  %2469 = load %1*, %1** %2468, align 8
  %2470 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 524, %1* %2465, %1* %2469)
  %2471 = bitcast %0* %17 to %1**
  store %1* %2470, %1** %2471, align 8
  br label %3917

2472:                                             ; preds = %268
  %2473 = load %0*, %0** %12, align 8
  %2474 = getelementptr inbounds %0, %0* %2473, i64 -2
  %2475 = bitcast %0* %2474 to %1**
  %2476 = load %1*, %1** %2475, align 8
  %2477 = load %0*, %0** %12, align 8
  %2478 = getelementptr inbounds %0, %0* %2477, i64 0
  %2479 = bitcast %0* %2478 to %1**
  %2480 = load %1*, %1** %2479, align 8
  %2481 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 523, %1* %2476, %1* %2480)
  %2482 = bitcast %0* %17 to %1**
  store %1* %2481, %1** %2482, align 8
  br label %3917

2483:                                             ; preds = %268
  %2484 = load %0*, %0** %12, align 8
  %2485 = getelementptr inbounds %0, %0* %2484, i64 -2
  %2486 = bitcast %0* %2485 to %1**
  %2487 = load %1*, %1** %2486, align 8
  %2488 = load %0*, %0** %12, align 8
  %2489 = getelementptr inbounds %0, %0* %2488, i64 0
  %2490 = bitcast %0* %2489 to %1**
  %2491 = load %1*, %1** %2490, align 8
  %2492 = call %1* @339(i32 14, %1* %2487, %1* %2491)
  %2493 = bitcast %0* %17 to %1**
  store %1* %2492, %1** %2493, align 8
  br label %3917

2494:                                             ; preds = %268
  %2495 = load %0*, %0** %12, align 8
  %2496 = getelementptr inbounds %0, %0* %2495, i64 -2
  %2497 = bitcast %0* %2496 to %1**
  %2498 = load %1*, %1** %2497, align 8
  %2499 = load %0*, %0** %12, align 8
  %2500 = getelementptr inbounds %0, %0* %2499, i64 0
  %2501 = bitcast %0* %2500 to %1**
  %2502 = load %1*, %1** %2501, align 8
  %2503 = call %1* @339(i32 9, %1* %2498, %1* %2502)
  %2504 = bitcast %0* %17 to %1**
  store %1* %2503, %1** %2504, align 8
  br label %3917

2505:                                             ; preds = %268
  %2506 = load %0*, %0** %12, align 8
  %2507 = getelementptr inbounds %0, %0* %2506, i64 -2
  %2508 = bitcast %0* %2507 to %1**
  %2509 = load %1*, %1** %2508, align 8
  %2510 = load %0*, %0** %12, align 8
  %2511 = getelementptr inbounds %0, %0* %2510, i64 0
  %2512 = bitcast %0* %2511 to %1**
  %2513 = load %1*, %1** %2512, align 8
  %2514 = call %1* @339(i32 10, %1* %2509, %1* %2513)
  %2515 = bitcast %0* %17 to %1**
  store %1* %2514, %1** %2515, align 8
  br label %3917

2516:                                             ; preds = %268
  %2517 = load %0*, %0** %12, align 8
  %2518 = getelementptr inbounds %0, %0* %2517, i64 -2
  %2519 = bitcast %0* %2518 to %1**
  %2520 = load %1*, %1** %2519, align 8
  %2521 = load %0*, %0** %12, align 8
  %2522 = getelementptr inbounds %0, %0* %2521, i64 0
  %2523 = bitcast %0* %2522 to %1**
  %2524 = load %1*, %1** %2523, align 8
  %2525 = call %1* @339(i32 11, %1* %2520, %1* %2524)
  %2526 = bitcast %0* %17 to %1**
  store %1* %2525, %1** %2526, align 8
  br label %3917

2527:                                             ; preds = %268
  %2528 = load %0*, %0** %12, align 8
  %2529 = getelementptr inbounds %0, %0* %2528, i64 -2
  %2530 = bitcast %0* %2529 to %1**
  %2531 = load %1*, %1** %2530, align 8
  %2532 = load %0*, %0** %12, align 8
  %2533 = getelementptr inbounds %0, %0* %2532, i64 0
  %2534 = bitcast %0* %2533 to %1**
  %2535 = load %1*, %1** %2534, align 8
  %2536 = call %1* @339(i32 8, %1* %2531, %1* %2535)
  %2537 = bitcast %0* %17 to %1**
  store %1* %2536, %1** %2537, align 8
  br label %3917

2538:                                             ; preds = %268
  %2539 = load %0*, %0** %12, align 8
  %2540 = getelementptr inbounds %0, %0* %2539, i64 -2
  %2541 = bitcast %0* %2540 to %1**
  %2542 = load %1*, %1** %2541, align 8
  %2543 = load %0*, %0** %12, align 8
  %2544 = getelementptr inbounds %0, %0* %2543, i64 0
  %2545 = bitcast %0* %2544 to %1**
  %2546 = load %1*, %1** %2545, align 8
  %2547 = call %1* @339(i32 1, %1* %2542, %1* %2546)
  %2548 = bitcast %0* %17 to %1**
  store %1* %2547, %1** %2548, align 8
  br label %3917

2549:                                             ; preds = %268
  %2550 = load %0*, %0** %12, align 8
  %2551 = getelementptr inbounds %0, %0* %2550, i64 -2
  %2552 = bitcast %0* %2551 to %1**
  %2553 = load %1*, %1** %2552, align 8
  %2554 = load %0*, %0** %12, align 8
  %2555 = getelementptr inbounds %0, %0* %2554, i64 0
  %2556 = bitcast %0* %2555 to %1**
  %2557 = load %1*, %1** %2556, align 8
  %2558 = call %1* @339(i32 2, %1* %2553, %1* %2557)
  %2559 = bitcast %0* %17 to %1**
  store %1* %2558, %1** %2559, align 8
  br label %3917

2560:                                             ; preds = %268
  %2561 = load %0*, %0** %12, align 8
  %2562 = getelementptr inbounds %0, %0* %2561, i64 -2
  %2563 = bitcast %0* %2562 to %1**
  %2564 = load %1*, %1** %2563, align 8
  %2565 = load %0*, %0** %12, align 8
  %2566 = getelementptr inbounds %0, %0* %2565, i64 0
  %2567 = bitcast %0* %2566 to %1**
  %2568 = load %1*, %1** %2567, align 8
  %2569 = call %1* @339(i32 3, %1* %2564, %1* %2568)
  %2570 = bitcast %0* %17 to %1**
  store %1* %2569, %1** %2570, align 8
  br label %3917

2571:                                             ; preds = %268
  %2572 = load %0*, %0** %12, align 8
  %2573 = getelementptr inbounds %0, %0* %2572, i64 -2
  %2574 = bitcast %0* %2573 to %1**
  %2575 = load %1*, %1** %2574, align 8
  %2576 = load %0*, %0** %12, align 8
  %2577 = getelementptr inbounds %0, %0* %2576, i64 0
  %2578 = bitcast %0* %2577 to %1**
  %2579 = load %1*, %1** %2578, align 8
  %2580 = call %1* @339(i32 166, %1* %2575, %1* %2579)
  %2581 = bitcast %0* %17 to %1**
  store %1* %2580, %1** %2581, align 8
  br label %3917

2582:                                             ; preds = %268
  %2583 = load %0*, %0** %12, align 8
  %2584 = getelementptr inbounds %0, %0* %2583, i64 -2
  %2585 = bitcast %0* %2584 to %1**
  %2586 = load %1*, %1** %2585, align 8
  %2587 = load %0*, %0** %12, align 8
  %2588 = getelementptr inbounds %0, %0* %2587, i64 0
  %2589 = bitcast %0* %2588 to %1**
  %2590 = load %1*, %1** %2589, align 8
  %2591 = call %1* @339(i32 4, %1* %2586, %1* %2590)
  %2592 = bitcast %0* %17 to %1**
  store %1* %2591, %1** %2592, align 8
  br label %3917

2593:                                             ; preds = %268
  %2594 = load %0*, %0** %12, align 8
  %2595 = getelementptr inbounds %0, %0* %2594, i64 -2
  %2596 = bitcast %0* %2595 to %1**
  %2597 = load %1*, %1** %2596, align 8
  %2598 = load %0*, %0** %12, align 8
  %2599 = getelementptr inbounds %0, %0* %2598, i64 0
  %2600 = bitcast %0* %2599 to %1**
  %2601 = load %1*, %1** %2600, align 8
  %2602 = call %1* @339(i32 5, %1* %2597, %1* %2601)
  %2603 = bitcast %0* %17 to %1**
  store %1* %2602, %1** %2603, align 8
  br label %3917

2604:                                             ; preds = %268
  %2605 = load %0*, %0** %12, align 8
  %2606 = getelementptr inbounds %0, %0* %2605, i64 -2
  %2607 = bitcast %0* %2606 to %1**
  %2608 = load %1*, %1** %2607, align 8
  %2609 = load %0*, %0** %12, align 8
  %2610 = getelementptr inbounds %0, %0* %2609, i64 0
  %2611 = bitcast %0* %2610 to %1**
  %2612 = load %1*, %1** %2611, align 8
  %2613 = call %1* @339(i32 6, %1* %2608, %1* %2612)
  %2614 = bitcast %0* %17 to %1**
  store %1* %2613, %1** %2614, align 8
  br label %3917

2615:                                             ; preds = %268
  %2616 = load %0*, %0** %12, align 8
  %2617 = getelementptr inbounds %0, %0* %2616, i64 -2
  %2618 = bitcast %0* %2617 to %1**
  %2619 = load %1*, %1** %2618, align 8
  %2620 = load %0*, %0** %12, align 8
  %2621 = getelementptr inbounds %0, %0* %2620, i64 0
  %2622 = bitcast %0* %2621 to %1**
  %2623 = load %1*, %1** %2622, align 8
  %2624 = call %1* @339(i32 7, %1* %2619, %1* %2623)
  %2625 = bitcast %0* %17 to %1**
  store %1* %2624, %1** %2625, align 8
  br label %3917

2626:                                             ; preds = %268
  %2627 = load %0*, %0** %12, align 8
  %2628 = getelementptr inbounds %0, %0* %2627, i64 0
  %2629 = bitcast %0* %2628 to %1**
  %2630 = load %1*, %1** %2629, align 8
  %2631 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 259, %1* %2630)
  %2632 = bitcast %0* %17 to %1**
  store %1* %2631, %1** %2632, align 8
  br label %3917

2633:                                             ; preds = %268
  %2634 = load %0*, %0** %12, align 8
  %2635 = getelementptr inbounds %0, %0* %2634, i64 0
  %2636 = bitcast %0* %2635 to %1**
  %2637 = load %1*, %1** %2636, align 8
  %2638 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 260, %1* %2637)
  %2639 = bitcast %0* %17 to %1**
  store %1* %2638, %1** %2639, align 8
  br label %3917

2640:                                             ; preds = %268
  %2641 = load %0*, %0** %12, align 8
  %2642 = getelementptr inbounds %0, %0* %2641, i64 0
  %2643 = bitcast %0* %2642 to %1**
  %2644 = load %1*, %1** %2643, align 8
  %2645 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 270, i16 zeroext 13, %1* %2644)
  %2646 = bitcast %0* %17 to %1**
  store %1* %2645, %1** %2646, align 8
  br label %3917

2647:                                             ; preds = %268
  %2648 = load %0*, %0** %12, align 8
  %2649 = getelementptr inbounds %0, %0* %2648, i64 0
  %2650 = bitcast %0* %2649 to %1**
  %2651 = load %1*, %1** %2650, align 8
  %2652 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 270, i16 zeroext 12, %1* %2651)
  %2653 = bitcast %0* %17 to %1**
  store %1* %2652, %1** %2653, align 8
  br label %3917

2654:                                             ; preds = %268
  %2655 = load %0*, %0** %12, align 8
  %2656 = getelementptr inbounds %0, %0* %2655, i64 -2
  %2657 = bitcast %0* %2656 to %1**
  %2658 = load %1*, %1** %2657, align 8
  %2659 = load %0*, %0** %12, align 8
  %2660 = getelementptr inbounds %0, %0* %2659, i64 0
  %2661 = bitcast %0* %2660 to %1**
  %2662 = load %1*, %1** %2661, align 8
  %2663 = call %1* @339(i32 15, %1* %2658, %1* %2662)
  %2664 = bitcast %0* %17 to %1**
  store %1* %2663, %1** %2664, align 8
  br label %3917

2665:                                             ; preds = %268
  %2666 = load %0*, %0** %12, align 8
  %2667 = getelementptr inbounds %0, %0* %2666, i64 -2
  %2668 = bitcast %0* %2667 to %1**
  %2669 = load %1*, %1** %2668, align 8
  %2670 = load %0*, %0** %12, align 8
  %2671 = getelementptr inbounds %0, %0* %2670, i64 0
  %2672 = bitcast %0* %2671 to %1**
  %2673 = load %1*, %1** %2672, align 8
  %2674 = call %1* @339(i32 16, %1* %2669, %1* %2673)
  %2675 = bitcast %0* %17 to %1**
  store %1* %2674, %1** %2675, align 8
  br label %3917

2676:                                             ; preds = %268
  %2677 = load %0*, %0** %12, align 8
  %2678 = getelementptr inbounds %0, %0* %2677, i64 -2
  %2679 = bitcast %0* %2678 to %1**
  %2680 = load %1*, %1** %2679, align 8
  %2681 = load %0*, %0** %12, align 8
  %2682 = getelementptr inbounds %0, %0* %2681, i64 0
  %2683 = bitcast %0* %2682 to %1**
  %2684 = load %1*, %1** %2683, align 8
  %2685 = call %1* @339(i32 17, %1* %2680, %1* %2684)
  %2686 = bitcast %0* %17 to %1**
  store %1* %2685, %1** %2686, align 8
  br label %3917

2687:                                             ; preds = %268
  %2688 = load %0*, %0** %12, align 8
  %2689 = getelementptr inbounds %0, %0* %2688, i64 -2
  %2690 = bitcast %0* %2689 to %1**
  %2691 = load %1*, %1** %2690, align 8
  %2692 = load %0*, %0** %12, align 8
  %2693 = getelementptr inbounds %0, %0* %2692, i64 0
  %2694 = bitcast %0* %2693 to %1**
  %2695 = load %1*, %1** %2694, align 8
  %2696 = call %1* @339(i32 18, %1* %2691, %1* %2695)
  %2697 = bitcast %0* %17 to %1**
  store %1* %2696, %1** %2697, align 8
  br label %3917

2698:                                             ; preds = %268
  %2699 = load %0*, %0** %12, align 8
  %2700 = getelementptr inbounds %0, %0* %2699, i64 -2
  %2701 = bitcast %0* %2700 to %1**
  %2702 = load %1*, %1** %2701, align 8
  %2703 = load %0*, %0** %12, align 8
  %2704 = getelementptr inbounds %0, %0* %2703, i64 0
  %2705 = bitcast %0* %2704 to %1**
  %2706 = load %1*, %1** %2705, align 8
  %2707 = call %1* @339(i32 19, %1* %2702, %1* %2706)
  %2708 = bitcast %0* %17 to %1**
  store %1* %2707, %1** %2708, align 8
  br label %3917

2709:                                             ; preds = %268
  %2710 = load %0*, %0** %12, align 8
  %2711 = getelementptr inbounds %0, %0* %2710, i64 -2
  %2712 = bitcast %0* %2711 to %1**
  %2713 = load %1*, %1** %2712, align 8
  %2714 = load %0*, %0** %12, align 8
  %2715 = getelementptr inbounds %0, %0* %2714, i64 0
  %2716 = bitcast %0* %2715 to %1**
  %2717 = load %1*, %1** %2716, align 8
  %2718 = call %1* @339(i32 20, %1* %2713, %1* %2717)
  %2719 = bitcast %0* %17 to %1**
  store %1* %2718, %1** %2719, align 8
  br label %3917

2720:                                             ; preds = %268
  %2721 = load %0*, %0** %12, align 8
  %2722 = getelementptr inbounds %0, %0* %2721, i64 -2
  %2723 = bitcast %0* %2722 to %1**
  %2724 = load %1*, %1** %2723, align 8
  %2725 = load %0*, %0** %12, align 8
  %2726 = getelementptr inbounds %0, %0* %2725, i64 0
  %2727 = bitcast %0* %2726 to %1**
  %2728 = load %1*, %1** %2727, align 8
  %2729 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 521, %1* %2724, %1* %2728)
  %2730 = bitcast %0* %17 to %1**
  store %1* %2729, %1** %2730, align 8
  br label %3917

2731:                                             ; preds = %268
  %2732 = load %0*, %0** %12, align 8
  %2733 = getelementptr inbounds %0, %0* %2732, i64 -2
  %2734 = bitcast %0* %2733 to %1**
  %2735 = load %1*, %1** %2734, align 8
  %2736 = load %0*, %0** %12, align 8
  %2737 = getelementptr inbounds %0, %0* %2736, i64 0
  %2738 = bitcast %0* %2737 to %1**
  %2739 = load %1*, %1** %2738, align 8
  %2740 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 522, %1* %2735, %1* %2739)
  %2741 = bitcast %0* %17 to %1**
  store %1* %2740, %1** %2741, align 8
  br label %3917

2742:                                             ; preds = %268
  %2743 = load %0*, %0** %12, align 8
  %2744 = getelementptr inbounds %0, %0* %2743, i64 -2
  %2745 = bitcast %0* %2744 to %1**
  %2746 = load %1*, %1** %2745, align 8
  %2747 = load %0*, %0** %12, align 8
  %2748 = getelementptr inbounds %0, %0* %2747, i64 0
  %2749 = bitcast %0* %2748 to %1**
  %2750 = load %1*, %1** %2749, align 8
  %2751 = call %1* @339(i32 170, %1* %2746, %1* %2750)
  %2752 = bitcast %0* %17 to %1**
  store %1* %2751, %1** %2752, align 8
  br label %3917

2753:                                             ; preds = %268
  %2754 = load %0*, %0** %12, align 8
  %2755 = getelementptr inbounds %0, %0* %2754, i64 -2
  %2756 = bitcast %0* %2755 to %1**
  %2757 = load %1*, %1** %2756, align 8
  %2758 = load %0*, %0** %12, align 8
  %2759 = getelementptr inbounds %0, %0* %2758, i64 0
  %2760 = bitcast %0* %2759 to %1**
  %2761 = load %1*, %1** %2760, align 8
  %2762 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 527, %1* %2757, %1* %2761)
  %2763 = bitcast %0* %17 to %1**
  store %1* %2762, %1** %2763, align 8
  br label %3917

2764:                                             ; preds = %268
  %2765 = load %0*, %0** %12, align 8
  %2766 = getelementptr inbounds %0, %0* %2765, i64 -1
  %2767 = bitcast %0* %2766 to %1**
  %2768 = load %1*, %1** %2767, align 8
  %2769 = bitcast %0* %17 to %1**
  store %1* %2768, %1** %2769, align 8
  br label %3917

2770:                                             ; preds = %268
  %2771 = load %0*, %0** %12, align 8
  %2772 = getelementptr inbounds %0, %0* %2771, i64 0
  %2773 = bitcast %0* %2772 to %1**
  %2774 = load %1*, %1** %2773, align 8
  %2775 = bitcast %0* %17 to %1**
  store %1* %2774, %1** %2775, align 8
  br label %3917

2776:                                             ; preds = %268
  %2777 = load %0*, %0** %12, align 8
  %2778 = getelementptr inbounds %0, %0* %2777, i64 -4
  %2779 = bitcast %0* %2778 to %1**
  %2780 = load %1*, %1** %2779, align 8
  %2781 = load %0*, %0** %12, align 8
  %2782 = getelementptr inbounds %0, %0* %2781, i64 -2
  %2783 = bitcast %0* %2782 to %1**
  %2784 = load %1*, %1** %2783, align 8
  %2785 = load %0*, %0** %12, align 8
  %2786 = getelementptr inbounds %0, %0* %2785, i64 0
  %2787 = bitcast %0* %2786 to %1**
  %2788 = load %1*, %1** %2787, align 8
  %2789 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 770, %1* %2780, %1* %2784, %1* %2788)
  %2790 = bitcast %0* %17 to %1**
  store %1* %2789, %1** %2790, align 8
  br label %3917

2791:                                             ; preds = %268
  %2792 = load %0*, %0** %12, align 8
  %2793 = getelementptr inbounds %0, %0* %2792, i64 -3
  %2794 = bitcast %0* %2793 to %1**
  %2795 = load %1*, %1** %2794, align 8
  %2796 = load %0*, %0** %12, align 8
  %2797 = getelementptr inbounds %0, %0* %2796, i64 0
  %2798 = bitcast %0* %2797 to %1**
  %2799 = load %1*, %1** %2798, align 8
  %2800 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 770, %1* %2795, i8* null, %1* %2799)
  %2801 = bitcast %0* %17 to %1**
  store %1* %2800, %1** %2801, align 8
  br label %3917

2802:                                             ; preds = %268
  %2803 = load %0*, %0** %12, align 8
  %2804 = getelementptr inbounds %0, %0* %2803, i64 -2
  %2805 = bitcast %0* %2804 to %1**
  %2806 = load %1*, %1** %2805, align 8
  %2807 = load %0*, %0** %12, align 8
  %2808 = getelementptr inbounds %0, %0* %2807, i64 0
  %2809 = bitcast %0* %2808 to %1**
  %2810 = load %1*, %1** %2809, align 8
  %2811 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 529, %1* %2806, %1* %2810)
  %2812 = bitcast %0* %17 to %1**
  store %1* %2811, %1** %2812, align 8
  br label %3917

2813:                                             ; preds = %268
  %2814 = load %0*, %0** %12, align 8
  %2815 = getelementptr inbounds %0, %0* %2814, i64 0
  %2816 = bitcast %0* %2815 to %1**
  %2817 = load %1*, %1** %2816, align 8
  %2818 = bitcast %0* %17 to %1**
  store %1* %2817, %1** %2818, align 8
  br label %3917

2819:                                             ; preds = %268
  %2820 = load %0*, %0** %12, align 8
  %2821 = getelementptr inbounds %0, %0* %2820, i64 0
  %2822 = bitcast %0* %2821 to %1**
  %2823 = load %1*, %1** %2822, align 8
  %2824 = call %1* @340(i32 4, %1* %2823)
  %2825 = bitcast %0* %17 to %1**
  store %1* %2824, %1** %2825, align 8
  br label %3917

2826:                                             ; preds = %268
  %2827 = load %0*, %0** %12, align 8
  %2828 = getelementptr inbounds %0, %0* %2827, i64 0
  %2829 = bitcast %0* %2828 to %1**
  %2830 = load %1*, %1** %2829, align 8
  %2831 = call %1* @340(i32 5, %1* %2830)
  %2832 = bitcast %0* %17 to %1**
  store %1* %2831, %1** %2832, align 8
  br label %3917

2833:                                             ; preds = %268
  %2834 = load %0*, %0** %12, align 8
  %2835 = getelementptr inbounds %0, %0* %2834, i64 0
  %2836 = bitcast %0* %2835 to %1**
  %2837 = load %1*, %1** %2836, align 8
  %2838 = call %1* @340(i32 6, %1* %2837)
  %2839 = bitcast %0* %17 to %1**
  store %1* %2838, %1** %2839, align 8
  br label %3917

2840:                                             ; preds = %268
  %2841 = load %0*, %0** %12, align 8
  %2842 = getelementptr inbounds %0, %0* %2841, i64 0
  %2843 = bitcast %0* %2842 to %1**
  %2844 = load %1*, %1** %2843, align 8
  %2845 = call %1* @340(i32 7, %1* %2844)
  %2846 = bitcast %0* %17 to %1**
  store %1* %2845, %1** %2846, align 8
  br label %3917

2847:                                             ; preds = %268
  %2848 = load %0*, %0** %12, align 8
  %2849 = getelementptr inbounds %0, %0* %2848, i64 0
  %2850 = bitcast %0* %2849 to %1**
  %2851 = load %1*, %1** %2850, align 8
  %2852 = call %1* @340(i32 8, %1* %2851)
  %2853 = bitcast %0* %17 to %1**
  store %1* %2852, %1** %2853, align 8
  br label %3917

2854:                                             ; preds = %268
  %2855 = load %0*, %0** %12, align 8
  %2856 = getelementptr inbounds %0, %0* %2855, i64 0
  %2857 = bitcast %0* %2856 to %1**
  %2858 = load %1*, %1** %2857, align 8
  %2859 = call %1* @340(i32 13, %1* %2858)
  %2860 = bitcast %0* %17 to %1**
  store %1* %2859, %1** %2860, align 8
  br label %3917

2861:                                             ; preds = %268
  %2862 = load %0*, %0** %12, align 8
  %2863 = getelementptr inbounds %0, %0* %2862, i64 0
  %2864 = bitcast %0* %2863 to %1**
  %2865 = load %1*, %1** %2864, align 8
  %2866 = call %1* @340(i32 1, %1* %2865)
  %2867 = bitcast %0* %17 to %1**
  store %1* %2866, %1** %2867, align 8
  br label %3917

2868:                                             ; preds = %268
  %2869 = load %0*, %0** %12, align 8
  %2870 = getelementptr inbounds %0, %0* %2869, i64 0
  %2871 = bitcast %0* %2870 to %1**
  %2872 = load %1*, %1** %2871, align 8
  %2873 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 267, %1* %2872)
  %2874 = bitcast %0* %17 to %1**
  store %1* %2873, %1** %2874, align 8
  br label %3917

2875:                                             ; preds = %268
  %2876 = load %0*, %0** %12, align 8
  %2877 = getelementptr inbounds %0, %0* %2876, i64 0
  %2878 = bitcast %0* %2877 to %1**
  %2879 = load %1*, %1** %2878, align 8
  %2880 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 264, %1* %2879)
  %2881 = bitcast %0* %17 to %1**
  store %1* %2880, %1** %2881, align 8
  br label %3917

2882:                                             ; preds = %268
  %2883 = load %0*, %0** %12, align 8
  %2884 = getelementptr inbounds %0, %0* %2883, i64 0
  %2885 = bitcast %0* %2884 to %1**
  %2886 = load %1*, %1** %2885, align 8
  %2887 = bitcast %0* %17 to %1**
  store %1* %2886, %1** %2887, align 8
  br label %3917

2888:                                             ; preds = %268
  %2889 = load %0*, %0** %12, align 8
  %2890 = getelementptr inbounds %0, %0* %2889, i64 -1
  %2891 = bitcast %0* %2890 to %1**
  %2892 = load %1*, %1** %2891, align 8
  %2893 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 265, %1* %2892)
  %2894 = bitcast %0* %17 to %1**
  store %1* %2893, %1** %2894, align 8
  br label %3917

2895:                                             ; preds = %268
  %2896 = load %0*, %0** %12, align 8
  %2897 = getelementptr inbounds %0, %0* %2896, i64 0
  %2898 = bitcast %0* %2897 to %1**
  %2899 = load %1*, %1** %2898, align 8
  %2900 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 268, %1* %2899)
  %2901 = bitcast %0* %17 to %1**
  store %1* %2900, %1** %2901, align 8
  br label %3917

2902:                                             ; preds = %268
  %2903 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 528, i8* null, i8* null)
  %2904 = bitcast %0* %17 to %1**
  store %1* %2903, %1** %2904, align 8
  %2905 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  %2906 = or i32 %2905, 8388608
  store i32 %2906, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  br label %3917

2907:                                             ; preds = %268
  %2908 = load %0*, %0** %12, align 8
  %2909 = getelementptr inbounds %0, %0* %2908, i64 0
  %2910 = bitcast %0* %2909 to %1**
  %2911 = load %1*, %1** %2910, align 8
  %2912 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 528, %1* %2911, i8* null)
  %2913 = bitcast %0* %17 to %1**
  store %1* %2912, %1** %2913, align 8
  %2914 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  %2915 = or i32 %2914, 8388608
  store i32 %2915, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  br label %3917

2916:                                             ; preds = %268
  %2917 = load %0*, %0** %12, align 8
  %2918 = getelementptr inbounds %0, %0* %2917, i64 0
  %2919 = bitcast %0* %2918 to %1**
  %2920 = load %1*, %1** %2919, align 8
  %2921 = load %0*, %0** %12, align 8
  %2922 = getelementptr inbounds %0, %0* %2921, i64 -2
  %2923 = bitcast %0* %2922 to %1**
  %2924 = load %1*, %1** %2923, align 8
  %2925 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 528, %1* %2920, %1* %2924)
  %2926 = bitcast %0* %17 to %1**
  store %1* %2925, %1** %2926, align 8
  %2927 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  %2928 = or i32 %2927, 8388608
  store i32 %2928, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  br label %3917

2929:                                             ; preds = %268
  %2930 = load %0*, %0** %12, align 8
  %2931 = getelementptr inbounds %0, %0* %2930, i64 0
  %2932 = bitcast %0* %2931 to %1**
  %2933 = load %1*, %1** %2932, align 8
  %2934 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 275, %1* %2933)
  %2935 = bitcast %0* %17 to %1**
  store %1* %2934, %1** %2935, align 8
  %2936 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  %2937 = or i32 %2936, 8388608
  store i32 %2937, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  br label %3917

2938:                                             ; preds = %268
  %2939 = load %0*, %0** %12, align 8
  %2940 = getelementptr inbounds %0, %0* %2939, i64 -11
  %2941 = bitcast %0* %2940 to i64*
  %2942 = load i64, i64* %2941, align 8
  %2943 = load %0*, %0** %12, align 8
  %2944 = getelementptr inbounds %0, %0* %2943, i64 0
  %2945 = bitcast %0* %2944 to i64*
  %2946 = load i64, i64* %2945, align 8
  %2947 = or i64 %2942, %2946
  %2948 = trunc i64 %2947 to i32
  %2949 = load %0*, %0** %12, align 8
  %2950 = getelementptr inbounds %0, %0* %2949, i64 -12
  %2951 = bitcast %0* %2950 to i64*
  %2952 = load i64, i64* %2951, align 8
  %2953 = trunc i64 %2952 to i32
  %2954 = load %0*, %0** %12, align 8
  %2955 = getelementptr inbounds %0, %0* %2954, i64 -10
  %2956 = bitcast %0* %2955 to %34**
  %2957 = load %34*, %34** %2956, align 8
  %2958 = call %34* @341(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @8, i32 0, i32 0), i64 9, i32 0)
  %2959 = load %0*, %0** %12, align 8
  %2960 = getelementptr inbounds %0, %0* %2959, i64 -8
  %2961 = bitcast %0* %2960 to %1**
  %2962 = load %1*, %1** %2961, align 8
  %2963 = load %0*, %0** %12, align 8
  %2964 = getelementptr inbounds %0, %0* %2963, i64 -6
  %2965 = bitcast %0* %2964 to %1**
  %2966 = load %1*, %1** %2965, align 8
  %2967 = load %0*, %0** %12, align 8
  %2968 = getelementptr inbounds %0, %0* %2967, i64 -2
  %2969 = bitcast %0* %2968 to %1**
  %2970 = load %1*, %1** %2969, align 8
  %2971 = load %0*, %0** %12, align 8
  %2972 = getelementptr inbounds %0, %0* %2971, i64 -5
  %2973 = bitcast %0* %2972 to %1**
  %2974 = load %1*, %1** %2973, align 8
  %2975 = call %1* @zend_ast_create_decl(i16 zeroext 67, i32 %2948, i32 %2953, %34* %2957, %34* %2958, %1* %2962, %1* %2966, %1* %2970, %1* %2974)
  %2976 = bitcast %0* %17 to %1**
  store %1* %2975, %1** %2976, align 8
  %2977 = load %0*, %0** %12, align 8
  %2978 = getelementptr inbounds %0, %0* %2977, i64 -4
  %2979 = bitcast %0* %2978 to i64*
  %2980 = load i64, i64* %2979, align 8
  %2981 = trunc i64 %2980 to i32
  store i32 %2981, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  br label %3917

2982:                                             ; preds = %268
  %2983 = load %0*, %0** %12, align 8
  %2984 = getelementptr inbounds %0, %0* %2983, i64 -11
  %2985 = bitcast %0* %2984 to i64*
  %2986 = load i64, i64* %2985, align 8
  %2987 = load %0*, %0** %12, align 8
  %2988 = getelementptr inbounds %0, %0* %2987, i64 0
  %2989 = bitcast %0* %2988 to i64*
  %2990 = load i64, i64* %2989, align 8
  %2991 = or i64 %2986, %2990
  %2992 = or i64 %2991, 1
  %2993 = trunc i64 %2992 to i32
  %2994 = load %0*, %0** %12, align 8
  %2995 = getelementptr inbounds %0, %0* %2994, i64 -12
  %2996 = bitcast %0* %2995 to i64*
  %2997 = load i64, i64* %2996, align 8
  %2998 = trunc i64 %2997 to i32
  %2999 = load %0*, %0** %12, align 8
  %3000 = getelementptr inbounds %0, %0* %2999, i64 -10
  %3001 = bitcast %0* %3000 to %34**
  %3002 = load %34*, %34** %3001, align 8
  %3003 = call %34* @341(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @8, i32 0, i32 0), i64 9, i32 0)
  %3004 = load %0*, %0** %12, align 8
  %3005 = getelementptr inbounds %0, %0* %3004, i64 -8
  %3006 = bitcast %0* %3005 to %1**
  %3007 = load %1*, %1** %3006, align 8
  %3008 = load %0*, %0** %12, align 8
  %3009 = getelementptr inbounds %0, %0* %3008, i64 -6
  %3010 = bitcast %0* %3009 to %1**
  %3011 = load %1*, %1** %3010, align 8
  %3012 = load %0*, %0** %12, align 8
  %3013 = getelementptr inbounds %0, %0* %3012, i64 -2
  %3014 = bitcast %0* %3013 to %1**
  %3015 = load %1*, %1** %3014, align 8
  %3016 = load %0*, %0** %12, align 8
  %3017 = getelementptr inbounds %0, %0* %3016, i64 -5
  %3018 = bitcast %0* %3017 to %1**
  %3019 = load %1*, %1** %3018, align 8
  %3020 = call %1* @zend_ast_create_decl(i16 zeroext 67, i32 %2993, i32 %2998, %34* %3002, %34* %3003, %1* %3007, %1* %3011, %1* %3015, %1* %3019)
  %3021 = bitcast %0* %17 to %1**
  store %1* %3020, %1** %3021, align 8
  %3022 = load %0*, %0** %12, align 8
  %3023 = getelementptr inbounds %0, %0* %3022, i64 -4
  %3024 = bitcast %0* %3023 to i64*
  %3025 = load i64, i64* %3024, align 8
  %3026 = trunc i64 %3025 to i32
  store i32 %3026, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  br label %3917

3027:                                             ; preds = %268
  %3028 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 3), align 8
  %3029 = sext i32 %3028 to i64
  %3030 = bitcast %0* %17 to i64*
  store i64 %3029, i64* %3030, align 8
  br label %3917

3031:                                             ; preds = %268
  %3032 = load %34*, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  %3033 = bitcast %0* %17 to %34**
  store %34* %3032, %34** %3033, align 8
  store %34* null, %34** getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 18), align 8
  br label %3917

3034:                                             ; preds = %268
  %3035 = load i32, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  %3036 = zext i32 %3035 to i64
  %3037 = bitcast %0* %17 to i64*
  store i64 %3036, i64* %3037, align 8
  store i32 0, i32* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 19), align 8
  br label %3917

3038:                                             ; preds = %268
  %3039 = bitcast %0* %17 to i64*
  store i64 0, i64* %3039, align 8
  br label %3917

3040:                                             ; preds = %268
  %3041 = bitcast %0* %17 to i64*
  store i64 67108864, i64* %3041, align 8
  br label %3917

3042:                                             ; preds = %268
  %3043 = bitcast %0* %17 to %1**
  store %1* null, %1** %3043, align 8
  br label %3917

3044:                                             ; preds = %268
  %3045 = load %0*, %0** %12, align 8
  %3046 = getelementptr inbounds %0, %0* %3045, i64 -1
  %3047 = bitcast %0* %3046 to %1**
  %3048 = load %1*, %1** %3047, align 8
  %3049 = bitcast %0* %17 to %1**
  store %1* %3048, %1** %3049, align 8
  br label %3917

3050:                                             ; preds = %268
  %3051 = load %0*, %0** %12, align 8
  %3052 = getelementptr inbounds %0, %0* %3051, i64 -2
  %3053 = bitcast %0* %3052 to %1**
  %3054 = load %1*, %1** %3053, align 8
  %3055 = load %0*, %0** %12, align 8
  %3056 = getelementptr inbounds %0, %0* %3055, i64 0
  %3057 = bitcast %0* %3056 to %1**
  %3058 = load %1*, %1** %3057, align 8
  %3059 = call %1* @zend_ast_list_add(%1* %3054, %1* %3058)
  %3060 = bitcast %0* %17 to %1**
  store %1* %3059, %1** %3060, align 8
  br label %3917

3061:                                             ; preds = %268
  %3062 = load %0*, %0** %12, align 8
  %3063 = getelementptr inbounds %0, %0* %3062, i64 0
  %3064 = bitcast %0* %3063 to %1**
  %3065 = load %1*, %1** %3064, align 8
  %3066 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 137, %1* %3065)
  %3067 = bitcast %0* %17 to %1**
  store %1* %3066, %1** %3067, align 8
  br label %3917

3068:                                             ; preds = %268
  %3069 = load %0*, %0** %12, align 8
  %3070 = getelementptr inbounds %0, %0* %3069, i64 0
  %3071 = bitcast %0* %3070 to %1**
  %3072 = load %1*, %1** %3071, align 8
  %3073 = bitcast %0* %17 to %1**
  store %1* %3072, %1** %3073, align 8
  br label %3917

3074:                                             ; preds = %268
  %3075 = load %0*, %0** %12, align 8
  %3076 = getelementptr inbounds %0, %0* %3075, i64 0
  %3077 = bitcast %0* %3076 to %1**
  %3078 = load %1*, %1** %3077, align 8
  %3079 = bitcast %0* %17 to %1**
  store %1* %3078, %1** %3079, align 8
  %3080 = bitcast %0* %17 to %1**
  %3081 = load %1*, %1** %3080, align 8
  %3082 = getelementptr inbounds %1, %1* %3081, i32 0, i32 1
  store i16 1, i16* %3082, align 2
  br label %3917

3083:                                             ; preds = %268
  %3084 = load %0*, %0** %12, align 8
  %3085 = getelementptr inbounds %0, %0* %3084, i64 -1
  %3086 = bitcast %0* %3085 to %1**
  %3087 = load %1*, %1** %3086, align 8
  %3088 = load %0*, %0** %12, align 8
  %3089 = getelementptr inbounds %0, %0* %3088, i64 0
  %3090 = bitcast %0* %3089 to %1**
  %3091 = load %1*, %1** %3090, align 8
  %3092 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 515, %1* %3087, %1* %3091)
  %3093 = bitcast %0* %17 to %1**
  store %1* %3092, %1** %3093, align 8
  br label %3917

3094:                                             ; preds = %268
  %3095 = load %0*, %0** %12, align 8
  %3096 = getelementptr inbounds %0, %0* %3095, i64 -3
  %3097 = bitcast %0* %3096 to %1**
  %3098 = load %1*, %1** %3097, align 8
  %3099 = load %0*, %0** %12, align 8
  %3100 = getelementptr inbounds %0, %0* %3099, i64 -1
  %3101 = bitcast %0* %3100 to %1**
  %3102 = load %1*, %1** %3101, align 8
  %3103 = load %0*, %0** %12, align 8
  %3104 = getelementptr inbounds %0, %0* %3103, i64 0
  %3105 = bitcast %0* %3104 to %1**
  %3106 = load %1*, %1** %3105, align 8
  %3107 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 769, %1* %3098, %1* %3102, %1* %3106)
  %3108 = bitcast %0* %17 to %1**
  store %1* %3107, %1** %3108, align 8
  br label %3917

3109:                                             ; preds = %268
  %3110 = load %0*, %0** %12, align 8
  %3111 = getelementptr inbounds %0, %0* %3110, i64 -3
  %3112 = bitcast %0* %3111 to %1**
  %3113 = load %1*, %1** %3112, align 8
  %3114 = load %0*, %0** %12, align 8
  %3115 = getelementptr inbounds %0, %0* %3114, i64 -1
  %3116 = bitcast %0* %3115 to %1**
  %3117 = load %1*, %1** %3116, align 8
  %3118 = load %0*, %0** %12, align 8
  %3119 = getelementptr inbounds %0, %0* %3118, i64 0
  %3120 = bitcast %0* %3119 to %1**
  %3121 = load %1*, %1** %3120, align 8
  %3122 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 769, %1* %3113, %1* %3117, %1* %3121)
  %3123 = bitcast %0* %17 to %1**
  store %1* %3122, %1** %3123, align 8
  br label %3917

3124:                                             ; preds = %268
  %3125 = load %0*, %0** %12, align 8
  %3126 = getelementptr inbounds %0, %0* %3125, i64 -1
  %3127 = bitcast %0* %3126 to %1**
  %3128 = load %1*, %1** %3127, align 8
  %3129 = load %0*, %0** %12, align 8
  %3130 = getelementptr inbounds %0, %0* %3129, i64 0
  %3131 = bitcast %0* %3130 to %1**
  %3132 = load %1*, %1** %3131, align 8
  %3133 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 515, %1* %3128, %1* %3132)
  %3134 = bitcast %0* %17 to %1**
  store %1* %3133, %1** %3134, align 8
  br label %3917

3135:                                             ; preds = %268
  %3136 = bitcast %4* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %3136) #9
  br label %3137

3137:                                             ; preds = %3135
  %3138 = bitcast %4** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3138) #9
  store %4* %31, %4** %32, align 8
  %3139 = bitcast %34** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3139) #9
  %3140 = load %34**, %34*** @zend_known_strings, align 8
  %3141 = getelementptr inbounds %34*, %34** %3140, i64 17
  %3142 = load %34*, %34** %3141, align 8
  store %34* %3142, %34** %33, align 8
  %3143 = load %34*, %34** %33, align 8
  %3144 = load %4*, %4** %32, align 8
  %3145 = getelementptr inbounds %4, %4* %3144, i32 0, i32 0
  %3146 = bitcast %5* %3145 to %34**
  store %34* %3143, %34** %3146, align 8
  %3147 = load %4*, %4** %32, align 8
  %3148 = getelementptr inbounds %4, %4* %3147, i32 0, i32 1
  %3149 = bitcast %6* %3148 to i32*
  store i32 6, i32* %3149, align 8
  %3150 = bitcast %34** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3150) #9
  %3151 = bitcast %4** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3151) #9
  br label %3152

3152:                                             ; preds = %3137
  br label %3153

3153:                                             ; preds = %3152
  %3154 = call %1* @zend_ast_create_zval_ex(%4* %31, i16 zeroext 1)
  %3155 = bitcast %0* %17 to %1**
  store %1* %3154, %1** %3155, align 8
  %3156 = bitcast %4* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %3156) #9
  br label %3917

3157:                                             ; preds = %268
  %3158 = load %0*, %0** %12, align 8
  %3159 = getelementptr inbounds %0, %0* %3158, i64 0
  %3160 = bitcast %0* %3159 to %1**
  %3161 = load %1*, %1** %3160, align 8
  %3162 = bitcast %0* %17 to %1**
  store %1* %3161, %1** %3162, align 8
  br label %3917

3163:                                             ; preds = %268
  %3164 = load %0*, %0** %12, align 8
  %3165 = getelementptr inbounds %0, %0* %3164, i64 0
  %3166 = bitcast %0* %3165 to %1**
  %3167 = load %1*, %1** %3166, align 8
  %3168 = bitcast %0* %17 to %1**
  store %1* %3167, %1** %3168, align 8
  br label %3917

3169:                                             ; preds = %268
  %3170 = load %0*, %0** %12, align 8
  %3171 = getelementptr inbounds %0, %0* %3170, i64 0
  %3172 = bitcast %0* %3171 to %1**
  %3173 = load %1*, %1** %3172, align 8
  %3174 = bitcast %0* %17 to %1**
  store %1* %3173, %1** %3174, align 8
  br label %3917

3175:                                             ; preds = %268
  %3176 = bitcast %0* %17 to %1**
  store %1* null, %1** %3176, align 8
  br label %3917

3177:                                             ; preds = %268
  %3178 = load %0*, %0** %12, align 8
  %3179 = getelementptr inbounds %0, %0* %3178, i64 -1
  %3180 = bitcast %0* %3179 to %1**
  %3181 = load %1*, %1** %3180, align 8
  %3182 = bitcast %0* %17 to %1**
  store %1* %3181, %1** %3182, align 8
  br label %3917

3183:                                             ; preds = %268
  %3184 = load %34*, %34** @zend_empty_string, align 8
  %3185 = call %1* @337(%34* %3184)
  %3186 = bitcast %0* %17 to %1**
  store %1* %3185, %1** %3186, align 8
  br label %3917

3187:                                             ; preds = %268
  %3188 = load %0*, %0** %12, align 8
  %3189 = getelementptr inbounds %0, %0* %3188, i64 0
  %3190 = bitcast %0* %3189 to %1**
  %3191 = load %1*, %1** %3190, align 8
  %3192 = bitcast %0* %17 to %1**
  store %1* %3191, %1** %3192, align 8
  br label %3917

3193:                                             ; preds = %268
  %3194 = load %0*, %0** %12, align 8
  %3195 = getelementptr inbounds %0, %0* %3194, i64 0
  %3196 = bitcast %0* %3195 to %1**
  %3197 = load %1*, %1** %3196, align 8
  %3198 = bitcast %0* %17 to %1**
  store %1* %3197, %1** %3198, align 8
  br label %3917

3199:                                             ; preds = %268
  %3200 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 0, i16 zeroext 128)
  %3201 = bitcast %0* %17 to %1**
  store %1* %3200, %1** %3201, align 8
  br label %3917

3202:                                             ; preds = %268
  %3203 = load %0*, %0** %12, align 8
  %3204 = getelementptr inbounds %0, %0* %3203, i64 0
  %3205 = bitcast %0* %3204 to %1**
  %3206 = load %1*, %1** %3205, align 8
  %3207 = bitcast %0* %17 to %1**
  store %1* %3206, %1** %3207, align 8
  br label %3917

3208:                                             ; preds = %268
  %3209 = load %0*, %0** %12, align 8
  %3210 = getelementptr inbounds %0, %0* %3209, i64 -1
  %3211 = bitcast %0* %3210 to %1**
  %3212 = load %1*, %1** %3211, align 8
  %3213 = bitcast %0* %17 to %1**
  store %1* %3212, %1** %3213, align 8
  %3214 = bitcast %0* %17 to %1**
  %3215 = load %1*, %1** %3214, align 8
  %3216 = getelementptr inbounds %1, %1* %3215, i32 0, i32 1
  store i16 2, i16* %3216, align 2
  br label %3917

3217:                                             ; preds = %268
  %3218 = load %0*, %0** %12, align 8
  %3219 = getelementptr inbounds %0, %0* %3218, i64 -1
  %3220 = bitcast %0* %3219 to %1**
  %3221 = load %1*, %1** %3220, align 8
  %3222 = bitcast %0* %17 to %1**
  store %1* %3221, %1** %3222, align 8
  %3223 = bitcast %0* %17 to %1**
  %3224 = load %1*, %1** %3223, align 8
  %3225 = getelementptr inbounds %1, %1* %3224, i32 0, i32 1
  store i16 3, i16* %3225, align 2
  br label %3917

3226:                                             ; preds = %268
  %3227 = load %0*, %0** %12, align 8
  %3228 = getelementptr inbounds %0, %0* %3227, i64 0
  %3229 = bitcast %0* %3228 to %1**
  %3230 = load %1*, %1** %3229, align 8
  %3231 = bitcast %0* %17 to %1**
  store %1* %3230, %1** %3231, align 8
  br label %3917

3232:                                             ; preds = %268
  %3233 = load %0*, %0** %12, align 8
  %3234 = getelementptr inbounds %0, %0* %3233, i64 0
  %3235 = bitcast %0* %3234 to %1**
  %3236 = load %1*, %1** %3235, align 8
  %3237 = bitcast %0* %17 to %1**
  store %1* %3236, %1** %3237, align 8
  br label %3917

3238:                                             ; preds = %268
  %3239 = load %0*, %0** %12, align 8
  %3240 = getelementptr inbounds %0, %0* %3239, i64 0
  %3241 = bitcast %0* %3240 to %1**
  %3242 = load %1*, %1** %3241, align 8
  %3243 = bitcast %0* %17 to %1**
  store %1* %3242, %1** %3243, align 8
  br label %3917

3244:                                             ; preds = %268
  %3245 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 0, i16 zeroext 370)
  %3246 = bitcast %0* %17 to %1**
  store %1* %3245, %1** %3246, align 8
  br label %3917

3247:                                             ; preds = %268
  %3248 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 0, i16 zeroext 371)
  %3249 = bitcast %0* %17 to %1**
  store %1* %3248, %1** %3249, align 8
  br label %3917

3250:                                             ; preds = %268
  %3251 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 0, i16 zeroext 372)
  %3252 = bitcast %0* %17 to %1**
  store %1* %3251, %1** %3252, align 8
  br label %3917

3253:                                             ; preds = %268
  %3254 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 0, i16 zeroext 374)
  %3255 = bitcast %0* %17 to %1**
  store %1* %3254, %1** %3255, align 8
  br label %3917

3256:                                             ; preds = %268
  %3257 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 0, i16 zeroext 375)
  %3258 = bitcast %0* %17 to %1**
  store %1* %3257, %1** %3258, align 8
  br label %3917

3259:                                             ; preds = %268
  %3260 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 0, i16 zeroext 376)
  %3261 = bitcast %0* %17 to %1**
  store %1* %3260, %1** %3261, align 8
  br label %3917

3262:                                             ; preds = %268
  %3263 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 0, i16 zeroext 389)
  %3264 = bitcast %0* %17 to %1**
  store %1* %3263, %1** %3264, align 8
  br label %3917

3265:                                             ; preds = %268
  %3266 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 0, i16 zeroext 373)
  %3267 = bitcast %0* %17 to %1**
  store %1* %3266, %1** %3267, align 8
  br label %3917

3268:                                             ; preds = %268
  %3269 = load %0*, %0** %12, align 8
  %3270 = getelementptr inbounds %0, %0* %3269, i64 -1
  %3271 = bitcast %0* %3270 to %1**
  %3272 = load %1*, %1** %3271, align 8
  %3273 = bitcast %0* %17 to %1**
  store %1* %3272, %1** %3273, align 8
  br label %3917

3274:                                             ; preds = %268
  %3275 = load %34*, %34** @zend_empty_string, align 8
  %3276 = call %1* @337(%34* %3275)
  %3277 = bitcast %0* %17 to %1**
  store %1* %3276, %1** %3277, align 8
  br label %3917

3278:                                             ; preds = %268
  %3279 = load %0*, %0** %12, align 8
  %3280 = getelementptr inbounds %0, %0* %3279, i64 -1
  %3281 = bitcast %0* %3280 to %1**
  %3282 = load %1*, %1** %3281, align 8
  %3283 = bitcast %0* %17 to %1**
  store %1* %3282, %1** %3283, align 8
  br label %3917

3284:                                             ; preds = %268
  %3285 = load %0*, %0** %12, align 8
  %3286 = getelementptr inbounds %0, %0* %3285, i64 -1
  %3287 = bitcast %0* %3286 to %1**
  %3288 = load %1*, %1** %3287, align 8
  %3289 = bitcast %0* %17 to %1**
  store %1* %3288, %1** %3289, align 8
  br label %3917

3290:                                             ; preds = %268
  %3291 = load %0*, %0** %12, align 8
  %3292 = getelementptr inbounds %0, %0* %3291, i64 0
  %3293 = bitcast %0* %3292 to %1**
  %3294 = load %1*, %1** %3293, align 8
  %3295 = bitcast %0* %17 to %1**
  store %1* %3294, %1** %3295, align 8
  br label %3917

3296:                                             ; preds = %268
  %3297 = load %0*, %0** %12, align 8
  %3298 = getelementptr inbounds %0, %0* %3297, i64 0
  %3299 = bitcast %0* %3298 to %1**
  %3300 = load %1*, %1** %3299, align 8
  %3301 = bitcast %0* %17 to %1**
  store %1* %3300, %1** %3301, align 8
  br label %3917

3302:                                             ; preds = %268
  %3303 = load %0*, %0** %12, align 8
  %3304 = getelementptr inbounds %0, %0* %3303, i64 0
  %3305 = bitcast %0* %3304 to %1**
  %3306 = load %1*, %1** %3305, align 8
  %3307 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 257, %1* %3306)
  %3308 = bitcast %0* %17 to %1**
  store %1* %3307, %1** %3308, align 8
  br label %3917

3309:                                             ; preds = %268
  %3310 = load %0*, %0** %12, align 8
  %3311 = getelementptr inbounds %0, %0* %3310, i64 -2
  %3312 = bitcast %0* %3311 to %1**
  %3313 = load %1*, %1** %3312, align 8
  %3314 = load %0*, %0** %12, align 8
  %3315 = getelementptr inbounds %0, %0* %3314, i64 0
  %3316 = bitcast %0* %3315 to %1**
  %3317 = load %1*, %1** %3316, align 8
  %3318 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 516, %1* %3313, %1* %3317)
  %3319 = bitcast %0* %17 to %1**
  store %1* %3318, %1** %3319, align 8
  br label %3917

3320:                                             ; preds = %268
  %3321 = load %0*, %0** %12, align 8
  %3322 = getelementptr inbounds %0, %0* %3321, i64 -2
  %3323 = bitcast %0* %3322 to %1**
  %3324 = load %1*, %1** %3323, align 8
  %3325 = load %0*, %0** %12, align 8
  %3326 = getelementptr inbounds %0, %0* %3325, i64 0
  %3327 = bitcast %0* %3326 to %1**
  %3328 = load %1*, %1** %3327, align 8
  %3329 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 516, %1* %3324, %1* %3328)
  %3330 = bitcast %0* %17 to %1**
  store %1* %3329, %1** %3330, align 8
  br label %3917

3331:                                             ; preds = %268
  %3332 = load %0*, %0** %12, align 8
  %3333 = getelementptr inbounds %0, %0* %3332, i64 0
  %3334 = bitcast %0* %3333 to %1**
  %3335 = load %1*, %1** %3334, align 8
  %3336 = bitcast %0* %17 to %1**
  store %1* %3335, %1** %3336, align 8
  br label %3917

3337:                                             ; preds = %268
  %3338 = load %0*, %0** %12, align 8
  %3339 = getelementptr inbounds %0, %0* %3338, i64 0
  %3340 = bitcast %0* %3339 to %1**
  %3341 = load %1*, %1** %3340, align 8
  %3342 = bitcast %0* %17 to %1**
  store %1* %3341, %1** %3342, align 8
  br label %3917

3343:                                             ; preds = %268
  %3344 = bitcast %0* %17 to %1**
  store %1* null, %1** %3344, align 8
  br label %3917

3345:                                             ; preds = %268
  %3346 = load %0*, %0** %12, align 8
  %3347 = getelementptr inbounds %0, %0* %3346, i64 0
  %3348 = bitcast %0* %3347 to %1**
  %3349 = load %1*, %1** %3348, align 8
  %3350 = bitcast %0* %17 to %1**
  store %1* %3349, %1** %3350, align 8
  br label %3917

3351:                                             ; preds = %268
  %3352 = load %0*, %0** %12, align 8
  %3353 = getelementptr inbounds %0, %0* %3352, i64 0
  %3354 = bitcast %0* %3353 to %1**
  %3355 = load %1*, %1** %3354, align 8
  %3356 = bitcast %0* %17 to %1**
  store %1* %3355, %1** %3356, align 8
  br label %3917

3357:                                             ; preds = %268
  %3358 = load %0*, %0** %12, align 8
  %3359 = getelementptr inbounds %0, %0* %3358, i64 0
  %3360 = bitcast %0* %3359 to %1**
  %3361 = load %1*, %1** %3360, align 8
  %3362 = bitcast %0* %17 to %1**
  store %1* %3361, %1** %3362, align 8
  br label %3917

3363:                                             ; preds = %268
  %3364 = load %0*, %0** %12, align 8
  %3365 = getelementptr inbounds %0, %0* %3364, i64 -1
  %3366 = bitcast %0* %3365 to %1**
  %3367 = load %1*, %1** %3366, align 8
  %3368 = bitcast %0* %17 to %1**
  store %1* %3367, %1** %3368, align 8
  br label %3917

3369:                                             ; preds = %268
  %3370 = load %0*, %0** %12, align 8
  %3371 = getelementptr inbounds %0, %0* %3370, i64 0
  %3372 = bitcast %0* %3371 to %1**
  %3373 = load %1*, %1** %3372, align 8
  %3374 = bitcast %0* %17 to %1**
  store %1* %3373, %1** %3374, align 8
  br label %3917

3375:                                             ; preds = %268
  %3376 = load %0*, %0** %12, align 8
  %3377 = getelementptr inbounds %0, %0* %3376, i64 0
  %3378 = bitcast %0* %3377 to %1**
  %3379 = load %1*, %1** %3378, align 8
  %3380 = bitcast %0* %17 to %1**
  store %1* %3379, %1** %3380, align 8
  br label %3917

3381:                                             ; preds = %268
  %3382 = load %0*, %0** %12, align 8
  %3383 = getelementptr inbounds %0, %0* %3382, i64 -1
  %3384 = bitcast %0* %3383 to %1**
  %3385 = load %1*, %1** %3384, align 8
  %3386 = bitcast %0* %17 to %1**
  store %1* %3385, %1** %3386, align 8
  br label %3917

3387:                                             ; preds = %268
  %3388 = load %0*, %0** %12, align 8
  %3389 = getelementptr inbounds %0, %0* %3388, i64 0
  %3390 = bitcast %0* %3389 to %1**
  %3391 = load %1*, %1** %3390, align 8
  %3392 = bitcast %0* %17 to %1**
  store %1* %3391, %1** %3392, align 8
  br label %3917

3393:                                             ; preds = %268
  %3394 = load %0*, %0** %12, align 8
  %3395 = getelementptr inbounds %0, %0* %3394, i64 0
  %3396 = bitcast %0* %3395 to %1**
  %3397 = load %1*, %1** %3396, align 8
  %3398 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3397)
  %3399 = bitcast %0* %17 to %1**
  store %1* %3398, %1** %3399, align 8
  br label %3917

3400:                                             ; preds = %268
  %3401 = load %0*, %0** %12, align 8
  %3402 = getelementptr inbounds %0, %0* %3401, i64 -3
  %3403 = bitcast %0* %3402 to %1**
  %3404 = load %1*, %1** %3403, align 8
  %3405 = load %0*, %0** %12, align 8
  %3406 = getelementptr inbounds %0, %0* %3405, i64 -1
  %3407 = bitcast %0* %3406 to %1**
  %3408 = load %1*, %1** %3407, align 8
  %3409 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 512, %1* %3404, %1* %3408)
  %3410 = bitcast %0* %17 to %1**
  store %1* %3409, %1** %3410, align 8
  br label %3917

3411:                                             ; preds = %268
  %3412 = load %0*, %0** %12, align 8
  %3413 = getelementptr inbounds %0, %0* %3412, i64 -3
  %3414 = bitcast %0* %3413 to %1**
  %3415 = load %1*, %1** %3414, align 8
  %3416 = load %0*, %0** %12, align 8
  %3417 = getelementptr inbounds %0, %0* %3416, i64 -1
  %3418 = bitcast %0* %3417 to %1**
  %3419 = load %1*, %1** %3418, align 8
  %3420 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 512, %1* %3415, %1* %3419)
  %3421 = bitcast %0* %17 to %1**
  store %1* %3420, %1** %3421, align 8
  br label %3917

3422:                                             ; preds = %268
  %3423 = load %0*, %0** %12, align 8
  %3424 = getelementptr inbounds %0, %0* %3423, i64 -3
  %3425 = bitcast %0* %3424 to %1**
  %3426 = load %1*, %1** %3425, align 8
  %3427 = load %0*, %0** %12, align 8
  %3428 = getelementptr inbounds %0, %0* %3427, i64 -1
  %3429 = bitcast %0* %3428 to %1**
  %3430 = load %1*, %1** %3429, align 8
  %3431 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 512, %1* %3426, %1* %3430)
  %3432 = bitcast %0* %17 to %1**
  store %1* %3431, %1** %3432, align 8
  br label %3917

3433:                                             ; preds = %268
  %3434 = load %0*, %0** %12, align 8
  %3435 = getelementptr inbounds %0, %0* %3434, i64 -3
  %3436 = bitcast %0* %3435 to %1**
  %3437 = load %1*, %1** %3436, align 8
  %3438 = load %0*, %0** %12, align 8
  %3439 = getelementptr inbounds %0, %0* %3438, i64 -1
  %3440 = bitcast %0* %3439 to %1**
  %3441 = load %1*, %1** %3440, align 8
  %3442 = load %0*, %0** %12, align 8
  %3443 = getelementptr inbounds %0, %0* %3442, i64 0
  %3444 = bitcast %0* %3443 to %1**
  %3445 = load %1*, %1** %3444, align 8
  %3446 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 768, %1* %3437, %1* %3441, %1* %3445)
  %3447 = bitcast %0* %17 to %1**
  store %1* %3446, %1** %3447, align 8
  br label %3917

3448:                                             ; preds = %268
  %3449 = load %0*, %0** %12, align 8
  %3450 = getelementptr inbounds %0, %0* %3449, i64 0
  %3451 = bitcast %0* %3450 to %1**
  %3452 = load %1*, %1** %3451, align 8
  %3453 = bitcast %0* %17 to %1**
  store %1* %3452, %1** %3453, align 8
  br label %3917

3454:                                             ; preds = %268
  %3455 = load %0*, %0** %12, align 8
  %3456 = getelementptr inbounds %0, %0* %3455, i64 0
  %3457 = bitcast %0* %3456 to %1**
  %3458 = load %1*, %1** %3457, align 8
  %3459 = bitcast %0* %17 to %1**
  store %1* %3458, %1** %3459, align 8
  br label %3917

3460:                                             ; preds = %268
  %3461 = load %0*, %0** %12, align 8
  %3462 = getelementptr inbounds %0, %0* %3461, i64 0
  %3463 = bitcast %0* %3462 to %1**
  %3464 = load %1*, %1** %3463, align 8
  %3465 = bitcast %0* %17 to %1**
  store %1* %3464, %1** %3465, align 8
  br label %3917

3466:                                             ; preds = %268
  %3467 = load %0*, %0** %12, align 8
  %3468 = getelementptr inbounds %0, %0* %3467, i64 -2
  %3469 = bitcast %0* %3468 to %1**
  %3470 = load %1*, %1** %3469, align 8
  %3471 = load %0*, %0** %12, align 8
  %3472 = getelementptr inbounds %0, %0* %3471, i64 0
  %3473 = bitcast %0* %3472 to %1**
  %3474 = load %1*, %1** %3473, align 8
  %3475 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 513, %1* %3470, %1* %3474)
  %3476 = bitcast %0* %17 to %1**
  store %1* %3475, %1** %3476, align 8
  br label %3917

3477:                                             ; preds = %268
  %3478 = load %0*, %0** %12, align 8
  %3479 = getelementptr inbounds %0, %0* %3478, i64 0
  %3480 = bitcast %0* %3479 to %1**
  %3481 = load %1*, %1** %3480, align 8
  %3482 = bitcast %0* %17 to %1**
  store %1* %3481, %1** %3482, align 8
  br label %3917

3483:                                             ; preds = %268
  %3484 = load %0*, %0** %12, align 8
  %3485 = getelementptr inbounds %0, %0* %3484, i64 -1
  %3486 = bitcast %0* %3485 to %1**
  %3487 = load %1*, %1** %3486, align 8
  %3488 = bitcast %0* %17 to %1**
  store %1* %3487, %1** %3488, align 8
  br label %3917

3489:                                             ; preds = %268
  %3490 = load %0*, %0** %12, align 8
  %3491 = getelementptr inbounds %0, %0* %3490, i64 0
  %3492 = bitcast %0* %3491 to %1**
  %3493 = load %1*, %1** %3492, align 8
  %3494 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3493)
  %3495 = bitcast %0* %17 to %1**
  store %1* %3494, %1** %3495, align 8
  br label %3917

3496:                                             ; preds = %268
  %3497 = load %0*, %0** %12, align 8
  %3498 = getelementptr inbounds %0, %0* %3497, i64 -2
  %3499 = bitcast %0* %3498 to %1**
  %3500 = load %1*, %1** %3499, align 8
  %3501 = load %0*, %0** %12, align 8
  %3502 = getelementptr inbounds %0, %0* %3501, i64 0
  %3503 = bitcast %0* %3502 to %1**
  %3504 = load %1*, %1** %3503, align 8
  %3505 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 514, %1* %3500, %1* %3504)
  %3506 = bitcast %0* %17 to %1**
  store %1* %3505, %1** %3506, align 8
  br label %3917

3507:                                             ; preds = %268
  %3508 = load %0*, %0** %12, align 8
  %3509 = getelementptr inbounds %0, %0* %3508, i64 -2
  %3510 = bitcast %0* %3509 to %1**
  %3511 = load %1*, %1** %3510, align 8
  %3512 = load %0*, %0** %12, align 8
  %3513 = getelementptr inbounds %0, %0* %3512, i64 0
  %3514 = bitcast %0* %3513 to %1**
  %3515 = load %1*, %1** %3514, align 8
  %3516 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 514, %1* %3511, %1* %3515)
  %3517 = bitcast %0* %17 to %1**
  store %1* %3516, %1** %3517, align 8
  br label %3917

3518:                                             ; preds = %268
  %3519 = load %0*, %0** %12, align 8
  %3520 = getelementptr inbounds %0, %0* %3519, i64 0
  %3521 = bitcast %0* %3520 to %1**
  %3522 = load %1*, %1** %3521, align 8
  %3523 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3522)
  %3524 = bitcast %0* %17 to %1**
  store %1* %3523, %1** %3524, align 8
  br label %3917

3525:                                             ; preds = %268
  %3526 = load %0*, %0** %12, align 8
  %3527 = getelementptr inbounds %0, %0* %3526, i64 -3
  %3528 = bitcast %0* %3527 to %1**
  %3529 = load %1*, %1** %3528, align 8
  %3530 = load %0*, %0** %12, align 8
  %3531 = getelementptr inbounds %0, %0* %3530, i64 -1
  %3532 = bitcast %0* %3531 to %1**
  %3533 = load %1*, %1** %3532, align 8
  %3534 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 512, %1* %3529, %1* %3533)
  %3535 = bitcast %0* %17 to %1**
  store %1* %3534, %1** %3535, align 8
  br label %3917

3536:                                             ; preds = %268
  %3537 = load %0*, %0** %12, align 8
  %3538 = getelementptr inbounds %0, %0* %3537, i64 -3
  %3539 = bitcast %0* %3538 to %1**
  %3540 = load %1*, %1** %3539, align 8
  %3541 = load %0*, %0** %12, align 8
  %3542 = getelementptr inbounds %0, %0* %3541, i64 -1
  %3543 = bitcast %0* %3542 to %1**
  %3544 = load %1*, %1** %3543, align 8
  %3545 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 512, %1* %3540, %1* %3544)
  %3546 = bitcast %0* %17 to %1**
  store %1* %3545, %1** %3546, align 8
  br label %3917

3547:                                             ; preds = %268
  %3548 = load %0*, %0** %12, align 8
  %3549 = getelementptr inbounds %0, %0* %3548, i64 -2
  %3550 = bitcast %0* %3549 to %1**
  %3551 = load %1*, %1** %3550, align 8
  %3552 = load %0*, %0** %12, align 8
  %3553 = getelementptr inbounds %0, %0* %3552, i64 0
  %3554 = bitcast %0* %3553 to %1**
  %3555 = load %1*, %1** %3554, align 8
  %3556 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 513, %1* %3551, %1* %3555)
  %3557 = bitcast %0* %17 to %1**
  store %1* %3556, %1** %3557, align 8
  br label %3917

3558:                                             ; preds = %268
  %3559 = load %0*, %0** %12, align 8
  %3560 = getelementptr inbounds %0, %0* %3559, i64 -2
  %3561 = bitcast %0* %3560 to %1**
  %3562 = load %1*, %1** %3561, align 8
  %3563 = load %0*, %0** %12, align 8
  %3564 = getelementptr inbounds %0, %0* %3563, i64 0
  %3565 = bitcast %0* %3564 to %1**
  %3566 = load %1*, %1** %3565, align 8
  %3567 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 514, %1* %3562, %1* %3566)
  %3568 = bitcast %0* %17 to %1**
  store %1* %3567, %1** %3568, align 8
  br label %3917

3569:                                             ; preds = %268
  %3570 = load %0*, %0** %12, align 8
  %3571 = getelementptr inbounds %0, %0* %3570, i64 -2
  %3572 = bitcast %0* %3571 to %1**
  %3573 = load %1*, %1** %3572, align 8
  %3574 = load %0*, %0** %12, align 8
  %3575 = getelementptr inbounds %0, %0* %3574, i64 0
  %3576 = bitcast %0* %3575 to %1**
  %3577 = load %1*, %1** %3576, align 8
  %3578 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 514, %1* %3573, %1* %3577)
  %3579 = bitcast %0* %17 to %1**
  store %1* %3578, %1** %3579, align 8
  br label %3917

3580:                                             ; preds = %268
  %3581 = load %0*, %0** %12, align 8
  %3582 = getelementptr inbounds %0, %0* %3581, i64 0
  %3583 = bitcast %0* %3582 to %1**
  %3584 = load %1*, %1** %3583, align 8
  %3585 = bitcast %0* %17 to %1**
  store %1* %3584, %1** %3585, align 8
  br label %3917

3586:                                             ; preds = %268
  %3587 = load %0*, %0** %12, align 8
  %3588 = getelementptr inbounds %0, %0* %3587, i64 -1
  %3589 = bitcast %0* %3588 to %1**
  %3590 = load %1*, %1** %3589, align 8
  %3591 = bitcast %0* %17 to %1**
  store %1* %3590, %1** %3591, align 8
  br label %3917

3592:                                             ; preds = %268
  %3593 = load %0*, %0** %12, align 8
  %3594 = getelementptr inbounds %0, %0* %3593, i64 0
  %3595 = bitcast %0* %3594 to %1**
  %3596 = load %1*, %1** %3595, align 8
  %3597 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3596)
  %3598 = bitcast %0* %17 to %1**
  store %1* %3597, %1** %3598, align 8
  br label %3917

3599:                                             ; preds = %268
  %3600 = load %0*, %0** %12, align 8
  %3601 = getelementptr inbounds %0, %0* %3600, i64 0
  %3602 = bitcast %0* %3601 to %1**
  %3603 = load %1*, %1** %3602, align 8
  %3604 = bitcast %0* %17 to %1**
  store %1* %3603, %1** %3604, align 8
  br label %3917

3605:                                             ; preds = %268
  %3606 = load %0*, %0** %12, align 8
  %3607 = getelementptr inbounds %0, %0* %3606, i64 -1
  %3608 = bitcast %0* %3607 to %1**
  %3609 = load %1*, %1** %3608, align 8
  %3610 = bitcast %0* %17 to %1**
  store %1* %3609, %1** %3610, align 8
  br label %3917

3611:                                             ; preds = %268
  %3612 = load %0*, %0** %12, align 8
  %3613 = getelementptr inbounds %0, %0* %3612, i64 0
  %3614 = bitcast %0* %3613 to %1**
  %3615 = load %1*, %1** %3614, align 8
  %3616 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3615)
  %3617 = bitcast %0* %17 to %1**
  store %1* %3616, %1** %3617, align 8
  br label %3917

3618:                                             ; preds = %268
  %3619 = load %0*, %0** %12, align 8
  %3620 = getelementptr inbounds %0, %0* %3619, i64 0
  %3621 = bitcast %0* %3620 to %1**
  %3622 = load %1*, %1** %3621, align 8
  %3623 = call %1* @342(%1* %3622)
  %3624 = bitcast %0* %17 to %1**
  store %1* %3623, %1** %3624, align 8
  br label %3917

3625:                                             ; preds = %268
  %3626 = bitcast %0* %17 to %1**
  store %1* null, %1** %3626, align 8
  br label %3917

3627:                                             ; preds = %268
  %3628 = load %0*, %0** %12, align 8
  %3629 = getelementptr inbounds %0, %0* %3628, i64 0
  %3630 = bitcast %0* %3629 to %1**
  %3631 = load %1*, %1** %3630, align 8
  %3632 = bitcast %0* %17 to %1**
  store %1* %3631, %1** %3632, align 8
  br label %3917

3633:                                             ; preds = %268
  %3634 = load %0*, %0** %12, align 8
  %3635 = getelementptr inbounds %0, %0* %3634, i64 -2
  %3636 = bitcast %0* %3635 to %1**
  %3637 = load %1*, %1** %3636, align 8
  %3638 = load %0*, %0** %12, align 8
  %3639 = getelementptr inbounds %0, %0* %3638, i64 0
  %3640 = bitcast %0* %3639 to %1**
  %3641 = load %1*, %1** %3640, align 8
  %3642 = call %1* @zend_ast_list_add(%1* %3637, %1* %3641)
  %3643 = bitcast %0* %17 to %1**
  store %1* %3642, %1** %3643, align 8
  br label %3917

3644:                                             ; preds = %268
  %3645 = load %0*, %0** %12, align 8
  %3646 = getelementptr inbounds %0, %0* %3645, i64 0
  %3647 = bitcast %0* %3646 to %1**
  %3648 = load %1*, %1** %3647, align 8
  %3649 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 129, %1* %3648)
  %3650 = bitcast %0* %17 to %1**
  store %1* %3649, %1** %3650, align 8
  br label %3917

3651:                                             ; preds = %268
  %3652 = load %0*, %0** %12, align 8
  %3653 = getelementptr inbounds %0, %0* %3652, i64 0
  %3654 = bitcast %0* %3653 to %1**
  %3655 = load %1*, %1** %3654, align 8
  %3656 = load %0*, %0** %12, align 8
  %3657 = getelementptr inbounds %0, %0* %3656, i64 -2
  %3658 = bitcast %0* %3657 to %1**
  %3659 = load %1*, %1** %3658, align 8
  %3660 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 525, %1* %3655, %1* %3659)
  %3661 = bitcast %0* %17 to %1**
  store %1* %3660, %1** %3661, align 8
  br label %3917

3662:                                             ; preds = %268
  %3663 = load %0*, %0** %12, align 8
  %3664 = getelementptr inbounds %0, %0* %3663, i64 0
  %3665 = bitcast %0* %3664 to %1**
  %3666 = load %1*, %1** %3665, align 8
  %3667 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 525, %1* %3666, i8* null)
  %3668 = bitcast %0* %17 to %1**
  store %1* %3667, %1** %3668, align 8
  br label %3917

3669:                                             ; preds = %268
  %3670 = load %0*, %0** %12, align 8
  %3671 = getelementptr inbounds %0, %0* %3670, i64 0
  %3672 = bitcast %0* %3671 to %1**
  %3673 = load %1*, %1** %3672, align 8
  %3674 = load %0*, %0** %12, align 8
  %3675 = getelementptr inbounds %0, %0* %3674, i64 -3
  %3676 = bitcast %0* %3675 to %1**
  %3677 = load %1*, %1** %3676, align 8
  %3678 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 525, i16 zeroext 1, %1* %3673, %1* %3677)
  %3679 = bitcast %0* %17 to %1**
  store %1* %3678, %1** %3679, align 8
  br label %3917

3680:                                             ; preds = %268
  %3681 = load %0*, %0** %12, align 8
  %3682 = getelementptr inbounds %0, %0* %3681, i64 0
  %3683 = bitcast %0* %3682 to %1**
  %3684 = load %1*, %1** %3683, align 8
  %3685 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 525, i16 zeroext 1, %1* %3684, i8* null)
  %3686 = bitcast %0* %17 to %1**
  store %1* %3685, %1** %3686, align 8
  br label %3917

3687:                                             ; preds = %268
  %3688 = load %0*, %0** %12, align 8
  %3689 = getelementptr inbounds %0, %0* %3688, i64 -1
  %3690 = bitcast %0* %3689 to %1**
  %3691 = load %1*, %1** %3690, align 8
  %3692 = getelementptr inbounds %1, %1* %3691, i32 0, i32 1
  store i16 1, i16* %3692, align 2
  %3693 = load %0*, %0** %12, align 8
  %3694 = getelementptr inbounds %0, %0* %3693, i64 -1
  %3695 = bitcast %0* %3694 to %1**
  %3696 = load %1*, %1** %3695, align 8
  %3697 = load %0*, %0** %12, align 8
  %3698 = getelementptr inbounds %0, %0* %3697, i64 -5
  %3699 = bitcast %0* %3698 to %1**
  %3700 = load %1*, %1** %3699, align 8
  %3701 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 525, %1* %3696, %1* %3700)
  %3702 = bitcast %0* %17 to %1**
  store %1* %3701, %1** %3702, align 8
  br label %3917

3703:                                             ; preds = %268
  %3704 = load %0*, %0** %12, align 8
  %3705 = getelementptr inbounds %0, %0* %3704, i64 -1
  %3706 = bitcast %0* %3705 to %1**
  %3707 = load %1*, %1** %3706, align 8
  %3708 = getelementptr inbounds %1, %1* %3707, i32 0, i32 1
  store i16 1, i16* %3708, align 2
  %3709 = load %0*, %0** %12, align 8
  %3710 = getelementptr inbounds %0, %0* %3709, i64 -1
  %3711 = bitcast %0* %3710 to %1**
  %3712 = load %1*, %1** %3711, align 8
  %3713 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 525, %1* %3712, i8* null)
  %3714 = bitcast %0* %17 to %1**
  store %1* %3713, %1** %3714, align 8
  br label %3917

3715:                                             ; preds = %268
  %3716 = load %0*, %0** %12, align 8
  %3717 = getelementptr inbounds %0, %0* %3716, i64 -1
  %3718 = bitcast %0* %3717 to %1**
  %3719 = load %1*, %1** %3718, align 8
  %3720 = load %0*, %0** %12, align 8
  %3721 = getelementptr inbounds %0, %0* %3720, i64 0
  %3722 = bitcast %0* %3721 to %1**
  %3723 = load %1*, %1** %3722, align 8
  %3724 = call %1* @zend_ast_list_add(%1* %3719, %1* %3723)
  %3725 = bitcast %0* %17 to %1**
  store %1* %3724, %1** %3725, align 8
  br label %3917

3726:                                             ; preds = %268
  %3727 = load %0*, %0** %12, align 8
  %3728 = getelementptr inbounds %0, %0* %3727, i64 -1
  %3729 = bitcast %0* %3728 to %1**
  %3730 = load %1*, %1** %3729, align 8
  %3731 = load %0*, %0** %12, align 8
  %3732 = getelementptr inbounds %0, %0* %3731, i64 0
  %3733 = bitcast %0* %3732 to %1**
  %3734 = load %1*, %1** %3733, align 8
  %3735 = call %1* @zend_ast_list_add(%1* %3730, %1* %3734)
  %3736 = bitcast %0* %17 to %1**
  store %1* %3735, %1** %3736, align 8
  br label %3917

3737:                                             ; preds = %268
  %3738 = load %0*, %0** %12, align 8
  %3739 = getelementptr inbounds %0, %0* %3738, i64 0
  %3740 = bitcast %0* %3739 to %1**
  %3741 = load %1*, %1** %3740, align 8
  %3742 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 1, i16 zeroext 130, %1* %3741)
  %3743 = bitcast %0* %17 to %1**
  store %1* %3742, %1** %3743, align 8
  br label %3917

3744:                                             ; preds = %268
  %3745 = load %0*, %0** %12, align 8
  %3746 = getelementptr inbounds %0, %0* %3745, i64 -1
  %3747 = bitcast %0* %3746 to %1**
  %3748 = load %1*, %1** %3747, align 8
  %3749 = load %0*, %0** %12, align 8
  %3750 = getelementptr inbounds %0, %0* %3749, i64 0
  %3751 = bitcast %0* %3750 to %1**
  %3752 = load %1*, %1** %3751, align 8
  %3753 = call %1* (i32, i16, ...) @zend_ast_create_list(i32 2, i16 zeroext 130, %1* %3748, %1* %3752)
  %3754 = bitcast %0* %17 to %1**
  store %1* %3753, %1** %3754, align 8
  br label %3917

3755:                                             ; preds = %268
  %3756 = load %0*, %0** %12, align 8
  %3757 = getelementptr inbounds %0, %0* %3756, i64 0
  %3758 = bitcast %0* %3757 to %1**
  %3759 = load %1*, %1** %3758, align 8
  %3760 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3759)
  %3761 = bitcast %0* %17 to %1**
  store %1* %3760, %1** %3761, align 8
  br label %3917

3762:                                             ; preds = %268
  %3763 = load %0*, %0** %12, align 8
  %3764 = getelementptr inbounds %0, %0* %3763, i64 -3
  %3765 = bitcast %0* %3764 to %1**
  %3766 = load %1*, %1** %3765, align 8
  %3767 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3766)
  %3768 = load %0*, %0** %12, align 8
  %3769 = getelementptr inbounds %0, %0* %3768, i64 -1
  %3770 = bitcast %0* %3769 to %1**
  %3771 = load %1*, %1** %3770, align 8
  %3772 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 512, %1* %3767, %1* %3771)
  %3773 = bitcast %0* %17 to %1**
  store %1* %3772, %1** %3773, align 8
  br label %3917

3774:                                             ; preds = %268
  %3775 = load %0*, %0** %12, align 8
  %3776 = getelementptr inbounds %0, %0* %3775, i64 -2
  %3777 = bitcast %0* %3776 to %1**
  %3778 = load %1*, %1** %3777, align 8
  %3779 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3778)
  %3780 = load %0*, %0** %12, align 8
  %3781 = getelementptr inbounds %0, %0* %3780, i64 0
  %3782 = bitcast %0* %3781 to %1**
  %3783 = load %1*, %1** %3782, align 8
  %3784 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 513, %1* %3779, %1* %3783)
  %3785 = bitcast %0* %17 to %1**
  store %1* %3784, %1** %3785, align 8
  br label %3917

3786:                                             ; preds = %268
  %3787 = load %0*, %0** %12, align 8
  %3788 = getelementptr inbounds %0, %0* %3787, i64 -1
  %3789 = bitcast %0* %3788 to %1**
  %3790 = load %1*, %1** %3789, align 8
  %3791 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3790)
  %3792 = bitcast %0* %17 to %1**
  store %1* %3791, %1** %3792, align 8
  br label %3917

3793:                                             ; preds = %268
  %3794 = load %0*, %0** %12, align 8
  %3795 = getelementptr inbounds %0, %0* %3794, i64 -1
  %3796 = bitcast %0* %3795 to %1**
  %3797 = load %1*, %1** %3796, align 8
  %3798 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3797)
  %3799 = bitcast %0* %17 to %1**
  store %1* %3798, %1** %3799, align 8
  br label %3917

3800:                                             ; preds = %268
  %3801 = load %0*, %0** %12, align 8
  %3802 = getelementptr inbounds %0, %0* %3801, i64 -4
  %3803 = bitcast %0* %3802 to %1**
  %3804 = load %1*, %1** %3803, align 8
  %3805 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3804)
  %3806 = load %0*, %0** %12, align 8
  %3807 = getelementptr inbounds %0, %0* %3806, i64 -2
  %3808 = bitcast %0* %3807 to %1**
  %3809 = load %1*, %1** %3808, align 8
  %3810 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 512, %1* %3805, %1* %3809)
  %3811 = bitcast %0* %17 to %1**
  store %1* %3810, %1** %3811, align 8
  br label %3917

3812:                                             ; preds = %268
  %3813 = load %0*, %0** %12, align 8
  %3814 = getelementptr inbounds %0, %0* %3813, i64 -1
  %3815 = bitcast %0* %3814 to %1**
  %3816 = load %1*, %1** %3815, align 8
  %3817 = bitcast %0* %17 to %1**
  store %1* %3816, %1** %3817, align 8
  br label %3917

3818:                                             ; preds = %268
  %3819 = load %0*, %0** %12, align 8
  %3820 = getelementptr inbounds %0, %0* %3819, i64 0
  %3821 = bitcast %0* %3820 to %1**
  %3822 = load %1*, %1** %3821, align 8
  %3823 = bitcast %0* %17 to %1**
  store %1* %3822, %1** %3823, align 8
  br label %3917

3824:                                             ; preds = %268
  %3825 = load %0*, %0** %12, align 8
  %3826 = getelementptr inbounds %0, %0* %3825, i64 0
  %3827 = bitcast %0* %3826 to %1**
  %3828 = load %1*, %1** %3827, align 8
  %3829 = bitcast %0* %17 to %1**
  store %1* %3828, %1** %3829, align 8
  br label %3917

3830:                                             ; preds = %268
  %3831 = load %0*, %0** %12, align 8
  %3832 = getelementptr inbounds %0, %0* %3831, i64 0
  %3833 = bitcast %0* %3832 to %1**
  %3834 = load %1*, %1** %3833, align 8
  %3835 = call %1* @zend_negate_num_string(%1* %3834)
  %3836 = bitcast %0* %17 to %1**
  store %1* %3835, %1** %3836, align 8
  br label %3917

3837:                                             ; preds = %268
  %3838 = load %0*, %0** %12, align 8
  %3839 = getelementptr inbounds %0, %0* %3838, i64 0
  %3840 = bitcast %0* %3839 to %1**
  %3841 = load %1*, %1** %3840, align 8
  %3842 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 256, %1* %3841)
  %3843 = bitcast %0* %17 to %1**
  store %1* %3842, %1** %3843, align 8
  br label %3917

3844:                                             ; preds = %268
  %3845 = load %0*, %0** %12, align 8
  %3846 = getelementptr inbounds %0, %0* %3845, i64 -1
  %3847 = bitcast %0* %3846 to %1**
  %3848 = load %1*, %1** %3847, align 8
  %3849 = bitcast %0* %17 to %1**
  store %1* %3848, %1** %3849, align 8
  br label %3917

3850:                                             ; preds = %268
  %3851 = load %0*, %0** %12, align 8
  %3852 = getelementptr inbounds %0, %0* %3851, i64 -1
  %3853 = bitcast %0* %3852 to %1**
  %3854 = load %1*, %1** %3853, align 8
  %3855 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 262, %1* %3854)
  %3856 = bitcast %0* %17 to %1**
  store %1* %3855, %1** %3856, align 8
  br label %3917

3857:                                             ; preds = %268
  %3858 = load %0*, %0** %12, align 8
  %3859 = getelementptr inbounds %0, %0* %3858, i64 0
  %3860 = bitcast %0* %3859 to %1**
  %3861 = load %1*, %1** %3860, align 8
  %3862 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 269, i16 zeroext 2, %1* %3861)
  %3863 = bitcast %0* %17 to %1**
  store %1* %3862, %1** %3863, align 8
  br label %3917

3864:                                             ; preds = %268
  %3865 = load %0*, %0** %12, align 8
  %3866 = getelementptr inbounds %0, %0* %3865, i64 0
  %3867 = bitcast %0* %3866 to %1**
  %3868 = load %1*, %1** %3867, align 8
  %3869 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 269, i16 zeroext 4, %1* %3868)
  %3870 = bitcast %0* %17 to %1**
  store %1* %3869, %1** %3870, align 8
  br label %3917

3871:                                             ; preds = %268
  %3872 = load %0*, %0** %12, align 8
  %3873 = getelementptr inbounds %0, %0* %3872, i64 -1
  %3874 = bitcast %0* %3873 to %1**
  %3875 = load %1*, %1** %3874, align 8
  %3876 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 269, i16 zeroext 1, %1* %3875)
  %3877 = bitcast %0* %17 to %1**
  store %1* %3876, %1** %3877, align 8
  br label %3917

3878:                                             ; preds = %268
  %3879 = load %0*, %0** %12, align 8
  %3880 = getelementptr inbounds %0, %0* %3879, i64 0
  %3881 = bitcast %0* %3880 to %1**
  %3882 = load %1*, %1** %3881, align 8
  %3883 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 269, i16 zeroext 8, %1* %3882)
  %3884 = bitcast %0* %17 to %1**
  store %1* %3883, %1** %3884, align 8
  br label %3917

3885:                                             ; preds = %268
  %3886 = load %0*, %0** %12, align 8
  %3887 = getelementptr inbounds %0, %0* %3886, i64 0
  %3888 = bitcast %0* %3887 to %1**
  %3889 = load %1*, %1** %3888, align 8
  %3890 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 269, i16 zeroext 16, %1* %3889)
  %3891 = bitcast %0* %17 to %1**
  store %1* %3890, %1** %3891, align 8
  br label %3917

3892:                                             ; preds = %268
  %3893 = load %0*, %0** %12, align 8
  %3894 = getelementptr inbounds %0, %0* %3893, i64 0
  %3895 = bitcast %0* %3894 to %1**
  %3896 = load %1*, %1** %3895, align 8
  %3897 = bitcast %0* %17 to %1**
  store %1* %3896, %1** %3897, align 8
  br label %3917

3898:                                             ; preds = %268
  %3899 = load %0*, %0** %12, align 8
  %3900 = getelementptr inbounds %0, %0* %3899, i64 -2
  %3901 = bitcast %0* %3900 to %1**
  %3902 = load %1*, %1** %3901, align 8
  %3903 = load %0*, %0** %12, align 8
  %3904 = getelementptr inbounds %0, %0* %3903, i64 0
  %3905 = bitcast %0* %3904 to %1**
  %3906 = load %1*, %1** %3905, align 8
  %3907 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 523, %1* %3902, %1* %3906)
  %3908 = bitcast %0* %17 to %1**
  store %1* %3907, %1** %3908, align 8
  br label %3917

3909:                                             ; preds = %268
  %3910 = load %0*, %0** %12, align 8
  %3911 = getelementptr inbounds %0, %0* %3910, i64 0
  %3912 = bitcast %0* %3911 to %1**
  %3913 = load %1*, %1** %3912, align 8
  %3914 = call %1* (i16, ...) @zend_ast_create(i16 zeroext 263, %1* %3913)
  %3915 = bitcast %0* %17 to %1**
  store %1* %3914, %1** %3915, align 8
  br label %3917

3916:                                             ; preds = %268
  br label %3917

3917:                                             ; preds = %3916, %3909, %3898, %3892, %3885, %3878, %3871, %3864, %3857, %3850, %3844, %3837, %3830, %3824, %3818, %3812, %3800, %3793, %3786, %3774, %3762, %3755, %3744, %3737, %3726, %3715, %3703, %3687, %3680, %3669, %3662, %3651, %3644, %3633, %3627, %3625, %3618, %3611, %3605, %3599, %3592, %3586, %3580, %3569, %3558, %3547, %3536, %3525, %3518, %3507, %3496, %3489, %3483, %3477, %3466, %3460, %3454, %3448, %3433, %3422, %3411, %3400, %3393, %3387, %3381, %3375, %3369, %3363, %3357, %3351, %3345, %3343, %3337, %3331, %3320, %3309, %3302, %3296, %3290, %3284, %3278, %3274, %3268, %3265, %3262, %3259, %3256, %3253, %3250, %3247, %3244, %3238, %3232, %3226, %3217, %3208, %3202, %3199, %3193, %3187, %3183, %3177, %3175, %3169, %3163, %3157, %3153, %3124, %3109, %3094, %3083, %3074, %3068, %3061, %3050, %3044, %3042, %3040, %3038, %3034, %3031, %3027, %2982, %2938, %2929, %2916, %2907, %2902, %2895, %2888, %2882, %2875, %2868, %2861, %2854, %2847, %2840, %2833, %2826, %2819, %2813, %2802, %2791, %2776, %2770, %2764, %2753, %2742, %2731, %2720, %2709, %2698, %2687, %2676, %2665, %2654, %2647, %2640, %2633, %2626, %2615, %2604, %2593, %2582, %2571, %2560, %2549, %2538, %2527, %2516, %2505, %2494, %2483, %2472, %2461, %2450, %2439, %2432, %2425, %2418, %2411, %2400, %2389, %2378, %2367, %2356, %2345, %2334, %2323, %2312, %2301, %2290, %2279, %2272, %2261, %2250, %2234, %2218, %2212, %2201, %2169, %2165, %2158, %2147, %2141, %2139, %2132, %2125, %2114, %2110, %2085, %2057, %2046, %2042, %2017, %1993, %1982, %1980, %1978, %1976, %1974, %1972, %1970, %1956, %1950, %1949, %1933, %1931, %1925, %1919, %1917, %1906, %1900, %1893, %1881, %1865, %1855, %1844, %1833, %1827, %1821, %1810, %1803, %1797, %1795, %1793, %1782, %1775, %1726, %1715, %1701, %1687, %1684, %1673, %1662, %1655, %1648, %1637, %1629, %1622, %1611, %1604, %1598, %1587, %1580, %1574, %1571, %1565, %1563, %1557, %1554, %1551, %1538, %1532, %1526, %1524, %1499, %1478, %1467, %1460, %1457, %1451, %1439, %1433, %1417, %1405, %1393, %1387, %1371, %1359, %1353, %1347, %1335, %1319, %1316, %1310, %1304, %1298, %1292, %1286, %1280, %1274, %1268, %1262, %1256, %1247, %1238, %1231, %1225, %1219, %1217, %1211, %1209, %1203, %1201, %1176, %1172, %1151, %1147, %1145, %1143, %1129, %1123, %1094, %1090, %1056, %1052, %1050, %1048, %1046, %1044, %1000, %993, %982, %975, %969, %967, %956, %949, %929, %926, %919, %912, %905, %890, %888, %877, %872, %853, %838, %832, %826, %819, %813, %807, %801, %794, %787, %780, %769, %750, %739, %728, %722, %716, %710, %702, %696, %690, %684, %678, %675, %664, %657, %646, %640, %634, %623, %616, %602, %593, %586, %575, %568, %557, %550, %539, %528, %517, %506, %495, %493, %491, %485, %471, %462, %448, %442, %435, %434, %415, %414, %405, %386, %380, %374, %368, %362, %356, %347, %338, %329, %318, %312, %309, %298, %293, %287, %282
  %3918 = load i32, i32* %21, align 4
  %3919 = load %0*, %0** %12, align 8
  %3920 = sext i32 %3918 to i64
  %3921 = sub i64 0, %3920
  %3922 = getelementptr inbounds %0, %0* %3919, i64 %3921
  store %0* %3922, %0** %12, align 8
  %3923 = load i32, i32* %21, align 4
  %3924 = load i16*, i16** %9, align 8
  %3925 = sext i32 %3923 to i64
  %3926 = sub i64 0, %3925
  %3927 = getelementptr inbounds i16, i16* %3924, i64 %3926
  store i16* %3927, i16** %9, align 8
  store i32 0, i32* %21, align 4
  %3928 = load %0*, %0** %12, align 8
  %3929 = getelementptr inbounds %0, %0* %3928, i32 1
  store %0* %3929, %0** %12, align 8
  %3930 = bitcast %0* %3929 to i8*
  %3931 = bitcast %0* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3930, i8* align 8 %3931, i64 8, i1 false)
  %3932 = load i32, i32* %14, align 4
  %3933 = sext i32 %3932 to i64
  %3934 = getelementptr inbounds [499 x i16], [499 x i16]* @9, i64 0, i64 %3933
  %3935 = load i16, i16* %3934, align 2
  %3936 = zext i16 %3935 to i32
  store i32 %3936, i32* %14, align 4
  %3937 = load i32, i32* %14, align 4
  %3938 = sub nsw i32 %3937, 166
  %3939 = sext i32 %3938 to i64
  %3940 = getelementptr inbounds [138 x i16], [138 x i16]* @10, i64 0, i64 %3939
  %3941 = load i16, i16* %3940, align 2
  %3942 = sext i16 %3941 to i32
  %3943 = load i16*, i16** %9, align 8
  %3944 = load i16, i16* %3943, align 2
  %3945 = sext i16 %3944 to i32
  %3946 = add nsw i32 %3942, %3945
  store i32 %3946, i32* %5, align 4
  %3947 = load i32, i32* %5, align 4
  %3948 = icmp sle i32 0, %3947
  br i1 %3948, label %3949, label %3968

3949:                                             ; preds = %3917
  %3950 = load i32, i32* %5, align 4
  %3951 = icmp sle i32 %3950, 7398
  br i1 %3951, label %3952, label %3968

3952:                                             ; preds = %3949
  %3953 = load i32, i32* %5, align 4
  %3954 = sext i32 %3953 to i64
  %3955 = getelementptr inbounds [7399 x i16], [7399 x i16]* @3, i64 0, i64 %3954
  %3956 = load i16, i16* %3955, align 2
  %3957 = sext i16 %3956 to i32
  %3958 = load i16*, i16** %9, align 8
  %3959 = load i16, i16* %3958, align 2
  %3960 = sext i16 %3959 to i32
  %3961 = icmp eq i32 %3957, %3960
  br i1 %3961, label %3962, label %3968

3962:                                             ; preds = %3952
  %3963 = load i32, i32* %5, align 4
  %3964 = sext i32 %3963 to i64
  %3965 = getelementptr inbounds [7399 x i16], [7399 x i16]* @4, i64 0, i64 %3964
  %3966 = load i16, i16* %3965, align 2
  %3967 = sext i16 %3966 to i32
  store i32 %3967, i32* %5, align 4
  br label %3975

3968:                                             ; preds = %3952, %3949, %3917
  %3969 = load i32, i32* %14, align 4
  %3970 = sub nsw i32 %3969, 166
  %3971 = sext i32 %3970 to i64
  %3972 = getelementptr inbounds [138 x i16], [138 x i16]* @11, i64 0, i64 %3971
  %3973 = load i16, i16* %3972, align 2
  %3974 = sext i16 %3973 to i32
  store i32 %3974, i32* %5, align 4
  br label %3975

3975:                                             ; preds = %3968, %3962
  br label %60

3976:                                             ; preds = %266, %242
  %3977 = load i32, i32* %2, align 4
  %3978 = icmp eq i32 %3977, -2
  br i1 %3978, label %3979, label %3980

3979:                                             ; preds = %3976
  br label %3992

3980:                                             ; preds = %3976
  %3981 = load i32, i32* %2, align 4
  %3982 = icmp ule i32 %3981, 392
  br i1 %3982, label %3983, label %3989

3983:                                             ; preds = %3980
  %3984 = load i32, i32* %2, align 4
  %3985 = sext i32 %3984 to i64
  %3986 = getelementptr inbounds [393 x i8], [393 x i8]* @2, i64 0, i64 %3985
  %3987 = load i8, i8* %3986, align 1
  %3988 = zext i8 %3987 to i32
  br label %3990

3989:                                             ; preds = %3980
  br label %3990

3990:                                             ; preds = %3989, %3983
  %3991 = phi i32 [ %3988, %3983 ], [ 2, %3989 ]
  br label %3992

3992:                                             ; preds = %3990, %3979
  %3993 = phi i32 [ -2, %3979 ], [ %3991, %3990 ]
  store i32 %3993, i32* %16, align 4
  %3994 = load i32, i32* %6, align 4
  %3995 = icmp ne i32 %3994, 0
  br i1 %3995, label %4042, label %3996

3996:                                             ; preds = %3992
  %3997 = load i32, i32* %4, align 4
  %3998 = add nsw i32 %3997, 1
  store i32 %3998, i32* %4, align 4
  %3999 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3999) #9
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @12, i32 0, i32 0), i8** %34, align 8
  %4000 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4000) #9
  %4001 = load i16*, i16** %9, align 8
  %4002 = load i32, i32* %16, align 4
  %4003 = call i32 @343(i64* %20, i8** %19, i16* %4001, i32 %4002)
  store i32 %4003, i32* %35, align 4
  %4004 = load i32, i32* %35, align 4
  %4005 = icmp eq i32 %4004, 0
  br i1 %4005, label %4006, label %4008

4006:                                             ; preds = %3996
  %4007 = load i8*, i8** %19, align 8
  store i8* %4007, i8** %34, align 8
  br label %4031

4008:                                             ; preds = %3996
  %4009 = load i32, i32* %35, align 4
  %4010 = icmp eq i32 %4009, 1
  br i1 %4010, label %4011, label %4030

4011:                                             ; preds = %4008
  %4012 = load i8*, i8** %19, align 8
  %4013 = getelementptr inbounds [128 x i8], [128 x i8]* %18, i32 0, i32 0
  %4014 = icmp ne i8* %4012, %4013
  br i1 %4014, label %4015, label %4017

4015:                                             ; preds = %4011
  %4016 = load i8*, i8** %19, align 8
  call void @free(i8* %4016) #9
  br label %4017

4017:                                             ; preds = %4015, %4011
  %4018 = load i64, i64* %20, align 8
  %4019 = call noalias i8* @malloc(i64 %4018) #9
  store i8* %4019, i8** %19, align 8
  %4020 = load i8*, i8** %19, align 8
  %4021 = icmp ne i8* %4020, null
  br i1 %4021, label %4024, label %4022

4022:                                             ; preds = %4017
  %4023 = getelementptr inbounds [128 x i8], [128 x i8]* %18, i32 0, i32 0
  store i8* %4023, i8** %19, align 8
  store i64 128, i64* %20, align 8
  store i32 2, i32* %35, align 4
  br label %4029

4024:                                             ; preds = %4017
  %4025 = load i16*, i16** %9, align 8
  %4026 = load i32, i32* %16, align 4
  %4027 = call i32 @343(i64* %20, i8** %19, i16* %4025, i32 %4026)
  store i32 %4027, i32* %35, align 4
  %4028 = load i8*, i8** %19, align 8
  store i8* %4028, i8** %34, align 8
  br label %4029

4029:                                             ; preds = %4024, %4022
  br label %4030

4030:                                             ; preds = %4029, %4008
  br label %4031

4031:                                             ; preds = %4030, %4006
  %4032 = load i8*, i8** %34, align 8
  call void @zenderror(i8* %4032)
  %4033 = load i32, i32* %35, align 4
  %4034 = icmp eq i32 %4033, 2
  br i1 %4034, label %4035, label %4036

4035:                                             ; preds = %4031
  store i32 4, i32* %27, align 4
  br label %4037

4036:                                             ; preds = %4031
  store i32 0, i32* %27, align 4
  br label %4037

4037:                                             ; preds = %4035, %4036
  %4038 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4038) #9
  %4039 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4039) #9
  %4040 = load i32, i32* %27, align 4
  switch i32 %4040, label %4192 [
    i32 0, label %4041
    i32 4, label %4133
  ]

4041:                                             ; preds = %4037
  br label %4042

4042:                                             ; preds = %4041, %3992
  %4043 = load i32, i32* %6, align 4
  %4044 = icmp eq i32 %4043, 3
  br i1 %4044, label %4045, label %4056

4045:                                             ; preds = %4042
  %4046 = load i32, i32* %2, align 4
  %4047 = icmp sle i32 %4046, 0
  br i1 %4047, label %4048, label %4053

4048:                                             ; preds = %4045
  %4049 = load i32, i32* %2, align 4
  %4050 = icmp eq i32 %4049, 0
  br i1 %4050, label %4051, label %4052

4051:                                             ; preds = %4048
  br label %4132

4052:                                             ; preds = %4048
  br label %4055

4053:                                             ; preds = %4045
  %4054 = load i32, i32* %16, align 4
  call void @344(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @13, i32 0, i32 0), i32 %4054, %0* %3)
  store i32 -2, i32* %2, align 4
  br label %4055

4055:                                             ; preds = %4053, %4052
  br label %4056

4056:                                             ; preds = %4055, %4042
  br label %4071

4057:                                             ; No predecessors!
  %4058 = load i32, i32* %21, align 4
  %4059 = load %0*, %0** %12, align 8
  %4060 = sext i32 %4058 to i64
  %4061 = sub i64 0, %4060
  %4062 = getelementptr inbounds %0, %0* %4059, i64 %4061
  store %0* %4062, %0** %12, align 8
  %4063 = load i32, i32* %21, align 4
  %4064 = load i16*, i16** %9, align 8
  %4065 = sext i32 %4063 to i64
  %4066 = sub i64 0, %4065
  %4067 = getelementptr inbounds i16, i16* %4064, i64 %4066
  store i16* %4067, i16** %9, align 8
  store i32 0, i32* %21, align 4
  %4068 = load i16*, i16** %9, align 8
  %4069 = load i16, i16* %4068, align 2
  %4070 = sext i16 %4069 to i32
  store i32 %4070, i32* %5, align 4
  br label %4071

4071:                                             ; preds = %4057, %4056
  store i32 3, i32* %6, align 4
  br label %4072

4072:                                             ; preds = %4111, %4071
  %4073 = load i32, i32* %5, align 4
  %4074 = sext i32 %4073 to i64
  %4075 = getelementptr inbounds [945 x i16], [945 x i16]* @1, i64 0, i64 %4074
  %4076 = load i16, i16* %4075, align 2
  %4077 = sext i16 %4076 to i32
  store i32 %4077, i32* %14, align 4
  %4078 = load i32, i32* %14, align 4
  %4079 = icmp eq i32 %4078, -722
  br i1 %4079, label %4106, label %4080

4080:                                             ; preds = %4072
  %4081 = load i32, i32* %14, align 4
  %4082 = add nsw i32 %4081, 1
  store i32 %4082, i32* %14, align 4
  %4083 = load i32, i32* %14, align 4
  %4084 = icmp sle i32 0, %4083
  br i1 %4084, label %4085, label %4105

4085:                                             ; preds = %4080
  %4086 = load i32, i32* %14, align 4
  %4087 = icmp sle i32 %4086, 7398
  br i1 %4087, label %4088, label %4105

4088:                                             ; preds = %4085
  %4089 = load i32, i32* %14, align 4
  %4090 = sext i32 %4089 to i64
  %4091 = getelementptr inbounds [7399 x i16], [7399 x i16]* @3, i64 0, i64 %4090
  %4092 = load i16, i16* %4091, align 2
  %4093 = sext i16 %4092 to i32
  %4094 = icmp eq i32 %4093, 1
  br i1 %4094, label %4095, label %4105

4095:                                             ; preds = %4088
  %4096 = load i32, i32* %14, align 4
  %4097 = sext i32 %4096 to i64
  %4098 = getelementptr inbounds [7399 x i16], [7399 x i16]* @4, i64 0, i64 %4097
  %4099 = load i16, i16* %4098, align 2
  %4100 = sext i16 %4099 to i32
  store i32 %4100, i32* %14, align 4
  %4101 = load i32, i32* %14, align 4
  %4102 = icmp slt i32 0, %4101
  br i1 %4102, label %4103, label %4104

4103:                                             ; preds = %4095
  br label %4125

4104:                                             ; preds = %4095
  br label %4105

4105:                                             ; preds = %4104, %4088, %4085, %4080
  br label %4106

4106:                                             ; preds = %4105, %4072
  %4107 = load i16*, i16** %9, align 8
  %4108 = load i16*, i16** %8, align 8
  %4109 = icmp eq i16* %4107, %4108
  br i1 %4109, label %4110, label %4111

4110:                                             ; preds = %4106
  br label %4132

4111:                                             ; preds = %4106
  %4112 = load i32, i32* %5, align 4
  %4113 = sext i32 %4112 to i64
  %4114 = getelementptr inbounds [945 x i16], [945 x i16]* @15, i64 0, i64 %4113
  %4115 = load i16, i16* %4114, align 2
  %4116 = zext i16 %4115 to i32
  %4117 = load %0*, %0** %12, align 8
  call void @344(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @14, i32 0, i32 0), i32 %4116, %0* %4117)
  %4118 = load %0*, %0** %12, align 8
  %4119 = getelementptr inbounds %0, %0* %4118, i64 -1
  store %0* %4119, %0** %12, align 8
  %4120 = load i16*, i16** %9, align 8
  %4121 = getelementptr inbounds i16, i16* %4120, i64 -1
  store i16* %4121, i16** %9, align 8
  %4122 = load i16*, i16** %9, align 8
  %4123 = load i16, i16* %4122, align 2
  %4124 = sext i16 %4123 to i32
  store i32 %4124, i32* %5, align 4
  br label %4072

4125:                                             ; preds = %4103
  %4126 = load %0*, %0** %12, align 8
  %4127 = getelementptr inbounds %0, %0* %4126, i32 1
  store %0* %4127, %0** %12, align 8
  %4128 = bitcast %0* %4127 to i8*
  %4129 = bitcast %0* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4128, i8* align 8 %4129, i64 8, i1 false)
  %4130 = load i32, i32* %14, align 4
  store i32 %4130, i32* %5, align 4
  br label %60

4131:                                             ; preds = %181
  store i32 0, i32* %15, align 4
  br label %4134

4132:                                             ; preds = %174, %4110, %4051
  store i32 1, i32* %15, align 4
  br label %4134

4133:                                             ; preds = %4037, %174
  call void @zenderror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @16, i32 0, i32 0))
  store i32 2, i32* %15, align 4
  br label %4134

4134:                                             ; preds = %4133, %4132, %4131
  %4135 = load i32, i32* %2, align 4
  %4136 = icmp ne i32 %4135, -2
  br i1 %4136, label %4137, label %4150

4137:                                             ; preds = %4134
  %4138 = load i32, i32* %2, align 4
  %4139 = icmp ule i32 %4138, 392
  br i1 %4139, label %4140, label %4146

4140:                                             ; preds = %4137
  %4141 = load i32, i32* %2, align 4
  %4142 = sext i32 %4141 to i64
  %4143 = getelementptr inbounds [393 x i8], [393 x i8]* @2, i64 0, i64 %4142
  %4144 = load i8, i8* %4143, align 1
  %4145 = zext i8 %4144 to i32
  br label %4147

4146:                                             ; preds = %4137
  br label %4147

4147:                                             ; preds = %4146, %4140
  %4148 = phi i32 [ %4145, %4140 ], [ 2, %4146 ]
  store i32 %4148, i32* %16, align 4
  %4149 = load i32, i32* %16, align 4
  call void @344(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @17, i32 0, i32 0), i32 %4149, %0* %3)
  br label %4150

4150:                                             ; preds = %4147, %4134
  %4151 = load i32, i32* %21, align 4
  %4152 = load %0*, %0** %12, align 8
  %4153 = sext i32 %4151 to i64
  %4154 = sub i64 0, %4153
  %4155 = getelementptr inbounds %0, %0* %4152, i64 %4154
  store %0* %4155, %0** %12, align 8
  %4156 = load i32, i32* %21, align 4
  %4157 = load i16*, i16** %9, align 8
  %4158 = sext i32 %4156 to i64
  %4159 = sub i64 0, %4158
  %4160 = getelementptr inbounds i16, i16* %4157, i64 %4159
  store i16* %4160, i16** %9, align 8
  br label %4161

4161:                                             ; preds = %4165, %4150
  %4162 = load i16*, i16** %9, align 8
  %4163 = load i16*, i16** %8, align 8
  %4164 = icmp ne i16* %4162, %4163
  br i1 %4164, label %4165, label %4177

4165:                                             ; preds = %4161
  %4166 = load i16*, i16** %9, align 8
  %4167 = load i16, i16* %4166, align 2
  %4168 = sext i16 %4167 to i64
  %4169 = getelementptr inbounds [945 x i16], [945 x i16]* @15, i64 0, i64 %4168
  %4170 = load i16, i16* %4169, align 2
  %4171 = zext i16 %4170 to i32
  %4172 = load %0*, %0** %12, align 8
  call void @344(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @18, i32 0, i32 0), i32 %4171, %0* %4172)
  %4173 = load %0*, %0** %12, align 8
  %4174 = getelementptr inbounds %0, %0* %4173, i64 -1
  store %0* %4174, %0** %12, align 8
  %4175 = load i16*, i16** %9, align 8
  %4176 = getelementptr inbounds i16, i16* %4175, i64 -1
  store i16* %4176, i16** %9, align 8
  br label %4161

4177:                                             ; preds = %4161
  %4178 = load i16*, i16** %8, align 8
  %4179 = getelementptr inbounds [200 x i16], [200 x i16]* %7, i32 0, i32 0
  %4180 = icmp ne i16* %4178, %4179
  br i1 %4180, label %4181, label %4184

4181:                                             ; preds = %4177
  %4182 = load i16*, i16** %8, align 8
  %4183 = bitcast i16* %4182 to i8*
  call void @free(i8* %4183) #9
  br label %4184

4184:                                             ; preds = %4181, %4177
  %4185 = load i8*, i8** %19, align 8
  %4186 = getelementptr inbounds [128 x i8], [128 x i8]* %18, i32 0, i32 0
  %4187 = icmp ne i8* %4185, %4186
  br i1 %4187, label %4188, label %4190

4188:                                             ; preds = %4184
  %4189 = load i8*, i8** %19, align 8
  call void @free(i8* %4189) #9
  br label %4190

4190:                                             ; preds = %4188, %4184
  %4191 = load i32, i32* %15, align 4
  store i32 %4191, i32* %1, align 4
  store i32 1, i32* %27, align 4
  br label %4192

4192:                                             ; preds = %4190, %4037, %174
  %4193 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4193) #9
  %4194 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4194) #9
  %4195 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4195) #9
  %4196 = bitcast [128 x i8]* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 128, i8* %4196) #9
  %4197 = bitcast %0* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4197) #9
  %4198 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4198) #9
  %4199 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4199) #9
  %4200 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4200) #9
  %4201 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4201) #9
  %4202 = bitcast %0** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4202) #9
  %4203 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4203) #9
  %4204 = bitcast [200 x %0]* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1600, i8* %4204) #9
  %4205 = bitcast i16** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4205) #9
  %4206 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4206) #9
  %4207 = bitcast [200 x i16]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 400, i8* %4207) #9
  %4208 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4208) #9
  %4209 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4209) #9
  %4210 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4210) #9
  %4211 = bitcast %0* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4211) #9
  %4212 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4212) #9
  %4213 = load i32, i32* %1, align 4
  ret i32 %4213
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

declare dso_local i32 @zendlex(%0*) #3

declare dso_local void @zend_lex_tstring(%4*) #3

; Function Attrs: alwaysinline nounwind uwtable
define internal %1* @333(%4* %0) #4 {
  %2 = alloca %4*, align 8
  store %4* %0, %4** %2, align 8
  %3 = load %4*, %4** %2, align 8
  %4 = call %1* @zend_ast_create_zval_ex(%4* %3, i16 zeroext 0)
  ret %1* %4
}

declare dso_local %1* @zend_ast_list_add(%1*, %1*) #3

declare dso_local %1* @zend_ast_create_list(i32, i16 zeroext, ...) #3

declare dso_local %1* @zend_ast_append_str(%1*, %1*) #3

declare dso_local %1* @zend_ast_create(i16 zeroext, ...) #3

; Function Attrs: alwaysinline nounwind uwtable
define internal %1* @334(i64 %0) #4 {
  %2 = alloca i64, align 8
  %3 = alloca %4, align 8
  %4 = alloca %4*, align 8
  store i64 %0, i64* %2, align 8
  %5 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %5) #9
  %6 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #9
  store %4* %3, %4** %4, align 8
  %7 = load i64, i64* %2, align 8
  %8 = load %4*, %4** %4, align 8
  %9 = getelementptr inbounds %4, %4* %8, i32 0, i32 0
  %10 = bitcast %5* %9 to i64*
  store i64 %7, i64* %10, align 8
  %11 = load %4*, %4** %4, align 8
  %12 = getelementptr inbounds %4, %4* %11, i32 0, i32 1
  %13 = bitcast %6* %12 to i32*
  store i32 4, i32* %13, align 8
  %14 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #9
  %15 = call %1* @333(%4* %3)
  %16 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %16) #9
  ret %1* %15
}

declare dso_local i64 @zend_get_scanned_file_offset() #3

declare dso_local void @zend_stop_lexing() #3

; Function Attrs: alwaysinline nounwind uwtable
define internal void @335(%34* %0) #4 {
  %2 = alloca %34*, align 8
  store %34* %0, %34** %2, align 8
  %3 = load %34*, %34** %2, align 8
  %4 = getelementptr inbounds %34, %34* %3, i32 0, i32 0
  %5 = getelementptr inbounds %19, %19* %4, i32 0, i32 1
  %6 = bitcast %20* %5 to %54*
  %7 = getelementptr inbounds %54, %54* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %1
  %13 = load %34*, %34** %2, align 8
  %14 = getelementptr inbounds %34, %34* %13, i32 0, i32 0
  %15 = getelementptr inbounds %19, %19* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %12
  %20 = load %34*, %34** %2, align 8
  %21 = getelementptr inbounds %34, %34* %20, i32 0, i32 0
  %22 = getelementptr inbounds %19, %19* %21, i32 0, i32 1
  %23 = bitcast %20* %22 to %54*
  %24 = getelementptr inbounds %54, %54* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %26, 1
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load %34*, %34** %2, align 8
  %31 = bitcast %34* %30 to i8*
  call void @free(i8* %31) #9
  br label %35

32:                                               ; preds = %19
  %33 = load %34*, %34** %2, align 8
  %34 = bitcast %34* %33 to i8*
  call void @_efree(i8* %34)
  br label %35

35:                                               ; preds = %32, %29
  br label %36

36:                                               ; preds = %35, %12
  br label %37

37:                                               ; preds = %36, %1
  ret void
}

; Function Attrs: noreturn
declare dso_local void @zend_error_noreturn(i32, i8*, ...) #5

declare dso_local void @zend_handle_encoding_declaration(%1*) #3

declare dso_local %1* @zend_ast_create_decl(i16 zeroext, i32, i32, %34*, %34*, %1*, %1*, %1*, %1*) #3

; Function Attrs: alwaysinline nounwind uwtable
define internal %34* @336(%1* %0) #4 {
  %2 = alloca %1*, align 8
  %3 = alloca %4*, align 8
  store %1* %0, %1** %2, align 8
  %4 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load %1*, %1** %2, align 8
  %6 = call %4* @345(%1* %5)
  store %4* %6, %4** %3, align 8
  br label %7

7:                                                ; preds = %1
  %8 = load %4*, %4** %3, align 8
  %9 = call zeroext i8 @346(%4* %8)
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 6
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %7
  unreachable

18:                                               ; preds = %7
  br label %19

19:                                               ; preds = %18
  br label %20

20:                                               ; preds = %19
  %21 = load %4*, %4** %3, align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 0
  %23 = bitcast %5* %22 to %34**
  %24 = load %34*, %34** %23, align 8
  %25 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #9
  ret %34* %24
}

declare dso_local i32 @zend_add_class_modifier(i32, i32) #3

declare dso_local %1* @zend_ast_create_ex(i16 zeroext, i16 zeroext, ...) #3

declare dso_local i32 @zend_add_member_modifier(i32, i32) #3

; Function Attrs: alwaysinline nounwind uwtable
define internal %1* @337(%34* %0) #4 {
  %2 = alloca %34*, align 8
  %3 = alloca %4, align 8
  %4 = alloca %4*, align 8
  %5 = alloca %34*, align 8
  store %34* %0, %34** %2, align 8
  %6 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %6) #9
  br label %7

7:                                                ; preds = %1
  %8 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #9
  store %4* %3, %4** %4, align 8
  %9 = bitcast %34** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  %10 = load %34*, %34** %2, align 8
  store %34* %10, %34** %5, align 8
  %11 = load %34*, %34** %5, align 8
  %12 = load %4*, %4** %4, align 8
  %13 = getelementptr inbounds %4, %4* %12, i32 0, i32 0
  %14 = bitcast %5* %13 to %34**
  store %34* %11, %34** %14, align 8
  %15 = load %34*, %34** %5, align 8
  %16 = getelementptr inbounds %34, %34* %15, i32 0, i32 0
  %17 = getelementptr inbounds %19, %19* %16, i32 0, i32 1
  %18 = bitcast %20* %17 to %54*
  %19 = getelementptr inbounds %54, %54* %18, i32 0, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = and i32 %21, 2
  %23 = icmp ne i32 %22, 0
  %24 = zext i1 %23 to i64
  %25 = select i1 %23, i32 6, i32 5126
  %26 = load %4*, %4** %4, align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 1
  %28 = bitcast %6* %27 to i32*
  store i32 %25, i32* %28, align 8
  %29 = bitcast %34** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #9
  %30 = bitcast %4** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #9
  br label %31

31:                                               ; preds = %7
  br label %32

32:                                               ; preds = %31
  %33 = call %1* @333(%4* %3)
  %34 = bitcast %4* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %34) #9
  ret %1* %33
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %1* @338(i32 %0, %1* %1, %1* %2) #4 {
  %4 = alloca i32, align 4
  %5 = alloca %1*, align 8
  %6 = alloca %1*, align 8
  store i32 %0, i32* %4, align 4
  store %1* %1, %1** %5, align 8
  store %1* %2, %1** %6, align 8
  %7 = load i32, i32* %4, align 4
  %8 = trunc i32 %7 to i16
  %9 = load %1*, %1** %5, align 8
  %10 = load %1*, %1** %6, align 8
  %11 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 519, i16 zeroext %8, %1* %9, %1* %10)
  ret %1* %11
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %1* @339(i32 %0, %1* %1, %1* %2) #4 {
  %4 = alloca i32, align 4
  %5 = alloca %1*, align 8
  %6 = alloca %1*, align 8
  store i32 %0, i32* %4, align 4
  store %1* %1, %1** %5, align 8
  store %1* %2, %1** %6, align 8
  %7 = load i32, i32* %4, align 4
  %8 = trunc i32 %7 to i16
  %9 = load %1*, %1** %5, align 8
  %10 = load %1*, %1** %6, align 8
  %11 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 520, i16 zeroext %8, %1* %9, %1* %10)
  ret %1* %11
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %1* @340(i32 %0, %1* %1) #4 {
  %3 = alloca i32, align 4
  %4 = alloca %1*, align 8
  store i32 %0, i32* %3, align 4
  store %1* %1, %1** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = trunc i32 %5 to i16
  %7 = load %1*, %1** %4, align 8
  %8 = call %1* (i16, i16, ...) @zend_ast_create_ex(i16 zeroext 261, i16 zeroext %6, %1* %7)
  ret %1* %8
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %34* @341(i8* %0, i64 %1, i32 %2) #4 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %34*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #9
  %9 = load i64, i64* %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call %34* @347(i64 %9, i32 %10)
  store %34* %11, %34** %7, align 8
  %12 = load %34*, %34** %7, align 8
  %13 = getelementptr inbounds %34, %34* %12, i32 0, i32 3
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i32 0, i32 0
  %15 = load i8*, i8** %4, align 8
  %16 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 %15, i64 %16, i1 false)
  %17 = load %34*, %34** %7, align 8
  %18 = getelementptr inbounds %34, %34* %17, i32 0, i32 3
  %19 = load i64, i64* %5, align 8
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i64 0, i64 %19
  store i8 0, i8* %20, align 1
  %21 = load %34*, %34** %7, align 8
  %22 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #9
  ret %34* %21
}

declare dso_local %1* @zend_ast_create_zval_ex(%4*, i16 zeroext) #3

; Function Attrs: alwaysinline nounwind uwtable
define internal %1* @342(%1* %0) #4 {
  %2 = alloca %1*, align 8
  %3 = alloca %55*, align 8
  store %1* %0, %1** %2, align 8
  %4 = bitcast %55** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load %1*, %1** %2, align 8
  %6 = call %55* @349(%1* %5)
  store %55* %6, %55** %3, align 8
  %7 = load %55*, %55** %3, align 8
  %8 = getelementptr inbounds %55, %55* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %1
  %12 = load %55*, %55** %3, align 8
  %13 = getelementptr inbounds %55, %55* %12, i32 0, i32 4
  %14 = load %55*, %55** %3, align 8
  %15 = getelementptr inbounds %55, %55* %14, i32 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = sub i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [1 x %1*], [1 x %1*]* %13, i64 0, i64 %18
  %20 = load %1*, %1** %19, align 8
  %21 = icmp eq %1* %20, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %11
  %23 = load %55*, %55** %3, align 8
  %24 = getelementptr inbounds %55, %55* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, -1
  store i32 %26, i32* %24, align 8
  br label %27

27:                                               ; preds = %22, %11, %1
  %28 = load %1*, %1** %2, align 8
  %29 = bitcast %55** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #9
  ret %1* %28
}

declare dso_local %1* @zend_negate_num_string(%1*) #3

; Function Attrs: nounwind uwtable
define internal i32 @343(i64* %0, i8** %1, i16* %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i64*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i16*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [5 x i8*], align 16
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  store i64* %0, i64** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i16* %2, i16** %8, align 8
  store i32 %3, i32* %9, align 4
  %25 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #9
  %26 = load i32, i32* %9, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [305 x i8*], [305 x i8*]* @19, i64 0, i64 %27
  %29 = load i8*, i8** %28, align 8
  %30 = call i64 @351(i8* null, i8* %29)
  store i64 %30, i64* %10, align 8
  %31 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #9
  %32 = load i64, i64* %10, align 8
  store i64 %32, i64* %11, align 8
  %33 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #9
  store i8* null, i8** %12, align 8
  %34 = bitcast [5 x i8*]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %34) #9
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #9
  store i32 0, i32* %14, align 4
  %36 = load i32, i32* %9, align 4
  %37 = icmp ne i32 %36, -2
  br i1 %37, label %38, label %158

38:                                               ; preds = %4
  %39 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #9
  %40 = load i16*, i16** %8, align 8
  %41 = load i16, i16* %40, align 2
  %42 = sext i16 %41 to i64
  %43 = getelementptr inbounds [945 x i16], [945 x i16]* @1, i64 0, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  store i32 %45, i32* %15, align 4
  %46 = load i32, i32* %9, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [305 x i8*], [305 x i8*]* @19, i64 0, i64 %47
  %49 = load i8*, i8** %48, align 8
  %50 = load i32, i32* %14, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %14, align 4
  %52 = sext i32 %50 to i64
  %53 = getelementptr inbounds [5 x i8*], [5 x i8*]* %13, i64 0, i64 %52
  store i8* %49, i8** %53, align 8
  %54 = load i32, i32* %15, align 4
  %55 = icmp eq i32 %54, -722
  br i1 %55, label %153, label %56

56:                                               ; preds = %38
  %57 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #9
  %58 = load i32, i32* %15, align 4
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %56
  %61 = load i32, i32* %15, align 4
  %62 = sub nsw i32 0, %61
  br label %64

63:                                               ; preds = %56
  br label %64

64:                                               ; preds = %63, %60
  %65 = phi i32 [ %62, %60 ], [ 0, %63 ]
  store i32 %65, i32* %16, align 4
  %66 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %66) #9
  %67 = load i32, i32* %15, align 4
  %68 = sub nsw i32 7398, %67
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %17, align 4
  %70 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #9
  %71 = load i32, i32* %17, align 4
  %72 = icmp slt i32 %71, 166
  br i1 %72, label %73, label %75

73:                                               ; preds = %64
  %74 = load i32, i32* %17, align 4
  br label %76

75:                                               ; preds = %64
  br label %76

76:                                               ; preds = %75, %73
  %77 = phi i32 [ %74, %73 ], [ 166, %75 ]
  store i32 %77, i32* %18, align 4
  %78 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %78) #9
  %79 = load i32, i32* %16, align 4
  store i32 %79, i32* %19, align 4
  br label %80

80:                                               ; preds = %142, %76
  %81 = load i32, i32* %19, align 4
  %82 = load i32, i32* %18, align 4
  %83 = icmp slt i32 %81, %82
  br i1 %83, label %84, label %145

84:                                               ; preds = %80
  %85 = load i32, i32* %19, align 4
  %86 = load i32, i32* %15, align 4
  %87 = add nsw i32 %85, %86
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [7399 x i16], [7399 x i16]* @3, i64 0, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = sext i16 %90 to i32
  %92 = load i32, i32* %19, align 4
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %94, label %141

94:                                               ; preds = %84
  %95 = load i32, i32* %19, align 4
  %96 = icmp ne i32 %95, 1
  br i1 %96, label %97, label %141

97:                                               ; preds = %94
  %98 = load i32, i32* %19, align 4
  %99 = load i32, i32* %15, align 4
  %100 = add nsw i32 %98, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [7399 x i16], [7399 x i16]* @4, i64 0, i64 %101
  %103 = load i16, i16* %102, align 2
  %104 = sext i16 %103 to i32
  %105 = icmp eq i32 %104, -472
  br i1 %105, label %141, label %106

106:                                              ; preds = %97
  %107 = load i32, i32* %14, align 4
  %108 = icmp eq i32 %107, 5
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  store i32 1, i32* %14, align 4
  %110 = load i64, i64* %10, align 8
  store i64 %110, i64* %11, align 8
  br label %145

111:                                              ; preds = %106
  %112 = load i32, i32* %19, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [305 x i8*], [305 x i8*]* @19, i64 0, i64 %113
  %115 = load i8*, i8** %114, align 8
  %116 = load i32, i32* %14, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %14, align 4
  %118 = sext i32 %116 to i64
  %119 = getelementptr inbounds [5 x i8*], [5 x i8*]* %13, i64 0, i64 %118
  store i8* %115, i8** %119, align 8
  %120 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %120) #9
  %121 = load i64, i64* %11, align 8
  %122 = load i32, i32* %19, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [305 x i8*], [305 x i8*]* @19, i64 0, i64 %123
  %125 = load i8*, i8** %124, align 8
  %126 = call i64 @351(i8* null, i8* %125)
  %127 = add i64 %121, %126
  store i64 %127, i64* %20, align 8
  %128 = load i64, i64* %11, align 8
  %129 = load i64, i64* %20, align 8
  %130 = icmp ule i64 %128, %129
  br i1 %130, label %131, label %134

131:                                              ; preds = %111
  %132 = load i64, i64* %20, align 8
  %133 = icmp ule i64 %132, -1
  br i1 %133, label %135, label %134

134:                                              ; preds = %131, %111
  store i32 2, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %137

135:                                              ; preds = %131
  %136 = load i64, i64* %20, align 8
  store i64 %136, i64* %11, align 8
  store i32 0, i32* %21, align 4
  br label %137

137:                                              ; preds = %135, %134
  %138 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #9
  %139 = load i32, i32* %21, align 4
  switch i32 %139, label %146 [
    i32 0, label %140
  ]

140:                                              ; preds = %137
  br label %141

141:                                              ; preds = %140, %97, %94, %84
  br label %142

142:                                              ; preds = %141
  %143 = load i32, i32* %19, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %19, align 4
  br label %80

145:                                              ; preds = %109, %80
  store i32 0, i32* %21, align 4
  br label %146

146:                                              ; preds = %145, %137
  %147 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %147) #9
  %148 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %148) #9
  %149 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %149) #9
  %150 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %150) #9
  %151 = load i32, i32* %21, align 4
  switch i32 %151, label %154 [
    i32 0, label %152
  ]

152:                                              ; preds = %146
  br label %153

153:                                              ; preds = %152, %38
  store i32 0, i32* %21, align 4
  br label %154

154:                                              ; preds = %153, %146
  %155 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %155) #9
  %156 = load i32, i32* %21, align 4
  switch i32 %156, label %251 [
    i32 0, label %157
  ]

157:                                              ; preds = %154
  br label %158

158:                                              ; preds = %157, %4
  %159 = load i32, i32* %14, align 4
  switch i32 %159, label %166 [
    i32 0, label %160
    i32 1, label %161
    i32 2, label %162
    i32 3, label %163
    i32 4, label %164
    i32 5, label %165
  ]

160:                                              ; preds = %158
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @12, i32 0, i32 0), i8** %12, align 8
  br label %166

161:                                              ; preds = %158
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @20, i32 0, i32 0), i8** %12, align 8
  br label %166

162:                                              ; preds = %158
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @21, i32 0, i32 0), i8** %12, align 8
  br label %166

163:                                              ; preds = %158
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @22, i32 0, i32 0), i8** %12, align 8
  br label %166

164:                                              ; preds = %158
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @23, i32 0, i32 0), i8** %12, align 8
  br label %166

165:                                              ; preds = %158
  store i8* getelementptr inbounds ([60 x i8], [60 x i8]* @24, i32 0, i32 0), i8** %12, align 8
  br label %166

166:                                              ; preds = %158, %165, %164, %163, %162, %161, %160
  %167 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %167) #9
  %168 = load i64, i64* %11, align 8
  %169 = load i8*, i8** %12, align 8
  %170 = call i64 @strlen(i8* %169) #11
  %171 = add i64 %168, %170
  store i64 %171, i64* %22, align 8
  %172 = load i64, i64* %11, align 8
  %173 = load i64, i64* %22, align 8
  %174 = icmp ule i64 %172, %173
  br i1 %174, label %175, label %178

175:                                              ; preds = %166
  %176 = load i64, i64* %22, align 8
  %177 = icmp ule i64 %176, -1
  br i1 %177, label %179, label %178

178:                                              ; preds = %175, %166
  store i32 2, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %181

179:                                              ; preds = %175
  %180 = load i64, i64* %22, align 8
  store i64 %180, i64* %11, align 8
  store i32 0, i32* %21, align 4
  br label %181

181:                                              ; preds = %179, %178
  %182 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #9
  %183 = load i32, i32* %21, align 4
  switch i32 %183, label %251 [
    i32 0, label %184
  ]

184:                                              ; preds = %181
  %185 = load i64*, i64** %6, align 8
  %186 = load i64, i64* %185, align 8
  %187 = load i64, i64* %11, align 8
  %188 = icmp ult i64 %186, %187
  br i1 %188, label %189, label %204

189:                                              ; preds = %184
  %190 = load i64, i64* %11, align 8
  %191 = mul i64 2, %190
  %192 = load i64*, i64** %6, align 8
  store i64 %191, i64* %192, align 8
  %193 = load i64, i64* %11, align 8
  %194 = load i64*, i64** %6, align 8
  %195 = load i64, i64* %194, align 8
  %196 = icmp ule i64 %193, %195
  br i1 %196, label %197, label %201

197:                                              ; preds = %189
  %198 = load i64*, i64** %6, align 8
  %199 = load i64, i64* %198, align 8
  %200 = icmp ule i64 %199, -1
  br i1 %200, label %203, label %201

201:                                              ; preds = %197, %189
  %202 = load i64*, i64** %6, align 8
  store i64 -1, i64* %202, align 8
  br label %203

203:                                              ; preds = %201, %197
  store i32 1, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %251

204:                                              ; preds = %184
  %205 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %205) #9
  %206 = load i8**, i8*** %7, align 8
  %207 = load i8*, i8** %206, align 8
  store i8* %207, i8** %23, align 8
  %208 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %208) #9
  store i32 0, i32* %24, align 4
  br label %209

209:                                              ; preds = %247, %204
  %210 = load i8*, i8** %12, align 8
  %211 = load i8, i8* %210, align 1
  %212 = load i8*, i8** %23, align 8
  store i8 %211, i8* %212, align 1
  %213 = sext i8 %211 to i32
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %215, label %248

215:                                              ; preds = %209
  %216 = load i8*, i8** %23, align 8
  %217 = load i8, i8* %216, align 1
  %218 = sext i8 %217 to i32
  %219 = icmp eq i32 %218, 37
  br i1 %219, label %220, label %242

220:                                              ; preds = %215
  %221 = load i8*, i8** %12, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 1
  %223 = load i8, i8* %222, align 1
  %224 = sext i8 %223 to i32
  %225 = icmp eq i32 %224, 115
  br i1 %225, label %226, label %242

226:                                              ; preds = %220
  %227 = load i32, i32* %24, align 4
  %228 = load i32, i32* %14, align 4
  %229 = icmp slt i32 %227, %228
  br i1 %229, label %230, label %242

230:                                              ; preds = %226
  %231 = load i8*, i8** %23, align 8
  %232 = load i32, i32* %24, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %24, align 4
  %234 = sext i32 %232 to i64
  %235 = getelementptr inbounds [5 x i8*], [5 x i8*]* %13, i64 0, i64 %234
  %236 = load i8*, i8** %235, align 8
  %237 = call i64 @351(i8* %231, i8* %236)
  %238 = load i8*, i8** %23, align 8
  %239 = getelementptr inbounds i8, i8* %238, i64 %237
  store i8* %239, i8** %23, align 8
  %240 = load i8*, i8** %12, align 8
  %241 = getelementptr inbounds i8, i8* %240, i64 2
  store i8* %241, i8** %12, align 8
  br label %247

242:                                              ; preds = %226, %220, %215
  %243 = load i8*, i8** %23, align 8
  %244 = getelementptr inbounds i8, i8* %243, i32 1
  store i8* %244, i8** %23, align 8
  %245 = load i8*, i8** %12, align 8
  %246 = getelementptr inbounds i8, i8* %245, i32 1
  store i8* %246, i8** %12, align 8
  br label %247

247:                                              ; preds = %242, %230
  br label %209

248:                                              ; preds = %209
  %249 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %249) #9
  %250 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %250) #9
  store i32 0, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %251

251:                                              ; preds = %248, %203, %181, %154
  %252 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %252) #9
  %253 = bitcast [5 x i8*]* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %253) #9
  %254 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %254) #9
  %255 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %255) #9
  %256 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %256) #9
  %257 = load i32, i32* %5, align 4
  ret i32 %257
}

declare dso_local void @zenderror(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @344(i8* %0, i32 %1, %0* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %0*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store %0* %2, %0** %6, align 8
  %7 = load %0*, %0** %6, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %3
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @332, i32 0, i32 0), i8** %4, align 8
  br label %11

11:                                               ; preds = %10, %3
  %12 = load i32, i32* %5, align 4
  switch i32 %12, label %503 [
    i32 81, label %13
    i32 82, label %17
    i32 83, label %21
    i32 84, label %25
    i32 85, label %29
    i32 86, label %33
    i32 87, label %37
    i32 88, label %41
    i32 89, label %45
    i32 170, label %49
    i32 171, label %53
    i32 172, label %57
    i32 173, label %61
    i32 174, label %65
    i32 178, label %69
    i32 179, label %73
    i32 181, label %77
    i32 182, label %81
    i32 183, label %85
    i32 184, label %89
    i32 185, label %93
    i32 186, label %97
    i32 187, label %101
    i32 188, label %105
    i32 189, label %109
    i32 190, label %113
    i32 192, label %117
    i32 193, label %121
    i32 194, label %125
    i32 195, label %129
    i32 196, label %133
    i32 197, label %137
    i32 200, label %141
    i32 205, label %145
    i32 207, label %149
    i32 209, label %153
    i32 210, label %157
    i32 211, label %161
    i32 212, label %165
    i32 213, label %169
    i32 214, label %173
    i32 215, label %177
    i32 216, label %181
    i32 217, label %185
    i32 219, label %189
    i32 220, label %193
    i32 221, label %197
    i32 222, label %201
    i32 223, label %205
    i32 224, label %209
    i32 225, label %213
    i32 226, label %217
    i32 227, label %221
    i32 228, label %225
    i32 229, label %229
    i32 230, label %233
    i32 231, label %237
    i32 232, label %241
    i32 233, label %245
    i32 234, label %249
    i32 235, label %253
    i32 236, label %257
    i32 237, label %261
    i32 238, label %265
    i32 239, label %269
    i32 240, label %273
    i32 241, label %277
    i32 242, label %281
    i32 243, label %285
    i32 244, label %289
    i32 245, label %293
    i32 246, label %297
    i32 247, label %301
    i32 248, label %305
    i32 253, label %309
    i32 254, label %313
    i32 255, label %317
    i32 256, label %321
    i32 257, label %325
    i32 258, label %329
    i32 259, label %333
    i32 260, label %337
    i32 261, label %341
    i32 262, label %345
    i32 264, label %349
    i32 265, label %353
    i32 267, label %357
    i32 270, label %367
    i32 271, label %371
    i32 272, label %375
    i32 273, label %379
    i32 274, label %383
    i32 275, label %387
    i32 276, label %391
    i32 277, label %395
    i32 278, label %399
    i32 279, label %403
    i32 280, label %407
    i32 281, label %411
    i32 282, label %415
    i32 283, label %419
    i32 284, label %423
    i32 285, label %427
    i32 286, label %431
    i32 287, label %435
    i32 288, label %439
    i32 289, label %443
    i32 290, label %447
    i32 291, label %451
    i32 292, label %455
    i32 293, label %459
    i32 294, label %463
    i32 295, label %467
    i32 296, label %471
    i32 297, label %475
    i32 298, label %479
    i32 299, label %483
    i32 300, label %487
    i32 301, label %491
    i32 302, label %495
    i32 303, label %499
  ]

13:                                               ; preds = %11
  %14 = load %0*, %0** %6, align 8
  %15 = bitcast %0* %14 to %1**
  %16 = load %1*, %1** %15, align 8
  call void @zend_ast_destroy(%1* %16)
  br label %504

17:                                               ; preds = %11
  %18 = load %0*, %0** %6, align 8
  %19 = bitcast %0* %18 to %1**
  %20 = load %1*, %1** %19, align 8
  call void @zend_ast_destroy(%1* %20)
  br label %504

21:                                               ; preds = %11
  %22 = load %0*, %0** %6, align 8
  %23 = bitcast %0* %22 to %1**
  %24 = load %1*, %1** %23, align 8
  call void @zend_ast_destroy(%1* %24)
  br label %504

25:                                               ; preds = %11
  %26 = load %0*, %0** %6, align 8
  %27 = bitcast %0* %26 to %1**
  %28 = load %1*, %1** %27, align 8
  call void @zend_ast_destroy(%1* %28)
  br label %504

29:                                               ; preds = %11
  %30 = load %0*, %0** %6, align 8
  %31 = bitcast %0* %30 to %1**
  %32 = load %1*, %1** %31, align 8
  call void @zend_ast_destroy(%1* %32)
  br label %504

33:                                               ; preds = %11
  %34 = load %0*, %0** %6, align 8
  %35 = bitcast %0* %34 to %1**
  %36 = load %1*, %1** %35, align 8
  call void @zend_ast_destroy(%1* %36)
  br label %504

37:                                               ; preds = %11
  %38 = load %0*, %0** %6, align 8
  %39 = bitcast %0* %38 to %1**
  %40 = load %1*, %1** %39, align 8
  call void @zend_ast_destroy(%1* %40)
  br label %504

41:                                               ; preds = %11
  %42 = load %0*, %0** %6, align 8
  %43 = bitcast %0* %42 to %1**
  %44 = load %1*, %1** %43, align 8
  call void @zend_ast_destroy(%1* %44)
  br label %504

45:                                               ; preds = %11
  %46 = load %0*, %0** %6, align 8
  %47 = bitcast %0* %46 to %1**
  %48 = load %1*, %1** %47, align 8
  call void @zend_ast_destroy(%1* %48)
  br label %504

49:                                               ; preds = %11
  %50 = load %0*, %0** %6, align 8
  %51 = bitcast %0* %50 to %1**
  %52 = load %1*, %1** %51, align 8
  call void @zend_ast_destroy(%1* %52)
  br label %504

53:                                               ; preds = %11
  %54 = load %0*, %0** %6, align 8
  %55 = bitcast %0* %54 to %1**
  %56 = load %1*, %1** %55, align 8
  call void @zend_ast_destroy(%1* %56)
  br label %504

57:                                               ; preds = %11
  %58 = load %0*, %0** %6, align 8
  %59 = bitcast %0* %58 to %1**
  %60 = load %1*, %1** %59, align 8
  call void @zend_ast_destroy(%1* %60)
  br label %504

61:                                               ; preds = %11
  %62 = load %0*, %0** %6, align 8
  %63 = bitcast %0* %62 to %1**
  %64 = load %1*, %1** %63, align 8
  call void @zend_ast_destroy(%1* %64)
  br label %504

65:                                               ; preds = %11
  %66 = load %0*, %0** %6, align 8
  %67 = bitcast %0* %66 to %1**
  %68 = load %1*, %1** %67, align 8
  call void @zend_ast_destroy(%1* %68)
  br label %504

69:                                               ; preds = %11
  %70 = load %0*, %0** %6, align 8
  %71 = bitcast %0* %70 to %1**
  %72 = load %1*, %1** %71, align 8
  call void @zend_ast_destroy(%1* %72)
  br label %504

73:                                               ; preds = %11
  %74 = load %0*, %0** %6, align 8
  %75 = bitcast %0* %74 to %1**
  %76 = load %1*, %1** %75, align 8
  call void @zend_ast_destroy(%1* %76)
  br label %504

77:                                               ; preds = %11
  %78 = load %0*, %0** %6, align 8
  %79 = bitcast %0* %78 to %1**
  %80 = load %1*, %1** %79, align 8
  call void @zend_ast_destroy(%1* %80)
  br label %504

81:                                               ; preds = %11
  %82 = load %0*, %0** %6, align 8
  %83 = bitcast %0* %82 to %1**
  %84 = load %1*, %1** %83, align 8
  call void @zend_ast_destroy(%1* %84)
  br label %504

85:                                               ; preds = %11
  %86 = load %0*, %0** %6, align 8
  %87 = bitcast %0* %86 to %1**
  %88 = load %1*, %1** %87, align 8
  call void @zend_ast_destroy(%1* %88)
  br label %504

89:                                               ; preds = %11
  %90 = load %0*, %0** %6, align 8
  %91 = bitcast %0* %90 to %1**
  %92 = load %1*, %1** %91, align 8
  call void @zend_ast_destroy(%1* %92)
  br label %504

93:                                               ; preds = %11
  %94 = load %0*, %0** %6, align 8
  %95 = bitcast %0* %94 to %1**
  %96 = load %1*, %1** %95, align 8
  call void @zend_ast_destroy(%1* %96)
  br label %504

97:                                               ; preds = %11
  %98 = load %0*, %0** %6, align 8
  %99 = bitcast %0* %98 to %1**
  %100 = load %1*, %1** %99, align 8
  call void @zend_ast_destroy(%1* %100)
  br label %504

101:                                              ; preds = %11
  %102 = load %0*, %0** %6, align 8
  %103 = bitcast %0* %102 to %1**
  %104 = load %1*, %1** %103, align 8
  call void @zend_ast_destroy(%1* %104)
  br label %504

105:                                              ; preds = %11
  %106 = load %0*, %0** %6, align 8
  %107 = bitcast %0* %106 to %1**
  %108 = load %1*, %1** %107, align 8
  call void @zend_ast_destroy(%1* %108)
  br label %504

109:                                              ; preds = %11
  %110 = load %0*, %0** %6, align 8
  %111 = bitcast %0* %110 to %1**
  %112 = load %1*, %1** %111, align 8
  call void @zend_ast_destroy(%1* %112)
  br label %504

113:                                              ; preds = %11
  %114 = load %0*, %0** %6, align 8
  %115 = bitcast %0* %114 to %1**
  %116 = load %1*, %1** %115, align 8
  call void @zend_ast_destroy(%1* %116)
  br label %504

117:                                              ; preds = %11
  %118 = load %0*, %0** %6, align 8
  %119 = bitcast %0* %118 to %1**
  %120 = load %1*, %1** %119, align 8
  call void @zend_ast_destroy(%1* %120)
  br label %504

121:                                              ; preds = %11
  %122 = load %0*, %0** %6, align 8
  %123 = bitcast %0* %122 to %1**
  %124 = load %1*, %1** %123, align 8
  call void @zend_ast_destroy(%1* %124)
  br label %504

125:                                              ; preds = %11
  %126 = load %0*, %0** %6, align 8
  %127 = bitcast %0* %126 to %1**
  %128 = load %1*, %1** %127, align 8
  call void @zend_ast_destroy(%1* %128)
  br label %504

129:                                              ; preds = %11
  %130 = load %0*, %0** %6, align 8
  %131 = bitcast %0* %130 to %1**
  %132 = load %1*, %1** %131, align 8
  call void @zend_ast_destroy(%1* %132)
  br label %504

133:                                              ; preds = %11
  %134 = load %0*, %0** %6, align 8
  %135 = bitcast %0* %134 to %1**
  %136 = load %1*, %1** %135, align 8
  call void @zend_ast_destroy(%1* %136)
  br label %504

137:                                              ; preds = %11
  %138 = load %0*, %0** %6, align 8
  %139 = bitcast %0* %138 to %1**
  %140 = load %1*, %1** %139, align 8
  call void @zend_ast_destroy(%1* %140)
  br label %504

141:                                              ; preds = %11
  %142 = load %0*, %0** %6, align 8
  %143 = bitcast %0* %142 to %1**
  %144 = load %1*, %1** %143, align 8
  call void @zend_ast_destroy(%1* %144)
  br label %504

145:                                              ; preds = %11
  %146 = load %0*, %0** %6, align 8
  %147 = bitcast %0* %146 to %1**
  %148 = load %1*, %1** %147, align 8
  call void @zend_ast_destroy(%1* %148)
  br label %504

149:                                              ; preds = %11
  %150 = load %0*, %0** %6, align 8
  %151 = bitcast %0* %150 to %1**
  %152 = load %1*, %1** %151, align 8
  call void @zend_ast_destroy(%1* %152)
  br label %504

153:                                              ; preds = %11
  %154 = load %0*, %0** %6, align 8
  %155 = bitcast %0* %154 to %1**
  %156 = load %1*, %1** %155, align 8
  call void @zend_ast_destroy(%1* %156)
  br label %504

157:                                              ; preds = %11
  %158 = load %0*, %0** %6, align 8
  %159 = bitcast %0* %158 to %1**
  %160 = load %1*, %1** %159, align 8
  call void @zend_ast_destroy(%1* %160)
  br label %504

161:                                              ; preds = %11
  %162 = load %0*, %0** %6, align 8
  %163 = bitcast %0* %162 to %1**
  %164 = load %1*, %1** %163, align 8
  call void @zend_ast_destroy(%1* %164)
  br label %504

165:                                              ; preds = %11
  %166 = load %0*, %0** %6, align 8
  %167 = bitcast %0* %166 to %1**
  %168 = load %1*, %1** %167, align 8
  call void @zend_ast_destroy(%1* %168)
  br label %504

169:                                              ; preds = %11
  %170 = load %0*, %0** %6, align 8
  %171 = bitcast %0* %170 to %1**
  %172 = load %1*, %1** %171, align 8
  call void @zend_ast_destroy(%1* %172)
  br label %504

173:                                              ; preds = %11
  %174 = load %0*, %0** %6, align 8
  %175 = bitcast %0* %174 to %1**
  %176 = load %1*, %1** %175, align 8
  call void @zend_ast_destroy(%1* %176)
  br label %504

177:                                              ; preds = %11
  %178 = load %0*, %0** %6, align 8
  %179 = bitcast %0* %178 to %1**
  %180 = load %1*, %1** %179, align 8
  call void @zend_ast_destroy(%1* %180)
  br label %504

181:                                              ; preds = %11
  %182 = load %0*, %0** %6, align 8
  %183 = bitcast %0* %182 to %1**
  %184 = load %1*, %1** %183, align 8
  call void @zend_ast_destroy(%1* %184)
  br label %504

185:                                              ; preds = %11
  %186 = load %0*, %0** %6, align 8
  %187 = bitcast %0* %186 to %1**
  %188 = load %1*, %1** %187, align 8
  call void @zend_ast_destroy(%1* %188)
  br label %504

189:                                              ; preds = %11
  %190 = load %0*, %0** %6, align 8
  %191 = bitcast %0* %190 to %1**
  %192 = load %1*, %1** %191, align 8
  call void @zend_ast_destroy(%1* %192)
  br label %504

193:                                              ; preds = %11
  %194 = load %0*, %0** %6, align 8
  %195 = bitcast %0* %194 to %1**
  %196 = load %1*, %1** %195, align 8
  call void @zend_ast_destroy(%1* %196)
  br label %504

197:                                              ; preds = %11
  %198 = load %0*, %0** %6, align 8
  %199 = bitcast %0* %198 to %1**
  %200 = load %1*, %1** %199, align 8
  call void @zend_ast_destroy(%1* %200)
  br label %504

201:                                              ; preds = %11
  %202 = load %0*, %0** %6, align 8
  %203 = bitcast %0* %202 to %1**
  %204 = load %1*, %1** %203, align 8
  call void @zend_ast_destroy(%1* %204)
  br label %504

205:                                              ; preds = %11
  %206 = load %0*, %0** %6, align 8
  %207 = bitcast %0* %206 to %1**
  %208 = load %1*, %1** %207, align 8
  call void @zend_ast_destroy(%1* %208)
  br label %504

209:                                              ; preds = %11
  %210 = load %0*, %0** %6, align 8
  %211 = bitcast %0* %210 to %1**
  %212 = load %1*, %1** %211, align 8
  call void @zend_ast_destroy(%1* %212)
  br label %504

213:                                              ; preds = %11
  %214 = load %0*, %0** %6, align 8
  %215 = bitcast %0* %214 to %1**
  %216 = load %1*, %1** %215, align 8
  call void @zend_ast_destroy(%1* %216)
  br label %504

217:                                              ; preds = %11
  %218 = load %0*, %0** %6, align 8
  %219 = bitcast %0* %218 to %1**
  %220 = load %1*, %1** %219, align 8
  call void @zend_ast_destroy(%1* %220)
  br label %504

221:                                              ; preds = %11
  %222 = load %0*, %0** %6, align 8
  %223 = bitcast %0* %222 to %1**
  %224 = load %1*, %1** %223, align 8
  call void @zend_ast_destroy(%1* %224)
  br label %504

225:                                              ; preds = %11
  %226 = load %0*, %0** %6, align 8
  %227 = bitcast %0* %226 to %1**
  %228 = load %1*, %1** %227, align 8
  call void @zend_ast_destroy(%1* %228)
  br label %504

229:                                              ; preds = %11
  %230 = load %0*, %0** %6, align 8
  %231 = bitcast %0* %230 to %1**
  %232 = load %1*, %1** %231, align 8
  call void @zend_ast_destroy(%1* %232)
  br label %504

233:                                              ; preds = %11
  %234 = load %0*, %0** %6, align 8
  %235 = bitcast %0* %234 to %1**
  %236 = load %1*, %1** %235, align 8
  call void @zend_ast_destroy(%1* %236)
  br label %504

237:                                              ; preds = %11
  %238 = load %0*, %0** %6, align 8
  %239 = bitcast %0* %238 to %1**
  %240 = load %1*, %1** %239, align 8
  call void @zend_ast_destroy(%1* %240)
  br label %504

241:                                              ; preds = %11
  %242 = load %0*, %0** %6, align 8
  %243 = bitcast %0* %242 to %1**
  %244 = load %1*, %1** %243, align 8
  call void @zend_ast_destroy(%1* %244)
  br label %504

245:                                              ; preds = %11
  %246 = load %0*, %0** %6, align 8
  %247 = bitcast %0* %246 to %1**
  %248 = load %1*, %1** %247, align 8
  call void @zend_ast_destroy(%1* %248)
  br label %504

249:                                              ; preds = %11
  %250 = load %0*, %0** %6, align 8
  %251 = bitcast %0* %250 to %1**
  %252 = load %1*, %1** %251, align 8
  call void @zend_ast_destroy(%1* %252)
  br label %504

253:                                              ; preds = %11
  %254 = load %0*, %0** %6, align 8
  %255 = bitcast %0* %254 to %1**
  %256 = load %1*, %1** %255, align 8
  call void @zend_ast_destroy(%1* %256)
  br label %504

257:                                              ; preds = %11
  %258 = load %0*, %0** %6, align 8
  %259 = bitcast %0* %258 to %1**
  %260 = load %1*, %1** %259, align 8
  call void @zend_ast_destroy(%1* %260)
  br label %504

261:                                              ; preds = %11
  %262 = load %0*, %0** %6, align 8
  %263 = bitcast %0* %262 to %1**
  %264 = load %1*, %1** %263, align 8
  call void @zend_ast_destroy(%1* %264)
  br label %504

265:                                              ; preds = %11
  %266 = load %0*, %0** %6, align 8
  %267 = bitcast %0* %266 to %1**
  %268 = load %1*, %1** %267, align 8
  call void @zend_ast_destroy(%1* %268)
  br label %504

269:                                              ; preds = %11
  %270 = load %0*, %0** %6, align 8
  %271 = bitcast %0* %270 to %1**
  %272 = load %1*, %1** %271, align 8
  call void @zend_ast_destroy(%1* %272)
  br label %504

273:                                              ; preds = %11
  %274 = load %0*, %0** %6, align 8
  %275 = bitcast %0* %274 to %1**
  %276 = load %1*, %1** %275, align 8
  call void @zend_ast_destroy(%1* %276)
  br label %504

277:                                              ; preds = %11
  %278 = load %0*, %0** %6, align 8
  %279 = bitcast %0* %278 to %1**
  %280 = load %1*, %1** %279, align 8
  call void @zend_ast_destroy(%1* %280)
  br label %504

281:                                              ; preds = %11
  %282 = load %0*, %0** %6, align 8
  %283 = bitcast %0* %282 to %1**
  %284 = load %1*, %1** %283, align 8
  call void @zend_ast_destroy(%1* %284)
  br label %504

285:                                              ; preds = %11
  %286 = load %0*, %0** %6, align 8
  %287 = bitcast %0* %286 to %1**
  %288 = load %1*, %1** %287, align 8
  call void @zend_ast_destroy(%1* %288)
  br label %504

289:                                              ; preds = %11
  %290 = load %0*, %0** %6, align 8
  %291 = bitcast %0* %290 to %1**
  %292 = load %1*, %1** %291, align 8
  call void @zend_ast_destroy(%1* %292)
  br label %504

293:                                              ; preds = %11
  %294 = load %0*, %0** %6, align 8
  %295 = bitcast %0* %294 to %1**
  %296 = load %1*, %1** %295, align 8
  call void @zend_ast_destroy(%1* %296)
  br label %504

297:                                              ; preds = %11
  %298 = load %0*, %0** %6, align 8
  %299 = bitcast %0* %298 to %1**
  %300 = load %1*, %1** %299, align 8
  call void @zend_ast_destroy(%1* %300)
  br label %504

301:                                              ; preds = %11
  %302 = load %0*, %0** %6, align 8
  %303 = bitcast %0* %302 to %1**
  %304 = load %1*, %1** %303, align 8
  call void @zend_ast_destroy(%1* %304)
  br label %504

305:                                              ; preds = %11
  %306 = load %0*, %0** %6, align 8
  %307 = bitcast %0* %306 to %1**
  %308 = load %1*, %1** %307, align 8
  call void @zend_ast_destroy(%1* %308)
  br label %504

309:                                              ; preds = %11
  %310 = load %0*, %0** %6, align 8
  %311 = bitcast %0* %310 to %1**
  %312 = load %1*, %1** %311, align 8
  call void @zend_ast_destroy(%1* %312)
  br label %504

313:                                              ; preds = %11
  %314 = load %0*, %0** %6, align 8
  %315 = bitcast %0* %314 to %1**
  %316 = load %1*, %1** %315, align 8
  call void @zend_ast_destroy(%1* %316)
  br label %504

317:                                              ; preds = %11
  %318 = load %0*, %0** %6, align 8
  %319 = bitcast %0* %318 to %1**
  %320 = load %1*, %1** %319, align 8
  call void @zend_ast_destroy(%1* %320)
  br label %504

321:                                              ; preds = %11
  %322 = load %0*, %0** %6, align 8
  %323 = bitcast %0* %322 to %1**
  %324 = load %1*, %1** %323, align 8
  call void @zend_ast_destroy(%1* %324)
  br label %504

325:                                              ; preds = %11
  %326 = load %0*, %0** %6, align 8
  %327 = bitcast %0* %326 to %1**
  %328 = load %1*, %1** %327, align 8
  call void @zend_ast_destroy(%1* %328)
  br label %504

329:                                              ; preds = %11
  %330 = load %0*, %0** %6, align 8
  %331 = bitcast %0* %330 to %1**
  %332 = load %1*, %1** %331, align 8
  call void @zend_ast_destroy(%1* %332)
  br label %504

333:                                              ; preds = %11
  %334 = load %0*, %0** %6, align 8
  %335 = bitcast %0* %334 to %1**
  %336 = load %1*, %1** %335, align 8
  call void @zend_ast_destroy(%1* %336)
  br label %504

337:                                              ; preds = %11
  %338 = load %0*, %0** %6, align 8
  %339 = bitcast %0* %338 to %1**
  %340 = load %1*, %1** %339, align 8
  call void @zend_ast_destroy(%1* %340)
  br label %504

341:                                              ; preds = %11
  %342 = load %0*, %0** %6, align 8
  %343 = bitcast %0* %342 to %1**
  %344 = load %1*, %1** %343, align 8
  call void @zend_ast_destroy(%1* %344)
  br label %504

345:                                              ; preds = %11
  %346 = load %0*, %0** %6, align 8
  %347 = bitcast %0* %346 to %1**
  %348 = load %1*, %1** %347, align 8
  call void @zend_ast_destroy(%1* %348)
  br label %504

349:                                              ; preds = %11
  %350 = load %0*, %0** %6, align 8
  %351 = bitcast %0* %350 to %1**
  %352 = load %1*, %1** %351, align 8
  call void @zend_ast_destroy(%1* %352)
  br label %504

353:                                              ; preds = %11
  %354 = load %0*, %0** %6, align 8
  %355 = bitcast %0* %354 to %1**
  %356 = load %1*, %1** %355, align 8
  call void @zend_ast_destroy(%1* %356)
  br label %504

357:                                              ; preds = %11
  %358 = load %0*, %0** %6, align 8
  %359 = bitcast %0* %358 to %34**
  %360 = load %34*, %34** %359, align 8
  %361 = icmp ne %34* %360, null
  br i1 %361, label %362, label %366

362:                                              ; preds = %357
  %363 = load %0*, %0** %6, align 8
  %364 = bitcast %0* %363 to %34**
  %365 = load %34*, %34** %364, align 8
  call void @335(%34* %365)
  br label %366

366:                                              ; preds = %362, %357
  br label %504

367:                                              ; preds = %11
  %368 = load %0*, %0** %6, align 8
  %369 = bitcast %0* %368 to %1**
  %370 = load %1*, %1** %369, align 8
  call void @zend_ast_destroy(%1* %370)
  br label %504

371:                                              ; preds = %11
  %372 = load %0*, %0** %6, align 8
  %373 = bitcast %0* %372 to %1**
  %374 = load %1*, %1** %373, align 8
  call void @zend_ast_destroy(%1* %374)
  br label %504

375:                                              ; preds = %11
  %376 = load %0*, %0** %6, align 8
  %377 = bitcast %0* %376 to %1**
  %378 = load %1*, %1** %377, align 8
  call void @zend_ast_destroy(%1* %378)
  br label %504

379:                                              ; preds = %11
  %380 = load %0*, %0** %6, align 8
  %381 = bitcast %0* %380 to %1**
  %382 = load %1*, %1** %381, align 8
  call void @zend_ast_destroy(%1* %382)
  br label %504

383:                                              ; preds = %11
  %384 = load %0*, %0** %6, align 8
  %385 = bitcast %0* %384 to %1**
  %386 = load %1*, %1** %385, align 8
  call void @zend_ast_destroy(%1* %386)
  br label %504

387:                                              ; preds = %11
  %388 = load %0*, %0** %6, align 8
  %389 = bitcast %0* %388 to %1**
  %390 = load %1*, %1** %389, align 8
  call void @zend_ast_destroy(%1* %390)
  br label %504

391:                                              ; preds = %11
  %392 = load %0*, %0** %6, align 8
  %393 = bitcast %0* %392 to %1**
  %394 = load %1*, %1** %393, align 8
  call void @zend_ast_destroy(%1* %394)
  br label %504

395:                                              ; preds = %11
  %396 = load %0*, %0** %6, align 8
  %397 = bitcast %0* %396 to %1**
  %398 = load %1*, %1** %397, align 8
  call void @zend_ast_destroy(%1* %398)
  br label %504

399:                                              ; preds = %11
  %400 = load %0*, %0** %6, align 8
  %401 = bitcast %0* %400 to %1**
  %402 = load %1*, %1** %401, align 8
  call void @zend_ast_destroy(%1* %402)
  br label %504

403:                                              ; preds = %11
  %404 = load %0*, %0** %6, align 8
  %405 = bitcast %0* %404 to %1**
  %406 = load %1*, %1** %405, align 8
  call void @zend_ast_destroy(%1* %406)
  br label %504

407:                                              ; preds = %11
  %408 = load %0*, %0** %6, align 8
  %409 = bitcast %0* %408 to %1**
  %410 = load %1*, %1** %409, align 8
  call void @zend_ast_destroy(%1* %410)
  br label %504

411:                                              ; preds = %11
  %412 = load %0*, %0** %6, align 8
  %413 = bitcast %0* %412 to %1**
  %414 = load %1*, %1** %413, align 8
  call void @zend_ast_destroy(%1* %414)
  br label %504

415:                                              ; preds = %11
  %416 = load %0*, %0** %6, align 8
  %417 = bitcast %0* %416 to %1**
  %418 = load %1*, %1** %417, align 8
  call void @zend_ast_destroy(%1* %418)
  br label %504

419:                                              ; preds = %11
  %420 = load %0*, %0** %6, align 8
  %421 = bitcast %0* %420 to %1**
  %422 = load %1*, %1** %421, align 8
  call void @zend_ast_destroy(%1* %422)
  br label %504

423:                                              ; preds = %11
  %424 = load %0*, %0** %6, align 8
  %425 = bitcast %0* %424 to %1**
  %426 = load %1*, %1** %425, align 8
  call void @zend_ast_destroy(%1* %426)
  br label %504

427:                                              ; preds = %11
  %428 = load %0*, %0** %6, align 8
  %429 = bitcast %0* %428 to %1**
  %430 = load %1*, %1** %429, align 8
  call void @zend_ast_destroy(%1* %430)
  br label %504

431:                                              ; preds = %11
  %432 = load %0*, %0** %6, align 8
  %433 = bitcast %0* %432 to %1**
  %434 = load %1*, %1** %433, align 8
  call void @zend_ast_destroy(%1* %434)
  br label %504

435:                                              ; preds = %11
  %436 = load %0*, %0** %6, align 8
  %437 = bitcast %0* %436 to %1**
  %438 = load %1*, %1** %437, align 8
  call void @zend_ast_destroy(%1* %438)
  br label %504

439:                                              ; preds = %11
  %440 = load %0*, %0** %6, align 8
  %441 = bitcast %0* %440 to %1**
  %442 = load %1*, %1** %441, align 8
  call void @zend_ast_destroy(%1* %442)
  br label %504

443:                                              ; preds = %11
  %444 = load %0*, %0** %6, align 8
  %445 = bitcast %0* %444 to %1**
  %446 = load %1*, %1** %445, align 8
  call void @zend_ast_destroy(%1* %446)
  br label %504

447:                                              ; preds = %11
  %448 = load %0*, %0** %6, align 8
  %449 = bitcast %0* %448 to %1**
  %450 = load %1*, %1** %449, align 8
  call void @zend_ast_destroy(%1* %450)
  br label %504

451:                                              ; preds = %11
  %452 = load %0*, %0** %6, align 8
  %453 = bitcast %0* %452 to %1**
  %454 = load %1*, %1** %453, align 8
  call void @zend_ast_destroy(%1* %454)
  br label %504

455:                                              ; preds = %11
  %456 = load %0*, %0** %6, align 8
  %457 = bitcast %0* %456 to %1**
  %458 = load %1*, %1** %457, align 8
  call void @zend_ast_destroy(%1* %458)
  br label %504

459:                                              ; preds = %11
  %460 = load %0*, %0** %6, align 8
  %461 = bitcast %0* %460 to %1**
  %462 = load %1*, %1** %461, align 8
  call void @zend_ast_destroy(%1* %462)
  br label %504

463:                                              ; preds = %11
  %464 = load %0*, %0** %6, align 8
  %465 = bitcast %0* %464 to %1**
  %466 = load %1*, %1** %465, align 8
  call void @zend_ast_destroy(%1* %466)
  br label %504

467:                                              ; preds = %11
  %468 = load %0*, %0** %6, align 8
  %469 = bitcast %0* %468 to %1**
  %470 = load %1*, %1** %469, align 8
  call void @zend_ast_destroy(%1* %470)
  br label %504

471:                                              ; preds = %11
  %472 = load %0*, %0** %6, align 8
  %473 = bitcast %0* %472 to %1**
  %474 = load %1*, %1** %473, align 8
  call void @zend_ast_destroy(%1* %474)
  br label %504

475:                                              ; preds = %11
  %476 = load %0*, %0** %6, align 8
  %477 = bitcast %0* %476 to %1**
  %478 = load %1*, %1** %477, align 8
  call void @zend_ast_destroy(%1* %478)
  br label %504

479:                                              ; preds = %11
  %480 = load %0*, %0** %6, align 8
  %481 = bitcast %0* %480 to %1**
  %482 = load %1*, %1** %481, align 8
  call void @zend_ast_destroy(%1* %482)
  br label %504

483:                                              ; preds = %11
  %484 = load %0*, %0** %6, align 8
  %485 = bitcast %0* %484 to %1**
  %486 = load %1*, %1** %485, align 8
  call void @zend_ast_destroy(%1* %486)
  br label %504

487:                                              ; preds = %11
  %488 = load %0*, %0** %6, align 8
  %489 = bitcast %0* %488 to %1**
  %490 = load %1*, %1** %489, align 8
  call void @zend_ast_destroy(%1* %490)
  br label %504

491:                                              ; preds = %11
  %492 = load %0*, %0** %6, align 8
  %493 = bitcast %0* %492 to %1**
  %494 = load %1*, %1** %493, align 8
  call void @zend_ast_destroy(%1* %494)
  br label %504

495:                                              ; preds = %11
  %496 = load %0*, %0** %6, align 8
  %497 = bitcast %0* %496 to %1**
  %498 = load %1*, %1** %497, align 8
  call void @zend_ast_destroy(%1* %498)
  br label %504

499:                                              ; preds = %11
  %500 = load %0*, %0** %6, align 8
  %501 = bitcast %0* %500 to %1**
  %502 = load %1*, %1** %501, align 8
  call void @zend_ast_destroy(%1* %502)
  br label %504

503:                                              ; preds = %11
  br label %504

504:                                              ; preds
  ret void
}

declare dso_local void @_efree(i8*) #3

; Function Attrs: alwaysinline nounwind uwtable
define internal %4* @345(%1* %0) #4 {
  %2 = alloca %1*, align 8
  store %1* %0, %1** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %1*, %1** %2, align 8
  %5 = getelementptr inbounds %1, %1* %4, i32 0, i32 0
  %6 = load i16, i16* %5, align 8
  %7 = zext i16 %6 to i32
  %8 = icmp eq i32 %7, 64
  %9 = xor i1 %8, true
  %10 = zext i1 %9 to i32
  %11 = sext i32 %10 to i64
  %12 = call i64 @llvm.expect.i64(i64 %11, i64 0)
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  unreachable

15:                                               ; preds = %3
  br label %16

16:                                               ; preds = %15
  %17 = load %1*, %1** %2, align 8
  %18 = bitcast %1* %17 to %56*
  %19 = getelementptr inbounds %56, %56* %18, i32 0, i32 2
  ret %4* %19
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i8 @346(%4* %0) #4 {
  %2 = alloca %4*, align 8
  store %4* %0, %4** %2, align 8
  %3 = load %4*, %4** %2, align 8
  %4 = getelementptr inbounds %4, %4* %3, i32 0, i32 1
  %5 = bitcast %6* %4 to %57*
  %6 = getelementptr inbounds %57, %57* %5, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  ret i8 %7
}

; Function Attrs: nounwind readnone willreturn
declare i64 @llvm.expect.i64(i64, i64) #6

; Function Attrs: alwaysinline nounwind uwtable
define internal %34* @347(i64 %0, i32 %1) #4 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %34*, align 8
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %34** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #9
  %7 = load i32, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = load i64, i64* %3, align 8
  %11 = add i64 ptrtoint (i8* getelementptr inbounds (%34, %34* null, i32 0, i32 3, i32 0) to i64), %10
  %12 = add i64 %11, 1
  %13 = add i64 %12, 8
  %14 = sub i64 %13, 1
  %15 = and i64 %14, -8
  %16 = call noalias i8* @__zend_malloc(i64 %15) #12
  br label %25

17:                                               ; preds = %2
  %18 = load i64, i64* %3, align 8
  %19 = add i64 ptrtoint (i8* getelementptr inbounds (%34, %34* null, i32 0, i32 3, i32 0) to i64), %18
  %20 = add i64 %19, 1
  %21 = add i64 %20, 8
  %22 = sub i64 %21, 1
  %23 = and i64 %22, -8
  %24 = call noalias i8* @_emalloc(i64 %23) #12
  br label %25

25:                                               ; preds = %17, %9
  %26 = phi i8* [ %16, %9 ], [ %24, %17 ]
  %27 = bitcast i8* %26 to %34*
  store %34* %27, %34** %5, align 8
  %28 = load %34*, %34** %5, align 8
  %29 = getelementptr inbounds %34, %34* %28, i32 0, i32 0
  %30 = getelementptr inbounds %19, %19* %29, i32 0, i32 0
  store i32 1, i32* %30, align 8
  %31 = load i32, i32* %4, align 4
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i32 1, i32 0
  %35 = shl i32 %34, 8
  %36 = or i32 6, %35
  %37 = load %34*, %34** %5, align 8
  %38 = getelementptr inbounds %34, %34* %37, i32 0, i32 0
  %39 = getelementptr inbounds %19, %19* %38, i32 0, i32 1
  %40 = bitcast %20* %39 to i32*
  store i32 %36, i32* %40, align 4
  %41 = load %34*, %34** %5, align 8
  call void @348(%34* %41)
  %42 = load i64, i64* %3, align 8
  %43 = load %34*, %34** %5, align 8
  %44 = getelementptr inbounds %34, %34* %43, i32 0, i32 2
  store i64 %42, i64* %44, align 8
  %45 = load %34*, %34** %5, align 8
  %46 = bitcast %34** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #9
  ret %34* %45
}

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @__zend_malloc(i64) #7

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @_emalloc(i64) #7

; Function Attrs: alwaysinline nounwind uwtable
define internal void @348(%34* %0) #4 {
  %2 = alloca %34*, align 8
  store %34* %0, %34** %2, align 8
  %3 = load %34*, %34** %2, align 8
  %4 = getelementptr inbounds %34, %34* %3, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %55* @349(%1* %0) #4 {
  %2 = alloca %1*, align 8
  store %1* %0, %1** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %1*, %1** %2, align 8
  %5 = call zeroext i8 @350(%1* %4)
  %6 = icmp ne i8 %5, 0
  %7 = xor i1 %6, true
  %8 = zext i1 %7 to i32
  %9 = sext i32 %8 to i64
  %10 = call i64 @llvm.expect.i64(i64 %9, i64 0)
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  unreachable

13:                                               ; preds = %3
  br label %14

14:                                               ; preds = %13
  %15 = load %1*, %1** %2, align 8
  %16 = bitcast %1* %15 to %55*
  ret %55* %16
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i8 @350(%1* %0) #4 {
  %2 = alloca %1*, align 8
  store %1* %0, %1** %2, align 8
  %3 = load %1*, %1** %2, align 8
  %4 = getelementptr inbounds %1, %1* %3, i32 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = zext i16 %5 to i32
  %7 = ashr i32 %6, 7
  %8 = and i32 %7, 1
  %9 = trunc i32 %8 to i8
  ret i8 %9
}

; Function Attrs: nounwind uwtable
define internal i64 @351(i8* %0, i8* %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca [120 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = load i8, i8* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 9), align 8
  %21 = zext i8 %20 to i32
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  store i8 2, i8* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 9), align 8
  br label %24

24:                                               ; preds = %23, %19, %2
  %25 = load i8, i8* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 9), align 8
  %26 = zext i8 %25 to i32
  %27 = srem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %160

29:                                               ; preds = %24
  %30 = bitcast [120 x i8]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* %30) #9
  %31 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #9
  %32 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #9
  %33 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #9
  store i8* null, i8** %9, align 8
  %34 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #9
  store i8* null, i8** %10, align 8
  %35 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #9
  store i32 0, i32* %11, align 4
  %36 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #9
  store i32 0, i32* %12, align 4
  %37 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #9
  %38 = load i8, i8* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 9), align 8
  %39 = add i8 %38, 1
  store i8 %39, i8* getelementptr inbounds (%2, %2* @compiler_globals, i32 0, i32 9), align 8
  %40 = load i8*, i8** getelementptr inbounds (%47, %47* @language_scanner_globals, i32 0, i32 4), align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 0
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %59

45:                                               ; preds = %29
  %46 = load i32, i32* getelementptr inbounds (%47, %47* @language_scanner_globals, i32 0, i32 2), align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %59

48:                                               ; preds = %45
  %49 = load i8*, i8** %5, align 8
  %50 = call i32 @strcmp(i8* %49, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @25, i32 0, i32 0)) #11
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %48
  %53 = load i8*, i8** %4, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = load i8*, i8** %4, align 8
  %57 = call i8* @stpcpy(i8* %56, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @26, i32 0, i32 0)) #9
  br label %58

58:                                               ; preds = %55, %52
  store i64 11, i64* %3, align 8
  store i32 1, i32* %14, align 4
  br label %151

59:                                               ; preds = %48, %45, %29
  %60 = load i8*, i8** getelementptr inbounds (%47, %47* @language_scanner_globals, i32 0, i32 4), align 8
  store i8* %60, i8** %8, align 8
  %61 = load i8*, i8** %8, align 8
  %62 = load i32, i32* getelementptr inbounds (%47, %47* @language_scanner_globals, i32 0, i32 2), align 8
  %63 = zext i32 %62 to i64
  %64 = call i8* @memchr(i8* %61, i32 10, i64 %63) #11
  store i8* %64, i8** %7, align 8
  %65 = load i8*, i8** %5, align 8
  %66 = call i64 @strlen(i8* %65) #11
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %13, align 4
  %68 = load i8*, i8** %5, align 8
  %69 = load i32, i32* %13, align 4
  %70 = zext i32 %69 to i64
  %71 = call i8* @memchr(i8* %68, i32 40, i64 %70) #11
  store i8* %71, i8** %9, align 8
  %72 = icmp ne i8* %71, null
  br i1 %72, label %73, label %87

73:                                               ; preds = %59
  %74 = load i8*, i8** %5, align 8
  %75 = load i32, i32* %13, align 4
  %76 = zext i32 %75 to i64
  %77 = call i8* @352(i8* %74, i32 41, i64 %76)
  store i8* %77, i8** %10, align 8
  %78 = icmp ne i8* %77, null
  br i1 %78, label %79, label %87

79:                                               ; preds = %73
  %80 = load i8*, i8** %10, align 8
  %81 = load i8*, i8** %9, align 8
  %82 = ptrtoint i8* %80 to i64
  %83 = ptrtoint i8* %81 to i64
  %84 = sub i64 %82, %83
  %85 = add nsw i64 %84, 1
  %86 = trunc i64 %85 to i32
  store i32 %86, i32* %12, align 4
  br label %88

87:                                               ; preds = %73, %59
  store i8* null, i8** %10, align 8
  store i8* null, i8** %9, align 8
  store i32 0, i32* %12, align 4
  br label %88

88:                                               ; preds = %87, %79
  %89 = load i8*, i8** %7, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %91, label %99

91:                                               ; preds = %88
  %92 = load i32, i32* getelementptr inbounds (%47, %47* @language_scanner_globals, i32 0, i32 2), align 8
  %93 = icmp ugt i32 %92, 30
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  br label %97

95:                                               ; preds = %91
  %96 = load i32, i32* getelementptr inbounds (%47, %47* @language_scanner_globals, i32 0, i32 2), align 8
  br label %97

97:                                               ; preds = %95, %94
  %98 = phi i32 [ 30, %94 ], [ %96, %95 ]
  store i32 %98, i32* %11, align 4
  br label %116

99:                                               ; preds = %88
  %100 = load i8*, i8** %7, align 8
  %101 = load i8*, i8** %8, align 8
  %102 = ptrtoint i8* %100 to i64
  %103 = ptrtoint i8* %101 to i64
  %104 = sub i64 %102, %103
  %105 = icmp sgt i64 %104, 30
  br i1 %105, label %106, label %107

106:                                              ; preds = %99
  br label %113

107:                                              ; preds = %99
  %108 = load i8*, i8** %7, align 8
  %109 = load i8*, i8** %8, align 8
  %110 = ptrtoint i8* %108 to i64
  %111 = ptrtoint i8* %109 to i64
  %112 = sub i64 %110, %111
  br label %113

113:                                              ; preds = %107, %106
  %114 = phi i64 [ 30, %106 ], [ %112, %107 ]
  %115 = trunc i64 %114 to i32
  store i32 %115, i32* %11, align 4
  br label %116

116:                                              ; preds = %113, %97
  %117 = load i8*, i8** %4, align 8
  %118 = icmp ne i8* %117, null
  br i1 %118, label %119, label %138

119:                                              ; preds = %116
  %120 = load i32, i32* %12, align 4
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %119
  %123 = getelementptr inbounds [120 x i8], [120 x i8]* %6, i32 0, i32 0
  %124 = load i32, i32* %11, align 4
  %125 = load i8*, i8** %8, align 8
  %126 = load i32, i32* %12, align 4
  %127 = load i8*, i8** %9, align 8
  %128 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %123, i64 120, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @27, i32 0, i32 0), i32 %124, i8* %125, i32 %126, i8* %127) #9
  br label %134

129:                                              ; preds = %119
  %130 = getelementptr inbounds [120 x i8], [120 x i8]* %6, i32 0, i32 0
  %131 = load i32, i32* %11, align 4
  %132 = load i8*, i8** %8, align 8
  %133 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %130, i64 120, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @28, i32 0, i32 0), i32 %131, i8* %132) #9
  br label %134

134:                                              ; preds = %129, %122
  %135 = load i8*, i8** %4, align 8
  %136 = getelementptr inbounds [120 x i8], [120 x i8]* %6, i32 0, i32 0
  %137 = call i8* @stpcpy(i8* %135, i8* %136) #9
  br label %138

138:                                              ; preds = %134, %116
  %139 = load i32, i32* %11, align 4
  %140 = load i32, i32* %12, align 4
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %138
  %143 = load i32, i32* %12, align 4
  %144 = add i32 %143, 1
  br label %146

145:                                              ; preds = %138
  br label %146

146:                                              ; preds = %145, %142
  %147 = phi i32 [ %144, %142 ], [ 0, %145 ]
  %148 = add i32 %139, %147
  %149 = add i32 %148, 2
  %150 = zext i32 %149 to i64
  store i64 %150, i64* %3, align 8
  store i32 1, i32* %14, align 4
  br label %151

151:                                              ; preds = %146, %58
  %152 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %152) #9
  %153 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %153) #9
  %154 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %154) #9
  %155 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %155) #9
  %156 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %156) #9
  %157 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #9
  %158 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %158) #9
  %159 = bitcast [120 x i8]* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 120, i8* %159) #9
  br label %211

160:                                              ; preds = %24
  %161 = load i8*, i8** %4, align 8
  %162 = icmp ne i8* %161, null
  br i1 %162, label %174, label %163

163:                                              ; preds = %160
  %164 = load i8*, i8** %5, align 8
  %165 = call i64 @strlen(i8* %164) #11
  %166 = load i8*, i8** %5, align 8
  %167 = load i8, i8* %166, align 1
  %168 = sext i8 %167 to i32
  %169 = icmp eq i32 %168, 34
  %170 = zext i1 %169 to i64
  %171 = select i1 %169, i32 2, i32 0
  %172 = sext i32 %171 to i64
  %173 = sub i64 %165, %172
  store i64 %173, i64* %3, align 8
  br label %211

174:                                              ; preds = %160
  %175 = load i8*, i8** %5, align 8
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp eq i32 %177, 34
  br i1 %178, label %179, label %205

179:                                              ; preds = %174
  %180 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %180) #9
  store i64 0, i64* %15, align 8
  %181 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %181) #9
  %182 = load i8*, i8** %5, align 8
  store i8* %182, i8** %16, align 8
  br label %183

183:                                              ; preds = %195, %179
  %184 = load i8*, i8** %16, align 8
  %185 = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %185, i8** %16, align 8
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp ne i32 %187, 34
  br i1 %188, label %189, label %198

189:                                              ; preds = %183
  %190 = load i8*, i8** %16, align 8
  %191 = load i8, i8* %190, align 1
  %192 = load i8*, i8** %4, align 8
  %193 = load i64, i64* %15, align 8
  %194 = getelementptr inbounds i8, i8* %192, i64 %193
  store i8 %191, i8* %194, align 1
  br label %195

195:                                              ; preds = %189
  %196 = load i64, i64* %15, align 8
  %197 = add i64 %196, 1
  store i64 %197, i64* %15, align 8
  br label %183

198:                                              ; preds = %183
  %199 = load i8*, i8** %4, align 8
  %200 = load i64, i64* %15, align 8
  %201 = getelementptr inbounds i8, i8* %199, i64 %200
  store i8 0, i8* %201, align 1
  %202 = load i64, i64* %15, align 8
  store i64 %202, i64* %3, align 8
  store i32 1, i32* %14, align 4
  %203 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203) #9
  %204 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %204) #9
  br label %211

205:                                              ; preds = %174
  %206 = load i8*, i8** %4, align 8
  %207 = load i8*, i8** %5, align 8
  %208 = call i8* @stpcpy(i8* %206, i8* %207) #9
  %209 = load i8*, i8** %5, align 8
  %210 = call i64 @strlen(i8* %209) #11
  store i64 %210, i64* %3, align 8
  br label %211

211:                                              ; preds = %205, %198, %163, %151
  %212 = load i64, i64* %3, align 8
  ret i64 %212
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #8

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #8

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) #8

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @352(i8* %0, i32 %1, i64 %2) #4 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  %10 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  %11 = load i64, i64* %7, align 8
  %12 = icmp ule i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

14:                                               ; preds = %3
  %15 = load i8*, i8** %5, align 8
  %16 = load i64, i64* %7, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  %18 = getelementptr inbounds i8, i8* %17, i64 -1
  store i8* %18, i8** %8, align 8
  br label %19

19:                                               ; preds = %34, %14
  %20 = load i8*, i8** %8, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = icmp uge i8* %20, %21
  br i1 %22, label %23, label %37

23:                                               ; preds = %19
  %24 = load i8*, i8** %8, align 8
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = load i32, i32* %6, align 4
  %28 = trunc i32 %27 to i8
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %26, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %23
  %32 = load i8*, i8** %8, align 8
  store i8* %32, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

33:                                               ; preds = %23
  br label %34

34:                                               ; preds = %33
  %35 = load i8*, i8** %8, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 -1
  store i8* %36, i8** %8, align 8
  br label %19

37:                                               ; preds = %19
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

38:                                               ; preds = %37, %31, %13
  %39 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #9
  %40 = load i8*, i8** %4, align 8
  ret i8* %40
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

declare dso_local void @zend_ast_destroy(%1*) #3

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn }
attributes #11 = { nounwind readonly }
attributes #12 = { allocsize(0) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
