; ModuleID = 'string-strip-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/ext/standard/string.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { %1, i64, i64, [1 x i8] }
%1 = type { i32, %2 }
%2 = type { i32 }
%3 = type { %43*, %43, %18, i8*, %0*, i8, i8*, [256 x i8], i64, [40 x i8], %4, %15, %4, %15, %16*, %18, i64, i64, i64, i64, i8*, i8*, %22, %22, [625 x i32], i32*, i32, i8, i64, i8*, %25*, i32, %37, %39, %41, %43, %41, %43, i8*, i64, %43*, i32 }
%4 = type { i64, %18, %18*, %18*, %5*, i8, i32 }
%5 = type { %1, i32, %25*, %6*, %43*, [1 x %18] }
%6 = type { i32, void (%5*)*, void (%5*)*, %5* (%18*)*, %18* (%18*, %18*, i32, i8**, %18*)*, void (%18*, %18*, %18*, i8**)*, %18* (%18*, %18*, i32, %18*)*, void (%18*, %18*, %18*)*, %18* (%18*, %18*, i32, i8**)*, %18* (%18*, %18*)*, void (%18*, %18*)*, i32 (%18*, %18*, i32, i8**)*, void (%18*, %18*, i8**)*, i32 (%18*, %18*, i32)*, void (%18*, %18*)*, %43* (%18*)*, %7* (%5**, %0*, %18*)*, i32 (%0*, %5*, %14*, %18*)*, %7* (%5*)*, %0* (%5*)*, i32 (%18*, %18*)*, i32 (%18*, %18*, i32)*, i32 (%18*, i64*)*, %43* (%18*, i32*)*, i32 (%18*, %25**, %7**, %5**)*, %43* (%18*, %18**, i32*)*, i32 (i8, %18*, %18*, %18*)*, i32 (%18*, %18*, %18*)* }
%7 = type { %8 }
%8 = type { i8, [3 x i8], i32, %0*, %25*, %7*, i32, i32, %9*, i32*, i32, %10*, i32, i32, %0**, i32, i32, %12*, %13*, %43*, %0*, i32, i32, %0*, i32, i32, %18*, i32, i8**, [6 x i8*] }
%9 = type { %0*, i64, i8, i8 }
%10 = type { i8*, %11, %11, %11, i32, i32, i8, i8, i8, i8 }
%11 = type { i32 }
%12 = type { i32, i32, i32 }
%13 = type { i32, i32, i32, i32 }
%14 = type { %10*, %14*, %18*, %7*, %18, %14*, %43*, i8**, %18* }
%15 = type { i8, %7*, %25*, %25*, %5* }
%16 = type { %17*, %17*, i64, i64, void (i8*)*, i8, %17* }
%17 = type { %17*, %17*, [1 x i8] }
%18 = type { %19, %20, %21 }
%19 = type { i64 }
%20 = type { i32 }
%21 = type { i32 }
%22 = type { %23 }
%23 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %24, %24, %24, [3 x i64] }
%24 = type { i64, i64 }
%25 = type { i8, %0*, %25*, i32, i32, i32, i32, %18*, %18*, %18*, %43, %43, %43, %7*, %7*, %7*, %7*, %7*, %7*, %7*, %7*, %7*, %7*, %7*, %7*, %7*, %26, %5* (%25*)*, %28* (%25*, %18*, i32)*, i32 (%25*, %25*)*, %7* (%25*, %0*)*, i32 (%18*, i8**, i64*, %29*)*, i32 (%18*, %25*, i8*, i64, %30*)*, i32, i32, %25**, %25**, %31**, %33**, %35 }
%26 = type { %27*, %7*, %7*, %7*, %7*, %7*, %7* }
%27 = type { void (%28*)*, i32 (%28*)*, %18* (%28*)*, void (%28*, %18*)*, void (%28*)*, void (%28*)*, void (%28*)* }
%28 = type { %5, %18, %27*, i64 }
%29 = type opaque
%30 = type opaque
%31 = type { %32*, %0*, i32 }
%32 = type { %0*, %25*, %0* }
%33 = type { %32*, %34* }
%34 = type { %25* }
%35 = type { %36 }
%36 = type { %0*, i32, i32, %0* }
%37 = type { %38*, i32 }
%38 = type opaque
%39 = type { %40*, i32 }
%40 = type opaque
%41 = type { %42, %42, %42, %42, %42, %42, %42, i32, i8*, i32, i32, %42, i32, i32, %43* }
%42 = type { %0*, i64 }
%43 = type { %1, %44, i32, %45*, i32, i32, i32, i32, i64, void (%18*)* }
%44 = type { i32 }
%45 = type { %18, i64, %0* }
%46 = type { i8*, i8*, i32 (%46*)*, i32 (%46*)*, i32 ()*, i32 ()*, i64 (i8*, i64)*, void (i8*)*, %23* ()*, i8* (i8*, i64)*, void (i32, i8*, ...)*, i32 (%47*, i32, %48*)*, i32 (%48*)*, void (%47*, i8*)*, i64 (i8*, i64)*, i8* ()*, void (%18*)*, void (i8*, i32)*, double ()*, void ()*, i8*, void ()*, void (i32, i8*, %18*)*, i8*, i32, i32, i32 (i32*)*, i32 ()*, i32 (i32*)*, i32 (i32*)*, i32 (i32, i8*, i8**, i64, i64*)*, void (%43*)*, i32, i8*, %49*, i32 ()* }
%47 = type { i8*, i64 }
%48 = type { %16, i32, i8, i8*, i8* }
%49 = type { i8*, {}*, %50*, i32, i32 }
%50 = type { i8*, i64, i8, i8 }
%51 = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%52 = type { i8, i8, i16 }
%53 = type { i8, i8, i8, i8 }
%54 = type { %1 }
%55 = type { %1, %18 }
%56 = type { %57*, i8*, %58, %58, %63*, i8*, %18, i8, i8, [16 x i8], i32, %69*, %67*, i8*, %69*, i64, i8*, i64, i64, i64, i64, %56* }
%57 = type { i64 (%56*, i8*, i64)*, i64 (%56*, i8*, i64)*, i32 (%56*, i32)*, i32 (%56*)*, i8*, i32 (%56*, i64, i32, i64*)*, i32 (%56*, i32, i8**)*, i32 (%56*, %22*)*, i32 (%56*, i32, i32, i8*)* }
%58 = type { %59*, %59*, %56* }
%59 = type { %60*, %18, %59*, %59*, i32, %58*, %61, %69* }
%60 = type { i32 (%56*, %59*, %61*, %61*, i64*, i32)*, void (%59*)*, i8* }
%61 = type { %62*, %62* }
%62 = type { %62*, %62*, %61*, i8*, i64, i8, i8, i32 }
%63 = type { %64*, i8*, i32 }
%64 = type { %56* (%63*, i8*, i8*, i32, %0**, %65*)*, i32 (%63*, %56*)*, i32 (%63*, %56*, %22*)*, i32 (%63*, i8*, i32, %22*, %65*)*, %56* (%63*, i8*, i8*, i32, %0**, %65*)*, i8*, i32 (%63*, i8*, i32, %65*)*, i32 (%63*, i8*, i8*, i32, %65*)*, i32 (%63*, i8*, i32, i32, %65*)*, i32 (%63*, i8*, i32, %65*)*, i32 (%63*, i8*, i32, i8*, %65*)* }
%65 = type { %66*, %18, %69* }
%66 = type { void (%65*, i32, i32, i8*, i32, i64, i64, i8*)*, void (%66*)*, %18, i32, i64, i64 }
%67 = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %68*, %67*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%68 = type { %68*, %67*, i32 }
%69 = type { %1, i32, i32, i8* }

@0 = private unnamed_addr constant [13 x i8] c"STR_PAD_LEFT\00", align 1
@1 = private unnamed_addr constant [14 x i8] c"STR_PAD_RIGHT\00", align 1
@2 = private unnamed_addr constant [13 x i8] c"STR_PAD_BOTH\00", align 1
@3 = private unnamed_addr constant [17 x i8] c"PATHINFO_DIRNAME\00", align 1
@4 = private unnamed_addr constant [18 x i8] c"PATHINFO_BASENAME\00", align 1
@5 = private unnamed_addr constant [19 x i8] c"PATHINFO_EXTENSION\00", align 1
@6 = private unnamed_addr constant [18 x i8] c"PATHINFO_FILENAME\00", align 1
@7 = private unnamed_addr constant [9 x i8] c"CHAR_MAX\00", align 1
@8 = private unnamed_addr constant [9 x i8] c"LC_CTYPE\00", align 1
@9 = private unnamed_addr constant [11 x i8] c"LC_NUMERIC\00", align 1
@10 = private unnamed_addr constant [8 x i8] c"LC_TIME\00", align 1
@11 = private unnamed_addr constant [11 x i8] c"LC_COLLATE\00", align 1
@12 = private unnamed_addr constant [12 x i8] c"LC_MONETARY\00", align 1
@13 = private unnamed_addr constant [7 x i8] c"LC_ALL\00", align 1
@14 = private unnamed_addr constant [12 x i8] c"LC_MESSAGES\00", align 1
@15 = private unnamed_addr constant [50 x i8] c"Hexadecimal input string must have an even length\00", align 1
@16 = private unnamed_addr constant [40 x i8] c"Input string must be hexadecimal string\00", align 1
@17 = private unnamed_addr constant [8 x i8] c"ABDAY_1\00", align 1
@18 = private unnamed_addr constant [8 x i8] c"ABDAY_2\00", align 1
@19 = private unnamed_addr constant [8 x i8] c"ABDAY_3\00", align 1
@20 = private unnamed_addr constant [8 x i8] c"ABDAY_4\00", align 1
@21 = private unnamed_addr constant [8 x i8] c"ABDAY_5\00", align 1
@22 = private unnamed_addr constant [8 x i8] c"ABDAY_6\00", align 1
@23 = private unnamed_addr constant [8 x i8] c"ABDAY_7\00", align 1
@24 = private unnamed_addr constant [6 x i8] c"DAY_1\00", align 1
@25 = private unnamed_addr constant [6 x i8] c"DAY_2\00", align 1
@26 = private unnamed_addr constant [6 x i8] c"DAY_3\00", align 1
@27 = private unnamed_addr constant [6 x i8] c"DAY_4\00", align 1
@28 = private unnamed_addr constant [6 x i8] c"DAY_5\00", align 1
@29 = private unnamed_addr constant [6 x i8] c"DAY_6\00", align 1
@30 = private unnamed_addr constant [6 x i8] c"DAY_7\00", align 1
@31 = private unnamed_addr constant [8 x i8] c"ABMON_1\00", align 1
@32 = private unnamed_addr constant [8 x i8] c"ABMON_2\00", align 1
@33 = private unnamed_addr constant [8 x i8] c"ABMON_3\00", align 1
@34 = private unnamed_addr constant [8 x i8] c"ABMON_4\00", align 1
@35 = private unnamed_addr constant [8 x i8] c"ABMON_5\00", align 1
@36 = private unnamed_addr constant [8 x i8] c"ABMON_6\00", align 1
@37 = private unnamed_addr constant [8 x i8] c"ABMON_7\00", align 1
@38 = private unnamed_addr constant [8 x i8] c"ABMON_8\00", align 1
@39 = private unnamed_addr constant [8 x i8] c"ABMON_9\00", align 1
@40 = private unnamed_addr constant [9 x i8] c"ABMON_10\00", align 1
@41 = private unnamed_addr constant [9 x i8] c"ABMON_11\00", align 1
@42 = private unnamed_addr constant [9 x i8] c"ABMON_12\00", align 1
@43 = private unnamed_addr constant [6 x i8] c"MON_1\00", align 1
@44 = private unnamed_addr constant [6 x i8] c"MON_2\00", align 1
@45 = private unnamed_addr constant [6 x i8] c"MON_3\00", align 1
@46 = private unnamed_addr constant [6 x i8] c"MON_4\00", align 1
@47 = private unnamed_addr constant [6 x i8] c"MON_5\00", align 1
@48 = private unnamed_addr constant [6 x i8] c"MON_6\00", align 1
@49 = private unnamed_addr constant [6 x i8] c"MON_7\00", align 1
@50 = private unnamed_addr constant [6 x i8] c"MON_8\00", align 1
@51 = private unnamed_addr constant [6 x i8] c"MON_9\00", align 1
@52 = private unnamed_addr constant [7 x i8] c"MON_10\00", align 1
@53 = private unnamed_addr constant [7 x i8] c"MON_11\00", align 1
@54 = private unnamed_addr constant [7 x i8] c"MON_12\00", align 1
@55 = private unnamed_addr constant [7 x i8] c"AM_STR\00", align 1
@56 = private unnamed_addr constant [7 x i8] c"PM_STR\00", align 1
@57 = private unnamed_addr constant [8 x i8] c"D_T_FMT\00", align 1
@58 = private unnamed_addr constant [6 x i8] c"D_FMT\00", align 1
@59 = private unnamed_addr constant [6 x i8] c"T_FMT\00", align 1
@60 = private unnamed_addr constant [11 x i8] c"T_FMT_AMPM\00", align 1
@61 = private unnamed_addr constant [4 x i8] c"ERA\00", align 1
@62 = private unnamed_addr constant [12 x i8] c"ERA_D_T_FMT\00", align 1
@63 = private unnamed_addr constant [10 x i8] c"ERA_D_FMT\00", align 1
@64 = private unnamed_addr constant [10 x i8] c"ERA_T_FMT\00", align 1
@65 = private unnamed_addr constant [11 x i8] c"ALT_DIGITS\00", align 1
@66 = private unnamed_addr constant [9 x i8] c"CRNCYSTR\00", align 1
@67 = private unnamed_addr constant [10 x i8] c"RADIXCHAR\00", align 1
@68 = private unnamed_addr constant [8 x i8] c"THOUSEP\00", align 1
@69 = private unnamed_addr constant [8 x i8] c"YESEXPR\00", align 1
@70 = private unnamed_addr constant [7 x i8] c"NOEXPR\00", align 1
@71 = private unnamed_addr constant [8 x i8] c"CODESET\00", align 1
@72 = private unnamed_addr constant [24 x i8] c"Item '%ld' is not valid\00", align 1
@73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@zend_empty_string = external dso_local global %0*, align 8
@74 = private unnamed_addr constant [29 x i8] c"Break string cannot be empty\00", align 1
@75 = private unnamed_addr constant [35 x i8] c"Can't force cut when width is zero\00", align 1
@zend_one_char_string = external dso_local global [256 x %0*], align 16
@76 = private unnamed_addr constant [16 x i8] c"Empty delimiter\00", align 1
@77 = private unnamed_addr constant [26 x i8] c"Argument must be an array\00", align 1
@78 = private unnamed_addr constant [25 x i8] c"Invalid arguments passed\00", align 1
@basic_globals = external dso_local global %3, align 8
@79 = private unnamed_addr constant [38 x i8] c"Invalid argument, levels must be >= 1\00", align 1
@80 = private unnamed_addr constant [8 x i8] c"dirname\00", align 1
@81 = private unnamed_addr constant [9 x i8] c"basename\00", align 1
@82 = private unnamed_addr constant [10 x i8] c"extension\00", align 1
@83 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@84 = private unnamed_addr constant [13 x i8] c"Empty needle\00", align 1
@85 = private unnamed_addr constant [31 x i8] c"Offset not contained in string\00", align 1
@86 = private unnamed_addr constant [53 x i8] c"Offset is greater than the length of haystack string\00", align 1
@87 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@88 = private unnamed_addr constant [41 x i8] c"Chunk length should be greater than zero\00", align 1
@89 = private unnamed_addr constant [66 x i8] c"'start' and 'length' should be of same type - numerical or array \00", align 1
@90 = private unnamed_addr constant [61 x i8] c"'start' and 'length' should have the same number of elements\00", align 1
@91 = private unnamed_addr constant [67 x i8] c"Functionality of 'start' and 'length' as arrays is not implemented\00", align 1
@92 = private unnamed_addr constant [7 x i8] c" \09\0D\0A\0C\0B\00", align 1
@93 = private unnamed_addr constant [36 x i8] c"The second argument is not an array\00", align 1
@94 = private unnamed_addr constant [5 x i8] c"%03o\00", align 1
@95 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@96 = private unnamed_addr constant [34 x i8] c"Specified locale name is too long\00", align 1
@97 = private unnamed_addr constant [35 x i8] c"parse_str() with a single argument\00", align 1
@98 = private unnamed_addr constant [62 x i8] c"Calling parse_str() without the result argument is deprecated\00", align 1
@sapi_module = external dso_local global %46, align 8
@zend_known_strings = external dso_local global %0**, align 8
@99 = private unnamed_addr constant [23 x i8] c"Cannot re-assign $this\00", align 1
@100 = private unnamed_addr constant [5 x i8] c"<?xm\00", align 1
@101 = private unnamed_addr constant [53 x i8] c"Second argument has to be greater than or equal to 0\00", align 1
@102 = private unnamed_addr constant [13 x i8] c"Unknown mode\00", align 1
@103 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@104 = private unnamed_addr constant [14 x i8] c"decimal_point\00", align 1
@105 = private unnamed_addr constant [14 x i8] c"thousands_sep\00", align 1
@106 = private unnamed_addr constant [16 x i8] c"int_curr_symbol\00", align 1
@107 = private unnamed_addr constant [16 x i8] c"currency_symbol\00", align 1
@108 = private unnamed_addr constant [18 x i8] c"mon_decimal_point\00", align 1
@109 = private unnamed_addr constant [18 x i8] c"mon_thousands_sep\00", align 1
@110 = private unnamed_addr constant [14 x i8] c"positive_sign\00", align 1
@111 = private unnamed_addr constant [14 x i8] c"negative_sign\00", align 1
@112 = private unnamed_addr constant [16 x i8] c"int_frac_digits\00", align 1
@113 = private unnamed_addr constant [12 x i8] c"frac_digits\00", align 1
@114 = private unnamed_addr constant [14 x i8] c"p_cs_precedes\00", align 1
@115 = private unnamed_addr constant [15 x i8] c"p_sep_by_space\00", align 1
@116 = private unnamed_addr constant [14 x i8] c"n_cs_precedes\00", align 1
@117 = private unnamed_addr constant [15 x i8] c"n_sep_by_space\00", align 1
@118 = private unnamed_addr constant [12 x i8] c"p_sign_posn\00", align 1
@119 = private unnamed_addr constant [12 x i8] c"n_sign_posn\00", align 1
@120 = private unnamed_addr constant [9 x i8] c"grouping\00", align 1
@121 = private unnamed_addr constant [13 x i8] c"mon_grouping\00", align 1
@122 = private unnamed_addr constant [16 x i8] c"Empty substring\00", align 1
@123 = private unnamed_addr constant [21 x i8] c"Invalid length value\00", align 1
@124 = private unnamed_addr constant [2 x i8] c" \00", align 1
@125 = private unnamed_addr constant [31 x i8] c"Padding string cannot be empty\00", align 1
@126 = private unnamed_addr constant [68 x i8] c"Padding type has to be STR_PAD_LEFT, STR_PAD_RIGHT, or STR_PAD_BOTH\00", align 1
@127 = private unnamed_addr constant [27 x i8] c"Padding length is too long\00", align 1
@128 = internal global [53 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\00", align 16
@129 = internal global [53 x i8] c"nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM\00", align 16
@130 = private unnamed_addr constant [25 x i8] c"Invalid format value %ld\00", align 1
@131 = private unnamed_addr constant [43 x i8] c"Only a single %%i or %%n token can be used\00", align 1
@132 = private unnamed_addr constant [53 x i8] c"The length of each segment must be greater than zero\00", align 1
@133 = private unnamed_addr constant [35 x i8] c"The character list cannot be empty\00", align 1
@134 = private unnamed_addr constant [49 x i8] c"The length must be greater than or equal to zero\00", align 1
@135 = private unnamed_addr constant [55 x i8] c"The start position cannot exceed initial string length\00", align 1
@136 = internal global [17 x i8] c"0123456789abcdef\00", align 16
@137 = private unnamed_addr constant [37 x i8] c"needle is not a string or an integer\00", align 1
@138 = private unnamed_addr constant [53 x i8] c"Invalid '..'-range, no character to the left of '..'\00", align 1
@139 = private unnamed_addr constant [54 x i8] c"Invalid '..'-range, no character to the right of '..'\00", align 1
@140 = private unnamed_addr constant [56 x i8] c"Invalid '..'-range, '..'-range needs to be incrementing\00", align 1
@141 = private unnamed_addr constant [19 x i8] c"Invalid '..'-range\00", align 1
@142 = private unnamed_addr constant [8 x i8] c"<br />\0A\00", align 1

; Function Attrs: nounwind uwtable
define hidden void @register_string_constants(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @0, i32 0, i32 0), i64 12, i64 0, i32 3, i32 %5)
  %6 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1, i32 0, i32 0), i64 13, i64 1, i32 3, i32 %6)
  %7 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i32 0, i32 0), i64 12, i64 2, i32 3, i32 %7)
  %8 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @3, i32 0, i32 0), i64 16, i64 1, i32 3, i32 %8)
  %9 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @4, i32 0, i32 0), i64 17, i64 2, i32 3, i32 %9)
  %10 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @5, i32 0, i32 0), i64 18, i64 4, i32 3, i32 %10)
  %11 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @6, i32 0, i32 0), i64 17, i64 8, i32 3, i32 %11)
  %12 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @7, i32 0, i32 0), i64 8, i64 127, i32 3, i32 %12)
  %13 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @8, i32 0, i32 0), i64 8, i64 0, i32 3, i32 %13)
  %14 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @9, i32 0, i32 0), i64 10, i64 1, i32 3, i32 %14)
  %15 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @10, i32 0, i32 0), i64 7, i64 2, i32 3, i32 %15)
  %16 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @11, i32 0, i32 0), i64 10, i64 3, i32 3, i32 %16)
  %17 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @12, i32 0, i32 0), i64 11, i64 4, i32 3, i32 %17)
  %18 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @13, i32 0, i32 0), i64 6, i64 6, i32 3, i32 %18)
  %19 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @14, i32 0, i32 0), i64 11, i64 5, i32 3, i32 %19)
  ret void
}

declare dso_local void @zend_register_long_constant(i8*, i64, i64, i32, i32) #1

; Function Attrs: nounwind uwtable
define dso_local %51* @localeconv_r(%51* %0) #0 {
  %2 = alloca %51*, align 8
  store %51* %0, %51** %2, align 8
  %3 = load %51*, %51** %2, align 8
  %4 = call %51* @localeconv() #13
  %5 = bitcast %51* %3 to i8*
  %6 = bitcast %51* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 96, i1 false)
  %7 = load %51*, %51** %2, align 8
  ret %51* %7
}

; Function Attrs: nounwind
declare dso_local %51* @localeconv() #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind uwtable
define hidden void @zif_bin2hex(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %18*, align 8
  %21 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %22 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 0, i32* %7, align 4
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 1, i32* %8, align 4
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 1, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %10, align 4
  %34 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store %18* null, %18** %13, align 8
  %37 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %14, align 4
  %38 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  %39 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %18, align 4
  %40 = load i32, i32* %11, align 4
  %41 = load %18*, %18** %12, align 8
  %42 = load %18*, %18** %13, align 8
  %43 = load i32, i32* %14, align 4
  %44 = load i8*, i8** %15, align 8
  %45 = load i8, i8* %16, align 1
  %46 = load i8, i8* %17, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %10, align 4
  %49 = load i32, i32* %8, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %10, align 4
  %59 = load i32, i32* %9, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %9, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %10, align 4
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %18, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %11, align 4
  %81 = load %14*, %14** %3, align 8
  %82 = bitcast %14* %81 to %18*
  %83 = getelementptr inbounds %18, %18* %82, i64 4
  store %18* %83, %18** %12, align 8
  %84 = load i32, i32* %11, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %11, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %11, align 4
  %88 = load i32, i32* %8, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %17, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %11, align 4
  %107 = load i32, i32* %8, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %17, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %17, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %11, align 4
  %128 = load i32, i32* %10, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %18*, %18** %12, align 8
  %140 = getelementptr inbounds %18, %18* %139, i32 1
  store %18* %140, %18** %12, align 8
  %141 = load %18*, %18** %12, align 8
  store %18* %141, %18** %13, align 8
  %142 = load %18*, %18** %13, align 8
  %143 = call i32 @143(%18* %142, %0** %6, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %18, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %18, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %11, align 4
  %169 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %18, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %11, align 4
  %175 = load i8*, i8** %15, align 8
  %176 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %18* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %18, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %11, align 4
  %182 = load i32, i32* %14, align 4
  %183 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %18* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %19, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %19, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %190 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #13
  %192 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = load i32, i32* %19, align 4
  switch i32 %199, label %247 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load %0*, %0** %6, align 8
  %204 = getelementptr inbounds %0, %0* %203, i32 0, i32 3
  %205 = getelementptr inbounds [1 x i8], [1 x i8]* %204, i32 0, i32 0
  %206 = load %0*, %0** %6, align 8
  %207 = getelementptr inbounds %0, %0* %206, i32 0, i32 2
  %208 = load i64, i64* %207, align 8
  %209 = call %0* @144(i8* %205, i64 %208)
  store %0* %209, %0** %5, align 8
  %210 = load %0*, %0** %5, align 8
  %211 = icmp ne %0* %210, null
  br i1 %211, label %219, label %212

212:                                              ; preds = %202
  br label %213

213:                                              ; preds = %212
  %214 = load %18*, %18** %4, align 8
  %215 = getelementptr inbounds %18, %18* %214, i32 0, i32 1
  %216 = bitcast %20* %215 to i32*
  store i32 2, i32* %216, align 8
  br label %217

217:                                              ; preds = %213
  br label %218

218:                                              ; preds = %217
  store i32 1, i32* %19, align 4
  br label %247

219:                                              ; preds = %202
  br label %220

220:                                              ; preds = %219
  %221 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %221) #13
  %222 = load %18*, %18** %4, align 8
  store %18* %222, %18** %20, align 8
  %223 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %223) #13
  %224 = load %0*, %0** %5, align 8
  store %0* %224, %0** %21, align 8
  %225 = load %0*, %0** %21, align 8
  %226 = load %18*, %18** %20, align 8
  %227 = getelementptr inbounds %18, %18* %226, i32 0, i32 0
  %228 = bitcast %19* %227 to %0**
  store %0* %225, %0** %228, align 8
  %229 = load %0*, %0** %21, align 8
  %230 = getelementptr inbounds %0, %0* %229, i32 0, i32 0
  %231 = getelementptr inbounds %1, %1* %230, i32 0, i32 1
  %232 = bitcast %2* %231 to %52*
  %233 = getelementptr inbounds %52, %52* %232, i32 0, i32 1
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = and i32 %235, 2
  %237 = icmp ne i32 %236, 0
  %238 = zext i1 %237 to i64
  %239 = select i1 %237, i32 6, i32 5126
  %240 = load %18*, %18** %20, align 8
  %241 = getelementptr inbounds %18, %18* %240, i32 0, i32 1
  %242 = bitcast %20* %241 to i32*
  store i32 %239, i32* %242, align 8
  %243 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %243) #13
  %244 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %244) #13
  br label %245

245:                                              ; preds = %220
  br label %246

246:                                              ; preds = %245
  store i32 1, i32* %19, align 4
  br label %247

247:                                              ; preds = %246, %218, %188
  %248 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #13
  %249 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %249) #13
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind readnone willreturn
declare i64 @llvm.expect.i64(i64, i64) #4

declare dso_local void @zend_wrong_parameters_count_error(i8 zeroext, i32, i32, i32) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @143(%18* %0, %0** %1, i32 %2) #5 {
  %4 = alloca i32, align 4
  %5 = alloca %18*, align 8
  %6 = alloca %0**, align 8
  %7 = alloca i32, align 4
  store %18* %0, %18** %5, align 8
  store %0** %1, %0*** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %18*, %18** %5, align 8
  %9 = call zeroext i8 @157(%18* %8)
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 6
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = call i64 @llvm.expect.i64(i64 %15, i64 1)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %3
  %19 = load %18*, %18** %5, align 8
  %20 = getelementptr inbounds %18, %18* %19, i32 0, i32 0
  %21 = bitcast %19* %20 to %0**
  %22 = load %0*, %0** %21, align 8
  %23 = load %0**, %0*** %6, align 8
  store %0* %22, %0** %23, align 8
  br label %39

24:                                               ; preds = %3
  %25 = load i32, i32* %7, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = load %18*, %18** %5, align 8
  %29 = call zeroext i8 @157(%18* %28)
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = load %0**, %0*** %6, align 8
  store %0* null, %0** %33, align 8
  br label %38

34:                                               ; preds = %27, %24
  %35 = load %18*, %18** %5, align 8
  %36 = load %0**, %0*** %6, align 8
  %37 = call i32 @zend_parse_arg_str_slow(%18* %35, %0** %36)
  store i32 %37, i32* %4, align 4
  br label %40

38:                                               ; preds = %32
  br label %39

39:                                               ; preds = %38, %18
  store i32 1, i32* %4, align 4
  br label %40

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %4, align 4
  ret i32 %41
}

declare dso_local void @zend_wrong_callback_error(i8 zeroext, i32, i32, i8*) #1

declare dso_local void @zend_wrong_parameter_class_error(i8 zeroext, i32, i8*, %18*) #1

declare dso_local void @zend_wrong_parameter_type_error(i8 zeroext, i32, i32, %18*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define internal %0* @144(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load i64, i64* %4, align 8
  %12 = call %0* @153(i64 %11, i64 2, i64 0, i32 0)
  store %0* %12, %0** %5, align 8
  store i64 0, i64* %7, align 8
  store i64 0, i64* %6, align 8
  br label %13

13:                                               ; preds = %46, %2
  %14 = load i64, i64* %6, align 8
  %15 = load i64, i64* %4, align 8
  %16 = icmp ult i64 %14, %15
  br i1 %16, label %17, label %49

17:                                               ; preds = %13
  %18 = load i8*, i8** %3, align 8
  %19 = load i64, i64* %6, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = ashr i32 %22, 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [17 x i8], [17 x i8]* @136, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = load %0*, %0** %5, align 8
  %28 = getelementptr inbounds %0, %0* %27, i32 0, i32 3
  %29 = load i64, i64* %7, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %7, align 8
  %31 = getelementptr inbounds [1 x i8], [1 x i8]* %28, i64 0, i64 %29
  store i8 %26, i8* %31, align 1
  %32 = load i8*, i8** %3, align 8
  %33 = load i64, i64* %6, align 8
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = and i32 %36, 15
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [17 x i8], [17 x i8]* @136, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = load %0*, %0** %5, align 8
  %42 = getelementptr inbounds %0, %0* %41, i32 0, i32 3
  %43 = load i64, i64* %7, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %7, align 8
  %45 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i64 0, i64 %43
  store i8 %40, i8* %45, align 1
  br label %46

46:                                               ; preds = %17
  %47 = load i64, i64* %6, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %6, align 8
  br label %13

49:                                               ; preds = %13
  %50 = load %0*, %0** %5, align 8
  %51 = getelementptr inbounds %0, %0* %50, i32 0, i32 3
  %52 = load i64, i64* %7, align 8
  %53 = getelementptr inbounds [1 x i8], [1 x i8]* %51, i64 0, i64 %52
  store i8 0, i8* %53, align 1
  %54 = load %0*, %0** %5, align 8
  %55 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %55) #13
  %56 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #13
  %57 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #13
  ret %0* %54
}

; Function Attrs: nounwind uwtable
define hidden void @zif_hex2bin(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %18*, align 8
  %21 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %22 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 0, i32* %7, align 4
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 1, i32* %8, align 4
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 1, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %10, align 4
  %34 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store %18* null, %18** %13, align 8
  %37 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %14, align 4
  %38 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  %39 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %18, align 4
  %40 = load i32, i32* %11, align 4
  %41 = load %18*, %18** %12, align 8
  %42 = load %18*, %18** %13, align 8
  %43 = load i32, i32* %14, align 4
  %44 = load i8*, i8** %15, align 8
  %45 = load i8, i8* %16, align 1
  %46 = load i8, i8* %17, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %10, align 4
  %49 = load i32, i32* %8, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %10, align 4
  %59 = load i32, i32* %9, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %9, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %10, align 4
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %18, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %11, align 4
  %81 = load %14*, %14** %3, align 8
  %82 = bitcast %14* %81 to %18*
  %83 = getelementptr inbounds %18, %18* %82, i64 4
  store %18* %83, %18** %12, align 8
  %84 = load i32, i32* %11, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %11, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %11, align 4
  %88 = load i32, i32* %8, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %17, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %11, align 4
  %107 = load i32, i32* %8, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %17, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %17, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %11, align 4
  %128 = load i32, i32* %10, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %18*, %18** %12, align 8
  %140 = getelementptr inbounds %18, %18* %139, i32 1
  store %18* %140, %18** %12, align 8
  %141 = load %18*, %18** %12, align 8
  store %18* %141, %18** %13, align 8
  %142 = load %18*, %18** %13, align 8
  %143 = call i32 @143(%18* %142, %0** %6, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %18, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %18, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %11, align 4
  %169 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %18, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %11, align 4
  %175 = load i8*, i8** %15, align 8
  %176 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %18* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %18, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %11, align 4
  %182 = load i32, i32* %14, align 4
  %183 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %18* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %19, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %19, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %190 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #13
  %192 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = load i32, i32* %19, align 4
  switch i32 %199, label %260 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load %0*, %0** %6, align 8
  %204 = getelementptr inbounds %0, %0* %203, i32 0, i32 2
  %205 = load i64, i64* %204, align 8
  %206 = urem i64 %205, 2
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @15, i32 0, i32 0))
  br label %209

209:                                              ; preds = %208
  %210 = load %18*, %18** %4, align 8
  %211 = getelementptr inbounds %18, %18* %210, i32 0, i32 1
  %212 = bitcast %20* %211 to i32*
  store i32 2, i32* %212, align 8
  br label %213

213:                                              ; preds = %209
  br label %214

214:                                              ; preds = %213
  store i32 1, i32* %19, align 4
  br label %260

215:                                              ; preds = %202
  %216 = load %0*, %0** %6, align 8
  %217 = getelementptr inbounds %0, %0* %216, i32 0, i32 3
  %218 = getelementptr inbounds [1 x i8], [1 x i8]* %217, i32 0, i32 0
  %219 = load %0*, %0** %6, align 8
  %220 = getelementptr inbounds %0, %0* %219, i32 0, i32 2
  %221 = load i64, i64* %220, align 8
  %222 = call %0* @145(i8* %218, i64 %221)
  store %0* %222, %0** %5, align 8
  %223 = load %0*, %0** %5, align 8
  %224 = icmp ne %0* %223, null
  br i1 %224, label %232, label %225

225:                                              ; preds = %215
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @16, i32 0, i32 0))
  br label %226

226:                                              ; preds = %225
  %227 = load %18*, %18** %4, align 8
  %228 = getelementptr inbounds %18, %18* %227, i32 0, i32 1
  %229 = bitcast %20* %228 to i32*
  store i32 2, i32* %229, align 8
  br label %230

230:                                              ; preds = %226
  br label %231

231:                                              ; preds = %230
  store i32 1, i32* %19, align 4
  br label %260

232:                                              ; preds = %215
  br label %233

233:                                              ; preds = %232
  %234 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %234) #13
  %235 = load %18*, %18** %4, align 8
  store %18* %235, %18** %20, align 8
  %236 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %236) #13
  %237 = load %0*, %0** %5, align 8
  store %0* %237, %0** %21, align 8
  %238 = load %0*, %0** %21, align 8
  %239 = load %18*, %18** %20, align 8
  %240 = getelementptr inbounds %18, %18* %239, i32 0, i32 0
  %241 = bitcast %19* %240 to %0**
  store %0* %238, %0** %241, align 8
  %242 = load %0*, %0** %21, align 8
  %243 = getelementptr inbounds %0, %0* %242, i32 0, i32 0
  %244 = getelementptr inbounds %1, %1* %243, i32 0, i32 1
  %245 = bitcast %2* %244 to %52*
  %246 = getelementptr inbounds %52, %52* %245, i32 0, i32 1
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i32
  %249 = and i32 %248, 2
  %250 = icmp ne i32 %249, 0
  %251 = zext i1 %250 to i64
  %252 = select i1 %250, i32 6, i32 5126
  %253 = load %18*, %18** %20, align 8
  %254 = getelementptr inbounds %18, %18* %253, i32 0, i32 1
  %255 = bitcast %20* %254 to i32*
  store i32 %252, i32* %255, align 8
  %256 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %256) #13
  %257 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #13
  br label %258

258:                                              ; preds = %233
  br label %259

259:                                              ; preds = %258
  store i32 0, i32* %19, align 4
  br label %260

260:                                              ; preds = %259, %231, %214, %188
  %261 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %261) #13
  %262 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #13
  %263 = load i32, i32* %19, align 4
  switch i32 %263, label %265 [
    i32 0, label %264
    i32 1, label %264
  ]

264:                                              ; preds = %260, %260
  ret void

265:                                              ; preds = %260
  unreachable
}

declare dso_local void @php_error_docref0(i8*, i32, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal %0* @145(i8* %0, i64 %1) #0 {
  %3 = alloca %0*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %0*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %16 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = load i64, i64* %5, align 8
  %18 = lshr i64 %17, 1
  store i64 %18, i64* %6, align 8
  %19 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = load i64, i64* %6, align 8
  %21 = call %0* @162(i64 %20, i32 0)
  store %0* %21, %0** %7, align 8
  %22 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load %0*, %0** %7, align 8
  %24 = getelementptr inbounds %0, %0* %23, i32 0, i32 3
  %25 = getelementptr inbounds [1 x i8], [1 x i8]* %24, i32 0, i32 0
  store i8* %25, i8** %8, align 8
  %26 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  store i64 0, i64* %10, align 8
  store i64 0, i64* %9, align 8
  br label %28

28:                                               ; preds = %132, %2
  %29 = load i64, i64* %9, align 8
  %30 = load i64, i64* %6, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %32, label %135

32:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #13
  %33 = load i8*, i8** %4, align 8
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %10, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 %34
  %37 = load i8, i8* %36, align 1
  store i8 %37, i8* %11, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %12) #13
  %38 = load i8, i8* %11, align 1
  %39 = zext i8 %38 to i32
  %40 = and i32 %39, -33
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %12, align 1
  %42 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #13
  %43 = load i8, i8* %12, align 1
  %44 = zext i8 %43 to i32
  %45 = sub nsw i32 %44, 65
  %46 = load i8, i8* %12, align 1
  %47 = zext i8 %46 to i32
  %48 = sub nsw i32 %47, 70
  %49 = sub nsw i32 %48, 1
  %50 = xor i32 %45, %49
  %51 = lshr i32 %50, 31
  store i32 %51, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14) #13
  %52 = load i8, i8* %11, align 1
  %53 = zext i8 %52 to i32
  %54 = xor i32 %53, 48
  %55 = sub nsw i32 %54, 10
  %56 = ashr i32 %55, 31
  %57 = load i32, i32* %13, align 4
  %58 = or i32 %56, %57
  %59 = icmp ne i32 %58, 0
  %60 = xor i1 %59, true
  %61 = xor i1 %60, true
  %62 = zext i1 %61 to i32
  %63 = sext i32 %62 to i64
  %64 = call i64 @llvm.expect.i64(i64 %63, i64 1)
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %66, label %75

66:                                               ; preds = %32
  %67 = load i8, i8* %12, align 1
  %68 = zext i8 %67 to i32
  %69 = sub nsw i32 %68, 16
  %70 = load i32, i32* %13, align 4
  %71 = mul nsw i32 39, %70
  %72 = sub nsw i32 %69, %71
  %73 = shl i32 %72, 4
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %14, align 1
  br label %77

75:                                               ; preds = %32
  %76 = load %0*, %0** %7, align 8
  call void @164(%0* %76)
  store %0* null, %0** %3, align 8
  store i32 1, i32* %15, align 4
  br label %128

77:                                               ; preds = %66
  %78 = load i8*, i8** %4, align 8
  %79 = load i64, i64* %10, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %10, align 8
  %81 = getelementptr inbounds i8, i8* %78, i64 %79
  %82 = load i8, i8* %81, align 1
  store i8 %82, i8* %11, align 1
  %83 = load i8, i8* %11, align 1
  %84 = zext i8 %83 to i32
  %85 = and i32 %84, -33
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %12, align 1
  %87 = load i8, i8* %12, align 1
  %88 = zext i8 %87 to i32
  %89 = sub nsw i32 %88, 65
  %90 = load i8, i8* %12, align 1
  %91 = zext i8 %90 to i32
  %92 = sub nsw i32 %91, 70
  %93 = sub nsw i32 %92, 1
  %94 = xor i32 %89, %93
  %95 = lshr i32 %94, 31
  store i32 %95, i32* %13, align 4
  %96 = load i8, i8* %11, align 1
  %97 = zext i8 %96 to i32
  %98 = xor i32 %97, 48
  %99 = sub nsw i32 %98, 10
  %100 = ashr i32 %99, 31
  %101 = load i32, i32* %13, align 4
  %102 = or i32 %100, %101
  %103 = icmp ne i32 %102, 0
  %104 = xor i1 %103, true
  %105 = xor i1 %104, true
  %106 = zext i1 %105 to i32
  %107 = sext i32 %106 to i64
  %108 = call i64 @llvm.expect.i64(i64 %107, i64 1)
  %109 = icmp ne i64 %108, 0
  br i1 %109, label %110, label %121

110:                                              ; preds = %77
  %111 = load i8, i8* %12, align 1
  %112 = zext i8 %111 to i32
  %113 = sub nsw i32 %112, 16
  %114 = load i32, i32* %13, align 4
  %115 = mul nsw i32 39, %114
  %116 = sub nsw i32 %113, %115
  %117 = load i8, i8* %14, align 1
  %118 = zext i8 %117 to i32
  %119 = or i32 %118, %116
  %120 = trunc i32 %119 to i8
  store i8 %120, i8* %14, align 1
  br label %123

121:                                              ; preds = %77
  %122 = load %0*, %0** %7, align 8
  call void @164(%0* %122)
  store %0* null, %0** %3, align 8
  store i32 1, i32* %15, align 4
  br label %128

123:                                              ; preds = %110
  %124 = load i8, i8* %14, align 1
  %125 = load i8*, i8** %8, align 8
  %126 = load i64, i64* %9, align 8
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  store i8 %124, i8* %127, align 1
  store i32 0, i32* %15, align 4
  br label %128

128:                                              ; preds = %123, %121, %75
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #13
  %129 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %129) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %12) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #13
  %130 = load i32, i32* %15, align 4
  switch i32 %130, label %140 [
    i32 0, label %131
  ]

131:                                              ; preds = %128
  br label %132

132:                                              ; preds = %131
  %133 = load i64, i64* %9, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %9, align 8
  br label %28

135:                                              ; preds = %28
  %136 = load i8*, i8** %8, align 8
  %137 = load i64, i64* %9, align 8
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  store i8 0, i8* %138, align 1
  %139 = load %0*, %0** %7, align 8
  store %0* %139, %0** %3, align 8
  store i32 1, i32* %15, align 4
  br label %140

140:                                              ; preds = %135, %128
  %141 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #13
  %142 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #13
  %143 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #13
  %144 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144) #13
  %145 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #13
  %146 = load %0*, %0** %3, align 8
  ret %0* %146
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strspn(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @146(%14* %5, %18* %6, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @146(%14* %0, %18* %1, i32 %2) #0 {
  %4 = alloca %14*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %0*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %18*, align 8
  %17 = alloca %18*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %18*, align 8
  %25 = alloca %18*, align 8
  %26 = alloca %18*, align 8
  store %14* %0, %14** %4, align 8
  store %18* %1, %18** %5, align 8
  store i32 %2, i32* %6, align 4
  %27 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  store i64 0, i64* %9, align 8
  %30 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store i64 0, i64* %10, align 8
  br label %31

31:                                               ; preds = %3
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 0, i32* %11, align 4
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  store i32 2, i32* %12, align 4
  %34 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  store i32 4, i32* %13, align 4
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  %36 = load %14*, %14** %4, align 8
  %37 = getelementptr inbounds %14, %14* %36, i32 0, i32 4
  %38 = getelementptr inbounds %18, %18* %37, i32 0, i32 2
  %39 = bitcast %21* %38 to i32*
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %14, align 4
  %41 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  %42 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  store %18* null, %18** %17, align 8
  %44 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  store i32 0, i32* %18, align 4
  %45 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  store i8* null, i8** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  store i8 0, i8* %21, align 1
  %46 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  store i32 0, i32* %22, align 4
  %47 = load i32, i32* %15, align 4
  %48 = load %18*, %18** %16, align 8
  %49 = load %18*, %18** %17, align 8
  %50 = load i32, i32* %18, align 4
  %51 = load i8*, i8** %19, align 8
  %52 = load i8, i8* %20, align 1
  %53 = load i8, i8* %21, align 1
  br label %54

54:                                               ; preds = %31
  %55 = load i32, i32* %14, align 4
  %56 = load i32, i32* %12, align 4
  %57 = icmp slt i32 %55, %56
  %58 = xor i1 %57, true
  %59 = xor i1 %58, true
  %60 = zext i1 %59 to i32
  %61 = sext i32 %60 to i64
  %62 = call i64 @llvm.expect.i64(i64 %61, i64 0)
  %63 = icmp ne i64 %62, 0
  br i1 %63, label %83, label %64

64:                                               ; preds = %54
  %65 = load i32, i32* %14, align 4
  %66 = load i32, i32* %13, align 4
  %67 = icmp sgt i32 %65, %66
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 0)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %87

74:                                               ; preds = %64
  %75 = load i32, i32* %13, align 4
  %76 = icmp sge i32 %75, 0
  %77 = xor i1 %76, true
  %78 = xor i1 %77, true
  %79 = zext i1 %78 to i32
  %80 = sext i32 %79 to i64
  %81 = call i64 @llvm.expect.i64(i64 %80, i64 1)
  %82 = icmp ne i64 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %74, %54
  %84 = load i32, i32* %14, align 4
  %85 = load i32, i32* %12, align 4
  %86 = load i32, i32* %13, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %84, i32 %85, i32 %86)
  store i32 1, i32* %22, align 4
  br label %372

87:                                               ; preds = %74, %64
  store i32 0, i32* %15, align 4
  %88 = load %14*, %14** %4, align 8
  %89 = bitcast %14* %88 to %18*
  %90 = getelementptr inbounds %18, %18* %89, i64 4
  store %18* %90, %18** %16, align 8
  %91 = load i32, i32* %15, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %15, align 4
  br label %93

93:                                               ; preds = %87
  %94 = load i32, i32* %15, align 4
  %95 = load i32, i32* %12, align 4
  %96 = icmp sle i32 %94, %95
  br i1 %96, label %101, label %97

97:                                               ; preds = %93
  %98 = load i8, i8* %21, align 1
  %99 = zext i8 %98 to i32
  %100 = icmp eq i32 %99, 1
  br label %101

101:                                              ; preds = %97, %93
  %102 = phi i1 [ true, %93 ], [ %100, %97 ]
  %103 = xor i1 %102, true
  %104 = zext i1 %103 to i32
  %105 = sext i32 %104 to i64
  %106 = call i64 @llvm.expect.i64(i64 %105, i64 0)
  %107 = icmp ne i64 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %101
  unreachable

109:                                              ; preds = %101
  br label %110

110:                                              ; preds = %109
  br label %111

111:                                              ; preds = %110
  br label %112

112:                                              ; preds = %111
  %113 = load i32, i32* %15, align 4
  %114 = load i32, i32* %12, align 4
  %115 = icmp sgt i32 %113, %114
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load i8, i8* %21, align 1
  %118 = zext i8 %117 to i32
  %119 = icmp eq i32 %118, 0
  br label %120

120:                                              ; preds = %116, %112
  %121 = phi i1 [ true, %112 ], [ %119, %116 ]
  %122 = xor i1 %121, true
  %123 = zext i1 %122 to i32
  %124 = sext i32 %123 to i64
  %125 = call i64 @llvm.expect.i64(i64 %124, i64 0)
  %126 = icmp ne i64 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %120
  unreachable

128:                                              ; preds = %120
  br label %129

129:                                              ; preds = %128
  br label %130

130:                                              ; preds = %129
  %131 = load i8, i8* %21, align 1
  %132 = icmp ne i8 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %130
  %134 = load i32, i32* %15, align 4
  %135 = load i32, i32* %14, align 4
  %136 = icmp sgt i32 %134, %135
  %137 = xor i1 %136, true
  %138 = xor i1 %137, true
  %139 = zext i1 %138 to i32
  %140 = sext i32 %139 to i64
  %141 = call i64 @llvm.expect.i64(i64 %140, i64 0)
  %142 = icmp ne i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %133
  br label %372

144:                                              ; preds = %133
  br label %145

145:                                              ; preds = %144, %130
  %146 = load %18*, %18** %16, align 8
  %147 = getelementptr inbounds %18, %18* %146, i32 1
  store %18* %147, %18** %16, align 8
  %148 = load %18*, %18** %16, align 8
  store %18* %148, %18** %17, align 8
  %149 = load %18*, %18** %17, align 8
  %150 = call i32 @143(%18* %149, %0** %7, i32 0)
  %151 = icmp ne i32 %150, 0
  %152 = xor i1 %151, true
  %153 = xor i1 %152, true
  %154 = xor i1 %153, true
  %155 = zext i1 %154 to i32
  %156 = sext i32 %155 to i64
  %157 = call i64 @llvm.expect.i64(i64 %156, i64 0)
  %158 = icmp ne i64 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %145
  store i32 2, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %372

160:                                              ; preds = %145
  %161 = load i32, i32* %15, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %15, align 4
  br label %163

163:                                              ; preds = %160
  %164 = load i32, i32* %15, align 4
  %165 = load i32, i32* %12, align 4
  %166 = icmp sle i32 %164, %165
  br i1 %166, label %171, label %167

167:                                              ; preds = %163
  %168 = load i8, i8* %21, align 1
  %169 = zext i8 %168 to i32
  %170 = icmp eq i32 %169, 1
  br label %171

171:                                              ; preds = %167, %163
  %172 = phi i1 [ true, %163 ], [ %170, %167 ]
  %173 = xor i1 %172, true
  %174 = zext i1 %173 to i32
  %175 = sext i32 %174 to i64
  %176 = call i64 @llvm.expect.i64(i64 %175, i64 0)
  %177 = icmp ne i64 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %171
  unreachable

179:                                              ; preds = %171
  br label %180

180:                                              ; preds = %179
  br label %181

181:                                              ; preds = %180
  br label %182

182:                                              ; preds = %181
  %183 = load i32, i32* %15, align 4
  %184 = load i32, i32* %12, align 4
  %185 = icmp sgt i32 %183, %184
  br i1 %185, label %190, label %186

186:                                              ; preds = %182
  %187 = load i8, i8* %21, align 1
  %188 = zext i8 %187 to i32
  %189 = icmp eq i32 %188, 0
  br label %190

190:                                              ; preds = %186, %182
  %191 = phi i1 [ true, %182 ], [ %189, %186 ]
  %192 = xor i1 %191, true
  %193 = zext i1 %192 to i32
  %194 = sext i32 %193 to i64
  %195 = call i64 @llvm.expect.i64(i64 %194, i64 0)
  %196 = icmp ne i64 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %190
  unreachable

198:                                              ; preds = %190
  br label %199

199:                                              ; preds = %198
  br label %200

200:                                              ; preds = %199
  %201 = load i8, i8* %21, align 1
  %202 = icmp ne i8 %201, 0
  br i1 %202, label %203, label %215

203:                                              ; preds = %200
  %204 = load i32, i32* %15, align 4
  %205 = load i32, i32* %14, align 4
  %206 = icmp sgt i32 %204, %205
  %207 = xor i1 %206, true
  %208 = xor i1 %207, true
  %209 = zext i1 %208 to i32
  %210 = sext i32 %209 to i64
  %211 = call i64 @llvm.expect.i64(i64 %210, i64 0)
  %212 = icmp ne i64 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %203
  br label %372

214:                                              ; preds = %203
  br label %215

215:                                              ; preds = %214, %200
  %216 = load %18*, %18** %16, align 8
  %217 = getelementptr inbounds %18, %18* %216, i32 1
  store %18* %217, %18** %16, align 8
  %218 = load %18*, %18** %16, align 8
  store %18* %218, %18** %17, align 8
  %219 = load %18*, %18** %17, align 8
  %220 = call i32 @143(%18* %219, %0** %8, i32 0)
  %221 = icmp ne i32 %220, 0
  %222 = xor i1 %221, true
  %223 = xor i1 %222, true
  %224 = xor i1 %223, true
  %225 = zext i1 %224 to i32
  %226 = sext i32 %225 to i64
  %227 = call i64 @llvm.expect.i64(i64 %226, i64 0)
  %228 = icmp ne i64 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %215
  store i32 2, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %372

230:                                              ; preds = %215
  store i8 1, i8* %21, align 1
  %231 = load i32, i32* %15, align 4
  %232 = add nsw i32 %231, 1
  store i32 %232, i32* %15, align 4
  br label %233

233:                                              ; preds = %230
  %234 = load i32, i32* %15, align 4
  %235 = load i32, i32* %12, align 4
  %236 = icmp sle i32 %234, %235
  br i1 %236, label %241, label %237

237:                                              ; preds = %233
  %238 = load i8, i8* %21, align 1
  %239 = zext i8 %238 to i32
  %240 = icmp eq i32 %239, 1
  br label %241

241:                                              ; preds = %237, %233
  %242 = phi i1 [ true, %233 ], [ %240, %237 ]
  %243 = xor i1 %242, true
  %244 = zext i1 %243 to i32
  %245 = sext i32 %244 to i64
  %246 = call i64 @llvm.expect.i64(i64 %245, i64 0)
  %247 = icmp ne i64 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %241
  unreachable

249:                                              ; preds = %241
  br label %250

250:                                              ; preds = %249
  br label %251

251:                                              ; preds = %250
  br label %252

252:                                              ; preds = %251
  %253 = load i32, i32* %15, align 4
  %254 = load i32, i32* %12, align 4
  %255 = icmp sgt i32 %253, %254
  br i1 %255, label %260, label %256

256:                                              ; preds = %252
  %257 = load i8, i8* %21, align 1
  %258 = zext i8 %257 to i32
  %259 = icmp eq i32 %258, 0
  br label %260

260:                                              ; preds = %256, %252
  %261 = phi i1 [ true, %252 ], [ %259, %256 ]
  %262 = xor i1 %261, true
  %263 = zext i1 %262 to i32
  %264 = sext i32 %263 to i64
  %265 = call i64 @llvm.expect.i64(i64 %264, i64 0)
  %266 = icmp ne i64 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %260
  unreachable

268:                                              ; preds = %260
  br label %269

269:                                              ; preds = %268
  br label %270

270:                                              ; preds = %269
  %271 = load i8, i8* %21, align 1
  %272 = icmp ne i8 %271, 0
  br i1 %272, label %273, label %285

273:                                              ; preds = %270
  %274 = load i32, i32* %15, align 4
  %275 = load i32, i32* %14, align 4
  %276 = icmp sgt i32 %274, %275
  %277 = xor i1 %276, true
  %278 = xor i1 %277, true
  %279 = zext i1 %278 to i32
  %280 = sext i32 %279 to i64
  %281 = call i64 @llvm.expect.i64(i64 %280, i64 0)
  %282 = icmp ne i64 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %273
  br label %372

284:                                              ; preds = %273
  br label %285

285:                                              ; preds = %284, %270
  %286 = load %18*, %18** %16, align 8
  %287 = getelementptr inbounds %18, %18* %286, i32 1
  store %18* %287, %18** %16, align 8
  %288 = load %18*, %18** %16, align 8
  store %18* %288, %18** %17, align 8
  %289 = load %18*, %18** %17, align 8
  %290 = call i32 @147(%18* %289, i64* %9, i8* %20, i32 0, i32 0)
  %291 = icmp ne i32 %290, 0
  %292 = xor i1 %291, true
  %293 = xor i1 %292, true
  %294 = xor i1 %293, true
  %295 = zext i1 %294 to i32
  %296 = sext i32 %295 to i64
  %297 = call i64 @llvm.expect.i64(i64 %296, i64 0)
  %298 = icmp ne i64 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %285
  store i32 0, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %372

300:                                              ; preds = %285
  %301 = load i32, i32* %15, align 4
  %302 = add nsw i32 %301, 1
  store i32 %302, i32* %15, align 4
  br label %303

303:                                              ; preds = %300
  %304 = load i32, i32* %15, align 4
  %305 = load i32, i32* %12, align 4
  %306 = icmp sle i32 %304, %305
  br i1 %306, label %311, label %307

307:                                              ; preds = %303
  %308 = load i8, i8* %21, align 1
  %309 = zext i8 %308 to i32
  %310 = icmp eq i32 %309, 1
  br label %311

311:                                              ; preds = %307, %303
  %312 = phi i1 [ true, %303 ], [ %310, %307 ]
  %313 = xor i1 %312, true
  %314 = zext i1 %313 to i32
  %315 = sext i32 %314 to i64
  %316 = call i64 @llvm.expect.i64(i64 %315, i64 0)
  %317 = icmp ne i64 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %311
  unreachable

319:                                              ; preds = %311
  br label %320

320:                                              ; preds = %319
  br label %321

321:                                              ; preds = %320
  br label %322

322:                                              ; preds = %321
  %323 = load i32, i32* %15, align 4
  %324 = load i32, i32* %12, align 4
  %325 = icmp sgt i32 %323, %324
  br i1 %325, label %330, label %326

326:                                              ; preds = %322
  %327 = load i8, i8* %21, align 1
  %328 = zext i8 %327 to i32
  %329 = icmp eq i32 %328, 0
  br label %330

330:                                              ; preds = %326, %322
  %331 = phi i1 [ true, %322 ], [ %329, %326 ]
  %332 = xor i1 %331, true
  %333 = zext i1 %332 to i32
  %334 = sext i32 %333 to i64
  %335 = call i64 @llvm.expect.i64(i64 %334, i64 0)
  %336 = icmp ne i64 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %330
  unreachable

338:                                              ; preds = %330
  br label %339

339:                                              ; preds = %338
  br label %340

340:                                              ; preds = %339
  %341 = load i8, i8* %21, align 1
  %342 = icmp ne i8 %341, 0
  br i1 %342, label %343, label %355

343:                                              ; preds = %340
  %344 = load i32, i32* %15, align 4
  %345 = load i32, i32* %14, align 4
  %346 = icmp sgt i32 %344, %345
  %347 = xor i1 %346, true
  %348 = xor i1 %347, true
  %349 = zext i1 %348 to i32
  %350 = sext i32 %349 to i64
  %351 = call i64 @llvm.expect.i64(i64 %350, i64 0)
  %352 = icmp ne i64 %351, 0
  br i1 %352, label %353, label %354

353:                                              ; preds = %343
  br label %372

354:                                              ; preds = %343
  br label %355

355:                                              ; preds = %354, %340
  %356 = load %18*, %18** %16, align 8
  %357 = getelementptr inbounds %18, %18* %356, i32 1
  store %18* %357, %18** %16, align 8
  %358 = load %18*, %18** %16, align 8
  store %18* %358, %18** %17, align 8
  %359 = load %18*, %18** %17, align 8
  %360 = call i32 @147(%18* %359, i64* %10, i8* %20, i32 0, i32 0)
  %361 = icmp ne i32 %360, 0
  %362 = xor i1 %361, true
  %363 = xor i1 %362, true
  %364 = xor i1 %363, true
  %365 = zext i1 %364 to i32
  %366 = sext i32 %365 to i64
  %367 = call i64 @llvm.expect.i64(i64 %366, i64 0)
  %368 = icmp ne i64 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %355
  store i32 0, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %372

370:                                              ; preds = %355
  br label %371

371:                                              ; preds = %370
  br label %372

372:                                              ; preds = %371, %369, %353, %299, %283, %229, %213, %159, %143, %83
  %373 = load i32, i32* %22, align 4
  %374 = icmp ne i32 %373, 0
  %375 = xor i1 %374, true
  %376 = xor i1 %375, true
  %377 = zext i1 %376 to i32
  %378 = sext i32 %377 to i64
  %379 = call i64 @llvm.expect.i64(i64 %378, i64 0)
  %380 = icmp ne i64 %379, 0
  br i1 %380, label %381, label %404

381:                                              ; preds = %372
  %382 = load i32, i32* %22, align 4
  %383 = icmp eq i32 %382, 2
  br i1 %383, label %384, label %387

384:                                              ; preds = %381
  %385 = load i32, i32* %15, align 4
  %386 = load i8*, i8** %19, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %385, i8* %386)
  br label %403

387:                                              ; preds = %381
  %388 = load i32, i32* %22, align 4
  %389 = icmp eq i32 %388, 3
  br i1 %389, label %390, label %394

390:                                              ; preds = %387
  %391 = load i32, i32* %15, align 4
  %392 = load i8*, i8** %19, align 8
  %393 = load %18*, %18** %17, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %391, i8* %392, %18* %393)
  br label %402

394:                                              ; preds = %387
  %395 = load i32, i32* %22, align 4
  %396 = icmp eq i32 %395, 4
  br i1 %396, label %397, label %401

397:                                              ; preds = %394
  %398 = load i32, i32* %15, align 4
  %399 = load i32, i32* %18, align 4
  %400 = load %18*, %18** %17, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %398, i32 %399, %18* %400)
  br label %401

401:                                              ; preds = %397, %394
  br label %402

402:                                              ; preds = %401, %390
  br label %403

403:                                              ; preds = %402, %384
  store i32 1, i32* %23, align 4
  br label %405

404:                                              ; preds = %372
  store i32 0, i32* %23, align 4
  br label %405

405:                                              ; preds = %404, %403
  %406 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %406) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #13
  %407 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %407) #13
  %408 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %408) #13
  %409 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %409) #13
  %410 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %410) #13
  %411 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %411) #13
  %412 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %412) #13
  %413 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %413) #13
  %414 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %414) #13
  %415 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %415) #13
  %416 = load i32, i32* %23, align 4
  switch i32 %416, label %573 [
    i32 0, label %417
  ]

417:                                              ; preds = %405
  br label %418

418:                                              ; preds = %417
  br label %419

419:                                              ; preds = %418
  %420 = load %14*, %14** %4, align 8
  %421 = getelementptr inbounds %14, %14* %420, i32 0, i32 4
  %422 = getelementptr inbounds %18, %18* %421, i32 0, i32 2
  %423 = bitcast %21* %422 to i32*
  %424 = load i32, i32* %423, align 4
  %425 = icmp ult i32 %424, 4
  br i1 %425, label %426, label %430

426:                                              ; preds = %419
  %427 = load %0*, %0** %7, align 8
  %428 = getelementptr inbounds %0, %0* %427, i32 0, i32 2
  %429 = load i64, i64* %428, align 8
  store i64 %429, i64* %10, align 8
  br label %430

430:                                              ; preds = %426, %419
  %431 = load i64, i64* %9, align 8
  %432 = icmp slt i64 %431, 0
  br i1 %432, label %433, label %443

433:                                              ; preds = %430
  %434 = load %0*, %0** %7, align 8
  %435 = getelementptr inbounds %0, %0* %434, i32 0, i32 2
  %436 = load i64, i64* %435, align 8
  %437 = load i64, i64* %9, align 8
  %438 = add nsw i64 %437, %436
  store i64 %438, i64* %9, align 8
  %439 = load i64, i64* %9, align 8
  %440 = icmp slt i64 %439, 0
  br i1 %440, label %441, label %442

441:                                              ; preds = %433
  store i64 0, i64* %9, align 8
  br label %442

442:                                              ; preds = %441, %433
  br label %457

443:                                              ; preds = %430
  %444 = load i64, i64* %9, align 8
  %445 = load %0*, %0** %7, align 8
  %446 = getelementptr inbounds %0, %0* %445, i32 0, i32 2
  %447 = load i64, i64* %446, align 8
  %448 = icmp ugt i64 %444, %447
  br i1 %448, label %449, label %456

449:                                              ; preds = %443
  br label %450

450:                                              ; preds = %449
  %451 = load %18*, %18** %5, align 8
  %452 = getelementptr inbounds %18, %18* %451, i32 0, i32 1
  %453 = bitcast %20* %452 to i32*
  store i32 2, i32* %453, align 8
  br label %454

454:                                              ; preds = %450
  br label %455

455:                                              ; preds = %454
  store i32 1, i32* %23, align 4
  br label %573

456:                                              ; preds = %443
  br label %457

457:                                              ; preds = %456, %442
  %458 = load i64, i64* %10, align 8
  %459 = icmp slt i64 %458, 0
  br i1 %459, label %460, label %472

460:                                              ; preds = %457
  %461 = load %0*, %0** %7, align 8
  %462 = getelementptr inbounds %0, %0* %461, i32 0, i32 2
  %463 = load i64, i64* %462, align 8
  %464 = load i64, i64* %9, align 8
  %465 = sub i64 %463, %464
  %466 = load i64, i64* %10, align 8
  %467 = add i64 %466, %465
  store i64 %467, i64* %10, align 8
  %468 = load i64, i64* %10, align 8
  %469 = icmp slt i64 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %460
  store i64 0, i64* %10, align 8
  br label %471

471:                                              ; preds = %470, %460
  br label %472

472:                                              ; preds = %471, %457
  %473 = load i64, i64* %10, align 8
  %474 = load %0*, %0** %7, align 8
  %475 = getelementptr inbounds %0, %0* %474, i32 0, i32 2
  %476 = load i64, i64* %475, align 8
  %477 = load i64, i64* %9, align 8
  %478 = sub nsw i64 %476, %477
  %479 = icmp sgt i64 %473, %478
  br i1 %479, label %480, label %486

480:                                              ; preds = %472
  %481 = load %0*, %0** %7, align 8
  %482 = getelementptr inbounds %0, %0* %481, i32 0, i32 2
  %483 = load i64, i64* %482, align 8
  %484 = load i64, i64* %9, align 8
  %485 = sub i64 %483, %484
  store i64 %485, i64* %10, align 8
  br label %486

486:                                              ; preds = %480, %472
  %487 = load i64, i64* %10, align 8
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %499

489:                                              ; preds = %486
  %490 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %490) #13
  %491 = load %18*, %18** %5, align 8
  store %18* %491, %18** %24, align 8
  %492 = load %18*, %18** %24, align 8
  %493 = getelementptr inbounds %18, %18* %492, i32 0, i32 0
  %494 = bitcast %19* %493 to i64*
  store i64 0, i64* %494, align 8
  %495 = load %18*, %18** %24, align 8
  %496 = getelementptr inbounds %18, %18* %495, i32 0, i32 1
  %497 = bitcast %20* %496 to i32*
  store i32 4, i32* %497, align 8
  %498 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %498) #13
  store i32 1, i32* %23, align 4
  br label %573

499:                                              ; preds = %486
  %500 = load i32, i32* %6, align 4
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %502, label %535

502:                                              ; preds = %499
  %503 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %503) #13
  %504 = load %18*, %18** %5, align 8
  store %18* %504, %18** %25, align 8
  %505 = load %0*, %0** %7, align 8
  %506 = getelementptr inbounds %0, %0* %505, i32 0, i32 3
  %507 = getelementptr inbounds [1 x i8], [1 x i8]* %506, i32 0, i32 0
  %508 = load i64, i64* %9, align 8
  %509 = getelementptr inbounds i8, i8* %507, i64 %508
  %510 = load %0*, %0** %8, align 8
  %511 = getelementptr inbounds %0, %0* %510, i32 0, i32 3
  %512 = getelementptr inbounds [1 x i8], [1 x i8]* %511, i32 0, i32 0
  %513 = load %0*, %0** %7, align 8
  %514 = getelementptr inbounds %0, %0* %513, i32 0, i32 3
  %515 = getelementptr inbounds [1 x i8], [1 x i8]* %514, i32 0, i32 0
  %516 = load i64, i64* %9, align 8
  %517 = getelementptr inbounds i8, i8* %515, i64 %516
  %518 = load i64, i64* %10, align 8
  %519 = getelementptr inbounds i8, i8* %517, i64 %518
  %520 = load %0*, %0** %8, align 8
  %521 = getelementptr inbounds %0, %0* %520, i32 0, i32 3
  %522 = getelementptr inbounds [1 x i8], [1 x i8]* %521, i32 0, i32 0
  %523 = load %0*, %0** %8, align 8
  %524 = getelementptr inbounds %0, %0* %523, i32 0, i32 2
  %525 = load i64, i64* %524, align 8
  %526 = getelementptr inbounds i8, i8* %522, i64 %525
  %527 = call i64 @php_strspn(i8* %509, i8* %512, i8* %519, i8* %526)
  %528 = load %18*, %18** %25, align 8
  %529 = getelementptr inbounds %18, %18* %528, i32 0, i32 0
  %530 = bitcast %19* %529 to i64*
  store i64 %527, i64* %530, align 8
  %531 = load %18*, %18** %25, align 8
  %532 = getelementptr inbounds %18, %18* %531, i32 0, i32 1
  %533 = bitcast %20* %532 to i32*
  store i32 4, i32* %533, align 8
  %534 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %534) #13
  store i32 1, i32* %23, align 4
  br label %573

535:                                              ; preds = %499
  %536 = load i32, i32* %6, align 4
  %537 = icmp eq i32 %536, 1
  br i1 %537, label %538, label %571

538:                                              ; preds = %535
  %539 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %539) #13
  %540 = load %18*, %18** %5, align 8
  store %18* %540, %18** %26, align 8
  %541 = load %0*, %0** %7, align 8
  %542 = getelementptr inbounds %0, %0* %541, i32 0, i32 3
  %543 = getelementptr inbounds [1 x i8], [1 x i8]* %542, i32 0, i32 0
  %544 = load i64, i64* %9, align 8
  %545 = getelementptr inbounds i8, i8* %543, i64 %544
  %546 = load %0*, %0** %8, align 8
  %547 = getelementptr inbounds %0, %0* %546, i32 0, i32 3
  %548 = getelementptr inbounds [1 x i8], [1 x i8]* %547, i32 0, i32 0
  %549 = load %0*, %0** %7, align 8
  %550 = getelementptr inbounds %0, %0* %549, i32 0, i32 3
  %551 = getelementptr inbounds [1 x i8], [1 x i8]* %550, i32 0, i32 0
  %552 = load i64, i64* %9, align 8
  %553 = getelementptr inbounds i8, i8* %551, i64 %552
  %554 = load i64, i64* %10, align 8
  %555 = getelementptr inbounds i8, i8* %553, i64 %554
  %556 = load %0*, %0** %8, align 8
  %557 = getelementptr inbounds %0, %0* %556, i32 0, i32 3
  %558 = getelementptr inbounds [1 x i8], [1 x i8]* %557, i32 0, i32 0
  %559 = load %0*, %0** %8, align 8
  %560 = getelementptr inbounds %0, %0* %559, i32 0, i32 2
  %561 = load i64, i64* %560, align 8
  %562 = getelementptr inbounds i8, i8* %558, i64 %561
  %563 = call i64 @php_strcspn(i8* %545, i8* %548, i8* %555, i8* %562)
  %564 = load %18*, %18** %26, align 8
  %565 = getelementptr inbounds %18, %18* %564, i32 0, i32 0
  %566 = bitcast %19* %565 to i64*
  store i64 %563, i64* %566, align 8
  %567 = load %18*, %18** %26, align 8
  %568 = getelementptr inbounds %18, %18* %567, i32 0, i32 1
  %569 = bitcast %20* %568 to i32*
  store i32 4, i32* %569, align 8
  %570 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %570) #13
  store i32 1, i32* %23, align 4
  br label %573

571:                                              ; preds = %535
  br label %572

572:                                              ; preds = %571
  store i32 0, i32* %23, align 4
  br label %573

573:                                              ; preds = %572, %538, %502, %489, %455, %405
  %574 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %574) #13
  %575 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %575) #13
  %576 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %576) #13
  %577 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %577) #13
  %578 = load i32, i32* %23, align 4
  switch i32 %578, label %580 [
    i32 0, label %579
    i32 1, label %579
  ]

579:                                              ; preds = %573, %573
  ret void

580:                                              ; preds = %573
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strcspn(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @146(%14* %5, %18* %6, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden i32 @zm_startup_nl_langinfo(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i32 0, i32 0), i64 7, i64 131072, i32 3, i32 %5)
  %6 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @18, i32 0, i32 0), i64 7, i64 131073, i32 3, i32 %6)
  %7 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @19, i32 0, i32 0), i64 7, i64 131074, i32 3, i32 %7)
  %8 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @20, i32 0, i32 0), i64 7, i64 131075, i32 3, i32 %8)
  %9 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @21, i32 0, i32 0), i64 7, i64 131076, i32 3, i32 %9)
  %10 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @22, i32 0, i32 0), i64 7, i64 131077, i32 3, i32 %10)
  %11 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @23, i32 0, i32 0), i64 7, i64 131078, i32 3, i32 %11)
  %12 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @24, i32 0, i32 0), i64 5, i64 131079, i32 3, i32 %12)
  %13 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @25, i32 0, i32 0), i64 5, i64 131080, i32 3, i32 %13)
  %14 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @26, i32 0, i32 0), i64 5, i64 131081, i32 3, i32 %14)
  %15 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @27, i32 0, i32 0), i64 5, i64 131082, i32 3, i32 %15)
  %16 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @28, i32 0, i32 0), i64 5, i64 131083, i32 3, i32 %16)
  %17 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @29, i32 0, i32 0), i64 5, i64 131084, i32 3, i32 %17)
  %18 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0), i64 5, i64 131085, i32 3, i32 %18)
  %19 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @31, i32 0, i32 0), i64 7, i64 131086, i32 3, i32 %19)
  %20 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @32, i32 0, i32 0), i64 7, i64 131087, i32 3, i32 %20)
  %21 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @33, i32 0, i32 0), i64 7, i64 131088, i32 3, i32 %21)
  %22 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @34, i32 0, i32 0), i64 7, i64 131089, i32 3, i32 %22)
  %23 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @35, i32 0, i32 0), i64 7, i64 131090, i32 3, i32 %23)
  %24 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @36, i32 0, i32 0), i64 7, i64 131091, i32 3, i32 %24)
  %25 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @37, i32 0, i32 0), i64 7, i64 131092, i32 3, i32 %25)
  %26 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @38, i32 0, i32 0), i64 7, i64 131093, i32 3, i32 %26)
  %27 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @39, i32 0, i32 0), i64 7, i64 131094, i32 3, i32 %27)
  %28 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @40, i32 0, i32 0), i64 8, i64 131095, i32 3, i32 %28)
  %29 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @41, i32 0, i32 0), i64 8, i64 131096, i32 3, i32 %29)
  %30 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @42, i32 0, i32 0), i64 8, i64 131097, i32 3, i32 %30)
  %31 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0), i64 5, i64 131098, i32 3, i32 %31)
  %32 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @44, i32 0, i32 0), i64 5, i64 131099, i32 3, i32 %32)
  %33 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @45, i32 0, i32 0), i64 5, i64 131100, i32 3, i32 %33)
  %34 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @46, i32 0, i32 0), i64 5, i64 131101, i32 3, i32 %34)
  %35 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0), i64 5, i64 131102, i32 3, i32 %35)
  %36 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @48, i32 0, i32 0), i64 5, i64 131103, i32 3, i32 %36)
  %37 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @49, i32 0, i32 0), i64 5, i64 131104, i32 3, i32 %37)
  %38 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @50, i32 0, i32 0), i64 5, i64 131105, i32 3, i32 %38)
  %39 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @51, i32 0, i32 0), i64 5, i64 131106, i32 3, i32 %39)
  %40 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @52, i32 0, i32 0), i64 6, i64 131107, i32 3, i32 %40)
  %41 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @53, i32 0, i32 0), i64 6, i64 131108, i32 3, i32 %41)
  %42 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @54, i32 0, i32 0), i64 6, i64 131109, i32 3, i32 %42)
  %43 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @55, i32 0, i32 0), i64 6, i64 131110, i32 3, i32 %43)
  %44 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @56, i32 0, i32 0), i64 6, i64 131111, i32 3, i32 %44)
  %45 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @57, i32 0, i32 0), i64 7, i64 131112, i32 3, i32 %45)
  %46 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @58, i32 0, i32 0), i64 5, i64 131113, i32 3, i32 %46)
  %47 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @59, i32 0, i32 0), i64 5, i64 131114, i32 3, i32 %47)
  %48 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @60, i32 0, i32 0), i64 10, i64 131115, i32 3, i32 %48)
  %49 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @61, i32 0, i32 0), i64 3, i64 131116, i32 3, i32 %49)
  %50 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @62, i32 0, i32 0), i64 11, i64 131120, i32 3, i32 %50)
  %51 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @63, i32 0, i32 0), i64 9, i64 131118, i32 3, i32 %51)
  %52 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @64, i32 0, i32 0), i64 9, i64 131121, i32 3, i32 %52)
  %53 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @65, i32 0, i32 0), i64 10, i64 131119, i32 3, i32 %53)
  %54 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @66, i32 0, i32 0), i64 8, i64 262159, i32 3, i32 %54)
  %55 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @67, i32 0, i32 0), i64 9, i64 65536, i32 3, i32 %55)
  %56 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @68, i32 0, i32 0), i64 7, i64 65537, i32 3, i32 %56)
  %57 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @69, i32 0, i32 0), i64 7, i64 327680, i32 3, i32 %57)
  %58 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @70, i32 0, i32 0), i64 6, i64 327681, i32 3, i32 %58)
  %59 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @71, i32 0, i32 0), i64 7, i64 14, i32 3, i32 %59)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define hidden void @zif_nl_langinfo(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca %18*, align 8
  %22 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %23 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  br label %25

25:                                               ; preds = %2
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 0, i32* %7, align 4
  %27 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 1, i32* %8, align 4
  %28 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  store i32 1, i32* %9, align 4
  %29 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  %30 = load %14*, %14** %3, align 8
  %31 = getelementptr inbounds %14, %14* %30, i32 0, i32 4
  %32 = getelementptr inbounds %18, %18* %31, i32 0, i32 2
  %33 = bitcast %21* %32 to i32*
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %10, align 4
  %35 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  %36 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  store %18* null, %18** %13, align 8
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 0, i32* %14, align 4
  %39 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  %40 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  store i32 0, i32* %18, align 4
  %41 = load i32, i32* %11, align 4
  %42 = load %18*, %18** %12, align 8
  %43 = load %18*, %18** %13, align 8
  %44 = load i32, i32* %14, align 4
  %45 = load i8*, i8** %15, align 8
  %46 = load i8, i8* %16, align 1
  %47 = load i8, i8* %17, align 1
  br label %48

48:                                               ; preds = %25
  %49 = load i32, i32* %10, align 4
  %50 = load i32, i32* %8, align 4
  %51 = icmp slt i32 %49, %50
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 0)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %77, label %58

58:                                               ; preds = %48
  %59 = load i32, i32* %10, align 4
  %60 = load i32, i32* %9, align 4
  %61 = icmp sgt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %58
  %69 = load i32, i32* %9, align 4
  %70 = icmp sge i32 %69, 0
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 1)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %68, %48
  %78 = load i32, i32* %10, align 4
  %79 = load i32, i32* %8, align 4
  %80 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %78, i32 %79, i32 %80)
  store i32 1, i32* %18, align 4
  br label %156

81:                                               ; preds = %68, %58
  store i32 0, i32* %11, align 4
  %82 = load %14*, %14** %3, align 8
  %83 = bitcast %14* %82 to %18*
  %84 = getelementptr inbounds %18, %18* %83, i64 4
  store %18* %84, %18** %12, align 8
  %85 = load i32, i32* %11, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %11, align 4
  br label %87

87:                                               ; preds = %81
  %88 = load i32, i32* %11, align 4
  %89 = load i32, i32* %8, align 4
  %90 = icmp sle i32 %88, %89
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = load i8, i8* %17, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 1
  br label %95

95:                                               ; preds = %91, %87
  %96 = phi i1 [ true, %87 ], [ %94, %91 ]
  %97 = xor i1 %96, true
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = call i64 @llvm.expect.i64(i64 %99, i64 0)
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %95
  unreachable

103:                                              ; preds = %95
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  %107 = load i32, i32* %11, align 4
  %108 = load i32, i32* %8, align 4
  %109 = icmp sgt i32 %107, %108
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = load i8, i8* %17, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 0
  br label %114

114:                                              ; preds = %110, %106
  %115 = phi i1 [ true, %106 ], [ %113, %110 ]
  %116 = xor i1 %115, true
  %117 = zext i1 %116 to i32
  %118 = sext i32 %117 to i64
  %119 = call i64 @llvm.expect.i64(i64 %118, i64 0)
  %120 = icmp ne i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  unreachable

122:                                              ; preds = %114
  br label %123

123:                                              ; preds = %122
  br label %124

124:                                              ; preds = %123
  %125 = load i8, i8* %17, align 1
  %126 = icmp ne i8 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %124
  %128 = load i32, i32* %11, align 4
  %129 = load i32, i32* %10, align 4
  %130 = icmp sgt i32 %128, %129
  %131 = xor i1 %130, true
  %132 = xor i1 %131, true
  %133 = zext i1 %132 to i32
  %134 = sext i32 %133 to i64
  %135 = call i64 @llvm.expect.i64(i64 %134, i64 0)
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %127
  br label %156

138:                                              ; preds = %127
  br label %139

139:                                              ; preds = %138, %124
  %140 = load %18*, %18** %12, align 8
  %141 = getelementptr inbounds %18, %18* %140, i32 1
  store %18* %141, %18** %12, align 8
  %142 = load %18*, %18** %12, align 8
  store %18* %142, %18** %13, align 8
  %143 = load %18*, %18** %13, align 8
  %144 = call i32 @147(%18* %143, i64* %5, i8* %16, i32 0, i32 0)
  %145 = icmp ne i32 %144, 0
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 0)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %139
  store i32 0, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %156

154:                                              ; preds = %139
  br label %155

155:                                              ; preds = %154
  br label %156

156:                                              ; preds = %155, %153, %137, %77
  %157 = load i32, i32* %18, align 4
  %158 = icmp ne i32 %157, 0
  %159 = xor i1 %158, true
  %160 = xor i1 %159, true
  %161 = zext i1 %160 to i32
  %162 = sext i32 %161 to i64
  %163 = call i64 @llvm.expect.i64(i64 %162, i64 0)
  %164 = icmp ne i64 %163, 0
  br i1 %164, label %165, label %188

165:                                              ; preds = %156
  %166 = load i32, i32* %18, align 4
  %167 = icmp eq i32 %166, 2
  br i1 %167, label %168, label %171

168:                                              ; preds = %165
  %169 = load i32, i32* %11, align 4
  %170 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %169, i8* %170)
  br label %187

171:                                              ; preds = %165
  %172 = load i32, i32* %18, align 4
  %173 = icmp eq i32 %172, 3
  br i1 %173, label %174, label %178

174:                                              ; preds = %171
  %175 = load i32, i32* %11, align 4
  %176 = load i8*, i8** %15, align 8
  %177 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %175, i8* %176, %18* %177)
  br label %186

178:                                              ; preds = %171
  %179 = load i32, i32* %18, align 4
  %180 = icmp eq i32 %179, 4
  br i1 %180, label %181, label %185

181:                                              ; preds = %178
  %182 = load i32, i32* %11, align 4
  %183 = load i32, i32* %14, align 4
  %184 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %182, i32 %183, %18* %184)
  br label %185

185:                                              ; preds = %181, %178
  br label %186

186:                                              ; preds = %185, %174
  br label %187

187:                                              ; preds = %186, %168
  store i32 1, i32* %19, align 4
  br label %189

188:                                              ; preds = %156
  store i32 0, i32* %19, align 4
  br label %189

189:                                              ; preds = %188, %187
  %190 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %190) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %191 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #13
  %192 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %192) #13
  %193 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #13
  %195 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #13
  %200 = load i32, i32* %19, align 4
  switch i32 %200, label %256 [
    i32 0, label %201
  ]

201:                                              ; preds = %189
  br label %202

202:                                              ; preds = %201
  br label %203

203:                                              ; preds = %202
  %204 = load i64, i64* %5, align 8
  switch i64 %204, label %206 [
    i64 131072, label %205
    i64 131073, label %205
    i64 131074, label %205
    i64 131075, label %205
    i64 131076, label %205
    i64 131077, label %205
    i64 131078, label %205
    i64 131079, label %205
    i64 131080, label %205
    i64 131081, label %205
    i64 131082, label %205
    i64 131083, label %205
    i64 131084, label %205
    i64 131085, label %205
    i64 131086, label %205
    i64 131087, label %205
    i64 131088, label %205
    i64 131089, label %205
    i64 131090, label %205
    i64 131091, label %205
    i64 131092, label %205
    i64 131093, label %205
    i64 131094, label %205
    i64 131095, label %205
    i64 131096, label %205
    i64 131097, label %205
    i64 131098, label %205
    i64 131099, label %205
    i64 131100, label %205
    i64 131101, label %205
    i64 131102, label %205
    i64 131103, label %205
    i64 131104, label %205
    i64 131105, label %205
    i64 131106, label %205
    i64 131107, label %205
    i64 131108, label %205
    i64 131109, label %205
    i64 131110, label %205
    i64 131111, label %205
    i64 131112, label %205
    i64 131113, label %205
    i64 131114, label %205
    i64 131115, label %205
    i64 131116, label %205
    i64 131120, label %205
    i64 131118, label %205
    i64 131121, label %205
    i64 131119, label %205
    i64 262159, label %205
    i64 65536, label %205
    i64 65537, label %205
    i64 327680, label %205
    i64 327681, label %205
    i64 14, label %205
  ]

205:                                              ; preds = %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203, %203
  br label %214

206:                                              ; preds = %203
  %207 = load i64, i64* %5, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @72, i32 0, i32 0), i64 %207)
  br label %208

208:                                              ; preds = %206
  %209 = load %18*, %18** %4, align 8
  %210 = getelementptr inbounds %18, %18* %209, i32 0, i32 1
  %211 = bitcast %20* %210 to i32*
  store i32 2, i32* %211, align 8
  br label %212

212:                                              ; preds = %208
  br label %213

213:                                              ; preds = %212
  store i32 1, i32* %19, align 4
  br label %256

214:                                              ; preds = %205
  %215 = load i64, i64* %5, align 8
  %216 = trunc i64 %215 to i32
  %217 = call i8* @nl_langinfo(i32 %216) #13
  store i8* %217, i8** %6, align 8
  %218 = load i8*, i8** %6, align 8
  %219 = icmp eq i8* %218, null
  br i1 %219, label %220, label %227

220:                                              ; preds = %214
  br label %221

221:                                              ; preds = %220
  %222 = load %18*, %18** %4, align 8
  %223 = getelementptr inbounds %18, %18* %222, i32 0, i32 1
  %224 = bitcast %20* %223 to i32*
  store i32 2, i32* %224, align 8
  br label %225

225:                                              ; preds = %221
  br label %226

226:                                              ; preds = %225
  store i32 1, i32* %19, align 4
  br label %256

227:                                              ; preds = %214
  br label %228

228:                                              ; preds = %227
  %229 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %229) #13
  %230 = load i8*, i8** %6, align 8
  store i8* %230, i8** %20, align 8
  br label %231

231:                                              ; preds = %228
  br label %232

232:                                              ; preds = %231
  %233 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %233) #13
  %234 = load %18*, %18** %4, align 8
  store %18* %234, %18** %21, align 8
  %235 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %235) #13
  %236 = load i8*, i8** %20, align 8
  %237 = load i8*, i8** %20, align 8
  %238 = call i64 @strlen(i8* %237) #14
  %239 = call %0* @148(i8* %236, i64 %238, i32 0)
  store %0* %239, %0** %22, align 8
  %240 = load %0*, %0** %22, align 8
  %241 = load %18*, %18** %21, align 8
  %242 = getelementptr inbounds %18, %18* %241, i32 0, i32 0
  %243 = bitcast %19* %242 to %0**
  store %0* %240, %0** %243, align 8
  %244 = load %18*, %18** %21, align 8
  %245 = getelementptr inbounds %18, %18* %244, i32 0, i32 1
  %246 = bitcast %20* %245 to i32*
  store i32 5126, i32* %246, align 8
  %247 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #13
  %248 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #13
  br label %249

249:                                              ; preds = %232
  br label %250

250:                                              ; preds = %249
  br label %251

251:                                              ; preds = %250
  br label %252

252:                                              ; preds = %251
  %253 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %253) #13
  br label %254

254:                                              ; preds = %252
  br label %255

255:                                              ; preds = %254
  store i32 1, i32* %19, align 4
  br label %256

256:                                              ; preds = %255, %226, %213, %189
  %257 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #13
  %258 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %258) #13
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @147(%18* %0, i64* %1, i8* %2, i32 %3, i32 %4) #5 {
  %6 = alloca i32, align 4
  %7 = alloca %18*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %18* %0, %18** %7, align 8
  store i64* %1, i64** %8, align 8
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %12 = load i32, i32* %10, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = load i8*, i8** %9, align 8
  store i8 0, i8* %15, align 1
  br label %16

16:                                               ; preds = %14, %5
  %17 = load %18*, %18** %7, align 8
  %18 = call zeroext i8 @157(%18* %17)
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 4
  %21 = xor i1 %20, true
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i32
  %24 = sext i32 %23 to i64
  %25 = call i64 @llvm.expect.i64(i64 %24, i64 1)
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %16
  %28 = load %18*, %18** %7, align 8
  %29 = getelementptr inbounds %18, %18* %28, i32 0, i32 0
  %30 = bitcast %19* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = load i64*, i64** %8, align 8
  store i64 %31, i64* %32, align 8
  br label %56

33:                                               ; preds = %16
  %34 = load i32, i32* %10, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %33
  %37 = load %18*, %18** %7, align 8
  %38 = call zeroext i8 @157(%18* %37)
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = load i8*, i8** %9, align 8
  store i8 1, i8* %42, align 1
  %43 = load i64*, i64** %8, align 8
  store i64 0, i64* %43, align 8
  br label %55

44:                                               ; preds = %36, %33
  %45 = load i32, i32* %11, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = load %18*, %18** %7, align 8
  %49 = load i64*, i64** %8, align 8
  %50 = call i32 @zend_parse_arg_long_cap_slow(%18* %48, i64* %49)
  store i32 %50, i32* %6, align 4
  br label %57

51:                                               ; preds = %44
  %52 = load %18*, %18** %7, align 8
  %53 = load i64*, i64** %8, align 8
  %54 = call i32 @zend_parse_arg_long_slow(%18* %52, i64* %53)
  store i32 %54, i32* %6, align 4
  br label %57

55:                                               ; preds = %41
  br label %56

56:                                               ; preds = %55, %27
  store i32 1, i32* %6, align 4
  br label %57

57:                                               ; preds = %56, %51, %47
  %58 = load i32, i32* %6, align 4
  ret i32 %58
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @148(i8* %0, i64 %1, i32 %2) #5 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %0*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load i64, i64* %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call %0* @162(i64 %9, i32 %10)
  store %0* %11, %0** %7, align 8
  %12 = load %0*, %0** %7, align 8
  %13 = getelementptr inbounds %0, %0* %12, i32 0, i32 3
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i32 0, i32 0
  %15 = load i8*, i8** %4, align 8
  %16 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 %15, i64 %16, i1 false)
  %17 = load %0*, %0** %7, align 8
  %18 = getelementptr inbounds %0, %0* %17, i32 0, i32 3
  %19 = load i64, i64* %5, align 8
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i64 0, i64 %19
  store i8 0, i8* %20, align 1
  %21 = load %0*, %0** %7, align 8
  %22 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #13
  ret %0* %21
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #6

; Function Attrs: nounwind uwtable
define hidden void @zif_strcoll(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %21 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  br label %23

23:                                               ; preds = %2
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  store i32 0, i32* %7, align 4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 2, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 2, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  %28 = load %14*, %14** %3, align 8
  %29 = getelementptr inbounds %14, %14* %28, i32 0, i32 4
  %30 = getelementptr inbounds %18, %18* %29, i32 0, i32 2
  %31 = bitcast %21* %30 to i32*
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %10, align 4
  %33 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  %34 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  store %18* null, %18** %13, align 8
  %36 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 0, i32* %14, align 4
  %37 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  %38 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 0, i32* %18, align 4
  %39 = load i32, i32* %11, align 4
  %40 = load %18*, %18** %12, align 8
  %41 = load %18*, %18** %13, align 8
  %42 = load i32, i32* %14, align 4
  %43 = load i8*, i8** %15, align 8
  %44 = load i8, i8* %16, align 1
  %45 = load i8, i8* %17, align 1
  br label %46

46:                                               ; preds = %23
  %47 = load i32, i32* %10, align 4
  %48 = load i32, i32* %8, align 4
  %49 = icmp slt i32 %47, %48
  %50 = xor i1 %49, true
  %51 = xor i1 %50, true
  %52 = zext i1 %51 to i32
  %53 = sext i32 %52 to i64
  %54 = call i64 @llvm.expect.i64(i64 %53, i64 0)
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %75, label %56

56:                                               ; preds = %46
  %57 = load i32, i32* %10, align 4
  %58 = load i32, i32* %9, align 4
  %59 = icmp sgt i32 %57, %58
  %60 = xor i1 %59, true
  %61 = xor i1 %60, true
  %62 = zext i1 %61 to i32
  %63 = sext i32 %62 to i64
  %64 = call i64 @llvm.expect.i64(i64 %63, i64 0)
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %66, label %79

66:                                               ; preds = %56
  %67 = load i32, i32* %9, align 4
  %68 = icmp sge i32 %67, 0
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 1)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %66, %46
  %76 = load i32, i32* %10, align 4
  %77 = load i32, i32* %8, align 4
  %78 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %76, i32 %77, i32 %78)
  store i32 1, i32* %18, align 4
  br label %224

79:                                               ; preds = %66, %56
  store i32 0, i32* %11, align 4
  %80 = load %14*, %14** %3, align 8
  %81 = bitcast %14* %80 to %18*
  %82 = getelementptr inbounds %18, %18* %81, i64 4
  store %18* %82, %18** %12, align 8
  %83 = load i32, i32* %11, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %11, align 4
  br label %85

85:                                               ; preds = %79
  %86 = load i32, i32* %11, align 4
  %87 = load i32, i32* %8, align 4
  %88 = icmp sle i32 %86, %87
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = load i8, i8* %17, align 1
  %91 = zext i8 %90 to i32
  %92 = icmp eq i32 %91, 1
  br label %93

93:                                               ; preds = %89, %85
  %94 = phi i1 [ true, %85 ], [ %92, %89 ]
  %95 = xor i1 %94, true
  %96 = zext i1 %95 to i32
  %97 = sext i32 %96 to i64
  %98 = call i64 @llvm.expect.i64(i64 %97, i64 0)
  %99 = icmp ne i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %93
  unreachable

101:                                              ; preds = %93
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  %105 = load i32, i32* %11, align 4
  %106 = load i32, i32* %8, align 4
  %107 = icmp sgt i32 %105, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %104
  %109 = load i8, i8* %17, align 1
  %110 = zext i8 %109 to i32
  %111 = icmp eq i32 %110, 0
  br label %112

112:                                              ; preds = %108, %104
  %113 = phi i1 [ true, %104 ], [ %111, %108 ]
  %114 = xor i1 %113, true
  %115 = zext i1 %114 to i32
  %116 = sext i32 %115 to i64
  %117 = call i64 @llvm.expect.i64(i64 %116, i64 0)
  %118 = icmp ne i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %112
  unreachable

120:                                              ; preds = %112
  br label %121

121:                                              ; preds = %120
  br label %122

122:                                              ; preds = %121
  %123 = load i8, i8* %17, align 1
  %124 = icmp ne i8 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %122
  %126 = load i32, i32* %11, align 4
  %127 = load i32, i32* %10, align 4
  %128 = icmp sgt i32 %126, %127
  %129 = xor i1 %128, true
  %130 = xor i1 %129, true
  %131 = zext i1 %130 to i32
  %132 = sext i32 %131 to i64
  %133 = call i64 @llvm.expect.i64(i64 %132, i64 0)
  %134 = icmp ne i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %125
  br label %224

136:                                              ; preds = %125
  br label %137

137:                                              ; preds = %136, %122
  %138 = load %18*, %18** %12, align 8
  %139 = getelementptr inbounds %18, %18* %138, i32 1
  store %18* %139, %18** %12, align 8
  %140 = load %18*, %18** %12, align 8
  store %18* %140, %18** %13, align 8
  %141 = load %18*, %18** %13, align 8
  %142 = call i32 @143(%18* %141, %0** %5, i32 0)
  %143 = icmp ne i32 %142, 0
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = zext i1 %146 to i32
  %148 = sext i32 %147 to i64
  %149 = call i64 @llvm.expect.i64(i64 %148, i64 0)
  %150 = icmp ne i64 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %137
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %224

152:                                              ; preds = %137
  %153 = load i32, i32* %11, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %11, align 4
  br label %155

155:                                              ; preds = %152
  %156 = load i32, i32* %11, align 4
  %157 = load i32, i32* %8, align 4
  %158 = icmp sle i32 %156, %157
  br i1 %158, label %163, label %159

159:                                              ; preds = %155
  %160 = load i8, i8* %17, align 1
  %161 = zext i8 %160 to i32
  %162 = icmp eq i32 %161, 1
  br label %163

163:                                              ; preds = %159, %155
  %164 = phi i1 [ true, %155 ], [ %162, %159 ]
  %165 = xor i1 %164, true
  %166 = zext i1 %165 to i32
  %167 = sext i32 %166 to i64
  %168 = call i64 @llvm.expect.i64(i64 %167, i64 0)
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %163
  unreachable

171:                                              ; preds = %163
  br label %172

172:                                              ; preds = %171
  br label %173

173:                                              ; preds = %172
  br label %174

174:                                              ; preds = %173
  %175 = load i32, i32* %11, align 4
  %176 = load i32, i32* %8, align 4
  %177 = icmp sgt i32 %175, %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = load i8, i8* %17, align 1
  %180 = zext i8 %179 to i32
  %181 = icmp eq i32 %180, 0
  br label %182

182:                                              ; preds = %178, %174
  %183 = phi i1 [ true, %174 ], [ %181, %178 ]
  %184 = xor i1 %183, true
  %185 = zext i1 %184 to i32
  %186 = sext i32 %185 to i64
  %187 = call i64 @llvm.expect.i64(i64 %186, i64 0)
  %188 = icmp ne i64 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %182
  unreachable

190:                                              ; preds = %182
  br label %191

191:                                              ; preds = %190
  br label %192

192:                                              ; preds = %191
  %193 = load i8, i8* %17, align 1
  %194 = icmp ne i8 %193, 0
  br i1 %194, label %195, label %207

195:                                              ; preds = %192
  %196 = load i32, i32* %11, align 4
  %197 = load i32, i32* %10, align 4
  %198 = icmp sgt i32 %196, %197
  %199 = xor i1 %198, true
  %200 = xor i1 %199, true
  %201 = zext i1 %200 to i32
  %202 = sext i32 %201 to i64
  %203 = call i64 @llvm.expect.i64(i64 %202, i64 0)
  %204 = icmp ne i64 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %195
  br label %224

206:                                              ; preds = %195
  br label %207

207:                                              ; preds = %206, %192
  %208 = load %18*, %18** %12, align 8
  %209 = getelementptr inbounds %18, %18* %208, i32 1
  store %18* %209, %18** %12, align 8
  %210 = load %18*, %18** %12, align 8
  store %18* %210, %18** %13, align 8
  %211 = load %18*, %18** %13, align 8
  %212 = call i32 @143(%18* %211, %0** %6, i32 0)
  %213 = icmp ne i32 %212, 0
  %214 = xor i1 %213, true
  %215 = xor i1 %214, true
  %216 = xor i1 %215, true
  %217 = zext i1 %216 to i32
  %218 = sext i32 %217 to i64
  %219 = call i64 @llvm.expect.i64(i64 %218, i64 0)
  %220 = icmp ne i64 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %207
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %224

222:                                              ; preds = %207
  br label %223

223:                                              ; preds = %222
  br label %224

224:                                              ; preds = %223, %221, %205, %151, %135, %75
  %225 = load i32, i32* %18, align 4
  %226 = icmp ne i32 %225, 0
  %227 = xor i1 %226, true
  %228 = xor i1 %227, true
  %229 = zext i1 %228 to i32
  %230 = sext i32 %229 to i64
  %231 = call i64 @llvm.expect.i64(i64 %230, i64 0)
  %232 = icmp ne i64 %231, 0
  br i1 %232, label %233, label %256

233:                                              ; preds = %224
  %234 = load i32, i32* %18, align 4
  %235 = icmp eq i32 %234, 2
  br i1 %235, label %236, label %239

236:                                              ; preds = %233
  %237 = load i32, i32* %11, align 4
  %238 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %237, i8* %238)
  br label %255

239:                                              ; preds = %233
  %240 = load i32, i32* %18, align 4
  %241 = icmp eq i32 %240, 3
  br i1 %241, label %242, label %246

242:                                              ; preds = %239
  %243 = load i32, i32* %11, align 4
  %244 = load i8*, i8** %15, align 8
  %245 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %243, i8* %244, %18* %245)
  br label %254

246:                                              ; preds = %239
  %247 = load i32, i32* %18, align 4
  %248 = icmp eq i32 %247, 4
  br i1 %248, label %249, label %253

249:                                              ; preds = %246
  %250 = load i32, i32* %11, align 4
  %251 = load i32, i32* %14, align 4
  %252 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %250, i32 %251, %18* %252)
  br label %253

253:                                              ; preds = %249, %246
  br label %254

254:                                              ; preds = %253, %242
  br label %255

255:                                              ; preds = %254, %236
  store i32 1, i32* %19, align 4
  br label %257

256:                                              ; preds = %224
  store i32 0, i32* %19, align 4
  br label %257

257:                                              ; preds = %256, %255
  %258 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %258) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %259 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #13
  %260 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %260) #13
  %261 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %261) #13
  %262 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #13
  %263 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #13
  %264 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %264) #13
  %265 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %265) #13
  %266 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %266) #13
  %267 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #13
  %268 = load i32, i32* %19, align 4
  switch i32 %268, label %289 [
    i32 0, label %269
  ]

269:                                              ; preds = %257
  br label %270

270:                                              ; preds = %269
  br label %271

271:                                              ; preds = %270
  %272 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %272) #13
  %273 = load %18*, %18** %4, align 8
  store %18* %273, %18** %20, align 8
  %274 = load %0*, %0** %5, align 8
  %275 = getelementptr inbounds %0, %0* %274, i32 0, i32 3
  %276 = getelementptr inbounds [1 x i8], [1 x i8]* %275, i32 0, i32 0
  %277 = load %0*, %0** %6, align 8
  %278 = getelementptr inbounds %0, %0* %277, i32 0, i32 3
  %279 = getelementptr inbounds [1 x i8], [1 x i8]* %278, i32 0, i32 0
  %280 = call i32 @strcoll(i8* %276, i8* %279) #14
  %281 = sext i32 %280 to i64
  %282 = load %18*, %18** %20, align 8
  %283 = getelementptr inbounds %18, %18* %282, i32 0, i32 0
  %284 = bitcast %19* %283 to i64*
  store i64 %281, i64* %284, align 8
  %285 = load %18*, %18** %20, align 8
  %286 = getelementptr inbounds %18, %18* %285, i32 0, i32 1
  %287 = bitcast %20* %286 to i32*
  store i32 4, i32* %287, align 8
  %288 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %288) #13
  store i32 1, i32* %19, align 4
  br label %289

289:                                              ; preds = %271, %257
  %290 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %290) #13
  %291 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %291) #13
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcoll(i8*, i8*) #6

; Function Attrs: nounwind uwtable
define dso_local %0* @php_trim(%0* %0, i8* %1, i64 %2, i32 %3) #0 {
  %5 = alloca %0*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %0* %0, %0** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %0*, %0** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load i64, i64* %7, align 8
  %12 = load i32, i32* %8, align 4
  %13 = call %0* @149(%0* %9, i8* %10, i64 %11, i32 %12)
  ret %0* %13
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @149(%0* %0, i8* %1, i64 %2, i32 %3) #5 {
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [256 x i8], align 16
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  store %0* %0, %0** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i32 %3, i32* %9, align 4
  %17 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = load %0*, %0** %6, align 8
  %19 = getelementptr inbounds %0, %0* %18, i32 0, i32 3
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %19, i32 0, i32 0
  store i8* %20, i8** %10, align 8
  %21 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = load i8*, i8** %10, align 8
  %23 = load %0*, %0** %6, align 8
  %24 = getelementptr inbounds %0, %0* %23, i32 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  store i8* %26, i8** %11, align 8
  %27 = bitcast [256 x i8]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %27) #13
  %28 = load i8*, i8** %7, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %132

30:                                               ; preds = %4
  %31 = load i64, i64* %8, align 8
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %81

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #13
  %34 = load i8*, i8** %7, align 8
  %35 = load i8, i8* %34, align 1
  store i8 %35, i8* %13, align 1
  %36 = load i32, i32* %9, align 4
  %37 = and i32 %36, 1
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %57

39:                                               ; preds = %33
  br label %40

40:                                               ; preds = %55, %39
  %41 = load i8*, i8** %10, align 8
  %42 = load i8*, i8** %11, align 8
  %43 = icmp ne i8* %41, %42
  br i1 %43, label %44, label %56

44:                                               ; preds = %40
  %45 = load i8*, i8** %10, align 8
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = load i8, i8* %13, align 1
  %49 = sext i8 %48 to i32
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %44
  %52 = load i8*, i8** %10, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %10, align 8
  br label %55

54:                                               ; preds = %44
  br label %56

55:                                               ; preds = %51
  br label %40

56:                                               ; preds = %54, %40
  br label %57

57:                                               ; preds = %56, %33
  %58 = load i32, i32* %9, align 4
  %59 = and i32 %58, 2
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %80

61:                                               ; preds = %57
  br label %62

62:                                               ; preds = %78, %61
  %63 = load i8*, i8** %10, align 8
  %64 = load i8*, i8** %11, align 8
  %65 = icmp ne i8* %63, %64
  br i1 %65, label %66, label %79

66:                                               ; preds = %62
  %67 = load i8*, i8** %11, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 -1
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = load i8, i8* %13, align 1
  %72 = sext i8 %71 to i32
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %74, label %77

74:                                               ; preds = %66
  %75 = load i8*, i8** %11, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 -1
  store i8* %76, i8** %11, align 8
  br label %78

77:                                               ; preds = %66
  br label %79

78:                                               ; preds = %74
  br label %62

79:                                               ; preds = %77, %62
  br label %80

80:                                               ; preds = %79, %57
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #13
  br label %131

81:                                               ; preds = %30
  %82 = load i8*, i8** %7, align 8
  %83 = load i64, i64* %8, align 8
  %84 = getelementptr inbounds [256 x i8], [256 x i8]* %12, i32 0, i32 0
  %85 = call i32 @174(i8* %82, i64 %83, i8* %84)
  %86 = load i32, i32* %9, align 4
  %87 = and i32 %86, 1
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %107

89:                                               ; preds = %81
  br label %90

90:                                               ; preds = %105, %89
  %91 = load i8*, i8** %10, align 8
  %92 = load i8*, i8** %11, align 8
  %93 = icmp ne i8* %91, %92
  br i1 %93, label %94, label %106

94:                                               ; preds = %90
  %95 = load i8*, i8** %10, align 8
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i64
  %98 = getelementptr inbounds [256 x i8], [256 x i8]* %12, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = icmp ne i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = load i8*, i8** %10, align 8
  %103 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %103, i8** %10, align 8
  br label %105

104:                                              ; preds = %94
  br label %106

105:                                              ; preds = %101
  br label %90

106:                                              ; preds = %104, %90
  br label %107

107:                                              ; preds = %106, %81
  %108 = load i32, i32* %9, align 4
  %109 = and i32 %108, 2
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %130

111:                                              ; preds = %107
  br label %112

112:                                              ; preds = %128, %111
  %113 = load i8*, i8** %10, align 8
  %114 = load i8*, i8** %11, align 8
  %115 = icmp ne i8* %113, %114
  br i1 %115, label %116, label %129

116:                                              ; preds = %112
  %117 = load i8*, i8** %11, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 -1
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* %12, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %116
  %125 = load i8*, i8** %11, align 8
  %126 = getelementptr inbounds i8, i8* %125, i32 -1
  store i8* %126, i8** %11, align 8
  br label %128

127:                                              ; preds = %116
  br label %129

128:                                              ; preds = %124
  br label %112

129:                                              ; preds = %127, %112
  br label %130

130:                                              ; preds = %129, %107
  br label %131

131:                                              ; preds = %130, %80
  br label %230

132:                                              ; preds = %4
  %133 = load i32, i32* %9, align 4
  %134 = and i32 %133, 1
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %180

136:                                              ; preds = %132
  br label %137

137:                                              ; preds = %178, %136
  %138 = load i8*, i8** %10, align 8
  %139 = load i8*, i8** %11, align 8
  %140 = icmp ne i8* %138, %139
  br i1 %140, label %141, label %179

141:                                              ; preds = %137
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14) #13
  %142 = load i8*, i8** %10, align 8
  %143 = load i8, i8* %142, align 1
  store i8 %143, i8* %14, align 1
  %144 = load i8, i8* %14, align 1
  %145 = zext i8 %144 to i32
  %146 = icmp sle i32 %145, 32
  br i1 %146, label %147, label %174

147:                                              ; preds = %141
  %148 = load i8, i8* %14, align 1
  %149 = zext i8 %148 to i32
  %150 = icmp eq i32 %149, 32
  br i1 %150, label %171, label %151

151:                                              ; preds = %147
  %152 = load i8, i8* %14, align 1
  %153 = zext i8 %152 to i32
  %154 = icmp eq i32 %153, 10
  br i1 %154, label %171, label %155

155:                                              ; preds = %151
  %156 = load i8, i8* %14, align 1
  %157 = zext i8 %156 to i32
  %158 = icmp eq i32 %157, 13
  br i1 %158, label %171, label %159

159:                                              ; preds = %155
  %160 = load i8, i8* %14, align 1
  %161 = zext i8 %160 to i32
  %162 = icmp eq i32 %161, 9
  br i1 %162, label %171, label %163

163:                                              ; preds = %159
  %164 = load i8, i8* %14, align 1
  %165 = zext i8 %164 to i32
  %166 = icmp eq i32 %165, 11
  br i1 %166, label %171, label %167

167:                                              ; preds = %163
  %168 = load i8, i8* %14, align 1
  %169 = zext i8 %168 to i32
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %174

171:                                              ; preds = %167, %163, %159, %155, %151, %147
  %172 = load i8*, i8** %10, align 8
  %173 = getelementptr inbounds i8, i8* %172, i32 1
  store i8* %173, i8** %10, align 8
  br label %175

174:                                              ; preds = %167, %141
  store i32 11, i32* %15, align 4
  br label %176

175:                                              ; preds = %171
  store i32 0, i32* %15, align 4
  br label %176

176:                                              ; preds = %175, %174
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #13
  %177 = load i32, i32* %15, align 4
  switch i32 %177, label %265 [
    i32 0, label %178
    i32 11, label %179
  ]

178:                                              ; preds = %176
  br label %137

179:                                              ; preds = %176, %137
  br label %180

180:                                              ; preds = %179, %132
  %181 = load i32, i32* %9, align 4
  %182 = and i32 %181, 2
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %184, label %229

184:                                              ; preds = %180
  br label %185

185:                                              ; preds = %227, %184
  %186 = load i8*, i8** %10, align 8
  %187 = load i8*, i8** %11, align 8
  %188 = icmp ne i8* %186, %187
  br i1 %188, label %189, label %228

189:                                              ; preds = %185
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  %190 = load i8*, i8** %11, align 8
  %191 = getelementptr inbounds i8, i8* %190, i64 -1
  %192 = load i8, i8* %191, align 1
  store i8 %192, i8* %16, align 1
  %193 = load i8, i8* %16, align 1
  %194 = zext i8 %193 to i32
  %195 = icmp sle i32 %194, 32
  br i1 %195, label %196, label %223

196:                                              ; preds = %189
  %197 = load i8, i8* %16, align 1
  %198 = zext i8 %197 to i32
  %199 = icmp eq i32 %198, 32
  br i1 %199, label %220, label %200

200:                                              ; preds = %196
  %201 = load i8, i8* %16, align 1
  %202 = zext i8 %201 to i32
  %203 = icmp eq i32 %202, 10
  br i1 %203, label %220, label %204

204:                                              ; preds = %200
  %205 = load i8, i8* %16, align 1
  %206 = zext i8 %205 to i32
  %207 = icmp eq i32 %206, 13
  br i1 %207, label %220, label %208

208:                                              ; preds = %204
  %209 = load i8, i8* %16, align 1
  %210 = zext i8 %209 to i32
  %211 = icmp eq i32 %210, 9
  br i1 %211, label %220, label %212

212:                                              ; preds = %208
  %213 = load i8, i8* %16, align 1
  %214 = zext i8 %213 to i32
  %215 = icmp eq i32 %214, 11
  br i1 %215, label %220, label %216

216:                                              ; preds = %212
  %217 = load i8, i8* %16, align 1
  %218 = zext i8 %217 to i32
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %216, %212, %208, %204, %200, %196
  %221 = load i8*, i8** %11, align 8
  %222 = getelementptr inbounds i8, i8* %221, i32 -1
  store i8* %222, i8** %11, align 8
  br label %224

223:                                              ; preds = %216, %189
  store i32 13, i32* %15, align 4
  br label %225

224:                                              ; preds = %220
  store i32 0, i32* %15, align 4
  br label %225

225:                                              ; preds = %224, %223
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %226 = load i32, i32* %15, align 4
  switch i32 %226, label %265 [
    i32 0, label %227
    i32 13, label %228
  ]

227:                                              ; preds = %225
  br label %185

228:                                              ; preds = %225, %185
  br label %229

229:                                              ; preds = %228, %180
  br label %230

230:                                              ; preds = %229, %131
  %231 = load %0*, %0** %6, align 8
  %232 = getelementptr inbounds %0, %0* %231, i32 0, i32 2
  %233 = load i64, i64* %232, align 8
  %234 = load i8*, i8** %11, align 8
  %235 = load i8*, i8** %10, align 8
  %236 = ptrtoint i8* %234 to i64
  %237 = ptrtoint i8* %235 to i64
  %238 = sub i64 %236, %237
  %239 = icmp eq i64 %233, %238
  br i1 %239, label %240, label %243

240:                                              ; preds = %230
  %241 = load %0*, %0** %6, align 8
  %242 = call %0* @163(%0* %241)
  store %0* %242, %0** %5, align 8
  store i32 1, i32* %15, align 4
  br label %260

243:                                              ; preds = %230
  %244 = load i8*, i8** %11, align 8
  %245 = load i8*, i8** %10, align 8
  %246 = ptrtoint i8* %244 to i64
  %247 = ptrtoint i8* %245 to i64
  %248 = sub i64 %246, %247
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %252

250:                                              ; preds = %243
  %251 = load %0*, %0** @zend_empty_string, align 8
  store %0* %251, %0** %5, align 8
  store i32 1, i32* %15, align 4
  br label %260

252:                                              ; preds = %243
  %253 = load i8*, i8** %10, align 8
  %254 = load i8*, i8** %11, align 8
  %255 = load i8*, i8** %10, align 8
  %256 = ptrtoint i8* %254 to i64
  %257 = ptrtoint i8* %255 to i64
  %258 = sub i64 %256, %257
  %259 = call %0* @148(i8* %253, i64 %258, i32 0)
  store %0* %259, %0** %5, align 8
  store i32 1, i32* %15, align 4
  br label %260

260:                                              ; preds = %252, %250, %240
  %261 = bitcast [256 x i8]* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %261) #13
  %262 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #13
  %263 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %263) #13
  %264 = load %0*, %0** %5, align 8
  ret %0* %264

265:                                              ; preds = %225, %176
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_trim(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @150(%14* %5, %18* %6, i32 3)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @150(%14* %0, %18* %1, i32 %2) #5 {
  %4 = alloca %14*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %0*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  store %14* %0, %14** %4, align 8
  store %18* %1, %18** %5, align 8
  store i32 %2, i32* %6, align 4
  %24 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  store %0* null, %0** %8, align 8
  br label %26

26:                                               ; preds = %3
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 0, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  store i32 2, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  %31 = load %14*, %14** %4, align 8
  %32 = getelementptr inbounds %14, %14* %31, i32 0, i32 4
  %33 = getelementptr inbounds %18, %18* %32, i32 0, i32 2
  %34 = bitcast %21* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  %37 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  %38 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store %18* null, %18** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %18*, %18** %14, align 8
  %44 = load %18*, %18** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %227

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %14*, %14** %4, align 8
  %84 = bitcast %14* %83 to %18*
  %85 = getelementptr inbounds %18, %18* %84, i64 4
  store %18* %85, %18** %14, align 8
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %227

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %18*, %18** %14, align 8
  %142 = getelementptr inbounds %18, %18* %141, i32 1
  store %18* %142, %18** %14, align 8
  %143 = load %18*, %18** %14, align 8
  store %18* %143, %18** %15, align 8
  %144 = load %18*, %18** %15, align 8
  %145 = call i32 @143(%18* %144, %0** %7, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

155:                                              ; preds = %140
  store i8 1, i8* %19, align 1
  %156 = load i32, i32* %13, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %13, align 4
  br label %158

158:                                              ; preds = %155
  %159 = load i32, i32* %13, align 4
  %160 = load i32, i32* %10, align 4
  %161 = icmp sle i32 %159, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i8, i8* %19, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 1
  br label %166

166:                                              ; preds = %162, %158
  %167 = phi i1 [ true, %158 ], [ %165, %162 ]
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  unreachable

174:                                              ; preds = %166
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %13, align 4
  %179 = load i32, i32* %10, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %19, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  %196 = load i8, i8* %19, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %195
  %199 = load i32, i32* %13, align 4
  %200 = load i32, i32* %12, align 4
  %201 = icmp sgt i32 %199, %200
  %202 = xor i1 %201, true
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %198
  br label %227

209:                                              ; preds = %198
  br label %210

210:                                              ; preds = %209, %195
  %211 = load %18*, %18** %14, align 8
  %212 = getelementptr inbounds %18, %18* %211, i32 1
  store %18* %212, %18** %14, align 8
  %213 = load %18*, %18** %14, align 8
  store %18* %213, %18** %15, align 8
  %214 = load %18*, %18** %15, align 8
  %215 = call i32 @143(%18* %214, %0** %8, i32 0)
  %216 = icmp ne i32 %215, 0
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %210
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

225:                                              ; preds = %210
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226, %224, %208, %154, %138, %78
  %228 = load i32, i32* %20, align 4
  %229 = icmp ne i32 %228, 0
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i32
  %233 = sext i32 %232 to i64
  %234 = call i64 @llvm.expect.i64(i64 %233, i64 0)
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %236, label %259

236:                                              ; preds = %227
  %237 = load i32, i32* %20, align 4
  %238 = icmp eq i32 %237, 2
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load i32, i32* %13, align 4
  %241 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %240, i8* %241)
  br label %258

242:                                              ; preds = %236
  %243 = load i32, i32* %20, align 4
  %244 = icmp eq i32 %243, 3
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = load i32, i32* %13, align 4
  %247 = load i8*, i8** %17, align 8
  %248 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %246, i8* %247, %18* %248)
  br label %257

249:                                              ; preds = %242
  %250 = load i32, i32* %20, align 4
  %251 = icmp eq i32 %250, 4
  br i1 %251, label %252, label %256

252:                                              ; preds = %249
  %253 = load i32, i32* %13, align 4
  %254 = load i32, i32* %16, align 4
  %255 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %253, i32 %254, %18* %255)
  br label %256

256:                                              ; preds = %252, %249
  br label %257

257:                                              ; preds = %256, %245
  br label %258

258:                                              ; preds = %257, %239
  store i32 1, i32* %21, align 4
  br label %260

259:                                              ; preds = %227
  store i32 0, i32* %21, align 4
  br label %260

260:                                              ; preds = %259, %258
  %261 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %261) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %262 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #13
  %263 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #13
  %264 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #13
  %265 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %265) #13
  %266 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %266) #13
  %267 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #13
  %268 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %268) #13
  %269 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #13
  %270 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %270) #13
  %271 = load i32, i32* %21, align 4
  switch i32 %271, label %322 [
    i32 0, label %272
  ]

272:                                              ; preds = %260
  br label %273

273:                                              ; preds = %272
  br label %274

274:                                              ; preds = %273
  br label %275

275:                                              ; preds = %274
  %276 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %276) #13
  %277 = load %18*, %18** %5, align 8
  store %18* %277, %18** %22, align 8
  %278 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %278) #13
  %279 = load %0*, %0** %7, align 8
  %280 = load %0*, %0** %8, align 8
  %281 = icmp ne %0* %280, null
  br i1 %281, label %282, label %286

282:                                              ; preds = %275
  %283 = load %0*, %0** %8, align 8
  %284 = getelementptr inbounds %0, %0* %283, i32 0, i32 3
  %285 = getelementptr inbounds [1 x i8], [1 x i8]* %284, i32 0, i32 0
  br label %287

286:                                              ; preds = %275
  br label %287

287:                                              ; preds = %286, %282
  %288 = phi i8* [ %285, %282 ], [ null, %286 ]
  %289 = load %0*, %0** %8, align 8
  %290 = icmp ne %0* %289, null
  br i1 %290, label %291, label %295

291:                                              ; preds = %287
  %292 = load %0*, %0** %8, align 8
  %293 = getelementptr inbounds %0, %0* %292, i32 0, i32 2
  %294 = load i64, i64* %293, align 8
  br label %296

295:                                              ; preds = %287
  br label %296

296:                                              ; preds = %295, %291
  %297 = phi i64 [ %294, %291 ], [ 0, %295 ]
  %298 = load i32, i32* %6, align 4
  %299 = call %0* @149(%0* %279, i8* %288, i64 %297, i32 %298)
  store %0* %299, %0** %23, align 8
  %300 = load %0*, %0** %23, align 8
  %301 = load %18*, %18** %22, align 8
  %302 = getelementptr inbounds %18, %18* %301, i32 0, i32 0
  %303 = bitcast %19* %302 to %0**
  store %0* %300, %0** %303, align 8
  %304 = load %0*, %0** %23, align 8
  %305 = getelementptr inbounds %0, %0* %304, i32 0, i32 0
  %306 = getelementptr inbounds %1, %1* %305, i32 0, i32 1
  %307 = bitcast %2* %306 to %52*
  %308 = getelementptr inbounds %52, %52* %307, i32 0, i32 1
  %309 = load i8, i8* %308, align 1
  %310 = zext i8 %309 to i32
  %311 = and i32 %310, 2
  %312 = icmp ne i32 %311, 0
  %313 = zext i1 %312 to i64
  %314 = select i1 %312, i32 6, i32 5126
  %315 = load %18*, %18** %22, align 8
  %316 = getelementptr inbounds %18, %18* %315, i32 0, i32 1
  %317 = bitcast %20* %316 to i32*
  store i32 %314, i32* %317, align 8
  %318 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %318) #13
  %319 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %319) #13
  br label %320

320:                                              ; preds = %296
  br label %321

321:                                              ; preds = %320
  store i32 0, i32* %21, align 4
  br label %322

322:                                              ; preds = %321, %260
  %323 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %323) #13
  %324 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %324) #13
  %325 = load i32, i32* %21, align 4
  switch i32 %325, label %327 [
    i32 0, label %326
    i32 1, label %326
  ]

326:                                              ; preds = %322, %322
  ret void

327:                                              ; preds = %322
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_rtrim(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @150(%14* %5, %18* %6, i32 2)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_ltrim(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @150(%14* %5, %18* %6, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_wordwrap(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca %0*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %18*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %18*, align 8
  %31 = alloca %0*, align 8
  %32 = alloca %18*, align 8
  %33 = alloca %0*, align 8
  %34 = alloca %18*, align 8
  %35 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %36 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @73, i32 0, i32 0), i8** %6, align 8
  %38 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  %39 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store i64 1, i64* %9, align 8
  %41 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  store i64 0, i64* %11, align 8
  %43 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  store i64 0, i64* %12, align 8
  %44 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  store i64 0, i64* %13, align 8
  %45 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  store i64 75, i64* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  store i8 0, i8* %15, align 1
  %46 = bitcast %0** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  br label %47

47:                                               ; preds = %2
  %48 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %17, align 4
  %49 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  store i32 1, i32* %18, align 4
  %50 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #13
  store i32 4, i32* %19, align 4
  %51 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #13
  %52 = load %14*, %14** %3, align 8
  %53 = getelementptr inbounds %14, %14* %52, i32 0, i32 4
  %54 = getelementptr inbounds %18, %18* %53, i32 0, i32 2
  %55 = bitcast %21* %54 to i32*
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %20, align 4
  %57 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #13
  %58 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #13
  %59 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #13
  store %18* null, %18** %23, align 8
  %60 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #13
  store i32 0, i32* %24, align 4
  %61 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #13
  store i8* null, i8** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %26) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %27) #13
  store i8 0, i8* %27, align 1
  %62 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #13
  store i32 0, i32* %28, align 4
  %63 = load i32, i32* %21, align 4
  %64 = load %18*, %18** %22, align 8
  %65 = load %18*, %18** %23, align 8
  %66 = load i32, i32* %24, align 4
  %67 = load i8*, i8** %25, align 8
  %68 = load i8, i8* %26, align 1
  %69 = load i8, i8* %27, align 1
  br label %70

70:                                               ; preds = %47
  %71 = load i32, i32* %20, align 4
  %72 = load i32, i32* %18, align 4
  %73 = icmp slt i32 %71, %72
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 0)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %99, label %80

80:                                               ; preds = %70
  %81 = load i32, i32* %20, align 4
  %82 = load i32, i32* %19, align 4
  %83 = icmp sgt i32 %81, %82
  %84 = xor i1 %83, true
  %85 = xor i1 %84, true
  %86 = zext i1 %85 to i32
  %87 = sext i32 %86 to i64
  %88 = call i64 @llvm.expect.i64(i64 %87, i64 0)
  %89 = icmp ne i64 %88, 0
  br i1 %89, label %90, label %103

90:                                               ; preds = %80
  %91 = load i32, i32* %19, align 4
  %92 = icmp sge i32 %91, 0
  %93 = xor i1 %92, true
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 1)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %90, %70
  %100 = load i32, i32* %20, align 4
  %101 = load i32, i32* %18, align 4
  %102 = load i32, i32* %19, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %100, i32 %101, i32 %102)
  store i32 1, i32* %28, align 4
  br label %388

103:                                              ; preds = %90, %80
  store i32 0, i32* %21, align 4
  %104 = load %14*, %14** %3, align 8
  %105 = bitcast %14* %104 to %18*
  %106 = getelementptr inbounds %18, %18* %105, i64 4
  store %18* %106, %18** %22, align 8
  %107 = load i32, i32* %21, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %21, align 4
  br label %109

109:                                              ; preds = %103
  %110 = load i32, i32* %21, align 4
  %111 = load i32, i32* %18, align 4
  %112 = icmp sle i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %27, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 1
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  br label %128

128:                                              ; preds = %127
  %129 = load i32, i32* %21, align 4
  %130 = load i32, i32* %18, align 4
  %131 = icmp sgt i32 %129, %130
  br i1 %131, label %136, label %132

132:                                              ; preds = %128
  %133 = load i8, i8* %27, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp eq i32 %134, 0
  br label %136

136:                                              ; preds = %132, %128
  %137 = phi i1 [ true, %128 ], [ %135, %132 ]
  %138 = xor i1 %137, true
  %139 = zext i1 %138 to i32
  %140 = sext i32 %139 to i64
  %141 = call i64 @llvm.expect.i64(i64 %140, i64 0)
  %142 = icmp ne i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %136
  unreachable

144:                                              ; preds = %136
  br label %145

145:                                              ; preds = %144
  br label %146

146:                                              ; preds = %145
  %147 = load i8, i8* %27, align 1
  %148 = icmp ne i8 %147, 0
  br i1 %148, label %149, label %161

149:                                              ; preds = %146
  %150 = load i32, i32* %21, align 4
  %151 = load i32, i32* %20, align 4
  %152 = icmp sgt i32 %150, %151
  %153 = xor i1 %152, true
  %154 = xor i1 %153, true
  %155 = zext i1 %154 to i32
  %156 = sext i32 %155 to i64
  %157 = call i64 @llvm.expect.i64(i64 %156, i64 0)
  %158 = icmp ne i64 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %149
  br label %388

160:                                              ; preds = %149
  br label %161

161:                                              ; preds = %160, %146
  %162 = load %18*, %18** %22, align 8
  %163 = getelementptr inbounds %18, %18* %162, i32 1
  store %18* %163, %18** %22, align 8
  %164 = load %18*, %18** %22, align 8
  store %18* %164, %18** %23, align 8
  %165 = load %18*, %18** %23, align 8
  %166 = call i32 @143(%18* %165, %0** %5, i32 0)
  %167 = icmp ne i32 %166, 0
  %168 = xor i1 %167, true
  %169 = xor i1 %168, true
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %161
  store i32 2, i32* %24, align 4
  store i32 4, i32* %28, align 4
  br label %388

176:                                              ; preds = %161
  store i8 1, i8* %27, align 1
  %177 = load i32, i32* %21, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %21, align 4
  br label %179

179:                                              ; preds = %176
  %180 = load i32, i32* %21, align 4
  %181 = load i32, i32* %18, align 4
  %182 = icmp sle i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %27, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 1
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  br label %198

198:                                              ; preds = %197
  %199 = load i32, i32* %21, align 4
  %200 = load i32, i32* %18, align 4
  %201 = icmp sgt i32 %199, %200
  br i1 %201, label %206, label %202

202:                                              ; preds = %198
  %203 = load i8, i8* %27, align 1
  %204 = zext i8 %203 to i32
  %205 = icmp eq i32 %204, 0
  br label %206

206:                                              ; preds = %202, %198
  %207 = phi i1 [ true, %198 ], [ %205, %202 ]
  %208 = xor i1 %207, true
  %209 = zext i1 %208 to i32
  %210 = sext i32 %209 to i64
  %211 = call i64 @llvm.expect.i64(i64 %210, i64 0)
  %212 = icmp ne i64 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %206
  unreachable

214:                                              ; preds = %206
  br label %215

215:                                              ; preds = %214
  br label %216

216:                                              ; preds = %215
  %217 = load i8, i8* %27, align 1
  %218 = icmp ne i8 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %216
  %220 = load i32, i32* %21, align 4
  %221 = load i32, i32* %20, align 4
  %222 = icmp sgt i32 %220, %221
  %223 = xor i1 %222, true
  %224 = xor i1 %223, true
  %225 = zext i1 %224 to i32
  %226 = sext i32 %225 to i64
  %227 = call i64 @llvm.expect.i64(i64 %226, i64 0)
  %228 = icmp ne i64 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %219
  br label %388

230:                                              ; preds = %219
  br label %231

231:                                              ; preds = %230, %216
  %232 = load %18*, %18** %22, align 8
  %233 = getelementptr inbounds %18, %18* %232, i32 1
  store %18* %233, %18** %22, align 8
  %234 = load %18*, %18** %22, align 8
  store %18* %234, %18** %23, align 8
  %235 = load %18*, %18** %23, align 8
  %236 = call i32 @147(%18* %235, i64* %14, i8* %26, i32 0, i32 0)
  %237 = icmp ne i32 %236, 0
  %238 = xor i1 %237, true
  %239 = xor i1 %238, true
  %240 = xor i1 %239, true
  %241 = zext i1 %240 to i32
  %242 = sext i32 %241 to i64
  %243 = call i64 @llvm.expect.i64(i64 %242, i64 0)
  %244 = icmp ne i64 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %231
  store i32 0, i32* %24, align 4
  store i32 4, i32* %28, align 4
  br label %388

246:                                              ; preds = %231
  %247 = load i32, i32* %21, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %21, align 4
  br label %249

249:                                              ; preds = %246
  %250 = load i32, i32* %21, align 4
  %251 = load i32, i32* %18, align 4
  %252 = icmp sle i32 %250, %251
  br i1 %252, label %257, label %253

253:                                              ; preds = %249
  %254 = load i8, i8* %27, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp eq i32 %255, 1
  br label %257

257:                                              ; preds = %253, %249
  %258 = phi i1 [ true, %249 ], [ %256, %253 ]
  %259 = xor i1 %258, true
  %260 = zext i1 %259 to i32
  %261 = sext i32 %260 to i64
  %262 = call i64 @llvm.expect.i64(i64 %261, i64 0)
  %263 = icmp ne i64 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %257
  unreachable

265:                                              ; preds = %257
  br label %266

266:                                              ; preds = %265
  br label %267

267:                                              ; preds = %266
  br label %268

268:                                              ; preds = %267
  %269 = load i32, i32* %21, align 4
  %270 = load i32, i32* %18, align 4
  %271 = icmp sgt i32 %269, %270
  br i1 %271, label %276, label %272

272:                                              ; preds = %268
  %273 = load i8, i8* %27, align 1
  %274 = zext i8 %273 to i32
  %275 = icmp eq i32 %274, 0
  br label %276

276:                                              ; preds = %272, %268
  %277 = phi i1 [ true, %268 ], [ %275, %272 ]
  %278 = xor i1 %277, true
  %279 = zext i1 %278 to i32
  %280 = sext i32 %279 to i64
  %281 = call i64 @llvm.expect.i64(i64 %280, i64 0)
  %282 = icmp ne i64 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %276
  unreachable

284:                                              ; preds = %276
  br label %285

285:                                              ; preds = %284
  br label %286

286:                                              ; preds = %285
  %287 = load i8, i8* %27, align 1
  %288 = icmp ne i8 %287, 0
  br i1 %288, label %289, label %301

289:                                              ; preds = %286
  %290 = load i32, i32* %21, align 4
  %291 = load i32, i32* %20, align 4
  %292 = icmp sgt i32 %290, %291
  %293 = xor i1 %292, true
  %294 = xor i1 %293, true
  %295 = zext i1 %294 to i32
  %296 = sext i32 %295 to i64
  %297 = call i64 @llvm.expect.i64(i64 %296, i64 0)
  %298 = icmp ne i64 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %289
  br label %388

300:                                              ; preds = %289
  br label %301

301:                                              ; preds = %300, %286
  %302 = load %18*, %18** %22, align 8
  %303 = getelementptr inbounds %18, %18* %302, i32 1
  store %18* %303, %18** %22, align 8
  %304 = load %18*, %18** %22, align 8
  store %18* %304, %18** %23, align 8
  %305 = load %18*, %18** %23, align 8
  %306 = call i32 @151(%18* %305, i8** %6, i64* %9, i32 0)
  %307 = icmp ne i32 %306, 0
  %308 = xor i1 %307, true
  %309 = xor i1 %308, true
  %310 = xor i1 %309, true
  %311 = zext i1 %310 to i32
  %312 = sext i32 %311 to i64
  %313 = call i64 @llvm.expect.i64(i64 %312, i64 0)
  %314 = icmp ne i64 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %301
  store i32 2, i32* %24, align 4
  store i32 4, i32* %28, align 4
  br label %388

316:                                              ; preds = %301
  %317 = load i32, i32* %21, align 4
  %318 = add nsw i32 %317, 1
  store i32 %318, i32* %21, align 4
  br label %319

319:                                              ; preds = %316
  %320 = load i32, i32* %21, align 4
  %321 = load i32, i32* %18, align 4
  %322 = icmp sle i32 %320, %321
  br i1 %322, label %327, label %323

323:                                              ; preds = %319
  %324 = load i8, i8* %27, align 1
  %325 = zext i8 %324 to i32
  %326 = icmp eq i32 %325, 1
  br label %327

327:                                              ; preds = %323, %319
  %328 = phi i1 [ true, %319 ], [ %326, %323 ]
  %329 = xor i1 %328, true
  %330 = zext i1 %329 to i32
  %331 = sext i32 %330 to i64
  %332 = call i64 @llvm.expect.i64(i64 %331, i64 0)
  %333 = icmp ne i64 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %327
  unreachable

335:                                              ; preds = %327
  br label %336

336:                                              ; preds = %335
  br label %337

337:                                              ; preds = %336
  br label %338

338:                                              ; preds = %337
  %339 = load i32, i32* %21, align 4
  %340 = load i32, i32* %18, align 4
  %341 = icmp sgt i32 %339, %340
  br i1 %341, label %346, label %342

342:                                              ; preds = %338
  %343 = load i8, i8* %27, align 1
  %344 = zext i8 %343 to i32
  %345 = icmp eq i32 %344, 0
  br label %346

346:                                              ; preds = %342, %338
  %347 = phi i1 [ true, %338 ], [ %345, %342 ]
  %348 = xor i1 %347, true
  %349 = zext i1 %348 to i32
  %350 = sext i32 %349 to i64
  %351 = call i64 @llvm.expect.i64(i64 %350, i64 0)
  %352 = icmp ne i64 %351, 0
  br i1 %352, label %353, label %354

353:                                              ; preds = %346
  unreachable

354:                                              ; preds = %346
  br label %355

355:                                              ; preds = %354
  br label %356

356:                                              ; preds = %355
  %357 = load i8, i8* %27, align 1
  %358 = icmp ne i8 %357, 0
  br i1 %358, label %359, label %371

359:                                              ; preds = %356
  %360 = load i32, i32* %21, align 4
  %361 = load i32, i32* %20, align 4
  %362 = icmp sgt i32 %360, %361
  %363 = xor i1 %362, true
  %364 = xor i1 %363, true
  %365 = zext i1 %364 to i32
  %366 = sext i32 %365 to i64
  %367 = call i64 @llvm.expect.i64(i64 %366, i64 0)
  %368 = icmp ne i64 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %359
  br label %388

370:                                              ; preds = %359
  br label %371

371:                                              ; preds = %370, %356
  %372 = load %18*, %18** %22, align 8
  %373 = getelementptr inbounds %18, %18* %372, i32 1
  store %18* %373, %18** %22, align 8
  %374 = load %18*, %18** %22, align 8
  store %18* %374, %18** %23, align 8
  %375 = load %18*, %18** %23, align 8
  %376 = call i32 @152(%18* %375, i8* %15, i8* %26, i32 0)
  %377 = icmp ne i32 %376, 0
  %378 = xor i1 %377, true
  %379 = xor i1 %378, true
  %380 = xor i1 %379, true
  %381 = zext i1 %380 to i32
  %382 = sext i32 %381 to i64
  %383 = call i64 @llvm.expect.i64(i64 %382, i64 0)
  %384 = icmp ne i64 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %371
  store i32 1, i32* %24, align 4
  store i32 4, i32* %28, align 4
  br label %388

386:                                              ; preds = %371
  br label %387

387:                                              ; preds = %386
  br label %388

388:                                              ; preds = %387, %385, %369, %315, %299, %245, %229, %175, %159, %99
  %389 = load i32, i32* %28, align 4
  %390 = icmp ne i32 %389, 0
  %391 = xor i1 %390, true
  %392 = xor i1 %391, true
  %393 = zext i1 %392 to i32
  %394 = sext i32 %393 to i64
  %395 = call i64 @llvm.expect.i64(i64 %394, i64 0)
  %396 = icmp ne i64 %395, 0
  br i1 %396, label %397, label %420

397:                                              ; preds = %388
  %398 = load i32, i32* %28, align 4
  %399 = icmp eq i32 %398, 2
  br i1 %399, label %400, label %403

400:                                              ; preds = %397
  %401 = load i32, i32* %21, align 4
  %402 = load i8*, i8** %25, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %401, i8* %402)
  br label %419

403:                                              ; preds = %397
  %404 = load i32, i32* %28, align 4
  %405 = icmp eq i32 %404, 3
  br i1 %405, label %406, label %410

406:                                              ; preds = %403
  %407 = load i32, i32* %21, align 4
  %408 = load i8*, i8** %25, align 8
  %409 = load %18*, %18** %23, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %407, i8* %408, %18* %409)
  br label %418

410:                                              ; preds = %403
  %411 = load i32, i32* %28, align 4
  %412 = icmp eq i32 %411, 4
  br i1 %412, label %413, label %417

413:                                              ; preds = %410
  %414 = load i32, i32* %21, align 4
  %415 = load i32, i32* %24, align 4
  %416 = load %18*, %18** %23, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %414, i32 %415, %18* %416)
  br label %417

417:                                              ; preds = %413, %410
  br label %418

418:                                              ; preds = %417, %406
  br label %419

419:                                              ; preds = %418, %400
  store i32 1, i32* %29, align 4
  br label %421

420:                                              ; preds = %388
  store i32 0, i32* %29, align 4
  br label %421

421:                                              ; preds = %420, %419
  %422 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %422) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %27) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %26) #13
  %423 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %423) #13
  %424 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %424) #13
  %425 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %425) #13
  %426 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %426) #13
  %427 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %427) #13
  %428 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %428) #13
  %429 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %429) #13
  %430 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %430) #13
  %431 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %431) #13
  %432 = load i32, i32* %29, align 4
  switch i32 %432, label %918 [
    i32 0, label %433
  ]

433:                                              ; preds = %421
  br label %434

434:                                              ; preds = %433
  br label %435

435:                                              ; preds = %434
  %436 = load %0*, %0** %5, align 8
  %437 = getelementptr inbounds %0, %0* %436, i32 0, i32 2
  %438 = load i64, i64* %437, align 8
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %440, label %460

440:                                              ; preds = %435
  br label %441

441:                                              ; preds = %440
  br label %442

442:                                              ; preds = %441
  %443 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %443) #13
  %444 = load %18*, %18** %4, align 8
  store %18* %444, %18** %30, align 8
  %445 = bitcast %0** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %445) #13
  %446 = load %0*, %0** @zend_empty_string, align 8
  store %0* %446, %0** %31, align 8
  %447 = load %0*, %0** %31, align 8
  %448 = load %18*, %18** %30, align 8
  %449 = getelementptr inbounds %18, %18* %448, i32 0, i32 0
  %450 = bitcast %19* %449 to %0**
  store %0* %447, %0** %450, align 8
  %451 = load %18*, %18** %30, align 8
  %452 = getelementptr inbounds %18, %18* %451, i32 0, i32 1
  %453 = bitcast %20* %452 to i32*
  store i32 6, i32* %453, align 8
  %454 = bitcast %0** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %454) #13
  %455 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %455) #13
  br label %456

456:                                              ; preds = %442
  br label %457

457:                                              ; preds = %456
  br label %458

458:                                              ; preds = %457
  br label %459

459:                                              ; preds = %458
  store i32 1, i32* %29, align 4
  br label %918

460:                                              ; preds = %435
  %461 = load i64, i64* %9, align 8
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %470

463:                                              ; preds = %460
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @74, i32 0, i32 0))
  br label %464

464:                                              ; preds = %463
  %465 = load %18*, %18** %4, align 8
  %466 = getelementptr inbounds %18, %18* %465, i32 0, i32 1
  %467 = bitcast %20* %466 to i32*
  store i32 2, i32* %467, align 8
  br label %468

468:                                              ; preds = %464
  br label %469

469:                                              ; preds = %468
  store i32 1, i32* %29, align 4
  br label %918

470:                                              ; preds = %460
  %471 = load i64, i64* %14, align 8
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %484

473:                                              ; preds = %470
  %474 = load i8, i8* %15, align 1
  %475 = zext i8 %474 to i32
  %476 = icmp ne i32 %475, 0
  br i1 %476, label %477, label %484

477:                                              ; preds = %473
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @75, i32 0, i32 0))
  br label %478

478:                                              ; preds = %477
  %479 = load %18*, %18** %4, align 8
  %480 = getelementptr inbounds %18, %18* %479, i32 0, i32 1
  %481 = bitcast %20* %480 to i32*
  store i32 2, i32* %481, align 8
  br label %482

482:                                              ; preds = %478
  br label %483

483:                                              ; preds = %482
  store i32 1, i32* %29, align 4
  br label %918

484:                                              ; preds = %473, %470
  %485 = load i64, i64* %9, align 8
  %486 = icmp eq i64 %485, 1
  br i1 %486, label %487, label %588

487:                                              ; preds = %484
  %488 = load i8, i8* %15, align 1
  %489 = icmp ne i8 %488, 0
  br i1 %489, label %588, label %490

490:                                              ; preds = %487
  %491 = load %0*, %0** %5, align 8
  %492 = getelementptr inbounds %0, %0* %491, i32 0, i32 3
  %493 = getelementptr inbounds [1 x i8], [1 x i8]* %492, i32 0, i32 0
  %494 = load %0*, %0** %5, align 8
  %495 = getelementptr inbounds %0, %0* %494, i32 0, i32 2
  %496 = load i64, i64* %495, align 8
  %497 = call %0* @148(i8* %493, i64 %496, i32 0)
  store %0* %497, %0** %16, align 8
  store i64 0, i64* %13, align 8
  store i64 0, i64* %12, align 8
  store i64 0, i64* %11, align 8
  br label %498

498:                                              ; preds = %568, %490
  %499 = load i64, i64* %11, align 8
  %500 = load %0*, %0** %5, align 8
  %501 = getelementptr inbounds %0, %0* %500, i32 0, i32 2
  %502 = load i64, i64* %501, align 8
  %503 = icmp slt i64 %499, %502
  br i1 %503, label %504, label %571

504:                                              ; preds = %498
  %505 = load %0*, %0** %5, align 8
  %506 = getelementptr inbounds %0, %0* %505, i32 0, i32 3
  %507 = load i64, i64* %11, align 8
  %508 = getelementptr inbounds [1 x i8], [1 x i8]* %506, i64 0, i64 %507
  %509 = load i8, i8* %508, align 1
  %510 = sext i8 %509 to i32
  %511 = load i8*, i8** %6, align 8
  %512 = getelementptr inbounds i8, i8* %511, i64 0
  %513 = load i8, i8* %512, align 1
  %514 = sext i8 %513 to i32
  %515 = icmp eq i32 %510, %514
  br i1 %515, label %516, label %519

516:                                              ; preds = %504
  %517 = load i64, i64* %11, align 8
  %518 = add nsw i64 %517, 1
  store i64 %518, i64* %13, align 8
  store i64 %518, i64* %12, align 8
  br label %567

519:                                              ; preds = %504
  %520 = load %0*, %0** %5, align 8
  %521 = getelementptr inbounds %0, %0* %520, i32 0, i32 3
  %522 = load i64, i64* %11, align 8
  %523 = getelementptr inbounds [1 x i8], [1 x i8]* %521, i64 0, i64 %522
  %524 = load i8, i8* %523, align 1
  %525 = sext i8 %524 to i32
  %526 = icmp eq i32 %525, 32
  br i1 %526, label %527, label %545

527:                                              ; preds = %519
  %528 = load i64, i64* %11, align 8
  %529 = load i64, i64* %12, align 8
  %530 = sub nsw i64 %528, %529
  %531 = load i64, i64* %14, align 8
  %532 = icmp sge i64 %530, %531
  br i1 %532, label %533, label %543

533:                                              ; preds = %527
  %534 = load i8*, i8** %6, align 8
  %535 = getelementptr inbounds i8, i8* %534, i64 0
  %536 = load i8, i8* %535, align 1
  %537 = load %0*, %0** %16, align 8
  %538 = getelementptr inbounds %0, %0* %537, i32 0, i32 3
  %539 = load i64, i64* %11, align 8
  %540 = getelementptr inbounds [1 x i8], [1 x i8]* %538, i64 0, i64 %539
  store i8 %536, i8* %540, align 1
  %541 = load i64, i64* %11, align 8
  %542 = add nsw i64 %541, 1
  store i64 %542, i64* %12, align 8
  br label %543

543:                                              ; preds = %533, %527
  %544 = load i64, i64* %11, align 8
  store i64 %544, i64* %13, align 8
  br label %566

545:                                              ; preds = %519
  %546 = load i64, i64* %11, align 8
  %547 = load i64, i64* %12, align 8
  %548 = sub nsw i64 %546, %547
  %549 = load i64, i64* %14, align 8
  %550 = icmp sge i64 %548, %549
  br i1 %550, label %551, label %565

551:                                              ; preds = %545
  %552 = load i64, i64* %12, align 8
  %553 = load i64, i64* %13, align 8
  %554 = icmp ne i64 %552, %553
  br i1 %554, label %555, label %565

555:                                              ; preds = %551
  %556 = load i8*, i8** %6, align 8
  %557 = getelementptr inbounds i8, i8* %556, i64 0
  %558 = load i8, i8* %557, align 1
  %559 = load %0*, %0** %16, align 8
  %560 = getelementptr inbounds %0, %0* %559, i32 0, i32 3
  %561 = load i64, i64* %13, align 8
  %562 = getelementptr inbounds [1 x i8], [1 x i8]* %560, i64 0, i64 %561
  store i8 %558, i8* %562, align 1
  %563 = load i64, i64* %13, align 8
  %564 = add nsw i64 %563, 1
  store i64 %564, i64* %12, align 8
  br label %565

565:                                              ; preds = %555, %551, %545
  br label %566

566:                                              ; preds = %565, %543
  br label %567

567:                                              ; preds = %566, %516
  br label %568

568:                                              ; preds = %567
  %569 = load i64, i64* %11, align 8
  %570 = add nsw i64 %569, 1
  store i64 %570, i64* %11, align 8
  br label %498

571:                                              ; preds = %498
  br label %572

572:                                              ; preds = %571
  %573 = bitcast %18** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %573) #13
  %574 = load %18*, %18** %4, align 8
  store %18* %574, %18** %32, align 8
  %575 = bitcast %0** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %575) #13
  %576 = load %0*, %0** %16, align 8
  store %0* %576, %0** %33, align 8
  %577 = load %0*, %0** %33, align 8
  %578 = load %18*, %18** %32, align 8
  %579 = getelementptr inbounds %18, %18* %578, i32 0, i32 0
  %580 = bitcast %19* %579 to %0**
  store %0* %577, %0** %580, align 8
  %581 = load %18*, %18** %32, align 8
  %582 = getelementptr inbounds %18, %18* %581, i32 0, i32 1
  %583 = bitcast %20* %582 to i32*
  store i32 5126, i32* %583, align 8
  %584 = bitcast %0** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %584) #13
  %585 = bitcast %18** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %585) #13
  br label %586

586:                                              ; preds = %572
  br label %587

587:                                              ; preds = %586
  store i32 1, i32* %29, align 4
  br label %918

588:                                              ; preds = %487, %484
  %589 = load i64, i64* %14, align 8
  %590 = icmp sgt i64 %589, 0
  br i1 %590, label %591, label %612

591:                                              ; preds = %588
  %592 = load %0*, %0** %5, align 8
  %593 = getelementptr inbounds %0, %0* %592, i32 0, i32 2
  %594 = load i64, i64* %593, align 8
  %595 = load i64, i64* %14, align 8
  %596 = udiv i64 %594, %595
  %597 = add i64 %596, 1
  store i64 %597, i64* %8, align 8
  %598 = load i64, i64* %8, align 8
  %599 = load i64, i64* %9, align 8
  %600 = load %0*, %0** %5, align 8
  %601 = getelementptr inbounds %0, %0* %600, i32 0, i32 2
  %602 = load i64, i64* %601, align 8
  %603 = call %0* @153(i64 %598, i64 %599, i64 %602, i32 0)
  store %0* %603, %0** %16, align 8
  %604 = load %0*, %0** %5, align 8
  %605 = getelementptr inbounds %0, %0* %604, i32 0, i32 2
  %606 = load i64, i64* %605, align 8
  %607 = load i64, i64* %8, align 8
  %608 = load i64, i64* %9, align 8
  %609 = mul i64 %607, %608
  %610 = add i64 %606, %609
  %611 = add i64 %610, 1
  store i64 %611, i64* %10, align 8
  br label %629

612:                                              ; preds = %588
  %613 = load %0*, %0** %5, align 8
  %614 = getelementptr inbounds %0, %0* %613, i32 0, i32 2
  %615 = load i64, i64* %614, align 8
  store i64 %615, i64* %8, align 8
  %616 = load %0*, %0** %5, align 8
  %617 = getelementptr inbounds %0, %0* %616, i32 0, i32 2
  %618 = load i64, i64* %617, align 8
  %619 = load i64, i64* %9, align 8
  %620 = add i64 %619, 1
  %621 = mul i64 %618, %620
  %622 = add i64 %621, 1
  store i64 %622, i64* %10, align 8
  %623 = load %0*, %0** %5, align 8
  %624 = getelementptr inbounds %0, %0* %623, i32 0, i32 2
  %625 = load i64, i64* %624, align 8
  %626 = load i64, i64* %9, align 8
  %627 = add i64 %626, 1
  %628 = call %0* @153(i64 %625, i64 %627, i64 0, i32 0)
  store %0* %628, %0** %16, align 8
  br label %629

629:                                              ; preds = %612, %591
  store i64 0, i64* %7, align 8
  store i64 0, i64* %13, align 8
  store i64 0, i64* %12, align 8
  store i64 0, i64* %11, align 8
  br label %630

630:                                              ; preds = %868, %629
  %631 = load i64, i64* %11, align 8
  %632 = load %0*, %0** %5, align 8
  %633 = getelementptr inbounds %0, %0* %632, i32 0, i32 2
  %634 = load i64, i64* %633, align 8
  %635 = icmp slt i64 %631, %634
  br i1 %635, label %636, label %871

636:                                              ; preds = %630
  %637 = load i64, i64* %8, align 8
  %638 = icmp ule i64 %637, 0
  br i1 %638, label %639, label %665

639:                                              ; preds = %636
  %640 = load %0*, %0** %5, align 8
  %641 = getelementptr inbounds %0, %0* %640, i32 0, i32 2
  %642 = load i64, i64* %641, align 8
  %643 = load i64, i64* %11, align 8
  %644 = sub i64 %642, %643
  %645 = add i64 %644, 1
  %646 = load i64, i64* %14, align 8
  %647 = udiv i64 %645, %646
  %648 = add i64 %647, 1
  %649 = load i64, i64* %9, align 8
  %650 = mul i64 %648, %649
  %651 = add i64 %650, 1
  %652 = load i64, i64* %10, align 8
  %653 = add i64 %652, %651
  store i64 %653, i64* %10, align 8
  %654 = load %0*, %0** %16, align 8
  %655 = load i64, i64* %10, align 8
  %656 = call %0* @154(%0* %654, i64 %655, i32 0)
  store %0* %656, %0** %16, align 8
  %657 = load %0*, %0** %5, align 8
  %658 = getelementptr inbounds %0, %0* %657, i32 0, i32 2
  %659 = load i64, i64* %658, align 8
  %660 = load i64, i64* %11, align 8
  %661 = sub i64 %659, %660
  %662 = load i64, i64* %14, align 8
  %663 = udiv i64 %661, %662
  %664 = add i64 %663, 1
  store i64 %664, i64* %8, align 8
  br label %665

665:                                              ; preds = %639, %636
  %666 = load %0*, %0** %5, align 8
  %667 = getelementptr inbounds %0, %0* %666, i32 0, i32 3
  %668 = load i64, i64* %11, align 8
  %669 = getelementptr inbounds [1 x i8], [1 x i8]* %667, i64 0, i64 %668
  %670 = load i8, i8* %669, align 1
  %671 = sext i8 %670 to i32
  %672 = load i8*, i8** %6, align 8
  %673 = getelementptr inbounds i8, i8* %672, i64 0
  %674 = load i8, i8* %673, align 1
  %675 = sext i8 %674 to i32
  %676 = icmp eq i32 %671, %675
  br i1 %676, label %677, label %726

677:                                              ; preds = %665
  %678 = load i64, i64* %11, align 8
  %679 = load i64, i64* %9, align 8
  %680 = add i64 %678, %679
  %681 = load %0*, %0** %5, align 8
  %682 = getelementptr inbounds %0, %0* %681, i32 0, i32 2
  %683 = load i64, i64* %682, align 8
  %684 = icmp ult i64 %680, %683
  br i1 %684, label %685, label %726

685:                                              ; preds = %677
  %686 = load %0*, %0** %5, align 8
  %687 = getelementptr inbounds %0, %0* %686, i32 0, i32 3
  %688 = getelementptr inbounds [1 x i8], [1 x i8]* %687, i32 0, i32 0
  %689 = load i64, i64* %11, align 8
  %690 = getelementptr inbounds i8, i8* %688, i64 %689
  %691 = load i8*, i8** %6, align 8
  %692 = load i64, i64* %9, align 8
  %693 = call i32 @strncmp(i8* %690, i8* %691, i64 %692) #14
  %694 = icmp ne i32 %693, 0
  br i1 %694, label %726, label %695

695:                                              ; preds = %685
  %696 = load %0*, %0** %16, align 8
  %697 = getelementptr inbounds %0, %0* %696, i32 0, i32 3
  %698 = getelementptr inbounds [1 x i8], [1 x i8]* %697, i32 0, i32 0
  %699 = load i64, i64* %7, align 8
  %700 = getelementptr inbounds i8, i8* %698, i64 %699
  %701 = load %0*, %0** %5, align 8
  %702 = getelementptr inbounds %0, %0* %701, i32 0, i32 3
  %703 = getelementptr inbounds [1 x i8], [1 x i8]* %702, i32 0, i32 0
  %704 = load i64, i64* %12, align 8
  %705 = getelementptr inbounds i8, i8* %703, i64 %704
  %706 = load i64, i64* %11, align 8
  %707 = load i64, i64* %12, align 8
  %708 = sub nsw i64 %706, %707
  %709 = load i64, i64* %9, align 8
  %710 = add i64 %708, %709
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %700, i8* align 1 %705, i64 %710, i1 false)
  %711 = load i64, i64* %11, align 8
  %712 = load i64, i64* %12, align 8
  %713 = sub nsw i64 %711, %712
  %714 = load i64, i64* %9, align 8
  %715 = add i64 %713, %714
  %716 = load i64, i64* %7, align 8
  %717 = add i64 %716, %715
  store i64 %717, i64* %7, align 8
  %718 = load i64, i64* %9, align 8
  %719 = sub i64 %718, 1
  %720 = load i64, i64* %11, align 8
  %721 = add i64 %720, %719
  store i64 %721, i64* %11, align 8
  %722 = load i64, i64* %11, align 8
  %723 = add nsw i64 %722, 1
  store i64 %723, i64* %13, align 8
  store i64 %723, i64* %12, align 8
  %724 = load i64, i64* %8, align 8
  %725 = add i64 %724, -1
  store i64 %725, i64* %8, align 8
  br label %867

726:                                              ; preds = %685, %677, %665
  %727 = load %0*, %0** %5, align 8
  %728 = getelementptr inbounds %0, %0* %727, i32 0, i32 3
  %729 = load i64, i64* %11, align 8
  %730 = getelementptr inbounds [1 x i8], [1 x i8]* %728, i64 0, i64 %729
  %731 = load i8, i8* %730, align 1
  %732 = sext i8 %731 to i32
  %733 = icmp eq i32 %732, 32
  br i1 %733, label %734, label %775

734:                                              ; preds = %726
  %735 = load i64, i64* %11, align 8
  %736 = load i64, i64* %12, align 8
  %737 = sub nsw i64 %735, %736
  %738 = load i64, i64* %14, align 8
  %739 = icmp sge i64 %737, %738
  br i1 %739, label %740, label %773

740:                                              ; preds = %734
  %741 = load %0*, %0** %16, align 8
  %742 = getelementptr inbounds %0, %0* %741, i32 0, i32 3
  %743 = getelementptr inbounds [1 x i8], [1 x i8]* %742, i32 0, i32 0
  %744 = load i64, i64* %7, align 8
  %745 = getelementptr inbounds i8, i8* %743, i64 %744
  %746 = load %0*, %0** %5, align 8
  %747 = getelementptr inbounds %0, %0* %746, i32 0, i32 3
  %748 = getelementptr inbounds [1 x i8], [1 x i8]* %747, i32 0, i32 0
  %749 = load i64, i64* %12, align 8
  %750 = getelementptr inbounds i8, i8* %748, i64 %749
  %751 = load i64, i64* %11, align 8
  %752 = load i64, i64* %12, align 8
  %753 = sub nsw i64 %751, %752
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %745, i8* align 1 %750, i64 %753, i1 false)
  %754 = load i64, i64* %11, align 8
  %755 = load i64, i64* %12, align 8
  %756 = sub nsw i64 %754, %755
  %757 = load i64, i64* %7, align 8
  %758 = add i64 %757, %756
  store i64 %758, i64* %7, align 8
  %759 = load %0*, %0** %16, align 8
  %760 = getelementptr inbounds %0, %0* %759, i32 0, i32 3
  %761 = getelementptr inbounds [1 x i8], [1 x i8]* %760, i32 0, i32 0
  %762 = load i64, i64* %7, align 8
  %763 = getelementptr inbounds i8, i8* %761, i64 %762
  %764 = load i8*, i8** %6, align 8
  %765 = load i64, i64* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %763, i8* align 1 %764, i64 %765, i1 false)
  %766 = load i64, i64* %9, align 8
  %767 = load i64, i64* %7, align 8
  %768 = add i64 %767, %766
  store i64 %768, i64* %7, align 8
  %769 = load i64, i64* %11, align 8
  %770 = add nsw i64 %769, 1
  store i64 %770, i64* %12, align 8
  %771 = load i64, i64* %8, align 8
  %772 = add i64 %771, -1
  store i64 %772, i64* %8, align 8
  br label %773

773:                                              ; preds = %740, %734
  %774 = load i64, i64* %11, align 8
  store i64 %774, i64* %13, align 8
  br label %866

775:                                              ; preds = %726
  %776 = load i64, i64* %11, align 8
  %777 = load i64, i64* %12, align 8
  %778 = sub nsw i64 %776, %777
  %779 = load i64, i64* %14, align 8
  %780 = icmp sge i64 %778, %779
  br i1 %780, label %781, label %821

781:                                              ; preds = %775
  %782 = load i8, i8* %15, align 1
  %783 = zext i8 %782 to i32
  %784 = icmp ne i32 %783, 0
  br i1 %784, label %785, label %821

785:                                              ; preds = %781
  %786 = load i64, i64* %12, align 8
  %787 = load i64, i64* %13, align 8
  %788 = icmp sge i64 %786, %787
  br i1 %788, label %789, label %821

789:                                              ; preds = %785
  %790 = load %0*, %0** %16, align 8
  %791 = getelementptr inbounds %0, %0* %790, i32 0, i32 3
  %792 = getelementptr inbounds [1 x i8], [1 x i8]* %791, i32 0, i32 0
  %793 = load i64, i64* %7, align 8
  %794 = getelementptr inbounds i8, i8* %792, i64 %793
  %795 = load %0*, %0** %5, align 8
  %796 = getelementptr inbounds %0, %0* %795, i32 0, i32 3
  %797 = getelementptr inbounds [1 x i8], [1 x i8]* %796, i32 0, i32 0
  %798 = load i64, i64* %12, align 8
  %799 = getelementptr inbounds i8, i8* %797, i64 %798
  %800 = load i64, i64* %11, align 8
  %801 = load i64, i64* %12, align 8
  %802 = sub nsw i64 %800, %801
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %794, i8* align 1 %799, i64 %802, i1 false)
  %803 = load i64, i64* %11, align 8
  %804 = load i64, i64* %12, align 8
  %805 = sub nsw i64 %803, %804
  %806 = load i64, i64* %7, align 8
  %807 = add i64 %806, %805
  store i64 %807, i64* %7, align 8
  %808 = load %0*, %0** %16, align 8
  %809 = getelementptr inbounds %0, %0* %808, i32 0, i32 3
  %810 = getelementptr inbounds [1 x i8], [1 x i8]* %809, i32 0, i32 0
  %811 = load i64, i64* %7, align 8
  %812 = getelementptr inbounds i8, i8* %810, i64 %811
  %813 = load i8*, i8** %6, align 8
  %814 = load i64, i64* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %812, i8* align 1 %813, i64 %814, i1 false)
  %815 = load i64, i64* %9, align 8
  %816 = load i64, i64* %7, align 8
  %817 = add i64 %816, %815
  store i64 %817, i64* %7, align 8
  %818 = load i64, i64* %11, align 8
  store i64 %818, i64* %13, align 8
  store i64 %818, i64* %12, align 8
  %819 = load i64, i64* %8, align 8
  %820 = add i64 %819, -1
  store i64 %820, i64* %8, align 8
  br label %865

821:                                              ; preds = %785, %781, %775
  %822 = load i64, i64* %11, align 8
  %823 = load i64, i64* %12, align 8
  %824 = sub nsw i64 %822, %823
  %825 = load i64, i64* %14, align 8
  %826 = icmp sge i64 %824, %825
  br i1 %826, label %827, label %864

827:                                              ; preds = %821
  %828 = load i64, i64* %12, align 8
  %829 = load i64, i64* %13, align 8
  %830 = icmp slt i64 %828, %829
  br i1 %830, label %831, label %864

831:                                              ; preds = %827
  %832 = load %0*, %0** %16, align 8
  %833 = getelementptr inbounds %0, %0* %832, i32 0, i32 3
  %834 = getelementptr inbounds [1 x i8], [1 x i8]* %833, i32 0, i32 0
  %835 = load i64, i64* %7, align 8
  %836 = getelementptr inbounds i8, i8* %834, i64 %835
  %837 = load %0*, %0** %5, align 8
  %838 = getelementptr inbounds %0, %0* %837, i32 0, i32 3
  %839 = getelementptr inbounds [1 x i8], [1 x i8]* %838, i32 0, i32 0
  %840 = load i64, i64* %12, align 8
  %841 = getelementptr inbounds i8, i8* %839, i64 %840
  %842 = load i64, i64* %13, align 8
  %843 = load i64, i64* %12, align 8
  %844 = sub nsw i64 %842, %843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %836, i8* align 1 %841, i64 %844, i1 false)
  %845 = load i64, i64* %13, align 8
  %846 = load i64, i64* %12, align 8
  %847 = sub nsw i64 %845, %846
  %848 = load i64, i64* %7, align 8
  %849 = add i64 %848, %847
  store i64 %849, i64* %7, align 8
  %850 = load %0*, %0** %16, align 8
  %851 = getelementptr inbounds %0, %0* %850, i32 0, i32 3
  %852 = getelementptr inbounds [1 x i8], [1 x i8]* %851, i32 0, i32 0
  %853 = load i64, i64* %7, align 8
  %854 = getelementptr inbounds i8, i8* %852, i64 %853
  %855 = load i8*, i8** %6, align 8
  %856 = load i64, i64* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %854, i8* align 1 %855, i64 %856, i1 false)
  %857 = load i64, i64* %9, align 8
  %858 = load i64, i64* %7, align 8
  %859 = add i64 %858, %857
  store i64 %859, i64* %7, align 8
  %860 = load i64, i64* %13, align 8
  %861 = add nsw i64 %860, 1
  store i64 %861, i64* %13, align 8
  store i64 %861, i64* %12, align 8
  %862 = load i64, i64* %8, align 8
  %863 = add i64 %862, -1
  store i64 %863, i64* %8, align 8
  br label %864

864:                                              ; preds = %831, %827, %821
  br label %865

865:                                              ; preds = %864, %789
  br label %866

866:                                              ; preds = %865, %773
  br label %867

867:                                              ; preds = %866, %695
  br label %868

868:                                              ; preds = %867
  %869 = load i64, i64* %11, align 8
  %870 = add nsw i64 %869, 1
  store i64 %870, i64* %11, align 8
  br label %630

871:                                              ; preds = %630
  %872 = load i64, i64* %12, align 8
  %873 = load i64, i64* %11, align 8
  %874 = icmp ne i64 %872, %873
  br i1 %874, label %875, label %894

875:                                              ; preds = %871
  %876 = load %0*, %0** %16, align 8
  %877 = getelementptr inbounds %0, %0* %876, i32 0, i32 3
  %878 = getelementptr inbounds [1 x i8], [1 x i8]* %877, i32 0, i32 0
  %879 = load i64, i64* %7, align 8
  %880 = getelementptr inbounds i8, i8* %878, i64 %879
  %881 = load %0*, %0** %5, align 8
  %882 = getelementptr inbounds %0, %0* %881, i32 0, i32 3
  %883 = getelementptr inbounds [1 x i8], [1 x i8]* %882, i32 0, i32 0
  %884 = load i64, i64* %12, align 8
  %885 = getelementptr inbounds i8, i8* %883, i64 %884
  %886 = load i64, i64* %11, align 8
  %887 = load i64, i64* %12, align 8
  %888 = sub nsw i64 %886, %887
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %880, i8* align 1 %885, i64 %888, i1 false)
  %889 = load i64, i64* %11, align 8
  %890 = load i64, i64* %12, align 8
  %891 = sub nsw i64 %889, %890
  %892 = load i64, i64* %7, align 8
  %893 = add i64 %892, %891
  store i64 %893, i64* %7, align 8
  br label %894

894:                                              ; preds = %875, %871
  %895 = load %0*, %0** %16, align 8
  %896 = getelementptr inbounds %0, %0* %895, i32 0, i32 3
  %897 = load i64, i64* %7, align 8
  %898 = getelementptr inbounds [1 x i8], [1 x i8]* %896, i64 0, i64 %897
  store i8 0, i8* %898, align 1
  %899 = load %0*, %0** %16, align 8
  %900 = load i64, i64* %7, align 8
  %901 = call %0* @155(%0* %899, i64 %900, i32 0)
  store %0* %901, %0** %16, align 8
  br label %902

902:                                              ; preds = %894
  %903 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %903) #13
  %904 = load %18*, %18** %4, align 8
  store %18* %904, %18** %34, align 8
  %905 = bitcast %0** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %905) #13
  %906 = load %0*, %0** %16, align 8
  store %0* %906, %0** %35, align 8
  %907 = load %0*, %0** %35, align 8
  %908 = load %18*, %18** %34, align 8
  %909 = getelementptr inbounds %18, %18* %908, i32 0, i32 0
  %910 = bitcast %19* %909 to %0**
  store %0* %907, %0** %910, align 8
  %911 = load %18*, %18** %34, align 8
  %912 = getelementptr inbounds %18, %18* %911, i32 0, i32 1
  %913 = bitcast %20* %912 to i32*
  store i32 5126, i32* %913, align 8
  %914 = bitcast %0** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %914) #13
  %915 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %915) #13
  br label %916

916:                                              ; preds = %902
  br label %917

917:                                              ; preds = %916
  store i32 1, i32* %29, align 4
  br label %918

918:                                              ; preds = %917, %587, %483, %469, %459, %421
  %919 = bitcast %0** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %919) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %920 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %920) #13
  %921 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %921) #13
  %922 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %922) #13
  %923 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %923) #13
  %924 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %924) #13
  %925 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %925) #13
  %926 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %926) #13
  %927 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %927) #13
  %928 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %928) #13
  %929 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %929) #13
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @151(%18* %0, i8** %1, i64* %2, i32 %3) #5 {
  %5 = alloca i32, align 4
  %6 = alloca %18*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %0*, align 8
  %11 = alloca i32, align 4
  store %18* %0, %18** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  %12 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = load %18*, %18** %6, align 8
  %14 = load i32, i32* %9, align 4
  %15 = call i32 @143(%18* %13, %0** %10, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

18:                                               ; preds = %4
  %19 = load i32, i32* %9, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = load %0*, %0** %10, align 8
  %23 = icmp ne %0* %22, null
  %24 = xor i1 %23, true
  %25 = xor i1 %24, true
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = call i64 @llvm.expect.i64(i64 %28, i64 0)
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %21
  %32 = load i8**, i8*** %7, align 8
  store i8* null, i8** %32, align 8
  %33 = load i64*, i64** %8, align 8
  store i64 0, i64* %33, align 8
  br label %43

34:                                               ; preds = %21, %18
  %35 = load %0*, %0** %10, align 8
  %36 = getelementptr inbounds %0, %0* %35, i32 0, i32 3
  %37 = getelementptr inbounds [1 x i8], [1 x i8]* %36, i32 0, i32 0
  %38 = load i8**, i8*** %7, align 8
  store i8* %37, i8** %38, align 8
  %39 = load %0*, %0** %10, align 8
  %40 = getelementptr inbounds %0, %0* %39, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = load i64*, i64** %8, align 8
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %34, %31
  store i32 1, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

44:                                               ; preds = %43, %17
  %45 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #13
  %46 = load i32, i32* %5, align 4
  ret i32 %46
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @152(%18* %0, i8* %1, i8* %2, i32 %3) #5 {
  %5 = alloca i32, align 4
  %6 = alloca %18*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %18* %0, %18** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = load i8*, i8** %8, align 8
  store i8 0, i8* %13, align 1
  br label %14

14:                                               ; preds = %12, %4
  %15 = load %18*, %18** %6, align 8
  %16 = call zeroext i8 @157(%18* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 3
  %19 = xor i1 %18, true
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = call i64 @llvm.expect.i64(i64 %22, i64 1)
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %14
  %26 = load i8*, i8** %7, align 8
  store i8 1, i8* %26, align 1
  br label %57

27:                                               ; preds = %14
  %28 = load %18*, %18** %6, align 8
  %29 = call zeroext i8 @157(%18* %28)
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 2
  %32 = xor i1 %31, true
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = sext i32 %34 to i64
  %36 = call i64 @llvm.expect.i64(i64 %35, i64 1)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = load i8*, i8** %7, align 8
  store i8 0, i8* %39, align 1
  br label %56

40:                                               ; preds = %27
  %41 = load i32, i32* %9, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %40
  %44 = load %18*, %18** %6, align 8
  %45 = call zeroext i8 @157(%18* %44)
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = load i8*, i8** %8, align 8
  store i8 1, i8* %49, align 1
  %50 = load i8*, i8** %7, align 8
  store i8 0, i8* %50, align 1
  br label %55

51:                                               ; preds = %43, %40
  %52 = load %18*, %18** %6, align 8
  %53 = load i8*, i8** %7, align 8
  %54 = call i32 @zend_parse_arg_bool_slow(%18* %52, i8* %53)
  store i32 %54, i32* %5, align 4
  br label %58

55:                                               ; preds = %48
  br label %56

56:                                               ; preds = %55, %38
  br label %57

57:                                               ; preds = %56, %25
  store i32 1, i32* %5, align 4
  br label %58

58:                                               ; preds = %57, %51
  %59 = load i32, i32* %5, align 4
  ret i32 %59
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @153(i64 %0, i64 %1, i64 %2, i32 %3) #5 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %0*, align 8
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %10 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load i32, i32* %8, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %4
  %14 = load i64, i64* %5, align 8
  %15 = load i64, i64* %6, align 8
  %16 = load i64, i64* %7, align 8
  %17 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %16
  %18 = add i64 %17, 1
  %19 = add i64 %18, 8
  %20 = sub i64 %19, 1
  %21 = and i64 %20, -8
  %22 = call noalias i8* @_safe_malloc(i64 %14, i64 %15, i64 %21)
  br label %33

23:                                               ; preds = %4
  %24 = load i64, i64* %5, align 8
  %25 = load i64, i64* %6, align 8
  %26 = load i64, i64* %7, align 8
  %27 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %26
  %28 = add i64 %27, 1
  %29 = add i64 %28, 8
  %30 = sub i64 %29, 1
  %31 = and i64 %30, -8
  %32 = call noalias i8* @_safe_emalloc(i64 %24, i64 %25, i64 %31)
  br label %33

33:                                               ; preds = %23, %13
  %34 = phi i8* [ %22, %13 ], [ %32, %23 ]
  %35 = bitcast i8* %34 to %0*
  store %0* %35, %0** %9, align 8
  %36 = load %0*, %0** %9, align 8
  %37 = getelementptr inbounds %0, %0* %36, i32 0, i32 0
  %38 = getelementptr inbounds %1, %1* %37, i32 0, i32 0
  store i32 1, i32* %38, align 8
  %39 = load i32, i32* %8, align 4
  %40 = icmp ne i32 %39, 0
  %41 = zext i1 %40 to i64
  %42 = select i1 %40, i32 1, i32 0
  %43 = shl i32 %42, 8
  %44 = or i32 6, %43
  %45 = load %0*, %0** %9, align 8
  %46 = getelementptr inbounds %0, %0* %45, i32 0, i32 0
  %47 = getelementptr inbounds %1, %1* %46, i32 0, i32 1
  %48 = bitcast %2* %47 to i32*
  store i32 %44, i32* %48, align 4
  %49 = load %0*, %0** %9, align 8
  call void @168(%0* %49)
  %50 = load i64, i64* %5, align 8
  %51 = load i64, i64* %6, align 8
  %52 = mul i64 %50, %51
  %53 = load i64, i64* %7, align 8
  %54 = add i64 %52, %53
  %55 = load %0*, %0** %9, align 8
  %56 = getelementptr inbounds %0, %0* %55, i32 0, i32 2
  store i64 %54, i64* %56, align 8
  %57 = load %0*, %0** %9, align 8
  %58 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #13
  ret %0* %57
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @154(%0* %0, i64 %1, i32 %2) #5 {
  %4 = alloca %0*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %0*, align 8
  %9 = alloca i32, align 4
  store %0* %0, %0** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  br label %11

11:                                               ; preds = %3
  %12 = load i64, i64* %6, align 8
  %13 = load %0*, %0** %5, align 8
  %14 = getelementptr inbounds %0, %0* %13, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp uge i64 %12, %15
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 0)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  unreachable

23:                                               ; preds = %11
  br label %24

24:                                               ; preds = %23
  br label %25

25:                                               ; preds = %24
  %26 = load %0*, %0** %5, align 8
  %27 = getelementptr inbounds %0, %0* %26, i32 0, i32 0
  %28 = getelementptr inbounds %1, %1* %27, i32 0, i32 1
  %29 = bitcast %2* %28 to %52*
  %30 = getelementptr inbounds %52, %52* %29, i32 0, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = and i32 %32, 2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %85, label %35

35:                                               ; preds = %25
  %36 = load %0*, %0** %5, align 8
  %37 = getelementptr inbounds %0, %0* %36, i32 0, i32 0
  %38 = getelementptr inbounds %1, %1* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  %41 = xor i1 %40, true
  %42 = xor i1 %41, true
  %43 = zext i1 %42 to i32
  %44 = sext i32 %43 to i64
  %45 = call i64 @llvm.expect.i64(i64 %44, i64 1)
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %78

47:                                               ; preds = %35
  %48 = load i32, i32* %7, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = load %0*, %0** %5, align 8
  %52 = bitcast %0* %51 to i8*
  %53 = load i64, i64* %6, align 8
  %54 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %53
  %55 = add i64 %54, 1
  %56 = add i64 %55, 8
  %57 = sub i64 %56, 1
  %58 = and i64 %57, -8
  %59 = call i8* @__zend_realloc(i8* %52, i64 %58) #15
  br label %70

60:                                               ; preds = %47
  %61 = load %0*, %0** %5, align 8
  %62 = bitcast %0* %61 to i8*
  %63 = load i64, i64* %6, align 8
  %64 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %63
  %65 = add i64 %64, 1
  %66 = add i64 %65, 8
  %67 = sub i64 %66, 1
  %68 = and i64 %67, -8
  %69 = call i8* @_erealloc(i8* %62, i64 %68) #15
  br label %70

70:                                               ; preds = %60, %50
  %71 = phi i8* [ %59, %50 ], [ %69, %60 ]
  %72 = bitcast i8* %71 to %0*
  store %0* %72, %0** %8, align 8
  %73 = load i64, i64* %6, align 8
  %74 = load %0*, %0** %8, align 8
  %75 = getelementptr inbounds %0, %0* %74, i32 0, i32 2
  store i64 %73, i64* %75, align 8
  %76 = load %0*, %0** %8, align 8
  call void @168(%0* %76)
  %77 = load %0*, %0** %8, align 8
  store %0* %77, %0** %4, align 8
  store i32 1, i32* %9, align 4
  br label %100

78:                                               ; preds = %35
  %79 = load %0*, %0** %5, align 8
  %80 = getelementptr inbounds %0, %0* %79, i32 0, i32 0
  %81 = getelementptr inbounds %1, %1* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 8
  br label %84

84:                                               ; preds = %78
  br label %85

85:                                               ; preds = %84, %25
  %86 = load i64, i64* %6, align 8
  %87 = load i32, i32* %7, align 4
  %88 = call %0* @162(i64 %86, i32 %87)
  store %0* %88, %0** %8, align 8
  %89 = load %0*, %0** %8, align 8
  %90 = getelementptr inbounds %0, %0* %89, i32 0, i32 3
  %91 = getelementptr inbounds [1 x i8], [1 x i8]* %90, i32 0, i32 0
  %92 = load %0*, %0** %5, align 8
  %93 = getelementptr inbounds %0, %0* %92, i32 0, i32 3
  %94 = getelementptr inbounds [1 x i8], [1 x i8]* %93, i32 0, i32 0
  %95 = load %0*, %0** %5, align 8
  %96 = getelementptr inbounds %0, %0* %95, i32 0, i32 2
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %94, i64 %98, i1 false)
  %99 = load %0*, %0** %8, align 8
  store %0* %99, %0** %4, align 8
  store i32 1, i32* %9, align 4
  br label %100

100:                                              ; preds = %85, %70
  %101 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #13
  %102 = load %0*, %0** %4, align 8
  ret %0* %102
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #6

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @155(%0* %0, i64 %1, i32 %2) #5 {
  %4 = alloca %0*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %0*, align 8
  %9 = alloca i32, align 4
  store %0* %0, %0** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  br label %11

11:                                               ; preds = %3
  %12 = load i64, i64* %6, align 8
  %13 = load %0*, %0** %5, align 8
  %14 = getelementptr inbounds %0, %0* %13, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp ule i64 %12, %15
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 0)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  unreachable

23:                                               ; preds = %11
  br label %24

24:                                               ; preds = %23
  br label %25

25:                                               ; preds = %24
  %26 = load %0*, %0** %5, align 8
  %27 = getelementptr inbounds %0, %0* %26, i32 0, i32 0
  %28 = getelementptr inbounds %1, %1* %27, i32 0, i32 1
  %29 = bitcast %2* %28 to %52*
  %30 = getelementptr inbounds %52, %52* %29, i32 0, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = and i32 %32, 2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %85, label %35

35:                                               ; preds = %25
  %36 = load %0*, %0** %5, align 8
  %37 = getelementptr inbounds %0, %0* %36, i32 0, i32 0
  %38 = getelementptr inbounds %1, %1* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  %41 = xor i1 %40, true
  %42 = xor i1 %41, true
  %43 = zext i1 %42 to i32
  %44 = sext i32 %43 to i64
  %45 = call i64 @llvm.expect.i64(i64 %44, i64 1)
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %78

47:                                               ; preds = %35
  %48 = load i32, i32* %7, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = load %0*, %0** %5, align 8
  %52 = bitcast %0* %51 to i8*
  %53 = load i64, i64* %6, align 8
  %54 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %53
  %55 = add i64 %54, 1
  %56 = add i64 %55, 8
  %57 = sub i64 %56, 1
  %58 = and i64 %57, -8
  %59 = call i8* @__zend_realloc(i8* %52, i64 %58) #15
  br label %70

60:                                               ; preds = %47
  %61 = load %0*, %0** %5, align 8
  %62 = bitcast %0* %61 to i8*
  %63 = load i64, i64* %6, align 8
  %64 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %63
  %65 = add i64 %64, 1
  %66 = add i64 %65, 8
  %67 = sub i64 %66, 1
  %68 = and i64 %67, -8
  %69 = call i8* @_erealloc(i8* %62, i64 %68) #15
  br label %70

70:                                               ; preds = %60, %50
  %71 = phi i8* [ %59, %50 ], [ %69, %60 ]
  %72 = bitcast i8* %71 to %0*
  store %0* %72, %0** %8, align 8
  %73 = load i64, i64* %6, align 8
  %74 = load %0*, %0** %8, align 8
  %75 = getelementptr inbounds %0, %0* %74, i32 0, i32 2
  store i64 %73, i64* %75, align 8
  %76 = load %0*, %0** %8, align 8
  call void @168(%0* %76)
  %77 = load %0*, %0** %8, align 8
  store %0* %77, %0** %4, align 8
  store i32 1, i32* %9, align 4
  br label %98

78:                                               ; preds = %35
  %79 = load %0*, %0** %5, align 8
  %80 = getelementptr inbounds %0, %0* %79, i32 0, i32 0
  %81 = getelementptr inbounds %1, %1* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 8
  br label %84

84:                                               ; preds = %78
  br label %85

85:                                               ; preds = %84, %25
  %86 = load i64, i64* %6, align 8
  %87 = load i32, i32* %7, align 4
  %88 = call %0* @162(i64 %86, i32 %87)
  store %0* %88, %0** %8, align 8
  %89 = load %0*, %0** %8, align 8
  %90 = getelementptr inbounds %0, %0* %89, i32 0, i32 3
  %91 = getelementptr inbounds [1 x i8], [1 x i8]* %90, i32 0, i32 0
  %92 = load %0*, %0** %5, align 8
  %93 = getelementptr inbounds %0, %0* %92, i32 0, i32 3
  %94 = getelementptr inbounds [1 x i8], [1 x i8]* %93, i32 0, i32 0
  %95 = load i64, i64* %6, align 8
  %96 = add i64 %95, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %94, i64 %96, i1 false)
  %97 = load %0*, %0** %8, align 8
  store %0* %97, %0** %4, align 8
  store i32 1, i32* %9, align 4
  br label %98

98:                                               ; preds = %85, %70
  %99 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #13
  %100 = load %0*, %0** %4, align 8
  ret %0* %100
}

; Function Attrs: nounwind uwtable
define dso_local void @php_explode(%0* %0, %0* %1, %18* %2, i64 %3) #0 {
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca %18*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %18, align 8
  %13 = alloca %18*, align 8
  %14 = alloca %0*, align 8
  %15 = alloca i64, align 8
  %16 = alloca %18*, align 8
  %17 = alloca %0*, align 8
  %18 = alloca %18*, align 8
  %19 = alloca %0*, align 8
  %20 = alloca %18*, align 8
  %21 = alloca %0*, align 8
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  store %0* %0, %0** %5, align 8
  store %0* %1, %0** %6, align 8
  store %18* %2, %18** %7, align 8
  store i64 %3, i64* %8, align 8
  %24 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = load %0*, %0** %6, align 8
  %26 = getelementptr inbounds %0, %0* %25, i32 0, i32 3
  %27 = getelementptr inbounds [1 x i8], [1 x i8]* %26, i32 0, i32 0
  store i8* %27, i8** %9, align 8
  %28 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = load %0*, %0** %6, align 8
  %30 = getelementptr inbounds %0, %0* %29, i32 0, i32 3
  %31 = getelementptr inbounds [1 x i8], [1 x i8]* %30, i32 0, i32 0
  %32 = load %0*, %0** %6, align 8
  %33 = getelementptr inbounds %0, %0* %32, i32 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  store i8* %35, i8** %10, align 8
  %36 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = load %0*, %0** %6, align 8
  %38 = getelementptr inbounds %0, %0* %37, i32 0, i32 3
  %39 = getelementptr inbounds [1 x i8], [1 x i8]* %38, i32 0, i32 0
  %40 = load %0*, %0** %5, align 8
  %41 = getelementptr inbounds %0, %0* %40, i32 0, i32 3
  %42 = getelementptr inbounds [1 x i8], [1 x i8]* %41, i32 0, i32 0
  %43 = load %0*, %0** %5, align 8
  %44 = getelementptr inbounds %0, %0* %43, i32 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = load i8*, i8** %10, align 8
  %47 = call i8* @156(i8* %39, i8* %42, i64 %45, i8* %46)
  store i8* %47, i8** %11, align 8
  %48 = bitcast %18* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %48) #13
  %49 = load i8*, i8** %11, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %92

51:                                               ; preds = %4
  br label %52

52:                                               ; preds = %51
  %53 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #13
  store %18* %12, %18** %13, align 8
  %54 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #13
  %55 = load %0*, %0** %6, align 8
  store %0* %55, %0** %14, align 8
  %56 = load %0*, %0** %14, align 8
  %57 = load %18*, %18** %13, align 8
  %58 = getelementptr inbounds %18, %18* %57, i32 0, i32 0
  %59 = bitcast %19* %58 to %0**
  store %0* %56, %0** %59, align 8
  %60 = load %0*, %0** %14, align 8
  %61 = getelementptr inbounds %0, %0* %60, i32 0, i32 0
  %62 = getelementptr inbounds %1, %1* %61, i32 0, i32 1
  %63 = bitcast %2* %62 to %52*
  %64 = getelementptr inbounds %52, %52* %63, i32 0, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = and i32 %66, 2
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %52
  %70 = load %18*, %18** %13, align 8
  %71 = getelementptr inbounds %18, %18* %70, i32 0, i32 1
  %72 = bitcast %20* %71 to i32*
  store i32 6, i32* %72, align 8
  br label %82

73:                                               ; preds = %52
  %74 = load %0*, %0** %14, align 8
  %75 = getelementptr inbounds %0, %0* %74, i32 0, i32 0
  %76 = getelementptr inbounds %1, %1* %75, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = load %18*, %18** %13, align 8
  %80 = getelementptr inbounds %18, %18* %79, i32 0, i32 1
  %81 = bitcast %20* %80 to i32*
  store i32 5126, i32* %81, align 8
  br label %82

82:                                               ; preds = %73, %69
  %83 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #13
  %84 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #13
  br label %85

85:                                               ; preds = %82
  br label %86

86:                                               ; preds = %85
  %87 = load %18*, %18** %7, align 8
  %88 = getelementptr inbounds %18, %18* %87, i32 0, i32 0
  %89 = bitcast %19* %88 to %43**
  %90 = load %43*, %43** %89, align 8
  %91 = call %18* @_zend_hash_next_index_insert_new(%43* %90, %18* %12)
  br label %235

92:                                               ; preds = %4
  br label %93

93:                                               ; preds = %198, %92
  %94 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %94) #13
  %95 = load i8*, i8** %11, align 8
  %96 = load i8*, i8** %9, align 8
  %97 = ptrtoint i8* %95 to i64
  %98 = ptrtoint i8* %96 to i64
  %99 = sub i64 %97, %98
  store i64 %99, i64* %15, align 8
  %100 = load i64, i64* %15, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %121

102:                                              ; preds = %93
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  %105 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %105) #13
  store %18* %12, %18** %16, align 8
  %106 = bitcast %0** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %106) #13
  %107 = load %0*, %0** @zend_empty_string, align 8
  store %0* %107, %0** %17, align 8
  %108 = load %0*, %0** %17, align 8
  %109 = load %18*, %18** %16, align 8
  %110 = getelementptr inbounds %18, %18* %109, i32 0, i32 0
  %111 = bitcast %19* %110 to %0**
  store %0* %108, %0** %111, align 8
  %112 = load %18*, %18** %16, align 8
  %113 = getelementptr inbounds %18, %18* %112, i32 0, i32 1
  %114 = bitcast %20* %113 to i32*
  store i32 6, i32* %114, align 8
  %115 = bitcast %0** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #13
  %116 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #13
  br label %117

117:                                              ; preds = %104
  br label %118

118:                                              ; preds = %117
  br label %119

119:                                              ; preds = %118
  br label %120

120:                                              ; preds = %119
  br label %170

121:                                              ; preds = %93
  %122 = load i64, i64* %15, align 8
  %123 = icmp eq i64 %122, 1
  br i1 %123, label %124, label %144

124:                                              ; preds = %121
  br label %125

125:                                              ; preds = %124
  %126 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %126) #13
  store %18* %12, %18** %18, align 8
  %127 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127) #13
  %128 = load i8*, i8** %9, align 8
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i64
  %131 = getelementptr inbounds [256 x %0*], [256 x %0*]* @zend_one_char_string, i64 0, i64 %130
  %132 = load %0*, %0** %131, align 8
  store %0* %132, %0** %19, align 8
  %133 = load %0*, %0** %19, align 8
  %134 = load %18*, %18** %18, align 8
  %135 = getelementptr inbounds %18, %18* %134, i32 0, i32 0
  %136 = bitcast %19* %135 to %0**
  store %0* %133, %0** %136, align 8
  %137 = load %18*, %18** %18, align 8
  %138 = getelementptr inbounds %18, %18* %137, i32 0, i32 1
  %139 = bitcast %20* %138 to i32*
  store i32 6, i32* %139, align 8
  %140 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %140) #13
  %141 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #13
  br label %142

142:                                              ; preds = %125
  br label %143

143:                                              ; preds = %142
  br label %169

144:                                              ; preds = %121
  br label %145

145:                                              ; preds = %144
  br label %146

146:                                              ; preds = %145
  %147 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %147) #13
  store %18* %12, %18** %20, align 8
  %148 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %148) #13
  %149 = load i8*, i8** %9, align 8
  %150 = load i8*, i8** %11, align 8
  %151 = load i8*, i8** %9, align 8
  %152 = ptrtoint i8* %150 to i64
  %153 = ptrtoint i8* %151 to i64
  %154 = sub i64 %152, %153
  %155 = call %0* @148(i8* %149, i64 %154, i32 0)
  store %0* %155, %0** %21, align 8
  %156 = load %0*, %0** %21, align 8
  %157 = load %18*, %18** %20, align 8
  %158 = getelementptr inbounds %18, %18* %157, i32 0, i32 0
  %159 = bitcast %19* %158 to %0**
  store %0* %156, %0** %159, align 8
  %160 = load %18*, %18** %20, align 8
  %161 = getelementptr inbounds %18, %18* %160, i32 0, i32 1
  %162 = bitcast %20* %161 to i32*
  store i32 5126, i32* %162, align 8
  %163 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163) #13
  %164 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #13
  br label %165

165:                                              ; preds = %146
  br label %166

166:                                              ; preds = %165
  br label %167

167:                                              ; preds = %166
  br label %168

168:                                              ; preds = %167
  br label %169

169:                                              ; preds = %168, %143
  br label %170

170:                                              ; preds = %169, %120
  %171 = load %18*, %18** %7, align 8
  %172 = getelementptr inbounds %18, %18* %171, i32 0, i32 0
  %173 = bitcast %19* %172 to %43**
  %174 = load %43*, %43** %173, align 8
  %175 = call %18* @_zend_hash_next_index_insert_new(%43* %174, %18* %12)
  %176 = load i8*, i8** %11, align 8
  %177 = load %0*, %0** %5, align 8
  %178 = getelementptr inbounds %0, %0* %177, i32 0, i32 2
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds i8, i8* %176, i64 %179
  store i8* %180, i8** %9, align 8
  %181 = load i8*, i8** %9, align 8
  %182 = load %0*, %0** %5, align 8
  %183 = getelementptr inbounds %0, %0* %182, i32 0, i32 3
  %184 = getelementptr inbounds [1 x i8], [1 x i8]* %183, i32 0, i32 0
  %185 = load %0*, %0** %5, align 8
  %186 = getelementptr inbounds %0, %0* %185, i32 0, i32 2
  %187 = load i64, i64* %186, align 8
  %188 = load i8*, i8** %10, align 8
  %189 = call i8* @156(i8* %181, i8* %184, i64 %187, i8* %188)
  store i8* %189, i8** %11, align 8
  %190 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  br label %191

191:                                              ; preds = %170
  %192 = load i8*, i8** %11, align 8
  %193 = icmp ne i8* %192, null
  br i1 %193, label %194, label %198

194:                                              ; preds = %191
  %195 = load i64, i64* %8, align 8
  %196 = add nsw i64 %195, -1
  store i64 %196, i64* %8, align 8
  %197 = icmp sgt i64 %196, 1
  br label %198

198:                                              ; preds = %194, %191
  %199 = phi i1 [ false, %191 ], [ %197, %194 ]
  br i1 %199, label %93, label %200

200:                                              ; preds = %198
  %201 = load i8*, i8** %9, align 8
  %202 = load i8*, i8** %10, align 8
  %203 = icmp ule i8* %201, %202
  br i1 %203, label %204, label %234

204:                                              ; preds = %200
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  %207 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %207) #13
  store %18* %12, %18** %22, align 8
  %208 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %208) #13
  %209 = load i8*, i8** %9, align 8
  %210 = load i8*, i8** %10, align 8
  %211 = load i8*, i8** %9, align 8
  %212 = ptrtoint i8* %210 to i64
  %213 = ptrtoint i8* %211 to i64
  %214 = sub i64 %212, %213
  %215 = call %0* @148(i8* %209, i64 %214, i32 0)
  store %0* %215, %0** %23, align 8
  %216 = load %0*, %0** %23, align 8
  %217 = load %18*, %18** %22, align 8
  %218 = getelementptr inbounds %18, %18* %217, i32 0, i32 0
  %219 = bitcast %19* %218 to %0**
  store %0* %216, %0** %219, align 8
  %220 = load %18*, %18** %22, align 8
  %221 = getelementptr inbounds %18, %18* %220, i32 0, i32 1
  %222 = bitcast %20* %221 to i32*
  store i32 5126, i32* %222, align 8
  %223 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #13
  %224 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #13
  br label %225

225:                                              ; preds = %206
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226
  br label %228

228:                                              ; preds = %227
  %229 = load %18*, %18** %7, align 8
  %230 = getelementptr inbounds %18, %18* %229, i32 0, i32 0
  %231 = bitcast %19* %230 to %43**
  %232 = load %43*, %43** %231, align 8
  %233 = call %18* @_zend_hash_next_index_insert_new(%43* %232, %18* %12)
  br label %234

234:                                              ; preds = %228, %200
  br label %235

235:                                              ; preds = %234, %86
  %236 = bitcast %18* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %236) #13
  %237 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %237) #13
  %238 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #13
  %239 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %239) #13
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @156(i8* %0, i8* %1, i64 %2, i8* %3) #5 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  %15 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = load i8*, i8** %6, align 8
  store i8* %16, i8** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #13
  %17 = load i8*, i8** %7, align 8
  %18 = load i64, i64* %8, align 8
  %19 = sub i64 %18, 1
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i8, i8* %20, align 1
  store i8 %21, i8* %11, align 1
  %22 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load i64, i64* %8, align 8
  %25 = icmp eq i64 %24, 1
  br i1 %25, label %26, label %37

26:                                               ; preds = %4
  %27 = load i8*, i8** %10, align 8
  %28 = load i8*, i8** %7, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = load i8*, i8** %9, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = ptrtoint i8* %31 to i64
  %34 = ptrtoint i8* %32 to i64
  %35 = sub i64 %33, %34
  %36 = call i8* @memchr(i8* %27, i32 %30, i64 %35) #14
  store i8* %36, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

37:                                               ; preds = %4
  %38 = load i8*, i8** %9, align 8
  %39 = load i8*, i8** %6, align 8
  %40 = ptrtoint i8* %38 to i64
  %41 = ptrtoint i8* %39 to i64
  %42 = sub i64 %40, %41
  store i64 %42, i64* %12, align 8
  %43 = load i64, i64* %12, align 8
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load i64, i64* %12, align 8
  br label %48

47:                                               ; preds = %37
  br label %48

48:                                               ; preds = %47, %45
  %49 = phi i64 [ %46, %45 ], [ 0, %47 ]
  store i64 %49, i64* %13, align 8
  %50 = load i64, i64* %8, align 8
  %51 = load i64, i64* %13, align 8
  %52 = icmp ugt i64 %50, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  store i8* null, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

54:                                               ; preds = %48
  %55 = load i64, i64* %13, align 8
  %56 = icmp ult i64 %55, 1024
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i64, i64* %8, align 8
  %59 = icmp ult i64 %58, 9
  br label %60

60:                                               ; preds = %57, %54
  %61 = phi i1 [ true, %54 ], [ %59, %57 ]
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 1)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %118

68:                                               ; preds = %60
  %69 = load i64, i64* %8, align 8
  %70 = load i8*, i8** %9, align 8
  %71 = sub i64 0, %69
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  store i8* %72, i8** %9, align 8
  br label %73

73:                                               ; preds = %114, %68
  %74 = load i8*, i8** %10, align 8
  %75 = load i8*, i8** %9, align 8
  %76 = icmp ule i8* %74, %75
  br i1 %76, label %77, label %117

77:                                               ; preds = %73
  %78 = load i8*, i8** %10, align 8
  %79 = load i8*, i8** %7, align 8
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = load i8*, i8** %9, align 8
  %83 = load i8*, i8** %10, align 8
  %84 = ptrtoint i8* %82 to i64
  %85 = ptrtoint i8* %83 to i64
  %86 = sub i64 %84, %85
  %87 = add nsw i64 %86, 1
  %88 = call i8* @memchr(i8* %78, i32 %81, i64 %87) #14
  store i8* %88, i8** %10, align 8
  %89 = icmp ne i8* %88, null
  br i1 %89, label %90, label %110

90:                                               ; preds = %77
  %91 = load i8, i8* %11, align 1
  %92 = sext i8 %91 to i32
  %93 = load i8*, i8** %10, align 8
  %94 = load i64, i64* %8, align 8
  %95 = sub i64 %94, 1
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = sext i8 %97 to i32
  %99 = icmp eq i32 %92, %98
  br i1 %99, label %100, label %110

100:                                              ; preds = %90
  %101 = load i8*, i8** %7, align 8
  %102 = load i8*, i8** %10, align 8
  %103 = load i64, i64* %8, align 8
  %104 = sub i64 %103, 1
  %105 = call i32 @memcmp(i8* %101, i8* %102, i64 %104) #14
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %100
  %108 = load i8*, i8** %10, align 8
  store i8* %108, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

109:                                              ; preds = %100
  br label %110

110:                                              ; preds = %109, %90, %77
  %111 = load i8*, i8** %10, align 8
  %112 = icmp eq i8* %111, null
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  store i8* null, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

114:                                              ; preds = %110
  %115 = load i8*, i8** %10, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %10, align 8
  br label %73

117:                                              ; preds = %73
  store i8* null, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

118:                                              ; preds = %60
  %119 = load i8*, i8** %6, align 8
  %120 = load i8*, i8** %7, align 8
  %121 = load i64, i64* %8, align 8
  %122 = load i8*, i8** %9, align 8
  %123 = call i8* @zend_memnstr_ex(i8* %119, i8* %120, i64 %121, i8* %122)
  store i8* %123, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

124:                                              ; preds = %118, %117, %113, %107, %53, %26
  %125 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #13
  %126 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #13
  %127 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #13
  %128 = load i8*, i8** %5, align 8
  ret i8* %128
}

declare dso_local %18* @_zend_hash_next_index_insert_new(%43*, %18*) #1

; Function Attrs: nounwind uwtable
define dso_local void @php_explode_negative_limit(%0* %0, %0* %1, %18* %2, i64 %3) #0 {
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca %18*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %18, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8**, align 8
  %18 = alloca %18*, align 8
  %19 = alloca %0*, align 8
  store %0* %0, %0** %5, align 8
  store %0* %1, %0** %6, align 8
  store %18* %2, %18** %7, align 8
  store i64 %3, i64* %8, align 8
  %20 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = load %0*, %0** %6, align 8
  %22 = getelementptr inbounds %0, %0* %21, i32 0, i32 3
  %23 = getelementptr inbounds [1 x i8], [1 x i8]* %22, i32 0, i32 0
  store i8* %23, i8** %9, align 8
  %24 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = load %0*, %0** %6, align 8
  %26 = getelementptr inbounds %0, %0* %25, i32 0, i32 3
  %27 = getelementptr inbounds [1 x i8], [1 x i8]* %26, i32 0, i32 0
  %28 = load %0*, %0** %6, align 8
  %29 = getelementptr inbounds %0, %0* %28, i32 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %27, i64 %30
  store i8* %31, i8** %10, align 8
  %32 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = load %0*, %0** %6, align 8
  %34 = getelementptr inbounds %0, %0* %33, i32 0, i32 3
  %35 = getelementptr inbounds [1 x i8], [1 x i8]* %34, i32 0, i32 0
  %36 = load %0*, %0** %5, align 8
  %37 = getelementptr inbounds %0, %0* %36, i32 0, i32 3
  %38 = getelementptr inbounds [1 x i8], [1 x i8]* %37, i32 0, i32 0
  %39 = load %0*, %0** %5, align 8
  %40 = getelementptr inbounds %0, %0* %39, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = load i8*, i8** %10, align 8
  %43 = call i8* @156(i8* %35, i8* %38, i64 %41, i8* %42)
  store i8* %43, i8** %11, align 8
  %44 = bitcast %18* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %44) #13
  %45 = load i8*, i8** %11, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %4
  br label %162

48:                                               ; preds = %4
  %49 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  store i64 64, i64* %13, align 8
  %50 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store i64 0, i64* %14, align 8
  %51 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  %52 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  %53 = bitcast i8*** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #13
  %54 = load i64, i64* %13, align 8
  %55 = mul i64 %54, 8
  %56 = call noalias i8* @_emalloc(i64 %55) #16
  %57 = bitcast i8* %56 to i8**
  store i8** %57, i8*** %17, align 8
  %58 = load i8*, i8** %9, align 8
  %59 = load i8**, i8*** %17, align 8
  %60 = load i64, i64* %14, align 8
  %61 = add i64 %60, 1
  store i64 %61, i64* %14, align 8
  %62 = getelementptr inbounds i8*, i8** %59, i64 %60
  store i8* %58, i8** %62, align 8
  br label %63

63:                                               ; preds = %95, %48
  %64 = load i64, i64* %14, align 8
  %65 = load i64, i64* %13, align 8
  %66 = icmp uge i64 %64, %65
  br i1 %66, label %67, label %76

67:                                               ; preds = %63
  %68 = load i64, i64* %14, align 8
  %69 = add i64 %68, 64
  store i64 %69, i64* %13, align 8
  %70 = load i8**, i8*** %17, align 8
  %71 = bitcast i8** %70 to i8*
  %72 = load i64, i64* %13, align 8
  %73 = mul i64 %72, 8
  %74 = call i8* @_erealloc(i8* %71, i64 %73) #15
  %75 = bitcast i8* %74 to i8**
  store i8** %75, i8*** %17, align 8
  br label %76

76:                                               ; preds = %67, %63
  %77 = load i8*, i8** %11, align 8
  %78 = load %0*, %0** %5, align 8
  %79 = getelementptr inbounds %0, %0* %78, i32 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds i8, i8* %77, i64 %80
  store i8* %81, i8** %9, align 8
  %82 = load i8**, i8*** %17, align 8
  %83 = load i64, i64* %14, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %14, align 8
  %85 = getelementptr inbounds i8*, i8** %82, i64 %83
  store i8* %81, i8** %85, align 8
  %86 = load i8*, i8** %9, align 8
  %87 = load %0*, %0** %5, align 8
  %88 = getelementptr inbounds %0, %0* %87, i32 0, i32 3
  %89 = getelementptr inbounds [1 x i8], [1 x i8]* %88, i32 0, i32 0
  %90 = load %0*, %0** %5, align 8
  %91 = getelementptr inbounds %0, %0* %90, i32 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = load i8*, i8** %10, align 8
  %94 = call i8* @156(i8* %86, i8* %89, i64 %92, i8* %93)
  store i8* %94, i8** %11, align 8
  br label %95

95:                                               ; preds = %76
  %96 = load i8*, i8** %11, align 8
  %97 = icmp ne i8* %96, null
  br i1 %97, label %63, label %98

98:                                               ; preds = %95
  %99 = load i64, i64* %8, align 8
  %100 = load i64, i64* %14, align 8
  %101 = add i64 %99, %100
  store i64 %101, i64* %16, align 8
  store i64 0, i64* %15, align 8
  br label %102

102:                                              ; preds = %151, %98
  %103 = load i64, i64* %15, align 8
  %104 = load i64, i64* %16, align 8
  %105 = icmp slt i64 %103, %104
  br i1 %105, label %106, label %154

106:                                              ; preds = %102
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  %109 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #13
  store %18* %12, %18** %18, align 8
  %110 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %110) #13
  %111 = load i8**, i8*** %17, align 8
  %112 = load i64, i64* %15, align 8
  %113 = getelementptr inbounds i8*, i8** %111, i64 %112
  %114 = load i8*, i8** %113, align 8
  %115 = load i8**, i8*** %17, align 8
  %116 = load i64, i64* %15, align 8
  %117 = add nsw i64 %116, 1
  %118 = getelementptr inbounds i8*, i8** %115, i64 %117
  %119 = load i8*, i8** %118, align 8
  %120 = load %0*, %0** %5, align 8
  %121 = getelementptr inbounds %0, %0* %120, i32 0, i32 2
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 0, %122
  %124 = getelementptr inbounds i8, i8* %119, i64 %123
  %125 = load i8**, i8*** %17, align 8
  %126 = load i64, i64* %15, align 8
  %127 = getelementptr inbounds i8*, i8** %125, i64 %126
  %128 = load i8*, i8** %127, align 8
  %129 = ptrtoint i8* %124 to i64
  %130 = ptrtoint i8* %128 to i64
  %131 = sub i64 %129, %130
  %132 = call %0* @148(i8* %114, i64 %131, i32 0)
  store %0* %132, %0** %19, align 8
  %133 = load %0*, %0** %19, align 8
  %134 = load %18*, %18** %18, align 8
  %135 = getelementptr inbounds %18, %18* %134, i32 0, i32 0
  %136 = bitcast %19* %135 to %0**
  store %0* %133, %0** %136, align 8
  %137 = load %18*, %18** %18, align 8
  %138 = getelementptr inbounds %18, %18* %137, i32 0, i32 1
  %139 = bitcast %20* %138 to i32*
  store i32 5126, i32* %139, align 8
  %140 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %140) #13
  %141 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #13
  br label %142

142:                                              ; preds = %108
  br label %143

143:                                              ; preds = %142
  br label %144

144:                                              ; preds = %143
  br label %145

145:                                              ; preds = %144
  %146 = load %18*, %18** %7, align 8
  %147 = getelementptr inbounds %18, %18* %146, i32 0, i32 0
  %148 = bitcast %19* %147 to %43**
  %149 = load %43*, %43** %148, align 8
  %150 = call %18* @_zend_hash_next_index_insert_new(%43* %149, %18* %12)
  br label %151

151:                                              ; preds = %145
  %152 = load i64, i64* %15, align 8
  %153 = add nsw i64 %152, 1
  store i64 %153, i64* %15, align 8
  br label %102

154:                                              ; preds = %102
  %155 = load i8**, i8*** %17, align 8
  %156 = bitcast i8** %155 to i8*
  call void @_efree(i8* %156)
  %157 = bitcast i8*** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #13
  %158 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %158) #13
  %159 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %159) #13
  %160 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %160) #13
  %161 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161) #13
  br label %162

162:                                              ; preds = %154, %47
  %163 = bitcast %18* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %163) #13
  %164 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #13
  %165 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #13
  %166 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #13
  ret void
}

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @_emalloc(i64) #7

; Function Attrs: allocsize(1)
declare dso_local i8* @_erealloc(i8*, i64) #8

declare dso_local void @_efree(i8*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_explode(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %18, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  %24 = alloca %18*, align 8
  %25 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %26 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  store i64 9223372036854775807, i64* %7, align 8
  %29 = bitcast %18* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %29) #13
  br label %30

30:                                               ; preds = %2
  %31 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 0, i32* %9, align 4
  %32 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 2, i32* %10, align 4
  %33 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  store i32 3, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = load %14*, %14** %3, align 8
  %36 = getelementptr inbounds %14, %14* %35, i32 0, i32 4
  %37 = getelementptr inbounds %18, %18* %36, i32 0, i32 2
  %38 = bitcast %21* %37 to i32*
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %12, align 4
  %40 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  %41 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  store %18* null, %18** %15, align 8
  %43 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %16, align 4
  %44 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %45 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #13
  store i32 0, i32* %20, align 4
  %46 = load i32, i32* %13, align 4
  %47 = load %18*, %18** %14, align 8
  %48 = load %18*, %18** %15, align 8
  %49 = load i32, i32* %16, align 4
  %50 = load i8*, i8** %17, align 8
  %51 = load i8, i8* %18, align 1
  %52 = load i8, i8* %19, align 1
  br label %53

53:                                               ; preds = %30
  %54 = load i32, i32* %12, align 4
  %55 = load i32, i32* %10, align 4
  %56 = icmp slt i32 %54, %55
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 0)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %82, label %63

63:                                               ; preds = %53
  %64 = load i32, i32* %12, align 4
  %65 = load i32, i32* %11, align 4
  %66 = icmp sgt i32 %64, %65
  %67 = xor i1 %66, true
  %68 = xor i1 %67, true
  %69 = zext i1 %68 to i32
  %70 = sext i32 %69 to i64
  %71 = call i64 @llvm.expect.i64(i64 %70, i64 0)
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %86

73:                                               ; preds = %63
  %74 = load i32, i32* %11, align 4
  %75 = icmp sge i32 %74, 0
  %76 = xor i1 %75, true
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = call i64 @llvm.expect.i64(i64 %79, i64 1)
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %73, %53
  %83 = load i32, i32* %12, align 4
  %84 = load i32, i32* %10, align 4
  %85 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %83, i32 %84, i32 %85)
  store i32 1, i32* %20, align 4
  br label %301

86:                                               ; preds = %73, %63
  store i32 0, i32* %13, align 4
  %87 = load %14*, %14** %3, align 8
  %88 = bitcast %14* %87 to %18*
  %89 = getelementptr inbounds %18, %18* %88, i64 4
  store %18* %89, %18** %14, align 8
  %90 = load i32, i32* %13, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %13, align 4
  br label %92

92:                                               ; preds = %86
  %93 = load i32, i32* %13, align 4
  %94 = load i32, i32* %10, align 4
  %95 = icmp sle i32 %93, %94
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = load i8, i8* %19, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %98, 1
  br label %100

100:                                              ; preds = %96, %92
  %101 = phi i1 [ true, %92 ], [ %99, %96 ]
  %102 = xor i1 %101, true
  %103 = zext i1 %102 to i32
  %104 = sext i32 %103 to i64
  %105 = call i64 @llvm.expect.i64(i64 %104, i64 0)
  %106 = icmp ne i64 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %100
  unreachable

108:                                              ; preds = %100
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %13, align 4
  %113 = load i32, i32* %10, align 4
  %114 = icmp sgt i32 %112, %113
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = load i8, i8* %19, align 1
  %117 = zext i8 %116 to i32
  %118 = icmp eq i32 %117, 0
  br label %119

119:                                              ; preds = %115, %111
  %120 = phi i1 [ true, %111 ], [ %118, %115 ]
  %121 = xor i1 %120, true
  %122 = zext i1 %121 to i32
  %123 = sext i32 %122 to i64
  %124 = call i64 @llvm.expect.i64(i64 %123, i64 0)
  %125 = icmp ne i64 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %119
  unreachable

127:                                              ; preds = %119
  br label %128

128:                                              ; preds = %127
  br label %129

129:                                              ; preds = %128
  %130 = load i8, i8* %19, align 1
  %131 = icmp ne i8 %130, 0
  br i1 %131, label %132, label %144

132:                                              ; preds = %129
  %133 = load i32, i32* %13, align 4
  %134 = load i32, i32* %12, align 4
  %135 = icmp sgt i32 %133, %134
  %136 = xor i1 %135, true
  %137 = xor i1 %136, true
  %138 = zext i1 %137 to i32
  %139 = sext i32 %138 to i64
  %140 = call i64 @llvm.expect.i64(i64 %139, i64 0)
  %141 = icmp ne i64 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %132
  br label %301

143:                                              ; preds = %132
  br label %144

144:                                              ; preds = %143, %129
  %145 = load %18*, %18** %14, align 8
  %146 = getelementptr inbounds %18, %18* %145, i32 1
  store %18* %146, %18** %14, align 8
  %147 = load %18*, %18** %14, align 8
  store %18* %147, %18** %15, align 8
  %148 = load %18*, %18** %15, align 8
  %149 = call i32 @143(%18* %148, %0** %6, i32 0)
  %150 = icmp ne i32 %149, 0
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = xor i1 %152, true
  %154 = zext i1 %153 to i32
  %155 = sext i32 %154 to i64
  %156 = call i64 @llvm.expect.i64(i64 %155, i64 0)
  %157 = icmp ne i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %144
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %301

159:                                              ; preds = %144
  %160 = load i32, i32* %13, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %13, align 4
  br label %162

162:                                              ; preds = %159
  %163 = load i32, i32* %13, align 4
  %164 = load i32, i32* %10, align 4
  %165 = icmp sle i32 %163, %164
  br i1 %165, label %170, label %166

166:                                              ; preds = %162
  %167 = load i8, i8* %19, align 1
  %168 = zext i8 %167 to i32
  %169 = icmp eq i32 %168, 1
  br label %170

170:                                              ; preds = %166, %162
  %171 = phi i1 [ true, %162 ], [ %169, %166 ]
  %172 = xor i1 %171, true
  %173 = zext i1 %172 to i32
  %174 = sext i32 %173 to i64
  %175 = call i64 @llvm.expect.i64(i64 %174, i64 0)
  %176 = icmp ne i64 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %170
  unreachable

178:                                              ; preds = %170
  br label %179

179:                                              ; preds = %178
  br label %180

180:                                              ; preds = %179
  br label %181

181:                                              ; preds = %180
  %182 = load i32, i32* %13, align 4
  %183 = load i32, i32* %10, align 4
  %184 = icmp sgt i32 %182, %183
  br i1 %184, label %189, label %185

185:                                              ; preds = %181
  %186 = load i8, i8* %19, align 1
  %187 = zext i8 %186 to i32
  %188 = icmp eq i32 %187, 0
  br label %189

189:                                              ; preds = %185, %181
  %190 = phi i1 [ true, %181 ], [ %188, %185 ]
  %191 = xor i1 %190, true
  %192 = zext i1 %191 to i32
  %193 = sext i32 %192 to i64
  %194 = call i64 @llvm.expect.i64(i64 %193, i64 0)
  %195 = icmp ne i64 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %189
  unreachable

197:                                              ; preds = %189
  br label %198

198:                                              ; preds = %197
  br label %199

199:                                              ; preds = %198
  %200 = load i8, i8* %19, align 1
  %201 = icmp ne i8 %200, 0
  br i1 %201, label %202, label %214

202:                                              ; preds = %199
  %203 = load i32, i32* %13, align 4
  %204 = load i32, i32* %12, align 4
  %205 = icmp sgt i32 %203, %204
  %206 = xor i1 %205, true
  %207 = xor i1 %206, true
  %208 = zext i1 %207 to i32
  %209 = sext i32 %208 to i64
  %210 = call i64 @llvm.expect.i64(i64 %209, i64 0)
  %211 = icmp ne i64 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %202
  br label %301

213:                                              ; preds = %202
  br label %214

214:                                              ; preds = %213, %199
  %215 = load %18*, %18** %14, align 8
  %216 = getelementptr inbounds %18, %18* %215, i32 1
  store %18* %216, %18** %14, align 8
  %217 = load %18*, %18** %14, align 8
  store %18* %217, %18** %15, align 8
  %218 = load %18*, %18** %15, align 8
  %219 = call i32 @143(%18* %218, %0** %5, i32 0)
  %220 = icmp ne i32 %219, 0
  %221 = xor i1 %220, true
  %222 = xor i1 %221, true
  %223 = xor i1 %222, true
  %224 = zext i1 %223 to i32
  %225 = sext i32 %224 to i64
  %226 = call i64 @llvm.expect.i64(i64 %225, i64 0)
  %227 = icmp ne i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %214
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %301

229:                                              ; preds = %214
  store i8 1, i8* %19, align 1
  %230 = load i32, i32* %13, align 4
  %231 = add nsw i32 %230, 1
  store i32 %231, i32* %13, align 4
  br label %232

232:                                              ; preds = %229
  %233 = load i32, i32* %13, align 4
  %234 = load i32, i32* %10, align 4
  %235 = icmp sle i32 %233, %234
  br i1 %235, label %240, label %236

236:                                              ; preds = %232
  %237 = load i8, i8* %19, align 1
  %238 = zext i8 %237 to i32
  %239 = icmp eq i32 %238, 1
  br label %240

240:                                              ; preds = %236, %232
  %241 = phi i1 [ true, %232 ], [ %239, %236 ]
  %242 = xor i1 %241, true
  %243 = zext i1 %242 to i32
  %244 = sext i32 %243 to i64
  %245 = call i64 @llvm.expect.i64(i64 %244, i64 0)
  %246 = icmp ne i64 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %240
  unreachable

248:                                              ; preds = %240
  br label %249

249:                                              ; preds = %248
  br label %250

250:                                              ; preds = %249
  br label %251

251:                                              ; preds = %250
  %252 = load i32, i32* %13, align 4
  %253 = load i32, i32* %10, align 4
  %254 = icmp sgt i32 %252, %253
  br i1 %254, label %259, label %255

255:                                              ; preds = %251
  %256 = load i8, i8* %19, align 1
  %257 = zext i8 %256 to i32
  %258 = icmp eq i32 %257, 0
  br label %259

259:                                              ; preds = %255, %251
  %260 = phi i1 [ true, %251 ], [ %258, %255 ]
  %261 = xor i1 %260, true
  %262 = zext i1 %261 to i32
  %263 = sext i32 %262 to i64
  %264 = call i64 @llvm.expect.i64(i64 %263, i64 0)
  %265 = icmp ne i64 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %259
  unreachable

267:                                              ; preds = %259
  br label %268

268:                                              ; preds = %267
  br label %269

269:                                              ; preds = %268
  %270 = load i8, i8* %19, align 1
  %271 = icmp ne i8 %270, 0
  br i1 %271, label %272, label %284

272:                                              ; preds = %269
  %273 = load i32, i32* %13, align 4
  %274 = load i32, i32* %12, align 4
  %275 = icmp sgt i32 %273, %274
  %276 = xor i1 %275, true
  %277 = xor i1 %276, true
  %278 = zext i1 %277 to i32
  %279 = sext i32 %278 to i64
  %280 = call i64 @llvm.expect.i64(i64 %279, i64 0)
  %281 = icmp ne i64 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %272
  br label %301

283:                                              ; preds = %272
  br label %284

284:                                              ; preds = %283, %269
  %285 = load %18*, %18** %14, align 8
  %286 = getelementptr inbounds %18, %18* %285, i32 1
  store %18* %286, %18** %14, align 8
  %287 = load %18*, %18** %14, align 8
  store %18* %287, %18** %15, align 8
  %288 = load %18*, %18** %15, align 8
  %289 = call i32 @147(%18* %288, i64* %7, i8* %18, i32 0, i32 0)
  %290 = icmp ne i32 %289, 0
  %291 = xor i1 %290, true
  %292 = xor i1 %291, true
  %293 = xor i1 %292, true
  %294 = zext i1 %293 to i32
  %295 = sext i32 %294 to i64
  %296 = call i64 @llvm.expect.i64(i64 %295, i64 0)
  %297 = icmp ne i64 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %284
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %301

299:                                              ; preds = %284
  br label %300

300:                                              ; preds = %299
  br label %301

301:                                              ; preds = %300, %298, %282, %228, %212, %158, %142, %82
  %302 = load i32, i32* %20, align 4
  %303 = icmp ne i32 %302, 0
  %304 = xor i1 %303, true
  %305 = xor i1 %304, true
  %306 = zext i1 %305 to i32
  %307 = sext i32 %306 to i64
  %308 = call i64 @llvm.expect.i64(i64 %307, i64 0)
  %309 = icmp ne i64 %308, 0
  br i1 %309, label %310, label %333

310:                                              ; preds = %301
  %311 = load i32, i32* %20, align 4
  %312 = icmp eq i32 %311, 2
  br i1 %312, label %313, label %316

313:                                              ; preds = %310
  %314 = load i32, i32* %13, align 4
  %315 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %314, i8* %315)
  br label %332

316:                                              ; preds = %310
  %317 = load i32, i32* %20, align 4
  %318 = icmp eq i32 %317, 3
  br i1 %318, label %319, label %323

319:                                              ; preds = %316
  %320 = load i32, i32* %13, align 4
  %321 = load i8*, i8** %17, align 8
  %322 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %320, i8* %321, %18* %322)
  br label %331

323:                                              ; preds = %316
  %324 = load i32, i32* %20, align 4
  %325 = icmp eq i32 %324, 4
  br i1 %325, label %326, label %330

326:                                              ; preds = %323
  %327 = load i32, i32* %13, align 4
  %328 = load i32, i32* %16, align 4
  %329 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %327, i32 %328, %18* %329)
  br label %330

330:                                              ; preds = %326, %323
  br label %331

331:                                              ; preds = %330, %319
  br label %332

332:                                              ; preds = %331, %313
  store i32 1, i32* %21, align 4
  br label %334

333:                                              ; preds = %301
  store i32 0, i32* %21, align 4
  br label %334

334:                                              ; preds = %333, %332
  %335 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %335) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %336 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %336) #13
  %337 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %337) #13
  %338 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %338) #13
  %339 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %339) #13
  %340 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %340) #13
  %341 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %341) #13
  %342 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %342) #13
  %343 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %343) #13
  %344 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #13
  %345 = load i32, i32* %21, align 4
  switch i32 %345, label %454 [
    i32 0, label %346
  ]

346:                                              ; preds = %334
  br label %347

347:                                              ; preds = %346
  br label %348

348:                                              ; preds = %347
  %349 = load %0*, %0** %6, align 8
  %350 = getelementptr inbounds %0, %0* %349, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %360

353:                                              ; preds = %348
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @76, i32 0, i32 0))
  br label %354

354:                                              ; preds = %353
  %355 = load %18*, %18** %4, align 8
  %356 = getelementptr inbounds %18, %18* %355, i32 0, i32 1
  %357 = bitcast %20* %356 to i32*
  store i32 2, i32* %357, align 8
  br label %358

358:                                              ; preds = %354
  br label %359

359:                                              ; preds = %358
  store i32 1, i32* %21, align 4
  br label %454

360:                                              ; preds = %348
  %361 = load %18*, %18** %4, align 8
  %362 = call i32 @_array_init(%18* %361, i32 0)
  %363 = load %0*, %0** %5, align 8
  %364 = getelementptr inbounds %0, %0* %363, i32 0, i32 2
  %365 = load i64, i64* %364, align 8
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %367, label %395

367:                                              ; preds = %360
  %368 = load i64, i64* %7, align 8
  %369 = icmp sge i64 %368, 0
  br i1 %369, label %370, label %394

370:                                              ; preds = %367
  br label %371

371:                                              ; preds = %370
  br label %372

372:                                              ; preds = %371
  %373 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %373) #13
  store %18* %8, %18** %22, align 8
  %374 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %374) #13
  %375 = load %0*, %0** @zend_empty_string, align 8
  store %0* %375, %0** %23, align 8
  %376 = load %0*, %0** %23, align 8
  %377 = load %18*, %18** %22, align 8
  %378 = getelementptr inbounds %18, %18* %377, i32 0, i32 0
  %379 = bitcast %19* %378 to %0**
  store %0* %376, %0** %379, align 8
  %380 = load %18*, %18** %22, align 8
  %381 = getelementptr inbounds %18, %18* %380, i32 0, i32 1
  %382 = bitcast %20* %381 to i32*
  store i32 6, i32* %382, align 8
  %383 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %383) #13
  %384 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %384) #13
  br label %385

385:                                              ; preds = %372
  br label %386

386:                                              ; preds = %385
  br label %387

387:                                              ; preds = %386
  br label %388

388:                                              ; preds = %387
  %389 = load %18*, %18** %4, align 8
  %390 = getelementptr inbounds %18, %18* %389, i32 0, i32 0
  %391 = bitcast %19* %390 to %43**
  %392 = load %43*, %43** %391, align 8
  %393 = call %18* @_zend_hash_index_add_new(%43* %392, i64 0, %18* %8)
  br label %394

394:                                              ; preds = %388, %367
  store i32 1, i32* %21, align 4
  br label %454

395:                                              ; preds = %360
  %396 = load i64, i64* %7, align 8
  %397 = icmp sgt i64 %396, 1
  br i1 %397, label %398, label %403

398:                                              ; preds = %395
  %399 = load %0*, %0** %6, align 8
  %400 = load %0*, %0** %5, align 8
  %401 = load %18*, %18** %4, align 8
  %402 = load i64, i64* %7, align 8
  call void @php_explode(%0* %399, %0* %400, %18* %401, i64 %402)
  br label %453

403:                                              ; preds = %395
  %404 = load i64, i64* %7, align 8
  %405 = icmp slt i64 %404, 0
  br i1 %405, label %406, label %411

406:                                              ; preds = %403
  %407 = load %0*, %0** %6, align 8
  %408 = load %0*, %0** %5, align 8
  %409 = load %18*, %18** %4, align 8
  %410 = load i64, i64* %7, align 8
  call void @php_explode_negative_limit(%0* %407, %0* %408, %18* %409, i64 %410)
  br label %452

411:                                              ; preds = %403
  br label %412

412:                                              ; preds = %411
  %413 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %413) #13
  store %18* %8, %18** %24, align 8
  %414 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %414) #13
  %415 = load %0*, %0** %5, align 8
  store %0* %415, %0** %25, align 8
  %416 = load %0*, %0** %25, align 8
  %417 = load %18*, %18** %24, align 8
  %418 = getelementptr inbounds %18, %18* %417, i32 0, i32 0
  %419 = bitcast %19* %418 to %0**
  store %0* %416, %0** %419, align 8
  %420 = load %0*, %0** %25, align 8
  %421 = getelementptr inbounds %0, %0* %420, i32 0, i32 0
  %422 = getelementptr inbounds %1, %1* %421, i32 0, i32 1
  %423 = bitcast %2* %422 to %52*
  %424 = getelementptr inbounds %52, %52* %423, i32 0, i32 1
  %425 = load i8, i8* %424, align 1
  %426 = zext i8 %425 to i32
  %427 = and i32 %426, 2
  %428 = icmp ne i32 %427, 0
  br i1 %428, label %429, label %433

429:                                              ; preds = %412
  %430 = load %18*, %18** %24, align 8
  %431 = getelementptr inbounds %18, %18* %430, i32 0, i32 1
  %432 = bitcast %20* %431 to i32*
  store i32 6, i32* %432, align 8
  br label %442

433:                                              ; preds = %412
  %434 = load %0*, %0** %25, align 8
  %435 = getelementptr inbounds %0, %0* %434, i32 0, i32 0
  %436 = getelementptr inbounds %1, %1* %435, i32 0, i32 0
  %437 = load i32, i32* %436, align 8
  %438 = add i32 %437, 1
  store i32 %438, i32* %436, align 8
  %439 = load %18*, %18** %24, align 8
  %440 = getelementptr inbounds %18, %18* %439, i32 0, i32 1
  %441 = bitcast %20* %440 to i32*
  store i32 5126, i32* %441, align 8
  br label %442

442:                                              ; preds = %433, %429
  %443 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %443) #13
  %444 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %444) #13
  br label %445

445:                                              ; preds = %442
  br label %446

446:                                              ; preds = %445
  %447 = load %18*, %18** %4, align 8
  %448 = getelementptr inbounds %18, %18* %447, i32 0, i32 0
  %449 = bitcast %19* %448 to %43**
  %450 = load %43*, %43** %449, align 8
  %451 = call %18* @_zend_hash_index_add_new(%43* %450, i64 0, %18* %8)
  br label %452

452:                                              ; preds = %446, %406
  br label %453

453:                                              ; preds = %452, %398
  store i32 0, i32* %21, align 4
  br label %454

454:                                              ; preds = %453, %394, %359, %334
  %455 = bitcast %18* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %455) #13
  %456 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %456) #13
  %457 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %457) #13
  %458 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %458) #13
  %459 = load i32, i32* %21, align 4
  switch i32 %459, label %461 [
    i32 0, label %460
    i32 1, label %460
  ]

460:                                              ; preds = %454, %454
  ret void

461:                                              ; preds = %454
  unreachable
}

declare dso_local i32 @_array_init(%18*, i32) #1

declare dso_local %18* @_zend_hash_index_add_new(%43*, i64, %18*) #1

; Function Attrs: nounwind uwtable
define dso_local void @php_implode(%0* %0, %18* %1, %18* %2) #0 {
  %4 = alloca %0*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %18*, align 8
  %7 = alloca %18*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %0*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %0**, align 8
  %13 = alloca %0**, align 8
  %14 = alloca %18*, align 8
  %15 = alloca %0*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %43*, align 8
  %18 = alloca %45*, align 8
  %19 = alloca %45*, align 8
  %20 = alloca %18*, align 8
  %21 = alloca %18*, align 8
  %22 = alloca %0*, align 8
  %23 = alloca %43*, align 8
  %24 = alloca %45*, align 8
  %25 = alloca %45*, align 8
  %26 = alloca %18*, align 8
  %27 = alloca i64, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8, align 1
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8, align 1
  %33 = alloca %18*, align 8
  %34 = alloca %0*, align 8
  store %0* %0, %0** %4, align 8
  store %18* %1, %18** %5, align 8
  store %18* %2, %18** %6, align 8
  %35 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  %37 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  %38 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  %39 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  store i64 0, i64* %11, align 8
  %40 = bitcast %0*** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = bitcast %0*** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = load %18*, %18** %5, align 8
  %43 = getelementptr inbounds %18, %18* %42, i32 0, i32 0
  %44 = bitcast %19* %43 to %43**
  %45 = load %43*, %43** %44, align 8
  %46 = getelementptr inbounds %43, %43* %45, i32 0, i32 5
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %8, align 4
  %48 = load i32, i32* %8, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %70

50:                                               ; preds = %3
  br label %51

51:                                               ; preds = %50
  br label %52

52:                                               ; preds = %51
  %53 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #13
  %54 = load %18*, %18** %6, align 8
  store %18* %54, %18** %14, align 8
  %55 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #13
  %56 = load %0*, %0** @zend_empty_string, align 8
  store %0* %56, %0** %15, align 8
  %57 = load %0*, %0** %15, align 8
  %58 = load %18*, %18** %14, align 8
  %59 = getelementptr inbounds %18, %18* %58, i32 0, i32 0
  %60 = bitcast %19* %59 to %0**
  store %0* %57, %0** %60, align 8
  %61 = load %18*, %18** %14, align 8
  %62 = getelementptr inbounds %18, %18* %61, i32 0, i32 1
  %63 = bitcast %20* %62 to i32*
  store i32 6, i32* %63, align 8
  %64 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #13
  %65 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #13
  br label %66

66:                                               ; preds = %52
  br label %67

67:                                               ; preds = %66
  br label %68

68:                                               ; preds = %67
  br label %69

69:                                               ; preds = %68
  store i32 1, i32* %16, align 4
  br label %415

70:                                               ; preds = %3
  %71 = load i32, i32* %8, align 4
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %155

73:                                               ; preds = %70
  br label %74

74:                                               ; preds = %73
  %75 = bitcast %43** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #13
  %76 = load %18*, %18** %5, align 8
  %77 = getelementptr inbounds %18, %18* %76, i32 0, i32 0
  %78 = bitcast %19* %77 to %43**
  %79 = load %43*, %43** %78, align 8
  store %43* %79, %43** %17, align 8
  %80 = bitcast %45** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #13
  %81 = load %43*, %43** %17, align 8
  %82 = getelementptr inbounds %43, %43* %81, i32 0, i32 3
  %83 = load %45*, %45** %82, align 8
  store %45* %83, %45** %18, align 8
  %84 = bitcast %45** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %84) #13
  %85 = load %45*, %45** %18, align 8
  %86 = load %43*, %43** %17, align 8
  %87 = getelementptr inbounds %43, %43* %86, i32 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %45, %45* %85, i64 %89
  store %45* %90, %45** %19, align 8
  br label %91

91:                                               ; preds = %143, %74
  %92 = load %45*, %45** %18, align 8
  %93 = load %45*, %45** %19, align 8
  %94 = icmp ne %45* %92, %93
  br i1 %94, label %95, label %146

95:                                               ; preds = %91
  %96 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %96) #13
  %97 = load %45*, %45** %18, align 8
  %98 = getelementptr inbounds %45, %45* %97, i32 0, i32 0
  store %18* %98, %18** %20, align 8
  %99 = load %18*, %18** %20, align 8
  %100 = call zeroext i8 @157(%18* %99)
  %101 = zext i8 %100 to i32
  %102 = icmp eq i32 %101, 0
  %103 = xor i1 %102, true
  %104 = xor i1 %103, true
  %105 = zext i1 %104 to i32
  %106 = sext i32 %105 to i64
  %107 = call i64 @llvm.expect.i64(i64 %106, i64 0)
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %95
  store i32 10, i32* %16, align 4
  br label %140

110:                                              ; preds = %95
  %111 = load %18*, %18** %20, align 8
  store %18* %111, %18** %7, align 8
  br label %112

112:                                              ; preds = %110
  %113 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %113) #13
  %114 = load %18*, %18** %6, align 8
  store %18* %114, %18** %21, align 8
  %115 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %115) #13
  %116 = load %18*, %18** %7, align 8
  %117 = call %0* @158(%18* %116)
  store %0* %117, %0** %22, align 8
  %118 = load %0*, %0** %22, align 8
  %119 = load %18*, %18** %21, align 8
  %120 = getelementptr inbounds %18, %18* %119, i32 0, i32 0
  %121 = bitcast %19* %120 to %0**
  store %0* %118, %0** %121, align 8
  %122 = load %0*, %0** %22, align 8
  %123 = getelementptr inbounds %0, %0* %122, i32 0, i32 0
  %124 = getelementptr inbounds %1, %1* %123, i32 0, i32 1
  %125 = bitcast %2* %124 to %52*
  %126 = getelementptr inbounds %52, %52* %125, i32 0, i32 1
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = and i32 %128, 2
  %130 = icmp ne i32 %129, 0
  %131 = zext i1 %130 to i64
  %132 = select i1 %130, i32 6, i32 5126
  %133 = load %18*, %18** %21, align 8
  %134 = getelementptr inbounds %18, %18* %133, i32 0, i32 1
  %135 = bitcast %20* %134 to i32*
  store i32 %132, i32* %135, align 8
  %136 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #13
  %137 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %137) #13
  br label %138

138:                                              ; preds = %112
  br label %139

139:                                              ; preds = %138
  store i32 1, i32* %16, align 4
  br label %140

140:                                              ; preds = %139, %109
  %141 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #13
  %142 = load i32, i32* %16, align 4
  switch i32 %142, label %147 [
    i32 10, label %143
  ]

143:                                              ; preds = %140
  %144 = load %45*, %45** %18, align 8
  %145 = getelementptr inbounds %45, %45* %144, i32 1
  store %45* %145, %45** %18, align 8
  br label %91

146:                                              ; preds = %91
  store i32 0, i32* %16, align 4
  br label %147

147:                                              ; preds = %146, %140
  %148 = bitcast %45** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #13
  %149 = bitcast %45** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #13
  %150 = bitcast %43** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #13
  %151 = load i32, i32* %16, align 4
  switch i32 %151, label %415 [
    i32 0, label %152
  ]

152:                                              ; preds = %147
  br label %153

153:                                              ; preds = %152
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %70
  br label %156

156:                                              ; preds = %155
  %157 = load i32, i32* %8, align 4
  %158 = sext i32 %157 to i64
  %159 = mul i64 16, %158
  %160 = call noalias i8* @_emalloc(i64 %159) #16
  %161 = bitcast i8* %160 to %0**
  store %0** %161, %0*** %12, align 8
  %162 = load %0**, %0*** %12, align 8
  %163 = getelementptr inbounds %0*, %0** %162, i64 -1
  store %0** %163, %0*** %13, align 8
  br label %164

164:                                              ; preds = %156
  %165 = bitcast %43** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %165) #13
  %166 = load %18*, %18** %5, align 8
  %167 = getelementptr inbounds %18, %18* %166, i32 0, i32 0
  %168 = bitcast %19* %167 to %43**
  %169 = load %43*, %43** %168, align 8
  store %43* %169, %43** %23, align 8
  %170 = bitcast %45** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %170) #13
  %171 = load %43*, %43** %23, align 8
  %172 = getelementptr inbounds %43, %43* %171, i32 0, i32 3
  %173 = load %45*, %45** %172, align 8
  store %45* %173, %45** %24, align 8
  %174 = bitcast %45** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %174) #13
  %175 = load %45*, %45** %24, align 8
  %176 = load %43*, %43** %23, align 8
  %177 = getelementptr inbounds %43, %43* %176, i32 0, i32 4
  %178 = load i32, i32* %177, align 8
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds %45, %45* %175, i64 %179
  store %45* %180, %45** %25, align 8
  br label %181

181:                                              ; preds = %262, %164
  %182 = load %45*, %45** %24, align 8
  %183 = load %45*, %45** %25, align 8
  %184 = icmp ne %45* %182, %183
  br i1 %184, label %185, label %265

185:                                              ; preds = %181
  %186 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %186) #13
  %187 = load %45*, %45** %24, align 8
  %188 = getelementptr inbounds %45, %45* %187, i32 0, i32 0
  store %18* %188, %18** %26, align 8
  %189 = load %18*, %18** %26, align 8
  %190 = call zeroext i8 @157(%18* %189)
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %191, 0
  %193 = xor i1 %192, true
  %194 = xor i1 %193, true
  %195 = zext i1 %194 to i32
  %196 = sext i32 %195 to i64
  %197 = call i64 @llvm.expect.i64(i64 %196, i64 0)
  %198 = icmp ne i64 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %185
  store i32 17, i32* %16, align 4
  br label %258

200:                                              ; preds = %185
  %201 = load %18*, %18** %26, align 8
  store %18* %201, %18** %7, align 8
  %202 = load %18*, %18** %7, align 8
  %203 = call zeroext i8 @157(%18* %202)
  %204 = zext i8 %203 to i32
  %205 = icmp eq i32 %204, 4
  br i1 %205, label %206, label %246

206:                                              ; preds = %200
  %207 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %207) #13
  %208 = load %18*, %18** %7, align 8
  %209 = getelementptr inbounds %18, %18* %208, i32 0, i32 0
  %210 = bitcast %19* %209 to i64*
  %211 = load i64, i64* %210, align 8
  store i64 %211, i64* %27, align 8
  %212 = load %0**, %0*** %13, align 8
  %213 = getelementptr inbounds %0*, %0** %212, i32 1
  store %0** %213, %0*** %13, align 8
  store %0* null, %0** %213, align 8
  %214 = load %18*, %18** %7, align 8
  %215 = getelementptr inbounds %18, %18* %214, i32 0, i32 0
  %216 = bitcast %19* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = load %0**, %0*** %12, align 8
  %219 = load i32, i32* %8, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %0*, %0** %218, i64 %220
  %222 = bitcast %0** %221 to i64*
  %223 = load %0**, %0*** %13, align 8
  %224 = load %0**, %0*** %12, align 8
  %225 = ptrtoint %0** %223 to i64
  %226 = ptrtoint %0** %224 to i64
  %227 = sub i64 %225, %226
  %228 = sdiv exact i64 %227, 8
  %229 = getelementptr inbounds i64, i64* %222, i64 %228
  store i64 %217, i64* %229, align 8
  %230 = load i64, i64* %27, align 8
  %231 = icmp sle i64 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %206
  %233 = load i64, i64* %11, align 8
  %234 = add i64 %233, 1
  store i64 %234, i64* %11, align 8
  br label %235

235:                                              ; preds = %232, %206
  br label %236

236:                                              ; preds = %239, %235
  %237 = load i64, i64* %27, align 8
  %238 = icmp ne i64 %237, 0
  br i1 %238, label %239, label %244

239:                                              ; preds = %236
  %240 = load i64, i64* %27, align 8
  %241 = sdiv i64 %240, 10
  store i64 %241, i64* %27, align 8
  %242 = load i64, i64* %11, align 8
  %243 = add i64 %242, 1
  store i64 %243, i64* %11, align 8
  br label %236

244:                                              ; preds = %236
  %245 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %245) #13
  br label %257

246:                                              ; preds = %200
  %247 = load %18*, %18** %7, align 8
  %248 = call %0* @158(%18* %247)
  %249 = load %0**, %0*** %13, align 8
  %250 = getelementptr inbounds %0*, %0** %249, i32 1
  store %0** %250, %0*** %13, align 8
  store %0* %248, %0** %250, align 8
  %251 = load %0**, %0*** %13, align 8
  %252 = load %0*, %0** %251, align 8
  %253 = getelementptr inbounds %0, %0* %252, i32 0, i32 2
  %254 = load i64, i64* %253, align 8
  %255 = load i64, i64* %11, align 8
  %256 = add i64 %255, %254
  store i64 %256, i64* %11, align 8
  br label %257

257:                                              ; preds = %246, %244
  store i32 0, i32* %16, align 4
  br label %258

258:                                              ; preds = %257, %199
  %259 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #13
  %260 = load i32, i32* %16, align 4
  switch i32 %260, label %423 [
    i32 0, label %261
    i32 17, label %262
  ]

261:                                              ; preds = %258
  br label %262

262:                                              ; preds = %261, %258
  %263 = load %45*, %45** %24, align 8
  %264 = getelementptr inbounds %45, %45* %263, i32 1
  store %45* %264, %45** %24, align 8
  br label %181

265:                                              ; preds = %181
  %266 = bitcast %45** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %266) #13
  %267 = bitcast %45** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #13
  %268 = bitcast %43** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #13
  br label %269

269:                                              ; preds = %265
  br label %270

270:                                              ; preds = %269
  %271 = load i32, i32* %8, align 4
  %272 = sub nsw i32 %271, 1
  %273 = sext i32 %272 to i64
  %274 = load %0*, %0** %4, align 8
  %275 = getelementptr inbounds %0, %0* %274, i32 0, i32 2
  %276 = load i64, i64* %275, align 8
  %277 = load i64, i64* %11, align 8
  %278 = call %0* @153(i64 %273, i64 %276, i64 %277, i32 0)
  store %0* %278, %0** %9, align 8
  %279 = load %0*, %0** %9, align 8
  %280 = getelementptr inbounds %0, %0* %279, i32 0, i32 3
  %281 = getelementptr inbounds [1 x i8], [1 x i8]* %280, i32 0, i32 0
  %282 = load %0*, %0** %9, align 8
  %283 = getelementptr inbounds %0, %0* %282, i32 0, i32 2
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds i8, i8* %281, i64 %284
  store i8* %285, i8** %10, align 8
  %286 = load i8*, i8** %10, align 8
  store i8 0, i8* %286, align 1
  br label %287

287:                                              ; preds = %350, %270
  %288 = load %0**, %0*** %13, align 8
  %289 = load %0*, %0** %288, align 8
  %290 = icmp ne %0* %289, null
  br i1 %290, label %291, label %310

291:                                              ; preds = %287
  %292 = load %0**, %0*** %13, align 8
  %293 = load %0*, %0** %292, align 8
  %294 = getelementptr inbounds %0, %0* %293, i32 0, i32 2
  %295 = load i64, i64* %294, align 8
  %296 = load i8*, i8** %10, align 8
  %297 = sub i64 0, %295
  %298 = getelementptr inbounds i8, i8* %296, i64 %297
  store i8* %298, i8** %10, align 8
  %299 = load i8*, i8** %10, align 8
  %300 = load %0**, %0*** %13, align 8
  %301 = load %0*, %0** %300, align 8
  %302 = getelementptr inbounds %0, %0* %301, i32 0, i32 3
  %303 = getelementptr inbounds [1 x i8], [1 x i8]* %302, i32 0, i32 0
  %304 = load %0**, %0*** %13, align 8
  %305 = load %0*, %0** %304, align 8
  %306 = getelementptr inbounds %0, %0* %305, i32 0, i32 2
  %307 = load i64, i64* %306, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %299, i8* align 8 %303, i64 %307, i1 false)
  %308 = load %0**, %0*** %13, align 8
  %309 = load %0*, %0** %308, align 8
  call void @159(%0* %309)
  br label %336

310:                                              ; preds = %287
  %311 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %311) #13
  %312 = load i8*, i8** %10, align 8
  store i8* %312, i8** %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %29) #13
  %313 = load i8*, i8** %10, align 8
  %314 = load i8, i8* %313, align 1
  store i8 %314, i8* %29, align 1
  %315 = bitcast i64* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %315) #13
  %316 = load %0**, %0*** %12, align 8
  %317 = load i32, i32* %8, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds %0*, %0** %316, i64 %318
  %320 = bitcast %0** %319 to i64*
  %321 = load %0**, %0*** %13, align 8
  %322 = load %0**, %0*** %12, align 8
  %323 = ptrtoint %0** %321 to i64
  %324 = ptrtoint %0** %322 to i64
  %325 = sub i64 %323, %324
  %326 = sdiv exact i64 %325, 8
  %327 = getelementptr inbounds i64, i64* %320, i64 %326
  %328 = load i64, i64* %327, align 8
  store i64 %328, i64* %30, align 8
  %329 = load i8*, i8** %10, align 8
  %330 = load i64, i64* %30, align 8
  %331 = call i8* @160(i8* %329, i64 %330)
  store i8* %331, i8** %10, align 8
  %332 = load i8, i8* %29, align 1
  %333 = load i8*, i8** %28, align 8
  store i8 %332, i8* %333, align 1
  %334 = bitcast i64* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %334) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %29) #13
  %335 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %335) #13
  br label %336

336:                                              ; preds = %310, %291
  %337 = load %0*, %0** %4, align 8
  %338 = getelementptr inbounds %0, %0* %337, i32 0, i32 2
  %339 = load i64, i64* %338, align 8
  %340 = load i8*, i8** %10, align 8
  %341 = sub i64 0, %339
  %342 = getelementptr inbounds i8, i8* %340, i64 %341
  store i8* %342, i8** %10, align 8
  %343 = load i8*, i8** %10, align 8
  %344 = load %0*, %0** %4, align 8
  %345 = getelementptr inbounds %0, %0* %344, i32 0, i32 3
  %346 = getelementptr inbounds [1 x i8], [1 x i8]* %345, i32 0, i32 0
  %347 = load %0*, %0** %4, align 8
  %348 = getelementptr inbounds %0, %0* %347, i32 0, i32 2
  %349 = load i64, i64* %348, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %343, i8* align 8 %346, i64 %349, i1 false)
  br label %350

350:                                              ; preds = %336
  %351 = load %0**, %0*** %13, align 8
  %352 = getelementptr inbounds %0*, %0** %351, i32 -1
  store %0** %352, %0*** %13, align 8
  %353 = load %0**, %0*** %12, align 8
  %354 = icmp ugt %0** %352, %353
  br i1 %354, label %287, label %355

355:                                              ; preds = %350
  %356 = load %0**, %0*** %13, align 8
  %357 = load %0*, %0** %356, align 8
  %358 = icmp ne %0* %357, null
  br i1 %358, label %359, label %373

359:                                              ; preds = %355
  %360 = load %0*, %0** %9, align 8
  %361 = getelementptr inbounds %0, %0* %360, i32 0, i32 3
  %362 = getelementptr inbounds [1 x i8], [1 x i8]* %361, i32 0, i32 0
  %363 = load %0**, %0*** %13, align 8
  %364 = load %0*, %0** %363, align 8
  %365 = getelementptr inbounds %0, %0* %364, i32 0, i32 3
  %366 = getelementptr inbounds [1 x i8], [1 x i8]* %365, i32 0, i32 0
  %367 = load %0**, %0*** %13, align 8
  %368 = load %0*, %0** %367, align 8
  %369 = getelementptr inbounds %0, %0* %368, i32 0, i32 2
  %370 = load i64, i64* %369, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %362, i8* align 8 %366, i64 %370, i1 false)
  %371 = load %0**, %0*** %13, align 8
  %372 = load %0*, %0** %371, align 8
  call void @159(%0* %372)
  br label %396

373:                                              ; preds = %355
  %374 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %374) #13
  %375 = load i8*, i8** %10, align 8
  store i8* %375, i8** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %32) #13
  %376 = load i8*, i8** %10, align 8
  %377 = load i8, i8* %376, align 1
  store i8 %377, i8* %32, align 1
  %378 = load i8*, i8** %10, align 8
  %379 = load %0**, %0*** %12, align 8
  %380 = load i32, i32* %8, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds %0*, %0** %379, i64 %381
  %383 = bitcast %0** %382 to i64*
  %384 = load %0**, %0*** %13, align 8
  %385 = load %0**, %0*** %12, align 8
  %386 = ptrtoint %0** %384 to i64
  %387 = ptrtoint %0** %385 to i64
  %388 = sub i64 %386, %387
  %389 = sdiv exact i64 %388, 8
  %390 = getelementptr inbounds i64, i64* %383, i64 %389
  %391 = load i64, i64* %390, align 8
  %392 = call i8* @160(i8* %378, i64 %391)
  %393 = load i8, i8* %32, align 1
  %394 = load i8*, i8** %31, align 8
  store i8 %393, i8* %394, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %32) #13
  %395 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %395) #13
  br label %396

396:                                              ; preds = %373, %359
  %397 = load %0**, %0*** %12, align 8
  %398 = bitcast %0** %397 to i8*
  call void @_efree(i8* %398)
  br label %399

399:                                              ; preds = %396
  %400 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %400) #13
  %401 = load %18*, %18** %6, align 8
  store %18* %401, %18** %33, align 8
  %402 = bitcast %0** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %402) #13
  %403 = load %0*, %0** %9, align 8
  store %0* %403, %0** %34, align 8
  %404 = load %0*, %0** %34, align 8
  %405 = load %18*, %18** %33, align 8
  %406 = getelementptr inbounds %18, %18* %405, i32 0, i32 0
  %407 = bitcast %19* %406 to %0**
  store %0* %404, %0** %407, align 8
  %408 = load %18*, %18** %33, align 8
  %409 = getelementptr inbounds %18, %18* %408, i32 0, i32 1
  %410 = bitcast %20* %409 to i32*
  store i32 5126, i32* %410, align 8
  %411 = bitcast %0** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %411) #13
  %412 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %412) #13
  br label %413

413:                                              ; preds = %399
  br label %414

414:                                              ; preds = %413
  store i32 1, i32* %16, align 4
  br label %415

415:                                              ; preds = %414, %147, %69
  %416 = bitcast %0*** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %416) #13
  %417 = bitcast %0*** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %417) #13
  %418 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %418) #13
  %419 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %419) #13
  %420 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %420) #13
  %421 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %421) #13
  %422 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %422) #13
  ret void

423:                                              ; preds = %258
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i8 @157(%18* %0) #5 {
  %2 = alloca %18*, align 8
  store %18* %0, %18** %2, align 8
  %3 = load %18*, %18** %2, align 8
  %4 = getelementptr inbounds %18, %18* %3, i32 0, i32 1
  %5 = bitcast %20* %4 to %53*
  %6 = getelementptr inbounds %53, %53* %5, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @158(%18* %0) #5 {
  %2 = alloca %18*, align 8
  store %18* %0, %18** %2, align 8
  %3 = load %18*, %18** %2, align 8
  %4 = call zeroext i8 @157(%18* %3)
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load %18*, %18** %2, align 8
  %9 = getelementptr inbounds %18, %18* %8, i32 0, i32 0
  %10 = bitcast %19* %9 to %0**
  %11 = load %0*, %0** %10, align 8
  %12 = call %0* @163(%0* %11)
  br label %16

13:                                               ; preds = %1
  %14 = load %18*, %18** %2, align 8
  %15 = call %0* @_zval_get_string_func(%18* %14)
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %0* [ %12, %7 ], [ %15, %13 ]
  ret %0* %17
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @159(%0* %0) #5 {
  %2 = alloca %0*, align 8
  store %0* %0, %0** %2, align 8
  %3 = load %0*, %0** %2, align 8
  %4 = getelementptr inbounds %0, %0* %3, i32 0, i32 0
  %5 = getelementptr inbounds %1, %1* %4, i32 0, i32 1
  %6 = bitcast %2* %5 to %52*
  %7 = getelementptr inbounds %52, %52* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %1
  %13 = load %0*, %0** %2, align 8
  %14 = getelementptr inbounds %0, %0* %13, i32 0, i32 0
  %15 = getelementptr inbounds %1, %1* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %12
  %20 = load %0*, %0** %2, align 8
  %21 = getelementptr inbounds %0, %0* %20, i32 0, i32 0
  %22 = getelementptr inbounds %1, %1* %21, i32 0, i32 1
  %23 = bitcast %2* %22 to %52*
  %24 = getelementptr inbounds %52, %52* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %26, 1
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load %0*, %0** %2, align 8
  %31 = bitcast %0* %30 to i8*
  call void @free(i8* %31) #13
  br label %35

32:                                               ; preds = %19
  %33 = load %0*, %0** %2, align 8
  %34 = bitcast %0* %33 to i8*
  call void @_efree(i8* %34)
  br label %35

35:                                               ; preds = %32, %29
  br label %36

36:                                               ; preds = %35, %12
  br label %37

37:                                               ; preds = %36, %1
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @160(i8* %0, i64 %1) #5 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load i64, i64* %5, align 8
  %8 = icmp slt i64 %7, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %2
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load i8*, i8** %4, align 8
  %12 = load i64, i64* %5, align 8
  %13 = xor i64 %12, -1
  %14 = add i64 %13, 1
  %15 = call i8* @188(i8* %11, i64 %14)
  store i8* %15, i8** %6, align 8
  %16 = load i8*, i8** %6, align 8
  %17 = getelementptr inbounds i8, i8* %16, i32 -1
  store i8* %17, i8** %6, align 8
  store i8 45, i8* %17, align 1
  %18 = load i8*, i8** %6, align 8
  store i8* %18, i8** %3, align 8
  %19 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %19) #13
  br label %24

20:                                               ; preds = %2
  %21 = load i8*, i8** %4, align 8
  %22 = load i64, i64* %5, align 8
  %23 = call i8* @188(i8* %21, i64 %22)
  store i8* %23, i8** %3, align 8
  br label %24

24:                                               ; preds = %20, %9
  %25 = load i8*, i8** %3, align 8
  ret i8* %25
}

; Function Attrs: nounwind uwtable
define hidden void @zif_implode(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %18*, align 8
  %7 = alloca %18*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %22 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast %18** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  store %18* null, %18** %6, align 8
  %24 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 0, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  store i32 2, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  %31 = load %14*, %14** %3, align 8
  %32 = getelementptr inbounds %14, %14* %31, i32 0, i32 4
  %33 = getelementptr inbounds %18, %18* %32, i32 0, i32 2
  %34 = bitcast %21* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  %37 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  %38 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store %18* null, %18** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %18*, %18** %14, align 8
  %44 = load %18*, %18** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %205

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %14*, %14** %3, align 8
  %84 = bitcast %14* %83 to %18*
  %85 = getelementptr inbounds %18, %18* %84, i64 4
  store %18* %85, %18** %14, align 8
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %205

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %18*, %18** %14, align 8
  %142 = getelementptr inbounds %18, %18* %141, i32 1
  store %18* %142, %18** %14, align 8
  %143 = load %18*, %18** %14, align 8
  store %18* %143, %18** %15, align 8
  %144 = load %18*, %18** %15, align 8
  call void @161(%18* %144, %18** %5, i32 0)
  store i8 1, i8* %19, align 1
  %145 = load i32, i32* %13, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %13, align 4
  br label %147

147:                                              ; preds = %140
  %148 = load i32, i32* %13, align 4
  %149 = load i32, i32* %10, align 4
  %150 = icmp sle i32 %148, %149
  br i1 %150, label %155, label %151

151:                                              ; preds = %147
  %152 = load i8, i8* %19, align 1
  %153 = zext i8 %152 to i32
  %154 = icmp eq i32 %153, 1
  br label %155

155:                                              ; preds = %151, %147
  %156 = phi i1 [ true, %147 ], [ %154, %151 ]
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %155
  unreachable

163:                                              ; preds = %155
  br label %164

164:                                              ; preds = %163
  br label %165

165:                                              ; preds = %164
  br label %166

166:                                              ; preds = %165
  %167 = load i32, i32* %13, align 4
  %168 = load i32, i32* %10, align 4
  %169 = icmp sgt i32 %167, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = load i8, i8* %19, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 0
  br label %174

174:                                              ; preds = %170, %166
  %175 = phi i1 [ true, %166 ], [ %173, %170 ]
  %176 = xor i1 %175, true
  %177 = zext i1 %176 to i32
  %178 = sext i32 %177 to i64
  %179 = call i64 @llvm.expect.i64(i64 %178, i64 0)
  %180 = icmp ne i64 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %174
  unreachable

182:                                              ; preds = %174
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  %185 = load i8, i8* %19, align 1
  %186 = icmp ne i8 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %184
  %188 = load i32, i32* %13, align 4
  %189 = load i32, i32* %12, align 4
  %190 = icmp sgt i32 %188, %189
  %191 = xor i1 %190, true
  %192 = xor i1 %191, true
  %193 = zext i1 %192 to i32
  %194 = sext i32 %193 to i64
  %195 = call i64 @llvm.expect.i64(i64 %194, i64 0)
  %196 = icmp ne i64 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %187
  br label %205

198:                                              ; preds = %187
  br label %199

199:                                              ; preds = %198, %184
  %200 = load %18*, %18** %14, align 8
  %201 = getelementptr inbounds %18, %18* %200, i32 1
  store %18* %201, %18** %14, align 8
  %202 = load %18*, %18** %14, align 8
  store %18* %202, %18** %15, align 8
  %203 = load %18*, %18** %15, align 8
  call void @161(%18* %203, %18** %6, i32 0)
  br label %204

204:                                              ; preds = %199
  br label %205

205:                                              ; preds = %204, %197, %138, %78
  %206 = load i32, i32* %20, align 4
  %207 = icmp ne i32 %206, 0
  %208 = xor i1 %207, true
  %209 = xor i1 %208, true
  %210 = zext i1 %209 to i32
  %211 = sext i32 %210 to i64
  %212 = call i64 @llvm.expect.i64(i64 %211, i64 0)
  %213 = icmp ne i64 %212, 0
  br i1 %213, label %214, label %237

214:                                              ; preds = %205
  %215 = load i32, i32* %20, align 4
  %216 = icmp eq i32 %215, 2
  br i1 %216, label %217, label %220

217:                                              ; preds = %214
  %218 = load i32, i32* %13, align 4
  %219 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %218, i8* %219)
  br label %236

220:                                              ; preds = %214
  %221 = load i32, i32* %20, align 4
  %222 = icmp eq i32 %221, 3
  br i1 %222, label %223, label %227

223:                                              ; preds = %220
  %224 = load i32, i32* %13, align 4
  %225 = load i8*, i8** %17, align 8
  %226 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %224, i8* %225, %18* %226)
  br label %235

227:                                              ; preds = %220
  %228 = load i32, i32* %20, align 4
  %229 = icmp eq i32 %228, 4
  br i1 %229, label %230, label %234

230:                                              ; preds = %227
  %231 = load i32, i32* %13, align 4
  %232 = load i32, i32* %16, align 4
  %233 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %231, i32 %232, %18* %233)
  br label %234

234:                                              ; preds = %230, %227
  br label %235

235:                                              ; preds = %234, %223
  br label %236

236:                                              ; preds = %235, %217
  store i32 1, i32* %21, align 4
  br label %238

237:                                              ; preds = %205
  store i32 0, i32* %21, align 4
  br label %238

238:                                              ; preds = %237, %236
  %239 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %239) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %240 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %240) #13
  %241 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %241) #13
  %242 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %242) #13
  %243 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %243) #13
  %244 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %244) #13
  %245 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %245) #13
  %246 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %246) #13
  %247 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %247) #13
  %248 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %248) #13
  %249 = load i32, i32* %21, align 4
  switch i32 %249, label %290 [
    i32 0, label %250
  ]

250:                                              ; preds = %238
  br label %251

251:                                              ; preds = %250
  br label %252

252:                                              ; preds = %251
  %253 = load %18*, %18** %6, align 8
  %254 = icmp eq %18* %253, null
  br i1 %254, label %255, label %264

255:                                              ; preds = %252
  %256 = load %18*, %18** %5, align 8
  %257 = call zeroext i8 @157(%18* %256)
  %258 = zext i8 %257 to i32
  %259 = icmp ne i32 %258, 7
  br i1 %259, label %260, label %261

260:                                              ; preds = %255
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @77, i32 0, i32 0))
  store i32 1, i32* %21, align 4
  br label %290

261:                                              ; preds = %255
  %262 = load %0*, %0** @zend_empty_string, align 8
  store %0* %262, %0** %8, align 8
  %263 = load %18*, %18** %5, align 8
  store %18* %263, %18** %7, align 8
  br label %285

264:                                              ; preds = %252
  %265 = load %18*, %18** %5, align 8
  %266 = call zeroext i8 @157(%18* %265)
  %267 = zext i8 %266 to i32
  %268 = icmp eq i32 %267, 7
  br i1 %268, label %269, label %273

269:                                              ; preds = %264
  %270 = load %18*, %18** %6, align 8
  %271 = call %0* @158(%18* %270)
  store %0* %271, %0** %8, align 8
  %272 = load %18*, %18** %5, align 8
  store %18* %272, %18** %7, align 8
  br label %284

273:                                              ; preds = %264
  %274 = load %18*, %18** %6, align 8
  %275 = call zeroext i8 @157(%18* %274)
  %276 = zext i8 %275 to i32
  %277 = icmp eq i32 %276, 7
  br i1 %277, label %278, label %282

278:                                              ; preds = %273
  %279 = load %18*, %18** %5, align 8
  %280 = call %0* @158(%18* %279)
  store %0* %280, %0** %8, align 8
  %281 = load %18*, %18** %6, align 8
  store %18* %281, %18** %7, align 8
  br label %283

282:                                              ; preds = %273
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @78, i32 0, i32 0))
  store i32 1, i32* %21, align 4
  br label %290

283:                                              ; preds = %278
  br label %284

284:                                              ; preds = %283, %269
  br label %285

285:                                              ; preds = %284, %261
  %286 = load %0*, %0** %8, align 8
  %287 = load %18*, %18** %7, align 8
  %288 = load %18*, %18** %4, align 8
  call void @php_implode(%0* %286, %18* %287, %18* %288)
  %289 = load %0*, %0** %8, align 8
  call void @159(%0* %289)
  store i32 0, i32* %21, align 4
  br label %290

290:                                              ; preds = %285, %282, %260, %238
  %291 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %291) #13
  %292 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %292) #13
  %293 = bitcast %18** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %293) #13
  %294 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %294) #13
  %295 = load i32, i32* %21, align 4
  switch i32 %295, label %297 [
    i32 0, label %296
    i32 1, label %296
  ]

296:                                              ; preds = %290, %290
  ret void

297:                                              ; preds = %290
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @161(%18* %0, %18** %1, i32 %2) #5 {
  %4 = alloca %18*, align 8
  %5 = alloca %18**, align 8
  %6 = alloca i32, align 4
  store %18* %0, %18** %4, align 8
  store %18** %1, %18*** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %3
  %10 = load %18*, %18** %4, align 8
  %11 = call zeroext i8 @157(%18* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 1
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = call i64 @llvm.expect.i64(i64 %17, i64 0)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %9
  br label %23

21:                                               ; preds = %9, %3
  %22 = load %18*, %18** %4, align 8
  br label %23

23:                                               ; preds = %21, %20
  %24 = phi %18* [ null, %20 ], [ %22, %21 ]
  %25 = load %18**, %18*** %5, align 8
  store %18* %24, %18** %25, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strtok(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %18*, align 8
  %18 = alloca %18*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %18*, align 8
  %26 = alloca %0*, align 8
  %27 = alloca %18*, align 8
  %28 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %29 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store %0* null, %0** %6, align 8
  %31 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  store i64 0, i64* %11, align 8
  br label %36

36:                                               ; preds = %2
  %37 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %12, align 4
  %38 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 1, i32* %13, align 4
  %39 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 2, i32* %14, align 4
  %40 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  %41 = load %14*, %14** %3, align 8
  %42 = getelementptr inbounds %14, %14* %41, i32 0, i32 4
  %43 = getelementptr inbounds %18, %18* %42, i32 0, i32 2
  %44 = bitcast %21* %43 to i32*
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %15, align 4
  %46 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  %47 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  store %18* null, %18** %18, align 8
  %49 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  store i32 0, i32* %19, align 4
  %50 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  store i8 0, i8* %22, align 1
  %51 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #13
  store i32 0, i32* %23, align 4
  %52 = load i32, i32* %16, align 4
  %53 = load %18*, %18** %17, align 8
  %54 = load %18*, %18** %18, align 8
  %55 = load i32, i32* %19, align 4
  %56 = load i8*, i8** %20, align 8
  %57 = load i8, i8* %21, align 1
  %58 = load i8, i8* %22, align 1
  br label %59

59:                                               ; preds = %36
  %60 = load i32, i32* %15, align 4
  %61 = load i32, i32* %13, align 4
  %62 = icmp slt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %59
  %70 = load i32, i32* %15, align 4
  %71 = load i32, i32* %14, align 4
  %72 = icmp sgt i32 %70, %71
  %73 = xor i1 %72, true
  %74 = xor i1 %73, true
  %75 = zext i1 %74 to i32
  %76 = sext i32 %75 to i64
  %77 = call i64 @llvm.expect.i64(i64 %76, i64 0)
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %79, label %92

79:                                               ; preds = %69
  %80 = load i32, i32* %14, align 4
  %81 = icmp sge i32 %80, 0
  %82 = xor i1 %81, true
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = call i64 @llvm.expect.i64(i64 %85, i64 1)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %79, %59
  %89 = load i32, i32* %15, align 4
  %90 = load i32, i32* %13, align 4
  %91 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %89, i32 %90, i32 %91)
  store i32 1, i32* %23, align 4
  br label %237

92:                                               ; preds = %79, %69
  store i32 0, i32* %16, align 4
  %93 = load %14*, %14** %3, align 8
  %94 = bitcast %14* %93 to %18*
  %95 = getelementptr inbounds %18, %18* %94, i64 4
  store %18* %95, %18** %17, align 8
  %96 = load i32, i32* %16, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %16, align 4
  br label %98

98:                                               ; preds = %92
  %99 = load i32, i32* %16, align 4
  %100 = load i32, i32* %13, align 4
  %101 = icmp sle i32 %99, %100
  br i1 %101, label %106, label %102

102:                                              ; preds = %98
  %103 = load i8, i8* %22, align 1
  %104 = zext i8 %103 to i32
  %105 = icmp eq i32 %104, 1
  br label %106

106:                                              ; preds = %102, %98
  %107 = phi i1 [ true, %98 ], [ %105, %102 ]
  %108 = xor i1 %107, true
  %109 = zext i1 %108 to i32
  %110 = sext i32 %109 to i64
  %111 = call i64 @llvm.expect.i64(i64 %110, i64 0)
  %112 = icmp ne i64 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %106
  unreachable

114:                                              ; preds = %106
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  br label %117

117:                                              ; preds = %116
  %118 = load i32, i32* %16, align 4
  %119 = load i32, i32* %13, align 4
  %120 = icmp sgt i32 %118, %119
  br i1 %120, label %125, label %121

121:                                              ; preds = %117
  %122 = load i8, i8* %22, align 1
  %123 = zext i8 %122 to i32
  %124 = icmp eq i32 %123, 0
  br label %125

125:                                              ; preds = %121, %117
  %126 = phi i1 [ true, %117 ], [ %124, %121 ]
  %127 = xor i1 %126, true
  %128 = zext i1 %127 to i32
  %129 = sext i32 %128 to i64
  %130 = call i64 @llvm.expect.i64(i64 %129, i64 0)
  %131 = icmp ne i64 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  unreachable

133:                                              ; preds = %125
  br label %134

134:                                              ; preds = %133
  br label %135

135:                                              ; preds = %134
  %136 = load i8, i8* %22, align 1
  %137 = icmp ne i8 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %135
  %139 = load i32, i32* %16, align 4
  %140 = load i32, i32* %15, align 4
  %141 = icmp sgt i32 %139, %140
  %142 = xor i1 %141, true
  %143 = xor i1 %142, true
  %144 = zext i1 %143 to i32
  %145 = sext i32 %144 to i64
  %146 = call i64 @llvm.expect.i64(i64 %145, i64 0)
  %147 = icmp ne i64 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %138
  br label %237

149:                                              ; preds = %138
  br label %150

150:                                              ; preds = %149, %135
  %151 = load %18*, %18** %17, align 8
  %152 = getelementptr inbounds %18, %18* %151, i32 1
  store %18* %152, %18** %17, align 8
  %153 = load %18*, %18** %17, align 8
  store %18* %153, %18** %18, align 8
  %154 = load %18*, %18** %18, align 8
  %155 = call i32 @143(%18* %154, %0** %5, i32 0)
  %156 = icmp ne i32 %155, 0
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %150
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %237

165:                                              ; preds = %150
  store i8 1, i8* %22, align 1
  %166 = load i32, i32* %16, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %16, align 4
  br label %168

168:                                              ; preds = %165
  %169 = load i32, i32* %16, align 4
  %170 = load i32, i32* %13, align 4
  %171 = icmp sle i32 %169, %170
  br i1 %171, label %176, label %172

172:                                              ; preds = %168
  %173 = load i8, i8* %22, align 1
  %174 = zext i8 %173 to i32
  %175 = icmp eq i32 %174, 1
  br label %176

176:                                              ; preds = %172, %168
  %177 = phi i1 [ true, %168 ], [ %175, %172 ]
  %178 = xor i1 %177, true
  %179 = zext i1 %178 to i32
  %180 = sext i32 %179 to i64
  %181 = call i64 @llvm.expect.i64(i64 %180, i64 0)
  %182 = icmp ne i64 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %176
  unreachable

184:                                              ; preds = %176
  br label %185

185:                                              ; preds = %184
  br label %186

186:                                              ; preds = %185
  br label %187

187:                                              ; preds = %186
  %188 = load i32, i32* %16, align 4
  %189 = load i32, i32* %13, align 4
  %190 = icmp sgt i32 %188, %189
  br i1 %190, label %195, label %191

191:                                              ; preds = %187
  %192 = load i8, i8* %22, align 1
  %193 = zext i8 %192 to i32
  %194 = icmp eq i32 %193, 0
  br label %195

195:                                              ; preds = %191, %187
  %196 = phi i1 [ true, %187 ], [ %194, %191 ]
  %197 = xor i1 %196, true
  %198 = zext i1 %197 to i32
  %199 = sext i32 %198 to i64
  %200 = call i64 @llvm.expect.i64(i64 %199, i64 0)
  %201 = icmp ne i64 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %195
  unreachable

203:                                              ; preds = %195
  br label %204

204:                                              ; preds = %203
  br label %205

205:                                              ; preds = %204
  %206 = load i8, i8* %22, align 1
  %207 = icmp ne i8 %206, 0
  br i1 %207, label %208, label %220

208:                                              ; preds = %205
  %209 = load i32, i32* %16, align 4
  %210 = load i32, i32* %15, align 4
  %211 = icmp sgt i32 %209, %210
  %212 = xor i1 %211, true
  %213 = xor i1 %212, true
  %214 = zext i1 %213 to i32
  %215 = sext i32 %214 to i64
  %216 = call i64 @llvm.expect.i64(i64 %215, i64 0)
  %217 = icmp ne i64 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %208
  br label %237

219:                                              ; preds = %208
  br label %220

220:                                              ; preds = %219, %205
  %221 = load %18*, %18** %17, align 8
  %222 = getelementptr inbounds %18, %18* %221, i32 1
  store %18* %222, %18** %17, align 8
  %223 = load %18*, %18** %17, align 8
  store %18* %223, %18** %18, align 8
  %224 = load %18*, %18** %18, align 8
  %225 = call i32 @143(%18* %224, %0** %6, i32 0)
  %226 = icmp ne i32 %225, 0
  %227 = xor i1 %226, true
  %228 = xor i1 %227, true
  %229 = xor i1 %228, true
  %230 = zext i1 %229 to i32
  %231 = sext i32 %230 to i64
  %232 = call i64 @llvm.expect.i64(i64 %231, i64 0)
  %233 = icmp ne i64 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %220
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %237

235:                                              ; preds = %220
  br label %236

236:                                              ; preds = %235
  br label %237

237:                                              ; preds = %236, %234, %218, %164, %148, %88
  %238 = load i32, i32* %23, align 4
  %239 = icmp ne i32 %238, 0
  %240 = xor i1 %239, true
  %241 = xor i1 %240, true
  %242 = zext i1 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call i64 @llvm.expect.i64(i64 %243, i64 0)
  %245 = icmp ne i64 %244, 0
  br i1 %245, label %246, label %269

246:                                              ; preds = %237
  %247 = load i32, i32* %23, align 4
  %248 = icmp eq i32 %247, 2
  br i1 %248, label %249, label %252

249:                                              ; preds = %246
  %250 = load i32, i32* %16, align 4
  %251 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %250, i8* %251)
  br label %268

252:                                              ; preds = %246
  %253 = load i32, i32* %23, align 4
  %254 = icmp eq i32 %253, 3
  br i1 %254, label %255, label %259

255:                                              ; preds = %252
  %256 = load i32, i32* %16, align 4
  %257 = load i8*, i8** %20, align 8
  %258 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %256, i8* %257, %18* %258)
  br label %267

259:                                              ; preds = %252
  %260 = load i32, i32* %23, align 4
  %261 = icmp eq i32 %260, 4
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = load i32, i32* %16, align 4
  %264 = load i32, i32* %19, align 4
  %265 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %263, i32 %264, %18* %265)
  br label %266

266:                                              ; preds = %262, %259
  br label %267

267:                                              ; preds = %266, %255
  br label %268

268:                                              ; preds = %267, %249
  store i32 1, i32* %24, align 4
  br label %270

269:                                              ; preds = %237
  store i32 0, i32* %24, align 4
  br label %270

270:                                              ; preds = %269, %268
  %271 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  %272 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #13
  %273 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #13
  %274 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #13
  %275 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %275) #13
  %276 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #13
  %277 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #13
  %278 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #13
  %279 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #13
  %280 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #13
  %281 = load i32, i32* %24, align 4
  switch i32 %281, label %462 [
    i32 0, label %282
  ]

282:                                              ; preds = %270
  br label %283

283:                                              ; preds = %282
  br label %284

284:                                              ; preds = %283
  %285 = load %14*, %14** %3, align 8
  %286 = getelementptr inbounds %14, %14* %285, i32 0, i32 4
  %287 = getelementptr inbounds %18, %18* %286, i32 0, i32 2
  %288 = bitcast %21* %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = icmp eq i32 %289, 1
  br i1 %290, label %291, label %293

291:                                              ; preds = %284
  %292 = load %0*, %0** %5, align 8
  store %0* %292, %0** %6, align 8
  br label %324

293:                                              ; preds = %284
  call void @_zval_ptr_dtor(%18* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 2))
  br label %294

294:                                              ; preds = %293
  br label %295

295:                                              ; preds = %294
  %296 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %296) #13
  store %18* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 2), %18** %25, align 8
  %297 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %297) #13
  %298 = load %0*, %0** %5, align 8
  %299 = getelementptr inbounds %0, %0* %298, i32 0, i32 3
  %300 = getelementptr inbounds [1 x i8], [1 x i8]* %299, i32 0, i32 0
  %301 = load %0*, %0** %5, align 8
  %302 = getelementptr inbounds %0, %0* %301, i32 0, i32 2
  %303 = load i64, i64* %302, align 8
  %304 = call %0* @148(i8* %300, i64 %303, i32 0)
  store %0* %304, %0** %26, align 8
  %305 = load %0*, %0** %26, align 8
  %306 = load %18*, %18** %25, align 8
  %307 = getelementptr inbounds %18, %18* %306, i32 0, i32 0
  %308 = bitcast %19* %307 to %0**
  store %0* %305, %0** %308, align 8
  %309 = load %18*, %18** %25, align 8
  %310 = getelementptr inbounds %18, %18* %309, i32 0, i32 1
  %311 = bitcast %20* %310 to i32*
  store i32 5126, i32* %311, align 8
  %312 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %312) #13
  %313 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %313) #13
  br label %314

314:                                              ; preds = %295
  br label %315

315:                                              ; preds = %314
  br label %316

316:                                              ; preds = %315
  br label %317

317:                                              ; preds = %316
  %318 = load %0*, %0** bitcast (%19* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 2, i32 0) to %0**), align 8
  %319 = getelementptr inbounds %0, %0* %318, i32 0, i32 3
  %320 = getelementptr inbounds [1 x i8], [1 x i8]* %319, i32 0, i32 0
  store i8* %320, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 3), align 8
  store i8* %320, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 6), align 8
  %321 = load %0*, %0** %5, align 8
  %322 = getelementptr inbounds %0, %0* %321, i32 0, i32 2
  %323 = load i64, i64* %322, align 8
  store i64 %323, i64* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 8), align 8
  br label %324

324:                                              ; preds = %317, %291
  %325 = load i8*, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 6), align 8
  store i8* %325, i8** %9, align 8
  %326 = load i8*, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 3), align 8
  %327 = load i64, i64* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 8), align 8
  %328 = getelementptr inbounds i8, i8* %326, i64 %327
  store i8* %328, i8** %10, align 8
  %329 = load i8*, i8** %9, align 8
  %330 = icmp ne i8* %329, null
  br i1 %330, label %331, label %335

331:                                              ; preds = %324
  %332 = load i8*, i8** %9, align 8
  %333 = load i8*, i8** %10, align 8
  %334 = icmp uge i8* %332, %333
  br i1 %334, label %335, label %342

335:                                              ; preds = %331, %324
  br label %336

336:                                              ; preds = %335
  %337 = load %18*, %18** %4, align 8
  %338 = getelementptr inbounds %18, %18* %337, i32 0, i32 1
  %339 = bitcast %20* %338 to i32*
  store i32 2, i32* %339, align 8
  br label %340

340:                                              ; preds = %336
  br label %341

341:                                              ; preds = %340
  store i32 1, i32* %24, align 4
  br label %462

342:                                              ; preds = %331
  %343 = load %0*, %0** %6, align 8
  %344 = getelementptr inbounds %0, %0* %343, i32 0, i32 3
  %345 = getelementptr inbounds [1 x i8], [1 x i8]* %344, i32 0, i32 0
  store i8* %345, i8** %7, align 8
  %346 = load i8*, i8** %7, align 8
  %347 = load %0*, %0** %6, align 8
  %348 = getelementptr inbounds %0, %0* %347, i32 0, i32 2
  %349 = load i64, i64* %348, align 8
  %350 = getelementptr inbounds i8, i8* %346, i64 %349
  store i8* %350, i8** %8, align 8
  br label %351

351:                                              ; preds = %355, %342
  %352 = load i8*, i8** %7, align 8
  %353 = load i8*, i8** %8, align 8
  %354 = icmp ult i8* %352, %353
  br i1 %354, label %355, label %361

355:                                              ; preds = %351
  %356 = load i8*, i8** %7, align 8
  %357 = getelementptr inbounds i8, i8* %356, i32 1
  store i8* %357, i8** %7, align 8
  %358 = load i8, i8* %356, align 1
  %359 = zext i8 %358 to i64
  %360 = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 7), i64 0, i64 %359
  store i8 1, i8* %360, align 1
  br label %351

361:                                              ; preds = %351
  br label %362

362:                                              ; preds = %381, %361
  %363 = load i8*, i8** %9, align 8
  %364 = load i8, i8* %363, align 1
  %365 = zext i8 %364 to i64
  %366 = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 7), i64 0, i64 %365
  %367 = load i8, i8* %366, align 1
  %368 = icmp ne i8 %367, 0
  br i1 %368, label %369, label %384

369:                                              ; preds = %362
  %370 = load i8*, i8** %9, align 8
  %371 = getelementptr inbounds i8, i8* %370, i32 1
  store i8* %371, i8** %9, align 8
  %372 = load i8*, i8** %10, align 8
  %373 = icmp uge i8* %371, %372
  br i1 %373, label %374, label %381

374:                                              ; preds = %369
  store i8* null, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 6), align 8
  br label %375

375:                                              ; preds = %374
  %376 = load %18*, %18** %4, align 8
  %377 = getelementptr inbounds %18, %18* %376, i32 0, i32 1
  %378 = bitcast %20* %377 to i32*
  store i32 2, i32* %378, align 8
  br label %379

379:                                              ; preds = %375
  br label %380

380:                                              ; preds = %379
  br label %447

381:                                              ; preds = %369
  %382 = load i64, i64* %11, align 8
  %383 = add i64 %382, 1
  store i64 %383, i64* %11, align 8
  br label %362

384:                                              ; preds = %362
  br label %385

385:                                              ; preds = %398, %384
  %386 = load i8*, i8** %9, align 8
  %387 = getelementptr inbounds i8, i8* %386, i32 1
  store i8* %387, i8** %9, align 8
  %388 = load i8*, i8** %10, align 8
  %389 = icmp ult i8* %387, %388
  br i1 %389, label %390, label %399

390:                                              ; preds = %385
  %391 = load i8*, i8** %9, align 8
  %392 = load i8, i8* %391, align 1
  %393 = zext i8 %392 to i64
  %394 = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 7), i64 0, i64 %393
  %395 = load i8, i8* %394, align 1
  %396 = icmp ne i8 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %390
  br label %407

398:                                              ; preds = %390
  br label %385

399:                                              ; preds = %385
  %400 = load i8*, i8** %9, align 8
  %401 = load i8*, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 6), align 8
  %402 = ptrtoint i8* %400 to i64
  %403 = ptrtoint i8* %401 to i64
  %404 = sub i64 %402, %403
  %405 = icmp ne i64 %404, 0
  br i1 %405, label %406, label %439

406:                                              ; preds = %399
  br label %407

407:                                              ; preds = %406, %397
  br label %408

408:                                              ; preds = %407
  br label %409

409:                                              ; preds = %408
  %410 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %410) #13
  %411 = load %18*, %18** %4, align 8
  store %18* %411, %18** %27, align 8
  %412 = bitcast %0** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %412) #13
  %413 = load i8*, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 6), align 8
  %414 = load i64, i64* %11, align 8
  %415 = getelementptr inbounds i8, i8* %413, i64 %414
  %416 = load i8*, i8** %9, align 8
  %417 = load i8*, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 6), align 8
  %418 = ptrtoint i8* %416 to i64
  %419 = ptrtoint i8* %417 to i64
  %420 = sub i64 %418, %419
  %421 = load i64, i64* %11, align 8
  %422 = sub i64 %420, %421
  %423 = call %0* @148(i8* %415, i64 %422, i32 0)
  store %0* %423, %0** %28, align 8
  %424 = load %0*, %0** %28, align 8
  %425 = load %18*, %18** %27, align 8
  %426 = getelementptr inbounds %18, %18* %425, i32 0, i32 0
  %427 = bitcast %19* %426 to %0**
  store %0* %424, %0** %427, align 8
  %428 = load %18*, %18** %27, align 8
  %429 = getelementptr inbounds %18, %18* %428, i32 0, i32 1
  %430 = bitcast %20* %429 to i32*
  store i32 5126, i32* %430, align 8
  %431 = bitcast %0** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %431) #13
  %432 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %432) #13
  br label %433

433:                                              ; preds = %409
  br label %434

434:                                              ; preds = %433
  br label %435

435:                                              ; preds = %434
  br label %436

436:                                              ; preds = %435
  %437 = load i8*, i8** %9, align 8
  %438 = getelementptr inbounds i8, i8* %437, i64 1
  store i8* %438, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 6), align 8
  br label %446

439:                                              ; preds = %399
  br label %440

440:                                              ; preds = %439
  %441 = load %18*, %18** %4, align 8
  %442 = getelementptr inbounds %18, %18* %441, i32 0, i32 1
  %443 = bitcast %20* %442 to i32*
  store i32 2, i32* %443, align 8
  br label %444

444:                                              ; preds = %440
  br label %445

445:                                              ; preds = %444
  store i8* null, i8** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 6), align 8
  br label %446

446:                                              ; preds = %445, %436
  br label %447

447:                                              ; preds = %446, %380
  %448 = load %0*, %0** %6, align 8
  %449 = getelementptr inbounds %0, %0* %448, i32 0, i32 3
  %450 = getelementptr inbounds [1 x i8], [1 x i8]* %449, i32 0, i32 0
  store i8* %450, i8** %7, align 8
  br label %451

451:                                              ; preds = %455, %447
  %452 = load i8*, i8** %7, align 8
  %453 = load i8*, i8** %8, align 8
  %454 = icmp ult i8* %452, %453
  br i1 %454, label %455, label %461

455:                                              ; preds = %451
  %456 = load i8*, i8** %7, align 8
  %457 = getelementptr inbounds i8, i8* %456, i32 1
  store i8* %457, i8** %7, align 8
  %458 = load i8, i8* %456, align 1
  %459 = zext i8 %458 to i64
  %460 = getelementptr inbounds [256 x i8], [256 x i8]* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 7), i64 0, i64 %459
  store i8 0, i8* %460, align 1
  br label %451

461:                                              ; preds = %451
  store i32 0, i32* %24, align 4
  br label %462

462:                                              ; preds = %461, %341, %270
  %463 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %463) #13
  %464 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %464) #13
  %465 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %465) #13
  %466 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %466) #13
  %467 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %467) #13
  %468 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %468) #13
  %469 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %469) #13
  %470 = load i32, i32* %24, align 4
  switch i32 %470, label %472 [
    i32 0, label %471
    i32 1, label %471
  ]

471:                                              ; preds = %462, %462
  ret void

472:                                              ; preds = %462
  unreachable
}

declare dso_local void @_zval_ptr_dtor(%18*) #1

; Function Attrs: nounwind uwtable
define dso_local i8* @php_strtoupper(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load i8*, i8** %3, align 8
  store i8* %11, i8** %5, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = load i64, i64* %4, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  store i8* %14, i8** %6, align 8
  br label %15

15:                                               ; preds = %19, %2
  %16 = load i8*, i8** %5, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = icmp ult i8* %16, %17
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #13
  %21 = call i32** @__ctype_toupper_loc() #17
  %22 = load i32*, i32** %21, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %22, i64 %26
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %7, align 4
  %29 = load i32, i32* %7, align 4
  store i32 %29, i32* %8, align 4
  %30 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #13
  %31 = load i32, i32* %8, align 4
  %32 = trunc i32 %31 to i8
  %33 = load i8*, i8** %5, align 8
  store i8 %32, i8* %33, align 1
  %34 = load i8*, i8** %5, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %5, align 8
  br label %15

36:                                               ; preds = %15
  %37 = load i8*, i8** %3, align 8
  %38 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #13
  %39 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #13
  ret i8* %37
}

; Function Attrs: nounwind readnone
declare dso_local i32** @__ctype_toupper_loc() #9

; Function Attrs: nounwind uwtable
define dso_local %0* @php_string_toupper(%0* %0) #0 {
  %2 = alloca %0*, align 8
  %3 = alloca %0*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %0*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %0* %0, %0** %3, align 8
  %11 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = load %0*, %0** %3, align 8
  %14 = getelementptr inbounds %0, %0* %13, i32 0, i32 3
  %15 = getelementptr inbounds [1 x i8], [1 x i8]* %14, i32 0, i32 0
  store i8* %15, i8** %4, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = load %0*, %0** %3, align 8
  %18 = getelementptr inbounds %0, %0* %17, i32 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %5, align 8
  br label %21

21:                                               ; preds = %103, %1
  %22 = load i8*, i8** %4, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = icmp ult i8* %22, %23
  br i1 %24, label %25, label %106

25:                                               ; preds = %21
  %26 = call i16** @__ctype_b_loc() #17
  %27 = load i16*, i16** %26, align 8
  %28 = load i8*, i8** %4, align 8
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %27, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 512
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %103

37:                                               ; preds = %25
  %38 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  %39 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = load %0*, %0** %3, align 8
  %41 = getelementptr inbounds %0, %0* %40, i32 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = call %0* @162(i64 %42, i32 0)
  store %0* %43, %0** %7, align 8
  %44 = load i8*, i8** %4, align 8
  %45 = load %0*, %0** %3, align 8
  %46 = getelementptr inbounds %0, %0* %45, i32 0, i32 3
  %47 = getelementptr inbounds [1 x i8], [1 x i8]* %46, i32 0, i32 0
  %48 = icmp ne i8* %44, %47
  br i1 %48, label %49, label %63

49:                                               ; preds = %37
  %50 = load %0*, %0** %7, align 8
  %51 = getelementptr inbounds %0, %0* %50, i32 0, i32 3
  %52 = getelementptr inbounds [1 x i8], [1 x i8]* %51, i32 0, i32 0
  %53 = load %0*, %0** %3, align 8
  %54 = getelementptr inbounds %0, %0* %53, i32 0, i32 3
  %55 = getelementptr inbounds [1 x i8], [1 x i8]* %54, i32 0, i32 0
  %56 = load i8*, i8** %4, align 8
  %57 = load %0*, %0** %3, align 8
  %58 = getelementptr inbounds %0, %0* %57, i32 0, i32 3
  %59 = getelementptr inbounds [1 x i8], [1 x i8]* %58, i32 0, i32 0
  %60 = ptrtoint i8* %56 to i64
  %61 = ptrtoint i8* %59 to i64
  %62 = sub i64 %60, %61
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %55, i64 %62, i1 false)
  br label %63

63:                                               ; preds = %49, %37
  %64 = load i8*, i8** %4, align 8
  %65 = load %0*, %0** %7, align 8
  %66 = getelementptr inbounds %0, %0* %65, i32 0, i32 3
  %67 = getelementptr inbounds [1 x i8], [1 x i8]* %66, i32 0, i32 0
  %68 = load %0*, %0** %3, align 8
  %69 = getelementptr inbounds %0, %0* %68, i32 0, i32 3
  %70 = getelementptr inbounds [1 x i8], [1 x i8]* %69, i32 0, i32 0
  %71 = ptrtoint i8* %67 to i64
  %72 = ptrtoint i8* %70 to i64
  %73 = sub i64 %71, %72
  %74 = getelementptr inbounds i8, i8* %64, i64 %73
  store i8* %74, i8** %6, align 8
  br label %75

75:                                               ; preds = %79, %63
  %76 = load i8*, i8** %4, align 8
  %77 = load i8*, i8** %5, align 8
  %78 = icmp ult i8* %76, %77
  br i1 %78, label %79, label %98

79:                                               ; preds = %75
  %80 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %80) #13
  %81 = call i32** @__ctype_toupper_loc() #17
  %82 = load i32*, i32** %81, align 8
  %83 = load i8*, i8** %4, align 8
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %82, i64 %86
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %8, align 4
  %89 = load i32, i32* %8, align 4
  store i32 %89, i32* %9, align 4
  %90 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %90) #13
  %91 = load i32, i32* %9, align 4
  %92 = trunc i32 %91 to i8
  %93 = load i8*, i8** %6, align 8
  store i8 %92, i8* %93, align 1
  %94 = load i8*, i8** %6, align 8
  %95 = getelementptr inbounds i8, i8* %94, i32 1
  store i8* %95, i8** %6, align 8
  %96 = load i8*, i8** %4, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %4, align 8
  br label %75

98:                                               ; preds = %75
  %99 = load i8*, i8** %6, align 8
  store i8 0, i8* %99, align 1
  %100 = load %0*, %0** %7, align 8
  store %0* %100, %0** %2, align 8
  store i32 1, i32* %10, align 4
  %101 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #13
  %102 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #13
  br label %109

103:                                              ; preds = %25
  %104 = load i8*, i8** %4, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %4, align 8
  br label %21

106:                                              ; preds = %21
  %107 = load %0*, %0** %3, align 8
  %108 = call %0* @163(%0* %107)
  store %0* %108, %0** %2, align 8
  store i32 1, i32* %10, align 4
  br label %109

109:                                              ; preds = %106, %98
  %110 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110) #13
  %111 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #13
  %112 = load %0*, %0** %2, align 8
  ret %0* %112
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #9

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @162(i64 %0, i32 %1) #5 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %0*, align 8
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #13
  %7 = load i32, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = load i64, i64* %3, align 8
  %11 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %10
  %12 = add i64 %11, 1
  %13 = add i64 %12, 8
  %14 = sub i64 %13, 1
  %15 = and i64 %14, -8
  %16 = call noalias i8* @__zend_malloc(i64 %15) #16
  br label %25

17:                                               ; preds = %2
  %18 = load i64, i64* %3, align 8
  %19 = add i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), %18
  %20 = add i64 %19, 1
  %21 = add i64 %20, 8
  %22 = sub i64 %21, 1
  %23 = and i64 %22, -8
  %24 = call noalias i8* @_emalloc(i64 %23) #16
  br label %25

25:                                               ; preds = %17, %9
  %26 = phi i8* [ %16, %9 ], [ %24, %17 ]
  %27 = bitcast i8* %26 to %0*
  store %0* %27, %0** %5, align 8
  %28 = load %0*, %0** %5, align 8
  %29 = getelementptr inbounds %0, %0* %28, i32 0, i32 0
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 0
  store i32 1, i32* %30, align 8
  %31 = load i32, i32* %4, align 4
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i32 1, i32 0
  %35 = shl i32 %34, 8
  %36 = or i32 6, %35
  %37 = load %0*, %0** %5, align 8
  %38 = getelementptr inbounds %0, %0* %37, i32 0, i32 0
  %39 = getelementptr inbounds %1, %1* %38, i32 0, i32 1
  %40 = bitcast %2* %39 to i32*
  store i32 %36, i32* %40, align 4
  %41 = load %0*, %0** %5, align 8
  call void @168(%0* %41)
  %42 = load i64, i64* %3, align 8
  %43 = load %0*, %0** %5, align 8
  %44 = getelementptr inbounds %0, %0* %43, i32 0, i32 2
  store i64 %42, i64* %44, align 8
  %45 = load %0*, %0** %5, align 8
  %46 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #13
  ret %0* %45
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %0* @163(%0* %0) #5 {
  %2 = alloca %0*, align 8
  store %0* %0, %0** %2, align 8
  %3 = load %0*, %0** %2, align 8
  %4 = getelementptr inbounds %0, %0* %3, i32 0, i32 0
  %5 = getelementptr inbounds %1, %1* %4, i32 0, i32 1
  %6 = bitcast %2* %5 to %52*
  %7 = getelementptr inbounds %52, %52* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = load %0*, %0** %2, align 8
  %14 = getelementptr inbounds %0, %0* %13, i32 0, i32 0
  %15 = getelementptr inbounds %1, %1* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  br label %18

18:                                               ; preds = %12, %1
  %19 = load %0*, %0** %2, align 8
  ret %0* %19
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strtoupper(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %18*, align 8
  %12 = alloca %18*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %21 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13
  store i32 0, i32* %6, align 4
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  store i32 1, i32* %7, align 4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 1, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  %27 = load %14*, %14** %3, align 8
  %28 = getelementptr inbounds %14, %14* %27, i32 0, i32 4
  %29 = getelementptr inbounds %18, %18* %28, i32 0, i32 2
  %30 = bitcast %21* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %9, align 4
  %32 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  store %18* null, %18** %12, align 8
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 0, i32* %13, align 4
  %36 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %37 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %17, align 4
  %38 = load i32, i32* %10, align 4
  %39 = load %18*, %18** %11, align 8
  %40 = load %18*, %18** %12, align 8
  %41 = load i32, i32* %13, align 4
  %42 = load i8*, i8** %14, align 8
  %43 = load i8, i8* %15, align 1
  %44 = load i8, i8* %16, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %9, align 4
  %47 = load i32, i32* %7, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %9, align 4
  %57 = load i32, i32* %8, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %8, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %9, align 4
  %76 = load i32, i32* %7, align 4
  %77 = load i32, i32* %8, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %17, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %10, align 4
  %79 = load %14*, %14** %3, align 8
  %80 = bitcast %14* %79 to %18*
  %81 = getelementptr inbounds %18, %18* %80, i64 4
  store %18* %81, %18** %11, align 8
  %82 = load i32, i32* %10, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %10, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %10, align 4
  %86 = load i32, i32* %7, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %16, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %10, align 4
  %105 = load i32, i32* %7, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %16, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %16, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %10, align 4
  %126 = load i32, i32* %9, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %18*, %18** %11, align 8
  %138 = getelementptr inbounds %18, %18* %137, i32 1
  store %18* %138, %18** %11, align 8
  %139 = load %18*, %18** %11, align 8
  store %18* %139, %18** %12, align 8
  %140 = load %18*, %18** %12, align 8
  %141 = call i32 @143(%18* %140, %0** %5, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 2, i32* %13, align 4
  store i32 4, i32* %17, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %17, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %185

162:                                              ; preds = %153
  %163 = load i32, i32* %17, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %10, align 4
  %167 = load i8*, i8** %14, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %17, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %10, align 4
  %173 = load i8*, i8** %14, align 8
  %174 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %18* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %17, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %10, align 4
  %180 = load i32, i32* %13, align 4
  %181 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %18* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  store i32 1, i32* %18, align 4
  br label %186

185:                                              ; preds = %153
  store i32 0, i32* %18, align 4
  br label %186

186:                                              ; preds = %185, %184
  %187 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %187) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %188 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #13
  %189 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  %190 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #13
  %192 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %192) #13
  %193 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #13
  %194 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = load i32, i32* %18, align 4
  switch i32 %197, label %229 [
    i32 0, label %198
  ]

198:                                              ; preds = %186
  br label %199

199:                                              ; preds = %198
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  %202 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #13
  %203 = load %18*, %18** %4, align 8
  store %18* %203, %18** %19, align 8
  %204 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %204) #13
  %205 = load %0*, %0** %5, align 8
  %206 = call %0* @php_string_toupper(%0* %205)
  store %0* %206, %0** %20, align 8
  %207 = load %0*, %0** %20, align 8
  %208 = load %18*, %18** %19, align 8
  %209 = getelementptr inbounds %18, %18* %208, i32 0, i32 0
  %210 = bitcast %19* %209 to %0**
  store %0* %207, %0** %210, align 8
  %211 = load %0*, %0** %20, align 8
  %212 = getelementptr inbounds %0, %0* %211, i32 0, i32 0
  %213 = getelementptr inbounds %1, %1* %212, i32 0, i32 1
  %214 = bitcast %2* %213 to %52*
  %215 = getelementptr inbounds %52, %52* %214, i32 0, i32 1
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = and i32 %217, 2
  %219 = icmp ne i32 %218, 0
  %220 = zext i1 %219 to i64
  %221 = select i1 %219, i32 6, i32 5126
  %222 = load %18*, %18** %19, align 8
  %223 = getelementptr inbounds %18, %18* %222, i32 0, i32 1
  %224 = bitcast %20* %223 to i32*
  store i32 %221, i32* %224, align 8
  %225 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #13
  %226 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %226) #13
  br label %227

227:                                              ; preds = %201
  br label %228

228:                                              ; preds = %227
  store i32 1, i32* %18, align 4
  br label %229

229:                                              ; preds = %228, %186
  %230 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #13
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i8* @php_strtolower(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load i8*, i8** %3, align 8
  store i8* %11, i8** %5, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = load i64, i64* %4, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  store i8* %14, i8** %6, align 8
  br label %15

15:                                               ; preds = %19, %2
  %16 = load i8*, i8** %5, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = icmp ult i8* %16, %17
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #13
  %21 = call i32** @__ctype_tolower_loc() #17
  %22 = load i32*, i32** %21, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %22, i64 %26
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %7, align 4
  %29 = load i32, i32* %7, align 4
  store i32 %29, i32* %8, align 4
  %30 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #13
  %31 = load i32, i32* %8, align 4
  %32 = trunc i32 %31 to i8
  %33 = load i8*, i8** %5, align 8
  store i8 %32, i8* %33, align 1
  %34 = load i8*, i8** %5, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %5, align 8
  br label %15

36:                                               ; preds = %15
  %37 = load i8*, i8** %3, align 8
  %38 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #13
  %39 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #13
  ret i8* %37
}

; Function Attrs: nounwind readnone
declare dso_local i32** @__ctype_tolower_loc() #9

; Function Attrs: nounwind uwtable
define dso_local %0* @php_string_tolower(%0* %0) #0 {
  %2 = alloca %0*, align 8
  %3 = alloca %0*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %0*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %0* %0, %0** %3, align 8
  %11 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = load %0*, %0** %3, align 8
  %14 = getelementptr inbounds %0, %0* %13, i32 0, i32 3
  %15 = getelementptr inbounds [1 x i8], [1 x i8]* %14, i32 0, i32 0
  store i8* %15, i8** %4, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = load %0*, %0** %3, align 8
  %18 = getelementptr inbounds %0, %0* %17, i32 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  store i8* %20, i8** %5, align 8
  br label %21

21:                                               ; preds = %103, %1
  %22 = load i8*, i8** %4, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = icmp ult i8* %22, %23
  br i1 %24, label %25, label %106

25:                                               ; preds = %21
  %26 = call i16** @__ctype_b_loc() #17
  %27 = load i16*, i16** %26, align 8
  %28 = load i8*, i8** %4, align 8
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %27, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 256
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %103

37:                                               ; preds = %25
  %38 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  %39 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = load %0*, %0** %3, align 8
  %41 = getelementptr inbounds %0, %0* %40, i32 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = call %0* @162(i64 %42, i32 0)
  store %0* %43, %0** %7, align 8
  %44 = load i8*, i8** %4, align 8
  %45 = load %0*, %0** %3, align 8
  %46 = getelementptr inbounds %0, %0* %45, i32 0, i32 3
  %47 = getelementptr inbounds [1 x i8], [1 x i8]* %46, i32 0, i32 0
  %48 = icmp ne i8* %44, %47
  br i1 %48, label %49, label %63

49:                                               ; preds = %37
  %50 = load %0*, %0** %7, align 8
  %51 = getelementptr inbounds %0, %0* %50, i32 0, i32 3
  %52 = getelementptr inbounds [1 x i8], [1 x i8]* %51, i32 0, i32 0
  %53 = load %0*, %0** %3, align 8
  %54 = getelementptr inbounds %0, %0* %53, i32 0, i32 3
  %55 = getelementptr inbounds [1 x i8], [1 x i8]* %54, i32 0, i32 0
  %56 = load i8*, i8** %4, align 8
  %57 = load %0*, %0** %3, align 8
  %58 = getelementptr inbounds %0, %0* %57, i32 0, i32 3
  %59 = getelementptr inbounds [1 x i8], [1 x i8]* %58, i32 0, i32 0
  %60 = ptrtoint i8* %56 to i64
  %61 = ptrtoint i8* %59 to i64
  %62 = sub i64 %60, %61
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %55, i64 %62, i1 false)
  br label %63

63:                                               ; preds = %49, %37
  %64 = load i8*, i8** %4, align 8
  %65 = load %0*, %0** %7, align 8
  %66 = getelementptr inbounds %0, %0* %65, i32 0, i32 3
  %67 = getelementptr inbounds [1 x i8], [1 x i8]* %66, i32 0, i32 0
  %68 = load %0*, %0** %3, align 8
  %69 = getelementptr inbounds %0, %0* %68, i32 0, i32 3
  %70 = getelementptr inbounds [1 x i8], [1 x i8]* %69, i32 0, i32 0
  %71 = ptrtoint i8* %67 to i64
  %72 = ptrtoint i8* %70 to i64
  %73 = sub i64 %71, %72
  %74 = getelementptr inbounds i8, i8* %64, i64 %73
  store i8* %74, i8** %6, align 8
  br label %75

75:                                               ; preds = %79, %63
  %76 = load i8*, i8** %4, align 8
  %77 = load i8*, i8** %5, align 8
  %78 = icmp ult i8* %76, %77
  br i1 %78, label %79, label %98

79:                                               ; preds = %75
  %80 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %80) #13
  %81 = call i32** @__ctype_tolower_loc() #17
  %82 = load i32*, i32** %81, align 8
  %83 = load i8*, i8** %4, align 8
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %82, i64 %86
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %8, align 4
  %89 = load i32, i32* %8, align 4
  store i32 %89, i32* %9, align 4
  %90 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %90) #13
  %91 = load i32, i32* %9, align 4
  %92 = trunc i32 %91 to i8
  %93 = load i8*, i8** %6, align 8
  store i8 %92, i8* %93, align 1
  %94 = load i8*, i8** %6, align 8
  %95 = getelementptr inbounds i8, i8* %94, i32 1
  store i8* %95, i8** %6, align 8
  %96 = load i8*, i8** %4, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %4, align 8
  br label %75

98:                                               ; preds = %75
  %99 = load i8*, i8** %6, align 8
  store i8 0, i8* %99, align 1
  %100 = load %0*, %0** %7, align 8
  store %0* %100, %0** %2, align 8
  store i32 1, i32* %10, align 4
  %101 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #13
  %102 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #13
  br label %109

103:                                              ; preds = %25
  %104 = load i8*, i8** %4, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %4, align 8
  br label %21

106:                                              ; preds = %21
  %107 = load %0*, %0** %3, align 8
  %108 = call %0* @163(%0* %107)
  store %0* %108, %0** %2, align 8
  store i32 1, i32* %10, align 4
  br label %109

109:                                              ; preds = %106, %98
  %110 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110) #13
  %111 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #13
  %112 = load %0*, %0** %2, align 8
  ret %0* %112
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strtolower(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %18*, align 8
  %12 = alloca %18*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %21 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13
  store i32 0, i32* %6, align 4
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  store i32 1, i32* %7, align 4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 1, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  %27 = load %14*, %14** %3, align 8
  %28 = getelementptr inbounds %14, %14* %27, i32 0, i32 4
  %29 = getelementptr inbounds %18, %18* %28, i32 0, i32 2
  %30 = bitcast %21* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %9, align 4
  %32 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  store %18* null, %18** %12, align 8
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 0, i32* %13, align 4
  %36 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %37 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %17, align 4
  %38 = load i32, i32* %10, align 4
  %39 = load %18*, %18** %11, align 8
  %40 = load %18*, %18** %12, align 8
  %41 = load i32, i32* %13, align 4
  %42 = load i8*, i8** %14, align 8
  %43 = load i8, i8* %15, align 1
  %44 = load i8, i8* %16, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %9, align 4
  %47 = load i32, i32* %7, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %9, align 4
  %57 = load i32, i32* %8, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %8, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %9, align 4
  %76 = load i32, i32* %7, align 4
  %77 = load i32, i32* %8, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %17, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %10, align 4
  %79 = load %14*, %14** %3, align 8
  %80 = bitcast %14* %79 to %18*
  %81 = getelementptr inbounds %18, %18* %80, i64 4
  store %18* %81, %18** %11, align 8
  %82 = load i32, i32* %10, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %10, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %10, align 4
  %86 = load i32, i32* %7, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %16, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %10, align 4
  %105 = load i32, i32* %7, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %16, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %16, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %10, align 4
  %126 = load i32, i32* %9, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %18*, %18** %11, align 8
  %138 = getelementptr inbounds %18, %18* %137, i32 1
  store %18* %138, %18** %11, align 8
  %139 = load %18*, %18** %11, align 8
  store %18* %139, %18** %12, align 8
  %140 = load %18*, %18** %12, align 8
  %141 = call i32 @143(%18* %140, %0** %5, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 2, i32* %13, align 4
  store i32 4, i32* %17, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %17, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %185

162:                                              ; preds = %153
  %163 = load i32, i32* %17, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %10, align 4
  %167 = load i8*, i8** %14, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %17, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %10, align 4
  %173 = load i8*, i8** %14, align 8
  %174 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %18* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %17, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %10, align 4
  %180 = load i32, i32* %13, align 4
  %181 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %18* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  store i32 1, i32* %18, align 4
  br label %186

185:                                              ; preds = %153
  store i32 0, i32* %18, align 4
  br label %186

186:                                              ; preds = %185, %184
  %187 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %187) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %188 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #13
  %189 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  %190 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #13
  %192 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %192) #13
  %193 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #13
  %194 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = load i32, i32* %18, align 4
  switch i32 %197, label %229 [
    i32 0, label %198
  ]

198:                                              ; preds = %186
  br label %199

199:                                              ; preds = %198
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  %202 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #13
  %203 = load %18*, %18** %4, align 8
  store %18* %203, %18** %19, align 8
  %204 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %204) #13
  %205 = load %0*, %0** %5, align 8
  %206 = call %0* @php_string_tolower(%0* %205)
  store %0* %206, %0** %20, align 8
  %207 = load %0*, %0** %20, align 8
  %208 = load %18*, %18** %19, align 8
  %209 = getelementptr inbounds %18, %18* %208, i32 0, i32 0
  %210 = bitcast %19* %209 to %0**
  store %0* %207, %0** %210, align 8
  %211 = load %0*, %0** %20, align 8
  %212 = getelementptr inbounds %0, %0* %211, i32 0, i32 0
  %213 = getelementptr inbounds %1, %1* %212, i32 0, i32 1
  %214 = bitcast %2* %213 to %52*
  %215 = getelementptr inbounds %52, %52* %214, i32 0, i32 1
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = and i32 %217, 2
  %219 = icmp ne i32 %218, 0
  %220 = zext i1 %219 to i64
  %221 = select i1 %219, i32 6, i32 5126
  %222 = load %18*, %18** %19, align 8
  %223 = getelementptr inbounds %18, %18* %222, i32 0, i32 1
  %224 = bitcast %20* %223 to i32*
  store i32 %221, i32* %224, align 8
  %225 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #13
  %226 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %226) #13
  br label %227

227:                                              ; preds = %201
  br label %228

228:                                              ; preds = %227
  store i32 1, i32* %18, align 4
  br label %229

229:                                              ; preds = %228, %186
  %230 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #13
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local %0* @php_basename(i8* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca %0*, align 8
  %16 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %17 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #13
  %23 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load i8*, i8** %5, align 8
  store i8* %24, i8** %11, align 8
  store i8* %24, i8** %10, align 8
  store i8* %24, i8** %9, align 8
  %25 = load i64, i64* %6, align 8
  store i64 %25, i64* %13, align 8
  store i32 0, i32* %14, align 4
  br label %26

26:                                               ; preds = %73, %4
  %27 = load i64, i64* %13, align 8
  %28 = icmp ugt i64 %27, 0
  br i1 %28, label %29, label %80

29:                                               ; preds = %26
  %30 = load i8*, i8** %9, align 8
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  br label %39

35:                                               ; preds = %29
  %36 = load i8*, i8** %9, align 8
  %37 = load i64, i64* %13, align 8
  %38 = call i32 @mblen(i8* %36, i64 %37) #13
  br label %39

39:                                               ; preds = %35, %34
  %40 = phi i32 [ 1, %34 ], [ %38, %35 ]
  %41 = sext i32 %40 to i64
  store i64 %41, i64* %12, align 8
  %42 = load i64, i64* %12, align 8
  switch i64 %42, label %67 [
    i64 -2, label %43
    i64 -1, label %43
    i64 0, label %48
    i64 1, label %49
  ]

43:                                               ; preds = %39, %39
  store i64 1, i64* %12, align 8
  %44 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  %45 = call i32 @mblen(i8* null, i64 0) #13
  store i32 %45, i32* %16, align 4
  %46 = load i32, i32* %16, align 4
  %47 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %47) #13
  br label %73

48:                                               ; preds = %39
  br label %81

49:                                               ; preds = %39
  %50 = load i8*, i8** %9, align 8
  %51 = load i8, i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp eq i32 %52, 47
  br i1 %53, label %54, label %60

54:                                               ; preds = %49
  %55 = load i32, i32* %14, align 4
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %54
  store i32 0, i32* %14, align 4
  %58 = load i8*, i8** %9, align 8
  store i8* %58, i8** %11, align 8
  br label %59

59:                                               ; preds = %57, %54
  br label %66

60:                                               ; preds = %49
  %61 = load i32, i32* %14, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = load i8*, i8** %9, align 8
  store i8* %64, i8** %10, align 8
  store i32 1, i32* %14, align 4
  br label %65

65:                                               ; preds = %63, %60
  br label %66

66:                                               ; preds = %65, %59
  br label %73

67:                                               ; preds = %39
  %68 = load i32, i32* %14, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = load i8*, i8** %9, align 8
  store i8* %71, i8** %10, align 8
  store i32 1, i32* %14, align 4
  br label %72

72:                                               ; preds = %70, %67
  br label %73

73:                                               ; preds = %72, %66, %43
  %74 = load i64, i64* %12, align 8
  %75 = load i8*, i8** %9, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %74
  store i8* %76, i8** %9, align 8
  %77 = load i64, i64* %12, align 8
  %78 = load i64, i64* %13, align 8
  %79 = sub i64 %78, %77
  store i64 %79, i64* %13, align 8
  br label %26

80:                                               ; preds = %26
  br label %81

81:                                               ; preds = %80, %48
  %82 = load i32, i32* %14, align 4
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = load i8*, i8** %9, align 8
  store i8* %85, i8** %11, align 8
  br label %86

86:                                               ; preds = %84, %81
  %87 = load i8*, i8** %7, align 8
  %88 = icmp ne i8* %87, null
  br i1 %88, label %89, label %111

89:                                               ; preds = %86
  %90 = load i64, i64* %8, align 8
  %91 = load i8*, i8** %11, align 8
  %92 = load i8*, i8** %10, align 8
  %93 = ptrtoint i8* %91 to i64
  %94 = ptrtoint i8* %92 to i64
  %95 = sub i64 %93, %94
  %96 = icmp ult i64 %90, %95
  br i1 %96, label %97, label %111

97:                                               ; preds = %89
  %98 = load i8*, i8** %11, align 8
  %99 = load i64, i64* %8, align 8
  %100 = sub i64 0, %99
  %101 = getelementptr inbounds i8, i8* %98, i64 %100
  %102 = load i8*, i8** %7, align 8
  %103 = load i64, i64* %8, align 8
  %104 = call i32 @memcmp(i8* %101, i8* %102, i64 %103) #14
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %111

106:                                              ; preds = %97
  %107 = load i64, i64* %8, align 8
  %108 = load i8*, i8** %11, align 8
  %109 = sub i64 0, %107
  %110 = getelementptr inbounds i8, i8* %108, i64 %109
  store i8* %110, i8** %11, align 8
  br label %111

111:                                              ; preds = %106, %97, %89, %86
  %112 = load i8*, i8** %11, align 8
  %113 = load i8*, i8** %10, align 8
  %114 = ptrtoint i8* %112 to i64
  %115 = ptrtoint i8* %113 to i64
  %116 = sub i64 %114, %115
  store i64 %116, i64* %6, align 8
  %117 = load i8*, i8** %10, align 8
  %118 = load i64, i64* %6, align 8
  %119 = call %0* @148(i8* %117, i64 %118, i32 0)
  store %0* %119, %0** %15, align 8
  %120 = load %0*, %0** %15, align 8
  %121 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %121) #13
  %122 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %122) #13
  %123 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #13
  %124 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #13
  %125 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #13
  %126 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #13
  %127 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #13
  ret %0* %120
}

; Function Attrs: nounwind
declare dso_local i32 @mblen(i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #6

; Function Attrs: nounwind uwtable
define hidden void @zif_basename(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %24 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  store i8* null, i8** %6, align 8
  %26 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  store i64 0, i64* %8, align 8
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  store i32 0, i32* %9, align 4
  %30 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  store i32 1, i32* %10, align 4
  %31 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 2, i32* %11, align 4
  %32 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = load %14*, %14** %3, align 8
  %34 = getelementptr inbounds %14, %14* %33, i32 0, i32 4
  %35 = getelementptr inbounds %18, %18* %34, i32 0, i32 2
  %36 = bitcast %21* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %12, align 4
  %38 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  %39 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store %18* null, %18** %15, align 8
  %41 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 0, i32* %16, align 4
  %42 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %43 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %20, align 4
  %44 = load i32, i32* %13, align 4
  %45 = load %18*, %18** %14, align 8
  %46 = load %18*, %18** %15, align 8
  %47 = load i32, i32* %16, align 4
  %48 = load i8*, i8** %17, align 8
  %49 = load i8, i8* %18, align 1
  %50 = load i8, i8* %19, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %12, align 4
  %53 = load i32, i32* %10, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %12, align 4
  %63 = load i32, i32* %11, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %11, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %12, align 4
  %82 = load i32, i32* %10, align 4
  %83 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %20, align 4
  br label %229

84:                                               ; preds = %71, %61
  store i32 0, i32* %13, align 4
  %85 = load %14*, %14** %3, align 8
  %86 = bitcast %14* %85 to %18*
  %87 = getelementptr inbounds %18, %18* %86, i64 4
  store %18* %87, %18** %14, align 8
  %88 = load i32, i32* %13, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %13, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %13, align 4
  %92 = load i32, i32* %10, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %19, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %13, align 4
  %111 = load i32, i32* %10, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %19, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %19, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %13, align 4
  %132 = load i32, i32* %12, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %229

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %18*, %18** %14, align 8
  %144 = getelementptr inbounds %18, %18* %143, i32 1
  store %18* %144, %18** %14, align 8
  %145 = load %18*, %18** %14, align 8
  store %18* %145, %18** %15, align 8
  %146 = load %18*, %18** %15, align 8
  %147 = call i32 @151(%18* %146, i8** %5, i64* %7, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %229

157:                                              ; preds = %142
  store i8 1, i8* %19, align 1
  %158 = load i32, i32* %13, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %13, align 4
  br label %160

160:                                              ; preds = %157
  %161 = load i32, i32* %13, align 4
  %162 = load i32, i32* %10, align 4
  %163 = icmp sle i32 %161, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = load i8, i8* %19, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %166, 1
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi i1 [ true, %160 ], [ %167, %164 ]
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %168
  unreachable

176:                                              ; preds = %168
  br label %177

177:                                              ; preds = %176
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %13, align 4
  %181 = load i32, i32* %10, align 4
  %182 = icmp sgt i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %19, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 0
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  %198 = load i8, i8* %19, align 1
  %199 = icmp ne i8 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %197
  %201 = load i32, i32* %13, align 4
  %202 = load i32, i32* %12, align 4
  %203 = icmp sgt i32 %201, %202
  %204 = xor i1 %203, true
  %205 = xor i1 %204, true
  %206 = zext i1 %205 to i32
  %207 = sext i32 %206 to i64
  %208 = call i64 @llvm.expect.i64(i64 %207, i64 0)
  %209 = icmp ne i64 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %200
  br label %229

211:                                              ; preds = %200
  br label %212

212:                                              ; preds = %211, %197
  %213 = load %18*, %18** %14, align 8
  %214 = getelementptr inbounds %18, %18* %213, i32 1
  store %18* %214, %18** %14, align 8
  %215 = load %18*, %18** %14, align 8
  store %18* %215, %18** %15, align 8
  %216 = load %18*, %18** %15, align 8
  %217 = call i32 @151(%18* %216, i8** %6, i64* %8, i32 0)
  %218 = icmp ne i32 %217, 0
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i32
  %223 = sext i32 %222 to i64
  %224 = call i64 @llvm.expect.i64(i64 %223, i64 0)
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %212
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %229

227:                                              ; preds = %212
  br label %228

228:                                              ; preds = %227
  br label %229

229:                                              ; preds = %228, %226, %210, %156, %140, %80
  %230 = load i32, i32* %20, align 4
  %231 = icmp ne i32 %230, 0
  %232 = xor i1 %231, true
  %233 = xor i1 %232, true
  %234 = zext i1 %233 to i32
  %235 = sext i32 %234 to i64
  %236 = call i64 @llvm.expect.i64(i64 %235, i64 0)
  %237 = icmp ne i64 %236, 0
  br i1 %237, label %238, label %261

238:                                              ; preds = %229
  %239 = load i32, i32* %20, align 4
  %240 = icmp eq i32 %239, 2
  br i1 %240, label %241, label %244

241:                                              ; preds = %238
  %242 = load i32, i32* %13, align 4
  %243 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %242, i8* %243)
  br label %260

244:                                              ; preds = %238
  %245 = load i32, i32* %20, align 4
  %246 = icmp eq i32 %245, 3
  br i1 %246, label %247, label %251

247:                                              ; preds = %244
  %248 = load i32, i32* %13, align 4
  %249 = load i8*, i8** %17, align 8
  %250 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %248, i8* %249, %18* %250)
  br label %259

251:                                              ; preds = %244
  %252 = load i32, i32* %20, align 4
  %253 = icmp eq i32 %252, 4
  br i1 %253, label %254, label %258

254:                                              ; preds = %251
  %255 = load i32, i32* %13, align 4
  %256 = load i32, i32* %16, align 4
  %257 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %255, i32 %256, %18* %257)
  br label %258

258:                                              ; preds = %254, %251
  br label %259

259:                                              ; preds = %258, %247
  br label %260

260:                                              ; preds = %259, %241
  store i32 1, i32* %21, align 4
  br label %262

261:                                              ; preds = %229
  store i32 0, i32* %21, align 4
  br label %262

262:                                              ; preds = %261, %260
  %263 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %264 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #13
  %265 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %265) #13
  %266 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %266) #13
  %267 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #13
  %268 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %268) #13
  %269 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #13
  %270 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %270) #13
  %271 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #13
  %272 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #13
  %273 = load i32, i32* %21, align 4
  switch i32 %273, label %308 [
    i32 0, label %274
  ]

274:                                              ; preds = %262
  br label %275

275:                                              ; preds = %274
  br label %276

276:                                              ; preds = %275
  br label %277

277:                                              ; preds = %276
  %278 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %278) #13
  %279 = load %18*, %18** %4, align 8
  store %18* %279, %18** %22, align 8
  %280 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %280) #13
  %281 = load i8*, i8** %5, align 8
  %282 = load i64, i64* %7, align 8
  %283 = load i8*, i8** %6, align 8
  %284 = load i64, i64* %8, align 8
  %285 = call %0* @php_basename(i8* %281, i64 %282, i8* %283, i64 %284)
  store %0* %285, %0** %23, align 8
  %286 = load %0*, %0** %23, align 8
  %287 = load %18*, %18** %22, align 8
  %288 = getelementptr inbounds %18, %18* %287, i32 0, i32 0
  %289 = bitcast %19* %288 to %0**
  store %0* %286, %0** %289, align 8
  %290 = load %0*, %0** %23, align 8
  %291 = getelementptr inbounds %0, %0* %290, i32 0, i32 0
  %292 = getelementptr inbounds %1, %1* %291, i32 0, i32 1
  %293 = bitcast %2* %292 to %52*
  %294 = getelementptr inbounds %52, %52* %293, i32 0, i32 1
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i32
  %297 = and i32 %296, 2
  %298 = icmp ne i32 %297, 0
  %299 = zext i1 %298 to i64
  %300 = select i1 %298, i32 6, i32 5126
  %301 = load %18*, %18** %22, align 8
  %302 = getelementptr inbounds %18, %18* %301, i32 0, i32 1
  %303 = bitcast %20* %302 to i32*
  store i32 %300, i32* %303, align 8
  %304 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %304) #13
  %305 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305) #13
  br label %306

306:                                              ; preds = %277
  br label %307

307:                                              ; preds = %306
  store i32 1, i32* %21, align 4
  br label %308

308:                                              ; preds = %307, %262
  %309 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %309) #13
  %310 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %310) #13
  %311 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %311) #13
  %312 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %312) #13
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i64 @php_dirname(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64 @zend_dirname(i8* %5, i64 %6)
  ret i64 %7
}

declare dso_local i64 @zend_dirname(i8*, i64) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_dirname(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %0*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %24 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  store i64 1, i64* %8, align 8
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  store i32 0, i32* %9, align 4
  %30 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  store i32 1, i32* %10, align 4
  %31 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 2, i32* %11, align 4
  %32 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = load %14*, %14** %3, align 8
  %34 = getelementptr inbounds %14, %14* %33, i32 0, i32 4
  %35 = getelementptr inbounds %18, %18* %34, i32 0, i32 2
  %36 = bitcast %21* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %12, align 4
  %38 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  %39 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store %18* null, %18** %15, align 8
  %41 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 0, i32* %16, align 4
  %42 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %43 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %20, align 4
  %44 = load i32, i32* %13, align 4
  %45 = load %18*, %18** %14, align 8
  %46 = load %18*, %18** %15, align 8
  %47 = load i32, i32* %16, align 4
  %48 = load i8*, i8** %17, align 8
  %49 = load i8, i8* %18, align 1
  %50 = load i8, i8* %19, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %12, align 4
  %53 = load i32, i32* %10, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %12, align 4
  %63 = load i32, i32* %11, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %11, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %12, align 4
  %82 = load i32, i32* %10, align 4
  %83 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %20, align 4
  br label %229

84:                                               ; preds = %71, %61
  store i32 0, i32* %13, align 4
  %85 = load %14*, %14** %3, align 8
  %86 = bitcast %14* %85 to %18*
  %87 = getelementptr inbounds %18, %18* %86, i64 4
  store %18* %87, %18** %14, align 8
  %88 = load i32, i32* %13, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %13, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %13, align 4
  %92 = load i32, i32* %10, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %19, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %13, align 4
  %111 = load i32, i32* %10, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %19, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %19, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %13, align 4
  %132 = load i32, i32* %12, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %229

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %18*, %18** %14, align 8
  %144 = getelementptr inbounds %18, %18* %143, i32 1
  store %18* %144, %18** %14, align 8
  %145 = load %18*, %18** %14, align 8
  store %18* %145, %18** %15, align 8
  %146 = load %18*, %18** %15, align 8
  %147 = call i32 @151(%18* %146, i8** %5, i64* %6, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %229

157:                                              ; preds = %142
  store i8 1, i8* %19, align 1
  %158 = load i32, i32* %13, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %13, align 4
  br label %160

160:                                              ; preds = %157
  %161 = load i32, i32* %13, align 4
  %162 = load i32, i32* %10, align 4
  %163 = icmp sle i32 %161, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = load i8, i8* %19, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %166, 1
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi i1 [ true, %160 ], [ %167, %164 ]
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %168
  unreachable

176:                                              ; preds = %168
  br label %177

177:                                              ; preds = %176
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %13, align 4
  %181 = load i32, i32* %10, align 4
  %182 = icmp sgt i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %19, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 0
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  %198 = load i8, i8* %19, align 1
  %199 = icmp ne i8 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %197
  %201 = load i32, i32* %13, align 4
  %202 = load i32, i32* %12, align 4
  %203 = icmp sgt i32 %201, %202
  %204 = xor i1 %203, true
  %205 = xor i1 %204, true
  %206 = zext i1 %205 to i32
  %207 = sext i32 %206 to i64
  %208 = call i64 @llvm.expect.i64(i64 %207, i64 0)
  %209 = icmp ne i64 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %200
  br label %229

211:                                              ; preds = %200
  br label %212

212:                                              ; preds = %211, %197
  %213 = load %18*, %18** %14, align 8
  %214 = getelementptr inbounds %18, %18* %213, i32 1
  store %18* %214, %18** %14, align 8
  %215 = load %18*, %18** %14, align 8
  store %18* %215, %18** %15, align 8
  %216 = load %18*, %18** %15, align 8
  %217 = call i32 @147(%18* %216, i64* %8, i8* %18, i32 0, i32 0)
  %218 = icmp ne i32 %217, 0
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i32
  %223 = sext i32 %222 to i64
  %224 = call i64 @llvm.expect.i64(i64 %223, i64 0)
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %212
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %229

227:                                              ; preds = %212
  br label %228

228:                                              ; preds = %227
  br label %229

229:                                              ; preds = %228, %226, %210, %156, %140, %80
  %230 = load i32, i32* %20, align 4
  %231 = icmp ne i32 %230, 0
  %232 = xor i1 %231, true
  %233 = xor i1 %232, true
  %234 = zext i1 %233 to i32
  %235 = sext i32 %234 to i64
  %236 = call i64 @llvm.expect.i64(i64 %235, i64 0)
  %237 = icmp ne i64 %236, 0
  br i1 %237, label %238, label %261

238:                                              ; preds = %229
  %239 = load i32, i32* %20, align 4
  %240 = icmp eq i32 %239, 2
  br i1 %240, label %241, label %244

241:                                              ; preds = %238
  %242 = load i32, i32* %13, align 4
  %243 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %242, i8* %243)
  br label %260

244:                                              ; preds = %238
  %245 = load i32, i32* %20, align 4
  %246 = icmp eq i32 %245, 3
  br i1 %246, label %247, label %251

247:                                              ; preds = %244
  %248 = load i32, i32* %13, align 4
  %249 = load i8*, i8** %17, align 8
  %250 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %248, i8* %249, %18* %250)
  br label %259

251:                                              ; preds = %244
  %252 = load i32, i32* %20, align 4
  %253 = icmp eq i32 %252, 4
  br i1 %253, label %254, label %258

254:                                              ; preds = %251
  %255 = load i32, i32* %13, align 4
  %256 = load i32, i32* %16, align 4
  %257 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %255, i32 %256, %18* %257)
  br label %258

258:                                              ; preds = %254, %251
  br label %259

259:                                              ; preds = %258, %247
  br label %260

260:                                              ; preds = %259, %241
  store i32 1, i32* %21, align 4
  br label %262

261:                                              ; preds = %229
  store i32 0, i32* %21, align 4
  br label %262

262:                                              ; preds = %261, %260
  %263 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %264 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #13
  %265 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %265) #13
  %266 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %266) #13
  %267 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #13
  %268 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %268) #13
  %269 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #13
  %270 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %270) #13
  %271 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #13
  %272 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #13
  %273 = load i32, i32* %21, align 4
  switch i32 %273, label %337 [
    i32 0, label %274
  ]

274:                                              ; preds = %262
  br label %275

275:                                              ; preds = %274
  br label %276

276:                                              ; preds = %275
  %277 = load i8*, i8** %5, align 8
  %278 = load i64, i64* %6, align 8
  %279 = call %0* @148(i8* %277, i64 %278, i32 0)
  store %0* %279, %0** %7, align 8
  %280 = load i64, i64* %8, align 8
  %281 = icmp eq i64 %280, 1
  br i1 %281, label %282, label %290

282:                                              ; preds = %276
  %283 = load %0*, %0** %7, align 8
  %284 = getelementptr inbounds %0, %0* %283, i32 0, i32 3
  %285 = getelementptr inbounds [1 x i8], [1 x i8]* %284, i32 0, i32 0
  %286 = load i64, i64* %6, align 8
  %287 = call i64 @zend_dirname(i8* %285, i64 %286)
  %288 = load %0*, %0** %7, align 8
  %289 = getelementptr inbounds %0, %0* %288, i32 0, i32 2
  store i64 %287, i64* %289, align 8
  br label %320

290:                                              ; preds = %276
  %291 = load i64, i64* %8, align 8
  %292 = icmp slt i64 %291, 1
  br i1 %292, label %293, label %295

293:                                              ; preds = %290
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @79, i32 0, i32 0))
  %294 = load %0*, %0** %7, align 8
  call void @164(%0* %294)
  store i32 1, i32* %21, align 4
  br label %337

295:                                              ; preds = %290
  br label %296

296:                                              ; preds = %316, %295
  %297 = load %0*, %0** %7, align 8
  %298 = getelementptr inbounds %0, %0* %297, i32 0, i32 3
  %299 = getelementptr inbounds [1 x i8], [1 x i8]* %298, i32 0, i32 0
  %300 = load %0*, %0** %7, align 8
  %301 = getelementptr inbounds %0, %0* %300, i32 0, i32 2
  %302 = load i64, i64* %301, align 8
  store i64 %302, i64* %6, align 8
  %303 = call i64 @zend_dirname(i8* %299, i64 %302)
  %304 = load %0*, %0** %7, align 8
  %305 = getelementptr inbounds %0, %0* %304, i32 0, i32 2
  store i64 %303, i64* %305, align 8
  br label %306

306:                                              ; preds = %296
  %307 = load %0*, %0** %7, align 8
  %308 = getelementptr inbounds %0, %0* %307, i32 0, i32 2
  %309 = load i64, i64* %308, align 8
  %310 = load i64, i64* %6, align 8
  %311 = icmp ult i64 %309, %310
  br i1 %311, label %312, label %316

312:                                              ; preds = %306
  %313 = load i64, i64* %8, align 8
  %314 = add nsw i64 %313, -1
  store i64 %314, i64* %8, align 8
  %315 = icmp ne i64 %314, 0
  br label %316

316:                                              ; preds = %312, %306
  %317 = phi i1 [ false, %306 ], [ %315, %312 ]
  br i1 %317, label %296, label %318

318:                                              ; preds = %316
  br label %319

319:                                              ; preds = %318
  br label %320

320:                                              ; preds = %319, %282
  br label %321

321:                                              ; preds = %320
  %322 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %322) #13
  %323 = load %18*, %18** %4, align 8
  store %18* %323, %18** %22, align 8
  %324 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %324) #13
  %325 = load %0*, %0** %7, align 8
  store %0* %325, %0** %23, align 8
  %326 = load %0*, %0** %23, align 8
  %327 = load %18*, %18** %22, align 8
  %328 = getelementptr inbounds %18, %18* %327, i32 0, i32 0
  %329 = bitcast %19* %328 to %0**
  store %0* %326, %0** %329, align 8
  %330 = load %18*, %18** %22, align 8
  %331 = getelementptr inbounds %18, %18* %330, i32 0, i32 1
  %332 = bitcast %20* %331 to i32*
  store i32 5126, i32* %332, align 8
  %333 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %333) #13
  %334 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %334) #13
  br label %335

335:                                              ; preds = %321
  br label %336

336:                                              ; preds = %335
  store i32 1, i32* %21, align 4
  br label %337

337:                                              ; preds = %336, %293, %262
  %338 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %338) #13
  %339 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %339) #13
  %340 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %340) #13
  %341 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %341) #13
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @164(%0* %0) #5 {
  %2 = alloca %0*, align 8
  store %0* %0, %0** %2, align 8
  %3 = load %0*, %0** %2, align 8
  %4 = getelementptr inbounds %0, %0* %3, i32 0, i32 0
  %5 = getelementptr inbounds %1, %1* %4, i32 0, i32 1
  %6 = bitcast %2* %5 to %52*
  %7 = getelementptr inbounds %52, %52* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %43, label %12

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12
  %14 = load %0*, %0** %2, align 8
  %15 = getelementptr inbounds %0, %0* %14, i32 0, i32 0
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ule i32 %17, 1
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = call i64 @llvm.expect.i64(i64 %21, i64 0)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  unreachable

25:                                               ; preds = %13
  br label %26

26:                                               ; preds = %25
  %27 = load %0*, %0** %2, align 8
  %28 = getelementptr inbounds %0, %0* %27, i32 0, i32 0
  %29 = getelementptr inbounds %1, %1* %28, i32 0, i32 1
  %30 = bitcast %2* %29 to %52*
  %31 = getelementptr inbounds %52, %52* %30, i32 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %26
  %37 = load %0*, %0** %2, align 8
  %38 = bitcast %0* %37 to i8*
  call void @free(i8* %38) #13
  br label %42

39:                                               ; preds = %26
  %40 = load %0*, %0** %2, align 8
  %41 = bitcast %0* %40 to i8*
  call void @_efree(i8* %41)
  br label %42

42:                                               ; preds = %39, %36
  br label %43

43:                                               ; preds = %42, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_pathinfo(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %0*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %18*, align 8
  %18 = alloca %18*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i64, align 8
  %29 = alloca %18*, align 8
  %30 = alloca %18*, align 8
  %31 = alloca %54*, align 8
  %32 = alloca i32, align 4
  %33 = alloca %18*, align 8
  %34 = alloca %18*, align 8
  %35 = alloca %18*, align 8
  %36 = alloca %54*, align 8
  %37 = alloca i32, align 4
  %38 = alloca %18*, align 8
  %39 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %40 = bitcast %18* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %40) #13
  %41 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  %44 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  %45 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  store i64 15, i64* %10, align 8
  %46 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  store %0* null, %0** %11, align 8
  br label %47

47:                                               ; preds = %2
  %48 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %12, align 4
  %49 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  store i32 1, i32* %13, align 4
  %50 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #13
  store i32 2, i32* %14, align 4
  %51 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #13
  %52 = load %14*, %14** %3, align 8
  %53 = getelementptr inbounds %14, %14* %52, i32 0, i32 4
  %54 = getelementptr inbounds %18, %18* %53, i32 0, i32 2
  %55 = bitcast %21* %54 to i32*
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %15, align 4
  %57 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #13
  %58 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #13
  %59 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #13
  store %18* null, %18** %18, align 8
  %60 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #13
  store i32 0, i32* %19, align 4
  %61 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #13
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  store i8 0, i8* %22, align 1
  %62 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #13
  store i32 0, i32* %23, align 4
  %63 = load i32, i32* %16, align 4
  %64 = load %18*, %18** %17, align 8
  %65 = load %18*, %18** %18, align 8
  %66 = load i32, i32* %19, align 4
  %67 = load i8*, i8** %20, align 8
  %68 = load i8, i8* %21, align 1
  %69 = load i8, i8* %22, align 1
  br label %70

70:                                               ; preds = %47
  %71 = load i32, i32* %15, align 4
  %72 = load i32, i32* %13, align 4
  %73 = icmp slt i32 %71, %72
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 0)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %99, label %80

80:                                               ; preds = %70
  %81 = load i32, i32* %15, align 4
  %82 = load i32, i32* %14, align 4
  %83 = icmp sgt i32 %81, %82
  %84 = xor i1 %83, true
  %85 = xor i1 %84, true
  %86 = zext i1 %85 to i32
  %87 = sext i32 %86 to i64
  %88 = call i64 @llvm.expect.i64(i64 %87, i64 0)
  %89 = icmp ne i64 %88, 0
  br i1 %89, label %90, label %103

90:                                               ; preds = %80
  %91 = load i32, i32* %14, align 4
  %92 = icmp sge i32 %91, 0
  %93 = xor i1 %92, true
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 1)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %90, %70
  %100 = load i32, i32* %15, align 4
  %101 = load i32, i32* %13, align 4
  %102 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %100, i32 %101, i32 %102)
  store i32 1, i32* %23, align 4
  br label %248

103:                                              ; preds = %90, %80
  store i32 0, i32* %16, align 4
  %104 = load %14*, %14** %3, align 8
  %105 = bitcast %14* %104 to %18*
  %106 = getelementptr inbounds %18, %18* %105, i64 4
  store %18* %106, %18** %17, align 8
  %107 = load i32, i32* %16, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %16, align 4
  br label %109

109:                                              ; preds = %103
  %110 = load i32, i32* %16, align 4
  %111 = load i32, i32* %13, align 4
  %112 = icmp sle i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %22, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 1
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  br label %128

128:                                              ; preds = %127
  %129 = load i32, i32* %16, align 4
  %130 = load i32, i32* %13, align 4
  %131 = icmp sgt i32 %129, %130
  br i1 %131, label %136, label %132

132:                                              ; preds = %128
  %133 = load i8, i8* %22, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp eq i32 %134, 0
  br label %136

136:                                              ; preds = %132, %128
  %137 = phi i1 [ true, %128 ], [ %135, %132 ]
  %138 = xor i1 %137, true
  %139 = zext i1 %138 to i32
  %140 = sext i32 %139 to i64
  %141 = call i64 @llvm.expect.i64(i64 %140, i64 0)
  %142 = icmp ne i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %136
  unreachable

144:                                              ; preds = %136
  br label %145

145:                                              ; preds = %144
  br label %146

146:                                              ; preds = %145
  %147 = load i8, i8* %22, align 1
  %148 = icmp ne i8 %147, 0
  br i1 %148, label %149, label %161

149:                                              ; preds = %146
  %150 = load i32, i32* %16, align 4
  %151 = load i32, i32* %15, align 4
  %152 = icmp sgt i32 %150, %151
  %153 = xor i1 %152, true
  %154 = xor i1 %153, true
  %155 = zext i1 %154 to i32
  %156 = sext i32 %155 to i64
  %157 = call i64 @llvm.expect.i64(i64 %156, i64 0)
  %158 = icmp ne i64 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %149
  br label %248

160:                                              ; preds = %149
  br label %161

161:                                              ; preds = %160, %146
  %162 = load %18*, %18** %17, align 8
  %163 = getelementptr inbounds %18, %18* %162, i32 1
  store %18* %163, %18** %17, align 8
  %164 = load %18*, %18** %17, align 8
  store %18* %164, %18** %18, align 8
  %165 = load %18*, %18** %18, align 8
  %166 = call i32 @151(%18* %165, i8** %6, i64* %8, i32 0)
  %167 = icmp ne i32 %166, 0
  %168 = xor i1 %167, true
  %169 = xor i1 %168, true
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %161
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %248

176:                                              ; preds = %161
  store i8 1, i8* %22, align 1
  %177 = load i32, i32* %16, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %16, align 4
  br label %179

179:                                              ; preds = %176
  %180 = load i32, i32* %16, align 4
  %181 = load i32, i32* %13, align 4
  %182 = icmp sle i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %22, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 1
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  br label %198

198:                                              ; preds = %197
  %199 = load i32, i32* %16, align 4
  %200 = load i32, i32* %13, align 4
  %201 = icmp sgt i32 %199, %200
  br i1 %201, label %206, label %202

202:                                              ; preds = %198
  %203 = load i8, i8* %22, align 1
  %204 = zext i8 %203 to i32
  %205 = icmp eq i32 %204, 0
  br label %206

206:                                              ; preds = %202, %198
  %207 = phi i1 [ true, %198 ], [ %205, %202 ]
  %208 = xor i1 %207, true
  %209 = zext i1 %208 to i32
  %210 = sext i32 %209 to i64
  %211 = call i64 @llvm.expect.i64(i64 %210, i64 0)
  %212 = icmp ne i64 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %206
  unreachable

214:                                              ; preds = %206
  br label %215

215:                                              ; preds = %214
  br label %216

216:                                              ; preds = %215
  %217 = load i8, i8* %22, align 1
  %218 = icmp ne i8 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %216
  %220 = load i32, i32* %16, align 4
  %221 = load i32, i32* %15, align 4
  %222 = icmp sgt i32 %220, %221
  %223 = xor i1 %222, true
  %224 = xor i1 %223, true
  %225 = zext i1 %224 to i32
  %226 = sext i32 %225 to i64
  %227 = call i64 @llvm.expect.i64(i64 %226, i64 0)
  %228 = icmp ne i64 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %219
  br label %248

230:                                              ; preds = %219
  br label %231

231:                                              ; preds = %230, %216
  %232 = load %18*, %18** %17, align 8
  %233 = getelementptr inbounds %18, %18* %232, i32 1
  store %18* %233, %18** %17, align 8
  %234 = load %18*, %18** %17, align 8
  store %18* %234, %18** %18, align 8
  %235 = load %18*, %18** %18, align 8
  %236 = call i32 @147(%18* %235, i64* %10, i8* %21, i32 0, i32 0)
  %237 = icmp ne i32 %236, 0
  %238 = xor i1 %237, true
  %239 = xor i1 %238, true
  %240 = xor i1 %239, true
  %241 = zext i1 %240 to i32
  %242 = sext i32 %241 to i64
  %243 = call i64 @llvm.expect.i64(i64 %242, i64 0)
  %244 = icmp ne i64 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %231
  store i32 0, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %248

246:                                              ; preds = %231
  br label %247

247:                                              ; preds = %246
  br label %248

248:                                              ; preds = %247, %245, %229, %175, %159, %99
  %249 = load i32, i32* %23, align 4
  %250 = icmp ne i32 %249, 0
  %251 = xor i1 %250, true
  %252 = xor i1 %251, true
  %253 = zext i1 %252 to i32
  %254 = sext i32 %253 to i64
  %255 = call i64 @llvm.expect.i64(i64 %254, i64 0)
  %256 = icmp ne i64 %255, 0
  br i1 %256, label %257, label %280

257:                                              ; preds = %248
  %258 = load i32, i32* %23, align 4
  %259 = icmp eq i32 %258, 2
  br i1 %259, label %260, label %263

260:                                              ; preds = %257
  %261 = load i32, i32* %16, align 4
  %262 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %261, i8* %262)
  br label %279

263:                                              ; preds = %257
  %264 = load i32, i32* %23, align 4
  %265 = icmp eq i32 %264, 3
  br i1 %265, label %266, label %270

266:                                              ; preds = %263
  %267 = load i32, i32* %16, align 4
  %268 = load i8*, i8** %20, align 8
  %269 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %267, i8* %268, %18* %269)
  br label %278

270:                                              ; preds = %263
  %271 = load i32, i32* %23, align 4
  %272 = icmp eq i32 %271, 4
  br i1 %272, label %273, label %277

273:                                              ; preds = %270
  %274 = load i32, i32* %16, align 4
  %275 = load i32, i32* %19, align 4
  %276 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %274, i32 %275, %18* %276)
  br label %277

277:                                              ; preds = %273, %270
  br label %278

278:                                              ; preds = %277, %266
  br label %279

279:                                              ; preds = %278, %260
  store i32 1, i32* %24, align 4
  br label %281

280:                                              ; preds = %248
  store i32 0, i32* %24, align 4
  br label %281

281:                                              ; preds = %280, %279
  %282 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  %283 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %283) #13
  %284 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %284) #13
  %285 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285) #13
  %286 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %286) #13
  %287 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %287) #13
  %288 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %288) #13
  %289 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %289) #13
  %290 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %290) #13
  %291 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %291) #13
  %292 = load i32, i32* %24, align 4
  switch i32 %292, label %560 [
    i32 0, label %293
  ]

293:                                              ; preds = %281
  br label %294

294:                                              ; preds = %293
  br label %295

295:                                              ; preds = %294
  %296 = load i64, i64* %10, align 8
  %297 = and i64 %296, 2
  %298 = icmp eq i64 %297, 2
  %299 = zext i1 %298 to i32
  store i32 %299, i32* %9, align 4
  %300 = call i32 @_array_init(%18* %5, i32 0)
  %301 = load i64, i64* %10, align 8
  %302 = and i64 %301, 1
  %303 = icmp eq i64 %302, 1
  br i1 %303, label %304, label %319

304:                                              ; preds = %295
  %305 = load i8*, i8** %6, align 8
  %306 = load i64, i64* %8, align 8
  %307 = call noalias i8* @_estrndup(i8* %305, i64 %306)
  store i8* %307, i8** %7, align 8
  %308 = load i8*, i8** %7, align 8
  %309 = load i64, i64* %8, align 8
  %310 = call i64 @php_dirname(i8* %308, i64 %309)
  %311 = load i8*, i8** %7, align 8
  %312 = load i8, i8* %311, align 1
  %313 = icmp ne i8 %312, 0
  br i1 %313, label %314, label %317

314:                                              ; preds = %304
  %315 = load i8*, i8** %7, align 8
  %316 = call i32 @add_assoc_string_ex(%18* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @80, i32 0, i32 0), i64 7, i8* %315)
  br label %317

317:                                              ; preds = %314, %304
  %318 = load i8*, i8** %7, align 8
  call void @_efree(i8* %318)
  br label %319

319:                                              ; preds = %317, %295
  %320 = load i32, i32* %9, align 4
  %321 = icmp ne i32 %320, 0
  br i1 %321, label %322, label %329

322:                                              ; preds = %319
  %323 = load i8*, i8** %6, align 8
  %324 = load i64, i64* %8, align 8
  %325 = call %0* @php_basename(i8* %323, i64 %324, i8* null, i64 0)
  store %0* %325, %0** %11, align 8
  %326 = load %0*, %0** %11, align 8
  %327 = call %0* @163(%0* %326)
  %328 = call i32 @add_assoc_str_ex(%18* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @81, i32 0, i32 0), i64 8, %0* %327)
  br label %329

329:                                              ; preds = %322, %319
  %330 = load i64, i64* %10, align 8
  %331 = and i64 %330, 4
  %332 = icmp eq i64 %331, 4
  br i1 %332, label %333, label %376

333:                                              ; preds = %329
  %334 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %334) #13
  %335 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %335) #13
  %336 = load i32, i32* %9, align 4
  %337 = icmp ne i32 %336, 0
  br i1 %337, label %342, label %338

338:                                              ; preds = %333
  %339 = load i8*, i8** %6, align 8
  %340 = load i64, i64* %8, align 8
  %341 = call %0* @php_basename(i8* %339, i64 %340, i8* null, i64 0)
  store %0* %341, %0** %11, align 8
  br label %342

342:                                              ; preds = %338, %333
  %343 = load %0*, %0** %11, align 8
  %344 = getelementptr inbounds %0, %0* %343, i32 0, i32 3
  %345 = getelementptr inbounds [1 x i8], [1 x i8]* %344, i32 0, i32 0
  %346 = load %0*, %0** %11, align 8
  %347 = getelementptr inbounds %0, %0* %346, i32 0, i32 2
  %348 = load i64, i64* %347, align 8
  %349 = call i8* @165(i8* %345, i32 46, i64 %348)
  store i8* %349, i8** %25, align 8
  %350 = load i8*, i8** %25, align 8
  %351 = icmp ne i8* %350, null
  br i1 %351, label %352, label %373

352:                                              ; preds = %342
  %353 = load i8*, i8** %25, align 8
  %354 = load %0*, %0** %11, align 8
  %355 = getelementptr inbounds %0, %0* %354, i32 0, i32 3
  %356 = getelementptr inbounds [1 x i8], [1 x i8]* %355, i32 0, i32 0
  %357 = ptrtoint i8* %353 to i64
  %358 = ptrtoint i8* %356 to i64
  %359 = sub i64 %357, %358
  store i64 %359, i64* %26, align 8
  %360 = load %0*, %0** %11, align 8
  %361 = getelementptr inbounds %0, %0* %360, i32 0, i32 3
  %362 = getelementptr inbounds [1 x i8], [1 x i8]* %361, i32 0, i32 0
  %363 = load i64, i64* %26, align 8
  %364 = getelementptr inbounds i8, i8* %362, i64 %363
  %365 = getelementptr inbounds i8, i8* %364, i64 1
  %366 = load %0*, %0** %11, align 8
  %367 = getelementptr inbounds %0, %0* %366, i32 0, i32 2
  %368 = load i64, i64* %367, align 8
  %369 = load i64, i64* %26, align 8
  %370 = sub i64 %368, %369
  %371 = sub i64 %370, 1
  %372 = call i32 @add_assoc_stringl_ex(%18* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @82, i32 0, i32 0), i64 9, i8* %365, i64 %371)
  br label %373

373:                                              ; preds = %352, %342
  %374 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %374) #13
  %375 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %375) #13
  br label %376

376:                                              ; preds = %373, %329
  %377 = load i64, i64* %10, align 8
  %378 = and i64 %377, 8
  %379 = icmp eq i64 %378, 8
  br i1 %379, label %380, label %423

380:                                              ; preds = %376
  %381 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %381) #13
  %382 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %382) #13
  %383 = load i32, i32* %9, align 4
  %384 = icmp ne i32 %383, 0
  br i1 %384, label %392, label %385

385:                                              ; preds = %380
  %386 = load %0*, %0** %11, align 8
  %387 = icmp ne %0* %386, null
  br i1 %387, label %392, label %388

388:                                              ; preds = %385
  %389 = load i8*, i8** %6, align 8
  %390 = load i64, i64* %8, align 8
  %391 = call %0* @php_basename(i8* %389, i64 %390, i8* null, i64 0)
  store %0* %391, %0** %11, align 8
  br label %392

392:                                              ; preds = %388, %385, %380
  %393 = load %0*, %0** %11, align 8
  %394 = getelementptr inbounds %0, %0* %393, i32 0, i32 3
  %395 = getelementptr inbounds [1 x i8], [1 x i8]* %394, i32 0, i32 0
  %396 = load %0*, %0** %11, align 8
  %397 = getelementptr inbounds %0, %0* %396, i32 0, i32 2
  %398 = load i64, i64* %397, align 8
  %399 = call i8* @165(i8* %395, i32 46, i64 %398)
  store i8* %399, i8** %27, align 8
  %400 = load i8*, i8** %27, align 8
  %401 = icmp ne i8* %400, null
  br i1 %401, label %402, label %410

402:                                              ; preds = %392
  %403 = load i8*, i8** %27, align 8
  %404 = load %0*, %0** %11, align 8
  %405 = getelementptr inbounds %0, %0* %404, i32 0, i32 3
  %406 = getelementptr inbounds [1 x i8], [1 x i8]* %405, i32 0, i32 0
  %407 = ptrtoint i8* %403 to i64
  %408 = ptrtoint i8* %406 to i64
  %409 = sub i64 %407, %408
  br label %414

410:                                              ; preds = %392
  %411 = load %0*, %0** %11, align 8
  %412 = getelementptr inbounds %0, %0* %411, i32 0, i32 2
  %413 = load i64, i64* %412, align 8
  br label %414

414:                                              ; preds = %410, %402
  %415 = phi i64 [ %409, %402 ], [ %413, %410 ]
  store i64 %415, i64* %28, align 8
  %416 = load %0*, %0** %11, align 8
  %417 = getelementptr inbounds %0, %0* %416, i32 0, i32 3
  %418 = getelementptr inbounds [1 x i8], [1 x i8]* %417, i32 0, i32 0
  %419 = load i64, i64* %28, align 8
  %420 = call i32 @add_assoc_stringl_ex(%18* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @83, i32 0, i32 0), i64 8, i8* %418, i64 %419)
  %421 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %421) #13
  %422 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %422) #13
  br label %423

423:                                              ; preds = %414, %376
  %424 = load %0*, %0** %11, align 8
  %425 = icmp ne %0* %424, null
  br i1 %425, label %426, label %428

426:                                              ; preds = %423
  %427 = load %0*, %0** %11, align 8
  call void @159(%0* %427)
  br label %428

428:                                              ; preds = %426, %423
  %429 = load i64, i64* %10, align 8
  %430 = icmp eq i64 %429, 15
  br i1 %430, label %431, label %463

431:                                              ; preds = %428
  br label %432

432:                                              ; preds = %431
  %433 = bitcast %18** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %433) #13
  %434 = load %18*, %18** %4, align 8
  store %18* %434, %18** %29, align 8
  %435 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %435) #13
  store %18* %5, %18** %30, align 8
  %436 = bitcast %54** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %436) #13
  %437 = load %18*, %18** %30, align 8
  %438 = getelementptr inbounds %18, %18* %437, i32 0, i32 0
  %439 = bitcast %19* %438 to %54**
  %440 = load %54*, %54** %439, align 8
  store %54* %440, %54** %31, align 8
  %441 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %441) #13
  %442 = load %18*, %18** %30, align 8
  %443 = getelementptr inbounds %18, %18* %442, i32 0, i32 1
  %444 = bitcast %20* %443 to i32*
  %445 = load i32, i32* %444, align 8
  store i32 %445, i32* %32, align 4
  br label %446

446:                                              ; preds = %432
  %447 = load %54*, %54** %31, align 8
  %448 = load %18*, %18** %29, align 8
  %449 = getelementptr inbounds %18, %18* %448, i32 0, i32 0
  %450 = bitcast %19* %449 to %54**
  store %54* %447, %54** %450, align 8
  %451 = load i32, i32* %32, align 4
  %452 = load %18*, %18** %29, align 8
  %453 = getelementptr inbounds %18, %18* %452, i32 0, i32 1
  %454 = bitcast %20* %453 to i32*
  store i32 %451, i32* %454, align 8
  br label %455

455:                                              ; preds = %446
  br label %456

456:                                              ; preds = %455
  %457 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %457) #13
  %458 = bitcast %54** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %458) #13
  %459 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %459) #13
  %460 = bitcast %18** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %460) #13
  br label %461

461:                                              ; preds = %456
  br label %462

462:                                              ; preds = %461
  br label %559

463:                                              ; preds = %428
  %464 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %464) #13
  %465 = getelementptr inbounds %18, %18* %5, i32 0, i32 0
  %466 = bitcast %19* %465 to %43**
  %467 = load %43*, %43** %466, align 8
  %468 = getelementptr inbounds %18, %18* %5, i32 0, i32 0
  %469 = bitcast %19* %468 to %43**
  %470 = load %43*, %43** %469, align 8
  %471 = getelementptr inbounds %43, %43* %470, i32 0, i32 7
  %472 = call %18* @zend_hash_get_current_data_ex(%43* %467, i32* %471)
  store %18* %472, %18** %33, align 8
  %473 = icmp ne %18* %472, null
  br i1 %473, label %474, label %537

474:                                              ; preds = %463
  br label %475

475:                                              ; preds = %474
  %476 = load %18*, %18** %33, align 8
  %477 = call zeroext i8 @157(%18* %476)
  %478 = zext i8 %477 to i32
  %479 = icmp eq i32 %478, 10
  %480 = xor i1 %479, true
  %481 = xor i1 %480, true
  %482 = zext i1 %481 to i32
  %483 = sext i32 %482 to i64
  %484 = call i64 @llvm.expect.i64(i64 %483, i64 0)
  %485 = icmp ne i64 %484, 0
  br i1 %485, label %486, label %492

486:                                              ; preds = %475
  %487 = load %18*, %18** %33, align 8
  %488 = getelementptr inbounds %18, %18* %487, i32 0, i32 0
  %489 = bitcast %19* %488 to %55**
  %490 = load %55*, %55** %489, align 8
  %491 = getelementptr inbounds %55, %55* %490, i32 0, i32 1
  store %18* %491, %18** %33, align 8
  br label %492

492:                                              ; preds = %486, %475
  br label %493

493:                                              ; preds = %492
  br label %494

494:                                              ; preds = %493
  br label %495

495:                                              ; preds = %494
  %496 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %496) #13
  %497 = load %18*, %18** %4, align 8
  store %18* %497, %18** %34, align 8
  %498 = bitcast %18** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %498) #13
  %499 = load %18*, %18** %33, align 8
  store %18* %499, %18** %35, align 8
  %500 = bitcast %54** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %500) #13
  %501 = load %18*, %18** %35, align 8
  %502 = getelementptr inbounds %18, %18* %501, i32 0, i32 0
  %503 = bitcast %19* %502 to %54**
  %504 = load %54*, %54** %503, align 8
  store %54* %504, %54** %36, align 8
  %505 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %505) #13
  %506 = load %18*, %18** %35, align 8
  %507 = getelementptr inbounds %18, %18* %506, i32 0, i32 1
  %508 = bitcast %20* %507 to i32*
  %509 = load i32, i32* %508, align 8
  store i32 %509, i32* %37, align 4
  br label %510

510:                                              ; preds = %495
  %511 = load %54*, %54** %36, align 8
  %512 = load %18*, %18** %34, align 8
  %513 = getelementptr inbounds %18, %18* %512, i32 0, i32 0
  %514 = bitcast %19* %513 to %54**
  store %54* %511, %54** %514, align 8
  %515 = load i32, i32* %37, align 4
  %516 = load %18*, %18** %34, align 8
  %517 = getelementptr inbounds %18, %18* %516, i32 0, i32 1
  %518 = bitcast %20* %517 to i32*
  store i32 %515, i32* %518, align 8
  br label %519

519:                                              ; preds = %510
  br label %520

520:                                              ; preds = %519
  %521 = load i32, i32* %37, align 4
  %522 = and i32 %521, 1024
  %523 = icmp ne i32 %522, 0
  br i1 %523, label %524, label %530

524:                                              ; preds = %520
  %525 = load %54*, %54** %36, align 8
  %526 = getelementptr inbounds %54, %54* %525, i32 0, i32 0
  %527 = getelementptr inbounds %1, %1* %526, i32 0, i32 0
  %528 = load i32, i32* %527, align 4
  %529 = add i32 %528, 1
  store i32 %529, i32* %527, align 4
  br label %530

530:                                              ; preds = %524, %520
  %531 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %531) #13
  %532 = bitcast %54** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %532) #13
  %533 = bitcast %18** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %533) #13
  %534 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %534) #13
  br label %535

535:                                              ; preds = %530
  br label %536

536:                                              ; preds = %535
  br label %557

537:                                              ; preds = %463
  br label %538

538:                                              ; preds = %537
  br label %539

539:                                              ; preds = %538
  %540 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %540) #13
  %541 = load %18*, %18** %4, align 8
  store %18* %541, %18** %38, align 8
  %542 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %542) #13
  %543 = load %0*, %0** @zend_empty_string, align 8
  store %0* %543, %0** %39, align 8
  %544 = load %0*, %0** %39, align 8
  %545 = load %18*, %18** %38, align 8
  %546 = getelementptr inbounds %18, %18* %545, i32 0, i32 0
  %547 = bitcast %19* %546 to %0**
  store %0* %544, %0** %547, align 8
  %548 = load %18*, %18** %38, align 8
  %549 = getelementptr inbounds %18, %18* %548, i32 0, i32 1
  %550 = bitcast %20* %549 to i32*
  store i32 6, i32* %550, align 8
  %551 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %551) #13
  %552 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %552) #13
  br label %553

553:                                              ; preds = %539
  br label %554

554:                                              ; preds = %553
  br label %555

555:                                              ; preds = %554
  br label %556

556:                                              ; preds = %555
  br label %557

557:                                              ; preds = %556, %536
  call void @_zval_ptr_dtor(%18* %5)
  %558 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %558) #13
  br label %559

559:                                              ; preds = %557, %462
  store i32 0, i32* %24, align 4
  br label %560

560:                                              ; preds = %559, %281
  %561 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %561) #13
  %562 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %562) #13
  %563 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %563) #13
  %564 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %564) #13
  %565 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %565) #13
  %566 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %566) #13
  %567 = bitcast %18* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %567) #13
  %568 = load i32, i32* %24, align 4
  switch i32 %568, label %570 [
    i32 0, label %569
    i32 1, label %569
  ]

569:                                              ; preds = %560, %560
  ret void

570:                                              ; preds = %560
  unreachable
}

declare dso_local noalias i8* @_estrndup(i8*, i64) #1

declare dso_local i32 @add_assoc_string_ex(%18*, i8*, i64, i8*) #1

declare dso_local i32 @add_assoc_str_ex(%18*, i8*, i64, %0*) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @165(i8* %0, i32 %1, i64 %2) #5 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  %10 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load i64, i64* %7, align 8
  %12 = icmp ule i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

14:                                               ; preds = %3
  %15 = load i8*, i8** %5, align 8
  %16 = load i64, i64* %7, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  %18 = getelementptr inbounds i8, i8* %17, i64 -1
  store i8* %18, i8** %8, align 8
  br label %19

19:                                               ; preds = %34, %14
  %20 = load i8*, i8** %8, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = icmp uge i8* %20, %21
  br i1 %22, label %23, label %37

23:                                               ; preds = %19
  %24 = load i8*, i8** %8, align 8
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = load i32, i32* %6, align 4
  %28 = trunc i32 %27 to i8
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %26, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %23
  %32 = load i8*, i8** %8, align 8
  store i8* %32, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

33:                                               ; preds = %23
  br label %34

34:                                               ; preds = %33
  %35 = load i8*, i8** %8, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 -1
  store i8* %36, i8** %8, align 8
  br label %19

37:                                               ; preds = %19
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

38:                                               ; preds = %37, %31, %13
  %39 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #13
  %40 = load i8*, i8** %4, align 8
  ret i8* %40
}

declare dso_local i32 @add_assoc_stringl_ex(%18*, i8*, i64, i8*, i64) #1

declare dso_local %18* @zend_hash_get_current_data_ex(%43*, i32*) #1

; Function Attrs: nounwind uwtable
define dso_local i8* @php_stristr(i8* %0, i8* %1, i64 %2, i64 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i64, i64* %7, align 8
  %11 = call i8* @php_strtolower(i8* %9, i64 %10)
  %12 = load i8*, i8** %6, align 8
  %13 = load i64, i64* %8, align 8
  %14 = call i8* @php_strtolower(i8* %12, i64 %13)
  %15 = load i8*, i8** %5, align 8
  %16 = load i8*, i8** %6, align 8
  %17 = load i64, i64* %8, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = load i64, i64* %7, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = call i8* @156(i8* %15, i8* %16, i64 %17, i8* %20)
  ret i8* %21
}

; Function Attrs: nounwind uwtable
define dso_local i64 @php_strspn(i8* %0, i8* %1, i8* %2, i8* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  %12 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = load i8*, i8** %5, align 8
  store i8* %13, i8** %9, align 8
  %14 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #13
  %15 = load i8*, i8** %9, align 8
  %16 = load i8, i8* %15, align 1
  store i8 %16, i8* %11, align 1
  br label %17

17:                                               ; preds = %37, %4
  %18 = load i8*, i8** %6, align 8
  store i8* %18, i8** %10, align 8
  br label %19

19:                                               ; preds = %41, %17
  %20 = load i8*, i8** %9, align 8
  %21 = load i8*, i8** %7, align 8
  %22 = icmp ne i8* %20, %21
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = load i8*, i8** %10, align 8
  %25 = load i8*, i8** %8, align 8
  %26 = icmp ne i8* %24, %25
  br label %27

27:                                               ; preds = %23, %19
  %28 = phi i1 [ false, %19 ], [ %26, %23 ]
  br i1 %28, label %29, label %42

29:                                               ; preds = %27
  %30 = load i8*, i8** %10, align 8
  %31 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %31, i8** %10, align 8
  %32 = load i8, i8* %30, align 1
  %33 = sext i8 %32 to i32
  %34 = load i8, i8* %11, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %29
  %38 = load i8*, i8** %9, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %9, align 8
  %40 = load i8, i8* %39, align 1
  store i8 %40, i8* %11, align 1
  br label %17

41:                                               ; preds = %29
  br label %19

42:                                               ; preds = %27
  %43 = load i8*, i8** %9, align 8
  %44 = load i8*, i8** %5, align 8
  %45 = ptrtoint i8* %43 to i64
  %46 = ptrtoint i8* %44 to i64
  %47 = sub i64 %45, %46
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #13
  %48 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #13
  %49 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #13
  ret i64 %47
}

; Function Attrs: nounwind uwtable
define dso_local i64 @php_strcspn(i8* %0, i8* %1, i8* %2, i8* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  %12 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #13
  %14 = load i8*, i8** %5, align 8
  %15 = load i8, i8* %14, align 1
  store i8 %15, i8* %11, align 1
  %16 = load i8*, i8** %5, align 8
  store i8* %16, i8** %9, align 8
  br label %17

17:                                               ; preds = %45, %4
  %18 = load i8*, i8** %6, align 8
  store i8* %18, i8** %10, align 8
  br label %19

19:                                               ; preds = %39, %17
  %20 = load i8*, i8** %10, align 8
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = load i8, i8* %11, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %19
  %27 = load i8*, i8** %9, align 8
  %28 = load i8*, i8** %7, align 8
  %29 = icmp eq i8* %27, %28
  br i1 %29, label %30, label %38

30:                                               ; preds = %26, %19
  %31 = load i8*, i8** %9, align 8
  %32 = load i8*, i8** %5, align 8
  %33 = ptrtoint i8* %31 to i64
  %34 = ptrtoint i8* %32 to i64
  %35 = sub i64 %33, %34
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #13
  %36 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #13
  %37 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #13
  ret i64 %35

38:                                               ; preds = %26
  br label %39

39:                                               ; preds = %38
  %40 = load i8*, i8** %10, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %10, align 8
  %42 = load i8*, i8** %8, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 -1
  %44 = icmp ult i8* %40, %43
  br i1 %44, label %19, label %45

45:                                               ; preds = %39
  %46 = load i8*, i8** %9, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %9, align 8
  %48 = load i8, i8* %47, align 1
  store i8 %48, i8* %11, align 1
  br label %17
}

; Function Attrs: nounwind uwtable
define hidden void @zif_stristr(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca [2 x i8], align 1
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %18*, align 8
  %18 = alloca %18*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca %18*, align 8
  %27 = alloca %0*, align 8
  %28 = alloca %18*, align 8
  %29 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %30 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  store i8* null, i8** %7, align 8
  %33 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = bitcast [2 x i8]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %35) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #13
  store i8 0, i8* %11, align 1
  br label %36

36:                                               ; preds = %2
  %37 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %12, align 4
  %38 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 2, i32* %13, align 4
  %39 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 3, i32* %14, align 4
  %40 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  %41 = load %14*, %14** %3, align 8
  %42 = getelementptr inbounds %14, %14* %41, i32 0, i32 4
  %43 = getelementptr inbounds %18, %18* %42, i32 0, i32 2
  %44 = bitcast %21* %43 to i32*
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %15, align 4
  %46 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  %47 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  store %18* null, %18** %18, align 8
  %49 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  store i32 0, i32* %19, align 4
  %50 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  store i8 0, i8* %22, align 1
  %51 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #13
  store i32 0, i32* %23, align 4
  %52 = load i32, i32* %16, align 4
  %53 = load %18*, %18** %17, align 8
  %54 = load %18*, %18** %18, align 8
  %55 = load i32, i32* %19, align 4
  %56 = load i8*, i8** %20, align 8
  %57 = load i8, i8* %21, align 1
  %58 = load i8, i8* %22, align 1
  br label %59

59:                                               ; preds = %36
  %60 = load i32, i32* %15, align 4
  %61 = load i32, i32* %13, align 4
  %62 = icmp slt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %59
  %70 = load i32, i32* %15, align 4
  %71 = load i32, i32* %14, align 4
  %72 = icmp sgt i32 %70, %71
  %73 = xor i1 %72, true
  %74 = xor i1 %73, true
  %75 = zext i1 %74 to i32
  %76 = sext i32 %75 to i64
  %77 = call i64 @llvm.expect.i64(i64 %76, i64 0)
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %79, label %92

79:                                               ; preds = %69
  %80 = load i32, i32* %14, align 4
  %81 = icmp sge i32 %80, 0
  %82 = xor i1 %81, true
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = call i64 @llvm.expect.i64(i64 %85, i64 1)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %79, %59
  %89 = load i32, i32* %15, align 4
  %90 = load i32, i32* %13, align 4
  %91 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %89, i32 %90, i32 %91)
  store i32 1, i32* %23, align 4
  br label %296

92:                                               ; preds = %79, %69
  store i32 0, i32* %16, align 4
  %93 = load %14*, %14** %3, align 8
  %94 = bitcast %14* %93 to %18*
  %95 = getelementptr inbounds %18, %18* %94, i64 4
  store %18* %95, %18** %17, align 8
  %96 = load i32, i32* %16, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %16, align 4
  br label %98

98:                                               ; preds = %92
  %99 = load i32, i32* %16, align 4
  %100 = load i32, i32* %13, align 4
  %101 = icmp sle i32 %99, %100
  br i1 %101, label %106, label %102

102:                                              ; preds = %98
  %103 = load i8, i8* %22, align 1
  %104 = zext i8 %103 to i32
  %105 = icmp eq i32 %104, 1
  br label %106

106:                                              ; preds = %102, %98
  %107 = phi i1 [ true, %98 ], [ %105, %102 ]
  %108 = xor i1 %107, true
  %109 = zext i1 %108 to i32
  %110 = sext i32 %109 to i64
  %111 = call i64 @llvm.expect.i64(i64 %110, i64 0)
  %112 = icmp ne i64 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %106
  unreachable

114:                                              ; preds = %106
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  br label %117

117:                                              ; preds = %116
  %118 = load i32, i32* %16, align 4
  %119 = load i32, i32* %13, align 4
  %120 = icmp sgt i32 %118, %119
  br i1 %120, label %125, label %121

121:                                              ; preds = %117
  %122 = load i8, i8* %22, align 1
  %123 = zext i8 %122 to i32
  %124 = icmp eq i32 %123, 0
  br label %125

125:                                              ; preds = %121, %117
  %126 = phi i1 [ true, %117 ], [ %124, %121 ]
  %127 = xor i1 %126, true
  %128 = zext i1 %127 to i32
  %129 = sext i32 %128 to i64
  %130 = call i64 @llvm.expect.i64(i64 %129, i64 0)
  %131 = icmp ne i64 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  unreachable

133:                                              ; preds = %125
  br label %134

134:                                              ; preds = %133
  br label %135

135:                                              ; preds = %134
  %136 = load i8, i8* %22, align 1
  %137 = icmp ne i8 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %135
  %139 = load i32, i32* %16, align 4
  %140 = load i32, i32* %15, align 4
  %141 = icmp sgt i32 %139, %140
  %142 = xor i1 %141, true
  %143 = xor i1 %142, true
  %144 = zext i1 %143 to i32
  %145 = sext i32 %144 to i64
  %146 = call i64 @llvm.expect.i64(i64 %145, i64 0)
  %147 = icmp ne i64 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %138
  br label %296

149:                                              ; preds = %138
  br label %150

150:                                              ; preds = %149, %135
  %151 = load %18*, %18** %17, align 8
  %152 = getelementptr inbounds %18, %18* %151, i32 1
  store %18* %152, %18** %17, align 8
  %153 = load %18*, %18** %17, align 8
  store %18* %153, %18** %18, align 8
  %154 = load %18*, %18** %18, align 8
  %155 = call i32 @143(%18* %154, %0** %6, i32 0)
  %156 = icmp ne i32 %155, 0
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %150
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %296

165:                                              ; preds = %150
  %166 = load i32, i32* %16, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %16, align 4
  br label %168

168:                                              ; preds = %165
  %169 = load i32, i32* %16, align 4
  %170 = load i32, i32* %13, align 4
  %171 = icmp sle i32 %169, %170
  br i1 %171, label %176, label %172

172:                                              ; preds = %168
  %173 = load i8, i8* %22, align 1
  %174 = zext i8 %173 to i32
  %175 = icmp eq i32 %174, 1
  br label %176

176:                                              ; preds = %172, %168
  %177 = phi i1 [ true, %168 ], [ %175, %172 ]
  %178 = xor i1 %177, true
  %179 = zext i1 %178 to i32
  %180 = sext i32 %179 to i64
  %181 = call i64 @llvm.expect.i64(i64 %180, i64 0)
  %182 = icmp ne i64 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %176
  unreachable

184:                                              ; preds = %176
  br label %185

185:                                              ; preds = %184
  br label %186

186:                                              ; preds = %185
  br label %187

187:                                              ; preds = %186
  %188 = load i32, i32* %16, align 4
  %189 = load i32, i32* %13, align 4
  %190 = icmp sgt i32 %188, %189
  br i1 %190, label %195, label %191

191:                                              ; preds = %187
  %192 = load i8, i8* %22, align 1
  %193 = zext i8 %192 to i32
  %194 = icmp eq i32 %193, 0
  br label %195

195:                                              ; preds = %191, %187
  %196 = phi i1 [ true, %187 ], [ %194, %191 ]
  %197 = xor i1 %196, true
  %198 = zext i1 %197 to i32
  %199 = sext i32 %198 to i64
  %200 = call i64 @llvm.expect.i64(i64 %199, i64 0)
  %201 = icmp ne i64 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %195
  unreachable

203:                                              ; preds = %195
  br label %204

204:                                              ; preds = %203
  br label %205

205:                                              ; preds = %204
  %206 = load i8, i8* %22, align 1
  %207 = icmp ne i8 %206, 0
  br i1 %207, label %208, label %220

208:                                              ; preds = %205
  %209 = load i32, i32* %16, align 4
  %210 = load i32, i32* %15, align 4
  %211 = icmp sgt i32 %209, %210
  %212 = xor i1 %211, true
  %213 = xor i1 %212, true
  %214 = zext i1 %213 to i32
  %215 = sext i32 %214 to i64
  %216 = call i64 @llvm.expect.i64(i64 %215, i64 0)
  %217 = icmp ne i64 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %208
  br label %296

219:                                              ; preds = %208
  br label %220

220:                                              ; preds = %219, %205
  %221 = load %18*, %18** %17, align 8
  %222 = getelementptr inbounds %18, %18* %221, i32 1
  store %18* %222, %18** %17, align 8
  %223 = load %18*, %18** %17, align 8
  store %18* %223, %18** %18, align 8
  %224 = load %18*, %18** %18, align 8
  call void @161(%18* %224, %18** %5, i32 0)
  store i8 1, i8* %22, align 1
  %225 = load i32, i32* %16, align 4
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %16, align 4
  br label %227

227:                                              ; preds = %220
  %228 = load i32, i32* %16, align 4
  %229 = load i32, i32* %13, align 4
  %230 = icmp sle i32 %228, %229
  br i1 %230, label %235, label %231

231:                                              ; preds = %227
  %232 = load i8, i8* %22, align 1
  %233 = zext i8 %232 to i32
  %234 = icmp eq i32 %233, 1
  br label %235

235:                                              ; preds = %231, %227
  %236 = phi i1 [ true, %227 ], [ %234, %231 ]
  %237 = xor i1 %236, true
  %238 = zext i1 %237 to i32
  %239 = sext i32 %238 to i64
  %240 = call i64 @llvm.expect.i64(i64 %239, i64 0)
  %241 = icmp ne i64 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %235
  unreachable

243:                                              ; preds = %235
  br label %244

244:                                              ; preds = %243
  br label %245

245:                                              ; preds = %244
  br label %246

246:                                              ; preds = %245
  %247 = load i32, i32* %16, align 4
  %248 = load i32, i32* %13, align 4
  %249 = icmp sgt i32 %247, %248
  br i1 %249, label %254, label %250

250:                                              ; preds = %246
  %251 = load i8, i8* %22, align 1
  %252 = zext i8 %251 to i32
  %253 = icmp eq i32 %252, 0
  br label %254

254:                                              ; preds = %250, %246
  %255 = phi i1 [ true, %246 ], [ %253, %250 ]
  %256 = xor i1 %255, true
  %257 = zext i1 %256 to i32
  %258 = sext i32 %257 to i64
  %259 = call i64 @llvm.expect.i64(i64 %258, i64 0)
  %260 = icmp ne i64 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %254
  unreachable

262:                                              ; preds = %254
  br label %263

263:                                              ; preds = %262
  br label %264

264:                                              ; preds = %263
  %265 = load i8, i8* %22, align 1
  %266 = icmp ne i8 %265, 0
  br i1 %266, label %267, label %279

267:                                              ; preds = %264
  %268 = load i32, i32* %16, align 4
  %269 = load i32, i32* %15, align 4
  %270 = icmp sgt i32 %268, %269
  %271 = xor i1 %270, true
  %272 = xor i1 %271, true
  %273 = zext i1 %272 to i32
  %274 = sext i32 %273 to i64
  %275 = call i64 @llvm.expect.i64(i64 %274, i64 0)
  %276 = icmp ne i64 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %267
  br label %296

278:                                              ; preds = %267
  br label %279

279:                                              ; preds = %278, %264
  %280 = load %18*, %18** %17, align 8
  %281 = getelementptr inbounds %18, %18* %280, i32 1
  store %18* %281, %18** %17, align 8
  %282 = load %18*, %18** %17, align 8
  store %18* %282, %18** %18, align 8
  %283 = load %18*, %18** %18, align 8
  %284 = call i32 @152(%18* %283, i8* %11, i8* %21, i32 0)
  %285 = icmp ne i32 %284, 0
  %286 = xor i1 %285, true
  %287 = xor i1 %286, true
  %288 = xor i1 %287, true
  %289 = zext i1 %288 to i32
  %290 = sext i32 %289 to i64
  %291 = call i64 @llvm.expect.i64(i64 %290, i64 0)
  %292 = icmp ne i64 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %279
  store i32 1, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %296

294:                                              ; preds = %279
  br label %295

295:                                              ; preds = %294
  br label %296

296:                                              ; preds = %295, %293, %277, %218, %164, %148, %88
  %297 = load i32, i32* %23, align 4
  %298 = icmp ne i32 %297, 0
  %299 = xor i1 %298, true
  %300 = xor i1 %299, true
  %301 = zext i1 %300 to i32
  %302 = sext i32 %301 to i64
  %303 = call i64 @llvm.expect.i64(i64 %302, i64 0)
  %304 = icmp ne i64 %303, 0
  br i1 %304, label %305, label %328

305:                                              ; preds = %296
  %306 = load i32, i32* %23, align 4
  %307 = icmp eq i32 %306, 2
  br i1 %307, label %308, label %311

308:                                              ; preds = %305
  %309 = load i32, i32* %16, align 4
  %310 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %309, i8* %310)
  br label %327

311:                                              ; preds = %305
  %312 = load i32, i32* %23, align 4
  %313 = icmp eq i32 %312, 3
  br i1 %313, label %314, label %318

314:                                              ; preds = %311
  %315 = load i32, i32* %16, align 4
  %316 = load i8*, i8** %20, align 8
  %317 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %315, i8* %316, %18* %317)
  br label %326

318:                                              ; preds = %311
  %319 = load i32, i32* %23, align 4
  %320 = icmp eq i32 %319, 4
  br i1 %320, label %321, label %325

321:                                              ; preds = %318
  %322 = load i32, i32* %16, align 4
  %323 = load i32, i32* %19, align 4
  %324 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %322, i32 %323, %18* %324)
  br label %325

325:                                              ; preds = %321, %318
  br label %326

326:                                              ; preds = %325, %314
  br label %327

327:                                              ; preds = %326, %308
  store i32 1, i32* %24, align 4
  br label %329

328:                                              ; preds = %296
  store i32 0, i32* %24, align 4
  br label %329

329:                                              ; preds = %328, %327
  %330 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %330) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  %331 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %331) #13
  %332 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %332) #13
  %333 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %333) #13
  %334 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %334) #13
  %335 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %335) #13
  %336 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %336) #13
  %337 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %337) #13
  %338 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %338) #13
  %339 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %339) #13
  %340 = load i32, i32* %24, align 4
  switch i32 %340, label %499 [
    i32 0, label %341
  ]

341:                                              ; preds = %329
  br label %342

342:                                              ; preds = %341
  br label %343

343:                                              ; preds = %342
  %344 = load %0*, %0** %6, align 8
  %345 = getelementptr inbounds %0, %0* %344, i32 0, i32 3
  %346 = getelementptr inbounds [1 x i8], [1 x i8]* %345, i32 0, i32 0
  %347 = load %0*, %0** %6, align 8
  %348 = getelementptr inbounds %0, %0* %347, i32 0, i32 2
  %349 = load i64, i64* %348, align 8
  %350 = call noalias i8* @_estrndup(i8* %346, i64 %349)
  store i8* %350, i8** %9, align 8
  %351 = load %18*, %18** %5, align 8
  %352 = call zeroext i8 @157(%18* %351)
  %353 = zext i8 %352 to i32
  %354 = icmp eq i32 %353, 6
  br i1 %354, label %355, label %403

355:                                              ; preds = %343
  %356 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %356) #13
  %357 = load %18*, %18** %5, align 8
  %358 = getelementptr inbounds %18, %18* %357, i32 0, i32 0
  %359 = bitcast %19* %358 to %0**
  %360 = load %0*, %0** %359, align 8
  %361 = getelementptr inbounds %0, %0* %360, i32 0, i32 2
  %362 = load i64, i64* %361, align 8
  %363 = icmp ne i64 %362, 0
  br i1 %363, label %372, label %364

364:                                              ; preds = %355
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @84, i32 0, i32 0))
  %365 = load i8*, i8** %9, align 8
  call void @_efree(i8* %365)
  br label %366

366:                                              ; preds = %364
  %367 = load %18*, %18** %4, align 8
  %368 = getelementptr inbounds %18, %18* %367, i32 0, i32 1
  %369 = bitcast %20* %368 to i32*
  store i32 2, i32* %369, align 8
  br label %370

370:                                              ; preds = %366
  br label %371

371:                                              ; preds = %370
  store i32 1, i32* %24, align 4
  br label %399

372:                                              ; preds = %355
  %373 = load %18*, %18** %5, align 8
  %374 = getelementptr inbounds %18, %18* %373, i32 0, i32 0
  %375 = bitcast %19* %374 to %0**
  %376 = load %0*, %0** %375, align 8
  %377 = getelementptr inbounds %0, %0* %376, i32 0, i32 3
  %378 = getelementptr inbounds [1 x i8], [1 x i8]* %377, i32 0, i32 0
  %379 = load %18*, %18** %5, align 8
  %380 = getelementptr inbounds %18, %18* %379, i32 0, i32 0
  %381 = bitcast %19* %380 to %0**
  %382 = load %0*, %0** %381, align 8
  %383 = getelementptr inbounds %0, %0* %382, i32 0, i32 2
  %384 = load i64, i64* %383, align 8
  %385 = call noalias i8* @_estrndup(i8* %378, i64 %384)
  store i8* %385, i8** %25, align 8
  %386 = load i8*, i8** %9, align 8
  %387 = load i8*, i8** %25, align 8
  %388 = load %0*, %0** %6, align 8
  %389 = getelementptr inbounds %0, %0* %388, i32 0, i32 2
  %390 = load i64, i64* %389, align 8
  %391 = load %18*, %18** %5, align 8
  %392 = getelementptr inbounds %18, %18* %391, i32 0, i32 0
  %393 = bitcast %19* %392 to %0**
  %394 = load %0*, %0** %393, align 8
  %395 = getelementptr inbounds %0, %0* %394, i32 0, i32 2
  %396 = load i64, i64* %395, align 8
  %397 = call i8* @php_stristr(i8* %386, i8* %387, i64 %390, i64 %396)
  store i8* %397, i8** %7, align 8
  %398 = load i8*, i8** %25, align 8
  call void @_efree(i8* %398)
  store i32 0, i32* %24, align 4
  br label %399

399:                                              ; preds = %372, %371
  %400 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %400) #13
  %401 = load i32, i32* %24, align 4
  switch i32 %401, label %499 [
    i32 0, label %402
  ]

402:                                              ; preds = %399
  br label %424

403:                                              ; preds = %343
  %404 = load %18*, %18** %5, align 8
  %405 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i32 0, i32 0
  %406 = call i32 @166(%18* %404, i8* %405)
  %407 = icmp ne i32 %406, 0
  br i1 %407, label %408, label %416

408:                                              ; preds = %403
  %409 = load i8*, i8** %9, align 8
  call void @_efree(i8* %409)
  br label %410

410:                                              ; preds = %408
  %411 = load %18*, %18** %4, align 8
  %412 = getelementptr inbounds %18, %18* %411, i32 0, i32 1
  %413 = bitcast %20* %412 to i32*
  store i32 2, i32* %413, align 8
  br label %414

414:                                              ; preds = %410
  br label %415

415:                                              ; preds = %414
  store i32 1, i32* %24, align 4
  br label %499

416:                                              ; preds = %403
  %417 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i64 0, i64 1
  store i8 0, i8* %417, align 1
  %418 = load i8*, i8** %9, align 8
  %419 = getelementptr inbounds [2 x i8], [2 x i8]* %10, i32 0, i32 0
  %420 = load %0*, %0** %6, align 8
  %421 = getelementptr inbounds %0, %0* %420, i32 0, i32 2
  %422 = load i64, i64* %421, align 8
  %423 = call i8* @php_stristr(i8* %418, i8* %419, i64 %422, i64 1)
  store i8* %423, i8** %7, align 8
  br label %424

424:                                              ; preds = %416, %402
  %425 = load i8*, i8** %7, align 8
  %426 = icmp ne i8* %425, null
  br i1 %426, label %427, label %490

427:                                              ; preds = %424
  %428 = load i8*, i8** %7, align 8
  %429 = load i8*, i8** %9, align 8
  %430 = ptrtoint i8* %428 to i64
  %431 = ptrtoint i8* %429 to i64
  %432 = sub i64 %430, %431
  store i64 %432, i64* %8, align 8
  %433 = load i8, i8* %11, align 1
  %434 = icmp ne i8 %433, 0
  br i1 %434, label %435, label %459

435:                                              ; preds = %427
  br label %436

436:                                              ; preds = %435
  br label %437

437:                                              ; preds = %436
  %438 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %438) #13
  %439 = load %18*, %18** %4, align 8
  store %18* %439, %18** %26, align 8
  %440 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %440) #13
  %441 = load %0*, %0** %6, align 8
  %442 = getelementptr inbounds %0, %0* %441, i32 0, i32 3
  %443 = getelementptr inbounds [1 x i8], [1 x i8]* %442, i32 0, i32 0
  %444 = load i64, i64* %8, align 8
  %445 = call %0* @148(i8* %443, i64 %444, i32 0)
  store %0* %445, %0** %27, align 8
  %446 = load %0*, %0** %27, align 8
  %447 = load %18*, %18** %26, align 8
  %448 = getelementptr inbounds %18, %18* %447, i32 0, i32 0
  %449 = bitcast %19* %448 to %0**
  store %0* %446, %0** %449, align 8
  %450 = load %18*, %18** %26, align 8
  %451 = getelementptr inbounds %18, %18* %450, i32 0, i32 1
  %452 = bitcast %20* %451 to i32*
  store i32 5126, i32* %452, align 8
  %453 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %453) #13
  %454 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %454) #13
  br label %455

455:                                              ; preds = %437
  br label %456

456:                                              ; preds = %455
  br label %457

457:                                              ; preds = %456
  br label %458

458:                                              ; preds = %457
  br label %489

459:                                              ; preds = %427
  br label %460

460:                                              ; preds = %459
  br label %461

461:                                              ; preds = %460
  %462 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %462) #13
  %463 = load %18*, %18** %4, align 8
  store %18* %463, %18** %28, align 8
  %464 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %464) #13
  %465 = load %0*, %0** %6, align 8
  %466 = getelementptr inbounds %0, %0* %465, i32 0, i32 3
  %467 = getelementptr inbounds [1 x i8], [1 x i8]* %466, i32 0, i32 0
  %468 = load i64, i64* %8, align 8
  %469 = getelementptr inbounds i8, i8* %467, i64 %468
  %470 = load %0*, %0** %6, align 8
  %471 = getelementptr inbounds %0, %0* %470, i32 0, i32 2
  %472 = load i64, i64* %471, align 8
  %473 = load i64, i64* %8, align 8
  %474 = sub i64 %472, %473
  %475 = call %0* @148(i8* %469, i64 %474, i32 0)
  store %0* %475, %0** %29, align 8
  %476 = load %0*, %0** %29, align 8
  %477 = load %18*, %18** %28, align 8
  %478 = getelementptr inbounds %18, %18* %477, i32 0, i32 0
  %479 = bitcast %19* %478 to %0**
  store %0* %476, %0** %479, align 8
  %480 = load %18*, %18** %28, align 8
  %481 = getelementptr inbounds %18, %18* %480, i32 0, i32 1
  %482 = bitcast %20* %481 to i32*
  store i32 5126, i32* %482, align 8
  %483 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %483) #13
  %484 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %484) #13
  br label %485

485:                                              ; preds = %461
  br label %486

486:                                              ; preds = %485
  br label %487

487:                                              ; preds = %486
  br label %488

488:                                              ; preds = %487
  br label %489

489:                                              ; preds = %488, %458
  br label %497

490:                                              ; preds = %424
  br label %491

491:                                              ; preds = %490
  %492 = load %18*, %18** %4, align 8
  %493 = getelementptr inbounds %18, %18* %492, i32 0, i32 1
  %494 = bitcast %20* %493 to i32*
  store i32 2, i32* %494, align 8
  br label %495

495:                                              ; preds = %491
  br label %496

496:                                              ; preds = %495
  br label %497

497:                                              ; preds = %496, %489
  %498 = load i8*, i8** %9, align 8
  call void @_efree(i8* %498)
  store i32 0, i32* %24, align 4
  br label %499

499:                                              ; preds = %497, %415, %399, %329
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #13
  %500 = bitcast [2 x i8]* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %500) #13
  %501 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %501) #13
  %502 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %502) #13
  %503 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %503) #13
  %504 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %504) #13
  %505 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %505) #13
  %506 = load i32, i32* %24, align 4
  switch i32 %506, label %508 [
    i32 0, label %507
    i32 1, label %507
  ]

507:                                              ; preds = %499, %499
  ret void

508:                                              ; preds = %499
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @166(%18* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  store %18* %0, %18** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load %18*, %18** %4, align 8
  %7 = call zeroext i8 @157(%18* %6)
  %8 = zext i8 %7 to i32
  switch i32 %8, label %33 [
    i32 4, label %9
    i32 1, label %16
    i32 2, label %16
    i32 3, label %18
    i32 5, label %20
    i32 8, label %28
  ]

9:                                                ; preds = %2
  %10 = load %18*, %18** %4, align 8
  %11 = getelementptr inbounds %18, %18* %10, i32 0, i32 0
  %12 = bitcast %19* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i8
  %15 = load i8*, i8** %5, align 8
  store i8 %14, i8* %15, align 1
  store i32 0, i32* %3, align 4
  br label %34

16:                                               ; preds = %2, %2
  %17 = load i8*, i8** %5, align 8
  store i8 0, i8* %17, align 1
  store i32 0, i32* %3, align 4
  br label %34

18:                                               ; preds = %2
  %19 = load i8*, i8** %5, align 8
  store i8 1, i8* %19, align 1
  store i32 0, i32* %3, align 4
  br label %34

20:                                               ; preds = %2
  %21 = load %18*, %18** %4, align 8
  %22 = getelementptr inbounds %18, %18* %21, i32 0, i32 0
  %23 = bitcast %19* %22 to double*
  %24 = load double, double* %23, align 8
  %25 = fptosi double %24 to i32
  %26 = trunc i32 %25 to i8
  %27 = load i8*, i8** %5, align 8
  store i8 %26, i8* %27, align 1
  store i32 0, i32* %3, align 4
  br label %34

28:                                               ; preds = %2
  %29 = load %18*, %18** %4, align 8
  %30 = call i64 @170(%18* %29)
  %31 = trunc i64 %30 to i8
  %32 = load i8*, i8** %5, align 8
  store i8 %31, i8* %32, align 1
  store i32 0, i32* %3, align 4
  br label %34

33:                                               ; preds = %2
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @137, i32 0, i32 0))
  store i32 -1, i32* %3, align 4
  br label %34

34:                                               ; preds = %33, %28, %20, %18, %16, %9
  %35 = load i32, i32* %3, align 4
  ret i32 %35
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strstr(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca [2 x i8], align 1
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %18*, align 8
  %17 = alloca %18*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %18*, align 8
  %25 = alloca %0*, align 8
  %26 = alloca %18*, align 8
  %27 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %28 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store i8* null, i8** %7, align 8
  %31 = bitcast [2 x i8]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %31) #13
  %32 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #13
  store i8 0, i8* %10, align 1
  br label %33

33:                                               ; preds = %2
  %34 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  store i32 0, i32* %11, align 4
  %35 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 2, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 3, i32* %13, align 4
  %37 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  %38 = load %14*, %14** %3, align 8
  %39 = getelementptr inbounds %14, %14* %38, i32 0, i32 4
  %40 = getelementptr inbounds %18, %18* %39, i32 0, i32 2
  %41 = bitcast %21* %40 to i32*
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %14, align 4
  %43 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  %44 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  store %18* null, %18** %17, align 8
  %46 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  store i32 0, i32* %18, align 4
  %47 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store i8* null, i8** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  store i8 0, i8* %21, align 1
  %48 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %22, align 4
  %49 = load i32, i32* %15, align 4
  %50 = load %18*, %18** %16, align 8
  %51 = load %18*, %18** %17, align 8
  %52 = load i32, i32* %18, align 4
  %53 = load i8*, i8** %19, align 8
  %54 = load i8, i8* %20, align 1
  %55 = load i8, i8* %21, align 1
  br label %56

56:                                               ; preds = %33
  %57 = load i32, i32* %14, align 4
  %58 = load i32, i32* %12, align 4
  %59 = icmp slt i32 %57, %58
  %60 = xor i1 %59, true
  %61 = xor i1 %60, true
  %62 = zext i1 %61 to i32
  %63 = sext i32 %62 to i64
  %64 = call i64 @llvm.expect.i64(i64 %63, i64 0)
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %85, label %66

66:                                               ; preds = %56
  %67 = load i32, i32* %14, align 4
  %68 = load i32, i32* %13, align 4
  %69 = icmp sgt i32 %67, %68
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 0)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %89

76:                                               ; preds = %66
  %77 = load i32, i32* %13, align 4
  %78 = icmp sge i32 %77, 0
  %79 = xor i1 %78, true
  %80 = xor i1 %79, true
  %81 = zext i1 %80 to i32
  %82 = sext i32 %81 to i64
  %83 = call i64 @llvm.expect.i64(i64 %82, i64 1)
  %84 = icmp ne i64 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %76, %56
  %86 = load i32, i32* %14, align 4
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %13, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %86, i32 %87, i32 %88)
  store i32 1, i32* %22, align 4
  br label %293

89:                                               ; preds = %76, %66
  store i32 0, i32* %15, align 4
  %90 = load %14*, %14** %3, align 8
  %91 = bitcast %14* %90 to %18*
  %92 = getelementptr inbounds %18, %18* %91, i64 4
  store %18* %92, %18** %16, align 8
  %93 = load i32, i32* %15, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %15, align 4
  br label %95

95:                                               ; preds = %89
  %96 = load i32, i32* %15, align 4
  %97 = load i32, i32* %12, align 4
  %98 = icmp sle i32 %96, %97
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = load i8, i8* %21, align 1
  %101 = zext i8 %100 to i32
  %102 = icmp eq i32 %101, 1
  br label %103

103:                                              ; preds = %99, %95
  %104 = phi i1 [ true, %95 ], [ %102, %99 ]
  %105 = xor i1 %104, true
  %106 = zext i1 %105 to i32
  %107 = sext i32 %106 to i64
  %108 = call i64 @llvm.expect.i64(i64 %107, i64 0)
  %109 = icmp ne i64 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %103
  unreachable

111:                                              ; preds = %103
  br label %112

112:                                              ; preds = %111
  br label %113

113:                                              ; preds = %112
  br label %114

114:                                              ; preds = %113
  %115 = load i32, i32* %15, align 4
  %116 = load i32, i32* %12, align 4
  %117 = icmp sgt i32 %115, %116
  br i1 %117, label %122, label %118

118:                                              ; preds = %114
  %119 = load i8, i8* %21, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br label %122

122:                                              ; preds = %118, %114
  %123 = phi i1 [ true, %114 ], [ %121, %118 ]
  %124 = xor i1 %123, true
  %125 = zext i1 %124 to i32
  %126 = sext i32 %125 to i64
  %127 = call i64 @llvm.expect.i64(i64 %126, i64 0)
  %128 = icmp ne i64 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %122
  unreachable

130:                                              ; preds = %122
  br label %131

131:                                              ; preds = %130
  br label %132

132:                                              ; preds = %131
  %133 = load i8, i8* %21, align 1
  %134 = icmp ne i8 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %132
  %136 = load i32, i32* %15, align 4
  %137 = load i32, i32* %14, align 4
  %138 = icmp sgt i32 %136, %137
  %139 = xor i1 %138, true
  %140 = xor i1 %139, true
  %141 = zext i1 %140 to i32
  %142 = sext i32 %141 to i64
  %143 = call i64 @llvm.expect.i64(i64 %142, i64 0)
  %144 = icmp ne i64 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %135
  br label %293

146:                                              ; preds = %135
  br label %147

147:                                              ; preds = %146, %132
  %148 = load %18*, %18** %16, align 8
  %149 = getelementptr inbounds %18, %18* %148, i32 1
  store %18* %149, %18** %16, align 8
  %150 = load %18*, %18** %16, align 8
  store %18* %150, %18** %17, align 8
  %151 = load %18*, %18** %17, align 8
  %152 = call i32 @143(%18* %151, %0** %6, i32 0)
  %153 = icmp ne i32 %152, 0
  %154 = xor i1 %153, true
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = zext i1 %156 to i32
  %158 = sext i32 %157 to i64
  %159 = call i64 @llvm.expect.i64(i64 %158, i64 0)
  %160 = icmp ne i64 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %147
  store i32 2, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %293

162:                                              ; preds = %147
  %163 = load i32, i32* %15, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %15, align 4
  br label %165

165:                                              ; preds = %162
  %166 = load i32, i32* %15, align 4
  %167 = load i32, i32* %12, align 4
  %168 = icmp sle i32 %166, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %165
  %170 = load i8, i8* %21, align 1
  %171 = zext i8 %170 to i32
  %172 = icmp eq i32 %171, 1
  br label %173

173:                                              ; preds = %169, %165
  %174 = phi i1 [ true, %165 ], [ %172, %169 ]
  %175 = xor i1 %174, true
  %176 = zext i1 %175 to i32
  %177 = sext i32 %176 to i64
  %178 = call i64 @llvm.expect.i64(i64 %177, i64 0)
  %179 = icmp ne i64 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %173
  unreachable

181:                                              ; preds = %173
  br label %182

182:                                              ; preds = %181
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  %185 = load i32, i32* %15, align 4
  %186 = load i32, i32* %12, align 4
  %187 = icmp sgt i32 %185, %186
  br i1 %187, label %192, label %188

188:                                              ; preds = %184
  %189 = load i8, i8* %21, align 1
  %190 = zext i8 %189 to i32
  %191 = icmp eq i32 %190, 0
  br label %192

192:                                              ; preds = %188, %184
  %193 = phi i1 [ true, %184 ], [ %191, %188 ]
  %194 = xor i1 %193, true
  %195 = zext i1 %194 to i32
  %196 = sext i32 %195 to i64
  %197 = call i64 @llvm.expect.i64(i64 %196, i64 0)
  %198 = icmp ne i64 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %192
  unreachable

200:                                              ; preds = %192
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load i8, i8* %21, align 1
  %204 = icmp ne i8 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %202
  %206 = load i32, i32* %15, align 4
  %207 = load i32, i32* %14, align 4
  %208 = icmp sgt i32 %206, %207
  %209 = xor i1 %208, true
  %210 = xor i1 %209, true
  %211 = zext i1 %210 to i32
  %212 = sext i32 %211 to i64
  %213 = call i64 @llvm.expect.i64(i64 %212, i64 0)
  %214 = icmp ne i64 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %205
  br label %293

216:                                              ; preds = %205
  br label %217

217:                                              ; preds = %216, %202
  %218 = load %18*, %18** %16, align 8
  %219 = getelementptr inbounds %18, %18* %218, i32 1
  store %18* %219, %18** %16, align 8
  %220 = load %18*, %18** %16, align 8
  store %18* %220, %18** %17, align 8
  %221 = load %18*, %18** %17, align 8
  call void @161(%18* %221, %18** %5, i32 0)
  store i8 1, i8* %21, align 1
  %222 = load i32, i32* %15, align 4
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %15, align 4
  br label %224

224:                                              ; preds = %217
  %225 = load i32, i32* %15, align 4
  %226 = load i32, i32* %12, align 4
  %227 = icmp sle i32 %225, %226
  br i1 %227, label %232, label %228

228:                                              ; preds = %224
  %229 = load i8, i8* %21, align 1
  %230 = zext i8 %229 to i32
  %231 = icmp eq i32 %230, 1
  br label %232

232:                                              ; preds = %228, %224
  %233 = phi i1 [ true, %224 ], [ %231, %228 ]
  %234 = xor i1 %233, true
  %235 = zext i1 %234 to i32
  %236 = sext i32 %235 to i64
  %237 = call i64 @llvm.expect.i64(i64 %236, i64 0)
  %238 = icmp ne i64 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %232
  unreachable

240:                                              ; preds = %232
  br label %241

241:                                              ; preds = %240
  br label %242

242:                                              ; preds = %241
  br label %243

243:                                              ; preds = %242
  %244 = load i32, i32* %15, align 4
  %245 = load i32, i32* %12, align 4
  %246 = icmp sgt i32 %244, %245
  br i1 %246, label %251, label %247

247:                                              ; preds = %243
  %248 = load i8, i8* %21, align 1
  %249 = zext i8 %248 to i32
  %250 = icmp eq i32 %249, 0
  br label %251

251:                                              ; preds = %247, %243
  %252 = phi i1 [ true, %243 ], [ %250, %247 ]
  %253 = xor i1 %252, true
  %254 = zext i1 %253 to i32
  %255 = sext i32 %254 to i64
  %256 = call i64 @llvm.expect.i64(i64 %255, i64 0)
  %257 = icmp ne i64 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %251
  unreachable

259:                                              ; preds = %251
  br label %260

260:                                              ; preds = %259
  br label %261

261:                                              ; preds = %260
  %262 = load i8, i8* %21, align 1
  %263 = icmp ne i8 %262, 0
  br i1 %263, label %264, label %276

264:                                              ; preds = %261
  %265 = load i32, i32* %15, align 4
  %266 = load i32, i32* %14, align 4
  %267 = icmp sgt i32 %265, %266
  %268 = xor i1 %267, true
  %269 = xor i1 %268, true
  %270 = zext i1 %269 to i32
  %271 = sext i32 %270 to i64
  %272 = call i64 @llvm.expect.i64(i64 %271, i64 0)
  %273 = icmp ne i64 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %264
  br label %293

275:                                              ; preds = %264
  br label %276

276:                                              ; preds = %275, %261
  %277 = load %18*, %18** %16, align 8
  %278 = getelementptr inbounds %18, %18* %277, i32 1
  store %18* %278, %18** %16, align 8
  %279 = load %18*, %18** %16, align 8
  store %18* %279, %18** %17, align 8
  %280 = load %18*, %18** %17, align 8
  %281 = call i32 @152(%18* %280, i8* %10, i8* %20, i32 0)
  %282 = icmp ne i32 %281, 0
  %283 = xor i1 %282, true
  %284 = xor i1 %283, true
  %285 = xor i1 %284, true
  %286 = zext i1 %285 to i32
  %287 = sext i32 %286 to i64
  %288 = call i64 @llvm.expect.i64(i64 %287, i64 0)
  %289 = icmp ne i64 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %276
  store i32 1, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %293

291:                                              ; preds = %276
  br label %292

292:                                              ; preds = %291
  br label %293

293:                                              ; preds = %292, %290, %274, %215, %161, %145, %85
  %294 = load i32, i32* %22, align 4
  %295 = icmp ne i32 %294, 0
  %296 = xor i1 %295, true
  %297 = xor i1 %296, true
  %298 = zext i1 %297 to i32
  %299 = sext i32 %298 to i64
  %300 = call i64 @llvm.expect.i64(i64 %299, i64 0)
  %301 = icmp ne i64 %300, 0
  br i1 %301, label %302, label %325

302:                                              ; preds = %293
  %303 = load i32, i32* %22, align 4
  %304 = icmp eq i32 %303, 2
  br i1 %304, label %305, label %308

305:                                              ; preds = %302
  %306 = load i32, i32* %15, align 4
  %307 = load i8*, i8** %19, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %306, i8* %307)
  br label %324

308:                                              ; preds = %302
  %309 = load i32, i32* %22, align 4
  %310 = icmp eq i32 %309, 3
  br i1 %310, label %311, label %315

311:                                              ; preds = %308
  %312 = load i32, i32* %15, align 4
  %313 = load i8*, i8** %19, align 8
  %314 = load %18*, %18** %17, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %312, i8* %313, %18* %314)
  br label %323

315:                                              ; preds = %308
  %316 = load i32, i32* %22, align 4
  %317 = icmp eq i32 %316, 4
  br i1 %317, label %318, label %322

318:                                              ; preds = %315
  %319 = load i32, i32* %15, align 4
  %320 = load i32, i32* %18, align 4
  %321 = load %18*, %18** %17, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %319, i32 %320, %18* %321)
  br label %322

322:                                              ; preds = %318, %315
  br label %323

323:                                              ; preds = %322, %311
  br label %324

324:                                              ; preds = %323, %305
  store i32 1, i32* %23, align 4
  br label %326

325:                                              ; preds = %293
  store i32 0, i32* %23, align 4
  br label %326

326:                                              ; preds = %325, %324
  %327 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %327) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #13
  %328 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %328) #13
  %329 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %329) #13
  %330 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %330) #13
  %331 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %331) #13
  %332 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %332) #13
  %333 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %333) #13
  %334 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %334) #13
  %335 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %335) #13
  %336 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %336) #13
  %337 = load i32, i32* %23, align 4
  switch i32 %337, label %480 [
    i32 0, label %338
  ]

338:                                              ; preds = %326
  br label %339

339:                                              ; preds = %338
  br label %340

340:                                              ; preds = %339
  %341 = load %18*, %18** %5, align 8
  %342 = call zeroext i8 @157(%18* %341)
  %343 = zext i8 %342 to i32
  %344 = icmp eq i32 %343, 6
  br i1 %344, label %345, label %384

345:                                              ; preds = %340
  %346 = load %18*, %18** %5, align 8
  %347 = getelementptr inbounds %18, %18* %346, i32 0, i32 0
  %348 = bitcast %19* %347 to %0**
  %349 = load %0*, %0** %348, align 8
  %350 = getelementptr inbounds %0, %0* %349, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = icmp ne i64 %351, 0
  br i1 %352, label %360, label %353

353:                                              ; preds = %345
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @84, i32 0, i32 0))
  br label %354

354:                                              ; preds = %353
  %355 = load %18*, %18** %4, align 8
  %356 = getelementptr inbounds %18, %18* %355, i32 0, i32 1
  %357 = bitcast %20* %356 to i32*
  store i32 2, i32* %357, align 8
  br label %358

358:                                              ; preds = %354
  br label %359

359:                                              ; preds = %358
  store i32 1, i32* %23, align 4
  br label %480

360:                                              ; preds = %345
  %361 = load %0*, %0** %6, align 8
  %362 = getelementptr inbounds %0, %0* %361, i32 0, i32 3
  %363 = getelementptr inbounds [1 x i8], [1 x i8]* %362, i32 0, i32 0
  %364 = load %18*, %18** %5, align 8
  %365 = getelementptr inbounds %18, %18* %364, i32 0, i32 0
  %366 = bitcast %19* %365 to %0**
  %367 = load %0*, %0** %366, align 8
  %368 = getelementptr inbounds %0, %0* %367, i32 0, i32 3
  %369 = getelementptr inbounds [1 x i8], [1 x i8]* %368, i32 0, i32 0
  %370 = load %18*, %18** %5, align 8
  %371 = getelementptr inbounds %18, %18* %370, i32 0, i32 0
  %372 = bitcast %19* %371 to %0**
  %373 = load %0*, %0** %372, align 8
  %374 = getelementptr inbounds %0, %0* %373, i32 0, i32 2
  %375 = load i64, i64* %374, align 8
  %376 = load %0*, %0** %6, align 8
  %377 = getelementptr inbounds %0, %0* %376, i32 0, i32 3
  %378 = getelementptr inbounds [1 x i8], [1 x i8]* %377, i32 0, i32 0
  %379 = load %0*, %0** %6, align 8
  %380 = getelementptr inbounds %0, %0* %379, i32 0, i32 2
  %381 = load i64, i64* %380, align 8
  %382 = getelementptr inbounds i8, i8* %378, i64 %381
  %383 = call i8* @156(i8* %363, i8* %369, i64 %375, i8* %382)
  store i8* %383, i8** %7, align 8
  br label %410

384:                                              ; preds = %340
  %385 = load %18*, %18** %5, align 8
  %386 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i32 0, i32 0
  %387 = call i32 @166(%18* %385, i8* %386)
  %388 = icmp ne i32 %387, 0
  br i1 %388, label %389, label %396

389:                                              ; preds = %384
  br label %390

390:                                              ; preds = %389
  %391 = load %18*, %18** %4, align 8
  %392 = getelementptr inbounds %18, %18* %391, i32 0, i32 1
  %393 = bitcast %20* %392 to i32*
  store i32 2, i32* %393, align 8
  br label %394

394:                                              ; preds = %390
  br label %395

395:                                              ; preds = %394
  store i32 1, i32* %23, align 4
  br label %480

396:                                              ; preds = %384
  %397 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 1
  store i8 0, i8* %397, align 1
  %398 = load %0*, %0** %6, align 8
  %399 = getelementptr inbounds %0, %0* %398, i32 0, i32 3
  %400 = getelementptr inbounds [1 x i8], [1 x i8]* %399, i32 0, i32 0
  %401 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i32 0, i32 0
  %402 = load %0*, %0** %6, align 8
  %403 = getelementptr inbounds %0, %0* %402, i32 0, i32 3
  %404 = getelementptr inbounds [1 x i8], [1 x i8]* %403, i32 0, i32 0
  %405 = load %0*, %0** %6, align 8
  %406 = getelementptr inbounds %0, %0* %405, i32 0, i32 2
  %407 = load i64, i64* %406, align 8
  %408 = getelementptr inbounds i8, i8* %404, i64 %407
  %409 = call i8* @156(i8* %400, i8* %401, i64 1, i8* %408)
  store i8* %409, i8** %7, align 8
  br label %410

410:                                              ; preds = %396, %360
  %411 = load i8*, i8** %7, align 8
  %412 = icmp ne i8* %411, null
  br i1 %412, label %413, label %473

413:                                              ; preds = %410
  %414 = load i8*, i8** %7, align 8
  %415 = load %0*, %0** %6, align 8
  %416 = getelementptr inbounds %0, %0* %415, i32 0, i32 3
  %417 = getelementptr inbounds [1 x i8], [1 x i8]* %416, i32 0, i32 0
  %418 = ptrtoint i8* %414 to i64
  %419 = ptrtoint i8* %417 to i64
  %420 = sub i64 %418, %419
  store i64 %420, i64* %9, align 8
  %421 = load i8, i8* %10, align 1
  %422 = icmp ne i8 %421, 0
  br i1 %422, label %423, label %447

423:                                              ; preds = %413
  br label %424

424:                                              ; preds = %423
  br label %425

425:                                              ; preds = %424
  %426 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %426) #13
  %427 = load %18*, %18** %4, align 8
  store %18* %427, %18** %24, align 8
  %428 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %428) #13
  %429 = load %0*, %0** %6, align 8
  %430 = getelementptr inbounds %0, %0* %429, i32 0, i32 3
  %431 = getelementptr inbounds [1 x i8], [1 x i8]* %430, i32 0, i32 0
  %432 = load i64, i64* %9, align 8
  %433 = call %0* @148(i8* %431, i64 %432, i32 0)
  store %0* %433, %0** %25, align 8
  %434 = load %0*, %0** %25, align 8
  %435 = load %18*, %18** %24, align 8
  %436 = getelementptr inbounds %18, %18* %435, i32 0, i32 0
  %437 = bitcast %19* %436 to %0**
  store %0* %434, %0** %437, align 8
  %438 = load %18*, %18** %24, align 8
  %439 = getelementptr inbounds %18, %18* %438, i32 0, i32 1
  %440 = bitcast %20* %439 to i32*
  store i32 5126, i32* %440, align 8
  %441 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %441) #13
  %442 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %442) #13
  br label %443

443:                                              ; preds = %425
  br label %444

444:                                              ; preds = %443
  br label %445

445:                                              ; preds = %444
  br label %446

446:                                              ; preds = %445
  store i32 1, i32* %23, align 4
  br label %480

447:                                              ; preds = %413
  br label %448

448:                                              ; preds = %447
  br label %449

449:                                              ; preds = %448
  %450 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %450) #13
  %451 = load %18*, %18** %4, align 8
  store %18* %451, %18** %26, align 8
  %452 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %452) #13
  %453 = load i8*, i8** %7, align 8
  %454 = load %0*, %0** %6, align 8
  %455 = getelementptr inbounds %0, %0* %454, i32 0, i32 2
  %456 = load i64, i64* %455, align 8
  %457 = load i64, i64* %9, align 8
  %458 = sub i64 %456, %457
  %459 = call %0* @148(i8* %453, i64 %458, i32 0)
  store %0* %459, %0** %27, align 8
  %460 = load %0*, %0** %27, align 8
  %461 = load %18*, %18** %26, align 8
  %462 = getelementptr inbounds %18, %18* %461, i32 0, i32 0
  %463 = bitcast %19* %462 to %0**
  store %0* %460, %0** %463, align 8
  %464 = load %18*, %18** %26, align 8
  %465 = getelementptr inbounds %18, %18* %464, i32 0, i32 1
  %466 = bitcast %20* %465 to i32*
  store i32 5126, i32* %466, align 8
  %467 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %467) #13
  %468 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %468) #13
  br label %469

469:                                              ; preds = %449
  br label %470

470:                                              ; preds = %469
  br label %471

471:                                              ; preds = %470
  br label %472

472:                                              ; preds = %471
  store i32 1, i32* %23, align 4
  br label %480

473:                                              ; preds = %410
  br label %474

474:                                              ; preds = %473
  %475 = load %18*, %18** %4, align 8
  %476 = getelementptr inbounds %18, %18* %475, i32 0, i32 1
  %477 = bitcast %20* %476 to i32*
  store i32 2, i32* %477, align 8
  br label %478

478:                                              ; preds = %474
  br label %479

479:                                              ; preds = %478
  store i32 1, i32* %23, align 4
  br label %480

480:                                              ; preds = %479, %472, %446, %395, %359, %326
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #13
  %481 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %481) #13
  %482 = bitcast [2 x i8]* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %482) #13
  %483 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %483) #13
  %484 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %484) #13
  %485 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %485) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strpos(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca [2 x i8], align 1
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %18*, align 8
  %16 = alloca %18*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %24 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  store i8* null, i8** %7, align 8
  %27 = bitcast [2 x i8]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %27) #13
  %28 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  store i64 0, i64* %9, align 8
  br label %29

29:                                               ; preds = %2
  %30 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  store i32 0, i32* %10, align 4
  %31 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 2, i32* %11, align 4
  %32 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 3, i32* %12, align 4
  %33 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  %34 = load %14*, %14** %3, align 8
  %35 = getelementptr inbounds %14, %14* %34, i32 0, i32 4
  %36 = getelementptr inbounds %18, %18* %35, i32 0, i32 2
  %37 = bitcast %21* %36 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %13, align 4
  %39 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  %40 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  store %18* null, %18** %16, align 8
  %42 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #13
  store i32 0, i32* %17, align 4
  %43 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #13
  store i8 0, i8* %20, align 1
  %44 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  store i32 0, i32* %21, align 4
  %45 = load i32, i32* %14, align 4
  %46 = load %18*, %18** %15, align 8
  %47 = load %18*, %18** %16, align 8
  %48 = load i32, i32* %17, align 4
  %49 = load i8*, i8** %18, align 8
  %50 = load i8, i8* %19, align 1
  %51 = load i8, i8* %20, align 1
  br label %52

52:                                               ; preds = %29
  %53 = load i32, i32* %13, align 4
  %54 = load i32, i32* %11, align 4
  %55 = icmp slt i32 %53, %54
  %56 = xor i1 %55, true
  %57 = xor i1 %56, true
  %58 = zext i1 %57 to i32
  %59 = sext i32 %58 to i64
  %60 = call i64 @llvm.expect.i64(i64 %59, i64 0)
  %61 = icmp ne i64 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %52
  %63 = load i32, i32* %13, align 4
  %64 = load i32, i32* %12, align 4
  %65 = icmp sgt i32 %63, %64
  %66 = xor i1 %65, true
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0)
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %85

72:                                               ; preds = %62
  %73 = load i32, i32* %12, align 4
  %74 = icmp sge i32 %73, 0
  %75 = xor i1 %74, true
  %76 = xor i1 %75, true
  %77 = zext i1 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = call i64 @llvm.expect.i64(i64 %78, i64 1)
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %72, %52
  %82 = load i32, i32* %13, align 4
  %83 = load i32, i32* %11, align 4
  %84 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %82, i32 %83, i32 %84)
  store i32 1, i32* %21, align 4
  br label %289

85:                                               ; preds = %72, %62
  store i32 0, i32* %14, align 4
  %86 = load %14*, %14** %3, align 8
  %87 = bitcast %14* %86 to %18*
  %88 = getelementptr inbounds %18, %18* %87, i64 4
  store %18* %88, %18** %15, align 8
  %89 = load i32, i32* %14, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %14, align 4
  br label %91

91:                                               ; preds = %85
  %92 = load i32, i32* %14, align 4
  %93 = load i32, i32* %11, align 4
  %94 = icmp sle i32 %92, %93
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = load i8, i8* %20, align 1
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %97, 1
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi i1 [ true, %91 ], [ %98, %95 ]
  %101 = xor i1 %100, true
  %102 = zext i1 %101 to i32
  %103 = sext i32 %102 to i64
  %104 = call i64 @llvm.expect.i64(i64 %103, i64 0)
  %105 = icmp ne i64 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %99
  unreachable

107:                                              ; preds = %99
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %14, align 4
  %112 = load i32, i32* %11, align 4
  %113 = icmp sgt i32 %111, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load i8, i8* %20, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp eq i32 %116, 0
  br label %118

118:                                              ; preds = %114, %110
  %119 = phi i1 [ true, %110 ], [ %117, %114 ]
  %120 = xor i1 %119, true
  %121 = zext i1 %120 to i32
  %122 = sext i32 %121 to i64
  %123 = call i64 @llvm.expect.i64(i64 %122, i64 0)
  %124 = icmp ne i64 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %118
  unreachable

126:                                              ; preds = %118
  br label %127

127:                                              ; preds = %126
  br label %128

128:                                              ; preds = %127
  %129 = load i8, i8* %20, align 1
  %130 = icmp ne i8 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %128
  %132 = load i32, i32* %14, align 4
  %133 = load i32, i32* %13, align 4
  %134 = icmp sgt i32 %132, %133
  %135 = xor i1 %134, true
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %131
  br label %289

142:                                              ; preds = %131
  br label %143

143:                                              ; preds = %142, %128
  %144 = load %18*, %18** %15, align 8
  %145 = getelementptr inbounds %18, %18* %144, i32 1
  store %18* %145, %18** %15, align 8
  %146 = load %18*, %18** %15, align 8
  store %18* %146, %18** %16, align 8
  %147 = load %18*, %18** %16, align 8
  %148 = call i32 @143(%18* %147, %0** %6, i32 0)
  %149 = icmp ne i32 %148, 0
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %143
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %289

158:                                              ; preds = %143
  %159 = load i32, i32* %14, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %14, align 4
  br label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %14, align 4
  %163 = load i32, i32* %11, align 4
  %164 = icmp sle i32 %162, %163
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = load i8, i8* %20, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp eq i32 %167, 1
  br label %169

169:                                              ; preds = %165, %161
  %170 = phi i1 [ true, %161 ], [ %168, %165 ]
  %171 = xor i1 %170, true
  %172 = zext i1 %171 to i32
  %173 = sext i32 %172 to i64
  %174 = call i64 @llvm.expect.i64(i64 %173, i64 0)
  %175 = icmp ne i64 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %169
  unreachable

177:                                              ; preds = %169
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  br label %180

180:                                              ; preds = %179
  %181 = load i32, i32* %14, align 4
  %182 = load i32, i32* %11, align 4
  %183 = icmp sgt i32 %181, %182
  br i1 %183, label %188, label %184

184:                                              ; preds = %180
  %185 = load i8, i8* %20, align 1
  %186 = zext i8 %185 to i32
  %187 = icmp eq i32 %186, 0
  br label %188

188:                                              ; preds = %184, %180
  %189 = phi i1 [ true, %180 ], [ %187, %184 ]
  %190 = xor i1 %189, true
  %191 = zext i1 %190 to i32
  %192 = sext i32 %191 to i64
  %193 = call i64 @llvm.expect.i64(i64 %192, i64 0)
  %194 = icmp ne i64 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %188
  unreachable

196:                                              ; preds = %188
  br label %197

197:                                              ; preds = %196
  br label %198

198:                                              ; preds = %197
  %199 = load i8, i8* %20, align 1
  %200 = icmp ne i8 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %198
  %202 = load i32, i32* %14, align 4
  %203 = load i32, i32* %13, align 4
  %204 = icmp sgt i32 %202, %203
  %205 = xor i1 %204, true
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %201
  br label %289

212:                                              ; preds = %201
  br label %213

213:                                              ; preds = %212, %198
  %214 = load %18*, %18** %15, align 8
  %215 = getelementptr inbounds %18, %18* %214, i32 1
  store %18* %215, %18** %15, align 8
  %216 = load %18*, %18** %15, align 8
  store %18* %216, %18** %16, align 8
  %217 = load %18*, %18** %16, align 8
  call void @161(%18* %217, %18** %5, i32 0)
  store i8 1, i8* %20, align 1
  %218 = load i32, i32* %14, align 4
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %14, align 4
  br label %220

220:                                              ; preds = %213
  %221 = load i32, i32* %14, align 4
  %222 = load i32, i32* %11, align 4
  %223 = icmp sle i32 %221, %222
  br i1 %223, label %228, label %224

224:                                              ; preds = %220
  %225 = load i8, i8* %20, align 1
  %226 = zext i8 %225 to i32
  %227 = icmp eq i32 %226, 1
  br label %228

228:                                              ; preds = %224, %220
  %229 = phi i1 [ true, %220 ], [ %227, %224 ]
  %230 = xor i1 %229, true
  %231 = zext i1 %230 to i32
  %232 = sext i32 %231 to i64
  %233 = call i64 @llvm.expect.i64(i64 %232, i64 0)
  %234 = icmp ne i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %228
  unreachable

236:                                              ; preds = %228
  br label %237

237:                                              ; preds = %236
  br label %238

238:                                              ; preds = %237
  br label %239

239:                                              ; preds = %238
  %240 = load i32, i32* %14, align 4
  %241 = load i32, i32* %11, align 4
  %242 = icmp sgt i32 %240, %241
  br i1 %242, label %247, label %243

243:                                              ; preds = %239
  %244 = load i8, i8* %20, align 1
  %245 = zext i8 %244 to i32
  %246 = icmp eq i32 %245, 0
  br label %247

247:                                              ; preds = %243, %239
  %248 = phi i1 [ true, %239 ], [ %246, %243 ]
  %249 = xor i1 %248, true
  %250 = zext i1 %249 to i32
  %251 = sext i32 %250 to i64
  %252 = call i64 @llvm.expect.i64(i64 %251, i64 0)
  %253 = icmp ne i64 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %247
  unreachable

255:                                              ; preds = %247
  br label %256

256:                                              ; preds = %255
  br label %257

257:                                              ; preds = %256
  %258 = load i8, i8* %20, align 1
  %259 = icmp ne i8 %258, 0
  br i1 %259, label %260, label %272

260:                                              ; preds = %257
  %261 = load i32, i32* %14, align 4
  %262 = load i32, i32* %13, align 4
  %263 = icmp sgt i32 %261, %262
  %264 = xor i1 %263, true
  %265 = xor i1 %264, true
  %266 = zext i1 %265 to i32
  %267 = sext i32 %266 to i64
  %268 = call i64 @llvm.expect.i64(i64 %267, i64 0)
  %269 = icmp ne i64 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %260
  br label %289

271:                                              ; preds = %260
  br label %272

272:                                              ; preds = %271, %257
  %273 = load %18*, %18** %15, align 8
  %274 = getelementptr inbounds %18, %18* %273, i32 1
  store %18* %274, %18** %15, align 8
  %275 = load %18*, %18** %15, align 8
  store %18* %275, %18** %16, align 8
  %276 = load %18*, %18** %16, align 8
  %277 = call i32 @147(%18* %276, i64* %9, i8* %19, i32 0, i32 0)
  %278 = icmp ne i32 %277, 0
  %279 = xor i1 %278, true
  %280 = xor i1 %279, true
  %281 = xor i1 %280, true
  %282 = zext i1 %281 to i32
  %283 = sext i32 %282 to i64
  %284 = call i64 @llvm.expect.i64(i64 %283, i64 0)
  %285 = icmp ne i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %272
  store i32 0, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %289

287:                                              ; preds = %272
  br label %288

288:                                              ; preds = %287
  br label %289

289:                                              ; preds = %288, %286, %270, %211, %157, %141, %81
  %290 = load i32, i32* %21, align 4
  %291 = icmp ne i32 %290, 0
  %292 = xor i1 %291, true
  %293 = xor i1 %292, true
  %294 = zext i1 %293 to i32
  %295 = sext i32 %294 to i64
  %296 = call i64 @llvm.expect.i64(i64 %295, i64 0)
  %297 = icmp ne i64 %296, 0
  br i1 %297, label %298, label %321

298:                                              ; preds = %289
  %299 = load i32, i32* %21, align 4
  %300 = icmp eq i32 %299, 2
  br i1 %300, label %301, label %304

301:                                              ; preds = %298
  %302 = load i32, i32* %14, align 4
  %303 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %302, i8* %303)
  br label %320

304:                                              ; preds = %298
  %305 = load i32, i32* %21, align 4
  %306 = icmp eq i32 %305, 3
  br i1 %306, label %307, label %311

307:                                              ; preds = %304
  %308 = load i32, i32* %14, align 4
  %309 = load i8*, i8** %18, align 8
  %310 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %308, i8* %309, %18* %310)
  br label %319

311:                                              ; preds = %304
  %312 = load i32, i32* %21, align 4
  %313 = icmp eq i32 %312, 4
  br i1 %313, label %314, label %318

314:                                              ; preds = %311
  %315 = load i32, i32* %14, align 4
  %316 = load i32, i32* %17, align 4
  %317 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %315, i32 %316, %18* %317)
  br label %318

318:                                              ; preds = %314, %311
  br label %319

319:                                              ; preds = %318, %307
  br label %320

320:                                              ; preds = %319, %301
  store i32 1, i32* %22, align 4
  br label %322

321:                                              ; preds = %289
  store i32 0, i32* %22, align 4
  br label %322

322:                                              ; preds = %321, %320
  %323 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %323) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  %324 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %324) #13
  %325 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %325) #13
  %326 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %326) #13
  %327 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %327) #13
  %328 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %328) #13
  %329 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %329) #13
  %330 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %330) #13
  %331 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %331) #13
  %332 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %332) #13
  %333 = load i32, i32* %22, align 4
  switch i32 %333, label %462 [
    i32 0, label %334
  ]

334:                                              ; preds = %322
  br label %335

335:                                              ; preds = %334
  br label %336

336:                                              ; preds = %335
  %337 = load i64, i64* %9, align 8
  %338 = icmp slt i64 %337, 0
  br i1 %338, label %339, label %345

339:                                              ; preds = %336
  %340 = load %0*, %0** %6, align 8
  %341 = getelementptr inbounds %0, %0* %340, i32 0, i32 2
  %342 = load i64, i64* %341, align 8
  %343 = load i64, i64* %9, align 8
  %344 = add nsw i64 %343, %342
  store i64 %344, i64* %9, align 8
  br label %345

345:                                              ; preds = %339, %336
  %346 = load i64, i64* %9, align 8
  %347 = icmp slt i64 %346, 0
  br i1 %347, label %354, label %348

348:                                              ; preds = %345
  %349 = load i64, i64* %9, align 8
  %350 = load %0*, %0** %6, align 8
  %351 = getelementptr inbounds %0, %0* %350, i32 0, i32 2
  %352 = load i64, i64* %351, align 8
  %353 = icmp ugt i64 %349, %352
  br i1 %353, label %354, label %361

354:                                              ; preds = %348, %345
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @85, i32 0, i32 0))
  br label %355

355:                                              ; preds = %354
  %356 = load %18*, %18** %4, align 8
  %357 = getelementptr inbounds %18, %18* %356, i32 0, i32 1
  %358 = bitcast %20* %357 to i32*
  store i32 2, i32* %358, align 8
  br label %359

359:                                              ; preds = %355
  br label %360

360:                                              ; preds = %359
  store i32 1, i32* %22, align 4
  br label %462

361:                                              ; preds = %348
  %362 = load %18*, %18** %5, align 8
  %363 = call zeroext i8 @157(%18* %362)
  %364 = zext i8 %363 to i32
  %365 = icmp eq i32 %364, 6
  br i1 %365, label %366, label %407

366:                                              ; preds = %361
  %367 = load %18*, %18** %5, align 8
  %368 = getelementptr inbounds %18, %18* %367, i32 0, i32 0
  %369 = bitcast %19* %368 to %0**
  %370 = load %0*, %0** %369, align 8
  %371 = getelementptr inbounds %0, %0* %370, i32 0, i32 2
  %372 = load i64, i64* %371, align 8
  %373 = icmp ne i64 %372, 0
  br i1 %373, label %381, label %374

374:                                              ; preds = %366
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @84, i32 0, i32 0))
  br label %375

375:                                              ; preds = %374
  %376 = load %18*, %18** %4, align 8
  %377 = getelementptr inbounds %18, %18* %376, i32 0, i32 1
  %378 = bitcast %20* %377 to i32*
  store i32 2, i32* %378, align 8
  br label %379

379:                                              ; preds = %375
  br label %380

380:                                              ; preds = %379
  store i32 1, i32* %22, align 4
  br label %462

381:                                              ; preds = %366
  %382 = load %0*, %0** %6, align 8
  %383 = getelementptr inbounds %0, %0* %382, i32 0, i32 3
  %384 = getelementptr inbounds [1 x i8], [1 x i8]* %383, i32 0, i32 0
  %385 = load i64, i64* %9, align 8
  %386 = getelementptr inbounds i8, i8* %384, i64 %385
  %387 = load %18*, %18** %5, align 8
  %388 = getelementptr inbounds %18, %18* %387, i32 0, i32 0
  %389 = bitcast %19* %388 to %0**
  %390 = load %0*, %0** %389, align 8
  %391 = getelementptr inbounds %0, %0* %390, i32 0, i32 3
  %392 = getelementptr inbounds [1 x i8], [1 x i8]* %391, i32 0, i32 0
  %393 = load %18*, %18** %5, align 8
  %394 = getelementptr inbounds %18, %18* %393, i32 0, i32 0
  %395 = bitcast %19* %394 to %0**
  %396 = load %0*, %0** %395, align 8
  %397 = getelementptr inbounds %0, %0* %396, i32 0, i32 2
  %398 = load i64, i64* %397, align 8
  %399 = load %0*, %0** %6, align 8
  %400 = getelementptr inbounds %0, %0* %399, i32 0, i32 3
  %401 = getelementptr inbounds [1 x i8], [1 x i8]* %400, i32 0, i32 0
  %402 = load %0*, %0** %6, align 8
  %403 = getelementptr inbounds %0, %0* %402, i32 0, i32 2
  %404 = load i64, i64* %403, align 8
  %405 = getelementptr inbounds i8, i8* %401, i64 %404
  %406 = call i8* @156(i8* %386, i8* %392, i64 %398, i8* %405)
  store i8* %406, i8** %7, align 8
  br label %435

407:                                              ; preds = %361
  %408 = load %18*, %18** %5, align 8
  %409 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i32 0, i32 0
  %410 = call i32 @166(%18* %408, i8* %409)
  %411 = icmp ne i32 %410, 0
  br i1 %411, label %412, label %419

412:                                              ; preds = %407
  br label %413

413:                                              ; preds = %412
  %414 = load %18*, %18** %4, align 8
  %415 = getelementptr inbounds %18, %18* %414, i32 0, i32 1
  %416 = bitcast %20* %415 to i32*
  store i32 2, i32* %416, align 8
  br label %417

417:                                              ; preds = %413
  br label %418

418:                                              ; preds = %417
  store i32 1, i32* %22, align 4
  br label %462

419:                                              ; preds = %407
  %420 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 1
  store i8 0, i8* %420, align 1
  %421 = load %0*, %0** %6, align 8
  %422 = getelementptr inbounds %0, %0* %421, i32 0, i32 3
  %423 = getelementptr inbounds [1 x i8], [1 x i8]* %422, i32 0, i32 0
  %424 = load i64, i64* %9, align 8
  %425 = getelementptr inbounds i8, i8* %423, i64 %424
  %426 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i32 0, i32 0
  %427 = load %0*, %0** %6, align 8
  %428 = getelementptr inbounds %0, %0* %427, i32 0, i32 3
  %429 = getelementptr inbounds [1 x i8], [1 x i8]* %428, i32 0, i32 0
  %430 = load %0*, %0** %6, align 8
  %431 = getelementptr inbounds %0, %0* %430, i32 0, i32 2
  %432 = load i64, i64* %431, align 8
  %433 = getelementptr inbounds i8, i8* %429, i64 %432
  %434 = call i8* @156(i8* %425, i8* %426, i64 1, i8* %433)
  store i8* %434, i8** %7, align 8
  br label %435

435:                                              ; preds = %419, %381
  %436 = load i8*, i8** %7, align 8
  %437 = icmp ne i8* %436, null
  br i1 %437, label %438, label %455

438:                                              ; preds = %435
  %439 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %439) #13
  %440 = load %18*, %18** %4, align 8
  store %18* %440, %18** %23, align 8
  %441 = load i8*, i8** %7, align 8
  %442 = load %0*, %0** %6, align 8
  %443 = getelementptr inbounds %0, %0* %442, i32 0, i32 3
  %444 = getelementptr inbounds [1 x i8], [1 x i8]* %443, i32 0, i32 0
  %445 = ptrtoint i8* %441 to i64
  %446 = ptrtoint i8* %444 to i64
  %447 = sub i64 %445, %446
  %448 = load %18*, %18** %23, align 8
  %449 = getelementptr inbounds %18, %18* %448, i32 0, i32 0
  %450 = bitcast %19* %449 to i64*
  store i64 %447, i64* %450, align 8
  %451 = load %18*, %18** %23, align 8
  %452 = getelementptr inbounds %18, %18* %451, i32 0, i32 1
  %453 = bitcast %20* %452 to i32*
  store i32 4, i32* %453, align 8
  %454 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %454) #13
  store i32 1, i32* %22, align 4
  br label %462

455:                                              ; preds = %435
  br label %456

456:                                              ; preds = %455
  %457 = load %18*, %18** %4, align 8
  %458 = getelementptr inbounds %18, %18* %457, i32 0, i32 1
  %459 = bitcast %20* %458 to i32*
  store i32 2, i32* %459, align 8
  br label %460

460:                                              ; preds = %456
  br label %461

461:                                              ; preds = %460
  store i32 1, i32* %22, align 4
  br label %462

462:                                              ; preds = %461, %438, %418, %380, %360, %322
  %463 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %463) #13
  %464 = bitcast [2 x i8]* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %464) #13
  %465 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %465) #13
  %466 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %466) #13
  %467 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %467) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_stripos(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i64, align 8
  %8 = alloca [2 x i8], align 1
  %9 = alloca %18*, align 8
  %10 = alloca %0*, align 8
  %11 = alloca %0*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %18*, align 8
  %18 = alloca %18*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %28 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  store i8* null, i8** %5, align 8
  %29 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store i64 0, i64* %7, align 8
  %31 = bitcast [2 x i8]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %31) #13
  %32 = bitcast %18** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  store %0* null, %0** %10, align 8
  %34 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  br label %35

35:                                               ; preds = %2
  %36 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 0, i32* %12, align 4
  %37 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 2, i32* %13, align 4
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 3, i32* %14, align 4
  %39 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  %40 = load %14*, %14** %3, align 8
  %41 = getelementptr inbounds %14, %14* %40, i32 0, i32 4
  %42 = getelementptr inbounds %18, %18* %41, i32 0, i32 2
  %43 = bitcast %21* %42 to i32*
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %15, align 4
  %45 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #13
  %46 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  %47 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store %18* null, %18** %18, align 8
  %48 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %19, align 4
  %49 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  store i8 0, i8* %22, align 1
  %50 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #13
  store i32 0, i32* %23, align 4
  %51 = load i32, i32* %16, align 4
  %52 = load %18*, %18** %17, align 8
  %53 = load %18*, %18** %18, align 8
  %54 = load i32, i32* %19, align 4
  %55 = load i8*, i8** %20, align 8
  %56 = load i8, i8* %21, align 1
  %57 = load i8, i8* %22, align 1
  br label %58

58:                                               ; preds = %35
  %59 = load i32, i32* %15, align 4
  %60 = load i32, i32* %13, align 4
  %61 = icmp slt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %87, label %68

68:                                               ; preds = %58
  %69 = load i32, i32* %15, align 4
  %70 = load i32, i32* %14, align 4
  %71 = icmp sgt i32 %69, %70
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 0)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %91

78:                                               ; preds = %68
  %79 = load i32, i32* %14, align 4
  %80 = icmp sge i32 %79, 0
  %81 = xor i1 %80, true
  %82 = xor i1 %81, true
  %83 = zext i1 %82 to i32
  %84 = sext i32 %83 to i64
  %85 = call i64 @llvm.expect.i64(i64 %84, i64 1)
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %78, %58
  %88 = load i32, i32* %15, align 4
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %88, i32 %89, i32 %90)
  store i32 1, i32* %23, align 4
  br label %295

91:                                               ; preds = %78, %68
  store i32 0, i32* %16, align 4
  %92 = load %14*, %14** %3, align 8
  %93 = bitcast %14* %92 to %18*
  %94 = getelementptr inbounds %18, %18* %93, i64 4
  store %18* %94, %18** %17, align 8
  %95 = load i32, i32* %16, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %16, align 4
  br label %97

97:                                               ; preds = %91
  %98 = load i32, i32* %16, align 4
  %99 = load i32, i32* %13, align 4
  %100 = icmp sle i32 %98, %99
  br i1 %100, label %105, label %101

101:                                              ; preds = %97
  %102 = load i8, i8* %22, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp eq i32 %103, 1
  br label %105

105:                                              ; preds = %101, %97
  %106 = phi i1 [ true, %97 ], [ %104, %101 ]
  %107 = xor i1 %106, true
  %108 = zext i1 %107 to i32
  %109 = sext i32 %108 to i64
  %110 = call i64 @llvm.expect.i64(i64 %109, i64 0)
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %105
  unreachable

113:                                              ; preds = %105
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  %117 = load i32, i32* %16, align 4
  %118 = load i32, i32* %13, align 4
  %119 = icmp sgt i32 %117, %118
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = load i8, i8* %22, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp eq i32 %122, 0
  br label %124

124:                                              ; preds = %120, %116
  %125 = phi i1 [ true, %116 ], [ %123, %120 ]
  %126 = xor i1 %125, true
  %127 = zext i1 %126 to i32
  %128 = sext i32 %127 to i64
  %129 = call i64 @llvm.expect.i64(i64 %128, i64 0)
  %130 = icmp ne i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %124
  unreachable

132:                                              ; preds = %124
  br label %133

133:                                              ; preds = %132
  br label %134

134:                                              ; preds = %133
  %135 = load i8, i8* %22, align 1
  %136 = icmp ne i8 %135, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %134
  %138 = load i32, i32* %16, align 4
  %139 = load i32, i32* %15, align 4
  %140 = icmp sgt i32 %138, %139
  %141 = xor i1 %140, true
  %142 = xor i1 %141, true
  %143 = zext i1 %142 to i32
  %144 = sext i32 %143 to i64
  %145 = call i64 @llvm.expect.i64(i64 %144, i64 0)
  %146 = icmp ne i64 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %137
  br label %295

148:                                              ; preds = %137
  br label %149

149:                                              ; preds = %148, %134
  %150 = load %18*, %18** %17, align 8
  %151 = getelementptr inbounds %18, %18* %150, i32 1
  store %18* %151, %18** %17, align 8
  %152 = load %18*, %18** %17, align 8
  store %18* %152, %18** %18, align 8
  %153 = load %18*, %18** %18, align 8
  %154 = call i32 @143(%18* %153, %0** %6, i32 0)
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = zext i1 %158 to i32
  %160 = sext i32 %159 to i64
  %161 = call i64 @llvm.expect.i64(i64 %160, i64 0)
  %162 = icmp ne i64 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %149
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %295

164:                                              ; preds = %149
  %165 = load i32, i32* %16, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %16, align 4
  br label %167

167:                                              ; preds = %164
  %168 = load i32, i32* %16, align 4
  %169 = load i32, i32* %13, align 4
  %170 = icmp sle i32 %168, %169
  br i1 %170, label %175, label %171

171:                                              ; preds = %167
  %172 = load i8, i8* %22, align 1
  %173 = zext i8 %172 to i32
  %174 = icmp eq i32 %173, 1
  br label %175

175:                                              ; preds = %171, %167
  %176 = phi i1 [ true, %167 ], [ %174, %171 ]
  %177 = xor i1 %176, true
  %178 = zext i1 %177 to i32
  %179 = sext i32 %178 to i64
  %180 = call i64 @llvm.expect.i64(i64 %179, i64 0)
  %181 = icmp ne i64 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %175
  unreachable

183:                                              ; preds = %175
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  br label %186

186:                                              ; preds = %185
  %187 = load i32, i32* %16, align 4
  %188 = load i32, i32* %13, align 4
  %189 = icmp sgt i32 %187, %188
  br i1 %189, label %194, label %190

190:                                              ; preds = %186
  %191 = load i8, i8* %22, align 1
  %192 = zext i8 %191 to i32
  %193 = icmp eq i32 %192, 0
  br label %194

194:                                              ; preds = %190, %186
  %195 = phi i1 [ true, %186 ], [ %193, %190 ]
  %196 = xor i1 %195, true
  %197 = zext i1 %196 to i32
  %198 = sext i32 %197 to i64
  %199 = call i64 @llvm.expect.i64(i64 %198, i64 0)
  %200 = icmp ne i64 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %194
  unreachable

202:                                              ; preds = %194
  br label %203

203:                                              ; preds = %202
  br label %204

204:                                              ; preds = %203
  %205 = load i8, i8* %22, align 1
  %206 = icmp ne i8 %205, 0
  br i1 %206, label %207, label %219

207:                                              ; preds = %204
  %208 = load i32, i32* %16, align 4
  %209 = load i32, i32* %15, align 4
  %210 = icmp sgt i32 %208, %209
  %211 = xor i1 %210, true
  %212 = xor i1 %211, true
  %213 = zext i1 %212 to i32
  %214 = sext i32 %213 to i64
  %215 = call i64 @llvm.expect.i64(i64 %214, i64 0)
  %216 = icmp ne i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %207
  br label %295

218:                                              ; preds = %207
  br label %219

219:                                              ; preds = %218, %204
  %220 = load %18*, %18** %17, align 8
  %221 = getelementptr inbounds %18, %18* %220, i32 1
  store %18* %221, %18** %17, align 8
  %222 = load %18*, %18** %17, align 8
  store %18* %222, %18** %18, align 8
  %223 = load %18*, %18** %18, align 8
  call void @161(%18* %223, %18** %9, i32 0)
  store i8 1, i8* %22, align 1
  %224 = load i32, i32* %16, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %16, align 4
  br label %226

226:                                              ; preds = %219
  %227 = load i32, i32* %16, align 4
  %228 = load i32, i32* %13, align 4
  %229 = icmp sle i32 %227, %228
  br i1 %229, label %234, label %230

230:                                              ; preds = %226
  %231 = load i8, i8* %22, align 1
  %232 = zext i8 %231 to i32
  %233 = icmp eq i32 %232, 1
  br label %234

234:                                              ; preds = %230, %226
  %235 = phi i1 [ true, %226 ], [ %233, %230 ]
  %236 = xor i1 %235, true
  %237 = zext i1 %236 to i32
  %238 = sext i32 %237 to i64
  %239 = call i64 @llvm.expect.i64(i64 %238, i64 0)
  %240 = icmp ne i64 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %234
  unreachable

242:                                              ; preds = %234
  br label %243

243:                                              ; preds = %242
  br label %244

244:                                              ; preds = %243
  br label %245

245:                                              ; preds = %244
  %246 = load i32, i32* %16, align 4
  %247 = load i32, i32* %13, align 4
  %248 = icmp sgt i32 %246, %247
  br i1 %248, label %253, label %249

249:                                              ; preds = %245
  %250 = load i8, i8* %22, align 1
  %251 = zext i8 %250 to i32
  %252 = icmp eq i32 %251, 0
  br label %253

253:                                              ; preds = %249, %245
  %254 = phi i1 [ true, %245 ], [ %252, %249 ]
  %255 = xor i1 %254, true
  %256 = zext i1 %255 to i32
  %257 = sext i32 %256 to i64
  %258 = call i64 @llvm.expect.i64(i64 %257, i64 0)
  %259 = icmp ne i64 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %253
  unreachable

261:                                              ; preds = %253
  br label %262

262:                                              ; preds = %261
  br label %263

263:                                              ; preds = %262
  %264 = load i8, i8* %22, align 1
  %265 = icmp ne i8 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %263
  %267 = load i32, i32* %16, align 4
  %268 = load i32, i32* %15, align 4
  %269 = icmp sgt i32 %267, %268
  %270 = xor i1 %269, true
  %271 = xor i1 %270, true
  %272 = zext i1 %271 to i32
  %273 = sext i32 %272 to i64
  %274 = call i64 @llvm.expect.i64(i64 %273, i64 0)
  %275 = icmp ne i64 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %266
  br label %295

277:                                              ; preds = %266
  br label %278

278:                                              ; preds = %277, %263
  %279 = load %18*, %18** %17, align 8
  %280 = getelementptr inbounds %18, %18* %279, i32 1
  store %18* %280, %18** %17, align 8
  %281 = load %18*, %18** %17, align 8
  store %18* %281, %18** %18, align 8
  %282 = load %18*, %18** %18, align 8
  %283 = call i32 @147(%18* %282, i64* %7, i8* %21, i32 0, i32 0)
  %284 = icmp ne i32 %283, 0
  %285 = xor i1 %284, true
  %286 = xor i1 %285, true
  %287 = xor i1 %286, true
  %288 = zext i1 %287 to i32
  %289 = sext i32 %288 to i64
  %290 = call i64 @llvm.expect.i64(i64 %289, i64 0)
  %291 = icmp ne i64 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %278
  store i32 0, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %295

293:                                              ; preds = %278
  br label %294

294:                                              ; preds = %293
  br label %295

295:                                              ; preds = %294, %292, %276, %217, %163, %147, %87
  %296 = load i32, i32* %23, align 4
  %297 = icmp ne i32 %296, 0
  %298 = xor i1 %297, true
  %299 = xor i1 %298, true
  %300 = zext i1 %299 to i32
  %301 = sext i32 %300 to i64
  %302 = call i64 @llvm.expect.i64(i64 %301, i64 0)
  %303 = icmp ne i64 %302, 0
  br i1 %303, label %304, label %327

304:                                              ; preds = %295
  %305 = load i32, i32* %23, align 4
  %306 = icmp eq i32 %305, 2
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = load i32, i32* %16, align 4
  %309 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %308, i8* %309)
  br label %326

310:                                              ; preds = %304
  %311 = load i32, i32* %23, align 4
  %312 = icmp eq i32 %311, 3
  br i1 %312, label %313, label %317

313:                                              ; preds = %310
  %314 = load i32, i32* %16, align 4
  %315 = load i8*, i8** %20, align 8
  %316 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %314, i8* %315, %18* %316)
  br label %325

317:                                              ; preds = %310
  %318 = load i32, i32* %23, align 4
  %319 = icmp eq i32 %318, 4
  br i1 %319, label %320, label %324

320:                                              ; preds = %317
  %321 = load i32, i32* %16, align 4
  %322 = load i32, i32* %19, align 4
  %323 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %321, i32 %322, %18* %323)
  br label %324

324:                                              ; preds = %320, %317
  br label %325

325:                                              ; preds = %324, %313
  br label %326

326:                                              ; preds = %325, %307
  store i32 1, i32* %24, align 4
  br label %328

327:                                              ; preds = %295
  store i32 0, i32* %24, align 4
  br label %328

328:                                              ; preds = %327, %326
  %329 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %329) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  %330 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %330) #13
  %331 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %331) #13
  %332 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %332) #13
  %333 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %333) #13
  %334 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %334) #13
  %335 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %335) #13
  %336 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %336) #13
  %337 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %337) #13
  %338 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %338) #13
  %339 = load i32, i32* %24, align 4
  switch i32 %339, label %515 [
    i32 0, label %340
  ]

340:                                              ; preds = %328
  br label %341

341:                                              ; preds = %340
  br label %342

342:                                              ; preds = %341
  %343 = load i64, i64* %7, align 8
  %344 = icmp slt i64 %343, 0
  br i1 %344, label %345, label %351

345:                                              ; preds = %342
  %346 = load %0*, %0** %6, align 8
  %347 = getelementptr inbounds %0, %0* %346, i32 0, i32 2
  %348 = load i64, i64* %347, align 8
  %349 = load i64, i64* %7, align 8
  %350 = add nsw i64 %349, %348
  store i64 %350, i64* %7, align 8
  br label %351

351:                                              ; preds = %345, %342
  %352 = load i64, i64* %7, align 8
  %353 = icmp slt i64 %352, 0
  br i1 %353, label %360, label %354

354:                                              ; preds = %351
  %355 = load i64, i64* %7, align 8
  %356 = load %0*, %0** %6, align 8
  %357 = getelementptr inbounds %0, %0* %356, i32 0, i32 2
  %358 = load i64, i64* %357, align 8
  %359 = icmp ugt i64 %355, %358
  br i1 %359, label %360, label %367

360:                                              ; preds = %354, %351
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @85, i32 0, i32 0))
  br label %361

361:                                              ; preds = %360
  %362 = load %18*, %18** %4, align 8
  %363 = getelementptr inbounds %18, %18* %362, i32 0, i32 1
  %364 = bitcast %20* %363 to i32*
  store i32 2, i32* %364, align 8
  br label %365

365:                                              ; preds = %361
  br label %366

366:                                              ; preds = %365
  store i32 1, i32* %24, align 4
  br label %515

367:                                              ; preds = %354
  %368 = load %0*, %0** %6, align 8
  %369 = getelementptr inbounds %0, %0* %368, i32 0, i32 2
  %370 = load i64, i64* %369, align 8
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %379

372:                                              ; preds = %367
  br label %373

373:                                              ; preds = %372
  %374 = load %18*, %18** %4, align 8
  %375 = getelementptr inbounds %18, %18* %374, i32 0, i32 1
  %376 = bitcast %20* %375 to i32*
  store i32 2, i32* %376, align 8
  br label %377

377:                                              ; preds = %373
  br label %378

378:                                              ; preds = %377
  store i32 1, i32* %24, align 4
  br label %515

379:                                              ; preds = %367
  %380 = load %18*, %18** %9, align 8
  %381 = call zeroext i8 @157(%18* %380)
  %382 = zext i8 %381 to i32
  %383 = icmp eq i32 %382, 6
  br i1 %383, label %384, label %437

384:                                              ; preds = %379
  %385 = load %18*, %18** %9, align 8
  %386 = getelementptr inbounds %18, %18* %385, i32 0, i32 0
  %387 = bitcast %19* %386 to %0**
  %388 = load %0*, %0** %387, align 8
  %389 = getelementptr inbounds %0, %0* %388, i32 0, i32 2
  %390 = load i64, i64* %389, align 8
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %403, label %392

392:                                              ; preds = %384
  %393 = load %18*, %18** %9, align 8
  %394 = getelementptr inbounds %18, %18* %393, i32 0, i32 0
  %395 = bitcast %19* %394 to %0**
  %396 = load %0*, %0** %395, align 8
  %397 = getelementptr inbounds %0, %0* %396, i32 0, i32 2
  %398 = load i64, i64* %397, align 8
  %399 = load %0*, %0** %6, align 8
  %400 = getelementptr inbounds %0, %0* %399, i32 0, i32 2
  %401 = load i64, i64* %400, align 8
  %402 = icmp ugt i64 %398, %401
  br i1 %402, label %403, label %410

403:                                              ; preds = %392, %384
  br label %404

404:                                              ; preds = %403
  %405 = load %18*, %18** %4, align 8
  %406 = getelementptr inbounds %18, %18* %405, i32 0, i32 1
  %407 = bitcast %20* %406 to i32*
  store i32 2, i32* %407, align 8
  br label %408

408:                                              ; preds = %404
  br label %409

409:                                              ; preds = %408
  store i32 1, i32* %24, align 4
  br label %515

410:                                              ; preds = %392
  %411 = load %0*, %0** %6, align 8
  %412 = call %0* @php_string_tolower(%0* %411)
  store %0* %412, %0** %11, align 8
  %413 = load %18*, %18** %9, align 8
  %414 = getelementptr inbounds %18, %18* %413, i32 0, i32 0
  %415 = bitcast %19* %414 to %0**
  %416 = load %0*, %0** %415, align 8
  %417 = call %0* @php_string_tolower(%0* %416)
  store %0* %417, %0** %10, align 8
  %418 = load %0*, %0** %11, align 8
  %419 = getelementptr inbounds %0, %0* %418, i32 0, i32 3
  %420 = getelementptr inbounds [1 x i8], [1 x i8]* %419, i32 0, i32 0
  %421 = load i64, i64* %7, align 8
  %422 = getelementptr inbounds i8, i8* %420, i64 %421
  %423 = load %0*, %0** %10, align 8
  %424 = getelementptr inbounds %0, %0* %423, i32 0, i32 3
  %425 = getelementptr inbounds [1 x i8], [1 x i8]* %424, i32 0, i32 0
  %426 = load %0*, %0** %10, align 8
  %427 = getelementptr inbounds %0, %0* %426, i32 0, i32 2
  %428 = load i64, i64* %427, align 8
  %429 = load %0*, %0** %11, align 8
  %430 = getelementptr inbounds %0, %0* %429, i32 0, i32 3
  %431 = getelementptr inbounds [1 x i8], [1 x i8]* %430, i32 0, i32 0
  %432 = load %0*, %0** %6, align 8
  %433 = getelementptr inbounds %0, %0* %432, i32 0, i32 2
  %434 = load i64, i64* %433, align 8
  %435 = getelementptr inbounds i8, i8* %431, i64 %434
  %436 = call i8* @156(i8* %422, i8* %425, i64 %428, i8* %435)
  store i8* %436, i8** %5, align 8
  br label %481

437:                                              ; preds = %379
  %438 = load %18*, %18** %9, align 8
  %439 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i32 0, i32 0
  %440 = call i32 @166(%18* %438, i8* %439)
  %441 = icmp ne i32 %440, 0
  br i1 %441, label %442, label %449

442:                                              ; preds = %437
  br label %443

443:                                              ; preds = %442
  %444 = load %18*, %18** %4, align 8
  %445 = getelementptr inbounds %18, %18* %444, i32 0, i32 1
  %446 = bitcast %20* %445 to i32*
  store i32 2, i32* %446, align 8
  br label %447

447:                                              ; preds = %443
  br label %448

448:                                              ; preds = %447
  store i32 1, i32* %24, align 4
  br label %515

449:                                              ; preds = %437
  %450 = load %0*, %0** %6, align 8
  %451 = call %0* @php_string_tolower(%0* %450)
  store %0* %451, %0** %11, align 8
  %452 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %452) #13
  %453 = call i32** @__ctype_tolower_loc() #17
  %454 = load i32*, i32** %453, align 8
  %455 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0
  %456 = load i8, i8* %455, align 1
  %457 = sext i8 %456 to i32
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds i32, i32* %454, i64 %458
  %460 = load i32, i32* %459, align 4
  store i32 %460, i32* %25, align 4
  %461 = load i32, i32* %25, align 4
  store i32 %461, i32* %26, align 4
  %462 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %462) #13
  %463 = load i32, i32* %26, align 4
  %464 = trunc i32 %463 to i8
  %465 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0
  store i8 %464, i8* %465, align 1
  %466 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 1
  store i8 0, i8* %466, align 1
  %467 = load %0*, %0** %11, align 8
  %468 = getelementptr inbounds %0, %0* %467, i32 0, i32 3
  %469 = getelementptr inbounds [1 x i8], [1 x i8]* %468, i32 0, i32 0
  %470 = load i64, i64* %7, align 8
  %471 = getelementptr inbounds i8, i8* %469, i64 %470
  %472 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i32 0, i32 0
  %473 = load %0*, %0** %11, align 8
  %474 = getelementptr inbounds %0, %0* %473, i32 0, i32 3
  %475 = getelementptr inbounds [1 x i8], [1 x i8]* %474, i32 0, i32 0
  %476 = load %0*, %0** %6, align 8
  %477 = getelementptr inbounds %0, %0* %476, i32 0, i32 2
  %478 = load i64, i64* %477, align 8
  %479 = getelementptr inbounds i8, i8* %475, i64 %478
  %480 = call i8* @156(i8* %471, i8* %472, i64 1, i8* %479)
  store i8* %480, i8** %5, align 8
  br label %481

481:                                              ; preds = %449, %410
  %482 = load i8*, i8** %5, align 8
  %483 = icmp ne i8* %482, null
  br i1 %483, label %484, label %501

484:                                              ; preds = %481
  %485 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %485) #13
  %486 = load %18*, %18** %4, align 8
  store %18* %486, %18** %27, align 8
  %487 = load i8*, i8** %5, align 8
  %488 = load %0*, %0** %11, align 8
  %489 = getelementptr inbounds %0, %0* %488, i32 0, i32 3
  %490 = getelementptr inbounds [1 x i8], [1 x i8]* %489, i32 0, i32 0
  %491 = ptrtoint i8* %487 to i64
  %492 = ptrtoint i8* %490 to i64
  %493 = sub i64 %491, %492
  %494 = load %18*, %18** %27, align 8
  %495 = getelementptr inbounds %18, %18* %494, i32 0, i32 0
  %496 = bitcast %19* %495 to i64*
  store i64 %493, i64* %496, align 8
  %497 = load %18*, %18** %27, align 8
  %498 = getelementptr inbounds %18, %18* %497, i32 0, i32 1
  %499 = bitcast %20* %498 to i32*
  store i32 4, i32* %499, align 8
  %500 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %500) #13
  br label %508

501:                                              ; preds = %481
  br label %502

502:                                              ; preds = %501
  %503 = load %18*, %18** %4, align 8
  %504 = getelementptr inbounds %18, %18* %503, i32 0, i32 1
  %505 = bitcast %20* %504 to i32*
  store i32 2, i32* %505, align 8
  br label %506

506:                                              ; preds = %502
  br label %507

507:                                              ; preds = %506
  br label %508

508:                                              ; preds = %507, %484
  %509 = load %0*, %0** %11, align 8
  call void @159(%0* %509)
  %510 = load %0*, %0** %10, align 8
  %511 = icmp ne %0* %510, null
  br i1 %511, label %512, label %514

512:                                              ; preds = %508
  %513 = load %0*, %0** %10, align 8
  call void @159(%0* %513)
  br label %514

514:                                              ; preds = %512, %508
  store i32 0, i32* %24, align 4
  br label %515

515:                                              ; preds = %514, %448, %409, %378, %366, %328
  %516 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %516) #13
  %517 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %517) #13
  %518 = bitcast %18** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %518) #13
  %519 = bitcast [2 x i8]* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %519) #13
  %520 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %520) #13
  %521 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %521) #13
  %522 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %522) #13
  %523 = load i32, i32* %24, align 4
  switch i32 %523, label %525 [
    i32 0, label %524
    i32 1, label %524
  ]

524:                                              ; preds = %515, %515
  ret void

525:                                              ; preds = %515
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strrpos(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %0*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [2 x i8], align 1
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %18*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %28 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  store i64 0, i64* %9, align 8
  %33 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = bitcast [2 x i8]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %35) #13
  %36 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  br label %37

37:                                               ; preds = %2
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 0, i32* %14, align 4
  %39 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 2, i32* %15, align 4
  %40 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  store i32 3, i32* %16, align 4
  %41 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  %42 = load %14*, %14** %3, align 8
  %43 = getelementptr inbounds %14, %14* %42, i32 0, i32 4
  %44 = getelementptr inbounds %18, %18* %43, i32 0, i32 2
  %45 = bitcast %21* %44 to i32*
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %17, align 4
  %47 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #13
  %48 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  %49 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  store %18* null, %18** %20, align 8
  %50 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #13
  store i32 0, i32* %21, align 4
  %51 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  store i8* null, i8** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #13
  store i8 0, i8* %24, align 1
  %52 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #13
  store i32 0, i32* %25, align 4
  %53 = load i32, i32* %18, align 4
  %54 = load %18*, %18** %19, align 8
  %55 = load %18*, %18** %20, align 8
  %56 = load i32, i32* %21, align 4
  %57 = load i8*, i8** %22, align 8
  %58 = load i8, i8* %23, align 1
  %59 = load i8, i8* %24, align 1
  br label %60

60:                                               ; preds = %37
  %61 = load i32, i32* %17, align 4
  %62 = load i32, i32* %15, align 4
  %63 = icmp slt i32 %61, %62
  %64 = xor i1 %63, true
  %65 = xor i1 %64, true
  %66 = zext i1 %65 to i32
  %67 = sext i32 %66 to i64
  %68 = call i64 @llvm.expect.i64(i64 %67, i64 0)
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %89, label %70

70:                                               ; preds = %60
  %71 = load i32, i32* %17, align 4
  %72 = load i32, i32* %16, align 4
  %73 = icmp sgt i32 %71, %72
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 0)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %93

80:                                               ; preds = %70
  %81 = load i32, i32* %16, align 4
  %82 = icmp sge i32 %81, 0
  %83 = xor i1 %82, true
  %84 = xor i1 %83, true
  %85 = zext i1 %84 to i32
  %86 = sext i32 %85 to i64
  %87 = call i64 @llvm.expect.i64(i64 %86, i64 1)
  %88 = icmp ne i64 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %80, %60
  %90 = load i32, i32* %17, align 4
  %91 = load i32, i32* %15, align 4
  %92 = load i32, i32* %16, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %90, i32 %91, i32 %92)
  store i32 1, i32* %25, align 4
  br label %297

93:                                               ; preds = %80, %70
  store i32 0, i32* %18, align 4
  %94 = load %14*, %14** %3, align 8
  %95 = bitcast %14* %94 to %18*
  %96 = getelementptr inbounds %18, %18* %95, i64 4
  store %18* %96, %18** %19, align 8
  %97 = load i32, i32* %18, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %18, align 4
  br label %99

99:                                               ; preds = %93
  %100 = load i32, i32* %18, align 4
  %101 = load i32, i32* %15, align 4
  %102 = icmp sle i32 %100, %101
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  %104 = load i8, i8* %24, align 1
  %105 = zext i8 %104 to i32
  %106 = icmp eq i32 %105, 1
  br label %107

107:                                              ; preds = %103, %99
  %108 = phi i1 [ true, %99 ], [ %106, %103 ]
  %109 = xor i1 %108, true
  %110 = zext i1 %109 to i32
  %111 = sext i32 %110 to i64
  %112 = call i64 @llvm.expect.i64(i64 %111, i64 0)
  %113 = icmp ne i64 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %107
  unreachable

115:                                              ; preds = %107
  br label %116

116:                                              ; preds = %115
  br label %117

117:                                              ; preds = %116
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %18, align 4
  %120 = load i32, i32* %15, align 4
  %121 = icmp sgt i32 %119, %120
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = load i8, i8* %24, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp eq i32 %124, 0
  br label %126

126:                                              ; preds = %122, %118
  %127 = phi i1 [ true, %118 ], [ %125, %122 ]
  %128 = xor i1 %127, true
  %129 = zext i1 %128 to i32
  %130 = sext i32 %129 to i64
  %131 = call i64 @llvm.expect.i64(i64 %130, i64 0)
  %132 = icmp ne i64 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %126
  unreachable

134:                                              ; preds = %126
  br label %135

135:                                              ; preds = %134
  br label %136

136:                                              ; preds = %135
  %137 = load i8, i8* %24, align 1
  %138 = icmp ne i8 %137, 0
  br i1 %138, label %139, label %151

139:                                              ; preds = %136
  %140 = load i32, i32* %18, align 4
  %141 = load i32, i32* %17, align 4
  %142 = icmp sgt i32 %140, %141
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = zext i1 %144 to i32
  %146 = sext i32 %145 to i64
  %147 = call i64 @llvm.expect.i64(i64 %146, i64 0)
  %148 = icmp ne i64 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %139
  br label %297

150:                                              ; preds = %139
  br label %151

151:                                              ; preds = %150, %136
  %152 = load %18*, %18** %19, align 8
  %153 = getelementptr inbounds %18, %18* %152, i32 1
  store %18* %153, %18** %19, align 8
  %154 = load %18*, %18** %19, align 8
  store %18* %154, %18** %20, align 8
  %155 = load %18*, %18** %20, align 8
  %156 = call i32 @143(%18* %155, %0** %7, i32 0)
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = xor i1 %159, true
  %161 = zext i1 %160 to i32
  %162 = sext i32 %161 to i64
  %163 = call i64 @llvm.expect.i64(i64 %162, i64 0)
  %164 = icmp ne i64 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %151
  store i32 2, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %297

166:                                              ; preds = %151
  %167 = load i32, i32* %18, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %18, align 4
  br label %169

169:                                              ; preds = %166
  %170 = load i32, i32* %18, align 4
  %171 = load i32, i32* %15, align 4
  %172 = icmp sle i32 %170, %171
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = load i8, i8* %24, align 1
  %175 = zext i8 %174 to i32
  %176 = icmp eq i32 %175, 1
  br label %177

177:                                              ; preds = %173, %169
  %178 = phi i1 [ true, %169 ], [ %176, %173 ]
  %179 = xor i1 %178, true
  %180 = zext i1 %179 to i32
  %181 = sext i32 %180 to i64
  %182 = call i64 @llvm.expect.i64(i64 %181, i64 0)
  %183 = icmp ne i64 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %177
  unreachable

185:                                              ; preds = %177
  br label %186

186:                                              ; preds = %185
  br label %187

187:                                              ; preds = %186
  br label %188

188:                                              ; preds = %187
  %189 = load i32, i32* %18, align 4
  %190 = load i32, i32* %15, align 4
  %191 = icmp sgt i32 %189, %190
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = load i8, i8* %24, align 1
  %194 = zext i8 %193 to i32
  %195 = icmp eq i32 %194, 0
  br label %196

196:                                              ; preds = %192, %188
  %197 = phi i1 [ true, %188 ], [ %195, %192 ]
  %198 = xor i1 %197, true
  %199 = zext i1 %198 to i32
  %200 = sext i32 %199 to i64
  %201 = call i64 @llvm.expect.i64(i64 %200, i64 0)
  %202 = icmp ne i64 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %196
  unreachable

204:                                              ; preds = %196
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  %207 = load i8, i8* %24, align 1
  %208 = icmp ne i8 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %206
  %210 = load i32, i32* %18, align 4
  %211 = load i32, i32* %17, align 4
  %212 = icmp sgt i32 %210, %211
  %213 = xor i1 %212, true
  %214 = xor i1 %213, true
  %215 = zext i1 %214 to i32
  %216 = sext i32 %215 to i64
  %217 = call i64 @llvm.expect.i64(i64 %216, i64 0)
  %218 = icmp ne i64 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %209
  br label %297

220:                                              ; preds = %209
  br label %221

221:                                              ; preds = %220, %206
  %222 = load %18*, %18** %19, align 8
  %223 = getelementptr inbounds %18, %18* %222, i32 1
  store %18* %223, %18** %19, align 8
  %224 = load %18*, %18** %19, align 8
  store %18* %224, %18** %20, align 8
  %225 = load %18*, %18** %20, align 8
  call void @161(%18* %225, %18** %5, i32 0)
  store i8 1, i8* %24, align 1
  %226 = load i32, i32* %18, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %18, align 4
  br label %228

228:                                              ; preds = %221
  %229 = load i32, i32* %18, align 4
  %230 = load i32, i32* %15, align 4
  %231 = icmp sle i32 %229, %230
  br i1 %231, label %236, label %232

232:                                              ; preds = %228
  %233 = load i8, i8* %24, align 1
  %234 = zext i8 %233 to i32
  %235 = icmp eq i32 %234, 1
  br label %236

236:                                              ; preds = %232, %228
  %237 = phi i1 [ true, %228 ], [ %235, %232 ]
  %238 = xor i1 %237, true
  %239 = zext i1 %238 to i32
  %240 = sext i32 %239 to i64
  %241 = call i64 @llvm.expect.i64(i64 %240, i64 0)
  %242 = icmp ne i64 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %236
  unreachable

244:                                              ; preds = %236
  br label %245

245:                                              ; preds = %244
  br label %246

246:                                              ; preds = %245
  br label %247

247:                                              ; preds = %246
  %248 = load i32, i32* %18, align 4
  %249 = load i32, i32* %15, align 4
  %250 = icmp sgt i32 %248, %249
  br i1 %250, label %255, label %251

251:                                              ; preds = %247
  %252 = load i8, i8* %24, align 1
  %253 = zext i8 %252 to i32
  %254 = icmp eq i32 %253, 0
  br label %255

255:                                              ; preds = %251, %247
  %256 = phi i1 [ true, %247 ], [ %254, %251 ]
  %257 = xor i1 %256, true
  %258 = zext i1 %257 to i32
  %259 = sext i32 %258 to i64
  %260 = call i64 @llvm.expect.i64(i64 %259, i64 0)
  %261 = icmp ne i64 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %255
  unreachable

263:                                              ; preds = %255
  br label %264

264:                                              ; preds = %263
  br label %265

265:                                              ; preds = %264
  %266 = load i8, i8* %24, align 1
  %267 = icmp ne i8 %266, 0
  br i1 %267, label %268, label %280

268:                                              ; preds = %265
  %269 = load i32, i32* %18, align 4
  %270 = load i32, i32* %17, align 4
  %271 = icmp sgt i32 %269, %270
  %272 = xor i1 %271, true
  %273 = xor i1 %272, true
  %274 = zext i1 %273 to i32
  %275 = sext i32 %274 to i64
  %276 = call i64 @llvm.expect.i64(i64 %275, i64 0)
  %277 = icmp ne i64 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %268
  br label %297

279:                                              ; preds = %268
  br label %280

280:                                              ; preds = %279, %265
  %281 = load %18*, %18** %19, align 8
  %282 = getelementptr inbounds %18, %18* %281, i32 1
  store %18* %282, %18** %19, align 8
  %283 = load %18*, %18** %19, align 8
  store %18* %283, %18** %20, align 8
  %284 = load %18*, %18** %20, align 8
  %285 = call i32 @147(%18* %284, i64* %9, i8* %23, i32 0, i32 0)
  %286 = icmp ne i32 %285, 0
  %287 = xor i1 %286, true
  %288 = xor i1 %287, true
  %289 = xor i1 %288, true
  %290 = zext i1 %289 to i32
  %291 = sext i32 %290 to i64
  %292 = call i64 @llvm.expect.i64(i64 %291, i64 0)
  %293 = icmp ne i64 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %280
  store i32 0, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %297

295:                                              ; preds = %280
  br label %296

296:                                              ; preds = %295
  br label %297

297:                                              ; preds = %296, %294, %278, %219, %165, %149, %89
  %298 = load i32, i32* %25, align 4
  %299 = icmp ne i32 %298, 0
  %300 = xor i1 %299, true
  %301 = xor i1 %300, true
  %302 = zext i1 %301 to i32
  %303 = sext i32 %302 to i64
  %304 = call i64 @llvm.expect.i64(i64 %303, i64 0)
  %305 = icmp ne i64 %304, 0
  br i1 %305, label %306, label %335

306:                                              ; preds = %297
  %307 = load i32, i32* %25, align 4
  %308 = icmp eq i32 %307, 2
  br i1 %308, label %309, label %312

309:                                              ; preds = %306
  %310 = load i32, i32* %18, align 4
  %311 = load i8*, i8** %22, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %310, i8* %311)
  br label %328

312:                                              ; preds = %306
  %313 = load i32, i32* %25, align 4
  %314 = icmp eq i32 %313, 3
  br i1 %314, label %315, label %319

315:                                              ; preds = %312
  %316 = load i32, i32* %18, align 4
  %317 = load i8*, i8** %22, align 8
  %318 = load %18*, %18** %20, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %316, i8* %317, %18* %318)
  br label %327

319:                                              ; preds = %312
  %320 = load i32, i32* %25, align 4
  %321 = icmp eq i32 %320, 4
  br i1 %321, label %322, label %326

322:                                              ; preds = %319
  %323 = load i32, i32* %18, align 4
  %324 = load i32, i32* %21, align 4
  %325 = load %18*, %18** %20, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %323, i32 %324, %18* %325)
  br label %326

326:                                              ; preds = %322, %319
  br label %327

327:                                              ; preds = %326, %315
  br label %328

328:                                              ; preds = %327, %309
  br label %329

329:                                              ; preds = %328
  %330 = load %18*, %18** %4, align 8
  %331 = getelementptr inbounds %18, %18* %330, i32 0, i32 1
  %332 = bitcast %20* %331 to i32*
  store i32 2, i32* %332, align 8
  br label %333

333:                                              ; preds = %329
  br label %334

334:                                              ; preds = %333
  store i32 1, i32* %26, align 4
  br label %336

335:                                              ; preds = %297
  store i32 0, i32* %26, align 4
  br label %336

336:                                              ; preds = %335, %334
  %337 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %337) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #13
  %338 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %338) #13
  %339 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %339) #13
  %340 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %340) #13
  %341 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %341) #13
  %342 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %342) #13
  %343 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %343) #13
  %344 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #13
  %345 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #13
  %346 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %346) #13
  %347 = load i32, i32* %26, align 4
  switch i32 %347, label %504 [
    i32 0, label %348
  ]

348:                                              ; preds = %336
  br label %349

349:                                              ; preds = %348
  br label %350

350:                                              ; preds = %349
  %351 = load %18*, %18** %5, align 8
  %352 = call zeroext i8 @157(%18* %351)
  %353 = zext i8 %352 to i32
  %354 = icmp eq i32 %353, 6
  br i1 %354, label %355, label %368

355:                                              ; preds = %350
  %356 = load %18*, %18** %5, align 8
  %357 = getelementptr inbounds %18, %18* %356, i32 0, i32 0
  %358 = bitcast %19* %357 to %0**
  %359 = load %0*, %0** %358, align 8
  %360 = getelementptr inbounds %0, %0* %359, i32 0, i32 3
  %361 = getelementptr inbounds [1 x i8], [1 x i8]* %360, i32 0, i32 0
  store i8* %361, i8** %6, align 8
  %362 = load %18*, %18** %5, align 8
  %363 = getelementptr inbounds %18, %18* %362, i32 0, i32 0
  %364 = bitcast %19* %363 to %0**
  %365 = load %0*, %0** %364, align 8
  %366 = getelementptr inbounds %0, %0* %365, i32 0, i32 2
  %367 = load i64, i64* %366, align 8
  store i64 %367, i64* %8, align 8
  br label %383

368:                                              ; preds = %350
  %369 = load %18*, %18** %5, align 8
  %370 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i32 0, i32 0
  %371 = call i32 @166(%18* %369, i8* %370)
  %372 = icmp ne i32 %371, 0
  br i1 %372, label %373, label %380

373:                                              ; preds = %368
  br label %374

374:                                              ; preds = %373
  %375 = load %18*, %18** %4, align 8
  %376 = getelementptr inbounds %18, %18* %375, i32 0, i32 1
  %377 = bitcast %20* %376 to i32*
  store i32 2, i32* %377, align 8
  br label %378

378:                                              ; preds = %374
  br label %379

379:                                              ; preds = %378
  store i32 1, i32* %26, align 4
  br label %504

380:                                              ; preds = %368
  %381 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 1
  store i8 0, i8* %381, align 1
  %382 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i32 0, i32 0
  store i8* %382, i8** %6, align 8
  store i64 1, i64* %8, align 8
  br label %383

383:                                              ; preds = %380, %355
  %384 = load %0*, %0** %7, align 8
  %385 = getelementptr inbounds %0, %0* %384, i32 0, i32 2
  %386 = load i64, i64* %385, align 8
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %391, label %388

388:                                              ; preds = %383
  %389 = load i64, i64* %8, align 8
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %398

391:                                              ; preds = %388, %383
  br label %392

392:                                              ; preds = %391
  %393 = load %18*, %18** %4, align 8
  %394 = getelementptr inbounds %18, %18* %393, i32 0, i32 1
  %395 = bitcast %20* %394 to i32*
  store i32 2, i32* %395, align 8
  br label %396

396:                                              ; preds = %392
  br label %397

397:                                              ; preds = %396
  store i32 1, i32* %26, align 4
  br label %504

398:                                              ; preds = %388
  %399 = load i64, i64* %9, align 8
  %400 = icmp sge i64 %399, 0
  br i1 %400, label %401, label %427

401:                                              ; preds = %398
  %402 = load i64, i64* %9, align 8
  %403 = load %0*, %0** %7, align 8
  %404 = getelementptr inbounds %0, %0* %403, i32 0, i32 2
  %405 = load i64, i64* %404, align 8
  %406 = icmp ugt i64 %402, %405
  br i1 %406, label %407, label %414

407:                                              ; preds = %401
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @86, i32 0, i32 0))
  br label %408

408:                                              ; preds = %407
  %409 = load %18*, %18** %4, align 8
  %410 = getelementptr inbounds %18, %18* %409, i32 0, i32 1
  %411 = bitcast %20* %410 to i32*
  store i32 2, i32* %411, align 8
  br label %412

412:                                              ; preds = %408
  br label %413

413:                                              ; preds = %412
  store i32 1, i32* %26, align 4
  br label %504

414:                                              ; preds = %401
  %415 = load %0*, %0** %7, align 8
  %416 = getelementptr inbounds %0, %0* %415, i32 0, i32 3
  %417 = getelementptr inbounds [1 x i8], [1 x i8]* %416, i32 0, i32 0
  %418 = load i64, i64* %9, align 8
  %419 = getelementptr inbounds i8, i8* %417, i64 %418
  store i8* %419, i8** %10, align 8
  %420 = load %0*, %0** %7, align 8
  %421 = getelementptr inbounds %0, %0* %420, i32 0, i32 3
  %422 = getelementptr inbounds [1 x i8], [1 x i8]* %421, i32 0, i32 0
  %423 = load %0*, %0** %7, align 8
  %424 = getelementptr inbounds %0, %0* %423, i32 0, i32 2
  %425 = load i64, i64* %424, align 8
  %426 = getelementptr inbounds i8, i8* %422, i64 %425
  store i8* %426, i8** %11, align 8
  br label %473

427:                                              ; preds = %398
  %428 = load i64, i64* %9, align 8
  %429 = icmp slt i64 %428, -2147483647
  br i1 %429, label %437, label %430

430:                                              ; preds = %427
  %431 = load i64, i64* %9, align 8
  %432 = sub nsw i64 0, %431
  %433 = load %0*, %0** %7, align 8
  %434 = getelementptr inbounds %0, %0* %433, i32 0, i32 2
  %435 = load i64, i64* %434, align 8
  %436 = icmp ugt i64 %432, %435
  br i1 %436, label %437, label %444

437:                                              ; preds = %430, %427
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @86, i32 0, i32 0))
  br label %438

438:                                              ; preds = %437
  %439 = load %18*, %18** %4, align 8
  %440 = getelementptr inbounds %18, %18* %439, i32 0, i32 1
  %441 = bitcast %20* %440 to i32*
  store i32 2, i32* %441, align 8
  br label %442

442:                                              ; preds = %438
  br label %443

443:                                              ; preds = %442
  store i32 1, i32* %26, align 4
  br label %504

444:                                              ; preds = %430
  %445 = load %0*, %0** %7, align 8
  %446 = getelementptr inbounds %0, %0* %445, i32 0, i32 3
  %447 = getelementptr inbounds [1 x i8], [1 x i8]* %446, i32 0, i32 0
  store i8* %447, i8** %10, align 8
  %448 = load i64, i64* %9, align 8
  %449 = sub nsw i64 0, %448
  %450 = load i64, i64* %8, align 8
  %451 = icmp ult i64 %449, %450
  br i1 %451, label %452, label %460

452:                                              ; preds = %444
  %453 = load %0*, %0** %7, align 8
  %454 = getelementptr inbounds %0, %0* %453, i32 0, i32 3
  %455 = getelementptr inbounds [1 x i8], [1 x i8]* %454, i32 0, i32 0
  %456 = load %0*, %0** %7, align 8
  %457 = getelementptr inbounds %0, %0* %456, i32 0, i32 2
  %458 = load i64, i64* %457, align 8
  %459 = getelementptr inbounds i8, i8* %455, i64 %458
  store i8* %459, i8** %11, align 8
  br label %472

460:                                              ; preds = %444
  %461 = load %0*, %0** %7, align 8
  %462 = getelementptr inbounds %0, %0* %461, i32 0, i32 3
  %463 = getelementptr inbounds [1 x i8], [1 x i8]* %462, i32 0, i32 0
  %464 = load %0*, %0** %7, align 8
  %465 = getelementptr inbounds %0, %0* %464, i32 0, i32 2
  %466 = load i64, i64* %465, align 8
  %467 = getelementptr inbounds i8, i8* %463, i64 %466
  %468 = load i64, i64* %9, align 8
  %469 = getelementptr inbounds i8, i8* %467, i64 %468
  %470 = load i64, i64* %8, align 8
  %471 = getelementptr inbounds i8, i8* %469, i64 %470
  store i8* %471, i8** %11, align 8
  br label %472

472:                                              ; preds = %460, %452
  br label %473

473:                                              ; preds = %472, %414
  %474 = load i8*, i8** %10, align 8
  %475 = load i8*, i8** %6, align 8
  %476 = load i64, i64* %8, align 8
  %477 = load i8*, i8** %11, align 8
  %478 = call i8* @167(i8* %474, i8* %475, i64 %476, i8* %477)
  store i8* %478, i8** %13, align 8
  %479 = icmp ne i8* %478, null
  br i1 %479, label %480, label %497

480:                                              ; preds = %473
  %481 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %481) #13
  %482 = load %18*, %18** %4, align 8
  store %18* %482, %18** %27, align 8
  %483 = load i8*, i8** %13, align 8
  %484 = load %0*, %0** %7, align 8
  %485 = getelementptr inbounds %0, %0* %484, i32 0, i32 3
  %486 = getelementptr inbounds [1 x i8], [1 x i8]* %485, i32 0, i32 0
  %487 = ptrtoint i8* %483 to i64
  %488 = ptrtoint i8* %486 to i64
  %489 = sub i64 %487, %488
  %490 = load %18*, %18** %27, align 8
  %491 = getelementptr inbounds %18, %18* %490, i32 0, i32 0
  %492 = bitcast %19* %491 to i64*
  store i64 %489, i64* %492, align 8
  %493 = load %18*, %18** %27, align 8
  %494 = getelementptr inbounds %18, %18* %493, i32 0, i32 1
  %495 = bitcast %20* %494 to i32*
  store i32 4, i32* %495, align 8
  %496 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %496) #13
  store i32 1, i32* %26, align 4
  br label %504

497:                                              ; preds = %473
  br label %498

498:                                              ; preds = %497
  %499 = load %18*, %18** %4, align 8
  %500 = getelementptr inbounds %18, %18* %499, i32 0, i32 1
  %501 = bitcast %20* %500 to i32*
  store i32 2, i32* %501, align 8
  br label %502

502:                                              ; preds = %498
  br label %503

503:                                              ; preds = %502
  store i32 1, i32* %26, align 4
  br label %504

504:                                              ; preds = %503, %480, %443, %413, %397, %379, %336
  %505 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %505) #13
  %506 = bitcast [2 x i8]* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %506) #13
  %507 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %507) #13
  %508 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %508) #13
  %509 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %509) #13
  %510 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %510) #13
  %511 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %511) #13
  %512 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %512) #13
  %513 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %513) #13
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @167(i8* %0, i8* %1, i64 %2, i8* %3) #5 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  %15 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = load i8*, i8** %9, align 8
  store i8* %16, i8** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #13
  %17 = load i8*, i8** %7, align 8
  %18 = load i64, i64* %8, align 8
  %19 = sub i64 %18, 1
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i8, i8* %20, align 1
  store i8 %21, i8* %11, align 1
  %22 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load i64, i64* %8, align 8
  %25 = icmp eq i64 %24, 1
  br i1 %25, label %26, label %37

26:                                               ; preds = %4
  %27 = load i8*, i8** %6, align 8
  %28 = load i8*, i8** %7, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = load i8*, i8** %10, align 8
  %32 = load i8*, i8** %6, align 8
  %33 = ptrtoint i8* %31 to i64
  %34 = ptrtoint i8* %32 to i64
  %35 = sub i64 %33, %34
  %36 = call i8* @165(i8* %27, i32 %30, i64 %35)
  store i8* %36, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %119

37:                                               ; preds = %4
  %38 = load i8*, i8** %9, align 8
  %39 = load i8*, i8** %6, align 8
  %40 = ptrtoint i8* %38 to i64
  %41 = ptrtoint i8* %39 to i64
  %42 = sub i64 %40, %41
  store i64 %42, i64* %12, align 8
  %43 = load i64, i64* %12, align 8
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load i64, i64* %12, align 8
  br label %48

47:                                               ; preds = %37
  br label %48

48:                                               ; preds = %47, %45
  %49 = phi i64 [ %46, %45 ], [ 0, %47 ]
  store i64 %49, i64* %13, align 8
  %50 = load i64, i64* %8, align 8
  %51 = load i64, i64* %13, align 8
  %52 = icmp ugt i64 %50, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  store i8* null, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %119

54:                                               ; preds = %48
  %55 = load i64, i64* %13, align 8
  %56 = icmp ult i64 %55, 1024
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i64, i64* %8, align 8
  %59 = icmp ult i64 %58, 3
  br label %60

60:                                               ; preds = %57, %54
  %61 = phi i1 [ true, %54 ], [ %59, %57 ]
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 1)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %113

68:                                               ; preds = %60
  %69 = load i64, i64* %8, align 8
  %70 = load i8*, i8** %10, align 8
  %71 = sub i64 0, %69
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  store i8* %72, i8** %10, align 8
  br label %73

73:                                               ; preds = %107, %68
  %74 = load i8*, i8** %6, align 8
  %75 = load i8*, i8** %7, align 8
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = load i8*, i8** %10, align 8
  %79 = load i8*, i8** %6, align 8
  %80 = ptrtoint i8* %78 to i64
  %81 = ptrtoint i8* %79 to i64
  %82 = sub i64 %80, %81
  %83 = add nsw i64 %82, 1
  %84 = call i8* @165(i8* %74, i32 %77, i64 %83)
  store i8* %84, i8** %10, align 8
  %85 = icmp ne i8* %84, null
  br i1 %85, label %86, label %106

86:                                               ; preds = %73
  %87 = load i8, i8* %11, align 1
  %88 = sext i8 %87 to i32
  %89 = load i8*, i8** %10, align 8
  %90 = load i64, i64* %8, align 8
  %91 = sub i64 %90, 1
  %92 = getelementptr inbounds i8, i8* %89, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %88, %94
  br i1 %95, label %96, label %106

96:                                               ; preds = %86
  %97 = load i8*, i8** %7, align 8
  %98 = load i8*, i8** %10, align 8
  %99 = load i64, i64* %8, align 8
  %100 = sub i64 %99, 1
  %101 = call i32 @memcmp(i8* %97, i8* %98, i64 %100) #14
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %96
  %104 = load i8*, i8** %10, align 8
  store i8* %104, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %119

105:                                              ; preds = %96
  br label %106

106:                                              ; preds = %105, %86, %73
  br label %107

107:                                              ; preds = %106
  %108 = load i8*, i8** %10, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 -1
  store i8* %109, i8** %10, align 8
  %110 = load i8*, i8** %6, align 8
  %111 = icmp uge i8* %108, %110
  br i1 %111, label %73, label %112

112:                                              ; preds = %107
  store i8* null, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %119

113:                                              ; preds = %60
  %114 = load i8*, i8** %6, align 8
  %115 = load i8*, i8** %7, align 8
  %116 = load i64, i64* %8, align 8
  %117 = load i8*, i8** %9, align 8
  %118 = call i8* @zend_memnrstr_ex(i8* %114, i8* %115, i64 %116, i8* %117)
  store i8* %118, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %119

119:                                              ; preds = %113, %112, %103, %53, %26
  %120 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %120) #13
  %121 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %121) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #13
  %122 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #13
  %123 = load i8*, i8** %5, align 8
  ret i8* %123
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strripos(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca %0*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %0*, align 8
  %13 = alloca %0*, align 8
  %14 = alloca %0*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %18*, align 8
  %22 = alloca %18*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca %18*, align 8
  %34 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %35 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  %38 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i64 0, i64* %8, align 8
  %39 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast %0** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast %0** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  %44 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  store %0* null, %0** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  br label %45

45:                                               ; preds = %2
  %46 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  store i32 0, i32* %16, align 4
  %47 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #13
  store i32 2, i32* %17, align 4
  %48 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 3, i32* %18, align 4
  %49 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  %50 = load %14*, %14** %3, align 8
  %51 = getelementptr inbounds %14, %14* %50, i32 0, i32 4
  %52 = getelementptr inbounds %18, %18* %51, i32 0, i32 2
  %53 = bitcast %21* %52 to i32*
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %19, align 4
  %55 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #13
  %56 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #13
  %57 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #13
  store %18* null, %18** %22, align 8
  %58 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #13
  store i32 0, i32* %23, align 4
  %59 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #13
  store i8* null, i8** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %25) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %26) #13
  store i8 0, i8* %26, align 1
  %60 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #13
  store i32 0, i32* %27, align 4
  %61 = load i32, i32* %20, align 4
  %62 = load %18*, %18** %21, align 8
  %63 = load %18*, %18** %22, align 8
  %64 = load i32, i32* %23, align 4
  %65 = load i8*, i8** %24, align 8
  %66 = load i8, i8* %25, align 1
  %67 = load i8, i8* %26, align 1
  br label %68

68:                                               ; preds = %45
  %69 = load i32, i32* %19, align 4
  %70 = load i32, i32* %17, align 4
  %71 = icmp slt i32 %69, %70
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 0)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %97, label %78

78:                                               ; preds = %68
  %79 = load i32, i32* %19, align 4
  %80 = load i32, i32* %18, align 4
  %81 = icmp sgt i32 %79, %80
  %82 = xor i1 %81, true
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = call i64 @llvm.expect.i64(i64 %85, i64 0)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %101

88:                                               ; preds = %78
  %89 = load i32, i32* %18, align 4
  %90 = icmp sge i32 %89, 0
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  %93 = zext i1 %92 to i32
  %94 = sext i32 %93 to i64
  %95 = call i64 @llvm.expect.i64(i64 %94, i64 1)
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %88, %68
  %98 = load i32, i32* %19, align 4
  %99 = load i32, i32* %17, align 4
  %100 = load i32, i32* %18, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %98, i32 %99, i32 %100)
  store i32 1, i32* %27, align 4
  br label %305

101:                                              ; preds = %88, %78
  store i32 0, i32* %20, align 4
  %102 = load %14*, %14** %3, align 8
  %103 = bitcast %14* %102 to %18*
  %104 = getelementptr inbounds %18, %18* %103, i64 4
  store %18* %104, %18** %21, align 8
  %105 = load i32, i32* %20, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %20, align 4
  br label %107

107:                                              ; preds = %101
  %108 = load i32, i32* %20, align 4
  %109 = load i32, i32* %17, align 4
  %110 = icmp sle i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %26, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 1
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  %127 = load i32, i32* %20, align 4
  %128 = load i32, i32* %17, align 4
  %129 = icmp sgt i32 %127, %128
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = load i8, i8* %26, align 1
  %132 = zext i8 %131 to i32
  %133 = icmp eq i32 %132, 0
  br label %134

134:                                              ; preds = %130, %126
  %135 = phi i1 [ true, %126 ], [ %133, %130 ]
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %134
  unreachable

142:                                              ; preds = %134
  br label %143

143:                                              ; preds = %142
  br label %144

144:                                              ; preds = %143
  %145 = load i8, i8* %26, align 1
  %146 = icmp ne i8 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %144
  %148 = load i32, i32* %20, align 4
  %149 = load i32, i32* %19, align 4
  %150 = icmp sgt i32 %148, %149
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %147
  br label %305

158:                                              ; preds = %147
  br label %159

159:                                              ; preds = %158, %144
  %160 = load %18*, %18** %21, align 8
  %161 = getelementptr inbounds %18, %18* %160, i32 1
  store %18* %161, %18** %21, align 8
  %162 = load %18*, %18** %21, align 8
  store %18* %162, %18** %22, align 8
  %163 = load %18*, %18** %22, align 8
  %164 = call i32 @143(%18* %163, %0** %7, i32 0)
  %165 = icmp ne i32 %164, 0
  %166 = xor i1 %165, true
  %167 = xor i1 %166, true
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %159
  store i32 2, i32* %23, align 4
  store i32 4, i32* %27, align 4
  br label %305

174:                                              ; preds = %159
  %175 = load i32, i32* %20, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %20, align 4
  br label %177

177:                                              ; preds = %174
  %178 = load i32, i32* %20, align 4
  %179 = load i32, i32* %17, align 4
  %180 = icmp sle i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %26, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 1
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  br label %196

196:                                              ; preds = %195
  %197 = load i32, i32* %20, align 4
  %198 = load i32, i32* %17, align 4
  %199 = icmp sgt i32 %197, %198
  br i1 %199, label %204, label %200

200:                                              ; preds = %196
  %201 = load i8, i8* %26, align 1
  %202 = zext i8 %201 to i32
  %203 = icmp eq i32 %202, 0
  br label %204

204:                                              ; preds = %200, %196
  %205 = phi i1 [ true, %196 ], [ %203, %200 ]
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %204
  unreachable

212:                                              ; preds = %204
  br label %213

213:                                              ; preds = %212
  br label %214

214:                                              ; preds = %213
  %215 = load i8, i8* %26, align 1
  %216 = icmp ne i8 %215, 0
  br i1 %216, label %217, label %229

217:                                              ; preds = %214
  %218 = load i32, i32* %20, align 4
  %219 = load i32, i32* %19, align 4
  %220 = icmp sgt i32 %218, %219
  %221 = xor i1 %220, true
  %222 = xor i1 %221, true
  %223 = zext i1 %222 to i32
  %224 = sext i32 %223 to i64
  %225 = call i64 @llvm.expect.i64(i64 %224, i64 0)
  %226 = icmp ne i64 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %217
  br label %305

228:                                              ; preds = %217
  br label %229

229:                                              ; preds = %228, %214
  %230 = load %18*, %18** %21, align 8
  %231 = getelementptr inbounds %18, %18* %230, i32 1
  store %18* %231, %18** %21, align 8
  %232 = load %18*, %18** %21, align 8
  store %18* %232, %18** %22, align 8
  %233 = load %18*, %18** %22, align 8
  call void @161(%18* %233, %18** %5, i32 0)
  store i8 1, i8* %26, align 1
  %234 = load i32, i32* %20, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %20, align 4
  br label %236

236:                                              ; preds = %229
  %237 = load i32, i32* %20, align 4
  %238 = load i32, i32* %17, align 4
  %239 = icmp sle i32 %237, %238
  br i1 %239, label %244, label %240

240:                                              ; preds = %236
  %241 = load i8, i8* %26, align 1
  %242 = zext i8 %241 to i32
  %243 = icmp eq i32 %242, 1
  br label %244

244:                                              ; preds = %240, %236
  %245 = phi i1 [ true, %236 ], [ %243, %240 ]
  %246 = xor i1 %245, true
  %247 = zext i1 %246 to i32
  %248 = sext i32 %247 to i64
  %249 = call i64 @llvm.expect.i64(i64 %248, i64 0)
  %250 = icmp ne i64 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %244
  unreachable

252:                                              ; preds = %244
  br label %253

253:                                              ; preds = %252
  br label %254

254:                                              ; preds = %253
  br label %255

255:                                              ; preds = %254
  %256 = load i32, i32* %20, align 4
  %257 = load i32, i32* %17, align 4
  %258 = icmp sgt i32 %256, %257
  br i1 %258, label %263, label %259

259:                                              ; preds = %255
  %260 = load i8, i8* %26, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i32 %261, 0
  br label %263

263:                                              ; preds = %259, %255
  %264 = phi i1 [ true, %255 ], [ %262, %259 ]
  %265 = xor i1 %264, true
  %266 = zext i1 %265 to i32
  %267 = sext i32 %266 to i64
  %268 = call i64 @llvm.expect.i64(i64 %267, i64 0)
  %269 = icmp ne i64 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %263
  unreachable

271:                                              ; preds = %263
  br label %272

272:                                              ; preds = %271
  br label %273

273:                                              ; preds = %272
  %274 = load i8, i8* %26, align 1
  %275 = icmp ne i8 %274, 0
  br i1 %275, label %276, label %288

276:                                              ; preds = %273
  %277 = load i32, i32* %20, align 4
  %278 = load i32, i32* %19, align 4
  %279 = icmp sgt i32 %277, %278
  %280 = xor i1 %279, true
  %281 = xor i1 %280, true
  %282 = zext i1 %281 to i32
  %283 = sext i32 %282 to i64
  %284 = call i64 @llvm.expect.i64(i64 %283, i64 0)
  %285 = icmp ne i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %276
  br label %305

287:                                              ; preds = %276
  br label %288

288:                                              ; preds = %287, %273
  %289 = load %18*, %18** %21, align 8
  %290 = getelementptr inbounds %18, %18* %289, i32 1
  store %18* %290, %18** %21, align 8
  %291 = load %18*, %18** %21, align 8
  store %18* %291, %18** %22, align 8
  %292 = load %18*, %18** %22, align 8
  %293 = call i32 @147(%18* %292, i64* %8, i8* %25, i32 0, i32 0)
  %294 = icmp ne i32 %293, 0
  %295 = xor i1 %294, true
  %296 = xor i1 %295, true
  %297 = xor i1 %296, true
  %298 = zext i1 %297 to i32
  %299 = sext i32 %298 to i64
  %300 = call i64 @llvm.expect.i64(i64 %299, i64 0)
  %301 = icmp ne i64 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %288
  store i32 0, i32* %23, align 4
  store i32 4, i32* %27, align 4
  br label %305

303:                                              ; preds = %288
  br label %304

304:                                              ; preds = %303
  br label %305

305:                                              ; preds = %304, %302, %286, %227, %173, %157, %97
  %306 = load i32, i32* %27, align 4
  %307 = icmp ne i32 %306, 0
  %308 = xor i1 %307, true
  %309 = xor i1 %308, true
  %310 = zext i1 %309 to i32
  %311 = sext i32 %310 to i64
  %312 = call i64 @llvm.expect.i64(i64 %311, i64 0)
  %313 = icmp ne i64 %312, 0
  br i1 %313, label %314, label %343

314:                                              ; preds = %305
  %315 = load i32, i32* %27, align 4
  %316 = icmp eq i32 %315, 2
  br i1 %316, label %317, label %320

317:                                              ; preds = %314
  %318 = load i32, i32* %20, align 4
  %319 = load i8*, i8** %24, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %318, i8* %319)
  br label %336

320:                                              ; preds = %314
  %321 = load i32, i32* %27, align 4
  %322 = icmp eq i32 %321, 3
  br i1 %322, label %323, label %327

323:                                              ; preds = %320
  %324 = load i32, i32* %20, align 4
  %325 = load i8*, i8** %24, align 8
  %326 = load %18*, %18** %22, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %324, i8* %325, %18* %326)
  br label %335

327:                                              ; preds = %320
  %328 = load i32, i32* %27, align 4
  %329 = icmp eq i32 %328, 4
  br i1 %329, label %330, label %334

330:                                              ; preds = %327
  %331 = load i32, i32* %20, align 4
  %332 = load i32, i32* %23, align 4
  %333 = load %18*, %18** %22, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %331, i32 %332, %18* %333)
  br label %334

334:                                              ; preds = %330, %327
  br label %335

335:                                              ; preds = %334, %323
  br label %336

336:                                              ; preds = %335, %317
  br label %337

337:                                              ; preds = %336
  %338 = load %18*, %18** %4, align 8
  %339 = getelementptr inbounds %18, %18* %338, i32 0, i32 1
  %340 = bitcast %20* %339 to i32*
  store i32 2, i32* %340, align 8
  br label %341

341:                                              ; preds = %337
  br label %342

342:                                              ; preds = %341
  store i32 1, i32* %28, align 4
  br label %344

343:                                              ; preds = %305
  store i32 0, i32* %28, align 4
  br label %344

344:                                              ; preds = %343, %342
  %345 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %26) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %25) #13
  %346 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %346) #13
  %347 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %347) #13
  %348 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %348) #13
  %349 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %349) #13
  %350 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %350) #13
  %351 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #13
  %352 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #13
  %353 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %353) #13
  %354 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %354) #13
  %355 = load i32, i32* %28, align 4
  switch i32 %355, label %839 [
    i32 0, label %356
  ]

356:                                              ; preds = %344
  br label %357

357:                                              ; preds = %356
  br label %358

358:                                              ; preds = %357
  br label %359

359:                                              ; preds = %358
  store i8 0, i8* %15, align 1
  br i1 false, label %360, label %362

360:                                              ; preds = %359
  %361 = call noalias i8* @_emalloc_32()
  br label %364

362:                                              ; preds = %359
  %363 = alloca i8, i64 and (i64 add (i64 ptrtoint (i8* getelementptr inbounds (%0, %0* null, i32 0, i32 3, i32 0) to i64), i64 9), i64 -8), align 16
  br label %364

364:                                              ; preds = %362, %360
  %365 = phi i8* [ %361, %360 ], [ %363, %362 ]
  %366 = bitcast i8* %365 to %0*
  store %0* %366, %0** %14, align 8
  %367 = load %0*, %0** %14, align 8
  %368 = getelementptr inbounds %0, %0* %367, i32 0, i32 0
  %369 = getelementptr inbounds %1, %1* %368, i32 0, i32 0
  store i32 1, i32* %369, align 8
  %370 = load %0*, %0** %14, align 8
  %371 = getelementptr inbounds %0, %0* %370, i32 0, i32 0
  %372 = getelementptr inbounds %1, %1* %371, i32 0, i32 1
  %373 = bitcast %2* %372 to i32*
  store i32 6, i32* %373, align 4
  %374 = load %0*, %0** %14, align 8
  call void @168(%0* %374)
  %375 = load %0*, %0** %14, align 8
  %376 = getelementptr inbounds %0, %0* %375, i32 0, i32 2
  store i64 1, i64* %376, align 8
  br label %377

377:                                              ; preds = %364
  br label %378

378:                                              ; preds = %377
  %379 = load %18*, %18** %5, align 8
  %380 = call zeroext i8 @157(%18* %379)
  %381 = zext i8 %380 to i32
  %382 = icmp eq i32 %381, 6
  br i1 %382, label %383, label %388

383:                                              ; preds = %378
  %384 = load %18*, %18** %5, align 8
  %385 = getelementptr inbounds %18, %18* %384, i32 0, i32 0
  %386 = bitcast %19* %385 to %0**
  %387 = load %0*, %0** %386, align 8
  store %0* %387, %0** %6, align 8
  br label %422

388:                                              ; preds = %378
  %389 = load %18*, %18** %5, align 8
  %390 = load %0*, %0** %14, align 8
  %391 = getelementptr inbounds %0, %0* %390, i32 0, i32 3
  %392 = getelementptr inbounds [1 x i8], [1 x i8]* %391, i32 0, i32 0
  %393 = call i32 @166(%18* %389, i8* %392)
  %394 = icmp ne i32 %393, 0
  br i1 %394, label %395, label %417

395:                                              ; preds = %388
  br label %396

396:                                              ; preds = %395
  %397 = load i8, i8* %15, align 1
  %398 = icmp ne i8 %397, 0
  %399 = xor i1 %398, true
  %400 = xor i1 %399, true
  %401 = zext i1 %400 to i32
  %402 = sext i32 %401 to i64
  %403 = call i64 @llvm.expect.i64(i64 %402, i64 0)
  %404 = icmp ne i64 %403, 0
  br i1 %404, label %405, label %408

405:                                              ; preds = %396
  %406 = load %0*, %0** %14, align 8
  %407 = bitcast %0* %406 to i8*
  call void @_efree(i8* %407)
  br label %408

408:                                              ; preds = %405, %396
  br label %409

409:                                              ; preds = %408
  br label %410

410:                                              ; preds = %409
  br label %411

411:                                              ; preds = %410
  %412 = load %18*, %18** %4, align 8
  %413 = getelementptr inbounds %18, %18* %412, i32 0, i32 1
  %414 = bitcast %20* %413 to i32*
  store i32 2, i32* %414, align 8
  br label %415

415:                                              ; preds = %411
  br label %416

416:                                              ; preds = %415
  store i32 1, i32* %28, align 4
  br label %839

417:                                              ; preds = %388
  %418 = load %0*, %0** %14, align 8
  %419 = getelementptr inbounds %0, %0* %418, i32 0, i32 3
  %420 = getelementptr inbounds [1 x i8], [1 x i8]* %419, i64 0, i64 1
  store i8 0, i8* %420, align 1
  %421 = load %0*, %0** %14, align 8
  store %0* %421, %0** %6, align 8
  br label %422

422:                                              ; preds = %417, %383
  %423 = load %0*, %0** %7, align 8
  %424 = getelementptr inbounds %0, %0* %423, i32 0, i32 2
  %425 = load i64, i64* %424, align 8
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %432, label %427

427:                                              ; preds = %422
  %428 = load %0*, %0** %6, align 8
  %429 = getelementptr inbounds %0, %0* %428, i32 0, i32 2
  %430 = load i64, i64* %429, align 8
  %431 = icmp eq i64 %430, 0
  br i1 %431, label %432, label %454

432:                                              ; preds = %427, %422
  br label %433

433:                                              ; preds = %432
  %434 = load i8, i8* %15, align 1
  %435 = icmp ne i8 %434, 0
  %436 = xor i1 %435, true
  %437 = xor i1 %436, true
  %438 = zext i1 %437 to i32
  %439 = sext i32 %438 to i64
  %440 = call i64 @llvm.expect.i64(i64 %439, i64 0)
  %441 = icmp ne i64 %440, 0
  br i1 %441, label %442, label %445

442:                                              ; preds = %433
  %443 = load %0*, %0** %14, align 8
  %444 = bitcast %0* %443 to i8*
  call void @_efree(i8* %444)
  br label %445

445:                                              ; preds = %442, %433
  br label %446

446:                                              ; preds = %445
  br label %447

447:                                              ; preds = %446
  br label %448

448:                                              ; preds = %447
  %449 = load %18*, %18** %4, align 8
  %450 = getelementptr inbounds %18, %18* %449, i32 0, i32 1
  %451 = bitcast %20* %450 to i32*
  store i32 2, i32* %451, align 8
  br label %452

452:                                              ; preds = %448
  br label %453

453:                                              ; preds = %452
  store i32 1, i32* %28, align 4
  br label %839

454:                                              ; preds = %427
  %455 = load %0*, %0** %6, align 8
  %456 = getelementptr inbounds %0, %0* %455, i32 0, i32 2
  %457 = load i64, i64* %456, align 8
  %458 = icmp eq i64 %457, 1
  br i1 %458, label %459, label %654

459:                                              ; preds = %454
  %460 = load i64, i64* %8, align 8
  %461 = icmp sge i64 %460, 0
  br i1 %461, label %462, label %504

462:                                              ; preds = %459
  %463 = load i64, i64* %8, align 8
  %464 = load %0*, %0** %7, align 8
  %465 = getelementptr inbounds %0, %0* %464, i32 0, i32 2
  %466 = load i64, i64* %465, align 8
  %467 = icmp ugt i64 %463, %466
  br i1 %467, label %468, label %490

468:                                              ; preds = %462
  br label %469

469:                                              ; preds = %468
  %470 = load i8, i8* %15, align 1
  %471 = icmp ne i8 %470, 0
  %472 = xor i1 %471, true
  %473 = xor i1 %472, true
  %474 = zext i1 %473 to i32
  %475 = sext i32 %474 to i64
  %476 = call i64 @llvm.expect.i64(i64 %475, i64 0)
  %477 = icmp ne i64 %476, 0
  br i1 %477, label %478, label %481

478:                                              ; preds = %469
  %479 = load %0*, %0** %14, align 8
  %480 = bitcast %0* %479 to i8*
  call void @_efree(i8* %480)
  br label %481

481:                                              ; preds = %478, %469
  br label %482

482:                                              ; preds = %481
  br label %483

483:                                              ; preds = %482
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @86, i32 0, i32 0))
  br label %484

484:                                              ; preds = %483
  %485 = load %18*, %18** %4, align 8
  %486 = getelementptr inbounds %18, %18* %485, i32 0, i32 1
  %487 = bitcast %20* %486 to i32*
  store i32 2, i32* %487, align 8
  br label %488

488:                                              ; preds = %484
  br label %489

489:                                              ; preds = %488
  store i32 1, i32* %28, align 4
  br label %839

490:                                              ; preds = %462
  %491 = load %0*, %0** %7, align 8
  %492 = getelementptr inbounds %0, %0* %491, i32 0, i32 3
  %493 = getelementptr inbounds [1 x i8], [1 x i8]* %492, i32 0, i32 0
  %494 = load i64, i64* %8, align 8
  %495 = getelementptr inbounds i8, i8* %493, i64 %494
  store i8* %495, i8** %9, align 8
  %496 = load %0*, %0** %7, align 8
  %497 = getelementptr inbounds %0, %0* %496, i32 0, i32 3
  %498 = getelementptr inbounds [1 x i8], [1 x i8]* %497, i32 0, i32 0
  %499 = load %0*, %0** %7, align 8
  %500 = getelementptr inbounds %0, %0* %499, i32 0, i32 2
  %501 = load i64, i64* %500, align 8
  %502 = getelementptr inbounds i8, i8* %498, i64 %501
  %503 = getelementptr inbounds i8, i8* %502, i64 -1
  store i8* %503, i8** %10, align 8
  br label %549

504:                                              ; preds = %459
  %505 = load %0*, %0** %7, align 8
  %506 = getelementptr inbounds %0, %0* %505, i32 0, i32 3
  %507 = getelementptr inbounds [1 x i8], [1 x i8]* %506, i32 0, i32 0
  store i8* %507, i8** %9, align 8
  %508 = load i64, i64* %8, align 8
  %509 = icmp slt i64 %508, -2147483647
  br i1 %509, label %517, label %510

510:                                              ; preds = %504
  %511 = load i64, i64* %8, align 8
  %512 = sub nsw i64 0, %511
  %513 = load %0*, %0** %7, align 8
  %514 = getelementptr inbounds %0, %0* %513, i32 0, i32 2
  %515 = load i64, i64* %514, align 8
  %516 = icmp ugt i64 %512, %515
  br i1 %516, label %517, label %539

517:                                              ; preds = %510, %504
  br label %518

518:                                              ; preds = %517
  %519 = load i8, i8* %15, align 1
  %520 = icmp ne i8 %519, 0
  %521 = xor i1 %520, true
  %522 = xor i1 %521, true
  %523 = zext i1 %522 to i32
  %524 = sext i32 %523 to i64
  %525 = call i64 @llvm.expect.i64(i64 %524, i64 0)
  %526 = icmp ne i64 %525, 0
  br i1 %526, label %527, label %530

527:                                              ; preds = %518
  %528 = load %0*, %0** %14, align 8
  %529 = bitcast %0* %528 to i8*
  call void @_efree(i8* %529)
  br label %530

530:                                              ; preds = %527, %518
  br label %531

531:                                              ; preds = %530
  br label %532

532:                                              ; preds = %531
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @86, i32 0, i32 0))
  br label %533

533:                                              ; preds = %532
  %534 = load %18*, %18** %4, align 8
  %535 = getelementptr inbounds %18, %18* %534, i32 0, i32 1
  %536 = bitcast %20* %535 to i32*
  store i32 2, i32* %536, align 8
  br label %537

537:                                              ; preds = %533
  br label %538

538:                                              ; preds = %537
  store i32 1, i32* %28, align 4
  br label %839

539:                                              ; preds = %510
  %540 = load %0*, %0** %7, align 8
  %541 = getelementptr inbounds %0, %0* %540, i32 0, i32 3
  %542 = getelementptr inbounds [1 x i8], [1 x i8]* %541, i32 0, i32 0
  %543 = load %0*, %0** %7, align 8
  %544 = getelementptr inbounds %0, %0* %543, i32 0, i32 2
  %545 = load i64, i64* %544, align 8
  %546 = getelementptr inbounds i8, i8* %542, i64 %545
  %547 = load i64, i64* %8, align 8
  %548 = getelementptr inbounds i8, i8* %546, i64 %547
  store i8* %548, i8** %10, align 8
  br label %549

549:                                              ; preds = %539, %490
  %550 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %550) #13
  %551 = call i32** @__ctype_tolower_loc() #17
  %552 = load i32*, i32** %551, align 8
  %553 = load %0*, %0** %6, align 8
  %554 = getelementptr inbounds %0, %0* %553, i32 0, i32 3
  %555 = getelementptr inbounds [1 x i8], [1 x i8]* %554, i32 0, i32 0
  %556 = load i8, i8* %555, align 8
  %557 = sext i8 %556 to i32
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds i32, i32* %552, i64 %558
  %560 = load i32, i32* %559, align 4
  store i32 %560, i32* %29, align 4
  %561 = load i32, i32* %29, align 4
  store i32 %561, i32* %30, align 4
  %562 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %562) #13
  %563 = load i32, i32* %30, align 4
  %564 = trunc i32 %563 to i8
  %565 = load %0*, %0** %14, align 8
  %566 = getelementptr inbounds %0, %0* %565, i32 0, i32 3
  %567 = getelementptr inbounds [1 x i8], [1 x i8]* %566, i32 0, i32 0
  store i8 %564, i8* %567, align 8
  br label %568

568:                                              ; preds = %629, %549
  %569 = load i8*, i8** %10, align 8
  %570 = load i8*, i8** %9, align 8
  %571 = icmp uge i8* %569, %570
  br i1 %571, label %572, label %632

572:                                              ; preds = %568
  %573 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %573) #13
  %574 = call i32** @__ctype_tolower_loc() #17
  %575 = load i32*, i32** %574, align 8
  %576 = load i8*, i8** %10, align 8
  %577 = load i8, i8* %576, align 1
  %578 = sext i8 %577 to i32
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds i32, i32* %575, i64 %579
  %581 = load i32, i32* %580, align 4
  store i32 %581, i32* %31, align 4
  %582 = load i32, i32* %31, align 4
  store i32 %582, i32* %32, align 4
  %583 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %583) #13
  %584 = load i32, i32* %32, align 4
  %585 = load %0*, %0** %14, align 8
  %586 = getelementptr inbounds %0, %0* %585, i32 0, i32 3
  %587 = getelementptr inbounds [1 x i8], [1 x i8]* %586, i32 0, i32 0
  %588 = load i8, i8* %587, align 8
  %589 = sext i8 %588 to i32
  %590 = icmp eq i32 %584, %589
  br i1 %590, label %591, label %629

591:                                              ; preds = %572
  br label %592

592:                                              ; preds = %591
  %593 = load i8, i8* %15, align 1
  %594 = icmp ne i8 %593, 0
  %595 = xor i1 %594, true
  %596 = xor i1 %595, true
  %597 = zext i1 %596 to i32
  %598 = sext i32 %597 to i64
  %599 = call i64 @llvm.expect.i64(i64 %598, i64 0)
  %600 = icmp ne i64 %599, 0
  br i1 %600, label %601, label %604

601:                                              ; preds = %592
  %602 = load %0*, %0** %14, align 8
  %603 = bitcast %0* %602 to i8*
  call void @_efree(i8* %603)
  br label %604

604:                                              ; preds = %601, %592
  br label %605

605:                                              ; preds = %604
  br label %606

606:                                              ; preds = %605
  %607 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %607) #13
  %608 = load %18*, %18** %4, align 8
  store %18* %608, %18** %33, align 8
  %609 = load i8*, i8** %10, align 8
  %610 = load i8*, i8** %9, align 8
  %611 = ptrtoint i8* %609 to i64
  %612 = ptrtoint i8* %610 to i64
  %613 = sub i64 %611, %612
  %614 = load i64, i64* %8, align 8
  %615 = icmp sgt i64 %614, 0
  br i1 %615, label %616, label %618

616:                                              ; preds = %606
  %617 = load i64, i64* %8, align 8
  br label %619

618:                                              ; preds = %606
  br label %619

619:                                              ; preds = %618, %616
  %620 = phi i64 [ %617, %616 ], [ 0, %618 ]
  %621 = add nsw i64 %613, %620
  %622 = load %18*, %18** %33, align 8
  %623 = getelementptr inbounds %18, %18* %622, i32 0, i32 0
  %624 = bitcast %19* %623 to i64*
  store i64 %621, i64* %624, align 8
  %625 = load %18*, %18** %33, align 8
  %626 = getelementptr inbounds %18, %18* %625, i32 0, i32 1
  %627 = bitcast %20* %626 to i32*
  store i32 4, i32* %627, align 8
  %628 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %628) #13
  store i32 1, i32* %28, align 4
  br label %839

629:                                              ; preds = %572
  %630 = load i8*, i8** %10, align 8
  %631 = getelementptr inbounds i8, i8* %630, i32 -1
  store i8* %631, i8** %10, align 8
  br label %568

632:                                              ; preds = %568
  br label %633

633:                                              ; preds = %632
  %634 = load i8, i8* %15, align 1
  %635 = icmp ne i8 %634, 0
  %636 = xor i1 %635, true
  %637 = xor i1 %636, true
  %638 = zext i1 %637 to i32
  %639 = sext i32 %638 to i64
  %640 = call i64 @llvm.expect.i64(i64 %639, i64 0)
  %641 = icmp ne i64 %640, 0
  br i1 %641, label %642, label %645

642:                                              ; preds = %633
  %643 = load %0*, %0** %14, align 8
  %644 = bitcast %0* %643 to i8*
  call void @_efree(i8* %644)
  br label %645

645:                                              ; preds = %642, %633
  br label %646

646:                                              ; preds = %645
  br label %647

647:                                              ; preds = %646
  br label %648

648:                                              ; preds = %647
  %649 = load %18*, %18** %4, align 8
  %650 = getelementptr inbounds %18, %18* %649, i32 0, i32 1
  %651 = bitcast %20* %650 to i32*
  store i32 2, i32* %651, align 8
  br label %652

652:                                              ; preds = %648
  br label %653

653:                                              ; preds = %652
  store i32 1, i32* %28, align 4
  br label %839

654:                                              ; preds = %454
  %655 = load %0*, %0** %7, align 8
  %656 = call %0* @php_string_tolower(%0* %655)
  store %0* %656, %0** %13, align 8
  %657 = load i64, i64* %8, align 8
  %658 = icmp sge i64 %657, 0
  br i1 %658, label %659, label %701

659:                                              ; preds = %654
  %660 = load i64, i64* %8, align 8
  %661 = load %0*, %0** %7, align 8
  %662 = getelementptr inbounds %0, %0* %661, i32 0, i32 2
  %663 = load i64, i64* %662, align 8
  %664 = icmp ugt i64 %660, %663
  br i1 %664, label %665, label %688

665:                                              ; preds = %659
  %666 = load %0*, %0** %13, align 8
  call void @159(%0* %666)
  br label %667

667:                                              ; preds = %665
  %668 = load i8, i8* %15, align 1
  %669 = icmp ne i8 %668, 0
  %670 = xor i1 %669, true
  %671 = xor i1 %670, true
  %672 = zext i1 %671 to i32
  %673 = sext i32 %672 to i64
  %674 = call i64 @llvm.expect.i64(i64 %673, i64 0)
  %675 = icmp ne i64 %674, 0
  br i1 %675, label %676, label %679

676:                                              ; preds = %667
  %677 = load %0*, %0** %14, align 8
  %678 = bitcast %0* %677 to i8*
  call void @_efree(i8* %678)
  br label %679

679:                                              ; preds = %676, %667
  br label %680

680:                                              ; preds = %679
  br label %681

681:                                              ; preds = %680
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @86, i32 0, i32 0))
  br label %682

682:                                              ; preds = %681
  %683 = load %18*, %18** %4, align 8
  %684 = getelementptr inbounds %18, %18* %683, i32 0, i32 1
  %685 = bitcast %20* %684 to i32*
  store i32 2, i32* %685, align 8
  br label %686

686:                                              ; preds = %682
  br label %687

687:                                              ; preds = %686
  store i32 1, i32* %28, align 4
  br label %839

688:                                              ; preds = %659
  %689 = load %0*, %0** %13, align 8
  %690 = getelementptr inbounds %0, %0* %689, i32 0, i32 3
  %691 = getelementptr inbounds [1 x i8], [1 x i8]* %690, i32 0, i32 0
  %692 = load i64, i64* %8, align 8
  %693 = getelementptr inbounds i8, i8* %691, i64 %692
  store i8* %693, i8** %9, align 8
  %694 = load %0*, %0** %13, align 8
  %695 = getelementptr inbounds %0, %0* %694, i32 0, i32 3
  %696 = getelementptr inbounds [1 x i8], [1 x i8]* %695, i32 0, i32 0
  %697 = load %0*, %0** %7, align 8
  %698 = getelementptr inbounds %0, %0* %697, i32 0, i32 2
  %699 = load i64, i64* %698, align 8
  %700 = getelementptr inbounds i8, i8* %696, i64 %699
  store i8* %700, i8** %10, align 8
  br label %767

701:                                              ; preds = %654
  %702 = load i64, i64* %8, align 8
  %703 = icmp slt i64 %702, -2147483647
  br i1 %703, label %711, label %704

704:                                              ; preds = %701
  %705 = load i64, i64* %8, align 8
  %706 = sub nsw i64 0, %705
  %707 = load %0*, %0** %7, align 8
  %708 = getelementptr inbounds %0, %0* %707, i32 0, i32 2
  %709 = load i64, i64* %708, align 8
  %710 = icmp ugt i64 %706, %709
  br i1 %710, label %711, label %734

711:                                              ; preds = %704, %701
  %712 = load %0*, %0** %13, align 8
  call void @159(%0* %712)
  br label %713

713:                                              ; preds = %711
  %714 = load i8, i8* %15, align 1
  %715 = icmp ne i8 %714, 0
  %716 = xor i1 %715, true
  %717 = xor i1 %716, true
  %718 = zext i1 %717 to i32
  %719 = sext i32 %718 to i64
  %720 = call i64 @llvm.expect.i64(i64 %719, i64 0)
  %721 = icmp ne i64 %720, 0
  br i1 %721, label %722, label %725

722:                                              ; preds = %713
  %723 = load %0*, %0** %14, align 8
  %724 = bitcast %0* %723 to i8*
  call void @_efree(i8* %724)
  br label %725

725:                                              ; preds = %722, %713
  br label %726

726:                                              ; preds = %725
  br label %727

727:                                              ; preds = %726
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @86, i32 0, i32 0))
  br label %728

728:                                              ; preds = %727
  %729 = load %18*, %18** %4, align 8
  %730 = getelementptr inbounds %18, %18* %729, i32 0, i32 1
  %731 = bitcast %20* %730 to i32*
  store i32 2, i32* %731, align 8
  br label %732

732:                                              ; preds = %728
  br label %733

733:                                              ; preds = %732
  store i32 1, i32* %28, align 4
  br label %839

734:                                              ; preds = %704
  %735 = load %0*, %0** %13, align 8
  %736 = getelementptr inbounds %0, %0* %735, i32 0, i32 3
  %737 = getelementptr inbounds [1 x i8], [1 x i8]* %736, i32 0, i32 0
  store i8* %737, i8** %9, align 8
  %738 = load i64, i64* %8, align 8
  %739 = sub nsw i64 0, %738
  %740 = load %0*, %0** %6, align 8
  %741 = getelementptr inbounds %0, %0* %740, i32 0, i32 2
  %742 = load i64, i64* %741, align 8
  %743 = icmp ult i64 %739, %742
  br i1 %743, label %744, label %752

744:                                              ; preds = %734
  %745 = load %0*, %0** %13, align 8
  %746 = getelementptr inbounds %0, %0* %745, i32 0, i32 3
  %747 = getelementptr inbounds [1 x i8], [1 x i8]* %746, i32 0, i32 0
  %748 = load %0*, %0** %7, align 8
  %749 = getelementptr inbounds %0, %0* %748, i32 0, i32 2
  %750 = load i64, i64* %749, align 8
  %751 = getelementptr inbounds i8, i8* %747, i64 %750
  store i8* %751, i8** %10, align 8
  br label %766

752:                                              ; preds = %734
  %753 = load %0*, %0** %13, align 8
  %754 = getelementptr inbounds %0, %0* %753, i32 0, i32 3
  %755 = getelementptr inbounds [1 x i8], [1 x i8]* %754, i32 0, i32 0
  %756 = load %0*, %0** %7, align 8
  %757 = getelementptr inbounds %0, %0* %756, i32 0, i32 2
  %758 = load i64, i64* %757, align 8
  %759 = getelementptr inbounds i8, i8* %755, i64 %758
  %760 = load i64, i64* %8, align 8
  %761 = getelementptr inbounds i8, i8* %759, i64 %760
  %762 = load %0*, %0** %6, align 8
  %763 = getelementptr inbounds %0, %0* %762, i32 0, i32 2
  %764 = load i64, i64* %763, align 8
  %765 = getelementptr inbounds i8, i8* %761, i64 %764
  store i8* %765, i8** %10, align 8
  br label %766

766:                                              ; preds = %752, %744
  br label %767

767:                                              ; preds = %766, %688
  %768 = load %0*, %0** %6, align 8
  %769 = call %0* @php_string_tolower(%0* %768)
  store %0* %769, %0** %12, align 8
  %770 = load i8*, i8** %9, align 8
  %771 = load %0*, %0** %12, align 8
  %772 = getelementptr inbounds %0, %0* %771, i32 0, i32 3
  %773 = getelementptr inbounds [1 x i8], [1 x i8]* %772, i32 0, i32 0
  %774 = load %0*, %0** %12, align 8
  %775 = getelementptr inbounds %0, %0* %774, i32 0, i32 2
  %776 = load i64, i64* %775, align 8
  %777 = load i8*, i8** %10, align 8
  %778 = call i8* @167(i8* %770, i8* %773, i64 %776, i8* %777)
  store i8* %778, i8** %11, align 8
  %779 = icmp ne i8* %778, null
  br i1 %779, label %780, label %814

780:                                              ; preds = %767
  %781 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %781) #13
  %782 = load %18*, %18** %4, align 8
  store %18* %782, %18** %34, align 8
  %783 = load i8*, i8** %11, align 8
  %784 = load %0*, %0** %13, align 8
  %785 = getelementptr inbounds %0, %0* %784, i32 0, i32 3
  %786 = getelementptr inbounds [1 x i8], [1 x i8]* %785, i32 0, i32 0
  %787 = ptrtoint i8* %783 to i64
  %788 = ptrtoint i8* %786 to i64
  %789 = sub i64 %787, %788
  %790 = load %18*, %18** %34, align 8
  %791 = getelementptr inbounds %18, %18* %790, i32 0, i32 0
  %792 = bitcast %19* %791 to i64*
  store i64 %789, i64* %792, align 8
  %793 = load %18*, %18** %34, align 8
  %794 = getelementptr inbounds %18, %18* %793, i32 0, i32 1
  %795 = bitcast %20* %794 to i32*
  store i32 4, i32* %795, align 8
  %796 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %796) #13
  %797 = load %0*, %0** %12, align 8
  call void @159(%0* %797)
  %798 = load %0*, %0** %13, align 8
  call void @159(%0* %798)
  br label %799

799:                                              ; preds = %780
  %800 = load i8, i8* %15, align 1
  %801 = icmp ne i8 %800, 0
  %802 = xor i1 %801, true
  %803 = xor i1 %802, true
  %804 = zext i1 %803 to i32
  %805 = sext i32 %804 to i64
  %806 = call i64 @llvm.expect.i64(i64 %805, i64 0)
  %807 = icmp ne i64 %806, 0
  br i1 %807, label %808, label %811

808:                                              ; preds = %799
  %809 = load %0*, %0** %14, align 8
  %810 = bitcast %0* %809 to i8*
  call void @_efree(i8* %810)
  br label %811

811:                                              ; preds = %808, %799
  br label %812

812:                                              ; preds = %811
  br label %813

813:                                              ; preds = %812
  br label %838

814:                                              ; preds = %767
  %815 = load %0*, %0** %12, align 8
  call void @159(%0* %815)
  %816 = load %0*, %0** %13, align 8
  call void @159(%0* %816)
  br label %817

817:                                              ; preds = %814
  %818 = load i8, i8* %15, align 1
  %819 = icmp ne i8 %818, 0
  %820 = xor i1 %819, true
  %821 = xor i1 %820, true
  %822 = zext i1 %821 to i32
  %823 = sext i32 %822 to i64
  %824 = call i64 @llvm.expect.i64(i64 %823, i64 0)
  %825 = icmp ne i64 %824, 0
  br i1 %825, label %826, label %829

826:                                              ; preds = %817
  %827 = load %0*, %0** %14, align 8
  %828 = bitcast %0* %827 to i8*
  call void @_efree(i8* %828)
  br label %829

829:                                              ; preds = %826, %817
  br label %830

830:                                              ; preds = %829
  br label %831

831:                                              ; preds = %830
  br label %832

832:                                              ; preds = %831
  %833 = load %18*, %18** %4, align 8
  %834 = getelementptr inbounds %18, %18* %833, i32 0, i32 1
  %835 = bitcast %20* %834 to i32*
  store i32 2, i32* %835, align 8
  br label %836

836:                                              ; preds = %832
  br label %837

837:                                              ; preds = %836
  store i32 1, i32* %28, align 4
  br label %839

838:                                              ; preds = %813
  store i32 0, i32* %28, align 4
  br label %839

839:                                              ; preds = %838, %837, %733, %687, %653, %619, %538, %489, %453, %416, %344
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %840 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %840) #13
  %841 = bitcast %0** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %841) #13
  %842 = bitcast %0** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %842) #13
  %843 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %843) #13
  %844 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %844) #13
  %845 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %845) #13
  %846 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %846) #13
  %847 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %847) #13
  %848 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %848) #13
  %849 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %849) #13
  %850 = load i32, i32* %28, align 4
  switch i32 %850, label %852 [
    i32 0, label %851
    i32 1, label %851
  ]

851:                                              ; preds = %839, %839
  ret void

852:                                              ; preds = %839
  unreachable
}

declare dso_local noalias i8* @_emalloc_32() #1

; Function Attrs: alwaysinline nounwind uwtable
define internal void @168(%0* %0) #5 {
  %2 = alloca %0*, align 8
  store %0* %0, %0** %2, align 8
  %3 = load %0*, %0** %2, align 8
  %4 = getelementptr inbounds %0, %0* %3, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strrchr(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca %18*, align 8
  %24 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %25 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  store i8* null, i8** %7, align 8
  %28 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  br label %29

29:                                               ; preds = %2
  %30 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  store i32 0, i32* %9, align 4
  %31 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 2, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 2, i32* %11, align 4
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  %34 = load %14*, %14** %3, align 8
  %35 = getelementptr inbounds %14, %14* %34, i32 0, i32 4
  %36 = getelementptr inbounds %18, %18* %35, i32 0, i32 2
  %37 = bitcast %21* %36 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %12, align 4
  %39 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  %40 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  store %18* null, %18** %15, align 8
  %42 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #13
  store i32 0, i32* %16, align 4
  %43 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %44 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  store i32 0, i32* %20, align 4
  %45 = load i32, i32* %13, align 4
  %46 = load %18*, %18** %14, align 8
  %47 = load %18*, %18** %15, align 8
  %48 = load i32, i32* %16, align 4
  %49 = load i8*, i8** %17, align 8
  %50 = load i8, i8* %18, align 1
  %51 = load i8, i8* %19, align 1
  br label %52

52:                                               ; preds = %29
  %53 = load i32, i32* %12, align 4
  %54 = load i32, i32* %10, align 4
  %55 = icmp slt i32 %53, %54
  %56 = xor i1 %55, true
  %57 = xor i1 %56, true
  %58 = zext i1 %57 to i32
  %59 = sext i32 %58 to i64
  %60 = call i64 @llvm.expect.i64(i64 %59, i64 0)
  %61 = icmp ne i64 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %52
  %63 = load i32, i32* %12, align 4
  %64 = load i32, i32* %11, align 4
  %65 = icmp sgt i32 %63, %64
  %66 = xor i1 %65, true
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0)
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %85

72:                                               ; preds = %62
  %73 = load i32, i32* %11, align 4
  %74 = icmp sge i32 %73, 0
  %75 = xor i1 %74, true
  %76 = xor i1 %75, true
  %77 = zext i1 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = call i64 @llvm.expect.i64(i64 %78, i64 1)
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %72, %52
  %82 = load i32, i32* %12, align 4
  %83 = load i32, i32* %10, align 4
  %84 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %82, i32 %83, i32 %84)
  store i32 1, i32* %20, align 4
  br label %219

85:                                               ; preds = %72, %62
  store i32 0, i32* %13, align 4
  %86 = load %14*, %14** %3, align 8
  %87 = bitcast %14* %86 to %18*
  %88 = getelementptr inbounds %18, %18* %87, i64 4
  store %18* %88, %18** %14, align 8
  %89 = load i32, i32* %13, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %13, align 4
  br label %91

91:                                               ; preds = %85
  %92 = load i32, i32* %13, align 4
  %93 = load i32, i32* %10, align 4
  %94 = icmp sle i32 %92, %93
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = load i8, i8* %19, align 1
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %97, 1
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi i1 [ true, %91 ], [ %98, %95 ]
  %101 = xor i1 %100, true
  %102 = zext i1 %101 to i32
  %103 = sext i32 %102 to i64
  %104 = call i64 @llvm.expect.i64(i64 %103, i64 0)
  %105 = icmp ne i64 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %99
  unreachable

107:                                              ; preds = %99
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %13, align 4
  %112 = load i32, i32* %10, align 4
  %113 = icmp sgt i32 %111, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load i8, i8* %19, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp eq i32 %116, 0
  br label %118

118:                                              ; preds = %114, %110
  %119 = phi i1 [ true, %110 ], [ %117, %114 ]
  %120 = xor i1 %119, true
  %121 = zext i1 %120 to i32
  %122 = sext i32 %121 to i64
  %123 = call i64 @llvm.expect.i64(i64 %122, i64 0)
  %124 = icmp ne i64 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %118
  unreachable

126:                                              ; preds = %118
  br label %127

127:                                              ; preds = %126
  br label %128

128:                                              ; preds = %127
  %129 = load i8, i8* %19, align 1
  %130 = icmp ne i8 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %128
  %132 = load i32, i32* %13, align 4
  %133 = load i32, i32* %12, align 4
  %134 = icmp sgt i32 %132, %133
  %135 = xor i1 %134, true
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %131
  br label %219

142:                                              ; preds = %131
  br label %143

143:                                              ; preds = %142, %128
  %144 = load %18*, %18** %14, align 8
  %145 = getelementptr inbounds %18, %18* %144, i32 1
  store %18* %145, %18** %14, align 8
  %146 = load %18*, %18** %14, align 8
  store %18* %146, %18** %15, align 8
  %147 = load %18*, %18** %15, align 8
  %148 = call i32 @143(%18* %147, %0** %6, i32 0)
  %149 = icmp ne i32 %148, 0
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %143
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %219

158:                                              ; preds = %143
  %159 = load i32, i32* %13, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %13, align 4
  br label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %13, align 4
  %163 = load i32, i32* %10, align 4
  %164 = icmp sle i32 %162, %163
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = load i8, i8* %19, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp eq i32 %167, 1
  br label %169

169:                                              ; preds = %165, %161
  %170 = phi i1 [ true, %161 ], [ %168, %165 ]
  %171 = xor i1 %170, true
  %172 = zext i1 %171 to i32
  %173 = sext i32 %172 to i64
  %174 = call i64 @llvm.expect.i64(i64 %173, i64 0)
  %175 = icmp ne i64 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %169
  unreachable

177:                                              ; preds = %169
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  br label %180

180:                                              ; preds = %179
  %181 = load i32, i32* %13, align 4
  %182 = load i32, i32* %10, align 4
  %183 = icmp sgt i32 %181, %182
  br i1 %183, label %188, label %184

184:                                              ; preds = %180
  %185 = load i8, i8* %19, align 1
  %186 = zext i8 %185 to i32
  %187 = icmp eq i32 %186, 0
  br label %188

188:                                              ; preds = %184, %180
  %189 = phi i1 [ true, %180 ], [ %187, %184 ]
  %190 = xor i1 %189, true
  %191 = zext i1 %190 to i32
  %192 = sext i32 %191 to i64
  %193 = call i64 @llvm.expect.i64(i64 %192, i64 0)
  %194 = icmp ne i64 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %188
  unreachable

196:                                              ; preds = %188
  br label %197

197:                                              ; preds = %196
  br label %198

198:                                              ; preds = %197
  %199 = load i8, i8* %19, align 1
  %200 = icmp ne i8 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %198
  %202 = load i32, i32* %13, align 4
  %203 = load i32, i32* %12, align 4
  %204 = icmp sgt i32 %202, %203
  %205 = xor i1 %204, true
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %201
  br label %219

212:                                              ; preds = %201
  br label %213

213:                                              ; preds = %212, %198
  %214 = load %18*, %18** %14, align 8
  %215 = getelementptr inbounds %18, %18* %214, i32 1
  store %18* %215, %18** %14, align 8
  %216 = load %18*, %18** %14, align 8
  store %18* %216, %18** %15, align 8
  %217 = load %18*, %18** %15, align 8
  call void @161(%18* %217, %18** %5, i32 0)
  br label %218

218:                                              ; preds = %213
  br label %219

219:                                              ; preds = %218, %211, %157, %141, %81
  %220 = load i32, i32* %20, align 4
  %221 = icmp ne i32 %220, 0
  %222 = xor i1 %221, true
  %223 = xor i1 %222, true
  %224 = zext i1 %223 to i32
  %225 = sext i32 %224 to i64
  %226 = call i64 @llvm.expect.i64(i64 %225, i64 0)
  %227 = icmp ne i64 %226, 0
  br i1 %227, label %228, label %251

228:                                              ; preds = %219
  %229 = load i32, i32* %20, align 4
  %230 = icmp eq i32 %229, 2
  br i1 %230, label %231, label %234

231:                                              ; preds = %228
  %232 = load i32, i32* %13, align 4
  %233 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %232, i8* %233)
  br label %250

234:                                              ; preds = %228
  %235 = load i32, i32* %20, align 4
  %236 = icmp eq i32 %235, 3
  br i1 %236, label %237, label %241

237:                                              ; preds = %234
  %238 = load i32, i32* %13, align 4
  %239 = load i8*, i8** %17, align 8
  %240 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %238, i8* %239, %18* %240)
  br label %249

241:                                              ; preds = %234
  %242 = load i32, i32* %20, align 4
  %243 = icmp eq i32 %242, 4
  br i1 %243, label %244, label %248

244:                                              ; preds = %241
  %245 = load i32, i32* %13, align 4
  %246 = load i32, i32* %16, align 4
  %247 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %245, i32 %246, %18* %247)
  br label %248

248:                                              ; preds = %244, %241
  br label %249

249:                                              ; preds = %248, %237
  br label %250

250:                                              ; preds = %249, %231
  store i32 1, i32* %21, align 4
  br label %252

251:                                              ; preds = %219
  store i32 0, i32* %21, align 4
  br label %252

252:                                              ; preds = %251, %250
  %253 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %253) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %254 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %254) #13
  %255 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %255) #13
  %256 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %256) #13
  %257 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #13
  %258 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %258) #13
  %259 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %259) #13
  %260 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %260) #13
  %261 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %261) #13
  %262 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %262) #13
  %263 = load i32, i32* %21, align 4
  switch i32 %263, label %354 [
    i32 0, label %264
  ]

264:                                              ; preds = %252
  br label %265

265:                                              ; preds = %264
  br label %266

266:                                              ; preds = %265
  %267 = load %18*, %18** %5, align 8
  %268 = call zeroext i8 @157(%18* %267)
  %269 = zext i8 %268 to i32
  %270 = icmp eq i32 %269, 6
  br i1 %270, label %271, label %287

271:                                              ; preds = %266
  %272 = load %0*, %0** %6, align 8
  %273 = getelementptr inbounds %0, %0* %272, i32 0, i32 3
  %274 = getelementptr inbounds [1 x i8], [1 x i8]* %273, i32 0, i32 0
  %275 = load %18*, %18** %5, align 8
  %276 = getelementptr inbounds %18, %18* %275, i32 0, i32 0
  %277 = bitcast %19* %276 to %0**
  %278 = load %0*, %0** %277, align 8
  %279 = getelementptr inbounds %0, %0* %278, i32 0, i32 3
  %280 = getelementptr inbounds [1 x i8], [1 x i8]* %279, i32 0, i32 0
  %281 = load i8, i8* %280, align 8
  %282 = sext i8 %281 to i32
  %283 = load %0*, %0** %6, align 8
  %284 = getelementptr inbounds %0, %0* %283, i32 0, i32 2
  %285 = load i64, i64* %284, align 8
  %286 = call i8* @165(i8* %274, i32 %282, i64 %285)
  store i8* %286, i8** %7, align 8
  br label %311

287:                                              ; preds = %266
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  %288 = load %18*, %18** %5, align 8
  %289 = call i32 @166(%18* %288, i8* %22)
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %291, label %298

291:                                              ; preds = %287
  br label %292

292:                                              ; preds = %291
  %293 = load %18*, %18** %4, align 8
  %294 = getelementptr inbounds %18, %18* %293, i32 0, i32 1
  %295 = bitcast %20* %294 to i32*
  store i32 2, i32* %295, align 8
  br label %296

296:                                              ; preds = %292
  br label %297

297:                                              ; preds = %296
  store i32 1, i32* %21, align 4
  br label %308

298:                                              ; preds = %287
  %299 = load %0*, %0** %6, align 8
  %300 = getelementptr inbounds %0, %0* %299, i32 0, i32 3
  %301 = getelementptr inbounds [1 x i8], [1 x i8]* %300, i32 0, i32 0
  %302 = load i8, i8* %22, align 1
  %303 = sext i8 %302 to i32
  %304 = load %0*, %0** %6, align 8
  %305 = getelementptr inbounds %0, %0* %304, i32 0, i32 2
  %306 = load i64, i64* %305, align 8
  %307 = call i8* @165(i8* %301, i32 %303, i64 %306)
  store i8* %307, i8** %7, align 8
  store i32 0, i32* %21, align 4
  br label %308

308:                                              ; preds = %298, %297
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  %309 = load i32, i32* %21, align 4
  switch i32 %309, label %354 [
    i32 0, label %310
  ]

310:                                              ; preds = %308
  br label %311

311:                                              ; preds = %310, %271
  %312 = load i8*, i8** %7, align 8
  %313 = icmp ne i8* %312, null
  br i1 %313, label %314, label %347

314:                                              ; preds = %311
  %315 = load i8*, i8** %7, align 8
  %316 = load %0*, %0** %6, align 8
  %317 = getelementptr inbounds %0, %0* %316, i32 0, i32 3
  %318 = getelementptr inbounds [1 x i8], [1 x i8]* %317, i32 0, i32 0
  %319 = ptrtoint i8* %315 to i64
  %320 = ptrtoint i8* %318 to i64
  %321 = sub i64 %319, %320
  store i64 %321, i64* %8, align 8
  br label %322

322:                                              ; preds = %314
  br label %323

323:                                              ; preds = %322
  %324 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %324) #13
  %325 = load %18*, %18** %4, align 8
  store %18* %325, %18** %23, align 8
  %326 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %326) #13
  %327 = load i8*, i8** %7, align 8
  %328 = load %0*, %0** %6, align 8
  %329 = getelementptr inbounds %0, %0* %328, i32 0, i32 2
  %330 = load i64, i64* %329, align 8
  %331 = load i64, i64* %8, align 8
  %332 = sub i64 %330, %331
  %333 = call %0* @148(i8* %327, i64 %332, i32 0)
  store %0* %333, %0** %24, align 8
  %334 = load %0*, %0** %24, align 8
  %335 = load %18*, %18** %23, align 8
  %336 = getelementptr inbounds %18, %18* %335, i32 0, i32 0
  %337 = bitcast %19* %336 to %0**
  store %0* %334, %0** %337, align 8
  %338 = load %18*, %18** %23, align 8
  %339 = getelementptr inbounds %18, %18* %338, i32 0, i32 1
  %340 = bitcast %20* %339 to i32*
  store i32 5126, i32* %340, align 8
  %341 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %341) #13
  %342 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %342) #13
  br label %343

343:                                              ; preds = %323
  br label %344

344:                                              ; preds = %343
  br label %345

345:                                              ; preds = %344
  br label %346

346:                                              ; preds = %345
  store i32 1, i32* %21, align 4
  br label %354

347:                                              ; preds = %311
  br label %348

348:                                              ; preds = %347
  %349 = load %18*, %18** %4, align 8
  %350 = getelementptr inbounds %18, %18* %349, i32 0, i32 1
  %351 = bitcast %20* %350 to i32*
  store i32 2, i32* %351, align 8
  br label %352

352:                                              ; preds = %348
  br label %353

353:                                              ; preds = %352
  store i32 1, i32* %21, align 4
  br label %354

354:                                              ; preds = %353, %346, %308, %252
  %355 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %355) #13
  %356 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %356) #13
  %357 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %357) #13
  %358 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %358) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_chunk_split(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %0*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %18*, align 8
  %16 = alloca %18*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %18*, align 8
  %24 = alloca %0*, align 8
  %25 = alloca %18*, align 8
  %26 = alloca %0*, align 8
  %27 = alloca %18*, align 8
  %28 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %29 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @87, i32 0, i32 0), i8** %6, align 8
  %31 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  store i64 2, i64* %7, align 8
  %32 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  store i64 76, i64* %8, align 8
  %33 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  br label %34

34:                                               ; preds = %2
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 0, i32* %10, align 4
  %36 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 1, i32* %11, align 4
  %37 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 3, i32* %12, align 4
  %38 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  %39 = load %14*, %14** %3, align 8
  %40 = getelementptr inbounds %14, %14* %39, i32 0, i32 4
  %41 = getelementptr inbounds %18, %18* %40, i32 0, i32 2
  %42 = bitcast %21* %41 to i32*
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %13, align 4
  %44 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  %45 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  %46 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  store %18* null, %18** %16, align 8
  %47 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #13
  store i32 0, i32* %17, align 4
  %48 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #13
  store i8 0, i8* %20, align 1
  %49 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  store i32 0, i32* %21, align 4
  %50 = load i32, i32* %14, align 4
  %51 = load %18*, %18** %15, align 8
  %52 = load %18*, %18** %16, align 8
  %53 = load i32, i32* %17, align 4
  %54 = load i8*, i8** %18, align 8
  %55 = load i8, i8* %19, align 1
  %56 = load i8, i8* %20, align 1
  br label %57

57:                                               ; preds = %34
  %58 = load i32, i32* %13, align 4
  %59 = load i32, i32* %11, align 4
  %60 = icmp slt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %57
  %68 = load i32, i32* %13, align 4
  %69 = load i32, i32* %12, align 4
  %70 = icmp sgt i32 %68, %69
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 0)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %90

77:                                               ; preds = %67
  %78 = load i32, i32* %12, align 4
  %79 = icmp sge i32 %78, 0
  %80 = xor i1 %79, true
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = call i64 @llvm.expect.i64(i64 %83, i64 1)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %77, %57
  %87 = load i32, i32* %13, align 4
  %88 = load i32, i32* %11, align 4
  %89 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %87, i32 %88, i32 %89)
  store i32 1, i32* %21, align 4
  br label %305

90:                                               ; preds = %77, %67
  store i32 0, i32* %14, align 4
  %91 = load %14*, %14** %3, align 8
  %92 = bitcast %14* %91 to %18*
  %93 = getelementptr inbounds %18, %18* %92, i64 4
  store %18* %93, %18** %15, align 8
  %94 = load i32, i32* %14, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %14, align 4
  br label %96

96:                                               ; preds = %90
  %97 = load i32, i32* %14, align 4
  %98 = load i32, i32* %11, align 4
  %99 = icmp sle i32 %97, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = load i8, i8* %20, align 1
  %102 = zext i8 %101 to i32
  %103 = icmp eq i32 %102, 1
  br label %104

104:                                              ; preds = %100, %96
  %105 = phi i1 [ true, %96 ], [ %103, %100 ]
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.expect.i64(i64 %108, i64 0)
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %104
  unreachable

112:                                              ; preds = %104
  br label %113

113:                                              ; preds = %112
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %14, align 4
  %117 = load i32, i32* %11, align 4
  %118 = icmp sgt i32 %116, %117
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = load i8, i8* %20, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp eq i32 %121, 0
  br label %123

123:                                              ; preds = %119, %115
  %124 = phi i1 [ true, %115 ], [ %122, %119 ]
  %125 = xor i1 %124, true
  %126 = zext i1 %125 to i32
  %127 = sext i32 %126 to i64
  %128 = call i64 @llvm.expect.i64(i64 %127, i64 0)
  %129 = icmp ne i64 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %123
  unreachable

131:                                              ; preds = %123
  br label %132

132:                                              ; preds = %131
  br label %133

133:                                              ; preds = %132
  %134 = load i8, i8* %20, align 1
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %133
  %137 = load i32, i32* %14, align 4
  %138 = load i32, i32* %13, align 4
  %139 = icmp sgt i32 %137, %138
  %140 = xor i1 %139, true
  %141 = xor i1 %140, true
  %142 = zext i1 %141 to i32
  %143 = sext i32 %142 to i64
  %144 = call i64 @llvm.expect.i64(i64 %143, i64 0)
  %145 = icmp ne i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %136
  br label %305

147:                                              ; preds = %136
  br label %148

148:                                              ; preds = %147, %133
  %149 = load %18*, %18** %15, align 8
  %150 = getelementptr inbounds %18, %18* %149, i32 1
  store %18* %150, %18** %15, align 8
  %151 = load %18*, %18** %15, align 8
  store %18* %151, %18** %16, align 8
  %152 = load %18*, %18** %16, align 8
  %153 = call i32 @143(%18* %152, %0** %5, i32 0)
  %154 = icmp ne i32 %153, 0
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %148
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %305

163:                                              ; preds = %148
  store i8 1, i8* %20, align 1
  %164 = load i32, i32* %14, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %14, align 4
  br label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %14, align 4
  %168 = load i32, i32* %11, align 4
  %169 = icmp sle i32 %167, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = load i8, i8* %20, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 1
  br label %174

174:                                              ; preds = %170, %166
  %175 = phi i1 [ true, %166 ], [ %173, %170 ]
  %176 = xor i1 %175, true
  %177 = zext i1 %176 to i32
  %178 = sext i32 %177 to i64
  %179 = call i64 @llvm.expect.i64(i64 %178, i64 0)
  %180 = icmp ne i64 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %174
  unreachable

182:                                              ; preds = %174
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  %186 = load i32, i32* %14, align 4
  %187 = load i32, i32* %11, align 4
  %188 = icmp sgt i32 %186, %187
  br i1 %188, label %193, label %189

189:                                              ; preds = %185
  %190 = load i8, i8* %20, align 1
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %191, 0
  br label %193

193:                                              ; preds = %189, %185
  %194 = phi i1 [ true, %185 ], [ %192, %189 ]
  %195 = xor i1 %194, true
  %196 = zext i1 %195 to i32
  %197 = sext i32 %196 to i64
  %198 = call i64 @llvm.expect.i64(i64 %197, i64 0)
  %199 = icmp ne i64 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %193
  unreachable

201:                                              ; preds = %193
  br label %202

202:                                              ; preds = %201
  br label %203

203:                                              ; preds = %202
  %204 = load i8, i8* %20, align 1
  %205 = icmp ne i8 %204, 0
  br i1 %205, label %206, label %218

206:                                              ; preds = %203
  %207 = load i32, i32* %14, align 4
  %208 = load i32, i32* %13, align 4
  %209 = icmp sgt i32 %207, %208
  %210 = xor i1 %209, true
  %211 = xor i1 %210, true
  %212 = zext i1 %211 to i32
  %213 = sext i32 %212 to i64
  %214 = call i64 @llvm.expect.i64(i64 %213, i64 0)
  %215 = icmp ne i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %206
  br label %305

217:                                              ; preds = %206
  br label %218

218:                                              ; preds = %217, %203
  %219 = load %18*, %18** %15, align 8
  %220 = getelementptr inbounds %18, %18* %219, i32 1
  store %18* %220, %18** %15, align 8
  %221 = load %18*, %18** %15, align 8
  store %18* %221, %18** %16, align 8
  %222 = load %18*, %18** %16, align 8
  %223 = call i32 @147(%18* %222, i64* %8, i8* %19, i32 0, i32 0)
  %224 = icmp ne i32 %223, 0
  %225 = xor i1 %224, true
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = zext i1 %227 to i32
  %229 = sext i32 %228 to i64
  %230 = call i64 @llvm.expect.i64(i64 %229, i64 0)
  %231 = icmp ne i64 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %218
  store i32 0, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %305

233:                                              ; preds = %218
  %234 = load i32, i32* %14, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %14, align 4
  br label %236

236:                                              ; preds = %233
  %237 = load i32, i32* %14, align 4
  %238 = load i32, i32* %11, align 4
  %239 = icmp sle i32 %237, %238
  br i1 %239, label %244, label %240

240:                                              ; preds = %236
  %241 = load i8, i8* %20, align 1
  %242 = zext i8 %241 to i32
  %243 = icmp eq i32 %242, 1
  br label %244

244:                                              ; preds = %240, %236
  %245 = phi i1 [ true, %236 ], [ %243, %240 ]
  %246 = xor i1 %245, true
  %247 = zext i1 %246 to i32
  %248 = sext i32 %247 to i64
  %249 = call i64 @llvm.expect.i64(i64 %248, i64 0)
  %250 = icmp ne i64 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %244
  unreachable

252:                                              ; preds = %244
  br label %253

253:                                              ; preds = %252
  br label %254

254:                                              ; preds = %253
  br label %255

255:                                              ; preds = %254
  %256 = load i32, i32* %14, align 4
  %257 = load i32, i32* %11, align 4
  %258 = icmp sgt i32 %256, %257
  br i1 %258, label %263, label %259

259:                                              ; preds = %255
  %260 = load i8, i8* %20, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i32 %261, 0
  br label %263

263:                                              ; preds = %259, %255
  %264 = phi i1 [ true, %255 ], [ %262, %259 ]
  %265 = xor i1 %264, true
  %266 = zext i1 %265 to i32
  %267 = sext i32 %266 to i64
  %268 = call i64 @llvm.expect.i64(i64 %267, i64 0)
  %269 = icmp ne i64 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %263
  unreachable

271:                                              ; preds = %263
  br label %272

272:                                              ; preds = %271
  br label %273

273:                                              ; preds = %272
  %274 = load i8, i8* %20, align 1
  %275 = icmp ne i8 %274, 0
  br i1 %275, label %276, label %288

276:                                              ; preds = %273
  %277 = load i32, i32* %14, align 4
  %278 = load i32, i32* %13, align 4
  %279 = icmp sgt i32 %277, %278
  %280 = xor i1 %279, true
  %281 = xor i1 %280, true
  %282 = zext i1 %281 to i32
  %283 = sext i32 %282 to i64
  %284 = call i64 @llvm.expect.i64(i64 %283, i64 0)
  %285 = icmp ne i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %276
  br label %305

287:                                              ; preds = %276
  br label %288

288:                                              ; preds = %287, %273
  %289 = load %18*, %18** %15, align 8
  %290 = getelementptr inbounds %18, %18* %289, i32 1
  store %18* %290, %18** %15, align 8
  %291 = load %18*, %18** %15, align 8
  store %18* %291, %18** %16, align 8
  %292 = load %18*, %18** %16, align 8
  %293 = call i32 @151(%18* %292, i8** %6, i64* %7, i32 0)
  %294 = icmp ne i32 %293, 0
  %295 = xor i1 %294, true
  %296 = xor i1 %295, true
  %297 = xor i1 %296, true
  %298 = zext i1 %297 to i32
  %299 = sext i32 %298 to i64
  %300 = call i64 @llvm.expect.i64(i64 %299, i64 0)
  %301 = icmp ne i64 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %288
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %305

303:                                              ; preds = %288
  br label %304

304:                                              ; preds = %303
  br label %305

305:                                              ; preds = %304, %302, %286, %232, %216, %162, %146, %86
  %306 = load i32, i32* %21, align 4
  %307 = icmp ne i32 %306, 0
  %308 = xor i1 %307, true
  %309 = xor i1 %308, true
  %310 = zext i1 %309 to i32
  %311 = sext i32 %310 to i64
  %312 = call i64 @llvm.expect.i64(i64 %311, i64 0)
  %313 = icmp ne i64 %312, 0
  br i1 %313, label %314, label %337

314:                                              ; preds = %305
  %315 = load i32, i32* %21, align 4
  %316 = icmp eq i32 %315, 2
  br i1 %316, label %317, label %320

317:                                              ; preds = %314
  %318 = load i32, i32* %14, align 4
  %319 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %318, i8* %319)
  br label %336

320:                                              ; preds = %314
  %321 = load i32, i32* %21, align 4
  %322 = icmp eq i32 %321, 3
  br i1 %322, label %323, label %327

323:                                              ; preds = %320
  %324 = load i32, i32* %14, align 4
  %325 = load i8*, i8** %18, align 8
  %326 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %324, i8* %325, %18* %326)
  br label %335

327:                                              ; preds = %320
  %328 = load i32, i32* %21, align 4
  %329 = icmp eq i32 %328, 4
  br i1 %329, label %330, label %334

330:                                              ; preds = %327
  %331 = load i32, i32* %14, align 4
  %332 = load i32, i32* %17, align 4
  %333 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %331, i32 %332, %18* %333)
  br label %334

334:                                              ; preds = %330, %327
  br label %335

335:                                              ; preds = %334, %323
  br label %336

336:                                              ; preds = %335, %317
  store i32 1, i32* %22, align 4
  br label %338

337:                                              ; preds = %305
  store i32 0, i32* %22, align 4
  br label %338

338:                                              ; preds = %337, %336
  %339 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %339) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  %340 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %340) #13
  %341 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %341) #13
  %342 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %342) #13
  %343 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %343) #13
  %344 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #13
  %345 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #13
  %346 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %346) #13
  %347 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %347) #13
  %348 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %348) #13
  %349 = load i32, i32* %22, align 4
  switch i32 %349, label %487 [
    i32 0, label %350
  ]

350:                                              ; preds = %338
  br label %351

351:                                              ; preds = %350
  br label %352

352:                                              ; preds = %351
  %353 = load i64, i64* %8, align 8
  %354 = icmp sle i64 %353, 0
  br i1 %354, label %355, label %362

355:                                              ; preds = %352
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @88, i32 0, i32 0))
  br label %356

356:                                              ; preds = %355
  %357 = load %18*, %18** %4, align 8
  %358 = getelementptr inbounds %18, %18* %357, i32 0, i32 1
  %359 = bitcast %20* %358 to i32*
  store i32 2, i32* %359, align 8
  br label %360

360:                                              ; preds = %356
  br label %361

361:                                              ; preds = %360
  store i32 1, i32* %22, align 4
  br label %487

362:                                              ; preds = %352
  %363 = load i64, i64* %8, align 8
  %364 = load %0*, %0** %5, align 8
  %365 = getelementptr inbounds %0, %0* %364, i32 0, i32 2
  %366 = load i64, i64* %365, align 8
  %367 = icmp ugt i64 %363, %366
  br i1 %367, label %368, label %414

368:                                              ; preds = %362
  %369 = load %0*, %0** %5, align 8
  %370 = getelementptr inbounds %0, %0* %369, i32 0, i32 2
  %371 = load i64, i64* %370, align 8
  %372 = load i64, i64* %7, align 8
  %373 = call %0* @153(i64 %371, i64 1, i64 %372, i32 0)
  store %0* %373, %0** %9, align 8
  %374 = load %0*, %0** %9, align 8
  %375 = getelementptr inbounds %0, %0* %374, i32 0, i32 3
  %376 = getelementptr inbounds [1 x i8], [1 x i8]* %375, i32 0, i32 0
  %377 = load %0*, %0** %5, align 8
  %378 = getelementptr inbounds %0, %0* %377, i32 0, i32 3
  %379 = getelementptr inbounds [1 x i8], [1 x i8]* %378, i32 0, i32 0
  %380 = load %0*, %0** %5, align 8
  %381 = getelementptr inbounds %0, %0* %380, i32 0, i32 2
  %382 = load i64, i64* %381, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %376, i8* align 8 %379, i64 %382, i1 false)
  %383 = load %0*, %0** %9, align 8
  %384 = getelementptr inbounds %0, %0* %383, i32 0, i32 3
  %385 = getelementptr inbounds [1 x i8], [1 x i8]* %384, i32 0, i32 0
  %386 = load %0*, %0** %5, align 8
  %387 = getelementptr inbounds %0, %0* %386, i32 0, i32 2
  %388 = load i64, i64* %387, align 8
  %389 = getelementptr inbounds i8, i8* %385, i64 %388
  %390 = load i8*, i8** %6, align 8
  %391 = load i64, i64* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %389, i8* align 1 %390, i64 %391, i1 false)
  %392 = load %0*, %0** %9, align 8
  %393 = getelementptr inbounds %0, %0* %392, i32 0, i32 3
  %394 = load %0*, %0** %9, align 8
  %395 = getelementptr inbounds %0, %0* %394, i32 0, i32 2
  %396 = load i64, i64* %395, align 8
  %397 = getelementptr inbounds [1 x i8], [1 x i8]* %393, i64 0, i64 %396
  store i8 0, i8* %397, align 1
  br label %398

398:                                              ; preds = %368
  %399 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %399) #13
  %400 = load %18*, %18** %4, align 8
  store %18* %400, %18** %23, align 8
  %401 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %401) #13
  %402 = load %0*, %0** %9, align 8
  store %0* %402, %0** %24, align 8
  %403 = load %0*, %0** %24, align 8
  %404 = load %18*, %18** %23, align 8
  %405 = getelementptr inbounds %18, %18* %404, i32 0, i32 0
  %406 = bitcast %19* %405 to %0**
  store %0* %403, %0** %406, align 8
  %407 = load %18*, %18** %23, align 8
  %408 = getelementptr inbounds %18, %18* %407, i32 0, i32 1
  %409 = bitcast %20* %408 to i32*
  store i32 5126, i32* %409, align 8
  %410 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %410) #13
  %411 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %411) #13
  br label %412

412:                                              ; preds = %398
  br label %413

413:                                              ; preds = %412
  store i32 1, i32* %22, align 4
  br label %487

414:                                              ; preds = %362
  %415 = load %0*, %0** %5, align 8
  %416 = getelementptr inbounds %0, %0* %415, i32 0, i32 2
  %417 = load i64, i64* %416, align 8
  %418 = icmp ne i64 %417, 0
  br i1 %418, label %439, label %419

419:                                              ; preds = %414
  br label %420

420:                                              ; preds = %419
  br label %421

421:                                              ; preds = %420
  %422 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %422) #13
  %423 = load %18*, %18** %4, align 8
  store %18* %423, %18** %25, align 8
  %424 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %424) #13
  %425 = load %0*, %0** @zend_empty_string, align 8
  store %0* %425, %0** %26, align 8
  %426 = load %0*, %0** %26, align 8
  %427 = load %18*, %18** %25, align 8
  %428 = getelementptr inbounds %18, %18* %427, i32 0, i32 0
  %429 = bitcast %19* %428 to %0**
  store %0* %426, %0** %429, align 8
  %430 = load %18*, %18** %25, align 8
  %431 = getelementptr inbounds %18, %18* %430, i32 0, i32 1
  %432 = bitcast %20* %431 to i32*
  store i32 6, i32* %432, align 8
  %433 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %433) #13
  %434 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %434) #13
  br label %435

435:                                              ; preds = %421
  br label %436

436:                                              ; preds = %435
  br label %437

437:                                              ; preds = %436
  br label %438

438:                                              ; preds = %437
  store i32 1, i32* %22, align 4
  br label %487

439:                                              ; preds = %414
  %440 = load %0*, %0** %5, align 8
  %441 = getelementptr inbounds %0, %0* %440, i32 0, i32 3
  %442 = getelementptr inbounds [1 x i8], [1 x i8]* %441, i32 0, i32 0
  %443 = load %0*, %0** %5, align 8
  %444 = getelementptr inbounds %0, %0* %443, i32 0, i32 2
  %445 = load i64, i64* %444, align 8
  %446 = load i8*, i8** %6, align 8
  %447 = load i64, i64* %7, align 8
  %448 = load i64, i64* %8, align 8
  %449 = call %0* @169(i8* %442, i64 %445, i8* %446, i64 %447, i64 %448)
  store %0* %449, %0** %9, align 8
  %450 = load %0*, %0** %9, align 8
  %451 = icmp ne %0* %450, null
  br i1 %451, label %452, label %480

452:                                              ; preds = %439
  br label %453

453:                                              ; preds = %452
  %454 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %454) #13
  %455 = load %18*, %18** %4, align 8
  store %18* %455, %18** %27, align 8
  %456 = bitcast %0** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %456) #13
  %457 = load %0*, %0** %9, align 8
  store %0* %457, %0** %28, align 8
  %458 = load %0*, %0** %28, align 8
  %459 = load %18*, %18** %27, align 8
  %460 = getelementptr inbounds %18, %18* %459, i32 0, i32 0
  %461 = bitcast %19* %460 to %0**
  store %0* %458, %0** %461, align 8
  %462 = load %0*, %0** %28, align 8
  %463 = getelementptr inbounds %0, %0* %462, i32 0, i32 0
  %464 = getelementptr inbounds %1, %1* %463, i32 0, i32 1
  %465 = bitcast %2* %464 to %52*
  %466 = getelementptr inbounds %52, %52* %465, i32 0, i32 1
  %467 = load i8, i8* %466, align 1
  %468 = zext i8 %467 to i32
  %469 = and i32 %468, 2
  %470 = icmp ne i32 %469, 0
  %471 = zext i1 %470 to i64
  %472 = select i1 %470, i32 6, i32 5126
  %473 = load %18*, %18** %27, align 8
  %474 = getelementptr inbounds %18, %18* %473, i32 0, i32 1
  %475 = bitcast %20* %474 to i32*
  store i32 %472, i32* %475, align 8
  %476 = bitcast %0** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %476) #13
  %477 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %477) #13
  br label %478

478:                                              ; preds = %453
  br label %479

479:                                              ; preds = %478
  store i32 1, i32* %22, align 4
  br label %487

480:                                              ; preds = %439
  br label %481

481:                                              ; preds = %480
  %482 = load %18*, %18** %4, align 8
  %483 = getelementptr inbounds %18, %18* %482, i32 0, i32 1
  %484 = bitcast %20* %483 to i32*
  store i32 2, i32* %484, align 8
  br label %485

485:                                              ; preds = %481
  br label %486

486:                                              ; preds = %485
  store i32 1, i32* %22, align 4
  br label %487

487:                                              ; preds = %486, %479, %438, %413, %361, %338
  %488 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %488) #13
  %489 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %489) #13
  %490 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %490) #13
  %491 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %491) #13
  %492 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %492) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal %0* @169(i8* %0, i64 %1, i8* %2, i64 %3, i64 %4) #0 {
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %0*, align 8
  %18 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  store i64 %3, i64* %10, align 8
  store i64 %4, i64* %11, align 8
  %19 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = bitcast %0** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = load i64, i64* %8, align 8
  %26 = load i64, i64* %11, align 8
  %27 = udiv i64 %25, %26
  store i64 %27, i64* %14, align 8
  %28 = load i64, i64* %8, align 8
  %29 = load i64, i64* %14, align 8
  %30 = load i64, i64* %11, align 8
  %31 = mul i64 %29, %30
  %32 = sub i64 %28, %31
  store i64 %32, i64* %15, align 8
  %33 = load i64, i64* %14, align 8
  %34 = icmp ugt i64 %33, 2147483646
  br i1 %34, label %35, label %36

35:                                               ; preds = %5
  store %0* null, %0** %6, align 8
  store i32 1, i32* %18, align 4
  br label %123

36:                                               ; preds = %5
  %37 = load i64, i64* %14, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %16, align 8
  %39 = load i64, i64* %10, align 8
  %40 = icmp ne i64 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %36
  %42 = load i64, i64* %16, align 8
  %43 = load i64, i64* %10, align 8
  %44 = udiv i64 2147483647, %43
  %45 = icmp ugt i64 %42, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  store %0* null, %0** %6, align 8
  store i32 1, i32* %18, align 4
  br label %123

47:                                               ; preds = %41, %36
  %48 = load i64, i64* %10, align 8
  %49 = load i64, i64* %16, align 8
  %50 = mul i64 %49, %48
  store i64 %50, i64* %16, align 8
  %51 = load i64, i64* %16, align 8
  %52 = load i64, i64* %8, align 8
  %53 = sub i64 2147483647, %52
  %54 = sub i64 %53, 1
  %55 = icmp ugt i64 %51, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %47
  store %0* null, %0** %6, align 8
  store i32 1, i32* %18, align 4
  br label %123

57:                                               ; preds = %47
  %58 = load i64, i64* %8, align 8
  %59 = add i64 %58, 1
  %60 = load i64, i64* %16, align 8
  %61 = add i64 %60, %59
  store i64 %61, i64* %16, align 8
  %62 = load i64, i64* %16, align 8
  %63 = mul i64 %62, 1
  %64 = call %0* @162(i64 %63, i32 0)
  store %0* %64, %0** %17, align 8
  %65 = load i8*, i8** %7, align 8
  store i8* %65, i8** %12, align 8
  %66 = load %0*, %0** %17, align 8
  %67 = getelementptr inbounds %0, %0* %66, i32 0, i32 3
  %68 = getelementptr inbounds [1 x i8], [1 x i8]* %67, i32 0, i32 0
  store i8* %68, i8** %13, align 8
  br label %69

69:                                               ; preds = %79, %57
  %70 = load i8*, i8** %12, align 8
  %71 = load i8*, i8** %7, align 8
  %72 = load i64, i64* %8, align 8
  %73 = getelementptr inbounds i8, i8* %71, i64 %72
  %74 = load i64, i64* %11, align 8
  %75 = sub i64 0, %74
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  %77 = getelementptr inbounds i8, i8* %76, i64 1
  %78 = icmp ult i8* %70, %77
  br i1 %78, label %79, label %95

79:                                               ; preds = %69
  %80 = load i8*, i8** %13, align 8
  %81 = load i8*, i8** %12, align 8
  %82 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %81, i64 %82, i1 false)
  %83 = load i64, i64* %11, align 8
  %84 = load i8*, i8** %13, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  store i8* %85, i8** %13, align 8
  %86 = load i8*, i8** %13, align 8
  %87 = load i8*, i8** %9, align 8
  %88 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %87, i64 %88, i1 false)
  %89 = load i64, i64* %10, align 8
  %90 = load i8*, i8** %13, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 %89
  store i8* %91, i8** %13, align 8
  %92 = load i64, i64* %11, align 8
  %93 = load i8*, i8** %12, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %92
  store i8* %94, i8** %12, align 8
  br label %69

95:                                               ; preds = %69
  %96 = load i64, i64* %15, align 8
  %97 = icmp ne i64 %96, 0
  br i1 %97, label %98, label %111

98:                                               ; preds = %95
  %99 = load i8*, i8** %13, align 8
  %100 = load i8*, i8** %12, align 8
  %101 = load i64, i64* %15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %100, i64 %101, i1 false)
  %102 = load i64, i64* %15, align 8
  %103 = load i8*, i8** %13, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 %102
  store i8* %104, i8** %13, align 8
  %105 = load i8*, i8** %13, align 8
  %106 = load i8*, i8** %9, align 8
  %107 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %105, i8* align 1 %106, i64 %107, i1 false)
  %108 = load i64, i64* %10, align 8
  %109 = load i8*, i8** %13, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 %108
  store i8* %110, i8** %13, align 8
  br label %111

111:                                              ; preds = %98, %95
  %112 = load i8*, i8** %13, align 8
  store i8 0, i8* %112, align 1
  %113 = load i8*, i8** %13, align 8
  %114 = load %0*, %0** %17, align 8
  %115 = getelementptr inbounds %0, %0* %114, i32 0, i32 3
  %116 = getelementptr inbounds [1 x i8], [1 x i8]* %115, i32 0, i32 0
  %117 = ptrtoint i8* %113 to i64
  %118 = ptrtoint i8* %116 to i64
  %119 = sub i64 %117, %118
  %120 = load %0*, %0** %17, align 8
  %121 = getelementptr inbounds %0, %0* %120, i32 0, i32 2
  store i64 %119, i64* %121, align 8
  %122 = load %0*, %0** %17, align 8
  store %0* %122, %0** %6, align 8
  store i32 1, i32* %18, align 4
  br label %123

123:                                              ; preds = %111, %56, %46, %35
  %124 = bitcast %0** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #13
  %125 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #13
  %126 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #13
  %127 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #13
  %128 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #13
  %129 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %129) #13
  %130 = load %0*, %0** %6, align 8
  ret %0* %130
}

; Function Attrs: nounwind uwtable
define hidden void @zif_substr(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  %24 = alloca %18*, align 8
  %25 = alloca %0*, align 8
  %26 = alloca %18*, align 8
  %27 = alloca %0*, align 8
  %28 = alloca %18*, align 8
  %29 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %30 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  store i64 0, i64* %6, align 8
  %32 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  %34 = load %14*, %14** %3, align 8
  %35 = getelementptr inbounds %14, %14* %34, i32 0, i32 4
  %36 = getelementptr inbounds %18, %18* %35, i32 0, i32 2
  %37 = bitcast %21* %36 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %8, align 4
  br label %39

39:                                               ; preds = %2
  %40 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  store i32 0, i32* %9, align 4
  %41 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 2, i32* %10, align 4
  %42 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #13
  store i32 3, i32* %11, align 4
  %43 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  %44 = load %14*, %14** %3, align 8
  %45 = getelementptr inbounds %14, %14* %44, i32 0, i32 4
  %46 = getelementptr inbounds %18, %18* %45, i32 0, i32 2
  %47 = bitcast %21* %46 to i32*
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %12, align 4
  %49 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  %50 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  %51 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  store %18* null, %18** %15, align 8
  %52 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #13
  store i32 0, i32* %16, align 4
  %53 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %54 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #13
  store i32 0, i32* %20, align 4
  %55 = load i32, i32* %13, align 4
  %56 = load %18*, %18** %14, align 8
  %57 = load %18*, %18** %15, align 8
  %58 = load i32, i32* %16, align 4
  %59 = load i8*, i8** %17, align 8
  %60 = load i8, i8* %18, align 1
  %61 = load i8, i8* %19, align 1
  br label %62

62:                                               ; preds = %39
  %63 = load i32, i32* %12, align 4
  %64 = load i32, i32* %10, align 4
  %65 = icmp slt i32 %63, %64
  %66 = xor i1 %65, true
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0)
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %91, label %72

72:                                               ; preds = %62
  %73 = load i32, i32* %12, align 4
  %74 = load i32, i32* %11, align 4
  %75 = icmp sgt i32 %73, %74
  %76 = xor i1 %75, true
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = call i64 @llvm.expect.i64(i64 %79, i64 0)
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %82, label %95

82:                                               ; preds = %72
  %83 = load i32, i32* %11, align 4
  %84 = icmp sge i32 %83, 0
  %85 = xor i1 %84, true
  %86 = xor i1 %85, true
  %87 = zext i1 %86 to i32
  %88 = sext i32 %87 to i64
  %89 = call i64 @llvm.expect.i64(i64 %88, i64 1)
  %90 = icmp ne i64 %89, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %82, %62
  %92 = load i32, i32* %12, align 4
  %93 = load i32, i32* %10, align 4
  %94 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %92, i32 %93, i32 %94)
  store i32 1, i32* %20, align 4
  br label %310

95:                                               ; preds = %82, %72
  store i32 0, i32* %13, align 4
  %96 = load %14*, %14** %3, align 8
  %97 = bitcast %14* %96 to %18*
  %98 = getelementptr inbounds %18, %18* %97, i64 4
  store %18* %98, %18** %14, align 8
  %99 = load i32, i32* %13, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %13, align 4
  br label %101

101:                                              ; preds = %95
  %102 = load i32, i32* %13, align 4
  %103 = load i32, i32* %10, align 4
  %104 = icmp sle i32 %102, %103
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = load i8, i8* %19, align 1
  %107 = zext i8 %106 to i32
  %108 = icmp eq i32 %107, 1
  br label %109

109:                                              ; preds = %105, %101
  %110 = phi i1 [ true, %101 ], [ %108, %105 ]
  %111 = xor i1 %110, true
  %112 = zext i1 %111 to i32
  %113 = sext i32 %112 to i64
  %114 = call i64 @llvm.expect.i64(i64 %113, i64 0)
  %115 = icmp ne i64 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %109
  unreachable

117:                                              ; preds = %109
  br label %118

118:                                              ; preds = %117
  br label %119

119:                                              ; preds = %118
  br label %120

120:                                              ; preds = %119
  %121 = load i32, i32* %13, align 4
  %122 = load i32, i32* %10, align 4
  %123 = icmp sgt i32 %121, %122
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = load i8, i8* %19, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp eq i32 %126, 0
  br label %128

128:                                              ; preds = %124, %120
  %129 = phi i1 [ true, %120 ], [ %127, %124 ]
  %130 = xor i1 %129, true
  %131 = zext i1 %130 to i32
  %132 = sext i32 %131 to i64
  %133 = call i64 @llvm.expect.i64(i64 %132, i64 0)
  %134 = icmp ne i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %128
  unreachable

136:                                              ; preds = %128
  br label %137

137:                                              ; preds = %136
  br label %138

138:                                              ; preds = %137
  %139 = load i8, i8* %19, align 1
  %140 = icmp ne i8 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %138
  %142 = load i32, i32* %13, align 4
  %143 = load i32, i32* %12, align 4
  %144 = icmp sgt i32 %142, %143
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = zext i1 %146 to i32
  %148 = sext i32 %147 to i64
  %149 = call i64 @llvm.expect.i64(i64 %148, i64 0)
  %150 = icmp ne i64 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %141
  br label %310

152:                                              ; preds = %141
  br label %153

153:                                              ; preds = %152, %138
  %154 = load %18*, %18** %14, align 8
  %155 = getelementptr inbounds %18, %18* %154, i32 1
  store %18* %155, %18** %14, align 8
  %156 = load %18*, %18** %14, align 8
  store %18* %156, %18** %15, align 8
  %157 = load %18*, %18** %15, align 8
  %158 = call i32 @143(%18* %157, %0** %5, i32 0)
  %159 = icmp ne i32 %158, 0
  %160 = xor i1 %159, true
  %161 = xor i1 %160, true
  %162 = xor i1 %161, true
  %163 = zext i1 %162 to i32
  %164 = sext i32 %163 to i64
  %165 = call i64 @llvm.expect.i64(i64 %164, i64 0)
  %166 = icmp ne i64 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %153
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %310

168:                                              ; preds = %153
  %169 = load i32, i32* %13, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %13, align 4
  br label %171

171:                                              ; preds = %168
  %172 = load i32, i32* %13, align 4
  %173 = load i32, i32* %10, align 4
  %174 = icmp sle i32 %172, %173
  br i1 %174, label %179, label %175

175:                                              ; preds = %171
  %176 = load i8, i8* %19, align 1
  %177 = zext i8 %176 to i32
  %178 = icmp eq i32 %177, 1
  br label %179

179:                                              ; preds = %175, %171
  %180 = phi i1 [ true, %171 ], [ %178, %175 ]
  %181 = xor i1 %180, true
  %182 = zext i1 %181 to i32
  %183 = sext i32 %182 to i64
  %184 = call i64 @llvm.expect.i64(i64 %183, i64 0)
  %185 = icmp ne i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %179
  unreachable

187:                                              ; preds = %179
  br label %188

188:                                              ; preds = %187
  br label %189

189:                                              ; preds = %188
  br label %190

190:                                              ; preds = %189
  %191 = load i32, i32* %13, align 4
  %192 = load i32, i32* %10, align 4
  %193 = icmp sgt i32 %191, %192
  br i1 %193, label %198, label %194

194:                                              ; preds = %190
  %195 = load i8, i8* %19, align 1
  %196 = zext i8 %195 to i32
  %197 = icmp eq i32 %196, 0
  br label %198

198:                                              ; preds = %194, %190
  %199 = phi i1 [ true, %190 ], [ %197, %194 ]
  %200 = xor i1 %199, true
  %201 = zext i1 %200 to i32
  %202 = sext i32 %201 to i64
  %203 = call i64 @llvm.expect.i64(i64 %202, i64 0)
  %204 = icmp ne i64 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %198
  unreachable

206:                                              ; preds = %198
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  %209 = load i8, i8* %19, align 1
  %210 = icmp ne i8 %209, 0
  br i1 %210, label %211, label %223

211:                                              ; preds = %208
  %212 = load i32, i32* %13, align 4
  %213 = load i32, i32* %12, align 4
  %214 = icmp sgt i32 %212, %213
  %215 = xor i1 %214, true
  %216 = xor i1 %215, true
  %217 = zext i1 %216 to i32
  %218 = sext i32 %217 to i64
  %219 = call i64 @llvm.expect.i64(i64 %218, i64 0)
  %220 = icmp ne i64 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %211
  br label %310

222:                                              ; preds = %211
  br label %223

223:                                              ; preds = %222, %208
  %224 = load %18*, %18** %14, align 8
  %225 = getelementptr inbounds %18, %18* %224, i32 1
  store %18* %225, %18** %14, align 8
  %226 = load %18*, %18** %14, align 8
  store %18* %226, %18** %15, align 8
  %227 = load %18*, %18** %15, align 8
  %228 = call i32 @147(%18* %227, i64* %7, i8* %18, i32 0, i32 0)
  %229 = icmp ne i32 %228, 0
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = xor i1 %231, true
  %233 = zext i1 %232 to i32
  %234 = sext i32 %233 to i64
  %235 = call i64 @llvm.expect.i64(i64 %234, i64 0)
  %236 = icmp ne i64 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %223
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %310

238:                                              ; preds = %223
  store i8 1, i8* %19, align 1
  %239 = load i32, i32* %13, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %13, align 4
  br label %241

241:                                              ; preds = %238
  %242 = load i32, i32* %13, align 4
  %243 = load i32, i32* %10, align 4
  %244 = icmp sle i32 %242, %243
  br i1 %244, label %249, label %245

245:                                              ; preds = %241
  %246 = load i8, i8* %19, align 1
  %247 = zext i8 %246 to i32
  %248 = icmp eq i32 %247, 1
  br label %249

249:                                              ; preds = %245, %241
  %250 = phi i1 [ true, %241 ], [ %248, %245 ]
  %251 = xor i1 %250, true
  %252 = zext i1 %251 to i32
  %253 = sext i32 %252 to i64
  %254 = call i64 @llvm.expect.i64(i64 %253, i64 0)
  %255 = icmp ne i64 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %249
  unreachable

257:                                              ; preds = %249
  br label %258

258:                                              ; preds = %257
  br label %259

259:                                              ; preds = %258
  br label %260

260:                                              ; preds = %259
  %261 = load i32, i32* %13, align 4
  %262 = load i32, i32* %10, align 4
  %263 = icmp sgt i32 %261, %262
  br i1 %263, label %268, label %264

264:                                              ; preds = %260
  %265 = load i8, i8* %19, align 1
  %266 = zext i8 %265 to i32
  %267 = icmp eq i32 %266, 0
  br label %268

268:                                              ; preds = %264, %260
  %269 = phi i1 [ true, %260 ], [ %267, %264 ]
  %270 = xor i1 %269, true
  %271 = zext i1 %270 to i32
  %272 = sext i32 %271 to i64
  %273 = call i64 @llvm.expect.i64(i64 %272, i64 0)
  %274 = icmp ne i64 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %268
  unreachable

276:                                              ; preds = %268
  br label %277

277:                                              ; preds = %276
  br label %278

278:                                              ; preds = %277
  %279 = load i8, i8* %19, align 1
  %280 = icmp ne i8 %279, 0
  br i1 %280, label %281, label %293

281:                                              ; preds = %278
  %282 = load i32, i32* %13, align 4
  %283 = load i32, i32* %12, align 4
  %284 = icmp sgt i32 %282, %283
  %285 = xor i1 %284, true
  %286 = xor i1 %285, true
  %287 = zext i1 %286 to i32
  %288 = sext i32 %287 to i64
  %289 = call i64 @llvm.expect.i64(i64 %288, i64 0)
  %290 = icmp ne i64 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %281
  br label %310

292:                                              ; preds = %281
  br label %293

293:                                              ; preds = %292, %278
  %294 = load %18*, %18** %14, align 8
  %295 = getelementptr inbounds %18, %18* %294, i32 1
  store %18* %295, %18** %14, align 8
  %296 = load %18*, %18** %14, align 8
  store %18* %296, %18** %15, align 8
  %297 = load %18*, %18** %15, align 8
  %298 = call i32 @147(%18* %297, i64* %6, i8* %18, i32 0, i32 0)
  %299 = icmp ne i32 %298, 0
  %300 = xor i1 %299, true
  %301 = xor i1 %300, true
  %302 = xor i1 %301, true
  %303 = zext i1 %302 to i32
  %304 = sext i32 %303 to i64
  %305 = call i64 @llvm.expect.i64(i64 %304, i64 0)
  %306 = icmp ne i64 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %293
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %310

308:                                              ; preds = %293
  br label %309

309:                                              ; preds = %308
  br label %310

310:                                              ; preds = %309, %307, %291, %237, %221, %167, %151, %91
  %311 = load i32, i32* %20, align 4
  %312 = icmp ne i32 %311, 0
  %313 = xor i1 %312, true
  %314 = xor i1 %313, true
  %315 = zext i1 %314 to i32
  %316 = sext i32 %315 to i64
  %317 = call i64 @llvm.expect.i64(i64 %316, i64 0)
  %318 = icmp ne i64 %317, 0
  br i1 %318, label %319, label %342

319:                                              ; preds = %310
  %320 = load i32, i32* %20, align 4
  %321 = icmp eq i32 %320, 2
  br i1 %321, label %322, label %325

322:                                              ; preds = %319
  %323 = load i32, i32* %13, align 4
  %324 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %323, i8* %324)
  br label %341

325:                                              ; preds = %319
  %326 = load i32, i32* %20, align 4
  %327 = icmp eq i32 %326, 3
  br i1 %327, label %328, label %332

328:                                              ; preds = %325
  %329 = load i32, i32* %13, align 4
  %330 = load i8*, i8** %17, align 8
  %331 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %329, i8* %330, %18* %331)
  br label %340

332:                                              ; preds = %325
  %333 = load i32, i32* %20, align 4
  %334 = icmp eq i32 %333, 4
  br i1 %334, label %335, label %339

335:                                              ; preds = %332
  %336 = load i32, i32* %13, align 4
  %337 = load i32, i32* %16, align 4
  %338 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %336, i32 %337, %18* %338)
  br label %339

339:                                              ; preds = %335, %332
  br label %340

340:                                              ; preds = %339, %328
  br label %341

341:                                              ; preds = %340, %322
  store i32 1, i32* %21, align 4
  br label %343

342:                                              ; preds = %310
  store i32 0, i32* %21, align 4
  br label %343

343:                                              ; preds = %342, %341
  %344 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %345 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %345) #13
  %346 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %346) #13
  %347 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %347) #13
  %348 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %348) #13
  %349 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %349) #13
  %350 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %350) #13
  %351 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #13
  %352 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #13
  %353 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %353) #13
  %354 = load i32, i32* %21, align 4
  switch i32 %354, label %613 [
    i32 0, label %355
  ]

355:                                              ; preds = %343
  br label %356

356:                                              ; preds = %355
  br label %357

357:                                              ; preds = %356
  %358 = load i32, i32* %8, align 4
  %359 = icmp sgt i32 %358, 2
  br i1 %359, label %360, label %389

360:                                              ; preds = %357
  %361 = load i64, i64* %6, align 8
  %362 = icmp slt i64 %361, 0
  br i1 %362, label %363, label %377

363:                                              ; preds = %360
  %364 = load i64, i64* %6, align 8
  %365 = sub nsw i64 0, %364
  %366 = load %0*, %0** %5, align 8
  %367 = getelementptr inbounds %0, %0* %366, i32 0, i32 2
  %368 = load i64, i64* %367, align 8
  %369 = icmp ugt i64 %365, %368
  br i1 %369, label %370, label %377

370:                                              ; preds = %363
  br label %371

371:                                              ; preds = %370
  %372 = load %18*, %18** %4, align 8
  %373 = getelementptr inbounds %18, %18* %372, i32 0, i32 1
  %374 = bitcast %20* %373 to i32*
  store i32 2, i32* %374, align 8
  br label %375

375:                                              ; preds = %371
  br label %376

376:                                              ; preds = %375
  store i32 1, i32* %21, align 4
  br label %613

377:                                              ; preds = %363, %360
  %378 = load i64, i64* %6, align 8
  %379 = load %0*, %0** %5, align 8
  %380 = getelementptr inbounds %0, %0* %379, i32 0, i32 2
  %381 = load i64, i64* %380, align 8
  %382 = icmp sgt i64 %378, %381
  br i1 %382, label %383, label %387

383:                                              ; preds = %377
  %384 = load %0*, %0** %5, align 8
  %385 = getelementptr inbounds %0, %0* %384, i32 0, i32 2
  %386 = load i64, i64* %385, align 8
  store i64 %386, i64* %6, align 8
  br label %387

387:                                              ; preds = %383, %377
  br label %388

388:                                              ; preds = %387
  br label %393

389:                                              ; preds = %357
  %390 = load %0*, %0** %5, align 8
  %391 = getelementptr inbounds %0, %0* %390, i32 0, i32 2
  %392 = load i64, i64* %391, align 8
  store i64 %392, i64* %6, align 8
  br label %393

393:                                              ; preds = %389, %388
  %394 = load i64, i64* %7, align 8
  %395 = load %0*, %0** %5, align 8
  %396 = getelementptr inbounds %0, %0* %395, i32 0, i32 2
  %397 = load i64, i64* %396, align 8
  %398 = icmp sgt i64 %394, %397
  br i1 %398, label %399, label %406

399:                                              ; preds = %393
  br label %400

400:                                              ; preds = %399
  %401 = load %18*, %18** %4, align 8
  %402 = getelementptr inbounds %18, %18* %401, i32 0, i32 1
  %403 = bitcast %20* %402 to i32*
  store i32 2, i32* %403, align 8
  br label %404

404:                                              ; preds = %400
  br label %405

405:                                              ; preds = %404
  store i32 1, i32* %21, align 4
  br label %613

406:                                              ; preds = %393
  %407 = load i64, i64* %7, align 8
  %408 = icmp slt i64 %407, 0
  br i1 %408, label %409, label %417

409:                                              ; preds = %406
  %410 = load i64, i64* %7, align 8
  %411 = sub nsw i64 0, %410
  %412 = load %0*, %0** %5, align 8
  %413 = getelementptr inbounds %0, %0* %412, i32 0, i32 2
  %414 = load i64, i64* %413, align 8
  %415 = icmp ugt i64 %411, %414
  br i1 %415, label %416, label %417

416:                                              ; preds = %409
  store i64 0, i64* %7, align 8
  br label %417

417:                                              ; preds = %416, %409, %406
  br label %418

418:                                              ; preds = %417
  %419 = load i64, i64* %6, align 8
  %420 = icmp slt i64 %419, 0
  br i1 %420, label %421, label %437

421:                                              ; preds = %418
  %422 = load i64, i64* %6, align 8
  %423 = load %0*, %0** %5, align 8
  %424 = getelementptr inbounds %0, %0* %423, i32 0, i32 2
  %425 = load i64, i64* %424, align 8
  %426 = add nsw i64 %422, %425
  %427 = load i64, i64* %7, align 8
  %428 = sub nsw i64 %426, %427
  %429 = icmp slt i64 %428, 0
  br i1 %429, label %430, label %437

430:                                              ; preds = %421
  br label %431

431:                                              ; preds = %430
  %432 = load %18*, %18** %4, align 8
  %433 = getelementptr inbounds %18, %18* %432, i32 0, i32 1
  %434 = bitcast %20* %433 to i32*
  store i32 2, i32* %434, align 8
  br label %435

435:                                              ; preds = %431
  br label %436

436:                                              ; preds = %435
  store i32 1, i32* %21, align 4
  br label %613

437:                                              ; preds = %421, %418
  %438 = load i64, i64* %7, align 8
  %439 = icmp slt i64 %438, 0
  br i1 %439, label %440, label %450

440:                                              ; preds = %437
  %441 = load %0*, %0** %5, align 8
  %442 = getelementptr inbounds %0, %0* %441, i32 0, i32 2
  %443 = load i64, i64* %442, align 8
  %444 = load i64, i64* %7, align 8
  %445 = add nsw i64 %443, %444
  store i64 %445, i64* %7, align 8
  %446 = load i64, i64* %7, align 8
  %447 = icmp slt i64 %446, 0
  br i1 %447, label %448, label %449

448:                                              ; preds = %440
  store i64 0, i64* %7, align 8
  br label %449

449:                                              ; preds = %448, %440
  br label %450

450:                                              ; preds = %449, %437
  %451 = load i64, i64* %6, align 8
  %452 = icmp slt i64 %451, 0
  br i1 %452, label %453, label %465

453:                                              ; preds = %450
  %454 = load %0*, %0** %5, align 8
  %455 = getelementptr inbounds %0, %0* %454, i32 0, i32 2
  %456 = load i64, i64* %455, align 8
  %457 = load i64, i64* %7, align 8
  %458 = sub nsw i64 %456, %457
  %459 = load i64, i64* %6, align 8
  %460 = add nsw i64 %458, %459
  store i64 %460, i64* %6, align 8
  %461 = load i64, i64* %6, align 8
  %462 = icmp slt i64 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %453
  store i64 0, i64* %6, align 8
  br label %464

464:                                              ; preds = %463, %453
  br label %465

465:                                              ; preds = %464, %450
  %466 = load i64, i64* %7, align 8
  %467 = load %0*, %0** %5, align 8
  %468 = getelementptr inbounds %0, %0* %467, i32 0, i32 2
  %469 = load i64, i64* %468, align 8
  %470 = icmp sgt i64 %466, %469
  br i1 %470, label %471, label %478

471:                                              ; preds = %465
  br label %472

472:                                              ; preds = %471
  %473 = load %18*, %18** %4, align 8
  %474 = getelementptr inbounds %18, %18* %473, i32 0, i32 1
  %475 = bitcast %20* %474 to i32*
  store i32 2, i32* %475, align 8
  br label %476

476:                                              ; preds = %472
  br label %477

477:                                              ; preds = %476
  store i32 1, i32* %21, align 4
  br label %613

478:                                              ; preds = %465
  %479 = load i64, i64* %6, align 8
  %480 = load %0*, %0** %5, align 8
  %481 = getelementptr inbounds %0, %0* %480, i32 0, i32 2
  %482 = load i64, i64* %481, align 8
  %483 = load i64, i64* %7, align 8
  %484 = sub i64 %482, %483
  %485 = icmp ugt i64 %479, %484
  br i1 %485, label %486, label %492

486:                                              ; preds = %478
  %487 = load %0*, %0** %5, align 8
  %488 = getelementptr inbounds %0, %0* %487, i32 0, i32 2
  %489 = load i64, i64* %488, align 8
  %490 = load i64, i64* %7, align 8
  %491 = sub i64 %489, %490
  store i64 %491, i64* %6, align 8
  br label %492

492:                                              ; preds = %486, %478
  %493 = load i64, i64* %6, align 8
  %494 = icmp eq i64 %493, 0
  br i1 %494, label %495, label %515

495:                                              ; preds = %492
  br label %496

496:                                              ; preds = %495
  br label %497

497:                                              ; preds = %496
  %498 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %498) #13
  %499 = load %18*, %18** %4, align 8
  store %18* %499, %18** %22, align 8
  %500 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %500) #13
  %501 = load %0*, %0** @zend_empty_string, align 8
  store %0* %501, %0** %23, align 8
  %502 = load %0*, %0** %23, align 8
  %503 = load %18*, %18** %22, align 8
  %504 = getelementptr inbounds %18, %18* %503, i32 0, i32 0
  %505 = bitcast %19* %504 to %0**
  store %0* %502, %0** %505, align 8
  %506 = load %18*, %18** %22, align 8
  %507 = getelementptr inbounds %18, %18* %506, i32 0, i32 1
  %508 = bitcast %20* %507 to i32*
  store i32 6, i32* %508, align 8
  %509 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %509) #13
  %510 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %510) #13
  br label %511

511:                                              ; preds = %497
  br label %512

512:                                              ; preds = %511
  br label %513

513:                                              ; preds = %512
  br label %514

514:                                              ; preds = %513
  store i32 1, i32* %21, align 4
  br label %613

515:                                              ; preds = %492
  %516 = load i64, i64* %6, align 8
  %517 = icmp eq i64 %516, 1
  br i1 %517, label %518, label %542

518:                                              ; preds = %515
  br label %519

519:                                              ; preds = %518
  %520 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %520) #13
  %521 = load %18*, %18** %4, align 8
  store %18* %521, %18** %24, align 8
  %522 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %522) #13
  %523 = load %0*, %0** %5, align 8
  %524 = getelementptr inbounds %0, %0* %523, i32 0, i32 3
  %525 = load i64, i64* %7, align 8
  %526 = getelementptr inbounds [1 x i8], [1 x i8]* %524, i64 0, i64 %525
  %527 = load i8, i8* %526, align 1
  %528 = zext i8 %527 to i64
  %529 = getelementptr inbounds [256 x %0*], [256 x %0*]* @zend_one_char_string, i64 0, i64 %528
  %530 = load %0*, %0** %529, align 8
  store %0* %530, %0** %25, align 8
  %531 = load %0*, %0** %25, align 8
  %532 = load %18*, %18** %24, align 8
  %533 = getelementptr inbounds %18, %18* %532, i32 0, i32 0
  %534 = bitcast %19* %533 to %0**
  store %0* %531, %0** %534, align 8
  %535 = load %18*, %18** %24, align 8
  %536 = getelementptr inbounds %18, %18* %535, i32 0, i32 1
  %537 = bitcast %20* %536 to i32*
  store i32 6, i32* %537, align 8
  %538 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %538) #13
  %539 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %539) #13
  br label %540

540:                                              ; preds = %519
  br label %541

541:                                              ; preds = %540
  store i32 1, i32* %21, align 4
  br label %613

542:                                              ; preds = %515
  %543 = load i64, i64* %6, align 8
  %544 = load %0*, %0** %5, align 8
  %545 = getelementptr inbounds %0, %0* %544, i32 0, i32 2
  %546 = load i64, i64* %545, align 8
  %547 = icmp eq i64 %543, %546
  br i1 %547, label %548, label %585

548:                                              ; preds = %542
  br label %549

549:                                              ; preds = %548
  %550 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %550) #13
  %551 = load %18*, %18** %4, align 8
  store %18* %551, %18** %26, align 8
  %552 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %552) #13
  %553 = load %0*, %0** %5, align 8
  store %0* %553, %0** %27, align 8
  %554 = load %0*, %0** %27, align 8
  %555 = load %18*, %18** %26, align 8
  %556 = getelementptr inbounds %18, %18* %555, i32 0, i32 0
  %557 = bitcast %19* %556 to %0**
  store %0* %554, %0** %557, align 8
  %558 = load %0*, %0** %27, align 8
  %559 = getelementptr inbounds %0, %0* %558, i32 0, i32 0
  %560 = getelementptr inbounds %1, %1* %559, i32 0, i32 1
  %561 = bitcast %2* %560 to %52*
  %562 = getelementptr inbounds %52, %52* %561, i32 0, i32 1
  %563 = load i8, i8* %562, align 1
  %564 = zext i8 %563 to i32
  %565 = and i32 %564, 2
  %566 = icmp ne i32 %565, 0
  br i1 %566, label %567, label %571

567:                                              ; preds = %549
  %568 = load %18*, %18** %26, align 8
  %569 = getelementptr inbounds %18, %18* %568, i32 0, i32 1
  %570 = bitcast %20* %569 to i32*
  store i32 6, i32* %570, align 8
  br label %580

571:                                              ; preds = %549
  %572 = load %0*, %0** %27, align 8
  %573 = getelementptr inbounds %0, %0* %572, i32 0, i32 0
  %574 = getelementptr inbounds %1, %1* %573, i32 0, i32 0
  %575 = load i32, i32* %574, align 8
  %576 = add i32 %575, 1
  store i32 %576, i32* %574, align 8
  %577 = load %18*, %18** %26, align 8
  %578 = getelementptr inbounds %18, %18* %577, i32 0, i32 1
  %579 = bitcast %20* %578 to i32*
  store i32 5126, i32* %579, align 8
  br label %580

580:                                              ; preds = %571, %567
  %581 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %581) #13
  %582 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %582) #13
  br label %583

583:                                              ; preds = %580
  br label %584

584:                                              ; preds = %583
  store i32 1, i32* %21, align 4
  br label %613

585:                                              ; preds = %542
  br label %586

586:                                              ; preds = %585
  br label %587

587:                                              ; preds = %586
  br label %588

588:                                              ; preds = %587
  br label %589

589:                                              ; preds = %588
  %590 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %590) #13
  %591 = load %18*, %18** %4, align 8
  store %18* %591, %18** %28, align 8
  %592 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %592) #13
  %593 = load %0*, %0** %5, align 8
  %594 = getelementptr inbounds %0, %0* %593, i32 0, i32 3
  %595 = getelementptr inbounds [1 x i8], [1 x i8]* %594, i32 0, i32 0
  %596 = load i64, i64* %7, align 8
  %597 = getelementptr inbounds i8, i8* %595, i64 %596
  %598 = load i64, i64* %6, align 8
  %599 = call %0* @148(i8* %597, i64 %598, i32 0)
  store %0* %599, %0** %29, align 8
  %600 = load %0*, %0** %29, align 8
  %601 = load %18*, %18** %28, align 8
  %602 = getelementptr inbounds %18, %18* %601, i32 0, i32 0
  %603 = bitcast %19* %602 to %0**
  store %0* %600, %0** %603, align 8
  %604 = load %18*, %18** %28, align 8
  %605 = getelementptr inbounds %18, %18* %604, i32 0, i32 1
  %606 = bitcast %20* %605 to i32*
  store i32 5126, i32* %606, align 8
  %607 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %607) #13
  %608 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %608) #13
  br label %609

609:                                              ; preds = %589
  br label %610

610:                                              ; preds = %609
  br label %611

611:                                              ; preds = %610
  br label %612

612:                                              ; preds = %611
  store i32 1, i32* %21, align 4
  br label %613

613:                                              ; preds = %612, %584, %541, %514, %477, %436, %405, %376, %343
  %614 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %614) #13
  %615 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %615) #13
  %616 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %616) #13
  %617 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %617) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_substr_replace(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %18*, align 8
  %7 = alloca %18*, align 8
  %8 = alloca %18*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %0*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %18*, align 8
  %17 = alloca %18*, align 8
  %18 = alloca %18*, align 8
  %19 = alloca %18*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %18*, align 8
  %26 = alloca %18*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca %18*, align 8
  %34 = alloca %0*, align 8
  %35 = alloca %18*, align 8
  %36 = alloca %0*, align 8
  %37 = alloca %0*, align 8
  %38 = alloca i8, align 1
  %39 = alloca %18*, align 8
  %40 = alloca %0*, align 8
  %41 = alloca %18*, align 8
  %42 = alloca %0*, align 8
  %43 = alloca %0*, align 8
  %44 = alloca i64, align 8
  %45 = alloca i64, align 8
  %46 = alloca %43*, align 8
  %47 = alloca %45*, align 8
  %48 = alloca %45*, align 8
  %49 = alloca %18*, align 8
  %50 = alloca %0*, align 8
  %51 = alloca %0*, align 8
  %52 = alloca %18, align 8
  %53 = alloca %18*, align 8
  %54 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %55 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #13
  %56 = bitcast %18** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #13
  %57 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #13
  store %18* null, %18** %7, align 8
  %58 = bitcast %18** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #13
  %59 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #13
  store i64 0, i64* %9, align 8
  %60 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #13
  %61 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #13
  %62 = load %14*, %14** %3, align 8
  %63 = getelementptr inbounds %14, %14* %62, i32 0, i32 4
  %64 = getelementptr inbounds %18, %18* %63, i32 0, i32 2
  %65 = bitcast %21* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %11, align 4
  %67 = bitcast %0** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %67) #13
  %68 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %68) #13
  %69 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %69) #13
  %70 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #13
  %71 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #13
  store %18* null, %18** %16, align 8
  %72 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #13
  store %18* null, %18** %17, align 8
  %73 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #13
  store %18* null, %18** %18, align 8
  %74 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #13
  store %18* null, %18** %19, align 8
  br label %75

75:                                               ; preds = %2
  %76 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %76) #13
  store i32 0, i32* %20, align 4
  %77 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %77) #13
  store i32 3, i32* %21, align 4
  %78 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %78) #13
  store i32 4, i32* %22, align 4
  %79 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %79) #13
  %80 = load %14*, %14** %3, align 8
  %81 = getelementptr inbounds %14, %14* %80, i32 0, i32 4
  %82 = getelementptr inbounds %18, %18* %81, i32 0, i32 2
  %83 = bitcast %21* %82 to i32*
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %23, align 4
  %85 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %85) #13
  %86 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %86) #13
  %87 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %87) #13
  store %18* null, %18** %26, align 8
  %88 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %88) #13
  store i32 0, i32* %27, align 4
  %89 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89) #13
  store i8* null, i8** %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %29) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %30) #13
  store i8 0, i8* %30, align 1
  %90 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %90) #13
  store i32 0, i32* %31, align 4
  %91 = load i32, i32* %24, align 4
  %92 = load %18*, %18** %25, align 8
  %93 = load %18*, %18** %26, align 8
  %94 = load i32, i32* %27, align 4
  %95 = load i8*, i8** %28, align 8
  %96 = load i8, i8* %29, align 1
  %97 = load i8, i8* %30, align 1
  br label %98

98:                                               ; preds = %75
  %99 = load i32, i32* %23, align 4
  %100 = load i32, i32* %21, align 4
  %101 = icmp slt i32 %99, %100
  %102 = xor i1 %101, true
  %103 = xor i1 %102, true
  %104 = zext i1 %103 to i32
  %105 = sext i32 %104 to i64
  %106 = call i64 @llvm.expect.i64(i64 %105, i64 0)
  %107 = icmp ne i64 %106, 0
  br i1 %107, label %127, label %108

108:                                              ; preds = %98
  %109 = load i32, i32* %23, align 4
  %110 = load i32, i32* %22, align 4
  %111 = icmp sgt i32 %109, %110
  %112 = xor i1 %111, true
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %131

118:                                              ; preds = %108
  %119 = load i32, i32* %22, align 4
  %120 = icmp sge i32 %119, 0
  %121 = xor i1 %120, true
  %122 = xor i1 %121, true
  %123 = zext i1 %122 to i32
  %124 = sext i32 %123 to i64
  %125 = call i64 @llvm.expect.i64(i64 %124, i64 1)
  %126 = icmp ne i64 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %118, %98
  %128 = load i32, i32* %23, align 4
  %129 = load i32, i32* %21, align 4
  %130 = load i32, i32* %22, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %128, i32 %129, i32 %130)
  store i32 1, i32* %31, align 4
  br label %372

131:                                              ; preds = %118, %108
  store i32 0, i32* %24, align 4
  %132 = load %14*, %14** %3, align 8
  %133 = bitcast %14* %132 to %18*
  %134 = getelementptr inbounds %18, %18* %133, i64 4
  store %18* %134, %18** %25, align 8
  %135 = load i32, i32* %24, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %24, align 4
  br label %137

137:                                              ; preds = %131
  %138 = load i32, i32* %24, align 4
  %139 = load i32, i32* %21, align 4
  %140 = icmp sle i32 %138, %139
  br i1 %140, label %145, label %141

141:                                              ; preds = %137
  %142 = load i8, i8* %30, align 1
  %143 = zext i8 %142 to i32
  %144 = icmp eq i32 %143, 1
  br label %145

145:                                              ; preds = %141, %137
  %146 = phi i1 [ true, %137 ], [ %144, %141 ]
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %145
  unreachable

153:                                              ; preds = %145
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154
  br label %156

156:                                              ; preds = %155
  %157 = load i32, i32* %24, align 4
  %158 = load i32, i32* %21, align 4
  %159 = icmp sgt i32 %157, %158
  br i1 %159, label %164, label %160

160:                                              ; preds = %156
  %161 = load i8, i8* %30, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %162, 0
  br label %164

164:                                              ; preds = %160, %156
  %165 = phi i1 [ true, %156 ], [ %163, %160 ]
  %166 = xor i1 %165, true
  %167 = zext i1 %166 to i32
  %168 = sext i32 %167 to i64
  %169 = call i64 @llvm.expect.i64(i64 %168, i64 0)
  %170 = icmp ne i64 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %164
  unreachable

172:                                              ; preds = %164
  br label %173

173:                                              ; preds = %172
  br label %174

174:                                              ; preds = %173
  %175 = load i8, i8* %30, align 1
  %176 = icmp ne i8 %175, 0
  br i1 %176, label %177, label %189

177:                                              ; preds = %174
  %178 = load i32, i32* %24, align 4
  %179 = load i32, i32* %23, align 4
  %180 = icmp sgt i32 %178, %179
  %181 = xor i1 %180, true
  %182 = xor i1 %181, true
  %183 = zext i1 %182 to i32
  %184 = sext i32 %183 to i64
  %185 = call i64 @llvm.expect.i64(i64 %184, i64 0)
  %186 = icmp ne i64 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %177
  br label %372

188:                                              ; preds = %177
  br label %189

189:                                              ; preds = %188, %174
  %190 = load %18*, %18** %25, align 8
  %191 = getelementptr inbounds %18, %18* %190, i32 1
  store %18* %191, %18** %25, align 8
  %192 = load %18*, %18** %25, align 8
  store %18* %192, %18** %26, align 8
  %193 = load %18*, %18** %26, align 8
  call void @161(%18* %193, %18** %5, i32 0)
  %194 = load i32, i32* %24, align 4
  %195 = add nsw i32 %194, 1
  store i32 %195, i32* %24, align 4
  br label %196

196:                                              ; preds = %189
  %197 = load i32, i32* %24, align 4
  %198 = load i32, i32* %21, align 4
  %199 = icmp sle i32 %197, %198
  br i1 %199, label %204, label %200

200:                                              ; preds = %196
  %201 = load i8, i8* %30, align 1
  %202 = zext i8 %201 to i32
  %203 = icmp eq i32 %202, 1
  br label %204

204:                                              ; preds = %200, %196
  %205 = phi i1 [ true, %196 ], [ %203, %200 ]
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %204
  unreachable

212:                                              ; preds = %204
  br label %213

213:                                              ; preds = %212
  br label %214

214:                                              ; preds = %213
  br label %215

215:                                              ; preds = %214
  %216 = load i32, i32* %24, align 4
  %217 = load i32, i32* %21, align 4
  %218 = icmp sgt i32 %216, %217
  br i1 %218, label %223, label %219

219:                                              ; preds = %215
  %220 = load i8, i8* %30, align 1
  %221 = zext i8 %220 to i32
  %222 = icmp eq i32 %221, 0
  br label %223

223:                                              ; preds = %219, %215
  %224 = phi i1 [ true, %215 ], [ %222, %219 ]
  %225 = xor i1 %224, true
  %226 = zext i1 %225 to i32
  %227 = sext i32 %226 to i64
  %228 = call i64 @llvm.expect.i64(i64 %227, i64 0)
  %229 = icmp ne i64 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %223
  unreachable

231:                                              ; preds = %223
  br label %232

232:                                              ; preds = %231
  br label %233

233:                                              ; preds = %232
  %234 = load i8, i8* %30, align 1
  %235 = icmp ne i8 %234, 0
  br i1 %235, label %236, label %248

236:                                              ; preds = %233
  %237 = load i32, i32* %24, align 4
  %238 = load i32, i32* %23, align 4
  %239 = icmp sgt i32 %237, %238
  %240 = xor i1 %239, true
  %241 = xor i1 %240, true
  %242 = zext i1 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call i64 @llvm.expect.i64(i64 %243, i64 0)
  %245 = icmp ne i64 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %236
  br label %372

247:                                              ; preds = %236
  br label %248

248:                                              ; preds = %247, %233
  %249 = load %18*, %18** %25, align 8
  %250 = getelementptr inbounds %18, %18* %249, i32 1
  store %18* %250, %18** %25, align 8
  %251 = load %18*, %18** %25, align 8
  store %18* %251, %18** %26, align 8
  %252 = load %18*, %18** %26, align 8
  call void @161(%18* %252, %18** %8, i32 0)
  %253 = load i32, i32* %24, align 4
  %254 = add nsw i32 %253, 1
  store i32 %254, i32* %24, align 4
  br label %255

255:                                              ; preds = %248
  %256 = load i32, i32* %24, align 4
  %257 = load i32, i32* %21, align 4
  %258 = icmp sle i32 %256, %257
  br i1 %258, label %263, label %259

259:                                              ; preds = %255
  %260 = load i8, i8* %30, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i32 %261, 1
  br label %263

263:                                              ; preds = %259, %255
  %264 = phi i1 [ true, %255 ], [ %262, %259 ]
  %265 = xor i1 %264, true
  %266 = zext i1 %265 to i32
  %267 = sext i32 %266 to i64
  %268 = call i64 @llvm.expect.i64(i64 %267, i64 0)
  %269 = icmp ne i64 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %263
  unreachable

271:                                              ; preds = %263
  br label %272

272:                                              ; preds = %271
  br label %273

273:                                              ; preds = %272
  br label %274

274:                                              ; preds = %273
  %275 = load i32, i32* %24, align 4
  %276 = load i32, i32* %21, align 4
  %277 = icmp sgt i32 %275, %276
  br i1 %277, label %282, label %278

278:                                              ; preds = %274
  %279 = load i8, i8* %30, align 1
  %280 = zext i8 %279 to i32
  %281 = icmp eq i32 %280, 0
  br label %282

282:                                              ; preds = %278, %274
  %283 = phi i1 [ true, %274 ], [ %281, %278 ]
  %284 = xor i1 %283, true
  %285 = zext i1 %284 to i32
  %286 = sext i32 %285 to i64
  %287 = call i64 @llvm.expect.i64(i64 %286, i64 0)
  %288 = icmp ne i64 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %282
  unreachable

290:                                              ; preds = %282
  br label %291

291:                                              ; preds = %290
  br label %292

292:                                              ; preds = %291
  %293 = load i8, i8* %30, align 1
  %294 = icmp ne i8 %293, 0
  br i1 %294, label %295, label %307

295:                                              ; preds = %292
  %296 = load i32, i32* %24, align 4
  %297 = load i32, i32* %23, align 4
  %298 = icmp sgt i32 %296, %297
  %299 = xor i1 %298, true
  %300 = xor i1 %299, true
  %301 = zext i1 %300 to i32
  %302 = sext i32 %301 to i64
  %303 = call i64 @llvm.expect.i64(i64 %302, i64 0)
  %304 = icmp ne i64 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %295
  br label %372

306:                                              ; preds = %295
  br label %307

307:                                              ; preds = %306, %292
  %308 = load %18*, %18** %25, align 8
  %309 = getelementptr inbounds %18, %18* %308, i32 1
  store %18* %309, %18** %25, align 8
  %310 = load %18*, %18** %25, align 8
  store %18* %310, %18** %26, align 8
  %311 = load %18*, %18** %26, align 8
  call void @161(%18* %311, %18** %6, i32 0)
  store i8 1, i8* %30, align 1
  %312 = load i32, i32* %24, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, i32* %24, align 4
  br label %314

314:                                              ; preds = %307
  %315 = load i32, i32* %24, align 4
  %316 = load i32, i32* %21, align 4
  %317 = icmp sle i32 %315, %316
  br i1 %317, label %322, label %318

318:                                              ; preds = %314
  %319 = load i8, i8* %30, align 1
  %320 = zext i8 %319 to i32
  %321 = icmp eq i32 %320, 1
  br label %322

322:                                              ; preds = %318, %314
  %323 = phi i1 [ true, %314 ], [ %321, %318 ]
  %324 = xor i1 %323, true
  %325 = zext i1 %324 to i32
  %326 = sext i32 %325 to i64
  %327 = call i64 @llvm.expect.i64(i64 %326, i64 0)
  %328 = icmp ne i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %322
  unreachable

330:                                              ; preds = %322
  br label %331

331:                                              ; preds = %330
  br label %332

332:                                              ; preds = %331
  br label %333

333:                                              ; preds = %332
  %334 = load i32, i32* %24, align 4
  %335 = load i32, i32* %21, align 4
  %336 = icmp sgt i32 %334, %335
  br i1 %336, label %341, label %337

337:                                              ; preds = %333
  %338 = load i8, i8* %30, align 1
  %339 = zext i8 %338 to i32
  %340 = icmp eq i32 %339, 0
  br label %341

341:                                              ; preds = %337, %333
  %342 = phi i1 [ true, %333 ], [ %340, %337 ]
  %343 = xor i1 %342, true
  %344 = zext i1 %343 to i32
  %345 = sext i32 %344 to i64
  %346 = call i64 @llvm.expect.i64(i64 %345, i64 0)
  %347 = icmp ne i64 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %341
  unreachable

349:                                              ; preds = %341
  br label %350

350:                                              ; preds = %349
  br label %351

351:                                              ; preds = %350
  %352 = load i8, i8* %30, align 1
  %353 = icmp ne i8 %352, 0
  br i1 %353, label %354, label %366

354:                                              ; preds = %351
  %355 = load i32, i32* %24, align 4
  %356 = load i32, i32* %23, align 4
  %357 = icmp sgt i32 %355, %356
  %358 = xor i1 %357, true
  %359 = xor i1 %358, true
  %360 = zext i1 %359 to i32
  %361 = sext i32 %360 to i64
  %362 = call i64 @llvm.expect.i64(i64 %361, i64 0)
  %363 = icmp ne i64 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %354
  br label %372

365:                                              ; preds = %354
  br label %366

366:                                              ; preds = %365, %351
  %367 = load %18*, %18** %25, align 8
  %368 = getelementptr inbounds %18, %18* %367, i32 1
  store %18* %368, %18** %25, align 8
  %369 = load %18*, %18** %25, align 8
  store %18* %369, %18** %26, align 8
  %370 = load %18*, %18** %26, align 8
  call void @161(%18* %370, %18** %7, i32 0)
  br label %371

371:                                              ; preds = %366
  br label %372

372:                                              ; preds = %371, %364, %305, %246, %187, %127
  %373 = load i32, i32* %31, align 4
  %374 = icmp ne i32 %373, 0
  %375 = xor i1 %374, true
  %376 = xor i1 %375, true
  %377 = zext i1 %376 to i32
  %378 = sext i32 %377 to i64
  %379 = call i64 @llvm.expect.i64(i64 %378, i64 0)
  %380 = icmp ne i64 %379, 0
  br i1 %380, label %381, label %404

381:                                              ; preds = %372
  %382 = load i32, i32* %31, align 4
  %383 = icmp eq i32 %382, 2
  br i1 %383, label %384, label %387

384:                                              ; preds = %381
  %385 = load i32, i32* %24, align 4
  %386 = load i8*, i8** %28, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %385, i8* %386)
  br label %403

387:                                              ; preds = %381
  %388 = load i32, i32* %31, align 4
  %389 = icmp eq i32 %388, 3
  br i1 %389, label %390, label %394

390:                                              ; preds = %387
  %391 = load i32, i32* %24, align 4
  %392 = load i8*, i8** %28, align 8
  %393 = load %18*, %18** %26, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %391, i8* %392, %18* %393)
  br label %402

394:                                              ; preds = %387
  %395 = load i32, i32* %31, align 4
  %396 = icmp eq i32 %395, 4
  br i1 %396, label %397, label %401

397:                                              ; preds = %394
  %398 = load i32, i32* %24, align 4
  %399 = load i32, i32* %27, align 4
  %400 = load %18*, %18** %26, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %398, i32 %399, %18* %400)
  br label %401

401:                                              ; preds = %397, %394
  br label %402

402:                                              ; preds = %401, %390
  br label %403

403:                                              ; preds = %402, %384
  store i32 1, i32* %32, align 4
  br label %405

404:                                              ; preds = %372
  store i32 0, i32* %32, align 4
  br label %405

405:                                              ; preds = %404, %403
  %406 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %406) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %30) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %29) #13
  %407 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %407) #13
  %408 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %408) #13
  %409 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %409) #13
  %410 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %410) #13
  %411 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %411) #13
  %412 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %412) #13
  %413 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %413) #13
  %414 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %414) #13
  %415 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %415) #13
  %416 = load i32, i32* %32, align 4
  switch i32 %416, label %1443 [
    i32 0, label %417
  ]

417:                                              ; preds = %405
  br label %418

418:                                              ; preds = %417
  br label %419

419:                                              ; preds = %418
  %420 = load %18*, %18** %5, align 8
  %421 = call zeroext i8 @157(%18* %420)
  %422 = zext i8 %421 to i32
  %423 = icmp ne i32 %422, 7
  br i1 %423, label %424, label %438

424:                                              ; preds = %419
  %425 = load %18*, %18** %5, align 8
  %426 = call zeroext i8 @157(%18* %425)
  %427 = zext i8 %426 to i32
  %428 = icmp ne i32 %427, 6
  br i1 %428, label %429, label %437

429:                                              ; preds = %424
  %430 = load %18*, %18** %5, align 8
  %431 = call zeroext i8 @157(%18* %430)
  %432 = zext i8 %431 to i32
  %433 = icmp ne i32 %432, 6
  br i1 %433, label %434, label %436

434:                                              ; preds = %429
  %435 = load %18*, %18** %5, align 8
  call void @_convert_to_string(%18* %435)
  br label %436

436:                                              ; preds = %434, %429
  br label %437

437:                                              ; preds = %436, %424
  br label %438

438:                                              ; preds = %437, %419
  %439 = load %18*, %18** %8, align 8
  %440 = call zeroext i8 @157(%18* %439)
  %441 = zext i8 %440 to i32
  %442 = icmp ne i32 %441, 7
  br i1 %442, label %443, label %457

443:                                              ; preds = %438
  %444 = load %18*, %18** %8, align 8
  %445 = call zeroext i8 @157(%18* %444)
  %446 = zext i8 %445 to i32
  %447 = icmp ne i32 %446, 6
  br i1 %447, label %448, label %456

448:                                              ; preds = %443
  %449 = load %18*, %18** %8, align 8
  %450 = call zeroext i8 @157(%18* %449)
  %451 = zext i8 %450 to i32
  %452 = icmp ne i32 %451, 6
  br i1 %452, label %453, label %455

453:                                              ; preds = %448
  %454 = load %18*, %18** %8, align 8
  call void @_convert_to_string(%18* %454)
  br label %455

455:                                              ; preds = %453, %448
  br label %456

456:                                              ; preds = %455, %443
  br label %457

457:                                              ; preds = %456, %438
  %458 = load %18*, %18** %6, align 8
  %459 = call zeroext i8 @157(%18* %458)
  %460 = zext i8 %459 to i32
  %461 = icmp ne i32 %460, 7
  br i1 %461, label %462, label %470

462:                                              ; preds = %457
  %463 = load %18*, %18** %6, align 8
  %464 = call zeroext i8 @157(%18* %463)
  %465 = zext i8 %464 to i32
  %466 = icmp ne i32 %465, 4
  br i1 %466, label %467, label %469

467:                                              ; preds = %462
  %468 = load %18*, %18** %6, align 8
  call void @convert_to_long(%18* %468)
  br label %469

469:                                              ; preds = %467, %462
  br label %470

470:                                              ; preds = %469, %457
  %471 = load i32, i32* %11, align 4
  %472 = icmp sgt i32 %471, 3
  br i1 %472, label %473, label %489

473:                                              ; preds = %470
  %474 = load %18*, %18** %7, align 8
  %475 = call zeroext i8 @157(%18* %474)
  %476 = zext i8 %475 to i32
  %477 = icmp ne i32 %476, 7
  br i1 %477, label %478, label %488

478:                                              ; preds = %473
  %479 = load %18*, %18** %7, align 8
  %480 = call zeroext i8 @157(%18* %479)
  %481 = zext i8 %480 to i32
  %482 = icmp ne i32 %481, 4
  br i1 %482, label %483, label %485

483:                                              ; preds = %478
  %484 = load %18*, %18** %7, align 8
  call void @convert_to_long(%18* %484)
  br label %485

485:                                              ; preds = %483, %478
  %486 = load %18*, %18** %7, align 8
  %487 = call i64 @170(%18* %486)
  store i64 %487, i64* %9, align 8
  br label %488

488:                                              ; preds = %485, %473
  br label %502

489:                                              ; preds = %470
  %490 = load %18*, %18** %5, align 8
  %491 = call zeroext i8 @157(%18* %490)
  %492 = zext i8 %491 to i32
  %493 = icmp ne i32 %492, 7
  br i1 %493, label %494, label %501

494:                                              ; preds = %489
  %495 = load %18*, %18** %5, align 8
  %496 = getelementptr inbounds %18, %18* %495, i32 0, i32 0
  %497 = bitcast %19* %496 to %0**
  %498 = load %0*, %0** %497, align 8
  %499 = getelementptr inbounds %0, %0* %498, i32 0, i32 2
  %500 = load i64, i64* %499, align 8
  store i64 %500, i64* %9, align 8
  br label %501

501:                                              ; preds = %494, %489
  br label %502

502:                                              ; preds = %501, %488
  %503 = load %18*, %18** %5, align 8
  %504 = call zeroext i8 @157(%18* %503)
  %505 = zext i8 %504 to i32
  %506 = icmp eq i32 %505, 6
  br i1 %506, label %507, label %630

507:                                              ; preds = %502
  %508 = load i32, i32* %11, align 4
  %509 = icmp eq i32 %508, 3
  br i1 %509, label %510, label %515

510:                                              ; preds = %507
  %511 = load %18*, %18** %6, align 8
  %512 = call zeroext i8 @157(%18* %511)
  %513 = zext i8 %512 to i32
  %514 = icmp eq i32 %513, 7
  br i1 %514, label %526, label %515

515:                                              ; preds = %510, %507
  %516 = load i32, i32* %11, align 4
  %517 = icmp eq i32 %516, 4
  br i1 %517, label %518, label %566

518:                                              ; preds = %515
  %519 = load %18*, %18** %6, align 8
  %520 = call zeroext i8 @157(%18* %519)
  %521 = zext i8 %520 to i32
  %522 = load %18*, %18** %7, align 8
  %523 = call zeroext i8 @157(%18* %522)
  %524 = zext i8 %523 to i32
  %525 = icmp ne i32 %521, %524
  br i1 %525, label %526, label %566

526:                                              ; preds = %518, %510
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @89, i32 0, i32 0))
  br label %527

527:                                              ; preds = %526
  %528 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %528) #13
  %529 = load %18*, %18** %4, align 8
  store %18* %529, %18** %33, align 8
  %530 = bitcast %0** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %530) #13
  %531 = load %18*, %18** %5, align 8
  %532 = getelementptr inbounds %18, %18* %531, i32 0, i32 0
  %533 = bitcast %19* %532 to %0**
  %534 = load %0*, %0** %533, align 8
  store %0* %534, %0** %34, align 8
  %535 = load %0*, %0** %34, align 8
  %536 = load %18*, %18** %33, align 8
  %537 = getelementptr inbounds %18, %18* %536, i32 0, i32 0
  %538 = bitcast %19* %537 to %0**
  store %0* %535, %0** %538, align 8
  %539 = load %0*, %0** %34, align 8
  %540 = getelementptr inbounds %0, %0* %539, i32 0, i32 0
  %541 = getelementptr inbounds %1, %1* %540, i32 0, i32 1
  %542 = bitcast %2* %541 to %52*
  %543 = getelementptr inbounds %52, %52* %542, i32 0, i32 1
  %544 = load i8, i8* %543, align 1
  %545 = zext i8 %544 to i32
  %546 = and i32 %545, 2
  %547 = icmp ne i32 %546, 0
  br i1 %547, label %548, label %552

548:                                              ; preds = %527
  %549 = load %18*, %18** %33, align 8
  %550 = getelementptr inbounds %18, %18* %549, i32 0, i32 1
  %551 = bitcast %20* %550 to i32*
  store i32 6, i32* %551, align 8
  br label %561

552:                                              ; preds = %527
  %553 = load %0*, %0** %34, align 8
  %554 = getelementptr inbounds %0, %0* %553, i32 0, i32 0
  %555 = getelementptr inbounds %1, %1* %554, i32 0, i32 0
  %556 = load i32, i32* %555, align 8
  %557 = add i32 %556, 1
  store i32 %557, i32* %555, align 8
  %558 = load %18*, %18** %33, align 8
  %559 = getelementptr inbounds %18, %18* %558, i32 0, i32 1
  %560 = bitcast %20* %559 to i32*
  store i32 5126, i32* %560, align 8
  br label %561

561:                                              ; preds = %552, %548
  %562 = bitcast %0** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %562) #13
  %563 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %563) #13
  br label %564

564:                                              ; preds = %561
  br label %565

565:                                              ; preds = %564
  store i32 1, i32* %32, align 4
  br label %1443

566:                                              ; preds = %518, %515
  %567 = load i32, i32* %11, align 4
  %568 = icmp eq i32 %567, 4
  br i1 %568, label %569, label %629

569:                                              ; preds = %566
  %570 = load %18*, %18** %6, align 8
  %571 = call zeroext i8 @157(%18* %570)
  %572 = zext i8 %571 to i32
  %573 = icmp eq i32 %572, 7
  br i1 %573, label %574, label %629

574:                                              ; preds = %569
  %575 = load %18*, %18** %6, align 8
  %576 = getelementptr inbounds %18, %18* %575, i32 0, i32 0
  %577 = bitcast %19* %576 to %43**
  %578 = load %43*, %43** %577, align 8
  %579 = getelementptr inbounds %43, %43* %578, i32 0, i32 5
  %580 = load i32, i32* %579, align 4
  %581 = load %18*, %18** %7, align 8
  %582 = getelementptr inbounds %18, %18* %581, i32 0, i32 0
  %583 = bitcast %19* %582 to %43**
  %584 = load %43*, %43** %583, align 8
  %585 = getelementptr inbounds %43, %43* %584, i32 0, i32 5
  %586 = load i32, i32* %585, align 4
  %587 = icmp ne i32 %580, %586
  br i1 %587, label %588, label %628

588:                                              ; preds = %574
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @90, i32 0, i32 0))
  br label %589

589:                                              ; preds = %588
  %590 = bitcast %18** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %590) #13
  %591 = load %18*, %18** %4, align 8
  store %18* %591, %18** %35, align 8
  %592 = bitcast %0** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %592) #13
  %593 = load %18*, %18** %5, align 8
  %594 = getelementptr inbounds %18, %18* %593, i32 0, i32 0
  %595 = bitcast %19* %594 to %0**
  %596 = load %0*, %0** %595, align 8
  store %0* %596, %0** %36, align 8
  %597 = load %0*, %0** %36, align 8
  %598 = load %18*, %18** %35, align 8
  %599 = getelementptr inbounds %18, %18* %598, i32 0, i32 0
  %600 = bitcast %19* %599 to %0**
  store %0* %597, %0** %600, align 8
  %601 = load %0*, %0** %36, align 8
  %602 = getelementptr inbounds %0, %0* %601, i32 0, i32 0
  %603 = getelementptr inbounds %1, %1* %602, i32 0, i32 1
  %604 = bitcast %2* %603 to %52*
  %605 = getelementptr inbounds %52, %52* %604, i32 0, i32 1
  %606 = load i8, i8* %605, align 1
  %607 = zext i8 %606 to i32
  %608 = and i32 %607, 2
  %609 = icmp ne i32 %608, 0
  br i1 %609, label %610, label %614

610:                                              ; preds = %589
  %611 = load %18*, %18** %35, align 8
  %612 = getelementptr inbounds %18, %18* %611, i32 0, i32 1
  %613 = bitcast %20* %612 to i32*
  store i32 6, i32* %613, align 8
  br label %623

614:                                              ; preds = %589
  %615 = load %0*, %0** %36, align 8
  %616 = getelementptr inbounds %0, %0* %615, i32 0, i32 0
  %617 = getelementptr inbounds %1, %1* %616, i32 0, i32 0
  %618 = load i32, i32* %617, align 8
  %619 = add i32 %618, 1
  store i32 %619, i32* %617, align 8
  %620 = load %18*, %18** %35, align 8
  %621 = getelementptr inbounds %18, %18* %620, i32 0, i32 1
  %622 = bitcast %20* %621 to i32*
  store i32 5126, i32* %622, align 8
  br label %623

623:                                              ; preds = %614, %610
  %624 = bitcast %0** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %624) #13
  %625 = bitcast %18** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %625) #13
  br label %626

626:                                              ; preds = %623
  br label %627

627:                                              ; preds = %626
  store i32 1, i32* %32, align 4
  br label %1443

628:                                              ; preds = %574
  br label %629

629:                                              ; preds = %628, %569, %566
  br label %630

630:                                              ; preds = %629, %502
  %631 = load %18*, %18** %5, align 8
  %632 = call zeroext i8 @157(%18* %631)
  %633 = zext i8 %632 to i32
  %634 = icmp ne i32 %633, 7
  br i1 %634, label %635, label %937

635:                                              ; preds = %630
  %636 = load %18*, %18** %6, align 8
  %637 = call zeroext i8 @157(%18* %636)
  %638 = zext i8 %637 to i32
  %639 = icmp ne i32 %638, 7
  br i1 %639, label %640, label %897

640:                                              ; preds = %635
  %641 = bitcast %0** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %641) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %38) #13
  store i8 0, i8* %38, align 1
  %642 = load %18*, %18** %6, align 8
  %643 = getelementptr inbounds %18, %18* %642, i32 0, i32 0
  %644 = bitcast %19* %643 to i64*
  %645 = load i64, i64* %644, align 8
  store i64 %645, i64* %10, align 8
  %646 = load i64, i64* %10, align 8
  %647 = icmp slt i64 %646, 0
  br i1 %647, label %648, label %661

648:                                              ; preds = %640
  %649 = load %18*, %18** %5, align 8
  %650 = getelementptr inbounds %18, %18* %649, i32 0, i32 0
  %651 = bitcast %19* %650 to %0**
  %652 = load %0*, %0** %651, align 8
  %653 = getelementptr inbounds %0, %0* %652, i32 0, i32 2
  %654 = load i64, i64* %653, align 8
  %655 = load i64, i64* %10, align 8
  %656 = add nsw i64 %654, %655
  store i64 %656, i64* %10, align 8
  %657 = load i64, i64* %10, align 8
  %658 = icmp slt i64 %657, 0
  br i1 %658, label %659, label %660

659:                                              ; preds = %648
  store i64 0, i64* %10, align 8
  br label %660

660:                                              ; preds = %659, %648
  br label %678

661:                                              ; preds = %640
  %662 = load i64, i64* %10, align 8
  %663 = load %18*, %18** %5, align 8
  %664 = getelementptr inbounds %18, %18* %663, i32 0, i32 0
  %665 = bitcast %19* %664 to %0**
  %666 = load %0*, %0** %665, align 8
  %667 = getelementptr inbounds %0, %0* %666, i32 0, i32 2
  %668 = load i64, i64* %667, align 8
  %669 = icmp ugt i64 %662, %668
  br i1 %669, label %670, label %677

670:                                              ; preds = %661
  %671 = load %18*, %18** %5, align 8
  %672 = getelementptr inbounds %18, %18* %671, i32 0, i32 0
  %673 = bitcast %19* %672 to %0**
  %674 = load %0*, %0** %673, align 8
  %675 = getelementptr inbounds %0, %0* %674, i32 0, i32 2
  %676 = load i64, i64* %675, align 8
  store i64 %676, i64* %10, align 8
  br label %677

677:                                              ; preds = %670, %661
  br label %678

678:                                              ; preds = %677, %660
  %679 = load i64, i64* %9, align 8
  %680 = icmp slt i64 %679, 0
  br i1 %680, label %681, label %696

681:                                              ; preds = %678
  %682 = load %18*, %18** %5, align 8
  %683 = getelementptr inbounds %18, %18* %682, i32 0, i32 0
  %684 = bitcast %19* %683 to %0**
  %685 = load %0*, %0** %684, align 8
  %686 = getelementptr inbounds %0, %0* %685, i32 0, i32 2
  %687 = load i64, i64* %686, align 8
  %688 = load i64, i64* %10, align 8
  %689 = sub nsw i64 %687, %688
  %690 = load i64, i64* %9, align 8
  %691 = add nsw i64 %689, %690
  store i64 %691, i64* %9, align 8
  %692 = load i64, i64* %9, align 8
  %693 = icmp slt i64 %692, 0
  br i1 %693, label %694, label %695

694:                                              ; preds = %681
  store i64 0, i64* %9, align 8
  br label %695

695:                                              ; preds = %694, %681
  br label %696

696:                                              ; preds = %695, %678
  %697 = load i64, i64* %9, align 8
  %698 = load %18*, %18** %5, align 8
  %699 = getelementptr inbounds %18, %18* %698, i32 0, i32 0
  %700 = bitcast %19* %699 to %0**
  %701 = load %0*, %0** %700, align 8
  %702 = getelementptr inbounds %0, %0* %701, i32 0, i32 2
  %703 = load i64, i64* %702, align 8
  %704 = icmp ugt i64 %697, %703
  br i1 %704, label %718, label %705

705:                                              ; preds = %696
  %706 = load i64, i64* %9, align 8
  %707 = icmp slt i64 %706, 0
  br i1 %707, label %708, label %725

708:                                              ; preds = %705
  %709 = load i64, i64* %9, align 8
  %710 = sub nsw i64 0, %709
  %711 = load %18*, %18** %5, align 8
  %712 = getelementptr inbounds %18, %18* %711, i32 0, i32 0
  %713 = bitcast %19* %712 to %0**
  %714 = load %0*, %0** %713, align 8
  %715 = getelementptr inbounds %0, %0* %714, i32 0, i32 2
  %716 = load i64, i64* %715, align 8
  %717 = icmp ugt i64 %710, %716
  br i1 %717, label %718, label %725

718:                                              ; preds = %708, %696
  %719 = load %18*, %18** %5, align 8
  %720 = getelementptr inbounds %18, %18* %719, i32 0, i32 0
  %721 = bitcast %19* %720 to %0**
  %722 = load %0*, %0** %721, align 8
  %723 = getelementptr inbounds %0, %0* %722, i32 0, i32 2
  %724 = load i64, i64* %723, align 8
  store i64 %724, i64* %9, align 8
  br label %725

725:                                              ; preds = %718, %708, %705
  %726 = load i64, i64* %10, align 8
  %727 = load i64, i64* %9, align 8
  %728 = add nsw i64 %726, %727
  %729 = load %18*, %18** %5, align 8
  %730 = getelementptr inbounds %18, %18* %729, i32 0, i32 0
  %731 = bitcast %19* %730 to %0**
  %732 = load %0*, %0** %731, align 8
  %733 = getelementptr inbounds %0, %0* %732, i32 0, i32 2
  %734 = load i64, i64* %733, align 8
  %735 = icmp sgt i64 %728, %734
  br i1 %735, label %736, label %745

736:                                              ; preds = %725
  %737 = load %18*, %18** %5, align 8
  %738 = getelementptr inbounds %18, %18* %737, i32 0, i32 0
  %739 = bitcast %19* %738 to %0**
  %740 = load %0*, %0** %739, align 8
  %741 = getelementptr inbounds %0, %0* %740, i32 0, i32 2
  %742 = load i64, i64* %741, align 8
  %743 = load i64, i64* %10, align 8
  %744 = sub i64 %742, %743
  store i64 %744, i64* %9, align 8
  br label %745

745:                                              ; preds = %736, %725
  %746 = load %18*, %18** %8, align 8
  %747 = call zeroext i8 @157(%18* %746)
  %748 = zext i8 %747 to i32
  %749 = icmp eq i32 %748, 7
  br i1 %749, label %750, label %794

750:                                              ; preds = %745
  store i32 0, i32* %14, align 4
  br label %751

751:                                              ; preds = %776, %750
  %752 = load i32, i32* %14, align 4
  %753 = load %18*, %18** %8, align 8
  %754 = getelementptr inbounds %18, %18* %753, i32 0, i32 0
  %755 = bitcast %19* %754 to %43**
  %756 = load %43*, %43** %755, align 8
  %757 = getelementptr inbounds %43, %43* %756, i32 0, i32 4
  %758 = load i32, i32* %757, align 8
  %759 = icmp ult i32 %752, %758
  br i1 %759, label %760, label %779

760:                                              ; preds = %751
  %761 = load %18*, %18** %8, align 8
  %762 = getelementptr inbounds %18, %18* %761, i32 0, i32 0
  %763 = bitcast %19* %762 to %43**
  %764 = load %43*, %43** %763, align 8
  %765 = getelementptr inbounds %43, %43* %764, i32 0, i32 3
  %766 = load %45*, %45** %765, align 8
  %767 = load i32, i32* %14, align 4
  %768 = zext i32 %767 to i64
  %769 = getelementptr inbounds %45, %45* %766, i64 %768
  %770 = getelementptr inbounds %45, %45* %769, i32 0, i32 0
  store %18* %770, %18** %18, align 8
  %771 = load %18*, %18** %18, align 8
  %772 = call zeroext i8 @157(%18* %771)
  %773 = zext i8 %772 to i32
  %774 = icmp ne i32 %773, 0
  br i1 %774, label %775, label %776

775:                                              ; preds = %760
  br label %779

776:                                              ; preds = %760
  %777 = load i32, i32* %14, align 4
  %778 = add i32 %777, 1
  store i32 %778, i32* %14, align 4
  br label %751

779:                                              ; preds = %775, %751
  %780 = load i32, i32* %14, align 4
  %781 = load %18*, %18** %8, align 8
  %782 = getelementptr inbounds %18, %18* %781, i32 0, i32 0
  %783 = bitcast %19* %782 to %43**
  %784 = load %43*, %43** %783, align 8
  %785 = getelementptr inbounds %43, %43* %784, i32 0, i32 4
  %786 = load i32, i32* %785, align 8
  %787 = icmp ult i32 %780, %786
  br i1 %787, label %788, label %791

788:                                              ; preds = %779
  %789 = load %18*, %18** %18, align 8
  %790 = call %0* @158(%18* %789)
  store %0* %790, %0** %37, align 8
  store i8 1, i8* %38, align 1
  br label %793

791:                                              ; preds = %779
  %792 = load %0*, %0** @zend_empty_string, align 8
  store %0* %792, %0** %37, align 8
  br label %793

793:                                              ; preds = %791, %788
  br label %799

794:                                              ; preds = %745
  %795 = load %18*, %18** %8, align 8
  %796 = getelementptr inbounds %18, %18* %795, i32 0, i32 0
  %797 = bitcast %19* %796 to %0**
  %798 = load %0*, %0** %797, align 8
  store %0* %798, %0** %37, align 8
  br label %799

799:                                              ; preds = %794, %793
  %800 = load %18*, %18** %5, align 8
  %801 = getelementptr inbounds %18, %18* %800, i32 0, i32 0
  %802 = bitcast %19* %801 to %0**
  %803 = load %0*, %0** %802, align 8
  %804 = getelementptr inbounds %0, %0* %803, i32 0, i32 2
  %805 = load i64, i64* %804, align 8
  %806 = load i64, i64* %9, align 8
  %807 = sub i64 %805, %806
  %808 = load %0*, %0** %37, align 8
  %809 = getelementptr inbounds %0, %0* %808, i32 0, i32 2
  %810 = load i64, i64* %809, align 8
  %811 = add i64 %807, %810
  %812 = call %0* @153(i64 1, i64 %811, i64 0, i32 0)
  store %0* %812, %0** %12, align 8
  %813 = load %0*, %0** %12, align 8
  %814 = getelementptr inbounds %0, %0* %813, i32 0, i32 3
  %815 = getelementptr inbounds [1 x i8], [1 x i8]* %814, i32 0, i32 0
  %816 = load %18*, %18** %5, align 8
  %817 = getelementptr inbounds %18, %18* %816, i32 0, i32 0
  %818 = bitcast %19* %817 to %0**
  %819 = load %0*, %0** %818, align 8
  %820 = getelementptr inbounds %0, %0* %819, i32 0, i32 3
  %821 = getelementptr inbounds [1 x i8], [1 x i8]* %820, i32 0, i32 0
  %822 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %815, i8* align 8 %821, i64 %822, i1 false)
  %823 = load %0*, %0** %37, align 8
  %824 = getelementptr inbounds %0, %0* %823, i32 0, i32 2
  %825 = load i64, i64* %824, align 8
  %826 = icmp ne i64 %825, 0
  br i1 %826, label %827, label %839

827:                                              ; preds = %799
  %828 = load %0*, %0** %12, align 8
  %829 = getelementptr inbounds %0, %0* %828, i32 0, i32 3
  %830 = getelementptr inbounds [1 x i8], [1 x i8]* %829, i32 0, i32 0
  %831 = load i64, i64* %10, align 8
  %832 = getelementptr inbounds i8, i8* %830, i64 %831
  %833 = load %0*, %0** %37, align 8
  %834 = getelementptr inbounds %0, %0* %833, i32 0, i32 3
  %835 = getelementptr inbounds [1 x i8], [1 x i8]* %834, i32 0, i32 0
  %836 = load %0*, %0** %37, align 8
  %837 = getelementptr inbounds %0, %0* %836, i32 0, i32 2
  %838 = load i64, i64* %837, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %832, i8* align 8 %835, i64 %838, i1 false)
  br label %839

839:                                              ; preds = %827, %799
  %840 = load %0*, %0** %12, align 8
  %841 = getelementptr inbounds %0, %0* %840, i32 0, i32 3
  %842 = getelementptr inbounds [1 x i8], [1 x i8]* %841, i32 0, i32 0
  %843 = load i64, i64* %10, align 8
  %844 = getelementptr inbounds i8, i8* %842, i64 %843
  %845 = load %0*, %0** %37, align 8
  %846 = getelementptr inbounds %0, %0* %845, i32 0, i32 2
  %847 = load i64, i64* %846, align 8
  %848 = getelementptr inbounds i8, i8* %844, i64 %847
  %849 = load %18*, %18** %5, align 8
  %850 = getelementptr inbounds %18, %18* %849, i32 0, i32 0
  %851 = bitcast %19* %850 to %0**
  %852 = load %0*, %0** %851, align 8
  %853 = getelementptr inbounds %0, %0* %852, i32 0, i32 3
  %854 = getelementptr inbounds [1 x i8], [1 x i8]* %853, i32 0, i32 0
  %855 = load i64, i64* %10, align 8
  %856 = getelementptr inbounds i8, i8* %854, i64 %855
  %857 = load i64, i64* %9, align 8
  %858 = getelementptr inbounds i8, i8* %856, i64 %857
  %859 = load %18*, %18** %5, align 8
  %860 = getelementptr inbounds %18, %18* %859, i32 0, i32 0
  %861 = bitcast %19* %860 to %0**
  %862 = load %0*, %0** %861, align 8
  %863 = getelementptr inbounds %0, %0* %862, i32 0, i32 2
  %864 = load i64, i64* %863, align 8
  %865 = load i64, i64* %10, align 8
  %866 = sub i64 %864, %865
  %867 = load i64, i64* %9, align 8
  %868 = sub i64 %866, %867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %848, i8* align 1 %858, i64 %868, i1 false)
  %869 = load %0*, %0** %12, align 8
  %870 = getelementptr inbounds %0, %0* %869, i32 0, i32 3
  %871 = load %0*, %0** %12, align 8
  %872 = getelementptr inbounds %0, %0* %871, i32 0, i32 2
  %873 = load i64, i64* %872, align 8
  %874 = getelementptr inbounds [1 x i8], [1 x i8]* %870, i64 0, i64 %873
  store i8 0, i8* %874, align 1
  %875 = load i8, i8* %38, align 1
  %876 = icmp ne i8 %875, 0
  br i1 %876, label %877, label %879

877:                                              ; preds = %839
  %878 = load %0*, %0** %37, align 8
  call void @159(%0* %878)
  br label %879

879:                                              ; preds = %877, %839
  br label %880

880:                                              ; preds = %879
  %881 = bitcast %18** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %881) #13
  %882 = load %18*, %18** %4, align 8
  store %18* %882, %18** %39, align 8
  %883 = bitcast %0** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %883) #13
  %884 = load %0*, %0** %12, align 8
  store %0* %884, %0** %40, align 8
  %885 = load %0*, %0** %40, align 8
  %886 = load %18*, %18** %39, align 8
  %887 = getelementptr inbounds %18, %18* %886, i32 0, i32 0
  %888 = bitcast %19* %887 to %0**
  store %0* %885, %0** %888, align 8
  %889 = load %18*, %18** %39, align 8
  %890 = getelementptr inbounds %18, %18* %889, i32 0, i32 1
  %891 = bitcast %20* %890 to i32*
  store i32 5126, i32* %891, align 8
  %892 = bitcast %0** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %892) #13
  %893 = bitcast %18** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %893) #13
  br label %894

894:                                              ; preds = %880
  br label %895

895:                                              ; preds = %894
  store i32 1, i32* %32, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %38) #13
  %896 = bitcast %0** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %896) #13
  br label %1443

897:                                              ; preds = %635
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @91, i32 0, i32 0))
  br label %898

898:                                              ; preds = %897
  %899 = bitcast %18** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %899) #13
  %900 = load %18*, %18** %4, align 8
  store %18* %900, %18** %41, align 8
  %901 = bitcast %0** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %901) #13
  %902 = load %18*, %18** %5, align 8
  %903 = getelementptr inbounds %18, %18* %902, i32 0, i32 0
  %904 = bitcast %19* %903 to %0**
  %905 = load %0*, %0** %904, align 8
  store %0* %905, %0** %42, align 8
  %906 = load %0*, %0** %42, align 8
  %907 = load %18*, %18** %41, align 8
  %908 = getelementptr inbounds %18, %18* %907, i32 0, i32 0
  %909 = bitcast %19* %908 to %0**
  store %0* %906, %0** %909, align 8
  %910 = load %0*, %0** %42, align 8
  %911 = getelementptr inbounds %0, %0* %910, i32 0, i32 0
  %912 = getelementptr inbounds %1, %1* %911, i32 0, i32 1
  %913 = bitcast %2* %912 to %52*
  %914 = getelementptr inbounds %52, %52* %913, i32 0, i32 1
  %915 = load i8, i8* %914, align 1
  %916 = zext i8 %915 to i32
  %917 = and i32 %916, 2
  %918 = icmp ne i32 %917, 0
  br i1 %918, label %919, label %923

919:                                              ; preds = %898
  %920 = load %18*, %18** %41, align 8
  %921 = getelementptr inbounds %18, %18* %920, i32 0, i32 1
  %922 = bitcast %20* %921 to i32*
  store i32 6, i32* %922, align 8
  br label %932

923:                                              ; preds = %898
  %924 = load %0*, %0** %42, align 8
  %925 = getelementptr inbounds %0, %0* %924, i32 0, i32 0
  %926 = getelementptr inbounds %1, %1* %925, i32 0, i32 0
  %927 = load i32, i32* %926, align 8
  %928 = add i32 %927, 1
  store i32 %928, i32* %926, align 8
  %929 = load %18*, %18** %41, align 8
  %930 = getelementptr inbounds %18, %18* %929, i32 0, i32 1
  %931 = bitcast %20* %930 to i32*
  store i32 5126, i32* %931, align 8
  br label %932

932:                                              ; preds = %923, %919
  %933 = bitcast %0** %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %933) #13
  %934 = bitcast %18** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %934) #13
  br label %935

935:                                              ; preds = %932
  br label %936

936:                                              ; preds = %935
  store i32 1, i32* %32, align 4
  br label %1443

937:                                              ; preds = %630
  %938 = bitcast %0** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %938) #13
  store %0* null, %0** %43, align 8
  %939 = bitcast i64* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %939) #13
  %940 = bitcast i64* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %940) #13
  %941 = load %18*, %18** %4, align 8
  %942 = call i32 @_array_init(%18* %941, i32 0)
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %13, align 4
  br label %943

943:                                              ; preds = %937
  %944 = bitcast %43** %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %944) #13
  %945 = load %18*, %18** %5, align 8
  %946 = getelementptr inbounds %18, %18* %945, i32 0, i32 0
  %947 = bitcast %19* %946 to %43**
  %948 = load %43*, %43** %947, align 8
  store %43* %948, %43** %46, align 8
  %949 = bitcast %45** %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %949) #13
  %950 = load %43*, %43** %46, align 8
  %951 = getelementptr inbounds %43, %43* %950, i32 0, i32 3
  %952 = load %45*, %45** %951, align 8
  store %45* %952, %45** %47, align 8
  %953 = bitcast %45** %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %953) #13
  %954 = load %45*, %45** %47, align 8
  %955 = load %43*, %43** %46, align 8
  %956 = getelementptr inbounds %43, %43* %955, i32 0, i32 4
  %957 = load i32, i32* %956, align 8
  %958 = zext i32 %957 to i64
  %959 = getelementptr inbounds %45, %45* %954, i64 %958
  store %45* %959, %45** %48, align 8
  br label %960

960:                                              ; preds = %1430, %943
  %961 = load %45*, %45** %47, align 8
  %962 = load %45*, %45** %48, align 8
  %963 = icmp ne %45* %961, %962
  br i1 %963, label %964, label %1433

964:                                              ; preds = %960
  %965 = bitcast %18** %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %965) #13
  %966 = load %45*, %45** %47, align 8
  %967 = getelementptr inbounds %45, %45* %966, i32 0, i32 0
  store %18* %967, %18** %49, align 8
  %968 = load %18*, %18** %49, align 8
  %969 = call zeroext i8 @157(%18* %968)
  %970 = zext i8 %969 to i32
  %971 = icmp eq i32 %970, 0
  %972 = xor i1 %971, true
  %973 = xor i1 %972, true
  %974 = zext i1 %973 to i32
  %975 = sext i32 %974 to i64
  %976 = call i64 @llvm.expect.i64(i64 %975, i64 0)
  %977 = icmp ne i64 %976, 0
  br i1 %977, label %978, label %979

978:                                              ; preds = %964
  store i32 36, i32* %32, align 4
  br label %1426

979:                                              ; preds = %964
  %980 = load %45*, %45** %47, align 8
  %981 = getelementptr inbounds %45, %45* %980, i32 0, i32 1
  %982 = load i64, i64* %981, align 8
  store i64 %982, i64* %45, align 8
  %983 = load %45*, %45** %47, align 8
  %984 = getelementptr inbounds %45, %45* %983, i32 0, i32 2
  %985 = load %0*, %0** %984, align 8
  store %0* %985, %0** %43, align 8
  %986 = load %18*, %18** %49, align 8
  store %18* %986, %18** %16, align 8
  %987 = bitcast %0** %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %987) #13
  %988 = load %18*, %18** %16, align 8
  %989 = call %0* @158(%18* %988)
  store %0* %989, %0** %50, align 8
  %990 = load %18*, %18** %6, align 8
  %991 = call zeroext i8 @157(%18* %990)
  %992 = zext i8 %991 to i32
  %993 = icmp eq i32 %992, 7
  br i1 %993, label %994, label %1063

994:                                              ; preds = %979
  br label %995

995:                                              ; preds = %1020, %994
  %996 = load i32, i32* %13, align 4
  %997 = load %18*, %18** %6, align 8
  %998 = getelementptr inbounds %18, %18* %997, i32 0, i32 0
  %999 = bitcast %19* %998 to %43**
  %1000 = load %43*, %43** %999, align 8
  %1001 = getelementptr inbounds %43, %43* %1000, i32 0, i32 4
  %1002 = load i32, i32* %1001, align 8
  %1003 = icmp ult i32 %996, %1002
  br i1 %1003, label %1004, label %1023

1004:                                             ; preds = %995
  %1005 = load %18*, %18** %6, align 8
  %1006 = getelementptr inbounds %18, %18* %1005, i32 0, i32 0
  %1007 = bitcast %19* %1006 to %43**
  %1008 = load %43*, %43** %1007, align 8
  %1009 = getelementptr inbounds %43, %43* %1008, i32 0, i32 3
  %1010 = load %45*, %45** %1009, align 8
  %1011 = load i32, i32* %13, align 4
  %1012 = zext i32 %1011 to i64
  %1013 = getelementptr inbounds %45, %45* %1010, i64 %1012
  %1014 = getelementptr inbounds %45, %45* %1013, i32 0, i32 0
  store %18* %1014, %18** %17, align 8
  %1015 = load %18*, %18** %17, align 8
  %1016 = call zeroext i8 @157(%18* %1015)
  %1017 = zext i8 %1016 to i32
  %1018 = icmp ne i32 %1017, 0
  br i1 %1018, label %1019, label %1020

1019:                                             ; preds = %1004
  br label %1023

1020:                                             ; preds = %1004
  %1021 = load i32, i32* %13, align 4
  %1022 = add i32 %1021, 1
  store i32 %1022, i32* %13, align 4
  br label %995

1023:                                             ; preds = %1019, %995
  %1024 = load i32, i32* %13, align 4
  %1025 = load %18*, %18** %6, align 8
  %1026 = getelementptr inbounds %18, %18* %1025, i32 0, i32 0
  %1027 = bitcast %19* %1026 to %43**
  %1028 = load %43*, %43** %1027, align 8
  %1029 = getelementptr inbounds %43, %43* %1028, i32 0, i32 4
  %1030 = load i32, i32* %1029, align 8
  %1031 = icmp ult i32 %1024, %1030
  br i1 %1031, label %1032, label %1061

1032:                                             ; preds = %1023
  %1033 = load %18*, %18** %17, align 8
  %1034 = call i64 @170(%18* %1033)
  store i64 %1034, i64* %10, align 8
  %1035 = load i64, i64* %10, align 8
  %1036 = icmp slt i64 %1035, 0
  br i1 %1036, label %1037, label %1047

1037:                                             ; preds = %1032
  %1038 = load %0*, %0** %50, align 8
  %1039 = getelementptr inbounds %0, %0* %1038, i32 0, i32 2
  %1040 = load i64, i64* %1039, align 8
  %1041 = load i64, i64* %10, align 8
  %1042 = add nsw i64 %1040, %1041
  store i64 %1042, i64* %10, align 8
  %1043 = load i64, i64* %10, align 8
  %1044 = icmp slt i64 %1043, 0
  br i1 %1044, label %1045, label %1046

1045:                                             ; preds = %1037
  store i64 0, i64* %10, align 8
  br label %1046

1046:                                             ; preds = %1045, %1037
  br label %1058

1047:                                             ; preds = %1032
  %1048 = load i64, i64* %10, align 8
  %1049 = load %0*, %0** %50, align 8
  %1050 = getelementptr inbounds %0, %0* %1049, i32 0, i32 2
  %1051 = load i64, i64* %1050, align 8
  %1052 = icmp sgt i64 %1048, %1051
  br i1 %1052, label %1053, label %1057

1053:                                             ; preds = %1047
  %1054 = load %0*, %0** %50, align 8
  %1055 = getelementptr inbounds %0, %0* %1054, i32 0, i32 2
  %1056 = load i64, i64* %1055, align 8
  store i64 %1056, i64* %10, align 8
  br label %1057

1057:                                             ; preds = %1053, %1047
  br label %1058

1058:                                             ; preds = %1057, %1046
  %1059 = load i32, i32* %13, align 4
  %1060 = add i32 %1059, 1
  store i32 %1060, i32* %13, align 4
  br label %1062

1061:                                             ; preds = %1023
  store i64 0, i64* %10, align 8
  br label %1062

1062:                                             ; preds = %1061, %1058
  br label %1092

1063:                                             ; preds = %979
  %1064 = load %18*, %18** %6, align 8
  %1065 = getelementptr inbounds %18, %18* %1064, i32 0, i32 0
  %1066 = bitcast %19* %1065 to i64*
  %1067 = load i64, i64* %1066, align 8
  store i64 %1067, i64* %10, align 8
  %1068 = load i64, i64* %10, align 8
  %1069 = icmp slt i64 %1068, 0
  br i1 %1069, label %1070, label %1080

1070:                                             ; preds = %1063
  %1071 = load %0*, %0** %50, align 8
  %1072 = getelementptr inbounds %0, %0* %1071, i32 0, i32 2
  %1073 = load i64, i64* %1072, align 8
  %1074 = load i64, i64* %10, align 8
  %1075 = add nsw i64 %1073, %1074
  store i64 %1075, i64* %10, align 8
  %1076 = load i64, i64* %10, align 8
  %1077 = icmp slt i64 %1076, 0
  br i1 %1077, label %1078, label %1079

1078:                                             ; preds = %1070
  store i64 0, i64* %10, align 8
  br label %1079

1079:                                             ; preds = %1078, %1070
  br label %1091

1080:                                             ; preds = %1063
  %1081 = load i64, i64* %10, align 8
  %1082 = load %0*, %0** %50, align 8
  %1083 = getelementptr inbounds %0, %0* %1082, i32 0, i32 2
  %1084 = load i64, i64* %1083, align 8
  %1085 = icmp sgt i64 %1081, %1084
  br i1 %1085, label %1086, label %1090

1086:                                             ; preds = %1080
  %1087 = load %0*, %0** %50, align 8
  %1088 = getelementptr inbounds %0, %0* %1087, i32 0, i32 2
  %1089 = load i64, i64* %1088, align 8
  store i64 %1089, i64* %10, align 8
  br label %1090

1090:                                             ; preds = %1086, %1080
  br label %1091

1091:                                             ; preds = %1090, %1079
  br label %1092

1092:                                             ; preds = %1091, %1062
  %1093 = load i32, i32* %11, align 4
  %1094 = icmp sgt i32 %1093, 3
  br i1 %1094, label %1095, label %1148

1095:                                             ; preds = %1092
  %1096 = load %18*, %18** %7, align 8
  %1097 = call zeroext i8 @157(%18* %1096)
  %1098 = zext i8 %1097 to i32
  %1099 = icmp eq i32 %1098, 7
  br i1 %1099, label %1100, label %1148

1100:                                             ; preds = %1095
  br label %1101

1101:                                             ; preds = %1126, %1100
  %1102 = load i32, i32* %15, align 4
  %1103 = load %18*, %18** %7, align 8
  %1104 = getelementptr inbounds %18, %18* %1103, i32 0, i32 0
  %1105 = bitcast %19* %1104 to %43**
  %1106 = load %43*, %43** %1105, align 8
  %1107 = getelementptr inbounds %43, %43* %1106, i32 0, i32 4
  %1108 = load i32, i32* %1107, align 8
  %1109 = icmp ult i32 %1102, %1108
  br i1 %1109, label %1110, label %1129

1110:                                             ; preds = %1101
  %1111 = load %18*, %18** %7, align 8
  %1112 = getelementptr inbounds %18, %18* %1111, i32 0, i32 0
  %1113 = bitcast %19* %1112 to %43**
  %1114 = load %43*, %43** %1113, align 8
  %1115 = getelementptr inbounds %43, %43* %1114, i32 0, i32 3
  %1116 = load %45*, %45** %1115, align 8
  %1117 = load i32, i32* %15, align 4
  %1118 = zext i32 %1117 to i64
  %1119 = getelementptr inbounds %45, %45* %1116, i64 %1118
  %1120 = getelementptr inbounds %45, %45* %1119, i32 0, i32 0
  store %18* %1120, %18** %19, align 8
  %1121 = load %18*, %18** %19, align 8
  %1122 = call zeroext i8 @157(%18* %1121)
  %1123 = zext i8 %1122 to i32
  %1124 = icmp ne i32 %1123, 0
  br i1 %1124, label %1125, label %1126

1125:                                             ; preds = %1110
  br label %1129

1126:                                             ; preds = %1110
  %1127 = load i32, i32* %15, align 4
  %1128 = add i32 %1127, 1
  store i32 %1128, i32* %15, align 4
  br label %1101

1129:                                             ; preds = %1125, %1101
  %1130 = load i32, i32* %15, align 4
  %1131 = load %18*, %18** %7, align 8
  %1132 = getelementptr inbounds %18, %18* %1131, i32 0, i32 0
  %1133 = bitcast %19* %1132 to %43**
  %1134 = load %43*, %43** %1133, align 8
  %1135 = getelementptr inbounds %43, %43* %1134, i32 0, i32 4
  %1136 = load i32, i32* %1135, align 8
  %1137 = icmp ult i32 %1130, %1136
  br i1 %1137, label %1138, label %1143

1138:                                             ; preds = %1129
  %1139 = load %18*, %18** %19, align 8
  %1140 = call i64 @170(%18* %1139)
  store i64 %1140, i64* %9, align 8
  %1141 = load i32, i32* %15, align 4
  %1142 = add i32 %1141, 1
  store i32 %1142, i32* %15, align 4
  br label %1147

1143:                                             ; preds = %1129
  %1144 = load %0*, %0** %50, align 8
  %1145 = getelementptr inbounds %0, %0* %1144, i32 0, i32 2
  %1146 = load i64, i64* %1145, align 8
  store i64 %1146, i64* %9, align 8
  br label %1147

1147:                                             ; preds = %1143, %1138
  br label %1161

1148:                                             ; preds = %1095, %1092
  %1149 = load i32, i32* %11, align 4
  %1150 = icmp sgt i32 %1149, 3
  br i1 %1150, label %1151, label %1156

1151:                                             ; preds = %1148
  %1152 = load %18*, %18** %7, align 8
  %1153 = getelementptr inbounds %18, %18* %1152, i32 0, i32 0
  %1154 = bitcast %19* %1153 to i64*
  %1155 = load i64, i64* %1154, align 8
  store i64 %1155, i64* %9, align 8
  br label %1160

1156:                                             ; preds = %1148
  %1157 = load %0*, %0** %50, align 8
  %1158 = getelementptr inbounds %0, %0* %1157, i32 0, i32 2
  %1159 = load i64, i64* %1158, align 8
  store i64 %1159, i64* %9, align 8
  br label %1160

1160:                                             ; preds = %1156, %1151
  br label %1161

1161:                                             ; preds = %1160, %1147
  %1162 = load i64, i64* %9, align 8
  %1163 = icmp slt i64 %1162, 0
  br i1 %1163, label %1164, label %1176

1164:                                             ; preds = %1161
  %1165 = load %0*, %0** %50, align 8
  %1166 = getelementptr inbounds %0, %0* %1165, i32 0, i32 2
  %1167 = load i64, i64* %1166, align 8
  %1168 = load i64, i64* %10, align 8
  %1169 = sub i64 %1167, %1168
  %1170 = load i64, i64* %9, align 8
  %1171 = add i64 %1169, %1170
  store i64 %1171, i64* %9, align 8
  %1172 = load i64, i64* %9, align 8
  %1173 = icmp slt i64 %1172, 0
  br i1 %1173, label %1174, label %1175

1174:                                             ; preds = %1164
  store i64 0, i64* %9, align 8
  br label %1175

1175:                                             ; preds = %1174, %1164
  br label %1176

1176:                                             ; preds = %1175, %1161
  %1177 = load i64, i64* %10, align 8
  %1178 = load i64, i64* %9, align 8
  %1179 = add nsw i64 %1177, %1178
  %1180 = load %0*, %0** %50, align 8
  %1181 = getelementptr inbounds %0, %0* %1180, i32 0, i32 2
  %1182 = load i64, i64* %1181, align 8
  %1183 = icmp sgt i64 %1179, %1182
  br i1 %1183, label %1184, label %1190

1184:                                             ; preds = %1176
  %1185 = load %0*, %0** %50, align 8
  %1186 = getelementptr inbounds %0, %0* %1185, i32 0, i32 2
  %1187 = load i64, i64* %1186, align 8
  %1188 = load i64, i64* %10, align 8
  %1189 = sub i64 %1187, %1188
  store i64 %1189, i64* %9, align 8
  br label %1190

1190:                                             ; preds = %1184, %1176
  %1191 = load %0*, %0** %50, align 8
  %1192 = getelementptr inbounds %0, %0* %1191, i32 0, i32 2
  %1193 = load i64, i64* %1192, align 8
  %1194 = load i64, i64* %9, align 8
  %1195 = sub i64 %1193, %1194
  store i64 %1195, i64* %44, align 8
  %1196 = load %18*, %18** %8, align 8
  %1197 = call zeroext i8 @157(%18* %1196)
  %1198 = zext i8 %1197 to i32
  %1199 = icmp eq i32 %1198, 7
  br i1 %1199, label %1200, label %1324

1200:                                             ; preds = %1190
  br label %1201

1201:                                             ; preds = %1226, %1200
  %1202 = load i32, i32* %14, align 4
  %1203 = load %18*, %18** %8, align 8
  %1204 = getelementptr inbounds %18, %18* %1203, i32 0, i32 0
  %1205 = bitcast %19* %1204 to %43**
  %1206 = load %43*, %43** %1205, align 8
  %1207 = getelementptr inbounds %43, %43* %1206, i32 0, i32 4
  %1208 = load i32, i32* %1207, align 8
  %1209 = icmp ult i32 %1202, %1208
  br i1 %1209, label %1210, label %1229

1210:                                             ; preds = %1201
  %1211 = load %18*, %18** %8, align 8
  %1212 = getelementptr inbounds %18, %18* %1211, i32 0, i32 0
  %1213 = bitcast %19* %1212 to %43**
  %1214 = load %43*, %43** %1213, align 8
  %1215 = getelementptr inbounds %43, %43* %1214, i32 0, i32 3
  %1216 = load %45*, %45** %1215, align 8
  %1217 = load i32, i32* %14, align 4
  %1218 = zext i32 %1217 to i64
  %1219 = getelementptr inbounds %45, %45* %1216, i64 %1218
  %1220 = getelementptr inbounds %45, %45* %1219, i32 0, i32 0
  store %18* %1220, %18** %18, align 8
  %1221 = load %18*, %18** %18, align 8
  %1222 = call zeroext i8 @157(%18* %1221)
  %1223 = zext i8 %1222 to i32
  %1224 = icmp ne i32 %1223, 0
  br i1 %1224, label %1225, label %1226

1225:                                             ; preds = %1210
  br label %1229

1226:                                             ; preds = %1210
  %1227 = load i32, i32* %14, align 4
  %1228 = add i32 %1227, 1
  store i32 %1228, i32* %14, align 4
  br label %1201

1229:                                             ; preds = %1225, %1201
  %1230 = load i32, i32* %14, align 4
  %1231 = load %18*, %18** %8, align 8
  %1232 = getelementptr inbounds %18, %18* %1231, i32 0, i32 0
  %1233 = bitcast %19* %1232 to %43**
  %1234 = load %43*, %43** %1233, align 8
  %1235 = getelementptr inbounds %43, %43* %1234, i32 0, i32 4
  %1236 = load i32, i32* %1235, align 8
  %1237 = icmp ult i32 %1230, %1236
  br i1 %1237, label %1238, label %1294

1238:                                             ; preds = %1229
  %1239 = bitcast %0** %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1239) #13
  %1240 = load %18*, %18** %18, align 8
  %1241 = call %0* @158(%18* %1240)
  store %0* %1241, %0** %51, align 8
  %1242 = load %0*, %0** %51, align 8
  %1243 = getelementptr inbounds %0, %0* %1242, i32 0, i32 2
  %1244 = load i64, i64* %1243, align 8
  %1245 = load i64, i64* %44, align 8
  %1246 = add i64 %1245, %1244
  store i64 %1246, i64* %44, align 8
  %1247 = load i32, i32* %14, align 4
  %1248 = add i32 %1247, 1
  store i32 %1248, i32* %14, align 4
  %1249 = load i64, i64* %44, align 8
  %1250 = call %0* @153(i64 1, i64 %1249, i64 0, i32 0)
  store %0* %1250, %0** %12, align 8
  %1251 = load %0*, %0** %12, align 8
  %1252 = getelementptr inbounds %0, %0* %1251, i32 0, i32 3
  %1253 = getelementptr inbounds [1 x i8], [1 x i8]* %1252, i32 0, i32 0
  %1254 = load %0*, %0** %50, align 8
  %1255 = getelementptr inbounds %0, %0* %1254, i32 0, i32 3
  %1256 = getelementptr inbounds [1 x i8], [1 x i8]* %1255, i32 0, i32 0
  %1257 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1253, i8* align 8 %1256, i64 %1257, i1 false)
  %1258 = load %0*, %0** %12, align 8
  %1259 = getelementptr inbounds %0, %0* %1258, i32 0, i32 3
  %1260 = getelementptr inbounds [1 x i8], [1 x i8]* %1259, i32 0, i32 0
  %1261 = load i64, i64* %10, align 8
  %1262 = getelementptr inbounds i8, i8* %1260, i64 %1261
  %1263 = load %0*, %0** %51, align 8
  %1264 = getelementptr inbounds %0, %0* %1263, i32 0, i32 3
  %1265 = getelementptr inbounds [1 x i8], [1 x i8]* %1264, i32 0, i32 0
  %1266 = load %0*, %0** %51, align 8
  %1267 = getelementptr inbounds %0, %0* %1266, i32 0, i32 2
  %1268 = load i64, i64* %1267, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1262, i8* align 8 %1265, i64 %1268, i1 false)
  %1269 = load %0*, %0** %12, align 8
  %1270 = getelementptr inbounds %0, %0* %1269, i32 0, i32 3
  %1271 = getelementptr inbounds [1 x i8], [1 x i8]* %1270, i32 0, i32 0
  %1272 = load i64, i64* %10, align 8
  %1273 = getelementptr inbounds i8, i8* %1271, i64 %1272
  %1274 = load %0*, %0** %51, align 8
  %1275 = getelementptr inbounds %0, %0* %1274, i32 0, i32 2
  %1276 = load i64, i64* %1275, align 8
  %1277 = getelementptr inbounds i8, i8* %1273, i64 %1276
  %1278 = load %0*, %0** %50, align 8
  %1279 = getelementptr inbounds %0, %0* %1278, i32 0, i32 3
  %1280 = getelementptr inbounds [1 x i8], [1 x i8]* %1279, i32 0, i32 0
  %1281 = load i64, i64* %10, align 8
  %1282 = getelementptr inbounds i8, i8* %1280, i64 %1281
  %1283 = load i64, i64* %9, align 8
  %1284 = getelementptr inbounds i8, i8* %1282, i64 %1283
  %1285 = load %0*, %0** %50, align 8
  %1286 = getelementptr inbounds %0, %0* %1285, i32 0, i32 2
  %1287 = load i64, i64* %1286, align 8
  %1288 = load i64, i64* %10, align 8
  %1289 = sub i64 %1287, %1288
  %1290 = load i64, i64* %9, align 8
  %1291 = sub i64 %1289, %1290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1277, i8* align 1 %1284, i64 %1291, i1 false)
  %1292 = load %0*, %0** %51, align 8
  call void @159(%0* %1292)
  %1293 = bitcast %0** %51 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1293) #13
  br label %1323

1294:                                             ; preds = %1229
  %1295 = load i64, i64* %44, align 8
  %1296 = call %0* @153(i64 1, i64 %1295, i64 0, i32 0)
  store %0* %1296, %0** %12, align 8
  %1297 = load %0*, %0** %12, align 8
  %1298 = getelementptr inbounds %0, %0* %1297, i32 0, i32 3
  %1299 = getelementptr inbounds [1 x i8], [1 x i8]* %1298, i32 0, i32 0
  %1300 = load %0*, %0** %50, align 8
  %1301 = getelementptr inbounds %0, %0* %1300, i32 0, i32 3
  %1302 = getelementptr inbounds [1 x i8], [1 x i8]* %1301, i32 0, i32 0
  %1303 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1299, i8* align 8 %1302, i64 %1303, i1 false)
  %1304 = load %0*, %0** %12, align 8
  %1305 = getelementptr inbounds %0, %0* %1304, i32 0, i32 3
  %1306 = getelementptr inbounds [1 x i8], [1 x i8]* %1305, i32 0, i32 0
  %1307 = load i64, i64* %10, align 8
  %1308 = getelementptr inbounds i8, i8* %1306, i64 %1307
  %1309 = load %0*, %0** %50, align 8
  %1310 = getelementptr inbounds %0, %0* %1309, i32 0, i32 3
  %1311 = getelementptr inbounds [1 x i8], [1 x i8]* %1310, i32 0, i32 0
  %1312 = load i64, i64* %10, align 8
  %1313 = getelementptr inbounds i8, i8* %1311, i64 %1312
  %1314 = load i64, i64* %9, align 8
  %1315 = getelementptr inbounds i8, i8* %1313, i64 %1314
  %1316 = load %0*, %0** %50, align 8
  %1317 = getelementptr inbounds %0, %0* %1316, i32 0, i32 2
  %1318 = load i64, i64* %1317, align 8
  %1319 = load i64, i64* %10, align 8
  %1320 = sub i64 %1318, %1319
  %1321 = load i64, i64* %9, align 8
  %1322 = sub i64 %1320, %1321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1308, i8* align 1 %1315, i64 %1322, i1 false)
  br label %1323

1323:                                             ; preds = %1294, %1238
  br label %1385

1324:                                             ; preds = %1190
  %1325 = load %18*, %18** %8, align 8
  %1326 = getelementptr inbounds %18, %18* %1325, i32 0, i32 0
  %1327 = bitcast %19* %1326 to %0**
  %1328 = load %0*, %0** %1327, align 8
  %1329 = getelementptr inbounds %0, %0* %1328, i32 0, i32 2
  %1330 = load i64, i64* %1329, align 8
  %1331 = load i64, i64* %44, align 8
  %1332 = add i64 %1331, %1330
  store i64 %1332, i64* %44, align 8
  %1333 = load i64, i64* %44, align 8
  %1334 = call %0* @153(i64 1, i64 %1333, i64 0, i32 0)
  store %0* %1334, %0** %12, align 8
  %1335 = load %0*, %0** %12, align 8
  %1336 = getelementptr inbounds %0, %0* %1335, i32 0, i32 3
  %1337 = getelementptr inbounds [1 x i8], [1 x i8]* %1336, i32 0, i32 0
  %1338 = load %0*, %0** %50, align 8
  %1339 = getelementptr inbounds %0, %0* %1338, i32 0, i32 3
  %1340 = getelementptr inbounds [1 x i8], [1 x i8]* %1339, i32 0, i32 0
  %1341 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1337, i8* align 8 %1340, i64 %1341, i1 false)
  %1342 = load %0*, %0** %12, align 8
  %1343 = getelementptr inbounds %0, %0* %1342, i32 0, i32 3
  %1344 = getelementptr inbounds [1 x i8], [1 x i8]* %1343, i32 0, i32 0
  %1345 = load i64, i64* %10, align 8
  %1346 = getelementptr inbounds i8, i8* %1344, i64 %1345
  %1347 = load %18*, %18** %8, align 8
  %1348 = getelementptr inbounds %18, %18* %1347, i32 0, i32 0
  %1349 = bitcast %19* %1348 to %0**
  %1350 = load %0*, %0** %1349, align 8
  %1351 = getelementptr inbounds %0, %0* %1350, i32 0, i32 3
  %1352 = getelementptr inbounds [1 x i8], [1 x i8]* %1351, i32 0, i32 0
  %1353 = load %18*, %18** %8, align 8
  %1354 = getelementptr inbounds %18, %18* %1353, i32 0, i32 0
  %1355 = bitcast %19* %1354 to %0**
  %1356 = load %0*, %0** %1355, align 8
  %1357 = getelementptr inbounds %0, %0* %1356, i32 0, i32 2
  %1358 = load i64, i64* %1357, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1346, i8* align 8 %1352, i64 %1358, i1 false)
  %1359 = load %0*, %0** %12, align 8
  %1360 = getelementptr inbounds %0, %0* %1359, i32 0, i32 3
  %1361 = getelementptr inbounds [1 x i8], [1 x i8]* %1360, i32 0, i32 0
  %1362 = load i64, i64* %10, align 8
  %1363 = getelementptr inbounds i8, i8* %1361, i64 %1362
  %1364 = load %18*, %18** %8, align 8
  %1365 = getelementptr inbounds %18, %18* %1364, i32 0, i32 0
  %1366 = bitcast %19* %1365 to %0**
  %1367 = load %0*, %0** %1366, align 8
  %1368 = getelementptr inbounds %0, %0* %1367, i32 0, i32 2
  %1369 = load i64, i64* %1368, align 8
  %1370 = getelementptr inbounds i8, i8* %1363, i64 %1369
  %1371 = load %0*, %0** %50, align 8
  %1372 = getelementptr inbounds %0, %0* %1371, i32 0, i32 3
  %1373 = getelementptr inbounds [1 x i8], [1 x i8]* %1372, i32 0, i32 0
  %1374 = load i64, i64* %10, align 8
  %1375 = getelementptr inbounds i8, i8* %1373, i64 %1374
  %1376 = load i64, i64* %9, align 8
  %1377 = getelementptr inbounds i8, i8* %1375, i64 %1376
  %1378 = load %0*, %0** %50, align 8
  %1379 = getelementptr inbounds %0, %0* %1378, i32 0, i32 2
  %1380 = load i64, i64* %1379, align 8
  %1381 = load i64, i64* %10, align 8
  %1382 = sub i64 %1380, %1381
  %1383 = load i64, i64* %9, align 8
  %1384 = sub i64 %1382, %1383
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1370, i8* align 1 %1377, i64 %1384, i1 false)
  br label %1385

1385:                                             ; preds = %1324, %1323
  %1386 = load %0*, %0** %12, align 8
  %1387 = getelementptr inbounds %0, %0* %1386, i32 0, i32 3
  %1388 = load %0*, %0** %12, align 8
  %1389 = getelementptr inbounds %0, %0* %1388, i32 0, i32 2
  %1390 = load i64, i64* %1389, align 8
  %1391 = getelementptr inbounds [1 x i8], [1 x i8]* %1387, i64 0, i64 %1390
  store i8 0, i8* %1391, align 1
  %1392 = load %0*, %0** %43, align 8
  %1393 = icmp ne %0* %1392, null
  br i1 %1393, label %1394, label %1418

1394:                                             ; preds = %1385
  %1395 = bitcast %18* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %1395) #13
  br label %1396

1396:                                             ; preds = %1394
  %1397 = bitcast %18** %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1397) #13
  store %18* %52, %18** %53, align 8
  %1398 = bitcast %0** %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1398) #13
  %1399 = load %0*, %0** %12, align 8
  store %0* %1399, %0** %54, align 8
  %1400 = load %0*, %0** %54, align 8
  %1401 = load %18*, %18** %53, align 8
  %1402 = getelementptr inbounds %18, %18* %1401, i32 0, i32 0
  %1403 = bitcast %19* %1402 to %0**
  store %0* %1400, %0** %1403, align 8
  %1404 = load %18*, %18** %53, align 8
  %1405 = getelementptr inbounds %18, %18* %1404, i32 0, i32 1
  %1406 = bitcast %20* %1405 to i32*
  store i32 5126, i32* %1406, align 8
  %1407 = bitcast %0** %54 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1407) #13
  %1408 = bitcast %18** %53 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1408) #13
  br label %1409

1409:                                             ; preds = %1396
  br label %1410

1410:                                             ; preds = %1409
  %1411 = load %18*, %18** %4, align 8
  %1412 = getelementptr inbounds %18, %18* %1411, i32 0, i32 0
  %1413 = bitcast %19* %1412 to %43**
  %1414 = load %43*, %43** %1413, align 8
  %1415 = load %0*, %0** %43, align 8
  %1416 = call %18* @171(%43* %1414, %0* %1415, %18* %52)
  %1417 = bitcast %18* %52 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %1417) #13
  br label %1423

1418:                                             ; preds = %1385
  %1419 = load %18*, %18** %4, align 8
  %1420 = load i64, i64* %45, align 8
  %1421 = load %0*, %0** %12, align 8
  %1422 = call i32 @add_index_str(%18* %1419, i64 %1420, %0* %1421)
  br label %1423

1423:                                             ; preds = %1418, %1410
  %1424 = load %0*, %0** %50, align 8
  call void @159(%0* %1424)
  %1425 = bitcast %0** %50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1425) #13
  store i32 0, i32* %32, align 4
  br label %1426

1426:                                             ; preds = %1423, %978
  %1427 = bitcast %18** %49 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1427) #13
  %1428 = load i32, i32* %32, align 4
  switch i32 %1428, label %1461 [
    i32 0, label %1429
    i32 36, label %1430
  ]

1429:                                             ; preds = %1426
  br label %1430

1430:                                             ; preds = %1429, %1426
  %1431 = load %45*, %45** %47, align 8
  %1432 = getelementptr inbounds %45, %45* %1431, i32 1
  store %45* %1432, %45** %47, align 8
  br label %960

1433:                                             ; preds = %960
  %1434 = bitcast %45** %48 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1434) #13
  %1435 = bitcast %45** %47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1435) #13
  %1436 = bitcast %43** %46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1436) #13
  br label %1437

1437:                                             ; preds = %1433
  br label %1438

1438:                                             ; preds = %1437
  %1439 = bitcast i64* %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1439) #13
  %1440 = bitcast i64* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1440) #13
  %1441 = bitcast %0** %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1441) #13
  br label %1442

1442:                                             ; preds = %1438
  store i32 0, i32* %32, align 4
  br label %1443

1443:                                             ; preds = %1442, %936, %895, %627, %565, %405
  %1444 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1444) #13
  %1445 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1445) #13
  %1446 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1446) #13
  %1447 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1447) #13
  %1448 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1448) #13
  %1449 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1449) #13
  %1450 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1450) #13
  %1451 = bitcast %0** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1451) #13
  %1452 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1452) #13
  %1453 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1453) #13
  %1454 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1454) #13
  %1455 = bitcast %18** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1455) #13
  %1456 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1456) #13
  %1457 = bitcast %18** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1457) #13
  %1458 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1458) #13
  %1459 = load i32, i32* %32, align 4
  switch i32 %1459, label %1461 [
    i32 0, label %1460
    i32 1, label %1460
  ]

1460:                                             ; preds = %1443, %1443
  ret void

1461:                                             ; preds = %1443, %1426
  unreachable
}

declare dso_local void @_convert_to_string(%18*) #1

declare dso_local void @convert_to_long(%18*) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @170(%18* %0) #5 {
  %2 = alloca %18*, align 8
  store %18* %0, %18** %2, align 8
  %3 = load %18*, %18** %2, align 8
  %4 = call zeroext i8 @157(%18* %3)
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = load %18*, %18** %2, align 8
  %9 = getelementptr inbounds %18, %18* %8, i32 0, i32 0
  %10 = bitcast %19* %9 to i64*
  %11 = load i64, i64* %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = load %18*, %18** %2, align 8
  %14 = call i64 @_zval_get_long_func(%18* %13)
  br label %15

15:                                               ; preds = %12, %7
  %16 = phi i64 [ %11, %7 ], [ %14, %12 ]
  ret i64 %16
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %18* @171(%43* %0, %0* %1, %18* %2) #5 {
  %4 = alloca %18*, align 8
  %5 = alloca %43*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca %18*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store %43* %0, %43** %5, align 8
  store %0* %1, %0** %6, align 8
  store %18* %2, %18** %7, align 8
  %10 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %0*, %0** %6, align 8
  %12 = getelementptr inbounds %0, %0* %11, i32 0, i32 3
  %13 = getelementptr inbounds [1 x i8], [1 x i8]* %12, i32 0, i32 0
  %14 = load %0*, %0** %6, align 8
  %15 = getelementptr inbounds %0, %0* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = call i32 @189(i8* %13, i64 %16, i64* %8)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %3
  %20 = load %43*, %43** %5, align 8
  %21 = load i64, i64* %8, align 8
  %22 = load %18*, %18** %7, align 8
  %23 = call %18* @_zend_hash_index_update(%43* %20, i64 %21, %18* %22)
  store %18* %23, %18** %4, align 8
  store i32 1, i32* %9, align 4
  br label %29

24:                                               ; preds = %3
  %25 = load %43*, %43** %5, align 8
  %26 = load %0*, %0** %6, align 8
  %27 = load %18*, %18** %7, align 8
  %28 = call %18* @_zend_hash_update(%43* %25, %0* %26, %18* %27)
  store %18* %28, %18** %4, align 8
  store i32 1, i32* %9, align 4
  br label %29

29:                                               ; preds = %24, %19
  %30 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #13
  %31 = load %18*, %18** %4, align 8
  ret %18* %31
}

declare dso_local i32 @add_index_str(%18*, i64, %0*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_quotemeta(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %0*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %18*, align 8
  %17 = alloca %18*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %18*, align 8
  %25 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %26 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %9) #13
  %30 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  br label %31

31:                                               ; preds = %2
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 0, i32* %11, align 4
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  store i32 1, i32* %12, align 4
  %34 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  store i32 1, i32* %13, align 4
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  %36 = load %14*, %14** %3, align 8
  %37 = getelementptr inbounds %14, %14* %36, i32 0, i32 4
  %38 = getelementptr inbounds %18, %18* %37, i32 0, i32 2
  %39 = bitcast %21* %38 to i32*
  %40 = load i32, i32* %39, align 4
  store i32 %40, i32* %14, align 4
  %41 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  %42 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  store %18* null, %18** %17, align 8
  %44 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  store i32 0, i32* %18, align 4
  %45 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  store i8* null, i8** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  store i8 0, i8* %21, align 1
  %46 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  store i32 0, i32* %22, align 4
  %47 = load i32, i32* %15, align 4
  %48 = load %18*, %18** %16, align 8
  %49 = load %18*, %18** %17, align 8
  %50 = load i32, i32* %18, align 4
  %51 = load i8*, i8** %19, align 8
  %52 = load i8, i8* %20, align 1
  %53 = load i8, i8* %21, align 1
  br label %54

54:                                               ; preds = %31
  %55 = load i32, i32* %14, align 4
  %56 = load i32, i32* %12, align 4
  %57 = icmp slt i32 %55, %56
  %58 = xor i1 %57, true
  %59 = xor i1 %58, true
  %60 = zext i1 %59 to i32
  %61 = sext i32 %60 to i64
  %62 = call i64 @llvm.expect.i64(i64 %61, i64 0)
  %63 = icmp ne i64 %62, 0
  br i1 %63, label %83, label %64

64:                                               ; preds = %54
  %65 = load i32, i32* %14, align 4
  %66 = load i32, i32* %13, align 4
  %67 = icmp sgt i32 %65, %66
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 0)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %87

74:                                               ; preds = %64
  %75 = load i32, i32* %13, align 4
  %76 = icmp sge i32 %75, 0
  %77 = xor i1 %76, true
  %78 = xor i1 %77, true
  %79 = zext i1 %78 to i32
  %80 = sext i32 %79 to i64
  %81 = call i64 @llvm.expect.i64(i64 %80, i64 1)
  %82 = icmp ne i64 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %74, %54
  %84 = load i32, i32* %14, align 4
  %85 = load i32, i32* %12, align 4
  %86 = load i32, i32* %13, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %84, i32 %85, i32 %86)
  store i32 1, i32* %22, align 4
  br label %162

87:                                               ; preds = %74, %64
  store i32 0, i32* %15, align 4
  %88 = load %14*, %14** %3, align 8
  %89 = bitcast %14* %88 to %18*
  %90 = getelementptr inbounds %18, %18* %89, i64 4
  store %18* %90, %18** %16, align 8
  %91 = load i32, i32* %15, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %15, align 4
  br label %93

93:                                               ; preds = %87
  %94 = load i32, i32* %15, align 4
  %95 = load i32, i32* %12, align 4
  %96 = icmp sle i32 %94, %95
  br i1 %96, label %101, label %97

97:                                               ; preds = %93
  %98 = load i8, i8* %21, align 1
  %99 = zext i8 %98 to i32
  %100 = icmp eq i32 %99, 1
  br label %101

101:                                              ; preds = %97, %93
  %102 = phi i1 [ true, %93 ], [ %100, %97 ]
  %103 = xor i1 %102, true
  %104 = zext i1 %103 to i32
  %105 = sext i32 %104 to i64
  %106 = call i64 @llvm.expect.i64(i64 %105, i64 0)
  %107 = icmp ne i64 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %101
  unreachable

109:                                              ; preds = %101
  br label %110

110:                                              ; preds = %109
  br label %111

111:                                              ; preds = %110
  br label %112

112:                                              ; preds = %111
  %113 = load i32, i32* %15, align 4
  %114 = load i32, i32* %12, align 4
  %115 = icmp sgt i32 %113, %114
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load i8, i8* %21, align 1
  %118 = zext i8 %117 to i32
  %119 = icmp eq i32 %118, 0
  br label %120

120:                                              ; preds = %116, %112
  %121 = phi i1 [ true, %112 ], [ %119, %116 ]
  %122 = xor i1 %121, true
  %123 = zext i1 %122 to i32
  %124 = sext i32 %123 to i64
  %125 = call i64 @llvm.expect.i64(i64 %124, i64 0)
  %126 = icmp ne i64 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %120
  unreachable

128:                                              ; preds = %120
  br label %129

129:                                              ; preds = %128
  br label %130

130:                                              ; preds = %129
  %131 = load i8, i8* %21, align 1
  %132 = icmp ne i8 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %130
  %134 = load i32, i32* %15, align 4
  %135 = load i32, i32* %14, align 4
  %136 = icmp sgt i32 %134, %135
  %137 = xor i1 %136, true
  %138 = xor i1 %137, true
  %139 = zext i1 %138 to i32
  %140 = sext i32 %139 to i64
  %141 = call i64 @llvm.expect.i64(i64 %140, i64 0)
  %142 = icmp ne i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %133
  br label %162

144:                                              ; preds = %133
  br label %145

145:                                              ; preds = %144, %130
  %146 = load %18*, %18** %16, align 8
  %147 = getelementptr inbounds %18, %18* %146, i32 1
  store %18* %147, %18** %16, align 8
  %148 = load %18*, %18** %16, align 8
  store %18* %148, %18** %17, align 8
  %149 = load %18*, %18** %17, align 8
  %150 = call i32 @143(%18* %149, %0** %5, i32 0)
  %151 = icmp ne i32 %150, 0
  %152 = xor i1 %151, true
  %153 = xor i1 %152, true
  %154 = xor i1 %153, true
  %155 = zext i1 %154 to i32
  %156 = sext i32 %155 to i64
  %157 = call i64 @llvm.expect.i64(i64 %156, i64 0)
  %158 = icmp ne i64 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %145
  store i32 2, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %162

160:                                              ; preds = %145
  br label %161

161:                                              ; preds = %160
  br label %162

162:                                              ; preds = %161, %159, %143, %83
  %163 = load i32, i32* %22, align 4
  %164 = icmp ne i32 %163, 0
  %165 = xor i1 %164, true
  %166 = xor i1 %165, true
  %167 = zext i1 %166 to i32
  %168 = sext i32 %167 to i64
  %169 = call i64 @llvm.expect.i64(i64 %168, i64 0)
  %170 = icmp ne i64 %169, 0
  br i1 %170, label %171, label %194

171:                                              ; preds = %162
  %172 = load i32, i32* %22, align 4
  %173 = icmp eq i32 %172, 2
  br i1 %173, label %174, label %177

174:                                              ; preds = %171
  %175 = load i32, i32* %15, align 4
  %176 = load i8*, i8** %19, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %175, i8* %176)
  br label %193

177:                                              ; preds = %171
  %178 = load i32, i32* %22, align 4
  %179 = icmp eq i32 %178, 3
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %15, align 4
  %182 = load i8*, i8** %19, align 8
  %183 = load %18*, %18** %17, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %181, i8* %182, %18* %183)
  br label %192

184:                                              ; preds = %177
  %185 = load i32, i32* %22, align 4
  %186 = icmp eq i32 %185, 4
  br i1 %186, label %187, label %191

187:                                              ; preds = %184
  %188 = load i32, i32* %15, align 4
  %189 = load i32, i32* %18, align 4
  %190 = load %18*, %18** %17, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %188, i32 %189, %18* %190)
  br label %191

191:                                              ; preds = %187, %184
  br label %192

192:                                              ; preds = %191, %180
  br label %193

193:                                              ; preds = %192, %174
  store i32 1, i32* %23, align 4
  br label %195

194:                                              ; preds = %162
  store i32 0, i32* %23, align 4
  br label %195

195:                                              ; preds = %194, %193
  %196 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #13
  %197 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #13
  %198 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #13
  %200 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #13
  %201 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #13
  %202 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #13
  %203 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #13
  %204 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #13
  %205 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %205) #13
  %206 = load i32, i32* %23, align 4
  switch i32 %206, label %286 [
    i32 0, label %207
  ]

207:                                              ; preds = %195
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = load %0*, %0** %5, align 8
  %211 = getelementptr inbounds %0, %0* %210, i32 0, i32 3
  %212 = getelementptr inbounds [1 x i8], [1 x i8]* %211, i32 0, i32 0
  %213 = load %0*, %0** %5, align 8
  %214 = getelementptr inbounds %0, %0* %213, i32 0, i32 2
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds i8, i8* %212, i64 %215
  store i8* %216, i8** %6, align 8
  %217 = load %0*, %0** %5, align 8
  %218 = getelementptr inbounds %0, %0* %217, i32 0, i32 3
  %219 = getelementptr inbounds [1 x i8], [1 x i8]* %218, i32 0, i32 0
  %220 = load i8*, i8** %6, align 8
  %221 = icmp eq i8* %219, %220
  br i1 %221, label %222, label %229

222:                                              ; preds = %209
  br label %223

223:                                              ; preds = %222
  %224 = load %18*, %18** %4, align 8
  %225 = getelementptr inbounds %18, %18* %224, i32 0, i32 1
  %226 = bitcast %20* %225 to i32*
  store i32 2, i32* %226, align 8
  br label %227

227:                                              ; preds = %223
  br label %228

228:                                              ; preds = %227
  store i32 1, i32* %23, align 4
  br label %286

229:                                              ; preds = %209
  %230 = load %0*, %0** %5, align 8
  %231 = getelementptr inbounds %0, %0* %230, i32 0, i32 2
  %232 = load i64, i64* %231, align 8
  %233 = call %0* @153(i64 2, i64 %232, i64 0, i32 0)
  store %0* %233, %0** %10, align 8
  %234 = load %0*, %0** %5, align 8
  %235 = getelementptr inbounds %0, %0* %234, i32 0, i32 3
  %236 = getelementptr inbounds [1 x i8], [1 x i8]* %235, i32 0, i32 0
  store i8* %236, i8** %7, align 8
  %237 = load %0*, %0** %10, align 8
  %238 = getelementptr inbounds %0, %0* %237, i32 0, i32 3
  %239 = getelementptr inbounds [1 x i8], [1 x i8]* %238, i32 0, i32 0
  store i8* %239, i8** %8, align 8
  br label %240

240:                                              ; preds = %257, %229
  %241 = load i8*, i8** %7, align 8
  %242 = load i8*, i8** %6, align 8
  %243 = icmp ne i8* %241, %242
  br i1 %243, label %244, label %260

244:                                              ; preds = %240
  %245 = load i8*, i8** %7, align 8
  %246 = load i8, i8* %245, align 1
  store i8 %246, i8* %9, align 1
  %247 = load i8, i8* %9, align 1
  %248 = sext i8 %247 to i32
  switch i32 %248, label %252 [
    i32 46, label %249
    i32 92, label %249
    i32 43, label %249
    i32 42, label %249
    i32 63, label %249
    i32 91, label %249
    i32 94, label %249
    i32 93, label %249
    i32 36, label %249
    i32 40, label %249
    i32 41, label %249
  ]

249:                                              ; preds = %244, %244, %244, %244, %244, %244, %244, %244, %244, %244, %244
  %250 = load i8*, i8** %8, align 8
  %251 = getelementptr inbounds i8, i8* %250, i32 1
  store i8* %251, i8** %8, align 8
  store i8 92, i8* %250, align 1
  br label %252

252:                                              ; preds = %244, %249
  %253 = load i8, i8* %9, align 1
  %254 = load i8*, i8** %8, align 8
  %255 = getelementptr inbounds i8, i8* %254, i32 1
  store i8* %255, i8** %8, align 8
  store i8 %253, i8* %254, align 1
  br label %256

256:                                              ; preds = %252
  br label %257

257:                                              ; preds = %256
  %258 = load i8*, i8** %7, align 8
  %259 = getelementptr inbounds i8, i8* %258, i32 1
  store i8* %259, i8** %7, align 8
  br label %240

260:                                              ; preds = %240
  %261 = load i8*, i8** %8, align 8
  store i8 0, i8* %261, align 1
  br label %262

262:                                              ; preds = %260
  %263 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %263) #13
  %264 = load %18*, %18** %4, align 8
  store %18* %264, %18** %24, align 8
  %265 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %265) #13
  %266 = load %0*, %0** %10, align 8
  %267 = load i8*, i8** %8, align 8
  %268 = load %0*, %0** %10, align 8
  %269 = getelementptr inbounds %0, %0* %268, i32 0, i32 3
  %270 = getelementptr inbounds [1 x i8], [1 x i8]* %269, i32 0, i32 0
  %271 = ptrtoint i8* %267 to i64
  %272 = ptrtoint i8* %270 to i64
  %273 = sub i64 %271, %272
  %274 = call %0* @155(%0* %266, i64 %273, i32 0)
  store %0* %274, %0** %25, align 8
  %275 = load %0*, %0** %25, align 8
  %276 = load %18*, %18** %24, align 8
  %277 = getelementptr inbounds %18, %18* %276, i32 0, i32 0
  %278 = bitcast %19* %277 to %0**
  store %0* %275, %0** %278, align 8
  %279 = load %18*, %18** %24, align 8
  %280 = getelementptr inbounds %18, %18* %279, i32 0, i32 1
  %281 = bitcast %20* %280 to i32*
  store i32 5126, i32* %281, align 8
  %282 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %282) #13
  %283 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %283) #13
  br label %284

284:                                              ; preds = %262
  br label %285

285:                                              ; preds = %284
  store i32 1, i32* %23, align 4
  br label %286

286:                                              ; preds = %285, %228, %195
  %287 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %287) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #13
  %288 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %288) #13
  %289 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %289) #13
  %290 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %290) #13
  %291 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %291) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_ord(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %21 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  br label %23

23:                                               ; preds = %2
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  store i32 0, i32* %7, align 4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 1, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  %28 = load %14*, %14** %3, align 8
  %29 = getelementptr inbounds %14, %14* %28, i32 0, i32 4
  %30 = getelementptr inbounds %18, %18* %29, i32 0, i32 2
  %31 = bitcast %21* %30 to i32*
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %10, align 4
  %33 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  %34 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  store %18* null, %18** %13, align 8
  %36 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 0, i32* %14, align 4
  %37 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  %38 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 0, i32* %18, align 4
  %39 = load i32, i32* %11, align 4
  %40 = load %18*, %18** %12, align 8
  %41 = load %18*, %18** %13, align 8
  %42 = load i32, i32* %14, align 4
  %43 = load i8*, i8** %15, align 8
  %44 = load i8, i8* %16, align 1
  %45 = load i8, i8* %17, align 1
  br label %46

46:                                               ; preds = %23
  %47 = load i32, i32* %10, align 4
  %48 = load i32, i32* %8, align 4
  %49 = icmp slt i32 %47, %48
  %50 = xor i1 %49, true
  %51 = xor i1 %50, true
  %52 = zext i1 %51 to i32
  %53 = sext i32 %52 to i64
  %54 = call i64 @llvm.expect.i64(i64 %53, i64 0)
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %75, label %56

56:                                               ; preds = %46
  %57 = load i32, i32* %10, align 4
  %58 = load i32, i32* %9, align 4
  %59 = icmp sgt i32 %57, %58
  %60 = xor i1 %59, true
  %61 = xor i1 %60, true
  %62 = zext i1 %61 to i32
  %63 = sext i32 %62 to i64
  %64 = call i64 @llvm.expect.i64(i64 %63, i64 0)
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %66, label %79

66:                                               ; preds = %56
  %67 = load i32, i32* %9, align 4
  %68 = icmp sge i32 %67, 0
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 1)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %66, %46
  %76 = load i32, i32* %10, align 4
  %77 = load i32, i32* %8, align 4
  %78 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %76, i32 %77, i32 %78)
  store i32 1, i32* %18, align 4
  br label %154

79:                                               ; preds = %66, %56
  store i32 0, i32* %11, align 4
  %80 = load %14*, %14** %3, align 8
  %81 = bitcast %14* %80 to %18*
  %82 = getelementptr inbounds %18, %18* %81, i64 4
  store %18* %82, %18** %12, align 8
  %83 = load i32, i32* %11, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %11, align 4
  br label %85

85:                                               ; preds = %79
  %86 = load i32, i32* %11, align 4
  %87 = load i32, i32* %8, align 4
  %88 = icmp sle i32 %86, %87
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = load i8, i8* %17, align 1
  %91 = zext i8 %90 to i32
  %92 = icmp eq i32 %91, 1
  br label %93

93:                                               ; preds = %89, %85
  %94 = phi i1 [ true, %85 ], [ %92, %89 ]
  %95 = xor i1 %94, true
  %96 = zext i1 %95 to i32
  %97 = sext i32 %96 to i64
  %98 = call i64 @llvm.expect.i64(i64 %97, i64 0)
  %99 = icmp ne i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %93
  unreachable

101:                                              ; preds = %93
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  %105 = load i32, i32* %11, align 4
  %106 = load i32, i32* %8, align 4
  %107 = icmp sgt i32 %105, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %104
  %109 = load i8, i8* %17, align 1
  %110 = zext i8 %109 to i32
  %111 = icmp eq i32 %110, 0
  br label %112

112:                                              ; preds = %108, %104
  %113 = phi i1 [ true, %104 ], [ %111, %108 ]
  %114 = xor i1 %113, true
  %115 = zext i1 %114 to i32
  %116 = sext i32 %115 to i64
  %117 = call i64 @llvm.expect.i64(i64 %116, i64 0)
  %118 = icmp ne i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %112
  unreachable

120:                                              ; preds = %112
  br label %121

121:                                              ; preds = %120
  br label %122

122:                                              ; preds = %121
  %123 = load i8, i8* %17, align 1
  %124 = icmp ne i8 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %122
  %126 = load i32, i32* %11, align 4
  %127 = load i32, i32* %10, align 4
  %128 = icmp sgt i32 %126, %127
  %129 = xor i1 %128, true
  %130 = xor i1 %129, true
  %131 = zext i1 %130 to i32
  %132 = sext i32 %131 to i64
  %133 = call i64 @llvm.expect.i64(i64 %132, i64 0)
  %134 = icmp ne i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %125
  br label %154

136:                                              ; preds = %125
  br label %137

137:                                              ; preds = %136, %122
  %138 = load %18*, %18** %12, align 8
  %139 = getelementptr inbounds %18, %18* %138, i32 1
  store %18* %139, %18** %12, align 8
  %140 = load %18*, %18** %12, align 8
  store %18* %140, %18** %13, align 8
  %141 = load %18*, %18** %13, align 8
  %142 = call i32 @151(%18* %141, i8** %5, i64* %6, i32 0)
  %143 = icmp ne i32 %142, 0
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = zext i1 %146 to i32
  %148 = sext i32 %147 to i64
  %149 = call i64 @llvm.expect.i64(i64 %148, i64 0)
  %150 = icmp ne i64 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %137
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %154

152:                                              ; preds = %137
  br label %153

153:                                              ; preds = %152
  br label %154

154:                                              ; preds = %153, %151, %135, %75
  %155 = load i32, i32* %18, align 4
  %156 = icmp ne i32 %155, 0
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = zext i1 %158 to i32
  %160 = sext i32 %159 to i64
  %161 = call i64 @llvm.expect.i64(i64 %160, i64 0)
  %162 = icmp ne i64 %161, 0
  br i1 %162, label %163, label %186

163:                                              ; preds = %154
  %164 = load i32, i32* %18, align 4
  %165 = icmp eq i32 %164, 2
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = load i32, i32* %11, align 4
  %168 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %167, i8* %168)
  br label %185

169:                                              ; preds = %163
  %170 = load i32, i32* %18, align 4
  %171 = icmp eq i32 %170, 3
  br i1 %171, label %172, label %176

172:                                              ; preds = %169
  %173 = load i32, i32* %11, align 4
  %174 = load i8*, i8** %15, align 8
  %175 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %173, i8* %174, %18* %175)
  br label %184

176:                                              ; preds = %169
  %177 = load i32, i32* %18, align 4
  %178 = icmp eq i32 %177, 4
  br i1 %178, label %179, label %183

179:                                              ; preds = %176
  %180 = load i32, i32* %11, align 4
  %181 = load i32, i32* %14, align 4
  %182 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %180, i32 %181, %18* %182)
  br label %183

183:                                              ; preds = %179, %176
  br label %184

184:                                              ; preds = %183, %172
  br label %185

185:                                              ; preds = %184, %166
  store i32 1, i32* %19, align 4
  br label %187

186:                                              ; preds = %154
  store i32 0, i32* %19, align 4
  br label %187

187:                                              ; preds = %186, %185
  %188 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %188) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %189 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #13
  %190 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %190) #13
  %191 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #13
  %192 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #13
  %194 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = load i32, i32* %19, align 4
  switch i32 %198, label %215 [
    i32 0, label %199
  ]

199:                                              ; preds = %187
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  %202 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #13
  %203 = load %18*, %18** %4, align 8
  store %18* %203, %18** %20, align 8
  %204 = load i8*, i8** %5, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 0
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i64
  %208 = load %18*, %18** %20, align 8
  %209 = getelementptr inbounds %18, %18* %208, i32 0, i32 0
  %210 = bitcast %19* %209 to i64*
  store i64 %207, i64* %210, align 8
  %211 = load %18*, %18** %20, align 8
  %212 = getelementptr inbounds %18, %18* %211, i32 0, i32 1
  %213 = bitcast %20* %212 to i32*
  store i32 4, i32* %213, align 8
  %214 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %214) #13
  store i32 1, i32* %19, align 4
  br label %215

215:                                              ; preds = %201, %187
  %216 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %216) #13
  %217 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %217) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_chr(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %21 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = load %14*, %14** %3, align 8
  %23 = getelementptr inbounds %14, %14* %22, i32 0, i32 4
  %24 = getelementptr inbounds %18, %18* %23, i32 0, i32 2
  %25 = bitcast %21* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %29

28:                                               ; preds = %2
  call void @zend_wrong_param_count()
  store i32 1, i32* %6, align 4
  br label %201

29:                                               ; preds = %2
  br label %30

30:                                               ; preds = %29
  %31 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 2, i32* %7, align 4
  %32 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 1, i32* %8, align 4
  %33 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  store i32 1, i32* %9, align 4
  %34 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = load %14*, %14** %3, align 8
  %36 = getelementptr inbounds %14, %14* %35, i32 0, i32 4
  %37 = getelementptr inbounds %18, %18* %36, i32 0, i32 2
  %38 = bitcast %21* %37 to i32*
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %10, align 4
  %40 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  %41 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  store %18* null, %18** %13, align 8
  %43 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %14, align 4
  %44 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  %45 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #13
  store i32 0, i32* %18, align 4
  %46 = load i32, i32* %11, align 4
  %47 = load %18*, %18** %12, align 8
  %48 = load %18*, %18** %13, align 8
  %49 = load i32, i32* %14, align 4
  %50 = load i8*, i8** %15, align 8
  %51 = load i8, i8* %16, align 1
  %52 = load i8, i8* %17, align 1
  br label %53

53:                                               ; preds = %30
  %54 = load i32, i32* %10, align 4
  %55 = load i32, i32* %8, align 4
  %56 = icmp slt i32 %54, %55
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 0)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %82, label %63

63:                                               ; preds = %53
  %64 = load i32, i32* %10, align 4
  %65 = load i32, i32* %9, align 4
  %66 = icmp sgt i32 %64, %65
  %67 = xor i1 %66, true
  %68 = xor i1 %67, true
  %69 = zext i1 %68 to i32
  %70 = sext i32 %69 to i64
  %71 = call i64 @llvm.expect.i64(i64 %70, i64 0)
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %63
  %74 = load i32, i32* %9, align 4
  %75 = icmp sge i32 %74, 0
  %76 = xor i1 %75, true
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = call i64 @llvm.expect.i64(i64 %79, i64 1)
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %73, %53
  store i32 1, i32* %18, align 4
  br label %158

83:                                               ; preds = %73, %63
  store i32 0, i32* %11, align 4
  %84 = load %14*, %14** %3, align 8
  %85 = bitcast %14* %84 to %18*
  %86 = getelementptr inbounds %18, %18* %85, i64 4
  store %18* %86, %18** %12, align 8
  %87 = load i32, i32* %11, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %11, align 4
  br label %89

89:                                               ; preds = %83
  %90 = load i32, i32* %11, align 4
  %91 = load i32, i32* %8, align 4
  %92 = icmp sle i32 %90, %91
  br i1 %92, label %97, label %93

93:                                               ; preds = %89
  %94 = load i8, i8* %17, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp eq i32 %95, 1
  br label %97

97:                                               ; preds = %93, %89
  %98 = phi i1 [ true, %89 ], [ %96, %93 ]
  %99 = xor i1 %98, true
  %100 = zext i1 %99 to i32
  %101 = sext i32 %100 to i64
  %102 = call i64 @llvm.expect.i64(i64 %101, i64 0)
  %103 = icmp ne i64 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %97
  unreachable

105:                                              ; preds = %97
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %11, align 4
  %110 = load i32, i32* %8, align 4
  %111 = icmp sgt i32 %109, %110
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  %113 = load i8, i8* %17, align 1
  %114 = zext i8 %113 to i32
  %115 = icmp eq i32 %114, 0
  br label %116

116:                                              ; preds = %112, %108
  %117 = phi i1 [ true, %108 ], [ %115, %112 ]
  %118 = xor i1 %117, true
  %119 = zext i1 %118 to i32
  %120 = sext i32 %119 to i64
  %121 = call i64 @llvm.expect.i64(i64 %120, i64 0)
  %122 = icmp ne i64 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %116
  unreachable

124:                                              ; preds = %116
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  %127 = load i8, i8* %17, align 1
  %128 = icmp ne i8 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %126
  %130 = load i32, i32* %11, align 4
  %131 = load i32, i32* %10, align 4
  %132 = icmp sgt i32 %130, %131
  %133 = xor i1 %132, true
  %134 = xor i1 %133, true
  %135 = zext i1 %134 to i32
  %136 = sext i32 %135 to i64
  %137 = call i64 @llvm.expect.i64(i64 %136, i64 0)
  %138 = icmp ne i64 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %129
  br label %158

140:                                              ; preds = %129
  br label %141

141:                                              ; preds = %140, %126
  %142 = load %18*, %18** %12, align 8
  %143 = getelementptr inbounds %18, %18* %142, i32 1
  store %18* %143, %18** %12, align 8
  %144 = load %18*, %18** %12, align 8
  store %18* %144, %18** %13, align 8
  %145 = load %18*, %18** %13, align 8
  %146 = call i32 @147(%18* %145, i64* %5, i8* %16, i32 0, i32 0)
  %147 = icmp ne i32 %146, 0
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = zext i1 %150 to i32
  %152 = sext i32 %151 to i64
  %153 = call i64 @llvm.expect.i64(i64 %152, i64 0)
  %154 = icmp ne i64 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %141
  store i32 0, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %158

156:                                              ; preds = %141
  br label %157

157:                                              ; preds = %156
  br label %158

158:                                              ; preds = %157, %155, %139, %82
  %159 = load i32, i32* %18, align 4
  %160 = icmp ne i32 %159, 0
  %161 = xor i1 %160, true
  %162 = xor i1 %161, true
  %163 = zext i1 %162 to i32
  %164 = sext i32 %163 to i64
  %165 = call i64 @llvm.expect.i64(i64 %164, i64 0)
  %166 = icmp ne i64 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %158
  store i64 0, i64* %5, align 8
  br label %168

168:                                              ; preds = %167, %158
  %169 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %169) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %170 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #13
  %171 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %171) #13
  %172 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %172) #13
  %173 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %173) #13
  %174 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %174) #13
  %175 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %175) #13
  %176 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %176) #13
  %177 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %177) #13
  %178 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %178) #13
  br label %179

179:                                              ; preds = %168
  br label %180

180:                                              ; preds = %179
  %181 = load i64, i64* %5, align 8
  %182 = and i64 %181, 255
  store i64 %182, i64* %5, align 8
  br label %183

183:                                              ; preds = %180
  %184 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %184) #13
  %185 = load %18*, %18** %4, align 8
  store %18* %185, %18** %19, align 8
  %186 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %186) #13
  %187 = load i64, i64* %5, align 8
  %188 = getelementptr inbounds [256 x %0*], [256 x %0*]* @zend_one_char_string, i64 0, i64 %187
  %189 = load %0*, %0** %188, align 8
  store %0* %189, %0** %20, align 8
  %190 = load %0*, %0** %20, align 8
  %191 = load %18*, %18** %19, align 8
  %192 = getelementptr inbounds %18, %18* %191, i32 0, i32 0
  %193 = bitcast %19* %192 to %0**
  store %0* %190, %0** %193, align 8
  %194 = load %18*, %18** %19, align 8
  %195 = getelementptr inbounds %18, %18* %194, i32 0, i32 1
  %196 = bitcast %20* %195 to i32*
  store i32 6, i32* %196, align 8
  %197 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #13
  %198 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #13
  br label %199

199:                                              ; preds = %183
  br label %200

200:                                              ; preds = %199
  store i32 0, i32* %6, align 4
  br label %201

201:                                              ; preds = %200, %28
  %202 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %202) #13
  %203 = load i32, i32* %6, align 4
  switch i32 %203, label %205 [
    i32 0, label %204
    i32 1, label %204
  ]

204:                                              ; preds = %201, %201
  ret void

205:                                              ; preds = %201
  unreachable
}

declare dso_local void @zend_wrong_param_count() #1

; Function Attrs: nounwind uwtable
define hidden void @zif_ucfirst(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %18*, align 8
  %12 = alloca %18*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  %21 = alloca %18*, align 8
  %22 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %23 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 0, i32* %6, align 4
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 1, i32* %7, align 4
  %27 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 1, i32* %8, align 4
  %28 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %9, align 4
  %34 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store %18* null, %18** %12, align 8
  %37 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %13, align 4
  %38 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %39 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %17, align 4
  %40 = load i32, i32* %10, align 4
  %41 = load %18*, %18** %11, align 8
  %42 = load %18*, %18** %12, align 8
  %43 = load i32, i32* %13, align 4
  %44 = load i8*, i8** %14, align 8
  %45 = load i8, i8* %15, align 1
  %46 = load i8, i8* %16, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %9, align 4
  %49 = load i32, i32* %7, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* %8, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %8, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %9, align 4
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %8, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %17, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %10, align 4
  %81 = load %14*, %14** %3, align 8
  %82 = bitcast %14* %81 to %18*
  %83 = getelementptr inbounds %18, %18* %82, i64 4
  store %18* %83, %18** %11, align 8
  %84 = load i32, i32* %10, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %10, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %10, align 4
  %88 = load i32, i32* %7, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %16, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %10, align 4
  %107 = load i32, i32* %7, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %16, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %16, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %10, align 4
  %128 = load i32, i32* %9, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %18*, %18** %11, align 8
  %140 = getelementptr inbounds %18, %18* %139, i32 1
  store %18* %140, %18** %11, align 8
  %141 = load %18*, %18** %11, align 8
  store %18* %141, %18** %12, align 8
  %142 = load %18*, %18** %12, align 8
  %143 = call i32 @143(%18* %142, %0** %5, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %13, align 4
  store i32 4, i32* %17, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %17, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %17, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %10, align 4
  %169 = load i8*, i8** %14, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %17, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %10, align 4
  %175 = load i8*, i8** %14, align 8
  %176 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %18* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %17, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %10, align 4
  %182 = load i32, i32* %13, align 4
  %183 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %18* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %18, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %18, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %190 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #13
  %192 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = load i32, i32* %18, align 4
  switch i32 %199, label %259 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load %0*, %0** %5, align 8
  %204 = getelementptr inbounds %0, %0* %203, i32 0, i32 2
  %205 = load i64, i64* %204, align 8
  %206 = icmp ne i64 %205, 0
  br i1 %206, label %227, label %207

207:                                              ; preds = %202
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %210) #13
  %211 = load %18*, %18** %4, align 8
  store %18* %211, %18** %19, align 8
  %212 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %212) #13
  %213 = load %0*, %0** @zend_empty_string, align 8
  store %0* %213, %0** %20, align 8
  %214 = load %0*, %0** %20, align 8
  %215 = load %18*, %18** %19, align 8
  %216 = getelementptr inbounds %18, %18* %215, i32 0, i32 0
  %217 = bitcast %19* %216 to %0**
  store %0* %214, %0** %217, align 8
  %218 = load %18*, %18** %19, align 8
  %219 = getelementptr inbounds %18, %18* %218, i32 0, i32 1
  %220 = bitcast %20* %219 to i32*
  store i32 6, i32* %220, align 8
  %221 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #13
  %222 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #13
  br label %223

223:                                              ; preds = %209
  br label %224

224:                                              ; preds = %223
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225
  store i32 1, i32* %18, align 4
  br label %259

227:                                              ; preds = %202
  br label %228

228:                                              ; preds = %227
  br label %229

229:                                              ; preds = %228
  %230 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %230) #13
  %231 = load %18*, %18** %4, align 8
  store %18* %231, %18** %21, align 8
  %232 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %232) #13
  %233 = load %0*, %0** %5, align 8
  %234 = getelementptr inbounds %0, %0* %233, i32 0, i32 3
  %235 = getelementptr inbounds [1 x i8], [1 x i8]* %234, i32 0, i32 0
  %236 = load %0*, %0** %5, align 8
  %237 = getelementptr inbounds %0, %0* %236, i32 0, i32 2
  %238 = load i64, i64* %237, align 8
  %239 = call %0* @148(i8* %235, i64 %238, i32 0)
  store %0* %239, %0** %22, align 8
  %240 = load %0*, %0** %22, align 8
  %241 = load %18*, %18** %21, align 8
  %242 = getelementptr inbounds %18, %18* %241, i32 0, i32 0
  %243 = bitcast %19* %242 to %0**
  store %0* %240, %0** %243, align 8
  %244 = load %18*, %18** %21, align 8
  %245 = getelementptr inbounds %18, %18* %244, i32 0, i32 1
  %246 = bitcast %20* %245 to i32*
  store i32 5126, i32* %246, align 8
  %247 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #13
  %248 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #13
  br label %249

249:                                              ; preds = %229
  br label %250

250:                                              ; preds = %249
  br label %251

251:                                              ; preds = %250
  br label %252

252:                                              ; preds = %251
  %253 = load %18*, %18** %4, align 8
  %254 = getelementptr inbounds %18, %18* %253, i32 0, i32 0
  %255 = bitcast %19* %254 to %0**
  %256 = load %0*, %0** %255, align 8
  %257 = getelementptr inbounds %0, %0* %256, i32 0, i32 3
  %258 = getelementptr inbounds [1 x i8], [1 x i8]* %257, i32 0, i32 0
  call void @172(i8* %258)
  store i32 0, i32* %18, align 4
  br label %259

259:                                              ; preds = %252, %226, %188
  %260 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #13
  %261 = load i32, i32* %18, align 4
  switch i32 %261, label %263 [
    i32 0, label %262
    i32 1, label %262
  ]

262:                                              ; preds = %259, %259
  ret void

263:                                              ; preds = %259
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @172(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %6 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #13
  %7 = load i8*, i8** %2, align 8
  store i8* %7, i8** %3, align 8
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #13
  %9 = call i32** @__ctype_toupper_loc() #17
  %10 = load i32*, i32** %9, align 8
  %11 = load i8*, i8** %3, align 8
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %10, i64 %14
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %4, align 4
  %17 = load i32, i32* %4, align 4
  store i32 %17, i32* %5, align 4
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #13
  %19 = load i32, i32* %5, align 4
  %20 = trunc i32 %19 to i8
  %21 = load i8*, i8** %3, align 8
  store i8 %20, i8* %21, align 1
  %22 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_lcfirst(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %18*, align 8
  %12 = alloca %18*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  %21 = alloca %18*, align 8
  %22 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %23 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 0, i32* %6, align 4
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 1, i32* %7, align 4
  %27 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 1, i32* %8, align 4
  %28 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %9, align 4
  %34 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store %18* null, %18** %12, align 8
  %37 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %13, align 4
  %38 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %39 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %17, align 4
  %40 = load i32, i32* %10, align 4
  %41 = load %18*, %18** %11, align 8
  %42 = load %18*, %18** %12, align 8
  %43 = load i32, i32* %13, align 4
  %44 = load i8*, i8** %14, align 8
  %45 = load i8, i8* %15, align 1
  %46 = load i8, i8* %16, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %9, align 4
  %49 = load i32, i32* %7, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* %8, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %8, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %9, align 4
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %8, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %17, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %10, align 4
  %81 = load %14*, %14** %3, align 8
  %82 = bitcast %14* %81 to %18*
  %83 = getelementptr inbounds %18, %18* %82, i64 4
  store %18* %83, %18** %11, align 8
  %84 = load i32, i32* %10, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %10, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %10, align 4
  %88 = load i32, i32* %7, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %16, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %10, align 4
  %107 = load i32, i32* %7, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %16, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %16, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %10, align 4
  %128 = load i32, i32* %9, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %18*, %18** %11, align 8
  %140 = getelementptr inbounds %18, %18* %139, i32 1
  store %18* %140, %18** %11, align 8
  %141 = load %18*, %18** %11, align 8
  store %18* %141, %18** %12, align 8
  %142 = load %18*, %18** %12, align 8
  %143 = call i32 @143(%18* %142, %0** %5, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %13, align 4
  store i32 4, i32* %17, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %17, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %17, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %10, align 4
  %169 = load i8*, i8** %14, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %17, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %10, align 4
  %175 = load i8*, i8** %14, align 8
  %176 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %18* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %17, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %10, align 4
  %182 = load i32, i32* %13, align 4
  %183 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %18* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %18, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %18, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %190 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #13
  %192 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = load i32, i32* %18, align 4
  switch i32 %199, label %259 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load %0*, %0** %5, align 8
  %204 = getelementptr inbounds %0, %0* %203, i32 0, i32 2
  %205 = load i64, i64* %204, align 8
  %206 = icmp ne i64 %205, 0
  br i1 %206, label %227, label %207

207:                                              ; preds = %202
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %210) #13
  %211 = load %18*, %18** %4, align 8
  store %18* %211, %18** %19, align 8
  %212 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %212) #13
  %213 = load %0*, %0** @zend_empty_string, align 8
  store %0* %213, %0** %20, align 8
  %214 = load %0*, %0** %20, align 8
  %215 = load %18*, %18** %19, align 8
  %216 = getelementptr inbounds %18, %18* %215, i32 0, i32 0
  %217 = bitcast %19* %216 to %0**
  store %0* %214, %0** %217, align 8
  %218 = load %18*, %18** %19, align 8
  %219 = getelementptr inbounds %18, %18* %218, i32 0, i32 1
  %220 = bitcast %20* %219 to i32*
  store i32 6, i32* %220, align 8
  %221 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #13
  %222 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #13
  br label %223

223:                                              ; preds = %209
  br label %224

224:                                              ; preds = %223
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225
  store i32 1, i32* %18, align 4
  br label %259

227:                                              ; preds = %202
  br label %228

228:                                              ; preds = %227
  br label %229

229:                                              ; preds = %228
  %230 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %230) #13
  %231 = load %18*, %18** %4, align 8
  store %18* %231, %18** %21, align 8
  %232 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %232) #13
  %233 = load %0*, %0** %5, align 8
  %234 = getelementptr inbounds %0, %0* %233, i32 0, i32 3
  %235 = getelementptr inbounds [1 x i8], [1 x i8]* %234, i32 0, i32 0
  %236 = load %0*, %0** %5, align 8
  %237 = getelementptr inbounds %0, %0* %236, i32 0, i32 2
  %238 = load i64, i64* %237, align 8
  %239 = call %0* @148(i8* %235, i64 %238, i32 0)
  store %0* %239, %0** %22, align 8
  %240 = load %0*, %0** %22, align 8
  %241 = load %18*, %18** %21, align 8
  %242 = getelementptr inbounds %18, %18* %241, i32 0, i32 0
  %243 = bitcast %19* %242 to %0**
  store %0* %240, %0** %243, align 8
  %244 = load %18*, %18** %21, align 8
  %245 = getelementptr inbounds %18, %18* %244, i32 0, i32 1
  %246 = bitcast %20* %245 to i32*
  store i32 5126, i32* %246, align 8
  %247 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #13
  %248 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #13
  br label %249

249:                                              ; preds = %229
  br label %250

250:                                              ; preds = %249
  br label %251

251:                                              ; preds = %250
  br label %252

252:                                              ; preds = %251
  %253 = load %18*, %18** %4, align 8
  %254 = getelementptr inbounds %18, %18* %253, i32 0, i32 0
  %255 = bitcast %19* %254 to %0**
  %256 = load %0*, %0** %255, align 8
  %257 = getelementptr inbounds %0, %0* %256, i32 0, i32 3
  %258 = getelementptr inbounds [1 x i8], [1 x i8]* %257, i32 0, i32 0
  call void @173(i8* %258)
  store i32 0, i32* %18, align 4
  br label %259

259:                                              ; preds = %252, %226, %188
  %260 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #13
  %261 = load i32, i32* %18, align 4
  switch i32 %261, label %263 [
    i32 0, label %262
    i32 1, label %262
  ]

262:                                              ; preds = %259, %259
  ret void

263:                                              ; preds = %259
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @173(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %6 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #13
  %7 = load i8*, i8** %2, align 8
  store i8* %7, i8** %3, align 8
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #13
  %9 = call i32** @__ctype_tolower_loc() #17
  %10 = load i32*, i32** %9, align 8
  %11 = load i8*, i8** %3, align 8
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, i32* %10, i64 %14
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %4, align 4
  %17 = load i32, i32* %4, align 4
  store i32 %17, i32* %5, align 4
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #13
  %19 = load i32, i32* %5, align 4
  %20 = trunc i32 %19 to i8
  %21 = load i8*, i8** %3, align 8
  store i8 %20, i8* %21, align 1
  %22 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_ucwords(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca [256 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %18*, align 8
  %17 = alloca %18*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %18*, align 8
  %25 = alloca %0*, align 8
  %26 = alloca %18*, align 8
  %27 = alloca %0*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %32 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @92, i32 0, i32 0), i8** %6, align 8
  %34 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store i64 6, i64* %9, align 8
  %37 = bitcast [256 x i8]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %37) #13
  br label %38

38:                                               ; preds = %2
  %39 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %11, align 4
  %40 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  store i32 1, i32* %12, align 4
  %41 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 2, i32* %13, align 4
  %42 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #13
  %43 = load %14*, %14** %3, align 8
  %44 = getelementptr inbounds %14, %14* %43, i32 0, i32 4
  %45 = getelementptr inbounds %18, %18* %44, i32 0, i32 2
  %46 = bitcast %21* %45 to i32*
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %14, align 4
  %48 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  %49 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  %50 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store %18* null, %18** %17, align 8
  %51 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #13
  store i32 0, i32* %18, align 4
  %52 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  store i8* null, i8** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  store i8 0, i8* %21, align 1
  %53 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #13
  store i32 0, i32* %22, align 4
  %54 = load i32, i32* %15, align 4
  %55 = load %18*, %18** %16, align 8
  %56 = load %18*, %18** %17, align 8
  %57 = load i32, i32* %18, align 4
  %58 = load i8*, i8** %19, align 8
  %59 = load i8, i8* %20, align 1
  %60 = load i8, i8* %21, align 1
  br label %61

61:                                               ; preds = %38
  %62 = load i32, i32* %14, align 4
  %63 = load i32, i32* %12, align 4
  %64 = icmp slt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %61
  %72 = load i32, i32* %14, align 4
  %73 = load i32, i32* %13, align 4
  %74 = icmp sgt i32 %72, %73
  %75 = xor i1 %74, true
  %76 = xor i1 %75, true
  %77 = zext i1 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = call i64 @llvm.expect.i64(i64 %78, i64 0)
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %94

81:                                               ; preds = %71
  %82 = load i32, i32* %13, align 4
  %83 = icmp sge i32 %82, 0
  %84 = xor i1 %83, true
  %85 = xor i1 %84, true
  %86 = zext i1 %85 to i32
  %87 = sext i32 %86 to i64
  %88 = call i64 @llvm.expect.i64(i64 %87, i64 1)
  %89 = icmp ne i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %81, %61
  %91 = load i32, i32* %14, align 4
  %92 = load i32, i32* %12, align 4
  %93 = load i32, i32* %13, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %91, i32 %92, i32 %93)
  store i32 1, i32* %22, align 4
  br label %239

94:                                               ; preds = %81, %71
  store i32 0, i32* %15, align 4
  %95 = load %14*, %14** %3, align 8
  %96 = bitcast %14* %95 to %18*
  %97 = getelementptr inbounds %18, %18* %96, i64 4
  store %18* %97, %18** %16, align 8
  %98 = load i32, i32* %15, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %15, align 4
  br label %100

100:                                              ; preds = %94
  %101 = load i32, i32* %15, align 4
  %102 = load i32, i32* %12, align 4
  %103 = icmp sle i32 %101, %102
  br i1 %103, label %108, label %104

104:                                              ; preds = %100
  %105 = load i8, i8* %21, align 1
  %106 = zext i8 %105 to i32
  %107 = icmp eq i32 %106, 1
  br label %108

108:                                              ; preds = %104, %100
  %109 = phi i1 [ true, %100 ], [ %107, %104 ]
  %110 = xor i1 %109, true
  %111 = zext i1 %110 to i32
  %112 = sext i32 %111 to i64
  %113 = call i64 @llvm.expect.i64(i64 %112, i64 0)
  %114 = icmp ne i64 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %108
  unreachable

116:                                              ; preds = %108
  br label %117

117:                                              ; preds = %116
  br label %118

118:                                              ; preds = %117
  br label %119

119:                                              ; preds = %118
  %120 = load i32, i32* %15, align 4
  %121 = load i32, i32* %12, align 4
  %122 = icmp sgt i32 %120, %121
  br i1 %122, label %127, label %123

123:                                              ; preds = %119
  %124 = load i8, i8* %21, align 1
  %125 = zext i8 %124 to i32
  %126 = icmp eq i32 %125, 0
  br label %127

127:                                              ; preds = %123, %119
  %128 = phi i1 [ true, %119 ], [ %126, %123 ]
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %127
  unreachable

135:                                              ; preds = %127
  br label %136

136:                                              ; preds = %135
  br label %137

137:                                              ; preds = %136
  %138 = load i8, i8* %21, align 1
  %139 = icmp ne i8 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %137
  %141 = load i32, i32* %15, align 4
  %142 = load i32, i32* %14, align 4
  %143 = icmp sgt i32 %141, %142
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %140
  br label %239

151:                                              ; preds = %140
  br label %152

152:                                              ; preds = %151, %137
  %153 = load %18*, %18** %16, align 8
  %154 = getelementptr inbounds %18, %18* %153, i32 1
  store %18* %154, %18** %16, align 8
  %155 = load %18*, %18** %16, align 8
  store %18* %155, %18** %17, align 8
  %156 = load %18*, %18** %17, align 8
  %157 = call i32 @143(%18* %156, %0** %5, i32 0)
  %158 = icmp ne i32 %157, 0
  %159 = xor i1 %158, true
  %160 = xor i1 %159, true
  %161 = xor i1 %160, true
  %162 = zext i1 %161 to i32
  %163 = sext i32 %162 to i64
  %164 = call i64 @llvm.expect.i64(i64 %163, i64 0)
  %165 = icmp ne i64 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %152
  store i32 2, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %239

167:                                              ; preds = %152
  store i8 1, i8* %21, align 1
  %168 = load i32, i32* %15, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %15, align 4
  br label %170

170:                                              ; preds = %167
  %171 = load i32, i32* %15, align 4
  %172 = load i32, i32* %12, align 4
  %173 = icmp sle i32 %171, %172
  br i1 %173, label %178, label %174

174:                                              ; preds = %170
  %175 = load i8, i8* %21, align 1
  %176 = zext i8 %175 to i32
  %177 = icmp eq i32 %176, 1
  br label %178

178:                                              ; preds = %174, %170
  %179 = phi i1 [ true, %170 ], [ %177, %174 ]
  %180 = xor i1 %179, true
  %181 = zext i1 %180 to i32
  %182 = sext i32 %181 to i64
  %183 = call i64 @llvm.expect.i64(i64 %182, i64 0)
  %184 = icmp ne i64 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %178
  unreachable

186:                                              ; preds = %178
  br label %187

187:                                              ; preds = %186
  br label %188

188:                                              ; preds = %187
  br label %189

189:                                              ; preds = %188
  %190 = load i32, i32* %15, align 4
  %191 = load i32, i32* %12, align 4
  %192 = icmp sgt i32 %190, %191
  br i1 %192, label %197, label %193

193:                                              ; preds = %189
  %194 = load i8, i8* %21, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp eq i32 %195, 0
  br label %197

197:                                              ; preds = %193, %189
  %198 = phi i1 [ true, %189 ], [ %196, %193 ]
  %199 = xor i1 %198, true
  %200 = zext i1 %199 to i32
  %201 = sext i32 %200 to i64
  %202 = call i64 @llvm.expect.i64(i64 %201, i64 0)
  %203 = icmp ne i64 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %197
  unreachable

205:                                              ; preds = %197
  br label %206

206:                                              ; preds = %205
  br label %207

207:                                              ; preds = %206
  %208 = load i8, i8* %21, align 1
  %209 = icmp ne i8 %208, 0
  br i1 %209, label %210, label %222

210:                                              ; preds = %207
  %211 = load i32, i32* %15, align 4
  %212 = load i32, i32* %14, align 4
  %213 = icmp sgt i32 %211, %212
  %214 = xor i1 %213, true
  %215 = xor i1 %214, true
  %216 = zext i1 %215 to i32
  %217 = sext i32 %216 to i64
  %218 = call i64 @llvm.expect.i64(i64 %217, i64 0)
  %219 = icmp ne i64 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %210
  br label %239

221:                                              ; preds = %210
  br label %222

222:                                              ; preds = %221, %207
  %223 = load %18*, %18** %16, align 8
  %224 = getelementptr inbounds %18, %18* %223, i32 1
  store %18* %224, %18** %16, align 8
  %225 = load %18*, %18** %16, align 8
  store %18* %225, %18** %17, align 8
  %226 = load %18*, %18** %17, align 8
  %227 = call i32 @151(%18* %226, i8** %6, i64* %9, i32 0)
  %228 = icmp ne i32 %227, 0
  %229 = xor i1 %228, true
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i32
  %233 = sext i32 %232 to i64
  %234 = call i64 @llvm.expect.i64(i64 %233, i64 0)
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %236, label %237

236:                                              ; preds = %222
  store i32 2, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %239

237:                                              ; preds = %222
  br label %238

238:                                              ; preds = %237
  br label %239

239:                                              ; preds = %238, %236, %220, %166, %150, %90
  %240 = load i32, i32* %22, align 4
  %241 = icmp ne i32 %240, 0
  %242 = xor i1 %241, true
  %243 = xor i1 %242, true
  %244 = zext i1 %243 to i32
  %245 = sext i32 %244 to i64
  %246 = call i64 @llvm.expect.i64(i64 %245, i64 0)
  %247 = icmp ne i64 %246, 0
  br i1 %247, label %248, label %271

248:                                              ; preds = %239
  %249 = load i32, i32* %22, align 4
  %250 = icmp eq i32 %249, 2
  br i1 %250, label %251, label %254

251:                                              ; preds = %248
  %252 = load i32, i32* %15, align 4
  %253 = load i8*, i8** %19, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %252, i8* %253)
  br label %270

254:                                              ; preds = %248
  %255 = load i32, i32* %22, align 4
  %256 = icmp eq i32 %255, 3
  br i1 %256, label %257, label %261

257:                                              ; preds = %254
  %258 = load i32, i32* %15, align 4
  %259 = load i8*, i8** %19, align 8
  %260 = load %18*, %18** %17, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %258, i8* %259, %18* %260)
  br label %269

261:                                              ; preds = %254
  %262 = load i32, i32* %22, align 4
  %263 = icmp eq i32 %262, 4
  br i1 %263, label %264, label %268

264:                                              ; preds = %261
  %265 = load i32, i32* %15, align 4
  %266 = load i32, i32* %18, align 4
  %267 = load %18*, %18** %17, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %265, i32 %266, %18* %267)
  br label %268

268:                                              ; preds = %264, %261
  br label %269

269:                                              ; preds = %268, %257
  br label %270

270:                                              ; preds = %269, %251
  store i32 1, i32* %23, align 4
  br label %272

271:                                              ; preds = %239
  store i32 0, i32* %23, align 4
  br label %272

272:                                              ; preds = %271, %270
  %273 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #13
  %274 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #13
  %275 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #13
  %276 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %276) #13
  %277 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %277) #13
  %278 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #13
  %279 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #13
  %280 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #13
  %281 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %281) #13
  %282 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #13
  %283 = load i32, i32* %23, align 4
  switch i32 %283, label %399 [
    i32 0, label %284
  ]

284:                                              ; preds = %272
  br label %285

285:                                              ; preds = %284
  br label %286

286:                                              ; preds = %285
  %287 = load %0*, %0** %5, align 8
  %288 = getelementptr inbounds %0, %0* %287, i32 0, i32 2
  %289 = load i64, i64* %288, align 8
  %290 = icmp ne i64 %289, 0
  br i1 %290, label %311, label %291

291:                                              ; preds = %286
  br label %292

292:                                              ; preds = %291
  br label %293

293:                                              ; preds = %292
  %294 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %294) #13
  %295 = load %18*, %18** %4, align 8
  store %18* %295, %18** %24, align 8
  %296 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %296) #13
  %297 = load %0*, %0** @zend_empty_string, align 8
  store %0* %297, %0** %25, align 8
  %298 = load %0*, %0** %25, align 8
  %299 = load %18*, %18** %24, align 8
  %300 = getelementptr inbounds %18, %18* %299, i32 0, i32 0
  %301 = bitcast %19* %300 to %0**
  store %0* %298, %0** %301, align 8
  %302 = load %18*, %18** %24, align 8
  %303 = getelementptr inbounds %18, %18* %302, i32 0, i32 1
  %304 = bitcast %20* %303 to i32*
  store i32 6, i32* %304, align 8
  %305 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305) #13
  %306 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %306) #13
  br label %307

307:                                              ; preds = %293
  br label %308

308:                                              ; preds = %307
  br label %309

309:                                              ; preds = %308
  br label %310

310:                                              ; preds = %309
  store i32 1, i32* %23, align 4
  br label %399

311:                                              ; preds = %286
  %312 = load i8*, i8** %6, align 8
  %313 = load i64, i64* %9, align 8
  %314 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i32 0, i32 0
  %315 = call i32 @174(i8* %312, i64 %313, i8* %314)
  br label %316

316:                                              ; preds = %311
  br label %317

317:                                              ; preds = %316
  %318 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %318) #13
  %319 = load %18*, %18** %4, align 8
  store %18* %319, %18** %26, align 8
  %320 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %320) #13
  %321 = load %0*, %0** %5, align 8
  %322 = getelementptr inbounds %0, %0* %321, i32 0, i32 3
  %323 = getelementptr inbounds [1 x i8], [1 x i8]* %322, i32 0, i32 0
  %324 = load %0*, %0** %5, align 8
  %325 = getelementptr inbounds %0, %0* %324, i32 0, i32 2
  %326 = load i64, i64* %325, align 8
  %327 = call %0* @148(i8* %323, i64 %326, i32 0)
  store %0* %327, %0** %27, align 8
  %328 = load %0*, %0** %27, align 8
  %329 = load %18*, %18** %26, align 8
  %330 = getelementptr inbounds %18, %18* %329, i32 0, i32 0
  %331 = bitcast %19* %330 to %0**
  store %0* %328, %0** %331, align 8
  %332 = load %18*, %18** %26, align 8
  %333 = getelementptr inbounds %18, %18* %332, i32 0, i32 1
  %334 = bitcast %20* %333 to i32*
  store i32 5126, i32* %334, align 8
  %335 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %335) #13
  %336 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %336) #13
  br label %337

337:                                              ; preds = %317
  br label %338

338:                                              ; preds = %337
  br label %339

339:                                              ; preds = %338
  br label %340

340:                                              ; preds = %339
  %341 = load %18*, %18** %4, align 8
  %342 = getelementptr inbounds %18, %18* %341, i32 0, i32 0
  %343 = bitcast %19* %342 to %0**
  %344 = load %0*, %0** %343, align 8
  %345 = getelementptr inbounds %0, %0* %344, i32 0, i32 3
  %346 = getelementptr inbounds [1 x i8], [1 x i8]* %345, i32 0, i32 0
  store i8* %346, i8** %7, align 8
  %347 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %347) #13
  %348 = call i32** @__ctype_toupper_loc() #17
  %349 = load i32*, i32** %348, align 8
  %350 = load i8*, i8** %7, align 8
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i32
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds i32, i32* %349, i64 %353
  %355 = load i32, i32* %354, align 4
  store i32 %355, i32* %28, align 4
  %356 = load i32, i32* %28, align 4
  store i32 %356, i32* %29, align 4
  %357 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %357) #13
  %358 = load i32, i32* %29, align 4
  %359 = trunc i32 %358 to i8
  %360 = load i8*, i8** %7, align 8
  store i8 %359, i8* %360, align 1
  %361 = load i8*, i8** %7, align 8
  %362 = load %18*, %18** %4, align 8
  %363 = getelementptr inbounds %18, %18* %362, i32 0, i32 0
  %364 = bitcast %19* %363 to %0**
  %365 = load %0*, %0** %364, align 8
  %366 = getelementptr inbounds %0, %0* %365, i32 0, i32 2
  %367 = load i64, i64* %366, align 8
  %368 = getelementptr inbounds i8, i8* %361, i64 %367
  %369 = getelementptr inbounds i8, i8* %368, i64 -1
  store i8* %369, i8** %8, align 8
  br label %370

370:                                              ; preds = %397, %340
  %371 = load i8*, i8** %7, align 8
  %372 = load i8*, i8** %8, align 8
  %373 = icmp ult i8* %371, %372
  br i1 %373, label %374, label %398

374:                                              ; preds = %370
  %375 = load i8*, i8** %7, align 8
  %376 = getelementptr inbounds i8, i8* %375, i32 1
  store i8* %376, i8** %7, align 8
  %377 = load i8, i8* %375, align 1
  %378 = zext i8 %377 to i64
  %379 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 %378
  %380 = load i8, i8* %379, align 1
  %381 = icmp ne i8 %380, 0
  br i1 %381, label %382, label %397

382:                                              ; preds = %374
  %383 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %383) #13
  %384 = call i32** @__ctype_toupper_loc() #17
  %385 = load i32*, i32** %384, align 8
  %386 = load i8*, i8** %7, align 8
  %387 = load i8, i8* %386, align 1
  %388 = zext i8 %387 to i32
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds i32, i32* %385, i64 %389
  %391 = load i32, i32* %390, align 4
  store i32 %391, i32* %30, align 4
  %392 = load i32, i32* %30, align 4
  store i32 %392, i32* %31, align 4
  %393 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %393) #13
  %394 = load i32, i32* %31, align 4
  %395 = trunc i32 %394 to i8
  %396 = load i8*, i8** %7, align 8
  store i8 %395, i8* %396, align 1
  br label %397

397:                                              ; preds = %382, %374
  br label %370

398:                                              ; preds = %370
  store i32 0, i32* %23, align 4
  br label %399

399:                                              ; preds = %398, %310, %272
  %400 = bitcast [256 x i8]* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %400) #13
  %401 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %401) #13
  %402 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %402) #13
  %403 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %403) #13
  %404 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %404) #13
  %405 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %405) #13
  %406 = load i32, i32* %23, align 4
  switch i32 %406, label %408 [
    i32 0, label %407
    i32 1, label %407
  ]

407:                                              ; preds = %399, %399
  ret void

408:                                              ; preds = %399
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @174(i8* %0, i64 %1, i8* %2) #10 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %10 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %8) #13
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #13
  store i32 0, i32* %9, align 4
  %12 = load i8*, i8** %6, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 256, i1 false)
  %13 = load i8*, i8** %4, align 8
  %14 = load i64, i64* %5, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  store i8* %15, i8** %7, align 8
  br label %16

16:                                               ; preds = %114, %3
  %17 = load i8*, i8** %4, align 8
  %18 = load i8*, i8** %7, align 8
  %19 = icmp ult i8* %17, %18
  br i1 %19, label %20, label %117

20:                                               ; preds = %16
  %21 = load i8*, i8** %4, align 8
  %22 = load i8, i8* %21, align 1
  store i8 %22, i8* %8, align 1
  %23 = load i8*, i8** %4, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 3
  %25 = load i8*, i8** %7, align 8
  %26 = icmp ult i8* %24, %25
  br i1 %26, label %27, label %64

27:                                               ; preds = %20
  %28 = load i8*, i8** %4, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = icmp eq i32 %31, 46
  br i1 %32, label %33, label %64

33:                                               ; preds = %27
  %34 = load i8*, i8** %4, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 2
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 46
  br i1 %38, label %39, label %64

39:                                               ; preds = %33
  %40 = load i8*, i8** %4, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = load i8, i8* %8, align 1
  %45 = zext i8 %44 to i32
  %46 = icmp sge i32 %43, %45
  br i1 %46, label %47, label %64

47:                                               ; preds = %39
  %48 = load i8*, i8** %6, align 8
  %49 = load i8, i8* %8, align 1
  %50 = zext i8 %49 to i32
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  %53 = load i8*, i8** %4, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 3
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = load i8, i8* %8, align 1
  %58 = zext i8 %57 to i32
  %59 = sub nsw i32 %56, %58
  %60 = add nsw i32 %59, 1
  %61 = sext i32 %60 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %52, i8 1, i64 %61, i1 false)
  %62 = load i8*, i8** %4, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 3
  store i8* %63, i8** %4, align 8
  br label %113

64:                                               ; preds = %39, %33, %27, %20
  %65 = load i8*, i8** %4, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  %67 = load i8*, i8** %7, align 8
  %68 = icmp ult i8* %66, %67
  br i1 %68, label %69, label %107

69:                                               ; preds = %64
  %70 = load i8*, i8** %4, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 0
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = icmp eq i32 %73, 46
  br i1 %74, label %75, label %107

75:                                               ; preds = %69
  %76 = load i8*, i8** %4, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = icmp eq i32 %79, 46
  br i1 %80, label %81, label %107

81:                                               ; preds = %75
  %82 = load i8*, i8** %7, align 8
  %83 = load i64, i64* %5, align 8
  %84 = sub i64 0, %83
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = load i8*, i8** %4, align 8
  %87 = icmp uge i8* %85, %86
  br i1 %87, label %88, label %89

88:                                               ; preds = %81
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @138, i32 0, i32 0))
  store i32 -1, i32* %9, align 4
  br label %114

89:                                               ; preds = %81
  %90 = load i8*, i8** %4, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 2
  %92 = load i8*, i8** %7, align 8
  %93 = icmp uge i8* %91, %92
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @139, i32 0, i32 0))
  store i32 -1, i32* %9, align 4
  br label %114

95:                                               ; preds = %89
  %96 = load i8*, i8** %4, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 -1
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = load i8*, i8** %4, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 2
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp sgt i32 %99, %103
  br i1 %104, label %105, label %106

105:                                              ; preds = %95
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @140, i32 0, i32 0))
  store i32 -1, i32* %9, align 4
  br label %114

106:                                              ; preds = %95
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @141, i32 0, i32 0))
  store i32 -1, i32* %9, align 4
  br label %114

107:                                              ; preds = %75, %69, %64
  %108 = load i8*, i8** %6, align 8
  %109 = load i8, i8* %8, align 1
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds i8, i8* %108, i64 %110
  store i8 1, i8* %111, align 1
  br label %112

112:                                              ; preds = %107
  br label %113

113:                                              ; preds = %112, %47
  br label %114

114:                                              ; preds = %113, %106, %105, %94, %88
  %115 = load i8*, i8** %4, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %4, align 8
  br label %16

117:                                              ; preds = %16
  %118 = load i32, i32* %9, align 4
  %119 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %119) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %8) #13
  %120 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %120) #13
  ret i32 %118
}

; Function Attrs: nounwind uwtable
define dso_local i8* @php_strtr(i8* %0, i64 %1, i8* %2, i8* %3, i64 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca [256 x i8], align 16
  %17 = alloca i8, align 1
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i64 %4, i64* %11, align 8
  %18 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = load i64, i64* %11, align 8
  %20 = icmp ult i64 %19, 1
  %21 = xor i1 %20, true
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i32
  %24 = sext i32 %23 to i64
  %25 = call i64 @llvm.expect.i64(i64 %24, i64 0)
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %5
  %28 = load i8*, i8** %7, align 8
  store i8* %28, i8** %6, align 8
  store i32 1, i32* %13, align 4
  br label %115

29:                                               ; preds = %5
  %30 = load i64, i64* %11, align 8
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %32, label %60

32:                                               ; preds = %29
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14) #13
  %33 = load i8*, i8** %9, align 8
  %34 = load i8, i8* %33, align 1
  store i8 %34, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  %35 = load i8*, i8** %10, align 8
  %36 = load i8, i8* %35, align 1
  store i8 %36, i8* %15, align 1
  store i64 0, i64* %12, align 8
  br label %37

37:                                               ; preds = %56, %32
  %38 = load i64, i64* %12, align 8
  %39 = load i64, i64* %8, align 8
  %40 = icmp ult i64 %38, %39
  br i1 %40, label %41, label %59

41:                                               ; preds = %37
  %42 = load i8*, i8** %7, align 8
  %43 = load i64, i64* %12, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = load i8, i8* %14, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %41
  %51 = load i8, i8* %15, align 1
  %52 = load i8*, i8** %7, align 8
  %53 = load i64, i64* %12, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  store i8 %51, i8* %54, align 1
  br label %55

55:                                               ; preds = %50, %41
  br label %56

56:                                               ; preds = %55
  %57 = load i64, i64* %12, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %12, align 8
  br label %37

59:                                               ; preds = %37
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #13
  br label %112

60:                                               ; preds = %29
  %61 = bitcast [256 x i8]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %61) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  br label %62

62:                                               ; preds = %67, %60
  %63 = load i8, i8* %17, align 1
  %64 = load i8, i8* %17, align 1
  %65 = zext i8 %64 to i64
  %66 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i64 0, i64 %65
  store i8 %63, i8* %66, align 1
  br label %67

67:                                               ; preds = %62
  %68 = load i8, i8* %17, align 1
  %69 = add i8 %68, 1
  store i8 %69, i8* %17, align 1
  %70 = zext i8 %69 to i32
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %62, label %72

72:                                               ; preds = %67
  store i64 0, i64* %12, align 8
  br label %73

73:                                               ; preds = %88, %72
  %74 = load i64, i64* %12, align 8
  %75 = load i64, i64* %11, align 8
  %76 = icmp ult i64 %74, %75
  br i1 %76, label %77, label %91

77:                                               ; preds = %73
  %78 = load i8*, i8** %10, align 8
  %79 = load i64, i64* %12, align 8
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = load i8*, i8** %9, align 8
  %83 = load i64, i64* %12, align 8
  %84 = getelementptr inbounds i8, i8* %82, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i64
  %87 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i64 0, i64 %86
  store i8 %81, i8* %87, align 1
  br label %88

88:                                               ; preds = %77
  %89 = load i64, i64* %12, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %12, align 8
  br label %73

91:                                               ; preds = %73
  store i64 0, i64* %12, align 8
  br label %92

92:                                               ; preds = %107, %91
  %93 = load i64, i64* %12, align 8
  %94 = load i64, i64* %8, align 8
  %95 = icmp ult i64 %93, %94
  br i1 %95, label %96, label %110

96:                                               ; preds = %92
  %97 = load i8*, i8** %7, align 8
  %98 = load i64, i64* %12, align 8
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* %16, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = load i8*, i8** %7, align 8
  %105 = load i64, i64* %12, align 8
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  store i8 %103, i8* %106, align 1
  br label %107

107:                                              ; preds = %96
  %108 = load i64, i64* %12, align 8
  %109 = add i64 %108, 1
  store i64 %109, i64* %12, align 8
  br label %92

110:                                              ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  %111 = bitcast [256 x i8]* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %111) #13
  br label %112

112:                                              ; preds = %110, %59
  br label %113

113:                                              ; preds = %112
  %114 = load i8*, i8** %7, align 8
  store i8* %114, i8** %6, align 8
  store i32 1, i32* %13, align 4
  br label %115

115:                                              ; preds = %113, %27
  %116 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #13
  %117 = load i8*, i8** %6, align 8
  ret i8* %117
}

; Function Attrs: nounwind uwtable
define dso_local %0* @php_str_to_str(i8* %0, i64 %1, i8* %2, i64 %3, i8* %4, i64 %5) #0 {
  %7 = alloca %0*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %0*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  store i64 %3, i64* %11, align 8
  store i8* %4, i8** %12, align 8
  store i64 %5, i64* %13, align 8
  %25 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = load i64, i64* %11, align 8
  %27 = load i64, i64* %9, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %209

29:                                               ; preds = %6
  %30 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = load i64, i64* %11, align 8
  %36 = load i64, i64* %13, align 8
  %37 = icmp eq i64 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %29
  %39 = load i8*, i8** %8, align 8
  %40 = load i64, i64* %9, align 8
  %41 = call %0* @148(i8* %39, i64 %40, i32 0)
  store %0* %41, %0** %14, align 8
  %42 = load %0*, %0** %14, align 8
  %43 = getelementptr inbounds %0, %0* %42, i32 0, i32 3
  %44 = getelementptr inbounds [1 x i8], [1 x i8]* %43, i32 0, i32 0
  %45 = load i64, i64* %9, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  store i8* %46, i8** %15, align 8
  %47 = load %0*, %0** %14, align 8
  %48 = getelementptr inbounds %0, %0* %47, i32 0, i32 3
  %49 = getelementptr inbounds [1 x i8], [1 x i8]* %48, i32 0, i32 0
  store i8* %49, i8** %18, align 8
  br label %50

50:                                               ; preds = %61, %38
  %51 = load i8*, i8** %18, align 8
  %52 = load i8*, i8** %10, align 8
  %53 = load i64, i64* %11, align 8
  %54 = load i8*, i8** %15, align 8
  %55 = call i8* @156(i8* %51, i8* %52, i64 %53, i8* %54)
  store i8* %55, i8** %19, align 8
  %56 = icmp ne i8* %55, null
  br i1 %56, label %57, label %65

57:                                               ; preds = %50
  %58 = load i8*, i8** %19, align 8
  %59 = load i8*, i8** %12, align 8
  %60 = load i64, i64* %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %59, i64 %60, i1 false)
  br label %61

61:                                               ; preds = %57
  %62 = load i8*, i8** %19, align 8
  %63 = load i64, i64* %11, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  store i8* %64, i8** %18, align 8
  br label %50

65:                                               ; preds = %50
  %66 = load %0*, %0** %14, align 8
  store %0* %66, %0** %7, align 8
  store i32 1, i32* %20, align 4
  br label %203

67:                                               ; preds = %29
  %68 = load i64, i64* %13, align 8
  %69 = load i64, i64* %11, align 8
  %70 = icmp ult i64 %68, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %67
  %72 = load i64, i64* %9, align 8
  %73 = call %0* @162(i64 %72, i32 0)
  store %0* %73, %0** %14, align 8
  br label %134

74:                                               ; preds = %67
  %75 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #13
  store i64 0, i64* %21, align 8
  %76 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #13
  %77 = load i8*, i8** %8, align 8
  store i8* %77, i8** %22, align 8
  %78 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %78) #13
  %79 = load i8*, i8** %10, align 8
  store i8* %79, i8** %23, align 8
  %80 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #13
  %81 = load i8*, i8** %22, align 8
  %82 = load i64, i64* %9, align 8
  %83 = getelementptr inbounds i8, i8* %81, i64 %82
  store i8* %83, i8** %24, align 8
  br label %84

84:                                               ; preds = %91, %74
  %85 = load i8*, i8** %22, align 8
  %86 = load i8*, i8** %23, align 8
  %87 = load i64, i64* %11, align 8
  %88 = load i8*, i8** %24, align 8
  %89 = call i8* @156(i8* %85, i8* %86, i64 %87, i8* %88)
  store i8* %89, i8** %22, align 8
  %90 = icmp ne i8* %89, null
  br i1 %90, label %91, label %97

91:                                               ; preds = %84
  %92 = load i64, i64* %11, align 8
  %93 = load i8*, i8** %22, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 %92
  store i8* %94, i8** %22, align 8
  %95 = load i64, i64* %21, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %21, align 8
  br label %84

97:                                               ; preds = %84
  %98 = load i64, i64* %21, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %105

100:                                              ; preds = %97
  %101 = load i8*, i8** %8, align 8
  %102 = load i64, i64* %9, align 8
  %103 = call %0* @148(i8* %101, i64 %102, i32 0)
  store %0* %103, %0** %14, align 8
  %104 = load %0*, %0** %14, align 8
  store %0* %104, %0** %7, align 8
  store i32 1, i32* %20, align 4
  br label %127

105:                                              ; preds = %97
  %106 = load i64, i64* %13, align 8
  %107 = load i64, i64* %11, align 8
  %108 = icmp ugt i64 %106, %107
  br i1 %108, label %109, label %116

109:                                              ; preds = %105
  %110 = load i64, i64* %21, align 8
  %111 = load i64, i64* %13, align 8
  %112 = load i64, i64* %11, align 8
  %113 = sub i64 %111, %112
  %114 = load i64, i64* %9, align 8
  %115 = call %0* @153(i64 %110, i64 %113, i64 %114, i32 0)
  store %0* %115, %0** %14, align 8
  br label %125

116:                                              ; preds = %105
  %117 = load i64, i64* %21, align 8
  %118 = load i64, i64* %13, align 8
  %119 = load i64, i64* %11, align 8
  %120 = sub i64 %118, %119
  %121 = mul i64 %117, %120
  %122 = load i64, i64* %9, align 8
  %123 = add i64 %121, %122
  %124 = call %0* @162(i64 %123, i32 0)
  store %0* %124, %0** %14, align 8
  br label %125

125:                                              ; preds = %116, %109
  br label %126

126:                                              ; preds = %125
  store i32 0, i32* %20, align 4
  br label %127

127:                                              ; preds = %126, %100
  %128 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #13
  %129 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %129) #13
  %130 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #13
  %131 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #13
  %132 = load i32, i32* %20, align 4
  switch i32 %132, label %203 [
    i32 0, label %133
  ]

133:                                              ; preds = %127
  br label %134

134:                                              ; preds = %133, %71
  %135 = load %0*, %0** %14, align 8
  %136 = getelementptr inbounds %0, %0* %135, i32 0, i32 3
  %137 = getelementptr inbounds [1 x i8], [1 x i8]* %136, i32 0, i32 0
  store i8* %137, i8** %17, align 8
  store i8* %137, i8** %16, align 8
  %138 = load i8*, i8** %8, align 8
  %139 = load i64, i64* %9, align 8
  %140 = getelementptr inbounds i8, i8* %138, i64 %139
  store i8* %140, i8** %15, align 8
  %141 = load i8*, i8** %8, align 8
  store i8* %141, i8** %18, align 8
  br label %142

142:                                              ; preds = %170, %134
  %143 = load i8*, i8** %18, align 8
  %144 = load i8*, i8** %10, align 8
  %145 = load i64, i64* %11, align 8
  %146 = load i8*, i8** %15, align 8
  %147 = call i8* @156(i8* %143, i8* %144, i64 %145, i8* %146)
  store i8* %147, i8** %19, align 8
  %148 = icmp ne i8* %147, null
  br i1 %148, label %149, label %174

149:                                              ; preds = %142
  %150 = load i8*, i8** %16, align 8
  %151 = load i8*, i8** %18, align 8
  %152 = load i8*, i8** %19, align 8
  %153 = load i8*, i8** %18, align 8
  %154 = ptrtoint i8* %152 to i64
  %155 = ptrtoint i8* %153 to i64
  %156 = sub i64 %154, %155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %150, i8* align 1 %151, i64 %156, i1 false)
  %157 = load i8*, i8** %19, align 8
  %158 = load i8*, i8** %18, align 8
  %159 = ptrtoint i8* %157 to i64
  %160 = ptrtoint i8* %158 to i64
  %161 = sub i64 %159, %160
  %162 = load i8*, i8** %16, align 8
  %163 = getelementptr inbounds i8, i8* %162, i64 %161
  store i8* %163, i8** %16, align 8
  %164 = load i8*, i8** %16, align 8
  %165 = load i8*, i8** %12, align 8
  %166 = load i64, i64* %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* align 1 %165, i64 %166, i1 false)
  %167 = load i64, i64* %13, align 8
  %168 = load i8*, i8** %16, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 %167
  store i8* %169, i8** %16, align 8
  br label %170

170:                                              ; preds = %149
  %171 = load i8*, i8** %19, align 8
  %172 = load i64, i64* %11, align 8
  %173 = getelementptr inbounds i8, i8* %171, i64 %172
  store i8* %173, i8** %18, align 8
  br label %142

174:                                              ; preds = %142
  %175 = load i8*, i8** %18, align 8
  %176 = load i8*, i8** %15, align 8
  %177 = icmp ult i8* %175, %176
  br i1 %177, label %178, label %193

178:                                              ; preds = %174
  %179 = load i8*, i8** %16, align 8
  %180 = load i8*, i8** %18, align 8
  %181 = load i8*, i8** %15, align 8
  %182 = load i8*, i8** %18, align 8
  %183 = ptrtoint i8* %181 to i64
  %184 = ptrtoint i8* %182 to i64
  %185 = sub i64 %183, %184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %179, i8* align 1 %180, i64 %185, i1 false)
  %186 = load i8*, i8** %15, align 8
  %187 = load i8*, i8** %18, align 8
  %188 = ptrtoint i8* %186 to i64
  %189 = ptrtoint i8* %187 to i64
  %190 = sub i64 %188, %189
  %191 = load i8*, i8** %16, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 %190
  store i8* %192, i8** %16, align 8
  br label %193

193:                                              ; preds = %178, %174
  %194 = load i8*, i8** %16, align 8
  store i8 0, i8* %194, align 1
  %195 = load %0*, %0** %14, align 8
  %196 = load i8*, i8** %16, align 8
  %197 = load i8*, i8** %17, align 8
  %198 = ptrtoint i8* %196 to i64
  %199 = ptrtoint i8* %197 to i64
  %200 = sub i64 %198, %199
  %201 = call %0* @155(%0* %195, i64 %200, i32 0)
  store %0* %201, %0** %14, align 8
  %202 = load %0*, %0** %14, align 8
  store %0* %202, %0** %7, align 8
  store i32 1, i32* %20, align 4
  br label %203

203:                                              ; preds = %193, %127, %65
  %204 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %204) #13
  %205 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %205) #13
  %206 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %206) #13
  %207 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %207) #13
  %208 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %208) #13
  br label %229

209:                                              ; preds = %6
  %210 = load i64, i64* %11, align 8
  %211 = load i64, i64* %9, align 8
  %212 = icmp ugt i64 %210, %211
  br i1 %212, label %219, label %213

213:                                              ; preds = %209
  %214 = load i8*, i8** %8, align 8
  %215 = load i8*, i8** %10, align 8
  %216 = load i64, i64* %9, align 8
  %217 = call i32 @memcmp(i8* %214, i8* %215, i64 %216) #14
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %219, label %224

219:                                              ; preds = %213, %209
  %220 = load i8*, i8** %8, align 8
  %221 = load i64, i64* %9, align 8
  %222 = call %0* @148(i8* %220, i64 %221, i32 0)
  store %0* %222, %0** %14, align 8
  %223 = load %0*, %0** %14, align 8
  store %0* %223, %0** %7, align 8
  store i32 1, i32* %20, align 4
  br label %229

224:                                              ; preds = %213
  %225 = load i8*, i8** %12, align 8
  %226 = load i64, i64* %13, align 8
  %227 = call %0* @148(i8* %225, i64 %226, i32 0)
  store %0* %227, %0** %14, align 8
  %228 = load %0*, %0** %14, align 8
  store %0* %228, %0** %7, align 8
  store i32 1, i32* %20, align 4
  br label %229

229:                                              ; preds = %224, %219, %203
  %230 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #13
  %231 = load %0*, %0** %7, align 8
  ret %0* %231
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strtr(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %18*, align 8
  %16 = alloca %18*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %18*, align 8
  %24 = alloca %0*, align 8
  %25 = alloca %43*, align 8
  %26 = alloca %18*, align 8
  %27 = alloca %0*, align 8
  %28 = alloca i64, align 8
  %29 = alloca %0*, align 8
  %30 = alloca %0*, align 8
  %31 = alloca %18*, align 8
  %32 = alloca %18, align 8
  %33 = alloca %43*, align 8
  %34 = alloca %45*, align 8
  %35 = alloca %45*, align 8
  %36 = alloca %18*, align 8
  %37 = alloca %18*, align 8
  %38 = alloca %18*, align 8
  %39 = alloca %0*, align 8
  %40 = alloca %18*, align 8
  %41 = alloca %0*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %18*, align 8
  %44 = alloca %0*, align 8
  %45 = alloca %18*, align 8
  %46 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %47 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  %49 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  store i8* null, i8** %7, align 8
  %50 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store i64 0, i64* %8, align 8
  %51 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #13
  %52 = load %14*, %14** %3, align 8
  %53 = getelementptr inbounds %14, %14* %52, i32 0, i32 4
  %54 = getelementptr inbounds %18, %18* %53, i32 0, i32 2
  %55 = bitcast %21* %54 to i32*
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %9, align 4
  br label %57

57:                                               ; preds = %2
  %58 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #13
  store i32 0, i32* %10, align 4
  %59 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #13
  store i32 2, i32* %11, align 4
  %60 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #13
  store i32 3, i32* %12, align 4
  %61 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #13
  %62 = load %14*, %14** %3, align 8
  %63 = getelementptr inbounds %14, %14* %62, i32 0, i32 4
  %64 = getelementptr inbounds %18, %18* %63, i32 0, i32 2
  %65 = bitcast %21* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %13, align 4
  %67 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %67) #13
  %68 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %68) #13
  %69 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %69) #13
  store %18* null, %18** %16, align 8
  %70 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #13
  store i32 0, i32* %17, align 4
  %71 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #13
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #13
  store i8 0, i8* %20, align 1
  %72 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %72) #13
  store i32 0, i32* %21, align 4
  %73 = load i32, i32* %14, align 4
  %74 = load %18*, %18** %15, align 8
  %75 = load %18*, %18** %16, align 8
  %76 = load i32, i32* %17, align 4
  %77 = load i8*, i8** %18, align 8
  %78 = load i8, i8* %19, align 1
  %79 = load i8, i8* %20, align 1
  br label %80

80:                                               ; preds = %57
  %81 = load i32, i32* %13, align 4
  %82 = load i32, i32* %11, align 4
  %83 = icmp slt i32 %81, %82
  %84 = xor i1 %83, true
  %85 = xor i1 %84, true
  %86 = zext i1 %85 to i32
  %87 = sext i32 %86 to i64
  %88 = call i64 @llvm.expect.i64(i64 %87, i64 0)
  %89 = icmp ne i64 %88, 0
  br i1 %89, label %109, label %90

90:                                               ; preds = %80
  %91 = load i32, i32* %13, align 4
  %92 = load i32, i32* %12, align 4
  %93 = icmp sgt i32 %91, %92
  %94 = xor i1 %93, true
  %95 = xor i1 %94, true
  %96 = zext i1 %95 to i32
  %97 = sext i32 %96 to i64
  %98 = call i64 @llvm.expect.i64(i64 %97, i64 0)
  %99 = icmp ne i64 %98, 0
  br i1 %99, label %100, label %113

100:                                              ; preds = %90
  %101 = load i32, i32* %12, align 4
  %102 = icmp sge i32 %101, 0
  %103 = xor i1 %102, true
  %104 = xor i1 %103, true
  %105 = zext i1 %104 to i32
  %106 = sext i32 %105 to i64
  %107 = call i64 @llvm.expect.i64(i64 %106, i64 1)
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %100, %80
  %110 = load i32, i32* %13, align 4
  %111 = load i32, i32* %11, align 4
  %112 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %110, i32 %111, i32 %112)
  store i32 1, i32* %21, align 4
  br label %317

113:                                              ; preds = %100, %90
  store i32 0, i32* %14, align 4
  %114 = load %14*, %14** %3, align 8
  %115 = bitcast %14* %114 to %18*
  %116 = getelementptr inbounds %18, %18* %115, i64 4
  store %18* %116, %18** %15, align 8
  %117 = load i32, i32* %14, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %14, align 4
  br label %119

119:                                              ; preds = %113
  %120 = load i32, i32* %14, align 4
  %121 = load i32, i32* %11, align 4
  %122 = icmp sle i32 %120, %121
  br i1 %122, label %127, label %123

123:                                              ; preds = %119
  %124 = load i8, i8* %20, align 1
  %125 = zext i8 %124 to i32
  %126 = icmp eq i32 %125, 1
  br label %127

127:                                              ; preds = %123, %119
  %128 = phi i1 [ true, %119 ], [ %126, %123 ]
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %127
  unreachable

135:                                              ; preds = %127
  br label %136

136:                                              ; preds = %135
  br label %137

137:                                              ; preds = %136
  br label %138

138:                                              ; preds = %137
  %139 = load i32, i32* %14, align 4
  %140 = load i32, i32* %11, align 4
  %141 = icmp sgt i32 %139, %140
  br i1 %141, label %146, label %142

142:                                              ; preds = %138
  %143 = load i8, i8* %20, align 1
  %144 = zext i8 %143 to i32
  %145 = icmp eq i32 %144, 0
  br label %146

146:                                              ; preds = %142, %138
  %147 = phi i1 [ true, %138 ], [ %145, %142 ]
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 0)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %146
  unreachable

154:                                              ; preds = %146
  br label %155

155:                                              ; preds = %154
  br label %156

156:                                              ; preds = %155
  %157 = load i8, i8* %20, align 1
  %158 = icmp ne i8 %157, 0
  br i1 %158, label %159, label %171

159:                                              ; preds = %156
  %160 = load i32, i32* %14, align 4
  %161 = load i32, i32* %13, align 4
  %162 = icmp sgt i32 %160, %161
  %163 = xor i1 %162, true
  %164 = xor i1 %163, true
  %165 = zext i1 %164 to i32
  %166 = sext i32 %165 to i64
  %167 = call i64 @llvm.expect.i64(i64 %166, i64 0)
  %168 = icmp ne i64 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %159
  br label %317

170:                                              ; preds = %159
  br label %171

171:                                              ; preds = %170, %156
  %172 = load %18*, %18** %15, align 8
  %173 = getelementptr inbounds %18, %18* %172, i32 1
  store %18* %173, %18** %15, align 8
  %174 = load %18*, %18** %15, align 8
  store %18* %174, %18** %16, align 8
  %175 = load %18*, %18** %16, align 8
  %176 = call i32 @143(%18* %175, %0** %6, i32 0)
  %177 = icmp ne i32 %176, 0
  %178 = xor i1 %177, true
  %179 = xor i1 %178, true
  %180 = xor i1 %179, true
  %181 = zext i1 %180 to i32
  %182 = sext i32 %181 to i64
  %183 = call i64 @llvm.expect.i64(i64 %182, i64 0)
  %184 = icmp ne i64 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %171
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %317

186:                                              ; preds = %171
  %187 = load i32, i32* %14, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %14, align 4
  br label %189

189:                                              ; preds = %186
  %190 = load i32, i32* %14, align 4
  %191 = load i32, i32* %11, align 4
  %192 = icmp sle i32 %190, %191
  br i1 %192, label %197, label %193

193:                                              ; preds = %189
  %194 = load i8, i8* %20, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp eq i32 %195, 1
  br label %197

197:                                              ; preds = %193, %189
  %198 = phi i1 [ true, %189 ], [ %196, %193 ]
  %199 = xor i1 %198, true
  %200 = zext i1 %199 to i32
  %201 = sext i32 %200 to i64
  %202 = call i64 @llvm.expect.i64(i64 %201, i64 0)
  %203 = icmp ne i64 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %197
  unreachable

205:                                              ; preds = %197
  br label %206

206:                                              ; preds = %205
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  %209 = load i32, i32* %14, align 4
  %210 = load i32, i32* %11, align 4
  %211 = icmp sgt i32 %209, %210
  br i1 %211, label %216, label %212

212:                                              ; preds = %208
  %213 = load i8, i8* %20, align 1
  %214 = zext i8 %213 to i32
  %215 = icmp eq i32 %214, 0
  br label %216

216:                                              ; preds = %212, %208
  %217 = phi i1 [ true, %208 ], [ %215, %212 ]
  %218 = xor i1 %217, true
  %219 = zext i1 %218 to i32
  %220 = sext i32 %219 to i64
  %221 = call i64 @llvm.expect.i64(i64 %220, i64 0)
  %222 = icmp ne i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %216
  unreachable

224:                                              ; preds = %216
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225
  %227 = load i8, i8* %20, align 1
  %228 = icmp ne i8 %227, 0
  br i1 %228, label %229, label %241

229:                                              ; preds = %226
  %230 = load i32, i32* %14, align 4
  %231 = load i32, i32* %13, align 4
  %232 = icmp sgt i32 %230, %231
  %233 = xor i1 %232, true
  %234 = xor i1 %233, true
  %235 = zext i1 %234 to i32
  %236 = sext i32 %235 to i64
  %237 = call i64 @llvm.expect.i64(i64 %236, i64 0)
  %238 = icmp ne i64 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %229
  br label %317

240:                                              ; preds = %229
  br label %241

241:                                              ; preds = %240, %226
  %242 = load %18*, %18** %15, align 8
  %243 = getelementptr inbounds %18, %18* %242, i32 1
  store %18* %243, %18** %15, align 8
  %244 = load %18*, %18** %15, align 8
  store %18* %244, %18** %16, align 8
  %245 = load %18*, %18** %16, align 8
  call void @161(%18* %245, %18** %5, i32 0)
  store i8 1, i8* %20, align 1
  %246 = load i32, i32* %14, align 4
  %247 = add nsw i32 %246, 1
  store i32 %247, i32* %14, align 4
  br label %248

248:                                              ; preds = %241
  %249 = load i32, i32* %14, align 4
  %250 = load i32, i32* %11, align 4
  %251 = icmp sle i32 %249, %250
  br i1 %251, label %256, label %252

252:                                              ; preds = %248
  %253 = load i8, i8* %20, align 1
  %254 = zext i8 %253 to i32
  %255 = icmp eq i32 %254, 1
  br label %256

256:                                              ; preds = %252, %248
  %257 = phi i1 [ true, %248 ], [ %255, %252 ]
  %258 = xor i1 %257, true
  %259 = zext i1 %258 to i32
  %260 = sext i32 %259 to i64
  %261 = call i64 @llvm.expect.i64(i64 %260, i64 0)
  %262 = icmp ne i64 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %256
  unreachable

264:                                              ; preds = %256
  br label %265

265:                                              ; preds = %264
  br label %266

266:                                              ; preds = %265
  br label %267

267:                                              ; preds = %266
  %268 = load i32, i32* %14, align 4
  %269 = load i32, i32* %11, align 4
  %270 = icmp sgt i32 %268, %269
  br i1 %270, label %275, label %271

271:                                              ; preds = %267
  %272 = load i8, i8* %20, align 1
  %273 = zext i8 %272 to i32
  %274 = icmp eq i32 %273, 0
  br label %275

275:                                              ; preds = %271, %267
  %276 = phi i1 [ true, %267 ], [ %274, %271 ]
  %277 = xor i1 %276, true
  %278 = zext i1 %277 to i32
  %279 = sext i32 %278 to i64
  %280 = call i64 @llvm.expect.i64(i64 %279, i64 0)
  %281 = icmp ne i64 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %275
  unreachable

283:                                              ; preds = %275
  br label %284

284:                                              ; preds = %283
  br label %285

285:                                              ; preds = %284
  %286 = load i8, i8* %20, align 1
  %287 = icmp ne i8 %286, 0
  br i1 %287, label %288, label %300

288:                                              ; preds = %285
  %289 = load i32, i32* %14, align 4
  %290 = load i32, i32* %13, align 4
  %291 = icmp sgt i32 %289, %290
  %292 = xor i1 %291, true
  %293 = xor i1 %292, true
  %294 = zext i1 %293 to i32
  %295 = sext i32 %294 to i64
  %296 = call i64 @llvm.expect.i64(i64 %295, i64 0)
  %297 = icmp ne i64 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %288
  br label %317

299:                                              ; preds = %288
  br label %300

300:                                              ; preds = %299, %285
  %301 = load %18*, %18** %15, align 8
  %302 = getelementptr inbounds %18, %18* %301, i32 1
  store %18* %302, %18** %15, align 8
  %303 = load %18*, %18** %15, align 8
  store %18* %303, %18** %16, align 8
  %304 = load %18*, %18** %16, align 8
  %305 = call i32 @151(%18* %304, i8** %7, i64* %8, i32 0)
  %306 = icmp ne i32 %305, 0
  %307 = xor i1 %306, true
  %308 = xor i1 %307, true
  %309 = xor i1 %308, true
  %310 = zext i1 %309 to i32
  %311 = sext i32 %310 to i64
  %312 = call i64 @llvm.expect.i64(i64 %311, i64 0)
  %313 = icmp ne i64 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %300
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %317

315:                                              ; preds = %300
  br label %316

316:                                              ; preds = %315
  br label %317

317:                                              ; preds = %316, %314, %298, %239, %185, %169, %109
  %318 = load i32, i32* %21, align 4
  %319 = icmp ne i32 %318, 0
  %320 = xor i1 %319, true
  %321 = xor i1 %320, true
  %322 = zext i1 %321 to i32
  %323 = sext i32 %322 to i64
  %324 = call i64 @llvm.expect.i64(i64 %323, i64 0)
  %325 = icmp ne i64 %324, 0
  br i1 %325, label %326, label %349

326:                                              ; preds = %317
  %327 = load i32, i32* %21, align 4
  %328 = icmp eq i32 %327, 2
  br i1 %328, label %329, label %332

329:                                              ; preds = %326
  %330 = load i32, i32* %14, align 4
  %331 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %330, i8* %331)
  br label %348

332:                                              ; preds = %326
  %333 = load i32, i32* %21, align 4
  %334 = icmp eq i32 %333, 3
  br i1 %334, label %335, label %339

335:                                              ; preds = %332
  %336 = load i32, i32* %14, align 4
  %337 = load i8*, i8** %18, align 8
  %338 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %336, i8* %337, %18* %338)
  br label %347

339:                                              ; preds = %332
  %340 = load i32, i32* %21, align 4
  %341 = icmp eq i32 %340, 4
  br i1 %341, label %342, label %346

342:                                              ; preds = %339
  %343 = load i32, i32* %14, align 4
  %344 = load i32, i32* %17, align 4
  %345 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %343, i32 %344, %18* %345)
  br label %346

346:                                              ; preds = %342, %339
  br label %347

347:                                              ; preds = %346, %335
  br label %348

348:                                              ; preds = %347, %329
  store i32 1, i32* %22, align 4
  br label %350

349:                                              ; preds = %317
  store i32 0, i32* %22, align 4
  br label %350

350:                                              ; preds = %349, %348
  %351 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  %352 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %352) #13
  %353 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %353) #13
  %354 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %354) #13
  %355 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %355) #13
  %356 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %356) #13
  %357 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %357) #13
  %358 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %358) #13
  %359 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %359) #13
  %360 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %360) #13
  %361 = load i32, i32* %22, align 4
  switch i32 %361, label %774 [
    i32 0, label %362
  ]

362:                                              ; preds = %350
  br label %363

363:                                              ; preds = %362
  br label %364

364:                                              ; preds = %363
  %365 = load i32, i32* %9, align 4
  %366 = icmp eq i32 %365, 2
  br i1 %366, label %367, label %379

367:                                              ; preds = %364
  %368 = load %18*, %18** %5, align 8
  %369 = call zeroext i8 @157(%18* %368)
  %370 = zext i8 %369 to i32
  %371 = icmp ne i32 %370, 7
  br i1 %371, label %372, label %379

372:                                              ; preds = %367
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @93, i32 0, i32 0))
  br label %373

373:                                              ; preds = %372
  %374 = load %18*, %18** %4, align 8
  %375 = getelementptr inbounds %18, %18* %374, i32 0, i32 1
  %376 = bitcast %20* %375 to i32*
  store i32 2, i32* %376, align 8
  br label %377

377:                                              ; preds = %373
  br label %378

378:                                              ; preds = %377
  store i32 1, i32* %22, align 4
  br label %774

379:                                              ; preds = %367, %364
  %380 = load %0*, %0** %6, align 8
  %381 = getelementptr inbounds %0, %0* %380, i32 0, i32 2
  %382 = load i64, i64* %381, align 8
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %404

384:                                              ; preds = %379
  br label %385

385:                                              ; preds = %384
  br label %386

386:                                              ; preds = %385
  %387 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %387) #13
  %388 = load %18*, %18** %4, align 8
  store %18* %388, %18** %23, align 8
  %389 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %389) #13
  %390 = load %0*, %0** @zend_empty_string, align 8
  store %0* %390, %0** %24, align 8
  %391 = load %0*, %0** %24, align 8
  %392 = load %18*, %18** %23, align 8
  %393 = getelementptr inbounds %18, %18* %392, i32 0, i32 0
  %394 = bitcast %19* %393 to %0**
  store %0* %391, %0** %394, align 8
  %395 = load %18*, %18** %23, align 8
  %396 = getelementptr inbounds %18, %18* %395, i32 0, i32 1
  %397 = bitcast %20* %396 to i32*
  store i32 6, i32* %397, align 8
  %398 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %398) #13
  %399 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %399) #13
  br label %400

400:                                              ; preds = %386
  br label %401

401:                                              ; preds = %400
  br label %402

402:                                              ; preds = %401
  br label %403

403:                                              ; preds = %402
  store i32 1, i32* %22, align 4
  br label %774

404:                                              ; preds = %379
  %405 = load i32, i32* %9, align 4
  %406 = icmp eq i32 %405, 2
  br i1 %406, label %407, label %705

407:                                              ; preds = %404
  %408 = bitcast %43** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %408) #13
  %409 = load %18*, %18** %5, align 8
  %410 = getelementptr inbounds %18, %18* %409, i32 0, i32 0
  %411 = bitcast %19* %410 to %43**
  %412 = load %43*, %43** %411, align 8
  store %43* %412, %43** %25, align 8
  %413 = load %43*, %43** %25, align 8
  %414 = getelementptr inbounds %43, %43* %413, i32 0, i32 5
  %415 = load i32, i32* %414, align 4
  %416 = icmp ult i32 %415, 1
  br i1 %416, label %417, label %454

417:                                              ; preds = %407
  br label %418

418:                                              ; preds = %417
  %419 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %419) #13
  %420 = load %18*, %18** %4, align 8
  store %18* %420, %18** %26, align 8
  %421 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %421) #13
  %422 = load %0*, %0** %6, align 8
  store %0* %422, %0** %27, align 8
  %423 = load %0*, %0** %27, align 8
  %424 = load %18*, %18** %26, align 8
  %425 = getelementptr inbounds %18, %18* %424, i32 0, i32 0
  %426 = bitcast %19* %425 to %0**
  store %0* %423, %0** %426, align 8
  %427 = load %0*, %0** %27, align 8
  %428 = getelementptr inbounds %0, %0* %427, i32 0, i32 0
  %429 = getelementptr inbounds %1, %1* %428, i32 0, i32 1
  %430 = bitcast %2* %429 to %52*
  %431 = getelementptr inbounds %52, %52* %430, i32 0, i32 1
  %432 = load i8, i8* %431, align 1
  %433 = zext i8 %432 to i32
  %434 = and i32 %433, 2
  %435 = icmp ne i32 %434, 0
  br i1 %435, label %436, label %440

436:                                              ; preds = %418
  %437 = load %18*, %18** %26, align 8
  %438 = getelementptr inbounds %18, %18* %437, i32 0, i32 1
  %439 = bitcast %20* %438 to i32*
  store i32 6, i32* %439, align 8
  br label %449

440:                                              ; preds = %418
  %441 = load %0*, %0** %27, align 8
  %442 = getelementptr inbounds %0, %0* %441, i32 0, i32 0
  %443 = getelementptr inbounds %1, %1* %442, i32 0, i32 0
  %444 = load i32, i32* %443, align 8
  %445 = add i32 %444, 1
  store i32 %445, i32* %443, align 8
  %446 = load %18*, %18** %26, align 8
  %447 = getelementptr inbounds %18, %18* %446, i32 0, i32 1
  %448 = bitcast %20* %447 to i32*
  store i32 5126, i32* %448, align 8
  br label %449

449:                                              ; preds = %440, %436
  %450 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %450) #13
  %451 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %451) #13
  br label %452

452:                                              ; preds = %449
  br label %453

453:                                              ; preds = %452
  store i32 1, i32* %22, align 4
  br label %701

454:                                              ; preds = %407
  %455 = load %43*, %43** %25, align 8
  %456 = getelementptr inbounds %43, %43* %455, i32 0, i32 5
  %457 = load i32, i32* %456, align 4
  %458 = icmp eq i32 %457, 1
  br i1 %458, label %459, label %695

459:                                              ; preds = %454
  %460 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %460) #13
  %461 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %461) #13
  %462 = bitcast %0** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %462) #13
  %463 = bitcast %18** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %463) #13
  %464 = bitcast %18* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %464) #13
  br label %465

465:                                              ; preds = %459
  %466 = bitcast %43** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %466) #13
  %467 = load %43*, %43** %25, align 8
  store %43* %467, %43** %33, align 8
  %468 = bitcast %45** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %468) #13
  %469 = load %43*, %43** %33, align 8
  %470 = getelementptr inbounds %43, %43* %469, i32 0, i32 3
  %471 = load %45*, %45** %470, align 8
  store %45* %471, %45** %34, align 8
  %472 = bitcast %45** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %472) #13
  %473 = load %45*, %45** %34, align 8
  %474 = load %43*, %43** %33, align 8
  %475 = getelementptr inbounds %43, %43* %474, i32 0, i32 4
  %476 = load i32, i32* %475, align 8
  %477 = zext i32 %476 to i64
  %478 = getelementptr inbounds %45, %45* %473, i64 %477
  store %45* %478, %45** %35, align 8
  br label %479

479:                                              ; preds = %675, %465
  %480 = load %45*, %45** %34, align 8
  %481 = load %45*, %45** %35, align 8
  %482 = icmp ne %45* %480, %481
  br i1 %482, label %483, label %678

483:                                              ; preds = %479
  %484 = bitcast %18** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %484) #13
  %485 = load %45*, %45** %34, align 8
  %486 = getelementptr inbounds %45, %45* %485, i32 0, i32 0
  store %18* %486, %18** %36, align 8
  %487 = load %18*, %18** %36, align 8
  %488 = call zeroext i8 @157(%18* %487)
  %489 = zext i8 %488 to i32
  %490 = icmp eq i32 %489, 0
  %491 = xor i1 %490, true
  %492 = xor i1 %491, true
  %493 = zext i1 %492 to i32
  %494 = sext i32 %493 to i64
  %495 = call i64 @llvm.expect.i64(i64 %494, i64 0)
  %496 = icmp ne i64 %495, 0
  br i1 %496, label %497, label %498

497:                                              ; preds = %483
  store i32 30, i32* %22, align 4
  br label %672

498:                                              ; preds = %483
  %499 = load %45*, %45** %34, align 8
  %500 = getelementptr inbounds %45, %45* %499, i32 0, i32 1
  %501 = load i64, i64* %500, align 8
  store i64 %501, i64* %28, align 8
  %502 = load %45*, %45** %34, align 8
  %503 = getelementptr inbounds %45, %45* %502, i32 0, i32 2
  %504 = load %0*, %0** %503, align 8
  store %0* %504, %0** %29, align 8
  %505 = load %18*, %18** %36, align 8
  store %18* %505, %18** %31, align 8
  br label %506

506:                                              ; preds = %498
  %507 = getelementptr inbounds %18, %18* %32, i32 0, i32 1
  %508 = bitcast %20* %507 to i32*
  store i32 0, i32* %508, align 8
  br label %509

509:                                              ; preds = %506
  br label %510

510:                                              ; preds = %509
  %511 = load %0*, %0** %29, align 8
  %512 = icmp ne %0* %511, null
  %513 = xor i1 %512, true
  %514 = xor i1 %513, true
  %515 = xor i1 %514, true
  %516 = zext i1 %515 to i32
  %517 = sext i32 %516 to i64
  %518 = call i64 @llvm.expect.i64(i64 %517, i64 0)
  %519 = icmp ne i64 %518, 0
  br i1 %519, label %520, label %538

520:                                              ; preds = %510
  %521 = bitcast %18** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %521) #13
  store %18* %32, %18** %37, align 8
  %522 = load i64, i64* %28, align 8
  %523 = load %18*, %18** %37, align 8
  %524 = getelementptr inbounds %18, %18* %523, i32 0, i32 0
  %525 = bitcast %19* %524 to i64*
  store i64 %522, i64* %525, align 8
  %526 = load %18*, %18** %37, align 8
  %527 = getelementptr inbounds %18, %18* %526, i32 0, i32 1
  %528 = bitcast %20* %527 to i32*
  store i32 4, i32* %528, align 8
  %529 = bitcast %18** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %529) #13
  %530 = call zeroext i8 @157(%18* %32)
  %531 = zext i8 %530 to i32
  %532 = icmp ne i32 %531, 6
  br i1 %532, label %533, label %534

533:                                              ; preds = %520
  call void @_convert_to_string(%18* %32)
  br label %534

534:                                              ; preds = %533, %520
  %535 = getelementptr inbounds %18, %18* %32, i32 0, i32 0
  %536 = bitcast %19* %535 to %0**
  %537 = load %0*, %0** %536, align 8
  store %0* %537, %0** %29, align 8
  br label %538

538:                                              ; preds = %534, %510
  %539 = load %18*, %18** %31, align 8
  %540 = call %0* @158(%18* %539)
  store %0* %540, %0** %30, align 8
  %541 = load %0*, %0** %29, align 8
  %542 = getelementptr inbounds %0, %0* %541, i32 0, i32 2
  %543 = load i64, i64* %542, align 8
  %544 = icmp ult i64 %543, 1
  br i1 %544, label %545, label %582

545:                                              ; preds = %538
  br label %546

546:                                              ; preds = %545
  %547 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %547) #13
  %548 = load %18*, %18** %4, align 8
  store %18* %548, %18** %38, align 8
  %549 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %549) #13
  %550 = load %0*, %0** %6, align 8
  store %0* %550, %0** %39, align 8
  %551 = load %0*, %0** %39, align 8
  %552 = load %18*, %18** %38, align 8
  %553 = getelementptr inbounds %18, %18* %552, i32 0, i32 0
  %554 = bitcast %19* %553 to %0**
  store %0* %551, %0** %554, align 8
  %555 = load %0*, %0** %39, align 8
  %556 = getelementptr inbounds %0, %0* %555, i32 0, i32 0
  %557 = getelementptr inbounds %1, %1* %556, i32 0, i32 1
  %558 = bitcast %2* %557 to %52*
  %559 = getelementptr inbounds %52, %52* %558, i32 0, i32 1
  %560 = load i8, i8* %559, align 1
  %561 = zext i8 %560 to i32
  %562 = and i32 %561, 2
  %563 = icmp ne i32 %562, 0
  br i1 %563, label %564, label %568

564:                                              ; preds = %546
  %565 = load %18*, %18** %38, align 8
  %566 = getelementptr inbounds %18, %18* %565, i32 0, i32 1
  %567 = bitcast %20* %566 to i32*
  store i32 6, i32* %567, align 8
  br label %577

568:                                              ; preds = %546
  %569 = load %0*, %0** %39, align 8
  %570 = getelementptr inbounds %0, %0* %569, i32 0, i32 0
  %571 = getelementptr inbounds %1, %1* %570, i32 0, i32 0
  %572 = load i32, i32* %571, align 8
  %573 = add i32 %572, 1
  store i32 %573, i32* %571, align 8
  %574 = load %18*, %18** %38, align 8
  %575 = getelementptr inbounds %18, %18* %574, i32 0, i32 1
  %576 = bitcast %20* %575 to i32*
  store i32 5126, i32* %576, align 8
  br label %577

577:                                              ; preds = %568, %564
  %578 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %578) #13
  %579 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %579) #13
  br label %580

580:                                              ; preds = %577
  br label %581

581:                                              ; preds = %580
  br label %670

582:                                              ; preds = %538
  %583 = load %0*, %0** %29, align 8
  %584 = getelementptr inbounds %0, %0* %583, i32 0, i32 2
  %585 = load i64, i64* %584, align 8
  %586 = icmp eq i64 %585, 1
  br i1 %586, label %587, label %626

587:                                              ; preds = %582
  br label %588

588:                                              ; preds = %587
  %589 = bitcast %18** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %589) #13
  %590 = load %18*, %18** %4, align 8
  store %18* %590, %18** %40, align 8
  %591 = bitcast %0** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %591) #13
  %592 = load %0*, %0** %6, align 8
  %593 = load %0*, %0** %29, align 8
  %594 = getelementptr inbounds %0, %0* %593, i32 0, i32 3
  %595 = getelementptr inbounds [1 x i8], [1 x i8]* %594, i64 0, i64 0
  %596 = load i8, i8* %595, align 8
  %597 = load %0*, %0** %30, align 8
  %598 = getelementptr inbounds %0, %0* %597, i32 0, i32 3
  %599 = getelementptr inbounds [1 x i8], [1 x i8]* %598, i32 0, i32 0
  %600 = load %0*, %0** %30, align 8
  %601 = getelementptr inbounds %0, %0* %600, i32 0, i32 2
  %602 = load i64, i64* %601, align 8
  %603 = call %0* @175(%0* %592, i8 signext %596, i8* %599, i64 %602, i32 1, i64* null)
  store %0* %603, %0** %41, align 8
  %604 = load %0*, %0** %41, align 8
  %605 = load %18*, %18** %40, align 8
  %606 = getelementptr inbounds %18, %18* %605, i32 0, i32 0
  %607 = bitcast %19* %606 to %0**
  store %0* %604, %0** %607, align 8
  %608 = load %0*, %0** %41, align 8
  %609 = getelementptr inbounds %0, %0* %608, i32 0, i32 0
  %610 = getelementptr inbounds %1, %1* %609, i32 0, i32 1
  %611 = bitcast %2* %610 to %52*
  %612 = getelementptr inbounds %52, %52* %611, i32 0, i32 1
  %613 = load i8, i8* %612, align 1
  %614 = zext i8 %613 to i32
  %615 = and i32 %614, 2
  %616 = icmp ne i32 %615, 0
  %617 = zext i1 %616 to i64
  %618 = select i1 %616, i32 6, i32 5126
  %619 = load %18*, %18** %40, align 8
  %620 = getelementptr inbounds %18, %18* %619, i32 0, i32 1
  %621 = bitcast %20* %620 to i32*
  store i32 %618, i32* %621, align 8
  %622 = bitcast %0** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %622) #13
  %623 = bitcast %18** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %623) #13
  br label %624

624:                                              ; preds = %588
  br label %625

625:                                              ; preds = %624
  br label %669

626:                                              ; preds = %582
  %627 = bitcast i64* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %627) #13
  br label %628

628:                                              ; preds = %626
  %629 = bitcast %18** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %629) #13
  %630 = load %18*, %18** %4, align 8
  store %18* %630, %18** %43, align 8
  %631 = bitcast %0** %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %631) #13
  %632 = load %0*, %0** %6, align 8
  %633 = load %0*, %0** %29, align 8
  %634 = getelementptr inbounds %0, %0* %633, i32 0, i32 3
  %635 = getelementptr inbounds [1 x i8], [1 x i8]* %634, i32 0, i32 0
  %636 = load %0*, %0** %29, align 8
  %637 = getelementptr inbounds %0, %0* %636, i32 0, i32 2
  %638 = load i64, i64* %637, align 8
  %639 = load %0*, %0** %30, align 8
  %640 = getelementptr inbounds %0, %0* %639, i32 0, i32 3
  %641 = getelementptr inbounds [1 x i8], [1 x i8]* %640, i32 0, i32 0
  %642 = load %0*, %0** %30, align 8
  %643 = getelementptr inbounds %0, %0* %642, i32 0, i32 2
  %644 = load i64, i64* %643, align 8
  %645 = call %0* @176(%0* %632, i8* %635, i64 %638, i8* %641, i64 %644, i64* %42)
  store %0* %645, %0** %44, align 8
  %646 = load %0*, %0** %44, align 8
  %647 = load %18*, %18** %43, align 8
  %648 = getelementptr inbounds %18, %18* %647, i32 0, i32 0
  %649 = bitcast %19* %648 to %0**
  store %0* %646, %0** %649, align 8
  %650 = load %0*, %0** %44, align 8
  %651 = getelementptr inbounds %0, %0* %650, i32 0, i32 0
  %652 = getelementptr inbounds %1, %1* %651, i32 0, i32 1
  %653 = bitcast %2* %652 to %52*
  %654 = getelementptr inbounds %52, %52* %653, i32 0, i32 1
  %655 = load i8, i8* %654, align 1
  %656 = zext i8 %655 to i32
  %657 = and i32 %656, 2
  %658 = icmp ne i32 %657, 0
  %659 = zext i1 %658 to i64
  %660 = select i1 %658, i32 6, i32 5126
  %661 = load %18*, %18** %43, align 8
  %662 = getelementptr inbounds %18, %18* %661, i32 0, i32 1
  %663 = bitcast %20* %662 to i32*
  store i32 %660, i32* %663, align 8
  %664 = bitcast %0** %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %664) #13
  %665 = bitcast %18** %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %665) #13
  br label %666

666:                                              ; preds = %628
  br label %667

667:                                              ; preds = %666
  %668 = bitcast i64* %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %668) #13
  br label %669

669:                                              ; preds = %667, %625
  br label %670

670:                                              ; preds = %669, %581
  %671 = load %0*, %0** %30, align 8
  call void @159(%0* %671)
  call void @177(%18* %32)
  store i32 1, i32* %22, align 4
  br label %672

672:                                              ; preds = %670, %497
  %673 = bitcast %18** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %673) #13
  %674 = load i32, i32* %22, align 4
  switch i32 %674, label %679 [
    i32 30, label %675
  ]

675:                                              ; preds = %672
  %676 = load %45*, %45** %34, align 8
  %677 = getelementptr inbounds %45, %45* %676, i32 1
  store %45* %677, %45** %34, align 8
  br label %479

678:                                              ; preds = %479
  store i32 0, i32* %22, align 4
  br label %679

679:                                              ; preds = %678, %672
  %680 = bitcast %45** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %680) #13
  %681 = bitcast %45** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %681) #13
  %682 = bitcast %43** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %682) #13
  %683 = load i32, i32* %22, align 4
  switch i32 %683, label %687 [
    i32 0, label %684
  ]

684:                                              ; preds = %679
  br label %685

685:                                              ; preds = %684
  br label %686

686:                                              ; preds = %685
  store i32 0, i32* %22, align 4
  br label %687

687:                                              ; preds = %686, %679
  %688 = bitcast %18* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %688) #13
  %689 = bitcast %18** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %689) #13
  %690 = bitcast %0** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %690) #13
  %691 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %691) #13
  %692 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %692) #13
  %693 = load i32, i32* %22, align 4
  switch i32 %693, label %701 [
    i32 0, label %694
  ]

694:                                              ; preds = %687
  br label %699

695:                                              ; preds = %454
  %696 = load %18*, %18** %4, align 8
  %697 = load %0*, %0** %6, align 8
  %698 = load %43*, %43** %25, align 8
  call void @178(%18* %696, %0* %697, %43* %698)
  br label %699

699:                                              ; preds = %695, %694
  br label %700

700:                                              ; preds = %699
  store i32 0, i32* %22, align 4
  br label %701

701:                                              ; preds = %700, %687, %453
  %702 = bitcast %43** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %702) #13
  %703 = load i32, i32* %22, align 4
  switch i32 %703, label %774 [
    i32 0, label %704
  ]

704:                                              ; preds = %701
  br label %773

705:                                              ; preds = %404
  %706 = load %18*, %18** %5, align 8
  %707 = call zeroext i8 @157(%18* %706)
  %708 = zext i8 %707 to i32
  %709 = icmp ne i32 %708, 6
  br i1 %709, label %710, label %718

710:                                              ; preds = %705
  %711 = load %18*, %18** %5, align 8
  %712 = call zeroext i8 @157(%18* %711)
  %713 = zext i8 %712 to i32
  %714 = icmp ne i32 %713, 6
  br i1 %714, label %715, label %717

715:                                              ; preds = %710
  %716 = load %18*, %18** %5, align 8
  call void @_convert_to_string(%18* %716)
  br label %717

717:                                              ; preds = %715, %710
  br label %718

718:                                              ; preds = %717, %705
  br label %719

719:                                              ; preds = %718
  %720 = bitcast %18** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %720) #13
  %721 = load %18*, %18** %4, align 8
  store %18* %721, %18** %45, align 8
  %722 = bitcast %0** %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %722) #13
  %723 = load %0*, %0** %6, align 8
  %724 = load %18*, %18** %5, align 8
  %725 = getelementptr inbounds %18, %18* %724, i32 0, i32 0
  %726 = bitcast %19* %725 to %0**
  %727 = load %0*, %0** %726, align 8
  %728 = getelementptr inbounds %0, %0* %727, i32 0, i32 3
  %729 = getelementptr inbounds [1 x i8], [1 x i8]* %728, i32 0, i32 0
  %730 = load i8*, i8** %7, align 8
  %731 = load %18*, %18** %5, align 8
  %732 = getelementptr inbounds %18, %18* %731, i32 0, i32 0
  %733 = bitcast %19* %732 to %0**
  %734 = load %0*, %0** %733, align 8
  %735 = getelementptr inbounds %0, %0* %734, i32 0, i32 2
  %736 = load i64, i64* %735, align 8
  %737 = load i64, i64* %8, align 8
  %738 = icmp ult i64 %736, %737
  br i1 %738, label %739, label %746

739:                                              ; preds = %719
  %740 = load %18*, %18** %5, align 8
  %741 = getelementptr inbounds %18, %18* %740, i32 0, i32 0
  %742 = bitcast %19* %741 to %0**
  %743 = load %0*, %0** %742, align 8
  %744 = getelementptr inbounds %0, %0* %743, i32 0, i32 2
  %745 = load i64, i64* %744, align 8
  br label %748

746:                                              ; preds = %719
  %747 = load i64, i64* %8, align 8
  br label %748

748:                                              ; preds = %746, %739
  %749 = phi i64 [ %745, %739 ], [ %747, %746 ]
  %750 = call %0* @179(%0* %723, i8* %729, i8* %730, i64 %749)
  store %0* %750, %0** %46, align 8
  %751 = load %0*, %0** %46, align 8
  %752 = load %18*, %18** %45, align 8
  %753 = getelementptr inbounds %18, %18* %752, i32 0, i32 0
  %754 = bitcast %19* %753 to %0**
  store %0* %751, %0** %754, align 8
  %755 = load %0*, %0** %46, align 8
  %756 = getelementptr inbounds %0, %0* %755, i32 0, i32 0
  %757 = getelementptr inbounds %1, %1* %756, i32 0, i32 1
  %758 = bitcast %2* %757 to %52*
  %759 = getelementptr inbounds %52, %52* %758, i32 0, i32 1
  %760 = load i8, i8* %759, align 1
  %761 = zext i8 %760 to i32
  %762 = and i32 %761, 2
  %763 = icmp ne i32 %762, 0
  %764 = zext i1 %763 to i64
  %765 = select i1 %763, i32 6, i32 5126
  %766 = load %18*, %18** %45, align 8
  %767 = getelementptr inbounds %18, %18* %766, i32 0, i32 1
  %768 = bitcast %20* %767 to i32*
  store i32 %765, i32* %768, align 8
  %769 = bitcast %0** %46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %769) #13
  %770 = bitcast %18** %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %770) #13
  br label %771

771:                                              ; preds = %748
  br label %772

772:                                              ; preds = %771
  store i32 1, i32* %22, align 4
  br label %774

773:                                              ; preds = %704
  store i32 0, i32* %22, align 4
  br label %774

774:                                              ; preds = %773, %772, %701, %403, %378, %350
  %775 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %775) #13
  %776 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %776) #13
  %777 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %777) #13
  %778 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %778) #13
  %779 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %779) #13
  %780 = load i32, i32* %22, align 4
  switch i32 %780, label %782 [
    i32 0, label %781
    i32 1, label %781
  ]

781:                                              ; preds = %774, %774
  ret void

782:                                              ; preds = %774
  unreachable
}

; Function Attrs: nounwind uwtable
define internal %0* @175(%0* %0, i8 signext %1, i8* %2, i64 %3, i32 %4, i64* %5) #0 {
  %7 = alloca %0*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i64*, align 8
  %14 = alloca %0*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i8*, align 8
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  store %0* %0, %0** %8, align 8
  store i8 %1, i8* %9, align 1
  store i8* %2, i8** %10, align 8
  store i64 %3, i64* %11, align 8
  store i32 %4, i32* %12, align 4
  store i64* %5, i64** %13, align 8
  %32 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  store i64 0, i64* %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %34 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = load %0*, %0** %8, align 8
  %38 = getelementptr inbounds %0, %0* %37, i32 0, i32 3
  %39 = getelementptr inbounds [1 x i8], [1 x i8]* %38, i32 0, i32 0
  %40 = load %0*, %0** %8, align 8
  %41 = getelementptr inbounds %0, %0* %40, i32 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 %42
  store i8* %43, i8** %19, align 8
  %44 = load i32, i32* %12, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %76

46:                                               ; preds = %6
  %47 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = load %0*, %0** %8, align 8
  %49 = getelementptr inbounds %0, %0* %48, i32 0, i32 3
  %50 = getelementptr inbounds [1 x i8], [1 x i8]* %49, i32 0, i32 0
  store i8* %50, i8** %20, align 8
  %51 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  %52 = load i8*, i8** %20, align 8
  %53 = load %0*, %0** %8, align 8
  %54 = getelementptr inbounds %0, %0* %53, i32 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  store i8* %56, i8** %21, align 8
  br label %57

57:                                               ; preds = %68, %46
  %58 = load i8*, i8** %20, align 8
  %59 = load i8, i8* %9, align 1
  %60 = sext i8 %59 to i32
  %61 = load i8*, i8** %21, align 8
  %62 = load i8*, i8** %20, align 8
  %63 = ptrtoint i8* %61 to i64
  %64 = ptrtoint i8* %62 to i64
  %65 = sub i64 %63, %64
  %66 = call i8* @memchr(i8* %58, i32 %60, i64 %65) #14
  store i8* %66, i8** %20, align 8
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %73

68:                                               ; preds = %57
  %69 = load i64, i64* %15, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %15, align 8
  %71 = load i8*, i8** %20, align 8
  %72 = getelementptr inbounds i8, i8* %71, i32 1
  store i8* %72, i8** %20, align 8
  br label %57

73:                                               ; preds = %57
  %74 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #13
  %75 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #13
  br label %120

76:                                               ; preds = %6
  %77 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %77) #13
  %78 = call i32** @__ctype_tolower_loc() #17
  %79 = load i32*, i32** %78, align 8
  %80 = load i8, i8* %9, align 1
  %81 = sext i8 %80 to i32
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %79, i64 %82
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %22, align 4
  %85 = load i32, i32* %22, align 4
  store i32 %85, i32* %23, align 4
  %86 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %86) #13
  %87 = load i32, i32* %23, align 4
  %88 = trunc i32 %87 to i8
  store i8 %88, i8* %16, align 1
  %89 = load %0*, %0** %8, align 8
  %90 = getelementptr inbounds %0, %0* %89, i32 0, i32 3
  %91 = getelementptr inbounds [1 x i8], [1 x i8]* %90, i32 0, i32 0
  store i8* %91, i8** %17, align 8
  br label %92

92:                                               ; preds = %116, %76
  %93 = load i8*, i8** %17, align 8
  %94 = load i8*, i8** %19, align 8
  %95 = icmp ult i8* %93, %94
  br i1 %95, label %96, label %119

96:                                               ; preds = %92
  %97 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %97) #13
  %98 = call i32** @__ctype_tolower_loc() #17
  %99 = load i32*, i32** %98, align 8
  %100 = load i8*, i8** %17, align 8
  %101 = load i8, i8* %100, align 1
  %102 = sext i8 %101 to i32
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %99, i64 %103
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %24, align 4
  %106 = load i32, i32* %24, align 4
  store i32 %106, i32* %25, align 4
  %107 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %107) #13
  %108 = load i32, i32* %25, align 4
  %109 = load i8, i8* %16, align 1
  %110 = sext i8 %109 to i32
  %111 = icmp eq i32 %108, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %96
  %113 = load i64, i64* %15, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %15, align 8
  br label %115

115:                                              ; preds = %112, %96
  br label %116

116:                                              ; preds = %115
  %117 = load i8*, i8** %17, align 8
  %118 = getelementptr inbounds i8, i8* %117, i32 1
  store i8* %118, i8** %17, align 8
  br label %92

119:                                              ; preds = %92
  br label %120

120:                                              ; preds = %119, %73
  %121 = load i64, i64* %15, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %120
  %124 = load %0*, %0** %8, align 8
  %125 = call %0* @163(%0* %124)
  store %0* %125, %0** %7, align 8
  store i32 1, i32* %26, align 4
  br label %282

126:                                              ; preds = %120
  %127 = load i64, i64* %11, align 8
  %128 = icmp ugt i64 %127, 0
  br i1 %128, label %129, label %137

129:                                              ; preds = %126
  %130 = load i64, i64* %15, align 8
  %131 = load i64, i64* %11, align 8
  %132 = sub i64 %131, 1
  %133 = load %0*, %0** %8, align 8
  %134 = getelementptr inbounds %0, %0* %133, i32 0, i32 2
  %135 = load i64, i64* %134, align 8
  %136 = call %0* @153(i64 %130, i64 %132, i64 %135, i32 0)
  store %0* %136, %0** %14, align 8
  br label %144

137:                                              ; preds = %126
  %138 = load %0*, %0** %8, align 8
  %139 = getelementptr inbounds %0, %0* %138, i32 0, i32 2
  %140 = load i64, i64* %139, align 8
  %141 = load i64, i64* %15, align 8
  %142 = sub i64 %140, %141
  %143 = call %0* @162(i64 %142, i32 0)
  store %0* %143, %0** %14, align 8
  br label %144

144:                                              ; preds = %137, %129
  %145 = load %0*, %0** %14, align 8
  %146 = getelementptr inbounds %0, %0* %145, i32 0, i32 3
  %147 = getelementptr inbounds [1 x i8], [1 x i8]* %146, i32 0, i32 0
  store i8* %147, i8** %18, align 8
  %148 = load i32, i32* %12, align 4
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %230

150:                                              ; preds = %144
  %151 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %151) #13
  %152 = load %0*, %0** %8, align 8
  %153 = getelementptr inbounds %0, %0* %152, i32 0, i32 3
  %154 = getelementptr inbounds [1 x i8], [1 x i8]* %153, i32 0, i32 0
  store i8* %154, i8** %27, align 8
  %155 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %155) #13
  %156 = load i8*, i8** %27, align 8
  %157 = load %0*, %0** %8, align 8
  %158 = getelementptr inbounds %0, %0* %157, i32 0, i32 2
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds i8, i8* %156, i64 %159
  store i8* %160, i8** %28, align 8
  %161 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %161) #13
  %162 = load %0*, %0** %8, align 8
  %163 = getelementptr inbounds %0, %0* %162, i32 0, i32 3
  %164 = getelementptr inbounds [1 x i8], [1 x i8]* %163, i32 0, i32 0
  store i8* %164, i8** %29, align 8
  br label %165

165:                                              ; preds = %206, %150
  %166 = load i8*, i8** %27, align 8
  %167 = load i8, i8* %9, align 1
  %168 = sext i8 %167 to i32
  %169 = load i8*, i8** %28, align 8
  %170 = load i8*, i8** %27, align 8
  %171 = ptrtoint i8* %169 to i64
  %172 = ptrtoint i8* %170 to i64
  %173 = sub i64 %171, %172
  %174 = call i8* @memchr(i8* %166, i32 %168, i64 %173) #14
  store i8* %174, i8** %27, align 8
  %175 = icmp ne i8* %174, null
  br i1 %175, label %176, label %207

176:                                              ; preds = %165
  %177 = load i8*, i8** %18, align 8
  %178 = load i8*, i8** %29, align 8
  %179 = load i8*, i8** %27, align 8
  %180 = load i8*, i8** %29, align 8
  %181 = ptrtoint i8* %179 to i64
  %182 = ptrtoint i8* %180 to i64
  %183 = sub i64 %181, %182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %177, i8* align 1 %178, i64 %183, i1 false)
  %184 = load i8*, i8** %27, align 8
  %185 = load i8*, i8** %29, align 8
  %186 = ptrtoint i8* %184 to i64
  %187 = ptrtoint i8* %185 to i64
  %188 = sub i64 %186, %187
  %189 = load i8*, i8** %18, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 %188
  store i8* %190, i8** %18, align 8
  %191 = load i8*, i8** %18, align 8
  %192 = load i8*, i8** %10, align 8
  %193 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %191, i8* align 1 %192, i64 %193, i1 false)
  %194 = load i64, i64* %11, align 8
  %195 = load i8*, i8** %18, align 8
  %196 = getelementptr inbounds i8, i8* %195, i64 %194
  store i8* %196, i8** %18, align 8
  %197 = load i8*, i8** %27, align 8
  %198 = getelementptr inbounds i8, i8* %197, i32 1
  store i8* %198, i8** %27, align 8
  %199 = load i8*, i8** %27, align 8
  store i8* %199, i8** %29, align 8
  %200 = load i64*, i64** %13, align 8
  %201 = icmp ne i64* %200, null
  br i1 %201, label %202, label %206

202:                                              ; preds = %176
  %203 = load i64*, i64** %13, align 8
  %204 = load i64, i64* %203, align 8
  %205 = add nsw i64 %204, 1
  store i64 %205, i64* %203, align 8
  br label %206

206:                                              ; preds = %202, %176
  br label %165

207:                                              ; preds = %165
  %208 = load i8*, i8** %29, align 8
  %209 = load i8*, i8** %28, align 8
  %210 = icmp ult i8* %208, %209
  br i1 %210, label %211, label %226

211:                                              ; preds = %207
  %212 = load i8*, i8** %18, align 8
  %213 = load i8*, i8** %29, align 8
  %214 = load i8*, i8** %28, align 8
  %215 = load i8*, i8** %29, align 8
  %216 = ptrtoint i8* %214 to i64
  %217 = ptrtoint i8* %215 to i64
  %218 = sub i64 %216, %217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %212, i8* align 1 %213, i64 %218, i1 false)
  %219 = load i8*, i8** %28, align 8
  %220 = load i8*, i8** %29, align 8
  %221 = ptrtoint i8* %219 to i64
  %222 = ptrtoint i8* %220 to i64
  %223 = sub i64 %221, %222
  %224 = load i8*, i8** %18, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 %223
  store i8* %225, i8** %18, align 8
  br label %226

226:                                              ; preds = %211, %207
  %227 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %227) #13
  %228 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %228) #13
  %229 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #13
  br label %279

230:                                              ; preds = %144
  %231 = load %0*, %0** %8, align 8
  %232 = getelementptr inbounds %0, %0* %231, i32 0, i32 3
  %233 = getelementptr inbounds [1 x i8], [1 x i8]* %232, i32 0, i32 0
  store i8* %233, i8** %17, align 8
  br label %234

234:                                              ; preds = %275, %230
  %235 = load i8*, i8** %17, align 8
  %236 = load i8*, i8** %19, align 8
  %237 = icmp ult i8* %235, %236
  br i1 %237, label %238, label %278

238:                                              ; preds = %234
  %239 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %239) #13
  %240 = call i32** @__ctype_tolower_loc() #17
  %241 = load i32*, i32** %240, align 8
  %242 = load i8*, i8** %17, align 8
  %243 = load i8, i8* %242, align 1
  %244 = sext i8 %243 to i32
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i32, i32* %241, i64 %245
  %247 = load i32, i32* %246, align 4
  store i32 %247, i32* %30, align 4
  %248 = load i32, i32* %30, align 4
  store i32 %248, i32* %31, align 4
  %249 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %249) #13
  %250 = load i32, i32* %31, align 4
  %251 = load i8, i8* %16, align 1
  %252 = sext i8 %251 to i32
  %253 = icmp eq i32 %250, %252
  br i1 %253, label %254, label %268

254:                                              ; preds = %238
  %255 = load i64*, i64** %13, align 8
  %256 = icmp ne i64* %255, null
  br i1 %256, label %257, label %261

257:                                              ; preds = %254
  %258 = load i64*, i64** %13, align 8
  %259 = load i64, i64* %258, align 8
  %260 = add nsw i64 %259, 1
  store i64 %260, i64* %258, align 8
  br label %261

261:                                              ; preds = %257, %254
  %262 = load i8*, i8** %18, align 8
  %263 = load i8*, i8** %10, align 8
  %264 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %262, i8* align 1 %263, i64 %264, i1 false)
  %265 = load i64, i64* %11, align 8
  %266 = load i8*, i8** %18, align 8
  %267 = getelementptr inbounds i8, i8* %266, i64 %265
  store i8* %267, i8** %18, align 8
  br label %274

268:                                              ; preds = %238
  %269 = load i8*, i8** %17, align 8
  %270 = load i8, i8* %269, align 1
  %271 = load i8*, i8** %18, align 8
  store i8 %270, i8* %271, align 1
  %272 = load i8*, i8** %18, align 8
  %273 = getelementptr inbounds i8, i8* %272, i32 1
  store i8* %273, i8** %18, align 8
  br label %274

274:                                              ; preds = %268, %261
  br label %275

275:                                              ; preds = %274
  %276 = load i8*, i8** %17, align 8
  %277 = getelementptr inbounds i8, i8* %276, i32 1
  store i8* %277, i8** %17, align 8
  br label %234

278:                                              ; preds = %234
  br label %279

279:                                              ; preds = %278, %226
  %280 = load i8*, i8** %18, align 8
  store i8 0, i8* %280, align 1
  %281 = load %0*, %0** %14, align 8
  store %0* %281, %0** %7, align 8
  store i32 1, i32* %26, align 4
  br label %282

282:                                              ; preds = %279, %123
  %283 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %283) #13
  %284 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %284) #13
  %285 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %286 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %286) #13
  %287 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %287) #13
  %288 = load %0*, %0** %7, align 8
  ret %0* %288
}

; Function Attrs: nounwind uwtable
define internal %0* @176(%0* %0, i8* %1, i64 %2, i8* %3, i64 %4, i64* %5) #0 {
  %7 = alloca %0*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64*, align 8
  %14 = alloca %0*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  store %0* %0, %0** %8, align 8
  store i8* %1, i8** %9, align 8
  store i64 %2, i64* %10, align 8
  store i8* %3, i8** %11, align 8
  store i64 %4, i64* %12, align 8
  store i64* %5, i64** %13, align 8
  %25 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = load i64, i64* %10, align 8
  %27 = load %0*, %0** %8, align 8
  %28 = getelementptr inbounds %0, %0* %27, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %31, label %234

31:                                               ; preds = %6
  %32 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = load i64, i64* %10, align 8
  %38 = load i64, i64* %12, align 8
  %39 = icmp eq i64 %37, %38
  br i1 %39, label %40, label %96

40:                                               ; preds = %31
  store %0* null, %0** %14, align 8
  %41 = load %0*, %0** %8, align 8
  %42 = getelementptr inbounds %0, %0* %41, i32 0, i32 3
  %43 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i32 0, i32 0
  %44 = load %0*, %0** %8, align 8
  %45 = getelementptr inbounds %0, %0* %44, i32 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i8, i8* %43, i64 %46
  store i8* %47, i8** %15, align 8
  %48 = load %0*, %0** %8, align 8
  %49 = getelementptr inbounds %0, %0* %48, i32 0, i32 3
  %50 = getelementptr inbounds [1 x i8], [1 x i8]* %49, i32 0, i32 0
  store i8* %50, i8** %18, align 8
  br label %51

51:                                               ; preds = %86, %40
  %52 = load i8*, i8** %18, align 8
  %53 = load i8*, i8** %9, align 8
  %54 = load i64, i64* %10, align 8
  %55 = load i8*, i8** %15, align 8
  %56 = call i8* @156(i8* %52, i8* %53, i64 %54, i8* %55)
  store i8* %56, i8** %19, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %58, label %90

58:                                               ; preds = %51
  %59 = load %0*, %0** %14, align 8
  %60 = icmp ne %0* %59, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %58
  %62 = load %0*, %0** %8, align 8
  %63 = getelementptr inbounds %0, %0* %62, i32 0, i32 3
  %64 = getelementptr inbounds [1 x i8], [1 x i8]* %63, i32 0, i32 0
  %65 = load %0*, %0** %8, align 8
  %66 = getelementptr inbounds %0, %0* %65, i32 0, i32 2
  %67 = load i64, i64* %66, align 8
  %68 = call %0* @148(i8* %64, i64 %67, i32 0)
  store %0* %68, %0** %14, align 8
  br label %69

69:                                               ; preds = %61, %58
  %70 = load %0*, %0** %14, align 8
  %71 = getelementptr inbounds %0, %0* %70, i32 0, i32 3
  %72 = getelementptr inbounds [1 x i8], [1 x i8]* %71, i32 0, i32 0
  %73 = load i8*, i8** %19, align 8
  %74 = load %0*, %0** %8, align 8
  %75 = getelementptr inbounds %0, %0* %74, i32 0, i32 3
  %76 = getelementptr inbounds [1 x i8], [1 x i8]* %75, i32 0, i32 0
  %77 = ptrtoint i8* %73 to i64
  %78 = ptrtoint i8* %76 to i64
  %79 = sub i64 %77, %78
  %80 = getelementptr inbounds i8, i8* %72, i64 %79
  %81 = load i8*, i8** %11, align 8
  %82 = load i64, i64* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %81, i64 %82, i1 false)
  %83 = load i64*, i64** %13, align 8
  %84 = load i64, i64* %83, align 8
  %85 = add nsw i64 %84, 1
  store i64 %85, i64* %83, align 8
  br label %86

86:                                               ; preds = %69
  %87 = load i8*, i8** %19, align 8
  %88 = load i64, i64* %10, align 8
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  store i8* %89, i8** %18, align 8
  br label %51

90:                                               ; preds = %51
  %91 = load %0*, %0** %14, align 8
  %92 = icmp ne %0* %91, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  store i32 5, i32* %20, align 4
  br label %227

94:                                               ; preds = %90
  %95 = load %0*, %0** %14, align 8
  store %0* %95, %0** %7, align 8
  store i32 1, i32* %20, align 4
  br label %227

96:                                               ; preds = %31
  %97 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %97) #13
  store i64 0, i64* %21, align 8
  %98 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %98) #13
  %99 = load %0*, %0** %8, align 8
  %100 = getelementptr inbounds %0, %0* %99, i32 0, i32 3
  %101 = getelementptr inbounds [1 x i8], [1 x i8]* %100, i32 0, i32 0
  store i8* %101, i8** %22, align 8
  %102 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %102) #13
  %103 = load i8*, i8** %9, align 8
  store i8* %103, i8** %23, align 8
  %104 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %104) #13
  %105 = load i8*, i8** %22, align 8
  %106 = load %0*, %0** %8, align 8
  %107 = getelementptr inbounds %0, %0* %106, i32 0, i32 2
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds i8, i8* %105, i64 %108
  store i8* %109, i8** %24, align 8
  br label %110

110:                                              ; preds = %117, %96
  %111 = load i8*, i8** %22, align 8
  %112 = load i8*, i8** %23, align 8
  %113 = load i64, i64* %10, align 8
  %114 = load i8*, i8** %24, align 8
  %115 = call i8* @156(i8* %111, i8* %112, i64 %113, i8* %114)
  store i8* %115, i8** %22, align 8
  %116 = icmp ne i8* %115, null
  br i1 %116, label %117, label %123

117:                                              ; preds = %110
  %118 = load i64, i64* %10, align 8
  %119 = load i8*, i8** %22, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %118
  store i8* %120, i8** %22, align 8
  %121 = load i64, i64* %21, align 8
  %122 = add i64 %121, 1
  store i64 %122, i64* %21, align 8
  br label %110

123:                                              ; preds = %110
  %124 = load i64, i64* %21, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  store i32 5, i32* %20, align 4
  br label %222

127:                                              ; preds = %123
  %128 = load i64, i64* %12, align 8
  %129 = load i64, i64* %10, align 8
  %130 = icmp ugt i64 %128, %129
  br i1 %130, label %131, label %140

131:                                              ; preds = %127
  %132 = load i64, i64* %21, align 8
  %133 = load i64, i64* %12, align 8
  %134 = load i64, i64* %10, align 8
  %135 = sub i64 %133, %134
  %136 = load %0*, %0** %8, align 8
  %137 = getelementptr inbounds %0, %0* %136, i32 0, i32 2
  %138 = load i64, i64* %137, align 8
  %139 = call %0* @153(i64 %132, i64 %135, i64 %138, i32 0)
  store %0* %139, %0** %14, align 8
  br label %151

140:                                              ; preds = %127
  %141 = load i64, i64* %21, align 8
  %142 = load i64, i64* %12, align 8
  %143 = load i64, i64* %10, align 8
  %144 = sub i64 %142, %143
  %145 = mul i64 %141, %144
  %146 = load %0*, %0** %8, align 8
  %147 = getelementptr inbounds %0, %0* %146, i32 0, i32 2
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %145, %148
  %150 = call %0* @162(i64 %149, i32 0)
  store %0* %150, %0** %14, align 8
  br label %151

151:                                              ; preds = %140, %131
  %152 = load %0*, %0** %14, align 8
  %153 = getelementptr inbounds %0, %0* %152, i32 0, i32 3
  %154 = getelementptr inbounds [1 x i8], [1 x i8]* %153, i32 0, i32 0
  store i8* %154, i8** %17, align 8
  store i8* %154, i8** %16, align 8
  %155 = load %0*, %0** %8, align 8
  %156 = getelementptr inbounds %0, %0* %155, i32 0, i32 3
  %157 = getelementptr inbounds [1 x i8], [1 x i8]* %156, i32 0, i32 0
  %158 = load %0*, %0** %8, align 8
  %159 = getelementptr inbounds %0, %0* %158, i32 0, i32 2
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds i8, i8* %157, i64 %160
  store i8* %161, i8** %15, align 8
  %162 = load %0*, %0** %8, align 8
  %163 = getelementptr inbounds %0, %0* %162, i32 0, i32 3
  %164 = getelementptr inbounds [1 x i8], [1 x i8]* %163, i32 0, i32 0
  store i8* %164, i8** %18, align 8
  br label %165

165:                                              ; preds = %196, %151
  %166 = load i8*, i8** %18, align 8
  %167 = load i8*, i8** %9, align 8
  %168 = load i64, i64* %10, align 8
  %169 = load i8*, i8** %15, align 8
  %170 = call i8* @156(i8* %166, i8* %167, i64 %168, i8* %169)
  store i8* %170, i8** %19, align 8
  %171 = icmp ne i8* %170, null
  br i1 %171, label %172, label %200

172:                                              ; preds = %165
  %173 = load i8*, i8** %16, align 8
  %174 = load i8*, i8** %18, align 8
  %175 = load i8*, i8** %19, align 8
  %176 = load i8*, i8** %18, align 8
  %177 = ptrtoint i8* %175 to i64
  %178 = ptrtoint i8* %176 to i64
  %179 = sub i64 %177, %178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %173, i8* align 1 %174, i64 %179, i1 false)
  %180 = load i8*, i8** %19, align 8
  %181 = load i8*, i8** %18, align 8
  %182 = ptrtoint i8* %180 to i64
  %183 = ptrtoint i8* %181 to i64
  %184 = sub i64 %182, %183
  %185 = load i8*, i8** %16, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 %184
  store i8* %186, i8** %16, align 8
  %187 = load i8*, i8** %16, align 8
  %188 = load i8*, i8** %11, align 8
  %189 = load i64, i64* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %187, i8* align 1 %188, i64 %189, i1 false)
  %190 = load i64, i64* %12, align 8
  %191 = load i8*, i8** %16, align 8
  %192 = getelementptr inbounds i8, i8* %191, i64 %190
  store i8* %192, i8** %16, align 8
  %193 = load i64*, i64** %13, align 8
  %194 = load i64, i64* %193, align 8
  %195 = add nsw i64 %194, 1
  store i64 %195, i64* %193, align 8
  br label %196

196:                                              ; preds = %172
  %197 = load i8*, i8** %19, align 8
  %198 = load i64, i64* %10, align 8
  %199 = getelementptr inbounds i8, i8* %197, i64 %198
  store i8* %199, i8** %18, align 8
  br label %165

200:                                              ; preds = %165
  %201 = load i8*, i8** %18, align 8
  %202 = load i8*, i8** %15, align 8
  %203 = icmp ult i8* %201, %202
  br i1 %203, label %204, label %219

204:                                              ; preds = %200
  %205 = load i8*, i8** %16, align 8
  %206 = load i8*, i8** %18, align 8
  %207 = load i8*, i8** %15, align 8
  %208 = load i8*, i8** %18, align 8
  %209 = ptrtoint i8* %207 to i64
  %210 = ptrtoint i8* %208 to i64
  %211 = sub i64 %209, %210
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %205, i8* align 1 %206, i64 %211, i1 false)
  %212 = load i8*, i8** %15, align 8
  %213 = load i8*, i8** %18, align 8
  %214 = ptrtoint i8* %212 to i64
  %215 = ptrtoint i8* %213 to i64
  %216 = sub i64 %214, %215
  %217 = load i8*, i8** %16, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 %216
  store i8* %218, i8** %16, align 8
  br label %219

219:                                              ; preds = %204, %200
  %220 = load i8*, i8** %16, align 8
  store i8 0, i8* %220, align 1
  %221 = load %0*, %0** %14, align 8
  store %0* %221, %0** %7, align 8
  store i32 1, i32* %20, align 4
  br label %222

222:                                              ; preds = %126, %219
  %223 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #13
  %224 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #13
  %225 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %225) #13
  %226 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %226) #13
  br label %227

227:                                              ; preds = %93, %222, %94
  %228 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %228) #13
  %229 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #13
  %230 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #13
  %231 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #13
  %232 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %232) #13
  %233 = load i32, i32* %20, align 4
  switch i32 %233, label %278 [
    i32 5, label %251
  ]

234:                                              ; preds = %6
  %235 = load i64, i64* %10, align 8
  %236 = load %0*, %0** %8, align 8
  %237 = getelementptr inbounds %0, %0* %236, i32 0, i32 2
  %238 = load i64, i64* %237, align 8
  %239 = icmp ugt i64 %235, %238
  br i1 %239, label %250, label %240

240:                                              ; preds = %234
  %241 = load %0*, %0** %8, align 8
  %242 = getelementptr inbounds %0, %0* %241, i32 0, i32 3
  %243 = getelementptr inbounds [1 x i8], [1 x i8]* %242, i32 0, i32 0
  %244 = load i8*, i8** %9, align 8
  %245 = load %0*, %0** %8, align 8
  %246 = getelementptr inbounds %0, %0* %245, i32 0, i32 2
  %247 = load i64, i64* %246, align 8
  %248 = call i32 @memcmp(i8* %243, i8* %244, i64 %247) #14
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %250, label %254

250:                                              ; preds = %240, %234
  br label %251

251:                                              ; preds = %250, %227
  %252 = load %0*, %0** %8, align 8
  %253 = call %0* @163(%0* %252)
  store %0* %253, %0** %7, align 8
  store i32 1, i32* %20, align 4
  br label %278

254:                                              ; preds = %240
  %255 = load i64, i64* %12, align 8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %254
  %258 = load %0*, %0** @zend_empty_string, align 8
  store %0* %258, %0** %14, align 8
  br label %273

259:                                              ; preds = %254
  %260 = load i64, i64* %12, align 8
  %261 = icmp eq i64 %260, 1
  br i1 %261, label %262, label %268

262:                                              ; preds = %259
  %263 = load i8*, i8** %11, align 8
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i64
  %266 = getelementptr inbounds [256 x %0*], [256 x %0*]* @zend_one_char_string, i64 0, i64 %265
  %267 = load %0*, %0** %266, align 8
  store %0* %267, %0** %14, align 8
  br label %272

268:                                              ; preds = %259
  %269 = load i8*, i8** %11, align 8
  %270 = load i64, i64* %12, align 8
  %271 = call %0* @148(i8* %269, i64 %270, i32 0)
  store %0* %271, %0** %14, align 8
  br label %272

272:                                              ; preds = %268, %262
  br label %273

273:                                              ; preds = %272, %257
  %274 = load i64*, i64** %13, align 8
  %275 = load i64, i64* %274, align 8
  %276 = add nsw i64 %275, 1
  store i64 %276, i64* %274, align 8
  %277 = load %0*, %0** %14, align 8
  store %0* %277, %0** %7, align 8
  store i32 1, i32* %20, align 4
  br label %278

278:                                              ; preds = %273, %251, %227
  %279 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %279) #13
  %280 = load %0*, %0** %7, align 8
  ret %0* %280
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @177(%18* %0) #5 {
  %2 = alloca %18*, align 8
  store %18* %0, %18** %2, align 8
  %3 = load %18*, %18** %2, align 8
  %4 = getelementptr inbounds %18, %18* %3, i32 0, i32 1
  %5 = bitcast %20* %4 to %53*
  %6 = getelementptr inbounds %53, %53* %5, i32 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %1
  %12 = load %18*, %18** %2, align 8
  %13 = call i32 @190(%18* %12)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = load %18*, %18** %2, align 8
  %17 = getelementptr inbounds %18, %18* %16, i32 0, i32 0
  %18 = bitcast %19* %17 to %54**
  %19 = load %54*, %54** %18, align 8
  call void @_zval_dtor_func(%54* %19)
  br label %20

20:                                               ; preds = %15, %11, %1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @178(%18* %0, %0* %1, %43* %2) #0 {
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %43*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %0*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %43, align 8
  %18 = alloca %18*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca %42, align 8
  %21 = alloca [32 x i64], align 16
  %22 = alloca i64*, align 8
  %23 = alloca %43*, align 8
  %24 = alloca %45*, align 8
  %25 = alloca %45*, align 8
  %26 = alloca %18*, align 8
  %27 = alloca i32, align 4
  %28 = alloca %0*, align 8
  %29 = alloca %43*, align 8
  %30 = alloca %45*, align 8
  %31 = alloca %45*, align 8
  %32 = alloca %18*, align 8
  %33 = alloca %18*, align 8
  %34 = alloca %0*, align 8
  %35 = alloca %0*, align 8
  %36 = alloca %18*, align 8
  %37 = alloca %0*, align 8
  %38 = alloca %18*, align 8
  %39 = alloca %0*, align 8
  store %18* %0, %18** %4, align 8
  store %0* %1, %0** %5, align 8
  store %43* %2, %43** %6, align 8
  %40 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = load %0*, %0** %5, align 8
  %42 = getelementptr inbounds %0, %0* %41, i32 0, i32 3
  %43 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i32 0, i32 0
  store i8* %43, i8** %7, align 8
  %44 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = load %0*, %0** %5, align 8
  %46 = getelementptr inbounds %0, %0* %45, i32 0, i32 2
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %8, align 8
  %48 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  %49 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  %50 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  %51 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  %52 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  %53 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #13
  store i32 0, i32* %14, align 4
  %54 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #13
  store i64 131072, i64* %15, align 8
  %55 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #13
  store i64 0, i64* %16, align 8
  %56 = bitcast %43* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* %56) #13
  %57 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #13
  %58 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #13
  %59 = bitcast %42* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %59) #13
  %60 = bitcast %42* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false)
  %61 = bitcast [32 x i64]* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %61) #13
  %62 = bitcast i64** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #13
  %63 = load i64, i64* %8, align 8
  %64 = add i64 %63, 8
  %65 = udiv i64 %64, 8
  %66 = call noalias i8* @_ecalloc(i64 %65, i64 8) #18
  %67 = bitcast i8* %66 to i64*
  store i64* %67, i64** %22, align 8
  %68 = getelementptr inbounds [32 x i64], [32 x i64]* %21, i32 0, i32 0
  %69 = bitcast i64* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %69, i8 0, i64 256, i1 false)
  br label %70

70:                                               ; preds = %3
  %71 = bitcast %43** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #13
  %72 = load %43*, %43** %6, align 8
  store %43* %72, %43** %23, align 8
  %73 = bitcast %45** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #13
  %74 = load %43*, %43** %23, align 8
  %75 = getelementptr inbounds %43, %43* %74, i32 0, i32 3
  %76 = load %45*, %45** %75, align 8
  store %45* %76, %45** %24, align 8
  %77 = bitcast %45** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #13
  %78 = load %45*, %45** %24, align 8
  %79 = load %43*, %43** %23, align 8
  %80 = getelementptr inbounds %43, %43* %79, i32 0, i32 4
  %81 = load i32, i32* %80, align 8
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %45, %45* %78, i64 %82
  store %45* %83, %45** %25, align 8
  br label %84

84:                                               ; preds = %193, %70
  %85 = load %45*, %45** %24, align 8
  %86 = load %45*, %45** %25, align 8
  %87 = icmp ne %45* %85, %86
  br i1 %87, label %88, label %196

88:                                               ; preds = %84
  %89 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89) #13
  %90 = load %45*, %45** %24, align 8
  %91 = getelementptr inbounds %45, %45* %90, i32 0, i32 0
  store %18* %91, %18** %26, align 8
  %92 = load %18*, %18** %26, align 8
  %93 = call zeroext i8 @157(%18* %92)
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 0
  %96 = xor i1 %95, true
  %97 = xor i1 %96, true
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = call i64 @llvm.expect.i64(i64 %99, i64 0)
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %88
  store i32 6, i32* %27, align 4
  br label %189

103:                                              ; preds = %88
  %104 = load %45*, %45** %24, align 8
  %105 = getelementptr inbounds %45, %45* %104, i32 0, i32 2
  %106 = load %0*, %0** %105, align 8
  store %0* %106, %0** %10, align 8
  %107 = load %0*, %0** %10, align 8
  %108 = icmp ne %0* %107, null
  %109 = xor i1 %108, true
  %110 = xor i1 %109, true
  %111 = xor i1 %110, true
  %112 = zext i1 %111 to i32
  %113 = sext i32 %112 to i64
  %114 = call i64 @llvm.expect.i64(i64 %113, i64 0)
  %115 = icmp ne i64 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %103
  store i32 1, i32* %14, align 4
  br label %188

117:                                              ; preds = %103
  %118 = load %0*, %0** %10, align 8
  %119 = getelementptr inbounds %0, %0* %118, i32 0, i32 2
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %11, align 8
  %121 = load i64, i64* %11, align 8
  %122 = icmp ult i64 %121, 1
  %123 = xor i1 %122, true
  %124 = xor i1 %123, true
  %125 = zext i1 %124 to i32
  %126 = sext i32 %125 to i64
  %127 = call i64 @llvm.expect.i64(i64 %126, i64 0)
  %128 = icmp ne i64 %127, 0
  br i1 %128, label %129, label %138

129:                                              ; preds = %117
  %130 = load i64*, i64** %22, align 8
  %131 = bitcast i64* %130 to i8*
  call void @_efree(i8* %131)
  br label %132

132:                                              ; preds = %129
  %133 = load %18*, %18** %4, align 8
  %134 = getelementptr inbounds %18, %18* %133, i32 0, i32 1
  %135 = bitcast %20* %134 to i32*
  store i32 2, i32* %135, align 8
  br label %136

136:                                              ; preds = %132
  br label %137

137:                                              ; preds = %136
  store i32 1, i32* %27, align 4
  br label %189

138:                                              ; preds = %117
  %139 = load i64, i64* %11, align 8
  %140 = load i64, i64* %8, align 8
  %141 = icmp ugt i64 %139, %140
  %142 = xor i1 %141, true
  %143 = xor i1 %142, true
  %144 = zext i1 %143 to i32
  %145 = sext i32 %144 to i64
  %146 = call i64 @llvm.expect.i64(i64 %145, i64 0)
  %147 = icmp ne i64 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %138
  store i32 6, i32* %27, align 4
  br label %189

149:                                              ; preds = %138
  br label %150

150:                                              ; preds = %149
  %151 = load i64, i64* %11, align 8
  %152 = load i64, i64* %16, align 8
  %153 = icmp ugt i64 %151, %152
  br i1 %153, label %154, label %156

154:                                              ; preds = %150
  %155 = load i64, i64* %11, align 8
  store i64 %155, i64* %16, align 8
  br label %156

156:                                              ; preds = %154, %150
  %157 = load i64, i64* %11, align 8
  %158 = load i64, i64* %15, align 8
  %159 = icmp ult i64 %157, %158
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  %161 = load i64, i64* %11, align 8
  store i64 %161, i64* %15, align 8
  br label %162

162:                                              ; preds = %160, %156
  %163 = load i64, i64* %11, align 8
  %164 = urem i64 %163, 8
  %165 = shl i64 1, %164
  %166 = load i64*, i64** %22, align 8
  %167 = load i64, i64* %11, align 8
  %168 = udiv i64 %167, 8
  %169 = getelementptr inbounds i64, i64* %166, i64 %168
  %170 = load i64, i64* %169, align 8
  %171 = or i64 %170, %165
  store i64 %171, i64* %169, align 8
  %172 = load %0*, %0** %10, align 8
  %173 = getelementptr inbounds %0, %0* %172, i32 0, i32 3
  %174 = getelementptr inbounds [1 x i8], [1 x i8]* %173, i64 0, i64 0
  %175 = load i8, i8* %174, align 8
  %176 = zext i8 %175 to i64
  %177 = urem i64 %176, 8
  %178 = shl i64 1, %177
  %179 = load %0*, %0** %10, align 8
  %180 = getelementptr inbounds %0, %0* %179, i32 0, i32 3
  %181 = getelementptr inbounds [1 x i8], [1 x i8]* %180, i64 0, i64 0
  %182 = load i8, i8* %181, align 8
  %183 = zext i8 %182 to i64
  %184 = udiv i64 %183, 8
  %185 = getelementptr inbounds [32 x i64], [32 x i64]* %21, i64 0, i64 %184
  %186 = load i64, i64* %185, align 8
  %187 = or i64 %186, %178
  store i64 %187, i64* %185, align 8
  br label %188

188:                                              ; preds = %162, %116
  store i32 0, i32* %27, align 4
  br label %189

189:                                              ; preds = %188, %148, %137, %102
  %190 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = load i32, i32* %27, align 4
  switch i32 %191, label %197 [
    i32 0, label %192
    i32 6, label %193
  ]

192:                                              ; preds = %189
  br label %193

193:                                              ; preds = %192, %189
  %194 = load %45*, %45** %24, align 8
  %195 = getelementptr inbounds %45, %45* %194, i32 1
  store %45* %195, %45** %24, align 8
  br label %84

196:                                              ; preds = %84
  store i32 0, i32* %27, align 4
  br label %197

197:                                              ; preds = %196, %189
  %198 = bitcast %45** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #13
  %199 = bitcast %45** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #13
  %200 = bitcast %43** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #13
  %201 = load i32, i32* %27, align 4
  switch i32 %201, label %580 [
    i32 0, label %202
  ]

202:                                              ; preds = %197
  br label %203

203:                                              ; preds = %202
  br label %204

204:                                              ; preds = %203
  %205 = load i32, i32* %14, align 4
  %206 = icmp ne i32 %205, 0
  %207 = xor i1 %206, true
  %208 = xor i1 %207, true
  %209 = zext i1 %208 to i32
  %210 = sext i32 %209 to i64
  %211 = call i64 @llvm.expect.i64(i64 %210, i64 0)
  %212 = icmp ne i64 %211, 0
  br i1 %212, label %213, label %369

213:                                              ; preds = %204
  %214 = bitcast %0** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %214) #13
  %215 = load %43*, %43** %6, align 8
  %216 = getelementptr inbounds %43, %43* %215, i32 0, i32 5
  %217 = load i32, i32* %216, align 4
  call void @_zend_hash_init(%43* %17, i32 %217, void (%18*)* null, i8 zeroext 0)
  br label %218

218:                                              ; preds = %213
  %219 = bitcast %43** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %219) #13
  %220 = load %43*, %43** %6, align 8
  store %43* %220, %43** %29, align 8
  %221 = bitcast %45** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %221) #13
  %222 = load %43*, %43** %29, align 8
  %223 = getelementptr inbounds %43, %43* %222, i32 0, i32 3
  %224 = load %45*, %45** %223, align 8
  store %45* %224, %45** %30, align 8
  %225 = bitcast %45** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %225) #13
  %226 = load %45*, %45** %30, align 8
  %227 = load %43*, %43** %29, align 8
  %228 = getelementptr inbounds %43, %43* %227, i32 0, i32 4
  %229 = load i32, i32* %228, align 8
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds %45, %45* %226, i64 %230
  store %45* %231, %45** %31, align 8
  br label %232

232:                                              ; preds = %359, %218
  %233 = load %45*, %45** %30, align 8
  %234 = load %45*, %45** %31, align 8
  %235 = icmp ne %45* %233, %234
  br i1 %235, label %236, label %362

236:                                              ; preds = %232
  %237 = bitcast %18** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %237) #13
  %238 = load %45*, %45** %30, align 8
  %239 = getelementptr inbounds %45, %45* %238, i32 0, i32 0
  store %18* %239, %18** %32, align 8
  %240 = load %18*, %18** %32, align 8
  %241 = call zeroext i8 @157(%18* %240)
  %242 = zext i8 %241 to i32
  %243 = icmp eq i32 %242, 0
  %244 = xor i1 %243, true
  %245 = xor i1 %244, true
  %246 = zext i1 %245 to i32
  %247 = sext i32 %246 to i64
  %248 = call i64 @llvm.expect.i64(i64 %247, i64 0)
  %249 = icmp ne i64 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %236
  store i32 13, i32* %27, align 4
  br label %355

251:                                              ; preds = %236
  %252 = load %45*, %45** %30, align 8
  %253 = getelementptr inbounds %45, %45* %252, i32 0, i32 1
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %9, align 8
  %255 = load %45*, %45** %30, align 8
  %256 = getelementptr inbounds %45, %45* %255, i32 0, i32 2
  %257 = load %0*, %0** %256, align 8
  store %0* %257, %0** %10, align 8
  %258 = load %18*, %18** %32, align 8
  store %18* %258, %18** %18, align 8
  %259 = load %0*, %0** %10, align 8
  %260 = icmp ne %0* %259, null
  %261 = xor i1 %260, true
  %262 = xor i1 %261, true
  %263 = xor i1 %262, true
  %264 = zext i1 %263 to i32
  %265 = sext i32 %264 to i64
  %266 = call i64 @llvm.expect.i64(i64 %265, i64 0)
  %267 = icmp ne i64 %266, 0
  br i1 %267, label %268, label %323

268:                                              ; preds = %251
  %269 = load i64, i64* %9, align 8
  %270 = call %0* @zend_long_to_str(i64 %269)
  store %0* %270, %0** %28, align 8
  %271 = load %0*, %0** %28, align 8
  %272 = getelementptr inbounds %0, %0* %271, i32 0, i32 2
  %273 = load i64, i64* %272, align 8
  store i64 %273, i64* %11, align 8
  %274 = load i64, i64* %11, align 8
  %275 = load i64, i64* %8, align 8
  %276 = icmp ugt i64 %274, %275
  %277 = xor i1 %276, true
  %278 = xor i1 %277, true
  %279 = zext i1 %278 to i32
  %280 = sext i32 %279 to i64
  %281 = call i64 @llvm.expect.i64(i64 %280, i64 0)
  %282 = icmp ne i64 %281, 0
  br i1 %282, label %283, label %285

283:                                              ; preds = %268
  %284 = load %0*, %0** %28, align 8
  call void @159(%0* %284)
  store i32 13, i32* %27, align 4
  br label %355

285:                                              ; preds = %268
  %286 = load i64, i64* %11, align 8
  %287 = load i64, i64* %16, align 8
  %288 = icmp ugt i64 %286, %287
  br i1 %288, label %289, label %291

289:                                              ; preds = %285
  %290 = load i64, i64* %11, align 8
  store i64 %290, i64* %16, align 8
  br label %291

291:                                              ; preds = %289, %285
  %292 = load i64, i64* %11, align 8
  %293 = load i64, i64* %15, align 8
  %294 = icmp ult i64 %292, %293
  br i1 %294, label %295, label %297

295:                                              ; preds = %291
  %296 = load i64, i64* %11, align 8
  store i64 %296, i64* %15, align 8
  br label %297

297:                                              ; preds = %295, %291
  %298 = load i64, i64* %11, align 8
  %299 = urem i64 %298, 8
  %300 = shl i64 1, %299
  %301 = load i64*, i64** %22, align 8
  %302 = load i64, i64* %11, align 8
  %303 = udiv i64 %302, 8
  %304 = getelementptr inbounds i64, i64* %301, i64 %303
  %305 = load i64, i64* %304, align 8
  %306 = or i64 %305, %300
  store i64 %306, i64* %304, align 8
  %307 = load %0*, %0** %28, align 8
  %308 = getelementptr inbounds %0, %0* %307, i32 0, i32 3
  %309 = getelementptr inbounds [1 x i8], [1 x i8]* %308, i64 0, i64 0
  %310 = load i8, i8* %309, align 8
  %311 = zext i8 %310 to i64
  %312 = urem i64 %311, 8
  %313 = shl i64 1, %312
  %314 = load %0*, %0** %28, align 8
  %315 = getelementptr inbounds %0, %0* %314, i32 0, i32 3
  %316 = getelementptr inbounds [1 x i8], [1 x i8]* %315, i64 0, i64 0
  %317 = load i8, i8* %316, align 8
  %318 = zext i8 %317 to i64
  %319 = udiv i64 %318, 8
  %320 = getelementptr inbounds [32 x i64], [32 x i64]* %21, i64 0, i64 %319
  %321 = load i64, i64* %320, align 8
  %322 = or i64 %321, %313
  store i64 %322, i64* %320, align 8
  br label %339

323:                                              ; preds = %251
  %324 = load %0*, %0** %10, align 8
  store %0* %324, %0** %28, align 8
  %325 = load %0*, %0** %28, align 8
  %326 = getelementptr inbounds %0, %0* %325, i32 0, i32 2
  %327 = load i64, i64* %326, align 8
  store i64 %327, i64* %11, align 8
  %328 = load i64, i64* %11, align 8
  %329 = load i64, i64* %8, align 8
  %330 = icmp ugt i64 %328, %329
  %331 = xor i1 %330, true
  %332 = xor i1 %331, true
  %333 = zext i1 %332 to i32
  %334 = sext i32 %333 to i64
  %335 = call i64 @llvm.expect.i64(i64 %334, i64 0)
  %336 = icmp ne i64 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %323
  store i32 13, i32* %27, align 4
  br label %355

338:                                              ; preds = %323
  br label %339

339:                                              ; preds = %338, %297
  %340 = load %0*, %0** %28, align 8
  %341 = load %18*, %18** %18, align 8
  %342 = call %18* @_zend_hash_add(%43* %17, %0* %340, %18* %341)
  %343 = load %0*, %0** %10, align 8
  %344 = icmp ne %0* %343, null
  %345 = xor i1 %344, true
  %346 = xor i1 %345, true
  %347 = xor i1 %346, true
  %348 = zext i1 %347 to i32
  %349 = sext i32 %348 to i64
  %350 = call i64 @llvm.expect.i64(i64 %349, i64 0)
  %351 = icmp ne i64 %350, 0
  br i1 %351, label %352, label %354

352:                                              ; preds = %339
  %353 = load %0*, %0** %28, align 8
  call void @159(%0* %353)
  br label %354

354:                                              ; preds = %352, %339
  store i32 0, i32* %27, align 4
  br label %355

355:                                              ; preds = %354, %337, %283, %250
  %356 = bitcast %18** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %356) #13
  %357 = load i32, i32* %27, align 4
  switch i32 %357, label %599 [
    i32 0, label %358
    i32 13, label %359
  ]

358:                                              ; preds = %355
  br label %359

359:                                              ; preds = %358, %355
  %360 = load %45*, %45** %30, align 8
  %361 = getelementptr inbounds %45, %45* %360, i32 1
  store %45* %361, %45** %30, align 8
  br label %232

362:                                              ; preds = %232
  %363 = bitcast %45** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %363) #13
  %364 = bitcast %45** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %364) #13
  %365 = bitcast %43** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %365) #13
  br label %366

366:                                              ; preds = %362
  br label %367

367:                                              ; preds = %366
  store %43* %17, %43** %6, align 8
  %368 = bitcast %0** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %368) #13
  br label %369

369:                                              ; preds = %367, %204
  %370 = load i64, i64* %15, align 8
  %371 = load i64, i64* %16, align 8
  %372 = icmp ugt i64 %370, %371
  %373 = xor i1 %372, true
  %374 = xor i1 %373, true
  %375 = zext i1 %374 to i32
  %376 = sext i32 %375 to i64
  %377 = call i64 @llvm.expect.i64(i64 %376, i64 0)
  %378 = icmp ne i64 %377, 0
  br i1 %378, label %379, label %422

379:                                              ; preds = %369
  %380 = load %43*, %43** %6, align 8
  %381 = icmp eq %43* %380, %17
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @zend_hash_destroy(%43* %17)
  br label %383

383:                                              ; preds = %382, %379
  %384 = load i64*, i64** %22, align 8
  %385 = bitcast i64* %384 to i8*
  call void @_efree(i8* %385)
  br label %386

386:                                              ; preds = %383
  %387 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %387) #13
  %388 = load %18*, %18** %4, align 8
  store %18* %388, %18** %33, align 8
  %389 = bitcast %0** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %389) #13
  %390 = load %0*, %0** %5, align 8
  store %0* %390, %0** %34, align 8
  %391 = load %0*, %0** %34, align 8
  %392 = load %18*, %18** %33, align 8
  %393 = getelementptr inbounds %18, %18* %392, i32 0, i32 0
  %394 = bitcast %19* %393 to %0**
  store %0* %391, %0** %394, align 8
  %395 = load %0*, %0** %34, align 8
  %396 = getelementptr inbounds %0, %0* %395, i32 0, i32 0
  %397 = getelementptr inbounds %1, %1* %396, i32 0, i32 1
  %398 = bitcast %2* %397 to %52*
  %399 = getelementptr inbounds %52, %52* %398, i32 0, i32 1
  %400 = load i8, i8* %399, align 1
  %401 = zext i8 %400 to i32
  %402 = and i32 %401, 2
  %403 = icmp ne i32 %402, 0
  br i1 %403, label %404, label %408

404:                                              ; preds = %386
  %405 = load %18*, %18** %33, align 8
  %406 = getelementptr inbounds %18, %18* %405, i32 0, i32 1
  %407 = bitcast %20* %406 to i32*
  store i32 6, i32* %407, align 8
  br label %417

408:                                              ; preds = %386
  %409 = load %0*, %0** %34, align 8
  %410 = getelementptr inbounds %0, %0* %409, i32 0, i32 0
  %411 = getelementptr inbounds %1, %1* %410, i32 0, i32 0
  %412 = load i32, i32* %411, align 8
  %413 = add i32 %412, 1
  store i32 %413, i32* %411, align 8
  %414 = load %18*, %18** %33, align 8
  %415 = getelementptr inbounds %18, %18* %414, i32 0, i32 1
  %416 = bitcast %20* %415 to i32*
  store i32 5126, i32* %416, align 8
  br label %417

417:                                              ; preds = %408, %404
  %418 = bitcast %0** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %418) #13
  %419 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %419) #13
  br label %420

420:                                              ; preds = %417
  br label %421

421:                                              ; preds = %420
  store i32 1, i32* %27, align 4
  br label %580

422:                                              ; preds = %369
  store i64 0, i64* %12, align 8
  store i64 0, i64* %13, align 8
  br label %423

423:                                              ; preds = %505, %422
  %424 = load i64, i64* %12, align 8
  %425 = load i64, i64* %8, align 8
  %426 = load i64, i64* %15, align 8
  %427 = sub i64 %425, %426
  %428 = icmp ule i64 %424, %427
  br i1 %428, label %429, label %508

429:                                              ; preds = %423
  %430 = load i8*, i8** %7, align 8
  %431 = load i64, i64* %12, align 8
  %432 = getelementptr inbounds i8, i8* %430, i64 %431
  store i8* %432, i8** %19, align 8
  %433 = load i8*, i8** %19, align 8
  %434 = getelementptr inbounds i8, i8* %433, i64 0
  %435 = load i8, i8* %434, align 1
  %436 = zext i8 %435 to i64
  %437 = udiv i64 %436, 8
  %438 = getelementptr inbounds [32 x i64], [32 x i64]* %21, i64 0, i64 %437
  %439 = load i64, i64* %438, align 8
  %440 = load i8*, i8** %19, align 8
  %441 = getelementptr inbounds i8, i8* %440, i64 0
  %442 = load i8, i8* %441, align 1
  %443 = zext i8 %442 to i64
  %444 = urem i64 %443, 8
  %445 = shl i64 1, %444
  %446 = and i64 %439, %445
  %447 = icmp ne i64 %446, 0
  br i1 %447, label %448, label %505

448:                                              ; preds = %429
  %449 = load i64, i64* %16, align 8
  store i64 %449, i64* %11, align 8
  %450 = load i64, i64* %11, align 8
  %451 = load i64, i64* %8, align 8
  %452 = load i64, i64* %12, align 8
  %453 = sub i64 %451, %452
  %454 = icmp ugt i64 %450, %453
  br i1 %454, label %455, label %459

455:                                              ; preds = %448
  %456 = load i64, i64* %8, align 8
  %457 = load i64, i64* %12, align 8
  %458 = sub i64 %456, %457
  store i64 %458, i64* %11, align 8
  br label %459

459:                                              ; preds = %455, %448
  br label %460

460:                                              ; preds = %501, %459
  %461 = load i64, i64* %11, align 8
  %462 = load i64, i64* %15, align 8
  %463 = icmp uge i64 %461, %462
  br i1 %463, label %464, label %504

464:                                              ; preds = %460
  %465 = load i64*, i64** %22, align 8
  %466 = load i64, i64* %11, align 8
  %467 = udiv i64 %466, 8
  %468 = getelementptr inbounds i64, i64* %465, i64 %467
  %469 = load i64, i64* %468, align 8
  %470 = load i64, i64* %11, align 8
  %471 = urem i64 %470, 8
  %472 = shl i64 1, %471
  %473 = and i64 %469, %472
  %474 = icmp ne i64 %473, 0
  br i1 %474, label %475, label %501

475:                                              ; preds = %464
  %476 = load %43*, %43** %6, align 8
  %477 = load i8*, i8** %19, align 8
  %478 = load i64, i64* %11, align 8
  %479 = call %18* @zend_hash_str_find(%43* %476, i8* %477, i64 %478)
  store %18* %479, %18** %18, align 8
  %480 = load %18*, %18** %18, align 8
  %481 = icmp ne %18* %480, null
  br i1 %481, label %482, label %500

482:                                              ; preds = %475
  %483 = bitcast %0** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %483) #13
  %484 = load %18*, %18** %18, align 8
  %485 = call %0* @158(%18* %484)
  store %0* %485, %0** %35, align 8
  %486 = load i8*, i8** %7, align 8
  %487 = load i64, i64* %13, align 8
  %488 = getelementptr inbounds i8, i8* %486, i64 %487
  %489 = load i64, i64* %12, align 8
  %490 = load i64, i64* %13, align 8
  %491 = sub i64 %489, %490
  call void @191(%42* %20, i8* %488, i64 %491, i8 zeroext 0)
  %492 = load %0*, %0** %35, align 8
  call void @192(%42* %20, %0* %492, i8 zeroext 0)
  %493 = load i64, i64* %12, align 8
  %494 = load i64, i64* %11, align 8
  %495 = add i64 %493, %494
  store i64 %495, i64* %13, align 8
  %496 = load i64, i64* %13, align 8
  %497 = sub i64 %496, 1
  store i64 %497, i64* %12, align 8
  %498 = load %0*, %0** %35, align 8
  call void @159(%0* %498)
  store i32 19, i32* %27, align 4
  %499 = bitcast %0** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %499) #13
  br label %504

500:                                              ; preds = %475
  br label %501

501:                                              ; preds = %500, %464
  %502 = load i64, i64* %11, align 8
  %503 = add i64 %502, -1
  store i64 %503, i64* %11, align 8
  br label %460

504:                                              ; preds = %482, %460
  br label %505

505:                                              ; preds = %504, %429
  %506 = load i64, i64* %12, align 8
  %507 = add i64 %506, 1
  store i64 %507, i64* %12, align 8
  br label %423

508:                                              ; preds = %423
  %509 = getelementptr inbounds %42, %42* %20, i32 0, i32 0
  %510 = load %0*, %0** %509, align 8
  %511 = icmp ne %0* %510, null
  br i1 %511, label %512, label %536

512:                                              ; preds = %508
  %513 = load i8*, i8** %7, align 8
  %514 = load i64, i64* %13, align 8
  %515 = getelementptr inbounds i8, i8* %513, i64 %514
  %516 = load i64, i64* %8, align 8
  %517 = load i64, i64* %13, align 8
  %518 = sub i64 %516, %517
  call void @191(%42* %20, i8* %515, i64 %518, i8 zeroext 0)
  call void @193(%42* %20)
  br label %519

519:                                              ; preds = %512
  %520 = bitcast %18** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %520) #13
  %521 = load %18*, %18** %4, align 8
  store %18* %521, %18** %36, align 8
  %522 = bitcast %0** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %522) #13
  %523 = getelementptr inbounds %42, %42* %20, i32 0, i32 0
  %524 = load %0*, %0** %523, align 8
  store %0* %524, %0** %37, align 8
  %525 = load %0*, %0** %37, align 8
  %526 = load %18*, %18** %36, align 8
  %527 = getelementptr inbounds %18, %18* %526, i32 0, i32 0
  %528 = bitcast %19* %527 to %0**
  store %0* %525, %0** %528, align 8
  %529 = load %18*, %18** %36, align 8
  %530 = getelementptr inbounds %18, %18* %529, i32 0, i32 1
  %531 = bitcast %20* %530 to i32*
  store i32 5126, i32* %531, align 8
  %532 = bitcast %0** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %532) #13
  %533 = bitcast %18** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %533) #13
  br label %534

534:                                              ; preds = %519
  br label %535

535:                                              ; preds = %534
  br label %573

536:                                              ; preds = %508
  call void @194(%42* %20)
  br label %537

537:                                              ; preds = %536
  %538 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %538) #13
  %539 = load %18*, %18** %4, align 8
  store %18* %539, %18** %38, align 8
  %540 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %540) #13
  %541 = load %0*, %0** %5, align 8
  store %0* %541, %0** %39, align 8
  %542 = load %0*, %0** %39, align 8
  %543 = load %18*, %18** %38, align 8
  %544 = getelementptr inbounds %18, %18* %543, i32 0, i32 0
  %545 = bitcast %19* %544 to %0**
  store %0* %542, %0** %545, align 8
  %546 = load %0*, %0** %39, align 8
  %547 = getelementptr inbounds %0, %0* %546, i32 0, i32 0
  %548 = getelementptr inbounds %1, %1* %547, i32 0, i32 1
  %549 = bitcast %2* %548 to %52*
  %550 = getelementptr inbounds %52, %52* %549, i32 0, i32 1
  %551 = load i8, i8* %550, align 1
  %552 = zext i8 %551 to i32
  %553 = and i32 %552, 2
  %554 = icmp ne i32 %553, 0
  br i1 %554, label %555, label %559

555:                                              ; preds = %537
  %556 = load %18*, %18** %38, align 8
  %557 = getelementptr inbounds %18, %18* %556, i32 0, i32 1
  %558 = bitcast %20* %557 to i32*
  store i32 6, i32* %558, align 8
  br label %568

559:                                              ; preds = %537
  %560 = load %0*, %0** %39, align 8
  %561 = getelementptr inbounds %0, %0* %560, i32 0, i32 0
  %562 = getelementptr inbounds %1, %1* %561, i32 0, i32 0
  %563 = load i32, i32* %562, align 8
  %564 = add i32 %563, 1
  store i32 %564, i32* %562, align 8
  %565 = load %18*, %18** %38, align 8
  %566 = getelementptr inbounds %18, %18* %565, i32 0, i32 1
  %567 = bitcast %20* %566 to i32*
  store i32 5126, i32* %567, align 8
  br label %568

568:                                              ; preds = %559, %555
  %569 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %569) #13
  %570 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %570) #13
  br label %571

571:                                              ; preds = %568
  br label %572

572:                                              ; preds = %571
  br label %573

573:                                              ; preds = %572, %535
  %574 = load %43*, %43** %6, align 8
  %575 = icmp eq %43* %574, %17
  br i1 %575, label %576, label %577

576:                                              ; preds = %573
  call void @zend_hash_destroy(%43* %17)
  br label %577

577:                                              ; preds = %576, %573
  %578 = load i64*, i64** %22, align 8
  %579 = bitcast i64* %578 to i8*
  call void @_efree(i8* %579)
  store i32 0, i32* %27, align 4
  br label %580

580:                                              ; preds = %577, %421, %197
  %581 = bitcast i64** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %581) #13
  %582 = bitcast [32 x i64]* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %582) #13
  %583 = bitcast %42* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %583) #13
  %584 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %584) #13
  %585 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %585) #13
  %586 = bitcast %43* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 56, i8* %586) #13
  %587 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %587) #13
  %588 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %588) #13
  %589 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %589) #13
  %590 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %590) #13
  %591 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %591) #13
  %592 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %592) #13
  %593 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %593) #13
  %594 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %594) #13
  %595 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %595) #13
  %596 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %596) #13
  %597 = load i32, i32* %27, align 4
  switch i32 %597, label %599 [
    i32 0, label %598
    i32 1, label %598
  ]

598:                                              ; preds = %580, %580
  ret void

599:                                              ; preds = %580, %355
  unreachable
}

; Function Attrs: nounwind uwtable
define internal %0* @179(%0* %0, i8* %1, i8* %2, i64 %3) #0 {
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %0*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca [256 x i8], align 16
  %16 = alloca i8, align 1
  store %0* %0, %0** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  %17 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  store %0* null, %0** %10, align 8
  %18 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = load i64, i64* %9, align 8
  %20 = icmp ult i64 %19, 1
  %21 = xor i1 %20, true
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i32
  %24 = sext i32 %23 to i64
  %25 = call i64 @llvm.expect.i64(i64 %24, i64 0)
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %4
  %28 = load %0*, %0** %6, align 8
  %29 = call %0* @163(%0* %28)
  store %0* %29, %0** %5, align 8
  store i32 1, i32* %12, align 4
  br label %236

30:                                               ; preds = %4
  %31 = load i64, i64* %9, align 8
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %113

33:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #13
  %34 = load i8*, i8** %7, align 8
  %35 = load i8, i8* %34, align 1
  store i8 %35, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14) #13
  %36 = load i8*, i8** %8, align 8
  %37 = load i8, i8* %36, align 1
  store i8 %37, i8* %14, align 1
  store i64 0, i64* %11, align 8
  br label %38

38:                                               ; preds = %72, %33
  %39 = load i64, i64* %11, align 8
  %40 = load %0*, %0** %6, align 8
  %41 = getelementptr inbounds %0, %0* %40, i32 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %39, %42
  br i1 %43, label %44, label %75

44:                                               ; preds = %38
  %45 = load %0*, %0** %6, align 8
  %46 = getelementptr inbounds %0, %0* %45, i32 0, i32 3
  %47 = load i64, i64* %11, align 8
  %48 = getelementptr inbounds [1 x i8], [1 x i8]* %46, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = load i8, i8* %13, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %71

54:                                               ; preds = %44
  %55 = load %0*, %0** %6, align 8
  %56 = getelementptr inbounds %0, %0* %55, i32 0, i32 2
  %57 = load i64, i64* %56, align 8
  %58 = call %0* @162(i64 %57, i32 0)
  store %0* %58, %0** %10, align 8
  %59 = load %0*, %0** %10, align 8
  %60 = getelementptr inbounds %0, %0* %59, i32 0, i32 3
  %61 = getelementptr inbounds [1 x i8], [1 x i8]* %60, i32 0, i32 0
  %62 = load %0*, %0** %6, align 8
  %63 = getelementptr inbounds %0, %0* %62, i32 0, i32 3
  %64 = getelementptr inbounds [1 x i8], [1 x i8]* %63, i32 0, i32 0
  %65 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %64, i64 %65, i1 false)
  %66 = load i8, i8* %14, align 1
  %67 = load %0*, %0** %10, align 8
  %68 = getelementptr inbounds %0, %0* %67, i32 0, i32 3
  %69 = load i64, i64* %11, align 8
  %70 = getelementptr inbounds [1 x i8], [1 x i8]* %68, i64 0, i64 %69
  store i8 %66, i8* %70, align 1
  br label %75

71:                                               ; preds = %44
  br label %72

72:                                               ; preds = %71
  %73 = load i64, i64* %11, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %11, align 8
  br label %38

75:                                               ; preds = %54, %38
  br label %76

76:                                               ; preds = %109, %75
  %77 = load i64, i64* %11, align 8
  %78 = load %0*, %0** %6, align 8
  %79 = getelementptr inbounds %0, %0* %78, i32 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = icmp ult i64 %77, %80
  br i1 %81, label %82, label %112

82:                                               ; preds = %76
  %83 = load %0*, %0** %6, align 8
  %84 = getelementptr inbounds %0, %0* %83, i32 0, i32 3
  %85 = load i64, i64* %11, align 8
  %86 = getelementptr inbounds [1 x i8], [1 x i8]* %84, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = sext i8 %87 to i32
  %89 = load i8, i8* %13, align 1
  %90 = sext i8 %89 to i32
  %91 = icmp ne i32 %88, %90
  br i1 %91, label %92, label %99

92:                                               ; preds = %82
  %93 = load %0*, %0** %6, align 8
  %94 = getelementptr inbounds %0, %0* %93, i32 0, i32 3
  %95 = load i64, i64* %11, align 8
  %96 = getelementptr inbounds [1 x i8], [1 x i8]* %94, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = sext i8 %97 to i32
  br label %102

99:                                               ; preds = %82
  %100 = load i8, i8* %14, align 1
  %101 = sext i8 %100 to i32
  br label %102

102:                                              ; preds = %99, %92
  %103 = phi i32 [ %98, %92 ], [ %101, %99 ]
  %104 = trunc i32 %103 to i8
  %105 = load %0*, %0** %10, align 8
  %106 = getelementptr inbounds %0, %0* %105, i32 0, i32 3
  %107 = load i64, i64* %11, align 8
  %108 = getelementptr inbounds [1 x i8], [1 x i8]* %106, i64 0, i64 %107
  store i8 %104, i8* %108, align 1
  br label %109

109:                                              ; preds = %102
  %110 = load i64, i64* %11, align 8
  %111 = add i64 %110, 1
  store i64 %111, i64* %11, align 8
  br label %76

112:                                              ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #13
  br label %221

113:                                              ; preds = %30
  %114 = bitcast [256 x i8]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %114) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  br label %115

115:                                              ; preds = %120, %113
  %116 = load i8, i8* %16, align 1
  %117 = load i8, i8* %16, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %118
  store i8 %116, i8* %119, align 1
  br label %120

120:                                              ; preds = %115
  %121 = load i8, i8* %16, align 1
  %122 = add i8 %121, 1
  store i8 %122, i8* %16, align 1
  %123 = zext i8 %122 to i32
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %115, label %125

125:                                              ; preds = %120
  store i64 0, i64* %11, align 8
  br label %126

126:                                              ; preds = %141, %125
  %127 = load i64, i64* %11, align 8
  %128 = load i64, i64* %9, align 8
  %129 = icmp ult i64 %127, %128
  br i1 %129, label %130, label %144

130:                                              ; preds = %126
  %131 = load i8*, i8** %8, align 8
  %132 = load i64, i64* %11, align 8
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = load i8*, i8** %7, align 8
  %136 = load i64, i64* %11, align 8
  %137 = getelementptr inbounds i8, i8* %135, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i64
  %140 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %139
  store i8 %134, i8* %140, align 1
  br label %141

141:                                              ; preds = %130
  %142 = load i64, i64* %11, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %11, align 8
  br label %126

144:                                              ; preds = %126
  store i64 0, i64* %11, align 8
  br label %145

145:                                              ; preds = %193, %144
  %146 = load i64, i64* %11, align 8
  %147 = load %0*, %0** %6, align 8
  %148 = getelementptr inbounds %0, %0* %147, i32 0, i32 2
  %149 = load i64, i64* %148, align 8
  %150 = icmp ult i64 %146, %149
  br i1 %150, label %151, label %196

151:                                              ; preds = %145
  %152 = load %0*, %0** %6, align 8
  %153 = getelementptr inbounds %0, %0* %152, i32 0, i32 3
  %154 = load i64, i64* %11, align 8
  %155 = getelementptr inbounds [1 x i8], [1 x i8]* %153, i64 0, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = sext i8 %156 to i32
  %158 = load %0*, %0** %6, align 8
  %159 = getelementptr inbounds %0, %0* %158, i32 0, i32 3
  %160 = load i64, i64* %11, align 8
  %161 = getelementptr inbounds [1 x i8], [1 x i8]* %159, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i64
  %164 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp ne i32 %157, %166
  br i1 %167, label %168, label %192

168:                                              ; preds = %151
  %169 = load %0*, %0** %6, align 8
  %170 = getelementptr inbounds %0, %0* %169, i32 0, i32 2
  %171 = load i64, i64* %170, align 8
  %172 = call %0* @162(i64 %171, i32 0)
  store %0* %172, %0** %10, align 8
  %173 = load %0*, %0** %10, align 8
  %174 = getelementptr inbounds %0, %0* %173, i32 0, i32 3
  %175 = getelementptr inbounds [1 x i8], [1 x i8]* %174, i32 0, i32 0
  %176 = load %0*, %0** %6, align 8
  %177 = getelementptr inbounds %0, %0* %176, i32 0, i32 3
  %178 = getelementptr inbounds [1 x i8], [1 x i8]* %177, i32 0, i32 0
  %179 = load i64, i64* %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %178, i64 %179, i1 false)
  %180 = load %0*, %0** %6, align 8
  %181 = getelementptr inbounds %0, %0* %180, i32 0, i32 3
  %182 = load i64, i64* %11, align 8
  %183 = getelementptr inbounds [1 x i8], [1 x i8]* %181, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i64
  %186 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %185
  %187 = load i8, i8* %186, align 1
  %188 = load %0*, %0** %10, align 8
  %189 = getelementptr inbounds %0, %0* %188, i32 0, i32 3
  %190 = load i64, i64* %11, align 8
  %191 = getelementptr inbounds [1 x i8], [1 x i8]* %189, i64 0, i64 %190
  store i8 %187, i8* %191, align 1
  br label %196

192:                                              ; preds = %151
  br label %193

193:                                              ; preds = %192
  %194 = load i64, i64* %11, align 8
  %195 = add i64 %194, 1
  store i64 %195, i64* %11, align 8
  br label %145

196:                                              ; preds = %168, %145
  br label %197

197:                                              ; preds = %216, %196
  %198 = load i64, i64* %11, align 8
  %199 = load %0*, %0** %6, align 8
  %200 = getelementptr inbounds %0, %0* %199, i32 0, i32 2
  %201 = load i64, i64* %200, align 8
  %202 = icmp ult i64 %198, %201
  br i1 %202, label %203, label %219

203:                                              ; preds = %197
  %204 = load %0*, %0** %6, align 8
  %205 = getelementptr inbounds %0, %0* %204, i32 0, i32 3
  %206 = load i64, i64* %11, align 8
  %207 = getelementptr inbounds [1 x i8], [1 x i8]* %205, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i64
  %210 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 %209
  %211 = load i8, i8* %210, align 1
  %212 = load %0*, %0** %10, align 8
  %213 = getelementptr inbounds %0, %0* %212, i32 0, i32 3
  %214 = load i64, i64* %11, align 8
  %215 = getelementptr inbounds [1 x i8], [1 x i8]* %213, i64 0, i64 %214
  store i8 %211, i8* %215, align 1
  br label %216

216:                                              ; preds = %203
  %217 = load i64, i64* %11, align 8
  %218 = add i64 %217, 1
  store i64 %218, i64* %11, align 8
  br label %197

219:                                              ; preds = %197
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %220 = bitcast [256 x i8]* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %220) #13
  br label %221

221:                                              ; preds = %219, %112
  br label %222

222:                                              ; preds = %221
  %223 = load %0*, %0** %10, align 8
  %224 = icmp ne %0* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %222
  %226 = load %0*, %0** %6, align 8
  %227 = call %0* @163(%0* %226)
  store %0* %227, %0** %5, align 8
  store i32 1, i32* %12, align 4
  br label %236

228:                                              ; preds = %222
  %229 = load %0*, %0** %10, align 8
  %230 = getelementptr inbounds %0, %0* %229, i32 0, i32 3
  %231 = load %0*, %0** %10, align 8
  %232 = getelementptr inbounds %0, %0* %231, i32 0, i32 2
  %233 = load i64, i64* %232, align 8
  %234 = getelementptr inbounds [1 x i8], [1 x i8]* %230, i64 0, i64 %233
  store i8 0, i8* %234, align 1
  %235 = load %0*, %0** %10, align 8
  store %0* %235, %0** %5, align 8
  store i32 1, i32* %12, align 4
  br label %236

236:                                              ; preds = %228, %225, %27
  %237 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %237) #13
  %238 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #13
  %239 = load %0*, %0** %5, align 8
  ret %0* %239
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strrev(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %24 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  store i32 0, i32* %9, align 4
  %30 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  store i32 1, i32* %10, align 4
  %31 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 1, i32* %11, align 4
  %32 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = load %14*, %14** %3, align 8
  %34 = getelementptr inbounds %14, %14* %33, i32 0, i32 4
  %35 = getelementptr inbounds %18, %18* %34, i32 0, i32 2
  %36 = bitcast %21* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %12, align 4
  %38 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  %39 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store %18* null, %18** %15, align 8
  %41 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 0, i32* %16, align 4
  %42 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %43 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %20, align 4
  %44 = load i32, i32* %13, align 4
  %45 = load %18*, %18** %14, align 8
  %46 = load %18*, %18** %15, align 8
  %47 = load i32, i32* %16, align 4
  %48 = load i8*, i8** %17, align 8
  %49 = load i8, i8* %18, align 1
  %50 = load i8, i8* %19, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %12, align 4
  %53 = load i32, i32* %10, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %12, align 4
  %63 = load i32, i32* %11, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %11, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %12, align 4
  %82 = load i32, i32* %10, align 4
  %83 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %20, align 4
  br label %159

84:                                               ; preds = %71, %61
  store i32 0, i32* %13, align 4
  %85 = load %14*, %14** %3, align 8
  %86 = bitcast %14* %85 to %18*
  %87 = getelementptr inbounds %18, %18* %86, i64 4
  store %18* %87, %18** %14, align 8
  %88 = load i32, i32* %13, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %13, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %13, align 4
  %92 = load i32, i32* %10, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %19, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %13, align 4
  %111 = load i32, i32* %10, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %19, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %19, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %13, align 4
  %132 = load i32, i32* %12, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %159

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %18*, %18** %14, align 8
  %144 = getelementptr inbounds %18, %18* %143, i32 1
  store %18* %144, %18** %14, align 8
  %145 = load %18*, %18** %14, align 8
  store %18* %145, %18** %15, align 8
  %146 = load %18*, %18** %15, align 8
  %147 = call i32 @143(%18* %146, %0** %5, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %159

157:                                              ; preds = %142
  br label %158

158:                                              ; preds = %157
  br label %159

159:                                              ; preds = %158, %156, %140, %80
  %160 = load i32, i32* %20, align 4
  %161 = icmp ne i32 %160, 0
  %162 = xor i1 %161, true
  %163 = xor i1 %162, true
  %164 = zext i1 %163 to i32
  %165 = sext i32 %164 to i64
  %166 = call i64 @llvm.expect.i64(i64 %165, i64 0)
  %167 = icmp ne i64 %166, 0
  br i1 %167, label %168, label %191

168:                                              ; preds = %159
  %169 = load i32, i32* %20, align 4
  %170 = icmp eq i32 %169, 2
  br i1 %170, label %171, label %174

171:                                              ; preds = %168
  %172 = load i32, i32* %13, align 4
  %173 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %172, i8* %173)
  br label %190

174:                                              ; preds = %168
  %175 = load i32, i32* %20, align 4
  %176 = icmp eq i32 %175, 3
  br i1 %176, label %177, label %181

177:                                              ; preds = %174
  %178 = load i32, i32* %13, align 4
  %179 = load i8*, i8** %17, align 8
  %180 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %178, i8* %179, %18* %180)
  br label %189

181:                                              ; preds = %174
  %182 = load i32, i32* %20, align 4
  %183 = icmp eq i32 %182, 4
  br i1 %183, label %184, label %188

184:                                              ; preds = %181
  %185 = load i32, i32* %13, align 4
  %186 = load i32, i32* %16, align 4
  %187 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %185, i32 %186, %18* %187)
  br label %188

188:                                              ; preds = %184, %181
  br label %189

189:                                              ; preds = %188, %177
  br label %190

190:                                              ; preds = %189, %171
  store i32 1, i32* %21, align 4
  br label %192

191:                                              ; preds = %159
  store i32 0, i32* %21, align 4
  br label %192

192:                                              ; preds = %191, %190
  %193 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %194 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #13
  %195 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #13
  %197 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #13
  %198 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #13
  %200 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #13
  %201 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #13
  %202 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #13
  %203 = load i32, i32* %21, align 4
  switch i32 %203, label %251 [
    i32 0, label %204
  ]

204:                                              ; preds = %192
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  %207 = load %0*, %0** %5, align 8
  %208 = getelementptr inbounds %0, %0* %207, i32 0, i32 2
  %209 = load i64, i64* %208, align 8
  %210 = call %0* @162(i64 %209, i32 0)
  store %0* %210, %0** %8, align 8
  %211 = load %0*, %0** %8, align 8
  %212 = getelementptr inbounds %0, %0* %211, i32 0, i32 3
  %213 = getelementptr inbounds [1 x i8], [1 x i8]* %212, i32 0, i32 0
  store i8* %213, i8** %7, align 8
  %214 = load %0*, %0** %5, align 8
  %215 = getelementptr inbounds %0, %0* %214, i32 0, i32 3
  %216 = getelementptr inbounds [1 x i8], [1 x i8]* %215, i32 0, i32 0
  %217 = load %0*, %0** %5, align 8
  %218 = getelementptr inbounds %0, %0* %217, i32 0, i32 2
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds i8, i8* %216, i64 %219
  store i8* %220, i8** %6, align 8
  br label %221

221:                                              ; preds = %228, %206
  %222 = load i8*, i8** %6, align 8
  %223 = getelementptr inbounds i8, i8* %222, i32 -1
  store i8* %223, i8** %6, align 8
  %224 = load %0*, %0** %5, align 8
  %225 = getelementptr inbounds %0, %0* %224, i32 0, i32 3
  %226 = getelementptr inbounds [1 x i8], [1 x i8]* %225, i32 0, i32 0
  %227 = icmp uge i8* %223, %226
  br i1 %227, label %228, label %233

228:                                              ; preds = %221
  %229 = load i8*, i8** %6, align 8
  %230 = load i8, i8* %229, align 1
  %231 = load i8*, i8** %7, align 8
  %232 = getelementptr inbounds i8, i8* %231, i32 1
  store i8* %232, i8** %7, align 8
  store i8 %230, i8* %231, align 1
  br label %221

233:                                              ; preds = %221
  %234 = load i8*, i8** %7, align 8
  store i8 0, i8* %234, align 1
  br label %235

235:                                              ; preds = %233
  %236 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %236) #13
  %237 = load %18*, %18** %4, align 8
  store %18* %237, %18** %22, align 8
  %238 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %238) #13
  %239 = load %0*, %0** %8, align 8
  store %0* %239, %0** %23, align 8
  %240 = load %0*, %0** %23, align 8
  %241 = load %18*, %18** %22, align 8
  %242 = getelementptr inbounds %18, %18* %241, i32 0, i32 0
  %243 = bitcast %19* %242 to %0**
  store %0* %240, %0** %243, align 8
  %244 = load %18*, %18** %22, align 8
  %245 = getelementptr inbounds %18, %18* %244, i32 0, i32 1
  %246 = bitcast %20* %245 to i32*
  store i32 5126, i32* %246, align 8
  %247 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #13
  %248 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #13
  br label %249

249:                                              ; preds = %235
  br label %250

250:                                              ; preds = %249
  store i32 0, i32* %21, align 4
  br label %251

251:                                              ; preds = %250, %192
  %252 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %252) #13
  %253 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %253) #13
  %254 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %254) #13
  %255 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %255) #13
  %256 = load i32, i32* %21, align 4
  switch i32 %256, label %258 [
    i32 0, label %257
    i32 1, label %257
  ]

257:                                              ; preds = %251, %251
  ret void

258:                                              ; preds = %251
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_similar_text(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca %18*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %18*, align 8
  %16 = alloca %18*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %18*, align 8
  %24 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %25 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  store %18* null, %18** %7, align 8
  %28 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %8, align 4
  %34 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  br label %35

35:                                               ; preds = %2
  %36 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 0, i32* %10, align 4
  %37 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 2, i32* %11, align 4
  %38 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 3, i32* %12, align 4
  %39 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  %40 = load %14*, %14** %3, align 8
  %41 = getelementptr inbounds %14, %14* %40, i32 0, i32 4
  %42 = getelementptr inbounds %18, %18* %41, i32 0, i32 2
  %43 = bitcast %21* %42 to i32*
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %13, align 4
  %45 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #13
  %46 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  %47 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store %18* null, %18** %16, align 8
  %48 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %17, align 4
  %49 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #13
  store i8 0, i8* %20, align 1
  %50 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #13
  store i32 0, i32* %21, align 4
  %51 = load i32, i32* %14, align 4
  %52 = load %18*, %18** %15, align 8
  %53 = load %18*, %18** %16, align 8
  %54 = load i32, i32* %17, align 4
  %55 = load i8*, i8** %18, align 8
  %56 = load i8, i8* %19, align 1
  %57 = load i8, i8* %20, align 1
  br label %58

58:                                               ; preds = %35
  %59 = load i32, i32* %13, align 4
  %60 = load i32, i32* %11, align 4
  %61 = icmp slt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %87, label %68

68:                                               ; preds = %58
  %69 = load i32, i32* %13, align 4
  %70 = load i32, i32* %12, align 4
  %71 = icmp sgt i32 %69, %70
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 0)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %91

78:                                               ; preds = %68
  %79 = load i32, i32* %12, align 4
  %80 = icmp sge i32 %79, 0
  %81 = xor i1 %80, true
  %82 = xor i1 %81, true
  %83 = zext i1 %82 to i32
  %84 = sext i32 %83 to i64
  %85 = call i64 @llvm.expect.i64(i64 %84, i64 1)
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %78, %58
  %88 = load i32, i32* %13, align 4
  %89 = load i32, i32* %11, align 4
  %90 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %88, i32 %89, i32 %90)
  store i32 1, i32* %21, align 4
  br label %315

91:                                               ; preds = %78, %68
  store i32 0, i32* %14, align 4
  %92 = load %14*, %14** %3, align 8
  %93 = bitcast %14* %92 to %18*
  %94 = getelementptr inbounds %18, %18* %93, i64 4
  store %18* %94, %18** %15, align 8
  %95 = load i32, i32* %14, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %14, align 4
  br label %97

97:                                               ; preds = %91
  %98 = load i32, i32* %14, align 4
  %99 = load i32, i32* %11, align 4
  %100 = icmp sle i32 %98, %99
  br i1 %100, label %105, label %101

101:                                              ; preds = %97
  %102 = load i8, i8* %20, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp eq i32 %103, 1
  br label %105

105:                                              ; preds = %101, %97
  %106 = phi i1 [ true, %97 ], [ %104, %101 ]
  %107 = xor i1 %106, true
  %108 = zext i1 %107 to i32
  %109 = sext i32 %108 to i64
  %110 = call i64 @llvm.expect.i64(i64 %109, i64 0)
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %105
  unreachable

113:                                              ; preds = %105
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  %117 = load i32, i32* %14, align 4
  %118 = load i32, i32* %11, align 4
  %119 = icmp sgt i32 %117, %118
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = load i8, i8* %20, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp eq i32 %122, 0
  br label %124

124:                                              ; preds = %120, %116
  %125 = phi i1 [ true, %116 ], [ %123, %120 ]
  %126 = xor i1 %125, true
  %127 = zext i1 %126 to i32
  %128 = sext i32 %127 to i64
  %129 = call i64 @llvm.expect.i64(i64 %128, i64 0)
  %130 = icmp ne i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %124
  unreachable

132:                                              ; preds = %124
  br label %133

133:                                              ; preds = %132
  br label %134

134:                                              ; preds = %133
  %135 = load i8, i8* %20, align 1
  %136 = icmp ne i8 %135, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %134
  %138 = load i32, i32* %14, align 4
  %139 = load i32, i32* %13, align 4
  %140 = icmp sgt i32 %138, %139
  %141 = xor i1 %140, true
  %142 = xor i1 %141, true
  %143 = zext i1 %142 to i32
  %144 = sext i32 %143 to i64
  %145 = call i64 @llvm.expect.i64(i64 %144, i64 0)
  %146 = icmp ne i64 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %137
  br label %315

148:                                              ; preds = %137
  br label %149

149:                                              ; preds = %148, %134
  %150 = load %18*, %18** %15, align 8
  %151 = getelementptr inbounds %18, %18* %150, i32 1
  store %18* %151, %18** %15, align 8
  %152 = load %18*, %18** %15, align 8
  store %18* %152, %18** %16, align 8
  %153 = load %18*, %18** %16, align 8
  %154 = call i32 @143(%18* %153, %0** %5, i32 0)
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = zext i1 %158 to i32
  %160 = sext i32 %159 to i64
  %161 = call i64 @llvm.expect.i64(i64 %160, i64 0)
  %162 = icmp ne i64 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %149
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %315

164:                                              ; preds = %149
  %165 = load i32, i32* %14, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %14, align 4
  br label %167

167:                                              ; preds = %164
  %168 = load i32, i32* %14, align 4
  %169 = load i32, i32* %11, align 4
  %170 = icmp sle i32 %168, %169
  br i1 %170, label %175, label %171

171:                                              ; preds = %167
  %172 = load i8, i8* %20, align 1
  %173 = zext i8 %172 to i32
  %174 = icmp eq i32 %173, 1
  br label %175

175:                                              ; preds = %171, %167
  %176 = phi i1 [ true, %167 ], [ %174, %171 ]
  %177 = xor i1 %176, true
  %178 = zext i1 %177 to i32
  %179 = sext i32 %178 to i64
  %180 = call i64 @llvm.expect.i64(i64 %179, i64 0)
  %181 = icmp ne i64 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %175
  unreachable

183:                                              ; preds = %175
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  br label %186

186:                                              ; preds = %185
  %187 = load i32, i32* %14, align 4
  %188 = load i32, i32* %11, align 4
  %189 = icmp sgt i32 %187, %188
  br i1 %189, label %194, label %190

190:                                              ; preds = %186
  %191 = load i8, i8* %20, align 1
  %192 = zext i8 %191 to i32
  %193 = icmp eq i32 %192, 0
  br label %194

194:                                              ; preds = %190, %186
  %195 = phi i1 [ true, %186 ], [ %193, %190 ]
  %196 = xor i1 %195, true
  %197 = zext i1 %196 to i32
  %198 = sext i32 %197 to i64
  %199 = call i64 @llvm.expect.i64(i64 %198, i64 0)
  %200 = icmp ne i64 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %194
  unreachable

202:                                              ; preds = %194
  br label %203

203:                                              ; preds = %202
  br label %204

204:                                              ; preds = %203
  %205 = load i8, i8* %20, align 1
  %206 = icmp ne i8 %205, 0
  br i1 %206, label %207, label %219

207:                                              ; preds = %204
  %208 = load i32, i32* %14, align 4
  %209 = load i32, i32* %13, align 4
  %210 = icmp sgt i32 %208, %209
  %211 = xor i1 %210, true
  %212 = xor i1 %211, true
  %213 = zext i1 %212 to i32
  %214 = sext i32 %213 to i64
  %215 = call i64 @llvm.expect.i64(i64 %214, i64 0)
  %216 = icmp ne i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %207
  br label %315

218:                                              ; preds = %207
  br label %219

219:                                              ; preds = %218, %204
  %220 = load %18*, %18** %15, align 8
  %221 = getelementptr inbounds %18, %18* %220, i32 1
  store %18* %221, %18** %15, align 8
  %222 = load %18*, %18** %15, align 8
  store %18* %222, %18** %16, align 8
  %223 = load %18*, %18** %16, align 8
  %224 = call i32 @143(%18* %223, %0** %6, i32 0)
  %225 = icmp ne i32 %224, 0
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = xor i1 %227, true
  %229 = zext i1 %228 to i32
  %230 = sext i32 %229 to i64
  %231 = call i64 @llvm.expect.i64(i64 %230, i64 0)
  %232 = icmp ne i64 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %219
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %315

234:                                              ; preds = %219
  store i8 1, i8* %20, align 1
  %235 = load i32, i32* %14, align 4
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %14, align 4
  br label %237

237:                                              ; preds = %234
  %238 = load i32, i32* %14, align 4
  %239 = load i32, i32* %11, align 4
  %240 = icmp sle i32 %238, %239
  br i1 %240, label %245, label %241

241:                                              ; preds = %237
  %242 = load i8, i8* %20, align 1
  %243 = zext i8 %242 to i32
  %244 = icmp eq i32 %243, 1
  br label %245

245:                                              ; preds = %241, %237
  %246 = phi i1 [ true, %237 ], [ %244, %241 ]
  %247 = xor i1 %246, true
  %248 = zext i1 %247 to i32
  %249 = sext i32 %248 to i64
  %250 = call i64 @llvm.expect.i64(i64 %249, i64 0)
  %251 = icmp ne i64 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %245
  unreachable

253:                                              ; preds = %245
  br label %254

254:                                              ; preds = %253
  br label %255

255:                                              ; preds = %254
  br label %256

256:                                              ; preds = %255
  %257 = load i32, i32* %14, align 4
  %258 = load i32, i32* %11, align 4
  %259 = icmp sgt i32 %257, %258
  br i1 %259, label %264, label %260

260:                                              ; preds = %256
  %261 = load i8, i8* %20, align 1
  %262 = zext i8 %261 to i32
  %263 = icmp eq i32 %262, 0
  br label %264

264:                                              ; preds = %260, %256
  %265 = phi i1 [ true, %256 ], [ %263, %260 ]
  %266 = xor i1 %265, true
  %267 = zext i1 %266 to i32
  %268 = sext i32 %267 to i64
  %269 = call i64 @llvm.expect.i64(i64 %268, i64 0)
  %270 = icmp ne i64 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %264
  unreachable

272:                                              ; preds = %264
  br label %273

273:                                              ; preds = %272
  br label %274

274:                                              ; preds = %273
  %275 = load i8, i8* %20, align 1
  %276 = icmp ne i8 %275, 0
  br i1 %276, label %277, label %289

277:                                              ; preds = %274
  %278 = load i32, i32* %14, align 4
  %279 = load i32, i32* %13, align 4
  %280 = icmp sgt i32 %278, %279
  %281 = xor i1 %280, true
  %282 = xor i1 %281, true
  %283 = zext i1 %282 to i32
  %284 = sext i32 %283 to i64
  %285 = call i64 @llvm.expect.i64(i64 %284, i64 0)
  %286 = icmp ne i64 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %277
  br label %315

288:                                              ; preds = %277
  br label %289

289:                                              ; preds = %288, %274
  %290 = load %18*, %18** %15, align 8
  %291 = getelementptr inbounds %18, %18* %290, i32 1
  store %18* %291, %18** %15, align 8
  %292 = load %18*, %18** %15, align 8
  store %18* %292, %18** %16, align 8
  br label %293

293:                                              ; preds = %289
  %294 = load %18*, %18** %16, align 8
  %295 = call zeroext i8 @157(%18* %294)
  %296 = zext i8 %295 to i32
  %297 = icmp eq i32 %296, 10
  %298 = xor i1 %297, true
  %299 = xor i1 %298, true
  %300 = zext i1 %299 to i32
  %301 = sext i32 %300 to i64
  %302 = call i64 @llvm.expect.i64(i64 %301, i64 0)
  %303 = icmp ne i64 %302, 0
  br i1 %303, label %304, label %310

304:                                              ; preds = %293
  %305 = load %18*, %18** %16, align 8
  %306 = getelementptr inbounds %18, %18* %305, i32 0, i32 0
  %307 = bitcast %19* %306 to %55**
  %308 = load %55*, %55** %307, align 8
  %309 = getelementptr inbounds %55, %55* %308, i32 0, i32 1
  store %18* %309, %18** %16, align 8
  br label %310

310:                                              ; preds = %304, %293
  br label %311

311:                                              ; preds = %310
  br label %312

312:                                              ; preds = %311
  %313 = load %18*, %18** %16, align 8
  call void @161(%18* %313, %18** %7, i32 0)
  br label %314

314:                                              ; preds = %312
  br label %315

315:                                              ; preds = %314, %287, %233, %217, %163, %147, %87
  %316 = load i32, i32* %21, align 4
  %317 = icmp ne i32 %316, 0
  %318 = xor i1 %317, true
  %319 = xor i1 %318, true
  %320 = zext i1 %319 to i32
  %321 = sext i32 %320 to i64
  %322 = call i64 @llvm.expect.i64(i64 %321, i64 0)
  %323 = icmp ne i64 %322, 0
  br i1 %323, label %324, label %347

324:                                              ; preds = %315
  %325 = load i32, i32* %21, align 4
  %326 = icmp eq i32 %325, 2
  br i1 %326, label %327, label %330

327:                                              ; preds = %324
  %328 = load i32, i32* %14, align 4
  %329 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %328, i8* %329)
  br label %346

330:                                              ; preds = %324
  %331 = load i32, i32* %21, align 4
  %332 = icmp eq i32 %331, 3
  br i1 %332, label %333, label %337

333:                                              ; preds = %330
  %334 = load i32, i32* %14, align 4
  %335 = load i8*, i8** %18, align 8
  %336 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %334, i8* %335, %18* %336)
  br label %345

337:                                              ; preds = %330
  %338 = load i32, i32* %21, align 4
  %339 = icmp eq i32 %338, 4
  br i1 %339, label %340, label %344

340:                                              ; preds = %337
  %341 = load i32, i32* %14, align 4
  %342 = load i32, i32* %17, align 4
  %343 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %341, i32 %342, %18* %343)
  br label %344

344:                                              ; preds = %340, %337
  br label %345

345:                                              ; preds = %344, %333
  br label %346

346:                                              ; preds = %345, %327
  store i32 1, i32* %22, align 4
  br label %348

347:                                              ; preds = %315
  store i32 0, i32* %22, align 4
  br label %348

348:                                              ; preds = %347, %346
  %349 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %349) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  %350 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %350) #13
  %351 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #13
  %352 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %352) #13
  %353 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %353) #13
  %354 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %354) #13
  %355 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %355) #13
  %356 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %356) #13
  %357 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %357) #13
  %358 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %358) #13
  %359 = load i32, i32* %22, align 4
  switch i32 %359, label %442 [
    i32 0, label %360
  ]

360:                                              ; preds = %348
  br label %361

361:                                              ; preds = %360
  br label %362

362:                                              ; preds = %361
  %363 = load i32, i32* %8, align 4
  %364 = icmp sgt i32 %363, 2
  br i1 %364, label %365, label %373

365:                                              ; preds = %362
  %366 = load %18*, %18** %7, align 8
  %367 = call zeroext i8 @157(%18* %366)
  %368 = zext i8 %367 to i32
  %369 = icmp ne i32 %368, 5
  br i1 %369, label %370, label %372

370:                                              ; preds = %365
  %371 = load %18*, %18** %7, align 8
  call void @convert_to_double(%18* %371)
  br label %372

372:                                              ; preds = %370, %365
  br label %373

373:                                              ; preds = %372, %362
  %374 = load %0*, %0** %5, align 8
  %375 = getelementptr inbounds %0, %0* %374, i32 0, i32 2
  %376 = load i64, i64* %375, align 8
  %377 = load %0*, %0** %6, align 8
  %378 = getelementptr inbounds %0, %0* %377, i32 0, i32 2
  %379 = load i64, i64* %378, align 8
  %380 = add i64 %376, %379
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %399

382:                                              ; preds = %373
  %383 = load i32, i32* %8, align 4
  %384 = icmp sgt i32 %383, 2
  br i1 %384, label %385, label %389

385:                                              ; preds = %382
  %386 = load %18*, %18** %7, align 8
  %387 = getelementptr inbounds %18, %18* %386, i32 0, i32 0
  %388 = bitcast %19* %387 to double*
  store double 0.000000e+00, double* %388, align 8
  br label %389

389:                                              ; preds = %385, %382
  %390 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %390) #13
  %391 = load %18*, %18** %4, align 8
  store %18* %391, %18** %23, align 8
  %392 = load %18*, %18** %23, align 8
  %393 = getelementptr inbounds %18, %18* %392, i32 0, i32 0
  %394 = bitcast %19* %393 to i64*
  store i64 0, i64* %394, align 8
  %395 = load %18*, %18** %23, align 8
  %396 = getelementptr inbounds %18, %18* %395, i32 0, i32 1
  %397 = bitcast %20* %396 to i32*
  store i32 4, i32* %397, align 8
  %398 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %398) #13
  store i32 1, i32* %22, align 4
  br label %442

399:                                              ; preds = %373
  %400 = load %0*, %0** %5, align 8
  %401 = getelementptr inbounds %0, %0* %400, i32 0, i32 3
  %402 = getelementptr inbounds [1 x i8], [1 x i8]* %401, i32 0, i32 0
  %403 = load %0*, %0** %5, align 8
  %404 = getelementptr inbounds %0, %0* %403, i32 0, i32 2
  %405 = load i64, i64* %404, align 8
  %406 = load %0*, %0** %6, align 8
  %407 = getelementptr inbounds %0, %0* %406, i32 0, i32 3
  %408 = getelementptr inbounds [1 x i8], [1 x i8]* %407, i32 0, i32 0
  %409 = load %0*, %0** %6, align 8
  %410 = getelementptr inbounds %0, %0* %409, i32 0, i32 2
  %411 = load i64, i64* %410, align 8
  %412 = call i64 @180(i8* %402, i64 %405, i8* %408, i64 %411)
  store i64 %412, i64* %9, align 8
  %413 = load i32, i32* %8, align 4
  %414 = icmp sgt i32 %413, 2
  br i1 %414, label %415, label %431

415:                                              ; preds = %399
  %416 = load i64, i64* %9, align 8
  %417 = uitofp i64 %416 to double
  %418 = fmul double %417, 2.000000e+02
  %419 = load %0*, %0** %5, align 8
  %420 = getelementptr inbounds %0, %0* %419, i32 0, i32 2
  %421 = load i64, i64* %420, align 8
  %422 = load %0*, %0** %6, align 8
  %423 = getelementptr inbounds %0, %0* %422, i32 0, i32 2
  %424 = load i64, i64* %423, align 8
  %425 = add i64 %421, %424
  %426 = uitofp i64 %425 to double
  %427 = fdiv double %418, %426
  %428 = load %18*, %18** %7, align 8
  %429 = getelementptr inbounds %18, %18* %428, i32 0, i32 0
  %430 = bitcast %19* %429 to double*
  store double %427, double* %430, align 8
  br label %431

431:                                              ; preds = %415, %399
  %432 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %432) #13
  %433 = load %18*, %18** %4, align 8
  store %18* %433, %18** %24, align 8
  %434 = load i64, i64* %9, align 8
  %435 = load %18*, %18** %24, align 8
  %436 = getelementptr inbounds %18, %18* %435, i32 0, i32 0
  %437 = bitcast %19* %436 to i64*
  store i64 %434, i64* %437, align 8
  %438 = load %18*, %18** %24, align 8
  %439 = getelementptr inbounds %18, %18* %438, i32 0, i32 1
  %440 = bitcast %20* %439 to i32*
  store i32 4, i32* %440, align 8
  %441 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %441) #13
  store i32 1, i32* %22, align 4
  br label %442

442:                                              ; preds = %431, %389, %348
  %443 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %443) #13
  %444 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %444) #13
  %445 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %445) #13
  %446 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %446) #13
  %447 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %447) #13
  ret void
}

declare dso_local void @convert_to_double(%18*) #1

; Function Attrs: nounwind uwtable
define internal i64 @180(i8* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %13 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  store i64 0, i64* %10, align 8
  %15 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  store i64 0, i64* %11, align 8
  %16 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = load i8*, i8** %5, align 8
  %18 = load i64, i64* %6, align 8
  %19 = load i8*, i8** %7, align 8
  %20 = load i64, i64* %8, align 8
  call void @196(i8* %17, i64 %18, i8* %19, i64 %20, i64* %10, i64* %11, i64* %12)
  %21 = load i64, i64* %12, align 8
  store i64 %21, i64* %9, align 8
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %23, label %74

23:                                               ; preds = %4
  %24 = load i64, i64* %10, align 8
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %26, label %37

26:                                               ; preds = %23
  %27 = load i64, i64* %11, align 8
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = load i8*, i8** %5, align 8
  %31 = load i64, i64* %10, align 8
  %32 = load i8*, i8** %7, align 8
  %33 = load i64, i64* %11, align 8
  %34 = call i64 @180(i8* %30, i64 %31, i8* %32, i64 %33)
  %35 = load i64, i64* %9, align 8
  %36 = add i64 %35, %34
  store i64 %36, i64* %9, align 8
  br label %37

37:                                               ; preds = %29, %26, %23
  %38 = load i64, i64* %10, align 8
  %39 = load i64, i64* %12, align 8
  %40 = add i64 %38, %39
  %41 = load i64, i64* %6, align 8
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %43, label %73

43:                                               ; preds = %37
  %44 = load i64, i64* %11, align 8
  %45 = load i64, i64* %12, align 8
  %46 = add i64 %44, %45
  %47 = load i64, i64* %8, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %73

49:                                               ; preds = %43
  %50 = load i8*, i8** %5, align 8
  %51 = load i64, i64* %10, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = load i64, i64* %12, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  %55 = load i64, i64* %6, align 8
  %56 = load i64, i64* %10, align 8
  %57 = sub i64 %55, %56
  %58 = load i64, i64* %12, align 8
  %59 = sub i64 %57, %58
  %60 = load i8*, i8** %7, align 8
  %61 = load i64, i64* %11, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = load i64, i64* %12, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = load i64, i64* %8, align 8
  %66 = load i64, i64* %11, align 8
  %67 = sub i64 %65, %66
  %68 = load i64, i64* %12, align 8
  %69 = sub i64 %67, %68
  %70 = call i64 @180(i8* %54, i64 %59, i8* %64, i64 %69)
  %71 = load i64, i64* %9, align 8
  %72 = add i64 %71, %70
  store i64 %72, i64* %9, align 8
  br label %73

73:                                               ; preds = %49, %43, %37
  br label %74

74:                                               ; preds = %73, %4
  %75 = load i64, i64* %9, align 8
  %76 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #13
  %77 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #13
  %78 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78) #13
  %79 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #13
  ret i64 %75
}

; Function Attrs: nounwind uwtable
define dso_local void @php_stripslashes(%0* %0) #0 {
  %2 = alloca %0*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store %0* %0, %0** %2, align 8
  %6 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #13
  %7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #13
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load %0*, %0** %2, align 8
  %10 = getelementptr inbounds %0, %0* %9, i32 0, i32 3
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %10, i32 0, i32 0
  store i8* %11, i8** %3, align 8
  %12 = load %0*, %0** %2, align 8
  %13 = getelementptr inbounds %0, %0* %12, i32 0, i32 3
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i32 0, i32 0
  store i8* %14, i8** %4, align 8
  %15 = load %0*, %0** %2, align 8
  %16 = getelementptr inbounds %0, %0* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %5, align 8
  br label %18

18:                                               ; preds = %65, %1
  %19 = load i64, i64* %5, align 8
  %20 = icmp ugt i64 %19, 0
  br i1 %20, label %21, label %66

21:                                               ; preds = %18
  %22 = load i8*, i8** %4, align 8
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 92
  br i1 %25, label %26, label %57

26:                                               ; preds = %21
  %27 = load i8*, i8** %4, align 8
  %28 = getelementptr inbounds i8, i8* %27, i32 1
  store i8* %28, i8** %4, align 8
  %29 = load %0*, %0** %2, align 8
  %30 = getelementptr inbounds %0, %0* %29, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = load i64, i64* %5, align 8
  %34 = add i64 %33, -1
  store i64 %34, i64* %5, align 8
  %35 = load i64, i64* %5, align 8
  %36 = icmp ugt i64 %35, 0
  br i1 %36, label %37, label %56

37:                                               ; preds = %26
  %38 = load i8*, i8** %4, align 8
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %40, 48
  br i1 %41, label %42, label %47

42:                                               ; preds = %37
  %43 = load i8*, i8** %3, align 8
  %44 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %44, i8** %3, align 8
  store i8 0, i8* %43, align 1
  %45 = load i8*, i8** %4, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %4, align 8
  br label %53

47:                                               ; preds = %37
  %48 = load i8*, i8** %4, align 8
  %49 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %49, i8** %4, align 8
  %50 = load i8, i8* %48, align 1
  %51 = load i8*, i8** %3, align 8
  %52 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %52, i8** %3, align 8
  store i8 %50, i8* %51, align 1
  br label %53

53:                                               ; preds = %47, %42
  %54 = load i64, i64* %5, align 8
  %55 = add i64 %54, -1
  store i64 %55, i64* %5, align 8
  br label %56

56:                                               ; preds = %53, %26
  br label %65

57:                                               ; preds = %21
  %58 = load i8*, i8** %4, align 8
  %59 = getelementptr inbounds i8, i8* %58, i32 1
  store i8* %59, i8** %4, align 8
  %60 = load i8, i8* %58, align 1
  %61 = load i8*, i8** %3, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %62, i8** %3, align 8
  store i8 %60, i8* %61, align 1
  %63 = load i64, i64* %5, align 8
  %64 = add i64 %63, -1
  store i64 %64, i64* %5, align 8
  br label %65

65:                                               ; preds = %57, %56
  br label %18

66:                                               ; preds = %18
  %67 = load i8*, i8** %3, align 8
  %68 = load i8*, i8** %4, align 8
  %69 = icmp ne i8* %67, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = load i8*, i8** %3, align 8
  store i8 0, i8* %71, align 1
  br label %72

72:                                               ; preds = %70, %66
  %73 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #13
  %74 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #13
  %75 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_addcslashes(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %18*, align 8
  %21 = alloca %0*, align 8
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  %24 = alloca %18*, align 8
  %25 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %26 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  store i32 0, i32* %7, align 4
  %30 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  store i32 2, i32* %8, align 4
  %31 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 2, i32* %9, align 4
  %32 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = load %14*, %14** %3, align 8
  %34 = getelementptr inbounds %14, %14* %33, i32 0, i32 4
  %35 = getelementptr inbounds %18, %18* %34, i32 0, i32 2
  %36 = bitcast %21* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %10, align 4
  %38 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  %39 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store %18* null, %18** %13, align 8
  %41 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 0, i32* %14, align 4
  %42 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  %43 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %18, align 4
  %44 = load i32, i32* %11, align 4
  %45 = load %18*, %18** %12, align 8
  %46 = load %18*, %18** %13, align 8
  %47 = load i32, i32* %14, align 4
  %48 = load i8*, i8** %15, align 8
  %49 = load i8, i8* %16, align 1
  %50 = load i8, i8* %17, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %10, align 4
  %53 = load i32, i32* %8, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %10, align 4
  %63 = load i32, i32* %9, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %9, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %10, align 4
  %82 = load i32, i32* %8, align 4
  %83 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %18, align 4
  br label %229

84:                                               ; preds = %71, %61
  store i32 0, i32* %11, align 4
  %85 = load %14*, %14** %3, align 8
  %86 = bitcast %14* %85 to %18*
  %87 = getelementptr inbounds %18, %18* %86, i64 4
  store %18* %87, %18** %12, align 8
  %88 = load i32, i32* %11, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %11, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %11, align 4
  %92 = load i32, i32* %8, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %17, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %11, align 4
  %111 = load i32, i32* %8, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %17, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %17, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %11, align 4
  %132 = load i32, i32* %10, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %229

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %18*, %18** %12, align 8
  %144 = getelementptr inbounds %18, %18* %143, i32 1
  store %18* %144, %18** %12, align 8
  %145 = load %18*, %18** %12, align 8
  store %18* %145, %18** %13, align 8
  %146 = load %18*, %18** %13, align 8
  %147 = call i32 @143(%18* %146, %0** %5, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %229

157:                                              ; preds = %142
  %158 = load i32, i32* %11, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %11, align 4
  br label %160

160:                                              ; preds = %157
  %161 = load i32, i32* %11, align 4
  %162 = load i32, i32* %8, align 4
  %163 = icmp sle i32 %161, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = load i8, i8* %17, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %166, 1
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi i1 [ true, %160 ], [ %167, %164 ]
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %168
  unreachable

176:                                              ; preds = %168
  br label %177

177:                                              ; preds = %176
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %11, align 4
  %181 = load i32, i32* %8, align 4
  %182 = icmp sgt i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %17, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 0
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  %198 = load i8, i8* %17, align 1
  %199 = icmp ne i8 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %197
  %201 = load i32, i32* %11, align 4
  %202 = load i32, i32* %10, align 4
  %203 = icmp sgt i32 %201, %202
  %204 = xor i1 %203, true
  %205 = xor i1 %204, true
  %206 = zext i1 %205 to i32
  %207 = sext i32 %206 to i64
  %208 = call i64 @llvm.expect.i64(i64 %207, i64 0)
  %209 = icmp ne i64 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %200
  br label %229

211:                                              ; preds = %200
  br label %212

212:                                              ; preds = %211, %197
  %213 = load %18*, %18** %12, align 8
  %214 = getelementptr inbounds %18, %18* %213, i32 1
  store %18* %214, %18** %12, align 8
  %215 = load %18*, %18** %12, align 8
  store %18* %215, %18** %13, align 8
  %216 = load %18*, %18** %13, align 8
  %217 = call i32 @143(%18* %216, %0** %6, i32 0)
  %218 = icmp ne i32 %217, 0
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i32
  %223 = sext i32 %222 to i64
  %224 = call i64 @llvm.expect.i64(i64 %223, i64 0)
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %212
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %229

227:                                              ; preds = %212
  br label %228

228:                                              ; preds = %227
  br label %229

229:                                              ; preds = %228, %226, %210, %156, %140, %80
  %230 = load i32, i32* %18, align 4
  %231 = icmp ne i32 %230, 0
  %232 = xor i1 %231, true
  %233 = xor i1 %232, true
  %234 = zext i1 %233 to i32
  %235 = sext i32 %234 to i64
  %236 = call i64 @llvm.expect.i64(i64 %235, i64 0)
  %237 = icmp ne i64 %236, 0
  br i1 %237, label %238, label %261

238:                                              ; preds = %229
  %239 = load i32, i32* %18, align 4
  %240 = icmp eq i32 %239, 2
  br i1 %240, label %241, label %244

241:                                              ; preds = %238
  %242 = load i32, i32* %11, align 4
  %243 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %242, i8* %243)
  br label %260

244:                                              ; preds = %238
  %245 = load i32, i32* %18, align 4
  %246 = icmp eq i32 %245, 3
  br i1 %246, label %247, label %251

247:                                              ; preds = %244
  %248 = load i32, i32* %11, align 4
  %249 = load i8*, i8** %15, align 8
  %250 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %248, i8* %249, %18* %250)
  br label %259

251:                                              ; preds = %244
  %252 = load i32, i32* %18, align 4
  %253 = icmp eq i32 %252, 4
  br i1 %253, label %254, label %258

254:                                              ; preds = %251
  %255 = load i32, i32* %11, align 4
  %256 = load i32, i32* %14, align 4
  %257 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %255, i32 %256, %18* %257)
  br label %258

258:                                              ; preds = %254, %251
  br label %259

259:                                              ; preds = %258, %247
  br label %260

260:                                              ; preds = %259, %241
  store i32 1, i32* %19, align 4
  br label %262

261:                                              ; preds = %229
  store i32 0, i32* %19, align 4
  br label %262

262:                                              ; preds = %261, %260
  %263 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %264 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #13
  %265 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %265) #13
  %266 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %266) #13
  %267 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #13
  %268 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %268) #13
  %269 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #13
  %270 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %270) #13
  %271 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #13
  %272 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #13
  %273 = load i32, i32* %19, align 4
  switch i32 %273, label %367 [
    i32 0, label %274
  ]

274:                                              ; preds = %262
  br label %275

275:                                              ; preds = %274
  br label %276

276:                                              ; preds = %275
  %277 = load %0*, %0** %5, align 8
  %278 = getelementptr inbounds %0, %0* %277, i32 0, i32 2
  %279 = load i64, i64* %278, align 8
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %301

281:                                              ; preds = %276
  br label %282

282:                                              ; preds = %281
  br label %283

283:                                              ; preds = %282
  %284 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %284) #13
  %285 = load %18*, %18** %4, align 8
  store %18* %285, %18** %20, align 8
  %286 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %286) #13
  %287 = load %0*, %0** @zend_empty_string, align 8
  store %0* %287, %0** %21, align 8
  %288 = load %0*, %0** %21, align 8
  %289 = load %18*, %18** %20, align 8
  %290 = getelementptr inbounds %18, %18* %289, i32 0, i32 0
  %291 = bitcast %19* %290 to %0**
  store %0* %288, %0** %291, align 8
  %292 = load %18*, %18** %20, align 8
  %293 = getelementptr inbounds %18, %18* %292, i32 0, i32 1
  %294 = bitcast %20* %293 to i32*
  store i32 6, i32* %294, align 8
  %295 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %295) #13
  %296 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296) #13
  br label %297

297:                                              ; preds = %283
  br label %298

298:                                              ; preds = %297
  br label %299

299:                                              ; preds = %298
  br label %300

300:                                              ; preds = %299
  store i32 1, i32* %19, align 4
  br label %367

301:                                              ; preds = %276
  %302 = load %0*, %0** %6, align 8
  %303 = getelementptr inbounds %0, %0* %302, i32 0, i32 2
  %304 = load i64, i64* %303, align 8
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %332

306:                                              ; preds = %301
  br label %307

307:                                              ; preds = %306
  br label %308

308:                                              ; preds = %307
  %309 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %309) #13
  %310 = load %18*, %18** %4, align 8
  store %18* %310, %18** %22, align 8
  %311 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %311) #13
  %312 = load %0*, %0** %5, align 8
  %313 = getelementptr inbounds %0, %0* %312, i32 0, i32 3
  %314 = getelementptr inbounds [1 x i8], [1 x i8]* %313, i32 0, i32 0
  %315 = load %0*, %0** %5, align 8
  %316 = getelementptr inbounds %0, %0* %315, i32 0, i32 2
  %317 = load i64, i64* %316, align 8
  %318 = call %0* @148(i8* %314, i64 %317, i32 0)
  store %0* %318, %0** %23, align 8
  %319 = load %0*, %0** %23, align 8
  %320 = load %18*, %18** %22, align 8
  %321 = getelementptr inbounds %18, %18* %320, i32 0, i32 0
  %322 = bitcast %19* %321 to %0**
  store %0* %319, %0** %322, align 8
  %323 = load %18*, %18** %22, align 8
  %324 = getelementptr inbounds %18, %18* %323, i32 0, i32 1
  %325 = bitcast %20* %324 to i32*
  store i32 5126, i32* %325, align 8
  %326 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %326) #13
  %327 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %327) #13
  br label %328

328:                                              ; preds = %308
  br label %329

329:                                              ; preds = %328
  br label %330

330:                                              ; preds = %329
  br label %331

331:                                              ; preds = %330
  store i32 1, i32* %19, align 4
  br label %367

332:                                              ; preds = %301
  br label %333

333:                                              ; preds = %332
  %334 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %334) #13
  %335 = load %18*, %18** %4, align 8
  store %18* %335, %18** %24, align 8
  %336 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %336) #13
  %337 = load %0*, %0** %5, align 8
  %338 = load %0*, %0** %6, align 8
  %339 = getelementptr inbounds %0, %0* %338, i32 0, i32 3
  %340 = getelementptr inbounds [1 x i8], [1 x i8]* %339, i32 0, i32 0
  %341 = load %0*, %0** %6, align 8
  %342 = getelementptr inbounds %0, %0* %341, i32 0, i32 2
  %343 = load i64, i64* %342, align 8
  %344 = call %0* @php_addcslashes(%0* %337, i32 0, i8* %340, i64 %343)
  store %0* %344, %0** %25, align 8
  %345 = load %0*, %0** %25, align 8
  %346 = load %18*, %18** %24, align 8
  %347 = getelementptr inbounds %18, %18* %346, i32 0, i32 0
  %348 = bitcast %19* %347 to %0**
  store %0* %345, %0** %348, align 8
  %349 = load %0*, %0** %25, align 8
  %350 = getelementptr inbounds %0, %0* %349, i32 0, i32 0
  %351 = getelementptr inbounds %1, %1* %350, i32 0, i32 1
  %352 = bitcast %2* %351 to %52*
  %353 = getelementptr inbounds %52, %52* %352, i32 0, i32 1
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = and i32 %355, 2
  %357 = icmp ne i32 %356, 0
  %358 = zext i1 %357 to i64
  %359 = select i1 %357, i32 6, i32 5126
  %360 = load %18*, %18** %24, align 8
  %361 = getelementptr inbounds %18, %18* %360, i32 0, i32 1
  %362 = bitcast %20* %361 to i32*
  store i32 %359, i32* %362, align 8
  %363 = bitcast %0** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %363) #13
  %364 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %364) #13
  br label %365

365:                                              ; preds = %333
  br label %366

366:                                              ; preds = %365
  store i32 1, i32* %19, align 4
  br label %367

367:                                              ; preds = %366, %331, %300, %262
  %368 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %368) #13
  %369 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %369) #13
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local %0* @php_addcslashes(%0* %0, i32 %1, i8* %2, i64 %3) #0 {
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca [256 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca %0*, align 8
  store %0* %0, %0** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %16 = bitcast [256 x i8]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %16) #13
  %17 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #13
  %18 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #13
  %20 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = load %0*, %0** %5, align 8
  %23 = getelementptr inbounds %0, %0* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = call %0* @153(i64 4, i64 %24, i64 0, i32 0)
  store %0* %25, %0** %15, align 8
  %26 = load i8*, i8** %7, align 8
  %27 = load i64, i64* %8, align 8
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0
  %29 = call i32 @174(i8* %26, i64 %27, i8* %28)
  %30 = load %0*, %0** %5, align 8
  %31 = getelementptr inbounds %0, %0* %30, i32 0, i32 3
  %32 = getelementptr inbounds [1 x i8], [1 x i8]* %31, i32 0, i32 0
  store i8* %32, i8** %10, align 8
  %33 = load i8*, i8** %10, align 8
  %34 = load %0*, %0** %5, align 8
  %35 = getelementptr inbounds %0, %0* %34, i32 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 %36
  store i8* %37, i8** %12, align 8
  %38 = load %0*, %0** %15, align 8
  %39 = getelementptr inbounds %0, %0* %38, i32 0, i32 3
  %40 = getelementptr inbounds [1 x i8], [1 x i8]* %39, i32 0, i32 0
  store i8* %40, i8** %11, align 8
  br label %41

41:                                               ; preds = %103, %4
  %42 = load i8*, i8** %10, align 8
  %43 = load i8*, i8** %12, align 8
  %44 = icmp ult i8* %42, %43
  br i1 %44, label %45, label %106

45:                                               ; preds = %41
  %46 = load i8*, i8** %10, align 8
  %47 = load i8, i8* %46, align 1
  store i8 %47, i8* %13, align 1
  %48 = load i8, i8* %13, align 1
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = icmp ne i8 %51, 0
  br i1 %52, label %53, label %99

53:                                               ; preds = %45
  %54 = load i8, i8* %13, align 1
  %55 = zext i8 %54 to i32
  %56 = icmp slt i32 %55, 32
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = load i8, i8* %13, align 1
  %59 = zext i8 %58 to i32
  %60 = icmp sgt i32 %59, 126
  br i1 %60, label %61, label %96

61:                                               ; preds = %57, %53
  %62 = load i8*, i8** %11, align 8
  %63 = getelementptr inbounds i8, i8* %62, i32 1
  store i8* %63, i8** %11, align 8
  store i8 92, i8* %62, align 1
  %64 = load i8, i8* %13, align 1
  %65 = sext i8 %64 to i32
  switch i32 %65, label %87 [
    i32 10, label %66
    i32 9, label %69
    i32 13, label %72
    i32 7, label %75
    i32 11, label %78
    i32 8, label %81
    i32 12, label %84
  ]

66:                                               ; preds = %61
  %67 = load i8*, i8** %11, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %11, align 8
  store i8 110, i8* %67, align 1
  br label %95

69:                                               ; preds = %61
  %70 = load i8*, i8** %11, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %11, align 8
  store i8 116, i8* %70, align 1
  br label %95

72:                                               ; preds = %61
  %73 = load i8*, i8** %11, align 8
  %74 = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %74, i8** %11, align 8
  store i8 114, i8* %73, align 1
  br label %95

75:                                               ; preds = %61
  %76 = load i8*, i8** %11, align 8
  %77 = getelementptr inbounds i8, i8* %76, i32 1
  store i8* %77, i8** %11, align 8
  store i8 97, i8* %76, align 1
  br label %95

78:                                               ; preds = %61
  %79 = load i8*, i8** %11, align 8
  %80 = getelementptr inbounds i8, i8* %79, i32 1
  store i8* %80, i8** %11, align 8
  store i8 118, i8* %79, align 1
  br label %95

81:                                               ; preds = %61
  %82 = load i8*, i8** %11, align 8
  %83 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %83, i8** %11, align 8
  store i8 98, i8* %82, align 1
  br label %95

84:                                               ; preds = %61
  %85 = load i8*, i8** %11, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %86, i8** %11, align 8
  store i8 102, i8* %85, align 1
  br label %95

87:                                               ; preds = %61
  %88 = load i8*, i8** %11, align 8
  %89 = load i8, i8* %13, align 1
  %90 = zext i8 %89 to i32
  %91 = call i32 (i8*, i8*, ...) @php_sprintf(i8* %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @94, i32 0, i32 0), i32 %90)
  %92 = load i8*, i8** %11, align 8
  %93 = sext i32 %91 to i64
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  store i8* %94, i8** %11, align 8
  br label %95

95:                                               ; preds = %87, %84, %81, %78, %75, %72, %69, %66
  br label %103

96:                                               ; preds = %57
  %97 = load i8*, i8** %11, align 8
  %98 = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %98, i8** %11, align 8
  store i8 92, i8* %97, align 1
  br label %99

99:                                               ; preds = %96, %45
  %100 = load i8, i8* %13, align 1
  %101 = load i8*, i8** %11, align 8
  %102 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %102, i8** %11, align 8
  store i8 %100, i8* %101, align 1
  br label %103

103:                                              ; preds = %99, %95
  %104 = load i8*, i8** %10, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %10, align 8
  br label %41

106:                                              ; preds = %41
  %107 = load i8*, i8** %11, align 8
  store i8 0, i8* %107, align 1
  %108 = load i8*, i8** %11, align 8
  %109 = load %0*, %0** %15, align 8
  %110 = getelementptr inbounds %0, %0* %109, i32 0, i32 3
  %111 = getelementptr inbounds [1 x i8], [1 x i8]* %110, i32 0, i32 0
  %112 = ptrtoint i8* %108 to i64
  %113 = ptrtoint i8* %111 to i64
  %114 = sub i64 %112, %113
  store i64 %114, i64* %14, align 8
  %115 = load i64, i64* %14, align 8
  %116 = load %0*, %0** %5, align 8
  %117 = getelementptr inbounds %0, %0* %116, i32 0, i32 2
  %118 = load i64, i64* %117, align 8
  %119 = mul i64 %118, 4
  %120 = icmp ult i64 %115, %119
  br i1 %120, label %121, label %125

121:                                              ; preds = %106
  %122 = load %0*, %0** %15, align 8
  %123 = load i64, i64* %14, align 8
  %124 = call %0* @155(%0* %122, i64 %123, i32 0)
  store %0* %124, %0** %15, align 8
  br label %125

125:                                              ; preds = %121, %106
  %126 = load i32, i32* %6, align 4
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %125
  %129 = load %0*, %0** %5, align 8
  call void @159(%0* %129)
  br label %130

130:                                              ; preds = %128, %125
  %131 = load %0*, %0** %15, align 8
  %132 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #13
  %133 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #13
  %134 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %134) #13
  %135 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %135) #13
  %136 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #13
  %137 = bitcast [256 x i8]* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %137) #13
  ret %0* %131
}

; Function Attrs: nounwind uwtable
define hidden void @zif_addslashes(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %18*, align 8
  %12 = alloca %18*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  %21 = alloca %18*, align 8
  %22 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %23 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 0, i32* %6, align 4
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 1, i32* %7, align 4
  %27 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 1, i32* %8, align 4
  %28 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %9, align 4
  %34 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store %18* null, %18** %12, align 8
  %37 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %13, align 4
  %38 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %39 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %17, align 4
  %40 = load i32, i32* %10, align 4
  %41 = load %18*, %18** %11, align 8
  %42 = load %18*, %18** %12, align 8
  %43 = load i32, i32* %13, align 4
  %44 = load i8*, i8** %14, align 8
  %45 = load i8, i8* %15, align 1
  %46 = load i8, i8* %16, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %9, align 4
  %49 = load i32, i32* %7, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* %8, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %8, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %9, align 4
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %8, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %17, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %10, align 4
  %81 = load %14*, %14** %3, align 8
  %82 = bitcast %14* %81 to %18*
  %83 = getelementptr inbounds %18, %18* %82, i64 4
  store %18* %83, %18** %11, align 8
  %84 = load i32, i32* %10, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %10, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %10, align 4
  %88 = load i32, i32* %7, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %16, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %10, align 4
  %107 = load i32, i32* %7, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %16, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %16, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %10, align 4
  %128 = load i32, i32* %9, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %18*, %18** %11, align 8
  %140 = getelementptr inbounds %18, %18* %139, i32 1
  store %18* %140, %18** %11, align 8
  %141 = load %18*, %18** %11, align 8
  store %18* %141, %18** %12, align 8
  %142 = load %18*, %18** %12, align 8
  %143 = call i32 @143(%18* %142, %0** %5, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %13, align 4
  store i32 4, i32* %17, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %17, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %17, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %10, align 4
  %169 = load i8*, i8** %14, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %17, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %10, align 4
  %175 = load i8*, i8** %14, align 8
  %176 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %18* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %17, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %10, align 4
  %182 = load i32, i32* %13, align 4
  %183 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %18* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %18, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %18, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %190 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #13
  %192 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = load i32, i32* %18, align 4
  switch i32 %199, label %256 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load %0*, %0** %5, align 8
  %204 = getelementptr inbounds %0, %0* %203, i32 0, i32 2
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %227

207:                                              ; preds = %202
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %210) #13
  %211 = load %18*, %18** %4, align 8
  store %18* %211, %18** %19, align 8
  %212 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %212) #13
  %213 = load %0*, %0** @zend_empty_string, align 8
  store %0* %213, %0** %20, align 8
  %214 = load %0*, %0** %20, align 8
  %215 = load %18*, %18** %19, align 8
  %216 = getelementptr inbounds %18, %18* %215, i32 0, i32 0
  %217 = bitcast %19* %216 to %0**
  store %0* %214, %0** %217, align 8
  %218 = load %18*, %18** %19, align 8
  %219 = getelementptr inbounds %18, %18* %218, i32 0, i32 1
  %220 = bitcast %20* %219 to i32*
  store i32 6, i32* %220, align 8
  %221 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #13
  %222 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #13
  br label %223

223:                                              ; preds = %209
  br label %224

224:                                              ; preds = %223
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225
  store i32 1, i32* %18, align 4
  br label %256

227:                                              ; preds = %202
  br label %228

228:                                              ; preds = %227
  %229 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %229) #13
  %230 = load %18*, %18** %4, align 8
  store %18* %230, %18** %21, align 8
  %231 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %231) #13
  %232 = load %0*, %0** %5, align 8
  %233 = call %0* @php_addslashes(%0* %232, i32 0)
  store %0* %233, %0** %22, align 8
  %234 = load %0*, %0** %22, align 8
  %235 = load %18*, %18** %21, align 8
  %236 = getelementptr inbounds %18, %18* %235, i32 0, i32 0
  %237 = bitcast %19* %236 to %0**
  store %0* %234, %0** %237, align 8
  %238 = load %0*, %0** %22, align 8
  %239 = getelementptr inbounds %0, %0* %238, i32 0, i32 0
  %240 = getelementptr inbounds %1, %1* %239, i32 0, i32 1
  %241 = bitcast %2* %240 to %52*
  %242 = getelementptr inbounds %52, %52* %241, i32 0, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = and i32 %244, 2
  %246 = icmp ne i32 %245, 0
  %247 = zext i1 %246 to i64
  %248 = select i1 %246, i32 6, i32 5126
  %249 = load %18*, %18** %21, align 8
  %250 = getelementptr inbounds %18, %18* %249, i32 0, i32 1
  %251 = bitcast %20* %250 to i32*
  store i32 %248, i32* %251, align 8
  %252 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %252) #13
  %253 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %253) #13
  br label %254

254:                                              ; preds = %228
  br label %255

255:                                              ; preds = %254
  store i32 1, i32* %18, align 4
  br label %256

256:                                              ; preds = %255, %226, %188
  %257 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #13
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local %0* @php_addslashes(%0* %0, i32 %1) #0 {
  %3 = alloca %0*, align 8
  %4 = alloca %0*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %0*, align 8
  %11 = alloca i32, align 4
  store %0* %0, %0** %4, align 8
  store i32 %1, i32* %5, align 4
  %12 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #13
  %14 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #13
  %15 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = load %0*, %0** %4, align 8
  %18 = icmp ne %0* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  %20 = load %0*, %0** @zend_empty_string, align 8
  store %0* %20, %0** %3, align 8
  store i32 1, i32* %11, align 4
  br label %143

21:                                               ; preds = %2
  %22 = load %0*, %0** %4, align 8
  %23 = getelementptr inbounds %0, %0* %22, i32 0, i32 3
  %24 = getelementptr inbounds [1 x i8], [1 x i8]* %23, i32 0, i32 0
  store i8* %24, i8** %6, align 8
  %25 = load i8*, i8** %6, align 8
  %26 = load %0*, %0** %4, align 8
  %27 = getelementptr inbounds %0, %0* %26, i32 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 %28
  store i8* %29, i8** %8, align 8
  br label %30

30:                                               ; preds = %42, %21
  %31 = load i8*, i8** %6, align 8
  %32 = load i8*, i8** %8, align 8
  %33 = icmp ult i8* %31, %32
  br i1 %33, label %34, label %43

34:                                               ; preds = %30
  %35 = load i8*, i8** %6, align 8
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  switch i32 %37, label %39 [
    i32 0, label %38
    i32 39, label %38
    i32 34, label %38
    i32 92, label %38
  ]

38:                                               ; preds = %34, %34, %34, %34
  br label %51

39:                                               ; preds = %34
  %40 = load i8*, i8** %6, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %6, align 8
  br label %42

42:                                               ; preds = %39
  br label %30

43:                                               ; preds = %30
  %44 = load i32, i32* %5, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = load %0*, %0** %4, align 8
  %48 = call %0* @163(%0* %47)
  store %0* %48, %0** %3, align 8
  store i32 1, i32* %11, align 4
  br label %143

49:                                               ; preds = %43
  %50 = load %0*, %0** %4, align 8
  store %0* %50, %0** %3, align 8
  store i32 1, i32* %11, align 4
  br label %143

51:                                               ; preds = %38
  %52 = load i8*, i8** %6, align 8
  %53 = load %0*, %0** %4, align 8
  %54 = getelementptr inbounds %0, %0* %53, i32 0, i32 3
  %55 = getelementptr inbounds [1 x i8], [1 x i8]* %54, i32 0, i32 0
  %56 = ptrtoint i8* %52 to i64
  %57 = ptrtoint i8* %55 to i64
  %58 = sub i64 %56, %57
  store i64 %58, i64* %9, align 8
  %59 = load %0*, %0** %4, align 8
  %60 = getelementptr inbounds %0, %0* %59, i32 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = load i64, i64* %9, align 8
  %63 = sub i64 %61, %62
  %64 = load i64, i64* %9, align 8
  %65 = call %0* @153(i64 2, i64 %63, i64 %64, i32 0)
  store %0* %65, %0** %10, align 8
  %66 = load %0*, %0** %10, align 8
  %67 = getelementptr inbounds %0, %0* %66, i32 0, i32 3
  %68 = getelementptr inbounds [1 x i8], [1 x i8]* %67, i32 0, i32 0
  %69 = load %0*, %0** %4, align 8
  %70 = getelementptr inbounds %0, %0* %69, i32 0, i32 3
  %71 = getelementptr inbounds [1 x i8], [1 x i8]* %70, i32 0, i32 0
  %72 = load i64, i64* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %71, i64 %72, i1 false)
  %73 = load %0*, %0** %10, align 8
  %74 = getelementptr inbounds %0, %0* %73, i32 0, i32 3
  %75 = getelementptr inbounds [1 x i8], [1 x i8]* %74, i32 0, i32 0
  %76 = load i64, i64* %9, align 8
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  store i8* %77, i8** %7, align 8
  br label %78

78:                                               ; preds = %99, %51
  %79 = load i8*, i8** %6, align 8
  %80 = load i8*, i8** %8, align 8
  %81 = icmp ult i8* %79, %80
  br i1 %81, label %82, label %102

82:                                               ; preds = %78
  %83 = load i8*, i8** %6, align 8
  %84 = load i8, i8* %83, align 1
  %85 = sext i8 %84 to i32
  switch i32 %85, label %94 [
    i32 0, label %86
    i32 39, label %91
    i32 34, label %91
    i32 92, label %91
  ]

86:                                               ; preds = %82
  %87 = load i8*, i8** %7, align 8
  %88 = getelementptr inbounds i8, i8* %87, i32 1
  store i8* %88, i8** %7, align 8
  store i8 92, i8* %87, align 1
  %89 = load i8*, i8** %7, align 8
  %90 = getelementptr inbounds i8, i8* %89, i32 1
  store i8* %90, i8** %7, align 8
  store i8 48, i8* %89, align 1
  br label %99

91:                                               ; preds = %82, %82, %82
  %92 = load i8*, i8** %7, align 8
  %93 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %93, i8** %7, align 8
  store i8 92, i8* %92, align 1
  br label %94

94:                                               ; preds = %82, %91
  %95 = load i8*, i8** %6, align 8
  %96 = load i8, i8* %95, align 1
  %97 = load i8*, i8** %7, align 8
  %98 = getelementptr inbounds i8, i8* %97, i32 1
  store i8* %98, i8** %7, align 8
  store i8 %96, i8* %97, align 1
  br label %99

99:                                               ; preds = %94, %86
  %100 = load i8*, i8** %6, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %6, align 8
  br label %78

102:                                              ; preds = %78
  %103 = load i8*, i8** %7, align 8
  store i8 0, i8* %103, align 1
  %104 = load i32, i32* %5, align 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  %107 = load %0*, %0** %4, align 8
  call void @159(%0* %107)
  br label %108

108:                                              ; preds = %106, %102
  %109 = load %0*, %0** %10, align 8
  %110 = getelementptr inbounds %0, %0* %109, i32 0, i32 2
  %111 = load i64, i64* %110, align 8
  %112 = load i8*, i8** %7, align 8
  %113 = load %0*, %0** %10, align 8
  %114 = getelementptr inbounds %0, %0* %113, i32 0, i32 3
  %115 = getelementptr inbounds [1 x i8], [1 x i8]* %114, i32 0, i32 0
  %116 = ptrtoint i8* %112 to i64
  %117 = ptrtoint i8* %115 to i64
  %118 = sub i64 %116, %117
  %119 = sub i64 %111, %118
  %120 = icmp ugt i64 %119, 16
  br i1 %120, label %121, label %131

121:                                              ; preds = %108
  %122 = load %0*, %0** %10, align 8
  %123 = load i8*, i8** %7, align 8
  %124 = load %0*, %0** %10, align 8
  %125 = getelementptr inbounds %0, %0* %124, i32 0, i32 3
  %126 = getelementptr inbounds [1 x i8], [1 x i8]* %125, i32 0, i32 0
  %127 = ptrtoint i8* %123 to i64
  %128 = ptrtoint i8* %126 to i64
  %129 = sub i64 %127, %128
  %130 = call %0* @155(%0* %122, i64 %129, i32 0)
  store %0* %130, %0** %10, align 8
  br label %141

131:                                              ; preds = %108
  %132 = load i8*, i8** %7, align 8
  %133 = load %0*, %0** %10, align 8
  %134 = getelementptr inbounds %0, %0* %133, i32 0, i32 3
  %135 = getelementptr inbounds [1 x i8], [1 x i8]* %134, i32 0, i32 0
  %136 = ptrtoint i8* %132 to i64
  %137 = ptrtoint i8* %135 to i64
  %138 = sub i64 %136, %137
  %139 = load %0*, %0** %10, align 8
  %140 = getelementptr inbounds %0, %0* %139, i32 0, i32 2
  store i64 %138, i64* %140, align 8
  br label %141

141:                                              ; preds = %131, %121
  %142 = load %0*, %0** %10, align 8
  store %0* %142, %0** %3, align 8
  store i32 1, i32* %11, align 4
  br label %143

143:                                              ; preds = %141, %49, %46, %19
  %144 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144) #13
  %145 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #13
  %146 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %146) #13
  %147 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %147) #13
  %148 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #13
  %149 = load %0*, %0** %3, align 8
  ret %0* %149
}

; Function Attrs: nounwind uwtable
define hidden void @zif_stripcslashes(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %18*, align 8
  %12 = alloca %18*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %21 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13
  store i32 0, i32* %6, align 4
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  store i32 1, i32* %7, align 4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 1, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  %27 = load %14*, %14** %3, align 8
  %28 = getelementptr inbounds %14, %14* %27, i32 0, i32 4
  %29 = getelementptr inbounds %18, %18* %28, i32 0, i32 2
  %30 = bitcast %21* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %9, align 4
  %32 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  store %18* null, %18** %12, align 8
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 0, i32* %13, align 4
  %36 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %37 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %17, align 4
  %38 = load i32, i32* %10, align 4
  %39 = load %18*, %18** %11, align 8
  %40 = load %18*, %18** %12, align 8
  %41 = load i32, i32* %13, align 4
  %42 = load i8*, i8** %14, align 8
  %43 = load i8, i8* %15, align 1
  %44 = load i8, i8* %16, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %9, align 4
  %47 = load i32, i32* %7, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %9, align 4
  %57 = load i32, i32* %8, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %8, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %9, align 4
  %76 = load i32, i32* %7, align 4
  %77 = load i32, i32* %8, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %17, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %10, align 4
  %79 = load %14*, %14** %3, align 8
  %80 = bitcast %14* %79 to %18*
  %81 = getelementptr inbounds %18, %18* %80, i64 4
  store %18* %81, %18** %11, align 8
  %82 = load i32, i32* %10, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %10, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %10, align 4
  %86 = load i32, i32* %7, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %16, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %10, align 4
  %105 = load i32, i32* %7, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %16, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %16, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %10, align 4
  %126 = load i32, i32* %9, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %18*, %18** %11, align 8
  %138 = getelementptr inbounds %18, %18* %137, i32 1
  store %18* %138, %18** %11, align 8
  %139 = load %18*, %18** %11, align 8
  store %18* %139, %18** %12, align 8
  %140 = load %18*, %18** %12, align 8
  %141 = call i32 @143(%18* %140, %0** %5, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 2, i32* %13, align 4
  store i32 4, i32* %17, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %17, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %185

162:                                              ; preds = %153
  %163 = load i32, i32* %17, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %10, align 4
  %167 = load i8*, i8** %14, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %17, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %10, align 4
  %173 = load i8*, i8** %14, align 8
  %174 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %18* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %17, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %10, align 4
  %180 = load i32, i32* %13, align 4
  %181 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %18* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  store i32 1, i32* %18, align 4
  br label %186

185:                                              ; preds = %153
  store i32 0, i32* %18, align 4
  br label %186

186:                                              ; preds = %185, %184
  %187 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %187) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %188 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #13
  %189 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  %190 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #13
  %192 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %192) #13
  %193 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #13
  %194 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = load i32, i32* %18, align 4
  switch i32 %197, label %230 [
    i32 0, label %198
  ]

198:                                              ; preds = %186
  br label %199

199:                                              ; preds = %198
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %203) #13
  %204 = load %18*, %18** %4, align 8
  store %18* %204, %18** %19, align 8
  %205 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %205) #13
  %206 = load %0*, %0** %5, align 8
  %207 = getelementptr inbounds %0, %0* %206, i32 0, i32 3
  %208 = getelementptr inbounds [1 x i8], [1 x i8]* %207, i32 0, i32 0
  %209 = load %0*, %0** %5, align 8
  %210 = getelementptr inbounds %0, %0* %209, i32 0, i32 2
  %211 = load i64, i64* %210, align 8
  %212 = call %0* @148(i8* %208, i64 %211, i32 0)
  store %0* %212, %0** %20, align 8
  %213 = load %0*, %0** %20, align 8
  %214 = load %18*, %18** %19, align 8
  %215 = getelementptr inbounds %18, %18* %214, i32 0, i32 0
  %216 = bitcast %19* %215 to %0**
  store %0* %213, %0** %216, align 8
  %217 = load %18*, %18** %19, align 8
  %218 = getelementptr inbounds %18, %18* %217, i32 0, i32 1
  %219 = bitcast %20* %218 to i32*
  store i32 5126, i32* %219, align 8
  %220 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %220) #13
  %221 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #13
  br label %222

222:                                              ; preds = %202
  br label %223

223:                                              ; preds = %222
  br label %224

224:                                              ; preds = %223
  br label %225

225:                                              ; preds = %224
  %226 = load %18*, %18** %4, align 8
  %227 = getelementptr inbounds %18, %18* %226, i32 0, i32 0
  %228 = bitcast %19* %227 to %0**
  %229 = load %0*, %0** %228, align 8
  call void @php_stripcslashes(%0* %229)
  store i32 0, i32* %18, align 4
  br label %230

230:                                              ; preds = %225, %186
  %231 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #13
  %232 = load i32, i32* %18, align 4
  switch i32 %232, label %234 [
    i32 0, label %233
    i32 1, label %233
  ]

233:                                              ; preds = %230, %230
  ret void

234:                                              ; preds = %230
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @php_stripcslashes(%0* %0) #0 {
  %2 = alloca %0*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca [4 x i8], align 1
  store %0* %0, %0** %2, align 8
  %9 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  %10 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = load %0*, %0** %2, align 8
  %14 = getelementptr inbounds %0, %0* %13, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %6, align 8
  %16 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #13
  %17 = bitcast [4 x i8]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #13
  %18 = load %0*, %0** %2, align 8
  %19 = getelementptr inbounds %0, %0* %18, i32 0, i32 3
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %19, i32 0, i32 0
  store i8* %20, i8** %3, align 8
  %21 = load i8*, i8** %3, align 8
  %22 = load %0*, %0** %2, align 8
  %23 = getelementptr inbounds %0, %0* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  store i8* %25, i8** %5, align 8
  %26 = load %0*, %0** %2, align 8
  %27 = getelementptr inbounds %0, %0* %26, i32 0, i32 3
  %28 = getelementptr inbounds [1 x i8], [1 x i8]* %27, i32 0, i32 0
  store i8* %28, i8** %4, align 8
  br label %29

29:                                               ; preds = %206, %1
  %30 = load i8*, i8** %3, align 8
  %31 = load i8*, i8** %5, align 8
  %32 = icmp ult i8* %30, %31
  br i1 %32, label %33, label %209

33:                                               ; preds = %29
  %34 = load i8*, i8** %3, align 8
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp eq i32 %36, 92
  br i1 %37, label %38, label %200

38:                                               ; preds = %33
  %39 = load i8*, i8** %3, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 1
  %41 = load i8*, i8** %5, align 8
  %42 = icmp ult i8* %40, %41
  br i1 %42, label %43, label %200

43:                                               ; preds = %38
  %44 = load i8*, i8** %3, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %3, align 8
  %46 = load i8*, i8** %3, align 8
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  switch i32 %48, label %148 [
    i32 110, label %49
    i32 114, label %54
    i32 97, label %59
    i32 116, label %64
    i32 118, label %69
    i32 98, label %74
    i32 102, label %79
    i32 92, label %84
    i32 120, label %89
  ]

49:                                               ; preds = %43
  %50 = load i8*, i8** %4, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %4, align 8
  store i8 10, i8* %50, align 1
  %52 = load i64, i64* %6, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %6, align 8
  br label %199

54:                                               ; preds = %43
  %55 = load i8*, i8** %4, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %4, align 8
  store i8 13, i8* %55, align 1
  %57 = load i64, i64* %6, align 8
  %58 = add i64 %57, -1
  store i64 %58, i64* %6, align 8
  br label %199

59:                                               ; preds = %43
  %60 = load i8*, i8** %4, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %4, align 8
  store i8 7, i8* %60, align 1
  %62 = load i64, i64* %6, align 8
  %63 = add i64 %62, -1
  store i64 %63, i64* %6, align 8
  br label %199

64:                                               ; preds = %43
  %65 = load i8*, i8** %4, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %4, align 8
  store i8 9, i8* %65, align 1
  %67 = load i64, i64* %6, align 8
  %68 = add i64 %67, -1
  store i64 %68, i64* %6, align 8
  br label %199

69:                                               ; preds = %43
  %70 = load i8*, i8** %4, align 8
  %71 = getelementptr inbounds i8, i8* %70, i32 1
  store i8* %71, i8** %4, align 8
  store i8 11, i8* %70, align 1
  %72 = load i64, i64* %6, align 8
  %73 = add i64 %72, -1
  store i64 %73, i64* %6, align 8
  br label %199

74:                                               ; preds = %43
  %75 = load i8*, i8** %4, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %4, align 8
  store i8 8, i8* %75, align 1
  %77 = load i64, i64* %6, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %6, align 8
  br label %199

79:                                               ; preds = %43
  %80 = load i8*, i8** %4, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %4, align 8
  store i8 12, i8* %80, align 1
  %82 = load i64, i64* %6, align 8
  %83 = add i64 %82, -1
  store i64 %83, i64* %6, align 8
  br label %199

84:                                               ; preds = %43
  %85 = load i8*, i8** %4, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %86, i8** %4, align 8
  store i8 92, i8* %85, align 1
  %87 = load i64, i64* %6, align 8
  %88 = add i64 %87, -1
  store i64 %88, i64* %6, align 8
  br label %199

89:                                               ; preds = %43
  %90 = load i8*, i8** %3, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 1
  %92 = load i8*, i8** %5, align 8
  %93 = icmp ult i8* %91, %92
  br i1 %93, label %94, label %147

94:                                               ; preds = %89
  %95 = call i16** @__ctype_b_loc() #17
  %96 = load i16*, i16** %95, align 8
  %97 = load i8*, i8** %3, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  %99 = load i8, i8* %98, align 1
  %100 = sext i8 %99 to i32
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i16, i16* %96, i64 %101
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = and i32 %104, 4096
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %147

107:                                              ; preds = %94
  %108 = load i8*, i8** %3, align 8
  %109 = getelementptr inbounds i8, i8* %108, i32 1
  store i8* %109, i8** %3, align 8
  %110 = load i8, i8* %109, align 1
  %111 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  store i8 %110, i8* %111, align 1
  %112 = load i8*, i8** %3, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 1
  %114 = load i8*, i8** %5, align 8
  %115 = icmp ult i8* %113, %114
  br i1 %115, label %116, label %137

116:                                              ; preds = %107
  %117 = call i16** @__ctype_b_loc() #17
  %118 = load i16*, i16** %117, align 8
  %119 = load i8*, i8** %3, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i16, i16* %118, i64 %123
  %125 = load i16, i16* %124, align 2
  %126 = zext i16 %125 to i32
  %127 = and i32 %126, 4096
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %137

129:                                              ; preds = %116
  %130 = load i8*, i8** %3, align 8
  %131 = getelementptr inbounds i8, i8* %130, i32 1
  store i8* %131, i8** %3, align 8
  %132 = load i8, i8* %131, align 1
  %133 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 1
  store i8 %132, i8* %133, align 1
  %134 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 2
  store i8 0, i8* %134, align 1
  %135 = load i64, i64* %6, align 8
  %136 = sub i64 %135, 3
  store i64 %136, i64* %6, align 8
  br label %141

137:                                              ; preds = %116, %107
  %138 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 1
  store i8 0, i8* %138, align 1
  %139 = load i64, i64* %6, align 8
  %140 = sub i64 %139, 2
  store i64 %140, i64* %6, align 8
  br label %141

141:                                              ; preds = %137, %129
  %142 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i32 0, i32 0
  %143 = call i64 @strtol(i8* %142, i8** null, i32 16) #13
  %144 = trunc i64 %143 to i8
  %145 = load i8*, i8** %4, align 8
  %146 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %146, i8** %4, align 8
  store i8 %144, i8* %145, align 1
  br label %199

147:                                              ; preds = %94, %89
  br label %148

148:                                              ; preds = %43, %147
  store i64 0, i64* %7, align 8
  br label %149

149:                                              ; preds = %168, %148
  %150 = load i8*, i8** %3, align 8
  %151 = load i8*, i8** %5, align 8
  %152 = icmp ult i8* %150, %151
  br i1 %152, label %153, label %166

153:                                              ; preds = %149
  %154 = load i8*, i8** %3, align 8
  %155 = load i8, i8* %154, align 1
  %156 = sext i8 %155 to i32
  %157 = icmp sge i32 %156, 48
  br i1 %157, label %158, label %166

158:                                              ; preds = %153
  %159 = load i8*, i8** %3, align 8
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 %160 to i32
  %162 = icmp sle i32 %161, 55
  br i1 %162, label %163, label %166

163:                                              ; preds = %158
  %164 = load i64, i64* %7, align 8
  %165 = icmp ult i64 %164, 3
  br label %166

166:                                              ; preds = %163, %158, %153, %149
  %167 = phi i1 [ false, %158 ], [ false, %153 ], [ false, %149 ], [ %165, %163 ]
  br i1 %167, label %168, label %175

168:                                              ; preds = %166
  %169 = load i8*, i8** %3, align 8
  %170 = getelementptr inbounds i8, i8* %169, i32 1
  store i8* %170, i8** %3, align 8
  %171 = load i8, i8* %169, align 1
  %172 = load i64, i64* %7, align 8
  %173 = add i64 %172, 1
  store i64 %173, i64* %7, align 8
  %174 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %172
  store i8 %171, i8* %174, align 1
  br label %149

175:                                              ; preds = %166
  %176 = load i64, i64* %7, align 8
  %177 = icmp ne i64 %176, 0
  br i1 %177, label %178, label %191

178:                                              ; preds = %175
  %179 = load i64, i64* %7, align 8
  %180 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %179
  store i8 0, i8* %180, align 1
  %181 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i32 0, i32 0
  %182 = call i64 @strtol(i8* %181, i8** null, i32 8) #13
  %183 = trunc i64 %182 to i8
  %184 = load i8*, i8** %4, align 8
  %185 = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %185, i8** %4, align 8
  store i8 %183, i8* %184, align 1
  %186 = load i64, i64* %7, align 8
  %187 = load i64, i64* %6, align 8
  %188 = sub i64 %187, %186
  store i64 %188, i64* %6, align 8
  %189 = load i8*, i8** %3, align 8
  %190 = getelementptr inbounds i8, i8* %189, i32 -1
  store i8* %190, i8** %3, align 8
  br label %198

191:                                              ; preds = %175
  %192 = load i8*, i8** %3, align 8
  %193 = load i8, i8* %192, align 1
  %194 = load i8*, i8** %4, align 8
  %195 = getelementptr inbounds i8, i8* %194, i32 1
  store i8* %195, i8** %4, align 8
  store i8 %193, i8* %194, align 1
  %196 = load i64, i64* %6, align 8
  %197 = add i64 %196, -1
  store i64 %197, i64* %6, align 8
  br label %198

198:                                              ; preds = %191, %178
  br label %199

199:                                              ; preds = %198, %141, %84, %79, %74, %69, %64, %59, %54, %49
  br label %205

200:                                              ; preds = %38, %33
  %201 = load i8*, i8** %3, align 8
  %202 = load i8, i8* %201, align 1
  %203 = load i8*, i8** %4, align 8
  %204 = getelementptr inbounds i8, i8* %203, i32 1
  store i8* %204, i8** %4, align 8
  store i8 %202, i8* %203, align 1
  br label %205

205:                                              ; preds = %200, %199
  br label %206

206:                                              ; preds = %205
  %207 = load i8*, i8** %3, align 8
  %208 = getelementptr inbounds i8, i8* %207, i32 1
  store i8* %208, i8** %3, align 8
  br label %29

209:                                              ; preds = %29
  %210 = load i64, i64* %6, align 8
  %211 = icmp ne i64 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %209
  %213 = load i8*, i8** %4, align 8
  store i8 0, i8* %213, align 1
  br label %214

214:                                              ; preds = %212, %209
  %215 = load i64, i64* %6, align 8
  %216 = load %0*, %0** %2, align 8
  %217 = getelementptr inbounds %0, %0* %216, i32 0, i32 2
  store i64 %215, i64* %217, align 8
  %218 = bitcast [4 x i8]* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %218) #13
  %219 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %219) #13
  %220 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %220) #13
  %221 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #13
  %222 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #13
  %223 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_stripslashes(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %18*, align 8
  %12 = alloca %18*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %21 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13
  store i32 0, i32* %6, align 4
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  store i32 1, i32* %7, align 4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 1, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  %27 = load %14*, %14** %3, align 8
  %28 = getelementptr inbounds %14, %14* %27, i32 0, i32 4
  %29 = getelementptr inbounds %18, %18* %28, i32 0, i32 2
  %30 = bitcast %21* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %9, align 4
  %32 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  store %18* null, %18** %12, align 8
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 0, i32* %13, align 4
  %36 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %37 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %17, align 4
  %38 = load i32, i32* %10, align 4
  %39 = load %18*, %18** %11, align 8
  %40 = load %18*, %18** %12, align 8
  %41 = load i32, i32* %13, align 4
  %42 = load i8*, i8** %14, align 8
  %43 = load i8, i8* %15, align 1
  %44 = load i8, i8* %16, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %9, align 4
  %47 = load i32, i32* %7, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %9, align 4
  %57 = load i32, i32* %8, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %8, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %9, align 4
  %76 = load i32, i32* %7, align 4
  %77 = load i32, i32* %8, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %17, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %10, align 4
  %79 = load %14*, %14** %3, align 8
  %80 = bitcast %14* %79 to %18*
  %81 = getelementptr inbounds %18, %18* %80, i64 4
  store %18* %81, %18** %11, align 8
  %82 = load i32, i32* %10, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %10, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %10, align 4
  %86 = load i32, i32* %7, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %16, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %10, align 4
  %105 = load i32, i32* %7, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %16, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %16, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %10, align 4
  %126 = load i32, i32* %9, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %18*, %18** %11, align 8
  %138 = getelementptr inbounds %18, %18* %137, i32 1
  store %18* %138, %18** %11, align 8
  %139 = load %18*, %18** %11, align 8
  store %18* %139, %18** %12, align 8
  %140 = load %18*, %18** %12, align 8
  %141 = call i32 @143(%18* %140, %0** %5, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 2, i32* %13, align 4
  store i32 4, i32* %17, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %17, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %185

162:                                              ; preds = %153
  %163 = load i32, i32* %17, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %10, align 4
  %167 = load i8*, i8** %14, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %17, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %10, align 4
  %173 = load i8*, i8** %14, align 8
  %174 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %18* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %17, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %10, align 4
  %180 = load i32, i32* %13, align 4
  %181 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %18* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  store i32 1, i32* %18, align 4
  br label %186

185:                                              ; preds = %153
  store i32 0, i32* %18, align 4
  br label %186

186:                                              ; preds = %185, %184
  %187 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %187) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %188 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #13
  %189 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  %190 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #13
  %192 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %192) #13
  %193 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #13
  %194 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = load i32, i32* %18, align 4
  switch i32 %197, label %230 [
    i32 0, label %198
  ]

198:                                              ; preds = %186
  br label %199

199:                                              ; preds = %198
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %203) #13
  %204 = load %18*, %18** %4, align 8
  store %18* %204, %18** %19, align 8
  %205 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %205) #13
  %206 = load %0*, %0** %5, align 8
  %207 = getelementptr inbounds %0, %0* %206, i32 0, i32 3
  %208 = getelementptr inbounds [1 x i8], [1 x i8]* %207, i32 0, i32 0
  %209 = load %0*, %0** %5, align 8
  %210 = getelementptr inbounds %0, %0* %209, i32 0, i32 2
  %211 = load i64, i64* %210, align 8
  %212 = call %0* @148(i8* %208, i64 %211, i32 0)
  store %0* %212, %0** %20, align 8
  %213 = load %0*, %0** %20, align 8
  %214 = load %18*, %18** %19, align 8
  %215 = getelementptr inbounds %18, %18* %214, i32 0, i32 0
  %216 = bitcast %19* %215 to %0**
  store %0* %213, %0** %216, align 8
  %217 = load %18*, %18** %19, align 8
  %218 = getelementptr inbounds %18, %18* %217, i32 0, i32 1
  %219 = bitcast %20* %218 to i32*
  store i32 5126, i32* %219, align 8
  %220 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %220) #13
  %221 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #13
  br label %222

222:                                              ; preds = %202
  br label %223

223:                                              ; preds = %222
  br label %224

224:                                              ; preds = %223
  br label %225

225:                                              ; preds = %224
  %226 = load %18*, %18** %4, align 8
  %227 = getelementptr inbounds %18, %18* %226, i32 0, i32 0
  %228 = bitcast %19* %227 to %0**
  %229 = load %0*, %0** %228, align 8
  call void @php_stripslashes(%0* %229)
  store i32 0, i32* %18, align 4
  br label %230

230:                                              ; preds = %225, %186
  %231 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #13
  %232 = load i32, i32* %18, align 4
  switch i32 %232, label %234 [
    i32 0, label %233
    i32 1, label %233
  ]

233:                                              ; preds = %230, %230
  ret void

234:                                              ; preds = %230
  unreachable
}

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #2

declare dso_local i32 @php_sprintf(i8*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_str_replace(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @181(%14* %5, %18* %6, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @181(%14* %0, %18* %1, i32 %2) #0 {
  %4 = alloca %14*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %18*, align 8
  %8 = alloca %18*, align 8
  %9 = alloca %18*, align 8
  %10 = alloca %18*, align 8
  %11 = alloca %18*, align 8
  %12 = alloca %18, align 8
  %13 = alloca %0*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %18*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %43*, align 8
  %31 = alloca %45*, align 8
  %32 = alloca %45*, align 8
  %33 = alloca %18*, align 8
  %34 = alloca %18*, align 8
  %35 = alloca %18*, align 8
  %36 = alloca %54*, align 8
  %37 = alloca i32, align 4
  %38 = alloca %18*, align 8
  store %14* %0, %14** %4, align 8
  store %18* %1, %18** %5, align 8
  store i32 %2, i32* %6, align 4
  %39 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast %18** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = bitcast %18** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast %18** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  store %18* null, %18** %11, align 8
  %44 = bitcast %18* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %44) #13
  %45 = bitcast %0** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  %46 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  %47 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store i64 0, i64* %15, align 8
  %48 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  %49 = load %14*, %14** %4, align 8
  %50 = getelementptr inbounds %14, %14* %49, i32 0, i32 4
  %51 = getelementptr inbounds %18, %18* %50, i32 0, i32 2
  %52 = bitcast %21* %51 to i32*
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %16, align 4
  br label %54

54:                                               ; preds = %3
  %55 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #13
  store i32 0, i32* %17, align 4
  %56 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %56) #13
  store i32 3, i32* %18, align 4
  %57 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #13
  store i32 4, i32* %19, align 4
  %58 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #13
  %59 = load %14*, %14** %4, align 8
  %60 = getelementptr inbounds %14, %14* %59, i32 0, i32 4
  %61 = getelementptr inbounds %18, %18* %60, i32 0, i32 2
  %62 = bitcast %21* %61 to i32*
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %20, align 4
  %64 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %64) #13
  %65 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %65) #13
  %66 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %66) #13
  store %18* null, %18** %23, align 8
  %67 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %67) #13
  store i32 0, i32* %24, align 4
  %68 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %68) #13
  store i8* null, i8** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %26) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %27) #13
  store i8 0, i8* %27, align 1
  %69 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %69) #13
  store i32 0, i32* %28, align 4
  %70 = load i32, i32* %21, align 4
  %71 = load %18*, %18** %22, align 8
  %72 = load %18*, %18** %23, align 8
  %73 = load i32, i32* %24, align 4
  %74 = load i8*, i8** %25, align 8
  %75 = load i8, i8* %26, align 1
  %76 = load i8, i8* %27, align 1
  br label %77

77:                                               ; preds = %54
  %78 = load i32, i32* %20, align 4
  %79 = load i32, i32* %18, align 4
  %80 = icmp slt i32 %78, %79
  %81 = xor i1 %80, true
  %82 = xor i1 %81, true
  %83 = zext i1 %82 to i32
  %84 = sext i32 %83 to i64
  %85 = call i64 @llvm.expect.i64(i64 %84, i64 0)
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %106, label %87

87:                                               ; preds = %77
  %88 = load i32, i32* %20, align 4
  %89 = load i32, i32* %19, align 4
  %90 = icmp sgt i32 %88, %89
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  %93 = zext i1 %92 to i32
  %94 = sext i32 %93 to i64
  %95 = call i64 @llvm.expect.i64(i64 %94, i64 0)
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %97, label %110

97:                                               ; preds = %87
  %98 = load i32, i32* %19, align 4
  %99 = icmp sge i32 %98, 0
  %100 = xor i1 %99, true
  %101 = xor i1 %100, true
  %102 = zext i1 %101 to i32
  %103 = sext i32 %102 to i64
  %104 = call i64 @llvm.expect.i64(i64 %103, i64 1)
  %105 = icmp ne i64 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %97, %77
  %107 = load i32, i32* %20, align 4
  %108 = load i32, i32* %18, align 4
  %109 = load i32, i32* %19, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %107, i32 %108, i32 %109)
  store i32 1, i32* %28, align 4
  br label %371

110:                                              ; preds = %97, %87
  store i32 0, i32* %21, align 4
  %111 = load %14*, %14** %4, align 8
  %112 = bitcast %14* %111 to %18*
  %113 = getelementptr inbounds %18, %18* %112, i64 4
  store %18* %113, %18** %22, align 8
  %114 = load i32, i32* %21, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %21, align 4
  br label %116

116:                                              ; preds = %110
  %117 = load i32, i32* %21, align 4
  %118 = load i32, i32* %18, align 4
  %119 = icmp sle i32 %117, %118
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = load i8, i8* %27, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp eq i32 %122, 1
  br label %124

124:                                              ; preds = %120, %116
  %125 = phi i1 [ true, %116 ], [ %123, %120 ]
  %126 = xor i1 %125, true
  %127 = zext i1 %126 to i32
  %128 = sext i32 %127 to i64
  %129 = call i64 @llvm.expect.i64(i64 %128, i64 0)
  %130 = icmp ne i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %124
  unreachable

132:                                              ; preds = %124
  br label %133

133:                                              ; preds = %132
  br label %134

134:                                              ; preds = %133
  br label %135

135:                                              ; preds = %134
  %136 = load i32, i32* %21, align 4
  %137 = load i32, i32* %18, align 4
  %138 = icmp sgt i32 %136, %137
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = load i8, i8* %27, align 1
  %141 = zext i8 %140 to i32
  %142 = icmp eq i32 %141, 0
  br label %143

143:                                              ; preds = %139, %135
  %144 = phi i1 [ true, %135 ], [ %142, %139 ]
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %143
  unreachable

151:                                              ; preds = %143
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152
  %154 = load i8, i8* %27, align 1
  %155 = icmp ne i8 %154, 0
  br i1 %155, label %156, label %168

156:                                              ; preds = %153
  %157 = load i32, i32* %21, align 4
  %158 = load i32, i32* %20, align 4
  %159 = icmp sgt i32 %157, %158
  %160 = xor i1 %159, true
  %161 = xor i1 %160, true
  %162 = zext i1 %161 to i32
  %163 = sext i32 %162 to i64
  %164 = call i64 @llvm.expect.i64(i64 %163, i64 0)
  %165 = icmp ne i64 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %156
  br label %371

167:                                              ; preds = %156
  br label %168

168:                                              ; preds = %167, %153
  %169 = load %18*, %18** %22, align 8
  %170 = getelementptr inbounds %18, %18* %169, i32 1
  store %18* %170, %18** %22, align 8
  %171 = load %18*, %18** %22, align 8
  store %18* %171, %18** %23, align 8
  %172 = load %18*, %18** %23, align 8
  call void @161(%18* %172, %18** %8, i32 0)
  %173 = load i32, i32* %21, align 4
  %174 = add nsw i32 %173, 1
  store i32 %174, i32* %21, align 4
  br label %175

175:                                              ; preds = %168
  %176 = load i32, i32* %21, align 4
  %177 = load i32, i32* %18, align 4
  %178 = icmp sle i32 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = load i8, i8* %27, align 1
  %181 = zext i8 %180 to i32
  %182 = icmp eq i32 %181, 1
  br label %183

183:                                              ; preds = %179, %175
  %184 = phi i1 [ true, %175 ], [ %182, %179 ]
  %185 = xor i1 %184, true
  %186 = zext i1 %185 to i32
  %187 = sext i32 %186 to i64
  %188 = call i64 @llvm.expect.i64(i64 %187, i64 0)
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %183
  unreachable

191:                                              ; preds = %183
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  br label %194

194:                                              ; preds = %193
  %195 = load i32, i32* %21, align 4
  %196 = load i32, i32* %18, align 4
  %197 = icmp sgt i32 %195, %196
  br i1 %197, label %202, label %198

198:                                              ; preds = %194
  %199 = load i8, i8* %27, align 1
  %200 = zext i8 %199 to i32
  %201 = icmp eq i32 %200, 0
  br label %202

202:                                              ; preds = %198, %194
  %203 = phi i1 [ true, %194 ], [ %201, %198 ]
  %204 = xor i1 %203, true
  %205 = zext i1 %204 to i32
  %206 = sext i32 %205 to i64
  %207 = call i64 @llvm.expect.i64(i64 %206, i64 0)
  %208 = icmp ne i64 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %202
  unreachable

210:                                              ; preds = %202
  br label %211

211:                                              ; preds = %210
  br label %212

212:                                              ; preds = %211
  %213 = load i8, i8* %27, align 1
  %214 = icmp ne i8 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %212
  %216 = load i32, i32* %21, align 4
  %217 = load i32, i32* %20, align 4
  %218 = icmp sgt i32 %216, %217
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = zext i1 %220 to i32
  %222 = sext i32 %221 to i64
  %223 = call i64 @llvm.expect.i64(i64 %222, i64 0)
  %224 = icmp ne i64 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %215
  br label %371

226:                                              ; preds = %215
  br label %227

227:                                              ; preds = %226, %212
  %228 = load %18*, %18** %22, align 8
  %229 = getelementptr inbounds %18, %18* %228, i32 1
  store %18* %229, %18** %22, align 8
  %230 = load %18*, %18** %22, align 8
  store %18* %230, %18** %23, align 8
  %231 = load %18*, %18** %23, align 8
  call void @161(%18* %231, %18** %9, i32 0)
  %232 = load i32, i32* %21, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %21, align 4
  br label %234

234:                                              ; preds = %227
  %235 = load i32, i32* %21, align 4
  %236 = load i32, i32* %18, align 4
  %237 = icmp sle i32 %235, %236
  br i1 %237, label %242, label %238

238:                                              ; preds = %234
  %239 = load i8, i8* %27, align 1
  %240 = zext i8 %239 to i32
  %241 = icmp eq i32 %240, 1
  br label %242

242:                                              ; preds = %238, %234
  %243 = phi i1 [ true, %234 ], [ %241, %238 ]
  %244 = xor i1 %243, true
  %245 = zext i1 %244 to i32
  %246 = sext i32 %245 to i64
  %247 = call i64 @llvm.expect.i64(i64 %246, i64 0)
  %248 = icmp ne i64 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %242
  unreachable

250:                                              ; preds = %242
  br label %251

251:                                              ; preds = %250
  br label %252

252:                                              ; preds = %251
  br label %253

253:                                              ; preds = %252
  %254 = load i32, i32* %21, align 4
  %255 = load i32, i32* %18, align 4
  %256 = icmp sgt i32 %254, %255
  br i1 %256, label %261, label %257

257:                                              ; preds = %253
  %258 = load i8, i8* %27, align 1
  %259 = zext i8 %258 to i32
  %260 = icmp eq i32 %259, 0
  br label %261

261:                                              ; preds = %257, %253
  %262 = phi i1 [ true, %253 ], [ %260, %257 ]
  %263 = xor i1 %262, true
  %264 = zext i1 %263 to i32
  %265 = sext i32 %264 to i64
  %266 = call i64 @llvm.expect.i64(i64 %265, i64 0)
  %267 = icmp ne i64 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %261
  unreachable

269:                                              ; preds = %261
  br label %270

270:                                              ; preds = %269
  br label %271

271:                                              ; preds = %270
  %272 = load i8, i8* %27, align 1
  %273 = icmp ne i8 %272, 0
  br i1 %273, label %274, label %286

274:                                              ; preds = %271
  %275 = load i32, i32* %21, align 4
  %276 = load i32, i32* %20, align 4
  %277 = icmp sgt i32 %275, %276
  %278 = xor i1 %277, true
  %279 = xor i1 %278, true
  %280 = zext i1 %279 to i32
  %281 = sext i32 %280 to i64
  %282 = call i64 @llvm.expect.i64(i64 %281, i64 0)
  %283 = icmp ne i64 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %274
  br label %371

285:                                              ; preds = %274
  br label %286

286:                                              ; preds = %285, %271
  %287 = load %18*, %18** %22, align 8
  %288 = getelementptr inbounds %18, %18* %287, i32 1
  store %18* %288, %18** %22, align 8
  %289 = load %18*, %18** %22, align 8
  store %18* %289, %18** %23, align 8
  %290 = load %18*, %18** %23, align 8
  call void @161(%18* %290, %18** %7, i32 0)
  store i8 1, i8* %27, align 1
  %291 = load i32, i32* %21, align 4
  %292 = add nsw i32 %291, 1
  store i32 %292, i32* %21, align 4
  br label %293

293:                                              ; preds = %286
  %294 = load i32, i32* %21, align 4
  %295 = load i32, i32* %18, align 4
  %296 = icmp sle i32 %294, %295
  br i1 %296, label %301, label %297

297:                                              ; preds = %293
  %298 = load i8, i8* %27, align 1
  %299 = zext i8 %298 to i32
  %300 = icmp eq i32 %299, 1
  br label %301

301:                                              ; preds = %297, %293
  %302 = phi i1 [ true, %293 ], [ %300, %297 ]
  %303 = xor i1 %302, true
  %304 = zext i1 %303 to i32
  %305 = sext i32 %304 to i64
  %306 = call i64 @llvm.expect.i64(i64 %305, i64 0)
  %307 = icmp ne i64 %306, 0
  br i1 %307, label %308, label %309

308:                                              ; preds = %301
  unreachable

309:                                              ; preds = %301
  br label %310

310:                                              ; preds = %309
  br label %311

311:                                              ; preds = %310
  br label %312

312:                                              ; preds = %311
  %313 = load i32, i32* %21, align 4
  %314 = load i32, i32* %18, align 4
  %315 = icmp sgt i32 %313, %314
  br i1 %315, label %320, label %316

316:                                              ; preds = %312
  %317 = load i8, i8* %27, align 1
  %318 = zext i8 %317 to i32
  %319 = icmp eq i32 %318, 0
  br label %320

320:                                              ; preds = %316, %312
  %321 = phi i1 [ true, %312 ], [ %319, %316 ]
  %322 = xor i1 %321, true
  %323 = zext i1 %322 to i32
  %324 = sext i32 %323 to i64
  %325 = call i64 @llvm.expect.i64(i64 %324, i64 0)
  %326 = icmp ne i64 %325, 0
  br i1 %326, label %327, label %328

327:                                              ; preds = %320
  unreachable

328:                                              ; preds = %320
  br label %329

329:                                              ; preds = %328
  br label %330

330:                                              ; preds = %329
  %331 = load i8, i8* %27, align 1
  %332 = icmp ne i8 %331, 0
  br i1 %332, label %333, label %345

333:                                              ; preds = %330
  %334 = load i32, i32* %21, align 4
  %335 = load i32, i32* %20, align 4
  %336 = icmp sgt i32 %334, %335
  %337 = xor i1 %336, true
  %338 = xor i1 %337, true
  %339 = zext i1 %338 to i32
  %340 = sext i32 %339 to i64
  %341 = call i64 @llvm.expect.i64(i64 %340, i64 0)
  %342 = icmp ne i64 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %333
  br label %371

344:                                              ; preds = %333
  br label %345

345:                                              ; preds = %344, %330
  %346 = load %18*, %18** %22, align 8
  %347 = getelementptr inbounds %18, %18* %346, i32 1
  store %18* %347, %18** %22, align 8
  %348 = load %18*, %18** %22, align 8
  store %18* %348, %18** %23, align 8
  br label %349

349:                                              ; preds = %345
  %350 = load %18*, %18** %23, align 8
  %351 = call zeroext i8 @157(%18* %350)
  %352 = zext i8 %351 to i32
  %353 = icmp eq i32 %352, 10
  %354 = xor i1 %353, true
  %355 = xor i1 %354, true
  %356 = zext i1 %355 to i32
  %357 = sext i32 %356 to i64
  %358 = call i64 @llvm.expect.i64(i64 %357, i64 0)
  %359 = icmp ne i64 %358, 0
  br i1 %359, label %360, label %366

360:                                              ; preds = %349
  %361 = load %18*, %18** %23, align 8
  %362 = getelementptr inbounds %18, %18* %361, i32 0, i32 0
  %363 = bitcast %19* %362 to %55**
  %364 = load %55*, %55** %363, align 8
  %365 = getelementptr inbounds %55, %55* %364, i32 0, i32 1
  store %18* %365, %18** %23, align 8
  br label %366

366:                                              ; preds = %360, %349
  br label %367

367:                                              ; preds = %366
  br label %368

368:                                              ; preds = %367
  %369 = load %18*, %18** %23, align 8
  call void @161(%18* %369, %18** %11, i32 0)
  br label %370

370:                                              ; preds = %368
  br label %371

371:                                              ; preds = %370, %343, %284, %225, %166, %106
  %372 = load i32, i32* %28, align 4
  %373 = icmp ne i32 %372, 0
  %374 = xor i1 %373, true
  %375 = xor i1 %374, true
  %376 = zext i1 %375 to i32
  %377 = sext i32 %376 to i64
  %378 = call i64 @llvm.expect.i64(i64 %377, i64 0)
  %379 = icmp ne i64 %378, 0
  br i1 %379, label %380, label %403

380:                                              ; preds = %371
  %381 = load i32, i32* %28, align 4
  %382 = icmp eq i32 %381, 2
  br i1 %382, label %383, label %386

383:                                              ; preds = %380
  %384 = load i32, i32* %21, align 4
  %385 = load i8*, i8** %25, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %384, i8* %385)
  br label %402

386:                                              ; preds = %380
  %387 = load i32, i32* %28, align 4
  %388 = icmp eq i32 %387, 3
  br i1 %388, label %389, label %393

389:                                              ; preds = %386
  %390 = load i32, i32* %21, align 4
  %391 = load i8*, i8** %25, align 8
  %392 = load %18*, %18** %23, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %390, i8* %391, %18* %392)
  br label %401

393:                                              ; preds = %386
  %394 = load i32, i32* %28, align 4
  %395 = icmp eq i32 %394, 4
  br i1 %395, label %396, label %400

396:                                              ; preds = %393
  %397 = load i32, i32* %21, align 4
  %398 = load i32, i32* %24, align 4
  %399 = load %18*, %18** %23, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %397, i32 %398, %18* %399)
  br label %400

400:                                              ; preds = %396, %393
  br label %401

401:                                              ; preds = %400, %389
  br label %402

402:                                              ; preds = %401, %383
  store i32 1, i32* %29, align 4
  br label %404

403:                                              ; preds = %371
  store i32 0, i32* %29, align 4
  br label %404

404:                                              ; preds = %403, %402
  %405 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %405) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %27) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %26) #13
  %406 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %406) #13
  %407 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %407) #13
  %408 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %408) #13
  %409 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %409) #13
  %410 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %410) #13
  %411 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %411) #13
  %412 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %412) #13
  %413 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %413) #13
  %414 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %414) #13
  %415 = load i32, i32* %29, align 4
  switch i32 %415, label %661 [
    i32 0, label %416
  ]

416:                                              ; preds = %404
  br label %417

417:                                              ; preds = %416
  br label %418

418:                                              ; preds = %417
  %419 = load %18*, %18** %8, align 8
  %420 = call zeroext i8 @157(%18* %419)
  %421 = zext i8 %420 to i32
  %422 = icmp ne i32 %421, 7
  br i1 %422, label %423, label %456

423:                                              ; preds = %418
  %424 = load %18*, %18** %8, align 8
  %425 = call zeroext i8 @157(%18* %424)
  %426 = zext i8 %425 to i32
  %427 = icmp ne i32 %426, 6
  br i1 %427, label %428, label %436

428:                                              ; preds = %423
  %429 = load %18*, %18** %8, align 8
  %430 = call zeroext i8 @157(%18* %429)
  %431 = zext i8 %430 to i32
  %432 = icmp ne i32 %431, 6
  br i1 %432, label %433, label %435

433:                                              ; preds = %428
  %434 = load %18*, %18** %8, align 8
  call void @_convert_to_string(%18* %434)
  br label %435

435:                                              ; preds = %433, %428
  br label %436

436:                                              ; preds = %435, %423
  %437 = load %18*, %18** %9, align 8
  %438 = call zeroext i8 @157(%18* %437)
  %439 = zext i8 %438 to i32
  %440 = icmp ne i32 %439, 6
  br i1 %440, label %441, label %455

441:                                              ; preds = %436
  %442 = load %18*, %18** %9, align 8
  %443 = call zeroext i8 @157(%18* %442)
  %444 = zext i8 %443 to i32
  %445 = icmp ne i32 %444, 6
  br i1 %445, label %446, label %454

446:                                              ; preds = %441
  %447 = load %18*, %18** %9, align 8
  %448 = call zeroext i8 @157(%18* %447)
  %449 = zext i8 %448 to i32
  %450 = icmp ne i32 %449, 6
  br i1 %450, label %451, label %453

451:                                              ; preds = %446
  %452 = load %18*, %18** %9, align 8
  call void @_convert_to_string(%18* %452)
  br label %453

453:                                              ; preds = %451, %446
  br label %454

454:                                              ; preds = %453, %441
  br label %455

455:                                              ; preds = %454, %436
  br label %476

456:                                              ; preds = %418
  %457 = load %18*, %18** %9, align 8
  %458 = call zeroext i8 @157(%18* %457)
  %459 = zext i8 %458 to i32
  %460 = icmp ne i32 %459, 7
  br i1 %460, label %461, label %475

461:                                              ; preds = %456
  %462 = load %18*, %18** %9, align 8
  %463 = call zeroext i8 @157(%18* %462)
  %464 = zext i8 %463 to i32
  %465 = icmp ne i32 %464, 6
  br i1 %465, label %466, label %474

466:                                              ; preds = %461
  %467 = load %18*, %18** %9, align 8
  %468 = call zeroext i8 @157(%18* %467)
  %469 = zext i8 %468 to i32
  %470 = icmp ne i32 %469, 6
  br i1 %470, label %471, label %473

471:                                              ; preds = %466
  %472 = load %18*, %18** %9, align 8
  call void @_convert_to_string(%18* %472)
  br label %473

473:                                              ; preds = %471, %466
  br label %474

474:                                              ; preds = %473, %461
  br label %475

475:                                              ; preds = %474, %456
  br label %476

476:                                              ; preds = %475, %455
  %477 = load %18*, %18** %7, align 8
  %478 = call zeroext i8 @157(%18* %477)
  %479 = zext i8 %478 to i32
  %480 = icmp eq i32 %479, 7
  br i1 %480, label %481, label %638

481:                                              ; preds = %476
  %482 = load %18*, %18** %5, align 8
  %483 = call i32 @_array_init(%18* %482, i32 0)
  br label %484

484:                                              ; preds = %481
  %485 = bitcast %43** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %485) #13
  %486 = load %18*, %18** %7, align 8
  %487 = getelementptr inbounds %18, %18* %486, i32 0, i32 0
  %488 = bitcast %19* %487 to %43**
  %489 = load %43*, %43** %488, align 8
  store %43* %489, %43** %30, align 8
  %490 = bitcast %45** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %490) #13
  %491 = load %43*, %43** %30, align 8
  %492 = getelementptr inbounds %43, %43* %491, i32 0, i32 3
  %493 = load %45*, %45** %492, align 8
  store %45* %493, %45** %31, align 8
  %494 = bitcast %45** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %494) #13
  %495 = load %45*, %45** %31, align 8
  %496 = load %43*, %43** %30, align 8
  %497 = getelementptr inbounds %43, %43* %496, i32 0, i32 4
  %498 = load i32, i32* %497, align 8
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds %45, %45* %495, i64 %499
  store %45* %500, %45** %32, align 8
  br label %501

501:                                              ; preds = %629, %484
  %502 = load %45*, %45** %31, align 8
  %503 = load %45*, %45** %32, align 8
  %504 = icmp ne %45* %502, %503
  br i1 %504, label %505, label %632

505:                                              ; preds = %501
  %506 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %506) #13
  %507 = load %45*, %45** %31, align 8
  %508 = getelementptr inbounds %45, %45* %507, i32 0, i32 0
  store %18* %508, %18** %33, align 8
  %509 = load %18*, %18** %33, align 8
  %510 = call zeroext i8 @157(%18* %509)
  %511 = zext i8 %510 to i32
  %512 = icmp eq i32 %511, 0
  %513 = xor i1 %512, true
  %514 = xor i1 %513, true
  %515 = zext i1 %514 to i32
  %516 = sext i32 %515 to i64
  %517 = call i64 @llvm.expect.i64(i64 %516, i64 0)
  %518 = icmp ne i64 %517, 0
  br i1 %518, label %519, label %520

519:                                              ; preds = %505
  store i32 28, i32* %29, align 4
  br label %625

520:                                              ; preds = %505
  %521 = load %45*, %45** %31, align 8
  %522 = getelementptr inbounds %45, %45* %521, i32 0, i32 1
  %523 = load i64, i64* %522, align 8
  store i64 %523, i64* %14, align 8
  %524 = load %45*, %45** %31, align 8
  %525 = getelementptr inbounds %45, %45* %524, i32 0, i32 2
  %526 = load %0*, %0** %525, align 8
  store %0* %526, %0** %13, align 8
  %527 = load %18*, %18** %33, align 8
  store %18* %527, %18** %10, align 8
  br label %528

528:                                              ; preds = %520
  %529 = load %18*, %18** %10, align 8
  %530 = call zeroext i8 @157(%18* %529)
  %531 = zext i8 %530 to i32
  %532 = icmp eq i32 %531, 10
  %533 = xor i1 %532, true
  %534 = xor i1 %533, true
  %535 = zext i1 %534 to i32
  %536 = sext i32 %535 to i64
  %537 = call i64 @llvm.expect.i64(i64 %536, i64 0)
  %538 = icmp ne i64 %537, 0
  br i1 %538, label %539, label %545

539:                                              ; preds = %528
  %540 = load %18*, %18** %10, align 8
  %541 = getelementptr inbounds %18, %18* %540, i32 0, i32 0
  %542 = bitcast %19* %541 to %55**
  %543 = load %55*, %55** %542, align 8
  %544 = getelementptr inbounds %55, %55* %543, i32 0, i32 1
  store %18* %544, %18** %10, align 8
  br label %545

545:                                              ; preds = %539, %528
  br label %546

546:                                              ; preds = %545
  br label %547

547:                                              ; preds = %546
  %548 = load %18*, %18** %10, align 8
  %549 = call zeroext i8 @157(%18* %548)
  %550 = zext i8 %549 to i32
  %551 = icmp ne i32 %550, 7
  br i1 %551, label %552, label %565

552:                                              ; preds = %547
  %553 = load %18*, %18** %10, align 8
  %554 = call zeroext i8 @157(%18* %553)
  %555 = zext i8 %554 to i32
  %556 = icmp ne i32 %555, 8
  br i1 %556, label %557, label %565

557:                                              ; preds = %552
  %558 = load %18*, %18** %8, align 8
  %559 = load %18*, %18** %9, align 8
  %560 = load %18*, %18** %10, align 8
  %561 = load i32, i32* %6, align 4
  %562 = call i64 @197(%18* %558, %18* %559, %18* %560, %18* %12, i32 %561)
  %563 = load i64, i64* %15, align 8
  %564 = add nsw i64 %563, %562
  store i64 %564, i64* %15, align 8
  br label %607

565:                                              ; preds = %552, %547
  br label %566

566:                                              ; preds = %565
  %567 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %567) #13
  store %18* %12, %18** %34, align 8
  %568 = bitcast %18** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %568) #13
  %569 = load %18*, %18** %10, align 8
  store %18* %569, %18** %35, align 8
  %570 = bitcast %54** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %570) #13
  %571 = load %18*, %18** %35, align 8
  %572 = getelementptr inbounds %18, %18* %571, i32 0, i32 0
  %573 = bitcast %19* %572 to %54**
  %574 = load %54*, %54** %573, align 8
  store %54* %574, %54** %36, align 8
  %575 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %575) #13
  %576 = load %18*, %18** %35, align 8
  %577 = getelementptr inbounds %18, %18* %576, i32 0, i32 1
  %578 = bitcast %20* %577 to i32*
  %579 = load i32, i32* %578, align 8
  store i32 %579, i32* %37, align 4
  br label %580

580:                                              ; preds = %566
  %581 = load %54*, %54** %36, align 8
  %582 = load %18*, %18** %34, align 8
  %583 = getelementptr inbounds %18, %18* %582, i32 0, i32 0
  %584 = bitcast %19* %583 to %54**
  store %54* %581, %54** %584, align 8
  %585 = load i32, i32* %37, align 4
  %586 = load %18*, %18** %34, align 8
  %587 = getelementptr inbounds %18, %18* %586, i32 0, i32 1
  %588 = bitcast %20* %587 to i32*
  store i32 %585, i32* %588, align 8
  br label %589

589:                                              ; preds = %580
  br label %590

590:                                              ; preds = %589
  %591 = load i32, i32* %37, align 4
  %592 = and i32 %591, 1024
  %593 = icmp ne i32 %592, 0
  br i1 %593, label %594, label %600

594:                                              ; preds = %590
  %595 = load %54*, %54** %36, align 8
  %596 = getelementptr inbounds %54, %54* %595, i32 0, i32 0
  %597 = getelementptr inbounds %1, %1* %596, i32 0, i32 0
  %598 = load i32, i32* %597, align 4
  %599 = add i32 %598, 1
  store i32 %599, i32* %597, align 4
  br label %600

600:                                              ; preds = %594, %590
  %601 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %601) #13
  %602 = bitcast %54** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %602) #13
  %603 = bitcast %18** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %603) #13
  %604 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %604) #13
  br label %605

605:                                              ; preds = %600
  br label %606

606:                                              ; preds = %605
  br label %607

607:                                              ; preds = %606, %557
  %608 = load %0*, %0** %13, align 8
  %609 = icmp ne %0* %608, null
  br i1 %609, label %610, label %617

610:                                              ; preds = %607
  %611 = load %18*, %18** %5, align 8
  %612 = getelementptr inbounds %18, %18* %611, i32 0, i32 0
  %613 = bitcast %19* %612 to %43**
  %614 = load %43*, %43** %613, align 8
  %615 = load %0*, %0** %13, align 8
  %616 = call %18* @_zend_hash_add_new(%43* %614, %0* %615, %18* %12)
  br label %624

617:                                              ; preds = %607
  %618 = load %18*, %18** %5, align 8
  %619 = getelementptr inbounds %18, %18* %618, i32 0, i32 0
  %620 = bitcast %19* %619 to %43**
  %621 = load %43*, %43** %620, align 8
  %622 = load i64, i64* %14, align 8
  %623 = call %18* @_zend_hash_index_add_new(%43* %621, i64 %622, %18* %12)
  br label %624

624:                                              ; preds = %617, %610
  store i32 0, i32* %29, align 4
  br label %625

625:                                              ; preds = %624, %519
  %626 = bitcast %18** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %626) #13
  %627 = load i32, i32* %29, align 4
  switch i32 %627, label %674 [
    i32 0, label %628
    i32 28, label %629
  ]

628:                                              ; preds = %625
  br label %629

629:                                              ; preds = %628, %625
  %630 = load %45*, %45** %31, align 8
  %631 = getelementptr inbounds %45, %45* %630, i32 1
  store %45* %631, %45** %31, align 8
  br label %501

632:                                              ; preds = %501
  %633 = bitcast %45** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %633) #13
  %634 = bitcast %45** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %634) #13
  %635 = bitcast %43** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %635) #13
  br label %636

636:                                              ; preds = %632
  br label %637

637:                                              ; preds = %636
  br label %645

638:                                              ; preds = %476
  %639 = load %18*, %18** %8, align 8
  %640 = load %18*, %18** %9, align 8
  %641 = load %18*, %18** %7, align 8
  %642 = load %18*, %18** %5, align 8
  %643 = load i32, i32* %6, align 4
  %644 = call i64 @197(%18* %639, %18* %640, %18* %641, %18* %642, i32 %643)
  store i64 %644, i64* %15, align 8
  br label %645

645:                                              ; preds = %638, %637
  %646 = load i32, i32* %16, align 4
  %647 = icmp sgt i32 %646, 3
  br i1 %647, label %648, label %660

648:                                              ; preds = %645
  %649 = load %18*, %18** %11, align 8
  call void @_zval_ptr_dtor(%18* %649)
  %650 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %650) #13
  %651 = load %18*, %18** %11, align 8
  store %18* %651, %18** %38, align 8
  %652 = load i64, i64* %15, align 8
  %653 = load %18*, %18** %38, align 8
  %654 = getelementptr inbounds %18, %18* %653, i32 0, i32 0
  %655 = bitcast %19* %654 to i64*
  store i64 %652, i64* %655, align 8
  %656 = load %18*, %18** %38, align 8
  %657 = getelementptr inbounds %18, %18* %656, i32 0, i32 1
  %658 = bitcast %20* %657 to i32*
  store i32 4, i32* %658, align 8
  %659 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %659) #13
  br label %660

660:                                              ; preds = %648, %645
  store i32 0, i32* %29, align 4
  br label %661

661:                                              ; preds = %660, %404
  %662 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %662) #13
  %663 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %663) #13
  %664 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %664) #13
  %665 = bitcast %0** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %665) #13
  %666 = bitcast %18* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %666) #13
  %667 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %667) #13
  %668 = bitcast %18** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %668) #13
  %669 = bitcast %18** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %669) #13
  %670 = bitcast %18** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %670) #13
  %671 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %671) #13
  %672 = load i32, i32* %29, align 4
  switch i32 %672, label %674 [
    i32 0, label %673
    i32 1, label %673
  ]

673:                                              ; preds = %661, %661
  ret void

674:                                              ; preds = %661, %625
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_str_ireplace(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @181(%14* %5, %18* %6, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_hebrev(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @182(%14* %5, %18* %6, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @182(%14* %0, %18* %1, i32 %2) #0 {
  %4 = alloca %14*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %0*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %18*, align 8
  %29 = alloca %18*, align 8
  %30 = alloca i32, align 4
  %31 = alloca i8*, align 8
  %32 = alloca i8, align 1
  %33 = alloca i8, align 1
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i64, align 8
  %37 = alloca i64, align 8
  %38 = alloca %18*, align 8
  %39 = alloca %0*, align 8
  %40 = alloca %18*, align 8
  %41 = alloca %0*, align 8
  store %14* %0, %14** %4, align 8
  store %18* %1, %18** %5, align 8
  store i32 %2, i32* %6, align 4
  %42 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  %44 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  %46 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  %47 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  %49 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  %50 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  %51 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  store i64 0, i64* %16, align 8
  %52 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  %53 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #13
  %54 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #13
  %55 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #13
  %56 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #13
  %57 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #13
  br label %58

58:                                               ; preds = %3
  %59 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #13
  store i32 0, i32* %23, align 4
  %60 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #13
  store i32 1, i32* %24, align 4
  %61 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #13
  store i32 2, i32* %25, align 4
  %62 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #13
  %63 = load %14*, %14** %4, align 8
  %64 = getelementptr inbounds %14, %14* %63, i32 0, i32 4
  %65 = getelementptr inbounds %18, %18* %64, i32 0, i32 2
  %66 = bitcast %21* %65 to i32*
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %26, align 4
  %68 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %68) #13
  %69 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %69) #13
  %70 = bitcast %18** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %70) #13
  store %18* null, %18** %29, align 8
  %71 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %71) #13
  store i32 0, i32* %30, align 4
  %72 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #13
  store i8* null, i8** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %32) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %33) #13
  store i8 0, i8* %33, align 1
  %73 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #13
  store i32 0, i32* %34, align 4
  %74 = load i32, i32* %27, align 4
  %75 = load %18*, %18** %28, align 8
  %76 = load %18*, %18** %29, align 8
  %77 = load i32, i32* %30, align 4
  %78 = load i8*, i8** %31, align 8
  %79 = load i8, i8* %32, align 1
  %80 = load i8, i8* %33, align 1
  br label %81

81:                                               ; preds = %58
  %82 = load i32, i32* %26, align 4
  %83 = load i32, i32* %24, align 4
  %84 = icmp slt i32 %82, %83
  %85 = xor i1 %84, true
  %86 = xor i1 %85, true
  %87 = zext i1 %86 to i32
  %88 = sext i32 %87 to i64
  %89 = call i64 @llvm.expect.i64(i64 %88, i64 0)
  %90 = icmp ne i64 %89, 0
  br i1 %90, label %110, label %91

91:                                               ; preds = %81
  %92 = load i32, i32* %26, align 4
  %93 = load i32, i32* %25, align 4
  %94 = icmp sgt i32 %92, %93
  %95 = xor i1 %94, true
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %114

101:                                              ; preds = %91
  %102 = load i32, i32* %25, align 4
  %103 = icmp sge i32 %102, 0
  %104 = xor i1 %103, true
  %105 = xor i1 %104, true
  %106 = zext i1 %105 to i32
  %107 = sext i32 %106 to i64
  %108 = call i64 @llvm.expect.i64(i64 %107, i64 1)
  %109 = icmp ne i64 %108, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %101, %81
  %111 = load i32, i32* %26, align 4
  %112 = load i32, i32* %24, align 4
  %113 = load i32, i32* %25, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %111, i32 %112, i32 %113)
  store i32 1, i32* %34, align 4
  br label %259

114:                                              ; preds = %101, %91
  store i32 0, i32* %27, align 4
  %115 = load %14*, %14** %4, align 8
  %116 = bitcast %14* %115 to %18*
  %117 = getelementptr inbounds %18, %18* %116, i64 4
  store %18* %117, %18** %28, align 8
  %118 = load i32, i32* %27, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %27, align 4
  br label %120

120:                                              ; preds = %114
  %121 = load i32, i32* %27, align 4
  %122 = load i32, i32* %24, align 4
  %123 = icmp sle i32 %121, %122
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = load i8, i8* %33, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp eq i32 %126, 1
  br label %128

128:                                              ; preds = %124, %120
  %129 = phi i1 [ true, %120 ], [ %127, %124 ]
  %130 = xor i1 %129, true
  %131 = zext i1 %130 to i32
  %132 = sext i32 %131 to i64
  %133 = call i64 @llvm.expect.i64(i64 %132, i64 0)
  %134 = icmp ne i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %128
  unreachable

136:                                              ; preds = %128
  br label %137

137:                                              ; preds = %136
  br label %138

138:                                              ; preds = %137
  br label %139

139:                                              ; preds = %138
  %140 = load i32, i32* %27, align 4
  %141 = load i32, i32* %24, align 4
  %142 = icmp sgt i32 %140, %141
  br i1 %142, label %147, label %143

143:                                              ; preds = %139
  %144 = load i8, i8* %33, align 1
  %145 = zext i8 %144 to i32
  %146 = icmp eq i32 %145, 0
  br label %147

147:                                              ; preds = %143, %139
  %148 = phi i1 [ true, %139 ], [ %146, %143 ]
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %147
  unreachable

155:                                              ; preds = %147
  br label %156

156:                                              ; preds = %155
  br label %157

157:                                              ; preds = %156
  %158 = load i8, i8* %33, align 1
  %159 = icmp ne i8 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %157
  %161 = load i32, i32* %27, align 4
  %162 = load i32, i32* %26, align 4
  %163 = icmp sgt i32 %161, %162
  %164 = xor i1 %163, true
  %165 = xor i1 %164, true
  %166 = zext i1 %165 to i32
  %167 = sext i32 %166 to i64
  %168 = call i64 @llvm.expect.i64(i64 %167, i64 0)
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %160
  br label %259

171:                                              ; preds = %160
  br label %172

172:                                              ; preds = %171, %157
  %173 = load %18*, %18** %28, align 8
  %174 = getelementptr inbounds %18, %18* %173, i32 1
  store %18* %174, %18** %28, align 8
  %175 = load %18*, %18** %28, align 8
  store %18* %175, %18** %29, align 8
  %176 = load %18*, %18** %29, align 8
  %177 = call i32 @151(%18* %176, i8** %7, i64* %21, i32 0)
  %178 = icmp ne i32 %177, 0
  %179 = xor i1 %178, true
  %180 = xor i1 %179, true
  %181 = xor i1 %180, true
  %182 = zext i1 %181 to i32
  %183 = sext i32 %182 to i64
  %184 = call i64 @llvm.expect.i64(i64 %183, i64 0)
  %185 = icmp ne i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %172
  store i32 2, i32* %30, align 4
  store i32 4, i32* %34, align 4
  br label %259

187:                                              ; preds = %172
  store i8 1, i8* %33, align 1
  %188 = load i32, i32* %27, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %27, align 4
  br label %190

190:                                              ; preds = %187
  %191 = load i32, i32* %27, align 4
  %192 = load i32, i32* %24, align 4
  %193 = icmp sle i32 %191, %192
  br i1 %193, label %198, label %194

194:                                              ; preds = %190
  %195 = load i8, i8* %33, align 1
  %196 = zext i8 %195 to i32
  %197 = icmp eq i32 %196, 1
  br label %198

198:                                              ; preds = %194, %190
  %199 = phi i1 [ true, %190 ], [ %197, %194 ]
  %200 = xor i1 %199, true
  %201 = zext i1 %200 to i32
  %202 = sext i32 %201 to i64
  %203 = call i64 @llvm.expect.i64(i64 %202, i64 0)
  %204 = icmp ne i64 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %198
  unreachable

206:                                              ; preds = %198
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = load i32, i32* %27, align 4
  %211 = load i32, i32* %24, align 4
  %212 = icmp sgt i32 %210, %211
  br i1 %212, label %217, label %213

213:                                              ; preds = %209
  %214 = load i8, i8* %33, align 1
  %215 = zext i8 %214 to i32
  %216 = icmp eq i32 %215, 0
  br label %217

217:                                              ; preds = %213, %209
  %218 = phi i1 [ true, %209 ], [ %216, %213 ]
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %217
  unreachable

225:                                              ; preds = %217
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226
  %228 = load i8, i8* %33, align 1
  %229 = icmp ne i8 %228, 0
  br i1 %229, label %230, label %242

230:                                              ; preds = %227
  %231 = load i32, i32* %27, align 4
  %232 = load i32, i32* %26, align 4
  %233 = icmp sgt i32 %231, %232
  %234 = xor i1 %233, true
  %235 = xor i1 %234, true
  %236 = zext i1 %235 to i32
  %237 = sext i32 %236 to i64
  %238 = call i64 @llvm.expect.i64(i64 %237, i64 0)
  %239 = icmp ne i64 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %230
  br label %259

241:                                              ; preds = %230
  br label %242

242:                                              ; preds = %241, %227
  %243 = load %18*, %18** %28, align 8
  %244 = getelementptr inbounds %18, %18* %243, i32 1
  store %18* %244, %18** %28, align 8
  %245 = load %18*, %18** %28, align 8
  store %18* %245, %18** %29, align 8
  %246 = load %18*, %18** %29, align 8
  %247 = call i32 @147(%18* %246, i64* %16, i8* %32, i32 0, i32 0)
  %248 = icmp ne i32 %247, 0
  %249 = xor i1 %248, true
  %250 = xor i1 %249, true
  %251 = xor i1 %250, true
  %252 = zext i1 %251 to i32
  %253 = sext i32 %252 to i64
  %254 = call i64 @llvm.expect.i64(i64 %253, i64 0)
  %255 = icmp ne i64 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %242
  store i32 0, i32* %30, align 4
  store i32 4, i32* %34, align 4
  br label %259

257:                                              ; preds = %242
  br label %258

258:                                              ; preds = %257
  br label %259

259:                                              ; preds = %258, %256, %240, %186, %170, %110
  %260 = load i32, i32* %34, align 4
  %261 = icmp ne i32 %260, 0
  %262 = xor i1 %261, true
  %263 = xor i1 %262, true
  %264 = zext i1 %263 to i32
  %265 = sext i32 %264 to i64
  %266 = call i64 @llvm.expect.i64(i64 %265, i64 0)
  %267 = icmp ne i64 %266, 0
  br i1 %267, label %268, label %291

268:                                              ; preds = %259
  %269 = load i32, i32* %34, align 4
  %270 = icmp eq i32 %269, 2
  br i1 %270, label %271, label %274

271:                                              ; preds = %268
  %272 = load i32, i32* %27, align 4
  %273 = load i8*, i8** %31, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %272, i8* %273)
  br label %290

274:                                              ; preds = %268
  %275 = load i32, i32* %34, align 4
  %276 = icmp eq i32 %275, 3
  br i1 %276, label %277, label %281

277:                                              ; preds = %274
  %278 = load i32, i32* %27, align 4
  %279 = load i8*, i8** %31, align 8
  %280 = load %18*, %18** %29, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %278, i8* %279, %18* %280)
  br label %289

281:                                              ; preds = %274
  %282 = load i32, i32* %34, align 4
  %283 = icmp eq i32 %282, 4
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = load i32, i32* %27, align 4
  %286 = load i32, i32* %30, align 4
  %287 = load %18*, %18** %29, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %285, i32 %286, %18* %287)
  br label %288

288:                                              ; preds = %284, %281
  br label %289

289:                                              ; preds = %288, %277
  br label %290

290:                                              ; preds = %289, %271
  store i32 1, i32* %35, align 4
  br label %292

291:                                              ; preds = %259
  store i32 0, i32* %35, align 4
  br label %292

292:                                              ; preds = %291, %290
  %293 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %293) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %33) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %32) #13
  %294 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %294) #13
  %295 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %295) #13
  %296 = bitcast %18** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296) #13
  %297 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %297) #13
  %298 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %298) #13
  %299 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %299) #13
  %300 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %300) #13
  %301 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %301) #13
  %302 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %302) #13
  %303 = load i32, i32* %35, align 4
  switch i32 %303, label %884 [
    i32 0, label %304
  ]

304:                                              ; preds = %292
  br label %305

305:                                              ; preds = %304
  br label %306

306:                                              ; preds = %305
  %307 = load i64, i64* %21, align 8
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %309, label %316

309:                                              ; preds = %306
  br label %310

310:                                              ; preds = %309
  %311 = load %18*, %18** %5, align 8
  %312 = getelementptr inbounds %18, %18* %311, i32 0, i32 1
  %313 = bitcast %20* %312 to i32*
  store i32 2, i32* %313, align 8
  br label %314

314:                                              ; preds = %310
  br label %315

315:                                              ; preds = %314
  store i32 1, i32* %35, align 4
  br label %884

316:                                              ; preds = %306
  %317 = load i8*, i8** %7, align 8
  store i8* %317, i8** %9, align 8
  store i64 0, i64* %12, align 8
  store i64 0, i64* %11, align 8
  %318 = load i64, i64* %21, align 8
  %319 = add i64 %318, 1
  %320 = call noalias i8* @_emalloc(i64 %319) #16
  store i8* %320, i8** %8, align 8
  %321 = load i8*, i8** %8, align 8
  %322 = load i64, i64* %21, align 8
  %323 = getelementptr inbounds i8, i8* %321, i64 %322
  store i8* %323, i8** %10, align 8
  %324 = load i8*, i8** %10, align 8
  store i8 0, i8* %324, align 1
  %325 = load i8*, i8** %10, align 8
  %326 = getelementptr inbounds i8, i8* %325, i32 -1
  store i8* %326, i8** %10, align 8
  store i64 0, i64* %14, align 8
  %327 = load i8*, i8** %9, align 8
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i32
  %330 = icmp sge i32 %329, 224
  br i1 %330, label %331, label %337

331:                                              ; preds = %316
  %332 = load i8*, i8** %9, align 8
  %333 = load i8, i8* %332, align 1
  %334 = zext i8 %333 to i32
  %335 = icmp sle i32 %334, 250
  br i1 %335, label %336, label %337

336:                                              ; preds = %331
  br i1 true, label %338, label %339

337:                                              ; preds = %331, %316
  br i1 false, label %338, label %339

338:                                              ; preds = %337, %336
  store i64 2, i64* %13, align 8
  br label %340

339:                                              ; preds = %337, %336
  store i64 1, i64* %13, align 8
  br label %340

340:                                              ; preds = %339, %338
  br label %341

341:                                              ; preds = %569, %340
  %342 = load i64, i64* %13, align 8
  %343 = icmp eq i64 %342, 2
  br i1 %343, label %344, label %460

344:                                              ; preds = %341
  br label %345

345:                                              ; preds = %407, %344
  %346 = load i8*, i8** %9, align 8
  %347 = getelementptr inbounds i8, i8* %346, i64 1
  %348 = load i8, i8* %347, align 1
  %349 = sext i8 %348 to i32
  %350 = trunc i32 %349 to i8
  %351 = zext i8 %350 to i32
  %352 = icmp sge i32 %351, 224
  br i1 %352, label %353, label %362

353:                                              ; preds = %345
  %354 = load i8*, i8** %9, align 8
  %355 = getelementptr inbounds i8, i8* %354, i64 1
  %356 = load i8, i8* %355, align 1
  %357 = sext i8 %356 to i32
  %358 = trunc i32 %357 to i8
  %359 = zext i8 %358 to i32
  %360 = icmp sle i32 %359, 250
  br i1 %360, label %361, label %362

361:                                              ; preds = %353
  br i1 true, label %400, label %363

362:                                              ; preds = %353, %345
  br i1 false, label %400, label %363

363:                                              ; preds = %362, %361
  %364 = load i8*, i8** %9, align 8
  %365 = getelementptr inbounds i8, i8* %364, i64 1
  %366 = load i8, i8* %365, align 1
  %367 = sext i8 %366 to i32
  %368 = trunc i32 %367 to i8
  %369 = zext i8 %368 to i32
  %370 = icmp eq i32 %369, 32
  br i1 %370, label %379, label %371

371:                                              ; preds = %363
  %372 = load i8*, i8** %9, align 8
  %373 = getelementptr inbounds i8, i8* %372, i64 1
  %374 = load i8, i8* %373, align 1
  %375 = sext i8 %374 to i32
  %376 = trunc i32 %375 to i8
  %377 = zext i8 %376 to i32
  %378 = icmp eq i32 %377, 9
  br i1 %378, label %379, label %380

379:                                              ; preds = %371, %363
  br i1 true, label %400, label %381

380:                                              ; preds = %371
  br i1 false, label %400, label %381

381:                                              ; preds = %380, %379
  %382 = call i16** @__ctype_b_loc() #17
  %383 = load i16*, i16** %382, align 8
  %384 = load i8*, i8** %9, align 8
  %385 = getelementptr inbounds i8, i8* %384, i64 1
  %386 = load i8, i8* %385, align 1
  %387 = sext i8 %386 to i32
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds i16, i16* %383, i64 %388
  %390 = load i16, i16* %389, align 2
  %391 = zext i16 %390 to i32
  %392 = and i32 %391, 4
  %393 = icmp ne i32 %392, 0
  br i1 %393, label %400, label %394

394:                                              ; preds = %381
  %395 = load i8*, i8** %9, align 8
  %396 = getelementptr inbounds i8, i8* %395, i64 1
  %397 = load i8, i8* %396, align 1
  %398 = sext i8 %397 to i32
  %399 = icmp eq i32 %398, 10
  br i1 %399, label %400, label %405

400:                                              ; preds = %394, %381, %380, %379, %362, %361
  %401 = load i64, i64* %12, align 8
  %402 = load i64, i64* %21, align 8
  %403 = sub i64 %402, 1
  %404 = icmp ult i64 %401, %403
  br label %405

405:                                              ; preds = %400, %394
  %406 = phi i1 [ false, %394 ], [ %404, %400 ]
  br i1 %406, label %407, label %414

407:                                              ; preds = %405
  %408 = load i8*, i8** %9, align 8
  %409 = getelementptr inbounds i8, i8* %408, i32 1
  store i8* %409, i8** %9, align 8
  %410 = load i64, i64* %12, align 8
  %411 = add i64 %410, 1
  store i64 %411, i64* %12, align 8
  %412 = load i64, i64* %14, align 8
  %413 = add i64 %412, 1
  store i64 %413, i64* %14, align 8
  br label %345

414:                                              ; preds = %405
  %415 = load i64, i64* %11, align 8
  %416 = add i64 %415, 1
  store i64 %416, i64* %15, align 8
  br label %417

417:                                              ; preds = %456, %414
  %418 = load i64, i64* %15, align 8
  %419 = load i64, i64* %12, align 8
  %420 = add i64 %419, 1
  %421 = icmp ule i64 %418, %420
  br i1 %421, label %422, label %459

422:                                              ; preds = %417
  %423 = load i8*, i8** %7, align 8
  %424 = load i64, i64* %15, align 8
  %425 = sub i64 %424, 1
  %426 = getelementptr inbounds i8, i8* %423, i64 %425
  %427 = load i8, i8* %426, align 1
  %428 = load i8*, i8** %10, align 8
  store i8 %427, i8* %428, align 1
  %429 = load i8*, i8** %10, align 8
  %430 = load i8, i8* %429, align 1
  %431 = sext i8 %430 to i32
  switch i32 %431, label %452 [
    i32 40, label %432
    i32 41, label %434
    i32 91, label %436
    i32 93, label %438
    i32 123, label %440
    i32 125, label %442
    i32 60, label %444
    i32 62, label %446
    i32 92, label %448
    i32 47, label %450
  ]

432:                                              ; preds = %422
  %433 = load i8*, i8** %10, align 8
  store i8 41, i8* %433, align 1
  br label %453

434:                                              ; preds = %422
  %435 = load i8*, i8** %10, align 8
  store i8 40, i8* %435, align 1
  br label %453

436:                                              ; preds = %422
  %437 = load i8*, i8** %10, align 8
  store i8 93, i8* %437, align 1
  br label %453

438:                                              ; preds = %422
  %439 = load i8*, i8** %10, align 8
  store i8 91, i8* %439, align 1
  br label %453

440:                                              ; preds = %422
  %441 = load i8*, i8** %10, align 8
  store i8 125, i8* %441, align 1
  br label %453

442:                                              ; preds = %422
  %443 = load i8*, i8** %10, align 8
  store i8 123, i8* %443, align 1
  br label %453

444:                                              ; preds = %422
  %445 = load i8*, i8** %10, align 8
  store i8 62, i8* %445, align 1
  br label %453

446:                                              ; preds = %422
  %447 = load i8*, i8** %10, align 8
  store i8 60, i8* %447, align 1
  br label %453

448:                                              ; preds = %422
  %449 = load i8*, i8** %10, align 8
  store i8 47, i8* %449, align 1
  br label %453

450:                                              ; preds = %422
  %451 = load i8*, i8** %10, align 8
  store i8 92, i8* %451, align 1
  br label %453

452:                                              ; preds = %422
  br label %453

453:                                              ; preds = %452, %450, %448, %446, %444, %442, %440, %438, %436, %434, %432
  %454 = load i8*, i8** %10, align 8
  %455 = getelementptr inbounds i8, i8* %454, i32 -1
  store i8* %455, i8** %10, align 8
  br label %456

456:                                              ; preds = %453
  %457 = load i64, i64* %15, align 8
  %458 = add i64 %457, 1
  store i64 %458, i64* %15, align 8
  br label %417

459:                                              ; preds = %417
  store i64 1, i64* %13, align 8
  br label %566

460:                                              ; preds = %341
  br label %461

461:                                              ; preds = %488, %460
  %462 = load i8*, i8** %9, align 8
  %463 = getelementptr inbounds i8, i8* %462, i64 1
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i32
  %466 = icmp sge i32 %465, 224
  br i1 %466, label %467, label %474

467:                                              ; preds = %461
  %468 = load i8*, i8** %9, align 8
  %469 = getelementptr inbounds i8, i8* %468, i64 1
  %470 = load i8, i8* %469, align 1
  %471 = zext i8 %470 to i32
  %472 = icmp sle i32 %471, 250
  br i1 %472, label %473, label %474

473:                                              ; preds = %467
  br i1 true, label %486, label %475

474:                                              ; preds = %467, %461
  br i1 false, label %486, label %475

475:                                              ; preds = %474, %473
  %476 = load i8*, i8** %9, align 8
  %477 = getelementptr inbounds i8, i8* %476, i64 1
  %478 = load i8, i8* %477, align 1
  %479 = sext i8 %478 to i32
  %480 = icmp ne i32 %479, 10
  br i1 %480, label %481, label %486

481:                                              ; preds = %475
  %482 = load i64, i64* %12, align 8
  %483 = load i64, i64* %21, align 8
  %484 = sub i64 %483, 1
  %485 = icmp ult i64 %482, %484
  br label %486

486:                                              ; preds = %481, %475, %474, %473
  %487 = phi i1 [ false, %475 ], [ false, %474 ], [ false, %473 ], [ %485, %481 ]
  br i1 %487, label %488, label %495

488:                                              ; preds = %486
  %489 = load i8*, i8** %9, align 8
  %490 = getelementptr inbounds i8, i8* %489, i32 1
  store i8* %490, i8** %9, align 8
  %491 = load i64, i64* %12, align 8
  %492 = add i64 %491, 1
  store i64 %492, i64* %12, align 8
  %493 = load i64, i64* %14, align 8
  %494 = add i64 %493, 1
  store i64 %494, i64* %14, align 8
  br label %461

495:                                              ; preds = %486
  br label %496

496:                                              ; preds = %540, %495
  %497 = load i8*, i8** %9, align 8
  %498 = load i8, i8* %497, align 1
  %499 = sext i8 %498 to i32
  %500 = trunc i32 %499 to i8
  %501 = zext i8 %500 to i32
  %502 = icmp eq i32 %501, 32
  br i1 %502, label %510, label %503

503:                                              ; preds = %496
  %504 = load i8*, i8** %9, align 8
  %505 = load i8, i8* %504, align 1
  %506 = sext i8 %505 to i32
  %507 = trunc i32 %506 to i8
  %508 = zext i8 %507 to i32
  %509 = icmp eq i32 %508, 9
  br i1 %509, label %510, label %511

510:                                              ; preds = %503, %496
  br i1 true, label %524, label %512

511:                                              ; preds = %503
  br i1 false, label %524, label %512

512:                                              ; preds = %511, %510
  %513 = call i16** @__ctype_b_loc() #17
  %514 = load i16*, i16** %513, align 8
  %515 = load i8*, i8** %9, align 8
  %516 = load i8, i8* %515, align 1
  %517 = sext i8 %516 to i32
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds i16, i16* %514, i64 %518
  %520 = load i16, i16* %519, align 2
  %521 = zext i16 %520 to i32
  %522 = and i32 %521, 4
  %523 = icmp ne i32 %522, 0
  br i1 %523, label %524, label %538

524:                                              ; preds = %512, %511, %510
  %525 = load i8*, i8** %9, align 8
  %526 = load i8, i8* %525, align 1
  %527 = sext i8 %526 to i32
  %528 = icmp ne i32 %527, 47
  br i1 %528, label %529, label %538

529:                                              ; preds = %524
  %530 = load i8*, i8** %9, align 8
  %531 = load i8, i8* %530, align 1
  %532 = sext i8 %531 to i32
  %533 = icmp ne i32 %532, 45
  br i1 %533, label %534, label %538

534:                                              ; preds = %529
  %535 = load i64, i64* %12, align 8
  %536 = load i64, i64* %11, align 8
  %537 = icmp ugt i64 %535, %536
  br label %538

538:                                              ; preds = %534, %529, %524, %512
  %539 = phi i1 [ false, %529 ], [ false, %524 ], [ false, %512 ], [ %537, %534 ]
  br i1 %539, label %540, label %545

540:                                              ; preds = %538
  %541 = load i8*, i8** %9, align 8
  %542 = getelementptr inbounds i8, i8* %541, i32 -1
  store i8* %542, i8** %9, align 8
  %543 = load i64, i64* %12, align 8
  %544 = add i64 %543, -1
  store i64 %544, i64* %12, align 8
  br label %496

545:                                              ; preds = %538
  %546 = load i64, i64* %12, align 8
  %547 = add i64 %546, 1
  store i64 %547, i64* %15, align 8
  br label %548

548:                                              ; preds = %562, %545
  %549 = load i64, i64* %15, align 8
  %550 = load i64, i64* %11, align 8
  %551 = add i64 %550, 1
  %552 = icmp uge i64 %549, %551
  br i1 %552, label %553, label %565

553:                                              ; preds = %548
  %554 = load i8*, i8** %7, align 8
  %555 = load i64, i64* %15, align 8
  %556 = sub i64 %555, 1
  %557 = getelementptr inbounds i8, i8* %554, i64 %556
  %558 = load i8, i8* %557, align 1
  %559 = load i8*, i8** %10, align 8
  store i8 %558, i8* %559, align 1
  %560 = load i8*, i8** %10, align 8
  %561 = getelementptr inbounds i8, i8* %560, i32 -1
  store i8* %561, i8** %10, align 8
  br label %562

562:                                              ; preds = %553
  %563 = load i64, i64* %15, align 8
  %564 = add i64 %563, -1
  store i64 %564, i64* %15, align 8
  br label %548

565:                                              ; preds = %548
  store i64 2, i64* %13, align 8
  br label %566

566:                                              ; preds = %565, %459
  %567 = load i64, i64* %12, align 8
  %568 = add i64 %567, 1
  store i64 %568, i64* %11, align 8
  br label %569

569:                                              ; preds = %566
  %570 = load i64, i64* %12, align 8
  %571 = load i64, i64* %21, align 8
  %572 = sub i64 %571, 1
  %573 = icmp ult i64 %570, %572
  br i1 %573, label %341, label %574

574:                                              ; preds = %569
  %575 = load i64, i64* %21, align 8
  %576 = call %0* @162(i64 %575, i32 0)
  store %0* %576, %0** %22, align 8
  %577 = load i64, i64* %21, align 8
  %578 = sub i64 %577, 1
  store i64 %578, i64* %19, align 8
  store i64 %578, i64* %18, align 8
  %579 = load %0*, %0** %22, align 8
  %580 = getelementptr inbounds %0, %0* %579, i32 0, i32 3
  %581 = getelementptr inbounds [1 x i8], [1 x i8]* %580, i32 0, i32 0
  store i8* %581, i8** %10, align 8
  br label %582

582:                                              ; preds = %828, %574
  br label %583

583:                                              ; preds = %582
  store i64 0, i64* %17, align 8
  br label %584

584:                                              ; preds = %655, %583
  %585 = load i64, i64* %16, align 8
  %586 = icmp ne i64 %585, 0
  br i1 %586, label %587, label %594

587:                                              ; preds = %584
  %588 = load i64, i64* %16, align 8
  %589 = icmp sgt i64 %588, 0
  br i1 %589, label %590, label %597

590:                                              ; preds = %587
  %591 = load i64, i64* %17, align 8
  %592 = load i64, i64* %16, align 8
  %593 = icmp slt i64 %591, %592
  br i1 %593, label %594, label %597

594:                                              ; preds = %590, %584
  %595 = load i64, i64* %18, align 8
  %596 = icmp ugt i64 %595, 0
  br label %597

597:                                              ; preds = %594, %590, %587
  %598 = phi i1 [ false, %590 ], [ false, %587 ], [ %596, %594 ]
  br i1 %598, label %599, label %656

599:                                              ; preds = %597
  %600 = load i64, i64* %17, align 8
  %601 = add nsw i64 %600, 1
  store i64 %601, i64* %17, align 8
  %602 = load i64, i64* %18, align 8
  %603 = add i64 %602, -1
  store i64 %603, i64* %18, align 8
  %604 = load i64, i64* %18, align 8
  %605 = icmp ule i64 %604, 0
  br i1 %605, label %622, label %606

606:                                              ; preds = %599
  %607 = load i8*, i8** %8, align 8
  %608 = load i64, i64* %18, align 8
  %609 = getelementptr inbounds i8, i8* %607, i64 %608
  %610 = load i8, i8* %609, align 1
  %611 = zext i8 %610 to i32
  %612 = icmp eq i32 %611, 10
  br i1 %612, label %620, label %613

613:                                              ; preds = %606
  %614 = load i8*, i8** %8, align 8
  %615 = load i64, i64* %18, align 8
  %616 = getelementptr inbounds i8, i8* %614, i64 %615
  %617 = load i8, i8* %616, align 1
  %618 = zext i8 %617 to i32
  %619 = icmp eq i32 %618, 13
  br i1 %619, label %620, label %621

620:                                              ; preds = %613, %606
  br i1 true, label %622, label %655

621:                                              ; preds = %613
  br i1 false, label %622, label %655

622:                                              ; preds = %621, %620, %599
  br label %623

623:                                              ; preds = %649, %622
  %624 = load i64, i64* %18, align 8
  %625 = icmp ugt i64 %624, 0
  br i1 %625, label %626, label %647

626:                                              ; preds = %623
  %627 = load i8*, i8** %8, align 8
  %628 = load i64, i64* %18, align 8
  %629 = sub i64 %628, 1
  %630 = getelementptr inbounds i8, i8* %627, i64 %629
  %631 = load i8, i8* %630, align 1
  %632 = zext i8 %631 to i32
  %633 = icmp eq i32 %632, 10
  br i1 %633, label %642, label %634

634:                                              ; preds = %626
  %635 = load i8*, i8** %8, align 8
  %636 = load i64, i64* %18, align 8
  %637 = sub i64 %636, 1
  %638 = getelementptr inbounds i8, i8* %635, i64 %637
  %639 = load i8, i8* %638, align 1
  %640 = zext i8 %639 to i32
  %641 = icmp eq i32 %640, 13
  br label %642

642:                                              ; preds = %634, %626
  %643 = phi i1 [ true, %626 ], [ %641, %634 ]
  %644 = zext i1 %643 to i64
  %645 = select i1 %643, i32 1, i32 0
  %646 = icmp ne i32 %645, 0
  br label %647

647:                                              ; preds = %642, %623
  %648 = phi i1 [ false, %623 ], [ %646, %642 ]
  br i1 %648, label %649, label %654

649:                                              ; preds = %647
  %650 = load i64, i64* %18, align 8
  %651 = add i64 %650, -1
  store i64 %651, i64* %18, align 8
  %652 = load i64, i64* %17, align 8
  %653 = add nsw i64 %652, 1
  store i64 %653, i64* %17, align 8
  br label %623

654:                                              ; preds = %647
  br label %656

655:                                              ; preds = %621, %620
  br label %584

656:                                              ; preds = %654, %597
  %657 = load i64, i64* %16, align 8
  %658 = icmp sge i64 %657, 0
  br i1 %658, label %659, label %717

659:                                              ; preds = %656
  %660 = load i64, i64* %17, align 8
  %661 = load i64, i64* %16, align 8
  %662 = icmp eq i64 %660, %661
  br i1 %662, label %663, label %717

663:                                              ; preds = %659
  %664 = bitcast i64* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %664) #13
  %665 = load i64, i64* %17, align 8
  store i64 %665, i64* %36, align 8
  %666 = bitcast i64* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %666) #13
  %667 = load i64, i64* %18, align 8
  store i64 %667, i64* %37, align 8
  br label %668

668:                                              ; preds = %704, %663
  %669 = load i64, i64* %36, align 8
  %670 = icmp ugt i64 %669, 0
  br i1 %670, label %671, label %709

671:                                              ; preds = %668
  %672 = load i8*, i8** %8, align 8
  %673 = load i64, i64* %37, align 8
  %674 = getelementptr inbounds i8, i8* %672, i64 %673
  %675 = load i8, i8* %674, align 1
  %676 = zext i8 %675 to i32
  %677 = icmp eq i32 %676, 32
  br i1 %677, label %685, label %678

678:                                              ; preds = %671
  %679 = load i8*, i8** %8, align 8
  %680 = load i64, i64* %37, align 8
  %681 = getelementptr inbounds i8, i8* %679, i64 %680
  %682 = load i8, i8* %681, align 1
  %683 = zext i8 %682 to i32
  %684 = icmp eq i32 %683, 9
  br i1 %684, label %685, label %686

685:                                              ; preds = %678, %671
  br i1 true, label %703, label %687

686:                                              ; preds = %678
  br i1 false, label %703, label %687

687:                                              ; preds = %686, %685
  %688 = load i8*, i8** %8, align 8
  %689 = load i64, i64* %37, align 8
  %690 = getelementptr inbounds i8, i8* %688, i64 %689
  %691 = load i8, i8* %690, align 1
  %692 = zext i8 %691 to i32
  %693 = icmp eq i32 %692, 10
  br i1 %693, label %701, label %694

694:                                              ; preds = %687
  %695 = load i8*, i8** %8, align 8
  %696 = load i64, i64* %37, align 8
  %697 = getelementptr inbounds i8, i8* %695, i64 %696
  %698 = load i8, i8* %697, align 1
  %699 = zext i8 %698 to i32
  %700 = icmp eq i32 %699, 13
  br i1 %700, label %701, label %702

701:                                              ; preds = %694, %687
  br i1 true, label %703, label %704

702:                                              ; preds = %694
  br i1 false, label %703, label %704

703:                                              ; preds = %702, %701, %686, %685
  br label %709

704:                                              ; preds = %702, %701
  %705 = load i64, i64* %37, align 8
  %706 = add i64 %705, 1
  store i64 %706, i64* %37, align 8
  %707 = load i64, i64* %36, align 8
  %708 = add i64 %707, -1
  store i64 %708, i64* %36, align 8
  br label %668

709:                                              ; preds = %703, %668
  %710 = load i64, i64* %36, align 8
  %711 = icmp ugt i64 %710, 0
  br i1 %711, label %712, label %714

712:                                              ; preds = %709
  %713 = load i64, i64* %37, align 8
  store i64 %713, i64* %18, align 8
  br label %714

714:                                              ; preds = %712, %709
  %715 = bitcast i64* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %715) #13
  %716 = bitcast i64* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %716) #13
  br label %717

717:                                              ; preds = %714, %659, %656
  %718 = load i64, i64* %18, align 8
  store i64 %718, i64* %20, align 8
  %719 = load i8*, i8** %8, align 8
  %720 = load i64, i64* %18, align 8
  %721 = getelementptr inbounds i8, i8* %719, i64 %720
  %722 = load i8, i8* %721, align 1
  %723 = zext i8 %722 to i32
  %724 = icmp eq i32 %723, 32
  br i1 %724, label %732, label %725

725:                                              ; preds = %717
  %726 = load i8*, i8** %8, align 8
  %727 = load i64, i64* %18, align 8
  %728 = getelementptr inbounds i8, i8* %726, i64 %727
  %729 = load i8, i8* %728, align 1
  %730 = zext i8 %729 to i32
  %731 = icmp eq i32 %730, 9
  br i1 %731, label %732, label %733

732:                                              ; preds = %725, %717
  br i1 true, label %734, label %738

733:                                              ; preds = %725
  br i1 false, label %734, label %738

734:                                              ; preds = %733, %732
  %735 = load i8*, i8** %8, align 8
  %736 = load i64, i64* %18, align 8
  %737 = getelementptr inbounds i8, i8* %735, i64 %736
  store i8 10, i8* %737, align 1
  br label %738

738:                                              ; preds = %734, %733, %732
  br label %739

739:                                              ; preds = %764, %738
  %740 = load i64, i64* %18, align 8
  %741 = load i64, i64* %19, align 8
  %742 = icmp ule i64 %740, %741
  br i1 %742, label %743, label %762

743:                                              ; preds = %739
  %744 = load i8*, i8** %8, align 8
  %745 = load i64, i64* %18, align 8
  %746 = getelementptr inbounds i8, i8* %744, i64 %745
  %747 = load i8, i8* %746, align 1
  %748 = zext i8 %747 to i32
  %749 = icmp eq i32 %748, 10
  br i1 %749, label %757, label %750

750:                                              ; preds = %743
  %751 = load i8*, i8** %8, align 8
  %752 = load i64, i64* %18, align 8
  %753 = getelementptr inbounds i8, i8* %751, i64 %752
  %754 = load i8, i8* %753, align 1
  %755 = zext i8 %754 to i32
  %756 = icmp eq i32 %755, 13
  br label %757

757:                                              ; preds = %750, %743
  %758 = phi i1 [ true, %743 ], [ %756, %750 ]
  %759 = zext i1 %758 to i64
  %760 = select i1 %758, i32 1, i32 0
  %761 = icmp ne i32 %760, 0
  br label %762

762:                                              ; preds = %757, %739
  %763 = phi i1 [ false, %739 ], [ %761, %757 ]
  br i1 %763, label %764, label %767

764:                                              ; preds = %762
  %765 = load i64, i64* %18, align 8
  %766 = add i64 %765, 1
  store i64 %766, i64* %18, align 8
  br label %739

767:                                              ; preds = %762
  %768 = load i64, i64* %18, align 8
  store i64 %768, i64* %15, align 8
  br label %769

769:                                              ; preds = %781, %767
  %770 = load i64, i64* %15, align 8
  %771 = load i64, i64* %19, align 8
  %772 = icmp ule i64 %770, %771
  br i1 %772, label %773, label %784

773:                                              ; preds = %769
  %774 = load i8*, i8** %8, align 8
  %775 = load i64, i64* %15, align 8
  %776 = getelementptr inbounds i8, i8* %774, i64 %775
  %777 = load i8, i8* %776, align 1
  %778 = load i8*, i8** %10, align 8
  store i8 %777, i8* %778, align 1
  %779 = load i8*, i8** %10, align 8
  %780 = getelementptr inbounds i8, i8* %779, i32 1
  store i8* %780, i8** %10, align 8
  br label %781

781:                                              ; preds = %773
  %782 = load i64, i64* %15, align 8
  %783 = add i64 %782, 1
  store i64 %783, i64* %15, align 8
  br label %769

784:                                              ; preds = %769
  %785 = load i64, i64* %20, align 8
  store i64 %785, i64* %15, align 8
  br label %786

786:                                              ; preds = %819, %784
  %787 = load i64, i64* %15, align 8
  %788 = load i64, i64* %19, align 8
  %789 = icmp ule i64 %787, %788
  br i1 %789, label %790, label %809

790:                                              ; preds = %786
  %791 = load i8*, i8** %8, align 8
  %792 = load i64, i64* %15, align 8
  %793 = getelementptr inbounds i8, i8* %791, i64 %792
  %794 = load i8, i8* %793, align 1
  %795 = zext i8 %794 to i32
  %796 = icmp eq i32 %795, 10
  br i1 %796, label %804, label %797

797:                                              ; preds = %790
  %798 = load i8*, i8** %8, align 8
  %799 = load i64, i64* %15, align 8
  %800 = getelementptr inbounds i8, i8* %798, i64 %799
  %801 = load i8, i8* %800, align 1
  %802 = zext i8 %801 to i32
  %803 = icmp eq i32 %802, 13
  br label %804

804:                                              ; preds = %797, %790
  %805 = phi i1 [ true, %790 ], [ %803, %797 ]
  %806 = zext i1 %805 to i64
  %807 = select i1 %805, i32 1, i32 0
  %808 = icmp ne i32 %807, 0
  br label %809

809:                                              ; preds = %804, %786
  %810 = phi i1 [ false, %786 ], [ %808, %804 ]
  br i1 %810, label %811, label %822

811:                                              ; preds = %809
  %812 = load i8*, i8** %8, align 8
  %813 = load i64, i64* %15, align 8
  %814 = getelementptr inbounds i8, i8* %812, i64 %813
  %815 = load i8, i8* %814, align 1
  %816 = load i8*, i8** %10, align 8
  store i8 %815, i8* %816, align 1
  %817 = load i8*, i8** %10, align 8
  %818 = getelementptr inbounds i8, i8* %817, i32 1
  store i8* %818, i8** %10, align 8
  br label %819

819:                                              ; preds = %811
  %820 = load i64, i64* %15, align 8
  %821 = add i64 %820, 1
  store i64 %821, i64* %15, align 8
  br label %786

822:                                              ; preds = %809
  %823 = load i64, i64* %20, align 8
  store i64 %823, i64* %18, align 8
  %824 = load i64, i64* %18, align 8
  %825 = icmp ule i64 %824, 0
  br i1 %825, label %826, label %828

826:                                              ; preds = %822
  %827 = load i8*, i8** %10, align 8
  store i8 0, i8* %827, align 1
  br label %832

828:                                              ; preds = %822
  %829 = load i64, i64* %18, align 8
  %830 = add i64 %829, -1
  store i64 %830, i64* %18, align 8
  %831 = load i64, i64* %18, align 8
  store i64 %831, i64* %19, align 8
  br label %582

832:                                              ; preds = %826
  %833 = load i8*, i8** %8, align 8
  call void @_efree(i8* %833)
  %834 = load i32, i32* %6, align 4
  %835 = icmp ne i32 %834, 0
  br i1 %835, label %836, label %866

836:                                              ; preds = %832
  br label %837

837:                                              ; preds = %836
  %838 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %838) #13
  %839 = load %18*, %18** %5, align 8
  store %18* %839, %18** %38, align 8
  %840 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %840) #13
  %841 = load %0*, %0** %22, align 8
  %842 = call %0* @175(%0* %841, i8 signext 10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @142, i32 0, i32 0), i64 7, i32 1, i64* null)
  store %0* %842, %0** %39, align 8
  %843 = load %0*, %0** %39, align 8
  %844 = load %18*, %18** %38, align 8
  %845 = getelementptr inbounds %18, %18* %844, i32 0, i32 0
  %846 = bitcast %19* %845 to %0**
  store %0* %843, %0** %846, align 8
  %847 = load %0*, %0** %39, align 8
  %848 = getelementptr inbounds %0, %0* %847, i32 0, i32 0
  %849 = getelementptr inbounds %1, %1* %848, i32 0, i32 1
  %850 = bitcast %2* %849 to %52*
  %851 = getelementptr inbounds %52, %52* %850, i32 0, i32 1
  %852 = load i8, i8* %851, align 1
  %853 = zext i8 %852 to i32
  %854 = and i32 %853, 2
  %855 = icmp ne i32 %854, 0
  %856 = zext i1 %855 to i64
  %857 = select i1 %855, i32 6, i32 5126
  %858 = load %18*, %18** %38, align 8
  %859 = getelementptr inbounds %18, %18* %858, i32 0, i32 1
  %860 = bitcast %20* %859 to i32*
  store i32 %857, i32* %860, align 8
  %861 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %861) #13
  %862 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %862) #13
  br label %863

863:                                              ; preds = %837
  br label %864

864:                                              ; preds = %863
  %865 = load %0*, %0** %22, align 8
  call void @159(%0* %865)
  br label %883

866:                                              ; preds = %832
  br label %867

867:                                              ; preds = %866
  %868 = bitcast %18** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %868) #13
  %869 = load %18*, %18** %5, align 8
  store %18* %869, %18** %40, align 8
  %870 = bitcast %0** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %870) #13
  %871 = load %0*, %0** %22, align 8
  store %0* %871, %0** %41, align 8
  %872 = load %0*, %0** %41, align 8
  %873 = load %18*, %18** %40, align 8
  %874 = getelementptr inbounds %18, %18* %873, i32 0, i32 0
  %875 = bitcast %19* %874 to %0**
  store %0* %872, %0** %875, align 8
  %876 = load %18*, %18** %40, align 8
  %877 = getelementptr inbounds %18, %18* %876, i32 0, i32 1
  %878 = bitcast %20* %877 to i32*
  store i32 5126, i32* %878, align 8
  %879 = bitcast %0** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %879) #13
  %880 = bitcast %18** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %880) #13
  br label %881

881:                                              ; preds = %867
  br label %882

882:                                              ; preds = %881
  store i32 1, i32* %35, align 4
  br label %884

883:                                              ; preds = %864
  store i32 0, i32* %35, align 4
  br label %884

884:                                              ; preds = %883, %882, %315, %292
  %885 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %885) #13
  %886 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %886) #13
  %887 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %887) #13
  %888 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %888) #13
  %889 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %889) #13
  %890 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %890) #13
  %891 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %891) #13
  %892 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %892) #13
  %893 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %893) #13
  %894 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %894) #13
  %895 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %895) #13
  %896 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %896) #13
  %897 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %897) #13
  %898 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %898) #13
  %899 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %899) #13
  %900 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %900) #13
  %901 = load i32, i32* %35, align 4
  switch i32 %901, label %903 [
    i32 0, label %902
    i32 1, label %902
  ]

902:                                              ; preds = %884, %884
  ret void

903:                                              ; preds = %884
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_hebrevc(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @182(%14* %5, %18* %6, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_nl2br(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca %0*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %18*, align 8
  %18 = alloca %18*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %18*, align 8
  %26 = alloca %0*, align 8
  %27 = alloca i64, align 8
  %28 = alloca %18*, align 8
  %29 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %30 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  store i64 0, i64* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #13
  store i8 1, i8* %10, align 1
  %35 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  br label %36

36:                                               ; preds = %2
  %37 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %12, align 4
  %38 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 1, i32* %13, align 4
  %39 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 2, i32* %14, align 4
  %40 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  %41 = load %14*, %14** %3, align 8
  %42 = getelementptr inbounds %14, %14* %41, i32 0, i32 4
  %43 = getelementptr inbounds %18, %18* %42, i32 0, i32 2
  %44 = bitcast %21* %43 to i32*
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %15, align 4
  %46 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  %47 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  store %18* null, %18** %18, align 8
  %49 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  store i32 0, i32* %19, align 4
  %50 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  store i8 0, i8* %22, align 1
  %51 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #13
  store i32 0, i32* %23, align 4
  %52 = load i32, i32* %16, align 4
  %53 = load %18*, %18** %17, align 8
  %54 = load %18*, %18** %18, align 8
  %55 = load i32, i32* %19, align 4
  %56 = load i8*, i8** %20, align 8
  %57 = load i8, i8* %21, align 1
  %58 = load i8, i8* %22, align 1
  br label %59

59:                                               ; preds = %36
  %60 = load i32, i32* %15, align 4
  %61 = load i32, i32* %13, align 4
  %62 = icmp slt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %59
  %70 = load i32, i32* %15, align 4
  %71 = load i32, i32* %14, align 4
  %72 = icmp sgt i32 %70, %71
  %73 = xor i1 %72, true
  %74 = xor i1 %73, true
  %75 = zext i1 %74 to i32
  %76 = sext i32 %75 to i64
  %77 = call i64 @llvm.expect.i64(i64 %76, i64 0)
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %79, label %92

79:                                               ; preds = %69
  %80 = load i32, i32* %14, align 4
  %81 = icmp sge i32 %80, 0
  %82 = xor i1 %81, true
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = call i64 @llvm.expect.i64(i64 %85, i64 1)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %79, %59
  %89 = load i32, i32* %15, align 4
  %90 = load i32, i32* %13, align 4
  %91 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %89, i32 %90, i32 %91)
  store i32 1, i32* %23, align 4
  br label %237

92:                                               ; preds = %79, %69
  store i32 0, i32* %16, align 4
  %93 = load %14*, %14** %3, align 8
  %94 = bitcast %14* %93 to %18*
  %95 = getelementptr inbounds %18, %18* %94, i64 4
  store %18* %95, %18** %17, align 8
  %96 = load i32, i32* %16, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %16, align 4
  br label %98

98:                                               ; preds = %92
  %99 = load i32, i32* %16, align 4
  %100 = load i32, i32* %13, align 4
  %101 = icmp sle i32 %99, %100
  br i1 %101, label %106, label %102

102:                                              ; preds = %98
  %103 = load i8, i8* %22, align 1
  %104 = zext i8 %103 to i32
  %105 = icmp eq i32 %104, 1
  br label %106

106:                                              ; preds = %102, %98
  %107 = phi i1 [ true, %98 ], [ %105, %102 ]
  %108 = xor i1 %107, true
  %109 = zext i1 %108 to i32
  %110 = sext i32 %109 to i64
  %111 = call i64 @llvm.expect.i64(i64 %110, i64 0)
  %112 = icmp ne i64 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %106
  unreachable

114:                                              ; preds = %106
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  br label %117

117:                                              ; preds = %116
  %118 = load i32, i32* %16, align 4
  %119 = load i32, i32* %13, align 4
  %120 = icmp sgt i32 %118, %119
  br i1 %120, label %125, label %121

121:                                              ; preds = %117
  %122 = load i8, i8* %22, align 1
  %123 = zext i8 %122 to i32
  %124 = icmp eq i32 %123, 0
  br label %125

125:                                              ; preds = %121, %117
  %126 = phi i1 [ true, %117 ], [ %124, %121 ]
  %127 = xor i1 %126, true
  %128 = zext i1 %127 to i32
  %129 = sext i32 %128 to i64
  %130 = call i64 @llvm.expect.i64(i64 %129, i64 0)
  %131 = icmp ne i64 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  unreachable

133:                                              ; preds = %125
  br label %134

134:                                              ; preds = %133
  br label %135

135:                                              ; preds = %134
  %136 = load i8, i8* %22, align 1
  %137 = icmp ne i8 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %135
  %139 = load i32, i32* %16, align 4
  %140 = load i32, i32* %15, align 4
  %141 = icmp sgt i32 %139, %140
  %142 = xor i1 %141, true
  %143 = xor i1 %142, true
  %144 = zext i1 %143 to i32
  %145 = sext i32 %144 to i64
  %146 = call i64 @llvm.expect.i64(i64 %145, i64 0)
  %147 = icmp ne i64 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %138
  br label %237

149:                                              ; preds = %138
  br label %150

150:                                              ; preds = %149, %135
  %151 = load %18*, %18** %17, align 8
  %152 = getelementptr inbounds %18, %18* %151, i32 1
  store %18* %152, %18** %17, align 8
  %153 = load %18*, %18** %17, align 8
  store %18* %153, %18** %18, align 8
  %154 = load %18*, %18** %18, align 8
  %155 = call i32 @143(%18* %154, %0** %6, i32 0)
  %156 = icmp ne i32 %155, 0
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %150
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %237

165:                                              ; preds = %150
  store i8 1, i8* %22, align 1
  %166 = load i32, i32* %16, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %16, align 4
  br label %168

168:                                              ; preds = %165
  %169 = load i32, i32* %16, align 4
  %170 = load i32, i32* %13, align 4
  %171 = icmp sle i32 %169, %170
  br i1 %171, label %176, label %172

172:                                              ; preds = %168
  %173 = load i8, i8* %22, align 1
  %174 = zext i8 %173 to i32
  %175 = icmp eq i32 %174, 1
  br label %176

176:                                              ; preds = %172, %168
  %177 = phi i1 [ true, %168 ], [ %175, %172 ]
  %178 = xor i1 %177, true
  %179 = zext i1 %178 to i32
  %180 = sext i32 %179 to i64
  %181 = call i64 @llvm.expect.i64(i64 %180, i64 0)
  %182 = icmp ne i64 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %176
  unreachable

184:                                              ; preds = %176
  br label %185

185:                                              ; preds = %184
  br label %186

186:                                              ; preds = %185
  br label %187

187:                                              ; preds = %186
  %188 = load i32, i32* %16, align 4
  %189 = load i32, i32* %13, align 4
  %190 = icmp sgt i32 %188, %189
  br i1 %190, label %195, label %191

191:                                              ; preds = %187
  %192 = load i8, i8* %22, align 1
  %193 = zext i8 %192 to i32
  %194 = icmp eq i32 %193, 0
  br label %195

195:                                              ; preds = %191, %187
  %196 = phi i1 [ true, %187 ], [ %194, %191 ]
  %197 = xor i1 %196, true
  %198 = zext i1 %197 to i32
  %199 = sext i32 %198 to i64
  %200 = call i64 @llvm.expect.i64(i64 %199, i64 0)
  %201 = icmp ne i64 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %195
  unreachable

203:                                              ; preds = %195
  br label %204

204:                                              ; preds = %203
  br label %205

205:                                              ; preds = %204
  %206 = load i8, i8* %22, align 1
  %207 = icmp ne i8 %206, 0
  br i1 %207, label %208, label %220

208:                                              ; preds = %205
  %209 = load i32, i32* %16, align 4
  %210 = load i32, i32* %15, align 4
  %211 = icmp sgt i32 %209, %210
  %212 = xor i1 %211, true
  %213 = xor i1 %212, true
  %214 = zext i1 %213 to i32
  %215 = sext i32 %214 to i64
  %216 = call i64 @llvm.expect.i64(i64 %215, i64 0)
  %217 = icmp ne i64 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %208
  br label %237

219:                                              ; preds = %208
  br label %220

220:                                              ; preds = %219, %205
  %221 = load %18*, %18** %17, align 8
  %222 = getelementptr inbounds %18, %18* %221, i32 1
  store %18* %222, %18** %17, align 8
  %223 = load %18*, %18** %17, align 8
  store %18* %223, %18** %18, align 8
  %224 = load %18*, %18** %18, align 8
  %225 = call i32 @152(%18* %224, i8* %10, i8* %21, i32 0)
  %226 = icmp ne i32 %225, 0
  %227 = xor i1 %226, true
  %228 = xor i1 %227, true
  %229 = xor i1 %228, true
  %230 = zext i1 %229 to i32
  %231 = sext i32 %230 to i64
  %232 = call i64 @llvm.expect.i64(i64 %231, i64 0)
  %233 = icmp ne i64 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %220
  store i32 1, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %237

235:                                              ; preds = %220
  br label %236

236:                                              ; preds = %235
  br label %237

237:                                              ; preds = %236, %234, %218, %164, %148, %88
  %238 = load i32, i32* %23, align 4
  %239 = icmp ne i32 %238, 0
  %240 = xor i1 %239, true
  %241 = xor i1 %240, true
  %242 = zext i1 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call i64 @llvm.expect.i64(i64 %243, i64 0)
  %245 = icmp ne i64 %244, 0
  br i1 %245, label %246, label %269

246:                                              ; preds = %237
  %247 = load i32, i32* %23, align 4
  %248 = icmp eq i32 %247, 2
  br i1 %248, label %249, label %252

249:                                              ; preds = %246
  %250 = load i32, i32* %16, align 4
  %251 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %250, i8* %251)
  br label %268

252:                                              ; preds = %246
  %253 = load i32, i32* %23, align 4
  %254 = icmp eq i32 %253, 3
  br i1 %254, label %255, label %259

255:                                              ; preds = %252
  %256 = load i32, i32* %16, align 4
  %257 = load i8*, i8** %20, align 8
  %258 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %256, i8* %257, %18* %258)
  br label %267

259:                                              ; preds = %252
  %260 = load i32, i32* %23, align 4
  %261 = icmp eq i32 %260, 4
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = load i32, i32* %16, align 4
  %264 = load i32, i32* %19, align 4
  %265 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %263, i32 %264, %18* %265)
  br label %266

266:                                              ; preds = %262, %259
  br label %267

267:                                              ; preds = %266, %255
  br label %268

268:                                              ; preds = %267, %249
  store i32 1, i32* %24, align 4
  br label %270

269:                                              ; preds = %237
  store i32 0, i32* %24, align 4
  br label %270

270:                                              ; preds = %269, %268
  %271 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  %272 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #13
  %273 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #13
  %274 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #13
  %275 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %275) #13
  %276 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #13
  %277 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #13
  %278 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #13
  %279 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #13
  %280 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #13
  %281 = load i32, i32* %24, align 4
  switch i32 %281, label %476 [
    i32 0, label %282
  ]

282:                                              ; preds = %270
  br label %283

283:                                              ; preds = %282
  br label %284

284:                                              ; preds = %283
  %285 = load %0*, %0** %6, align 8
  %286 = getelementptr inbounds %0, %0* %285, i32 0, i32 3
  %287 = getelementptr inbounds [1 x i8], [1 x i8]* %286, i32 0, i32 0
  store i8* %287, i8** %5, align 8
  %288 = load %0*, %0** %6, align 8
  %289 = getelementptr inbounds %0, %0* %288, i32 0, i32 3
  %290 = getelementptr inbounds [1 x i8], [1 x i8]* %289, i32 0, i32 0
  %291 = load %0*, %0** %6, align 8
  %292 = getelementptr inbounds %0, %0* %291, i32 0, i32 2
  %293 = load i64, i64* %292, align 8
  %294 = getelementptr inbounds i8, i8* %290, i64 %293
  store i8* %294, i8** %7, align 8
  br label %295

295:                                              ; preds = %334, %284
  %296 = load i8*, i8** %5, align 8
  %297 = load i8*, i8** %7, align 8
  %298 = icmp ult i8* %296, %297
  br i1 %298, label %299, label %337

299:                                              ; preds = %295
  %300 = load i8*, i8** %5, align 8
  %301 = load i8, i8* %300, align 1
  %302 = sext i8 %301 to i32
  %303 = icmp eq i32 %302, 13
  br i1 %303, label %304, label %316

304:                                              ; preds = %299
  %305 = load i8*, i8** %5, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 1
  %307 = load i8, i8* %306, align 1
  %308 = sext i8 %307 to i32
  %309 = icmp eq i32 %308, 10
  br i1 %309, label %310, label %313

310:                                              ; preds = %304
  %311 = load i8*, i8** %5, align 8
  %312 = getelementptr inbounds i8, i8* %311, i32 1
  store i8* %312, i8** %5, align 8
  br label %313

313:                                              ; preds = %310, %304
  %314 = load i64, i64* %9, align 8
  %315 = add i64 %314, 1
  store i64 %315, i64* %9, align 8
  br label %334

316:                                              ; preds = %299
  %317 = load i8*, i8** %5, align 8
  %318 = load i8, i8* %317, align 1
  %319 = sext i8 %318 to i32
  %320 = icmp eq i32 %319, 10
  br i1 %320, label %321, label %333

321:                                              ; preds = %316
  %322 = load i8*, i8** %5, align 8
  %323 = getelementptr inbounds i8, i8* %322, i64 1
  %324 = load i8, i8* %323, align 1
  %325 = sext i8 %324 to i32
  %326 = icmp eq i32 %325, 13
  br i1 %326, label %327, label %330

327:                                              ; preds = %321
  %328 = load i8*, i8** %5, align 8
  %329 = getelementptr inbounds i8, i8* %328, i32 1
  store i8* %329, i8** %5, align 8
  br label %330

330:                                              ; preds = %327, %321
  %331 = load i64, i64* %9, align 8
  %332 = add i64 %331, 1
  store i64 %332, i64* %9, align 8
  br label %333

333:                                              ; preds = %330, %316
  br label %334

334:                                              ; preds = %333, %313
  %335 = load i8*, i8** %5, align 8
  %336 = getelementptr inbounds i8, i8* %335, i32 1
  store i8* %336, i8** %5, align 8
  br label %295

337:                                              ; preds = %295
  %338 = load i64, i64* %9, align 8
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %377

340:                                              ; preds = %337
  br label %341

341:                                              ; preds = %340
  %342 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %342) #13
  %343 = load %18*, %18** %4, align 8
  store %18* %343, %18** %25, align 8
  %344 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %344) #13
  %345 = load %0*, %0** %6, align 8
  store %0* %345, %0** %26, align 8
  %346 = load %0*, %0** %26, align 8
  %347 = load %18*, %18** %25, align 8
  %348 = getelementptr inbounds %18, %18* %347, i32 0, i32 0
  %349 = bitcast %19* %348 to %0**
  store %0* %346, %0** %349, align 8
  %350 = load %0*, %0** %26, align 8
  %351 = getelementptr inbounds %0, %0* %350, i32 0, i32 0
  %352 = getelementptr inbounds %1, %1* %351, i32 0, i32 1
  %353 = bitcast %2* %352 to %52*
  %354 = getelementptr inbounds %52, %52* %353, i32 0, i32 1
  %355 = load i8, i8* %354, align 1
  %356 = zext i8 %355 to i32
  %357 = and i32 %356, 2
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %359, label %363

359:                                              ; preds = %341
  %360 = load %18*, %18** %25, align 8
  %361 = getelementptr inbounds %18, %18* %360, i32 0, i32 1
  %362 = bitcast %20* %361 to i32*
  store i32 6, i32* %362, align 8
  br label %372

363:                                              ; preds = %341
  %364 = load %0*, %0** %26, align 8
  %365 = getelementptr inbounds %0, %0* %364, i32 0, i32 0
  %366 = getelementptr inbounds %1, %1* %365, i32 0, i32 0
  %367 = load i32, i32* %366, align 8
  %368 = add i32 %367, 1
  store i32 %368, i32* %366, align 8
  %369 = load %18*, %18** %25, align 8
  %370 = getelementptr inbounds %18, %18* %369, i32 0, i32 1
  %371 = bitcast %20* %370 to i32*
  store i32 5126, i32* %371, align 8
  br label %372

372:                                              ; preds = %363, %359
  %373 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %373) #13
  %374 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %374) #13
  br label %375

375:                                              ; preds = %372
  br label %376

376:                                              ; preds = %375
  store i32 1, i32* %24, align 4
  br label %476

377:                                              ; preds = %337
  %378 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %378) #13
  %379 = load i8, i8* %10, align 1
  %380 = zext i8 %379 to i32
  %381 = icmp ne i32 %380, 0
  %382 = zext i1 %381 to i64
  %383 = select i1 %381, i64 6, i64 4
  store i64 %383, i64* %27, align 8
  %384 = load i64, i64* %9, align 8
  %385 = load i64, i64* %27, align 8
  %386 = load %0*, %0** %6, align 8
  %387 = getelementptr inbounds %0, %0* %386, i32 0, i32 2
  %388 = load i64, i64* %387, align 8
  %389 = call %0* @153(i64 %384, i64 %385, i64 %388, i32 0)
  store %0* %389, %0** %11, align 8
  %390 = load %0*, %0** %11, align 8
  %391 = getelementptr inbounds %0, %0* %390, i32 0, i32 3
  %392 = getelementptr inbounds [1 x i8], [1 x i8]* %391, i32 0, i32 0
  store i8* %392, i8** %8, align 8
  %393 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %393) #13
  %394 = load %0*, %0** %6, align 8
  %395 = getelementptr inbounds %0, %0* %394, i32 0, i32 3
  %396 = getelementptr inbounds [1 x i8], [1 x i8]* %395, i32 0, i32 0
  store i8* %396, i8** %5, align 8
  br label %397

397:                                              ; preds = %455, %377
  %398 = load i8*, i8** %5, align 8
  %399 = load i8*, i8** %7, align 8
  %400 = icmp ult i8* %398, %399
  br i1 %400, label %401, label %458

401:                                              ; preds = %397
  %402 = load i8*, i8** %5, align 8
  %403 = load i8, i8* %402, align 1
  %404 = sext i8 %403 to i32
  switch i32 %404, label %450 [
    i32 13, label %405
    i32 10, label %405
  ]

405:                                              ; preds = %401, %401
  %406 = load i8*, i8** %8, align 8
  %407 = getelementptr inbounds i8, i8* %406, i32 1
  store i8* %407, i8** %8, align 8
  store i8 60, i8* %406, align 1
  %408 = load i8*, i8** %8, align 8
  %409 = getelementptr inbounds i8, i8* %408, i32 1
  store i8* %409, i8** %8, align 8
  store i8 98, i8* %408, align 1
  %410 = load i8*, i8** %8, align 8
  %411 = getelementptr inbounds i8, i8* %410, i32 1
  store i8* %411, i8** %8, align 8
  store i8 114, i8* %410, align 1
  %412 = load i8, i8* %10, align 1
  %413 = icmp ne i8 %412, 0
  br i1 %413, label %414, label %419

414:                                              ; preds = %405
  %415 = load i8*, i8** %8, align 8
  %416 = getelementptr inbounds i8, i8* %415, i32 1
  store i8* %416, i8** %8, align 8
  store i8 32, i8* %415, align 1
  %417 = load i8*, i8** %8, align 8
  %418 = getelementptr inbounds i8, i8* %417, i32 1
  store i8* %418, i8** %8, align 8
  store i8 47, i8* %417, align 1
  br label %419

419:                                              ; preds = %414, %405
  %420 = load i8*, i8** %8, align 8
  %421 = getelementptr inbounds i8, i8* %420, i32 1
  store i8* %421, i8** %8, align 8
  store i8 62, i8* %420, align 1
  %422 = load i8*, i8** %5, align 8
  %423 = load i8, i8* %422, align 1
  %424 = sext i8 %423 to i32
  %425 = icmp eq i32 %424, 13
  br i1 %425, label %426, label %432

426:                                              ; preds = %419
  %427 = load i8*, i8** %5, align 8
  %428 = getelementptr inbounds i8, i8* %427, i64 1
  %429 = load i8, i8* %428, align 1
  %430 = sext i8 %429 to i32
  %431 = icmp eq i32 %430, 10
  br i1 %431, label %443, label %432

432:                                              ; preds = %426, %419
  %433 = load i8*, i8** %5, align 8
  %434 = load i8, i8* %433, align 1
  %435 = sext i8 %434 to i32
  %436 = icmp eq i32 %435, 10
  br i1 %436, label %437, label %449

437:                                              ; preds = %432
  %438 = load i8*, i8** %5, align 8
  %439 = getelementptr inbounds i8, i8* %438, i64 1
  %440 = load i8, i8* %439, align 1
  %441 = sext i8 %440 to i32
  %442 = icmp eq i32 %441, 13
  br i1 %442, label %443, label %449

443:                                              ; preds = %437, %426
  %444 = load i8*, i8** %5, align 8
  %445 = getelementptr inbounds i8, i8* %444, i32 1
  store i8* %445, i8** %5, align 8
  %446 = load i8, i8* %444, align 1
  %447 = load i8*, i8** %8, align 8
  %448 = getelementptr inbounds i8, i8* %447, i32 1
  store i8* %448, i8** %8, align 8
  store i8 %446, i8* %447, align 1
  br label %449

449:                                              ; preds = %443, %437, %432
  br label %450

450:                                              ; preds = %401, %449
  %451 = load i8*, i8** %5, align 8
  %452 = load i8, i8* %451, align 1
  %453 = load i8*, i8** %8, align 8
  %454 = getelementptr inbounds i8, i8* %453, i32 1
  store i8* %454, i8** %8, align 8
  store i8 %452, i8* %453, align 1
  br label %455

455:                                              ; preds = %450
  %456 = load i8*, i8** %5, align 8
  %457 = getelementptr inbounds i8, i8* %456, i32 1
  store i8* %457, i8** %5, align 8
  br label %397

458:                                              ; preds = %397
  %459 = load i8*, i8** %8, align 8
  store i8 0, i8* %459, align 1
  br label %460

460:                                              ; preds = %458
  %461 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %461) #13
  %462 = load %18*, %18** %4, align 8
  store %18* %462, %18** %28, align 8
  %463 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %463) #13
  %464 = load %0*, %0** %11, align 8
  store %0* %464, %0** %29, align 8
  %465 = load %0*, %0** %29, align 8
  %466 = load %18*, %18** %28, align 8
  %467 = getelementptr inbounds %18, %18* %466, i32 0, i32 0
  %468 = bitcast %19* %467 to %0**
  store %0* %465, %0** %468, align 8
  %469 = load %18*, %18** %28, align 8
  %470 = getelementptr inbounds %18, %18* %469, i32 0, i32 1
  %471 = bitcast %20* %470 to i32*
  store i32 5126, i32* %471, align 8
  %472 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %472) #13
  %473 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %473) #13
  br label %474

474:                                              ; preds = %460
  br label %475

475:                                              ; preds = %474
  store i32 1, i32* %24, align 4
  br label %476

476:                                              ; preds = %475, %376, %270
  %477 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %477) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #13
  %478 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %478) #13
  %479 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %479) #13
  %480 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %480) #13
  %481 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %481) #13
  %482 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %482) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strip_tags(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca %18*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %18*, align 8
  %16 = alloca %18*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %18*, align 8
  %24 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %25 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  store %18* null, %18** %7, align 8
  %28 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  store i8* null, i8** %8, align 8
  %29 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  store i64 0, i64* %9, align 8
  br label %30

30:                                               ; preds = %2
  %31 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 0, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 1, i32* %11, align 4
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  store i32 2, i32* %12, align 4
  %34 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = load %14*, %14** %3, align 8
  %36 = getelementptr inbounds %14, %14* %35, i32 0, i32 4
  %37 = getelementptr inbounds %18, %18* %36, i32 0, i32 2
  %38 = bitcast %21* %37 to i32*
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %13, align 4
  %40 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  %41 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  store %18* null, %18** %16, align 8
  %43 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %17, align 4
  %44 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #13
  store i8 0, i8* %20, align 1
  %45 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #13
  store i32 0, i32* %21, align 4
  %46 = load i32, i32* %14, align 4
  %47 = load %18*, %18** %15, align 8
  %48 = load %18*, %18** %16, align 8
  %49 = load i32, i32* %17, align 4
  %50 = load i8*, i8** %18, align 8
  %51 = load i8, i8* %19, align 1
  %52 = load i8, i8* %20, align 1
  br label %53

53:                                               ; preds = %30
  %54 = load i32, i32* %13, align 4
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 0)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %82, label %63

63:                                               ; preds = %53
  %64 = load i32, i32* %13, align 4
  %65 = load i32, i32* %12, align 4
  %66 = icmp sgt i32 %64, %65
  %67 = xor i1 %66, true
  %68 = xor i1 %67, true
  %69 = zext i1 %68 to i32
  %70 = sext i32 %69 to i64
  %71 = call i64 @llvm.expect.i64(i64 %70, i64 0)
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %86

73:                                               ; preds = %63
  %74 = load i32, i32* %12, align 4
  %75 = icmp sge i32 %74, 0
  %76 = xor i1 %75, true
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = call i64 @llvm.expect.i64(i64 %79, i64 1)
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %73, %53
  %83 = load i32, i32* %13, align 4
  %84 = load i32, i32* %11, align 4
  %85 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %83, i32 %84, i32 %85)
  store i32 1, i32* %21, align 4
  br label %220

86:                                               ; preds = %73, %63
  store i32 0, i32* %14, align 4
  %87 = load %14*, %14** %3, align 8
  %88 = bitcast %14* %87 to %18*
  %89 = getelementptr inbounds %18, %18* %88, i64 4
  store %18* %89, %18** %15, align 8
  %90 = load i32, i32* %14, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %14, align 4
  br label %92

92:                                               ; preds = %86
  %93 = load i32, i32* %14, align 4
  %94 = load i32, i32* %11, align 4
  %95 = icmp sle i32 %93, %94
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = load i8, i8* %20, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %98, 1
  br label %100

100:                                              ; preds = %96, %92
  %101 = phi i1 [ true, %92 ], [ %99, %96 ]
  %102 = xor i1 %101, true
  %103 = zext i1 %102 to i32
  %104 = sext i32 %103 to i64
  %105 = call i64 @llvm.expect.i64(i64 %104, i64 0)
  %106 = icmp ne i64 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %100
  unreachable

108:                                              ; preds = %100
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %14, align 4
  %113 = load i32, i32* %11, align 4
  %114 = icmp sgt i32 %112, %113
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = load i8, i8* %20, align 1
  %117 = zext i8 %116 to i32
  %118 = icmp eq i32 %117, 0
  br label %119

119:                                              ; preds = %115, %111
  %120 = phi i1 [ true, %111 ], [ %118, %115 ]
  %121 = xor i1 %120, true
  %122 = zext i1 %121 to i32
  %123 = sext i32 %122 to i64
  %124 = call i64 @llvm.expect.i64(i64 %123, i64 0)
  %125 = icmp ne i64 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %119
  unreachable

127:                                              ; preds = %119
  br label %128

128:                                              ; preds = %127
  br label %129

129:                                              ; preds = %128
  %130 = load i8, i8* %20, align 1
  %131 = icmp ne i8 %130, 0
  br i1 %131, label %132, label %144

132:                                              ; preds = %129
  %133 = load i32, i32* %14, align 4
  %134 = load i32, i32* %13, align 4
  %135 = icmp sgt i32 %133, %134
  %136 = xor i1 %135, true
  %137 = xor i1 %136, true
  %138 = zext i1 %137 to i32
  %139 = sext i32 %138 to i64
  %140 = call i64 @llvm.expect.i64(i64 %139, i64 0)
  %141 = icmp ne i64 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %132
  br label %220

143:                                              ; preds = %132
  br label %144

144:                                              ; preds = %143, %129
  %145 = load %18*, %18** %15, align 8
  %146 = getelementptr inbounds %18, %18* %145, i32 1
  store %18* %146, %18** %15, align 8
  %147 = load %18*, %18** %15, align 8
  store %18* %147, %18** %16, align 8
  %148 = load %18*, %18** %16, align 8
  %149 = call i32 @143(%18* %148, %0** %6, i32 0)
  %150 = icmp ne i32 %149, 0
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = xor i1 %152, true
  %154 = zext i1 %153 to i32
  %155 = sext i32 %154 to i64
  %156 = call i64 @llvm.expect.i64(i64 %155, i64 0)
  %157 = icmp ne i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %144
  store i32 2, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %220

159:                                              ; preds = %144
  store i8 1, i8* %20, align 1
  %160 = load i32, i32* %14, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %14, align 4
  br label %162

162:                                              ; preds = %159
  %163 = load i32, i32* %14, align 4
  %164 = load i32, i32* %11, align 4
  %165 = icmp sle i32 %163, %164
  br i1 %165, label %170, label %166

166:                                              ; preds = %162
  %167 = load i8, i8* %20, align 1
  %168 = zext i8 %167 to i32
  %169 = icmp eq i32 %168, 1
  br label %170

170:                                              ; preds = %166, %162
  %171 = phi i1 [ true, %162 ], [ %169, %166 ]
  %172 = xor i1 %171, true
  %173 = zext i1 %172 to i32
  %174 = sext i32 %173 to i64
  %175 = call i64 @llvm.expect.i64(i64 %174, i64 0)
  %176 = icmp ne i64 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %170
  unreachable

178:                                              ; preds = %170
  br label %179

179:                                              ; preds = %178
  br label %180

180:                                              ; preds = %179
  br label %181

181:                                              ; preds = %180
  %182 = load i32, i32* %14, align 4
  %183 = load i32, i32* %11, align 4
  %184 = icmp sgt i32 %182, %183
  br i1 %184, label %189, label %185

185:                                              ; preds = %181
  %186 = load i8, i8* %20, align 1
  %187 = zext i8 %186 to i32
  %188 = icmp eq i32 %187, 0
  br label %189

189:                                              ; preds = %185, %181
  %190 = phi i1 [ true, %181 ], [ %188, %185 ]
  %191 = xor i1 %190, true
  %192 = zext i1 %191 to i32
  %193 = sext i32 %192 to i64
  %194 = call i64 @llvm.expect.i64(i64 %193, i64 0)
  %195 = icmp ne i64 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %189
  unreachable

197:                                              ; preds = %189
  br label %198

198:                                              ; preds = %197
  br label %199

199:                                              ; preds = %198
  %200 = load i8, i8* %20, align 1
  %201 = icmp ne i8 %200, 0
  br i1 %201, label %202, label %214

202:                                              ; preds = %199
  %203 = load i32, i32* %14, align 4
  %204 = load i32, i32* %13, align 4
  %205 = icmp sgt i32 %203, %204
  %206 = xor i1 %205, true
  %207 = xor i1 %206, true
  %208 = zext i1 %207 to i32
  %209 = sext i32 %208 to i64
  %210 = call i64 @llvm.expect.i64(i64 %209, i64 0)
  %211 = icmp ne i64 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %202
  br label %220

213:                                              ; preds = %202
  br label %214

214:                                              ; preds = %213, %199
  %215 = load %18*, %18** %15, align 8
  %216 = getelementptr inbounds %18, %18* %215, i32 1
  store %18* %216, %18** %15, align 8
  %217 = load %18*, %18** %15, align 8
  store %18* %217, %18** %16, align 8
  %218 = load %18*, %18** %16, align 8
  call void @161(%18* %218, %18** %7, i32 0)
  br label %219

219:                                              ; preds = %214
  br label %220

220:                                              ; preds = %219, %212, %158, %142, %82
  %221 = load i32, i32* %21, align 4
  %222 = icmp ne i32 %221, 0
  %223 = xor i1 %222, true
  %224 = xor i1 %223, true
  %225 = zext i1 %224 to i32
  %226 = sext i32 %225 to i64
  %227 = call i64 @llvm.expect.i64(i64 %226, i64 0)
  %228 = icmp ne i64 %227, 0
  br i1 %228, label %229, label %252

229:                                              ; preds = %220
  %230 = load i32, i32* %21, align 4
  %231 = icmp eq i32 %230, 2
  br i1 %231, label %232, label %235

232:                                              ; preds = %229
  %233 = load i32, i32* %14, align 4
  %234 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %233, i8* %234)
  br label %251

235:                                              ; preds = %229
  %236 = load i32, i32* %21, align 4
  %237 = icmp eq i32 %236, 3
  br i1 %237, label %238, label %242

238:                                              ; preds = %235
  %239 = load i32, i32* %14, align 4
  %240 = load i8*, i8** %18, align 8
  %241 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %239, i8* %240, %18* %241)
  br label %250

242:                                              ; preds = %235
  %243 = load i32, i32* %21, align 4
  %244 = icmp eq i32 %243, 4
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = load i32, i32* %14, align 4
  %247 = load i32, i32* %17, align 4
  %248 = load %18*, %18** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %246, i32 %247, %18* %248)
  br label %249

249:                                              ; preds = %245, %242
  br label %250

250:                                              ; preds = %249, %238
  br label %251

251:                                              ; preds = %250, %232
  store i32 1, i32* %22, align 4
  br label %253

252:                                              ; preds = %220
  store i32 0, i32* %22, align 4
  br label %253

253:                                              ; preds = %252, %251
  %254 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %254) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  %255 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %255) #13
  %256 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %256) #13
  %257 = bitcast %18** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #13
  %258 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %258) #13
  %259 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %259) #13
  %260 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %260) #13
  %261 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %261) #13
  %262 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %262) #13
  %263 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #13
  %264 = load i32, i32* %22, align 4
  switch i32 %264, label %325 [
    i32 0, label %265
  ]

265:                                              ; preds = %253
  br label %266

266:                                              ; preds = %265
  br label %267

267:                                              ; preds = %266
  %268 = load %18*, %18** %7, align 8
  %269 = icmp ne %18* %268, null
  br i1 %269, label %270, label %290

270:                                              ; preds = %267
  %271 = load %18*, %18** %7, align 8
  %272 = call zeroext i8 @157(%18* %271)
  %273 = zext i8 %272 to i32
  %274 = icmp ne i32 %273, 6
  br i1 %274, label %275, label %277

275:                                              ; preds = %270
  %276 = load %18*, %18** %7, align 8
  call void @_convert_to_string(%18* %276)
  br label %277

277:                                              ; preds = %275, %270
  %278 = load %18*, %18** %7, align 8
  %279 = getelementptr inbounds %18, %18* %278, i32 0, i32 0
  %280 = bitcast %19* %279 to %0**
  %281 = load %0*, %0** %280, align 8
  %282 = getelementptr inbounds %0, %0* %281, i32 0, i32 3
  %283 = getelementptr inbounds [1 x i8], [1 x i8]* %282, i32 0, i32 0
  store i8* %283, i8** %8, align 8
  %284 = load %18*, %18** %7, align 8
  %285 = getelementptr inbounds %18, %18* %284, i32 0, i32 0
  %286 = bitcast %19* %285 to %0**
  %287 = load %0*, %0** %286, align 8
  %288 = getelementptr inbounds %0, %0* %287, i32 0, i32 2
  %289 = load i64, i64* %288, align 8
  store i64 %289, i64* %9, align 8
  br label %290

290:                                              ; preds = %277, %267
  %291 = load %0*, %0** %6, align 8
  %292 = getelementptr inbounds %0, %0* %291, i32 0, i32 3
  %293 = getelementptr inbounds [1 x i8], [1 x i8]* %292, i32 0, i32 0
  %294 = load %0*, %0** %6, align 8
  %295 = getelementptr inbounds %0, %0* %294, i32 0, i32 2
  %296 = load i64, i64* %295, align 8
  %297 = call %0* @148(i8* %293, i64 %296, i32 0)
  store %0* %297, %0** %5, align 8
  %298 = load %0*, %0** %5, align 8
  %299 = getelementptr inbounds %0, %0* %298, i32 0, i32 3
  %300 = getelementptr inbounds [1 x i8], [1 x i8]* %299, i32 0, i32 0
  %301 = load %0*, %0** %6, align 8
  %302 = getelementptr inbounds %0, %0* %301, i32 0, i32 2
  %303 = load i64, i64* %302, align 8
  %304 = load i8*, i8** %8, align 8
  %305 = load i64, i64* %9, align 8
  %306 = call i64 @php_strip_tags_ex(i8* %300, i64 %303, i8* null, i8* %304, i64 %305, i8 zeroext 0)
  %307 = load %0*, %0** %5, align 8
  %308 = getelementptr inbounds %0, %0* %307, i32 0, i32 2
  store i64 %306, i64* %308, align 8
  br label %309

309:                                              ; preds = %290
  %310 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %310) #13
  %311 = load %18*, %18** %4, align 8
  store %18* %311, %18** %23, align 8
  %312 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %312) #13
  %313 = load %0*, %0** %5, align 8
  store %0* %313, %0** %24, align 8
  %314 = load %0*, %0** %24, align 8
  %315 = load %18*, %18** %23, align 8
  %316 = getelementptr inbounds %18, %18* %315, i32 0, i32 0
  %317 = bitcast %19* %316 to %0**
  store %0* %314, %0** %317, align 8
  %318 = load %18*, %18** %23, align 8
  %319 = getelementptr inbounds %18, %18* %318, i32 0, i32 1
  %320 = bitcast %20* %319 to i32*
  store i32 5126, i32* %320, align 8
  %321 = bitcast %0** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %321) #13
  %322 = bitcast %18** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %322) #13
  br label %323

323:                                              ; preds = %309
  br label %324

324:                                              ; preds = %323
  store i32 1, i32* %22, align 4
  br label %325

325:                                              ; preds = %324, %253
  %326 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %326) #13
  %327 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %327) #13
  %328 = bitcast %18** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %328) #13
  %329 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %329) #13
  %330 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %330) #13
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i64 @php_strip_tags_ex(i8* %0, i64 %1, i8* %2, i8* %3, i64 %4, i8 zeroext %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i8, align 1
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  store i8* %0, i8** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  store i8* %3, i8** %10, align 8
  store i64 %4, i64* %11, align 8
  store i8 %5, i8* %12, align 1
  %41 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  %44 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  %46 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  %47 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #13
  store i32 0, i32* %21, align 4
  %48 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #13
  store i8 0, i8* %23, align 1
  %49 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  %50 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store i64 0, i64* %25, align 8
  %51 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  store i8* null, i8** %26, align 8
  %52 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %28) #13
  store i8 0, i8* %28, align 1
  %53 = load i8*, i8** %9, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %6
  %56 = load i8*, i8** %9, align 8
  %57 = load i8, i8* %56, align 1
  store i8 %57, i8* %23, align 1
  br label %58

58:                                               ; preds = %55, %6
  %59 = load i8*, i8** %7, align 8
  %60 = load i64, i64* %8, align 8
  %61 = call noalias i8* @_estrndup(i8* %59, i64 %60)
  store i8* %61, i8** %14, align 8
  %62 = load i8*, i8** %14, align 8
  %63 = load i8, i8* %62, align 1
  store i8 %63, i8* %18, align 1
  store i8 0, i8* %19, align 1
  %64 = load i8*, i8** %14, align 8
  store i8* %64, i8** %15, align 8
  %65 = load i8*, i8** %7, align 8
  store i8* %65, i8** %17, align 8
  store i32 0, i32* %20, align 4
  %66 = load i8*, i8** %10, align 8
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %82

68:                                               ; preds = %58
  %69 = load i8*, i8** %10, align 8
  %70 = load i64, i64* %11, align 8
  %71 = call i8* @zend_str_tolower_dup_ex(i8* %69, i64 %70)
  store i8* %71, i8** %26, align 8
  %72 = load i8*, i8** %26, align 8
  %73 = icmp ne i8* %72, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %68
  %75 = load i8*, i8** %26, align 8
  br label %78

76:                                               ; preds = %68
  %77 = load i8*, i8** %10, align 8
  br label %78

78:                                               ; preds = %76, %74
  %79 = phi i8* [ %75, %74 ], [ %77, %76 ]
  store i8* %79, i8** %27, align 8
  %80 = call noalias i8* @_emalloc_1024()
  store i8* %80, i8** %13, align 8
  %81 = load i8*, i8** %13, align 8
  store i8* %81, i8** %16, align 8
  br label %83

82:                                               ; preds = %58
  store i8* null, i8** %16, align 8
  store i8* null, i8** %13, align 8
  br label %83

83:                                               ; preds = %82, %78
  br label %84

84:                                               ; preds = %807, %83
  %85 = load i64, i64* %25, align 8
  %86 = load i64, i64* %8, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %88, label %813

88:                                               ; preds = %84
  %89 = load i8, i8* %18, align 1
  %90 = sext i8 %89 to i32
  switch i32 %90, label %760 [
    i32 0, label %807
    i32 60, label %91
    i32 40, label %157
    i32 41, label %220
    i32 62, label %283
    i32 34, label %419
    i32 39, label %419
    i32 33, label %538
    i32 45, label %602
    i32 63, label %626
    i32 69, label %643
    i32 101, label %643
    i32 108, label %744
    i32 76, label %744
  ]

91:                                               ; preds = %88
  %92 = load i32, i32* %22, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  br label %807

95:                                               ; preds = %91
  %96 = call i16** @__ctype_b_loc() #17
  %97 = load i16*, i16** %96, align 8
  %98 = load i8*, i8** %15, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i16, i16* %97, i64 %102
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i32
  %106 = and i32 %105, 8192
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %95
  %109 = load i8, i8* %12, align 1
  %110 = icmp ne i8 %109, 0
  br i1 %110, label %112, label %111

111:                                              ; preds = %108
  br label %761

112:                                              ; preds = %108, %95
  %113 = load i8, i8* %23, align 1
  %114 = zext i8 %113 to i32
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %148

116:                                              ; preds = %112
  store i8 60, i8* %19, align 1
  store i8 1, i8* %23, align 1
  %117 = load i8*, i8** %10, align 8
  %118 = icmp ne i8* %117, null
  br i1 %118, label %119, label %147

119:                                              ; preds = %116
  %120 = load i8*, i8** %16, align 8
  %121 = load i8*, i8** %13, align 8
  %122 = ptrtoint i8* %120 to i64
  %123 = ptrtoint i8* %121 to i64
  %124 = sub i64 %122, %123
  %125 = icmp sge i64 %124, 1023
  br i1 %125, label %126, label %144

126:                                              ; preds = %119
  %127 = load i8*, i8** %16, align 8
  %128 = load i8*, i8** %13, align 8
  %129 = ptrtoint i8* %127 to i64
  %130 = ptrtoint i8* %128 to i64
  %131 = sub i64 %129, %130
  store i64 %131, i64* %24, align 8
  %132 = load i8*, i8** %13, align 8
  %133 = load i8*, i8** %16, align 8
  %134 = load i8*, i8** %13, align 8
  %135 = ptrtoint i8* %133 to i64
  %136 = ptrtoint i8* %134 to i64
  %137 = sub i64 %135, %136
  %138 = add nsw i64 %137, 1023
  %139 = add nsw i64 %138, 1
  %140 = call i8* @_erealloc(i8* %132, i64 %139) #15
  store i8* %140, i8** %13, align 8
  %141 = load i8*, i8** %13, align 8
  %142 = load i64, i64* %24, align 8
  %143 = getelementptr inbounds i8, i8* %141, i64 %142
  store i8* %143, i8** %16, align 8
  br label %144

144:                                              ; preds = %126, %119
  %145 = load i8*, i8** %16, align 8
  %146 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %146, i8** %16, align 8
  store i8 60, i8* %145, align 1
  br label %147

147:                                              ; preds = %144, %116
  br label %156

148:                                              ; preds = %112
  %149 = load i8, i8* %23, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %155

152:                                              ; preds = %148
  %153 = load i32, i32* %21, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %21, align 4
  br label %155

155:                                              ; preds = %152, %148
  br label %156

156:                                              ; preds = %155, %147
  br label %807

157:                                              ; preds = %88
  %158 = load i8, i8* %23, align 1
  %159 = zext i8 %158 to i32
  %160 = icmp eq i32 %159, 2
  br i1 %160, label %161, label %173

161:                                              ; preds = %157
  %162 = load i8, i8* %19, align 1
  %163 = sext i8 %162 to i32
  %164 = icmp ne i32 %163, 34
  br i1 %164, label %165, label %172

165:                                              ; preds = %161
  %166 = load i8, i8* %19, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp ne i32 %167, 39
  br i1 %168, label %169, label %172

169:                                              ; preds = %165
  store i8 40, i8* %19, align 1
  %170 = load i32, i32* %20, align 4
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %20, align 4
  br label %172

172:                                              ; preds = %169, %165, %161
  br label %219

173:                                              ; preds = %157
  %174 = load i8*, i8** %10, align 8
  %175 = icmp ne i8* %174, null
  br i1 %175, label %176, label %209

176:                                              ; preds = %173
  %177 = load i8, i8* %23, align 1
  %178 = zext i8 %177 to i32
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %180, label %209

180:                                              ; preds = %176
  %181 = load i8*, i8** %16, align 8
  %182 = load i8*, i8** %13, align 8
  %183 = ptrtoint i8* %181 to i64
  %184 = ptrtoint i8* %182 to i64
  %185 = sub i64 %183, %184
  %186 = icmp sge i64 %185, 1023
  br i1 %186, label %187, label %205

187:                                              ; preds = %180
  %188 = load i8*, i8** %16, align 8
  %189 = load i8*, i8** %13, align 8
  %190 = ptrtoint i8* %188 to i64
  %191 = ptrtoint i8* %189 to i64
  %192 = sub i64 %190, %191
  store i64 %192, i64* %24, align 8
  %193 = load i8*, i8** %13, align 8
  %194 = load i8*, i8** %16, align 8
  %195 = load i8*, i8** %13, align 8
  %196 = ptrtoint i8* %194 to i64
  %197 = ptrtoint i8* %195 to i64
  %198 = sub i64 %196, %197
  %199 = add nsw i64 %198, 1023
  %200 = add nsw i64 %199, 1
  %201 = call i8* @_erealloc(i8* %193, i64 %200) #15
  store i8* %201, i8** %13, align 8
  %202 = load i8*, i8** %13, align 8
  %203 = load i64, i64* %24, align 8
  %204 = getelementptr inbounds i8, i8* %202, i64 %203
  store i8* %204, i8** %16, align 8
  br label %205

205:                                              ; preds = %187, %180
  %206 = load i8, i8* %18, align 1
  %207 = load i8*, i8** %16, align 8
  %208 = getelementptr inbounds i8, i8* %207, i32 1
  store i8* %208, i8** %16, align 8
  store i8 %206, i8* %207, align 1
  br label %218

209:                                              ; preds = %176, %173
  %210 = load i8, i8* %23, align 1
  %211 = zext i8 %210 to i32
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %217

213:                                              ; preds = %209
  %214 = load i8, i8* %18, align 1
  %215 = load i8*, i8** %17, align 8
  %216 = getelementptr inbounds i8, i8* %215, i32 1
  store i8* %216, i8** %17, align 8
  store i8 %214, i8* %215, align 1
  br label %217

217:                                              ; preds = %213, %209
  br label %218

218:                                              ; preds = %217, %205
  br label %219

219:                                              ; preds = %218, %172
  br label %807

220:                                              ; preds = %88
  %221 = load i8, i8* %23, align 1
  %222 = zext i8 %221 to i32
  %223 = icmp eq i32 %222, 2
  br i1 %223, label %224, label %236

224:                                              ; preds = %220
  %225 = load i8, i8* %19, align 1
  %226 = sext i8 %225 to i32
  %227 = icmp ne i32 %226, 34
  br i1 %227, label %228, label %235

228:                                              ; preds = %224
  %229 = load i8, i8* %19, align 1
  %230 = sext i8 %229 to i32
  %231 = icmp ne i32 %230, 39
  br i1 %231, label %232, label %235

232:                                              ; preds = %228
  store i8 41, i8* %19, align 1
  %233 = load i32, i32* %20, align 4
  %234 = add nsw i32 %233, -1
  store i32 %234, i32* %20, align 4
  br label %235

235:                                              ; preds = %232, %228, %224
  br label %282

236:                                              ; preds = %220
  %237 = load i8*, i8** %10, align 8
  %238 = icmp ne i8* %237, null
  br i1 %238, label %239, label %272

239:                                              ; preds = %236
  %240 = load i8, i8* %23, align 1
  %241 = zext i8 %240 to i32
  %242 = icmp eq i32 %241, 1
  br i1 %242, label %243, label %272

243:                                              ; preds = %239
  %244 = load i8*, i8** %16, align 8
  %245 = load i8*, i8** %13, align 8
  %246 = ptrtoint i8* %244 to i64
  %247 = ptrtoint i8* %245 to i64
  %248 = sub i64 %246, %247
  %249 = icmp sge i64 %248, 1023
  br i1 %249, label %250, label %268

250:                                              ; preds = %243
  %251 = load i8*, i8** %16, align 8
  %252 = load i8*, i8** %13, align 8
  %253 = ptrtoint i8* %251 to i64
  %254 = ptrtoint i8* %252 to i64
  %255 = sub i64 %253, %254
  store i64 %255, i64* %24, align 8
  %256 = load i8*, i8** %13, align 8
  %257 = load i8*, i8** %16, align 8
  %258 = load i8*, i8** %13, align 8
  %259 = ptrtoint i8* %257 to i64
  %260 = ptrtoint i8* %258 to i64
  %261 = sub i64 %259, %260
  %262 = add nsw i64 %261, 1023
  %263 = add nsw i64 %262, 1
  %264 = call i8* @_erealloc(i8* %256, i64 %263) #15
  store i8* %264, i8** %13, align 8
  %265 = load i8*, i8** %13, align 8
  %266 = load i64, i64* %24, align 8
  %267 = getelementptr inbounds i8, i8* %265, i64 %266
  store i8* %267, i8** %16, align 8
  br label %268

268:                                              ; preds = %250, %243
  %269 = load i8, i8* %18, align 1
  %270 = load i8*, i8** %16, align 8
  %271 = getelementptr inbounds i8, i8* %270, i32 1
  store i8* %271, i8** %16, align 8
  store i8 %269, i8* %270, align 1
  br label %281

272:                                              ; preds = %239, %236
  %273 = load i8, i8* %23, align 1
  %274 = zext i8 %273 to i32
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %280

276:                                              ; preds = %272
  %277 = load i8, i8* %18, align 1
  %278 = load i8*, i8** %17, align 8
  %279 = getelementptr inbounds i8, i8* %278, i32 1
  store i8* %279, i8** %17, align 8
  store i8 %277, i8* %278, align 1
  br label %280

280:                                              ; preds = %276, %272
  br label %281

281:                                              ; preds = %280, %268
  br label %282

282:                                              ; preds = %281, %235
  br label %807

283:                                              ; preds = %88
  %284 = load i32, i32* %21, align 4
  %285 = icmp ne i32 %284, 0
  br i1 %285, label %286, label %289

286:                                              ; preds = %283
  %287 = load i32, i32* %21, align 4
  %288 = add nsw i32 %287, -1
  store i32 %288, i32* %21, align 4
  br label %807

289:                                              ; preds = %283
  %290 = load i32, i32* %22, align 4
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  br label %807

293:                                              ; preds = %289
  %294 = load i8, i8* %23, align 1
  %295 = zext i8 %294 to i32
  switch i32 %295, label %414 [
    i32 1, label %296
    i32 2, label %371
    i32 3, label %392
    i32 4, label %394
  ]

296:                                              ; preds = %293
  store i8 62, i8* %19, align 1
  %297 = load i8, i8* %28, align 1
  %298 = sext i8 %297 to i32
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %300, label %312

300:                                              ; preds = %296
  %301 = load i8*, i8** %15, align 8
  %302 = load i8*, i8** %14, align 8
  %303 = getelementptr inbounds i8, i8* %302, i64 1
  %304 = icmp uge i8* %301, %303
  br i1 %304, label %305, label %312

305:                                              ; preds = %300
  %306 = load i8*, i8** %15, align 8
  %307 = getelementptr inbounds i8, i8* %306, i64 -1
  %308 = load i8, i8* %307, align 1
  %309 = sext i8 %308 to i32
  %310 = icmp eq i32 %309, 45
  br i1 %310, label %311, label %312

311:                                              ; preds = %305
  br label %418

312:                                              ; preds = %305, %300, %296
  store i8 0, i8* %28, align 1
  store i8 0, i8* %23, align 1
  store i32 0, i32* %22, align 4
  %313 = load i8*, i8** %10, align 8
  %314 = icmp ne i8* %313, null
  br i1 %314, label %315, label %370

315:                                              ; preds = %312
  %316 = load i8*, i8** %16, align 8
  %317 = load i8*, i8** %13, align 8
  %318 = ptrtoint i8* %316 to i64
  %319 = ptrtoint i8* %317 to i64
  %320 = sub i64 %318, %319
  %321 = icmp sge i64 %320, 1023
  br i1 %321, label %322, label %340

322:                                              ; preds = %315
  %323 = load i8*, i8** %16, align 8
  %324 = load i8*, i8** %13, align 8
  %325 = ptrtoint i8* %323 to i64
  %326 = ptrtoint i8* %324 to i64
  %327 = sub i64 %325, %326
  store i64 %327, i64* %24, align 8
  %328 = load i8*, i8** %13, align 8
  %329 = load i8*, i8** %16, align 8
  %330 = load i8*, i8** %13, align 8
  %331 = ptrtoint i8* %329 to i64
  %332 = ptrtoint i8* %330 to i64
  %333 = sub i64 %331, %332
  %334 = add nsw i64 %333, 1023
  %335 = add nsw i64 %334, 1
  %336 = call i8* @_erealloc(i8* %328, i64 %335) #15
  store i8* %336, i8** %13, align 8
  %337 = load i8*, i8** %13, align 8
  %338 = load i64, i64* %24, align 8
  %339 = getelementptr inbounds i8, i8* %337, i64 %338
  store i8* %339, i8** %16, align 8
  br label %340

340:                                              ; preds = %322, %315
  %341 = load i8*, i8** %16, align 8
  %342 = getelementptr inbounds i8, i8* %341, i32 1
  store i8* %342, i8** %16, align 8
  store i8 62, i8* %341, align 1
  %343 = load i8*, i8** %16, align 8
  store i8 0, i8* %343, align 1
  %344 = load i8*, i8** %13, align 8
  %345 = load i8*, i8** %16, align 8
  %346 = load i8*, i8** %13, align 8
  %347 = ptrtoint i8* %345 to i64
  %348 = ptrtoint i8* %346 to i64
  %349 = sub i64 %347, %348
  %350 = load i8*, i8** %27, align 8
  %351 = call i32 @php_tag_find(i8* %344, i64 %349, i8* %350)
  %352 = icmp ne i32 %351, 0
  br i1 %352, label %353, label %368

353:                                              ; preds = %340
  %354 = load i8*, i8** %17, align 8
  %355 = load i8*, i8** %13, align 8
  %356 = load i8*, i8** %16, align 8
  %357 = load i8*, i8** %13, align 8
  %358 = ptrtoint i8* %356 to i64
  %359 = ptrtoint i8* %357 to i64
  %360 = sub i64 %358, %359
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %354, i8* align 1 %355, i64 %360, i1 false)
  %361 = load i8*, i8** %16, align 8
  %362 = load i8*, i8** %13, align 8
  %363 = ptrtoint i8* %361 to i64
  %364 = ptrtoint i8* %362 to i64
  %365 = sub i64 %363, %364
  %366 = load i8*, i8** %17, align 8
  %367 = getelementptr inbounds i8, i8* %366, i64 %365
  store i8* %367, i8** %17, align 8
  br label %368

368:                                              ; preds = %353, %340
  %369 = load i8*, i8** %13, align 8
  store i8* %369, i8** %16, align 8
  br label %370

370:                                              ; preds = %368, %312
  br label %418

371:                                              ; preds = %293
  %372 = load i32, i32* %20, align 4
  %373 = icmp ne i32 %372, 0
  br i1 %373, label %391, label %374

374:                                              ; preds = %371
  %375 = load i8, i8* %19, align 1
  %376 = sext i8 %375 to i32
  %377 = icmp ne i32 %376, 34
  br i1 %377, label %378, label %391

378:                                              ; preds = %374
  %379 = load i8*, i8** %15, align 8
  %380 = load i8*, i8** %14, align 8
  %381 = getelementptr inbounds i8, i8* %380, i64 1
  %382 = icmp uge i8* %379, %381
  br i1 %382, label %383, label %391

383:                                              ; preds = %378
  %384 = load i8*, i8** %15, align 8
  %385 = getelementptr inbounds i8, i8* %384, i64 -1
  %386 = load i8, i8* %385, align 1
  %387 = sext i8 %386 to i32
  %388 = icmp eq i32 %387, 63
  br i1 %388, label %389, label %391

389:                                              ; preds = %383
  store i8 0, i8* %23, align 1
  store i32 0, i32* %22, align 4
  %390 = load i8*, i8** %13, align 8
  store i8* %390, i8** %16, align 8
  br label %391

391:                                              ; preds = %389, %383, %378, %374, %371
  br label %418

392:                                              ; preds = %293
  store i8 0, i8* %23, align 1
  store i32 0, i32* %22, align 4
  %393 = load i8*, i8** %13, align 8
  store i8* %393, i8** %16, align 8
  br label %418

394:                                              ; preds = %293
  %395 = load i8*, i8** %15, align 8
  %396 = load i8*, i8** %14, align 8
  %397 = getelementptr inbounds i8, i8* %396, i64 2
  %398 = icmp uge i8* %395, %397
  br i1 %398, label %399, label %413

399:                                              ; preds = %394
  %400 = load i8*, i8** %15, align 8
  %401 = getelementptr inbounds i8, i8* %400, i64 -1
  %402 = load i8, i8* %401, align 1
  %403 = sext i8 %402 to i32
  %404 = icmp eq i32 %403, 45
  br i1 %404, label %405, label %413

405:                                              ; preds = %399
  %406 = load i8*, i8** %15, align 8
  %407 = getelementptr inbounds i8, i8* %406, i64 -2
  %408 = load i8, i8* %407, align 1
  %409 = sext i8 %408 to i32
  %410 = icmp eq i32 %409, 45
  br i1 %410, label %411, label %413

411:                                              ; preds = %405
  store i8 0, i8* %23, align 1
  store i32 0, i32* %22, align 4
  %412 = load i8*, i8** %13, align 8
  store i8* %412, i8** %16, align 8
  br label %413

413:                                              ; preds = %411, %405, %399, %394
  br label %418

414:                                              ; preds = %293
  %415 = load i8, i8* %18, align 1
  %416 = load i8*, i8** %17, align 8
  %417 = getelementptr inbounds i8, i8* %416, i32 1
  store i8* %417, i8** %17, align 8
  store i8 %415, i8* %416, align 1
  br label %418

418:                                              ; preds = %414, %413, %392, %391, %370, %311
  br label %807

419:                                              ; preds = %88, %88
  %420 = load i8, i8* %23, align 1
  %421 = zext i8 %420 to i32
  %422 = icmp eq i32 %421, 4
  br i1 %422, label %423, label %424

423:                                              ; preds = %419
  br label %807

424:                                              ; preds = %419
  %425 = load i8, i8* %23, align 1
  %426 = zext i8 %425 to i32
  %427 = icmp eq i32 %426, 2
  br i1 %427, label %428, label %454

428:                                              ; preds = %424
  %429 = load i8*, i8** %15, align 8
  %430 = load i8*, i8** %14, align 8
  %431 = getelementptr inbounds i8, i8* %430, i64 1
  %432 = icmp uge i8* %429, %431
  br i1 %432, label %433, label %454

433:                                              ; preds = %428
  %434 = load i8*, i8** %15, align 8
  %435 = getelementptr inbounds i8, i8* %434, i64 -1
  %436 = load i8, i8* %435, align 1
  %437 = sext i8 %436 to i32
  %438 = icmp ne i32 %437, 92
  br i1 %438, label %439, label %454

439:                                              ; preds = %433
  %440 = load i8, i8* %19, align 1
  %441 = sext i8 %440 to i32
  %442 = load i8, i8* %18, align 1
  %443 = sext i8 %442 to i32
  %444 = icmp eq i32 %441, %443
  br i1 %444, label %445, label %446

445:                                              ; preds = %439
  store i8 0, i8* %19, align 1
  br label %453

446:                                              ; preds = %439
  %447 = load i8, i8* %19, align 1
  %448 = sext i8 %447 to i32
  %449 = icmp ne i32 %448, 92
  br i1 %449, label %450, label %452

450:                                              ; preds = %446
  %451 = load i8, i8* %18, align 1
  store i8 %451, i8* %19, align 1
  br label %452

452:                                              ; preds = %450, %446
  br label %453

453:                                              ; preds = %452, %445
  br label %500

454:                                              ; preds = %433, %428, %424
  %455 = load i8, i8* %23, align 1
  %456 = zext i8 %455 to i32
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %462

458:                                              ; preds = %454
  %459 = load i8, i8* %18, align 1
  %460 = load i8*, i8** %17, align 8
  %461 = getelementptr inbounds i8, i8* %460, i32 1
  store i8* %461, i8** %17, align 8
  store i8 %459, i8* %460, align 1
  br label %499

462:                                              ; preds = %454
  %463 = load i8*, i8** %10, align 8
  %464 = icmp ne i8* %463, null
  br i1 %464, label %465, label %498

465:                                              ; preds = %462
  %466 = load i8, i8* %23, align 1
  %467 = zext i8 %466 to i32
  %468 = icmp eq i32 %467, 1
  br i1 %468, label %469, label %498

469:                                              ; preds = %465
  %470 = load i8*, i8** %16, align 8
  %471 = load i8*, i8** %13, align 8
  %472 = ptrtoint i8* %470 to i64
  %473 = ptrtoint i8* %471 to i64
  %474 = sub i64 %472, %473
  %475 = icmp sge i64 %474, 1023
  br i1 %475, label %476, label %494

476:                                              ; preds = %469
  %477 = load i8*, i8** %16, align 8
  %478 = load i8*, i8** %13, align 8
  %479 = ptrtoint i8* %477 to i64
  %480 = ptrtoint i8* %478 to i64
  %481 = sub i64 %479, %480
  store i64 %481, i64* %24, align 8
  %482 = load i8*, i8** %13, align 8
  %483 = load i8*, i8** %16, align 8
  %484 = load i8*, i8** %13, align 8
  %485 = ptrtoint i8* %483 to i64
  %486 = ptrtoint i8* %484 to i64
  %487 = sub i64 %485, %486
  %488 = add nsw i64 %487, 1023
  %489 = add nsw i64 %488, 1
  %490 = call i8* @_erealloc(i8* %482, i64 %489) #15
  store i8* %490, i8** %13, align 8
  %491 = load i8*, i8** %13, align 8
  %492 = load i64, i64* %24, align 8
  %493 = getelementptr inbounds i8, i8* %491, i64 %492
  store i8* %493, i8** %16, align 8
  br label %494

494:                                              ; preds = %476, %469
  %495 = load i8, i8* %18, align 1
  %496 = load i8*, i8** %16, align 8
  %497 = getelementptr inbounds i8, i8* %496, i32 1
  store i8* %497, i8** %16, align 8
  store i8 %495, i8* %496, align 1
  br label %498

498:                                              ; preds = %494, %465, %462
  br label %499

499:                                              ; preds = %498, %458
  br label %500

500:                                              ; preds = %499, %453
  br label %501

501:                                              ; preds = %500
  %502 = load i8, i8* %23, align 1
  %503 = zext i8 %502 to i32
  %504 = icmp ne i32 %503, 0
  br i1 %504, label %505, label %537

505:                                              ; preds = %501
  %506 = load i8*, i8** %15, align 8
  %507 = load i8*, i8** %14, align 8
  %508 = icmp ne i8* %506, %507
  br i1 %508, label %509, label %537

509:                                              ; preds = %505
  %510 = load i8, i8* %23, align 1
  %511 = zext i8 %510 to i32
  %512 = icmp eq i32 %511, 1
  br i1 %512, label %519, label %513

513:                                              ; preds = %509
  %514 = load i8*, i8** %15, align 8
  %515 = getelementptr inbounds i8, i8* %514, i64 -1
  %516 = load i8, i8* %515, align 1
  %517 = sext i8 %516 to i32
  %518 = icmp ne i32 %517, 92
  br i1 %518, label %519, label %537

519:                                              ; preds = %513, %509
  %520 = load i32, i32* %22, align 4
  %521 = icmp ne i32 %520, 0
  br i1 %521, label %522, label %528

522:                                              ; preds = %519
  %523 = load i8*, i8** %15, align 8
  %524 = load i8, i8* %523, align 1
  %525 = sext i8 %524 to i32
  %526 = load i32, i32* %22, align 4
  %527 = icmp eq i32 %525, %526
  br i1 %527, label %528, label %537

528:                                              ; preds = %522, %519
  %529 = load i32, i32* %22, align 4
  %530 = icmp ne i32 %529, 0
  br i1 %530, label %531, label %532

531:                                              ; preds = %528
  store i32 0, i32* %22, align 4
  br label %536

532:                                              ; preds = %528
  %533 = load i8*, i8** %15, align 8
  %534 = load i8, i8* %533, align 1
  %535 = sext i8 %534 to i32
  store i32 %535, i32* %22, align 4
  br label %536

536:                                              ; preds = %532, %531
  br label %537

537:                                              ; preds = %536, %522, %513, %505, %501
  br label %807

538:                                              ; preds = %88
  %539 = load i8, i8* %23, align 1
  %540 = zext i8 %539 to i32
  %541 = icmp eq i32 %540, 1
  br i1 %541, label %542, label %555

542:                                              ; preds = %538
  %543 = load i8*, i8** %15, align 8
  %544 = load i8*, i8** %14, align 8
  %545 = getelementptr inbounds i8, i8* %544, i64 1
  %546 = icmp uge i8* %543, %545
  br i1 %546, label %547, label %555

547:                                              ; preds = %542
  %548 = load i8*, i8** %15, align 8
  %549 = getelementptr inbounds i8, i8* %548, i64 -1
  %550 = load i8, i8* %549, align 1
  %551 = sext i8 %550 to i32
  %552 = icmp eq i32 %551, 60
  br i1 %552, label %553, label %555

553:                                              ; preds = %547
  store i8 3, i8* %23, align 1
  %554 = load i8, i8* %18, align 1
  store i8 %554, i8* %19, align 1
  br label %601

555:                                              ; preds = %547, %542, %538
  %556 = load i8, i8* %23, align 1
  %557 = zext i8 %556 to i32
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %563

559:                                              ; preds = %555
  %560 = load i8, i8* %18, align 1
  %561 = load i8*, i8** %17, align 8
  %562 = getelementptr inbounds i8, i8* %561, i32 1
  store i8* %562, i8** %17, align 8
  store i8 %560, i8* %561, align 1
  br label %600

563:                                              ; preds = %555
  %564 = load i8*, i8** %10, align 8
  %565 = icmp ne i8* %564, null
  br i1 %565, label %566, label %599

566:                                              ; preds = %563
  %567 = load i8, i8* %23, align 1
  %568 = zext i8 %567 to i32
  %569 = icmp eq i32 %568, 1
  br i1 %569, label %570, label %599

570:                                              ; preds = %566
  %571 = load i8*, i8** %16, align 8
  %572 = load i8*, i8** %13, align 8
  %573 = ptrtoint i8* %571 to i64
  %574 = ptrtoint i8* %572 to i64
  %575 = sub i64 %573, %574
  %576 = icmp sge i64 %575, 1023
  br i1 %576, label %577, label %595

577:                                              ; preds = %570
  %578 = load i8*, i8** %16, align 8
  %579 = load i8*, i8** %13, align 8
  %580 = ptrtoint i8* %578 to i64
  %581 = ptrtoint i8* %579 to i64
  %582 = sub i64 %580, %581
  store i64 %582, i64* %24, align 8
  %583 = load i8*, i8** %13, align 8
  %584 = load i8*, i8** %16, align 8
  %585 = load i8*, i8** %13, align 8
  %586 = ptrtoint i8* %584 to i64
  %587 = ptrtoint i8* %585 to i64
  %588 = sub i64 %586, %587
  %589 = add nsw i64 %588, 1023
  %590 = add nsw i64 %589, 1
  %591 = call i8* @_erealloc(i8* %583, i64 %590) #15
  store i8* %591, i8** %13, align 8
  %592 = load i8*, i8** %13, align 8
  %593 = load i64, i64* %24, align 8
  %594 = getelementptr inbounds i8, i8* %592, i64 %593
  store i8* %594, i8** %16, align 8
  br label %595

595:                                              ; preds = %577, %570
  %596 = load i8, i8* %18, align 1
  %597 = load i8*, i8** %16, align 8
  %598 = getelementptr inbounds i8, i8* %597, i32 1
  store i8* %598, i8** %16, align 8
  store i8 %596, i8* %597, align 1
  br label %599

599:                                              ; preds = %595, %566, %563
  br label %600

600:                                              ; preds = %599, %559
  br label %601

601:                                              ; preds = %600, %553
  br label %807

602:                                              ; preds = %88
  %603 = load i8, i8* %23, align 1
  %604 = zext i8 %603 to i32
  %605 = icmp eq i32 %604, 3
  br i1 %605, label %606, label %624

606:                                              ; preds = %602
  %607 = load i8*, i8** %15, align 8
  %608 = load i8*, i8** %14, align 8
  %609 = getelementptr inbounds i8, i8* %608, i64 2
  %610 = icmp uge i8* %607, %609
  br i1 %610, label %611, label %624

611:                                              ; preds = %606
  %612 = load i8*, i8** %15, align 8
  %613 = getelementptr inbounds i8, i8* %612, i64 -1
  %614 = load i8, i8* %613, align 1
  %615 = sext i8 %614 to i32
  %616 = icmp eq i32 %615, 45
  br i1 %616, label %617, label %624

617:                                              ; preds = %611
  %618 = load i8*, i8** %15, align 8
  %619 = getelementptr inbounds i8, i8* %618, i64 -2
  %620 = load i8, i8* %619, align 1
  %621 = sext i8 %620 to i32
  %622 = icmp eq i32 %621, 33
  br i1 %622, label %623, label %624

623:                                              ; preds = %617
  store i8 4, i8* %23, align 1
  br label %625

624:                                              ; preds = %617, %611, %606, %602
  br label %761

625:                                              ; preds = %623
  br label %807

626:                                              ; preds = %88
  %627 = load i8, i8* %23, align 1
  %628 = zext i8 %627 to i32
  %629 = icmp eq i32 %628, 1
  br i1 %629, label %630, label %642

630:                                              ; preds = %626
  %631 = load i8*, i8** %15, align 8
  %632 = load i8*, i8** %14, align 8
  %633 = getelementptr inbounds i8, i8* %632, i64 1
  %634 = icmp uge i8* %631, %633
  br i1 %634, label %635, label %642

635:                                              ; preds = %630
  %636 = load i8*, i8** %15, align 8
  %637 = getelementptr inbounds i8, i8* %636, i64 -1
  %638 = load i8, i8* %637, align 1
  %639 = sext i8 %638 to i32
  %640 = icmp eq i32 %639, 60
  br i1 %640, label %641, label %642

641:                                              ; preds = %635
  store i32 0, i32* %20, align 4
  store i8 2, i8* %23, align 1
  br label %807

642:                                              ; preds = %635, %630, %626
  br label %643

643:                                              ; preds = %88, %88, %642
  %644 = load i8, i8* %23, align 1
  %645 = zext i8 %644 to i32
  %646 = icmp eq i32 %645, 3
  br i1 %646, label %647, label %743

647:                                              ; preds = %643
  %648 = load i8*, i8** %15, align 8
  %649 = load i8*, i8** %14, align 8
  %650 = getelementptr inbounds i8, i8* %649, i64 6
  %651 = icmp ugt i8* %648, %650
  br i1 %651, label %652, label %743

652:                                              ; preds = %647
  %653 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %653) #13
  %654 = call i32** @__ctype_tolower_loc() #17
  %655 = load i32*, i32** %654, align 8
  %656 = load i8*, i8** %15, align 8
  %657 = getelementptr inbounds i8, i8* %656, i64 -1
  %658 = load i8, i8* %657, align 1
  %659 = sext i8 %658 to i32
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds i32, i32* %655, i64 %660
  %662 = load i32, i32* %661, align 4
  store i32 %662, i32* %29, align 4
  %663 = load i32, i32* %29, align 4
  store i32 %663, i32* %30, align 4
  %664 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %664) #13
  %665 = load i32, i32* %30, align 4
  %666 = icmp eq i32 %665, 112
  br i1 %666, label %667, label %743

667:                                              ; preds = %652
  %668 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %668) #13
  %669 = call i32** @__ctype_tolower_loc() #17
  %670 = load i32*, i32** %669, align 8
  %671 = load i8*, i8** %15, align 8
  %672 = getelementptr inbounds i8, i8* %671, i64 -2
  %673 = load i8, i8* %672, align 1
  %674 = sext i8 %673 to i32
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds i32, i32* %670, i64 %675
  %677 = load i32, i32* %676, align 4
  store i32 %677, i32* %31, align 4
  %678 = load i32, i32* %31, align 4
  store i32 %678, i32* %32, align 4
  %679 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %679) #13
  %680 = load i32, i32* %32, align 4
  %681 = icmp eq i32 %680, 121
  br i1 %681, label %682, label %743

682:                                              ; preds = %667
  %683 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %683) #13
  %684 = call i32** @__ctype_tolower_loc() #17
  %685 = load i32*, i32** %684, align 8
  %686 = load i8*, i8** %15, align 8
  %687 = getelementptr inbounds i8, i8* %686, i64 -3
  %688 = load i8, i8* %687, align 1
  %689 = sext i8 %688 to i32
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds i32, i32* %685, i64 %690
  %692 = load i32, i32* %691, align 4
  store i32 %692, i32* %33, align 4
  %693 = load i32, i32* %33, align 4
  store i32 %693, i32* %34, align 4
  %694 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %694) #13
  %695 = load i32, i32* %34, align 4
  %696 = icmp eq i32 %695, 116
  br i1 %696, label %697, label %743

697:                                              ; preds = %682
  %698 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %698) #13
  %699 = call i32** @__ctype_tolower_loc() #17
  %700 = load i32*, i32** %699, align 8
  %701 = load i8*, i8** %15, align 8
  %702 = getelementptr inbounds i8, i8* %701, i64 -4
  %703 = load i8, i8* %702, align 1
  %704 = sext i8 %703 to i32
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds i32, i32* %700, i64 %705
  %707 = load i32, i32* %706, align 4
  store i32 %707, i32* %35, align 4
  %708 = load i32, i32* %35, align 4
  store i32 %708, i32* %36, align 4
  %709 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %709) #13
  %710 = load i32, i32* %36, align 4
  %711 = icmp eq i32 %710, 99
  br i1 %711, label %712, label %743

712:                                              ; preds = %697
  %713 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %713) #13
  %714 = call i32** @__ctype_tolower_loc() #17
  %715 = load i32*, i32** %714, align 8
  %716 = load i8*, i8** %15, align 8
  %717 = getelementptr inbounds i8, i8* %716, i64 -5
  %718 = load i8, i8* %717, align 1
  %719 = sext i8 %718 to i32
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds i32, i32* %715, i64 %720
  %722 = load i32, i32* %721, align 4
  store i32 %722, i32* %37, align 4
  %723 = load i32, i32* %37, align 4
  store i32 %723, i32* %38, align 4
  %724 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %724) #13
  %725 = load i32, i32* %38, align 4
  %726 = icmp eq i32 %725, 111
  br i1 %726, label %727, label %743

727:                                              ; preds = %712
  %728 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %728) #13
  %729 = call i32** @__ctype_tolower_loc() #17
  %730 = load i32*, i32** %729, align 8
  %731 = load i8*, i8** %15, align 8
  %732 = getelementptr inbounds i8, i8* %731, i64 -6
  %733 = load i8, i8* %732, align 1
  %734 = sext i8 %733 to i32
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds i32, i32* %730, i64 %735
  %737 = load i32, i32* %736, align 4
  store i32 %737, i32* %39, align 4
  %738 = load i32, i32* %39, align 4
  store i32 %738, i32* %40, align 4
  %739 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %739) #13
  %740 = load i32, i32* %40, align 4
  %741 = icmp eq i32 %740, 100
  br i1 %741, label %742, label %743

742:                                              ; preds = %727
  store i8 1, i8* %23, align 1
  br label %807

743:                                              ; preds = %727, %712, %697, %682, %667, %652, %647, %643
  br label %744

744:                                              ; preds = %88, %88, %743
  %745 = load i8, i8* %23, align 1
  %746 = zext i8 %745 to i32
  %747 = icmp eq i32 %746, 2
  br i1 %747, label %748, label %759

748:                                              ; preds = %744
  %749 = load i8*, i8** %15, align 8
  %750 = load i8*, i8** %14, align 8
  %751 = getelementptr inbounds i8, i8* %750, i64 4
  %752 = icmp ugt i8* %749, %751
  br i1 %752, label %753, label %759

753:                                              ; preds = %748
  %754 = load i8*, i8** %15, align 8
  %755 = getelementptr inbounds i8, i8* %754, i64 -4
  %756 = call i32 @strncasecmp(i8* %755, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @100, i32 0, i32 0), i64 4) #14
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %758, label %759

758:                                              ; preds = %753
  store i8 1, i8* %23, align 1
  store i8 1, i8* %28, align 1
  br label %807

759:                                              ; preds = %753, %748, %744
  br label %760

760:                                              ; preds = %88, %759
  br label %761

761:                                              ; preds = %760, %624, %111
  %762 = load i8, i8* %23, align 1
  %763 = zext i8 %762 to i32
  %764 = icmp eq i32 %763, 0
  br i1 %764, label %765, label %769

765:                                              ; preds = %761
  %766 = load i8, i8* %18, align 1
  %767 = load i8*, i8** %17, align 8
  %768 = getelementptr inbounds i8, i8* %767, i32 1
  store i8* %768, i8** %17, align 8
  store i8 %766, i8* %767, align 1
  br label %806

769:                                              ; preds = %761
  %770 = load i8*, i8** %10, align 8
  %771 = icmp ne i8* %770, null
  br i1 %771, label %772, label %805

772:                                              ; preds = %769
  %773 = load i8, i8* %23, align 1
  %774 = zext i8 %773 to i32
  %775 = icmp eq i32 %774, 1
  br i1 %775, label %776, label %805

776:                                              ; preds = %772
  %777 = load i8*, i8** %16, align 8
  %778 = load i8*, i8** %13, align 8
  %779 = ptrtoint i8* %777 to i64
  %780 = ptrtoint i8* %778 to i64
  %781 = sub i64 %779, %780
  %782 = icmp sge i64 %781, 1023
  br i1 %782, label %783, label %801

783:                                              ; preds = %776
  %784 = load i8*, i8** %16, align 8
  %785 = load i8*, i8** %13, align 8
  %786 = ptrtoint i8* %784 to i64
  %787 = ptrtoint i8* %785 to i64
  %788 = sub i64 %786, %787
  store i64 %788, i64* %24, align 8
  %789 = load i8*, i8** %13, align 8
  %790 = load i8*, i8** %16, align 8
  %791 = load i8*, i8** %13, align 8
  %792 = ptrtoint i8* %790 to i64
  %793 = ptrtoint i8* %791 to i64
  %794 = sub i64 %792, %793
  %795 = add nsw i64 %794, 1023
  %796 = add nsw i64 %795, 1
  %797 = call i8* @_erealloc(i8* %789, i64 %796) #15
  store i8* %797, i8** %13, align 8
  %798 = load i8*, i8** %13, align 8
  %799 = load i64, i64* %24, align 8
  %800 = getelementptr inbounds i8, i8* %798, i64 %799
  store i8* %800, i8** %16, align 8
  br label %801

801:                                              ; preds = %783, %776
  %802 = load i8, i8* %18, align 1
  %803 = load i8*, i8** %16, align 8
  %804 = getelementptr inbounds i8, i8* %803, i32 1
  store i8* %804, i8** %16, align 8
  store i8 %802, i8* %803, align 1
  br label %805

805:                                              ; preds = %801, %772, %769
  br label %806

806:                                              ; preds = %805, %765
  br label %807

807:                                              ; preds = %806, %758, %742, %88, %641, %625, %601, %537, %423, %418, %292, %286, %282, %219, %156, %94
  %808 = load i8*, i8** %15, align 8
  %809 = getelementptr inbounds i8, i8* %808, i32 1
  store i8* %809, i8** %15, align 8
  %810 = load i8, i8* %809, align 1
  store i8 %810, i8* %18, align 1
  %811 = load i64, i64* %25, align 8
  %812 = add i64 %811, 1
  store i64 %812, i64* %25, align 8
  br label %84

813:                                              ; preds = %84
  %814 = load i8*, i8** %17, align 8
  %815 = load i8*, i8** %7, align 8
  %816 = load i64, i64* %8, align 8
  %817 = getelementptr inbounds i8, i8* %815, i64 %816
  %818 = icmp ult i8* %814, %817
  br i1 %818, label %819, label %821

819:                                              ; preds = %813
  %820 = load i8*, i8** %17, align 8
  store i8 0, i8* %820, align 1
  br label %821

821:                                              ; preds = %819, %813
  %822 = load i8*, i8** %14, align 8
  call void @_efree(i8* %822)
  %823 = load i8*, i8** %10, align 8
  %824 = icmp ne i8* %823, null
  br i1 %824, label %825, label %832

825:                                              ; preds = %821
  %826 = load i8*, i8** %13, align 8
  call void @_efree(i8* %826)
  %827 = load i8*, i8** %26, align 8
  %828 = icmp ne i8* %827, null
  br i1 %828, label %829, label %831

829:                                              ; preds = %825
  %830 = load i8*, i8** %26, align 8
  call void @_efree(i8* %830)
  br label %831

831:                                              ; preds = %829, %825
  br label %832

832:                                              ; preds = %831, %821
  %833 = load i8*, i8** %9, align 8
  %834 = icmp ne i8* %833, null
  br i1 %834, label %835, label %838

835:                                              ; preds = %832
  %836 = load i8, i8* %23, align 1
  %837 = load i8*, i8** %9, align 8
  store i8 %836, i8* %837, align 1
  br label %838

838:                                              ; preds = %835, %832
  %839 = load i8*, i8** %17, align 8
  %840 = load i8*, i8** %7, align 8
  %841 = ptrtoint i8* %839 to i64
  %842 = ptrtoint i8* %840 to i64
  %843 = sub i64 %841, %842
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %28) #13
  %844 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %844) #13
  %845 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %845) #13
  %846 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %846) #13
  %847 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %847) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #13
  %848 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %848) #13
  %849 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %849) #13
  %850 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %850) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %851 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %851) #13
  %852 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %852) #13
  %853 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %853) #13
  %854 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %854) #13
  %855 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %855) #13
  ret i64 %843
}

; Function Attrs: nounwind uwtable
define hidden void @zif_setlocale(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %18*, align 8
  %7 = alloca %0*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %18*, align 8
  %19 = alloca %18*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i64, align 8
  %28 = alloca %18*, align 8
  %29 = alloca %0*, align 8
  %30 = alloca %18*, align 8
  %31 = alloca %0*, align 8
  %32 = alloca %18*, align 8
  %33 = alloca %0*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca %18*, align 8
  %36 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %37 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  store %18* null, %18** %5, align 8
  %38 = bitcast %18** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  %39 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #13
  %43 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %11, align 4
  %44 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  br label %45

45:                                               ; preds = %2
  %46 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  store i32 0, i32* %13, align 4
  %47 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #13
  store i32 2, i32* %14, align 4
  %48 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 -1, i32* %15, align 4
  %49 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  %50 = load %14*, %14** %3, align 8
  %51 = getelementptr inbounds %14, %14* %50, i32 0, i32 4
  %52 = getelementptr inbounds %18, %18* %51, i32 0, i32 2
  %53 = bitcast %21* %52 to i32*
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %16, align 4
  %55 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #13
  %56 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #13
  %57 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #13
  store %18* null, %18** %19, align 8
  %58 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #13
  store i32 0, i32* %20, align 4
  %59 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #13
  store i8* null, i8** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #13
  store i8 0, i8* %23, align 1
  %60 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #13
  store i32 0, i32* %24, align 4
  %61 = load i32, i32* %17, align 4
  %62 = load %18*, %18** %18, align 8
  %63 = load %18*, %18** %19, align 8
  %64 = load i32, i32* %20, align 4
  %65 = load i8*, i8** %21, align 8
  %66 = load i8, i8* %22, align 1
  %67 = load i8, i8* %23, align 1
  br label %68

68:                                               ; preds = %45
  %69 = load i32, i32* %16, align 4
  %70 = load i32, i32* %14, align 4
  %71 = icmp slt i32 %69, %70
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 0)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %97, label %78

78:                                               ; preds = %68
  %79 = load i32, i32* %16, align 4
  %80 = load i32, i32* %15, align 4
  %81 = icmp sgt i32 %79, %80
  %82 = xor i1 %81, true
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = call i64 @llvm.expect.i64(i64 %85, i64 0)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %101

88:                                               ; preds = %78
  %89 = load i32, i32* %15, align 4
  %90 = icmp sge i32 %89, 0
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  %93 = zext i1 %92 to i32
  %94 = sext i32 %93 to i64
  %95 = call i64 @llvm.expect.i64(i64 %94, i64 1)
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %88, %68
  %98 = load i32, i32* %16, align 4
  %99 = load i32, i32* %14, align 4
  %100 = load i32, i32* %15, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %98, i32 %99, i32 %100)
  store i32 1, i32* %24, align 4
  br label %206

101:                                              ; preds = %88, %78
  store i32 0, i32* %17, align 4
  %102 = load %14*, %14** %3, align 8
  %103 = bitcast %14* %102 to %18*
  %104 = getelementptr inbounds %18, %18* %103, i64 4
  store %18* %104, %18** %18, align 8
  %105 = load i32, i32* %17, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %17, align 4
  br label %107

107:                                              ; preds = %101
  %108 = load i32, i32* %17, align 4
  %109 = load i32, i32* %14, align 4
  %110 = icmp sle i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %23, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 1
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  %127 = load i32, i32* %17, align 4
  %128 = load i32, i32* %14, align 4
  %129 = icmp sgt i32 %127, %128
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = load i8, i8* %23, align 1
  %132 = zext i8 %131 to i32
  %133 = icmp eq i32 %132, 0
  br label %134

134:                                              ; preds = %130, %126
  %135 = phi i1 [ true, %126 ], [ %133, %130 ]
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %134
  unreachable

142:                                              ; preds = %134
  br label %143

143:                                              ; preds = %142
  br label %144

144:                                              ; preds = %143
  %145 = load i8, i8* %23, align 1
  %146 = icmp ne i8 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %144
  %148 = load i32, i32* %17, align 4
  %149 = load i32, i32* %16, align 4
  %150 = icmp sgt i32 %148, %149
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %147
  br label %206

158:                                              ; preds = %147
  br label %159

159:                                              ; preds = %158, %144
  %160 = load %18*, %18** %18, align 8
  %161 = getelementptr inbounds %18, %18* %160, i32 1
  store %18* %161, %18** %18, align 8
  %162 = load %18*, %18** %18, align 8
  store %18* %162, %18** %19, align 8
  %163 = load %18*, %18** %19, align 8
  %164 = call i32 @147(%18* %163, i64* %9, i8* %22, i32 0, i32 0)
  %165 = icmp ne i32 %164, 0
  %166 = xor i1 %165, true
  %167 = xor i1 %166, true
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %159
  store i32 0, i32* %20, align 4
  store i32 4, i32* %24, align 4
  br label %206

174:                                              ; preds = %159
  br label %175

175:                                              ; preds = %174
  %176 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %176) #13
  %177 = load i32, i32* %16, align 4
  %178 = load i32, i32* %17, align 4
  %179 = sub nsw i32 %177, %178
  %180 = sub nsw i32 %179, 0
  store i32 %180, i32* %25, align 4
  %181 = load i32, i32* %25, align 4
  %182 = icmp sgt i32 %181, 0
  %183 = xor i1 %182, true
  %184 = xor i1 %183, true
  %185 = zext i1 %184 to i32
  %186 = sext i32 %185 to i64
  %187 = call i64 @llvm.expect.i64(i64 %186, i64 1)
  %188 = icmp ne i64 %187, 0
  br i1 %188, label %189, label %200

189:                                              ; preds = %175
  %190 = load %18*, %18** %18, align 8
  %191 = getelementptr inbounds %18, %18* %190, i64 1
  store %18* %191, %18** %5, align 8
  %192 = load i32, i32* %25, align 4
  store i32 %192, i32* %10, align 4
  %193 = load i32, i32* %25, align 4
  %194 = load i32, i32* %17, align 4
  %195 = add nsw i32 %194, %193
  store i32 %195, i32* %17, align 4
  %196 = load i32, i32* %25, align 4
  %197 = load %18*, %18** %18, align 8
  %198 = sext i32 %196 to i64
  %199 = getelementptr inbounds %18, %18* %197, i64 %198
  store %18* %199, %18** %18, align 8
  br label %201

200:                                              ; preds = %175
  store %18* null, %18** %5, align 8
  store i32 0, i32* %10, align 4
  br label %201

201:                                              ; preds = %200, %189
  %202 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #13
  br label %203

203:                                              ; preds = %201
  br label %204

204:                                              ; preds = %203
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205, %173, %157, %97
  %207 = load i32, i32* %24, align 4
  %208 = icmp ne i32 %207, 0
  %209 = xor i1 %208, true
  %210 = xor i1 %209, true
  %211 = zext i1 %210 to i32
  %212 = sext i32 %211 to i64
  %213 = call i64 @llvm.expect.i64(i64 %212, i64 0)
  %214 = icmp ne i64 %213, 0
  br i1 %214, label %215, label %238

215:                                              ; preds = %206
  %216 = load i32, i32* %24, align 4
  %217 = icmp eq i32 %216, 2
  br i1 %217, label %218, label %221

218:                                              ; preds = %215
  %219 = load i32, i32* %17, align 4
  %220 = load i8*, i8** %21, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %219, i8* %220)
  br label %237

221:                                              ; preds = %215
  %222 = load i32, i32* %24, align 4
  %223 = icmp eq i32 %222, 3
  br i1 %223, label %224, label %228

224:                                              ; preds = %221
  %225 = load i32, i32* %17, align 4
  %226 = load i8*, i8** %21, align 8
  %227 = load %18*, %18** %19, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %225, i8* %226, %18* %227)
  br label %236

228:                                              ; preds = %221
  %229 = load i32, i32* %24, align 4
  %230 = icmp eq i32 %229, 4
  br i1 %230, label %231, label %235

231:                                              ; preds = %228
  %232 = load i32, i32* %17, align 4
  %233 = load i32, i32* %20, align 4
  %234 = load %18*, %18** %19, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %232, i32 %233, %18* %234)
  br label %235

235:                                              ; preds = %231, %228
  br label %236

236:                                              ; preds = %235, %224
  br label %237

237:                                              ; preds = %236, %218
  store i32 1, i32* %26, align 4
  br label %239

238:                                              ; preds = %206
  store i32 0, i32* %26, align 4
  br label %239

239:                                              ; preds = %238, %237
  %240 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %240) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  %241 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #13
  %242 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %242) #13
  %243 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %243) #13
  %244 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %244) #13
  %245 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %245) #13
  %246 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %246) #13
  %247 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %247) #13
  %248 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %248) #13
  %249 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %249) #13
  %250 = load i32, i32* %26, align 4
  switch i32 %250, label %551 [
    i32 0, label %251
  ]

251:                                              ; preds = %239
  br label %252

252:                                              ; preds = %251
  br label %253

253:                                              ; preds = %252
  store i32 0, i32* %12, align 4
  br label %254

254:                                              ; preds = %543, %253
  br label %255

255:                                              ; preds = %254
  %256 = load %18*, %18** %5, align 8
  %257 = getelementptr inbounds %18, %18* %256, i64 0
  %258 = call zeroext i8 @157(%18* %257)
  %259 = zext i8 %258 to i32
  %260 = icmp eq i32 %259, 7
  br i1 %260, label %261, label %304

261:                                              ; preds = %255
  br label %262

262:                                              ; preds = %289, %261
  %263 = load i32, i32* %12, align 4
  %264 = load %18*, %18** %5, align 8
  %265 = getelementptr inbounds %18, %18* %264, i64 0
  %266 = getelementptr inbounds %18, %18* %265, i32 0, i32 0
  %267 = bitcast %19* %266 to %43**
  %268 = load %43*, %43** %267, align 8
  %269 = getelementptr inbounds %43, %43* %268, i32 0, i32 4
  %270 = load i32, i32* %269, align 8
  %271 = icmp ult i32 %263, %270
  br i1 %271, label %272, label %292

272:                                              ; preds = %262
  %273 = load %18*, %18** %5, align 8
  %274 = getelementptr inbounds %18, %18* %273, i64 0
  %275 = getelementptr inbounds %18, %18* %274, i32 0, i32 0
  %276 = bitcast %19* %275 to %43**
  %277 = load %43*, %43** %276, align 8
  %278 = getelementptr inbounds %43, %43* %277, i32 0, i32 3
  %279 = load %45*, %45** %278, align 8
  %280 = load i32, i32* %12, align 4
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds %45, %45* %279, i64 %281
  %283 = getelementptr inbounds %45, %45* %282, i32 0, i32 0
  store %18* %283, %18** %6, align 8
  %284 = load %18*, %18** %6, align 8
  %285 = call zeroext i8 @157(%18* %284)
  %286 = zext i8 %285 to i32
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %272
  br label %292

289:                                              ; preds = %272
  %290 = load i32, i32* %12, align 4
  %291 = add i32 %290, 1
  store i32 %291, i32* %12, align 4
  br label %262

292:                                              ; preds = %288, %262
  %293 = load i32, i32* %12, align 4
  %294 = load %18*, %18** %5, align 8
  %295 = getelementptr inbounds %18, %18* %294, i64 0
  %296 = getelementptr inbounds %18, %18* %295, i32 0, i32 0
  %297 = bitcast %19* %296 to %43**
  %298 = load %43*, %43** %297, align 8
  %299 = getelementptr inbounds %43, %43* %298, i32 0, i32 4
  %300 = load i32, i32* %299, align 8
  %301 = icmp uge i32 %293, %300
  br i1 %301, label %302, label %303

302:                                              ; preds = %292
  br label %544

303:                                              ; preds = %292
  br label %309

304:                                              ; preds = %255
  %305 = load %18*, %18** %5, align 8
  %306 = load i32, i32* %11, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds %18, %18* %305, i64 %307
  store %18* %308, %18** %6, align 8
  br label %309

309:                                              ; preds = %304, %303
  %310 = load %18*, %18** %6, align 8
  %311 = call %0* @158(%18* %310)
  store %0* %311, %0** %7, align 8
  %312 = load %0*, %0** %7, align 8
  %313 = getelementptr inbounds %0, %0* %312, i32 0, i32 3
  %314 = getelementptr inbounds [1 x i8], [1 x i8]* %313, i32 0, i32 0
  %315 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @95, i32 0, i32 0), i8* %314) #14
  %316 = icmp ne i32 %315, 0
  br i1 %316, label %319, label %317

317:                                              ; preds = %309
  %318 = load %0*, %0** %7, align 8
  call void @159(%0* %318)
  store %0* null, %0** %7, align 8
  br label %327

319:                                              ; preds = %309
  %320 = load %0*, %0** %7, align 8
  %321 = getelementptr inbounds %0, %0* %320, i32 0, i32 2
  %322 = load i64, i64* %321, align 8
  %323 = icmp uge i64 %322, 255
  br i1 %323, label %324, label %326

324:                                              ; preds = %319
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @96, i32 0, i32 0))
  %325 = load %0*, %0** %7, align 8
  call void @159(%0* %325)
  br label %544

326:                                              ; preds = %319
  br label %327

327:                                              ; preds = %326, %317
  %328 = load i64, i64* %9, align 8
  %329 = trunc i64 %328 to i32
  %330 = load %0*, %0** %7, align 8
  %331 = icmp ne %0* %330, null
  br i1 %331, label %332, label %336

332:                                              ; preds = %327
  %333 = load %0*, %0** %7, align 8
  %334 = getelementptr inbounds %0, %0* %333, i32 0, i32 3
  %335 = getelementptr inbounds [1 x i8], [1 x i8]* %334, i32 0, i32 0
  br label %337

336:                                              ; preds = %327
  br label %337

337:                                              ; preds = %336, %332
  %338 = phi i8* [ %335, %332 ], [ null, %336 ]
  %339 = call i8* @setlocale(i32 %329, i8* %338) #13
  store i8* %339, i8** %8, align 8
  %340 = load i8*, i8** %8, align 8
  %341 = icmp ne i8* %340, null
  br i1 %341, label %342, label %522

342:                                              ; preds = %337
  %343 = load %0*, %0** %7, align 8
  %344 = icmp ne %0* %343, null
  br i1 %344, label %345, label %493

345:                                              ; preds = %342
  %346 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %346) #13
  %347 = load i8*, i8** %8, align 8
  %348 = call i64 @strlen(i8* %347) #14
  store i64 %348, i64* %27, align 8
  store i8 1, i8* getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 5), align 8
  %349 = load i64, i64* %9, align 8
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %354, label %351

351:                                              ; preds = %345
  %352 = load i64, i64* %9, align 8
  %353 = icmp eq i64 %352, 6
  br i1 %353, label %354, label %444

354:                                              ; preds = %351, %345
  %355 = load %0*, %0** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 4), align 8
  %356 = icmp ne %0* %355, null
  br i1 %356, label %357, label %359

357:                                              ; preds = %354
  %358 = load %0*, %0** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 4), align 8
  call void @159(%0* %358)
  br label %359

359:                                              ; preds = %357, %354
  %360 = load i64, i64* %27, align 8
  %361 = load %0*, %0** %7, align 8
  %362 = getelementptr inbounds %0, %0* %361, i32 0, i32 2
  %363 = load i64, i64* %362, align 8
  %364 = icmp eq i64 %360, %363
  br i1 %364, label %365, label %403

365:                                              ; preds = %359
  %366 = load %0*, %0** %7, align 8
  %367 = getelementptr inbounds %0, %0* %366, i32 0, i32 3
  %368 = getelementptr inbounds [1 x i8], [1 x i8]* %367, i32 0, i32 0
  %369 = load i8*, i8** %8, align 8
  %370 = load i64, i64* %27, align 8
  %371 = call i32 @memcmp(i8* %368, i8* %369, i64 %370) #14
  %372 = icmp ne i32 %371, 0
  br i1 %372, label %403, label %373

373:                                              ; preds = %365
  %374 = load %0*, %0** %7, align 8
  %375 = call %0* @163(%0* %374)
  store %0* %375, %0** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 4), align 8
  br label %376

376:                                              ; preds = %373
  %377 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %377) #13
  %378 = load %18*, %18** %4, align 8
  store %18* %378, %18** %28, align 8
  %379 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %379) #13
  %380 = load %0*, %0** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 4), align 8
  store %0* %380, %0** %29, align 8
  %381 = load %0*, %0** %29, align 8
  %382 = load %18*, %18** %28, align 8
  %383 = getelementptr inbounds %18, %18* %382, i32 0, i32 0
  %384 = bitcast %19* %383 to %0**
  store %0* %381, %0** %384, align 8
  %385 = load %0*, %0** %29, align 8
  %386 = getelementptr inbounds %0, %0* %385, i32 0, i32 0
  %387 = getelementptr inbounds %1, %1* %386, i32 0, i32 1
  %388 = bitcast %2* %387 to %52*
  %389 = getelementptr inbounds %52, %52* %388, i32 0, i32 1
  %390 = load i8, i8* %389, align 1
  %391 = zext i8 %390 to i32
  %392 = and i32 %391, 2
  %393 = icmp ne i32 %392, 0
  %394 = zext i1 %393 to i64
  %395 = select i1 %393, i32 6, i32 5126
  %396 = load %18*, %18** %28, align 8
  %397 = getelementptr inbounds %18, %18* %396, i32 0, i32 1
  %398 = bitcast %20* %397 to i32*
  store i32 %395, i32* %398, align 8
  %399 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %399) #13
  %400 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %400) #13
  br label %401

401:                                              ; preds = %376
  br label %402

402:                                              ; preds = %401
  store i32 1, i32* %26, align 4
  br label %489

403:                                              ; preds = %365, %359
  %404 = load i8*, i8** %8, align 8
  %405 = load i64, i64* %27, align 8
  %406 = call %0* @148(i8* %404, i64 %405, i32 0)
  store %0* %406, %0** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 4), align 8
  %407 = load %0*, %0** %7, align 8
  call void @159(%0* %407)
  br label %408

408:                                              ; preds = %403
  %409 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %409) #13
  %410 = load %18*, %18** %4, align 8
  store %18* %410, %18** %30, align 8
  %411 = bitcast %0** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %411) #13
  %412 = load %0*, %0** getelementptr inbounds (%3, %3* @basic_globals, i32 0, i32 4), align 8
  store %0* %412, %0** %31, align 8
  %413 = load %0*, %0** %31, align 8
  %414 = load %18*, %18** %30, align 8
  %415 = getelementptr inbounds %18, %18* %414, i32 0, i32 0
  %416 = bitcast %19* %415 to %0**
  store %0* %413, %0** %416, align 8
  %417 = load %0*, %0** %31, align 8
  %418 = getelementptr inbounds %0, %0* %417, i32 0, i32 0
  %419 = getelementptr inbounds %1, %1* %418, i32 0, i32 1
  %420 = bitcast %2* %419 to %52*
  %421 = getelementptr inbounds %52, %52* %420, i32 0, i32 1
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i32
  %424 = and i32 %423, 2
  %425 = icmp ne i32 %424, 0
  br i1 %425, label %426, label %430

426:                                              ; preds = %408
  %427 = load %18*, %18** %30, align 8
  %428 = getelementptr inbounds %18, %18* %427, i32 0, i32 1
  %429 = bitcast %20* %428 to i32*
  store i32 6, i32* %429, align 8
  br label %439

430:                                              ; preds = %408
  %431 = load %0*, %0** %31, align 8
  %432 = getelementptr inbounds %0, %0* %431, i32 0, i32 0
  %433 = getelementptr inbounds %1, %1* %432, i32 0, i32 0
  %434 = load i32, i32* %433, align 8
  %435 = add i32 %434, 1
  store i32 %435, i32* %433, align 8
  %436 = load %18*, %18** %30, align 8
  %437 = getelementptr inbounds %18, %18* %436, i32 0, i32 1
  %438 = bitcast %20* %437 to i32*
  store i32 5126, i32* %438, align 8
  br label %439

439:                                              ; preds = %430, %426
  %440 = bitcast %0** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %440) #13
  %441 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %441) #13
  br label %442

442:                                              ; preds = %439
  br label %443

443:                                              ; preds = %442
  store i32 1, i32* %26, align 4
  br label %489

444:                                              ; preds = %351
  %445 = load i64, i64* %27, align 8
  %446 = load %0*, %0** %7, align 8
  %447 = getelementptr inbounds %0, %0* %446, i32 0, i32 2
  %448 = load i64, i64* %447, align 8
  %449 = icmp eq i64 %445, %448
  br i1 %449, label %450, label %486

450:                                              ; preds = %444
  %451 = load %0*, %0** %7, align 8
  %452 = getelementptr inbounds %0, %0* %451, i32 0, i32 3
  %453 = getelementptr inbounds [1 x i8], [1 x i8]* %452, i32 0, i32 0
  %454 = load i8*, i8** %8, align 8
  %455 = load i64, i64* %27, align 8
  %456 = call i32 @memcmp(i8* %453, i8* %454, i64 %455) #14
  %457 = icmp ne i32 %456, 0
  br i1 %457, label %486, label %458

458:                                              ; preds = %450
  br label %459

459:                                              ; preds = %458
  %460 = bitcast %18** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %460) #13
  %461 = load %18*, %18** %4, align 8
  store %18* %461, %18** %32, align 8
  %462 = bitcast %0** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %462) #13
  %463 = load %0*, %0** %7, align 8
  store %0* %463, %0** %33, align 8
  %464 = load %0*, %0** %33, align 8
  %465 = load %18*, %18** %32, align 8
  %466 = getelementptr inbounds %18, %18* %465, i32 0, i32 0
  %467 = bitcast %19* %466 to %0**
  store %0* %464, %0** %467, align 8
  %468 = load %0*, %0** %33, align 8
  %469 = getelementptr inbounds %0, %0* %468, i32 0, i32 0
  %470 = getelementptr inbounds %1, %1* %469, i32 0, i32 1
  %471 = bitcast %2* %470 to %52*
  %472 = getelementptr inbounds %52, %52* %471, i32 0, i32 1
  %473 = load i8, i8* %472, align 1
  %474 = zext i8 %473 to i32
  %475 = and i32 %474, 2
  %476 = icmp ne i32 %475, 0
  %477 = zext i1 %476 to i64
  %478 = select i1 %476, i32 6, i32 5126
  %479 = load %18*, %18** %32, align 8
  %480 = getelementptr inbounds %18, %18* %479, i32 0, i32 1
  %481 = bitcast %20* %480 to i32*
  store i32 %478, i32* %481, align 8
  %482 = bitcast %0** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %482) #13
  %483 = bitcast %18** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %483) #13
  br label %484

484:                                              ; preds = %459
  br label %485

485:                                              ; preds = %484
  store i32 1, i32* %26, align 4
  br label %489

486:                                              ; preds = %450, %444
  br label %487

487:                                              ; preds = %486
  %488 = load %0*, %0** %7, align 8
  call void @159(%0* %488)
  store i32 0, i32* %26, align 4
  br label %489

489:                                              ; preds = %487, %485, %443, %402
  %490 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %490) #13
  %491 = load i32, i32* %26, align 4
  switch i32 %491, label %551 [
    i32 0, label %492
  ]

492:                                              ; preds = %489
  br label %493

493:                                              ; preds = %492, %342
  br label %494

494:                                              ; preds = %493
  %495 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %495) #13
  %496 = load i8*, i8** %8, align 8
  store i8* %496, i8** %34, align 8
  br label %497

497:                                              ; preds = %494
  br label %498

498:                                              ; preds = %497
  %499 = bitcast %18** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %499) #13
  %500 = load %18*, %18** %4, align 8
  store %18* %500, %18** %35, align 8
  %501 = bitcast %0** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %501) #13
  %502 = load i8*, i8** %34, align 8
  %503 = load i8*, i8** %34, align 8
  %504 = call i64 @strlen(i8* %503) #14
  %505 = call %0* @148(i8* %502, i64 %504, i32 0)
  store %0* %505, %0** %36, align 8
  %506 = load %0*, %0** %36, align 8
  %507 = load %18*, %18** %35, align 8
  %508 = getelementptr inbounds %18, %18* %507, i32 0, i32 0
  %509 = bitcast %19* %508 to %0**
  store %0* %506, %0** %509, align 8
  %510 = load %18*, %18** %35, align 8
  %511 = getelementptr inbounds %18, %18* %510, i32 0, i32 1
  %512 = bitcast %20* %511 to i32*
  store i32 5126, i32* %512, align 8
  %513 = bitcast %0** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %513) #13
  %514 = bitcast %18** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %514) #13
  br label %515

515:                                              ; preds = %498
  br label %516

516:                                              ; preds = %515
  br label %517

517:                                              ; preds = %516
  br label %518

518:                                              ; preds = %517
  %519 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %519) #13
  br label %520

520:                                              ; preds = %518
  br label %521

521:                                              ; preds = %520
  store i32 1, i32* %26, align 4
  br label %551

522:                                              ; preds = %337
  %523 = load %0*, %0** %7, align 8
  %524 = icmp ne %0* %523, null
  br i1 %524, label %525, label %527

525:                                              ; preds = %522
  %526 = load %0*, %0** %7, align 8
  call void @159(%0* %526)
  br label %527

527:                                              ; preds = %525, %522
  %528 = load %18*, %18** %5, align 8
  %529 = getelementptr inbounds %18, %18* %528, i64 0
  %530 = call zeroext i8 @157(%18* %529)
  %531 = zext i8 %530 to i32
  %532 = icmp eq i32 %531, 7
  br i1 %532, label %533, label %536

533:                                              ; preds = %527
  %534 = load i32, i32* %12, align 4
  %535 = add i32 %534, 1
  store i32 %535, i32* %12, align 4
  br label %543

536:                                              ; preds = %527
  %537 = load i32, i32* %11, align 4
  %538 = add nsw i32 %537, 1
  store i32 %538, i32* %11, align 4
  %539 = load i32, i32* %10, align 4
  %540 = icmp sge i32 %538, %539
  br i1 %540, label %541, label %542

541:                                              ; preds = %536
  br label %544

542:                                              ; preds = %536
  br label %543

543:                                              ; preds = %542, %533
  br label %254

544:                                              ; preds = %541, %324, %302
  br label %545

545:                                              ; preds = %544
  %546 = load %18*, %18** %4, align 8
  %547 = getelementptr inbounds %18, %18* %546, i32 0, i32 1
  %548 = bitcast %20* %547 to i32*
  store i32 2, i32* %548, align 8
  br label %549

549:                                              ; preds = %545
  br label %550

550:                                              ; preds = %549
  store i32 1, i32* %26, align 4
  br label %551

551:                                              ; preds = %550, %521, %489, %239
  %552 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %552) #13
  %553 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %553) #13
  %554 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %554) #13
  %555 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %555) #13
  %556 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %556) #13
  %557 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %557) #13
  %558 = bitcast %18** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %558) #13
  %559 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %559) #13
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind uwtable
define hidden void @zif_parse_str(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %18*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18, align 8
  %23 = alloca %43*, align 8
  %24 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %25 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast %18** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  store %18* null, %18** %6, align 8
  %27 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  store i8* null, i8** %7, align 8
  %28 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  br label %29

29:                                               ; preds = %2
  %30 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  store i32 0, i32* %9, align 4
  %31 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 1, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 2, i32* %11, align 4
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  %34 = load %14*, %14** %3, align 8
  %35 = getelementptr inbounds %14, %14* %34, i32 0, i32 4
  %36 = getelementptr inbounds %18, %18* %35, i32 0, i32 2
  %37 = bitcast %21* %36 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %12, align 4
  %39 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  %40 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  store %18* null, %18** %15, align 8
  %42 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #13
  store i32 0, i32* %16, align 4
  %43 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %44 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  store i32 0, i32* %20, align 4
  %45 = load i32, i32* %13, align 4
  %46 = load %18*, %18** %14, align 8
  %47 = load %18*, %18** %15, align 8
  %48 = load i32, i32* %16, align 4
  %49 = load i8*, i8** %17, align 8
  %50 = load i8, i8* %18, align 1
  %51 = load i8, i8* %19, align 1
  br label %52

52:                                               ; preds = %29
  %53 = load i32, i32* %12, align 4
  %54 = load i32, i32* %10, align 4
  %55 = icmp slt i32 %53, %54
  %56 = xor i1 %55, true
  %57 = xor i1 %56, true
  %58 = zext i1 %57 to i32
  %59 = sext i32 %58 to i64
  %60 = call i64 @llvm.expect.i64(i64 %59, i64 0)
  %61 = icmp ne i64 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %52
  %63 = load i32, i32* %12, align 4
  %64 = load i32, i32* %11, align 4
  %65 = icmp sgt i32 %63, %64
  %66 = xor i1 %65, true
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0)
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %85

72:                                               ; preds = %62
  %73 = load i32, i32* %11, align 4
  %74 = icmp sge i32 %73, 0
  %75 = xor i1 %74, true
  %76 = xor i1 %75, true
  %77 = zext i1 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = call i64 @llvm.expect.i64(i64 %78, i64 1)
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %72, %52
  %82 = load i32, i32* %12, align 4
  %83 = load i32, i32* %10, align 4
  %84 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %82, i32 %83, i32 %84)
  store i32 1, i32* %20, align 4
  br label %239

85:                                               ; preds = %72, %62
  store i32 0, i32* %13, align 4
  %86 = load %14*, %14** %3, align 8
  %87 = bitcast %14* %86 to %18*
  %88 = getelementptr inbounds %18, %18* %87, i64 4
  store %18* %88, %18** %14, align 8
  %89 = load i32, i32* %13, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %13, align 4
  br label %91

91:                                               ; preds = %85
  %92 = load i32, i32* %13, align 4
  %93 = load i32, i32* %10, align 4
  %94 = icmp sle i32 %92, %93
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = load i8, i8* %19, align 1
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %97, 1
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi i1 [ true, %91 ], [ %98, %95 ]
  %101 = xor i1 %100, true
  %102 = zext i1 %101 to i32
  %103 = sext i32 %102 to i64
  %104 = call i64 @llvm.expect.i64(i64 %103, i64 0)
  %105 = icmp ne i64 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %99
  unreachable

107:                                              ; preds = %99
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %13, align 4
  %112 = load i32, i32* %10, align 4
  %113 = icmp sgt i32 %111, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load i8, i8* %19, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp eq i32 %116, 0
  br label %118

118:                                              ; preds = %114, %110
  %119 = phi i1 [ true, %110 ], [ %117, %114 ]
  %120 = xor i1 %119, true
  %121 = zext i1 %120 to i32
  %122 = sext i32 %121 to i64
  %123 = call i64 @llvm.expect.i64(i64 %122, i64 0)
  %124 = icmp ne i64 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %118
  unreachable

126:                                              ; preds = %118
  br label %127

127:                                              ; preds = %126
  br label %128

128:                                              ; preds = %127
  %129 = load i8, i8* %19, align 1
  %130 = icmp ne i8 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %128
  %132 = load i32, i32* %13, align 4
  %133 = load i32, i32* %12, align 4
  %134 = icmp sgt i32 %132, %133
  %135 = xor i1 %134, true
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %131
  br label %239

142:                                              ; preds = %131
  br label %143

143:                                              ; preds = %142, %128
  %144 = load %18*, %18** %14, align 8
  %145 = getelementptr inbounds %18, %18* %144, i32 1
  store %18* %145, %18** %14, align 8
  %146 = load %18*, %18** %14, align 8
  store %18* %146, %18** %15, align 8
  %147 = load %18*, %18** %15, align 8
  %148 = call i32 @151(%18* %147, i8** %5, i64* %8, i32 0)
  %149 = icmp ne i32 %148, 0
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %143
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %239

158:                                              ; preds = %143
  store i8 1, i8* %19, align 1
  %159 = load i32, i32* %13, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %13, align 4
  br label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %13, align 4
  %163 = load i32, i32* %10, align 4
  %164 = icmp sle i32 %162, %163
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = load i8, i8* %19, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp eq i32 %167, 1
  br label %169

169:                                              ; preds = %165, %161
  %170 = phi i1 [ true, %161 ], [ %168, %165 ]
  %171 = xor i1 %170, true
  %172 = zext i1 %171 to i32
  %173 = sext i32 %172 to i64
  %174 = call i64 @llvm.expect.i64(i64 %173, i64 0)
  %175 = icmp ne i64 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %169
  unreachable

177:                                              ; preds = %169
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  br label %180

180:                                              ; preds = %179
  %181 = load i32, i32* %13, align 4
  %182 = load i32, i32* %10, align 4
  %183 = icmp sgt i32 %181, %182
  br i1 %183, label %188, label %184

184:                                              ; preds = %180
  %185 = load i8, i8* %19, align 1
  %186 = zext i8 %185 to i32
  %187 = icmp eq i32 %186, 0
  br label %188

188:                                              ; preds = %184, %180
  %189 = phi i1 [ true, %180 ], [ %187, %184 ]
  %190 = xor i1 %189, true
  %191 = zext i1 %190 to i32
  %192 = sext i32 %191 to i64
  %193 = call i64 @llvm.expect.i64(i64 %192, i64 0)
  %194 = icmp ne i64 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %188
  unreachable

196:                                              ; preds = %188
  br label %197

197:                                              ; preds = %196
  br label %198

198:                                              ; preds = %197
  %199 = load i8, i8* %19, align 1
  %200 = icmp ne i8 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %198
  %202 = load i32, i32* %13, align 4
  %203 = load i32, i32* %12, align 4
  %204 = icmp sgt i32 %202, %203
  %205 = xor i1 %204, true
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %201
  br label %239

212:                                              ; preds = %201
  br label %213

213:                                              ; preds = %212, %198
  %214 = load %18*, %18** %14, align 8
  %215 = getelementptr inbounds %18, %18* %214, i32 1
  store %18* %215, %18** %14, align 8
  %216 = load %18*, %18** %14, align 8
  store %18* %216, %18** %15, align 8
  br label %217

217:                                              ; preds = %213
  %218 = load %18*, %18** %15, align 8
  %219 = call zeroext i8 @157(%18* %218)
  %220 = zext i8 %219 to i32
  %221 = icmp eq i32 %220, 10
  %222 = xor i1 %221, true
  %223 = xor i1 %222, true
  %224 = zext i1 %223 to i32
  %225 = sext i32 %224 to i64
  %226 = call i64 @llvm.expect.i64(i64 %225, i64 0)
  %227 = icmp ne i64 %226, 0
  br i1 %227, label %228, label %234

228:                                              ; preds = %217
  %229 = load %18*, %18** %15, align 8
  %230 = getelementptr inbounds %18, %18* %229, i32 0, i32 0
  %231 = bitcast %19* %230 to %55**
  %232 = load %55*, %55** %231, align 8
  %233 = getelementptr inbounds %55, %55* %232, i32 0, i32 1
  store %18* %233, %18** %15, align 8
  br label %234

234:                                              ; preds = %228, %217
  br label %235

235:                                              ; preds = %234
  br label %236

236:                                              ; preds = %235
  %237 = load %18*, %18** %15, align 8
  call void @161(%18* %237, %18** %6, i32 0)
  br label %238

238:                                              ; preds = %236
  br label %239

239:                                              ; preds = %238, %211, %157, %141, %81
  %240 = load i32, i32* %20, align 4
  %241 = icmp ne i32 %240, 0
  %242 = xor i1 %241, true
  %243 = xor i1 %242, true
  %244 = zext i1 %243 to i32
  %245 = sext i32 %244 to i64
  %246 = call i64 @llvm.expect.i64(i64 %245, i64 0)
  %247 = icmp ne i64 %246, 0
  br i1 %247, label %248, label %271

248:                                              ; preds = %239
  %249 = load i32, i32* %20, align 4
  %250 = icmp eq i32 %249, 2
  br i1 %250, label %251, label %254

251:                                              ; preds = %248
  %252 = load i32, i32* %13, align 4
  %253 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %252, i8* %253)
  br label %270

254:                                              ; preds = %248
  %255 = load i32, i32* %20, align 4
  %256 = icmp eq i32 %255, 3
  br i1 %256, label %257, label %261

257:                                              ; preds = %254
  %258 = load i32, i32* %13, align 4
  %259 = load i8*, i8** %17, align 8
  %260 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %258, i8* %259, %18* %260)
  br label %269

261:                                              ; preds = %254
  %262 = load i32, i32* %20, align 4
  %263 = icmp eq i32 %262, 4
  br i1 %263, label %264, label %268

264:                                              ; preds = %261
  %265 = load i32, i32* %13, align 4
  %266 = load i32, i32* %16, align 4
  %267 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %265, i32 %266, %18* %267)
  br label %268

268:                                              ; preds = %264, %261
  br label %269

269:                                              ; preds = %268, %257
  br label %270

270:                                              ; preds = %269, %251
  store i32 1, i32* %21, align 4
  br label %272

271:                                              ; preds = %239
  store i32 0, i32* %21, align 4
  br label %272

272:                                              ; preds = %271, %270
  %273 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %274 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #13
  %275 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #13
  %276 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %276) #13
  %277 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %277) #13
  %278 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #13
  %279 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #13
  %280 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #13
  %281 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %281) #13
  %282 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #13
  %283 = load i32, i32* %21, align 4
  switch i32 %283, label %342 [
    i32 0, label %284
  ]

284:                                              ; preds = %272
  br label %285

285:                                              ; preds = %284
  br label %286

286:                                              ; preds = %285
  %287 = load i8*, i8** %5, align 8
  %288 = load i64, i64* %8, align 8
  %289 = call noalias i8* @_estrndup(i8* %287, i64 %288)
  store i8* %289, i8** %7, align 8
  %290 = load %18*, %18** %6, align 8
  %291 = icmp eq %18* %290, null
  br i1 %291, label %292, label %334

292:                                              ; preds = %286
  %293 = bitcast %18* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %293) #13
  %294 = bitcast %43** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %294) #13
  %295 = call i32 @zend_forbid_dynamic_call(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @97, i32 0, i32 0))
  %296 = icmp eq i32 %295, -1
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = load i8*, i8** %7, align 8
  call void @_efree(i8* %298)
  store i32 1, i32* %21, align 4
  br label %329

299:                                              ; preds = %292
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8192, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @98, i32 0, i32 0))
  %300 = call %43* @zend_rebuild_symbol_table()
  store %43* %300, %43** %23, align 8
  br label %301

301:                                              ; preds = %299
  %302 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %302) #13
  store %18* %22, %18** %24, align 8
  %303 = load %43*, %43** %23, align 8
  %304 = load %18*, %18** %24, align 8
  %305 = getelementptr inbounds %18, %18* %304, i32 0, i32 0
  %306 = bitcast %19* %305 to %43**
  store %43* %303, %43** %306, align 8
  %307 = load %18*, %18** %24, align 8
  %308 = getelementptr inbounds %18, %18* %307, i32 0, i32 1
  %309 = bitcast %20* %308 to i32*
  store i32 5127, i32* %309, align 8
  %310 = bitcast %18** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %310) #13
  br label %311

311:                                              ; preds = %301
  br label %312

312:                                              ; preds = %311
  %313 = load void (i32, i8*, %18*)*, void (i32, i8*, %18*)** getelementptr inbounds (%46, %46* @sapi_module, i32 0, i32 22), align 8
  %314 = load i8*, i8** %7, align 8
  call void %313(i32 3, i8* %314, %18* %22)
  %315 = load %43*, %43** %23, align 8
  %316 = load %0**, %0*** @zend_known_strings, align 8
  %317 = getelementptr inbounds %0*, %0** %316, i64 18
  %318 = load %0*, %0** %317, align 8
  %319 = call i32 @zend_hash_del(%43* %315, %0* %318)
  %320 = icmp eq i32 %319, 0
  %321 = xor i1 %320, true
  %322 = xor i1 %321, true
  %323 = zext i1 %322 to i32
  %324 = sext i32 %323 to i64
  %325 = call i64 @llvm.expect.i64(i64 %324, i64 0)
  %326 = icmp ne i64 %325, 0
  br i1 %326, label %327, label %328

327:                                              ; preds = %312
  call void (%25*, i8*, ...) @zend_throw_error(%25* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @99, i32 0, i32 0))
  br label %328

328:                                              ; preds = %327, %312
  store i32 0, i32* %21, align 4
  br label %329

329:                                              ; preds = %328, %297
  %330 = bitcast %43** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %330) #13
  %331 = bitcast %18* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %331) #13
  %332 = load i32, i32* %21, align 4
  switch i32 %332, label %342 [
    i32 0, label %333
  ]

333:                                              ; preds = %329
  br label %341

334:                                              ; preds = %286
  %335 = load %18*, %18** %6, align 8
  call void @_zval_ptr_dtor(%18* %335)
  %336 = load %18*, %18** %6, align 8
  %337 = call i32 @_array_init(%18* %336, i32 0)
  %338 = load void (i32, i8*, %18*)*, void (i32, i8*, %18*)** getelementptr inbounds (%46, %46* @sapi_module, i32 0, i32 22), align 8
  %339 = load i8*, i8** %7, align 8
  %340 = load %18*, %18** %6, align 8
  call void %338(i32 3, i8* %339, %18* %340)
  br label %341

341:                                              ; preds = %334, %333
  store i32 0, i32* %21, align 4
  br label %342

342:                                              ; preds = %341, %329, %272
  %343 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %343) #13
  %344 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %344) #13
  %345 = bitcast %18** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %345) #13
  %346 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %346) #13
  %347 = load i32, i32* %21, align 4
  switch i32 %347, label %349 [
    i32 0, label %348
    i32 1, label %348
  ]

348:                                              ; preds = %342, %342
  ret void

349:                                              ; preds = %342
  unreachable
}

declare dso_local i32 @zend_forbid_dynamic_call(i8*) #1

declare dso_local %43* @zend_rebuild_symbol_table() #1

declare dso_local i32 @zend_hash_del(%43*, %0*) #1

declare dso_local void @zend_throw_error(%25*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define hidden i32 @php_tag_find(i8* %0, i64 %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %8) #13
  %19 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #13
  %20 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #13
  store i32 0, i32* %11, align 4
  %22 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #13
  store i32 0, i32* %12, align 4
  %23 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = load i64, i64* %6, align 8
  %25 = icmp ule i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  store i32 1, i32* %14, align 4
  br label %128

27:                                               ; preds = %3
  %28 = load i64, i64* %6, align 8
  %29 = add i64 %28, 1
  %30 = call noalias i8* @_emalloc(i64 %29) #16
  store i8* %30, i8** %13, align 8
  %31 = load i8*, i8** %13, align 8
  store i8* %31, i8** %9, align 8
  %32 = load i8*, i8** %5, align 8
  store i8* %32, i8** %10, align 8
  %33 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #13
  %34 = call i32** @__ctype_tolower_loc() #17
  %35 = load i32*, i32** %34, align 8
  %36 = load i8*, i8** %10, align 8
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %35, i64 %39
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %15, align 4
  %42 = load i32, i32* %15, align 4
  store i32 %42, i32* %16, align 4
  %43 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %43) #13
  %44 = load i32, i32* %16, align 4
  %45 = trunc i32 %44 to i8
  store i8 %45, i8* %8, align 1
  br label %46

46:                                               ; preds = %100, %27
  %47 = load i32, i32* %12, align 4
  %48 = icmp ne i32 %47, 0
  %49 = xor i1 %48, true
  br i1 %49, label %50, label %115

50:                                               ; preds = %46
  %51 = load i8, i8* %8, align 1
  %52 = sext i8 %51 to i32
  switch i32 %52, label %58 [
    i32 60, label %53
    i32 62, label %57
  ]

53:                                               ; preds = %50
  %54 = load i8, i8* %8, align 1
  %55 = load i8*, i8** %9, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %9, align 8
  store i8 %54, i8* %55, align 1
  br label %100

57:                                               ; preds = %50
  store i32 1, i32* %12, align 4
  br label %100

58:                                               ; preds = %50
  %59 = call i16** @__ctype_b_loc() #17
  %60 = load i16*, i16** %59, align 8
  %61 = load i8, i8* %8, align 1
  %62 = sext i8 %61 to i32
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i16, i16* %60, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = and i32 %66, 8192
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %94, label %69

69:                                               ; preds = %58
  %70 = load i32, i32* %11, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  store i32 1, i32* %11, align 4
  br label %73

73:                                               ; preds = %72, %69
  %74 = load i8, i8* %8, align 1
  %75 = sext i8 %74 to i32
  %76 = icmp ne i32 %75, 47
  br i1 %76, label %89, label %77

77:                                               ; preds = %73
  %78 = load i8*, i8** %10, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 -1
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = icmp ne i32 %81, 60
  br i1 %82, label %83, label %93

83:                                               ; preds = %77
  %84 = load i8*, i8** %10, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 1
  %86 = load i8, i8* %85, align 1
  %87 = sext i8 %86 to i32
  %88 = icmp ne i32 %87, 62
  br i1 %88, label %89, label %93

89:                                               ; preds = %83, %73
  %90 = load i8, i8* %8, align 1
  %91 = load i8*, i8** %9, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** %9, align 8
  store i8 %90, i8* %91, align 1
  br label %93

93:                                               ; preds = %89, %83, %77
  br label %99

94:                                               ; preds = %58
  %95 = load i32, i32* %11, align 4
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  store i32 1, i32* %12, align 4
  br label %98

98:                                               ; preds = %97, %94
  br label %99

99:                                               ; preds = %98, %93
  br label %100

100:                                              ; preds = %99, %57, %53
  %101 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %101) #13
  %102 = call i32** @__ctype_tolower_loc() #17
  %103 = load i32*, i32** %102, align 8
  %104 = load i8*, i8** %10, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %10, align 8
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i32, i32* %103, i64 %108
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %17, align 4
  %111 = load i32, i32* %17, align 4
  store i32 %111, i32* %18, align 4
  %112 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %112) #13
  %113 = load i32, i32* %18, align 4
  %114 = trunc i32 %113 to i8
  store i8 %114, i8* %8, align 1
  br label %46

115:                                              ; preds = %46
  %116 = load i8*, i8** %9, align 8
  %117 = getelementptr inbounds i8, i8* %116, i32 1
  store i8* %117, i8** %9, align 8
  store i8 62, i8* %116, align 1
  %118 = load i8*, i8** %9, align 8
  store i8 0, i8* %118, align 1
  %119 = load i8*, i8** %7, align 8
  %120 = load i8*, i8** %13, align 8
  %121 = call i8* @strstr(i8* %119, i8* %120) #14
  %122 = icmp ne i8* %121, null
  br i1 %122, label %123, label %124

123:                                              ; preds = %115
  store i32 1, i32* %12, align 4
  br label %125

124:                                              ; preds = %115
  store i32 0, i32* %12, align 4
  br label %125

125:                                              ; preds = %124, %123
  %126 = load i8*, i8** %13, align 8
  call void @_efree(i8* %126)
  %127 = load i32, i32* %12, align 4
  store i32 %127, i32* %4, align 4
  store i32 1, i32* %14, align 4
  br label %128

128:                                              ; preds = %125, %26
  %129 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %129) #13
  %130 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %130) #13
  %131 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %131) #13
  %132 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #13
  %133 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %8) #13
  %134 = load i32, i32* %4, align 4
  ret i32 %134
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #6

; Function Attrs: nounwind uwtable
define dso_local i64 @php_strip_tags(i8* %0, i64 %1, i8* %2, i8* %3, i64 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  store i64 %4, i64* %10, align 8
  %11 = load i8*, i8** %6, align 8
  %12 = load i64, i64* %7, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = load i8*, i8** %9, align 8
  %15 = load i64, i64* %10, align 8
  %16 = call i64 @php_strip_tags_ex(i8* %11, i64 %12, i8* %13, i8* %14, i64 %15, i8 zeroext 0)
  ret i64 %16
}

declare dso_local i8* @zend_str_tolower_dup_ex(i8*, i64) #1

declare dso_local noalias i8* @_emalloc_1024() #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #6

; Function Attrs: nounwind uwtable
define hidden void @zif_str_getcsv(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %18*, align 8
  %21 = alloca %18*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %28 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %6) #13
  store i8 44, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #13
  store i8 34, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %8) #13
  store i8 92, i8* %8, align 1
  %29 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  store i8* null, i8** %9, align 8
  %30 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store i8* null, i8** %10, align 8
  %31 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  store i8* null, i8** %11, align 8
  %32 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  store i64 0, i64* %12, align 8
  %33 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  store i64 0, i64* %13, align 8
  %34 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  store i64 0, i64* %14, align 8
  br label %35

35:                                               ; preds = %2
  %36 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 0, i32* %15, align 4
  %37 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 1, i32* %16, align 4
  %38 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 4, i32* %17, align 4
  %39 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  %40 = load %14*, %14** %3, align 8
  %41 = getelementptr inbounds %14, %14* %40, i32 0, i32 4
  %42 = getelementptr inbounds %18, %18* %41, i32 0, i32 2
  %43 = bitcast %21* %42 to i32*
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %18, align 4
  %45 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #13
  %46 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  %47 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store %18* null, %18** %21, align 8
  %48 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %22, align 4
  %49 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  store i8* null, i8** %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %25) #13
  store i8 0, i8* %25, align 1
  %50 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #13
  store i32 0, i32* %26, align 4
  %51 = load i32, i32* %19, align 4
  %52 = load %18*, %18** %20, align 8
  %53 = load %18*, %18** %21, align 8
  %54 = load i32, i32* %22, align 4
  %55 = load i8*, i8** %23, align 8
  %56 = load i8, i8* %24, align 1
  %57 = load i8, i8* %25, align 1
  br label %58

58:                                               ; preds = %35
  %59 = load i32, i32* %18, align 4
  %60 = load i32, i32* %16, align 4
  %61 = icmp slt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %87, label %68

68:                                               ; preds = %58
  %69 = load i32, i32* %18, align 4
  %70 = load i32, i32* %17, align 4
  %71 = icmp sgt i32 %69, %70
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 0)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %91

78:                                               ; preds = %68
  %79 = load i32, i32* %17, align 4
  %80 = icmp sge i32 %79, 0
  %81 = xor i1 %80, true
  %82 = xor i1 %81, true
  %83 = zext i1 %82 to i32
  %84 = sext i32 %83 to i64
  %85 = call i64 @llvm.expect.i64(i64 %84, i64 1)
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %78, %58
  %88 = load i32, i32* %18, align 4
  %89 = load i32, i32* %16, align 4
  %90 = load i32, i32* %17, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %88, i32 %89, i32 %90)
  store i32 1, i32* %26, align 4
  br label %376

91:                                               ; preds = %78, %68
  store i32 0, i32* %19, align 4
  %92 = load %14*, %14** %3, align 8
  %93 = bitcast %14* %92 to %18*
  %94 = getelementptr inbounds %18, %18* %93, i64 4
  store %18* %94, %18** %20, align 8
  %95 = load i32, i32* %19, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %19, align 4
  br label %97

97:                                               ; preds = %91
  %98 = load i32, i32* %19, align 4
  %99 = load i32, i32* %16, align 4
  %100 = icmp sle i32 %98, %99
  br i1 %100, label %105, label %101

101:                                              ; preds = %97
  %102 = load i8, i8* %25, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp eq i32 %103, 1
  br label %105

105:                                              ; preds = %101, %97
  %106 = phi i1 [ true, %97 ], [ %104, %101 ]
  %107 = xor i1 %106, true
  %108 = zext i1 %107 to i32
  %109 = sext i32 %108 to i64
  %110 = call i64 @llvm.expect.i64(i64 %109, i64 0)
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %105
  unreachable

113:                                              ; preds = %105
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  %117 = load i32, i32* %19, align 4
  %118 = load i32, i32* %16, align 4
  %119 = icmp sgt i32 %117, %118
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = load i8, i8* %25, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp eq i32 %122, 0
  br label %124

124:                                              ; preds = %120, %116
  %125 = phi i1 [ true, %116 ], [ %123, %120 ]
  %126 = xor i1 %125, true
  %127 = zext i1 %126 to i32
  %128 = sext i32 %127 to i64
  %129 = call i64 @llvm.expect.i64(i64 %128, i64 0)
  %130 = icmp ne i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %124
  unreachable

132:                                              ; preds = %124
  br label %133

133:                                              ; preds = %132
  br label %134

134:                                              ; preds = %133
  %135 = load i8, i8* %25, align 1
  %136 = icmp ne i8 %135, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %134
  %138 = load i32, i32* %19, align 4
  %139 = load i32, i32* %18, align 4
  %140 = icmp sgt i32 %138, %139
  %141 = xor i1 %140, true
  %142 = xor i1 %141, true
  %143 = zext i1 %142 to i32
  %144 = sext i32 %143 to i64
  %145 = call i64 @llvm.expect.i64(i64 %144, i64 0)
  %146 = icmp ne i64 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %137
  br label %376

148:                                              ; preds = %137
  br label %149

149:                                              ; preds = %148, %134
  %150 = load %18*, %18** %20, align 8
  %151 = getelementptr inbounds %18, %18* %150, i32 1
  store %18* %151, %18** %20, align 8
  %152 = load %18*, %18** %20, align 8
  store %18* %152, %18** %21, align 8
  %153 = load %18*, %18** %21, align 8
  %154 = call i32 @143(%18* %153, %0** %5, i32 0)
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = zext i1 %158 to i32
  %160 = sext i32 %159 to i64
  %161 = call i64 @llvm.expect.i64(i64 %160, i64 0)
  %162 = icmp ne i64 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %149
  store i32 2, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %376

164:                                              ; preds = %149
  store i8 1, i8* %25, align 1
  %165 = load i32, i32* %19, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %19, align 4
  br label %167

167:                                              ; preds = %164
  %168 = load i32, i32* %19, align 4
  %169 = load i32, i32* %16, align 4
  %170 = icmp sle i32 %168, %169
  br i1 %170, label %175, label %171

171:                                              ; preds = %167
  %172 = load i8, i8* %25, align 1
  %173 = zext i8 %172 to i32
  %174 = icmp eq i32 %173, 1
  br label %175

175:                                              ; preds = %171, %167
  %176 = phi i1 [ true, %167 ], [ %174, %171 ]
  %177 = xor i1 %176, true
  %178 = zext i1 %177 to i32
  %179 = sext i32 %178 to i64
  %180 = call i64 @llvm.expect.i64(i64 %179, i64 0)
  %181 = icmp ne i64 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %175
  unreachable

183:                                              ; preds = %175
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  br label %186

186:                                              ; preds = %185
  %187 = load i32, i32* %19, align 4
  %188 = load i32, i32* %16, align 4
  %189 = icmp sgt i32 %187, %188
  br i1 %189, label %194, label %190

190:                                              ; preds = %186
  %191 = load i8, i8* %25, align 1
  %192 = zext i8 %191 to i32
  %193 = icmp eq i32 %192, 0
  br label %194

194:                                              ; preds = %190, %186
  %195 = phi i1 [ true, %186 ], [ %193, %190 ]
  %196 = xor i1 %195, true
  %197 = zext i1 %196 to i32
  %198 = sext i32 %197 to i64
  %199 = call i64 @llvm.expect.i64(i64 %198, i64 0)
  %200 = icmp ne i64 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %194
  unreachable

202:                                              ; preds = %194
  br label %203

203:                                              ; preds = %202
  br label %204

204:                                              ; preds = %203
  %205 = load i8, i8* %25, align 1
  %206 = icmp ne i8 %205, 0
  br i1 %206, label %207, label %219

207:                                              ; preds = %204
  %208 = load i32, i32* %19, align 4
  %209 = load i32, i32* %18, align 4
  %210 = icmp sgt i32 %208, %209
  %211 = xor i1 %210, true
  %212 = xor i1 %211, true
  %213 = zext i1 %212 to i32
  %214 = sext i32 %213 to i64
  %215 = call i64 @llvm.expect.i64(i64 %214, i64 0)
  %216 = icmp ne i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %207
  br label %376

218:                                              ; preds = %207
  br label %219

219:                                              ; preds = %218, %204
  %220 = load %18*, %18** %20, align 8
  %221 = getelementptr inbounds %18, %18* %220, i32 1
  store %18* %221, %18** %20, align 8
  %222 = load %18*, %18** %20, align 8
  store %18* %222, %18** %21, align 8
  %223 = load %18*, %18** %21, align 8
  %224 = call i32 @151(%18* %223, i8** %9, i64* %12, i32 0)
  %225 = icmp ne i32 %224, 0
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = xor i1 %227, true
  %229 = zext i1 %228 to i32
  %230 = sext i32 %229 to i64
  %231 = call i64 @llvm.expect.i64(i64 %230, i64 0)
  %232 = icmp ne i64 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %219
  store i32 2, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %376

234:                                              ; preds = %219
  %235 = load i32, i32* %19, align 4
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %19, align 4
  br label %237

237:                                              ; preds = %234
  %238 = load i32, i32* %19, align 4
  %239 = load i32, i32* %16, align 4
  %240 = icmp sle i32 %238, %239
  br i1 %240, label %245, label %241

241:                                              ; preds = %237
  %242 = load i8, i8* %25, align 1
  %243 = zext i8 %242 to i32
  %244 = icmp eq i32 %243, 1
  br label %245

245:                                              ; preds = %241, %237
  %246 = phi i1 [ true, %237 ], [ %244, %241 ]
  %247 = xor i1 %246, true
  %248 = zext i1 %247 to i32
  %249 = sext i32 %248 to i64
  %250 = call i64 @llvm.expect.i64(i64 %249, i64 0)
  %251 = icmp ne i64 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %245
  unreachable

253:                                              ; preds = %245
  br label %254

254:                                              ; preds = %253
  br label %255

255:                                              ; preds = %254
  br label %256

256:                                              ; preds = %255
  %257 = load i32, i32* %19, align 4
  %258 = load i32, i32* %16, align 4
  %259 = icmp sgt i32 %257, %258
  br i1 %259, label %264, label %260

260:                                              ; preds = %256
  %261 = load i8, i8* %25, align 1
  %262 = zext i8 %261 to i32
  %263 = icmp eq i32 %262, 0
  br label %264

264:                                              ; preds = %260, %256
  %265 = phi i1 [ true, %256 ], [ %263, %260 ]
  %266 = xor i1 %265, true
  %267 = zext i1 %266 to i32
  %268 = sext i32 %267 to i64
  %269 = call i64 @llvm.expect.i64(i64 %268, i64 0)
  %270 = icmp ne i64 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %264
  unreachable

272:                                              ; preds = %264
  br label %273

273:                                              ; preds = %272
  br label %274

274:                                              ; preds = %273
  %275 = load i8, i8* %25, align 1
  %276 = icmp ne i8 %275, 0
  br i1 %276, label %277, label %289

277:                                              ; preds = %274
  %278 = load i32, i32* %19, align 4
  %279 = load i32, i32* %18, align 4
  %280 = icmp sgt i32 %278, %279
  %281 = xor i1 %280, true
  %282 = xor i1 %281, true
  %283 = zext i1 %282 to i32
  %284 = sext i32 %283 to i64
  %285 = call i64 @llvm.expect.i64(i64 %284, i64 0)
  %286 = icmp ne i64 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %277
  br label %376

288:                                              ; preds = %277
  br label %289

289:                                              ; preds = %288, %274
  %290 = load %18*, %18** %20, align 8
  %291 = getelementptr inbounds %18, %18* %290, i32 1
  store %18* %291, %18** %20, align 8
  %292 = load %18*, %18** %20, align 8
  store %18* %292, %18** %21, align 8
  %293 = load %18*, %18** %21, align 8
  %294 = call i32 @151(%18* %293, i8** %10, i64* %13, i32 0)
  %295 = icmp ne i32 %294, 0
  %296 = xor i1 %295, true
  %297 = xor i1 %296, true
  %298 = xor i1 %297, true
  %299 = zext i1 %298 to i32
  %300 = sext i32 %299 to i64
  %301 = call i64 @llvm.expect.i64(i64 %300, i64 0)
  %302 = icmp ne i64 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %289
  store i32 2, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %376

304:                                              ; preds = %289
  %305 = load i32, i32* %19, align 4
  %306 = add nsw i32 %305, 1
  store i32 %306, i32* %19, align 4
  br label %307

307:                                              ; preds = %304
  %308 = load i32, i32* %19, align 4
  %309 = load i32, i32* %16, align 4
  %310 = icmp sle i32 %308, %309
  br i1 %310, label %315, label %311

311:                                              ; preds = %307
  %312 = load i8, i8* %25, align 1
  %313 = zext i8 %312 to i32
  %314 = icmp eq i32 %313, 1
  br label %315

315:                                              ; preds = %311, %307
  %316 = phi i1 [ true, %307 ], [ %314, %311 ]
  %317 = xor i1 %316, true
  %318 = zext i1 %317 to i32
  %319 = sext i32 %318 to i64
  %320 = call i64 @llvm.expect.i64(i64 %319, i64 0)
  %321 = icmp ne i64 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %315
  unreachable

323:                                              ; preds = %315
  br label %324

324:                                              ; preds = %323
  br label %325

325:                                              ; preds = %324
  br label %326

326:                                              ; preds = %325
  %327 = load i32, i32* %19, align 4
  %328 = load i32, i32* %16, align 4
  %329 = icmp sgt i32 %327, %328
  br i1 %329, label %334, label %330

330:                                              ; preds = %326
  %331 = load i8, i8* %25, align 1
  %332 = zext i8 %331 to i32
  %333 = icmp eq i32 %332, 0
  br label %334

334:                                              ; preds = %330, %326
  %335 = phi i1 [ true, %326 ], [ %333, %330 ]
  %336 = xor i1 %335, true
  %337 = zext i1 %336 to i32
  %338 = sext i32 %337 to i64
  %339 = call i64 @llvm.expect.i64(i64 %338, i64 0)
  %340 = icmp ne i64 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %334
  unreachable

342:                                              ; preds = %334
  br label %343

343:                                              ; preds = %342
  br label %344

344:                                              ; preds = %343
  %345 = load i8, i8* %25, align 1
  %346 = icmp ne i8 %345, 0
  br i1 %346, label %347, label %359

347:                                              ; preds = %344
  %348 = load i32, i32* %19, align 4
  %349 = load i32, i32* %18, align 4
  %350 = icmp sgt i32 %348, %349
  %351 = xor i1 %350, true
  %352 = xor i1 %351, true
  %353 = zext i1 %352 to i32
  %354 = sext i32 %353 to i64
  %355 = call i64 @llvm.expect.i64(i64 %354, i64 0)
  %356 = icmp ne i64 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %347
  br label %376

358:                                              ; preds = %347
  br label %359

359:                                              ; preds = %358, %344
  %360 = load %18*, %18** %20, align 8
  %361 = getelementptr inbounds %18, %18* %360, i32 1
  store %18* %361, %18** %20, align 8
  %362 = load %18*, %18** %20, align 8
  store %18* %362, %18** %21, align 8
  %363 = load %18*, %18** %21, align 8
  %364 = call i32 @151(%18* %363, i8** %11, i64* %14, i32 0)
  %365 = icmp ne i32 %364, 0
  %366 = xor i1 %365, true
  %367 = xor i1 %366, true
  %368 = xor i1 %367, true
  %369 = zext i1 %368 to i32
  %370 = sext i32 %369 to i64
  %371 = call i64 @llvm.expect.i64(i64 %370, i64 0)
  %372 = icmp ne i64 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %359
  store i32 2, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %376

374:                                              ; preds = %359
  br label %375

375:                                              ; preds = %374
  br label %376

376:                                              ; preds = %375, %373, %357, %303, %287, %233, %217, %163, %147, %87
  %377 = load i32, i32* %26, align 4
  %378 = icmp ne i32 %377, 0
  %379 = xor i1 %378, true
  %380 = xor i1 %379, true
  %381 = zext i1 %380 to i32
  %382 = sext i32 %381 to i64
  %383 = call i64 @llvm.expect.i64(i64 %382, i64 0)
  %384 = icmp ne i64 %383, 0
  br i1 %384, label %385, label %408

385:                                              ; preds = %376
  %386 = load i32, i32* %26, align 4
  %387 = icmp eq i32 %386, 2
  br i1 %387, label %388, label %391

388:                                              ; preds = %385
  %389 = load i32, i32* %19, align 4
  %390 = load i8*, i8** %23, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %389, i8* %390)
  br label %407

391:                                              ; preds = %385
  %392 = load i32, i32* %26, align 4
  %393 = icmp eq i32 %392, 3
  br i1 %393, label %394, label %398

394:                                              ; preds = %391
  %395 = load i32, i32* %19, align 4
  %396 = load i8*, i8** %23, align 8
  %397 = load %18*, %18** %21, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %395, i8* %396, %18* %397)
  br label %406

398:                                              ; preds = %391
  %399 = load i32, i32* %26, align 4
  %400 = icmp eq i32 %399, 4
  br i1 %400, label %401, label %405

401:                                              ; preds = %398
  %402 = load i32, i32* %19, align 4
  %403 = load i32, i32* %22, align 4
  %404 = load %18*, %18** %21, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %402, i32 %403, %18* %404)
  br label %405

405:                                              ; preds = %401, %398
  br label %406

406:                                              ; preds = %405, %394
  br label %407

407:                                              ; preds = %406, %388
  store i32 1, i32* %27, align 4
  br label %409

408:                                              ; preds = %376
  store i32 0, i32* %27, align 4
  br label %409

409:                                              ; preds = %408, %407
  %410 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %410) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %25) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #13
  %411 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %411) #13
  %412 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %412) #13
  %413 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %413) #13
  %414 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %414) #13
  %415 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %415) #13
  %416 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %416) #13
  %417 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %417) #13
  %418 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %418) #13
  %419 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %419) #13
  %420 = load i32, i32* %27, align 4
  switch i32 %420, label %473 [
    i32 0, label %421
  ]

421:                                              ; preds = %409
  br label %422

422:                                              ; preds = %421
  br label %423

423:                                              ; preds = %422
  %424 = load i64, i64* %12, align 8
  %425 = icmp ne i64 %424, 0
  br i1 %425, label %426, label %431

426:                                              ; preds = %423
  %427 = load i8*, i8** %9, align 8
  %428 = getelementptr inbounds i8, i8* %427, i64 0
  %429 = load i8, i8* %428, align 1
  %430 = sext i8 %429 to i32
  br label %434

431:                                              ; preds = %423
  %432 = load i8, i8* %6, align 1
  %433 = sext i8 %432 to i32
  br label %434

434:                                              ; preds = %431, %426
  %435 = phi i32 [ %430, %426 ], [ %433, %431 ]
  %436 = trunc i32 %435 to i8
  store i8 %436, i8* %6, align 1
  %437 = load i64, i64* %13, align 8
  %438 = icmp ne i64 %437, 0
  br i1 %438, label %439, label %444

439:                                              ; preds = %434
  %440 = load i8*, i8** %10, align 8
  %441 = getelementptr inbounds i8, i8* %440, i64 0
  %442 = load i8, i8* %441, align 1
  %443 = sext i8 %442 to i32
  br label %447

444:                                              ; preds = %434
  %445 = load i8, i8* %7, align 1
  %446 = sext i8 %445 to i32
  br label %447

447:                                              ; preds = %444, %439
  %448 = phi i32 [ %443, %439 ], [ %446, %444 ]
  %449 = trunc i32 %448 to i8
  store i8 %449, i8* %7, align 1
  %450 = load i64, i64* %14, align 8
  %451 = icmp ne i64 %450, 0
  br i1 %451, label %452, label %457

452:                                              ; preds = %447
  %453 = load i8*, i8** %11, align 8
  %454 = getelementptr inbounds i8, i8* %453, i64 0
  %455 = load i8, i8* %454, align 1
  %456 = sext i8 %455 to i32
  br label %460

457:                                              ; preds = %447
  %458 = load i8, i8* %8, align 1
  %459 = sext i8 %458 to i32
  br label %460

460:                                              ; preds = %457, %452
  %461 = phi i32 [ %456, %452 ], [ %459, %457 ]
  %462 = trunc i32 %461 to i8
  store i8 %462, i8* %8, align 1
  %463 = load i8, i8* %6, align 1
  %464 = load i8, i8* %7, align 1
  %465 = load i8, i8* %8, align 1
  %466 = load %0*, %0** %5, align 8
  %467 = getelementptr inbounds %0, %0* %466, i32 0, i32 2
  %468 = load i64, i64* %467, align 8
  %469 = load %0*, %0** %5, align 8
  %470 = getelementptr inbounds %0, %0* %469, i32 0, i32 3
  %471 = getelementptr inbounds [1 x i8], [1 x i8]* %470, i32 0, i32 0
  %472 = load %18*, %18** %4, align 8
  call void @php_fgetcsv(%56* null, i8 signext %463, i8 signext %464, i8 signext %465, i64 %468, i8* %471, %18* %472)
  store i32 0, i32* %27, align 4
  br label %473

473:                                              ; preds = %460, %409
  %474 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %474) #13
  %475 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %475) #13
  %476 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %476) #13
  %477 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %477) #13
  %478 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %478) #13
  %479 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %479) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %8) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #13
  %480 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %480) #13
  %481 = load i32, i32* %27, align 4
  switch i32 %481, label %483 [
    i32 0, label %482
    i32 1, label %482
  ]

482:                                              ; preds = %473, %473
  ret void

483:                                              ; preds = %473
  unreachable
}

declare dso_local void @php_fgetcsv(%56*, i8 signext, i8 signext, i8 signext, i64, i8*, %18*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_str_repeat(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %0*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i64, align 8
  %28 = alloca %18*, align 8
  %29 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %30 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  br label %34

34:                                               ; preds = %2
  %35 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 0, i32* %9, align 4
  %36 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 2, i32* %10, align 4
  %37 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 2, i32* %11, align 4
  %38 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  %39 = load %14*, %14** %3, align 8
  %40 = getelementptr inbounds %14, %14* %39, i32 0, i32 4
  %41 = getelementptr inbounds %18, %18* %40, i32 0, i32 2
  %42 = bitcast %21* %41 to i32*
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %12, align 4
  %44 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  %45 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  %46 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  store %18* null, %18** %15, align 8
  %47 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #13
  store i32 0, i32* %16, align 4
  %48 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %49 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  store i32 0, i32* %20, align 4
  %50 = load i32, i32* %13, align 4
  %51 = load %18*, %18** %14, align 8
  %52 = load %18*, %18** %15, align 8
  %53 = load i32, i32* %16, align 4
  %54 = load i8*, i8** %17, align 8
  %55 = load i8, i8* %18, align 1
  %56 = load i8, i8* %19, align 1
  br label %57

57:                                               ; preds = %34
  %58 = load i32, i32* %12, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp slt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %57
  %68 = load i32, i32* %12, align 4
  %69 = load i32, i32* %11, align 4
  %70 = icmp sgt i32 %68, %69
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 0)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %90

77:                                               ; preds = %67
  %78 = load i32, i32* %11, align 4
  %79 = icmp sge i32 %78, 0
  %80 = xor i1 %79, true
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = call i64 @llvm.expect.i64(i64 %83, i64 1)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %77, %57
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %10, align 4
  %89 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %87, i32 %88, i32 %89)
  store i32 1, i32* %20, align 4
  br label %235

90:                                               ; preds = %77, %67
  store i32 0, i32* %13, align 4
  %91 = load %14*, %14** %3, align 8
  %92 = bitcast %14* %91 to %18*
  %93 = getelementptr inbounds %18, %18* %92, i64 4
  store %18* %93, %18** %14, align 8
  %94 = load i32, i32* %13, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %13, align 4
  br label %96

96:                                               ; preds = %90
  %97 = load i32, i32* %13, align 4
  %98 = load i32, i32* %10, align 4
  %99 = icmp sle i32 %97, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = load i8, i8* %19, align 1
  %102 = zext i8 %101 to i32
  %103 = icmp eq i32 %102, 1
  br label %104

104:                                              ; preds = %100, %96
  %105 = phi i1 [ true, %96 ], [ %103, %100 ]
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.expect.i64(i64 %108, i64 0)
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %104
  unreachable

112:                                              ; preds = %104
  br label %113

113:                                              ; preds = %112
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %13, align 4
  %117 = load i32, i32* %10, align 4
  %118 = icmp sgt i32 %116, %117
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = load i8, i8* %19, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp eq i32 %121, 0
  br label %123

123:                                              ; preds = %119, %115
  %124 = phi i1 [ true, %115 ], [ %122, %119 ]
  %125 = xor i1 %124, true
  %126 = zext i1 %125 to i32
  %127 = sext i32 %126 to i64
  %128 = call i64 @llvm.expect.i64(i64 %127, i64 0)
  %129 = icmp ne i64 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %123
  unreachable

131:                                              ; preds = %123
  br label %132

132:                                              ; preds = %131
  br label %133

133:                                              ; preds = %132
  %134 = load i8, i8* %19, align 1
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %133
  %137 = load i32, i32* %13, align 4
  %138 = load i32, i32* %12, align 4
  %139 = icmp sgt i32 %137, %138
  %140 = xor i1 %139, true
  %141 = xor i1 %140, true
  %142 = zext i1 %141 to i32
  %143 = sext i32 %142 to i64
  %144 = call i64 @llvm.expect.i64(i64 %143, i64 0)
  %145 = icmp ne i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %136
  br label %235

147:                                              ; preds = %136
  br label %148

148:                                              ; preds = %147, %133
  %149 = load %18*, %18** %14, align 8
  %150 = getelementptr inbounds %18, %18* %149, i32 1
  store %18* %150, %18** %14, align 8
  %151 = load %18*, %18** %14, align 8
  store %18* %151, %18** %15, align 8
  %152 = load %18*, %18** %15, align 8
  %153 = call i32 @143(%18* %152, %0** %5, i32 0)
  %154 = icmp ne i32 %153, 0
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %148
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %235

163:                                              ; preds = %148
  %164 = load i32, i32* %13, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %13, align 4
  br label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %13, align 4
  %168 = load i32, i32* %10, align 4
  %169 = icmp sle i32 %167, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = load i8, i8* %19, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 1
  br label %174

174:                                              ; preds = %170, %166
  %175 = phi i1 [ true, %166 ], [ %173, %170 ]
  %176 = xor i1 %175, true
  %177 = zext i1 %176 to i32
  %178 = sext i32 %177 to i64
  %179 = call i64 @llvm.expect.i64(i64 %178, i64 0)
  %180 = icmp ne i64 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %174
  unreachable

182:                                              ; preds = %174
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  %186 = load i32, i32* %13, align 4
  %187 = load i32, i32* %10, align 4
  %188 = icmp sgt i32 %186, %187
  br i1 %188, label %193, label %189

189:                                              ; preds = %185
  %190 = load i8, i8* %19, align 1
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %191, 0
  br label %193

193:                                              ; preds = %189, %185
  %194 = phi i1 [ true, %185 ], [ %192, %189 ]
  %195 = xor i1 %194, true
  %196 = zext i1 %195 to i32
  %197 = sext i32 %196 to i64
  %198 = call i64 @llvm.expect.i64(i64 %197, i64 0)
  %199 = icmp ne i64 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %193
  unreachable

201:                                              ; preds = %193
  br label %202

202:                                              ; preds = %201
  br label %203

203:                                              ; preds = %202
  %204 = load i8, i8* %19, align 1
  %205 = icmp ne i8 %204, 0
  br i1 %205, label %206, label %218

206:                                              ; preds = %203
  %207 = load i32, i32* %13, align 4
  %208 = load i32, i32* %12, align 4
  %209 = icmp sgt i32 %207, %208
  %210 = xor i1 %209, true
  %211 = xor i1 %210, true
  %212 = zext i1 %211 to i32
  %213 = sext i32 %212 to i64
  %214 = call i64 @llvm.expect.i64(i64 %213, i64 0)
  %215 = icmp ne i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %206
  br label %235

217:                                              ; preds = %206
  br label %218

218:                                              ; preds = %217, %203
  %219 = load %18*, %18** %14, align 8
  %220 = getelementptr inbounds %18, %18* %219, i32 1
  store %18* %220, %18** %14, align 8
  %221 = load %18*, %18** %14, align 8
  store %18* %221, %18** %15, align 8
  %222 = load %18*, %18** %15, align 8
  %223 = call i32 @147(%18* %222, i64* %6, i8* %18, i32 0, i32 0)
  %224 = icmp ne i32 %223, 0
  %225 = xor i1 %224, true
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = zext i1 %227 to i32
  %229 = sext i32 %228 to i64
  %230 = call i64 @llvm.expect.i64(i64 %229, i64 0)
  %231 = icmp ne i64 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %218
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %235

233:                                              ; preds = %218
  br label %234

234:                                              ; preds = %233
  br label %235

235:                                              ; preds = %234, %232, %216, %162, %146, %86
  %236 = load i32, i32* %20, align 4
  %237 = icmp ne i32 %236, 0
  %238 = xor i1 %237, true
  %239 = xor i1 %238, true
  %240 = zext i1 %239 to i32
  %241 = sext i32 %240 to i64
  %242 = call i64 @llvm.expect.i64(i64 %241, i64 0)
  %243 = icmp ne i64 %242, 0
  br i1 %243, label %244, label %267

244:                                              ; preds = %235
  %245 = load i32, i32* %20, align 4
  %246 = icmp eq i32 %245, 2
  br i1 %246, label %247, label %250

247:                                              ; preds = %244
  %248 = load i32, i32* %13, align 4
  %249 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %248, i8* %249)
  br label %266

250:                                              ; preds = %244
  %251 = load i32, i32* %20, align 4
  %252 = icmp eq i32 %251, 3
  br i1 %252, label %253, label %257

253:                                              ; preds = %250
  %254 = load i32, i32* %13, align 4
  %255 = load i8*, i8** %17, align 8
  %256 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %254, i8* %255, %18* %256)
  br label %265

257:                                              ; preds = %250
  %258 = load i32, i32* %20, align 4
  %259 = icmp eq i32 %258, 4
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = load i32, i32* %13, align 4
  %262 = load i32, i32* %16, align 4
  %263 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %261, i32 %262, %18* %263)
  br label %264

264:                                              ; preds = %260, %257
  br label %265

265:                                              ; preds = %264, %253
  br label %266

266:                                              ; preds = %265, %247
  store i32 1, i32* %21, align 4
  br label %268

267:                                              ; preds = %235
  store i32 0, i32* %21, align 4
  br label %268

268:                                              ; preds = %267, %266
  %269 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %270 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #13
  %271 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #13
  %272 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #13
  %273 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #13
  %274 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #13
  %275 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #13
  %276 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #13
  %277 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #13
  %278 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #13
  %279 = load i32, i32* %21, align 4
  switch i32 %279, label %431 [
    i32 0, label %280
  ]

280:                                              ; preds = %268
  br label %281

281:                                              ; preds = %280
  br label %282

282:                                              ; preds = %281
  %283 = load i64, i64* %6, align 8
  %284 = icmp slt i64 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @101, i32 0, i32 0))
  store i32 1, i32* %21, align 4
  br label %431

286:                                              ; preds = %282
  %287 = load %0*, %0** %5, align 8
  %288 = getelementptr inbounds %0, %0* %287, i32 0, i32 2
  %289 = load i64, i64* %288, align 8
  %290 = icmp eq i64 %289, 0
  br i1 %290, label %294, label %291

291:                                              ; preds = %286
  %292 = load i64, i64* %6, align 8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %314

294:                                              ; preds = %291, %286
  br label %295

295:                                              ; preds = %294
  br label %296

296:                                              ; preds = %295
  %297 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %297) #13
  %298 = load %18*, %18** %4, align 8
  store %18* %298, %18** %22, align 8
  %299 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %299) #13
  %300 = load %0*, %0** @zend_empty_string, align 8
  store %0* %300, %0** %23, align 8
  %301 = load %0*, %0** %23, align 8
  %302 = load %18*, %18** %22, align 8
  %303 = getelementptr inbounds %18, %18* %302, i32 0, i32 0
  %304 = bitcast %19* %303 to %0**
  store %0* %301, %0** %304, align 8
  %305 = load %18*, %18** %22, align 8
  %306 = getelementptr inbounds %18, %18* %305, i32 0, i32 1
  %307 = bitcast %20* %306 to i32*
  store i32 6, i32* %307, align 8
  %308 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %308) #13
  %309 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %309) #13
  br label %310

310:                                              ; preds = %296
  br label %311

311:                                              ; preds = %310
  br label %312

312:                                              ; preds = %311
  br label %313

313:                                              ; preds = %312
  store i32 1, i32* %21, align 4
  br label %431

314:                                              ; preds = %291
  %315 = load %0*, %0** %5, align 8
  %316 = getelementptr inbounds %0, %0* %315, i32 0, i32 2
  %317 = load i64, i64* %316, align 8
  %318 = load i64, i64* %6, align 8
  %319 = call %0* @153(i64 %317, i64 %318, i64 0, i32 0)
  store %0* %319, %0** %7, align 8
  %320 = load %0*, %0** %5, align 8
  %321 = getelementptr inbounds %0, %0* %320, i32 0, i32 2
  %322 = load i64, i64* %321, align 8
  %323 = load i64, i64* %6, align 8
  %324 = mul i64 %322, %323
  store i64 %324, i64* %8, align 8
  %325 = load %0*, %0** %5, align 8
  %326 = getelementptr inbounds %0, %0* %325, i32 0, i32 2
  %327 = load i64, i64* %326, align 8
  %328 = icmp eq i64 %327, 1
  br i1 %328, label %329, label %340

329:                                              ; preds = %314
  %330 = load %0*, %0** %7, align 8
  %331 = getelementptr inbounds %0, %0* %330, i32 0, i32 3
  %332 = getelementptr inbounds [1 x i8], [1 x i8]* %331, i32 0, i32 0
  %333 = load %0*, %0** %5, align 8
  %334 = getelementptr inbounds %0, %0* %333, i32 0, i32 3
  %335 = getelementptr inbounds [1 x i8], [1 x i8]* %334, i32 0, i32 0
  %336 = load i8, i8* %335, align 8
  %337 = sext i8 %336 to i32
  %338 = trunc i32 %337 to i8
  %339 = load i64, i64* %6, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %332, i8 %338, i64 %339, i1 false)
  br label %410

340:                                              ; preds = %314
  %341 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %341) #13
  %342 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %342) #13
  %343 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %343) #13
  %344 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %344) #13
  store i64 0, i64* %27, align 8
  %345 = load %0*, %0** %7, align 8
  %346 = getelementptr inbounds %0, %0* %345, i32 0, i32 3
  %347 = getelementptr inbounds [1 x i8], [1 x i8]* %346, i32 0, i32 0
  %348 = load %0*, %0** %5, align 8
  %349 = getelementptr inbounds %0, %0* %348, i32 0, i32 3
  %350 = getelementptr inbounds [1 x i8], [1 x i8]* %349, i32 0, i32 0
  %351 = load %0*, %0** %5, align 8
  %352 = getelementptr inbounds %0, %0* %351, i32 0, i32 2
  %353 = load i64, i64* %352, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %347, i8* align 8 %350, i64 %353, i1 false)
  %354 = load %0*, %0** %7, align 8
  %355 = getelementptr inbounds %0, %0* %354, i32 0, i32 3
  %356 = getelementptr inbounds [1 x i8], [1 x i8]* %355, i32 0, i32 0
  store i8* %356, i8** %24, align 8
  %357 = load %0*, %0** %7, align 8
  %358 = getelementptr inbounds %0, %0* %357, i32 0, i32 3
  %359 = getelementptr inbounds [1 x i8], [1 x i8]* %358, i32 0, i32 0
  %360 = load %0*, %0** %5, align 8
  %361 = getelementptr inbounds %0, %0* %360, i32 0, i32 2
  %362 = load i64, i64* %361, align 8
  %363 = getelementptr inbounds i8, i8* %359, i64 %362
  store i8* %363, i8** %25, align 8
  %364 = load %0*, %0** %7, align 8
  %365 = getelementptr inbounds %0, %0* %364, i32 0, i32 3
  %366 = getelementptr inbounds [1 x i8], [1 x i8]* %365, i32 0, i32 0
  %367 = load i64, i64* %8, align 8
  %368 = getelementptr inbounds i8, i8* %366, i64 %367
  store i8* %368, i8** %26, align 8
  br label %369

369:                                              ; preds = %397, %340
  %370 = load i8*, i8** %25, align 8
  %371 = load i8*, i8** %26, align 8
  %372 = icmp ult i8* %370, %371
  br i1 %372, label %373, label %405

373:                                              ; preds = %369
  %374 = load i8*, i8** %25, align 8
  %375 = load i8*, i8** %24, align 8
  %376 = ptrtoint i8* %374 to i64
  %377 = ptrtoint i8* %375 to i64
  %378 = sub i64 %376, %377
  %379 = load i8*, i8** %26, align 8
  %380 = load i8*, i8** %25, align 8
  %381 = ptrtoint i8* %379 to i64
  %382 = ptrtoint i8* %380 to i64
  %383 = sub i64 %381, %382
  %384 = icmp slt i64 %378, %383
  br i1 %384, label %385, label %391

385:                                              ; preds = %373
  %386 = load i8*, i8** %25, align 8
  %387 = load i8*, i8** %24, align 8
  %388 = ptrtoint i8* %386 to i64
  %389 = ptrtoint i8* %387 to i64
  %390 = sub i64 %388, %389
  br label %397

391:                                              ; preds = %373
  %392 = load i8*, i8** %26, align 8
  %393 = load i8*, i8** %25, align 8
  %394 = ptrtoint i8* %392 to i64
  %395 = ptrtoint i8* %393 to i64
  %396 = sub i64 %394, %395
  br label %397

397:                                              ; preds = %391, %385
  %398 = phi i64 [ %390, %385 ], [ %396, %391 ]
  store i64 %398, i64* %27, align 8
  %399 = load i8*, i8** %25, align 8
  %400 = load i8*, i8** %24, align 8
  %401 = load i64, i64* %27, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %399, i8* align 1 %400, i64 %401, i1 false)
  %402 = load i64, i64* %27, align 8
  %403 = load i8*, i8** %25, align 8
  %404 = getelementptr inbounds i8, i8* %403, i64 %402
  store i8* %404, i8** %25, align 8
  br label %369

405:                                              ; preds = %369
  %406 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %406) #13
  %407 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %407) #13
  %408 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %408) #13
  %409 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %409) #13
  br label %410

410:                                              ; preds = %405, %329
  %411 = load %0*, %0** %7, align 8
  %412 = getelementptr inbounds %0, %0* %411, i32 0, i32 3
  %413 = load i64, i64* %8, align 8
  %414 = getelementptr inbounds [1 x i8], [1 x i8]* %412, i64 0, i64 %413
  store i8 0, i8* %414, align 1
  br label %415

415:                                              ; preds = %410
  %416 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %416) #13
  %417 = load %18*, %18** %4, align 8
  store %18* %417, %18** %28, align 8
  %418 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %418) #13
  %419 = load %0*, %0** %7, align 8
  store %0* %419, %0** %29, align 8
  %420 = load %0*, %0** %29, align 8
  %421 = load %18*, %18** %28, align 8
  %422 = getelementptr inbounds %18, %18* %421, i32 0, i32 0
  %423 = bitcast %19* %422 to %0**
  store %0* %420, %0** %423, align 8
  %424 = load %18*, %18** %28, align 8
  %425 = getelementptr inbounds %18, %18* %424, i32 0, i32 1
  %426 = bitcast %20* %425 to i32*
  store i32 5126, i32* %426, align 8
  %427 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %427) #13
  %428 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %428) #13
  br label %429

429:                                              ; preds = %415
  br label %430

430:                                              ; preds = %429
  store i32 1, i32* %21, align 4
  br label %431

431:                                              ; preds = %430, %313, %285, %268
  %432 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %432) #13
  %433 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %433) #13
  %434 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %434) #13
  %435 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %435) #13
  ret void
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind uwtable
define hidden void @zif_count_chars(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca [256 x i32], align 16
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca [256 x i8], align 16
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %18*, align 8
  %19 = alloca %18*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %18*, align 8
  %27 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %28 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast [256 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* %29) #13
  %30 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store i64 0, i64* %7, align 8
  %31 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = bitcast [256 x i8]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %33) #13
  %34 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  store i64 0, i64* %11, align 8
  %35 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  store i64 0, i64* %12, align 8
  br label %36

36:                                               ; preds = %2
  %37 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %13, align 4
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 1, i32* %14, align 4
  %39 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 2, i32* %15, align 4
  %40 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  %41 = load %14*, %14** %3, align 8
  %42 = getelementptr inbounds %14, %14* %41, i32 0, i32 4
  %43 = getelementptr inbounds %18, %18* %42, i32 0, i32 2
  %44 = bitcast %21* %43 to i32*
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %16, align 4
  %46 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  %47 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  %48 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  store %18* null, %18** %19, align 8
  %49 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  store i32 0, i32* %20, align 4
  %50 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store i8* null, i8** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #13
  store i8 0, i8* %23, align 1
  %51 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #13
  store i32 0, i32* %24, align 4
  %52 = load i32, i32* %17, align 4
  %53 = load %18*, %18** %18, align 8
  %54 = load %18*, %18** %19, align 8
  %55 = load i32, i32* %20, align 4
  %56 = load i8*, i8** %21, align 8
  %57 = load i8, i8* %22, align 1
  %58 = load i8, i8* %23, align 1
  br label %59

59:                                               ; preds = %36
  %60 = load i32, i32* %16, align 4
  %61 = load i32, i32* %14, align 4
  %62 = icmp slt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %59
  %70 = load i32, i32* %16, align 4
  %71 = load i32, i32* %15, align 4
  %72 = icmp sgt i32 %70, %71
  %73 = xor i1 %72, true
  %74 = xor i1 %73, true
  %75 = zext i1 %74 to i32
  %76 = sext i32 %75 to i64
  %77 = call i64 @llvm.expect.i64(i64 %76, i64 0)
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %79, label %92

79:                                               ; preds = %69
  %80 = load i32, i32* %15, align 4
  %81 = icmp sge i32 %80, 0
  %82 = xor i1 %81, true
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = call i64 @llvm.expect.i64(i64 %85, i64 1)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %79, %59
  %89 = load i32, i32* %16, align 4
  %90 = load i32, i32* %14, align 4
  %91 = load i32, i32* %15, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %89, i32 %90, i32 %91)
  store i32 1, i32* %24, align 4
  br label %237

92:                                               ; preds = %79, %69
  store i32 0, i32* %17, align 4
  %93 = load %14*, %14** %3, align 8
  %94 = bitcast %14* %93 to %18*
  %95 = getelementptr inbounds %18, %18* %94, i64 4
  store %18* %95, %18** %18, align 8
  %96 = load i32, i32* %17, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %17, align 4
  br label %98

98:                                               ; preds = %92
  %99 = load i32, i32* %17, align 4
  %100 = load i32, i32* %14, align 4
  %101 = icmp sle i32 %99, %100
  br i1 %101, label %106, label %102

102:                                              ; preds = %98
  %103 = load i8, i8* %23, align 1
  %104 = zext i8 %103 to i32
  %105 = icmp eq i32 %104, 1
  br label %106

106:                                              ; preds = %102, %98
  %107 = phi i1 [ true, %98 ], [ %105, %102 ]
  %108 = xor i1 %107, true
  %109 = zext i1 %108 to i32
  %110 = sext i32 %109 to i64
  %111 = call i64 @llvm.expect.i64(i64 %110, i64 0)
  %112 = icmp ne i64 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %106
  unreachable

114:                                              ; preds = %106
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  br label %117

117:                                              ; preds = %116
  %118 = load i32, i32* %17, align 4
  %119 = load i32, i32* %14, align 4
  %120 = icmp sgt i32 %118, %119
  br i1 %120, label %125, label %121

121:                                              ; preds = %117
  %122 = load i8, i8* %23, align 1
  %123 = zext i8 %122 to i32
  %124 = icmp eq i32 %123, 0
  br label %125

125:                                              ; preds = %121, %117
  %126 = phi i1 [ true, %117 ], [ %124, %121 ]
  %127 = xor i1 %126, true
  %128 = zext i1 %127 to i32
  %129 = sext i32 %128 to i64
  %130 = call i64 @llvm.expect.i64(i64 %129, i64 0)
  %131 = icmp ne i64 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  unreachable

133:                                              ; preds = %125
  br label %134

134:                                              ; preds = %133
  br label %135

135:                                              ; preds = %134
  %136 = load i8, i8* %23, align 1
  %137 = icmp ne i8 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %135
  %139 = load i32, i32* %17, align 4
  %140 = load i32, i32* %16, align 4
  %141 = icmp sgt i32 %139, %140
  %142 = xor i1 %141, true
  %143 = xor i1 %142, true
  %144 = zext i1 %143 to i32
  %145 = sext i32 %144 to i64
  %146 = call i64 @llvm.expect.i64(i64 %145, i64 0)
  %147 = icmp ne i64 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %138
  br label %237

149:                                              ; preds = %138
  br label %150

150:                                              ; preds = %149, %135
  %151 = load %18*, %18** %18, align 8
  %152 = getelementptr inbounds %18, %18* %151, i32 1
  store %18* %152, %18** %18, align 8
  %153 = load %18*, %18** %18, align 8
  store %18* %153, %18** %19, align 8
  %154 = load %18*, %18** %19, align 8
  %155 = call i32 @143(%18* %154, %0** %5, i32 0)
  %156 = icmp ne i32 %155, 0
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %150
  store i32 2, i32* %20, align 4
  store i32 4, i32* %24, align 4
  br label %237

165:                                              ; preds = %150
  store i8 1, i8* %23, align 1
  %166 = load i32, i32* %17, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %17, align 4
  br label %168

168:                                              ; preds = %165
  %169 = load i32, i32* %17, align 4
  %170 = load i32, i32* %14, align 4
  %171 = icmp sle i32 %169, %170
  br i1 %171, label %176, label %172

172:                                              ; preds = %168
  %173 = load i8, i8* %23, align 1
  %174 = zext i8 %173 to i32
  %175 = icmp eq i32 %174, 1
  br label %176

176:                                              ; preds = %172, %168
  %177 = phi i1 [ true, %168 ], [ %175, %172 ]
  %178 = xor i1 %177, true
  %179 = zext i1 %178 to i32
  %180 = sext i32 %179 to i64
  %181 = call i64 @llvm.expect.i64(i64 %180, i64 0)
  %182 = icmp ne i64 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %176
  unreachable

184:                                              ; preds = %176
  br label %185

185:                                              ; preds = %184
  br label %186

186:                                              ; preds = %185
  br label %187

187:                                              ; preds = %186
  %188 = load i32, i32* %17, align 4
  %189 = load i32, i32* %14, align 4
  %190 = icmp sgt i32 %188, %189
  br i1 %190, label %195, label %191

191:                                              ; preds = %187
  %192 = load i8, i8* %23, align 1
  %193 = zext i8 %192 to i32
  %194 = icmp eq i32 %193, 0
  br label %195

195:                                              ; preds = %191, %187
  %196 = phi i1 [ true, %187 ], [ %194, %191 ]
  %197 = xor i1 %196, true
  %198 = zext i1 %197 to i32
  %199 = sext i32 %198 to i64
  %200 = call i64 @llvm.expect.i64(i64 %199, i64 0)
  %201 = icmp ne i64 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %195
  unreachable

203:                                              ; preds = %195
  br label %204

204:                                              ; preds = %203
  br label %205

205:                                              ; preds = %204
  %206 = load i8, i8* %23, align 1
  %207 = icmp ne i8 %206, 0
  br i1 %207, label %208, label %220

208:                                              ; preds = %205
  %209 = load i32, i32* %17, align 4
  %210 = load i32, i32* %16, align 4
  %211 = icmp sgt i32 %209, %210
  %212 = xor i1 %211, true
  %213 = xor i1 %212, true
  %214 = zext i1 %213 to i32
  %215 = sext i32 %214 to i64
  %216 = call i64 @llvm.expect.i64(i64 %215, i64 0)
  %217 = icmp ne i64 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %208
  br label %237

219:                                              ; preds = %208
  br label %220

220:                                              ; preds = %219, %205
  %221 = load %18*, %18** %18, align 8
  %222 = getelementptr inbounds %18, %18* %221, i32 1
  store %18* %222, %18** %18, align 8
  %223 = load %18*, %18** %18, align 8
  store %18* %223, %18** %19, align 8
  %224 = load %18*, %18** %19, align 8
  %225 = call i32 @147(%18* %224, i64* %7, i8* %22, i32 0, i32 0)
  %226 = icmp ne i32 %225, 0
  %227 = xor i1 %226, true
  %228 = xor i1 %227, true
  %229 = xor i1 %228, true
  %230 = zext i1 %229 to i32
  %231 = sext i32 %230 to i64
  %232 = call i64 @llvm.expect.i64(i64 %231, i64 0)
  %233 = icmp ne i64 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %220
  store i32 0, i32* %20, align 4
  store i32 4, i32* %24, align 4
  br label %237

235:                                              ; preds = %220
  br label %236

236:                                              ; preds = %235
  br label %237

237:                                              ; preds = %236, %234, %218, %164, %148, %88
  %238 = load i32, i32* %24, align 4
  %239 = icmp ne i32 %238, 0
  %240 = xor i1 %239, true
  %241 = xor i1 %240, true
  %242 = zext i1 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call i64 @llvm.expect.i64(i64 %243, i64 0)
  %245 = icmp ne i64 %244, 0
  br i1 %245, label %246, label %269

246:                                              ; preds = %237
  %247 = load i32, i32* %24, align 4
  %248 = icmp eq i32 %247, 2
  br i1 %248, label %249, label %252

249:                                              ; preds = %246
  %250 = load i32, i32* %17, align 4
  %251 = load i8*, i8** %21, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %250, i8* %251)
  br label %268

252:                                              ; preds = %246
  %253 = load i32, i32* %24, align 4
  %254 = icmp eq i32 %253, 3
  br i1 %254, label %255, label %259

255:                                              ; preds = %252
  %256 = load i32, i32* %17, align 4
  %257 = load i8*, i8** %21, align 8
  %258 = load %18*, %18** %19, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %256, i8* %257, %18* %258)
  br label %267

259:                                              ; preds = %252
  %260 = load i32, i32* %24, align 4
  %261 = icmp eq i32 %260, 4
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = load i32, i32* %17, align 4
  %264 = load i32, i32* %20, align 4
  %265 = load %18*, %18** %19, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %263, i32 %264, %18* %265)
  br label %266

266:                                              ; preds = %262, %259
  br label %267

267:                                              ; preds = %266, %255
  br label %268

268:                                              ; preds = %267, %249
  store i32 1, i32* %25, align 4
  br label %270

269:                                              ; preds = %237
  store i32 0, i32* %25, align 4
  br label %270

270:                                              ; preds = %269, %268
  %271 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  %272 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #13
  %273 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #13
  %274 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #13
  %275 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %275) #13
  %276 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #13
  %277 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #13
  %278 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #13
  %279 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #13
  %280 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #13
  %281 = load i32, i32* %25, align 4
  switch i32 %281, label %435 [
    i32 0, label %282
  ]

282:                                              ; preds = %270
  br label %283

283:                                              ; preds = %282
  br label %284

284:                                              ; preds = %283
  %285 = load i64, i64* %7, align 8
  %286 = icmp slt i64 %285, 0
  br i1 %286, label %290, label %287

287:                                              ; preds = %284
  %288 = load i64, i64* %7, align 8
  %289 = icmp sgt i64 %288, 4
  br i1 %289, label %290, label %297

290:                                              ; preds = %287, %284
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @102, i32 0, i32 0))
  br label %291

291:                                              ; preds = %290
  %292 = load %18*, %18** %4, align 8
  %293 = getelementptr inbounds %18, %18* %292, i32 0, i32 1
  %294 = bitcast %20* %293 to i32*
  store i32 2, i32* %294, align 8
  br label %295

295:                                              ; preds = %291
  br label %296

296:                                              ; preds = %295
  store i32 1, i32* %25, align 4
  br label %435

297:                                              ; preds = %287
  %298 = load %0*, %0** %5, align 8
  %299 = getelementptr inbounds %0, %0* %298, i32 0, i32 3
  %300 = getelementptr inbounds [1 x i8], [1 x i8]* %299, i32 0, i32 0
  store i8* %300, i8** %8, align 8
  %301 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i32 0, i32 0
  %302 = bitcast i32* %301 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %302, i8 0, i64 1024, i1 false)
  br label %303

303:                                              ; preds = %309, %297
  %304 = load i64, i64* %12, align 8
  %305 = load %0*, %0** %5, align 8
  %306 = getelementptr inbounds %0, %0* %305, i32 0, i32 2
  %307 = load i64, i64* %306, align 8
  %308 = icmp ult i64 %304, %307
  br i1 %308, label %309, label %320

309:                                              ; preds = %303
  %310 = load i8*, i8** %8, align 8
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = add nsw i32 %314, 1
  store i32 %315, i32* %313, align 4
  %316 = load i8*, i8** %8, align 8
  %317 = getelementptr inbounds i8, i8* %316, i32 1
  store i8* %317, i8** %8, align 8
  %318 = load i64, i64* %12, align 8
  %319 = add i64 %318, 1
  store i64 %319, i64* %12, align 8
  br label %303

320:                                              ; preds = %303
  %321 = load i64, i64* %7, align 8
  %322 = icmp slt i64 %321, 3
  br i1 %322, label %323, label %326

323:                                              ; preds = %320
  %324 = load %18*, %18** %4, align 8
  %325 = call i32 @_array_init(%18* %324, i32 0)
  br label %326

326:                                              ; preds = %323, %320
  store i32 0, i32* %9, align 4
  br label %327

327:                                              ; preds = %403, %326
  %328 = load i32, i32* %9, align 4
  %329 = icmp slt i32 %328, 256
  br i1 %329, label %330, label %406

330:                                              ; preds = %327
  %331 = load i64, i64* %7, align 8
  switch i64 %331, label %402 [
    i64 0, label %332
    i64 1, label %342
    i64 2, label %359
    i64 3, label %376
    i64 4, label %389
  ]

332:                                              ; preds = %330
  %333 = load %18*, %18** %4, align 8
  %334 = load i32, i32* %9, align 4
  %335 = sext i32 %334 to i64
  %336 = load i32, i32* %9, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %337
  %339 = load i32, i32* %338, align 4
  %340 = sext i32 %339 to i64
  %341 = call i32 @add_index_long(%18* %333, i64 %335, i64 %340)
  br label %402

342:                                              ; preds = %330
  %343 = load i32, i32* %9, align 4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = icmp ne i32 %346, 0
  br i1 %347, label %348, label %358

348:                                              ; preds = %342
  %349 = load %18*, %18** %4, align 8
  %350 = load i32, i32* %9, align 4
  %351 = sext i32 %350 to i64
  %352 = load i32, i32* %9, align 4
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = sext i32 %355 to i64
  %357 = call i32 @add_index_long(%18* %349, i64 %351, i64 %356)
  br label %358

358:                                              ; preds = %348, %342
  br label %402

359:                                              ; preds = %330
  %360 = load i32, i32* %9, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %361
  %363 = load i32, i32* %362, align 4
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %375

365:                                              ; preds = %359
  %366 = load %18*, %18** %4, align 8
  %367 = load i32, i32* %9, align 4
  %368 = sext i32 %367 to i64
  %369 = load i32, i32* %9, align 4
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %370
  %372 = load i32, i32* %371, align 4
  %373 = sext i32 %372 to i64
  %374 = call i32 @add_index_long(%18* %366, i64 %368, i64 %373)
  br label %375

375:                                              ; preds = %365, %359
  br label %402

376:                                              ; preds = %330
  %377 = load i32, i32* %9, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %378
  %380 = load i32, i32* %379, align 4
  %381 = icmp ne i32 %380, 0
  br i1 %381, label %382, label %388

382:                                              ; preds = %376
  %383 = load i32, i32* %9, align 4
  %384 = trunc i32 %383 to i8
  %385 = load i64, i64* %11, align 8
  %386 = add i64 %385, 1
  store i64 %386, i64* %11, align 8
  %387 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 %385
  store i8 %384, i8* %387, align 1
  br label %388

388:                                              ; preds = %382, %376
  br label %402

389:                                              ; preds = %330
  %390 = load i32, i32* %9, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 %391
  %393 = load i32, i32* %392, align 4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %401

395:                                              ; preds = %389
  %396 = load i32, i32* %9, align 4
  %397 = trunc i32 %396 to i8
  %398 = load i64, i64* %11, align 8
  %399 = add i64 %398, 1
  store i64 %399, i64* %11, align 8
  %400 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 %398
  store i8 %397, i8* %400, align 1
  br label %401

401:                                              ; preds = %395, %389
  br label %402

402:                                              ; preds = %330, %401, %388, %375, %358, %332
  br label %403

403:                                              ; preds = %402
  %404 = load i32, i32* %9, align 4
  %405 = add nsw i32 %404, 1
  store i32 %405, i32* %9, align 4
  br label %327

406:                                              ; preds = %327
  %407 = load i64, i64* %7, align 8
  %408 = icmp sge i64 %407, 3
  br i1 %408, label %409, label %434

409:                                              ; preds = %406
  %410 = load i64, i64* %7, align 8
  %411 = icmp sle i64 %410, 4
  br i1 %411, label %412, label %434

412:                                              ; preds = %409
  br label %413

413:                                              ; preds = %412
  br label %414

414:                                              ; preds = %413
  %415 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %415) #13
  %416 = load %18*, %18** %4, align 8
  store %18* %416, %18** %26, align 8
  %417 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %417) #13
  %418 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i32 0, i32 0
  %419 = load i64, i64* %11, align 8
  %420 = call %0* @148(i8* %418, i64 %419, i32 0)
  store %0* %420, %0** %27, align 8
  %421 = load %0*, %0** %27, align 8
  %422 = load %18*, %18** %26, align 8
  %423 = getelementptr inbounds %18, %18* %422, i32 0, i32 0
  %424 = bitcast %19* %423 to %0**
  store %0* %421, %0** %424, align 8
  %425 = load %18*, %18** %26, align 8
  %426 = getelementptr inbounds %18, %18* %425, i32 0, i32 1
  %427 = bitcast %20* %426 to i32*
  store i32 5126, i32* %427, align 8
  %428 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %428) #13
  %429 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %429) #13
  br label %430

430:                                              ; preds = %414
  br label %431

431:                                              ; preds = %430
  br label %432

432:                                              ; preds = %431
  br label %433

433:                                              ; preds = %432
  store i32 1, i32* %25, align 4
  br label %435

434:                                              ; preds = %409, %406
  store i32 0, i32* %25, align 4
  br label %435

435:                                              ; preds = %434, %433, %296, %270
  %436 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %436) #13
  %437 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %437) #13
  %438 = bitcast [256 x i8]* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %438) #13
  %439 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %439) #13
  %440 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %440) #13
  %441 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %441) #13
  %442 = bitcast [256 x i32]* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* %442) #13
  %443 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %443) #13
  %444 = load i32, i32* %25, align 4
  switch i32 %444, label %446 [
    i32 0, label %445
    i32 1, label %445
  ]

445:                                              ; preds = %435, %435
  ret void

446:                                              ; preds = %435
  unreachable
}

declare dso_local i32 @add_index_long(%18*, i64, i64) #1

; Function Attrs: nounwind uwtable
define dso_local i32 @string_natural_compare_function_ex(%18* %0, %18* %1, %18* %2, i8 zeroext %3) #0 {
  %5 = alloca %18*, align 8
  %6 = alloca %18*, align 8
  %7 = alloca %18*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %0*, align 8
  %10 = alloca %0*, align 8
  %11 = alloca %18*, align 8
  store %18* %0, %18** %5, align 8
  store %18* %1, %18** %6, align 8
  store %18* %2, %18** %7, align 8
  store i8 %3, i8* %8, align 1
  %12 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  %13 = load %18*, %18** %6, align 8
  %14 = call %0* @158(%18* %13)
  store %0* %14, %0** %9, align 8
  %15 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #13
  %16 = load %18*, %18** %7, align 8
  %17 = call %0* @158(%18* %16)
  store %0* %17, %0** %10, align 8
  %18 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #13
  %19 = load %18*, %18** %5, align 8
  store %18* %19, %18** %11, align 8
  %20 = load %0*, %0** %9, align 8
  %21 = getelementptr inbounds %0, %0* %20, i32 0, i32 3
  %22 = getelementptr inbounds [1 x i8], [1 x i8]* %21, i32 0, i32 0
  %23 = load %0*, %0** %9, align 8
  %24 = getelementptr inbounds %0, %0* %23, i32 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = load %0*, %0** %10, align 8
  %27 = getelementptr inbounds %0, %0* %26, i32 0, i32 3
  %28 = getelementptr inbounds [1 x i8], [1 x i8]* %27, i32 0, i32 0
  %29 = load %0*, %0** %10, align 8
  %30 = getelementptr inbounds %0, %0* %29, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = load i8, i8* %8, align 1
  %33 = zext i8 %32 to i32
  %34 = call i32 @strnatcmp_ex(i8* %22, i64 %25, i8* %28, i64 %31, i32 %33)
  %35 = sext i32 %34 to i64
  %36 = load %18*, %18** %11, align 8
  %37 = getelementptr inbounds %18, %18* %36, i32 0, i32 0
  %38 = bitcast %19* %37 to i64*
  store i64 %35, i64* %38, align 8
  %39 = load %18*, %18** %11, align 8
  %40 = getelementptr inbounds %18, %18* %39, i32 0, i32 1
  %41 = bitcast %20* %40 to i32*
  store i32 4, i32* %41, align 8
  %42 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #13
  %43 = load %0*, %0** %9, align 8
  call void @159(%0* %43)
  %44 = load %0*, %0** %10, align 8
  call void @159(%0* %44)
  %45 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #13
  %46 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #13
  ret i32 0
}

declare dso_local i32 @strnatcmp_ex(i8*, i64, i8*, i64, i32) #1

; Function Attrs: nounwind uwtable
define dso_local i32 @string_natural_case_compare_function(%18* %0, %18* %1, %18* %2) #0 {
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %18*, align 8
  store %18* %0, %18** %4, align 8
  store %18* %1, %18** %5, align 8
  store %18* %2, %18** %6, align 8
  %7 = load %18*, %18** %4, align 8
  %8 = load %18*, %18** %5, align 8
  %9 = load %18*, %18** %6, align 8
  %10 = call i32 @string_natural_compare_function_ex(%18* %7, %18* %8, %18* %9, i8 zeroext 1)
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define dso_local i32 @string_natural_compare_function(%18* %0, %18* %1, %18* %2) #0 {
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca %18*, align 8
  store %18* %0, %18** %4, align 8
  store %18* %1, %18** %5, align 8
  store %18* %2, %18** %6, align 8
  %7 = load %18*, %18** %4, align 8
  %8 = load %18*, %18** %5, align 8
  %9 = load %18*, %18** %6, align 8
  %10 = call i32 @string_natural_compare_function_ex(%18* %7, %18* %8, %18* %9, i8 zeroext 0)
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strnatcmp(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @183(%14* %5, %18* %6, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @183(%14* %0, %18* %1, i32 %2) #0 {
  %4 = alloca %14*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %0*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  store %14* %0, %14** %4, align 8
  store %18* %1, %18** %5, align 8
  store i32 %2, i32* %6, align 4
  %23 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  %24 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  br label %25

25:                                               ; preds = %3
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 0, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 2, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  store i32 2, i32* %11, align 4
  %29 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  %30 = load %14*, %14** %4, align 8
  %31 = getelementptr inbounds %14, %14* %30, i32 0, i32 4
  %32 = getelementptr inbounds %18, %18* %31, i32 0, i32 2
  %33 = bitcast %21* %32 to i32*
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %12, align 4
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  %36 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  store %18* null, %18** %15, align 8
  %38 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 0, i32* %16, align 4
  %39 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %40 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  store i32 0, i32* %20, align 4
  %41 = load i32, i32* %13, align 4
  %42 = load %18*, %18** %14, align 8
  %43 = load %18*, %18** %15, align 8
  %44 = load i32, i32* %16, align 4
  %45 = load i8*, i8** %17, align 8
  %46 = load i8, i8* %18, align 1
  %47 = load i8, i8* %19, align 1
  br label %48

48:                                               ; preds = %25
  %49 = load i32, i32* %12, align 4
  %50 = load i32, i32* %10, align 4
  %51 = icmp slt i32 %49, %50
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 0)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %77, label %58

58:                                               ; preds = %48
  %59 = load i32, i32* %12, align 4
  %60 = load i32, i32* %11, align 4
  %61 = icmp sgt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %58
  %69 = load i32, i32* %11, align 4
  %70 = icmp sge i32 %69, 0
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 1)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %68, %48
  %78 = load i32, i32* %12, align 4
  %79 = load i32, i32* %10, align 4
  %80 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %78, i32 %79, i32 %80)
  store i32 1, i32* %20, align 4
  br label %226

81:                                               ; preds = %68, %58
  store i32 0, i32* %13, align 4
  %82 = load %14*, %14** %4, align 8
  %83 = bitcast %14* %82 to %18*
  %84 = getelementptr inbounds %18, %18* %83, i64 4
  store %18* %84, %18** %14, align 8
  %85 = load i32, i32* %13, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %13, align 4
  br label %87

87:                                               ; preds = %81
  %88 = load i32, i32* %13, align 4
  %89 = load i32, i32* %10, align 4
  %90 = icmp sle i32 %88, %89
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = load i8, i8* %19, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 1
  br label %95

95:                                               ; preds = %91, %87
  %96 = phi i1 [ true, %87 ], [ %94, %91 ]
  %97 = xor i1 %96, true
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = call i64 @llvm.expect.i64(i64 %99, i64 0)
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %95
  unreachable

103:                                              ; preds = %95
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  %107 = load i32, i32* %13, align 4
  %108 = load i32, i32* %10, align 4
  %109 = icmp sgt i32 %107, %108
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = load i8, i8* %19, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 0
  br label %114

114:                                              ; preds = %110, %106
  %115 = phi i1 [ true, %106 ], [ %113, %110 ]
  %116 = xor i1 %115, true
  %117 = zext i1 %116 to i32
  %118 = sext i32 %117 to i64
  %119 = call i64 @llvm.expect.i64(i64 %118, i64 0)
  %120 = icmp ne i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  unreachable

122:                                              ; preds = %114
  br label %123

123:                                              ; preds = %122
  br label %124

124:                                              ; preds = %123
  %125 = load i8, i8* %19, align 1
  %126 = icmp ne i8 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %124
  %128 = load i32, i32* %13, align 4
  %129 = load i32, i32* %12, align 4
  %130 = icmp sgt i32 %128, %129
  %131 = xor i1 %130, true
  %132 = xor i1 %131, true
  %133 = zext i1 %132 to i32
  %134 = sext i32 %133 to i64
  %135 = call i64 @llvm.expect.i64(i64 %134, i64 0)
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %127
  br label %226

138:                                              ; preds = %127
  br label %139

139:                                              ; preds = %138, %124
  %140 = load %18*, %18** %14, align 8
  %141 = getelementptr inbounds %18, %18* %140, i32 1
  store %18* %141, %18** %14, align 8
  %142 = load %18*, %18** %14, align 8
  store %18* %142, %18** %15, align 8
  %143 = load %18*, %18** %15, align 8
  %144 = call i32 @143(%18* %143, %0** %7, i32 0)
  %145 = icmp ne i32 %144, 0
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 0)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %139
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %226

154:                                              ; preds = %139
  %155 = load i32, i32* %13, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %13, align 4
  br label %157

157:                                              ; preds = %154
  %158 = load i32, i32* %13, align 4
  %159 = load i32, i32* %10, align 4
  %160 = icmp sle i32 %158, %159
  br i1 %160, label %165, label %161

161:                                              ; preds = %157
  %162 = load i8, i8* %19, align 1
  %163 = zext i8 %162 to i32
  %164 = icmp eq i32 %163, 1
  br label %165

165:                                              ; preds = %161, %157
  %166 = phi i1 [ true, %157 ], [ %164, %161 ]
  %167 = xor i1 %166, true
  %168 = zext i1 %167 to i32
  %169 = sext i32 %168 to i64
  %170 = call i64 @llvm.expect.i64(i64 %169, i64 0)
  %171 = icmp ne i64 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %165
  unreachable

173:                                              ; preds = %165
  br label %174

174:                                              ; preds = %173
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  %177 = load i32, i32* %13, align 4
  %178 = load i32, i32* %10, align 4
  %179 = icmp sgt i32 %177, %178
  br i1 %179, label %184, label %180

180:                                              ; preds = %176
  %181 = load i8, i8* %19, align 1
  %182 = zext i8 %181 to i32
  %183 = icmp eq i32 %182, 0
  br label %184

184:                                              ; preds = %180, %176
  %185 = phi i1 [ true, %176 ], [ %183, %180 ]
  %186 = xor i1 %185, true
  %187 = zext i1 %186 to i32
  %188 = sext i32 %187 to i64
  %189 = call i64 @llvm.expect.i64(i64 %188, i64 0)
  %190 = icmp ne i64 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %184
  unreachable

192:                                              ; preds = %184
  br label %193

193:                                              ; preds = %192
  br label %194

194:                                              ; preds = %193
  %195 = load i8, i8* %19, align 1
  %196 = icmp ne i8 %195, 0
  br i1 %196, label %197, label %209

197:                                              ; preds = %194
  %198 = load i32, i32* %13, align 4
  %199 = load i32, i32* %12, align 4
  %200 = icmp sgt i32 %198, %199
  %201 = xor i1 %200, true
  %202 = xor i1 %201, true
  %203 = zext i1 %202 to i32
  %204 = sext i32 %203 to i64
  %205 = call i64 @llvm.expect.i64(i64 %204, i64 0)
  %206 = icmp ne i64 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %197
  br label %226

208:                                              ; preds = %197
  br label %209

209:                                              ; preds = %208, %194
  %210 = load %18*, %18** %14, align 8
  %211 = getelementptr inbounds %18, %18* %210, i32 1
  store %18* %211, %18** %14, align 8
  %212 = load %18*, %18** %14, align 8
  store %18* %212, %18** %15, align 8
  %213 = load %18*, %18** %15, align 8
  %214 = call i32 @143(%18* %213, %0** %8, i32 0)
  %215 = icmp ne i32 %214, 0
  %216 = xor i1 %215, true
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = zext i1 %218 to i32
  %220 = sext i32 %219 to i64
  %221 = call i64 @llvm.expect.i64(i64 %220, i64 0)
  %222 = icmp ne i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %209
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %226

224:                                              ; preds = %209
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225, %223, %207, %153, %137, %77
  %227 = load i32, i32* %20, align 4
  %228 = icmp ne i32 %227, 0
  %229 = xor i1 %228, true
  %230 = xor i1 %229, true
  %231 = zext i1 %230 to i32
  %232 = sext i32 %231 to i64
  %233 = call i64 @llvm.expect.i64(i64 %232, i64 0)
  %234 = icmp ne i64 %233, 0
  br i1 %234, label %235, label %258

235:                                              ; preds = %226
  %236 = load i32, i32* %20, align 4
  %237 = icmp eq i32 %236, 2
  br i1 %237, label %238, label %241

238:                                              ; preds = %235
  %239 = load i32, i32* %13, align 4
  %240 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %239, i8* %240)
  br label %257

241:                                              ; preds = %235
  %242 = load i32, i32* %20, align 4
  %243 = icmp eq i32 %242, 3
  br i1 %243, label %244, label %248

244:                                              ; preds = %241
  %245 = load i32, i32* %13, align 4
  %246 = load i8*, i8** %17, align 8
  %247 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %245, i8* %246, %18* %247)
  br label %256

248:                                              ; preds = %241
  %249 = load i32, i32* %20, align 4
  %250 = icmp eq i32 %249, 4
  br i1 %250, label %251, label %255

251:                                              ; preds = %248
  %252 = load i32, i32* %13, align 4
  %253 = load i32, i32* %16, align 4
  %254 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %252, i32 %253, %18* %254)
  br label %255

255:                                              ; preds = %251, %248
  br label %256

256:                                              ; preds = %255, %244
  br label %257

257:                                              ; preds = %256, %238
  store i32 1, i32* %21, align 4
  br label %259

258:                                              ; preds = %226
  store i32 0, i32* %21, align 4
  br label %259

259:                                              ; preds = %258, %257
  %260 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %260) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %261 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %261) #13
  %262 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %262) #13
  %263 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %263) #13
  %264 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #13
  %265 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %265) #13
  %266 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %266) #13
  %267 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #13
  %268 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %268) #13
  %269 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #13
  %270 = load i32, i32* %21, align 4
  switch i32 %270, label %298 [
    i32 0, label %271
  ]

271:                                              ; preds = %259
  br label %272

272:                                              ; preds = %271
  br label %273

273:                                              ; preds = %272
  %274 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %274) #13
  %275 = load %18*, %18** %5, align 8
  store %18* %275, %18** %22, align 8
  %276 = load %0*, %0** %7, align 8
  %277 = getelementptr inbounds %0, %0* %276, i32 0, i32 3
  %278 = getelementptr inbounds [1 x i8], [1 x i8]* %277, i32 0, i32 0
  %279 = load %0*, %0** %7, align 8
  %280 = getelementptr inbounds %0, %0* %279, i32 0, i32 2
  %281 = load i64, i64* %280, align 8
  %282 = load %0*, %0** %8, align 8
  %283 = getelementptr inbounds %0, %0* %282, i32 0, i32 3
  %284 = getelementptr inbounds [1 x i8], [1 x i8]* %283, i32 0, i32 0
  %285 = load %0*, %0** %8, align 8
  %286 = getelementptr inbounds %0, %0* %285, i32 0, i32 2
  %287 = load i64, i64* %286, align 8
  %288 = load i32, i32* %6, align 4
  %289 = call i32 @strnatcmp_ex(i8* %278, i64 %281, i8* %284, i64 %287, i32 %288)
  %290 = sext i32 %289 to i64
  %291 = load %18*, %18** %22, align 8
  %292 = getelementptr inbounds %18, %18* %291, i32 0, i32 0
  %293 = bitcast %19* %292 to i64*
  store i64 %290, i64* %293, align 8
  %294 = load %18*, %18** %22, align 8
  %295 = getelementptr inbounds %18, %18* %294, i32 0, i32 1
  %296 = bitcast %20* %295 to i32*
  store i32 4, i32* %296, align 8
  %297 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %297) #13
  store i32 1, i32* %21, align 4
  br label %298

298:                                              ; preds = %273, %259
  %299 = bitcast %0** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %299) #13
  %300 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %300) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_localeconv(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18, align 8
  %6 = alloca %18, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %51, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %11 = bitcast %18* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #13
  %12 = bitcast %18* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #13
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #13
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #13
  %15 = load %14*, %14** %3, align 8
  %16 = getelementptr inbounds %14, %14* %15, i32 0, i32 4
  %17 = getelementptr inbounds %18, %18* %16, i32 0, i32 2
  %18 = bitcast %21* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = xor i1 %20, true
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i32
  %24 = sext i32 %23 to i64
  %25 = call i64 @llvm.expect.i64(i64 %24, i64 1)
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %2
  br label %35

28:                                               ; preds = %2
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @103, i32 0, i32 0))
  br label %35

35:                                               ; preds = %28, %27
  %36 = phi i32 [ 0, %27 ], [ %34, %28 ]
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  store i32 1, i32* %9, align 4
  br label %175

39:                                               ; preds = %35
  %40 = load %18*, %18** %4, align 8
  %41 = call i32 @_array_init(%18* %40, i32 0)
  %42 = call i32 @_array_init(%18* %5, i32 0)
  %43 = call i32 @_array_init(%18* %6, i32 0)
  %44 = bitcast %51* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* %44) #13
  %45 = call %51* @localeconv_r(%51* %10)
  %46 = getelementptr inbounds %51, %51* %10, i32 0, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = call i64 @strlen(i8* %47) #14
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %50

50:                                               ; preds = %65, %39
  %51 = load i32, i32* %8, align 4
  %52 = load i32, i32* %7, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %68

54:                                               ; preds = %50
  %55 = load i32, i32* %8, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %51, %51* %10, i32 0, i32 2
  %58 = load i8*, i8** %57, align 8
  %59 = load i32, i32* %8, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %58, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i64
  %64 = call i32 @add_index_long(%18* %5, i64 %56, i64 %63)
  br label %65

65:                                               ; preds = %54
  %66 = load i32, i32* %8, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %8, align 4
  br label %50

68:                                               ; preds = %50
  %69 = getelementptr inbounds %51, %51* %10, i32 0, i32 7
  %70 = load i8*, i8** %69, align 8
  %71 = call i64 @strlen(i8* %70) #14
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %73

73:                                               ; preds = %88, %68
  %74 = load i32, i32* %8, align 4
  %75 = load i32, i32* %7, align 4
  %76 = icmp slt i32 %74, %75
  br i1 %76, label %77, label %91

77:                                               ; preds = %73
  %78 = load i32, i32* %8, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %51, %51* %10, i32 0, i32 7
  %81 = load i8*, i8** %80, align 8
  %82 = load i32, i32* %8, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %81, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i64
  %87 = call i32 @add_index_long(%18* %6, i64 %79, i64 %86)
  br label %88

88:                                               ; preds = %77
  %89 = load i32, i32* %8, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %8, align 4
  br label %73

91:                                               ; preds = %73
  %92 = load %18*, %18** %4, align 8
  %93 = getelementptr inbounds %51, %51* %10, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = call i32 @add_assoc_string_ex(%18* %92, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @104, i32 0, i32 0), i64 13, i8* %94)
  %96 = load %18*, %18** %4, align 8
  %97 = getelementptr inbounds %51, %51* %10, i32 0, i32 1
  %98 = load i8*, i8** %97, align 8
  %99 = call i32 @add_assoc_string_ex(%18* %96, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @105, i32 0, i32 0), i64 13, i8* %98)
  %100 = load %18*, %18** %4, align 8
  %101 = getelementptr inbounds %51, %51* %10, i32 0, i32 3
  %102 = load i8*, i8** %101, align 8
  %103 = call i32 @add_assoc_string_ex(%18* %100, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @106, i32 0, i32 0), i64 15, i8* %102)
  %104 = load %18*, %18** %4, align 8
  %105 = getelementptr inbounds %51, %51* %10, i32 0, i32 4
  %106 = load i8*, i8** %105, align 8
  %107 = call i32 @add_assoc_string_ex(%18* %104, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @107, i32 0, i32 0), i64 15, i8* %106)
  %108 = load %18*, %18** %4, align 8
  %109 = getelementptr inbounds %51, %51* %10, i32 0, i32 5
  %110 = load i8*, i8** %109, align 8
  %111 = call i32 @add_assoc_string_ex(%18* %108, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @108, i32 0, i32 0), i64 17, i8* %110)
  %112 = load %18*, %18** %4, align 8
  %113 = getelementptr inbounds %51, %51* %10, i32 0, i32 6
  %114 = load i8*, i8** %113, align 8
  %115 = call i32 @add_assoc_string_ex(%18* %112, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @109, i32 0, i32 0), i64 17, i8* %114)
  %116 = load %18*, %18** %4, align 8
  %117 = getelementptr inbounds %51, %51* %10, i32 0, i32 8
  %118 = load i8*, i8** %117, align 8
  %119 = call i32 @add_assoc_string_ex(%18* %116, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @110, i32 0, i32 0), i64 13, i8* %118)
  %120 = load %18*, %18** %4, align 8
  %121 = getelementptr inbounds %51, %51* %10, i32 0, i32 9
  %122 = load i8*, i8** %121, align 8
  %123 = call i32 @add_assoc_string_ex(%18* %120, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @111, i32 0, i32 0), i64 13, i8* %122)
  %124 = load %18*, %18** %4, align 8
  %125 = getelementptr inbounds %51, %51* %10, i32 0, i32 10
  %126 = load i8, i8* %125, align 8
  %127 = sext i8 %126 to i64
  %128 = call i32 @add_assoc_long_ex(%18* %124, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @112, i32 0, i32 0), i64 15, i64 %127)
  %129 = load %18*, %18** %4, align 8
  %130 = getelementptr inbounds %51, %51* %10, i32 0, i32 11
  %131 = load i8, i8* %130, align 1
  %132 = sext i8 %131 to i64
  %133 = call i32 @add_assoc_long_ex(%18* %129, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @113, i32 0, i32 0), i64 11, i64 %132)
  %134 = load %18*, %18** %4, align 8
  %135 = getelementptr inbounds %51, %51* %10, i32 0, i32 12
  %136 = load i8, i8* %135, align 2
  %137 = sext i8 %136 to i64
  %138 = call i32 @add_assoc_long_ex(%18* %134, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @114, i32 0, i32 0), i64 13, i64 %137)
  %139 = load %18*, %18** %4, align 8
  %140 = getelementptr inbounds %51, %51* %10, i32 0, i32 13
  %141 = load i8, i8* %140, align 1
  %142 = sext i8 %141 to i64
  %143 = call i32 @add_assoc_long_ex(%18* %139, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @115, i32 0, i32 0), i64 14, i64 %142)
  %144 = load %18*, %18** %4, align 8
  %145 = getelementptr inbounds %51, %51* %10, i32 0, i32 14
  %146 = load i8, i8* %145, align 4
  %147 = sext i8 %146 to i64
  %148 = call i32 @add_assoc_long_ex(%18* %144, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @116, i32 0, i32 0), i64 13, i64 %147)
  %149 = load %18*, %18** %4, align 8
  %150 = getelementptr inbounds %51, %51* %10, i32 0, i32 15
  %151 = load i8, i8* %150, align 1
  %152 = sext i8 %151 to i64
  %153 = call i32 @add_assoc_long_ex(%18* %149, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @117, i32 0, i32 0), i64 14, i64 %152)
  %154 = load %18*, %18** %4, align 8
  %155 = getelementptr inbounds %51, %51* %10, i32 0, i32 16
  %156 = load i8, i8* %155, align 2
  %157 = sext i8 %156 to i64
  %158 = call i32 @add_assoc_long_ex(%18* %154, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @118, i32 0, i32 0), i64 11, i64 %157)
  %159 = load %18*, %18** %4, align 8
  %160 = getelementptr inbounds %51, %51* %10, i32 0, i32 17
  %161 = load i8, i8* %160, align 1
  %162 = sext i8 %161 to i64
  %163 = call i32 @add_assoc_long_ex(%18* %159, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @119, i32 0, i32 0), i64 11, i64 %162)
  %164 = bitcast %51* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 96, i8* %164) #13
  %165 = load %18*, %18** %4, align 8
  %166 = getelementptr inbounds %18, %18* %165, i32 0, i32 0
  %167 = bitcast %19* %166 to %43**
  %168 = load %43*, %43** %167, align 8
  %169 = call %18* @_zend_hash_str_update(%43* %168, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @120, i32 0, i32 0), i64 8, %18* %5)
  %170 = load %18*, %18** %4, align 8
  %171 = getelementptr inbounds %18, %18* %170, i32 0, i32 0
  %172 = bitcast %19* %171 to %43**
  %173 = load %43*, %43** %172, align 8
  %174 = call %18* @_zend_hash_str_update(%43* %173, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @121, i32 0, i32 0), i64 12, %18* %6)
  store i32 0, i32* %9, align 4
  br label %175

175:                                              ; preds = %91, %38
  %176 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %176) #13
  %177 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %177) #13
  %178 = bitcast %18* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %178) #13
  %179 = bitcast %18* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %179) #13
  %180 = load i32, i32* %9, align 4
  switch i32 %180, label %182 [
    i32 0, label %181
    i32 1, label %181
  ]

181:                                              ; preds = %175, %175
  ret void

182:                                              ; preds = %175
  unreachable
}

declare dso_local i32 @zend_parse_parameters(i32, i8*, ...) #1

declare dso_local i32 @add_assoc_long_ex(%18*, i8*, i64, i64) #1

declare dso_local %18* @_zend_hash_str_update(%43*, i8*, i64, %18*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_strnatcasecmp(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %5 = load %14*, %14** %3, align 8
  %6 = load %18*, %18** %4, align 8
  call void @183(%14* %5, %18* %6, i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_substr_count(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %18*, align 8
  %22 = alloca %18*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %30 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  store i64 0, i64* %7, align 8
  %33 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  store i64 0, i64* %8, align 8
  %34 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = load %14*, %14** %3, align 8
  %36 = getelementptr inbounds %14, %14* %35, i32 0, i32 4
  %37 = getelementptr inbounds %18, %18* %36, i32 0, i32 2
  %38 = bitcast %21* %37 to i32*
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %9, align 4
  %40 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store i64 0, i64* %10, align 8
  %41 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  %42 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  %43 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #13
  %44 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  br label %45

45:                                               ; preds = %2
  %46 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  store i32 0, i32* %16, align 4
  %47 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #13
  store i32 2, i32* %17, align 4
  %48 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 4, i32* %18, align 4
  %49 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #13
  %50 = load %14*, %14** %3, align 8
  %51 = getelementptr inbounds %14, %14* %50, i32 0, i32 4
  %52 = getelementptr inbounds %18, %18* %51, i32 0, i32 2
  %53 = bitcast %21* %52 to i32*
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %19, align 4
  %55 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #13
  %56 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #13
  %57 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #13
  store %18* null, %18** %22, align 8
  %58 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #13
  store i32 0, i32* %23, align 4
  %59 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #13
  store i8* null, i8** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %25) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %26) #13
  store i8 0, i8* %26, align 1
  %60 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #13
  store i32 0, i32* %27, align 4
  %61 = load i32, i32* %20, align 4
  %62 = load %18*, %18** %21, align 8
  %63 = load %18*, %18** %22, align 8
  %64 = load i32, i32* %23, align 4
  %65 = load i8*, i8** %24, align 8
  %66 = load i8, i8* %25, align 1
  %67 = load i8, i8* %26, align 1
  br label %68

68:                                               ; preds = %45
  %69 = load i32, i32* %19, align 4
  %70 = load i32, i32* %17, align 4
  %71 = icmp slt i32 %69, %70
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 0)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %97, label %78

78:                                               ; preds = %68
  %79 = load i32, i32* %19, align 4
  %80 = load i32, i32* %18, align 4
  %81 = icmp sgt i32 %79, %80
  %82 = xor i1 %81, true
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = call i64 @llvm.expect.i64(i64 %85, i64 0)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %101

88:                                               ; preds = %78
  %89 = load i32, i32* %18, align 4
  %90 = icmp sge i32 %89, 0
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  %93 = zext i1 %92 to i32
  %94 = sext i32 %93 to i64
  %95 = call i64 @llvm.expect.i64(i64 %94, i64 1)
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %88, %68
  %98 = load i32, i32* %19, align 4
  %99 = load i32, i32* %17, align 4
  %100 = load i32, i32* %18, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %98, i32 %99, i32 %100)
  store i32 1, i32* %27, align 4
  br label %386

101:                                              ; preds = %88, %78
  store i32 0, i32* %20, align 4
  %102 = load %14*, %14** %3, align 8
  %103 = bitcast %14* %102 to %18*
  %104 = getelementptr inbounds %18, %18* %103, i64 4
  store %18* %104, %18** %21, align 8
  %105 = load i32, i32* %20, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %20, align 4
  br label %107

107:                                              ; preds = %101
  %108 = load i32, i32* %20, align 4
  %109 = load i32, i32* %17, align 4
  %110 = icmp sle i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %26, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 1
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  %127 = load i32, i32* %20, align 4
  %128 = load i32, i32* %17, align 4
  %129 = icmp sgt i32 %127, %128
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = load i8, i8* %26, align 1
  %132 = zext i8 %131 to i32
  %133 = icmp eq i32 %132, 0
  br label %134

134:                                              ; preds = %130, %126
  %135 = phi i1 [ true, %126 ], [ %133, %130 ]
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %134
  unreachable

142:                                              ; preds = %134
  br label %143

143:                                              ; preds = %142
  br label %144

144:                                              ; preds = %143
  %145 = load i8, i8* %26, align 1
  %146 = icmp ne i8 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %144
  %148 = load i32, i32* %20, align 4
  %149 = load i32, i32* %19, align 4
  %150 = icmp sgt i32 %148, %149
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %147
  br label %386

158:                                              ; preds = %147
  br label %159

159:                                              ; preds = %158, %144
  %160 = load %18*, %18** %21, align 8
  %161 = getelementptr inbounds %18, %18* %160, i32 1
  store %18* %161, %18** %21, align 8
  %162 = load %18*, %18** %21, align 8
  store %18* %162, %18** %22, align 8
  %163 = load %18*, %18** %22, align 8
  %164 = call i32 @151(%18* %163, i8** %5, i64* %11, i32 0)
  %165 = icmp ne i32 %164, 0
  %166 = xor i1 %165, true
  %167 = xor i1 %166, true
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %159
  store i32 2, i32* %23, align 4
  store i32 4, i32* %27, align 4
  br label %386

174:                                              ; preds = %159
  %175 = load i32, i32* %20, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %20, align 4
  br label %177

177:                                              ; preds = %174
  %178 = load i32, i32* %20, align 4
  %179 = load i32, i32* %17, align 4
  %180 = icmp sle i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %26, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 1
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  br label %196

196:                                              ; preds = %195
  %197 = load i32, i32* %20, align 4
  %198 = load i32, i32* %17, align 4
  %199 = icmp sgt i32 %197, %198
  br i1 %199, label %204, label %200

200:                                              ; preds = %196
  %201 = load i8, i8* %26, align 1
  %202 = zext i8 %201 to i32
  %203 = icmp eq i32 %202, 0
  br label %204

204:                                              ; preds = %200, %196
  %205 = phi i1 [ true, %196 ], [ %203, %200 ]
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %204
  unreachable

212:                                              ; preds = %204
  br label %213

213:                                              ; preds = %212
  br label %214

214:                                              ; preds = %213
  %215 = load i8, i8* %26, align 1
  %216 = icmp ne i8 %215, 0
  br i1 %216, label %217, label %229

217:                                              ; preds = %214
  %218 = load i32, i32* %20, align 4
  %219 = load i32, i32* %19, align 4
  %220 = icmp sgt i32 %218, %219
  %221 = xor i1 %220, true
  %222 = xor i1 %221, true
  %223 = zext i1 %222 to i32
  %224 = sext i32 %223 to i64
  %225 = call i64 @llvm.expect.i64(i64 %224, i64 0)
  %226 = icmp ne i64 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %217
  br label %386

228:                                              ; preds = %217
  br label %229

229:                                              ; preds = %228, %214
  %230 = load %18*, %18** %21, align 8
  %231 = getelementptr inbounds %18, %18* %230, i32 1
  store %18* %231, %18** %21, align 8
  %232 = load %18*, %18** %21, align 8
  store %18* %232, %18** %22, align 8
  %233 = load %18*, %18** %22, align 8
  %234 = call i32 @151(%18* %233, i8** %6, i64* %12, i32 0)
  %235 = icmp ne i32 %234, 0
  %236 = xor i1 %235, true
  %237 = xor i1 %236, true
  %238 = xor i1 %237, true
  %239 = zext i1 %238 to i32
  %240 = sext i32 %239 to i64
  %241 = call i64 @llvm.expect.i64(i64 %240, i64 0)
  %242 = icmp ne i64 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %229
  store i32 2, i32* %23, align 4
  store i32 4, i32* %27, align 4
  br label %386

244:                                              ; preds = %229
  store i8 1, i8* %26, align 1
  %245 = load i32, i32* %20, align 4
  %246 = add nsw i32 %245, 1
  store i32 %246, i32* %20, align 4
  br label %247

247:                                              ; preds = %244
  %248 = load i32, i32* %20, align 4
  %249 = load i32, i32* %17, align 4
  %250 = icmp sle i32 %248, %249
  br i1 %250, label %255, label %251

251:                                              ; preds = %247
  %252 = load i8, i8* %26, align 1
  %253 = zext i8 %252 to i32
  %254 = icmp eq i32 %253, 1
  br label %255

255:                                              ; preds = %251, %247
  %256 = phi i1 [ true, %247 ], [ %254, %251 ]
  %257 = xor i1 %256, true
  %258 = zext i1 %257 to i32
  %259 = sext i32 %258 to i64
  %260 = call i64 @llvm.expect.i64(i64 %259, i64 0)
  %261 = icmp ne i64 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %255
  unreachable

263:                                              ; preds = %255
  br label %264

264:                                              ; preds = %263
  br label %265

265:                                              ; preds = %264
  br label %266

266:                                              ; preds = %265
  %267 = load i32, i32* %20, align 4
  %268 = load i32, i32* %17, align 4
  %269 = icmp sgt i32 %267, %268
  br i1 %269, label %274, label %270

270:                                              ; preds = %266
  %271 = load i8, i8* %26, align 1
  %272 = zext i8 %271 to i32
  %273 = icmp eq i32 %272, 0
  br label %274

274:                                              ; preds = %270, %266
  %275 = phi i1 [ true, %266 ], [ %273, %270 ]
  %276 = xor i1 %275, true
  %277 = zext i1 %276 to i32
  %278 = sext i32 %277 to i64
  %279 = call i64 @llvm.expect.i64(i64 %278, i64 0)
  %280 = icmp ne i64 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %274
  unreachable

282:                                              ; preds = %274
  br label %283

283:                                              ; preds = %282
  br label %284

284:                                              ; preds = %283
  %285 = load i8, i8* %26, align 1
  %286 = icmp ne i8 %285, 0
  br i1 %286, label %287, label %299

287:                                              ; preds = %284
  %288 = load i32, i32* %20, align 4
  %289 = load i32, i32* %19, align 4
  %290 = icmp sgt i32 %288, %289
  %291 = xor i1 %290, true
  %292 = xor i1 %291, true
  %293 = zext i1 %292 to i32
  %294 = sext i32 %293 to i64
  %295 = call i64 @llvm.expect.i64(i64 %294, i64 0)
  %296 = icmp ne i64 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %287
  br label %386

298:                                              ; preds = %287
  br label %299

299:                                              ; preds = %298, %284
  %300 = load %18*, %18** %21, align 8
  %301 = getelementptr inbounds %18, %18* %300, i32 1
  store %18* %301, %18** %21, align 8
  %302 = load %18*, %18** %21, align 8
  store %18* %302, %18** %22, align 8
  %303 = load %18*, %18** %22, align 8
  %304 = call i32 @147(%18* %303, i64* %7, i8* %25, i32 0, i32 0)
  %305 = icmp ne i32 %304, 0
  %306 = xor i1 %305, true
  %307 = xor i1 %306, true
  %308 = xor i1 %307, true
  %309 = zext i1 %308 to i32
  %310 = sext i32 %309 to i64
  %311 = call i64 @llvm.expect.i64(i64 %310, i64 0)
  %312 = icmp ne i64 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %299
  store i32 0, i32* %23, align 4
  store i32 4, i32* %27, align 4
  br label %386

314:                                              ; preds = %299
  %315 = load i32, i32* %20, align 4
  %316 = add nsw i32 %315, 1
  store i32 %316, i32* %20, align 4
  br label %317

317:                                              ; preds = %314
  %318 = load i32, i32* %20, align 4
  %319 = load i32, i32* %17, align 4
  %320 = icmp sle i32 %318, %319
  br i1 %320, label %325, label %321

321:                                              ; preds = %317
  %322 = load i8, i8* %26, align 1
  %323 = zext i8 %322 to i32
  %324 = icmp eq i32 %323, 1
  br label %325

325:                                              ; preds = %321, %317
  %326 = phi i1 [ true, %317 ], [ %324, %321 ]
  %327 = xor i1 %326, true
  %328 = zext i1 %327 to i32
  %329 = sext i32 %328 to i64
  %330 = call i64 @llvm.expect.i64(i64 %329, i64 0)
  %331 = icmp ne i64 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %325
  unreachable

333:                                              ; preds = %325
  br label %334

334:                                              ; preds = %333
  br label %335

335:                                              ; preds = %334
  br label %336

336:                                              ; preds = %335
  %337 = load i32, i32* %20, align 4
  %338 = load i32, i32* %17, align 4
  %339 = icmp sgt i32 %337, %338
  br i1 %339, label %344, label %340

340:                                              ; preds = %336
  %341 = load i8, i8* %26, align 1
  %342 = zext i8 %341 to i32
  %343 = icmp eq i32 %342, 0
  br label %344

344:                                              ; preds = %340, %336
  %345 = phi i1 [ true, %336 ], [ %343, %340 ]
  %346 = xor i1 %345, true
  %347 = zext i1 %346 to i32
  %348 = sext i32 %347 to i64
  %349 = call i64 @llvm.expect.i64(i64 %348, i64 0)
  %350 = icmp ne i64 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %344
  unreachable

352:                                              ; preds = %344
  br label %353

353:                                              ; preds = %352
  br label %354

354:                                              ; preds = %353
  %355 = load i8, i8* %26, align 1
  %356 = icmp ne i8 %355, 0
  br i1 %356, label %357, label %369

357:                                              ; preds = %354
  %358 = load i32, i32* %20, align 4
  %359 = load i32, i32* %19, align 4
  %360 = icmp sgt i32 %358, %359
  %361 = xor i1 %360, true
  %362 = xor i1 %361, true
  %363 = zext i1 %362 to i32
  %364 = sext i32 %363 to i64
  %365 = call i64 @llvm.expect.i64(i64 %364, i64 0)
  %366 = icmp ne i64 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %357
  br label %386

368:                                              ; preds = %357
  br label %369

369:                                              ; preds = %368, %354
  %370 = load %18*, %18** %21, align 8
  %371 = getelementptr inbounds %18, %18* %370, i32 1
  store %18* %371, %18** %21, align 8
  %372 = load %18*, %18** %21, align 8
  store %18* %372, %18** %22, align 8
  %373 = load %18*, %18** %22, align 8
  %374 = call i32 @147(%18* %373, i64* %8, i8* %25, i32 0, i32 0)
  %375 = icmp ne i32 %374, 0
  %376 = xor i1 %375, true
  %377 = xor i1 %376, true
  %378 = xor i1 %377, true
  %379 = zext i1 %378 to i32
  %380 = sext i32 %379 to i64
  %381 = call i64 @llvm.expect.i64(i64 %380, i64 0)
  %382 = icmp ne i64 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %369
  store i32 0, i32* %23, align 4
  store i32 4, i32* %27, align 4
  br label %386

384:                                              ; preds = %369
  br label %385

385:                                              ; preds = %384
  br label %386

386:                                              ; preds = %385, %383, %367, %313, %297, %243, %227, %173, %157, %97
  %387 = load i32, i32* %27, align 4
  %388 = icmp ne i32 %387, 0
  %389 = xor i1 %388, true
  %390 = xor i1 %389, true
  %391 = zext i1 %390 to i32
  %392 = sext i32 %391 to i64
  %393 = call i64 @llvm.expect.i64(i64 %392, i64 0)
  %394 = icmp ne i64 %393, 0
  br i1 %394, label %395, label %418

395:                                              ; preds = %386
  %396 = load i32, i32* %27, align 4
  %397 = icmp eq i32 %396, 2
  br i1 %397, label %398, label %401

398:                                              ; preds = %395
  %399 = load i32, i32* %20, align 4
  %400 = load i8*, i8** %24, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %399, i8* %400)
  br label %417

401:                                              ; preds = %395
  %402 = load i32, i32* %27, align 4
  %403 = icmp eq i32 %402, 3
  br i1 %403, label %404, label %408

404:                                              ; preds = %401
  %405 = load i32, i32* %20, align 4
  %406 = load i8*, i8** %24, align 8
  %407 = load %18*, %18** %22, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %405, i8* %406, %18* %407)
  br label %416

408:                                              ; preds = %401
  %409 = load i32, i32* %27, align 4
  %410 = icmp eq i32 %409, 4
  br i1 %410, label %411, label %415

411:                                              ; preds = %408
  %412 = load i32, i32* %20, align 4
  %413 = load i32, i32* %23, align 4
  %414 = load %18*, %18** %22, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %412, i32 %413, %18* %414)
  br label %415

415:                                              ; preds = %411, %408
  br label %416

416:                                              ; preds = %415, %404
  br label %417

417:                                              ; preds = %416, %398
  store i32 1, i32* %28, align 4
  br label %419

418:                                              ; preds = %386
  store i32 0, i32* %28, align 4
  br label %419

419:                                              ; preds = %418, %417
  %420 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %420) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %26) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %25) #13
  %421 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %421) #13
  %422 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %422) #13
  %423 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %423) #13
  %424 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %424) #13
  %425 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %425) #13
  %426 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %426) #13
  %427 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %427) #13
  %428 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %428) #13
  %429 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %429) #13
  %430 = load i32, i32* %28, align 4
  switch i32 %430, label %553 [
    i32 0, label %431
  ]

431:                                              ; preds = %419
  br label %432

432:                                              ; preds = %431
  br label %433

433:                                              ; preds = %432
  %434 = load i64, i64* %12, align 8
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %436, label %443

436:                                              ; preds = %433
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @122, i32 0, i32 0))
  br label %437

437:                                              ; preds = %436
  %438 = load %18*, %18** %4, align 8
  %439 = getelementptr inbounds %18, %18* %438, i32 0, i32 1
  %440 = bitcast %20* %439 to i32*
  store i32 2, i32* %440, align 8
  br label %441

441:                                              ; preds = %437
  br label %442

442:                                              ; preds = %441
  store i32 1, i32* %28, align 4
  br label %553

443:                                              ; preds = %433
  %444 = load i8*, i8** %5, align 8
  store i8* %444, i8** %13, align 8
  %445 = load i8*, i8** %13, align 8
  %446 = load i64, i64* %11, align 8
  %447 = getelementptr inbounds i8, i8* %445, i64 %446
  store i8* %447, i8** %14, align 8
  %448 = load i64, i64* %7, align 8
  %449 = icmp slt i64 %448, 0
  br i1 %449, label %450, label %454

450:                                              ; preds = %443
  %451 = load i64, i64* %11, align 8
  %452 = load i64, i64* %7, align 8
  %453 = add nsw i64 %452, %451
  store i64 %453, i64* %7, align 8
  br label %454

454:                                              ; preds = %450, %443
  %455 = load i64, i64* %7, align 8
  %456 = icmp slt i64 %455, 0
  br i1 %456, label %461, label %457

457:                                              ; preds = %454
  %458 = load i64, i64* %7, align 8
  %459 = load i64, i64* %11, align 8
  %460 = icmp ugt i64 %458, %459
  br i1 %460, label %461, label %468

461:                                              ; preds = %457, %454
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @85, i32 0, i32 0))
  br label %462

462:                                              ; preds = %461
  %463 = load %18*, %18** %4, align 8
  %464 = getelementptr inbounds %18, %18* %463, i32 0, i32 1
  %465 = bitcast %20* %464 to i32*
  store i32 2, i32* %465, align 8
  br label %466

466:                                              ; preds = %462
  br label %467

467:                                              ; preds = %466
  store i32 1, i32* %28, align 4
  br label %553

468:                                              ; preds = %457
  %469 = load i64, i64* %7, align 8
  %470 = load i8*, i8** %13, align 8
  %471 = getelementptr inbounds i8, i8* %470, i64 %469
  store i8* %471, i8** %13, align 8
  %472 = load i32, i32* %9, align 4
  %473 = icmp eq i32 %472, 4
  br i1 %473, label %474, label %503

474:                                              ; preds = %468
  %475 = load i64, i64* %8, align 8
  %476 = icmp slt i64 %475, 0
  br i1 %476, label %477, label %483

477:                                              ; preds = %474
  %478 = load i64, i64* %11, align 8
  %479 = load i64, i64* %7, align 8
  %480 = sub i64 %478, %479
  %481 = load i64, i64* %8, align 8
  %482 = add i64 %481, %480
  store i64 %482, i64* %8, align 8
  br label %483

483:                                              ; preds = %477, %474
  %484 = load i64, i64* %8, align 8
  %485 = icmp slt i64 %484, 0
  br i1 %485, label %492, label %486

486:                                              ; preds = %483
  %487 = load i64, i64* %8, align 8
  %488 = load i64, i64* %11, align 8
  %489 = load i64, i64* %7, align 8
  %490 = sub i64 %488, %489
  %491 = icmp ugt i64 %487, %490
  br i1 %491, label %492, label %499

492:                                              ; preds = %486, %483
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @123, i32 0, i32 0))
  br label %493

493:                                              ; preds = %492
  %494 = load %18*, %18** %4, align 8
  %495 = getelementptr inbounds %18, %18* %494, i32 0, i32 1
  %496 = bitcast %20* %495 to i32*
  store i32 2, i32* %496, align 8
  br label %497

497:                                              ; preds = %493
  br label %498

498:                                              ; preds = %497
  store i32 1, i32* %28, align 4
  br label %553

499:                                              ; preds = %486
  %500 = load i8*, i8** %13, align 8
  %501 = load i64, i64* %8, align 8
  %502 = getelementptr inbounds i8, i8* %500, i64 %501
  store i8* %502, i8** %14, align 8
  br label %503

503:                                              ; preds = %499, %468
  %504 = load i64, i64* %12, align 8
  %505 = icmp eq i64 %504, 1
  br i1 %505, label %506, label %527

506:                                              ; preds = %503
  %507 = load i8*, i8** %6, align 8
  %508 = getelementptr inbounds i8, i8* %507, i64 0
  %509 = load i8, i8* %508, align 1
  store i8 %509, i8* %15, align 1
  br label %510

510:                                              ; preds = %521, %506
  %511 = load i8*, i8** %13, align 8
  %512 = load i8, i8* %15, align 1
  %513 = sext i8 %512 to i32
  %514 = load i8*, i8** %14, align 8
  %515 = load i8*, i8** %13, align 8
  %516 = ptrtoint i8* %514 to i64
  %517 = ptrtoint i8* %515 to i64
  %518 = sub i64 %516, %517
  %519 = call i8* @memchr(i8* %511, i32 %513, i64 %518) #14
  store i8* %519, i8** %13, align 8
  %520 = icmp ne i8* %519, null
  br i1 %520, label %521, label %526

521:                                              ; preds = %510
  %522 = load i64, i64* %10, align 8
  %523 = add nsw i64 %522, 1
  store i64 %523, i64* %10, align 8
  %524 = load i8*, i8** %13, align 8
  %525 = getelementptr inbounds i8, i8* %524, i32 1
  store i8* %525, i8** %13, align 8
  br label %510

526:                                              ; preds = %510
  br label %542

527:                                              ; preds = %503
  br label %528

528:                                              ; preds = %535, %527
  %529 = load i8*, i8** %13, align 8
  %530 = load i8*, i8** %6, align 8
  %531 = load i64, i64* %12, align 8
  %532 = load i8*, i8** %14, align 8
  %533 = call i8* @156(i8* %529, i8* %530, i64 %531, i8* %532)
  store i8* %533, i8** %13, align 8
  %534 = icmp ne i8* %533, null
  br i1 %534, label %535, label %541

535:                                              ; preds = %528
  %536 = load i64, i64* %12, align 8
  %537 = load i8*, i8** %13, align 8
  %538 = getelementptr inbounds i8, i8* %537, i64 %536
  store i8* %538, i8** %13, align 8
  %539 = load i64, i64* %10, align 8
  %540 = add nsw i64 %539, 1
  store i64 %540, i64* %10, align 8
  br label %528

541:                                              ; preds = %528
  br label %542

542:                                              ; preds = %541, %526
  %543 = bitcast %18** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %543) #13
  %544 = load %18*, %18** %4, align 8
  store %18* %544, %18** %29, align 8
  %545 = load i64, i64* %10, align 8
  %546 = load %18*, %18** %29, align 8
  %547 = getelementptr inbounds %18, %18* %546, i32 0, i32 0
  %548 = bitcast %19* %547 to i64*
  store i64 %545, i64* %548, align 8
  %549 = load %18*, %18** %29, align 8
  %550 = getelementptr inbounds %18, %18* %549, i32 0, i32 1
  %551 = bitcast %20* %550 to i32*
  store i32 4, i32* %551, align 8
  %552 = bitcast %18** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %552) #13
  store i32 1, i32* %28, align 4
  br label %553

553:                                              ; preds = %542, %498, %467, %442, %419
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %554 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %554) #13
  %555 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %555) #13
  %556 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %556) #13
  %557 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %557) #13
  %558 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %558) #13
  %559 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %559) #13
  %560 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %560) #13
  %561 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %561) #13
  %562 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %562) #13
  %563 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %563) #13
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) #6

; Function Attrs: nounwind uwtable
define hidden void @zif_str_pad(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %0*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %18*, align 8
  %21 = alloca %18*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %18*, align 8
  %29 = alloca %0*, align 8
  %30 = alloca %18*, align 8
  %31 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %32 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  %35 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @124, i32 0, i32 0), i8** %8, align 8
  %36 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store i64 1, i64* %9, align 8
  %37 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  store i64 1, i64* %10, align 8
  %38 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  %39 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  store i64 0, i64* %12, align 8
  %40 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store i64 0, i64* %13, align 8
  %41 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #13
  store %0* null, %0** %14, align 8
  br label %42

42:                                               ; preds = %2
  %43 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %15, align 4
  %44 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #13
  store i32 2, i32* %16, align 4
  %45 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #13
  store i32 4, i32* %17, align 4
  %46 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  %47 = load %14*, %14** %3, align 8
  %48 = getelementptr inbounds %14, %14* %47, i32 0, i32 4
  %49 = getelementptr inbounds %18, %18* %48, i32 0, i32 2
  %50 = bitcast %21* %49 to i32*
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %18, align 4
  %52 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #13
  %53 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #13
  %54 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #13
  store %18* null, %18** %21, align 8
  %55 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #13
  store i32 0, i32* %22, align 4
  %56 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #13
  store i8* null, i8** %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %25) #13
  store i8 0, i8* %25, align 1
  %57 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #13
  store i32 0, i32* %26, align 4
  %58 = load i32, i32* %19, align 4
  %59 = load %18*, %18** %20, align 8
  %60 = load %18*, %18** %21, align 8
  %61 = load i32, i32* %22, align 4
  %62 = load i8*, i8** %23, align 8
  %63 = load i8, i8* %24, align 1
  %64 = load i8, i8* %25, align 1
  br label %65

65:                                               ; preds = %42
  %66 = load i32, i32* %18, align 4
  %67 = load i32, i32* %16, align 4
  %68 = icmp slt i32 %66, %67
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 0)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %94, label %75

75:                                               ; preds = %65
  %76 = load i32, i32* %18, align 4
  %77 = load i32, i32* %17, align 4
  %78 = icmp sgt i32 %76, %77
  %79 = xor i1 %78, true
  %80 = xor i1 %79, true
  %81 = zext i1 %80 to i32
  %82 = sext i32 %81 to i64
  %83 = call i64 @llvm.expect.i64(i64 %82, i64 0)
  %84 = icmp ne i64 %83, 0
  br i1 %84, label %85, label %98

85:                                               ; preds = %75
  %86 = load i32, i32* %17, align 4
  %87 = icmp sge i32 %86, 0
  %88 = xor i1 %87, true
  %89 = xor i1 %88, true
  %90 = zext i1 %89 to i32
  %91 = sext i32 %90 to i64
  %92 = call i64 @llvm.expect.i64(i64 %91, i64 1)
  %93 = icmp ne i64 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %85, %65
  %95 = load i32, i32* %18, align 4
  %96 = load i32, i32* %16, align 4
  %97 = load i32, i32* %17, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %95, i32 %96, i32 %97)
  store i32 1, i32* %26, align 4
  br label %383

98:                                               ; preds = %85, %75
  store i32 0, i32* %19, align 4
  %99 = load %14*, %14** %3, align 8
  %100 = bitcast %14* %99 to %18*
  %101 = getelementptr inbounds %18, %18* %100, i64 4
  store %18* %101, %18** %20, align 8
  %102 = load i32, i32* %19, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %19, align 4
  br label %104

104:                                              ; preds = %98
  %105 = load i32, i32* %19, align 4
  %106 = load i32, i32* %16, align 4
  %107 = icmp sle i32 %105, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %104
  %109 = load i8, i8* %25, align 1
  %110 = zext i8 %109 to i32
  %111 = icmp eq i32 %110, 1
  br label %112

112:                                              ; preds = %108, %104
  %113 = phi i1 [ true, %104 ], [ %111, %108 ]
  %114 = xor i1 %113, true
  %115 = zext i1 %114 to i32
  %116 = sext i32 %115 to i64
  %117 = call i64 @llvm.expect.i64(i64 %116, i64 0)
  %118 = icmp ne i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %112
  unreachable

120:                                              ; preds = %112
  br label %121

121:                                              ; preds = %120
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i32, i32* %19, align 4
  %125 = load i32, i32* %16, align 4
  %126 = icmp sgt i32 %124, %125
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = load i8, i8* %25, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 0
  br label %131

131:                                              ; preds = %127, %123
  %132 = phi i1 [ true, %123 ], [ %130, %127 ]
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %131
  unreachable

139:                                              ; preds = %131
  br label %140

140:                                              ; preds = %139
  br label %141

141:                                              ; preds = %140
  %142 = load i8, i8* %25, align 1
  %143 = icmp ne i8 %142, 0
  br i1 %143, label %144, label %156

144:                                              ; preds = %141
  %145 = load i32, i32* %19, align 4
  %146 = load i32, i32* %18, align 4
  %147 = icmp sgt i32 %145, %146
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %144
  br label %383

155:                                              ; preds = %144
  br label %156

156:                                              ; preds = %155, %141
  %157 = load %18*, %18** %20, align 8
  %158 = getelementptr inbounds %18, %18* %157, i32 1
  store %18* %158, %18** %20, align 8
  %159 = load %18*, %18** %20, align 8
  store %18* %159, %18** %21, align 8
  %160 = load %18*, %18** %21, align 8
  %161 = call i32 @143(%18* %160, %0** %5, i32 0)
  %162 = icmp ne i32 %161, 0
  %163 = xor i1 %162, true
  %164 = xor i1 %163, true
  %165 = xor i1 %164, true
  %166 = zext i1 %165 to i32
  %167 = sext i32 %166 to i64
  %168 = call i64 @llvm.expect.i64(i64 %167, i64 0)
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %156
  store i32 2, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %383

171:                                              ; preds = %156
  %172 = load i32, i32* %19, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %19, align 4
  br label %174

174:                                              ; preds = %171
  %175 = load i32, i32* %19, align 4
  %176 = load i32, i32* %16, align 4
  %177 = icmp sle i32 %175, %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = load i8, i8* %25, align 1
  %180 = zext i8 %179 to i32
  %181 = icmp eq i32 %180, 1
  br label %182

182:                                              ; preds = %178, %174
  %183 = phi i1 [ true, %174 ], [ %181, %178 ]
  %184 = xor i1 %183, true
  %185 = zext i1 %184 to i32
  %186 = sext i32 %185 to i64
  %187 = call i64 @llvm.expect.i64(i64 %186, i64 0)
  %188 = icmp ne i64 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %182
  unreachable

190:                                              ; preds = %182
  br label %191

191:                                              ; preds = %190
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  %194 = load i32, i32* %19, align 4
  %195 = load i32, i32* %16, align 4
  %196 = icmp sgt i32 %194, %195
  br i1 %196, label %201, label %197

197:                                              ; preds = %193
  %198 = load i8, i8* %25, align 1
  %199 = zext i8 %198 to i32
  %200 = icmp eq i32 %199, 0
  br label %201

201:                                              ; preds = %197, %193
  %202 = phi i1 [ true, %193 ], [ %200, %197 ]
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %201
  unreachable

209:                                              ; preds = %201
  br label %210

210:                                              ; preds = %209
  br label %211

211:                                              ; preds = %210
  %212 = load i8, i8* %25, align 1
  %213 = icmp ne i8 %212, 0
  br i1 %213, label %214, label %226

214:                                              ; preds = %211
  %215 = load i32, i32* %19, align 4
  %216 = load i32, i32* %18, align 4
  %217 = icmp sgt i32 %215, %216
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %214
  br label %383

225:                                              ; preds = %214
  br label %226

226:                                              ; preds = %225, %211
  %227 = load %18*, %18** %20, align 8
  %228 = getelementptr inbounds %18, %18* %227, i32 1
  store %18* %228, %18** %20, align 8
  %229 = load %18*, %18** %20, align 8
  store %18* %229, %18** %21, align 8
  %230 = load %18*, %18** %21, align 8
  %231 = call i32 @147(%18* %230, i64* %6, i8* %24, i32 0, i32 0)
  %232 = icmp ne i32 %231, 0
  %233 = xor i1 %232, true
  %234 = xor i1 %233, true
  %235 = xor i1 %234, true
  %236 = zext i1 %235 to i32
  %237 = sext i32 %236 to i64
  %238 = call i64 @llvm.expect.i64(i64 %237, i64 0)
  %239 = icmp ne i64 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %226
  store i32 0, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %383

241:                                              ; preds = %226
  store i8 1, i8* %25, align 1
  %242 = load i32, i32* %19, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %19, align 4
  br label %244

244:                                              ; preds = %241
  %245 = load i32, i32* %19, align 4
  %246 = load i32, i32* %16, align 4
  %247 = icmp sle i32 %245, %246
  br i1 %247, label %252, label %248

248:                                              ; preds = %244
  %249 = load i8, i8* %25, align 1
  %250 = zext i8 %249 to i32
  %251 = icmp eq i32 %250, 1
  br label %252

252:                                              ; preds = %248, %244
  %253 = phi i1 [ true, %244 ], [ %251, %248 ]
  %254 = xor i1 %253, true
  %255 = zext i1 %254 to i32
  %256 = sext i32 %255 to i64
  %257 = call i64 @llvm.expect.i64(i64 %256, i64 0)
  %258 = icmp ne i64 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %252
  unreachable

260:                                              ; preds = %252
  br label %261

261:                                              ; preds = %260
  br label %262

262:                                              ; preds = %261
  br label %263

263:                                              ; preds = %262
  %264 = load i32, i32* %19, align 4
  %265 = load i32, i32* %16, align 4
  %266 = icmp sgt i32 %264, %265
  br i1 %266, label %271, label %267

267:                                              ; preds = %263
  %268 = load i8, i8* %25, align 1
  %269 = zext i8 %268 to i32
  %270 = icmp eq i32 %269, 0
  br label %271

271:                                              ; preds = %267, %263
  %272 = phi i1 [ true, %263 ], [ %270, %267 ]
  %273 = xor i1 %272, true
  %274 = zext i1 %273 to i32
  %275 = sext i32 %274 to i64
  %276 = call i64 @llvm.expect.i64(i64 %275, i64 0)
  %277 = icmp ne i64 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %271
  unreachable

279:                                              ; preds = %271
  br label %280

280:                                              ; preds = %279
  br label %281

281:                                              ; preds = %280
  %282 = load i8, i8* %25, align 1
  %283 = icmp ne i8 %282, 0
  br i1 %283, label %284, label %296

284:                                              ; preds = %281
  %285 = load i32, i32* %19, align 4
  %286 = load i32, i32* %18, align 4
  %287 = icmp sgt i32 %285, %286
  %288 = xor i1 %287, true
  %289 = xor i1 %288, true
  %290 = zext i1 %289 to i32
  %291 = sext i32 %290 to i64
  %292 = call i64 @llvm.expect.i64(i64 %291, i64 0)
  %293 = icmp ne i64 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %284
  br label %383

295:                                              ; preds = %284
  br label %296

296:                                              ; preds = %295, %281
  %297 = load %18*, %18** %20, align 8
  %298 = getelementptr inbounds %18, %18* %297, i32 1
  store %18* %298, %18** %20, align 8
  %299 = load %18*, %18** %20, align 8
  store %18* %299, %18** %21, align 8
  %300 = load %18*, %18** %21, align 8
  %301 = call i32 @151(%18* %300, i8** %8, i64* %9, i32 0)
  %302 = icmp ne i32 %301, 0
  %303 = xor i1 %302, true
  %304 = xor i1 %303, true
  %305 = xor i1 %304, true
  %306 = zext i1 %305 to i32
  %307 = sext i32 %306 to i64
  %308 = call i64 @llvm.expect.i64(i64 %307, i64 0)
  %309 = icmp ne i64 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %296
  store i32 2, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %383

311:                                              ; preds = %296
  %312 = load i32, i32* %19, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, i32* %19, align 4
  br label %314

314:                                              ; preds = %311
  %315 = load i32, i32* %19, align 4
  %316 = load i32, i32* %16, align 4
  %317 = icmp sle i32 %315, %316
  br i1 %317, label %322, label %318

318:                                              ; preds = %314
  %319 = load i8, i8* %25, align 1
  %320 = zext i8 %319 to i32
  %321 = icmp eq i32 %320, 1
  br label %322

322:                                              ; preds = %318, %314
  %323 = phi i1 [ true, %314 ], [ %321, %318 ]
  %324 = xor i1 %323, true
  %325 = zext i1 %324 to i32
  %326 = sext i32 %325 to i64
  %327 = call i64 @llvm.expect.i64(i64 %326, i64 0)
  %328 = icmp ne i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %322
  unreachable

330:                                              ; preds = %322
  br label %331

331:                                              ; preds = %330
  br label %332

332:                                              ; preds = %331
  br label %333

333:                                              ; preds = %332
  %334 = load i32, i32* %19, align 4
  %335 = load i32, i32* %16, align 4
  %336 = icmp sgt i32 %334, %335
  br i1 %336, label %341, label %337

337:                                              ; preds = %333
  %338 = load i8, i8* %25, align 1
  %339 = zext i8 %338 to i32
  %340 = icmp eq i32 %339, 0
  br label %341

341:                                              ; preds = %337, %333
  %342 = phi i1 [ true, %333 ], [ %340, %337 ]
  %343 = xor i1 %342, true
  %344 = zext i1 %343 to i32
  %345 = sext i32 %344 to i64
  %346 = call i64 @llvm.expect.i64(i64 %345, i64 0)
  %347 = icmp ne i64 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %341
  unreachable

349:                                              ; preds = %341
  br label %350

350:                                              ; preds = %349
  br label %351

351:                                              ; preds = %350
  %352 = load i8, i8* %25, align 1
  %353 = icmp ne i8 %352, 0
  br i1 %353, label %354, label %366

354:                                              ; preds = %351
  %355 = load i32, i32* %19, align 4
  %356 = load i32, i32* %18, align 4
  %357 = icmp sgt i32 %355, %356
  %358 = xor i1 %357, true
  %359 = xor i1 %358, true
  %360 = zext i1 %359 to i32
  %361 = sext i32 %360 to i64
  %362 = call i64 @llvm.expect.i64(i64 %361, i64 0)
  %363 = icmp ne i64 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %354
  br label %383

365:                                              ; preds = %354
  br label %366

366:                                              ; preds = %365, %351
  %367 = load %18*, %18** %20, align 8
  %368 = getelementptr inbounds %18, %18* %367, i32 1
  store %18* %368, %18** %20, align 8
  %369 = load %18*, %18** %20, align 8
  store %18* %369, %18** %21, align 8
  %370 = load %18*, %18** %21, align 8
  %371 = call i32 @147(%18* %370, i64* %10, i8* %24, i32 0, i32 0)
  %372 = icmp ne i32 %371, 0
  %373 = xor i1 %372, true
  %374 = xor i1 %373, true
  %375 = xor i1 %374, true
  %376 = zext i1 %375 to i32
  %377 = sext i32 %376 to i64
  %378 = call i64 @llvm.expect.i64(i64 %377, i64 0)
  %379 = icmp ne i64 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %366
  store i32 0, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %383

381:                                              ; preds = %366
  br label %382

382:                                              ; preds = %381
  br label %383

383:                                              ; preds = %382, %380, %364, %310, %294, %240, %224, %170, %154, %94
  %384 = load i32, i32* %26, align 4
  %385 = icmp ne i32 %384, 0
  %386 = xor i1 %385, true
  %387 = xor i1 %386, true
  %388 = zext i1 %387 to i32
  %389 = sext i32 %388 to i64
  %390 = call i64 @llvm.expect.i64(i64 %389, i64 0)
  %391 = icmp ne i64 %390, 0
  br i1 %391, label %392, label %415

392:                                              ; preds = %383
  %393 = load i32, i32* %26, align 4
  %394 = icmp eq i32 %393, 2
  br i1 %394, label %395, label %398

395:                                              ; preds = %392
  %396 = load i32, i32* %19, align 4
  %397 = load i8*, i8** %23, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %396, i8* %397)
  br label %414

398:                                              ; preds = %392
  %399 = load i32, i32* %26, align 4
  %400 = icmp eq i32 %399, 3
  br i1 %400, label %401, label %405

401:                                              ; preds = %398
  %402 = load i32, i32* %19, align 4
  %403 = load i8*, i8** %23, align 8
  %404 = load %18*, %18** %21, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %402, i8* %403, %18* %404)
  br label %413

405:                                              ; preds = %398
  %406 = load i32, i32* %26, align 4
  %407 = icmp eq i32 %406, 4
  br i1 %407, label %408, label %412

408:                                              ; preds = %405
  %409 = load i32, i32* %19, align 4
  %410 = load i32, i32* %22, align 4
  %411 = load %18*, %18** %21, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %409, i32 %410, %18* %411)
  br label %412

412:                                              ; preds = %408, %405
  br label %413

413:                                              ; preds = %412, %401
  br label %414

414:                                              ; preds = %413, %395
  store i32 1, i32* %27, align 4
  br label %416

415:                                              ; preds = %383
  store i32 0, i32* %27, align 4
  br label %416

416:                                              ; preds = %415, %414
  %417 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %417) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %25) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #13
  %418 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %418) #13
  %419 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %419) #13
  %420 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %420) #13
  %421 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %421) #13
  %422 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %422) #13
  %423 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %423) #13
  %424 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %424) #13
  %425 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %425) #13
  %426 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %426) #13
  %427 = load i32, i32* %27, align 4
  switch i32 %427, label %591 [
    i32 0, label %428
  ]

428:                                              ; preds = %416
  br label %429

429:                                              ; preds = %428
  br label %430

430:                                              ; preds = %429
  %431 = load i64, i64* %6, align 8
  %432 = icmp slt i64 %431, 0
  br i1 %432, label %439, label %433

433:                                              ; preds = %430
  %434 = load i64, i64* %6, align 8
  %435 = load %0*, %0** %5, align 8
  %436 = getelementptr inbounds %0, %0* %435, i32 0, i32 2
  %437 = load i64, i64* %436, align 8
  %438 = icmp ule i64 %434, %437
  br i1 %438, label %439, label %465

439:                                              ; preds = %433, %430
  br label %440

440:                                              ; preds = %439
  br label %441

441:                                              ; preds = %440
  %442 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %442) #13
  %443 = load %18*, %18** %4, align 8
  store %18* %443, %18** %28, align 8
  %444 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %444) #13
  %445 = load %0*, %0** %5, align 8
  %446 = getelementptr inbounds %0, %0* %445, i32 0, i32 3
  %447 = getelementptr inbounds [1 x i8], [1 x i8]* %446, i32 0, i32 0
  %448 = load %0*, %0** %5, align 8
  %449 = getelementptr inbounds %0, %0* %448, i32 0, i32 2
  %450 = load i64, i64* %449, align 8
  %451 = call %0* @148(i8* %447, i64 %450, i32 0)
  store %0* %451, %0** %29, align 8
  %452 = load %0*, %0** %29, align 8
  %453 = load %18*, %18** %28, align 8
  %454 = getelementptr inbounds %18, %18* %453, i32 0, i32 0
  %455 = bitcast %19* %454 to %0**
  store %0* %452, %0** %455, align 8
  %456 = load %18*, %18** %28, align 8
  %457 = getelementptr inbounds %18, %18* %456, i32 0, i32 1
  %458 = bitcast %20* %457 to i32*
  store i32 5126, i32* %458, align 8
  %459 = bitcast %0** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %459) #13
  %460 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %460) #13
  br label %461

461:                                              ; preds = %441
  br label %462

462:                                              ; preds = %461
  br label %463

463:                                              ; preds = %462
  br label %464

464:                                              ; preds = %463
  store i32 1, i32* %27, align 4
  br label %591

465:                                              ; preds = %433
  %466 = load i64, i64* %9, align 8
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %468, label %469

468:                                              ; preds = %465
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @125, i32 0, i32 0))
  store i32 1, i32* %27, align 4
  br label %591

469:                                              ; preds = %465
  %470 = load i64, i64* %10, align 8
  %471 = icmp slt i64 %470, 0
  br i1 %471, label %475, label %472

472:                                              ; preds = %469
  %473 = load i64, i64* %10, align 8
  %474 = icmp sgt i64 %473, 2
  br i1 %474, label %475, label %476

475:                                              ; preds = %472, %469
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @126, i32 0, i32 0))
  store i32 1, i32* %27, align 4
  br label %591

476:                                              ; preds = %472
  %477 = load i64, i64* %6, align 8
  %478 = load %0*, %0** %5, align 8
  %479 = getelementptr inbounds %0, %0* %478, i32 0, i32 2
  %480 = load i64, i64* %479, align 8
  %481 = sub i64 %477, %480
  store i64 %481, i64* %7, align 8
  %482 = load i64, i64* %7, align 8
  %483 = icmp uge i64 %482, 2147483647
  br i1 %483, label %484, label %485

484:                                              ; preds = %476
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @127, i32 0, i32 0))
  store i32 1, i32* %27, align 4
  br label %591

485:                                              ; preds = %476
  %486 = load %0*, %0** %5, align 8
  %487 = getelementptr inbounds %0, %0* %486, i32 0, i32 2
  %488 = load i64, i64* %487, align 8
  %489 = load i64, i64* %7, align 8
  %490 = call %0* @153(i64 1, i64 %488, i64 %489, i32 0)
  store %0* %490, %0** %14, align 8
  %491 = load %0*, %0** %14, align 8
  %492 = getelementptr inbounds %0, %0* %491, i32 0, i32 2
  store i64 0, i64* %492, align 8
  %493 = load i64, i64* %10, align 8
  switch i64 %493, label %504 [
    i64 1, label %494
    i64 0, label %496
    i64 2, label %498
  ]

494:                                              ; preds = %485
  store i64 0, i64* %12, align 8
  %495 = load i64, i64* %7, align 8
  store i64 %495, i64* %13, align 8
  br label %504

496:                                              ; preds = %485
  %497 = load i64, i64* %7, align 8
  store i64 %497, i64* %12, align 8
  store i64 0, i64* %13, align 8
  br label %504

498:                                              ; preds = %485
  %499 = load i64, i64* %7, align 8
  %500 = udiv i64 %499, 2
  store i64 %500, i64* %12, align 8
  %501 = load i64, i64* %7, align 8
  %502 = load i64, i64* %12, align 8
  %503 = sub i64 %501, %502
  store i64 %503, i64* %13, align 8
  br label %504

504:                                              ; preds = %485, %498, %496, %494
  store i64 0, i64* %11, align 8
  br label %505

505:                                              ; preds = %523, %504
  %506 = load i64, i64* %11, align 8
  %507 = load i64, i64* %12, align 8
  %508 = icmp ult i64 %506, %507
  br i1 %508, label %509, label %526

509:                                              ; preds = %505
  %510 = load i8*, i8** %8, align 8
  %511 = load i64, i64* %11, align 8
  %512 = load i64, i64* %9, align 8
  %513 = urem i64 %511, %512
  %514 = getelementptr inbounds i8, i8* %510, i64 %513
  %515 = load i8, i8* %514, align 1
  %516 = load %0*, %0** %14, align 8
  %517 = getelementptr inbounds %0, %0* %516, i32 0, i32 3
  %518 = load %0*, %0** %14, align 8
  %519 = getelementptr inbounds %0, %0* %518, i32 0, i32 2
  %520 = load i64, i64* %519, align 8
  %521 = add i64 %520, 1
  store i64 %521, i64* %519, align 8
  %522 = getelementptr inbounds [1 x i8], [1 x i8]* %517, i64 0, i64 %520
  store i8 %515, i8* %522, align 1
  br label %523

523:                                              ; preds = %509
  %524 = load i64, i64* %11, align 8
  %525 = add i64 %524, 1
  store i64 %525, i64* %11, align 8
  br label %505

526:                                              ; preds = %505
  %527 = load %0*, %0** %14, align 8
  %528 = getelementptr inbounds %0, %0* %527, i32 0, i32 3
  %529 = getelementptr inbounds [1 x i8], [1 x i8]* %528, i32 0, i32 0
  %530 = load %0*, %0** %14, align 8
  %531 = getelementptr inbounds %0, %0* %530, i32 0, i32 2
  %532 = load i64, i64* %531, align 8
  %533 = getelementptr inbounds i8, i8* %529, i64 %532
  %534 = load %0*, %0** %5, align 8
  %535 = getelementptr inbounds %0, %0* %534, i32 0, i32 3
  %536 = getelementptr inbounds [1 x i8], [1 x i8]* %535, i32 0, i32 0
  %537 = load %0*, %0** %5, align 8
  %538 = getelementptr inbounds %0, %0* %537, i32 0, i32 2
  %539 = load i64, i64* %538, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %533, i8* align 8 %536, i64 %539, i1 false)
  %540 = load %0*, %0** %5, align 8
  %541 = getelementptr inbounds %0, %0* %540, i32 0, i32 2
  %542 = load i64, i64* %541, align 8
  %543 = load %0*, %0** %14, align 8
  %544 = getelementptr inbounds %0, %0* %543, i32 0, i32 2
  %545 = load i64, i64* %544, align 8
  %546 = add i64 %545, %542
  store i64 %546, i64* %544, align 8
  store i64 0, i64* %11, align 8
  br label %547

547:                                              ; preds = %565, %526
  %548 = load i64, i64* %11, align 8
  %549 = load i64, i64* %13, align 8
  %550 = icmp ult i64 %548, %549
  br i1 %550, label %551, label %568

551:                                              ; preds = %547
  %552 = load i8*, i8** %8, align 8
  %553 = load i64, i64* %11, align 8
  %554 = load i64, i64* %9, align 8
  %555 = urem i64 %553, %554
  %556 = getelementptr inbounds i8, i8* %552, i64 %555
  %557 = load i8, i8* %556, align 1
  %558 = load %0*, %0** %14, align 8
  %559 = getelementptr inbounds %0, %0* %558, i32 0, i32 3
  %560 = load %0*, %0** %14, align 8
  %561 = getelementptr inbounds %0, %0* %560, i32 0, i32 2
  %562 = load i64, i64* %561, align 8
  %563 = add i64 %562, 1
  store i64 %563, i64* %561, align 8
  %564 = getelementptr inbounds [1 x i8], [1 x i8]* %559, i64 0, i64 %562
  store i8 %557, i8* %564, align 1
  br label %565

565:                                              ; preds = %551
  %566 = load i64, i64* %11, align 8
  %567 = add i64 %566, 1
  store i64 %567, i64* %11, align 8
  br label %547

568:                                              ; preds = %547
  %569 = load %0*, %0** %14, align 8
  %570 = getelementptr inbounds %0, %0* %569, i32 0, i32 3
  %571 = load %0*, %0** %14, align 8
  %572 = getelementptr inbounds %0, %0* %571, i32 0, i32 2
  %573 = load i64, i64* %572, align 8
  %574 = getelementptr inbounds [1 x i8], [1 x i8]* %570, i64 0, i64 %573
  store i8 0, i8* %574, align 1
  br label %575

575:                                              ; preds = %568
  %576 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %576) #13
  %577 = load %18*, %18** %4, align 8
  store %18* %577, %18** %30, align 8
  %578 = bitcast %0** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %578) #13
  %579 = load %0*, %0** %14, align 8
  store %0* %579, %0** %31, align 8
  %580 = load %0*, %0** %31, align 8
  %581 = load %18*, %18** %30, align 8
  %582 = getelementptr inbounds %18, %18* %581, i32 0, i32 0
  %583 = bitcast %19* %582 to %0**
  store %0* %580, %0** %583, align 8
  %584 = load %18*, %18** %30, align 8
  %585 = getelementptr inbounds %18, %18* %584, i32 0, i32 1
  %586 = bitcast %20* %585 to i32*
  store i32 5126, i32* %586, align 8
  %587 = bitcast %0** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %587) #13
  %588 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %588) #13
  br label %589

589:                                              ; preds = %575
  br label %590

590:                                              ; preds = %589
  store i32 1, i32* %27, align 4
  br label %591

591:                                              ; preds = %590, %484, %475, %468, %464, %416
  %592 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %592) #13
  %593 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %593) #13
  %594 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %594) #13
  %595 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %595) #13
  %596 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %596) #13
  %597 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %597) #13
  %598 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %598) #13
  %599 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %599) #13
  %600 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %600) #13
  %601 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %601) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_sscanf(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %18*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %18*, align 8
  %18 = alloca %18*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %26 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  store %18* null, %18** %5, align 8
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  store i32 0, i32* %11, align 4
  br label %33

33:                                               ; preds = %2
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  store i32 0, i32* %12, align 4
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 2, i32* %13, align 4
  %36 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 -1, i32* %14, align 4
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  %38 = load %14*, %14** %3, align 8
  %39 = getelementptr inbounds %14, %14* %38, i32 0, i32 4
  %40 = getelementptr inbounds %18, %18* %39, i32 0, i32 2
  %41 = bitcast %21* %40 to i32*
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %15, align 4
  %43 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  %44 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  store %18* null, %18** %18, align 8
  %46 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  store i32 0, i32* %19, align 4
  %47 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  store i8 0, i8* %22, align 1
  %48 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %23, align 4
  %49 = load i32, i32* %16, align 4
  %50 = load %18*, %18** %17, align 8
  %51 = load %18*, %18** %18, align 8
  %52 = load i32, i32* %19, align 4
  %53 = load i8*, i8** %20, align 8
  %54 = load i8, i8* %21, align 1
  %55 = load i8, i8* %22, align 1
  br label %56

56:                                               ; preds = %33
  %57 = load i32, i32* %15, align 4
  %58 = load i32, i32* %13, align 4
  %59 = icmp slt i32 %57, %58
  %60 = xor i1 %59, true
  %61 = xor i1 %60, true
  %62 = zext i1 %61 to i32
  %63 = sext i32 %62 to i64
  %64 = call i64 @llvm.expect.i64(i64 %63, i64 0)
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %85, label %66

66:                                               ; preds = %56
  %67 = load i32, i32* %15, align 4
  %68 = load i32, i32* %14, align 4
  %69 = icmp sgt i32 %67, %68
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 0)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %89

76:                                               ; preds = %66
  %77 = load i32, i32* %14, align 4
  %78 = icmp sge i32 %77, 0
  %79 = xor i1 %78, true
  %80 = xor i1 %79, true
  %81 = zext i1 %80 to i32
  %82 = sext i32 %81 to i64
  %83 = call i64 @llvm.expect.i64(i64 %82, i64 1)
  %84 = icmp ne i64 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %76, %56
  %86 = load i32, i32* %15, align 4
  %87 = load i32, i32* %13, align 4
  %88 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %86, i32 %87, i32 %88)
  store i32 1, i32* %23, align 4
  br label %264

89:                                               ; preds = %76, %66
  store i32 0, i32* %16, align 4
  %90 = load %14*, %14** %3, align 8
  %91 = bitcast %14* %90 to %18*
  %92 = getelementptr inbounds %18, %18* %91, i64 4
  store %18* %92, %18** %17, align 8
  %93 = load i32, i32* %16, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %16, align 4
  br label %95

95:                                               ; preds = %89
  %96 = load i32, i32* %16, align 4
  %97 = load i32, i32* %13, align 4
  %98 = icmp sle i32 %96, %97
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = load i8, i8* %22, align 1
  %101 = zext i8 %100 to i32
  %102 = icmp eq i32 %101, 1
  br label %103

103:                                              ; preds = %99, %95
  %104 = phi i1 [ true, %95 ], [ %102, %99 ]
  %105 = xor i1 %104, true
  %106 = zext i1 %105 to i32
  %107 = sext i32 %106 to i64
  %108 = call i64 @llvm.expect.i64(i64 %107, i64 0)
  %109 = icmp ne i64 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %103
  unreachable

111:                                              ; preds = %103
  br label %112

112:                                              ; preds = %111
  br label %113

113:                                              ; preds = %112
  br label %114

114:                                              ; preds = %113
  %115 = load i32, i32* %16, align 4
  %116 = load i32, i32* %13, align 4
  %117 = icmp sgt i32 %115, %116
  br i1 %117, label %122, label %118

118:                                              ; preds = %114
  %119 = load i8, i8* %22, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br label %122

122:                                              ; preds = %118, %114
  %123 = phi i1 [ true, %114 ], [ %121, %118 ]
  %124 = xor i1 %123, true
  %125 = zext i1 %124 to i32
  %126 = sext i32 %125 to i64
  %127 = call i64 @llvm.expect.i64(i64 %126, i64 0)
  %128 = icmp ne i64 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %122
  unreachable

130:                                              ; preds = %122
  br label %131

131:                                              ; preds = %130
  br label %132

132:                                              ; preds = %131
  %133 = load i8, i8* %22, align 1
  %134 = icmp ne i8 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %132
  %136 = load i32, i32* %16, align 4
  %137 = load i32, i32* %15, align 4
  %138 = icmp sgt i32 %136, %137
  %139 = xor i1 %138, true
  %140 = xor i1 %139, true
  %141 = zext i1 %140 to i32
  %142 = sext i32 %141 to i64
  %143 = call i64 @llvm.expect.i64(i64 %142, i64 0)
  %144 = icmp ne i64 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %135
  br label %264

146:                                              ; preds = %135
  br label %147

147:                                              ; preds = %146, %132
  %148 = load %18*, %18** %17, align 8
  %149 = getelementptr inbounds %18, %18* %148, i32 1
  store %18* %149, %18** %17, align 8
  %150 = load %18*, %18** %17, align 8
  store %18* %150, %18** %18, align 8
  %151 = load %18*, %18** %18, align 8
  %152 = call i32 @151(%18* %151, i8** %6, i64* %8, i32 0)
  %153 = icmp ne i32 %152, 0
  %154 = xor i1 %153, true
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = zext i1 %156 to i32
  %158 = sext i32 %157 to i64
  %159 = call i64 @llvm.expect.i64(i64 %158, i64 0)
  %160 = icmp ne i64 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %147
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %264

162:                                              ; preds = %147
  %163 = load i32, i32* %16, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %16, align 4
  br label %165

165:                                              ; preds = %162
  %166 = load i32, i32* %16, align 4
  %167 = load i32, i32* %13, align 4
  %168 = icmp sle i32 %166, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %165
  %170 = load i8, i8* %22, align 1
  %171 = zext i8 %170 to i32
  %172 = icmp eq i32 %171, 1
  br label %173

173:                                              ; preds = %169, %165
  %174 = phi i1 [ true, %165 ], [ %172, %169 ]
  %175 = xor i1 %174, true
  %176 = zext i1 %175 to i32
  %177 = sext i32 %176 to i64
  %178 = call i64 @llvm.expect.i64(i64 %177, i64 0)
  %179 = icmp ne i64 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %173
  unreachable

181:                                              ; preds = %173
  br label %182

182:                                              ; preds = %181
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  %185 = load i32, i32* %16, align 4
  %186 = load i32, i32* %13, align 4
  %187 = icmp sgt i32 %185, %186
  br i1 %187, label %192, label %188

188:                                              ; preds = %184
  %189 = load i8, i8* %22, align 1
  %190 = zext i8 %189 to i32
  %191 = icmp eq i32 %190, 0
  br label %192

192:                                              ; preds = %188, %184
  %193 = phi i1 [ true, %184 ], [ %191, %188 ]
  %194 = xor i1 %193, true
  %195 = zext i1 %194 to i32
  %196 = sext i32 %195 to i64
  %197 = call i64 @llvm.expect.i64(i64 %196, i64 0)
  %198 = icmp ne i64 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %192
  unreachable

200:                                              ; preds = %192
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load i8, i8* %22, align 1
  %204 = icmp ne i8 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %202
  %206 = load i32, i32* %16, align 4
  %207 = load i32, i32* %15, align 4
  %208 = icmp sgt i32 %206, %207
  %209 = xor i1 %208, true
  %210 = xor i1 %209, true
  %211 = zext i1 %210 to i32
  %212 = sext i32 %211 to i64
  %213 = call i64 @llvm.expect.i64(i64 %212, i64 0)
  %214 = icmp ne i64 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %205
  br label %264

216:                                              ; preds = %205
  br label %217

217:                                              ; preds = %216, %202
  %218 = load %18*, %18** %17, align 8
  %219 = getelementptr inbounds %18, %18* %218, i32 1
  store %18* %219, %18** %17, align 8
  %220 = load %18*, %18** %17, align 8
  store %18* %220, %18** %18, align 8
  %221 = load %18*, %18** %18, align 8
  %222 = call i32 @151(%18* %221, i8** %7, i64* %9, i32 0)
  %223 = icmp ne i32 %222, 0
  %224 = xor i1 %223, true
  %225 = xor i1 %224, true
  %226 = xor i1 %225, true
  %227 = zext i1 %226 to i32
  %228 = sext i32 %227 to i64
  %229 = call i64 @llvm.expect.i64(i64 %228, i64 0)
  %230 = icmp ne i64 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %217
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %264

232:                                              ; preds = %217
  br label %233

233:                                              ; preds = %232
  %234 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %234) #13
  %235 = load i32, i32* %15, align 4
  %236 = load i32, i32* %16, align 4
  %237 = sub nsw i32 %235, %236
  %238 = sub nsw i32 %237, 0
  store i32 %238, i32* %24, align 4
  %239 = load i32, i32* %24, align 4
  %240 = icmp sgt i32 %239, 0
  %241 = xor i1 %240, true
  %242 = xor i1 %241, true
  %243 = zext i1 %242 to i32
  %244 = sext i32 %243 to i64
  %245 = call i64 @llvm.expect.i64(i64 %244, i64 1)
  %246 = icmp ne i64 %245, 0
  br i1 %246, label %247, label %258

247:                                              ; preds = %233
  %248 = load %18*, %18** %17, align 8
  %249 = getelementptr inbounds %18, %18* %248, i64 1
  store %18* %249, %18** %5, align 8
  %250 = load i32, i32* %24, align 4
  store i32 %250, i32* %11, align 4
  %251 = load i32, i32* %24, align 4
  %252 = load i32, i32* %16, align 4
  %253 = add nsw i32 %252, %251
  store i32 %253, i32* %16, align 4
  %254 = load i32, i32* %24, align 4
  %255 = load %18*, %18** %17, align 8
  %256 = sext i32 %254 to i64
  %257 = getelementptr inbounds %18, %18* %255, i64 %256
  store %18* %257, %18** %17, align 8
  br label %259

258:                                              ; preds = %233
  store %18* null, %18** %5, align 8
  store i32 0, i32* %11, align 4
  br label %259

259:                                              ; preds = %258, %247
  %260 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %260) #13
  br label %261

261:                                              ; preds = %259
  br label %262

262:                                              ; preds = %261
  br label %263

263:                                              ; preds = %262
  br label %264

264:                                              ; preds = %263, %231, %215, %161, %145, %85
  %265 = load i32, i32* %23, align 4
  %266 = icmp ne i32 %265, 0
  %267 = xor i1 %266, true
  %268 = xor i1 %267, true
  %269 = zext i1 %268 to i32
  %270 = sext i32 %269 to i64
  %271 = call i64 @llvm.expect.i64(i64 %270, i64 0)
  %272 = icmp ne i64 %271, 0
  br i1 %272, label %273, label %296

273:                                              ; preds = %264
  %274 = load i32, i32* %23, align 4
  %275 = icmp eq i32 %274, 2
  br i1 %275, label %276, label %279

276:                                              ; preds = %273
  %277 = load i32, i32* %16, align 4
  %278 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %277, i8* %278)
  br label %295

279:                                              ; preds = %273
  %280 = load i32, i32* %23, align 4
  %281 = icmp eq i32 %280, 3
  br i1 %281, label %282, label %286

282:                                              ; preds = %279
  %283 = load i32, i32* %16, align 4
  %284 = load i8*, i8** %20, align 8
  %285 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %283, i8* %284, %18* %285)
  br label %294

286:                                              ; preds = %279
  %287 = load i32, i32* %23, align 4
  %288 = icmp eq i32 %287, 4
  br i1 %288, label %289, label %293

289:                                              ; preds = %286
  %290 = load i32, i32* %16, align 4
  %291 = load i32, i32* %19, align 4
  %292 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %290, i32 %291, %18* %292)
  br label %293

293:                                              ; preds = %289, %286
  br label %294

294:                                              ; preds = %293, %282
  br label %295

295:                                              ; preds = %294, %276
  store i32 1, i32* %25, align 4
  br label %297

296:                                              ; preds = %264
  store i32 0, i32* %25, align 4
  br label %297

297:                                              ; preds = %296, %295
  %298 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %298) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  %299 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %299) #13
  %300 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %300) #13
  %301 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %301) #13
  %302 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %302) #13
  %303 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %303) #13
  %304 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %304) #13
  %305 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %305) #13
  %306 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %306) #13
  %307 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %307) #13
  %308 = load i32, i32* %25, align 4
  switch i32 %308, label %322 [
    i32 0, label %309
  ]

309:                                              ; preds = %297
  br label %310

310:                                              ; preds = %309
  br label %311

311:                                              ; preds = %310
  %312 = load i8*, i8** %6, align 8
  %313 = load i8*, i8** %7, align 8
  %314 = load i32, i32* %11, align 4
  %315 = load %18*, %18** %5, align 8
  %316 = load %18*, %18** %4, align 8
  %317 = call i32 @php_sscanf_internal(i8* %312, i8* %313, i32 %314, %18* %315, i32 0, %18* %316)
  store i32 %317, i32* %10, align 4
  %318 = load i32, i32* %10, align 4
  %319 = icmp eq i32 -4, %318
  br i1 %319, label %320, label %321

320:                                              ; preds = %311
  call void @zend_wrong_param_count()
  store i32 1, i32* %25, align 4
  br label %322

321:                                              ; preds = %311
  store i32 0, i32* %25, align 4
  br label %322

322:                                              ; preds = %321, %320, %297
  %323 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %323) #13
  %324 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %324) #13
  %325 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %325) #13
  %326 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %326) #13
  %327 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %327) #13
  %328 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %328) #13
  %329 = bitcast %18** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %329) #13
  %330 = load i32, i32* %25, align 4
  switch i32 %330, label %332 [
    i32 0, label %331
    i32 1, label %331
  ]

331:                                              ; preds = %322, %322
  ret void

332:                                              ; preds = %322
  unreachable
}

declare dso_local i32 @php_sscanf_internal(i8*, i8*, i32, %18*, i32, %18*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_str_rot13(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %18*, align 8
  %12 = alloca %18*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  %21 = alloca %18*, align 8
  %22 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %23 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 0, i32* %6, align 4
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 1, i32* %7, align 4
  %27 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 1, i32* %8, align 4
  %28 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %9, align 4
  %34 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store %18* null, %18** %12, align 8
  %37 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %13, align 4
  %38 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %39 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %17, align 4
  %40 = load i32, i32* %10, align 4
  %41 = load %18*, %18** %11, align 8
  %42 = load %18*, %18** %12, align 8
  %43 = load i32, i32* %13, align 4
  %44 = load i8*, i8** %14, align 8
  %45 = load i8, i8* %15, align 1
  %46 = load i8, i8* %16, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %9, align 4
  %49 = load i32, i32* %7, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* %8, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %8, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %9, align 4
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %8, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %17, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %10, align 4
  %81 = load %14*, %14** %3, align 8
  %82 = bitcast %14* %81 to %18*
  %83 = getelementptr inbounds %18, %18* %82, i64 4
  store %18* %83, %18** %11, align 8
  %84 = load i32, i32* %10, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %10, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %10, align 4
  %88 = load i32, i32* %7, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %16, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %10, align 4
  %107 = load i32, i32* %7, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %16, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %16, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %10, align 4
  %128 = load i32, i32* %9, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %18*, %18** %11, align 8
  %140 = getelementptr inbounds %18, %18* %139, i32 1
  store %18* %140, %18** %11, align 8
  %141 = load %18*, %18** %11, align 8
  store %18* %141, %18** %12, align 8
  %142 = load %18*, %18** %12, align 8
  %143 = call i32 @143(%18* %142, %0** %5, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %13, align 4
  store i32 4, i32* %17, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %17, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %17, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %10, align 4
  %169 = load i8*, i8** %14, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %17, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %10, align 4
  %175 = load i8*, i8** %14, align 8
  %176 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %18* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %17, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %10, align 4
  %182 = load i32, i32* %13, align 4
  %183 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %18* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %18, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %18, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %190 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #13
  %192 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = load i32, i32* %18, align 4
  switch i32 %199, label %256 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load %0*, %0** %5, align 8
  %204 = getelementptr inbounds %0, %0* %203, i32 0, i32 2
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %227

207:                                              ; preds = %202
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %210) #13
  %211 = load %18*, %18** %4, align 8
  store %18* %211, %18** %19, align 8
  %212 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %212) #13
  %213 = load %0*, %0** @zend_empty_string, align 8
  store %0* %213, %0** %20, align 8
  %214 = load %0*, %0** %20, align 8
  %215 = load %18*, %18** %19, align 8
  %216 = getelementptr inbounds %18, %18* %215, i32 0, i32 0
  %217 = bitcast %19* %216 to %0**
  store %0* %214, %0** %217, align 8
  %218 = load %18*, %18** %19, align 8
  %219 = getelementptr inbounds %18, %18* %218, i32 0, i32 1
  %220 = bitcast %20* %219 to i32*
  store i32 6, i32* %220, align 8
  %221 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #13
  %222 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #13
  br label %223

223:                                              ; preds = %209
  br label %224

224:                                              ; preds = %223
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225
  store i32 1, i32* %18, align 4
  br label %256

227:                                              ; preds = %202
  br label %228

228:                                              ; preds = %227
  %229 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %229) #13
  %230 = load %18*, %18** %4, align 8
  store %18* %230, %18** %21, align 8
  %231 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %231) #13
  %232 = load %0*, %0** %5, align 8
  %233 = call %0* @179(%0* %232, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @128, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @129, i32 0, i32 0), i64 52)
  store %0* %233, %0** %22, align 8
  %234 = load %0*, %0** %22, align 8
  %235 = load %18*, %18** %21, align 8
  %236 = getelementptr inbounds %18, %18* %235, i32 0, i32 0
  %237 = bitcast %19* %236 to %0**
  store %0* %234, %0** %237, align 8
  %238 = load %0*, %0** %22, align 8
  %239 = getelementptr inbounds %0, %0* %238, i32 0, i32 0
  %240 = getelementptr inbounds %1, %1* %239, i32 0, i32 1
  %241 = bitcast %2* %240 to %52*
  %242 = getelementptr inbounds %52, %52* %241, i32 0, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = and i32 %244, 2
  %246 = icmp ne i32 %245, 0
  %247 = zext i1 %246 to i64
  %248 = select i1 %246, i32 6, i32 5126
  %249 = load %18*, %18** %21, align 8
  %250 = getelementptr inbounds %18, %18* %249, i32 0, i32 1
  %251 = bitcast %20* %250 to i32*
  store i32 %248, i32* %251, align 8
  %252 = bitcast %0** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %252) #13
  %253 = bitcast %18** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %253) #13
  br label %254

254:                                              ; preds = %228
  br label %255

255:                                              ; preds = %254
  store i32 1, i32* %18, align 4
  br label %256

256:                                              ; preds = %255, %226, %188
  %257 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_str_shuffle(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %18*, align 8
  %12 = alloca %18*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %21 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #13
  store i32 0, i32* %6, align 4
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #13
  store i32 1, i32* %7, align 4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 1, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  %27 = load %14*, %14** %3, align 8
  %28 = getelementptr inbounds %14, %14* %27, i32 0, i32 4
  %29 = getelementptr inbounds %18, %18* %28, i32 0, i32 2
  %30 = bitcast %21* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %9, align 4
  %32 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  store %18* null, %18** %12, align 8
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 0, i32* %13, align 4
  %36 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store i8* null, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  store i8 0, i8* %16, align 1
  %37 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %17, align 4
  %38 = load i32, i32* %10, align 4
  %39 = load %18*, %18** %11, align 8
  %40 = load %18*, %18** %12, align 8
  %41 = load i32, i32* %13, align 4
  %42 = load i8*, i8** %14, align 8
  %43 = load i8, i8* %15, align 1
  %44 = load i8, i8* %16, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %9, align 4
  %47 = load i32, i32* %7, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %9, align 4
  %57 = load i32, i32* %8, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %8, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %9, align 4
  %76 = load i32, i32* %7, align 4
  %77 = load i32, i32* %8, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %17, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %10, align 4
  %79 = load %14*, %14** %3, align 8
  %80 = bitcast %14* %79 to %18*
  %81 = getelementptr inbounds %18, %18* %80, i64 4
  store %18* %81, %18** %11, align 8
  %82 = load i32, i32* %10, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %10, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %10, align 4
  %86 = load i32, i32* %7, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %16, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %10, align 4
  %105 = load i32, i32* %7, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %16, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %16, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %10, align 4
  %126 = load i32, i32* %9, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %18*, %18** %11, align 8
  %138 = getelementptr inbounds %18, %18* %137, i32 1
  store %18* %138, %18** %11, align 8
  %139 = load %18*, %18** %11, align 8
  store %18* %139, %18** %12, align 8
  %140 = load %18*, %18** %12, align 8
  %141 = call i32 @143(%18* %140, %0** %5, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 2, i32* %13, align 4
  store i32 4, i32* %17, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %17, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %185

162:                                              ; preds = %153
  %163 = load i32, i32* %17, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %10, align 4
  %167 = load i8*, i8** %14, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %17, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %10, align 4
  %173 = load i8*, i8** %14, align 8
  %174 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %18* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %17, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %10, align 4
  %180 = load i32, i32* %13, align 4
  %181 = load %18*, %18** %12, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %18* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  store i32 1, i32* %18, align 4
  br label %186

185:                                              ; preds = %153
  store i32 0, i32* %18, align 4
  br label %186

186:                                              ; preds = %185, %184
  %187 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %187) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #13
  %188 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #13
  %189 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  %190 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast %18** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #13
  %192 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %192) #13
  %193 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #13
  %194 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = load i32, i32* %18, align 4
  switch i32 %197, label %247 [
    i32 0, label %198
  ]

198:                                              ; preds = %186
  br label %199

199:                                              ; preds = %198
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %203) #13
  %204 = load %18*, %18** %4, align 8
  store %18* %204, %18** %19, align 8
  %205 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %205) #13
  %206 = load %0*, %0** %5, align 8
  %207 = getelementptr inbounds %0, %0* %206, i32 0, i32 3
  %208 = getelementptr inbounds [1 x i8], [1 x i8]* %207, i32 0, i32 0
  %209 = load %0*, %0** %5, align 8
  %210 = getelementptr inbounds %0, %0* %209, i32 0, i32 2
  %211 = load i64, i64* %210, align 8
  %212 = call %0* @148(i8* %208, i64 %211, i32 0)
  store %0* %212, %0** %20, align 8
  %213 = load %0*, %0** %20, align 8
  %214 = load %18*, %18** %19, align 8
  %215 = getelementptr inbounds %18, %18* %214, i32 0, i32 0
  %216 = bitcast %19* %215 to %0**
  store %0* %213, %0** %216, align 8
  %217 = load %18*, %18** %19, align 8
  %218 = getelementptr inbounds %18, %18* %217, i32 0, i32 1
  %219 = bitcast %20* %218 to i32*
  store i32 5126, i32* %219, align 8
  %220 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %220) #13
  %221 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #13
  br label %222

222:                                              ; preds = %202
  br label %223

223:                                              ; preds = %222
  br label %224

224:                                              ; preds = %223
  br label %225

225:                                              ; preds = %224
  %226 = load %18*, %18** %4, align 8
  %227 = getelementptr inbounds %18, %18* %226, i32 0, i32 0
  %228 = bitcast %19* %227 to %0**
  %229 = load %0*, %0** %228, align 8
  %230 = getelementptr inbounds %0, %0* %229, i32 0, i32 2
  %231 = load i64, i64* %230, align 8
  %232 = icmp ugt i64 %231, 1
  br i1 %232, label %233, label %246

233:                                              ; preds = %225
  %234 = load %18*, %18** %4, align 8
  %235 = getelementptr inbounds %18, %18* %234, i32 0, i32 0
  %236 = bitcast %19* %235 to %0**
  %237 = load %0*, %0** %236, align 8
  %238 = getelementptr inbounds %0, %0* %237, i32 0, i32 3
  %239 = getelementptr inbounds [1 x i8], [1 x i8]* %238, i32 0, i32 0
  %240 = load %18*, %18** %4, align 8
  %241 = getelementptr inbounds %18, %18* %240, i32 0, i32 0
  %242 = bitcast %19* %241 to %0**
  %243 = load %0*, %0** %242, align 8
  %244 = getelementptr inbounds %0, %0* %243, i32 0, i32 2
  %245 = load i64, i64* %244, align 8
  call void @184(i8* %239, i64 %245)
  br label %246

246:                                              ; preds = %233, %225
  store i32 0, i32* %18, align 4
  br label %247

247:                                              ; preds = %246, %186
  %248 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %248) #13
  %249 = load i32, i32* %18, align 4
  switch i32 %249, label %251 [
    i32 0, label %250
    i32 1, label %250
  ]

250:                                              ; preds = %247, %247
  ret void

251:                                              ; preds = %247
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @184(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %8) #13
  %13 = load i64, i64* %4, align 8
  store i64 %13, i64* %5, align 8
  %14 = load i64, i64* %5, align 8
  %15 = icmp sle i64 %14, 1
  br i1 %15, label %16, label %17

16:                                               ; preds = %2
  store i32 1, i32* %9, align 4
  br label %48

17:                                               ; preds = %2
  %18 = load i64, i64* %5, align 8
  store i64 %18, i64* %7, align 8
  br label %19

19:                                               ; preds = %46, %17
  %20 = load i64, i64* %7, align 8
  %21 = add nsw i64 %20, -1
  store i64 %21, i64* %7, align 8
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %23, label %47

23:                                               ; preds = %19
  %24 = call i64 @php_rand()
  store i64 %24, i64* %6, align 8
  %25 = load i64, i64* %7, align 8
  %26 = call i64 @php_mt_rand_range(i64 0, i64 %25)
  store i64 %26, i64* %6, align 8
  %27 = load i64, i64* %6, align 8
  %28 = load i64, i64* %7, align 8
  %29 = icmp ne i64 %27, %28
  br i1 %29, label %30, label %46

30:                                               ; preds = %23
  %31 = load i8*, i8** %3, align 8
  %32 = load i64, i64* %7, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  %34 = load i8, i8* %33, align 1
  store i8 %34, i8* %8, align 1
  %35 = load i8*, i8** %3, align 8
  %36 = load i64, i64* %6, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = load i8*, i8** %3, align 8
  %40 = load i64, i64* %7, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  store i8 %38, i8* %41, align 1
  %42 = load i8, i8* %8, align 1
  %43 = load i8*, i8** %3, align 8
  %44 = load i64, i64* %6, align 8
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  store i8 %42, i8* %45, align 1
  br label %46

46:                                               ; preds = %30, %23
  br label %19

47:                                               ; preds = %19
  store i32 0, i32* %9, align 4
  br label %48

48:                                               ; preds = %47, %16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %8) #13
  %49 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #13
  %50 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #13
  %51 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #13
  %52 = load i32, i32* %9, align 4
  switch i32 %52, label %54 [
    i32 0, label %53
    i32 1, label %53
  ]

53:                                               ; preds = %48, %48
  ret void

54:                                               ; preds = %48
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_str_word_count(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca [256 x i8], align 16
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %18*, align 8
  %20 = alloca %18*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %18*, align 8
  %28 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %29 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  store i8* null, i8** %6, align 8
  %31 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  %33 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast [256 x i8]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %34) #13
  %35 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  store i64 0, i64* %11, align 8
  %36 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store i64 0, i64* %12, align 8
  %37 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  store i64 0, i64* %13, align 8
  br label %38

38:                                               ; preds = %2
  %39 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %14, align 4
  %40 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #13
  store i32 1, i32* %15, align 4
  %41 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 3, i32* %16, align 4
  %42 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #13
  %43 = load %14*, %14** %3, align 8
  %44 = getelementptr inbounds %14, %14* %43, i32 0, i32 4
  %45 = getelementptr inbounds %18, %18* %44, i32 0, i32 2
  %46 = bitcast %21* %45 to i32*
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %17, align 4
  %48 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  %49 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  %50 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store %18* null, %18** %20, align 8
  %51 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #13
  store i32 0, i32* %21, align 4
  %52 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  store i8* null, i8** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #13
  store i8 0, i8* %24, align 1
  %53 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #13
  store i32 0, i32* %25, align 4
  %54 = load i32, i32* %18, align 4
  %55 = load %18*, %18** %19, align 8
  %56 = load %18*, %18** %20, align 8
  %57 = load i32, i32* %21, align 4
  %58 = load i8*, i8** %22, align 8
  %59 = load i8, i8* %23, align 1
  %60 = load i8, i8* %24, align 1
  br label %61

61:                                               ; preds = %38
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %15, align 4
  %64 = icmp slt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %61
  %72 = load i32, i32* %17, align 4
  %73 = load i32, i32* %16, align 4
  %74 = icmp sgt i32 %72, %73
  %75 = xor i1 %74, true
  %76 = xor i1 %75, true
  %77 = zext i1 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = call i64 @llvm.expect.i64(i64 %78, i64 0)
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %94

81:                                               ; preds = %71
  %82 = load i32, i32* %16, align 4
  %83 = icmp sge i32 %82, 0
  %84 = xor i1 %83, true
  %85 = xor i1 %84, true
  %86 = zext i1 %85 to i32
  %87 = sext i32 %86 to i64
  %88 = call i64 @llvm.expect.i64(i64 %87, i64 1)
  %89 = icmp ne i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %81, %61
  %91 = load i32, i32* %17, align 4
  %92 = load i32, i32* %15, align 4
  %93 = load i32, i32* %16, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %91, i32 %92, i32 %93)
  store i32 1, i32* %25, align 4
  br label %309

94:                                               ; preds = %81, %71
  store i32 0, i32* %18, align 4
  %95 = load %14*, %14** %3, align 8
  %96 = bitcast %14* %95 to %18*
  %97 = getelementptr inbounds %18, %18* %96, i64 4
  store %18* %97, %18** %19, align 8
  %98 = load i32, i32* %18, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %18, align 4
  br label %100

100:                                              ; preds = %94
  %101 = load i32, i32* %18, align 4
  %102 = load i32, i32* %15, align 4
  %103 = icmp sle i32 %101, %102
  br i1 %103, label %108, label %104

104:                                              ; preds = %100
  %105 = load i8, i8* %24, align 1
  %106 = zext i8 %105 to i32
  %107 = icmp eq i32 %106, 1
  br label %108

108:                                              ; preds = %104, %100
  %109 = phi i1 [ true, %100 ], [ %107, %104 ]
  %110 = xor i1 %109, true
  %111 = zext i1 %110 to i32
  %112 = sext i32 %111 to i64
  %113 = call i64 @llvm.expect.i64(i64 %112, i64 0)
  %114 = icmp ne i64 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %108
  unreachable

116:                                              ; preds = %108
  br label %117

117:                                              ; preds = %116
  br label %118

118:                                              ; preds = %117
  br label %119

119:                                              ; preds = %118
  %120 = load i32, i32* %18, align 4
  %121 = load i32, i32* %15, align 4
  %122 = icmp sgt i32 %120, %121
  br i1 %122, label %127, label %123

123:                                              ; preds = %119
  %124 = load i8, i8* %24, align 1
  %125 = zext i8 %124 to i32
  %126 = icmp eq i32 %125, 0
  br label %127

127:                                              ; preds = %123, %119
  %128 = phi i1 [ true, %119 ], [ %126, %123 ]
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %127
  unreachable

135:                                              ; preds = %127
  br label %136

136:                                              ; preds = %135
  br label %137

137:                                              ; preds = %136
  %138 = load i8, i8* %24, align 1
  %139 = icmp ne i8 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %137
  %141 = load i32, i32* %18, align 4
  %142 = load i32, i32* %17, align 4
  %143 = icmp sgt i32 %141, %142
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %140
  br label %309

151:                                              ; preds = %140
  br label %152

152:                                              ; preds = %151, %137
  %153 = load %18*, %18** %19, align 8
  %154 = getelementptr inbounds %18, %18* %153, i32 1
  store %18* %154, %18** %19, align 8
  %155 = load %18*, %18** %19, align 8
  store %18* %155, %18** %20, align 8
  %156 = load %18*, %18** %20, align 8
  %157 = call i32 @143(%18* %156, %0** %5, i32 0)
  %158 = icmp ne i32 %157, 0
  %159 = xor i1 %158, true
  %160 = xor i1 %159, true
  %161 = xor i1 %160, true
  %162 = zext i1 %161 to i32
  %163 = sext i32 %162 to i64
  %164 = call i64 @llvm.expect.i64(i64 %163, i64 0)
  %165 = icmp ne i64 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %152
  store i32 2, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %309

167:                                              ; preds = %152
  store i8 1, i8* %24, align 1
  %168 = load i32, i32* %18, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %18, align 4
  br label %170

170:                                              ; preds = %167
  %171 = load i32, i32* %18, align 4
  %172 = load i32, i32* %15, align 4
  %173 = icmp sle i32 %171, %172
  br i1 %173, label %178, label %174

174:                                              ; preds = %170
  %175 = load i8, i8* %24, align 1
  %176 = zext i8 %175 to i32
  %177 = icmp eq i32 %176, 1
  br label %178

178:                                              ; preds = %174, %170
  %179 = phi i1 [ true, %170 ], [ %177, %174 ]
  %180 = xor i1 %179, true
  %181 = zext i1 %180 to i32
  %182 = sext i32 %181 to i64
  %183 = call i64 @llvm.expect.i64(i64 %182, i64 0)
  %184 = icmp ne i64 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %178
  unreachable

186:                                              ; preds = %178
  br label %187

187:                                              ; preds = %186
  br label %188

188:                                              ; preds = %187
  br label %189

189:                                              ; preds = %188
  %190 = load i32, i32* %18, align 4
  %191 = load i32, i32* %15, align 4
  %192 = icmp sgt i32 %190, %191
  br i1 %192, label %197, label %193

193:                                              ; preds = %189
  %194 = load i8, i8* %24, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp eq i32 %195, 0
  br label %197

197:                                              ; preds = %193, %189
  %198 = phi i1 [ true, %189 ], [ %196, %193 ]
  %199 = xor i1 %198, true
  %200 = zext i1 %199 to i32
  %201 = sext i32 %200 to i64
  %202 = call i64 @llvm.expect.i64(i64 %201, i64 0)
  %203 = icmp ne i64 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %197
  unreachable

205:                                              ; preds = %197
  br label %206

206:                                              ; preds = %205
  br label %207

207:                                              ; preds = %206
  %208 = load i8, i8* %24, align 1
  %209 = icmp ne i8 %208, 0
  br i1 %209, label %210, label %222

210:                                              ; preds = %207
  %211 = load i32, i32* %18, align 4
  %212 = load i32, i32* %17, align 4
  %213 = icmp sgt i32 %211, %212
  %214 = xor i1 %213, true
  %215 = xor i1 %214, true
  %216 = zext i1 %215 to i32
  %217 = sext i32 %216 to i64
  %218 = call i64 @llvm.expect.i64(i64 %217, i64 0)
  %219 = icmp ne i64 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %210
  br label %309

221:                                              ; preds = %210
  br label %222

222:                                              ; preds = %221, %207
  %223 = load %18*, %18** %19, align 8
  %224 = getelementptr inbounds %18, %18* %223, i32 1
  store %18* %224, %18** %19, align 8
  %225 = load %18*, %18** %19, align 8
  store %18* %225, %18** %20, align 8
  %226 = load %18*, %18** %20, align 8
  %227 = call i32 @147(%18* %226, i64* %13, i8* %23, i32 0, i32 0)
  %228 = icmp ne i32 %227, 0
  %229 = xor i1 %228, true
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i32
  %233 = sext i32 %232 to i64
  %234 = call i64 @llvm.expect.i64(i64 %233, i64 0)
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %236, label %237

236:                                              ; preds = %222
  store i32 0, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %309

237:                                              ; preds = %222
  %238 = load i32, i32* %18, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %18, align 4
  br label %240

240:                                              ; preds = %237
  %241 = load i32, i32* %18, align 4
  %242 = load i32, i32* %15, align 4
  %243 = icmp sle i32 %241, %242
  br i1 %243, label %248, label %244

244:                                              ; preds = %240
  %245 = load i8, i8* %24, align 1
  %246 = zext i8 %245 to i32
  %247 = icmp eq i32 %246, 1
  br label %248

248:                                              ; preds = %244, %240
  %249 = phi i1 [ true, %240 ], [ %247, %244 ]
  %250 = xor i1 %249, true
  %251 = zext i1 %250 to i32
  %252 = sext i32 %251 to i64
  %253 = call i64 @llvm.expect.i64(i64 %252, i64 0)
  %254 = icmp ne i64 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %248
  unreachable

256:                                              ; preds = %248
  br label %257

257:                                              ; preds = %256
  br label %258

258:                                              ; preds = %257
  br label %259

259:                                              ; preds = %258
  %260 = load i32, i32* %18, align 4
  %261 = load i32, i32* %15, align 4
  %262 = icmp sgt i32 %260, %261
  br i1 %262, label %267, label %263

263:                                              ; preds = %259
  %264 = load i8, i8* %24, align 1
  %265 = zext i8 %264 to i32
  %266 = icmp eq i32 %265, 0
  br label %267

267:                                              ; preds = %263, %259
  %268 = phi i1 [ true, %259 ], [ %266, %263 ]
  %269 = xor i1 %268, true
  %270 = zext i1 %269 to i32
  %271 = sext i32 %270 to i64
  %272 = call i64 @llvm.expect.i64(i64 %271, i64 0)
  %273 = icmp ne i64 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %267
  unreachable

275:                                              ; preds = %267
  br label %276

276:                                              ; preds = %275
  br label %277

277:                                              ; preds = %276
  %278 = load i8, i8* %24, align 1
  %279 = icmp ne i8 %278, 0
  br i1 %279, label %280, label %292

280:                                              ; preds = %277
  %281 = load i32, i32* %18, align 4
  %282 = load i32, i32* %17, align 4
  %283 = icmp sgt i32 %281, %282
  %284 = xor i1 %283, true
  %285 = xor i1 %284, true
  %286 = zext i1 %285 to i32
  %287 = sext i32 %286 to i64
  %288 = call i64 @llvm.expect.i64(i64 %287, i64 0)
  %289 = icmp ne i64 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %280
  br label %309

291:                                              ; preds = %280
  br label %292

292:                                              ; preds = %291, %277
  %293 = load %18*, %18** %19, align 8
  %294 = getelementptr inbounds %18, %18* %293, i32 1
  store %18* %294, %18** %19, align 8
  %295 = load %18*, %18** %19, align 8
  store %18* %295, %18** %20, align 8
  %296 = load %18*, %18** %20, align 8
  %297 = call i32 @151(%18* %296, i8** %6, i64* %11, i32 0)
  %298 = icmp ne i32 %297, 0
  %299 = xor i1 %298, true
  %300 = xor i1 %299, true
  %301 = xor i1 %300, true
  %302 = zext i1 %301 to i32
  %303 = sext i32 %302 to i64
  %304 = call i64 @llvm.expect.i64(i64 %303, i64 0)
  %305 = icmp ne i64 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %292
  store i32 2, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %309

307:                                              ; preds = %292
  br label %308

308:                                              ; preds = %307
  br label %309

309:                                              ; preds = %308, %306, %290, %236, %220, %166, %150, %90
  %310 = load i32, i32* %25, align 4
  %311 = icmp ne i32 %310, 0
  %312 = xor i1 %311, true
  %313 = xor i1 %312, true
  %314 = zext i1 %313 to i32
  %315 = sext i32 %314 to i64
  %316 = call i64 @llvm.expect.i64(i64 %315, i64 0)
  %317 = icmp ne i64 %316, 0
  br i1 %317, label %318, label %341

318:                                              ; preds = %309
  %319 = load i32, i32* %25, align 4
  %320 = icmp eq i32 %319, 2
  br i1 %320, label %321, label %324

321:                                              ; preds = %318
  %322 = load i32, i32* %18, align 4
  %323 = load i8*, i8** %22, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %322, i8* %323)
  br label %340

324:                                              ; preds = %318
  %325 = load i32, i32* %25, align 4
  %326 = icmp eq i32 %325, 3
  br i1 %326, label %327, label %331

327:                                              ; preds = %324
  %328 = load i32, i32* %18, align 4
  %329 = load i8*, i8** %22, align 8
  %330 = load %18*, %18** %20, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %328, i8* %329, %18* %330)
  br label %339

331:                                              ; preds = %324
  %332 = load i32, i32* %25, align 4
  %333 = icmp eq i32 %332, 4
  br i1 %333, label %334, label %338

334:                                              ; preds = %331
  %335 = load i32, i32* %18, align 4
  %336 = load i32, i32* %21, align 4
  %337 = load %18*, %18** %20, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %335, i32 %336, %18* %337)
  br label %338

338:                                              ; preds = %334, %331
  br label %339

339:                                              ; preds = %338, %327
  br label %340

340:                                              ; preds = %339, %321
  store i32 1, i32* %26, align 4
  br label %342

341:                                              ; preds = %309
  store i32 0, i32* %26, align 4
  br label %342

342:                                              ; preds = %341, %340
  %343 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %343) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #13
  %344 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %344) #13
  %345 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #13
  %346 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %346) #13
  %347 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %347) #13
  %348 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %348) #13
  %349 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %349) #13
  %350 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %350) #13
  %351 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #13
  %352 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #13
  %353 = load i32, i32* %26, align 4
  switch i32 %353, label %556 [
    i32 0, label %354
  ]

354:                                              ; preds = %342
  br label %355

355:                                              ; preds = %354
  br label %356

356:                                              ; preds = %355
  %357 = load i64, i64* %13, align 8
  switch i64 %357, label %383 [
    i64 1, label %358
    i64 2, label %358
    i64 0, label %367
  ]

358:                                              ; preds = %356, %356
  %359 = load %18*, %18** %4, align 8
  %360 = call i32 @_array_init(%18* %359, i32 0)
  %361 = load %0*, %0** %5, align 8
  %362 = getelementptr inbounds %0, %0* %361, i32 0, i32 2
  %363 = load i64, i64* %362, align 8
  %364 = icmp ne i64 %363, 0
  br i1 %364, label %366, label %365

365:                                              ; preds = %358
  store i32 1, i32* %26, align 4
  br label %556

366:                                              ; preds = %358
  br label %391

367:                                              ; preds = %356
  %368 = load %0*, %0** %5, align 8
  %369 = getelementptr inbounds %0, %0* %368, i32 0, i32 2
  %370 = load i64, i64* %369, align 8
  %371 = icmp ne i64 %370, 0
  br i1 %371, label %382, label %372

372:                                              ; preds = %367
  %373 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %373) #13
  %374 = load %18*, %18** %4, align 8
  store %18* %374, %18** %27, align 8
  %375 = load %18*, %18** %27, align 8
  %376 = getelementptr inbounds %18, %18* %375, i32 0, i32 0
  %377 = bitcast %19* %376 to i64*
  store i64 0, i64* %377, align 8
  %378 = load %18*, %18** %27, align 8
  %379 = getelementptr inbounds %18, %18* %378, i32 0, i32 1
  %380 = bitcast %20* %379 to i32*
  store i32 4, i32* %380, align 8
  %381 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %381) #13
  store i32 1, i32* %26, align 4
  br label %556

382:                                              ; preds = %367
  br label %391

383:                                              ; preds = %356
  %384 = load i64, i64* %13, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @130, i32 0, i32 0), i64 %384)
  br label %385

385:                                              ; preds = %383
  %386 = load %18*, %18** %4, align 8
  %387 = getelementptr inbounds %18, %18* %386, i32 0, i32 1
  %388 = bitcast %20* %387 to i32*
  store i32 2, i32* %388, align 8
  br label %389

389:                                              ; preds = %385
  br label %390

390:                                              ; preds = %389
  store i32 1, i32* %26, align 4
  br label %556

391:                                              ; preds = %382, %366
  %392 = load i8*, i8** %6, align 8
  %393 = icmp ne i8* %392, null
  br i1 %393, label %394, label %399

394:                                              ; preds = %391
  %395 = load i8*, i8** %6, align 8
  %396 = load i64, i64* %11, align 8
  %397 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i32 0, i32 0
  %398 = call i32 @174(i8* %395, i64 %396, i8* %397)
  br label %399

399:                                              ; preds = %394, %391
  %400 = load %0*, %0** %5, align 8
  %401 = getelementptr inbounds %0, %0* %400, i32 0, i32 3
  %402 = getelementptr inbounds [1 x i8], [1 x i8]* %401, i32 0, i32 0
  store i8* %402, i8** %7, align 8
  %403 = load %0*, %0** %5, align 8
  %404 = getelementptr inbounds %0, %0* %403, i32 0, i32 3
  %405 = getelementptr inbounds [1 x i8], [1 x i8]* %404, i32 0, i32 0
  %406 = load %0*, %0** %5, align 8
  %407 = getelementptr inbounds %0, %0* %406, i32 0, i32 2
  %408 = load i64, i64* %407, align 8
  %409 = getelementptr inbounds i8, i8* %405, i64 %408
  store i8* %409, i8** %8, align 8
  %410 = load i8*, i8** %7, align 8
  %411 = load i8, i8* %410, align 1
  %412 = sext i8 %411 to i32
  %413 = icmp eq i32 %412, 39
  br i1 %413, label %414, label %421

414:                                              ; preds = %399
  %415 = load i8*, i8** %6, align 8
  %416 = icmp ne i8* %415, null
  br i1 %416, label %417, label %433

417:                                              ; preds = %414
  %418 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 39
  %419 = load i8, i8* %418, align 1
  %420 = icmp ne i8 %419, 0
  br i1 %420, label %421, label %433

421:                                              ; preds = %417, %399
  %422 = load i8*, i8** %7, align 8
  %423 = load i8, i8* %422, align 1
  %424 = sext i8 %423 to i32
  %425 = icmp eq i32 %424, 45
  br i1 %425, label %426, label %436

426:                                              ; preds = %421
  %427 = load i8*, i8** %6, align 8
  %428 = icmp ne i8* %427, null
  br i1 %428, label %429, label %433

429:                                              ; preds = %426
  %430 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 45
  %431 = load i8, i8* %430, align 1
  %432 = icmp ne i8 %431, 0
  br i1 %432, label %436, label %433

433:                                              ; preds = %429, %426, %417, %414
  %434 = load i8*, i8** %7, align 8
  %435 = getelementptr inbounds i8, i8* %434, i32 1
  store i8* %435, i8** %7, align 8
  br label %436

436:                                              ; preds = %433, %429, %421
  %437 = load i8*, i8** %8, align 8
  %438 = getelementptr inbounds i8, i8* %437, i64 -1
  %439 = load i8, i8* %438, align 1
  %440 = sext i8 %439 to i32
  %441 = icmp eq i32 %440, 45
  br i1 %441, label %442, label %452

442:                                              ; preds = %436
  %443 = load i8*, i8** %6, align 8
  %444 = icmp ne i8* %443, null
  br i1 %444, label %445, label %449

445:                                              ; preds = %442
  %446 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 45
  %447 = load i8, i8* %446, align 1
  %448 = icmp ne i8 %447, 0
  br i1 %448, label %452, label %449

449:                                              ; preds = %445, %442
  %450 = load i8*, i8** %8, align 8
  %451 = getelementptr inbounds i8, i8* %450, i32 -1
  store i8* %451, i8** %8, align 8
  br label %452

452:                                              ; preds = %449, %445, %436
  br label %453

453:                                              ; preds = %538, %452
  %454 = load i8*, i8** %7, align 8
  %455 = load i8*, i8** %8, align 8
  %456 = icmp ult i8* %454, %455
  br i1 %456, label %457, label %541

457:                                              ; preds = %453
  %458 = load i8*, i8** %7, align 8
  store i8* %458, i8** %9, align 8
  br label %459

459:                                              ; preds = %500, %457
  %460 = load i8*, i8** %7, align 8
  %461 = load i8*, i8** %8, align 8
  %462 = icmp ult i8* %460, %461
  br i1 %462, label %463, label %498

463:                                              ; preds = %459
  %464 = call i16** @__ctype_b_loc() #17
  %465 = load i16*, i16** %464, align 8
  %466 = load i8*, i8** %7, align 8
  %467 = load i8, i8* %466, align 1
  %468 = zext i8 %467 to i32
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds i16, i16* %465, i64 %469
  %471 = load i16, i16* %470, align 2
  %472 = zext i16 %471 to i32
  %473 = and i32 %472, 1024
  %474 = icmp ne i32 %473, 0
  br i1 %474, label %496, label %475

475:                                              ; preds = %463
  %476 = load i8*, i8** %6, align 8
  %477 = icmp ne i8* %476, null
  br i1 %477, label %478, label %486

478:                                              ; preds = %475
  %479 = load i8*, i8** %7, align 8
  %480 = load i8, i8* %479, align 1
  %481 = zext i8 %480 to i64
  %482 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 %481
  %483 = load i8, i8* %482, align 1
  %484 = sext i8 %483 to i32
  %485 = icmp ne i32 %484, 0
  br i1 %485, label %496, label %486

486:                                              ; preds = %478, %475
  %487 = load i8*, i8** %7, align 8
  %488 = load i8, i8* %487, align 1
  %489 = sext i8 %488 to i32
  %490 = icmp eq i32 %489, 39
  br i1 %490, label %496, label %491

491:                                              ; preds = %486
  %492 = load i8*, i8** %7, align 8
  %493 = load i8, i8* %492, align 1
  %494 = sext i8 %493 to i32
  %495 = icmp eq i32 %494, 45
  br label %496

496:                                              ; preds = %491, %486, %478, %463
  %497 = phi i1 [ true, %486 ], [ true, %478 ], [ true, %463 ], [ %495, %491 ]
  br label %498

498:                                              ; preds = %496, %459
  %499 = phi i1 [ false, %459 ], [ %497, %496 ]
  br i1 %499, label %500, label %503

500:                                              ; preds = %498
  %501 = load i8*, i8** %7, align 8
  %502 = getelementptr inbounds i8, i8* %501, i32 1
  store i8* %502, i8** %7, align 8
  br label %459

503:                                              ; preds = %498
  %504 = load i8*, i8** %7, align 8
  %505 = load i8*, i8** %9, align 8
  %506 = icmp ugt i8* %504, %505
  br i1 %506, label %507, label %538

507:                                              ; preds = %503
  %508 = load i64, i64* %13, align 8
  switch i64 %508, label %534 [
    i64 1, label %509
    i64 2, label %518
  ]

509:                                              ; preds = %507
  %510 = load %18*, %18** %4, align 8
  %511 = load i8*, i8** %9, align 8
  %512 = load i8*, i8** %7, align 8
  %513 = load i8*, i8** %9, align 8
  %514 = ptrtoint i8* %512 to i64
  %515 = ptrtoint i8* %513 to i64
  %516 = sub i64 %514, %515
  %517 = call i32 @add_next_index_stringl(%18* %510, i8* %511, i64 %516)
  br label %537

518:                                              ; preds = %507
  %519 = load %18*, %18** %4, align 8
  %520 = load i8*, i8** %9, align 8
  %521 = load %0*, %0** %5, align 8
  %522 = getelementptr inbounds %0, %0* %521, i32 0, i32 3
  %523 = getelementptr inbounds [1 x i8], [1 x i8]* %522, i32 0, i32 0
  %524 = ptrtoint i8* %520 to i64
  %525 = ptrtoint i8* %523 to i64
  %526 = sub i64 %524, %525
  %527 = load i8*, i8** %9, align 8
  %528 = load i8*, i8** %7, align 8
  %529 = load i8*, i8** %9, align 8
  %530 = ptrtoint i8* %528 to i64
  %531 = ptrtoint i8* %529 to i64
  %532 = sub i64 %530, %531
  %533 = call i32 @add_index_stringl(%18* %519, i64 %526, i8* %527, i64 %532)
  br label %537

534:                                              ; preds = %507
  %535 = load i64, i64* %12, align 8
  %536 = add i64 %535, 1
  store i64 %536, i64* %12, align 8
  br label %537

537:                                              ; preds = %534, %518, %509
  br label %538

538:                                              ; preds = %537, %503
  %539 = load i8*, i8** %7, align 8
  %540 = getelementptr inbounds i8, i8* %539, i32 1
  store i8* %540, i8** %7, align 8
  br label %453

541:                                              ; preds = %453
  %542 = load i64, i64* %13, align 8
  %543 = icmp ne i64 %542, 0
  br i1 %543, label %555, label %544

544:                                              ; preds = %541
  %545 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %545) #13
  %546 = load %18*, %18** %4, align 8
  store %18* %546, %18** %28, align 8
  %547 = load i64, i64* %12, align 8
  %548 = load %18*, %18** %28, align 8
  %549 = getelementptr inbounds %18, %18* %548, i32 0, i32 0
  %550 = bitcast %19* %549 to i64*
  store i64 %547, i64* %550, align 8
  %551 = load %18*, %18** %28, align 8
  %552 = getelementptr inbounds %18, %18* %551, i32 0, i32 1
  %553 = bitcast %20* %552 to i32*
  store i32 4, i32* %553, align 8
  %554 = bitcast %18** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %554) #13
  store i32 1, i32* %26, align 4
  br label %556

555:                                              ; preds = %541
  store i32 0, i32* %26, align 4
  br label %556

556:                                              ; preds = %555, %544, %390, %372, %365, %342
  %557 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %557) #13
  %558 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %558) #13
  %559 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %559) #13
  %560 = bitcast [256 x i8]* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %560) #13
  %561 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %561) #13
  %562 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %562) #13
  %563 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %563) #13
  %564 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %564) #13
  %565 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %565) #13
  %566 = load i32, i32* %26, align 4
  switch i32 %566, label %568 [
    i32 0, label %567
    i32 1, label %567
  ]

567:                                              ; preds = %556, %556
  ret void

568:                                              ; preds = %556
  unreachable
}

declare dso_local i32 @add_next_index_stringl(%18*, i8*, i64) #1

declare dso_local i32 @add_index_stringl(%18*, i64, i8*, i64) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_money_format(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca double, align 8
  %10 = alloca i8, align 1
  %11 = alloca %0*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %18*, align 8
  %19 = alloca %18*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %18*, align 8
  %27 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %28 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  store i64 0, i64* %5, align 8
  %29 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  %32 = bitcast double* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #13
  store i8 0, i8* %10, align 1
  %33 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #13
  %34 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #13
  br label %35

35:                                               ; preds = %2
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 0, i32* %13, align 4
  %37 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 2, i32* %14, align 4
  %38 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  store i32 2, i32* %15, align 4
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  %40 = load %14*, %14** %3, align 8
  %41 = getelementptr inbounds %14, %14* %40, i32 0, i32 4
  %42 = getelementptr inbounds %18, %18* %41, i32 0, i32 2
  %43 = bitcast %21* %42 to i32*
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %16, align 4
  %45 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #13
  %46 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  %47 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store %18* null, %18** %19, align 8
  %48 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %20, align 4
  %49 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  store i8* null, i8** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #13
  store i8 0, i8* %23, align 1
  %50 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #13
  store i32 0, i32* %24, align 4
  %51 = load i32, i32* %17, align 4
  %52 = load %18*, %18** %18, align 8
  %53 = load %18*, %18** %19, align 8
  %54 = load i32, i32* %20, align 4
  %55 = load i8*, i8** %21, align 8
  %56 = load i8, i8* %22, align 1
  %57 = load i8, i8* %23, align 1
  br label %58

58:                                               ; preds = %35
  %59 = load i32, i32* %16, align 4
  %60 = load i32, i32* %14, align 4
  %61 = icmp slt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %87, label %68

68:                                               ; preds = %58
  %69 = load i32, i32* %16, align 4
  %70 = load i32, i32* %15, align 4
  %71 = icmp sgt i32 %69, %70
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 0)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %91

78:                                               ; preds = %68
  %79 = load i32, i32* %15, align 4
  %80 = icmp sge i32 %79, 0
  %81 = xor i1 %80, true
  %82 = xor i1 %81, true
  %83 = zext i1 %82 to i32
  %84 = sext i32 %83 to i64
  %85 = call i64 @llvm.expect.i64(i64 %84, i64 1)
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %78, %58
  %88 = load i32, i32* %16, align 4
  %89 = load i32, i32* %14, align 4
  %90 = load i32, i32* %15, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %88, i32 %89, i32 %90)
  store i32 1, i32* %24, align 4
  br label %236

91:                                               ; preds = %78, %68
  store i32 0, i32* %17, align 4
  %92 = load %14*, %14** %3, align 8
  %93 = bitcast %14* %92 to %18*
  %94 = getelementptr inbounds %18, %18* %93, i64 4
  store %18* %94, %18** %18, align 8
  %95 = load i32, i32* %17, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %17, align 4
  br label %97

97:                                               ; preds = %91
  %98 = load i32, i32* %17, align 4
  %99 = load i32, i32* %14, align 4
  %100 = icmp sle i32 %98, %99
  br i1 %100, label %105, label %101

101:                                              ; preds = %97
  %102 = load i8, i8* %23, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp eq i32 %103, 1
  br label %105

105:                                              ; preds = %101, %97
  %106 = phi i1 [ true, %97 ], [ %104, %101 ]
  %107 = xor i1 %106, true
  %108 = zext i1 %107 to i32
  %109 = sext i32 %108 to i64
  %110 = call i64 @llvm.expect.i64(i64 %109, i64 0)
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %105
  unreachable

113:                                              ; preds = %105
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  %117 = load i32, i32* %17, align 4
  %118 = load i32, i32* %14, align 4
  %119 = icmp sgt i32 %117, %118
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = load i8, i8* %23, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp eq i32 %122, 0
  br label %124

124:                                              ; preds = %120, %116
  %125 = phi i1 [ true, %116 ], [ %123, %120 ]
  %126 = xor i1 %125, true
  %127 = zext i1 %126 to i32
  %128 = sext i32 %127 to i64
  %129 = call i64 @llvm.expect.i64(i64 %128, i64 0)
  %130 = icmp ne i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %124
  unreachable

132:                                              ; preds = %124
  br label %133

133:                                              ; preds = %132
  br label %134

134:                                              ; preds = %133
  %135 = load i8, i8* %23, align 1
  %136 = icmp ne i8 %135, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %134
  %138 = load i32, i32* %17, align 4
  %139 = load i32, i32* %16, align 4
  %140 = icmp sgt i32 %138, %139
  %141 = xor i1 %140, true
  %142 = xor i1 %141, true
  %143 = zext i1 %142 to i32
  %144 = sext i32 %143 to i64
  %145 = call i64 @llvm.expect.i64(i64 %144, i64 0)
  %146 = icmp ne i64 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %137
  br label %236

148:                                              ; preds = %137
  br label %149

149:                                              ; preds = %148, %134
  %150 = load %18*, %18** %18, align 8
  %151 = getelementptr inbounds %18, %18* %150, i32 1
  store %18* %151, %18** %18, align 8
  %152 = load %18*, %18** %18, align 8
  store %18* %152, %18** %19, align 8
  %153 = load %18*, %18** %19, align 8
  %154 = call i32 @151(%18* %153, i8** %6, i64* %5, i32 0)
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = zext i1 %158 to i32
  %160 = sext i32 %159 to i64
  %161 = call i64 @llvm.expect.i64(i64 %160, i64 0)
  %162 = icmp ne i64 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %149
  store i32 2, i32* %20, align 4
  store i32 4, i32* %24, align 4
  br label %236

164:                                              ; preds = %149
  %165 = load i32, i32* %17, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %17, align 4
  br label %167

167:                                              ; preds = %164
  %168 = load i32, i32* %17, align 4
  %169 = load i32, i32* %14, align 4
  %170 = icmp sle i32 %168, %169
  br i1 %170, label %175, label %171

171:                                              ; preds = %167
  %172 = load i8, i8* %23, align 1
  %173 = zext i8 %172 to i32
  %174 = icmp eq i32 %173, 1
  br label %175

175:                                              ; preds = %171, %167
  %176 = phi i1 [ true, %167 ], [ %174, %171 ]
  %177 = xor i1 %176, true
  %178 = zext i1 %177 to i32
  %179 = sext i32 %178 to i64
  %180 = call i64 @llvm.expect.i64(i64 %179, i64 0)
  %181 = icmp ne i64 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %175
  unreachable

183:                                              ; preds = %175
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  br label %186

186:                                              ; preds = %185
  %187 = load i32, i32* %17, align 4
  %188 = load i32, i32* %14, align 4
  %189 = icmp sgt i32 %187, %188
  br i1 %189, label %194, label %190

190:                                              ; preds = %186
  %191 = load i8, i8* %23, align 1
  %192 = zext i8 %191 to i32
  %193 = icmp eq i32 %192, 0
  br label %194

194:                                              ; preds = %190, %186
  %195 = phi i1 [ true, %186 ], [ %193, %190 ]
  %196 = xor i1 %195, true
  %197 = zext i1 %196 to i32
  %198 = sext i32 %197 to i64
  %199 = call i64 @llvm.expect.i64(i64 %198, i64 0)
  %200 = icmp ne i64 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %194
  unreachable

202:                                              ; preds = %194
  br label %203

203:                                              ; preds = %202
  br label %204

204:                                              ; preds = %203
  %205 = load i8, i8* %23, align 1
  %206 = icmp ne i8 %205, 0
  br i1 %206, label %207, label %219

207:                                              ; preds = %204
  %208 = load i32, i32* %17, align 4
  %209 = load i32, i32* %16, align 4
  %210 = icmp sgt i32 %208, %209
  %211 = xor i1 %210, true
  %212 = xor i1 %211, true
  %213 = zext i1 %212 to i32
  %214 = sext i32 %213 to i64
  %215 = call i64 @llvm.expect.i64(i64 %214, i64 0)
  %216 = icmp ne i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %207
  br label %236

218:                                              ; preds = %207
  br label %219

219:                                              ; preds = %218, %204
  %220 = load %18*, %18** %18, align 8
  %221 = getelementptr inbounds %18, %18* %220, i32 1
  store %18* %221, %18** %18, align 8
  %222 = load %18*, %18** %18, align 8
  store %18* %222, %18** %19, align 8
  %223 = load %18*, %18** %19, align 8
  %224 = call i32 @185(%18* %223, double* %9, i8* %22, i32 0)
  %225 = icmp ne i32 %224, 0
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = xor i1 %227, true
  %229 = zext i1 %228 to i32
  %230 = sext i32 %229 to i64
  %231 = call i64 @llvm.expect.i64(i64 %230, i64 0)
  %232 = icmp ne i64 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %219
  store i32 8, i32* %20, align 4
  store i32 4, i32* %24, align 4
  br label %236

234:                                              ; preds = %219
  br label %235

235:                                              ; preds = %234
  br label %236

236:                                              ; preds = %235, %233, %217, %163, %147, %87
  %237 = load i32, i32* %24, align 4
  %238 = icmp ne i32 %237, 0
  %239 = xor i1 %238, true
  %240 = xor i1 %239, true
  %241 = zext i1 %240 to i32
  %242 = sext i32 %241 to i64
  %243 = call i64 @llvm.expect.i64(i64 %242, i64 0)
  %244 = icmp ne i64 %243, 0
  br i1 %244, label %245, label %268

245:                                              ; preds = %236
  %246 = load i32, i32* %24, align 4
  %247 = icmp eq i32 %246, 2
  br i1 %247, label %248, label %251

248:                                              ; preds = %245
  %249 = load i32, i32* %17, align 4
  %250 = load i8*, i8** %21, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %249, i8* %250)
  br label %267

251:                                              ; preds = %245
  %252 = load i32, i32* %24, align 4
  %253 = icmp eq i32 %252, 3
  br i1 %253, label %254, label %258

254:                                              ; preds = %251
  %255 = load i32, i32* %17, align 4
  %256 = load i8*, i8** %21, align 8
  %257 = load %18*, %18** %19, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %255, i8* %256, %18* %257)
  br label %266

258:                                              ; preds = %251
  %259 = load i32, i32* %24, align 4
  %260 = icmp eq i32 %259, 4
  br i1 %260, label %261, label %265

261:                                              ; preds = %258
  %262 = load i32, i32* %17, align 4
  %263 = load i32, i32* %20, align 4
  %264 = load %18*, %18** %19, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %262, i32 %263, %18* %264)
  br label %265

265:                                              ; preds = %261, %258
  br label %266

266:                                              ; preds = %265, %254
  br label %267

267:                                              ; preds = %266, %248
  store i32 1, i32* %25, align 4
  br label %269

268:                                              ; preds = %236
  store i32 0, i32* %25, align 4
  br label %269

269:                                              ; preds = %268, %267
  %270 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %270) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  %271 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271) #13
  %272 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #13
  %273 = bitcast %18** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #13
  %274 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #13
  %275 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #13
  %276 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #13
  %277 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #13
  %278 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #13
  %279 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #13
  %280 = load i32, i32* %25, align 4
  switch i32 %280, label %372 [
    i32 0, label %281
  ]

281:                                              ; preds = %269
  br label %282

282:                                              ; preds = %281
  br label %283

283:                                              ; preds = %282
  %284 = load i8*, i8** %6, align 8
  store i8* %284, i8** %7, align 8
  %285 = load i8*, i8** %7, align 8
  %286 = load i64, i64* %5, align 8
  %287 = getelementptr inbounds i8, i8* %285, i64 %286
  store i8* %287, i8** %8, align 8
  br label %288

288:                                              ; preds = %320, %283
  %289 = load i8*, i8** %7, align 8
  %290 = load i8*, i8** %8, align 8
  %291 = load i8*, i8** %7, align 8
  %292 = ptrtoint i8* %290 to i64
  %293 = ptrtoint i8* %291 to i64
  %294 = sub i64 %292, %293
  %295 = call i8* @memchr(i8* %289, i32 37, i64 %294) #14
  store i8* %295, i8** %7, align 8
  %296 = icmp ne i8* %295, null
  br i1 %296, label %297, label %321

297:                                              ; preds = %288
  %298 = load i8*, i8** %7, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 1
  %300 = load i8, i8* %299, align 1
  %301 = sext i8 %300 to i32
  %302 = icmp eq i32 %301, 37
  br i1 %302, label %303, label %306

303:                                              ; preds = %297
  %304 = load i8*, i8** %7, align 8
  %305 = getelementptr inbounds i8, i8* %304, i64 2
  store i8* %305, i8** %7, align 8
  br label %320

306:                                              ; preds = %297
  %307 = load i8, i8* %10, align 1
  %308 = icmp ne i8 %307, 0
  br i1 %308, label %312, label %309

309:                                              ; preds = %306
  store i8 1, i8* %10, align 1
  %310 = load i8*, i8** %7, align 8
  %311 = getelementptr inbounds i8, i8* %310, i32 1
  store i8* %311, i8** %7, align 8
  br label %319

312:                                              ; preds = %306
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @131, i32 0, i32 0))
  br label %313

313:                                              ; preds = %312
  %314 = load %18*, %18** %4, align 8
  %315 = getelementptr inbounds %18, %18* %314, i32 0, i32 1
  %316 = bitcast %20* %315 to i32*
  store i32 2, i32* %316, align 8
  br label %317

317:                                              ; preds = %313
  br label %318

318:                                              ; preds = %317
  store i32 1, i32* %25, align 4
  br label %372

319:                                              ; preds = %309
  br label %320

320:                                              ; preds = %319, %303
  br label %288

321:                                              ; preds = %288
  %322 = load i64, i64* %5, align 8
  %323 = call %0* @153(i64 %322, i64 1, i64 1024, i32 0)
  store %0* %323, %0** %11, align 8
  %324 = load %0*, %0** %11, align 8
  %325 = getelementptr inbounds %0, %0* %324, i32 0, i32 3
  %326 = getelementptr inbounds [1 x i8], [1 x i8]* %325, i32 0, i32 0
  %327 = load %0*, %0** %11, align 8
  %328 = getelementptr inbounds %0, %0* %327, i32 0, i32 2
  %329 = load i64, i64* %328, align 8
  %330 = load i8*, i8** %6, align 8
  %331 = load double, double* %9, align 8
  %332 = call i64 (i8*, i64, i8*, ...) @strfmon(i8* %326, i64 %329, i8* %330, double %331) #13
  store i64 %332, i64* %12, align 8
  %333 = icmp slt i64 %332, 0
  br i1 %333, label %334, label %342

334:                                              ; preds = %321
  %335 = load %0*, %0** %11, align 8
  call void @164(%0* %335)
  br label %336

336:                                              ; preds = %334
  %337 = load %18*, %18** %4, align 8
  %338 = getelementptr inbounds %18, %18* %337, i32 0, i32 1
  %339 = bitcast %20* %338 to i32*
  store i32 2, i32* %339, align 8
  br label %340

340:                                              ; preds = %336
  br label %341

341:                                              ; preds = %340
  store i32 1, i32* %25, align 4
  br label %372

342:                                              ; preds = %321
  %343 = load i64, i64* %12, align 8
  %344 = load %0*, %0** %11, align 8
  %345 = getelementptr inbounds %0, %0* %344, i32 0, i32 2
  store i64 %343, i64* %345, align 8
  %346 = load %0*, %0** %11, align 8
  %347 = getelementptr inbounds %0, %0* %346, i32 0, i32 3
  %348 = load %0*, %0** %11, align 8
  %349 = getelementptr inbounds %0, %0* %348, i32 0, i32 2
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds [1 x i8], [1 x i8]* %347, i64 0, i64 %350
  store i8 0, i8* %351, align 1
  br label %352

352:                                              ; preds = %342
  %353 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %353) #13
  %354 = load %18*, %18** %4, align 8
  store %18* %354, %18** %26, align 8
  %355 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %355) #13
  %356 = load %0*, %0** %11, align 8
  %357 = load %0*, %0** %11, align 8
  %358 = getelementptr inbounds %0, %0* %357, i32 0, i32 2
  %359 = load i64, i64* %358, align 8
  %360 = call %0* @155(%0* %356, i64 %359, i32 0)
  store %0* %360, %0** %27, align 8
  %361 = load %0*, %0** %27, align 8
  %362 = load %18*, %18** %26, align 8
  %363 = getelementptr inbounds %18, %18* %362, i32 0, i32 0
  %364 = bitcast %19* %363 to %0**
  store %0* %361, %0** %364, align 8
  %365 = load %18*, %18** %26, align 8
  %366 = getelementptr inbounds %18, %18* %365, i32 0, i32 1
  %367 = bitcast %20* %366 to i32*
  store i32 5126, i32* %367, align 8
  %368 = bitcast %0** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %368) #13
  %369 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %369) #13
  br label %370

370:                                              ; preds = %352
  br label %371

371:                                              ; preds = %370
  store i32 1, i32* %25, align 4
  br label %372

372:                                              ; preds = %371, %341, %318, %269
  %373 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %373) #13
  %374 = bitcast %0** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %374) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #13
  %375 = bitcast double* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %375) #13
  %376 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %376) #13
  %377 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %377) #13
  %378 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %378) #13
  %379 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %379) #13
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @185(%18* %0, double* %1, i8* %2, i32 %3) #5 {
  %5 = alloca i32, align 4
  %6 = alloca %18*, align 8
  %7 = alloca double*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %18* %0, %18** %6, align 8
  store double* %1, double** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = load i8*, i8** %8, align 8
  store i8 0, i8* %13, align 1
  br label %14

14:                                               ; preds = %12, %4
  %15 = load %18*, %18** %6, align 8
  %16 = call zeroext i8 @157(%18* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 5
  %19 = xor i1 %18, true
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = call i64 @llvm.expect.i64(i64 %22, i64 1)
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = load %18*, %18** %6, align 8
  %27 = getelementptr inbounds %18, %18* %26, i32 0, i32 0
  %28 = bitcast %19* %27 to double*
  %29 = load double, double* %28, align 8
  %30 = load double*, double** %7, align 8
  store double %29, double* %30, align 8
  br label %47

31:                                               ; preds = %14
  %32 = load i32, i32* %9, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = load %18*, %18** %6, align 8
  %36 = call zeroext i8 @157(%18* %35)
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = load i8*, i8** %8, align 8
  store i8 1, i8* %40, align 1
  %41 = load double*, double** %7, align 8
  store double 0.000000e+00, double* %41, align 8
  br label %46

42:                                               ; preds = %34, %31
  %43 = load %18*, %18** %6, align 8
  %44 = load double*, double** %7, align 8
  %45 = call i32 @zend_parse_arg_double_slow(%18* %43, double* %44)
  store i32 %45, i32* %5, align 4
  br label %48

46:                                               ; preds = %39
  br label %47

47:                                               ; preds = %46, %25
  store i32 1, i32* %5, align 4
  br label %48

48:                                               ; preds = %47, %42
  %49 = load i32, i32* %5, align 4
  ret i32 %49
}

; Function Attrs: nounwind
declare dso_local i64 @strfmon(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind uwtable
define hidden void @zif_str_split(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %22 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  store i64 1, i64* %6, align 8
  %24 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 0, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  store i32 2, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  %31 = load %14*, %14** %3, align 8
  %32 = getelementptr inbounds %14, %14* %31, i32 0, i32 4
  %33 = getelementptr inbounds %18, %18* %32, i32 0, i32 2
  %34 = bitcast %21* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  %37 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  %38 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store %18* null, %18** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %18*, %18** %14, align 8
  %44 = load %18*, %18** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %227

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %14*, %14** %3, align 8
  %84 = bitcast %14* %83 to %18*
  %85 = getelementptr inbounds %18, %18* %84, i64 4
  store %18* %85, %18** %14, align 8
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %227

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %18*, %18** %14, align 8
  %142 = getelementptr inbounds %18, %18* %141, i32 1
  store %18* %142, %18** %14, align 8
  %143 = load %18*, %18** %14, align 8
  store %18* %143, %18** %15, align 8
  %144 = load %18*, %18** %15, align 8
  %145 = call i32 @143(%18* %144, %0** %5, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

155:                                              ; preds = %140
  store i8 1, i8* %19, align 1
  %156 = load i32, i32* %13, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %13, align 4
  br label %158

158:                                              ; preds = %155
  %159 = load i32, i32* %13, align 4
  %160 = load i32, i32* %10, align 4
  %161 = icmp sle i32 %159, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i8, i8* %19, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 1
  br label %166

166:                                              ; preds = %162, %158
  %167 = phi i1 [ true, %158 ], [ %165, %162 ]
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  unreachable

174:                                              ; preds = %166
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %13, align 4
  %179 = load i32, i32* %10, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %19, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  %196 = load i8, i8* %19, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %195
  %199 = load i32, i32* %13, align 4
  %200 = load i32, i32* %12, align 4
  %201 = icmp sgt i32 %199, %200
  %202 = xor i1 %201, true
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %198
  br label %227

209:                                              ; preds = %198
  br label %210

210:                                              ; preds = %209, %195
  %211 = load %18*, %18** %14, align 8
  %212 = getelementptr inbounds %18, %18* %211, i32 1
  store %18* %212, %18** %14, align 8
  %213 = load %18*, %18** %14, align 8
  store %18* %213, %18** %15, align 8
  %214 = load %18*, %18** %15, align 8
  %215 = call i32 @147(%18* %214, i64* %6, i8* %18, i32 0, i32 0)
  %216 = icmp ne i32 %215, 0
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %210
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

225:                                              ; preds = %210
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226, %224, %208, %154, %138, %78
  %228 = load i32, i32* %20, align 4
  %229 = icmp ne i32 %228, 0
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i32
  %233 = sext i32 %232 to i64
  %234 = call i64 @llvm.expect.i64(i64 %233, i64 0)
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %236, label %259

236:                                              ; preds = %227
  %237 = load i32, i32* %20, align 4
  %238 = icmp eq i32 %237, 2
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load i32, i32* %13, align 4
  %241 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %240, i8* %241)
  br label %258

242:                                              ; preds = %236
  %243 = load i32, i32* %20, align 4
  %244 = icmp eq i32 %243, 3
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = load i32, i32* %13, align 4
  %247 = load i8*, i8** %17, align 8
  %248 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %246, i8* %247, %18* %248)
  br label %257

249:                                              ; preds = %242
  %250 = load i32, i32* %20, align 4
  %251 = icmp eq i32 %250, 4
  br i1 %251, label %252, label %256

252:                                              ; preds = %249
  %253 = load i32, i32* %13, align 4
  %254 = load i32, i32* %16, align 4
  %255 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %253, i32 %254, %18* %255)
  br label %256

256:                                              ; preds = %252, %249
  br label %257

257:                                              ; preds = %256, %245
  br label %258

258:                                              ; preds = %257, %239
  store i32 1, i32* %21, align 4
  br label %260

259:                                              ; preds = %227
  store i32 0, i32* %21, align 4
  br label %260

260:                                              ; preds = %259, %258
  %261 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %261) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %262 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #13
  %263 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #13
  %264 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #13
  %265 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %265) #13
  %266 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %266) #13
  %267 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #13
  %268 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %268) #13
  %269 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #13
  %270 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %270) #13
  %271 = load i32, i32* %21, align 4
  switch i32 %271, label %363 [
    i32 0, label %272
  ]

272:                                              ; preds = %260
  br label %273

273:                                              ; preds = %272
  br label %274

274:                                              ; preds = %273
  %275 = load i64, i64* %6, align 8
  %276 = icmp sle i64 %275, 0
  br i1 %276, label %277, label %284

277:                                              ; preds = %274
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @132, i32 0, i32 0))
  br label %278

278:                                              ; preds = %277
  %279 = load %18*, %18** %4, align 8
  %280 = getelementptr inbounds %18, %18* %279, i32 0, i32 1
  %281 = bitcast %20* %280 to i32*
  store i32 2, i32* %281, align 8
  br label %282

282:                                              ; preds = %278
  br label %283

283:                                              ; preds = %282
  store i32 1, i32* %21, align 4
  br label %363

284:                                              ; preds = %274
  %285 = load %0*, %0** %5, align 8
  %286 = getelementptr inbounds %0, %0* %285, i32 0, i32 2
  %287 = load i64, i64* %286, align 8
  %288 = icmp eq i64 0, %287
  br i1 %288, label %295, label %289

289:                                              ; preds = %284
  %290 = load i64, i64* %6, align 8
  %291 = load %0*, %0** %5, align 8
  %292 = getelementptr inbounds %0, %0* %291, i32 0, i32 2
  %293 = load i64, i64* %292, align 8
  %294 = icmp uge i64 %290, %293
  br i1 %294, label %295, label %306

295:                                              ; preds = %289, %284
  %296 = load %18*, %18** %4, align 8
  %297 = call i32 @_array_init(%18* %296, i32 1)
  %298 = load %18*, %18** %4, align 8
  %299 = load %0*, %0** %5, align 8
  %300 = getelementptr inbounds %0, %0* %299, i32 0, i32 3
  %301 = getelementptr inbounds [1 x i8], [1 x i8]* %300, i32 0, i32 0
  %302 = load %0*, %0** %5, align 8
  %303 = getelementptr inbounds %0, %0* %302, i32 0, i32 2
  %304 = load i64, i64* %303, align 8
  %305 = call i32 @add_next_index_stringl(%18* %298, i8* %301, i64 %304)
  store i32 1, i32* %21, align 4
  br label %363

306:                                              ; preds = %289
  %307 = load %18*, %18** %4, align 8
  %308 = load %0*, %0** %5, align 8
  %309 = getelementptr inbounds %0, %0* %308, i32 0, i32 2
  %310 = load i64, i64* %309, align 8
  %311 = sub i64 %310, 1
  %312 = load i64, i64* %6, align 8
  %313 = udiv i64 %311, %312
  %314 = add i64 %313, 1
  %315 = trunc i64 %314 to i32
  %316 = call i32 @_array_init(%18* %307, i32 %315)
  %317 = load %0*, %0** %5, align 8
  %318 = getelementptr inbounds %0, %0* %317, i32 0, i32 2
  %319 = load i64, i64* %318, align 8
  %320 = load i64, i64* %6, align 8
  %321 = udiv i64 %319, %320
  store i64 %321, i64* %8, align 8
  %322 = load %0*, %0** %5, align 8
  %323 = getelementptr inbounds %0, %0* %322, i32 0, i32 3
  %324 = getelementptr inbounds [1 x i8], [1 x i8]* %323, i32 0, i32 0
  store i8* %324, i8** %7, align 8
  br label %325

325:                                              ; preds = %329, %306
  %326 = load i64, i64* %8, align 8
  %327 = add i64 %326, -1
  store i64 %327, i64* %8, align 8
  %328 = icmp ugt i64 %326, 0
  br i1 %328, label %329, label %337

329:                                              ; preds = %325
  %330 = load %18*, %18** %4, align 8
  %331 = load i8*, i8** %7, align 8
  %332 = load i64, i64* %6, align 8
  %333 = call i32 @add_next_index_stringl(%18* %330, i8* %331, i64 %332)
  %334 = load i64, i64* %6, align 8
  %335 = load i8*, i8** %7, align 8
  %336 = getelementptr inbounds i8, i8* %335, i64 %334
  store i8* %336, i8** %7, align 8
  br label %325

337:                                              ; preds = %325
  %338 = load i8*, i8** %7, align 8
  %339 = load %0*, %0** %5, align 8
  %340 = getelementptr inbounds %0, %0* %339, i32 0, i32 3
  %341 = getelementptr inbounds [1 x i8], [1 x i8]* %340, i32 0, i32 0
  %342 = load %0*, %0** %5, align 8
  %343 = getelementptr inbounds %0, %0* %342, i32 0, i32 2
  %344 = load i64, i64* %343, align 8
  %345 = getelementptr inbounds i8, i8* %341, i64 %344
  %346 = icmp ne i8* %338, %345
  br i1 %346, label %347, label %362

347:                                              ; preds = %337
  %348 = load %18*, %18** %4, align 8
  %349 = load i8*, i8** %7, align 8
  %350 = load %0*, %0** %5, align 8
  %351 = getelementptr inbounds %0, %0* %350, i32 0, i32 3
  %352 = getelementptr inbounds [1 x i8], [1 x i8]* %351, i32 0, i32 0
  %353 = load %0*, %0** %5, align 8
  %354 = getelementptr inbounds %0, %0* %353, i32 0, i32 2
  %355 = load i64, i64* %354, align 8
  %356 = getelementptr inbounds i8, i8* %352, i64 %355
  %357 = load i8*, i8** %7, align 8
  %358 = ptrtoint i8* %356 to i64
  %359 = ptrtoint i8* %357 to i64
  %360 = sub i64 %358, %359
  %361 = call i32 @add_next_index_stringl(%18* %348, i8* %349, i64 %360)
  br label %362

362:                                              ; preds = %347, %337
  store i32 0, i32* %21, align 4
  br label %363

363:                                              ; preds = %362, %295, %283, %260
  %364 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %364) #13
  %365 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %365) #13
  %366 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %366) #13
  %367 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %367) #13
  %368 = load i32, i32* %21, align 4
  switch i32 %368, label %370 [
    i32 0, label %369
    i32 1, label %369
  ]

369:                                              ; preds = %363, %363
  ret void

370:                                              ; preds = %363
  unreachable
}

; Function Attrs: nounwind uwtable
define hidden void @zif_strpbrk(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %18*, align 8
  %15 = alloca %18*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %24 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #13
  %25 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #13
  %26 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #13
  store i32 0, i32* %9, align 4
  %30 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #13
  store i32 2, i32* %10, align 4
  %31 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #13
  store i32 2, i32* %11, align 4
  %32 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #13
  %33 = load %14*, %14** %3, align 8
  %34 = getelementptr inbounds %14, %14* %33, i32 0, i32 4
  %35 = getelementptr inbounds %18, %18* %34, i32 0, i32 2
  %36 = bitcast %21* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %12, align 4
  %38 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #13
  %39 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  store %18* null, %18** %15, align 8
  %41 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #13
  store i32 0, i32* %16, align 4
  %42 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #13
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #13
  store i8 0, i8* %19, align 1
  %43 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  store i32 0, i32* %20, align 4
  %44 = load i32, i32* %13, align 4
  %45 = load %18*, %18** %14, align 8
  %46 = load %18*, %18** %15, align 8
  %47 = load i32, i32* %16, align 4
  %48 = load i8*, i8** %17, align 8
  %49 = load i8, i8* %18, align 1
  %50 = load i8, i8* %19, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %12, align 4
  %53 = load i32, i32* %10, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %12, align 4
  %63 = load i32, i32* %11, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %11, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %12, align 4
  %82 = load i32, i32* %10, align 4
  %83 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %20, align 4
  br label %229

84:                                               ; preds = %71, %61
  store i32 0, i32* %13, align 4
  %85 = load %14*, %14** %3, align 8
  %86 = bitcast %14* %85 to %18*
  %87 = getelementptr inbounds %18, %18* %86, i64 4
  store %18* %87, %18** %14, align 8
  %88 = load i32, i32* %13, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %13, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %13, align 4
  %92 = load i32, i32* %10, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %19, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %13, align 4
  %111 = load i32, i32* %10, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %19, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %19, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %13, align 4
  %132 = load i32, i32* %12, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %229

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %18*, %18** %14, align 8
  %144 = getelementptr inbounds %18, %18* %143, i32 1
  store %18* %144, %18** %14, align 8
  %145 = load %18*, %18** %14, align 8
  store %18* %145, %18** %15, align 8
  %146 = load %18*, %18** %15, align 8
  %147 = call i32 @143(%18* %146, %0** %5, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %229

157:                                              ; preds = %142
  %158 = load i32, i32* %13, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %13, align 4
  br label %160

160:                                              ; preds = %157
  %161 = load i32, i32* %13, align 4
  %162 = load i32, i32* %10, align 4
  %163 = icmp sle i32 %161, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = load i8, i8* %19, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %166, 1
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi i1 [ true, %160 ], [ %167, %164 ]
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %168
  unreachable

176:                                              ; preds = %168
  br label %177

177:                                              ; preds = %176
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %13, align 4
  %181 = load i32, i32* %10, align 4
  %182 = icmp sgt i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %19, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 0
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  %198 = load i8, i8* %19, align 1
  %199 = icmp ne i8 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %197
  %201 = load i32, i32* %13, align 4
  %202 = load i32, i32* %12, align 4
  %203 = icmp sgt i32 %201, %202
  %204 = xor i1 %203, true
  %205 = xor i1 %204, true
  %206 = zext i1 %205 to i32
  %207 = sext i32 %206 to i64
  %208 = call i64 @llvm.expect.i64(i64 %207, i64 0)
  %209 = icmp ne i64 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %200
  br label %229

211:                                              ; preds = %200
  br label %212

212:                                              ; preds = %211, %197
  %213 = load %18*, %18** %14, align 8
  %214 = getelementptr inbounds %18, %18* %213, i32 1
  store %18* %214, %18** %14, align 8
  %215 = load %18*, %18** %14, align 8
  store %18* %215, %18** %15, align 8
  %216 = load %18*, %18** %15, align 8
  %217 = call i32 @143(%18* %216, %0** %6, i32 0)
  %218 = icmp ne i32 %217, 0
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i32
  %223 = sext i32 %222 to i64
  %224 = call i64 @llvm.expect.i64(i64 %223, i64 0)
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %212
  store i32 2, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %229

227:                                              ; preds = %212
  br label %228

228:                                              ; preds = %227
  br label %229

229:                                              ; preds = %228, %226, %210, %156, %140, %80
  %230 = load i32, i32* %20, align 4
  %231 = icmp ne i32 %230, 0
  %232 = xor i1 %231, true
  %233 = xor i1 %232, true
  %234 = zext i1 %233 to i32
  %235 = sext i32 %234 to i64
  %236 = call i64 @llvm.expect.i64(i64 %235, i64 0)
  %237 = icmp ne i64 %236, 0
  br i1 %237, label %238, label %267

238:                                              ; preds = %229
  %239 = load i32, i32* %20, align 4
  %240 = icmp eq i32 %239, 2
  br i1 %240, label %241, label %244

241:                                              ; preds = %238
  %242 = load i32, i32* %13, align 4
  %243 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %242, i8* %243)
  br label %260

244:                                              ; preds = %238
  %245 = load i32, i32* %20, align 4
  %246 = icmp eq i32 %245, 3
  br i1 %246, label %247, label %251

247:                                              ; preds = %244
  %248 = load i32, i32* %13, align 4
  %249 = load i8*, i8** %17, align 8
  %250 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %248, i8* %249, %18* %250)
  br label %259

251:                                              ; preds = %244
  %252 = load i32, i32* %20, align 4
  %253 = icmp eq i32 %252, 4
  br i1 %253, label %254, label %258

254:                                              ; preds = %251
  %255 = load i32, i32* %13, align 4
  %256 = load i32, i32* %16, align 4
  %257 = load %18*, %18** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %255, i32 %256, %18* %257)
  br label %258

258:                                              ; preds = %254, %251
  br label %259

259:                                              ; preds = %258, %247
  br label %260

260:                                              ; preds = %259, %241
  br label %261

261:                                              ; preds = %260
  %262 = load %18*, %18** %4, align 8
  %263 = getelementptr inbounds %18, %18* %262, i32 0, i32 1
  %264 = bitcast %20* %263 to i32*
  store i32 2, i32* %264, align 8
  br label %265

265:                                              ; preds = %261
  br label %266

266:                                              ; preds = %265
  store i32 1, i32* %21, align 4
  br label %268

267:                                              ; preds = %229
  store i32 0, i32* %21, align 4
  br label %268

268:                                              ; preds = %267, %266
  %269 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #13
  %270 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #13
  %271 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #13
  %272 = bitcast %18** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #13
  %273 = bitcast %18** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #13
  %274 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #13
  %275 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #13
  %276 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #13
  %277 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #13
  %278 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #13
  %279 = load i32, i32* %21, align 4
  switch i32 %279, label %377 [
    i32 0, label %280
  ]

280:                                              ; preds = %268
  br label %281

281:                                              ; preds = %280
  br label %282

282:                                              ; preds = %281
  %283 = load %0*, %0** %6, align 8
  %284 = getelementptr inbounds %0, %0* %283, i32 0, i32 2
  %285 = load i64, i64* %284, align 8
  %286 = icmp ne i64 %285, 0
  br i1 %286, label %294, label %287

287:                                              ; preds = %282
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @133, i32 0, i32 0))
  br label %288

288:                                              ; preds = %287
  %289 = load %18*, %18** %4, align 8
  %290 = getelementptr inbounds %18, %18* %289, i32 0, i32 1
  %291 = bitcast %20* %290 to i32*
  store i32 2, i32* %291, align 8
  br label %292

292:                                              ; preds = %288
  br label %293

293:                                              ; preds = %292
  store i32 1, i32* %21, align 4
  br label %377

294:                                              ; preds = %282
  %295 = load %0*, %0** %5, align 8
  %296 = getelementptr inbounds %0, %0* %295, i32 0, i32 3
  %297 = getelementptr inbounds [1 x i8], [1 x i8]* %296, i32 0, i32 0
  store i8* %297, i8** %7, align 8
  br label %298

298:                                              ; preds = %367, %294
  %299 = load i8*, i8** %7, align 8
  %300 = load %0*, %0** %5, align 8
  %301 = getelementptr inbounds %0, %0* %300, i32 0, i32 3
  %302 = getelementptr inbounds [1 x i8], [1 x i8]* %301, i32 0, i32 0
  %303 = load %0*, %0** %5, align 8
  %304 = getelementptr inbounds %0, %0* %303, i32 0, i32 2
  %305 = load i64, i64* %304, align 8
  %306 = getelementptr inbounds i8, i8* %302, i64 %305
  %307 = icmp ult i8* %299, %306
  br i1 %307, label %308, label %370

308:                                              ; preds = %298
  %309 = load %0*, %0** %6, align 8
  %310 = getelementptr inbounds %0, %0* %309, i32 0, i32 3
  %311 = getelementptr inbounds [1 x i8], [1 x i8]* %310, i32 0, i32 0
  store i8* %311, i8** %8, align 8
  br label %312

312:                                              ; preds = %363, %308
  %313 = load i8*, i8** %8, align 8
  %314 = load %0*, %0** %6, align 8
  %315 = getelementptr inbounds %0, %0* %314, i32 0, i32 3
  %316 = getelementptr inbounds [1 x i8], [1 x i8]* %315, i32 0, i32 0
  %317 = load %0*, %0** %6, align 8
  %318 = getelementptr inbounds %0, %0* %317, i32 0, i32 2
  %319 = load i64, i64* %318, align 8
  %320 = getelementptr inbounds i8, i8* %316, i64 %319
  %321 = icmp ult i8* %313, %320
  br i1 %321, label %322, label %366

322:                                              ; preds = %312
  %323 = load i8*, i8** %8, align 8
  %324 = load i8, i8* %323, align 1
  %325 = sext i8 %324 to i32
  %326 = load i8*, i8** %7, align 8
  %327 = load i8, i8* %326, align 1
  %328 = sext i8 %327 to i32
  %329 = icmp eq i32 %325, %328
  br i1 %329, label %330, label %362

330:                                              ; preds = %322
  br label %331

331:                                              ; preds = %330
  br label %332

332:                                              ; preds = %331
  %333 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %333) #13
  %334 = load %18*, %18** %4, align 8
  store %18* %334, %18** %22, align 8
  %335 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %335) #13
  %336 = load i8*, i8** %7, align 8
  %337 = load %0*, %0** %5, align 8
  %338 = getelementptr inbounds %0, %0* %337, i32 0, i32 3
  %339 = getelementptr inbounds [1 x i8], [1 x i8]* %338, i32 0, i32 0
  %340 = load %0*, %0** %5, align 8
  %341 = getelementptr inbounds %0, %0* %340, i32 0, i32 2
  %342 = load i64, i64* %341, align 8
  %343 = getelementptr inbounds i8, i8* %339, i64 %342
  %344 = load i8*, i8** %7, align 8
  %345 = ptrtoint i8* %343 to i64
  %346 = ptrtoint i8* %344 to i64
  %347 = sub i64 %345, %346
  %348 = call %0* @148(i8* %336, i64 %347, i32 0)
  store %0* %348, %0** %23, align 8
  %349 = load %0*, %0** %23, align 8
  %350 = load %18*, %18** %22, align 8
  %351 = getelementptr inbounds %18, %18* %350, i32 0, i32 0
  %352 = bitcast %19* %351 to %0**
  store %0* %349, %0** %352, align 8
  %353 = load %18*, %18** %22, align 8
  %354 = getelementptr inbounds %18, %18* %353, i32 0, i32 1
  %355 = bitcast %20* %354 to i32*
  store i32 5126, i32* %355, align 8
  %356 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %356) #13
  %357 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %357) #13
  br label %358

358:                                              ; preds = %332
  br label %359

359:                                              ; preds = %358
  br label %360

360:                                              ; preds = %359
  br label %361

361:                                              ; preds = %360
  store i32 1, i32* %21, align 4
  br label %377

362:                                              ; preds = %322
  br label %363

363:                                              ; preds = %362
  %364 = load i8*, i8** %8, align 8
  %365 = getelementptr inbounds i8, i8* %364, i32 1
  store i8* %365, i8** %8, align 8
  br label %312

366:                                              ; preds = %312
  br label %367

367:                                              ; preds = %366
  %368 = load i8*, i8** %7, align 8
  %369 = getelementptr inbounds i8, i8* %368, i32 1
  store i8* %369, i8** %7, align 8
  br label %298

370:                                              ; preds = %298
  br label %371

371:                                              ; preds = %370
  %372 = load %18*, %18** %4, align 8
  %373 = getelementptr inbounds %18, %18* %372, i32 0, i32 1
  %374 = bitcast %20* %373 to i32*
  store i32 2, i32* %374, align 8
  br label %375

375:                                              ; preds = %371
  br label %376

376:                                              ; preds = %375
  store i32 1, i32* %21, align 4
  br label %377

377:                                              ; preds = %376, %361, %293, %268
  %378 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %378) #13
  %379 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %379) #13
  %380 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %380) #13
  %381 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %381) #13
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_substr_compare(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %18*, align 8
  %18 = alloca %18*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %18*, align 8
  %26 = alloca %18*, align 8
  %27 = alloca %18*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %28 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #13
  %29 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #13
  %30 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #13
  store i64 0, i64* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %9) #13
  store i8 1, i8* %9, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #13
  store i8 0, i8* %10, align 1
  %32 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #13
  br label %33

33:                                               ; preds = %2
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  store i32 0, i32* %12, align 4
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #13
  store i32 3, i32* %13, align 4
  %36 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #13
  store i32 5, i32* %14, align 4
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  %38 = load %14*, %14** %3, align 8
  %39 = getelementptr inbounds %14, %14* %38, i32 0, i32 4
  %40 = getelementptr inbounds %18, %18* %39, i32 0, i32 2
  %41 = bitcast %21* %40 to i32*
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %15, align 4
  %43 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #13
  %44 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  store %18* null, %18** %18, align 8
  %46 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #13
  store i32 0, i32* %19, align 4
  %47 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #13
  store i8 0, i8* %22, align 1
  %48 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #13
  store i32 0, i32* %23, align 4
  %49 = load i32, i32* %16, align 4
  %50 = load %18*, %18** %17, align 8
  %51 = load %18*, %18** %18, align 8
  %52 = load i32, i32* %19, align 4
  %53 = load i8*, i8** %20, align 8
  %54 = load i8, i8* %21, align 1
  %55 = load i8, i8* %22, align 1
  br label %56

56:                                               ; preds = %33
  %57 = load i32, i32* %15, align 4
  %58 = load i32, i32* %13, align 4
  %59 = icmp slt i32 %57, %58
  %60 = xor i1 %59, true
  %61 = xor i1 %60, true
  %62 = zext i1 %61 to i32
  %63 = sext i32 %62 to i64
  %64 = call i64 @llvm.expect.i64(i64 %63, i64 0)
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %85, label %66

66:                                               ; preds = %56
  %67 = load i32, i32* %15, align 4
  %68 = load i32, i32* %14, align 4
  %69 = icmp sgt i32 %67, %68
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 0)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %89

76:                                               ; preds = %66
  %77 = load i32, i32* %14, align 4
  %78 = icmp sge i32 %77, 0
  %79 = xor i1 %78, true
  %80 = xor i1 %79, true
  %81 = zext i1 %80 to i32
  %82 = sext i32 %81 to i64
  %83 = call i64 @llvm.expect.i64(i64 %82, i64 1)
  %84 = icmp ne i64 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %76, %56
  %86 = load i32, i32* %15, align 4
  %87 = load i32, i32* %13, align 4
  %88 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %86, i32 %87, i32 %88)
  store i32 1, i32* %23, align 4
  br label %444

89:                                               ; preds = %76, %66
  store i32 0, i32* %16, align 4
  %90 = load %14*, %14** %3, align 8
  %91 = bitcast %14* %90 to %18*
  %92 = getelementptr inbounds %18, %18* %91, i64 4
  store %18* %92, %18** %17, align 8
  %93 = load i32, i32* %16, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %16, align 4
  br label %95

95:                                               ; preds = %89
  %96 = load i32, i32* %16, align 4
  %97 = load i32, i32* %13, align 4
  %98 = icmp sle i32 %96, %97
  br i1 %98, label %103, label %99

99:                                               ; preds = %95
  %100 = load i8, i8* %22, align 1
  %101 = zext i8 %100 to i32
  %102 = icmp eq i32 %101, 1
  br label %103

103:                                              ; preds = %99, %95
  %104 = phi i1 [ true, %95 ], [ %102, %99 ]
  %105 = xor i1 %104, true
  %106 = zext i1 %105 to i32
  %107 = sext i32 %106 to i64
  %108 = call i64 @llvm.expect.i64(i64 %107, i64 0)
  %109 = icmp ne i64 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %103
  unreachable

111:                                              ; preds = %103
  br label %112

112:                                              ; preds = %111
  br label %113

113:                                              ; preds = %112
  br label %114

114:                                              ; preds = %113
  %115 = load i32, i32* %16, align 4
  %116 = load i32, i32* %13, align 4
  %117 = icmp sgt i32 %115, %116
  br i1 %117, label %122, label %118

118:                                              ; preds = %114
  %119 = load i8, i8* %22, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br label %122

122:                                              ; preds = %118, %114
  %123 = phi i1 [ true, %114 ], [ %121, %118 ]
  %124 = xor i1 %123, true
  %125 = zext i1 %124 to i32
  %126 = sext i32 %125 to i64
  %127 = call i64 @llvm.expect.i64(i64 %126, i64 0)
  %128 = icmp ne i64 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %122
  unreachable

130:                                              ; preds = %122
  br label %131

131:                                              ; preds = %130
  br label %132

132:                                              ; preds = %131
  %133 = load i8, i8* %22, align 1
  %134 = icmp ne i8 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %132
  %136 = load i32, i32* %16, align 4
  %137 = load i32, i32* %15, align 4
  %138 = icmp sgt i32 %136, %137
  %139 = xor i1 %138, true
  %140 = xor i1 %139, true
  %141 = zext i1 %140 to i32
  %142 = sext i32 %141 to i64
  %143 = call i64 @llvm.expect.i64(i64 %142, i64 0)
  %144 = icmp ne i64 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %135
  br label %444

146:                                              ; preds = %135
  br label %147

147:                                              ; preds = %146, %132
  %148 = load %18*, %18** %17, align 8
  %149 = getelementptr inbounds %18, %18* %148, i32 1
  store %18* %149, %18** %17, align 8
  %150 = load %18*, %18** %17, align 8
  store %18* %150, %18** %18, align 8
  %151 = load %18*, %18** %18, align 8
  %152 = call i32 @143(%18* %151, %0** %5, i32 0)
  %153 = icmp ne i32 %152, 0
  %154 = xor i1 %153, true
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = zext i1 %156 to i32
  %158 = sext i32 %157 to i64
  %159 = call i64 @llvm.expect.i64(i64 %158, i64 0)
  %160 = icmp ne i64 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %147
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %444

162:                                              ; preds = %147
  %163 = load i32, i32* %16, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %16, align 4
  br label %165

165:                                              ; preds = %162
  %166 = load i32, i32* %16, align 4
  %167 = load i32, i32* %13, align 4
  %168 = icmp sle i32 %166, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %165
  %170 = load i8, i8* %22, align 1
  %171 = zext i8 %170 to i32
  %172 = icmp eq i32 %171, 1
  br label %173

173:                                              ; preds = %169, %165
  %174 = phi i1 [ true, %165 ], [ %172, %169 ]
  %175 = xor i1 %174, true
  %176 = zext i1 %175 to i32
  %177 = sext i32 %176 to i64
  %178 = call i64 @llvm.expect.i64(i64 %177, i64 0)
  %179 = icmp ne i64 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %173
  unreachable

181:                                              ; preds = %173
  br label %182

182:                                              ; preds = %181
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  %185 = load i32, i32* %16, align 4
  %186 = load i32, i32* %13, align 4
  %187 = icmp sgt i32 %185, %186
  br i1 %187, label %192, label %188

188:                                              ; preds = %184
  %189 = load i8, i8* %22, align 1
  %190 = zext i8 %189 to i32
  %191 = icmp eq i32 %190, 0
  br label %192

192:                                              ; preds = %188, %184
  %193 = phi i1 [ true, %184 ], [ %191, %188 ]
  %194 = xor i1 %193, true
  %195 = zext i1 %194 to i32
  %196 = sext i32 %195 to i64
  %197 = call i64 @llvm.expect.i64(i64 %196, i64 0)
  %198 = icmp ne i64 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %192
  unreachable

200:                                              ; preds = %192
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  %203 = load i8, i8* %22, align 1
  %204 = icmp ne i8 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %202
  %206 = load i32, i32* %16, align 4
  %207 = load i32, i32* %15, align 4
  %208 = icmp sgt i32 %206, %207
  %209 = xor i1 %208, true
  %210 = xor i1 %209, true
  %211 = zext i1 %210 to i32
  %212 = sext i32 %211 to i64
  %213 = call i64 @llvm.expect.i64(i64 %212, i64 0)
  %214 = icmp ne i64 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %205
  br label %444

216:                                              ; preds = %205
  br label %217

217:                                              ; preds = %216, %202
  %218 = load %18*, %18** %17, align 8
  %219 = getelementptr inbounds %18, %18* %218, i32 1
  store %18* %219, %18** %17, align 8
  %220 = load %18*, %18** %17, align 8
  store %18* %220, %18** %18, align 8
  %221 = load %18*, %18** %18, align 8
  %222 = call i32 @143(%18* %221, %0** %6, i32 0)
  %223 = icmp ne i32 %222, 0
  %224 = xor i1 %223, true
  %225 = xor i1 %224, true
  %226 = xor i1 %225, true
  %227 = zext i1 %226 to i32
  %228 = sext i32 %227 to i64
  %229 = call i64 @llvm.expect.i64(i64 %228, i64 0)
  %230 = icmp ne i64 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %217
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %444

232:                                              ; preds = %217
  %233 = load i32, i32* %16, align 4
  %234 = add nsw i32 %233, 1
  store i32 %234, i32* %16, align 4
  br label %235

235:                                              ; preds = %232
  %236 = load i32, i32* %16, align 4
  %237 = load i32, i32* %13, align 4
  %238 = icmp sle i32 %236, %237
  br i1 %238, label %243, label %239

239:                                              ; preds = %235
  %240 = load i8, i8* %22, align 1
  %241 = zext i8 %240 to i32
  %242 = icmp eq i32 %241, 1
  br label %243

243:                                              ; preds = %239, %235
  %244 = phi i1 [ true, %235 ], [ %242, %239 ]
  %245 = xor i1 %244, true
  %246 = zext i1 %245 to i32
  %247 = sext i32 %246 to i64
  %248 = call i64 @llvm.expect.i64(i64 %247, i64 0)
  %249 = icmp ne i64 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %243
  unreachable

251:                                              ; preds = %243
  br label %252

252:                                              ; preds = %251
  br label %253

253:                                              ; preds = %252
  br label %254

254:                                              ; preds = %253
  %255 = load i32, i32* %16, align 4
  %256 = load i32, i32* %13, align 4
  %257 = icmp sgt i32 %255, %256
  br i1 %257, label %262, label %258

258:                                              ; preds = %254
  %259 = load i8, i8* %22, align 1
  %260 = zext i8 %259 to i32
  %261 = icmp eq i32 %260, 0
  br label %262

262:                                              ; preds = %258, %254
  %263 = phi i1 [ true, %254 ], [ %261, %258 ]
  %264 = xor i1 %263, true
  %265 = zext i1 %264 to i32
  %266 = sext i32 %265 to i64
  %267 = call i64 @llvm.expect.i64(i64 %266, i64 0)
  %268 = icmp ne i64 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %262
  unreachable

270:                                              ; preds = %262
  br label %271

271:                                              ; preds = %270
  br label %272

272:                                              ; preds = %271
  %273 = load i8, i8* %22, align 1
  %274 = icmp ne i8 %273, 0
  br i1 %274, label %275, label %287

275:                                              ; preds = %272
  %276 = load i32, i32* %16, align 4
  %277 = load i32, i32* %15, align 4
  %278 = icmp sgt i32 %276, %277
  %279 = xor i1 %278, true
  %280 = xor i1 %279, true
  %281 = zext i1 %280 to i32
  %282 = sext i32 %281 to i64
  %283 = call i64 @llvm.expect.i64(i64 %282, i64 0)
  %284 = icmp ne i64 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %275
  br label %444

286:                                              ; preds = %275
  br label %287

287:                                              ; preds = %286, %272
  %288 = load %18*, %18** %17, align 8
  %289 = getelementptr inbounds %18, %18* %288, i32 1
  store %18* %289, %18** %17, align 8
  %290 = load %18*, %18** %17, align 8
  store %18* %290, %18** %18, align 8
  %291 = load %18*, %18** %18, align 8
  %292 = call i32 @147(%18* %291, i64* %7, i8* %21, i32 0, i32 0)
  %293 = icmp ne i32 %292, 0
  %294 = xor i1 %293, true
  %295 = xor i1 %294, true
  %296 = xor i1 %295, true
  %297 = zext i1 %296 to i32
  %298 = sext i32 %297 to i64
  %299 = call i64 @llvm.expect.i64(i64 %298, i64 0)
  %300 = icmp ne i64 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %287
  store i32 0, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %444

302:                                              ; preds = %287
  store i8 1, i8* %22, align 1
  %303 = load i32, i32* %16, align 4
  %304 = add nsw i32 %303, 1
  store i32 %304, i32* %16, align 4
  br label %305

305:                                              ; preds = %302
  %306 = load i32, i32* %16, align 4
  %307 = load i32, i32* %13, align 4
  %308 = icmp sle i32 %306, %307
  br i1 %308, label %313, label %309

309:                                              ; preds = %305
  %310 = load i8, i8* %22, align 1
  %311 = zext i8 %310 to i32
  %312 = icmp eq i32 %311, 1
  br label %313

313:                                              ; preds = %309, %305
  %314 = phi i1 [ true, %305 ], [ %312, %309 ]
  %315 = xor i1 %314, true
  %316 = zext i1 %315 to i32
  %317 = sext i32 %316 to i64
  %318 = call i64 @llvm.expect.i64(i64 %317, i64 0)
  %319 = icmp ne i64 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %313
  unreachable

321:                                              ; preds = %313
  br label %322

322:                                              ; preds = %321
  br label %323

323:                                              ; preds = %322
  br label %324

324:                                              ; preds = %323
  %325 = load i32, i32* %16, align 4
  %326 = load i32, i32* %13, align 4
  %327 = icmp sgt i32 %325, %326
  br i1 %327, label %332, label %328

328:                                              ; preds = %324
  %329 = load i8, i8* %22, align 1
  %330 = zext i8 %329 to i32
  %331 = icmp eq i32 %330, 0
  br label %332

332:                                              ; preds = %328, %324
  %333 = phi i1 [ true, %324 ], [ %331, %328 ]
  %334 = xor i1 %333, true
  %335 = zext i1 %334 to i32
  %336 = sext i32 %335 to i64
  %337 = call i64 @llvm.expect.i64(i64 %336, i64 0)
  %338 = icmp ne i64 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %332
  unreachable

340:                                              ; preds = %332
  br label %341

341:                                              ; preds = %340
  br label %342

342:                                              ; preds = %341
  %343 = load i8, i8* %22, align 1
  %344 = icmp ne i8 %343, 0
  br i1 %344, label %345, label %357

345:                                              ; preds = %342
  %346 = load i32, i32* %16, align 4
  %347 = load i32, i32* %15, align 4
  %348 = icmp sgt i32 %346, %347
  %349 = xor i1 %348, true
  %350 = xor i1 %349, true
  %351 = zext i1 %350 to i32
  %352 = sext i32 %351 to i64
  %353 = call i64 @llvm.expect.i64(i64 %352, i64 0)
  %354 = icmp ne i64 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %345
  br label %444

356:                                              ; preds = %345
  br label %357

357:                                              ; preds = %356, %342
  %358 = load %18*, %18** %17, align 8
  %359 = getelementptr inbounds %18, %18* %358, i32 1
  store %18* %359, %18** %17, align 8
  %360 = load %18*, %18** %17, align 8
  store %18* %360, %18** %18, align 8
  %361 = load %18*, %18** %18, align 8
  %362 = call i32 @147(%18* %361, i64* %8, i8* %9, i32 1, i32 0)
  %363 = icmp ne i32 %362, 0
  %364 = xor i1 %363, true
  %365 = xor i1 %364, true
  %366 = xor i1 %365, true
  %367 = zext i1 %366 to i32
  %368 = sext i32 %367 to i64
  %369 = call i64 @llvm.expect.i64(i64 %368, i64 0)
  %370 = icmp ne i64 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %357
  store i32 0, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %444

372:                                              ; preds = %357
  %373 = load i32, i32* %16, align 4
  %374 = add nsw i32 %373, 1
  store i32 %374, i32* %16, align 4
  br label %375

375:                                              ; preds = %372
  %376 = load i32, i32* %16, align 4
  %377 = load i32, i32* %13, align 4
  %378 = icmp sle i32 %376, %377
  br i1 %378, label %383, label %379

379:                                              ; preds = %375
  %380 = load i8, i8* %22, align 1
  %381 = zext i8 %380 to i32
  %382 = icmp eq i32 %381, 1
  br label %383

383:                                              ; preds = %379, %375
  %384 = phi i1 [ true, %375 ], [ %382, %379 ]
  %385 = xor i1 %384, true
  %386 = zext i1 %385 to i32
  %387 = sext i32 %386 to i64
  %388 = call i64 @llvm.expect.i64(i64 %387, i64 0)
  %389 = icmp ne i64 %388, 0
  br i1 %389, label %390, label %391

390:                                              ; preds = %383
  unreachable

391:                                              ; preds = %383
  br label %392

392:                                              ; preds = %391
  br label %393

393:                                              ; preds = %392
  br label %394

394:                                              ; preds = %393
  %395 = load i32, i32* %16, align 4
  %396 = load i32, i32* %13, align 4
  %397 = icmp sgt i32 %395, %396
  br i1 %397, label %402, label %398

398:                                              ; preds = %394
  %399 = load i8, i8* %22, align 1
  %400 = zext i8 %399 to i32
  %401 = icmp eq i32 %400, 0
  br label %402

402:                                              ; preds = %398, %394
  %403 = phi i1 [ true, %394 ], [ %401, %398 ]
  %404 = xor i1 %403, true
  %405 = zext i1 %404 to i32
  %406 = sext i32 %405 to i64
  %407 = call i64 @llvm.expect.i64(i64 %406, i64 0)
  %408 = icmp ne i64 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %402
  unreachable

410:                                              ; preds = %402
  br label %411

411:                                              ; preds = %410
  br label %412

412:                                              ; preds = %411
  %413 = load i8, i8* %22, align 1
  %414 = icmp ne i8 %413, 0
  br i1 %414, label %415, label %427

415:                                              ; preds = %412
  %416 = load i32, i32* %16, align 4
  %417 = load i32, i32* %15, align 4
  %418 = icmp sgt i32 %416, %417
  %419 = xor i1 %418, true
  %420 = xor i1 %419, true
  %421 = zext i1 %420 to i32
  %422 = sext i32 %421 to i64
  %423 = call i64 @llvm.expect.i64(i64 %422, i64 0)
  %424 = icmp ne i64 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %415
  br label %444

426:                                              ; preds = %415
  br label %427

427:                                              ; preds = %426, %412
  %428 = load %18*, %18** %17, align 8
  %429 = getelementptr inbounds %18, %18* %428, i32 1
  store %18* %429, %18** %17, align 8
  %430 = load %18*, %18** %17, align 8
  store %18* %430, %18** %18, align 8
  %431 = load %18*, %18** %18, align 8
  %432 = call i32 @152(%18* %431, i8* %10, i8* %21, i32 0)
  %433 = icmp ne i32 %432, 0
  %434 = xor i1 %433, true
  %435 = xor i1 %434, true
  %436 = xor i1 %435, true
  %437 = zext i1 %436 to i32
  %438 = sext i32 %437 to i64
  %439 = call i64 @llvm.expect.i64(i64 %438, i64 0)
  %440 = icmp ne i64 %439, 0
  br i1 %440, label %441, label %442

441:                                              ; preds = %427
  store i32 1, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %444

442:                                              ; preds = %427
  br label %443

443:                                              ; preds = %442
  br label %444

444:                                              ; preds = %443, %441, %425, %371, %355, %301, %285, %231, %215, %161, %145, %85
  %445 = load i32, i32* %23, align 4
  %446 = icmp ne i32 %445, 0
  %447 = xor i1 %446, true
  %448 = xor i1 %447, true
  %449 = zext i1 %448 to i32
  %450 = sext i32 %449 to i64
  %451 = call i64 @llvm.expect.i64(i64 %450, i64 0)
  %452 = icmp ne i64 %451, 0
  br i1 %452, label %453, label %482

453:                                              ; preds = %444
  %454 = load i32, i32* %23, align 4
  %455 = icmp eq i32 %454, 2
  br i1 %455, label %456, label %459

456:                                              ; preds = %453
  %457 = load i32, i32* %16, align 4
  %458 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %457, i8* %458)
  br label %475

459:                                              ; preds = %453
  %460 = load i32, i32* %23, align 4
  %461 = icmp eq i32 %460, 3
  br i1 %461, label %462, label %466

462:                                              ; preds = %459
  %463 = load i32, i32* %16, align 4
  %464 = load i8*, i8** %20, align 8
  %465 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %463, i8* %464, %18* %465)
  br label %474

466:                                              ; preds = %459
  %467 = load i32, i32* %23, align 4
  %468 = icmp eq i32 %467, 4
  br i1 %468, label %469, label %473

469:                                              ; preds = %466
  %470 = load i32, i32* %16, align 4
  %471 = load i32, i32* %19, align 4
  %472 = load %18*, %18** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %470, i32 %471, %18* %472)
  br label %473

473:                                              ; preds = %469, %466
  br label %474

474:                                              ; preds = %473, %462
  br label %475

475:                                              ; preds = %474, %456
  br label %476

476:                                              ; preds = %475
  %477 = load %18*, %18** %4, align 8
  %478 = getelementptr inbounds %18, %18* %477, i32 0, i32 1
  %479 = bitcast %20* %478 to i32*
  store i32 2, i32* %479, align 8
  br label %480

480:                                              ; preds = %476
  br label %481

481:                                              ; preds = %480
  store i32 1, i32* %24, align 4
  br label %483

482:                                              ; preds = %444
  store i32 0, i32* %24, align 4
  br label %483

483:                                              ; preds = %482, %481
  %484 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %484) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #13
  %485 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %485) #13
  %486 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %486) #13
  %487 = bitcast %18** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %487) #13
  %488 = bitcast %18** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %488) #13
  %489 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %489) #13
  %490 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %490) #13
  %491 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %491) #13
  %492 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %492) #13
  %493 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %493) #13
  %494 = load i32, i32* %24, align 4
  switch i32 %494, label %641 [
    i32 0, label %495
  ]

495:                                              ; preds = %483
  br label %496

496:                                              ; preds = %495
  br label %497

497:                                              ; preds = %496
  %498 = load i8, i8* %9, align 1
  %499 = icmp ne i8 %498, 0
  br i1 %499, label %523, label %500

500:                                              ; preds = %497
  %501 = load i64, i64* %8, align 8
  %502 = icmp sle i64 %501, 0
  br i1 %502, label %503, label %523

503:                                              ; preds = %500
  %504 = load i64, i64* %8, align 8
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %506, label %516

506:                                              ; preds = %503
  %507 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %507) #13
  %508 = load %18*, %18** %4, align 8
  store %18* %508, %18** %25, align 8
  %509 = load %18*, %18** %25, align 8
  %510 = getelementptr inbounds %18, %18* %509, i32 0, i32 0
  %511 = bitcast %19* %510 to i64*
  store i64 0, i64* %511, align 8
  %512 = load %18*, %18** %25, align 8
  %513 = getelementptr inbounds %18, %18* %512, i32 0, i32 1
  %514 = bitcast %20* %513 to i32*
  store i32 4, i32* %514, align 8
  %515 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %515) #13
  store i32 1, i32* %24, align 4
  br label %641

516:                                              ; preds = %503
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @134, i32 0, i32 0))
  br label %517

517:                                              ; preds = %516
  %518 = load %18*, %18** %4, align 8
  %519 = getelementptr inbounds %18, %18* %518, i32 0, i32 1
  %520 = bitcast %20* %519 to i32*
  store i32 2, i32* %520, align 8
  br label %521

521:                                              ; preds = %517
  br label %522

522:                                              ; preds = %521
  store i32 1, i32* %24, align 4
  br label %641

523:                                              ; preds = %500, %497
  %524 = load i64, i64* %7, align 8
  %525 = icmp slt i64 %524, 0
  br i1 %525, label %526, label %539

526:                                              ; preds = %523
  %527 = load %0*, %0** %5, align 8
  %528 = getelementptr inbounds %0, %0* %527, i32 0, i32 2
  %529 = load i64, i64* %528, align 8
  %530 = load i64, i64* %7, align 8
  %531 = add i64 %529, %530
  store i64 %531, i64* %7, align 8
  %532 = load i64, i64* %7, align 8
  %533 = icmp slt i64 %532, 0
  br i1 %533, label %534, label %535

534:                                              ; preds = %526
  br label %537

535:                                              ; preds = %526
  %536 = load i64, i64* %7, align 8
  br label %537

537:                                              ; preds = %535, %534
  %538 = phi i64 [ 0, %534 ], [ %536, %535 ]
  store i64 %538, i64* %7, align 8
  br label %539

539:                                              ; preds = %537, %523
  %540 = load i64, i64* %7, align 8
  %541 = load %0*, %0** %5, align 8
  %542 = getelementptr inbounds %0, %0* %541, i32 0, i32 2
  %543 = load i64, i64* %542, align 8
  %544 = icmp ugt i64 %540, %543
  br i1 %544, label %545, label %552

545:                                              ; preds = %539
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @135, i32 0, i32 0))
  br label %546

546:                                              ; preds = %545
  %547 = load %18*, %18** %4, align 8
  %548 = getelementptr inbounds %18, %18* %547, i32 0, i32 1
  %549 = bitcast %20* %548 to i32*
  store i32 2, i32* %549, align 8
  br label %550

550:                                              ; preds = %546
  br label %551

551:                                              ; preds = %550
  store i32 1, i32* %24, align 4
  br label %641

552:                                              ; preds = %539
  %553 = load i64, i64* %8, align 8
  %554 = icmp ne i64 %553, 0
  br i1 %554, label %555, label %557

555:                                              ; preds = %552
  %556 = load i64, i64* %8, align 8
  br label %579

557:                                              ; preds = %552
  %558 = load %0*, %0** %6, align 8
  %559 = getelementptr inbounds %0, %0* %558, i32 0, i32 2
  %560 = load i64, i64* %559, align 8
  %561 = load %0*, %0** %5, align 8
  %562 = getelementptr inbounds %0, %0* %561, i32 0, i32 2
  %563 = load i64, i64* %562, align 8
  %564 = load i64, i64* %7, align 8
  %565 = sub i64 %563, %564
  %566 = icmp ugt i64 %560, %565
  br i1 %566, label %567, label %571

567:                                              ; preds = %557
  %568 = load %0*, %0** %6, align 8
  %569 = getelementptr inbounds %0, %0* %568, i32 0, i32 2
  %570 = load i64, i64* %569, align 8
  br label %577

571:                                              ; preds = %557
  %572 = load %0*, %0** %5, align 8
  %573 = getelementptr inbounds %0, %0* %572, i32 0, i32 2
  %574 = load i64, i64* %573, align 8
  %575 = load i64, i64* %7, align 8
  %576 = sub i64 %574, %575
  br label %577

577:                                              ; preds = %571, %567
  %578 = phi i64 [ %570, %567 ], [ %576, %571 ]
  br label %579

579:                                              ; preds = %577, %555
  %580 = phi i64 [ %556, %555 ], [ %578, %577 ]
  store i64 %580, i64* %11, align 8
  %581 = load i8, i8* %10, align 1
  %582 = icmp ne i8 %581, 0
  br i1 %582, label %612, label %583

583:                                              ; preds = %579
  %584 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %584) #13
  %585 = load %18*, %18** %4, align 8
  store %18* %585, %18** %26, align 8
  %586 = load %0*, %0** %5, align 8
  %587 = getelementptr inbounds %0, %0* %586, i32 0, i32 3
  %588 = getelementptr inbounds [1 x i8], [1 x i8]* %587, i32 0, i32 0
  %589 = load i64, i64* %7, align 8
  %590 = getelementptr inbounds i8, i8* %588, i64 %589
  %591 = load %0*, %0** %5, align 8
  %592 = getelementptr inbounds %0, %0* %591, i32 0, i32 2
  %593 = load i64, i64* %592, align 8
  %594 = load i64, i64* %7, align 8
  %595 = sub i64 %593, %594
  %596 = load %0*, %0** %6, align 8
  %597 = getelementptr inbounds %0, %0* %596, i32 0, i32 3
  %598 = getelementptr inbounds [1 x i8], [1 x i8]* %597, i32 0, i32 0
  %599 = load %0*, %0** %6, align 8
  %600 = getelementptr inbounds %0, %0* %599, i32 0, i32 2
  %601 = load i64, i64* %600, align 8
  %602 = load i64, i64* %11, align 8
  %603 = call i32 @zend_binary_strncmp(i8* %590, i64 %595, i8* %598, i64 %601, i64 %602)
  %604 = sext i32 %603 to i64
  %605 = load %18*, %18** %26, align 8
  %606 = getelementptr inbounds %18, %18* %605, i32 0, i32 0
  %607 = bitcast %19* %606 to i64*
  store i64 %604, i64* %607, align 8
  %608 = load %18*, %18** %26, align 8
  %609 = getelementptr inbounds %18, %18* %608, i32 0, i32 1
  %610 = bitcast %20* %609 to i32*
  store i32 4, i32* %610, align 8
  %611 = bitcast %18** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %611) #13
  store i32 1, i32* %24, align 4
  br label %641

612:                                              ; preds = %579
  %613 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %613) #13
  %614 = load %18*, %18** %4, align 8
  store %18* %614, %18** %27, align 8
  %615 = load %0*, %0** %5, align 8
  %616 = getelementptr inbounds %0, %0* %615, i32 0, i32 3
  %617 = getelementptr inbounds [1 x i8], [1 x i8]* %616, i32 0, i32 0
  %618 = load i64, i64* %7, align 8
  %619 = getelementptr inbounds i8, i8* %617, i64 %618
  %620 = load %0*, %0** %5, align 8
  %621 = getelementptr inbounds %0, %0* %620, i32 0, i32 2
  %622 = load i64, i64* %621, align 8
  %623 = load i64, i64* %7, align 8
  %624 = sub i64 %622, %623
  %625 = load %0*, %0** %6, align 8
  %626 = getelementptr inbounds %0, %0* %625, i32 0, i32 3
  %627 = getelementptr inbounds [1 x i8], [1 x i8]* %626, i32 0, i32 0
  %628 = load %0*, %0** %6, align 8
  %629 = getelementptr inbounds %0, %0* %628, i32 0, i32 2
  %630 = load i64, i64* %629, align 8
  %631 = load i64, i64* %11, align 8
  %632 = call i32 @zend_binary_strncasecmp_l(i8* %619, i64 %624, i8* %627, i64 %630, i64 %631)
  %633 = sext i32 %632 to i64
  %634 = load %18*, %18** %27, align 8
  %635 = getelementptr inbounds %18, %18* %634, i32 0, i32 0
  %636 = bitcast %19* %635 to i64*
  store i64 %633, i64* %636, align 8
  %637 = load %18*, %18** %27, align 8
  %638 = getelementptr inbounds %18, %18* %637, i32 0, i32 1
  %639 = bitcast %20* %638 to i32*
  store i32 4, i32* %639, align 8
  %640 = bitcast %18** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %640) #13
  store i32 1, i32* %24, align 4
  br label %641

641:                                              ; preds = %612, %583, %551, %522, %506, %483
  %642 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %642) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #13
  %643 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %643) #13
  %644 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %644) #13
  %645 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %645) #13
  %646 = bitcast %0** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %646) #13
  ret void
}

declare dso_local i32 @zend_binary_strncmp(i8*, i64, i8*, i64, i64) #1

declare dso_local i32 @zend_binary_strncasecmp_l(i8*, i64, i8*, i64, i64) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_utf8_encode(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %18*, align 8
  %21 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %22 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 0, i32* %7, align 4
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 1, i32* %8, align 4
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 1, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %10, align 4
  %34 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store %18* null, %18** %13, align 8
  %37 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %14, align 4
  %38 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  %39 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %18, align 4
  %40 = load i32, i32* %11, align 4
  %41 = load %18*, %18** %12, align 8
  %42 = load %18*, %18** %13, align 8
  %43 = load i32, i32* %14, align 4
  %44 = load i8*, i8** %15, align 8
  %45 = load i8, i8* %16, align 1
  %46 = load i8, i8* %17, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %10, align 4
  %49 = load i32, i32* %8, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %10, align 4
  %59 = load i32, i32* %9, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %9, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %10, align 4
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %18, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %11, align 4
  %81 = load %14*, %14** %3, align 8
  %82 = bitcast %14* %81 to %18*
  %83 = getelementptr inbounds %18, %18* %82, i64 4
  store %18* %83, %18** %12, align 8
  %84 = load i32, i32* %11, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %11, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %11, align 4
  %88 = load i32, i32* %8, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %17, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %11, align 4
  %107 = load i32, i32* %8, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %17, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %17, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %11, align 4
  %128 = load i32, i32* %10, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %18*, %18** %12, align 8
  %140 = getelementptr inbounds %18, %18* %139, i32 1
  store %18* %140, %18** %12, align 8
  %141 = load %18*, %18** %12, align 8
  store %18* %141, %18** %13, align 8
  %142 = load %18*, %18** %13, align 8
  %143 = call i32 @151(%18* %142, i8** %5, i64* %6, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %18, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %18, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %11, align 4
  %169 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %18, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %11, align 4
  %175 = load i8*, i8** %15, align 8
  %176 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %18* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %18, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %11, align 4
  %182 = load i32, i32* %14, align 4
  %183 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %18* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %19, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %19, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %190 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #13
  %192 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = load i32, i32* %19, align 4
  switch i32 %199, label %232 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  br label %203

203:                                              ; preds = %202
  %204 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %204) #13
  %205 = load %18*, %18** %4, align 8
  store %18* %205, %18** %20, align 8
  %206 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %206) #13
  %207 = load i8*, i8** %5, align 8
  %208 = load i64, i64* %6, align 8
  %209 = call %0* @186(i8* %207, i64 %208)
  store %0* %209, %0** %21, align 8
  %210 = load %0*, %0** %21, align 8
  %211 = load %18*, %18** %20, align 8
  %212 = getelementptr inbounds %18, %18* %211, i32 0, i32 0
  %213 = bitcast %19* %212 to %0**
  store %0* %210, %0** %213, align 8
  %214 = load %0*, %0** %21, align 8
  %215 = getelementptr inbounds %0, %0* %214, i32 0, i32 0
  %216 = getelementptr inbounds %1, %1* %215, i32 0, i32 1
  %217 = bitcast %2* %216 to %52*
  %218 = getelementptr inbounds %52, %52* %217, i32 0, i32 1
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = and i32 %220, 2
  %222 = icmp ne i32 %221, 0
  %223 = zext i1 %222 to i64
  %224 = select i1 %222, i32 6, i32 5126
  %225 = load %18*, %18** %20, align 8
  %226 = getelementptr inbounds %18, %18* %225, i32 0, i32 1
  %227 = bitcast %20* %226 to i32*
  store i32 %224, i32* %227, align 8
  %228 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %228) #13
  %229 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #13
  br label %230

230:                                              ; preds = %203
  br label %231

231:                                              ; preds = %230
  store i32 1, i32* %19, align 4
  br label %232

232:                                              ; preds = %231, %188
  %233 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %233) #13
  %234 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal %0* @186(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %0*, align 8
  %7 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #13
  %9 = load i64, i64* %4, align 8
  store i64 %9, i64* %5, align 8
  %10 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #13
  %11 = load i64, i64* %4, align 8
  %12 = call %0* @153(i64 %11, i64 2, i64 0, i32 0)
  store %0* %12, %0** %6, align 8
  %13 = load %0*, %0** %6, align 8
  %14 = getelementptr inbounds %0, %0* %13, i32 0, i32 2
  store i64 0, i64* %14, align 8
  br label %15

15:                                               ; preds = %58, %2
  %16 = load i64, i64* %5, align 8
  %17 = icmp ugt i64 %16, 0
  br i1 %17, label %18, label %63

18:                                               ; preds = %15
  %19 = load i8*, i8** %3, align 8
  %20 = load i8, i8* %19, align 1
  store i8 %20, i8* %7, align 1
  %21 = load i8, i8* %7, align 1
  %22 = zext i8 %21 to i32
  %23 = icmp slt i32 %22, 128
  br i1 %23, label %24, label %33

24:                                               ; preds = %18
  %25 = load i8, i8* %7, align 1
  %26 = load %0*, %0** %6, align 8
  %27 = getelementptr inbounds %0, %0* %26, i32 0, i32 3
  %28 = load %0*, %0** %6, align 8
  %29 = getelementptr inbounds %0, %0* %28, i32 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds [1 x i8], [1 x i8]* %27, i64 0, i64 %30
  store i8 %25, i8* %32, align 1
  br label %58

33:                                               ; preds = %18
  %34 = load i8, i8* %7, align 1
  %35 = zext i8 %34 to i32
  %36 = ashr i32 %35, 6
  %37 = or i32 192, %36
  %38 = trunc i32 %37 to i8
  %39 = load %0*, %0** %6, align 8
  %40 = getelementptr inbounds %0, %0* %39, i32 0, i32 3
  %41 = load %0*, %0** %6, align 8
  %42 = getelementptr inbounds %0, %0* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds [1 x i8], [1 x i8]* %40, i64 0, i64 %43
  store i8 %38, i8* %45, align 1
  %46 = load i8, i8* %7, align 1
  %47 = zext i8 %46 to i32
  %48 = and i32 %47, 63
  %49 = or i32 128, %48
  %50 = trunc i32 %49 to i8
  %51 = load %0*, %0** %6, align 8
  %52 = getelementptr inbounds %0, %0* %51, i32 0, i32 3
  %53 = load %0*, %0** %6, align 8
  %54 = getelementptr inbounds %0, %0* %53, i32 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %54, align 8
  %57 = getelementptr inbounds [1 x i8], [1 x i8]* %52, i64 0, i64 %55
  store i8 %50, i8* %57, align 1
  br label %58

58:                                               ; preds = %33, %24
  %59 = load i64, i64* %5, align 8
  %60 = add i64 %59, -1
  store i64 %60, i64* %5, align 8
  %61 = load i8*, i8** %3, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %62, i8** %3, align 8
  br label %15

63:                                               ; preds = %15
  %64 = load %0*, %0** %6, align 8
  %65 = getelementptr inbounds %0, %0* %64, i32 0, i32 3
  %66 = load %0*, %0** %6, align 8
  %67 = getelementptr inbounds %0, %0* %66, i32 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds [1 x i8], [1 x i8]* %65, i64 0, i64 %68
  store i8 0, i8* %69, align 1
  %70 = load %0*, %0** %6, align 8
  %71 = load %0*, %0** %6, align 8
  %72 = getelementptr inbounds %0, %0* %71, i32 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = call %0* @155(%0* %70, i64 %73, i32 0)
  store %0* %74, %0** %6, align 8
  %75 = load %0*, %0** %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #13
  %76 = bitcast %0** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #13
  %77 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #13
  ret %0* %75
}

; Function Attrs: nounwind uwtable
define hidden void @zif_utf8_decode(%14* %0, %18* %1) #0 {
  %3 = alloca %14*, align 8
  %4 = alloca %18*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %18*, align 8
  %21 = alloca %0*, align 8
  store %14* %0, %14** %3, align 8
  store %18* %1, %18** %4, align 8
  %22 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #13
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #13
  store i32 0, i32* %7, align 4
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #13
  store i32 1, i32* %8, align 4
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #13
  store i32 1, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #13
  %29 = load %14*, %14** %3, align 8
  %30 = getelementptr inbounds %14, %14* %29, i32 0, i32 4
  %31 = getelementptr inbounds %18, %18* %30, i32 0, i32 2
  %32 = bitcast %21* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %10, align 4
  %34 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #13
  %35 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #13
  %36 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  store %18* null, %18** %13, align 8
  %37 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #13
  store i32 0, i32* %14, align 4
  %38 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #13
  store i8 0, i8* %17, align 1
  %39 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #13
  store i32 0, i32* %18, align 4
  %40 = load i32, i32* %11, align 4
  %41 = load %18*, %18** %12, align 8
  %42 = load %18*, %18** %13, align 8
  %43 = load i32, i32* %14, align 4
  %44 = load i8*, i8** %15, align 8
  %45 = load i8, i8* %16, align 1
  %46 = load i8, i8* %17, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %10, align 4
  %49 = load i32, i32* %8, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %10, align 4
  %59 = load i32, i32* %9, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %9, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %10, align 4
  %78 = load i32, i32* %8, align 4
  %79 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %18, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %11, align 4
  %81 = load %14*, %14** %3, align 8
  %82 = bitcast %14* %81 to %18*
  %83 = getelementptr inbounds %18, %18* %82, i64 4
  store %18* %83, %18** %12, align 8
  %84 = load i32, i32* %11, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %11, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %11, align 4
  %88 = load i32, i32* %8, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %17, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %11, align 4
  %107 = load i32, i32* %8, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %17, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %17, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %11, align 4
  %128 = load i32, i32* %10, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %18*, %18** %12, align 8
  %140 = getelementptr inbounds %18, %18* %139, i32 1
  store %18* %140, %18** %12, align 8
  %141 = load %18*, %18** %12, align 8
  store %18* %141, %18** %13, align 8
  %142 = load %18*, %18** %13, align 8
  %143 = call i32 @151(%18* %142, i8** %5, i64* %6, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 2, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %18, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %187

164:                                              ; preds = %155
  %165 = load i32, i32* %18, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %11, align 4
  %169 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %18, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %11, align 4
  %175 = load i8*, i8** %15, align 8
  %176 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %18* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %18, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %11, align 4
  %182 = load i32, i32* %14, align 4
  %183 = load %18*, %18** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %18* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  store i32 1, i32* %19, align 4
  br label %188

187:                                              ; preds = %155
  store i32 0, i32* %19, align 4
  br label %188

188:                                              ; preds = %187, %186
  %189 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #13
  %190 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #13
  %191 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #13
  %192 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #13
  %193 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #13
  %194 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #13
  %195 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #13
  %196 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #13
  %197 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #13
  %198 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #13
  %199 = load i32, i32* %19, align 4
  switch i32 %199, label %232 [
    i32 0, label %200
  ]

200:                                              ; preds = %188
  br label %201

201:                                              ; preds = %200
  br label %202

202:                                              ; preds = %201
  br label %203

203:                                              ; preds = %202
  %204 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %204) #13
  %205 = load %18*, %18** %4, align 8
  store %18* %205, %18** %20, align 8
  %206 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %206) #13
  %207 = load i8*, i8** %5, align 8
  %208 = load i64, i64* %6, align 8
  %209 = call %0* @187(i8* %207, i64 %208)
  store %0* %209, %0** %21, align 8
  %210 = load %0*, %0** %21, align 8
  %211 = load %18*, %18** %20, align 8
  %212 = getelementptr inbounds %18, %18* %211, i32 0, i32 0
  %213 = bitcast %19* %212 to %0**
  store %0* %210, %0** %213, align 8
  %214 = load %0*, %0** %21, align 8
  %215 = getelementptr inbounds %0, %0* %214, i32 0, i32 0
  %216 = getelementptr inbounds %1, %1* %215, i32 0, i32 1
  %217 = bitcast %2* %216 to %52*
  %218 = getelementptr inbounds %52, %52* %217, i32 0, i32 1
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = and i32 %220, 2
  %222 = icmp ne i32 %221, 0
  %223 = zext i1 %222 to i64
  %224 = select i1 %222, i32 6, i32 5126
  %225 = load %18*, %18** %20, align 8
  %226 = getelementptr inbounds %18, %18* %225, i32 0, i32 1
  %227 = bitcast %20* %226 to i32*
  store i32 %224, i32* %227, align 8
  %228 = bitcast %0** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %228) #13
  %229 = bitcast %18** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #13
  br label %230

230:                                              ; preds = %203
  br label %231

231:                                              ; preds = %230
  store i32 1, i32* %19, align 4
  br label %232

232:                                              ; preds = %231, %188
  %233 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %233) #13
  %234 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal %0* @187(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %0*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #13
  store i64 0, i64* %5, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #13
  %11 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #13
  %12 = load i64, i64* %4, align 8
  %13 = call %0* @162(i64 %12, i32 0)
  store %0* %13, %0** %7, align 8
  %14 = load %0*, %0** %7, align 8
  %15 = getelementptr inbounds %0, %0* %14, i32 0, i32 2
  store i64 0, i64* %15, align 8
  br label %16

16:                                               ; preds = %31, %2
  %17 = load i64, i64* %5, align 8
  %18 = load i64, i64* %4, align 8
  %19 = icmp ult i64 %17, %18
  br i1 %19, label %20, label %42

20:                                               ; preds = %16
  %21 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #13
  store i32 -1, i32* %8, align 4
  %22 = load i8*, i8** %3, align 8
  %23 = load i64, i64* %4, align 8
  %24 = call i32 @php_next_utf8_char(i8* %22, i64 %23, i64* %5, i32* %8)
  store i32 %24, i32* %6, align 4
  %25 = load i32, i32* %8, align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = load i32, i32* %6, align 4
  %29 = icmp ugt i32 %28, 255
  br i1 %29, label %30, label %31

30:                                               ; preds = %27, %20
  store i32 63, i32* %6, align 4
  br label %31

31:                                               ; preds = %30, %27
  %32 = load i32, i32* %6, align 4
  %33 = trunc i32 %32 to i8
  %34 = load %0*, %0** %7, align 8
  %35 = getelementptr inbounds %0, %0* %34, i32 0, i32 3
  %36 = load %0*, %0** %7, align 8
  %37 = getelementptr inbounds %0, %0* %36, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %37, align 8
  %40 = getelementptr inbounds [1 x i8], [1 x i8]* %35, i64 0, i64 %38
  store i8 %33, i8* %40, align 1
  %41 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %41) #13
  br label %16

42:                                               ; preds = %16
  %43 = load %0*, %0** %7, align 8
  %44 = getelementptr inbounds %0, %0* %43, i32 0, i32 3
  %45 = load %0*, %0** %7, align 8
  %46 = getelementptr inbounds %0, %0* %45, i32 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds [1 x i8], [1 x i8]* %44, i64 0, i64 %47
  store i8 0, i8* %48, align 1
  %49 = load %0*, %0** %7, align 8
  %50 = getelementptr inbounds %0, %0* %49, i32 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = load i64, i64* %4, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %54, label %60

54:                                               ; preds = %42
  %55 = load %0*, %0** %7, align 8
  %56 = load %0*, %0** %7, align 8
  %57 = getelementptr inbounds %0, %0* %56, i32 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = call %0* @155(%0* %55, i64 %58, i32 0)
  store %0* %59, %0** %7, align 8
  br label %60

60:                                               ; preds = %54, %42
  %61 = load %0*, %0** %7, align 8
  %62 = bitcast %0** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #13
  %63 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #13
  %64 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #13
  ret %0* %61
}

declare dso_local i32 @zend_parse_arg_str_slow(%18*, %0**) #1

declare dso_local i32 @zend_parse_arg_long_cap_slow(%18*, i64*) #1

declare dso_local i32 @zend_parse_arg_long_slow(%18*, i64*) #1

declare dso_local i32 @zend_parse_arg_bool_slow(%18*, i8*) #1

declare dso_local noalias i8* @_safe_malloc(i64, i64, i64) #1

declare dso_local noalias i8* @_safe_emalloc(i64, i64, i64) #1

; Function Attrs: allocsize(1)
declare dso_local i8* @__zend_realloc(i8*, i64) #8

declare dso_local i8* @zend_memnstr_ex(i8*, i8*, i64, i8*) #1

declare dso_local %0* @_zval_get_string_func(%18*) #1

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @188(i8* %0, i64 %1) #5 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i8*, i8** %3, align 8
  store i8 0, i8* %5, align 1
  br label %6

6:                                                ; preds = %17, %2
  %7 = load i64, i64* %4, align 8
  %8 = urem i64 %7, 10
  %9 = trunc i64 %8 to i8
  %10 = sext i8 %9 to i32
  %11 = add nsw i32 %10, 48
  %12 = trunc i32 %11 to i8
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds i8, i8* %13, i32 -1
  store i8* %14, i8** %3, align 8
  store i8 %12, i8* %14, align 1
  %15 = load i64, i64* %4, align 8
  %16 = udiv i64 %15, 10
  store i64 %16, i64* %4, align 8
  br label %17

17:                                               ; preds = %6
  %18 = load i64, i64* %4, align 8
  %19 = icmp ugt i64 %18, 0
  br i1 %19, label %6, label %20

20:                                               ; preds = %17
  %21 = load i8*, i8** %3, align 8
  ret i8* %21
}

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @__zend_malloc(i64) #7

declare dso_local i8* @zend_memnrstr_ex(i8*, i8*, i64, i8*) #1

declare dso_local i64 @_zval_get_long_func(%18*) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @189(i8* %0, i64 %1, i64* %2) #5 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  %10 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load i8*, i8** %5, align 8
  store i8* %11, i8** %8, align 8
  %12 = load i8*, i8** %8, align 8
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = icmp sgt i32 %14, 57
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %48

17:                                               ; preds = %3
  %18 = load i8*, i8** %8, align 8
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp slt i32 %20, 48
  br i1 %21, label %22, label %42

22:                                               ; preds = %17
  %23 = load i8*, i8** %8, align 8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp ne i32 %25, 45
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %48

28:                                               ; preds = %22
  %29 = load i8*, i8** %8, align 8
  %30 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %30, i8** %8, align 8
  %31 = load i8*, i8** %8, align 8
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp sgt i32 %33, 57
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = load i8*, i8** %8, align 8
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp slt i32 %38, 48
  br i1 %39, label %40, label %41

40:                                               ; preds = %35, %28
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %48

41:                                               ; preds = %35
  br label %42

42:                                               ; preds = %41, %17
  br label %43

43:                                               ; preds = %42
  %44 = load i8*, i8** %5, align 8
  %45 = load i64, i64* %6, align 8
  %46 = load i64*, i64** %7, align 8
  %47 = call i32 @_zend_handle_numeric_str_ex(i8* %44, i64 %45, i64* %46)
  store i32 %47, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %48

48:                                               ; preds = %43, %40, %27, %16
  %49 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #13
  %50 = load i32, i32* %4, align 4
  ret i32 %50
}

declare dso_local %18* @_zend_hash_index_update(%43*, i64, %18*) #1

declare dso_local %18* @_zend_hash_update(%43*, %0*, %18*) #1

declare dso_local i32 @_zend_handle_numeric_str_ex(i8*, i64, i64*) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @190(%18* %0) #5 {
  %2 = alloca %18*, align 8
  store %18* %0, %18** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %18*, %18** %2, align 8
  %5 = getelementptr inbounds %18, %18* %4, i32 0, i32 1
  %6 = bitcast %20* %5 to %53*
  %7 = getelementptr inbounds %53, %53* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  unreachable

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18
  %20 = load %18*, %18** %2, align 8
  %21 = getelementptr inbounds %18, %18* %20, i32 0, i32 0
  %22 = bitcast %19* %21 to %54**
  %23 = load %54*, %54** %22, align 8
  %24 = getelementptr inbounds %54, %54* %23, i32 0, i32 0
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %25, align 4
  ret i32 %27
}

declare dso_local void @_zval_dtor_func(%54*) #1

; Function Attrs: allocsize(0,1)
declare dso_local noalias i8* @_ecalloc(i64, i64) #12

declare dso_local void @_zend_hash_init(%43*, i32, void (%18*)*, i8 zeroext) #1

declare dso_local %0* @zend_long_to_str(i64) #1

declare dso_local %18* @_zend_hash_add(%43*, %0*, %18*) #1

declare dso_local void @zend_hash_destroy(%43*) #1

declare dso_local %18* @zend_hash_str_find(%43*, i8*, i64) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal void @191(%42* %0, i8* %1, i64 %2, i8 zeroext %3) #5 {
  %5 = alloca %42*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  store %42* %0, %42** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8 %3, i8* %8, align 1
  %10 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #13
  %11 = load %42*, %42** %5, align 8
  %12 = load i64, i64* %7, align 8
  %13 = load i8, i8* %8, align 1
  %14 = call i64 @195(%42* %11, i64 %12, i8 zeroext %13)
  store i64 %14, i64* %9, align 8
  %15 = load %42*, %42** %5, align 8
  %16 = getelementptr inbounds %42, %42* %15, i32 0, i32 0
  %17 = load %0*, %0** %16, align 8
  %18 = getelementptr inbounds %0, %0* %17, i32 0, i32 3
  %19 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i32 0, i32 0
  %20 = load %42*, %42** %5, align 8
  %21 = getelementptr inbounds %42, %42* %20, i32 0, i32 0
  %22 = load %0*, %0** %21, align 8
  %23 = getelementptr inbounds %0, %0* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %19, i64 %24
  %26 = load i8*, i8** %6, align 8
  %27 = load i64, i64* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %27, i1 false)
  %28 = load i64, i64* %9, align 8
  %29 = load %42*, %42** %5, align 8
  %30 = getelementptr inbounds %42, %42* %29, i32 0, i32 0
  %31 = load %0*, %0** %30, align 8
  %32 = getelementptr inbounds %0, %0* %31, i32 0, i32 2
  store i64 %28, i64* %32, align 8
  %33 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #13
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @192(%42* %0, %0* %1, i8 zeroext %2) #5 {
  %4 = alloca %42*, align 8
  %5 = alloca %0*, align 8
  %6 = alloca i8, align 1
  store %42* %0, %42** %4, align 8
  store %0* %1, %0** %5, align 8
  store i8 %2, i8* %6, align 1
  %7 = load %42*, %42** %4, align 8
  %8 = load %0*, %0** %5, align 8
  %9 = getelementptr inbounds %0, %0* %8, i32 0, i32 3
  %10 = getelementptr inbounds [1 x i8], [1 x i8]* %9, i32 0, i32 0
  %11 = load %0*, %0** %5, align 8
  %12 = getelementptr inbounds %0, %0* %11, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = load i8, i8* %6, align 1
  call void @191(%42* %7, i8* %10, i64 %13, i8 zeroext %14)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @193(%42* %0) #5 {
  %2 = alloca %42*, align 8
  store %42* %0, %42** %2, align 8
  %3 = load %42*, %42** %2, align 8
  %4 = getelementptr inbounds %42, %42* %3, i32 0, i32 0
  %5 = load %0*, %0** %4, align 8
  %6 = icmp ne %0* %5, null
  br i1 %6, label %7, label %18

7:                                                ; preds = %1
  %8 = load %42*, %42** %2, align 8
  %9 = getelementptr inbounds %42, %42* %8, i32 0, i32 0
  %10 = load %0*, %0** %9, align 8
  %11 = getelementptr inbounds %0, %0* %10, i32 0, i32 3
  %12 = load %42*, %42** %2, align 8
  %13 = getelementptr inbounds %42, %42* %12, i32 0, i32 0
  %14 = load %0*, %0** %13, align 8
  %15 = getelementptr inbounds %0, %0* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds [1 x i8], [1 x i8]* %11, i64 0, i64 %16
  store i8 0, i8* %17, align 1
  br label %18

18:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @194(%42* %0) #5 {
  %2 = alloca %42*, align 8
  store %42* %0, %42** %2, align 8
  %3 = load %42*, %42** %2, align 8
  %4 = getelementptr inbounds %42, %42* %3, i32 0, i32 0
  %5 = load %0*, %0** %4, align 8
  %6 = icmp ne %0* %5, null
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load %42*, %42** %2, align 8
  %9 = getelementptr inbounds %42, %42* %8, i32 0, i32 0
  %10 = load %0*, %0** %9, align 8
  call void @159(%0* %10)
  %11 = load %42*, %42** %2, align 8
  %12 = getelementptr inbounds %42, %42* %11, i32 0, i32 0
  store %0* null, %0** %12, align 8
  br label %13

13:                                               ; preds = %7, %1
  %14 = load %42*, %42** %2, align 8
  %15 = getelementptr inbounds %42, %42* %14, i32 0, i32 1
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @195(%42* %0, i64 %1, i8 zeroext %2) #5 {
  %4 = alloca %42*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  store %42* %0, %42** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8 %2, i8* %6, align 1
  %7 = load %42*, %42** %4, align 8
  %8 = getelementptr inbounds %42, %42* %7, i32 0, i32 0
  %9 = load %0*, %0** %8, align 8
  %10 = icmp ne %0* %9, null
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = call i64 @llvm.expect.i64(i64 %15, i64 0)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %3
  br label %39

19:                                               ; preds = %3
  %20 = load %42*, %42** %4, align 8
  %21 = getelementptr inbounds %42, %42* %20, i32 0, i32 0
  %22 = load %0*, %0** %21, align 8
  %23 = getelementptr inbounds %0, %0* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %5, align 8
  %26 = add i64 %25, %24
  store i64 %26, i64* %5, align 8
  %27 = load i64, i64* %5, align 8
  %28 = load %42*, %42** %4, align 8
  %29 = getelementptr inbounds %42, %42* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp uge i64 %27, %30
  %32 = xor i1 %31, true
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = sext i32 %34 to i64
  %36 = call i64 @llvm.expect.i64(i64 %35, i64 0)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %19
  br label %39

39:                                               ; preds = %38, %18
  %40 = load i8, i8* %6, align 1
  %41 = icmp ne i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = load %42*, %42** %4, align 8
  %44 = load i64, i64* %5, align 8
  call void @smart_str_realloc(%42* %43, i64 %44)
  br label %48

45:                                               ; preds = %39
  %46 = load %42*, %42** %4, align 8
  %47 = load i64, i64* %5, align 8
  call void @smart_str_erealloc(%42* %46, i64 %47)
  br label %48

48:                                               ; preds = %45, %42
  br label %49

49:                                               ; preds = %48, %19
  br label %50

50:                                               ; preds = %49
  %51 = load i64, i64* %5, align 8
  ret i64 %51
}

declare dso_local void @smart_str_realloc(%42*, i64) #1

declare dso_local void @smart_str_erealloc(%42*, i64) #1

; Function Attrs: nounwind uwtable
define internal void @196(i8* %0, i64 %1, i8* %2, i64 %3, i64* %4, i64* %5, i64* %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i64*, align 8
  %14 = alloca i64*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i64, align 8
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  store i64 %3, i64* %11, align 8
  store i64* %4, i64** %12, align 8
  store i64* %5, i64** %13, align 8
  store i64* %6, i64** %14, align 8
  %20 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #13
  %21 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #13
  %22 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #13
  %23 = load i8*, i8** %8, align 8
  %24 = load i64, i64* %9, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  store i8* %25, i8** %17, align 8
  %26 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  %27 = load i8*, i8** %10, align 8
  %28 = load i64, i64* %11, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %18, align 8
  %30 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #13
  %31 = load i64*, i64** %14, align 8
  store i64 0, i64* %31, align 8
  %32 = load i8*, i8** %8, align 8
  store i8* %32, i8** %15, align 8
  br label %33

33:                                               ; preds = %99, %7
  %34 = load i8*, i8** %15, align 8
  %35 = load i8*, i8** %17, align 8
  %36 = icmp ult i8* %34, %35
  br i1 %36, label %37, label %102

37:                                               ; preds = %33
  %38 = load i8*, i8** %10, align 8
  store i8* %38, i8** %16, align 8
  br label %39

39:                                               ; preds = %95, %37
  %40 = load i8*, i8** %16, align 8
  %41 = load i8*, i8** %18, align 8
  %42 = icmp ult i8* %40, %41
  br i1 %42, label %43, label %98

43:                                               ; preds = %39
  store i64 0, i64* %19, align 8
  br label %44

44:                                               ; preds = %71, %43
  %45 = load i8*, i8** %15, align 8
  %46 = load i64, i64* %19, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = load i8*, i8** %17, align 8
  %49 = icmp ult i8* %47, %48
  br i1 %49, label %50, label %68

50:                                               ; preds = %44
  %51 = load i8*, i8** %16, align 8
  %52 = load i64, i64* %19, align 8
  %53 = getelementptr inbounds i8, i8* %51, i64 %52
  %54 = load i8*, i8** %18, align 8
  %55 = icmp ult i8* %53, %54
  br i1 %55, label %56, label %68

56:                                               ; preds = %50
  %57 = load i8*, i8** %15, align 8
  %58 = load i64, i64* %19, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = load i8*, i8** %16, align 8
  %63 = load i64, i64* %19, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %61, %66
  br label %68

68:                                               ; preds = %56, %50, %44
  %69 = phi i1 [ false, %50 ], [ false, %44 ], [ %67, %56 ]
  br i1 %69, label %70, label %74

70:                                               ; preds = %68
  br label %71

71:                                               ; preds = %70
  %72 = load i64, i64* %19, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %19, align 8
  br label %44

74:                                               ; preds = %68
  %75 = load i64, i64* %19, align 8
  %76 = load i64*, i64** %14, align 8
  %77 = load i64, i64* %76, align 8
  %78 = icmp ugt i64 %75, %77
  br i1 %78, label %79, label %94

79:                                               ; preds = %74
  %80 = load i64, i64* %19, align 8
  %81 = load i64*, i64** %14, align 8
  store i64 %80, i64* %81, align 8
  %82 = load i8*, i8** %15, align 8
  %83 = load i8*, i8** %8, align 8
  %84 = ptrtoint i8* %82 to i64
  %85 = ptrtoint i8* %83 to i64
  %86 = sub i64 %84, %85
  %87 = load i64*, i64** %12, align 8
  store i64 %86, i64* %87, align 8
  %88 = load i8*, i8** %16, align 8
  %89 = load i8*, i8** %10, align 8
  %90 = ptrtoint i8* %88 to i64
  %91 = ptrtoint i8* %89 to i64
  %92 = sub i64 %90, %91
  %93 = load i64*, i64** %13, align 8
  store i64 %92, i64* %93, align 8
  br label %94

94:                                               ; preds = %79, %74
  br label %95

95:                                               ; preds = %94
  %96 = load i8*, i8** %16, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %16, align 8
  br label %39

98:                                               ; preds = %39
  br label %99

99:                                               ; preds = %98
  %100 = load i8*, i8** %15, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %15, align 8
  br label %33

102:                                              ; preds = %33
  %103 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #13
  %104 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #13
  %105 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #13
  %106 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %106) #13
  %107 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #13
  ret void
}

; Function Attrs: nounwind uwtable
define internal i64 @197(%18* %0, %18* %1, %18* %2, %18* %3, i32 %4) #0 {
  %6 = alloca i64, align 8
  %7 = alloca %18*, align 8
  %8 = alloca %18*, align 8
  %9 = alloca %18*, align 8
  %10 = alloca %18*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %18*, align 8
  %13 = alloca %18*, align 8
  %14 = alloca %0*, align 8
  %15 = alloca %0*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca %0*, align 8
  %20 = alloca %0*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %18*, align 8
  %23 = alloca %0*, align 8
  %24 = alloca i32, align 4
  %25 = alloca %18*, align 8
  %26 = alloca %0*, align 8
  %27 = alloca %43*, align 8
  %28 = alloca %45*, align 8
  %29 = alloca %45*, align 8
  %30 = alloca %18*, align 8
  %31 = alloca %0*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca %18*, align 8
  %35 = alloca %0*, align 8
  %36 = alloca %18*, align 8
  %37 = alloca %0*, align 8
  %38 = alloca %18*, align 8
  %39 = alloca %0*, align 8
  %40 = alloca %18*, align 8
  %41 = alloca %0*, align 8
  %42 = alloca %18*, align 8
  %43 = alloca %0*, align 8
  store %18* %0, %18** %7, align 8
  store %18* %1, %18** %8, align 8
  store %18* %2, %18** %9, align 8
  store %18* %3, %18** %10, align 8
  store i32 %4, i32* %11, align 4
  %44 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #13
  %45 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #13
  store %18* null, %18** %13, align 8
  %46 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #13
  %47 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #13
  store %0* null, %0** %15, align 8
  %48 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #13
  store i8* null, i8** %16, align 8
  %49 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #13
  store i64 0, i64* %17, align 8
  %50 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #13
  store i64 0, i64* %18, align 8
  %51 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #13
  %52 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #13
  store %0* null, %0** %20, align 8
  %53 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #13
  %54 = load %18*, %18** %9, align 8
  %55 = call %0* @158(%18* %54)
  store %0* %55, %0** %19, align 8
  %56 = load %0*, %0** %19, align 8
  %57 = getelementptr inbounds %0, %0* %56, i32 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %81

60:                                               ; preds = %5
  %61 = load %0*, %0** %19, align 8
  call void @159(%0* %61)
  br label %62

62:                                               ; preds = %60
  br label %63

63:                                               ; preds = %62
  %64 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #13
  %65 = load %18*, %18** %10, align 8
  store %18* %65, %18** %22, align 8
  %66 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %66) #13
  %67 = load %0*, %0** @zend_empty_string, align 8
  store %0* %67, %0** %23, align 8
  %68 = load %0*, %0** %23, align 8
  %69 = load %18*, %18** %22, align 8
  %70 = getelementptr inbounds %18, %18* %69, i32 0, i32 0
  %71 = bitcast %19* %70 to %0**
  store %0* %68, %0** %71, align 8
  %72 = load %18*, %18** %22, align 8
  %73 = getelementptr inbounds %18, %18* %72, i32 0, i32 1
  %74 = bitcast %20* %73 to i32*
  store i32 6, i32* %74, align 8
  %75 = bitcast %0** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #13
  %76 = bitcast %18** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #13
  br label %77

77:                                               ; preds = %63
  br label %78

78:                                               ; preds = %77
  br label %79

79:                                               ; preds = %78
  br label %80

80:                                               ; preds = %79
  store i64 0, i64* %6, align 8
  store i32 1, i32* %24, align 4
  br label %645

81:                                               ; preds = %5
  %82 = load %18*, %18** %7, align 8
  %83 = call zeroext i8 @157(%18* %82)
  %84 = zext i8 %83 to i32
  %85 = icmp eq i32 %84, 7
  br i1 %85, label %86, label %416

86:                                               ; preds = %81
  br label %87

87:                                               ; preds = %86
  %88 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %88) #13
  %89 = load %18*, %18** %10, align 8
  store %18* %89, %18** %25, align 8
  %90 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %90) #13
  %91 = load %0*, %0** %19, align 8
  store %0* %91, %0** %26, align 8
  %92 = load %0*, %0** %26, align 8
  %93 = load %18*, %18** %25, align 8
  %94 = getelementptr inbounds %18, %18* %93, i32 0, i32 0
  %95 = bitcast %19* %94 to %0**
  store %0* %92, %0** %95, align 8
  %96 = load %0*, %0** %26, align 8
  %97 = getelementptr inbounds %0, %0* %96, i32 0, i32 0
  %98 = getelementptr inbounds %1, %1* %97, i32 0, i32 1
  %99 = bitcast %2* %98 to %52*
  %100 = getelementptr inbounds %52, %52* %99, i32 0, i32 1
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = and i32 %102, 2
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %87
  %106 = load %18*, %18** %25, align 8
  %107 = getelementptr inbounds %18, %18* %106, i32 0, i32 1
  %108 = bitcast %20* %107 to i32*
  store i32 6, i32* %108, align 8
  br label %118

109:                                              ; preds = %87
  %110 = load %0*, %0** %26, align 8
  %111 = getelementptr inbounds %0, %0* %110, i32 0, i32 0
  %112 = getelementptr inbounds %1, %1* %111, i32 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, 1
  store i32 %114, i32* %112, align 8
  %115 = load %18*, %18** %25, align 8
  %116 = getelementptr inbounds %18, %18* %115, i32 0, i32 1
  %117 = bitcast %20* %116 to i32*
  store i32 5126, i32* %117, align 8
  br label %118

118:                                              ; preds = %109, %105
  %119 = bitcast %0** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %119) #13
  %120 = bitcast %18** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %120) #13
  br label %121

121:                                              ; preds = %118
  br label %122

122:                                              ; preds = %121
  %123 = load %18*, %18** %8, align 8
  %124 = call zeroext i8 @157(%18* %123)
  %125 = zext i8 %124 to i32
  %126 = icmp eq i32 %125, 7
  br i1 %126, label %127, label %128

127:                                              ; preds = %122
  store i32 0, i32* %21, align 4
  br label %141

128:                                              ; preds = %122
  %129 = load %18*, %18** %8, align 8
  %130 = getelementptr inbounds %18, %18* %129, i32 0, i32 0
  %131 = bitcast %19* %130 to %0**
  %132 = load %0*, %0** %131, align 8
  %133 = getelementptr inbounds %0, %0* %132, i32 0, i32 3
  %134 = getelementptr inbounds [1 x i8], [1 x i8]* %133, i32 0, i32 0
  store i8* %134, i8** %16, align 8
  %135 = load %18*, %18** %8, align 8
  %136 = getelementptr inbounds %18, %18* %135, i32 0, i32 0
  %137 = bitcast %19* %136 to %0**
  %138 = load %0*, %0** %137, align 8
  %139 = getelementptr inbounds %0, %0* %138, i32 0, i32 2
  %140 = load i64, i64* %139, align 8
  store i64 %140, i64* %17, align 8
  br label %141

141:                                              ; preds = %128, %127
  br label %142

142:                                              ; preds = %141
  %143 = bitcast %43** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %143) #13
  %144 = load %18*, %18** %7, align 8
  %145 = getelementptr inbounds %18, %18* %144, i32 0, i32 0
  %146 = bitcast %19* %145 to %43**
  %147 = load %43*, %43** %146, align 8
  store %43* %147, %43** %27, align 8
  %148 = bitcast %45** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %148) #13
  %149 = load %43*, %43** %27, align 8
  %150 = getelementptr inbounds %43, %43* %149, i32 0, i32 3
  %151 = load %45*, %45** %150, align 8
  store %45* %151, %45** %28, align 8
  %152 = bitcast %45** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %152) #13
  %153 = load %45*, %45** %28, align 8
  %154 = load %43*, %43** %27, align 8
  %155 = getelementptr inbounds %43, %43* %154, i32 0, i32 4
  %156 = load i32, i32* %155, align 8
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %45, %45* %153, i64 %157
  store %45* %158, %45** %29, align 8
  br label %159

159:                                              ; preds = %399, %142
  %160 = load %45*, %45** %28, align 8
  %161 = load %45*, %45** %29, align 8
  %162 = icmp ne %45* %160, %161
  br i1 %162, label %163, label %402

163:                                              ; preds = %159
  %164 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %164) #13
  %165 = load %45*, %45** %28, align 8
  %166 = getelementptr inbounds %45, %45* %165, i32 0, i32 0
  store %18* %166, %18** %30, align 8
  %167 = load %18*, %18** %30, align 8
  %168 = call zeroext i8 @157(%18* %167)
  %169 = zext i8 %168 to i32
  %170 = icmp eq i32 %169, 0
  %171 = xor i1 %170, true
  %172 = xor i1 %171, true
  %173 = zext i1 %172 to i32
  %174 = sext i32 %173 to i64
  %175 = call i64 @llvm.expect.i64(i64 %174, i64 0)
  %176 = icmp ne i64 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %163
  store i32 12, i32* %24, align 4
  br label %395

178:                                              ; preds = %163
  %179 = load %18*, %18** %30, align 8
  store %18* %179, %18** %12, align 8
  %180 = bitcast %0** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %180) #13
  %181 = load %18*, %18** %12, align 8
  %182 = call %0* @158(%18* %181)
  store %0* %182, %0** %31, align 8
  %183 = load %0*, %0** %31, align 8
  %184 = getelementptr inbounds %0, %0* %183, i32 0, i32 2
  %185 = load i64, i64* %184, align 8
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %197

187:                                              ; preds = %178
  %188 = load %18*, %18** %8, align 8
  %189 = call zeroext i8 @157(%18* %188)
  %190 = zext i8 %189 to i32
  %191 = icmp eq i32 %190, 7
  br i1 %191, label %192, label %195

192:                                              ; preds = %187
  %193 = load i32, i32* %21, align 4
  %194 = add i32 %193, 1
  store i32 %194, i32* %21, align 4
  br label %195

195:                                              ; preds = %192, %187
  %196 = load %0*, %0** %31, align 8
  call void @159(%0* %196)
  store i32 12, i32* %24, align 4
  br label %391

197:                                              ; preds = %178
  %198 = load %18*, %18** %8, align 8
  %199 = call zeroext i8 @157(%18* %198)
  %200 = zext i8 %199 to i32
  %201 = icmp eq i32 %200, 7
  br i1 %201, label %202, label %253

202:                                              ; preds = %197
  br label %203

203:                                              ; preds = %228, %202
  %204 = load i32, i32* %21, align 4
  %205 = load %18*, %18** %8, align 8
  %206 = getelementptr inbounds %18, %18* %205, i32 0, i32 0
  %207 = bitcast %19* %206 to %43**
  %208 = load %43*, %43** %207, align 8
  %209 = getelementptr inbounds %43, %43* %208, i32 0, i32 4
  %210 = load i32, i32* %209, align 8
  %211 = icmp ult i32 %204, %210
  br i1 %211, label %212, label %231

212:                                              ; preds = %203
  %213 = load %18*, %18** %8, align 8
  %214 = getelementptr inbounds %18, %18* %213, i32 0, i32 0
  %215 = bitcast %19* %214 to %43**
  %216 = load %43*, %43** %215, align 8
  %217 = getelementptr inbounds %43, %43* %216, i32 0, i32 3
  %218 = load %45*, %45** %217, align 8
  %219 = load i32, i32* %21, align 4
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds %45, %45* %218, i64 %220
  %222 = getelementptr inbounds %45, %45* %221, i32 0, i32 0
  store %18* %222, %18** %13, align 8
  %223 = load %18*, %18** %13, align 8
  %224 = call zeroext i8 @157(%18* %223)
  %225 = zext i8 %224 to i32
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %212
  br label %231

228:                                              ; preds = %212
  %229 = load i32, i32* %21, align 4
  %230 = add i32 %229, 1
  store i32 %230, i32* %21, align 4
  br label %203

231:                                              ; preds = %227, %203
  %232 = load i32, i32* %21, align 4
  %233 = load %18*, %18** %8, align 8
  %234 = getelementptr inbounds %18, %18* %233, i32 0, i32 0
  %235 = bitcast %19* %234 to %43**
  %236 = load %43*, %43** %235, align 8
  %237 = getelementptr inbounds %43, %43* %236, i32 0, i32 4
  %238 = load i32, i32* %237, align 8
  %239 = icmp ult i32 %232, %238
  br i1 %239, label %240, label %251

240:                                              ; preds = %231
  %241 = load %18*, %18** %13, align 8
  %242 = call %0* @158(%18* %241)
  store %0* %242, %0** %15, align 8
  %243 = load %0*, %0** %15, align 8
  %244 = getelementptr inbounds %0, %0* %243, i32 0, i32 3
  %245 = getelementptr inbounds [1 x i8], [1 x i8]* %244, i32 0, i32 0
  store i8* %245, i8** %16, align 8
  %246 = load %0*, %0** %15, align 8
  %247 = getelementptr inbounds %0, %0* %246, i32 0, i32 2
  %248 = load i64, i64* %247, align 8
  store i64 %248, i64* %17, align 8
  %249 = load i32, i32* %21, align 4
  %250 = add i32 %249, 1
  store i32 %250, i32* %21, align 4
  br label %252

251:                                              ; preds = %231
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @103, i32 0, i32 0), i8** %16, align 8
  store i64 0, i64* %17, align 8
  br label %252

252:                                              ; preds = %251, %240
  br label %253

253:                                              ; preds = %252, %197
  %254 = load %0*, %0** %31, align 8
  %255 = getelementptr inbounds %0, %0* %254, i32 0, i32 2
  %256 = load i64, i64* %255, align 8
  %257 = icmp eq i64 %256, 1
  br i1 %257, label %258, label %283

258:                                              ; preds = %253
  %259 = bitcast i64* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %259) #13
  %260 = load i64, i64* %18, align 8
  store i64 %260, i64* %32, align 8
  %261 = load %18*, %18** %10, align 8
  %262 = getelementptr inbounds %18, %18* %261, i32 0, i32 0
  %263 = bitcast %19* %262 to %0**
  %264 = load %0*, %0** %263, align 8
  %265 = load %0*, %0** %31, align 8
  %266 = getelementptr inbounds %0, %0* %265, i32 0, i32 3
  %267 = getelementptr inbounds [1 x i8], [1 x i8]* %266, i64 0, i64 0
  %268 = load i8, i8* %267, align 8
  %269 = load i8*, i8** %16, align 8
  %270 = load i64, i64* %17, align 8
  %271 = load i32, i32* %11, align 4
  %272 = call %0* @175(%0* %264, i8 signext %268, i8* %269, i64 %270, i32 %271, i64* %18)
  store %0* %272, %0** %14, align 8
  %273 = load %0*, %0** %20, align 8
  %274 = icmp ne %0* %273, null
  br i1 %274, label %275, label %281

275:                                              ; preds = %258
  %276 = load i64, i64* %18, align 8
  %277 = load i64, i64* %32, align 8
  %278 = icmp ne i64 %276, %277
  br i1 %278, label %279, label %281

279:                                              ; preds = %275
  %280 = load %0*, %0** %20, align 8
  call void @159(%0* %280)
  store %0* null, %0** %20, align 8
  br label %281

281:                                              ; preds = %279, %275, %258
  %282 = bitcast i64* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %282) #13
  br label %337

283:                                              ; preds = %253
  %284 = load %0*, %0** %31, align 8
  %285 = getelementptr inbounds %0, %0* %284, i32 0, i32 2
  %286 = load i64, i64* %285, align 8
  %287 = icmp ugt i64 %286, 1
  br i1 %287, label %288, label %336

288:                                              ; preds = %283
  %289 = load i32, i32* %11, align 4
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %291, label %305

291:                                              ; preds = %288
  %292 = load %18*, %18** %10, align 8
  %293 = getelementptr inbounds %18, %18* %292, i32 0, i32 0
  %294 = bitcast %19* %293 to %0**
  %295 = load %0*, %0** %294, align 8
  %296 = load %0*, %0** %31, align 8
  %297 = getelementptr inbounds %0, %0* %296, i32 0, i32 3
  %298 = getelementptr inbounds [1 x i8], [1 x i8]* %297, i32 0, i32 0
  %299 = load %0*, %0** %31, align 8
  %300 = getelementptr inbounds %0, %0* %299, i32 0, i32 2
  %301 = load i64, i64* %300, align 8
  %302 = load i8*, i8** %16, align 8
  %303 = load i64, i64* %17, align 8
  %304 = call %0* @176(%0* %295, i8* %298, i64 %301, i8* %302, i64 %303, i64* %18)
  store %0* %304, %0** %14, align 8
  br label %335

305:                                              ; preds = %288
  %306 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %306) #13
  %307 = load i64, i64* %18, align 8
  store i64 %307, i64* %33, align 8
  %308 = load %0*, %0** %20, align 8
  %309 = icmp ne %0* %308, null
  br i1 %309, label %316, label %310

310:                                              ; preds = %305
  %311 = load %18*, %18** %10, align 8
  %312 = getelementptr inbounds %18, %18* %311, i32 0, i32 0
  %313 = bitcast %19* %312 to %0**
  %314 = load %0*, %0** %313, align 8
  %315 = call %0* @php_string_tolower(%0* %314)
  store %0* %315, %0** %20, align 8
  br label %316

316:                                              ; preds = %310, %305
  %317 = load %18*, %18** %10, align 8
  %318 = getelementptr inbounds %18, %18* %317, i32 0, i32 0
  %319 = bitcast %19* %318 to %0**
  %320 = load %0*, %0** %319, align 8
  %321 = load %0*, %0** %20, align 8
  %322 = getelementptr inbounds %0, %0* %321, i32 0, i32 3
  %323 = getelementptr inbounds [1 x i8], [1 x i8]* %322, i32 0, i32 0
  %324 = load %0*, %0** %31, align 8
  %325 = load i8*, i8** %16, align 8
  %326 = load i64, i64* %17, align 8
  %327 = call %0* @198(%0* %320, i8* %323, %0* %324, i8* %325, i64 %326, i64* %18)
  store %0* %327, %0** %14, align 8
  %328 = load i64, i64* %18, align 8
  %329 = load i64, i64* %33, align 8
  %330 = icmp ne i64 %328, %329
  br i1 %330, label %331, label %333

331:                                              ; preds = %316
  %332 = load %0*, %0** %20, align 8
  call void @159(%0* %332)
  store %0* null, %0** %20, align 8
  br label %333

333:                                              ; preds = %331, %316
  %334 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %334) #13
  br label %335

335:                                              ; preds = %333, %291
  br label %336

336:                                              ; preds = %335, %283
  br label %337

337:                                              ; preds = %336, %281
  %338 = load %0*, %0** %31, align 8
  call void @159(%0* %338)
  %339 = load %0*, %0** %15, align 8
  %340 = icmp ne %0* %339, null
  br i1 %340, label %341, label %343

341:                                              ; preds = %337
  %342 = load %0*, %0** %15, align 8
  call void @159(%0* %342)
  store %0* null, %0** %15, align 8
  br label %343

343:                                              ; preds = %341, %337
  %344 = load %18*, %18** %10, align 8
  %345 = getelementptr inbounds %18, %18* %344, i32 0, i32 0
  %346 = bitcast %19* %345 to %0**
  %347 = load %0*, %0** %346, align 8
  call void @159(%0* %347)
  br label %348

348:                                              ; preds = %343
  %349 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %349) #13
  %350 = load %18*, %18** %10, align 8
  store %18* %350, %18** %34, align 8
  %351 = bitcast %0** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %351) #13
  %352 = load %0*, %0** %14, align 8
  store %0* %352, %0** %35, align 8
  %353 = load %0*, %0** %35, align 8
  %354 = load %18*, %18** %34, align 8
  %355 = getelementptr inbounds %18, %18* %354, i32 0, i32 0
  %356 = bitcast %19* %355 to %0**
  store %0* %353, %0** %356, align 8
  %357 = load %0*, %0** %35, align 8
  %358 = getelementptr inbounds %0, %0* %357, i32 0, i32 0
  %359 = getelementptr inbounds %1, %1* %358, i32 0, i32 1
  %360 = bitcast %2* %359 to %52*
  %361 = getelementptr inbounds %52, %52* %360, i32 0, i32 1
  %362 = load i8, i8* %361, align 1
  %363 = zext i8 %362 to i32
  %364 = and i32 %363, 2
  %365 = icmp ne i32 %364, 0
  %366 = zext i1 %365 to i64
  %367 = select i1 %365, i32 6, i32 5126
  %368 = load %18*, %18** %34, align 8
  %369 = getelementptr inbounds %18, %18* %368, i32 0, i32 1
  %370 = bitcast %20* %369 to i32*
  store i32 %367, i32* %370, align 8
  %371 = bitcast %0** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #13
  %372 = bitcast %18** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %372) #13
  br label %373

373:                                              ; preds = %348
  br label %374

374:                                              ; preds = %373
  %375 = load %18*, %18** %10, align 8
  %376 = getelementptr inbounds %18, %18* %375, i32 0, i32 0
  %377 = bitcast %19* %376 to %0**
  %378 = load %0*, %0** %377, align 8
  %379 = getelementptr inbounds %0, %0* %378, i32 0, i32 2
  %380 = load i64, i64* %379, align 8
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %390

382:                                              ; preds = %374
  %383 = load %0*, %0** %20, align 8
  %384 = icmp ne %0* %383, null
  br i1 %384, label %385, label %387

385:                                              ; preds = %382
  %386 = load %0*, %0** %20, align 8
  call void @159(%0* %386)
  br label %387

387:                                              ; preds = %385, %382
  %388 = load %0*, %0** %19, align 8
  call void @159(%0* %388)
  %389 = load i64, i64* %18, align 8
  store i64 %389, i64* %6, align 8
  store i32 1, i32* %24, align 4
  br label %391

390:                                              ; preds = %374
  store i32 0, i32* %24, align 4
  br label %391

391:                                              ; preds = %390, %387, %195
  %392 = bitcast %0** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %392) #13
  %393 = load i32, i32* %24, align 4
  switch i32 %393, label %395 [
    i32 0, label %394
  ]

394:                                              ; preds = %391
  store i32 0, i32* %24, align 4
  br label %395

395:                                              ; preds = %394, %391, %177
  %396 = bitcast %18** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %396) #13
  %397 = load i32, i32* %24, align 4
  switch i32 %397, label %403 [
    i32 0, label %398
    i32 12, label %399
  ]

398:                                              ; preds = %395
  br label %399

399:                                              ; preds = %398, %395
  %400 = load %45*, %45** %28, align 8
  %401 = getelementptr inbounds %45, %45* %400, i32 1
  store %45* %401, %45** %28, align 8
  br label %159

402:                                              ; preds = %159
  store i32 0, i32* %24, align 4
  br label %403

403:                                              ; preds = %402, %395
  %404 = bitcast %45** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %404) #13
  %405 = bitcast %45** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %405) #13
  %406 = bitcast %43** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %406) #13
  %407 = load i32, i32* %24, align 4
  switch i32 %407, label %645 [
    i32 0, label %408
  ]

408:                                              ; preds = %403
  br label %409

409:                                              ; preds = %408
  br label %410

410:                                              ; preds = %409
  %411 = load %0*, %0** %20, align 8
  %412 = icmp ne %0* %411, null
  br i1 %412, label %413, label %415

413:                                              ; preds = %410
  %414 = load %0*, %0** %20, align 8
  call void @159(%0* %414)
  br label %415

415:                                              ; preds = %413, %410
  br label %642

416:                                              ; preds = %81
  br label %417

417:                                              ; preds = %416
  %418 = load %18*, %18** %7, align 8
  %419 = call zeroext i8 @157(%18* %418)
  %420 = zext i8 %419 to i32
  %421 = icmp eq i32 %420, 6
  %422 = xor i1 %421, true
  %423 = zext i1 %422 to i32
  %424 = sext i32 %423 to i64
  %425 = call i64 @llvm.expect.i64(i64 %424, i64 0)
  %426 = icmp ne i64 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %417
  unreachable

428:                                              ; preds = %417
  br label %429

429:                                              ; preds = %428
  br label %430

430:                                              ; preds = %429
  %431 = load %18*, %18** %7, align 8
  %432 = getelementptr inbounds %18, %18* %431, i32 0, i32 0
  %433 = bitcast %19* %432 to %0**
  %434 = load %0*, %0** %433, align 8
  %435 = getelementptr inbounds %0, %0* %434, i32 0, i32 2
  %436 = load i64, i64* %435, align 8
  %437 = icmp eq i64 %436, 1
  br i1 %437, label %438, label %487

438:                                              ; preds = %430
  br label %439

439:                                              ; preds = %438
  %440 = bitcast %18** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %440) #13
  %441 = load %18*, %18** %10, align 8
  store %18* %441, %18** %36, align 8
  %442 = bitcast %0** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %442) #13
  %443 = load %0*, %0** %19, align 8
  %444 = load %18*, %18** %7, align 8
  %445 = getelementptr inbounds %18, %18* %444, i32 0, i32 0
  %446 = bitcast %19* %445 to %0**
  %447 = load %0*, %0** %446, align 8
  %448 = getelementptr inbounds %0, %0* %447, i32 0, i32 3
  %449 = getelementptr inbounds [1 x i8], [1 x i8]* %448, i64 0, i64 0
  %450 = load i8, i8* %449, align 8
  %451 = load %18*, %18** %8, align 8
  %452 = getelementptr inbounds %18, %18* %451, i32 0, i32 0
  %453 = bitcast %19* %452 to %0**
  %454 = load %0*, %0** %453, align 8
  %455 = getelementptr inbounds %0, %0* %454, i32 0, i32 3
  %456 = getelementptr inbounds [1 x i8], [1 x i8]* %455, i32 0, i32 0
  %457 = load %18*, %18** %8, align 8
  %458 = getelementptr inbounds %18, %18* %457, i32 0, i32 0
  %459 = bitcast %19* %458 to %0**
  %460 = load %0*, %0** %459, align 8
  %461 = getelementptr inbounds %0, %0* %460, i32 0, i32 2
  %462 = load i64, i64* %461, align 8
  %463 = load i32, i32* %11, align 4
  %464 = call %0* @175(%0* %443, i8 signext %450, i8* %456, i64 %462, i32 %463, i64* %18)
  store %0* %464, %0** %37, align 8
  %465 = load %0*, %0** %37, align 8
  %466 = load %18*, %18** %36, align 8
  %467 = getelementptr inbounds %18, %18* %466, i32 0, i32 0
  %468 = bitcast %19* %467 to %0**
  store %0* %465, %0** %468, align 8
  %469 = load %0*, %0** %37, align 8
  %470 = getelementptr inbounds %0, %0* %469, i32 0, i32 0
  %471 = getelementptr inbounds %1, %1* %470, i32 0, i32 1
  %472 = bitcast %2* %471 to %52*
  %473 = getelementptr inbounds %52, %52* %472, i32 0, i32 1
  %474 = load i8, i8* %473, align 1
  %475 = zext i8 %474 to i32
  %476 = and i32 %475, 2
  %477 = icmp ne i32 %476, 0
  %478 = zext i1 %477 to i64
  %479 = select i1 %477, i32 6, i32 5126
  %480 = load %18*, %18** %36, align 8
  %481 = getelementptr inbounds %18, %18* %480, i32 0, i32 1
  %482 = bitcast %20* %481 to i32*
  store i32 %479, i32* %482, align 8
  %483 = bitcast %0** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %483) #13
  %484 = bitcast %18** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %484) #13
  br label %485

485:                                              ; preds = %439
  br label %486

486:                                              ; preds = %485
  br label %641

487:                                              ; preds = %430
  %488 = load %18*, %18** %7, align 8
  %489 = getelementptr inbounds %18, %18* %488, i32 0, i32 0
  %490 = bitcast %19* %489 to %0**
  %491 = load %0*, %0** %490, align 8
  %492 = getelementptr inbounds %0, %0* %491, i32 0, i32 2
  %493 = load i64, i64* %492, align 8
  %494 = icmp ugt i64 %493, 1
  br i1 %494, label %495, label %603

495:                                              ; preds = %487
  %496 = load i32, i32* %11, align 4
  %497 = icmp ne i32 %496, 0
  br i1 %497, label %498, label %551

498:                                              ; preds = %495
  br label %499

499:                                              ; preds = %498
  %500 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %500) #13
  %501 = load %18*, %18** %10, align 8
  store %18* %501, %18** %38, align 8
  %502 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %502) #13
  %503 = load %0*, %0** %19, align 8
  %504 = load %18*, %18** %7, align 8
  %505 = getelementptr inbounds %18, %18* %504, i32 0, i32 0
  %506 = bitcast %19* %505 to %0**
  %507 = load %0*, %0** %506, align 8
  %508 = getelementptr inbounds %0, %0* %507, i32 0, i32 3
  %509 = getelementptr inbounds [1 x i8], [1 x i8]* %508, i32 0, i32 0
  %510 = load %18*, %18** %7, align 8
  %511 = getelementptr inbounds %18, %18* %510, i32 0, i32 0
  %512 = bitcast %19* %511 to %0**
  %513 = load %0*, %0** %512, align 8
  %514 = getelementptr inbounds %0, %0* %513, i32 0, i32 2
  %515 = load i64, i64* %514, align 8
  %516 = load %18*, %18** %8, align 8
  %517 = getelementptr inbounds %18, %18* %516, i32 0, i32 0
  %518 = bitcast %19* %517 to %0**
  %519 = load %0*, %0** %518, align 8
  %520 = getelementptr inbounds %0, %0* %519, i32 0, i32 3
  %521 = getelementptr inbounds [1 x i8], [1 x i8]* %520, i32 0, i32 0
  %522 = load %18*, %18** %8, align 8
  %523 = getelementptr inbounds %18, %18* %522, i32 0, i32 0
  %524 = bitcast %19* %523 to %0**
  %525 = load %0*, %0** %524, align 8
  %526 = getelementptr inbounds %0, %0* %525, i32 0, i32 2
  %527 = load i64, i64* %526, align 8
  %528 = call %0* @176(%0* %503, i8* %509, i64 %515, i8* %521, i64 %527, i64* %18)
  store %0* %528, %0** %39, align 8
  %529 = load %0*, %0** %39, align 8
  %530 = load %18*, %18** %38, align 8
  %531 = getelementptr inbounds %18, %18* %530, i32 0, i32 0
  %532 = bitcast %19* %531 to %0**
  store %0* %529, %0** %532, align 8
  %533 = load %0*, %0** %39, align 8
  %534 = getelementptr inbounds %0, %0* %533, i32 0, i32 0
  %535 = getelementptr inbounds %1, %1* %534, i32 0, i32 1
  %536 = bitcast %2* %535 to %52*
  %537 = getelementptr inbounds %52, %52* %536, i32 0, i32 1
  %538 = load i8, i8* %537, align 1
  %539 = zext i8 %538 to i32
  %540 = and i32 %539, 2
  %541 = icmp ne i32 %540, 0
  %542 = zext i1 %541 to i64
  %543 = select i1 %541, i32 6, i32 5126
  %544 = load %18*, %18** %38, align 8
  %545 = getelementptr inbounds %18, %18* %544, i32 0, i32 1
  %546 = bitcast %20* %545 to i32*
  store i32 %543, i32* %546, align 8
  %547 = bitcast %0** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %547) #13
  %548 = bitcast %18** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %548) #13
  br label %549

549:                                              ; preds = %499
  br label %550

550:                                              ; preds = %549
  br label %602

551:                                              ; preds = %495
  %552 = load %0*, %0** %19, align 8
  %553 = call %0* @php_string_tolower(%0* %552)
  store %0* %553, %0** %20, align 8
  br label %554

554:                                              ; preds = %551
  %555 = bitcast %18** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %555) #13
  %556 = load %18*, %18** %10, align 8
  store %18* %556, %18** %40, align 8
  %557 = bitcast %0** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %557) #13
  %558 = load %0*, %0** %19, align 8
  %559 = load %0*, %0** %20, align 8
  %560 = getelementptr inbounds %0, %0* %559, i32 0, i32 3
  %561 = getelementptr inbounds [1 x i8], [1 x i8]* %560, i32 0, i32 0
  %562 = load %18*, %18** %7, align 8
  %563 = getelementptr inbounds %18, %18* %562, i32 0, i32 0
  %564 = bitcast %19* %563 to %0**
  %565 = load %0*, %0** %564, align 8
  %566 = load %18*, %18** %8, align 8
  %567 = getelementptr inbounds %18, %18* %566, i32 0, i32 0
  %568 = bitcast %19* %567 to %0**
  %569 = load %0*, %0** %568, align 8
  %570 = getelementptr inbounds %0, %0* %569, i32 0, i32 3
  %571 = getelementptr inbounds [1 x i8], [1 x i8]* %570, i32 0, i32 0
  %572 = load %18*, %18** %8, align 8
  %573 = getelementptr inbounds %18, %18* %572, i32 0, i32 0
  %574 = bitcast %19* %573 to %0**
  %575 = load %0*, %0** %574, align 8
  %576 = getelementptr inbounds %0, %0* %575, i32 0, i32 2
  %577 = load i64, i64* %576, align 8
  %578 = call %0* @198(%0* %558, i8* %561, %0* %565, i8* %571, i64 %577, i64* %18)
  store %0* %578, %0** %41, align 8
  %579 = load %0*, %0** %41, align 8
  %580 = load %18*, %18** %40, align 8
  %581 = getelementptr inbounds %18, %18* %580, i32 0, i32 0
  %582 = bitcast %19* %581 to %0**
  store %0* %579, %0** %582, align 8
  %583 = load %0*, %0** %41, align 8
  %584 = getelementptr inbounds %0, %0* %583, i32 0, i32 0
  %585 = getelementptr inbounds %1, %1* %584, i32 0, i32 1
  %586 = bitcast %2* %585 to %52*
  %587 = getelementptr inbounds %52, %52* %586, i32 0, i32 1
  %588 = load i8, i8* %587, align 1
  %589 = zext i8 %588 to i32
  %590 = and i32 %589, 2
  %591 = icmp ne i32 %590, 0
  %592 = zext i1 %591 to i64
  %593 = select i1 %591, i32 6, i32 5126
  %594 = load %18*, %18** %40, align 8
  %595 = getelementptr inbounds %18, %18* %594, i32 0, i32 1
  %596 = bitcast %20* %595 to i32*
  store i32 %593, i32* %596, align 8
  %597 = bitcast %0** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %597) #13
  %598 = bitcast %18** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %598) #13
  br label %599

599:                                              ; preds = %554
  br label %600

600:                                              ; preds = %599
  %601 = load %0*, %0** %20, align 8
  call void @159(%0* %601)
  br label %602

602:                                              ; preds = %600, %550
  br label %640

603:                                              ; preds = %487
  br label %604

604:                                              ; preds = %603
  %605 = bitcast %18** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %605) #13
  %606 = load %18*, %18** %10, align 8
  store %18* %606, %18** %42, align 8
  %607 = bitcast %0** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %607) #13
  %608 = load %0*, %0** %19, align 8
  store %0* %608, %0** %43, align 8
  %609 = load %0*, %0** %43, align 8
  %610 = load %18*, %18** %42, align 8
  %611 = getelementptr inbounds %18, %18* %610, i32 0, i32 0
  %612 = bitcast %19* %611 to %0**
  store %0* %609, %0** %612, align 8
  %613 = load %0*, %0** %43, align 8
  %614 = getelementptr inbounds %0, %0* %613, i32 0, i32 0
  %615 = getelementptr inbounds %1, %1* %614, i32 0, i32 1
  %616 = bitcast %2* %615 to %52*
  %617 = getelementptr inbounds %52, %52* %616, i32 0, i32 1
  %618 = load i8, i8* %617, align 1
  %619 = zext i8 %618 to i32
  %620 = and i32 %619, 2
  %621 = icmp ne i32 %620, 0
  br i1 %621, label %622, label %626

622:                                              ; preds = %604
  %623 = load %18*, %18** %42, align 8
  %624 = getelementptr inbounds %18, %18* %623, i32 0, i32 1
  %625 = bitcast %20* %624 to i32*
  store i32 6, i32* %625, align 8
  br label %635

626:                                              ; preds = %604
  %627 = load %0*, %0** %43, align 8
  %628 = getelementptr inbounds %0, %0* %627, i32 0, i32 0
  %629 = getelementptr inbounds %1, %1* %628, i32 0, i32 0
  %630 = load i32, i32* %629, align 8
  %631 = add i32 %630, 1
  store i32 %631, i32* %629, align 8
  %632 = load %18*, %18** %42, align 8
  %633 = getelementptr inbounds %18, %18* %632, i32 0, i32 1
  %634 = bitcast %20* %633 to i32*
  store i32 5126, i32* %634, align 8
  br label %635

635:                                              ; preds = %626, %622
  %636 = bitcast %0** %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %636) #13
  %637 = bitcast %18** %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %637) #13
  br label %638

638:                                              ; preds = %635
  br label %639

639:                                              ; preds = %638
  br label %640

640:                                              ; preds = %639, %602
  br label %641

641:                                              ; preds = %640, %486
  br label %642

642:                                              ; preds = %641, %415
  %643 = load %0*, %0** %19, align 8
  call void @159(%0* %643)
  %644 = load i64, i64* %18, align 8
  store i64 %644, i64* %6, align 8
  store i32 1, i32* %24, align 4
  br label %645

645:                                              ; preds = %642, %403, %80
  %646 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %646) #13
  %647 = bitcast %0** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %647) #13
  %648 = bitcast %0** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %648) #13
  %649 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %649) #13
  %650 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %650) #13
  %651 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %651) #13
  %652 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %652) #13
  %653 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %653) #13
  %654 = bitcast %18** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %654) #13
  %655 = bitcast %18** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %655) #13
  %656 = load i64, i64* %6, align 8
  ret i64 %656
}

declare dso_local %18* @_zend_hash_add_new(%43*, %0*, %18*) #1

; Function Attrs: nounwind uwtable
define internal %0* @198(%0* %0, i8* %1, %0* %2, i8* %3, i64 %4, i64* %5) #0 {
  %7 = alloca %0*, align 8
  %8 = alloca %0*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %0*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64*, align 8
  %14 = alloca %0*, align 8
  %15 = alloca %0*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  store %0* %0, %0** %8, align 8
  store i8* %1, i8** %9, align 8
  store %0* %2, %0** %10, align 8
  store i8* %3, i8** %11, align 8
  store i64 %4, i64* %12, align 8
  store i64* %5, i64** %13, align 8
  %26 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #13
  store %0* null, %0** %14, align 8
  %27 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #13
  %28 = load %0*, %0** %10, align 8
  %29 = getelementptr inbounds %0, %0* %28, i32 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = load %0*, %0** %8, align 8
  %32 = getelementptr inbounds %0, %0* %31, i32 0, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %30, %33
  br i1 %34, label %35, label %275

35:                                               ; preds = %6
  %36 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #13
  %37 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #13
  %38 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #13
  %39 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #13
  %40 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #13
  %41 = load %0*, %0** %10, align 8
  %42 = getelementptr inbounds %0, %0* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* %12, align 8
  %45 = icmp eq i64 %43, %44
  br i1 %45, label %46, label %105

46:                                               ; preds = %35
  %47 = load %0*, %0** %10, align 8
  %48 = call %0* @php_string_tolower(%0* %47)
  store %0* %48, %0** %15, align 8
  %49 = load i8*, i8** %9, align 8
  %50 = load %0*, %0** %8, align 8
  %51 = getelementptr inbounds %0, %0* %50, i32 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  store i8* %53, i8** %16, align 8
  %54 = load i8*, i8** %9, align 8
  store i8* %54, i8** %19, align 8
  br label %55

55:                                               ; preds = %92, %46
  %56 = load i8*, i8** %19, align 8
  %57 = load %0*, %0** %15, align 8
  %58 = getelementptr inbounds %0, %0* %57, i32 0, i32 3
  %59 = getelementptr inbounds [1 x i8], [1 x i8]* %58, i32 0, i32 0
  %60 = load %0*, %0** %15, align 8
  %61 = getelementptr inbounds %0, %0* %60, i32 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = load i8*, i8** %16, align 8
  %64 = call i8* @156(i8* %56, i8* %59, i64 %62, i8* %63)
  store i8* %64, i8** %20, align 8
  %65 = icmp ne i8* %64, null
  br i1 %65, label %66, label %98

66:                                               ; preds = %55
  %67 = load %0*, %0** %14, align 8
  %68 = icmp ne %0* %67, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %66
  %70 = load %0*, %0** %8, align 8
  %71 = getelementptr inbounds %0, %0* %70, i32 0, i32 3
  %72 = getelementptr inbounds [1 x i8], [1 x i8]* %71, i32 0, i32 0
  %73 = load %0*, %0** %8, align 8
  %74 = getelementptr inbounds %0, %0* %73, i32 0, i32 2
  %75 = load i64, i64* %74, align 8
  %76 = call %0* @148(i8* %72, i64 %75, i32 0)
  store %0* %76, %0** %14, align 8
  br label %77

77:                                               ; preds = %69, %66
  %78 = load %0*, %0** %14, align 8
  %79 = getelementptr inbounds %0, %0* %78, i32 0, i32 3
  %80 = getelementptr inbounds [1 x i8], [1 x i8]* %79, i32 0, i32 0
  %81 = load i8*, i8** %20, align 8
  %82 = load i8*, i8** %9, align 8
  %83 = ptrtoint i8* %81 to i64
  %84 = ptrtoint i8* %82 to i64
  %85 = sub i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  %87 = load i8*, i8** %11, align 8
  %88 = load i64, i64* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %87, i64 %88, i1 false)
  %89 = load i64*, i64** %13, align 8
  %90 = load i64, i64* %89, align 8
  %91 = add nsw i64 %90, 1
  store i64 %91, i64* %89, align 8
  br label %92

92:                                               ; preds = %77
  %93 = load i8*, i8** %20, align 8
  %94 = load %0*, %0** %15, align 8
  %95 = getelementptr inbounds %0, %0* %94, i32 0, i32 2
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds i8, i8* %93, i64 %96
  store i8* %97, i8** %19, align 8
  br label %55

98:                                               ; preds = %55
  %99 = load %0*, %0** %15, align 8
  call void @159(%0* %99)
  %100 = load %0*, %0** %14, align 8
  %101 = icmp ne %0* %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %98
  store i32 5, i32* %21, align 4
  br label %268

103:                                              ; preds = %98
  %104 = load %0*, %0** %14, align 8
  store %0* %104, %0** %7, align 8
  store i32 1, i32* %21, align 4
  br label %268

105:                                              ; preds = %35
  %106 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %106) #13
  store i64 0, i64* %22, align 8
  %107 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %107) #13
  %108 = load i8*, i8** %9, align 8
  store i8* %108, i8** %23, align 8
  %109 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #13
  %110 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %110) #13
  %111 = load i8*, i8** %23, align 8
  %112 = load %0*, %0** %8, align 8
  %113 = getelementptr inbounds %0, %0* %112, i32 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds i8, i8* %111, i64 %114
  store i8* %115, i8** %25, align 8
  %116 = load %0*, %0** %10, align 8
  %117 = call %0* @php_string_tolower(%0* %116)
  store %0* %117, %0** %15, align 8
  %118 = load %0*, %0** %15, align 8
  %119 = getelementptr inbounds %0, %0* %118, i32 0, i32 3
  %120 = getelementptr inbounds [1 x i8], [1 x i8]* %119, i32 0, i32 0
  store i8* %120, i8** %24, align 8
  br label %121

121:                                              ; preds = %130, %105
  %122 = load i8*, i8** %23, align 8
  %123 = load i8*, i8** %24, align 8
  %124 = load %0*, %0** %15, align 8
  %125 = getelementptr inbounds %0, %0* %124, i32 0, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = load i8*, i8** %25, align 8
  %128 = call i8* @156(i8* %122, i8* %123, i64 %126, i8* %127)
  store i8* %128, i8** %23, align 8
  %129 = icmp ne i8* %128, null
  br i1 %129, label %130, label %138

130:                                              ; preds = %121
  %131 = load %0*, %0** %15, align 8
  %132 = getelementptr inbounds %0, %0* %131, i32 0, i32 2
  %133 = load i64, i64* %132, align 8
  %134 = load i8*, i8** %23, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 %133
  store i8* %135, i8** %23, align 8
  %136 = load i64, i64* %22, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %22, align 8
  br label %121

138:                                              ; preds = %121
  %139 = load i64, i64* %22, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = load %0*, %0** %15, align 8
  call void @159(%0* %142)
  store i32 5, i32* %21, align 4
  br label %263

143:                                              ; preds = %138
  %144 = load i64, i64* %12, align 8
  %145 = load %0*, %0** %15, align 8
  %146 = getelementptr inbounds %0, %0* %145, i32 0, i32 2
  %147 = load i64, i64* %146, align 8
  %148 = icmp ugt i64 %144, %147
  br i1 %148, label %149, label %160

149:                                              ; preds = %143
  %150 = load i64, i64* %22, align 8
  %151 = load i64, i64* %12, align 8
  %152 = load %0*, %0** %15, align 8
  %153 = getelementptr inbounds %0, %0* %152, i32 0, i32 2
  %154 = load i64, i64* %153, align 8
  %155 = sub i64 %151, %154
  %156 = load %0*, %0** %8, align 8
  %157 = getelementptr inbounds %0, %0* %156, i32 0, i32 2
  %158 = load i64, i64* %157, align 8
  %159 = call %0* @153(i64 %150, i64 %155, i64 %158, i32 0)
  store %0* %159, %0** %14, align 8
  br label %173

160:                                              ; preds = %143
  %161 = load i64, i64* %22, align 8
  %162 = load i64, i64* %12, align 8
  %163 = load %0*, %0** %15, align 8
  %164 = getelementptr inbounds %0, %0* %163, i32 0, i32 2
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %162, %165
  %167 = mul i64 %161, %166
  %168 = load %0*, %0** %8, align 8
  %169 = getelementptr inbounds %0, %0* %168, i32 0, i32 2
  %170 = load i64, i64* %169, align 8
  %171 = add i64 %167, %170
  %172 = call %0* @162(i64 %171, i32 0)
  store %0* %172, %0** %14, align 8
  br label %173

173:                                              ; preds = %160, %149
  %174 = load %0*, %0** %14, align 8
  %175 = getelementptr inbounds %0, %0* %174, i32 0, i32 3
  %176 = getelementptr inbounds [1 x i8], [1 x i8]* %175, i32 0, i32 0
  store i8* %176, i8** %18, align 8
  store i8* %176, i8** %17, align 8
  %177 = load i8*, i8** %9, align 8
  %178 = load %0*, %0** %8, align 8
  %179 = getelementptr inbounds %0, %0* %178, i32 0, i32 2
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds i8, i8* %177, i64 %180
  store i8* %181, i8** %16, align 8
  %182 = load i8*, i8** %9, align 8
  store i8* %182, i8** %19, align 8
  br label %183

183:                                              ; preds = %226, %173
  %184 = load i8*, i8** %19, align 8
  %185 = load %0*, %0** %15, align 8
  %186 = getelementptr inbounds %0, %0* %185, i32 0, i32 3
  %187 = getelementptr inbounds [1 x i8], [1 x i8]* %186, i32 0, i32 0
  %188 = load %0*, %0** %15, align 8
  %189 = getelementptr inbounds %0, %0* %188, i32 0, i32 2
  %190 = load i64, i64* %189, align 8
  %191 = load i8*, i8** %16, align 8
  %192 = call i8* @156(i8* %184, i8* %187, i64 %190, i8* %191)
  store i8* %192, i8** %20, align 8
  %193 = icmp ne i8* %192, null
  br i1 %193, label %194, label %232

194:                                              ; preds = %183
  %195 = load i8*, i8** %17, align 8
  %196 = load %0*, %0** %8, align 8
  %197 = getelementptr inbounds %0, %0* %196, i32 0, i32 3
  %198 = getelementptr inbounds [1 x i8], [1 x i8]* %197, i32 0, i32 0
  %199 = load i8*, i8** %19, align 8
  %200 = load i8*, i8** %9, align 8
  %201 = ptrtoint i8* %199 to i64
  %202 = ptrtoint i8* %200 to i64
  %203 = sub i64 %201, %202
  %204 = getelementptr inbounds i8, i8* %198, i64 %203
  %205 = load i8*, i8** %20, align 8
  %206 = load i8*, i8** %19, align 8
  %207 = ptrtoint i8* %205 to i64
  %208 = ptrtoint i8* %206 to i64
  %209 = sub i64 %207, %208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %195, i8* align 1 %204, i64 %209, i1 false)
  %210 = load i8*, i8** %20, align 8
  %211 = load i8*, i8** %19, align 8
  %212 = ptrtoint i8* %210 to i64
  %213 = ptrtoint i8* %211 to i64
  %214 = sub i64 %212, %213
  %215 = load i8*, i8** %17, align 8
  %216 = getelementptr inbounds i8, i8* %215, i64 %214
  store i8* %216, i8** %17, align 8
  %217 = load i8*, i8** %17, align 8
  %218 = load i8*, i8** %11, align 8
  %219 = load i64, i64* %12, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %217, i8* align 1 %218, i64 %219, i1 false)
  %220 = load i64, i64* %12, align 8
  %221 = load i8*, i8** %17, align 8
  %222 = getelementptr inbounds i8, i8* %221, i64 %220
  store i8* %222, i8** %17, align 8
  %223 = load i64*, i64** %13, align 8
  %224 = load i64, i64* %223, align 8
  %225 = add nsw i64 %224, 1
  store i64 %225, i64* %223, align 8
  br label %226

226:                                              ; preds = %194
  %227 = load i8*, i8** %20, align 8
  %228 = load %0*, %0** %15, align 8
  %229 = getelementptr inbounds %0, %0* %228, i32 0, i32 2
  %230 = load i64, i64* %229, align 8
  %231 = getelementptr inbounds i8, i8* %227, i64 %230
  store i8* %231, i8** %19, align 8
  br label %183

232:                                              ; preds = %183
  %233 = load i8*, i8** %19, align 8
  %234 = load i8*, i8** %16, align 8
  %235 = icmp ult i8* %233, %234
  br i1 %235, label %236, label %259

236:                                              ; preds = %232
  %237 = load i8*, i8** %17, align 8
  %238 = load %0*, %0** %8, align 8
  %239 = getelementptr inbounds %0, %0* %238, i32 0, i32 3
  %240 = getelementptr inbounds [1 x i8], [1 x i8]* %239, i32 0, i32 0
  %241 = load i8*, i8** %19, align 8
  %242 = load i8*, i8** %9, align 8
  %243 = ptrtoint i8* %241 to i64
  %244 = ptrtoint i8* %242 to i64
  %245 = sub i64 %243, %244
  %246 = getelementptr inbounds i8, i8* %240, i64 %245
  %247 = load i8*, i8** %16, align 8
  %248 = load i8*, i8** %19, align 8
  %249 = ptrtoint i8* %247 to i64
  %250 = ptrtoint i8* %248 to i64
  %251 = sub i64 %249, %250
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %237, i8* align 1 %246, i64 %251, i1 false)
  %252 = load i8*, i8** %16, align 8
  %253 = load i8*, i8** %19, align 8
  %254 = ptrtoint i8* %252 to i64
  %255 = ptrtoint i8* %253 to i64
  %256 = sub i64 %254, %255
  %257 = load i8*, i8** %17, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 %256
  store i8* %258, i8** %17, align 8
  br label %259

259:                                              ; preds = %236, %232
  %260 = load i8*, i8** %17, align 8
  store i8 0, i8* %260, align 1
  %261 = load %0*, %0** %15, align 8
  call void @159(%0* %261)
  %262 = load %0*, %0** %14, align 8
  store %0* %262, %0** %7, align 8
  store i32 1, i32* %21, align 4
  br label %263

263:                                              ; preds = %141, %259
  %264 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #13
  %265 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %265) #13
  %266 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %266) #13
  %267 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #13
  br label %268

268:                                              ; preds = %102, %263, %103
  %269 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %269) #13
  %270 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #13
  %271 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271) #13
  %272 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #13
  %273 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #13
  %274 = load i32, i32* %21, align 4
  switch i32 %274, label %310 [
    i32 5, label %284
  ]

275:                                              ; preds = %6
  %276 = load %0*, %0** %10, align 8
  %277 = getelementptr inbounds %0, %0* %276, i32 0, i32 2
  %278 = load i64, i64* %277, align 8
  %279 = load %0*, %0** %8, align 8
  %280 = getelementptr inbounds %0, %0* %279, i32 0, i32 2
  %281 = load i64, i64* %280, align 8
  %282 = icmp ugt i64 %278, %281
  br i1 %282, label %283, label %287

283:                                              ; preds = %275
  br label %284

284:                                              ; preds = %299, %283, %268
  %285 = load %0*, %0** %8, align 8
  %286 = call %0* @163(%0* %285)
  store %0* %286, %0** %7, align 8
  store i32 1, i32* %21, align 4
  br label %310

287:                                              ; preds = %275
  %288 = load %0*, %0** %10, align 8
  %289 = call %0* @php_string_tolower(%0* %288)
  store %0* %289, %0** %15, align 8
  %290 = load i8*, i8** %9, align 8
  %291 = load %0*, %0** %15, align 8
  %292 = getelementptr inbounds %0, %0* %291, i32 0, i32 3
  %293 = getelementptr inbounds [1 x i8], [1 x i8]* %292, i32 0, i32 0
  %294 = load %0*, %0** %15, align 8
  %295 = getelementptr inbounds %0, %0* %294, i32 0, i32 2
  %296 = load i64, i64* %295, align 8
  %297 = call i32 @memcmp(i8* %290, i8* %293, i64 %296) #14
  %298 = icmp ne i32 %297, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %287
  %300 = load %0*, %0** %15, align 8
  call void @159(%0* %300)
  br label %284

301:                                              ; preds = %287
  %302 = load %0*, %0** %15, align 8
  call void @159(%0* %302)
  %303 = load i8*, i8** %11, align 8
  %304 = load i64, i64* %12, align 8
  %305 = call %0* @148(i8* %303, i64 %304, i32 0)
  store %0* %305, %0** %14, align 8
  %306 = load i64*, i64** %13, align 8
  %307 = load i64, i64* %306, align 8
  %308 = add nsw i64 %307, 1
  store i64 %308, i64* %306, align 8
  %309 = load %0*, %0** %14, align 8
  store %0* %309, %0** %7, align 8
  store i32 1, i32* %21, align 4
  br label %310

310:                                              ; preds = %301, %284, %268
  %311 = bitcast %0** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %311) #13
  %312 = bitcast %0** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %312) #13
  %313 = load %0*, %0** %7, align 8
  ret %0* %313
}

declare dso_local i64 @php_rand() #1

declare dso_local i64 @php_mt_rand_range(i64, i64) #1

declare dso_local i32 @zend_parse_arg_double_slow(%18*, double*) #1

declare dso_local i32 @php_next_utf8_char(i8*, i64, i64*, i32*) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readnone willreturn }
attributes #5 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind willreturn writeonly }
attributes #12 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { allocsize(1) }
attributes #16 = { allocsize(0) }
attributes #17 = { nounwind readnone }
attributes #18 = { allocsize(0,1) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
