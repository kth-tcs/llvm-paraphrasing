; ModuleID = 'zend_API-strip-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/Zend/zend_API.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { %11, %11, [32 x %5*], %5**, %5**, %5, %5, [1 x %1]*, i32, i32, %5*, %5*, %5*, %11*, %11*, %3*, %4*, %16*, i64, i32, %5*, %37*, i8, i8, i8, i8, i64, %5, %5, i32, %11, %11, %15, %15, %15, i32, %16*, i64, i32, %5*, %5*, %30*, %31, %20*, %20*, %42*, [3 x %42], %32*, i8, i8, i64, i32, i32, %36*, [16 x %36], i8*, i16, %37, %42, i8, [6 x i8*] }
%1 = type { [8 x i64], i32, %2 }
%2 = type { [16 x i64] }
%3 = type { %11*, %11*, %3* }
%4 = type { %42*, %4*, %11*, %37*, %11, %4*, %5*, i8**, %11* }
%5 = type { %6, %8, i32, %9*, i32, i32, i32, i32, i64, void (%11*)* }
%6 = type { i32, %7 }
%7 = type { i32 }
%8 = type { i32 }
%9 = type { %11, i64, %10* }
%10 = type { %6, i64, i64, [1 x i8] }
%11 = type { %12, %13, %14 }
%12 = type { i64 }
%13 = type { i32 }
%14 = type { i32 }
%15 = type { i32, i32, i32, i8* }
%16 = type { i8, %10*, %16*, i32, i32, i32, i32, %11*, %11*, %11*, %5, %5, %5, %37*, %37*, %37*, %37*, %37*, %37*, %37*, %37*, %37*, %37*, %37*, %37*, %37*, %17, %20* (%16*)*, %19* (%16*, %11*, i32)*, i32 (%16*, %16*)*, %37* (%16*, %10*)*, i32 (%11*, i8**, i64*, %22*)*, i32 (%11*, %16*, i8*, i64, %23*)*, i32, i32, %16**, %16**, %24**, %26**, %28 }
%17 = type { %18*, %37*, %37*, %37*, %37*, %37*, %37* }
%18 = type { void (%19*)*, i32 (%19*)*, %11* (%19*)*, void (%19*, %11*)*, void (%19*)*, void (%19*)*, void (%19*)* }
%19 = type { %20, %11, %18*, i64 }
%20 = type { %6, i32, %16*, %21*, %5*, [1 x %11] }
%21 = type { i32, void (%20*)*, void (%20*)*, %20* (%11*)*, %11* (%11*, %11*, i32, i8**, %11*)*, void (%11*, %11*, %11*, i8**)*, %11* (%11*, %11*, i32, %11*)*, void (%11*, %11*, %11*)*, %11* (%11*, %11*, i32, i8**)*, %11* (%11*, %11*)*, void (%11*, %11*)*, i32 (%11*, %11*, i32, i8**)*, void (%11*, %11*, i8**)*, i32 (%11*, %11*, i32)*, void (%11*, %11*)*, %5* (%11*)*, %37* (%20**, %10*, %11*)*, i32 (%10*, %20*, %4*, %11*)*, %37* (%20*)*, %10* (%20*)*, i32 (%11*, %11*)*, i32 (%11*, %11*, i32)*, i32 (%11*, i64*)*, %5* (%11*, i32*)*, i32 (%11*, %16**, %37**, %20**)*, %5* (%11*, %11**, i32*)*, i32 (i8, %11*, %11*, %11*)*, i32 (%11*, %11*, %11*)* }
%22 = type opaque
%23 = type opaque
%24 = type { %25*, %10*, i32 }
%25 = type { %10*, %16*, %10* }
%26 = type { %25*, %27* }
%27 = type { %16* }
%28 = type { %29 }
%29 = type { %10*, i32, i32, %10* }
%30 = type opaque
%31 = type { %20**, i32, i32, i32 }
%32 = type { i16, i32, i8, i8, %30*, %33*, i8*, %34*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, void (%32*)*, i8*, i64, i8*, void (i8*)*, void (i8*)*, i32 ()*, i32, i8, i8*, i32, i8* }
%33 = type { i8*, i8*, i8*, i8 }
%34 = type { i8*, void (%4*, %11*)*, %35*, i32, i32 }
%35 = type { i8*, i64, i8, i8 }
%36 = type { %5*, i32 }
%37 = type { %38 }
%38 = type { i8, [3 x i8], i32, %10*, %16*, %37*, i32, i32, %39*, i32*, i32, %42*, i32, i32, %10**, i32, i32, %40*, %41*, %5*, %10*, i32, i32, %10*, i32, i32, %11*, i32, i8**, [6 x i8*] }
%39 = type { %10*, i64, i8, i8 }
%40 = type { i32, i32, i32 }
%41 = type { i32, i32, i32, i32 }
%42 = type { i8*, %43, %43, %43, i32, i32, i8, i8, i8, i8 }
%43 = type { i32 }
%44 = type { %15, %16*, %10*, i32, %38*, %5*, %5*, %5, %5*, i8, i8, i8, i8, i8, %45, %47*, i32, i8, %10*, i32, i32, %48, %50, %56*, %5, %54**, i64, i8, i8, i8, %55*, %56*, %15 }
%45 = type { %46*, %46*, i64, i64, void (i8*)*, i8, %46* }
%46 = type { %46*, %46*, [1 x i8] }
%47 = type opaque
%48 = type { i32, i32, i32, i32, i32, i32, i32, i32, %49*, %5* }
%49 = type { i32, i32, i32, i32 }
%50 = type { %51, %52, %10*, i8, i8, %5*, %5*, %5*, %5 }
%51 = type { i64 }
%52 = type { i8, i8, %53 }
%53 = type { %11 }
%54 = type opaque
%55 = type { i16, i16, i32, [1 x %55*] }
%56 = type { i8*, i8*, %56* }
%57 = type { i32, i32, i8*, i8* }
%58 = type { %6 }
%59 = type { i8, i8, i8, i8 }
%60 = type { i8, [3 x i8], i32, %10*, %16*, %37*, i32, i32, %39* }
%61 = type { %6, %11 }
%62 = type { %6, i32, i32, i8* }
%63 = type { i8, i8, i16 }
%64 = type { %11, %10*, %16* }
%65 = type { i32, i32, %10*, %10*, %16* }
%66 = type { i8*, i8*, i8*, i8*, i8*, i32 (%66*)*, void (%66*)*, void ()*, void ()*, void (i32, i8*)*, void (%38*)*, void (%4*)*, void (%4*)*, void (%4*)*, void (%38*)*, void (%38*)*, i32 (i32)*, i32 (i8*)*, i64 (%38*)*, i64 (%38*, i8*)*, i8*, i8*, i8*, i8*, i8*, i32 }
%67 = type { i8, [3 x i8], i32, %10*, %16*, %37*, i32, i32, %35*, void (%4*, %11*)*, %32*, [6 x i8*] }
%68 = type { i64, i64, i8, i8 }
%69 = type { %34*, %32* }
%70 = type { i8, %37*, %16*, %16*, %20* }
%71 = type { i64, %11, %11*, %11*, %20*, i8, i32 }
%72 = type { i32, %16*, %11 }

@executor_globals = external dso_local global %0, align 8
@0 = private unnamed_addr constant [35 x i8] c"Wrong parameter count for %s%s%s()\00", align 1
@1 = private unnamed_addr constant [8 x i8] c"boolean\00", align 1
@2 = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@3 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@4 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@5 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@6 = private unnamed_addr constant [9 x i8] c"resource\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@8 = private unnamed_addr constant [9 x i8] c"callable\00", align 1
@9 = private unnamed_addr constant [9 x i8] c"iterable\00", align 1
@10 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@12 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@zend_known_strings = external dso_local global %10**, align 8
@13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@14 = private unnamed_addr constant [45 x i8] c"%s%s%s() expects %s %d parameter%s, %d given\00", align 1
@15 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@16 = private unnamed_addr constant [8 x i8] c"exactly\00", align 1
@17 = private unnamed_addr constant [9 x i8] c"at least\00", align 1
@18 = private unnamed_addr constant [8 x i8] c"at most\00", align 1
@19 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@20 = internal constant [10 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @22, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0), i8* null], align 16
@21 = private unnamed_addr constant [15 x i8] c"valid callback\00", align 1
@22 = private unnamed_addr constant [13 x i8] c"a valid path\00", align 1
@23 = private unnamed_addr constant [49 x i8] c"%s%s%s() expects parameter %d to be %s, %s given\00", align 1
@24 = private unnamed_addr constant [57 x i8] c"%s%s%s() expects parameter %d to be a valid callback, %s\00", align 1
@zend_ce_type_error = external dso_local global %16*, align 8
@25 = private unnamed_addr constant [77 x i8] c"%s%s%s() expects parameter %d to be a class name derived from %s, '%s' given\00", align 1
@26 = private unnamed_addr constant [67 x i8] c"%s%s%s() expects parameter %d to be a valid class name, '%s' given\00", align 1
@27 = private unnamed_addr constant [37 x i8] c"%s::%s() must be derived from %s::%s\00", align 1
@28 = private unnamed_addr constant [32 x i8] c"Cannot instantiate interface %s\00", align 1
@29 = private unnamed_addr constant [28 x i8] c"Cannot instantiate trait %s\00", align 1
@30 = private unnamed_addr constant [37 x i8] c"Cannot instantiate abstract class %s\00", align 1
@zend_standard_class_def = external dso_local global %16*, align 8
@zend_empty_string = external dso_local global %10*, align 8
@31 = private unnamed_addr constant [55 x i8] c"Resource ID#%d used as offset, casting to integer (%d)\00", align 1
@32 = private unnamed_addr constant [20 x i8] c"Illegal offset type\00", align 1
@module_registry = common dso_local global %5 zeroinitializer, align 8
@33 = private unnamed_addr constant [67 x i8] c"Cannot load module '%s' because required module '%s' is not loaded\00", align 1
@34 = private unnamed_addr constant [26 x i8] c"Unable to start %s module\00", align 1
@35 = internal global %32** null, align 8
@36 = internal global %32** null, align 8
@37 = internal global %32** null, align 8
@compiler_globals = external dso_local global %44, align 8
@38 = internal global %16** null, align 8
@39 = private unnamed_addr constant [74 x i8] c"Cannot load module '%s' because conflicting module '%s' is already loaded\00", align 1
@zend_new_interned_string = external dso_local global %10* (%10*)*, align 8
@40 = private unnamed_addr constant [27 x i8] c"Module '%s' already loaded\00", align 1
@41 = private unnamed_addr constant [49 x i8] c"%s: Unable to register functions, unable to load\00", align 1
@42 = private unnamed_addr constant [11 x i8] c"__destruct\00", align 1
@43 = private unnamed_addr constant [42 x i8] c"Destructor %s::%s() cannot take arguments\00", align 1
@44 = private unnamed_addr constant [8 x i8] c"__clone\00", align 1
@45 = private unnamed_addr constant [44 x i8] c"Method %s::%s() cannot accept any arguments\00", align 1
@46 = private unnamed_addr constant [6 x i8] c"__get\00", align 1
@47 = private unnamed_addr constant [45 x i8] c"Method %s::%s() must take exactly 1 argument\00", align 1
@48 = private unnamed_addr constant [51 x i8] c"Method %s::%s() cannot take arguments by reference\00", align 1
@49 = private unnamed_addr constant [6 x i8] c"__set\00", align 1
@50 = private unnamed_addr constant [46 x i8] c"Method %s::%s() must take exactly 2 arguments\00", align 1
@51 = private unnamed_addr constant [8 x i8] c"__unset\00", align 1
@52 = private unnamed_addr constant [8 x i8] c"__isset\00", align 1
@53 = private unnamed_addr constant [7 x i8] c"__call\00", align 1
@54 = private unnamed_addr constant [13 x i8] c"__callstatic\00", align 1
@55 = private unnamed_addr constant [56 x i8] c"Method %s::__callStatic() must take exactly 2 arguments\00", align 1
@56 = private unnamed_addr constant [61 x i8] c"Method %s::__callStatic() cannot take arguments by reference\00", align 1
@57 = private unnamed_addr constant [11 x i8] c"__tostring\00", align 1
@58 = private unnamed_addr constant [38 x i8] c"Method %s::%s() cannot take arguments\00", align 1
@59 = private unnamed_addr constant [12 x i8] c"__debuginfo\00", align 1
@60 = private unnamed_addr constant [95 x i8] c"Invalid access level for %s%s%s() - access must be exactly one of public, protected or private\00", align 1
@61 = private unnamed_addr constant [5 x i8] c"self\00", align 1
@62 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@63 = private unnamed_addr constant [60 x i8] c"Cannot declare a return type of %s outside of a class scope\00", align 1
@64 = private unnamed_addr constant [44 x i8] c"Static function %s%s%s() cannot be abstract\00", align 1
@65 = private unnamed_addr constant [53 x i8] c"Interface %s cannot contain non abstract method %s()\00", align 1
@66 = private unnamed_addr constant [42 x i8] c"Method %s%s%s() cannot be a NULL function\00", align 1
@67 = private unnamed_addr constant [12 x i8] c"__construct\00", align 1
@68 = private unnamed_addr constant [55 x i8] c"Function registration failed - duplicate name - %s%s%s\00", align 1
@69 = private unnamed_addr constant [38 x i8] c"Constructor %s::%s() cannot be static\00", align 1
@70 = private unnamed_addr constant [37 x i8] c"Destructor %s::%s() cannot be static\00", align 1
@71 = private unnamed_addr constant [26 x i8] c"%s::%s() cannot be static\00", align 1
@72 = private unnamed_addr constant [33 x i8] c"Method %s::%s() cannot be static\00", align 1
@73 = private unnamed_addr constant [31 x i8] c"Method %s::%s() must be static\00", align 1
@74 = private unnamed_addr constant [50 x i8] c"Constructor %s::%s() cannot declare a return type\00", align 1
@75 = private unnamed_addr constant [49 x i8] c"Destructor %s::%s() cannot declare a return type\00", align 1
@76 = private unnamed_addr constant [38 x i8] c"%s::%s() cannot declare a return type\00", align 1
@77 = private unnamed_addr constant [25 x i8] c"ZEND_DONT_UNLOAD_MODULES\00", align 1
@78 = private unnamed_addr constant [39 x i8] c"request_startup() for %s module failed\00", align 1
@79 = private unnamed_addr constant [44 x i8] c"%s() has been disabled for security reasons\00", align 1
@80 = internal constant [1 x %34] zeroinitializer, align 16
@81 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@82 = private unnamed_addr constant [11 x i8] c"::__invoke\00", align 1
@83 = private unnamed_addr constant [54 x i8] c"Internal zval's can't be arrays, objects or resources\00", align 1
@84 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@85 = private unnamed_addr constant [57 x i8] c"Access type for interface constant %s::%s must be public\00", align 1
@86 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@87 = private unnamed_addr constant [84 x i8] c"A class constant must not be called 'class'; it is reserved for class name fetching\00", align 1
@88 = private unnamed_addr constant [38 x i8] c"Cannot redefine class constant %s::%s\00", align 1
@89 = private unnamed_addr constant [42 x i8] c"Property %s of class %s cannot be updated\00", align 1
@90 = private unnamed_addr constant [40 x i8] c"Property %s of class %s cannot be unset\00", align 1
@91 = private unnamed_addr constant [39 x i8] c"Property %s of class %s cannot be read\00", align 1
@92 = private unnamed_addr constant [6 x i8] c"trait\00", align 1
@93 = private unnamed_addr constant [10 x i8] c"interface\00", align 1
@zend_ce_traversable = external dso_local global %16*, align 8
@94 = private unnamed_addr constant [33 x i8] c"%s%s%s() expects parameter %d %s\00", align 1
@95 = private unnamed_addr constant [47 x i8] c"to be a class name derived from %s, '%s' given\00", align 1
@96 = private unnamed_addr constant [37 x i8] c"to be a valid class name, '%s' given\00", align 1
@97 = private unnamed_addr constant [27 x i8] c"to be a valid callback, %s\00", align 1
@98 = private unnamed_addr constant [49 x i8] c"only one varargs specifier (* or +) is permitted\00", align 1
@99 = private unnamed_addr constant [44 x i8] c"bad type specifier while parsing parameters\00", align 1
@100 = private unnamed_addr constant [40 x i8] c"could not obtain parameters for parsing\00", align 1
@101 = private unnamed_addr constant [13 x i8] c"%s%s%s(): %s\00", align 1
@102 = private unnamed_addr constant [55 x i8] c"first array member is not a valid class name or object\00", align 1
@103 = private unnamed_addr constant [42 x i8] c"second array member is not a valid method\00", align 1
@104 = private unnamed_addr constant [36 x i8] c"array must have exactly two members\00", align 1
@105 = private unnamed_addr constant [25 x i8] c"no array or string given\00", align 1
@106 = private unnamed_addr constant [22 x i8] c"invalid function name\00", align 1
@107 = private unnamed_addr constant [37 x i8] c"class '%s' is not a subclass of '%s'\00", align 1
@108 = private unnamed_addr constant [49 x i8] c"function '%s' not found or invalid function name\00", align 1
@109 = private unnamed_addr constant [37 x i8] c"cannot call abstract method %s::%s()\00", align 1
@110 = private unnamed_addr constant [37 x i8] c"Cannot call abstract method %s::%s()\00", align 1
@111 = private unnamed_addr constant [11 x i8] c"should not\00", align 1
@112 = private unnamed_addr constant [7 x i8] c"cannot\00", align 1
@113 = private unnamed_addr constant [51 x i8] c"non-static method %s::%s() %s be called statically\00", align 1
@114 = private unnamed_addr constant [51 x i8] c"Non-static method %s::%s() %s be called statically\00", align 1
@115 = private unnamed_addr constant [38 x i8] c"cannot access private method %s::%s()\00", align 1
@116 = private unnamed_addr constant [40 x i8] c"cannot access protected method %s::%s()\00", align 1
@117 = private unnamed_addr constant [39 x i8] c"class '%s' does not have a method '%s'\00", align 1
@118 = private unnamed_addr constant [29 x i8] c"function '%s' does not exist\00", align 1
@119 = private unnamed_addr constant [51 x i8] c"cannot access self:: when no class scope is active\00", align 1
@120 = private unnamed_addr constant [53 x i8] c"cannot access parent:: when no class scope is active\00", align 1
@121 = private unnamed_addr constant [62 x i8] c"cannot access parent:: when current class scope has no parent\00", align 1
@122 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@123 = private unnamed_addr constant [53 x i8] c"cannot access static:: when no class scope is active\00", align 1
@124 = private unnamed_addr constant [23 x i8] c"class '%.*s' not found\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_get_parameters(i32 %0, i32 %1, ...) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [1 x %57], align 16
  %8 = alloca %11**, align 8
  %9 = alloca %11*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %58*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %11*, align 8
  %17 = alloca %11*, align 8
  %18 = alloca %58*, align 8
  %19 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %20 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #2
  %21 = bitcast [1 x %57]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %21) #2
  %22 = bitcast %11*** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #2
  %23 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #2
  %24 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %25 = bitcast %4* %24 to %11*
  %26 = getelementptr inbounds %11, %11* %25, i64 5
  store %11* %26, %11** %9, align 8
  %27 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %28 = getelementptr inbounds %4, %4* %27, i32 0, i32 4
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 2
  %30 = bitcast %14* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %6, align 4
  %32 = load i32, i32* %5, align 4
  %33 = load i32, i32* %6, align 4
  %34 = icmp sgt i32 %32, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %2
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %10, align 4
  br label %162

36:                                               ; preds = %2
  %37 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %38 = bitcast %57* %37 to i8*
  call void @llvm.va_start(i8* %38)
  br label %39

39:                                               ; preds = %154, %36
  %40 = load i32, i32* %5, align 4
  %41 = add nsw i32 %40, -1
  store i32 %41, i32* %5, align 4
  %42 = icmp sgt i32 %40, 0
  br i1 %42, label %43, label %159

43:                                               ; preds = %39
  %44 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %45 = getelementptr inbounds %57, %57* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 16
  %47 = icmp ule i32 %46, 40
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = getelementptr inbounds %57, %57* %44, i32 0, i32 3
  %50 = load i8*, i8** %49, align 16
  %51 = getelementptr i8, i8* %50, i32 %46
  %52 = bitcast i8* %51 to %11***
  %53 = add i32 %46, 8
  store i32 %53, i32* %45, align 16
  br label %59

54:                                               ; preds = %43
  %55 = getelementptr inbounds %57, %57* %44, i32 0, i32 2
  %56 = load i8*, i8** %55, align 8
  %57 = bitcast i8* %56 to %11***
  %58 = getelementptr i8, i8* %56, i32 8
  store i8* %58, i8** %55, align 8
  br label %59

59:                                               ; preds = %54, %48
  %60 = phi %11*** [ %52, %48 ], [ %57, %54 ]
  %61 = load %11**, %11*** %60, align 8
  store %11** %61, %11*** %8, align 8
  %62 = load %11*, %11** %9, align 8
  %63 = call zeroext i8 @125(%11* %62)
  %64 = zext i8 %63 to i32
  %65 = icmp eq i32 %64, 10
  br i1 %65, label %154, label %66

66:                                               ; preds = %59
  %67 = load %11*, %11** %9, align 8
  %68 = call i32 @126(%11* %67)
  %69 = icmp ugt i32 %68, 1
  br i1 %69, label %70, label %154

70:                                               ; preds = %66
  %71 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %71) #2
  br label %72

72:                                               ; preds = %70
  %73 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #2
  store %11* %11, %11** %12, align 8
  %74 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #2
  %75 = load %11*, %11** %9, align 8
  store %11* %75, %11** %13, align 8
  %76 = bitcast %58** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #2
  %77 = load %11*, %11** %13, align 8
  %78 = getelementptr inbounds %11, %11* %77, i32 0, i32 0
  %79 = bitcast %12* %78 to %58**
  %80 = load %58*, %58** %79, align 8
  store %58* %80, %58** %14, align 8
  %81 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %81) #2
  %82 = load %11*, %11** %13, align 8
  %83 = getelementptr inbounds %11, %11* %82, i32 0, i32 1
  %84 = bitcast %13* %83 to i32*
  %85 = load i32, i32* %84, align 8
  store i32 %85, i32* %15, align 4
  br label %86

86:                                               ; preds = %72
  %87 = load %58*, %58** %14, align 8
  %88 = load %11*, %11** %12, align 8
  %89 = getelementptr inbounds %11, %11* %88, i32 0, i32 0
  %90 = bitcast %12* %89 to %58**
  store %58* %87, %58** %90, align 8
  %91 = load i32, i32* %15, align 4
  %92 = load %11*, %11** %12, align 8
  %93 = getelementptr inbounds %11, %11* %92, i32 0, i32 1
  %94 = bitcast %13* %93 to i32*
  store i32 %91, i32* %94, align 8
  br label %95

95:                                               ; preds = %86
  br label %96

96:                                               ; preds = %95
  %97 = load i32, i32* %15, align 4
  %98 = and i32 %97, 5120
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %113

100:                                              ; preds = %96
  %101 = load i32, i32* %15, align 4
  %102 = and i32 %101, 4096
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = load %11*, %11** %12, align 8
  call void @_zval_copy_ctor_func(%11* %105)
  br label %112

106:                                              ; preds = %100
  %107 = load %58*, %58** %14, align 8
  %108 = getelementptr inbounds %58, %58* %107, i32 0, i32 0
  %109 = getelementptr inbounds %6, %6* %108, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  br label %112

112:                                              ; preds = %106, %104
  br label %113

113:                                              ; preds = %112, %96
  %114 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %114) #2
  %115 = bitcast %58** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #2
  %116 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #2
  %117 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #2
  br label %118

118:                                              ; preds = %113
  br label %119

119:                                              ; preds = %118
  %120 = load %11*, %11** %9, align 8
  %121 = call i32 @127(%11* %120)
  br label %122

122:                                              ; preds = %119
  %123 = bitcast %11** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %123) #2
  %124 = load %11*, %11** %9, align 8
  store %11* %124, %11** %16, align 8
  %125 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %125) #2
  store %11* %11, %11** %17, align 8
  %126 = bitcast %58** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %126) #2
  %127 = load %11*, %11** %17, align 8
  %128 = getelementptr inbounds %11, %11* %127, i32 0, i32 0
  %129 = bitcast %12* %128 to %58**
  %130 = load %58*, %58** %129, align 8
  store %58* %130, %58** %18, align 8
  %131 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %131) #2
  %132 = load %11*, %11** %17, align 8
  %133 = getelementptr inbounds %11, %11* %132, i32 0, i32 1
  %134 = bitcast %13* %133 to i32*
  %135 = load i32, i32* %134, align 8
  store i32 %135, i32* %19, align 4
  br label %136

136:                                              ; preds = %122
  %137 = load %58*, %58** %18, align 8
  %138 = load %11*, %11** %16, align 8
  %139 = getelementptr inbounds %11, %11* %138, i32 0, i32 0
  %140 = bitcast %12* %139 to %58**
  store %58* %137, %58** %140, align 8
  %141 = load i32, i32* %19, align 4
  %142 = load %11*, %11** %16, align 8
  %143 = getelementptr inbounds %11, %11* %142, i32 0, i32 1
  %144 = bitcast %13* %143 to i32*
  store i32 %141, i32* %144, align 8
  br label %145

145:                                              ; preds = %136
  br label %146

146:                                              ; preds = %145
  %147 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %147) #2
  %148 = bitcast %58** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #2
  %149 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #2
  %150 = bitcast %11** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #2
  br label %151

151:                                              ; preds = %146
  br label %152

152:                                              ; preds = %151
  %153 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %153) #2
  br label %154

154:                                              ; preds = %152, %66, %59
  %155 = load %11*, %11** %9, align 8
  %156 = load %11**, %11*** %8, align 8
  store %11* %155, %11** %156, align 8
  %157 = load %11*, %11** %9, align 8
  %158 = getelementptr inbounds %11, %11* %157, i32 1
  store %11* %158, %11** %9, align 8
  br label %39

159:                                              ; preds = %39
  %160 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %161 = bitcast %57* %160 to i8*
  call void @llvm.va_end(i8* %161)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %10, align 4
  br label %162

162:                                              ; preds = %159, %35
  %163 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163) #2
  %164 = bitcast %11*** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #2
  %165 = bitcast [1 x %57]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %165) #2
  %166 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %166) #2
  %167 = load i32, i32* %3, align 4
  ret i32 %167
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i8 @125(%11* %0) #3 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  %3 = load %11*, %11** %2, align 8
  %4 = getelementptr inbounds %11, %11* %3, i32 0, i32 1
  %5 = bitcast %13* %4 to %59*
  %6 = getelementptr inbounds %59, %59* %5, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @126(%11* %0) #3 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %11*, %11** %2, align 8
  %5 = getelementptr inbounds %11, %11* %4, i32 0, i32 1
  %6 = bitcast %13* %5 to %59*
  %7 = getelementptr inbounds %59, %59* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %3
  %13 = load %11*, %11** %2, align 8
  %14 = getelementptr inbounds %11, %11* %13, i32 0, i32 1
  %15 = bitcast %13* %14 to %59*
  %16 = getelementptr inbounds %59, %59* %15, i32 0, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = and i32 %18, 16
  %20 = icmp ne i32 %19, 0
  br label %21

21:                                               ; preds = %12, %3
  %22 = phi i1 [ true, %3 ], [ %20, %12 ]
  %23 = xor i1 %22, true
  %24 = zext i1 %23 to i32
  %25 = sext i32 %24 to i64
  %26 = call i64 @llvm.expect.i64(i64 %25, i64 0)
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %21
  unreachable

29:                                               ; preds = %21
  br label %30

30:                                               ; preds = %29
  %31 = load %11*, %11** %2, align 8
  %32 = getelementptr inbounds %11, %11* %31, i32 0, i32 0
  %33 = bitcast %12* %32 to %58**
  %34 = load %58*, %58** %33, align 8
  %35 = getelementptr inbounds %58, %58* %34, i32 0, i32 0
  %36 = getelementptr inbounds %6, %6* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  ret i32 %37
}

declare dso_local void @_zval_copy_ctor_func(%11*) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @127(%11* %0) #3 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %11*, %11** %2, align 8
  %5 = getelementptr inbounds %11, %11* %4, i32 0, i32 1
  %6 = bitcast %13* %5 to %59*
  %7 = getelementptr inbounds %59, %59* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  unreachable

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18
  %20 = load %11*, %11** %2, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 0
  %22 = bitcast %12* %21 to %58**
  %23 = load %58*, %58** %22, align 8
  %24 = getelementptr inbounds %58, %58* %23, i32 0, i32 0
  %25 = getelementptr inbounds %6, %6* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %25, align 4
  ret i32 %27
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_get_parameters_ex(i32 %0, ...) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [1 x %57], align 16
  %6 = alloca %11**, align 8
  %7 = alloca %11*, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #2
  %10 = bitcast [1 x %57]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %10) #2
  %11 = bitcast %11*** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %14 = bitcast %4* %13 to %11*
  %15 = getelementptr inbounds %11, %11* %14, i64 5
  store %11* %15, %11** %7, align 8
  %16 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %17 = getelementptr inbounds %4, %4* %16, i32 0, i32 4
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 2
  %19 = bitcast %14* %18 to i32*
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %4, align 4
  %21 = load i32, i32* %3, align 4
  %22 = load i32, i32* %4, align 4
  %23 = icmp sgt i32 %21, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %1
  store i32 -1, i32* %2, align 4
  store i32 1, i32* %8, align 4
  br label %58

25:                                               ; preds = %1
  %26 = getelementptr inbounds [1 x %57], [1 x %57]* %5, i32 0, i32 0
  %27 = bitcast %57* %26 to i8*
  call void @llvm.va_start(i8* %27)
  br label %28

28:                                               ; preds = %48, %25
  %29 = load i32, i32* %3, align 4
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %3, align 4
  %31 = icmp sgt i32 %29, 0
  br i1 %31, label %32, label %55

32:                                               ; preds = %28
  %33 = getelementptr inbounds [1 x %57], [1 x %57]* %5, i32 0, i32 0
  %34 = getelementptr inbounds %57, %57* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 16
  %36 = icmp ule i32 %35, 40
  br i1 %36, label %37, label %43

37:                                               ; preds = %32
  %38 = getelementptr inbounds %57, %57* %33, i32 0, i32 3
  %39 = load i8*, i8** %38, align 16
  %40 = getelementptr i8, i8* %39, i32 %35
  %41 = bitcast i8* %40 to %11***
  %42 = add i32 %35, 8
  store i32 %42, i32* %34, align 16
  br label %48

43:                                               ; preds = %32
  %44 = getelementptr inbounds %57, %57* %33, i32 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %11***
  %47 = getelementptr i8, i8* %45, i32 8
  store i8* %47, i8** %44, align 8
  br label %48

48:                                               ; preds = %43, %37
  %49 = phi %11*** [ %41, %37 ], [ %46, %43 ]
  %50 = load %11**, %11*** %49, align 8
  store %11** %50, %11*** %6, align 8
  %51 = load %11*, %11** %7, align 8
  %52 = load %11**, %11*** %6, align 8
  store %11* %51, %11** %52, align 8
  %53 = load %11*, %11** %7, align 8
  %54 = getelementptr inbounds %11, %11* %53, i32 1
  store %11* %54, %11** %7, align 8
  br label %28

55:                                               ; preds = %28
  %56 = getelementptr inbounds [1 x %57], [1 x %57]* %5, i32 0, i32 0
  %57 = bitcast %57* %56 to i8*
  call void @llvm.va_end(i8* %57)
  store i32 0, i32* %2, align 4
  store i32 1, i32* %8, align 4
  br label %58

58:                                               ; preds = %55, %24
  %59 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #2
  %60 = bitcast %11*** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #2
  %61 = bitcast [1 x %57]* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %61) #2
  %62 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %62) #2
  %63 = load i32, i32* %2, align 4
  ret i32 %63
}

; Function Attrs: nounwind uwtable
define dso_local i32 @_zend_get_parameters_array_ex(i32 %0, %11* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %11*, align 8
  %10 = alloca %11*, align 8
  %11 = alloca %58*, align 8
  %12 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store %11* %1, %11** %5, align 8
  %13 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #2
  %15 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %16 = bitcast %4* %15 to %11*
  %17 = getelementptr inbounds %11, %11* %16, i64 5
  store %11* %17, %11** %6, align 8
  %18 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %19 = getelementptr inbounds %4, %4* %18, i32 0, i32 4
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 2
  %21 = bitcast %14* %20 to i32*
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %7, align 4
  %23 = load i32, i32* %4, align 4
  %24 = load i32, i32* %7, align 4
  %25 = icmp sgt i32 %23, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %2
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %70

27:                                               ; preds = %2
  br label %28

28:                                               ; preds = %64, %27
  %29 = load i32, i32* %4, align 4
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %4, align 4
  %31 = icmp sgt i32 %29, 0
  br i1 %31, label %32, label %69

32:                                               ; preds = %28
  br label %33

33:                                               ; preds = %32
  %34 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #2
  %35 = load %11*, %11** %5, align 8
  store %11* %35, %11** %9, align 8
  %36 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #2
  %37 = load %11*, %11** %6, align 8
  store %11* %37, %11** %10, align 8
  %38 = bitcast %58** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #2
  %39 = load %11*, %11** %10, align 8
  %40 = getelementptr inbounds %11, %11* %39, i32 0, i32 0
  %41 = bitcast %12* %40 to %58**
  %42 = load %58*, %58** %41, align 8
  store %58* %42, %58** %11, align 8
  %43 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #2
  %44 = load %11*, %11** %10, align 8
  %45 = getelementptr inbounds %11, %11* %44, i32 0, i32 1
  %46 = bitcast %13* %45 to i32*
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %12, align 4
  br label %48

48:                                               ; preds = %33
  %49 = load %58*, %58** %11, align 8
  %50 = load %11*, %11** %9, align 8
  %51 = getelementptr inbounds %11, %11* %50, i32 0, i32 0
  %52 = bitcast %12* %51 to %58**
  store %58* %49, %58** %52, align 8
  %53 = load i32, i32* %12, align 4
  %54 = load %11*, %11** %9, align 8
  %55 = getelementptr inbounds %11, %11* %54, i32 0, i32 1
  %56 = bitcast %13* %55 to i32*
  store i32 %53, i32* %56, align 8
  br label %57

57:                                               ; preds = %48
  br label %58

58:                                               ; preds = %57
  %59 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %59) #2
  %60 = bitcast %58** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #2
  %61 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #2
  %62 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #2
  br label %63

63:                                               ; preds = %58
  br label %64

64:                                               ; preds = %63
  %65 = load %11*, %11** %5, align 8
  %66 = getelementptr inbounds %11, %11* %65, i32 1
  store %11* %66, %11** %5, align 8
  %67 = load %11*, %11** %6, align 8
  %68 = getelementptr inbounds %11, %11* %67, i32 1
  store %11* %68, %11** %6, align 8
  br label %28

69:                                               ; preds = %28
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %70

70:                                               ; preds = %69, %26
  %71 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %71) #2
  %72 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #2
  %73 = load i32, i32* %3, align 4
  ret i32 %73
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_copy_parameters_array(i32 %0, %11* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store %11* %1, %11** %5, align 8
  %9 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #2
  %11 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %12 = bitcast %4* %11 to %11*
  %13 = getelementptr inbounds %11, %11* %12, i64 5
  store %11* %13, %11** %6, align 8
  %14 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %15 = getelementptr inbounds %4, %4* %14, i32 0, i32 4
  %16 = getelementptr inbounds %11, %11* %15, i32 0, i32 2
  %17 = bitcast %14* %16 to i32*
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %7, align 4
  %19 = load i32, i32* %4, align 4
  %20 = load i32, i32* %7, align 4
  %21 = icmp sgt i32 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %50

23:                                               ; preds = %2
  br label %24

24:                                               ; preds = %40, %23
  %25 = load i32, i32* %4, align 4
  %26 = add nsw i32 %25, -1
  store i32 %26, i32* %4, align 4
  %27 = icmp sgt i32 %25, 0
  br i1 %27, label %28, label %49

28:                                               ; preds = %24
  %29 = load %11*, %11** %6, align 8
  %30 = getelementptr inbounds %11, %11* %29, i32 0, i32 1
  %31 = bitcast %13* %30 to %59*
  %32 = getelementptr inbounds %59, %59* %31, i32 0, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = and i32 %34, 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %28
  %38 = load %11*, %11** %6, align 8
  %39 = call i32 @128(%11* %38)
  br label %40

40:                                               ; preds = %37, %28
  %41 = load %11*, %11** %5, align 8
  %42 = getelementptr inbounds %11, %11* %41, i32 0, i32 0
  %43 = bitcast %12* %42 to %5**
  %44 = load %5*, %5** %43, align 8
  %45 = load %11*, %11** %6, align 8
  %46 = call %11* @_zend_hash_next_index_insert_new(%5* %44, %11* %45)
  %47 = load %11*, %11** %6, align 8
  %48 = getelementptr inbounds %11, %11* %47, i32 1
  store %11* %48, %11** %6, align 8
  br label %24

49:                                               ; preds = %24
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %50

50:                                               ; preds = %49, %22
  %51 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %51) #2
  %52 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #2
  %53 = load i32, i32* %3, align 4
  ret i32 %53
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @128(%11* %0) #3 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %11*, %11** %2, align 8
  %5 = getelementptr inbounds %11, %11* %4, i32 0, i32 1
  %6 = bitcast %13* %5 to %59*
  %7 = getelementptr inbounds %59, %59* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  unreachable

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18
  %20 = load %11*, %11** %2, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 0
  %22 = bitcast %12* %21 to %58**
  %23 = load %58*, %58** %22, align 8
  %24 = getelementptr inbounds %58, %58* %23, i32 0, i32 0
  %25 = getelementptr inbounds %6, %6* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, 1
  store i32 %27, i32* %25, align 4
  ret i32 %27
}

declare dso_local %11* @_zend_hash_next_index_insert_new(%5*, %11*) #4

; Function Attrs: nounwind uwtable
define dso_local void @zend_wrong_param_count() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #2
  %4 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #2
  %5 = call i8* @get_active_class_name(i8** %1)
  store i8* %5, i8** %2, align 8
  %6 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 5
  %8 = load %4*, %4** %7, align 8
  %9 = icmp ne %4* %8, null
  br i1 %9, label %10, label %28

10:                                               ; preds = %0
  %11 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %12 = getelementptr inbounds %4, %4* %11, i32 0, i32 5
  %13 = load %4*, %4** %12, align 8
  %14 = getelementptr inbounds %4, %4* %13, i32 0, i32 3
  %15 = load %37*, %37** %14, align 8
  %16 = icmp ne %37* %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %10
  %18 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %19 = getelementptr inbounds %4, %4* %18, i32 0, i32 5
  %20 = load %4*, %4** %19, align 8
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 3
  %22 = load %37*, %37** %21, align 8
  %23 = bitcast %37* %22 to %60*
  %24 = getelementptr inbounds %60, %60* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, -2147483648
  %27 = icmp ne i32 %26, 0
  br label %28

28:                                               ; preds = %17, %10, %0
  %29 = phi i1 [ false, %10 ], [ false, %0 ], [ %27, %17 ]
  %30 = zext i1 %29 to i32
  %31 = trunc i32 %30 to i8
  %32 = load i8*, i8** %2, align 8
  %33 = load i8*, i8** %1, align 8
  %34 = call i8* @get_active_function_name()
  call void (i8, i8*, ...) @zend_internal_argument_count_error(i8 zeroext %31, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @0, i32 0, i32 0), i8* %32, i8* %33, i8* %34)
  %35 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #2
  %36 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #2
  ret void
}

declare dso_local i8* @get_active_class_name(i8**) #4

declare dso_local void @zend_internal_argument_count_error(i8 zeroext, i8*, ...) #4

declare dso_local i8* @get_active_function_name() #4

; Function Attrs: nounwind uwtable
define dso_local i8* @zend_get_type_by_const(i32 %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %16 [
    i32 2, label %5
    i32 3, label %5
    i32 13, label %5
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 8, label %9
    i32 9, label %10
    i32 1, label %11
    i32 14, label %12
    i32 19, label %13
    i32 7, label %14
    i32 18, label %15
  ]

5:                                                ; preds = %1, %1, %1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0), i8** %2, align 8
  br label %17

6:                                                ; preds = %1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i32 0, i32 0), i8** %2, align 8
  br label %17

7:                                                ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0), i8** %2, align 8
  br label %17

8:                                                ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i32 0, i32 0), i8** %2, align 8
  br label %17

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @5, i32 0, i32 0), i8** %2, align 8
  br label %17

10:                                               ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @6, i32 0, i32 0), i8** %2, align 8
  br label %17

11:                                               ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8** %2, align 8
  br label %17

12:                                               ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @8, i32 0, i32 0), i8** %2, align 8
  br label %17

13:                                               ; preds = %1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @9, i32 0, i32 0), i8** %2, align 8
  br label %17

14:                                               ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @10, i32 0, i32 0), i8** %2, align 8
  br label %17

15:                                               ; preds = %1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8** %2, align 8
  br label %17

16:                                               ; preds = %1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @12, i32 0, i32 0), i8** %2, align 8
  br label %17

17:                                               ; preds = %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %18 = load i8*, i8** %2, align 8
  ret i8* %18
}

; Function Attrs: nounwind uwtable
define dso_local i8* @zend_zval_type_name(%11* %0) #0 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %11*, %11** %2, align 8
  %5 = call zeroext i8 @125(%11* %4)
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %6, 10
  %8 = xor i1 %7, true
  %9 = xor i1 %8, true
  %10 = zext i1 %9 to i32
  %11 = sext i32 %10 to i64
  %12 = call i64 @llvm.expect.i64(i64 %11, i64 0)
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %3
  %15 = load %11*, %11** %2, align 8
  %16 = getelementptr inbounds %11, %11* %15, i32 0, i32 0
  %17 = bitcast %12* %16 to %61**
  %18 = load %61*, %61** %17, align 8
  %19 = getelementptr inbounds %61, %61* %18, i32 0, i32 1
  store %11* %19, %11** %2, align 8
  br label %20

20:                                               ; preds = %14, %3
  br label %21

21:                                               ; preds = %20
  %22 = load %11*, %11** %2, align 8
  %23 = call zeroext i8 @125(%11* %22)
  %24 = zext i8 %23 to i32
  %25 = call i8* @zend_get_type_by_const(i32 %24)
  ret i8* %25
}

; Function Attrs: nounwind readnone willreturn
declare i64 @llvm.expect.i64(i64, i64) #5

; Function Attrs: nounwind uwtable
define dso_local %10* @zend_zval_get_type(%11* %0) #0 {
  %2 = alloca %10*, align 8
  %3 = alloca %11*, align 8
  store %11* %0, %11** %3, align 8
  %4 = load %11*, %11** %3, align 8
  %5 = call zeroext i8 @125(%11* %4)
  %6 = zext i8 %5 to i32
  switch i32 %6, label %50 [
    i32 1, label %7
    i32 2, label %11
    i32 3, label %11
    i32 4, label %15
    i32 5, label %19
    i32 6, label %23
    i32 7, label %27
    i32 8, label %31
    i32 9, label %35
  ]

7:                                                ; preds = %1
  %8 = load %10**, %10*** @zend_known_strings, align 8
  %9 = getelementptr inbounds %10*, %10** %8, i64 37
  %10 = load %10*, %10** %9, align 8
  store %10* %10, %10** %2, align 8
  br label %51

11:                                               ; preds = %1, %1
  %12 = load %10**, %10*** @zend_known_strings, align 8
  %13 = getelementptr inbounds %10*, %10** %12, i64 38
  %14 = load %10*, %10** %13, align 8
  store %10* %14, %10** %2, align 8
  br label %51

15:                                               ; preds = %1
  %16 = load %10**, %10*** @zend_known_strings, align 8
  %17 = getelementptr inbounds %10*, %10** %16, i64 39
  %18 = load %10*, %10** %17, align 8
  store %10* %18, %10** %2, align 8
  br label %51

19:                                               ; preds = %1
  %20 = load %10**, %10*** @zend_known_strings, align 8
  %21 = getelementptr inbounds %10*, %10** %20, i64 40
  %22 = load %10*, %10** %21, align 8
  store %10* %22, %10** %2, align 8
  br label %51

23:                                               ; preds = %1
  %24 = load %10**, %10*** @zend_known_strings, align 8
  %25 = getelementptr inbounds %10*, %10** %24, i64 27
  %26 = load %10*, %10** %25, align 8
  store %10* %26, %10** %2, align 8
  br label %51

27:                                               ; preds = %1
  %28 = load %10**, %10*** @zend_known_strings, align 8
  %29 = getelementptr inbounds %10*, %10** %28, i64 41
  %30 = load %10*, %10** %29, align 8
  store %10* %30, %10** %2, align 8
  br label %51

31:                                               ; preds = %1
  %32 = load %10**, %10*** @zend_known_strings, align 8
  %33 = getelementptr inbounds %10*, %10** %32, i64 4
  %34 = load %10*, %10** %33, align 8
  store %10* %34, %10** %2, align 8
  br label %51

35:                                               ; preds = %1
  %36 = load %11*, %11** %3, align 8
  %37 = getelementptr inbounds %11, %11* %36, i32 0, i32 0
  %38 = bitcast %12* %37 to %62**
  %39 = load %62*, %62** %38, align 8
  %40 = call i8* @zend_rsrc_list_get_rsrc_type(%62* %39)
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = load %10**, %10*** @zend_known_strings, align 8
  %44 = getelementptr inbounds %10*, %10** %43, i64 42
  %45 = load %10*, %10** %44, align 8
  store %10* %45, %10** %2, align 8
  br label %51

46:                                               ; preds = %35
  %47 = load %10**, %10*** @zend_known_strings, align 8
  %48 = getelementptr inbounds %10*, %10** %47, i64 43
  %49 = load %10*, %10** %48, align 8
  store %10* %49, %10** %2, align 8
  br label %51

50:                                               ; preds = %1
  store %10* null, %10** %2, align 8
  br label %51

51:                                               ; preds = %50, %46, %42, %31, %27, %23, %19, %15, %11, %7
  %52 = load %10*, %10** %2, align 8
  ret %10* %52
}

declare dso_local i8* @zend_rsrc_list_get_rsrc_type(%62*) #4

; Function Attrs: nounwind uwtable
define dso_local void @zend_wrong_parameters_count_error(i8 zeroext %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %37*, align 8
  %10 = alloca i8*, align 8
  store i8 %0, i8* %5, align 1
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %11 = bitcast %37** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %13 = getelementptr inbounds %4, %4* %12, i32 0, i32 3
  %14 = load %37*, %37** %13, align 8
  store %37* %14, %37** %9, align 8
  %15 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  %16 = load %37*, %37** %9, align 8
  %17 = bitcast %37* %16 to %60*
  %18 = getelementptr inbounds %60, %60* %17, i32 0, i32 4
  %19 = load %16*, %16** %18, align 8
  %20 = icmp ne %16* %19, null
  br i1 %20, label %21, label %30

21:                                               ; preds = %4
  %22 = load %37*, %37** %9, align 8
  %23 = bitcast %37* %22 to %60*
  %24 = getelementptr inbounds %60, %60* %23, i32 0, i32 4
  %25 = load %16*, %16** %24, align 8
  %26 = getelementptr inbounds %16, %16* %25, i32 0, i32 1
  %27 = load %10*, %10** %26, align 8
  %28 = getelementptr inbounds %10, %10* %27, i32 0, i32 3
  %29 = getelementptr inbounds [1 x i8], [1 x i8]* %28, i32 0, i32 0
  br label %31

30:                                               ; preds = %4
  br label %31

31:                                               ; preds = %30, %21
  %32 = phi i8* [ %29, %21 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), %30 ]
  store i8* %32, i8** %10, align 8
  %33 = load i8, i8* %5, align 1
  %34 = zext i8 %33 to i32
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %61, label %36

36:                                               ; preds = %31
  %37 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %38 = getelementptr inbounds %4, %4* %37, i32 0, i32 5
  %39 = load %4*, %4** %38, align 8
  %40 = icmp ne %4* %39, null
  br i1 %40, label %41, label %59

41:                                               ; preds = %36
  %42 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %43 = getelementptr inbounds %4, %4* %42, i32 0, i32 5
  %44 = load %4*, %4** %43, align 8
  %45 = getelementptr inbounds %4, %4* %44, i32 0, i32 3
  %46 = load %37*, %37** %45, align 8
  %47 = icmp ne %37* %46, null
  br i1 %47, label %48, label %59

48:                                               ; preds = %41
  %49 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 5
  %51 = load %4*, %4** %50, align 8
  %52 = getelementptr inbounds %4, %4* %51, i32 0, i32 3
  %53 = load %37*, %37** %52, align 8
  %54 = bitcast %37* %53 to %60*
  %55 = getelementptr inbounds %60, %60* %54, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, -2147483648
  %58 = icmp ne i32 %57, 0
  br label %59

59:                                               ; preds = %48, %41, %36
  %60 = phi i1 [ false, %41 ], [ false, %36 ], [ %58, %48 ]
  br label %61

61:                                               ; preds = %59, %31
  %62 = phi i1 [ true, %31 ], [ %60, %59 ]
  %63 = zext i1 %62 to i32
  %64 = trunc i32 %63 to i8
  %65 = load i8*, i8** %10, align 8
  %66 = load i8*, i8** %10, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 0
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i32
  %70 = icmp ne i32 %69, 0
  %71 = zext i1 %70 to i64
  %72 = select i1 %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0)
  %73 = load %37*, %37** %9, align 8
  %74 = bitcast %37* %73 to %60*
  %75 = getelementptr inbounds %60, %60* %74, i32 0, i32 3
  %76 = load %10*, %10** %75, align 8
  %77 = getelementptr inbounds %10, %10* %76, i32 0, i32 3
  %78 = getelementptr inbounds [1 x i8], [1 x i8]* %77, i32 0, i32 0
  %79 = load i32, i32* %7, align 4
  %80 = load i32, i32* %8, align 4
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %83

82:                                               ; preds = %61
  br label %89

83:                                               ; preds = %61
  %84 = load i32, i32* %6, align 4
  %85 = load i32, i32* %7, align 4
  %86 = icmp slt i32 %84, %85
  %87 = zext i1 %86 to i64
  %88 = select i1 %86, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @18, i32 0, i32 0)
  br label %89

89:                                               ; preds = %83, %82
  %90 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @16, i32 0, i32 0), %82 ], [ %88, %83 ]
  %91 = load i32, i32* %6, align 4
  %92 = load i32, i32* %7, align 4
  %93 = icmp slt i32 %91, %92
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  %95 = load i32, i32* %7, align 4
  br label %98

96:                                               ; preds = %89
  %97 = load i32, i32* %8, align 4
  br label %98

98:                                               ; preds = %96, %94
  %99 = phi i32 [ %95, %94 ], [ %97, %96 ]
  %100 = load i32, i32* %6, align 4
  %101 = load i32, i32* %7, align 4
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = load i32, i32* %7, align 4
  br label %107

105:                                              ; preds = %98
  %106 = load i32, i32* %8, align 4
  br label %107

107:                                              ; preds = %105, %103
  %108 = phi i32 [ %104, %103 ], [ %106, %105 ]
  %109 = icmp eq i32 %108, 1
  %110 = zext i1 %109 to i64
  %111 = select i1 %109, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0)
  %112 = load i32, i32* %6, align 4
  call void (i8, i8*, ...) @zend_internal_argument_count_error(i8 zeroext %64, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @14, i32 0, i32 0), i8* %65, i8* %72, i8* %78, i8* %90, i32 %99, i8* %111, i32 %112)
  %113 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #2
  %114 = bitcast %37** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_wrong_parameter_type_error(i8 zeroext %0, i32 %1, i32 %2, %11* %3) #0 {
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %11*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i8 %0, i8* %5, align 1
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store %11* %3, %11** %8, align 8
  %11 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = call i8* @get_active_class_name(i8** %9)
  store i8* %13, i8** %10, align 8
  %14 = load i8, i8* %5, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %4
  %18 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %19 = getelementptr inbounds %4, %4* %18, i32 0, i32 5
  %20 = load %4*, %4** %19, align 8
  %21 = icmp ne %4* %20, null
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 5
  %25 = load %4*, %4** %24, align 8
  %26 = getelementptr inbounds %4, %4* %25, i32 0, i32 3
  %27 = load %37*, %37** %26, align 8
  %28 = icmp ne %37* %27, null
  br i1 %28, label %29, label %40

29:                                               ; preds = %22
  %30 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %31 = getelementptr inbounds %4, %4* %30, i32 0, i32 5
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i32 0, i32 3
  %34 = load %37*, %37** %33, align 8
  %35 = bitcast %37* %34 to %60*
  %36 = getelementptr inbounds %60, %60* %35, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, -2147483648
  %39 = icmp ne i32 %38, 0
  br label %40

40:                                               ; preds = %29, %22, %17
  %41 = phi i1 [ false, %22 ], [ false, %17 ], [ %39, %29 ]
  br label %42

42:                                               ; preds = %40, %4
  %43 = phi i1 [ true, %4 ], [ %41, %40 ]
  %44 = zext i1 %43 to i32
  %45 = trunc i32 %44 to i8
  %46 = load i8*, i8** %10, align 8
  %47 = load i8*, i8** %9, align 8
  %48 = call i8* @get_active_function_name()
  %49 = load i32, i32* %6, align 4
  %50 = load i32, i32* %7, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds [10 x i8*], [10 x i8*]* @20, i64 0, i64 %51
  %53 = load i8*, i8** %52, align 8
  %54 = load %11*, %11** %8, align 8
  %55 = call i8* @zend_zval_type_name(%11* %54)
  call void (i8, i8*, ...) @zend_internal_type_error(i8 zeroext %45, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @23, i32 0, i32 0), i8* %46, i8* %47, i8* %48, i32 %49, i8* %53, i8* %55)
  %56 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #2
  %57 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #2
  ret void
}

declare dso_local void @zend_internal_type_error(i8 zeroext, i8*, ...) #4

; Function Attrs: nounwind uwtable
define dso_local void @zend_wrong_parameter_class_error(i8 zeroext %0, i32 %1, i8* %2, %11* %3) #0 {
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i8 %0, i8* %5, align 1
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store %11* %3, %11** %8, align 8
  %11 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = call i8* @get_active_class_name(i8** %9)
  store i8* %13, i8** %10, align 8
  %14 = load i8, i8* %5, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %4
  %18 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %19 = getelementptr inbounds %4, %4* %18, i32 0, i32 5
  %20 = load %4*, %4** %19, align 8
  %21 = icmp ne %4* %20, null
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %24 = getelementptr inbounds %4, %4* %23, i32 0, i32 5
  %25 = load %4*, %4** %24, align 8
  %26 = getelementptr inbounds %4, %4* %25, i32 0, i32 3
  %27 = load %37*, %37** %26, align 8
  %28 = icmp ne %37* %27, null
  br i1 %28, label %29, label %40

29:                                               ; preds = %22
  %30 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %31 = getelementptr inbounds %4, %4* %30, i32 0, i32 5
  %32 = load %4*, %4** %31, align 8
  %33 = getelementptr inbounds %4, %4* %32, i32 0, i32 3
  %34 = load %37*, %37** %33, align 8
  %35 = bitcast %37* %34 to %60*
  %36 = getelementptr inbounds %60, %60* %35, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, -2147483648
  %39 = icmp ne i32 %38, 0
  br label %40

40:                                               ; preds = %29, %22, %17
  %41 = phi i1 [ false, %22 ], [ false, %17 ], [ %39, %29 ]
  br label %42

42:                                               ; preds = %40, %4
  %43 = phi i1 [ true, %4 ], [ %41, %40 ]
  %44 = zext i1 %43 to i32
  %45 = trunc i32 %44 to i8
  %46 = load i8*, i8** %10, align 8
  %47 = load i8*, i8** %9, align 8
  %48 = call i8* @get_active_function_name()
  %49 = load i32, i32* %6, align 4
  %50 = load i8*, i8** %7, align 8
  %51 = load %11*, %11** %8, align 8
  %52 = call i8* @zend_zval_type_name(%11* %51)
  call void (i8, i8*, ...) @zend_internal_type_error(i8 zeroext %45, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @23, i32 0, i32 0), i8* %46, i8* %47, i8* %48, i32 %49, i8* %50, i8* %52)
  %53 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #2
  %54 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_wrong_callback_error(i8 zeroext %0, i32 %1, i32 %2, i8* %3) #0 {
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i8 %0, i8* %5, align 1
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %11 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = call i8* @get_active_class_name(i8** %9)
  store i8* %13, i8** %10, align 8
  %14 = load i32, i32* %6, align 4
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %54

16:                                               ; preds = %4
  %17 = load i8, i8* %5, align 1
  %18 = zext i8 %17 to i32
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %45, label %20

20:                                               ; preds = %16
  %21 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 5
  %23 = load %4*, %4** %22, align 8
  %24 = icmp ne %4* %23, null
  br i1 %24, label %25, label %43

25:                                               ; preds = %20
  %26 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %27 = getelementptr inbounds %4, %4* %26, i32 0, i32 5
  %28 = load %4*, %4** %27, align 8
  %29 = getelementptr inbounds %4, %4* %28, i32 0, i32 3
  %30 = load %37*, %37** %29, align 8
  %31 = icmp ne %37* %30, null
  br i1 %31, label %32, label %43

32:                                               ; preds = %25
  %33 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %34 = getelementptr inbounds %4, %4* %33, i32 0, i32 5
  %35 = load %4*, %4** %34, align 8
  %36 = getelementptr inbounds %4, %4* %35, i32 0, i32 3
  %37 = load %37*, %37** %36, align 8
  %38 = bitcast %37* %37 to %60*
  %39 = getelementptr inbounds %60, %60* %38, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, -2147483648
  %42 = icmp ne i32 %41, 0
  br label %43

43:                                               ; preds = %32, %25, %20
  %44 = phi i1 [ false, %25 ], [ false, %20 ], [ %42, %32 ]
  br label %45

45:                                               ; preds = %43, %16
  %46 = phi i1 [ true, %16 ], [ %44, %43 ]
  %47 = zext i1 %46 to i32
  %48 = trunc i32 %47 to i8
  %49 = load i8*, i8** %10, align 8
  %50 = load i8*, i8** %9, align 8
  %51 = call i8* @get_active_function_name()
  %52 = load i32, i32* %7, align 4
  %53 = load i8*, i8** %8, align 8
  call void (i8, i8*, ...) @zend_internal_type_error(i8 zeroext %48, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @24, i32 0, i32 0), i8* %49, i8* %50, i8* %51, i32 %52, i8* %53)
  br label %72

54:                                               ; preds = %4
  %55 = load i32, i32* %6, align 4
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %64

57:                                               ; preds = %54
  %58 = load %16*, %16** @zend_ce_type_error, align 8
  %59 = load i8*, i8** %10, align 8
  %60 = load i8*, i8** %9, align 8
  %61 = call i8* @get_active_function_name()
  %62 = load i32, i32* %7, align 4
  %63 = load i8*, i8** %8, align 8
  call void (%16*, i8*, ...) @zend_throw_error(%16* %58, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @24, i32 0, i32 0), i8* %59, i8* %60, i8* %61, i32 %62, i8* %63)
  br label %71

64:                                               ; preds = %54
  %65 = load i32, i32* %6, align 4
  %66 = load i8*, i8** %10, align 8
  %67 = load i8*, i8** %9, align 8
  %68 = call i8* @get_active_function_name()
  %69 = load i32, i32* %7, align 4
  %70 = load i8*, i8** %8, align 8
  call void (i32, i8*, ...) @zend_error(i32 %65, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @24, i32 0, i32 0), i8* %66, i8* %67, i8* %68, i32 %69, i8* %70)
  br label %71

71:                                               ; preds = %64, %57
  br label %72

72:                                               ; preds = %71, %45
  %73 = load i8*, i8** %8, align 8
  call void @_efree(i8* %73)
  %74 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #2
  %75 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #2
  ret void
}

declare dso_local void @zend_throw_error(%16*, i8*, ...) #4

declare dso_local void @zend_error(i32, i8*, ...) #4

declare dso_local void @_efree(i8*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_class(%11* %0, %16** %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %11*, align 8
  %7 = alloca %16**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %16*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store %11* %0, %11** %6, align 8
  store %16** %1, %16*** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %16 = bitcast %16** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load %16**, %16*** %7, align 8
  %18 = load %16*, %16** %17, align 8
  store %16* %18, %16** %10, align 8
  %19 = load i32, i32* %9, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %4
  %22 = load %11*, %11** %6, align 8
  %23 = call zeroext i8 @125(%11* %22)
  %24 = zext i8 %23 to i32
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = load %16**, %16*** %7, align 8
  store %16* null, %16** %27, align 8
  store i32 1, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %156

28:                                               ; preds = %21, %4
  %29 = load %11*, %11** %6, align 8
  %30 = call zeroext i8 @125(%11* %29)
  %31 = zext i8 %30 to i32
  %32 = icmp ne i32 %31, 6
  br i1 %32, label %33, label %41

33:                                               ; preds = %28
  %34 = load %11*, %11** %6, align 8
  %35 = call zeroext i8 @125(%11* %34)
  %36 = zext i8 %35 to i32
  %37 = icmp ne i32 %36, 6
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  %39 = load %11*, %11** %6, align 8
  call void @_convert_to_string(%11* %39)
  br label %40

40:                                               ; preds = %38, %33
  br label %41

41:                                               ; preds = %40, %28
  %42 = load %11*, %11** %6, align 8
  %43 = getelementptr inbounds %11, %11* %42, i32 0, i32 0
  %44 = bitcast %12* %43 to %10**
  %45 = load %10*, %10** %44, align 8
  %46 = call %16* @zend_lookup_class(%10* %45)
  %47 = load %16**, %16*** %7, align 8
  store %16* %46, %16** %47, align 8
  %48 = load %16*, %16** %10, align 8
  %49 = icmp ne %16* %48, null
  br i1 %49, label %50, label %109

50:                                               ; preds = %41
  %51 = load %16**, %16*** %7, align 8
  %52 = load %16*, %16** %51, align 8
  %53 = icmp ne %16* %52, null
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = load %16**, %16*** %7, align 8
  %56 = load %16*, %16** %55, align 8
  %57 = load %16*, %16** %10, align 8
  %58 = call zeroext i8 @instanceof_function(%16* %56, %16* %57)
  %59 = icmp ne i8 %58, 0
  br i1 %59, label %108, label %60

60:                                               ; preds = %54, %50
  %61 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #2
  %62 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #2
  %63 = call i8* @get_active_class_name(i8** %12)
  store i8* %63, i8** %13, align 8
  %64 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %65 = getelementptr inbounds %4, %4* %64, i32 0, i32 5
  %66 = load %4*, %4** %65, align 8
  %67 = icmp ne %4* %66, null
  br i1 %67, label %68, label %86

68:                                               ; preds = %60
  %69 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %70 = getelementptr inbounds %4, %4* %69, i32 0, i32 5
  %71 = load %4*, %4** %70, align 8
  %72 = getelementptr inbounds %4, %4* %71, i32 0, i32 3
  %73 = load %37*, %37** %72, align 8
  %74 = icmp ne %37* %73, null
  br i1 %74, label %75, label %86

75:                                               ; preds = %68
  %76 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %77 = getelementptr inbounds %4, %4* %76, i32 0, i32 5
  %78 = load %4*, %4** %77, align 8
  %79 = getelementptr inbounds %4, %4* %78, i32 0, i32 3
  %80 = load %37*, %37** %79, align 8
  %81 = bitcast %37* %80 to %60*
  %82 = getelementptr inbounds %60, %60* %81, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, -2147483648
  %85 = icmp ne i32 %84, 0
  br label %86

86:                                               ; preds = %75, %68, %60
  %87 = phi i1 [ false, %68 ], [ false, %60 ], [ %85, %75 ]
  %88 = zext i1 %87 to i32
  %89 = trunc i32 %88 to i8
  %90 = load i8*, i8** %13, align 8
  %91 = load i8*, i8** %12, align 8
  %92 = call i8* @get_active_function_name()
  %93 = load i32, i32* %8, align 4
  %94 = load %16*, %16** %10, align 8
  %95 = getelementptr inbounds %16, %16* %94, i32 0, i32 1
  %96 = load %10*, %10** %95, align 8
  %97 = getelementptr inbounds %10, %10* %96, i32 0, i32 3
  %98 = getelementptr inbounds [1 x i8], [1 x i8]* %97, i32 0, i32 0
  %99 = load %11*, %11** %6, align 8
  %100 = getelementptr inbounds %11, %11* %99, i32 0, i32 0
  %101 = bitcast %12* %100 to %10**
  %102 = load %10*, %10** %101, align 8
  %103 = getelementptr inbounds %10, %10* %102, i32 0, i32 3
  %104 = getelementptr inbounds [1 x i8], [1 x i8]* %103, i32 0, i32 0
  call void (i8, i8*, ...) @zend_internal_type_error(i8 zeroext %89, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @25, i32 0, i32 0), i8* %90, i8* %91, i8* %92, i32 %93, i8* %98, i8* %104)
  %105 = load %16**, %16*** %7, align 8
  store %16* null, %16** %105, align 8
  store i32 0, i32* %5, align 4
  store i32 1, i32* %11, align 4
  %106 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %106) #2
  %107 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #2
  br label %156

108:                                              ; preds = %54
  br label %109

109:                                              ; preds = %108, %41
  %110 = load %16**, %16*** %7, align 8
  %111 = load %16*, %16** %110, align 8
  %112 = icmp ne %16* %111, null
  br i1 %112, label %155, label %113

113:                                              ; preds = %109
  %114 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %114) #2
  %115 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %115) #2
  %116 = call i8* @get_active_class_name(i8** %14)
  store i8* %116, i8** %15, align 8
  %117 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %118 = getelementptr inbounds %4, %4* %117, i32 0, i32 5
  %119 = load %4*, %4** %118, align 8
  %120 = icmp ne %4* %119, null
  br i1 %120, label %121, label %139

121:                                              ; preds = %113
  %122 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %123 = getelementptr inbounds %4, %4* %122, i32 0, i32 5
  %124 = load %4*, %4** %123, align 8
  %125 = getelementptr inbounds %4, %4* %124, i32 0, i32 3
  %126 = load %37*, %37** %125, align 8
  %127 = icmp ne %37* %126, null
  br i1 %127, label %128, label %139

128:                                              ; preds = %121
  %129 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %130 = getelementptr inbounds %4, %4* %129, i32 0, i32 5
  %131 = load %4*, %4** %130, align 8
  %132 = getelementptr inbounds %4, %4* %131, i32 0, i32 3
  %133 = load %37*, %37** %132, align 8
  %134 = bitcast %37* %133 to %60*
  %135 = getelementptr inbounds %60, %60* %134, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, -2147483648
  %138 = icmp ne i32 %137, 0
  br label %139

139:                                              ; preds = %128, %121, %113
  %140 = phi i1 [ false, %121 ], [ false, %113 ], [ %138, %128 ]
  %141 = zext i1 %140 to i32
  %142 = trunc i32 %141 to i8
  %143 = load i8*, i8** %15, align 8
  %144 = load i8*, i8** %14, align 8
  %145 = call i8* @get_active_function_name()
  %146 = load i32, i32* %8, align 4
  %147 = load %11*, %11** %6, align 8
  %148 = getelementptr inbounds %11, %11* %147, i32 0, i32 0
  %149 = bitcast %12* %148 to %10**
  %150 = load %10*, %10** %149, align 8
  %151 = getelementptr inbounds %10, %10* %150, i32 0, i32 3
  %152 = getelementptr inbounds [1 x i8], [1 x i8]* %151, i32 0, i32 0
  call void (i8, i8*, ...) @zend_internal_type_error(i8 zeroext %142, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @26, i32 0, i32 0), i8* %143, i8* %144, i8* %145, i32 %146, i8* %152)
  store i32 0, i32* %5, align 4
  store i32 1, i32* %11, align 4
  %153 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153) #2
  %154 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #2
  br label %156

155:                                              ; preds = %109
  store i32 1, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %156

156:                                              ; preds = %155, %139, %86, %26
  %157 = bitcast %16** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #2
  %158 = load i32, i32* %5, align 4
  ret i32 %158
}

declare dso_local void @_convert_to_string(%11*) #4

declare dso_local %16* @zend_lookup_class(%10*) #4

declare dso_local zeroext i8 @instanceof_function(%16*, %16*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_bool_weak(%11* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca i8*, align 8
  store %11* %0, %11** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load %11*, %11** %4, align 8
  %7 = call zeroext i8 @125(%11* %6)
  %8 = zext i8 %7 to i32
  %9 = icmp sle i32 %8, 6
  %10 = xor i1 %9, true
  %11 = xor i1 %10, true
  %12 = zext i1 %11 to i32
  %13 = sext i32 %12 to i64
  %14 = call i64 @llvm.expect.i64(i64 %13, i64 1)
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = load %11*, %11** %4, align 8
  %18 = call i32 @zend_is_true(%11* %17)
  %19 = trunc i32 %18 to i8
  %20 = load i8*, i8** %5, align 8
  store i8 %19, i8* %20, align 1
  br label %22

21:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %23

22:                                               ; preds = %16
  store i32 1, i32* %3, align 4
  br label %23

23:                                               ; preds = %22, %21
  %24 = load i32, i32* %3, align 4
  ret i32 %24
}

declare dso_local i32 @zend_is_true(%11*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_bool_slow(%11* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca i8*, align 8
  store %11* %0, %11** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 5
  %8 = load %4*, %4** %7, align 8
  %9 = icmp ne %4* %8, null
  br i1 %9, label %10, label %28

10:                                               ; preds = %2
  %11 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %12 = getelementptr inbounds %4, %4* %11, i32 0, i32 5
  %13 = load %4*, %4** %12, align 8
  %14 = getelementptr inbounds %4, %4* %13, i32 0, i32 3
  %15 = load %37*, %37** %14, align 8
  %16 = icmp ne %37* %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %10
  %18 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %19 = getelementptr inbounds %4, %4* %18, i32 0, i32 5
  %20 = load %4*, %4** %19, align 8
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 3
  %22 = load %37*, %37** %21, align 8
  %23 = bitcast %37* %22 to %60*
  %24 = getelementptr inbounds %60, %60* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, -2147483648
  %27 = icmp ne i32 %26, 0
  br label %28

28:                                               ; preds = %17, %10, %2
  %29 = phi i1 [ false, %10 ], [ false, %2 ], [ %27, %17 ]
  %30 = xor i1 %29, true
  %31 = xor i1 %30, true
  %32 = zext i1 %31 to i32
  %33 = sext i32 %32 to i64
  %34 = call i64 @llvm.expect.i64(i64 %33, i64 0)
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %28
  store i32 0, i32* %3, align 4
  br label %41

37:                                               ; preds = %28
  %38 = load %11*, %11** %4, align 8
  %39 = load i8*, i8** %5, align 8
  %40 = call i32 @zend_parse_arg_bool_weak(%11* %38, i8* %39)
  store i32 %40, i32* %3, align 4
  br label %41

41:                                               ; preds = %37, %36
  %42 = load i32, i32* %3, align 4
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_long_weak(%11* %0, i64* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %11* %0, %11** %4, align 8
  store i64* %1, i64** %5, align 8
  %9 = load %11*, %11** %4, align 8
  %10 = call zeroext i8 @125(%11* %9)
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 5
  %13 = xor i1 %12, true
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = call i64 @llvm.expect.i64(i64 %16, i64 1)
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %64

19:                                               ; preds = %2
  %20 = load %11*, %11** %4, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 0
  %22 = bitcast %12* %21 to double*
  %23 = load double, double* %22, align 8
  %24 = call i32 @__isnan(double %23) #16
  %25 = icmp ne i32 %24, 0
  %26 = xor i1 %25, true
  %27 = xor i1 %26, true
  %28 = zext i1 %27 to i32
  %29 = sext i32 %28 to i64
  %30 = call i64 @llvm.expect.i64(i64 %29, i64 0)
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %19
  store i32 0, i32* %3, align 4
  br label %173

33:                                               ; preds = %19
  %34 = load %11*, %11** %4, align 8
  %35 = getelementptr inbounds %11, %11* %34, i32 0, i32 0
  %36 = bitcast %12* %35 to double*
  %37 = load double, double* %36, align 8
  %38 = fcmp oge double %37, 0x43E0000000000000
  br i1 %38, label %45, label %39

39:                                               ; preds = %33
  %40 = load %11*, %11** %4, align 8
  %41 = getelementptr inbounds %11, %11* %40, i32 0, i32 0
  %42 = bitcast %12* %41 to double*
  %43 = load double, double* %42, align 8
  %44 = fcmp olt double %43, 0xC3E0000000000000
  br label %45

45:                                               ; preds = %39, %33
  %46 = phi i1 [ true, %33 ], [ %44, %39 ]
  %47 = xor i1 %46, true
  %48 = xor i1 %47, true
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %45
  store i32 0, i32* %3, align 4
  br label %173

56:                                               ; preds = %45
  %57 = load %11*, %11** %4, align 8
  %58 = getelementptr inbounds %11, %11* %57, i32 0, i32 0
  %59 = bitcast %12* %58 to double*
  %60 = load double, double* %59, align 8
  %61 = call i64 @129(double %60)
  %62 = load i64*, i64** %5, align 8
  store i64 %61, i64* %62, align 8
  br label %63

63:                                               ; preds = %56
  br label %172

64:                                               ; preds = %2
  %65 = load %11*, %11** %4, align 8
  %66 = call zeroext i8 @125(%11* %65)
  %67 = zext i8 %66 to i32
  %68 = icmp eq i32 %67, 6
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 1)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %142

75:                                               ; preds = %64
  %76 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #2
  %77 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %77) #2
  %78 = load %11*, %11** %4, align 8
  %79 = getelementptr inbounds %11, %11* %78, i32 0, i32 0
  %80 = bitcast %12* %79 to %10**
  %81 = load %10*, %10** %80, align 8
  %82 = load i64*, i64** %5, align 8
  %83 = call zeroext i8 @is_numeric_str_function(%10* %81, i64* %82, double* %6)
  %84 = zext i8 %83 to i32
  store i32 %84, i32* %7, align 4
  %85 = icmp ne i32 %84, 4
  %86 = xor i1 %85, true
  %87 = xor i1 %86, true
  %88 = zext i1 %87 to i32
  %89 = sext i32 %88 to i64
  %90 = call i64 @llvm.expect.i64(i64 %89, i64 0)
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %92, label %136

92:                                               ; preds = %75
  %93 = load i32, i32* %7, align 4
  %94 = icmp ne i32 %93, 0
  %95 = xor i1 %94, true
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 1)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %134

101:                                              ; preds = %92
  %102 = load double, double* %6, align 8
  %103 = call i32 @__isnan(double %102) #16
  %104 = icmp ne i32 %103, 0
  %105 = xor i1 %104, true
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.expect.i64(i64 %108, i64 0)
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %101
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %137

112:                                              ; preds = %101
  %113 = load double, double* %6, align 8
  %114 = fcmp oge double %113, 0x43E0000000000000
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = load double, double* %6, align 8
  %117 = fcmp olt double %116, 0xC3E0000000000000
  br label %118

118:                                              ; preds = %115, %112
  %119 = phi i1 [ true, %112 ], [ %117, %115 ]
  %120 = xor i1 %119, true
  %121 = xor i1 %120, true
  %122 = xor i1 %121, true
  %123 = xor i1 %122, true
  %124 = zext i1 %123 to i32
  %125 = sext i32 %124 to i64
  %126 = call i64 @llvm.expect.i64(i64 %125, i64 0)
  %127 = icmp ne i64 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %118
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %137

129:                                              ; preds = %118
  %130 = load double, double* %6, align 8
  %131 = call i64 @129(double %130)
  %132 = load i64*, i64** %5, align 8
  store i64 %131, i64* %132, align 8
  br label %133

133:                                              ; preds = %129
  br label %135

134:                                              ; preds = %92
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %137

135:                                              ; preds = %133
  br label %136

136:                                              ; preds = %135, %75
  store i32 0, i32* %8, align 4
  br label %137

137:                                              ; preds = %136, %134, %128, %111
  %138 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %138) #2
  %139 = bitcast double* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %139) #2
  %140 = load i32, i32* %8, align 4
  switch i32 %140, label %175 [
    i32 0, label %141
    i32 1, label %173
  ]

141:                                              ; preds = %137
  br label %171

142:                                              ; preds = %64
  %143 = load %11*, %11** %4, align 8
  %144 = call zeroext i8 @125(%11* %143)
  %145 = zext i8 %144 to i32
  %146 = icmp slt i32 %145, 3
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 1)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %142
  %154 = load i64*, i64** %5, align 8
  store i64 0, i64* %154, align 8
  br label %170

155:                                              ; preds = %142
  %156 = load %11*, %11** %4, align 8
  %157 = call zeroext i8 @125(%11* %156)
  %158 = zext i8 %157 to i32
  %159 = icmp eq i32 %158, 3
  %160 = xor i1 %159, true
  %161 = xor i1 %160, true
  %162 = zext i1 %161 to i32
  %163 = sext i32 %162 to i64
  %164 = call i64 @llvm.expect.i64(i64 %163, i64 1)
  %165 = icmp ne i64 %164, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %155
  %167 = load i64*, i64** %5, align 8
  store i64 1, i64* %167, align 8
  br label %169

168:                                              ; preds = %155
  store i32 0, i32* %3, align 4
  br label %173

169:                                              ; preds = %166
  br label %170

170:                                              ; preds = %169, %153
  br label %171

171:                                              ; preds = %170, %141
  br label %172

172:                                              ; preds = %171, %63
  store i32 1, i32* %3, align 4
  br label %173

173:                                              ; preds = %172, %168, %137, %55, %32
  %174 = load i32, i32* %3, align 4
  ret i32 %174

175:                                              ; preds = %137
  unreachable
}

; Function Attrs: nounwind readnone
declare dso_local i32 @__isnan(double) #6

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @129(double %0) #3 {
  %2 = alloca i64, align 8
  %3 = alloca double, align 8
  store double %0, double* %3, align 8
  %4 = load double, double* %3, align 8
  %5 = call double @llvm.fabs.f64(double %4) #17
  %6 = fcmp one double %5, 0x7FF0000000000000
  %7 = xor i1 %6, true
  %8 = xor i1 %7, true
  %9 = xor i1 %8, true
  %10 = zext i1 %9 to i32
  %11 = sext i32 %10 to i64
  %12 = call i64 @llvm.expect.i64(i64 %11, i64 0)
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %1
  %15 = load double, double* %3, align 8
  %16 = call i32 @__isnan(double %15) #16
  %17 = icmp ne i32 %16, 0
  %18 = xor i1 %17, true
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = call i64 @llvm.expect.i64(i64 %21, i64 0)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %14, %1
  store i64 0, i64* %2, align 8
  br label %38

25:                                               ; preds = %14
  %26 = load double, double* %3, align 8
  %27 = fcmp oge double %26, 0x43E0000000000000
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = load double, double* %3, align 8
  %30 = fcmp olt double %29, 0xC3E0000000000000
  br i1 %30, label %31, label %34

31:                                               ; preds = %28, %25
  %32 = load double, double* %3, align 8
  %33 = call i64 @zend_dval_to_lval_slow(double %32)
  store i64 %33, i64* %2, align 8
  br label %38

34:                                               ; preds = %28
  br label %35

35:                                               ; preds = %34
  %36 = load double, double* %3, align 8
  %37 = fptosi double %36 to i64
  store i64 %37, i64* %2, align 8
  br label %38

38:                                               ; preds = %35, %31, %24
  %39 = load i64, i64* %2, align 8
  ret i64 %39
}

declare dso_local zeroext i8 @is_numeric_str_function(%10*, i64*, double*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_long_slow(%11* %0, i64* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca i64*, align 8
  store %11* %0, %11** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 5
  %8 = load %4*, %4** %7, align 8
  %9 = icmp ne %4* %8, null
  br i1 %9, label %10, label %28

10:                                               ; preds = %2
  %11 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %12 = getelementptr inbounds %4, %4* %11, i32 0, i32 5
  %13 = load %4*, %4** %12, align 8
  %14 = getelementptr inbounds %4, %4* %13, i32 0, i32 3
  %15 = load %37*, %37** %14, align 8
  %16 = icmp ne %37* %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %10
  %18 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %19 = getelementptr inbounds %4, %4* %18, i32 0, i32 5
  %20 = load %4*, %4** %19, align 8
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 3
  %22 = load %37*, %37** %21, align 8
  %23 = bitcast %37* %22 to %60*
  %24 = getelementptr inbounds %60, %60* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, -2147483648
  %27 = icmp ne i32 %26, 0
  br label %28

28:                                               ; preds = %17, %10, %2
  %29 = phi i1 [ false, %10 ], [ false, %2 ], [ %27, %17 ]
  %30 = xor i1 %29, true
  %31 = xor i1 %30, true
  %32 = zext i1 %31 to i32
  %33 = sext i32 %32 to i64
  %34 = call i64 @llvm.expect.i64(i64 %33, i64 0)
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %28
  store i32 0, i32* %3, align 4
  br label %41

37:                                               ; preds = %28
  %38 = load %11*, %11** %4, align 8
  %39 = load i64*, i64** %5, align 8
  %40 = call i32 @zend_parse_arg_long_weak(%11* %38, i64* %39)
  store i32 %40, i32* %3, align 4
  br label %41

41:                                               ; preds = %37, %36
  %42 = load i32, i32* %3, align 4
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_long_cap_weak(%11* %0, i64* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %11* %0, %11** %4, align 8
  store i64* %1, i64** %5, align 8
  %9 = load %11*, %11** %4, align 8
  %10 = call zeroext i8 @125(%11* %9)
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 5
  %13 = xor i1 %12, true
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = call i64 @llvm.expect.i64(i64 %16, i64 1)
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %40

19:                                               ; preds = %2
  %20 = load %11*, %11** %4, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 0
  %22 = bitcast %12* %21 to double*
  %23 = load double, double* %22, align 8
  %24 = call i32 @__isnan(double %23) #16
  %25 = icmp ne i32 %24, 0
  %26 = xor i1 %25, true
  %27 = xor i1 %26, true
  %28 = zext i1 %27 to i32
  %29 = sext i32 %28 to i64
  %30 = call i64 @llvm.expect.i64(i64 %29, i64 0)
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %19
  store i32 0, i32* %3, align 4
  br label %131

33:                                               ; preds = %19
  %34 = load %11*, %11** %4, align 8
  %35 = getelementptr inbounds %11, %11* %34, i32 0, i32 0
  %36 = bitcast %12* %35 to double*
  %37 = load double, double* %36, align 8
  %38 = call i64 @130(double %37)
  %39 = load i64*, i64** %5, align 8
  store i64 %38, i64* %39, align 8
  br label %130

40:                                               ; preds = %2
  %41 = load %11*, %11** %4, align 8
  %42 = call zeroext i8 @125(%11* %41)
  %43 = zext i8 %42 to i32
  %44 = icmp eq i32 %43, 6
  %45 = xor i1 %44, true
  %46 = xor i1 %45, true
  %47 = zext i1 %46 to i32
  %48 = sext i32 %47 to i64
  %49 = call i64 @llvm.expect.i64(i64 %48, i64 1)
  %50 = icmp ne i64 %49, 0
  br i1 %50, label %51, label %100

51:                                               ; preds = %40
  %52 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #2
  %53 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #2
  %54 = load %11*, %11** %4, align 8
  %55 = getelementptr inbounds %11, %11* %54, i32 0, i32 0
  %56 = bitcast %12* %55 to %10**
  %57 = load %10*, %10** %56, align 8
  %58 = load i64*, i64** %5, align 8
  %59 = call zeroext i8 @is_numeric_str_function(%10* %57, i64* %58, double* %6)
  %60 = zext i8 %59 to i32
  store i32 %60, i32* %7, align 4
  %61 = icmp ne i32 %60, 4
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %94

68:                                               ; preds = %51
  %69 = load i32, i32* %7, align 4
  %70 = icmp ne i32 %69, 0
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 1)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %92

77:                                               ; preds = %68
  %78 = load double, double* %6, align 8
  %79 = call i32 @__isnan(double %78) #16
  %80 = icmp ne i32 %79, 0
  %81 = xor i1 %80, true
  %82 = xor i1 %81, true
  %83 = zext i1 %82 to i32
  %84 = sext i32 %83 to i64
  %85 = call i64 @llvm.expect.i64(i64 %84, i64 0)
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %77
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %95

88:                                               ; preds = %77
  %89 = load double, double* %6, align 8
  %90 = call i64 @130(double %89)
  %91 = load i64*, i64** %5, align 8
  store i64 %90, i64* %91, align 8
  br label %93

92:                                               ; preds = %68
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %95

93:                                               ; preds = %88
  br label %94

94:                                               ; preds = %93, %51
  store i32 0, i32* %8, align 4
  br label %95

95:                                               ; preds = %94, %92, %87
  %96 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %96) #2
  %97 = bitcast double* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %97) #2
  %98 = load i32, i32* %8, align 4
  switch i32 %98, label %133 [
    i32 0, label %99
    i32 1, label %131
  ]

99:                                               ; preds = %95
  br label %129

100:                                              ; preds = %40
  %101 = load %11*, %11** %4, align 8
  %102 = call zeroext i8 @125(%11* %101)
  %103 = zext i8 %102 to i32
  %104 = icmp slt i32 %103, 3
  %105 = xor i1 %104, true
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.expect.i64(i64 %108, i64 1)
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %100
  %112 = load i64*, i64** %5, align 8
  store i64 0, i64* %112, align 8
  br label %128

113:                                              ; preds = %100
  %114 = load %11*, %11** %4, align 8
  %115 = call zeroext i8 @125(%11* %114)
  %116 = zext i8 %115 to i32
  %117 = icmp eq i32 %116, 3
  %118 = xor i1 %117, true
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 1)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %113
  %125 = load i64*, i64** %5, align 8
  store i64 1, i64* %125, align 8
  br label %127

126:                                              ; preds = %113
  store i32 0, i32* %3, align 4
  br label %131

127:                                              ; preds = %124
  br label %128

128:                                              ; preds = %127, %111
  br label %129

129:                                              ; preds = %128, %99
  br label %130

130:                                              ; preds = %129, %33
  store i32 1, i32* %3, align 4
  br label %131

131:                                              ; preds = %130, %126, %95, %32
  %132 = load i32, i32* %3, align 4
  ret i32 %132

133:                                              ; preds = %95
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @130(double %0) #3 {
  %2 = alloca i64, align 8
  %3 = alloca double, align 8
  store double %0, double* %3, align 8
  %4 = load double, double* %3, align 8
  %5 = call double @llvm.fabs.f64(double %4) #17
  %6 = fcmp one double %5, 0x7FF0000000000000
  %7 = xor i1 %6, true
  %8 = xor i1 %7, true
  %9 = xor i1 %8, true
  %10 = zext i1 %9 to i32
  %11 = sext i32 %10 to i64
  %12 = call i64 @llvm.expect.i64(i64 %11, i64 0)
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %1
  %15 = load double, double* %3, align 8
  %16 = call i32 @__isnan(double %15) #16
  %17 = icmp ne i32 %16, 0
  %18 = xor i1 %17, true
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = call i64 @llvm.expect.i64(i64 %21, i64 0)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %14, %1
  store i64 0, i64* %2, align 8
  br label %40

25:                                               ; preds = %14
  %26 = load double, double* %3, align 8
  %27 = fcmp oge double %26, 0x43E0000000000000
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = load double, double* %3, align 8
  %30 = fcmp olt double %29, 0xC3E0000000000000
  br i1 %30, label %31, label %36

31:                                               ; preds = %28, %25
  %32 = load double, double* %3, align 8
  %33 = fcmp ogt double %32, 0.000000e+00
  %34 = zext i1 %33 to i64
  %35 = select i1 %33, i64 9223372036854775807, i64 -9223372036854775808
  store i64 %35, i64* %2, align 8
  br label %40

36:                                               ; preds = %28
  br label %37

37:                                               ; preds = %36
  %38 = load double, double* %3, align 8
  %39 = fptosi double %38 to i64
  store i64 %39, i64* %2, align 8
  br label %40

40:                                               ; preds = %37, %31, %24
  %41 = load i64, i64* %2, align 8
  ret i64 %41
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_long_cap_slow(%11* %0, i64* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca i64*, align 8
  store %11* %0, %11** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 5
  %8 = load %4*, %4** %7, align 8
  %9 = icmp ne %4* %8, null
  br i1 %9, label %10, label %28

10:                                               ; preds = %2
  %11 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %12 = getelementptr inbounds %4, %4* %11, i32 0, i32 5
  %13 = load %4*, %4** %12, align 8
  %14 = getelementptr inbounds %4, %4* %13, i32 0, i32 3
  %15 = load %37*, %37** %14, align 8
  %16 = icmp ne %37* %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %10
  %18 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %19 = getelementptr inbounds %4, %4* %18, i32 0, i32 5
  %20 = load %4*, %4** %19, align 8
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 3
  %22 = load %37*, %37** %21, align 8
  %23 = bitcast %37* %22 to %60*
  %24 = getelementptr inbounds %60, %60* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, -2147483648
  %27 = icmp ne i32 %26, 0
  br label %28

28:                                               ; preds = %17, %10, %2
  %29 = phi i1 [ false, %10 ], [ false, %2 ], [ %27, %17 ]
  %30 = xor i1 %29, true
  %31 = xor i1 %30, true
  %32 = zext i1 %31 to i32
  %33 = sext i32 %32 to i64
  %34 = call i64 @llvm.expect.i64(i64 %33, i64 0)
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %28
  store i32 0, i32* %3, align 4
  br label %41

37:                                               ; preds = %28
  %38 = load %11*, %11** %4, align 8
  %39 = load i64*, i64** %5, align 8
  %40 = call i32 @zend_parse_arg_long_cap_weak(%11* %38, i64* %39)
  store i32 %40, i32* %3, align 4
  br label %41

41:                                               ; preds = %37, %36
  %42 = load i32, i32* %3, align 4
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_double_weak(%11* %0, double* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca double*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %11* %0, %11** %4, align 8
  store double* %1, double** %5, align 8
  %9 = load %11*, %11** %4, align 8
  %10 = call zeroext i8 @125(%11* %9)
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 4
  %13 = xor i1 %12, true
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = call i64 @llvm.expect.i64(i64 %16, i64 1)
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %2
  %20 = load %11*, %11** %4, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 0
  %22 = bitcast %12* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sitofp i64 %23 to double
  %25 = load double*, double** %5, align 8
  store double %24, double* %25, align 8
  br label %105

26:                                               ; preds = %2
  %27 = load %11*, %11** %4, align 8
  %28 = call zeroext i8 @125(%11* %27)
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %29, 6
  %31 = xor i1 %30, true
  %32 = xor i1 %31, true
  %33 = zext i1 %32 to i32
  %34 = sext i32 %33 to i64
  %35 = call i64 @llvm.expect.i64(i64 %34, i64 1)
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %37, label %75

37:                                               ; preds = %26
  %38 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #2
  %39 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #2
  %40 = load %11*, %11** %4, align 8
  %41 = getelementptr inbounds %11, %11* %40, i32 0, i32 0
  %42 = bitcast %12* %41 to %10**
  %43 = load %10*, %10** %42, align 8
  %44 = load double*, double** %5, align 8
  %45 = call zeroext i8 @is_numeric_str_function(%10* %43, i64* %6, double* %44)
  %46 = zext i8 %45 to i32
  store i32 %46, i32* %7, align 4
  %47 = icmp ne i32 %46, 5
  %48 = xor i1 %47, true
  %49 = xor i1 %48, true
  %50 = zext i1 %49 to i32
  %51 = sext i32 %50 to i64
  %52 = call i64 @llvm.expect.i64(i64 %51, i64 0)
  %53 = icmp ne i64 %52, 0
  br i1 %53, label %54, label %69

54:                                               ; preds = %37
  %55 = load i32, i32* %7, align 4
  %56 = icmp ne i32 %55, 0
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 1)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %54
  %64 = load i64, i64* %6, align 8
  %65 = sitofp i64 %64 to double
  %66 = load double*, double** %5, align 8
  store double %65, double* %66, align 8
  br label %68

67:                                               ; preds = %54
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %70

68:                                               ; preds = %63
  br label %69

69:                                               ; preds = %68, %37
  store i32 0, i32* %8, align 4
  br label %70

70:                                               ; preds = %69, %67
  %71 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %71) #2
  %72 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #2
  %73 = load i32, i32* %8, align 4
  switch i32 %73, label %108 [
    i32 0, label %74
    i32 1, label %106
  ]

74:                                               ; preds = %70
  br label %104

75:                                               ; preds = %26
  %76 = load %11*, %11** %4, align 8
  %77 = call zeroext i8 @125(%11* %76)
  %78 = zext i8 %77 to i32
  %79 = icmp slt i32 %78, 3
  %80 = xor i1 %79, true
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = call i64 @llvm.expect.i64(i64 %83, i64 1)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %75
  %87 = load double*, double** %5, align 8
  store double 0.000000e+00, double* %87, align 8
  br label %103

88:                                               ; preds = %75
  %89 = load %11*, %11** %4, align 8
  %90 = call zeroext i8 @125(%11* %89)
  %91 = zext i8 %90 to i32
  %92 = icmp eq i32 %91, 3
  %93 = xor i1 %92, true
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 1)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %88
  %100 = load double*, double** %5, align 8
  store double 1.000000e+00, double* %100, align 8
  br label %102

101:                                              ; preds = %88
  store i32 0, i32* %3, align 4
  br label %106

102:                                              ; preds = %99
  br label %103

103:                                              ; preds = %102, %86
  br label %104

104:                                              ; preds = %103, %74
  br label %105

105:                                              ; preds = %104, %19
  store i32 1, i32* %3, align 4
  br label %106

106:                                              ; preds = %105, %101, %70
  %107 = load i32, i32* %3, align 4
  ret i32 %107

108:                                              ; preds = %70
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_double_slow(%11* %0, double* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca double*, align 8
  store %11* %0, %11** %4, align 8
  store double* %1, double** %5, align 8
  %6 = load %11*, %11** %4, align 8
  %7 = call zeroext i8 @125(%11* %6)
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %8, 4
  %10 = xor i1 %9, true
  %11 = xor i1 %10, true
  %12 = zext i1 %11 to i32
  %13 = sext i32 %12 to i64
  %14 = call i64 @llvm.expect.i64(i64 %13, i64 1)
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %2
  %17 = load %11*, %11** %4, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 0
  %19 = bitcast %12* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sitofp i64 %20 to double
  %22 = load double*, double** %5, align 8
  store double %21, double* %22, align 8
  br label %56

23:                                               ; preds = %2
  %24 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %25 = getelementptr inbounds %4, %4* %24, i32 0, i32 5
  %26 = load %4*, %4** %25, align 8
  %27 = icmp ne %4* %26, null
  br i1 %27, label %28, label %46

28:                                               ; preds = %23
  %29 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %30 = getelementptr inbounds %4, %4* %29, i32 0, i32 5
  %31 = load %4*, %4** %30, align 8
  %32 = getelementptr inbounds %4, %4* %31, i32 0, i32 3
  %33 = load %37*, %37** %32, align 8
  %34 = icmp ne %37* %33, null
  br i1 %34, label %35, label %46

35:                                               ; preds = %28
  %36 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %37 = getelementptr inbounds %4, %4* %36, i32 0, i32 5
  %38 = load %4*, %4** %37, align 8
  %39 = getelementptr inbounds %4, %4* %38, i32 0, i32 3
  %40 = load %37*, %37** %39, align 8
  %41 = bitcast %37* %40 to %60*
  %42 = getelementptr inbounds %60, %60* %41, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, -2147483648
  %45 = icmp ne i32 %44, 0
  br label %46

46:                                               ; preds = %35, %28, %23
  %47 = phi i1 [ false, %28 ], [ false, %23 ], [ %45, %35 ]
  %48 = xor i1 %47, true
  %49 = xor i1 %48, true
  %50 = zext i1 %49 to i32
  %51 = sext i32 %50 to i64
  %52 = call i64 @llvm.expect.i64(i64 %51, i64 0)
  %53 = icmp ne i64 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  store i32 0, i32* %3, align 4
  br label %60

55:                                               ; preds = %46
  br label %56

56:                                               ; preds = %55, %16
  %57 = load %11*, %11** %4, align 8
  %58 = load double*, double** %5, align 8
  %59 = call i32 @zend_parse_arg_double_weak(%11* %57, double* %58)
  store i32 %59, i32* %3, align 4
  br label %60

60:                                               ; preds = %56, %54
  %61 = load i32, i32* %3, align 4
  ret i32 %61
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_str_weak(%11* %0, %10** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca %10**, align 8
  %6 = alloca %11, align 8
  %7 = alloca %11*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %58*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %11, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %11*, align 8
  %15 = alloca %11*, align 8
  %16 = alloca %58*, align 8
  %17 = alloca i32, align 4
  store %11* %0, %11** %4, align 8
  store %10** %1, %10*** %5, align 8
  %18 = load %11*, %11** %4, align 8
  %19 = call zeroext i8 @125(%11* %18)
  %20 = zext i8 %19 to i32
  %21 = icmp slt i32 %20, 6
  %22 = xor i1 %21, true
  %23 = xor i1 %22, true
  %24 = zext i1 %23 to i32
  %25 = sext i32 %24 to i64
  %26 = call i64 @llvm.expect.i64(i64 %25, i64 1)
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %28, label %41

28:                                               ; preds = %2
  %29 = load %11*, %11** %4, align 8
  %30 = call zeroext i8 @125(%11* %29)
  %31 = zext i8 %30 to i32
  %32 = icmp ne i32 %31, 6
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = load %11*, %11** %4, align 8
  call void @_convert_to_string(%11* %34)
  br label %35

35:                                               ; preds = %33, %28
  %36 = load %11*, %11** %4, align 8
  %37 = getelementptr inbounds %11, %11* %36, i32 0, i32 0
  %38 = bitcast %12* %37 to %10**
  %39 = load %10*, %10** %38, align 8
  %40 = load %10**, %10*** %5, align 8
  store %10* %39, %10** %40, align 8
  br label %208

41:                                               ; preds = %2
  %42 = load %11*, %11** %4, align 8
  %43 = call zeroext i8 @125(%11* %42)
  %44 = zext i8 %43 to i32
  %45 = icmp eq i32 %44, 8
  %46 = xor i1 %45, true
  %47 = xor i1 %46, true
  %48 = zext i1 %47 to i32
  %49 = sext i32 %48 to i64
  %50 = call i64 @llvm.expect.i64(i64 %49, i64 0)
  %51 = icmp ne i64 %50, 0
  br i1 %51, label %52, label %207

52:                                               ; preds = %41
  %53 = load %11*, %11** %4, align 8
  %54 = getelementptr inbounds %11, %11* %53, i32 0, i32 0
  %55 = bitcast %12* %54 to %20**
  %56 = load %20*, %20** %55, align 8
  %57 = getelementptr inbounds %20, %20* %56, i32 0, i32 3
  %58 = load %21*, %21** %57, align 8
  %59 = getelementptr inbounds %21, %21* %58, i32 0, i32 21
  %60 = load i32 (%11*, %11*, i32)*, i32 (%11*, %11*, i32)** %59, align 8
  %61 = icmp ne i32 (%11*, %11*, i32)* %60, null
  br i1 %61, label %62, label %118

62:                                               ; preds = %52
  %63 = bitcast %11* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %63) #2
  %64 = load %11*, %11** %4, align 8
  %65 = getelementptr inbounds %11, %11* %64, i32 0, i32 0
  %66 = bitcast %12* %65 to %20**
  %67 = load %20*, %20** %66, align 8
  %68 = getelementptr inbounds %20, %20* %67, i32 0, i32 3
  %69 = load %21*, %21** %68, align 8
  %70 = getelementptr inbounds %21, %21* %69, i32 0, i32 21
  %71 = load i32 (%11*, %11*, i32)*, i32 (%11*, %11*, i32)** %70, align 8
  %72 = load %11*, %11** %4, align 8
  %73 = call i32 %71(%11* %72, %11* %6, i32 6)
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %113

75:                                               ; preds = %62
  %76 = load %11*, %11** %4, align 8
  call void @_zval_ptr_dtor(%11* %76)
  br label %77

77:                                               ; preds = %75
  %78 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %78) #2
  %79 = load %11*, %11** %4, align 8
  store %11* %79, %11** %7, align 8
  %80 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #2
  store %11* %6, %11** %8, align 8
  %81 = bitcast %58** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %81) #2
  %82 = load %11*, %11** %8, align 8
  %83 = getelementptr inbounds %11, %11* %82, i32 0, i32 0
  %84 = bitcast %12* %83 to %58**
  %85 = load %58*, %58** %84, align 8
  store %58* %85, %58** %9, align 8
  %86 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %86) #2
  %87 = load %11*, %11** %8, align 8
  %88 = getelementptr inbounds %11, %11* %87, i32 0, i32 1
  %89 = bitcast %13* %88 to i32*
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %10, align 4
  br label %91

91:                                               ; preds = %77
  %92 = load %58*, %58** %9, align 8
  %93 = load %11*, %11** %7, align 8
  %94 = getelementptr inbounds %11, %11* %93, i32 0, i32 0
  %95 = bitcast %12* %94 to %58**
  store %58* %92, %58** %95, align 8
  %96 = load i32, i32* %10, align 4
  %97 = load %11*, %11** %7, align 8
  %98 = getelementptr inbounds %11, %11* %97, i32 0, i32 1
  %99 = bitcast %13* %98 to i32*
  store i32 %96, i32* %99, align 8
  br label %100

100:                                              ; preds = %91
  br label %101

101:                                              ; preds = %100
  %102 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %102) #2
  %103 = bitcast %58** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #2
  %104 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #2
  %105 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #2
  br label %106

106:                                              ; preds = %101
  br label %107

107:                                              ; preds = %106
  %108 = load %11*, %11** %4, align 8
  %109 = getelementptr inbounds %11, %11* %108, i32 0, i32 0
  %110 = bitcast %12* %109 to %10**
  %111 = load %10*, %10** %110, align 8
  %112 = load %10**, %10*** %5, align 8
  store %10* %111, %10** %112, align 8
  store i32 1, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %114

113:                                              ; preds = %62
  store i32 0, i32* %11, align 4
  br label %114

114:                                              ; preds = %113, %107
  %115 = bitcast %11* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %115) #2
  %116 = load i32, i32* %11, align 4
  switch i32 %116, label %211 [
    i32 0, label %117
    i32 1, label %209
  ]

117:                                              ; preds = %114
  br label %206

118:                                              ; preds = %52
  %119 = load %11*, %11** %4, align 8
  %120 = getelementptr inbounds %11, %11* %119, i32 0, i32 0
  %121 = bitcast %12* %120 to %20**
  %122 = load %20*, %20** %121, align 8
  %123 = getelementptr inbounds %20, %20* %122, i32 0, i32 3
  %124 = load %21*, %21** %123, align 8
  %125 = getelementptr inbounds %21, %21* %124, i32 0, i32 9
  %126 = load %11* (%11*, %11*)*, %11* (%11*, %11*)** %125, align 8
  %127 = icmp ne %11* (%11*, %11*)* %126, null
  br i1 %127, label %128, label %205

128:                                              ; preds = %118
  %129 = bitcast %11* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %129) #2
  %130 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %130) #2
  %131 = load %11*, %11** %4, align 8
  %132 = getelementptr inbounds %11, %11* %131, i32 0, i32 0
  %133 = bitcast %12* %132 to %20**
  %134 = load %20*, %20** %133, align 8
  %135 = getelementptr inbounds %20, %20* %134, i32 0, i32 3
  %136 = load %21*, %21** %135, align 8
  %137 = getelementptr inbounds %21, %21* %136, i32 0, i32 9
  %138 = load %11* (%11*, %11*)*, %11* (%11*, %11*)** %137, align 8
  %139 = load %11*, %11** %4, align 8
  %140 = call %11* %138(%11* %139, %11* %12)
  store %11* %140, %11** %13, align 8
  %141 = load %11*, %11** %13, align 8
  %142 = call i32 @128(%11* %141)
  %143 = load %11*, %11** %13, align 8
  %144 = call zeroext i8 @125(%11* %143)
  %145 = zext i8 %144 to i32
  %146 = icmp ne i32 %145, 8
  br i1 %146, label %147, label %198

147:                                              ; preds = %128
  %148 = load %11*, %11** %4, align 8
  call void @131(%11* %148)
  br label %149

149:                                              ; preds = %147
  %150 = load %11*, %11** %4, align 8
  %151 = getelementptr inbounds %11, %11* %150, i32 0, i32 1
  %152 = bitcast %13* %151 to i32*
  store i32 1, i32* %152, align 8
  br label %153

153:                                              ; preds = %149
  br label %154

154:                                              ; preds = %153
  %155 = load %11*, %11** %13, align 8
  %156 = load %11*, %11** %4, align 8
  %157 = call i32 @zend_make_printable_zval(%11* %155, %11* %156)
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %192, label %159

159:                                              ; preds = %154
  br label %160

160:                                              ; preds = %159
  %161 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %161) #2
  %162 = load %11*, %11** %4, align 8
  store %11* %162, %11** %14, align 8
  %163 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163) #2
  %164 = load %11*, %11** %13, align 8
  store %11* %164, %11** %15, align 8
  %165 = bitcast %58** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %165) #2
  %166 = load %11*, %11** %15, align 8
  %167 = getelementptr inbounds %11, %11* %166, i32 0, i32 0
  %168 = bitcast %12* %167 to %58**
  %169 = load %58*, %58** %168, align 8
  store %58* %169, %58** %16, align 8
  %170 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %170) #2
  %171 = load %11*, %11** %15, align 8
  %172 = getelementptr inbounds %11, %11* %171, i32 0, i32 1
  %173 = bitcast %13* %172 to i32*
  %174 = load i32, i32* %173, align 8
  store i32 %174, i32* %17, align 4
  br label %175

175:                                              ; preds = %160
  %176 = load %58*, %58** %16, align 8
  %177 = load %11*, %11** %14, align 8
  %178 = getelementptr inbounds %11, %11* %177, i32 0, i32 0
  %179 = bitcast %12* %178 to %58**
  store %58* %176, %58** %179, align 8
  %180 = load i32, i32* %17, align 4
  %181 = load %11*, %11** %14, align 8
  %182 = getelementptr inbounds %11, %11* %181, i32 0, i32 1
  %183 = bitcast %13* %182 to i32*
  store i32 %180, i32* %183, align 8
  br label %184

184:                                              ; preds = %175
  br label %185

185:                                              ; preds = %184
  %186 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %186) #2
  %187 = bitcast %58** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %187) #2
  %188 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #2
  %189 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #2
  br label %190

190:                                              ; preds = %185
  br label %191

191:                                              ; preds = %190
  br label %192

192:                                              ; preds = %191, %154
  %193 = load %11*, %11** %4, align 8
  %194 = getelementptr inbounds %11, %11* %193, i32 0, i32 0
  %195 = bitcast %12* %194 to %10**
  %196 = load %10*, %10** %195, align 8
  %197 = load %10**, %10*** %5, align 8
  store %10* %196, %10** %197, align 8
  store i32 1, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %200

198:                                              ; preds = %128
  %199 = load %11*, %11** %13, align 8
  call void @_zval_ptr_dtor(%11* %199)
  store i32 0, i32* %11, align 4
  br label %200

200:                                              ; preds = %198, %192
  %201 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %201) #2
  %202 = bitcast %11* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %202) #2
  %203 = load i32, i32* %11, align 4
  switch i32 %203, label %211 [
    i32 0, label %204
    i32 1, label %209
  ]

204:                                              ; preds = %200
  br label %205

205:                                              ; preds = %204, %118
  br label %206

206:                                              ; preds = %205, %117
  store i32 0, i32* %3, align 4
  br label %209

207:                                              ; preds = %41
  store i32 0, i32* %3, align 4
  br label %209

208:                                              ; preds = %35
  store i32 1, i32* %3, align 4
  br label %209

209:                                              ; preds = %208, %207, %206, %200, %114
  %210 = load i32, i32* %3, align 4
  ret i32 %210

211:                                              ; preds = %200, %114
  unreachable
}

declare dso_local void @_zval_ptr_dtor(%11*) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal void @131(%11* %0) #3 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  %3 = load %11*, %11** %2, align 8
  %4 = getelementptr inbounds %11, %11* %3, i32 0, i32 1
  %5 = bitcast %13* %4 to %59*
  %6 = getelementptr inbounds %59, %59* %5, i32 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %1
  %12 = load %11*, %11** %2, align 8
  %13 = call i32 @127(%11* %12)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = load %11*, %11** %2, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to %58**
  %19 = load %58*, %58** %18, align 8
  call void @_zval_dtor_func(%58* %19)
  br label %20

20:                                               ; preds = %15, %11, %1
  ret void
}

declare dso_local i32 @zend_make_printable_zval(%11*, %11*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_arg_str_slow(%11* %0, %10** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca %10**, align 8
  store %11* %0, %11** %4, align 8
  store %10** %1, %10*** %5, align 8
  %6 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 5
  %8 = load %4*, %4** %7, align 8
  %9 = icmp ne %4* %8, null
  br i1 %9, label %10, label %28

10:                                               ; preds = %2
  %11 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %12 = getelementptr inbounds %4, %4* %11, i32 0, i32 5
  %13 = load %4*, %4** %12, align 8
  %14 = getelementptr inbounds %4, %4* %13, i32 0, i32 3
  %15 = load %37*, %37** %14, align 8
  %16 = icmp ne %37* %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %10
  %18 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %19 = getelementptr inbounds %4, %4* %18, i32 0, i32 5
  %20 = load %4*, %4** %19, align 8
  %21 = getelementptr inbounds %4, %4* %20, i32 0, i32 3
  %22 = load %37*, %37** %21, align 8
  %23 = bitcast %37* %22 to %60*
  %24 = getelementptr inbounds %60, %60* %23, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, -2147483648
  %27 = icmp ne i32 %26, 0
  br label %28

28:                                               ; preds = %17, %10, %2
  %29 = phi i1 [ false, %10 ], [ false, %2 ], [ %27, %17 ]
  %30 = xor i1 %29, true
  %31 = xor i1 %30, true
  %32 = zext i1 %31 to i32
  %33 = sext i32 %32 to i64
  %34 = call i64 @llvm.expect.i64(i64 %33, i64 0)
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %28
  store i32 0, i32* %3, align 4
  br label %41

37:                                               ; preds = %28
  %38 = load %11*, %11** %4, align 8
  %39 = load %10**, %10*** %5, align 8
  %40 = call i32 @zend_parse_arg_str_weak(%11* %38, %10** %39)
  store i32 %40, i32* %3, align 4
  br label %41

41:                                               ; preds = %37, %36
  %42 = load i32, i32* %3, align 4
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_parameter(i32 %0, i32 %1, %11* %2, i8* %3, ...) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %11*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1 x %57], align 16
  %10 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store %11* %2, %11** %7, align 8
  store i8* %3, i8** %8, align 8
  %11 = bitcast [1 x %57]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %11) #2
  %12 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #2
  %13 = getelementptr inbounds [1 x %57], [1 x %57]* %9, i32 0, i32 0
  %14 = bitcast %57* %13 to i8*
  call void @llvm.va_start(i8* %14)
  %15 = load i32, i32* %6, align 4
  %16 = load %11*, %11** %7, align 8
  %17 = load i32, i32* %5, align 4
  %18 = call i32 @132(i32 %15, %11* %16, [1 x %57]* %9, i8** %8, i32 %17)
  store i32 %18, i32* %10, align 4
  %19 = getelementptr inbounds [1 x %57], [1 x %57]* %9, i32 0, i32 0
  %20 = bitcast %57* %19 to i8*
  call void @llvm.va_end(i8* %20)
  %21 = load i32, i32* %10, align 4
  %22 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #2
  %23 = bitcast [1 x %57]* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %23) #2
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @132(i32 %0, %11* %1, [1 x %57]* %2, i8** %3, i32 %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %11*, align 8
  %9 = alloca [1 x %57]*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  store i32 %0, i32* %7, align 4
  store %11* %1, %11** %8, align 8
  store [1 x %57]* %2, [1 x %57]** %9, align 8
  store i8** %3, i8*** %10, align 8
  store i32 %4, i32* %11, align 4
  %19 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  store i8* null, i8** %12, align 8
  %20 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #2
  store i8* null, i8** %13, align 8
  %21 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #2
  store i32 0, i32* %14, align 4
  %22 = load i32, i32* %7, align 4
  %23 = load %11*, %11** %8, align 8
  %24 = load [1 x %57]*, [1 x %57]** %9, align 8
  %25 = load i8**, i8*** %10, align 8
  %26 = call i8* @165(i32 %22, %11* %23, [1 x %57]* %24, i8** %25, i8** %13, i32* %14)
  store i8* %26, i8** %12, align 8
  %27 = load i8*, i8** %12, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %102

29:                                               ; preds = %5
  %30 = load i32, i32* %11, align 4
  %31 = and i32 %30, 2
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %97, label %33

33:                                               ; preds = %29
  %34 = load i8*, i8** %12, align 8
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = load i8*, i8** %13, align 8
  %40 = icmp ne i8* %39, null
  br i1 %40, label %41, label %97

41:                                               ; preds = %38, %33
  %42 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #2
  %43 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #2
  %44 = call i8* @get_active_class_name(i8** %15)
  store i8* %44, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #2
  %45 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %46 = getelementptr inbounds %4, %4* %45, i32 0, i32 5
  %47 = load %4*, %4** %46, align 8
  %48 = icmp ne %4* %47, null
  br i1 %48, label %49, label %67

49:                                               ; preds = %41
  %50 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %51 = getelementptr inbounds %4, %4* %50, i32 0, i32 5
  %52 = load %4*, %4** %51, align 8
  %53 = getelementptr inbounds %4, %4* %52, i32 0, i32 3
  %54 = load %37*, %37** %53, align 8
  %55 = icmp ne %37* %54, null
  br i1 %55, label %56, label %67

56:                                               ; preds = %49
  %57 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %58 = getelementptr inbounds %4, %4* %57, i32 0, i32 5
  %59 = load %4*, %4** %58, align 8
  %60 = getelementptr inbounds %4, %4* %59, i32 0, i32 3
  %61 = load %37*, %37** %60, align 8
  %62 = bitcast %37* %61 to %60*
  %63 = getelementptr inbounds %60, %60* %62, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, -2147483648
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %49, %41
  %68 = load i32, i32* %11, align 4
  %69 = and i32 %68, 4
  %70 = icmp ne i32 %69, 0
  br label %71

71:                                               ; preds = %67, %56
  %72 = phi i1 [ true, %56 ], [ %70, %67 ]
  %73 = zext i1 %72 to i32
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %17, align 1
  %75 = load i8*, i8** %13, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %77, label %85

77:                                               ; preds = %71
  %78 = load i8, i8* %17, align 1
  %79 = load i8*, i8** %16, align 8
  %80 = load i8*, i8** %15, align 8
  %81 = call i8* @get_active_function_name()
  %82 = load i32, i32* %7, align 4
  %83 = load i8*, i8** %13, align 8
  call void (i8, i8*, ...) @zend_internal_type_error(i8 zeroext %78, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @94, i32 0, i32 0), i8* %79, i8* %80, i8* %81, i32 %82, i8* %83)
  %84 = load i8*, i8** %13, align 8
  call void @_efree(i8* %84)
  br label %94

85:                                               ; preds = %71
  %86 = load i8, i8* %17, align 1
  %87 = load i8*, i8** %16, align 8
  %88 = load i8*, i8** %15, align 8
  %89 = call i8* @get_active_function_name()
  %90 = load i32, i32* %7, align 4
  %91 = load i8*, i8** %12, align 8
  %92 = load %11*, %11** %8, align 8
  %93 = call i8* @zend_zval_type_name(%11* %92)
  call void (i8, i8*, ...) @zend_internal_type_error(i8 zeroext %86, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @23, i32 0, i32 0), i8* %87, i8* %88, i8* %89, i32 %90, i8* %91, i8* %93)
  br label %94

94:                                               ; preds = %85, %77
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #2
  %95 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #2
  %96 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #2
  br label %97

97:                                               ; preds = %94, %38, %29
  %98 = load i32, i32* %14, align 4
  %99 = icmp ne i32 %98, 8192
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %18, align 4
  br label %103

101:                                              ; preds = %97
  br label %102

102:                                              ; preds = %101, %5
  store i32 0, i32* %6, align 4
  store i32 1, i32* %18, align 4
  br label %103

103:                                              ; preds = %102, %100
  %104 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %104) #2
  %105 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #2
  %106 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %106) #2
  %107 = load i32, i32* %6, align 4
  ret i32 %107
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_parameters_ex(i32 %0, i32 %1, i8* %2, ...) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca [1 x %57], align 16
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %9 = bitcast [1 x %57]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %9) #2
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #2
  %11 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %12 = bitcast %57* %11 to i8*
  call void @llvm.va_start(i8* %12)
  %13 = load i32, i32* %5, align 4
  %14 = load i8*, i8** %6, align 8
  %15 = load i32, i32* %4, align 4
  %16 = call i32 @133(i32 %13, i8* %14, [1 x %57]* %7, i32 %15)
  store i32 %16, i32* %8, align 4
  %17 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %18 = bitcast %57* %17 to i8*
  call void @llvm.va_end(i8* %18)
  %19 = load i32, i32* %8, align 4
  %20 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %20) #2
  %21 = bitcast [1 x %57]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %21) #2
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define internal i32 @133(i32 %0, i8* %1, [1 x %57]* %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca [1 x %57]*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %11*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8, align 1
  %19 = alloca %11**, align 8
  %20 = alloca i32*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %37*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store [1 x %57]* %2, [1 x %57]** %8, align 8
  store i32 %3, i32* %9, align 4
  %26 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #2
  %27 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #2
  %28 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #2
  %29 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #2
  store i32 -1, i32* %13, align 4
  %30 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #2
  store i32 0, i32* %14, align 4
  %31 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #2
  store i32 0, i32* %15, align 4
  %32 = bitcast %11** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #2
  %33 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #2
  store i8 0, i8* %18, align 1
  %34 = bitcast %11*** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #2
  store %11** null, %11*** %19, align 8
  %35 = bitcast i32** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #2
  store i32* null, i32** %20, align 8
  %36 = load i8*, i8** %7, align 8
  store i8* %36, i8** %10, align 8
  br label %37

37:                                               ; preds = %66, %4
  %38 = load i8*, i8** %10, align 8
  %39 = load i8, i8* %38, align 1
  %40 = icmp ne i8 %39, 0
  br i1 %40, label %41, label %69

41:                                               ; preds = %37
  %42 = load i8*, i8** %10, align 8
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  store i32 %44, i32* %11, align 4
  %45 = load i32, i32* %11, align 4
  switch i32 %45, label %64 [
    i32 108, label %46
    i32 100, label %46
    i32 115, label %46
    i32 98, label %46
    i32 114, label %46
    i32 97, label %46
    i32 111, label %46
    i32 79, label %46
    i32 122, label %46
    i32 90, label %46
    i32 67, label %46
    i32 104, label %46
    i32 102, label %46
    i32 65, label %46
    i32 72, label %46
    i32 112, label %46
    i32 83, label %46
    i32 80, label %46
    i32 76, label %46
    i32 124, label %49
    i32 47, label %51
    i32 33, label %51
    i32 42, label %52
    i32 43, label %52
  ]

46:                                               ; preds = %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41, %41
  %47 = load i32, i32* %14, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %14, align 4
  br label %65

49:                                               ; preds = %41
  %50 = load i32, i32* %14, align 4
  store i32 %50, i32* %13, align 4
  br label %65

51:                                               ; preds = %41, %41
  br label %65

52:                                               ; preds = %41, %41
  %53 = load i8, i8* %18, align 1
  %54 = icmp ne i8 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @178(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @98, i32 0, i32 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %339

56:                                               ; preds = %52
  store i8 1, i8* %18, align 1
  %57 = load i32, i32* %11, align 4
  %58 = icmp eq i32 %57, 43
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = load i32, i32* %14, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %14, align 4
  br label %62

62:                                               ; preds = %59, %56
  %63 = load i32, i32* %14, align 4
  store i32 %63, i32* %15, align 4
  br label %65

64:                                               ; preds = %41
  call void @178(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @99, i32 0, i32 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %339

65:                                               ; preds = %62, %51, %49, %46
  br label %66

66:                                               ; preds = %65
  %67 = load i8*, i8** %10, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %10, align 8
  br label %37

69:                                               ; preds = %37
  %70 = load i32, i32* %13, align 4
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load i32, i32* %14, align 4
  store i32 %73, i32* %13, align 4
  br label %74

74:                                               ; preds = %72, %69
  %75 = load i8, i8* %18, align 1
  %76 = icmp ne i8 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %74
  %78 = load i32, i32* %14, align 4
  %79 = load i32, i32* %15, align 4
  %80 = sub nsw i32 %78, %79
  store i32 %80, i32* %15, align 4
  store i32 -1, i32* %14, align 4
  br label %81

81:                                               ; preds = %77, %74
  %82 = load i32, i32* %6, align 4
  %83 = load i32, i32* %13, align 4
  %84 = icmp slt i32 %82, %83
  br i1 %84, label %92, label %85

85:                                               ; preds = %81
  %86 = load i32, i32* %6, align 4
  %87 = load i32, i32* %14, align 4
  %88 = icmp sgt i32 %86, %87
  br i1 %88, label %89, label %201

89:                                               ; preds = %85
  %90 = load i32, i32* %14, align 4
  %91 = icmp sge i32 %90, 0
  br i1 %91, label %92, label %201

92:                                               ; preds = %89, %81
  %93 = load i32, i32* %9, align 4
  %94 = and i32 %93, 2
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %200, label %96

96:                                               ; preds = %92
  %97 = bitcast %37** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %97) #2
  %98 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %99 = getelementptr inbounds %4, %4* %98, i32 0, i32 3
  %100 = load %37*, %37** %99, align 8
  store %37* %100, %37** %22, align 8
  %101 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %101) #2
  %102 = load %37*, %37** %22, align 8
  %103 = bitcast %37* %102 to %60*
  %104 = getelementptr inbounds %60, %60* %103, i32 0, i32 4
  %105 = load %16*, %16** %104, align 8
  %106 = icmp ne %16* %105, null
  br i1 %106, label %107, label %116

107:                                              ; preds = %96
  %108 = load %37*, %37** %22, align 8
  %109 = bitcast %37* %108 to %60*
  %110 = getelementptr inbounds %60, %60* %109, i32 0, i32 4
  %111 = load %16*, %16** %110, align 8
  %112 = getelementptr inbounds %16, %16* %111, i32 0, i32 1
  %113 = load %10*, %10** %112, align 8
  %114 = getelementptr inbounds %10, %10* %113, i32 0, i32 3
  %115 = getelementptr inbounds [1 x i8], [1 x i8]* %114, i32 0, i32 0
  br label %117

116:                                              ; preds = %96
  br label %117

117:                                              ; preds = %116, %107
  %118 = phi i8* [ %115, %107 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), %116 ]
  store i8* %118, i8** %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #2
  %119 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %120 = getelementptr inbounds %4, %4* %119, i32 0, i32 5
  %121 = load %4*, %4** %120, align 8
  %122 = icmp ne %4* %121, null
  br i1 %122, label %123, label %141

123:                                              ; preds = %117
  %124 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %125 = getelementptr inbounds %4, %4* %124, i32 0, i32 5
  %126 = load %4*, %4** %125, align 8
  %127 = getelementptr inbounds %4, %4* %126, i32 0, i32 3
  %128 = load %37*, %37** %127, align 8
  %129 = icmp ne %37* %128, null
  br i1 %129, label %130, label %141

130:                                              ; preds = %123
  %131 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %132 = getelementptr inbounds %4, %4* %131, i32 0, i32 5
  %133 = load %4*, %4** %132, align 8
  %134 = getelementptr inbounds %4, %4* %133, i32 0, i32 3
  %135 = load %37*, %37** %134, align 8
  %136 = bitcast %37* %135 to %60*
  %137 = getelementptr inbounds %60, %60* %136, i32 0, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = and i32 %138, -2147483648
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %130, %123, %117
  %142 = load i32, i32* %9, align 4
  %143 = and i32 %142, 4
  %144 = icmp ne i32 %143, 0
  br label %145

145:                                              ; preds = %141, %130
  %146 = phi i1 [ true, %130 ], [ %144, %141 ]
  %147 = zext i1 %146 to i32
  %148 = trunc i32 %147 to i8
  store i8 %148, i8* %24, align 1
  %149 = load i8, i8* %24, align 1
  %150 = load i8*, i8** %23, align 8
  %151 = load i8*, i8** %23, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 0
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 %153 to i32
  %155 = icmp ne i32 %154, 0
  %156 = zext i1 %155 to i64
  %157 = select i1 %155, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0)
  %158 = load %37*, %37** %22, align 8
  %159 = bitcast %37* %158 to %60*
  %160 = getelementptr inbounds %60, %60* %159, i32 0, i32 3
  %161 = load %10*, %10** %160, align 8
  %162 = getelementptr inbounds %10, %10* %161, i32 0, i32 3
  %163 = getelementptr inbounds [1 x i8], [1 x i8]* %162, i32 0, i32 0
  %164 = load i32, i32* %13, align 4
  %165 = load i32, i32* %14, align 4
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %167, label %168

167:                                              ; preds = %145
  br label %174

168:                                              ; preds = %145
  %169 = load i32, i32* %6, align 4
  %170 = load i32, i32* %13, align 4
  %171 = icmp slt i32 %169, %170
  %172 = zext i1 %171 to i64
  %173 = select i1 %171, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @18, i32 0, i32 0)
  br label %174

174:                                              ; preds = %168, %167
  %175 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @16, i32 0, i32 0), %167 ], [ %173, %168 ]
  %176 = load i32, i32* %6, align 4
  %177 = load i32, i32* %13, align 4
  %178 = icmp slt i32 %176, %177
  br i1 %178, label %179, label %181

179:                                              ; preds = %174
  %180 = load i32, i32* %13, align 4
  br label %183

181:                                              ; preds = %174
  %182 = load i32, i32* %14, align 4
  br label %183

183:                                              ; preds = %181, %179
  %184 = phi i32 [ %180, %179 ], [ %182, %181 ]
  %185 = load i32, i32* %6, align 4
  %186 = load i32, i32* %13, align 4
  %187 = icmp slt i32 %185, %186
  br i1 %187, label %188, label %190

188:                                              ; preds = %183
  %189 = load i32, i32* %13, align 4
  br label %192

190:                                              ; preds = %183
  %191 = load i32, i32* %14, align 4
  br label %192

192:                                              ; preds = %190, %188
  %193 = phi i32 [ %189, %188 ], [ %191, %190 ]
  %194 = icmp eq i32 %193, 1
  %195 = zext i1 %194 to i64
  %196 = select i1 %194, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @19, i32 0, i32 0)
  %197 = load i32, i32* %6, align 4
  call void (i8, i8*, ...) @zend_internal_argument_count_error(i8 zeroext %149, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @14, i32 0, i32 0), i8* %150, i8* %157, i8* %163, i8* %175, i32 %184, i8* %196, i32 %197)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #2
  %198 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #2
  %199 = bitcast %37** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #2
  br label %200

200:                                              ; preds = %192, %92
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %339

201:                                              ; preds = %89, %85
  %202 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %203 = getelementptr inbounds %4, %4* %202, i32 0, i32 4
  %204 = getelementptr inbounds %11, %11* %203, i32 0, i32 2
  %205 = bitcast %14* %204 to i32*
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %17, align 4
  %207 = load i32, i32* %6, align 4
  %208 = load i32, i32* %17, align 4
  %209 = icmp sgt i32 %207, %208
  br i1 %209, label %210, label %211

210:                                              ; preds = %201
  call void @178(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @100, i32 0, i32 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %339

211:                                              ; preds = %201
  store i32 0, i32* %12, align 4
  br label %212

212:                                              ; preds = %335, %305, %211
  %213 = load i32, i32* %6, align 4
  %214 = add nsw i32 %213, -1
  store i32 %214, i32* %6, align 4
  %215 = icmp sgt i32 %213, 0
  br i1 %215, label %216, label %338

216:                                              ; preds = %212
  %217 = load i8*, i8** %7, align 8
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %219, 124
  br i1 %220, label %221, label %224

221:                                              ; preds = %216
  %222 = load i8*, i8** %7, align 8
  %223 = getelementptr inbounds i8, i8* %222, i32 1
  store i8* %223, i8** %7, align 8
  br label %224

224:                                              ; preds = %221, %216
  %225 = load i8*, i8** %7, align 8
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %227, 42
  br i1 %228, label %234, label %229

229:                                              ; preds = %224
  %230 = load i8*, i8** %7, align 8
  %231 = load i8, i8* %230, align 1
  %232 = sext i8 %231 to i32
  %233 = icmp eq i32 %232, 43
  br i1 %233, label %234, label %309

234:                                              ; preds = %229, %224
  %235 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %235) #2
  %236 = load i32, i32* %6, align 4
  %237 = add nsw i32 %236, 1
  %238 = load i32, i32* %15, align 4
  %239 = sub nsw i32 %237, %238
  store i32 %239, i32* %25, align 4
  %240 = load [1 x %57]*, [1 x %57]** %8, align 8
  %241 = getelementptr inbounds [1 x %57], [1 x %57]* %240, i32 0, i32 0
  %242 = getelementptr inbounds %57, %57* %241, i32 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = icmp ule i32 %243, 40
  br i1 %244, label %245, label %251

245:                                              ; preds = %234
  %246 = getelementptr inbounds %57, %57* %241, i32 0, i32 3
  %247 = load i8*, i8** %246, align 8
  %248 = getelementptr i8, i8* %247, i32 %243
  %249 = bitcast i8* %248 to %11***
  %250 = add i32 %243, 8
  store i32 %250, i32* %242, align 8
  br label %256

251:                                              ; preds = %234
  %252 = getelementptr inbounds %57, %57* %241, i32 0, i32 2
  %253 = load i8*, i8** %252, align 8
  %254 = bitcast i8* %253 to %11***
  %255 = getelementptr i8, i8* %253, i32 8
  store i8* %255, i8** %252, align 8
  br label %256

256:                                              ; preds = %251, %245
  %257 = phi %11*** [ %249, %245 ], [ %254, %251 ]
  %258 = load %11**, %11*** %257, align 8
  store %11** %258, %11*** %19, align 8
  %259 = load [1 x %57]*, [1 x %57]** %8, align 8
  %260 = getelementptr inbounds [1 x %57], [1 x %57]* %259, i32 0, i32 0
  %261 = getelementptr inbounds %57, %57* %260, i32 0, i32 0
  %262 = load i32, i32* %261, align 8
  %263 = icmp ule i32 %262, 40
  br i1 %263, label %264, label %270

264:                                              ; preds = %256
  %265 = getelementptr inbounds %57, %57* %260, i32 0, i32 3
  %266 = load i8*, i8** %265, align 8
  %267 = getelementptr i8, i8* %266, i32 %262
  %268 = bitcast i8* %267 to i32**
  %269 = add i32 %262, 8
  store i32 %269, i32* %261, align 8
  br label %275

270:                                              ; preds = %256
  %271 = getelementptr inbounds %57, %57* %260, i32 0, i32 2
  %272 = load i8*, i8** %271, align 8
  %273 = bitcast i8* %272 to i32**
  %274 = getelementptr i8, i8* %272, i32 8
  store i8* %274, i8** %271, align 8
  br label %275

275:                                              ; preds = %270, %264
  %276 = phi i32** [ %268, %264 ], [ %273, %270 ]
  %277 = load i32*, i32** %276, align 8
  store i32* %277, i32** %20, align 8
  %278 = load i8*, i8** %7, align 8
  %279 = getelementptr inbounds i8, i8* %278, i32 1
  store i8* %279, i8** %7, align 8
  %280 = load i32, i32* %25, align 4
  %281 = icmp sgt i32 %280, 0
  br i1 %281, label %282, label %301

282:                                              ; preds = %275
  %283 = load i32, i32* %25, align 4
  %284 = load i32*, i32** %20, align 8
  store i32 %283, i32* %284, align 4
  %285 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %286 = bitcast %4* %285 to %11*
  %287 = load i32, i32* %12, align 4
  %288 = add nsw i32 %287, 1
  %289 = sub nsw i32 %288, 1
  %290 = add nsw i32 5, %289
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds %11, %11* %286, i64 %291
  %293 = load %11**, %11*** %19, align 8
  store %11* %292, %11** %293, align 8
  %294 = load i32, i32* %25, align 4
  %295 = sub nsw i32 1, %294
  %296 = load i32, i32* %6, align 4
  %297 = add nsw i32 %296, %295
  store i32 %297, i32* %6, align 4
  %298 = load i32, i32* %25, align 4
  %299 = load i32, i32* %12, align 4
  %300 = add nsw i32 %299, %298
  store i32 %300, i32* %12, align 4
  store i32 6, i32* %21, align 4
  br label %305

301:                                              ; preds = %275
  %302 = load %11**, %11*** %19, align 8
  store %11* null, %11** %302, align 8
  %303 = load i32*, i32** %20, align 8
  store i32 0, i32* %303, align 4
  br label %304

304:                                              ; preds = %301
  store i32 0, i32* %21, align 4
  br label %305

305:                                              ; preds = %304, %282
  %306 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %306) #2
  %307 = load i32, i32* %21, align 4
  switch i32 %307, label %351 [
    i32 0, label %308
    i32 6, label %212
  ]

308:                                              ; preds = %305
  br label %309

309:                                              ; preds = %308, %229
  %310 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %311 = bitcast %4* %310 to %11*
  %312 = load i32, i32* %12, align 4
  %313 = add nsw i32 %312, 1
  %314 = sub nsw i32 %313, 1
  %315 = add nsw i32 5, %314
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds %11, %11* %311, i64 %316
  store %11* %317, %11** %16, align 8
  %318 = load i32, i32* %12, align 4
  %319 = add nsw i32 %318, 1
  %320 = load %11*, %11** %16, align 8
  %321 = load [1 x %57]*, [1 x %57]** %8, align 8
  %322 = load i32, i32* %9, align 4
  %323 = call i32 @132(i32 %319, %11* %320, [1 x %57]* %321, i8** %7, i32 %322)
  %324 = icmp eq i32 %323, -1
  br i1 %324, label %325, label %335

325:                                              ; preds = %309
  %326 = load %11**, %11*** %19, align 8
  %327 = icmp ne %11** %326, null
  br i1 %327, label %328, label %334

328:                                              ; preds = %325
  %329 = load %11**, %11*** %19, align 8
  %330 = load %11*, %11** %329, align 8
  %331 = icmp ne %11* %330, null
  br i1 %331, label %332, label %334

332:                                              ; preds = %328
  %333 = load %11**, %11*** %19, align 8
  store %11* null, %11** %333, align 8
  br label %334

334:                                              ; preds = %332, %328, %325
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %339

335:                                              ; preds = %309
  %336 = load i32, i32* %12, align 4
  %337 = add nsw i32 %336, 1
  store i32 %337, i32* %12, align 4
  br label %212

338:                                              ; preds = %212
  store i32 0, i32* %5, align 4
  store i32 1, i32* %21, align 4
  br label %339

339:                                              ; preds = %338, %334, %210, %200, %64, %55
  %340 = bitcast i32** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %340) #2
  %341 = bitcast %11*** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %341) #2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #2
  %342 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %342) #2
  %343 = bitcast %11** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %343) #2
  %344 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #2
  %345 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #2
  %346 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %346) #2
  %347 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %347) #2
  %348 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %348) #2
  %349 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %349) #2
  %350 = load i32, i32* %5, align 4
  ret i32 %350

351:                                              ; preds = %305
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_parameters(i32 %0, i8* %1, ...) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %57], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %8 = bitcast [1 x %57]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %8) #2
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #2
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #2
  store i32 0, i32* %7, align 4
  %11 = getelementptr inbounds [1 x %57], [1 x %57]* %5, i32 0, i32 0
  %12 = bitcast %57* %11 to i8*
  call void @llvm.va_start(i8* %12)
  %13 = load i32, i32* %3, align 4
  %14 = load i8*, i8** %4, align 8
  %15 = load i32, i32* %7, align 4
  %16 = call i32 @133(i32 %13, i8* %14, [1 x %57]* %5, i32 %15)
  store i32 %16, i32* %6, align 4
  %17 = getelementptr inbounds [1 x %57], [1 x %57]* %5, i32 0, i32 0
  %18 = bitcast %57* %17 to i8*
  call void @llvm.va_end(i8* %18)
  %19 = load i32, i32* %6, align 4
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %20) #2
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #2
  %22 = bitcast [1 x %57]* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %22) #2
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_parameters_throw(i32 %0, i8* %1, ...) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca [1 x %57], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %8 = bitcast [1 x %57]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %8) #2
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #2
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #2
  store i32 4, i32* %7, align 4
  %11 = getelementptr inbounds [1 x %57], [1 x %57]* %5, i32 0, i32 0
  %12 = bitcast %57* %11 to i8*
  call void @llvm.va_start(i8* %12)
  %13 = load i32, i32* %3, align 4
  %14 = load i8*, i8** %4, align 8
  %15 = load i32, i32* %7, align 4
  %16 = call i32 @133(i32 %13, i8* %14, [1 x %57]* %5, i32 %15)
  store i32 %16, i32* %6, align 4
  %17 = getelementptr inbounds [1 x %57], [1 x %57]* %5, i32 0, i32 0
  %18 = bitcast %57* %17 to i8*
  call void @llvm.va_end(i8* %18)
  %19 = load i32, i32* %6, align 4
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %20) #2
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #2
  %22 = bitcast [1 x %57]* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %22) #2
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_method_parameters(i32 %0, %11* %1, i8* %2, ...) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [1 x %57], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca %11**, align 8
  %12 = alloca %16*, align 8
  %13 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  store %11* %1, %11** %5, align 8
  store i8* %2, i8** %6, align 8
  %14 = bitcast [1 x %57]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %14) #2
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #2
  %16 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #2
  store i32 0, i32* %9, align 4
  %17 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load i8*, i8** %6, align 8
  store i8* %18, i8** %10, align 8
  %19 = bitcast %11*** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  %20 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #2
  %21 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %22 = getelementptr inbounds %4, %4* %21, i32 0, i32 3
  %23 = load %37*, %37** %22, align 8
  %24 = bitcast %37* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i32 0, i32 4
  %26 = load %16*, %16** %25, align 8
  %27 = icmp ne %16* %26, null
  %28 = zext i1 %27 to i32
  %29 = trunc i32 %28 to i8
  store i8 %29, i8* %13, align 1
  %30 = load i8, i8* %13, align 1
  %31 = icmp ne i8 %30, 0
  br i1 %31, label %32, label %40

32:                                               ; preds = %3
  %33 = load %11*, %11** %5, align 8
  %34 = icmp ne %11* %33, null
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = load %11*, %11** %5, align 8
  %37 = call zeroext i8 @125(%11* %36)
  %38 = zext i8 %37 to i32
  %39 = icmp ne i32 %38, 8
  br i1 %39, label %40, label %49

40:                                               ; preds = %35, %32, %3
  %41 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %42 = bitcast %57* %41 to i8*
  call void @llvm.va_start(i8* %42)
  %43 = load i32, i32* %4, align 4
  %44 = load i8*, i8** %6, align 8
  %45 = load i32, i32* %9, align 4
  %46 = call i32 @133(i32 %43, i8* %44, [1 x %57]* %7, i32 %45)
  store i32 %46, i32* %8, align 4
  %47 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %48 = bitcast %57* %47 to i8*
  call void @llvm.va_end(i8* %48)
  br label %129

49:                                               ; preds = %35
  %50 = load i8*, i8** %10, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %10, align 8
  %52 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %53 = bitcast %57* %52 to i8*
  call void @llvm.va_start(i8* %53)
  %54 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %55 = getelementptr inbounds %57, %57* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 16
  %57 = icmp ule i32 %56, 40
  br i1 %57, label %58, label %64

58:                                               ; preds = %49
  %59 = getelementptr inbounds %57, %57* %54, i32 0, i32 3
  %60 = load i8*, i8** %59, align 16
  %61 = getelementptr i8, i8* %60, i32 %56
  %62 = bitcast i8* %61 to %11***
  %63 = add i32 %56, 8
  store i32 %63, i32* %55, align 16
  br label %69

64:                                               ; preds = %49
  %65 = getelementptr inbounds %57, %57* %54, i32 0, i32 2
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast i8* %66 to %11***
  %68 = getelementptr i8, i8* %66, i32 8
  store i8* %68, i8** %65, align 8
  br label %69

69:                                               ; preds = %64, %58
  %70 = phi %11*** [ %62, %58 ], [ %67, %64 ]
  %71 = load %11**, %11*** %70, align 8
  store %11** %71, %11*** %11, align 8
  %72 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %73 = getelementptr inbounds %57, %57* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 16
  %75 = icmp ule i32 %74, 40
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = getelementptr inbounds %57, %57* %72, i32 0, i32 3
  %78 = load i8*, i8** %77, align 16
  %79 = getelementptr i8, i8* %78, i32 %74
  %80 = bitcast i8* %79 to %16**
  %81 = add i32 %74, 8
  store i32 %81, i32* %73, align 16
  br label %87

82:                                               ; preds = %69
  %83 = getelementptr inbounds %57, %57* %72, i32 0, i32 2
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast i8* %84 to %16**
  %86 = getelementptr i8, i8* %84, i32 8
  store i8* %86, i8** %83, align 8
  br label %87

87:                                               ; preds = %82, %76
  %88 = phi %16** [ %80, %76 ], [ %85, %82 ]
  %89 = load %16*, %16** %88, align 8
  store %16* %89, %16** %12, align 8
  %90 = load %11*, %11** %5, align 8
  %91 = load %11**, %11*** %11, align 8
  store %11* %90, %11** %91, align 8
  %92 = load %16*, %16** %12, align 8
  %93 = icmp ne %16* %92, null
  br i1 %93, label %94, label %122

94:                                               ; preds = %87
  %95 = load %11*, %11** %5, align 8
  %96 = getelementptr inbounds %11, %11* %95, i32 0, i32 0
  %97 = bitcast %12* %96 to %20**
  %98 = load %20*, %20** %97, align 8
  %99 = getelementptr inbounds %20, %20* %98, i32 0, i32 2
  %100 = load %16*, %16** %99, align 8
  %101 = load %16*, %16** %12, align 8
  %102 = call zeroext i8 @instanceof_function(%16* %100, %16* %101)
  %103 = icmp ne i8 %102, 0
  br i1 %103, label %122, label %104

104:                                              ; preds = %94
  %105 = load %11*, %11** %5, align 8
  %106 = getelementptr inbounds %11, %11* %105, i32 0, i32 0
  %107 = bitcast %12* %106 to %20**
  %108 = load %20*, %20** %107, align 8
  %109 = getelementptr inbounds %20, %20* %108, i32 0, i32 2
  %110 = load %16*, %16** %109, align 8
  %111 = getelementptr inbounds %16, %16* %110, i32 0, i32 1
  %112 = load %10*, %10** %111, align 8
  %113 = getelementptr inbounds %10, %10* %112, i32 0, i32 3
  %114 = getelementptr inbounds [1 x i8], [1 x i8]* %113, i32 0, i32 0
  %115 = call i8* @get_active_function_name()
  %116 = load %16*, %16** %12, align 8
  %117 = getelementptr inbounds %16, %16* %116, i32 0, i32 1
  %118 = load %10*, %10** %117, align 8
  %119 = getelementptr inbounds %10, %10* %118, i32 0, i32 3
  %120 = getelementptr inbounds [1 x i8], [1 x i8]* %119, i32 0, i32 0
  %121 = call i8* @get_active_function_name()
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @27, i32 0, i32 0), i8* %114, i8* %115, i8* %120, i8* %121) #18
  unreachable

122:                                              ; preds = %94, %87
  %123 = load i32, i32* %4, align 4
  %124 = load i8*, i8** %10, align 8
  %125 = load i32, i32* %9, align 4
  %126 = call i32 @133(i32 %123, i8* %124, [1 x %57]* %7, i32 %125)
  store i32 %126, i32* %8, align 4
  %127 = getelementptr inbounds [1 x %57], [1 x %57]* %7, i32 0, i32 0
  %128 = bitcast %57* %127 to i8*
  call void @llvm.va_end(i8* %128)
  br label %129

129:                                              ; preds = %122, %40
  %130 = load i32, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #2
  %131 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #2
  %132 = bitcast %11*** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #2
  %133 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #2
  %134 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %134) #2
  %135 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %135) #2
  %136 = bitcast [1 x %57]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %136) #2
  ret i32 %130
}

; Function Attrs: noreturn
declare dso_local void @zend_error_noreturn(i32, i8*, ...) #7

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_parse_method_parameters_ex(i32 %0, i32 %1, %11* %2, i8* %3, ...) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %11*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca [1 x %57], align 16
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca %11**, align 8
  %14 = alloca %16*, align 8
  %15 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store %11* %2, %11** %8, align 8
  store i8* %3, i8** %9, align 8
  %16 = bitcast [1 x %57]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %16) #2
  %17 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #2
  %18 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  %19 = load i8*, i8** %9, align 8
  store i8* %19, i8** %12, align 8
  %20 = bitcast %11*** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #2
  %21 = bitcast %16** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  %22 = load %11*, %11** %8, align 8
  %23 = icmp ne %11* %22, null
  br i1 %23, label %33, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds [1 x %57], [1 x %57]* %10, i32 0, i32 0
  %26 = bitcast %57* %25 to i8*
  call void @llvm.va_start(i8* %26)
  %27 = load i32, i32* %7, align 4
  %28 = load i8*, i8** %9, align 8
  %29 = load i32, i32* %6, align 4
  %30 = call i32 @133(i32 %27, i8* %28, [1 x %57]* %10, i32 %29)
  store i32 %30, i32* %11, align 4
  %31 = getelementptr inbounds [1 x %57], [1 x %57]* %10, i32 0, i32 0
  %32 = bitcast %57* %31 to i8*
  call void @llvm.va_end(i8* %32)
  br label %120

33:                                               ; preds = %4
  %34 = load i8*, i8** %12, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %12, align 8
  %36 = getelementptr inbounds [1 x %57], [1 x %57]* %10, i32 0, i32 0
  %37 = bitcast %57* %36 to i8*
  call void @llvm.va_start(i8* %37)
  %38 = getelementptr inbounds [1 x %57], [1 x %57]* %10, i32 0, i32 0
  %39 = getelementptr inbounds %57, %57* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 16
  %41 = icmp ule i32 %40, 40
  br i1 %41, label %42, label %48

42:                                               ; preds = %33
  %43 = getelementptr inbounds %57, %57* %38, i32 0, i32 3
  %44 = load i8*, i8** %43, align 16
  %45 = getelementptr i8, i8* %44, i32 %40
  %46 = bitcast i8* %45 to %11***
  %47 = add i32 %40, 8
  store i32 %47, i32* %39, align 16
  br label %53

48:                                               ; preds = %33
  %49 = getelementptr inbounds %57, %57* %38, i32 0, i32 2
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast i8* %50 to %11***
  %52 = getelementptr i8, i8* %50, i32 8
  store i8* %52, i8** %49, align 8
  br label %53

53:                                               ; preds = %48, %42
  %54 = phi %11*** [ %46, %42 ], [ %51, %48 ]
  %55 = load %11**, %11*** %54, align 8
  store %11** %55, %11*** %13, align 8
  %56 = getelementptr inbounds [1 x %57], [1 x %57]* %10, i32 0, i32 0
  %57 = getelementptr inbounds %57, %57* %56, i32 0, i32 0
  %58 = load i32, i32* %57, align 16
  %59 = icmp ule i32 %58, 40
  br i1 %59, label %60, label %66

60:                                               ; preds = %53
  %61 = getelementptr inbounds %57, %57* %56, i32 0, i32 3
  %62 = load i8*, i8** %61, align 16
  %63 = getelementptr i8, i8* %62, i32 %58
  %64 = bitcast i8* %63 to %16**
  %65 = add i32 %58, 8
  store i32 %65, i32* %57, align 16
  br label %71

66:                                               ; preds = %53
  %67 = getelementptr inbounds %57, %57* %56, i32 0, i32 2
  %68 = load i8*, i8** %67, align 8
  %69 = bitcast i8* %68 to %16**
  %70 = getelementptr i8, i8* %68, i32 8
  store i8* %70, i8** %67, align 8
  br label %71

71:                                               ; preds = %66, %60
  %72 = phi %16** [ %64, %60 ], [ %69, %66 ]
  %73 = load %16*, %16** %72, align 8
  store %16* %73, %16** %14, align 8
  %74 = load %11*, %11** %8, align 8
  %75 = load %11**, %11*** %13, align 8
  store %11* %74, %11** %75, align 8
  %76 = load %16*, %16** %14, align 8
  %77 = icmp ne %16* %76, null
  br i1 %77, label %78, label %113

78:                                               ; preds = %71
  %79 = load %11*, %11** %8, align 8
  %80 = getelementptr inbounds %11, %11* %79, i32 0, i32 0
  %81 = bitcast %12* %80 to %20**
  %82 = load %20*, %20** %81, align 8
  %83 = getelementptr inbounds %20, %20* %82, i32 0, i32 2
  %84 = load %16*, %16** %83, align 8
  %85 = load %16*, %16** %14, align 8
  %86 = call zeroext i8 @instanceof_function(%16* %84, %16* %85)
  %87 = icmp ne i8 %86, 0
  br i1 %87, label %113, label %88

88:                                               ; preds = %78
  %89 = load i32, i32* %6, align 4
  %90 = and i32 %89, 2
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %110, label %92

92:                                               ; preds = %88
  %93 = load %16*, %16** %14, align 8
  %94 = getelementptr inbounds %16, %16* %93, i32 0, i32 1
  %95 = load %10*, %10** %94, align 8
  %96 = getelementptr inbounds %10, %10* %95, i32 0, i32 3
  %97 = getelementptr inbounds [1 x i8], [1 x i8]* %96, i32 0, i32 0
  %98 = call i8* @get_active_function_name()
  %99 = load %11*, %11** %8, align 8
  %100 = getelementptr inbounds %11, %11* %99, i32 0, i32 0
  %101 = bitcast %12* %100 to %20**
  %102 = load %20*, %20** %101, align 8
  %103 = getelementptr inbounds %20, %20* %102, i32 0, i32 2
  %104 = load %16*, %16** %103, align 8
  %105 = getelementptr inbounds %16, %16* %104, i32 0, i32 1
  %106 = load %10*, %10** %105, align 8
  %107 = getelementptr inbounds %10, %10* %106, i32 0, i32 3
  %108 = getelementptr inbounds [1 x i8], [1 x i8]* %107, i32 0, i32 0
  %109 = call i8* @get_active_function_name()
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @27, i32 0, i32 0), i8* %97, i8* %98, i8* %108, i8* %109) #18
  unreachable

110:                                              ; preds = %88
  %111 = getelementptr inbounds [1 x %57], [1 x %57]* %10, i32 0, i32 0
  %112 = bitcast %57* %111 to i8*
  call void @llvm.va_end(i8* %112)
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %122

113:                                              ; preds = %78, %71
  %114 = load i32, i32* %7, align 4
  %115 = load i8*, i8** %12, align 8
  %116 = load i32, i32* %6, align 4
  %117 = call i32 @133(i32 %114, i8* %115, [1 x %57]* %10, i32 %116)
  store i32 %117, i32* %11, align 4
  %118 = getelementptr inbounds [1 x %57], [1 x %57]* %10, i32 0, i32 0
  %119 = bitcast %57* %118 to i8*
  call void @llvm.va_end(i8* %119)
  br label %120

120:                                              ; preds = %113, %24
  %121 = load i32, i32* %11, align 4
  store i32 %121, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %122

122:                                              ; preds = %120, %110
  %123 = bitcast %16** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #2
  %124 = bitcast %11*** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #2
  %125 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #2
  %126 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %126) #2
  %127 = bitcast [1 x %57]* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %127) #2
  %128 = load i32, i32* %5, align 4
  ret i32 %128
}

; Function Attrs: nounwind uwtable
define dso_local i32 @_array_init(%11* %0, i32 %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca %5*, align 8
  store %11* %0, %11** %3, align 8
  store i32 %1, i32* %4, align 4
  br label %7

7:                                                ; preds = %2
  %8 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #2
  %9 = load %11*, %11** %3, align 8
  store %11* %9, %11** %5, align 8
  %10 = bitcast %5** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = call noalias i8* @_emalloc_56()
  %12 = bitcast i8* %11 to %5*
  store %5* %12, %5** %6, align 8
  %13 = load %5*, %5** %6, align 8
  %14 = load %11*, %11** %5, align 8
  %15 = getelementptr inbounds %11, %11* %14, i32 0, i32 0
  %16 = bitcast %12* %15 to %5**
  store %5* %13, %5** %16, align 8
  %17 = load %11*, %11** %5, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  store i32 5127, i32* %19, align 8
  %20 = bitcast %5** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #2
  %21 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #2
  br label %22

22:                                               ; preds = %7
  %23 = load %11*, %11** %3, align 8
  %24 = getelementptr inbounds %11, %11* %23, i32 0, i32 0
  %25 = bitcast %12* %24 to %5**
  %26 = load %5*, %5** %25, align 8
  %27 = load i32, i32* %4, align 4
  call void @_zend_hash_init(%5* %26, i32 %27, void (%11*)* @_zval_ptr_dtor, i8 zeroext 0)
  ret i32 0
}

declare dso_local noalias i8* @_emalloc_56() #4

declare dso_local void @_zend_hash_init(%5*, i32, void (%11*)*, i8 zeroext) #4

; Function Attrs: nounwind uwtable
define dso_local void @zend_merge_properties(%11* %0, %5* %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca %5*, align 8
  %5 = alloca %21*, align 8
  %6 = alloca %16*, align 8
  %7 = alloca %10*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %5*, align 8
  %10 = alloca %9*, align 8
  %11 = alloca %9*, align 8
  %12 = alloca %11*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %11, align 8
  %15 = alloca %11*, align 8
  %16 = alloca %10*, align 8
  store %11* %0, %11** %3, align 8
  store %5* %1, %5** %4, align 8
  %17 = bitcast %21** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load %11*, %11** %3, align 8
  %19 = getelementptr inbounds %11, %11* %18, i32 0, i32 0
  %20 = bitcast %12* %19 to %20**
  %21 = load %20*, %20** %20, align 8
  %22 = getelementptr inbounds %20, %20* %21, i32 0, i32 3
  %23 = load %21*, %21** %22, align 8
  store %21* %23, %21** %5, align 8
  %24 = bitcast %16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #2
  %25 = load %16*, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  store %16* %25, %16** %6, align 8
  %26 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #2
  %27 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #2
  %28 = load %11*, %11** %3, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to %20**
  %31 = load %20*, %20** %30, align 8
  %32 = getelementptr inbounds %20, %20* %31, i32 0, i32 2
  %33 = load %16*, %16** %32, align 8
  store %16* %33, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  br label %34

34:                                               ; preds = %2
  %35 = bitcast %5** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #2
  %36 = load %5*, %5** %4, align 8
  store %5* %36, %5** %9, align 8
  %37 = bitcast %9** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #2
  %38 = load %5*, %5** %9, align 8
  %39 = getelementptr inbounds %5, %5* %38, i32 0, i32 3
  %40 = load %9*, %9** %39, align 8
  store %9* %40, %9** %10, align 8
  %41 = bitcast %9** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #2
  %42 = load %9*, %9** %10, align 8
  %43 = load %5*, %5** %9, align 8
  %44 = getelementptr inbounds %5, %5* %43, i32 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %9, %9* %42, i64 %46
  store %9* %47, %9** %11, align 8
  br label %48

48:                                               ; preds = %113, %34
  %49 = load %9*, %9** %10, align 8
  %50 = load %9*, %9** %11, align 8
  %51 = icmp ne %9* %49, %50
  br i1 %51, label %52, label %116

52:                                               ; preds = %48
  %53 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #2
  %54 = load %9*, %9** %10, align 8
  %55 = getelementptr inbounds %9, %9* %54, i32 0, i32 0
  store %11* %55, %11** %12, align 8
  %56 = load %11*, %11** %12, align 8
  %57 = call zeroext i8 @125(%11* %56)
  %58 = zext i8 %57 to i32
  %59 = icmp eq i32 %58, 0
  %60 = xor i1 %59, true
  %61 = xor i1 %60, true
  %62 = zext i1 %61 to i32
  %63 = sext i32 %62 to i64
  %64 = call i64 @llvm.expect.i64(i64 %63, i64 0)
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %52
  store i32 6, i32* %13, align 4
  br label %109

67:                                               ; preds = %52
  %68 = load %9*, %9** %10, align 8
  %69 = getelementptr inbounds %9, %9* %68, i32 0, i32 2
  %70 = load %10*, %10** %69, align 8
  store %10* %70, %10** %7, align 8
  %71 = load %11*, %11** %12, align 8
  store %11* %71, %11** %8, align 8
  %72 = load %10*, %10** %7, align 8
  %73 = icmp ne %10* %72, null
  br i1 %73, label %74, label %108

74:                                               ; preds = %67
  %75 = bitcast %11* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %75) #2
  br label %76

76:                                               ; preds = %74
  %77 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #2
  store %11* %14, %11** %15, align 8
  %78 = bitcast %10** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %78) #2
  %79 = load %10*, %10** %7, align 8
  store %10* %79, %10** %16, align 8
  %80 = load %10*, %10** %16, align 8
  %81 = load %11*, %11** %15, align 8
  %82 = getelementptr inbounds %11, %11* %81, i32 0, i32 0
  %83 = bitcast %12* %82 to %10**
  store %10* %80, %10** %83, align 8
  %84 = load %10*, %10** %16, align 8
  %85 = getelementptr inbounds %10, %10* %84, i32 0, i32 0
  %86 = getelementptr inbounds %6, %6* %85, i32 0, i32 1
  %87 = bitcast %7* %86 to %63*
  %88 = getelementptr inbounds %63, %63* %87, i32 0, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = and i32 %90, 2
  %92 = icmp ne i32 %91, 0
  %93 = zext i1 %92 to i64
  %94 = select i1 %92, i32 6, i32 5126
  %95 = load %11*, %11** %15, align 8
  %96 = getelementptr inbounds %11, %11* %95, i32 0, i32 1
  %97 = bitcast %13* %96 to i32*
  store i32 %94, i32* %97, align 8
  %98 = bitcast %10** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #2
  %99 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #2
  br label %100

100:                                              ; preds = %76
  br label %101

101:                                              ; preds = %100
  %102 = load %21*, %21** %5, align 8
  %103 = getelementptr inbounds %21, %21* %102, i32 0, i32 5
  %104 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %103, align 8
  %105 = load %11*, %11** %3, align 8
  %106 = load %11*, %11** %8, align 8
  call void %104(%11* %105, %11* %14, %11* %106, i8** null)
  %107 = bitcast %11* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %107) #2
  br label %108

108:                                              ; preds = %101, %67
  store i32 0, i32* %13, align 4
  br label %109

109:                                              ; preds = %108, %66
  %110 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110) #2
  %111 = load i32, i32* %13, align 4
  switch i32 %111, label %127 [
    i32 0, label %112
    i32 6, label %113
  ]

112:                                              ; preds = %109
  br label %113

113:                                              ; preds = %112, %109
  %114 = load %9*, %9** %10, align 8
  %115 = getelementptr inbounds %9, %9* %114, i32 1
  store %9* %115, %9** %10, align 8
  br label %48

116:                                              ; preds = %48
  %117 = bitcast %9** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #2
  %118 = bitcast %9** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %118) #2
  %119 = bitcast %5** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %119) #2
  br label %120

120:                                              ; preds = %116
  br label %121

121:                                              ; preds = %120
  %122 = load %16*, %16** %6, align 8
  store %16* %122, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %123 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #2
  %124 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #2
  %125 = bitcast %16** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #2
  %126 = bitcast %21** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #2
  ret void

127:                                              ; preds = %109
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_update_class_constants(%16* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca %61*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %58*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %11*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %58*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %11*, align 8
  %17 = alloca %11*, align 8
  %18 = alloca %58*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %16*, align 8
  %21 = alloca %64*, align 8
  %22 = alloca %11*, align 8
  %23 = alloca %65*, align 8
  %24 = alloca %5*, align 8
  %25 = alloca %9*, align 8
  %26 = alloca %9*, align 8
  %27 = alloca %11*, align 8
  %28 = alloca i32, align 4
  %29 = alloca %5*, align 8
  %30 = alloca %9*, align 8
  %31 = alloca %9*, align 8
  %32 = alloca %11*, align 8
  store %16* %0, %16** %3, align 8
  %33 = load %16*, %16** %3, align 8
  %34 = getelementptr inbounds %16, %16* %33, i32 0, i32 4
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 1048576
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %538, label %38

38:                                               ; preds = %1
  %39 = load %16*, %16** %3, align 8
  %40 = getelementptr inbounds %16, %16* %39, i32 0, i32 2
  %41 = load %16*, %16** %40, align 8
  %42 = icmp ne %16* %41, null
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = load %16*, %16** %3, align 8
  %45 = getelementptr inbounds %16, %16* %44, i32 0, i32 2
  %46 = load %16*, %16** %45, align 8
  %47 = call i32 @zend_update_class_constants(%16* %46)
  %48 = icmp ne i32 %47, 0
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %43
  store i32 -1, i32* %2, align 4
  br label %539

56:                                               ; preds = %43
  br label %57

57:                                               ; preds = %56, %38
  %58 = load %16*, %16** %3, align 8
  %59 = getelementptr inbounds %16, %16* %58, i32 0, i32 9
  %60 = load %11*, %11** %59, align 8
  %61 = icmp ne %11* %60, null
  br i1 %61, label %298, label %62

62:                                               ; preds = %57
  %63 = load %16*, %16** %3, align 8
  %64 = getelementptr inbounds %16, %16* %63, i32 0, i32 6
  %65 = load i32, i32* %64, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %298

67:                                               ; preds = %62
  %68 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %68) #2
  %69 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %69) #2
  %70 = load %16*, %16** %3, align 8
  %71 = getelementptr inbounds %16, %16* %70, i32 0, i32 6
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %72 to i64
  %74 = mul i64 16, %73
  %75 = call noalias i8* @_emalloc(i64 %74) #19
  %76 = bitcast i8* %75 to %11*
  %77 = load %16*, %16** %3, align 8
  %78 = getelementptr inbounds %16, %16* %77, i32 0, i32 9
  store %11* %76, %11** %78, align 8
  store i32 0, i32* %4, align 4
  br label %79

79:                                               ; preds = %292, %67
  %80 = load i32, i32* %4, align 4
  %81 = load %16*, %16** %3, align 8
  %82 = getelementptr inbounds %16, %16* %81, i32 0, i32 6
  %83 = load i32, i32* %82, align 4
  %84 = icmp slt i32 %80, %83
  br i1 %84, label %85, label %295

85:                                               ; preds = %79
  %86 = load %16*, %16** %3, align 8
  %87 = getelementptr inbounds %16, %16* %86, i32 0, i32 8
  %88 = load %11*, %11** %87, align 8
  %89 = load i32, i32* %4, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %11, %11* %88, i64 %90
  store %11* %91, %11** %5, align 8
  %92 = load %11*, %11** %5, align 8
  %93 = call zeroext i8 @125(%11* %92)
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 10
  br i1 %95, label %96, label %236

96:                                               ; preds = %85
  %97 = load %16*, %16** %3, align 8
  %98 = getelementptr inbounds %16, %16* %97, i32 0, i32 2
  %99 = load %16*, %16** %98, align 8
  %100 = icmp ne %16* %99, null
  br i1 %100, label %101, label %236

101:                                              ; preds = %96
  %102 = load i32, i32* %4, align 4
  %103 = load %16*, %16** %3, align 8
  %104 = getelementptr inbounds %16, %16* %103, i32 0, i32 2
  %105 = load %16*, %16** %104, align 8
  %106 = getelementptr inbounds %16, %16* %105, i32 0, i32 6
  %107 = load i32, i32* %106, align 4
  %108 = icmp slt i32 %102, %107
  br i1 %108, label %109, label %236

109:                                              ; preds = %101
  %110 = load %11*, %11** %5, align 8
  %111 = load %16*, %16** %3, align 8
  %112 = getelementptr inbounds %16, %16* %111, i32 0, i32 2
  %113 = load %16*, %16** %112, align 8
  %114 = getelementptr inbounds %16, %16* %113, i32 0, i32 8
  %115 = load %11*, %11** %114, align 8
  %116 = load i32, i32* %4, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %11, %11* %115, i64 %117
  %119 = icmp eq %11* %110, %118
  br i1 %119, label %120, label %236

120:                                              ; preds = %109
  %121 = load %16*, %16** %3, align 8
  %122 = getelementptr inbounds %16, %16* %121, i32 0, i32 2
  %123 = load %16*, %16** %122, align 8
  %124 = getelementptr inbounds %16, %16* %123, i32 0, i32 9
  %125 = load %11*, %11** %124, align 8
  %126 = load i32, i32* %4, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %11, %11* %125, i64 %127
  %129 = call zeroext i8 @125(%11* %128)
  %130 = zext i8 %129 to i32
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %236

132:                                              ; preds = %120
  %133 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %133) #2
  %134 = load %16*, %16** %3, align 8
  %135 = getelementptr inbounds %16, %16* %134, i32 0, i32 2
  %136 = load %16*, %16** %135, align 8
  %137 = getelementptr inbounds %16, %16* %136, i32 0, i32 9
  %138 = load %11*, %11** %137, align 8
  %139 = load i32, i32* %4, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %11, %11* %138, i64 %140
  store %11* %141, %11** %6, align 8
  br label %142

142:                                              ; preds = %132
  %143 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %143) #2
  %144 = call noalias i8* @_emalloc_24()
  %145 = bitcast i8* %144 to %61*
  store %61* %145, %61** %7, align 8
  %146 = load %61*, %61** %7, align 8
  %147 = getelementptr inbounds %61, %61* %146, i32 0, i32 0
  %148 = getelementptr inbounds %6, %6* %147, i32 0, i32 0
  store i32 1, i32* %148, align 8
  %149 = load %61*, %61** %7, align 8
  %150 = getelementptr inbounds %61, %61* %149, i32 0, i32 0
  %151 = getelementptr inbounds %6, %6* %150, i32 0, i32 1
  %152 = bitcast %7* %151 to i32*
  store i32 10, i32* %152, align 4
  br label %153

153:                                              ; preds = %142
  %154 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %154) #2
  %155 = load %61*, %61** %7, align 8
  %156 = getelementptr inbounds %61, %61* %155, i32 0, i32 1
  store %11* %156, %11** %8, align 8
  %157 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %157) #2
  %158 = load %11*, %11** %6, align 8
  store %11* %158, %11** %9, align 8
  %159 = bitcast %58** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %159) #2
  %160 = load %11*, %11** %9, align 8
  %161 = getelementptr inbounds %11, %11* %160, i32 0, i32 0
  %162 = bitcast %12* %161 to %58**
  %163 = load %58*, %58** %162, align 8
  store %58* %163, %58** %10, align 8
  %164 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %164) #2
  %165 = load %11*, %11** %9, align 8
  %166 = getelementptr inbounds %11, %11* %165, i32 0, i32 1
  %167 = bitcast %13* %166 to i32*
  %168 = load i32, i32* %167, align 8
  store i32 %168, i32* %11, align 4
  br label %169

169:                                              ; preds = %153
  %170 = load %58*, %58** %10, align 8
  %171 = load %11*, %11** %8, align 8
  %172 = getelementptr inbounds %11, %11* %171, i32 0, i32 0
  %173 = bitcast %12* %172 to %58**
  store %58* %170, %58** %173, align 8
  %174 = load i32, i32* %11, align 4
  %175 = load %11*, %11** %8, align 8
  %176 = getelementptr inbounds %11, %11* %175, i32 0, i32 1
  %177 = bitcast %13* %176 to i32*
  store i32 %174, i32* %177, align 8
  br label %178

178:                                              ; preds = %169
  br label %179

179:                                              ; preds = %178
  %180 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %180) #2
  %181 = bitcast %58** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %181) #2
  %182 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #2
  %183 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %183) #2
  br label %184

184:                                              ; preds = %179
  br label %185

185:                                              ; preds = %184
  %186 = load %61*, %61** %7, align 8
  %187 = load %11*, %11** %6, align 8
  %188 = getelementptr inbounds %11, %11* %187, i32 0, i32 0
  %189 = bitcast %12* %188 to %61**
  store %61* %186, %61** %189, align 8
  %190 = load %11*, %11** %6, align 8
  %191 = getelementptr inbounds %11, %11* %190, i32 0, i32 1
  %192 = bitcast %13* %191 to i32*
  store i32 1034, i32* %192, align 8
  %193 = bitcast %61** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #2
  br label %194

194:                                              ; preds = %185
  br label %195

195:                                              ; preds = %194
  br label %196

196:                                              ; preds = %195
  %197 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %197) #2
  %198 = load %16*, %16** %3, align 8
  %199 = getelementptr inbounds %16, %16* %198, i32 0, i32 9
  %200 = load %11*, %11** %199, align 8
  %201 = load i32, i32* %4, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds %11, %11* %200, i64 %202
  store %11* %203, %11** %12, align 8
  %204 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %204) #2
  %205 = load %11*, %11** %6, align 8
  store %11* %205, %11** %13, align 8
  %206 = bitcast %58** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %206) #2
  %207 = load %11*, %11** %13, align 8
  %208 = getelementptr inbounds %11, %11* %207, i32 0, i32 0
  %209 = bitcast %12* %208 to %58**
  %210 = load %58*, %58** %209, align 8
  store %58* %210, %58** %14, align 8
  %211 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %211) #2
  %212 = load %11*, %11** %13, align 8
  %213 = getelementptr inbounds %11, %11* %212, i32 0, i32 1
  %214 = bitcast %13* %213 to i32*
  %215 = load i32, i32* %214, align 8
  store i32 %215, i32* %15, align 4
  br label %216

216:                                              ; preds = %196
  %217 = load %58*, %58** %14, align 8
  %218 = load %11*, %11** %12, align 8
  %219 = getelementptr inbounds %11, %11* %218, i32 0, i32 0
  %220 = bitcast %12* %219 to %58**
  store %58* %217, %58** %220, align 8
  %221 = load i32, i32* %15, align 4
  %222 = load %11*, %11** %12, align 8
  %223 = getelementptr inbounds %11, %11* %222, i32 0, i32 1
  %224 = bitcast %13* %223 to i32*
  store i32 %221, i32* %224, align 8
  br label %225

225:                                              ; preds = %216
  br label %226

226:                                              ; preds = %225
  %227 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %227) #2
  %228 = bitcast %58** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %228) #2
  %229 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #2
  %230 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #2
  br label %231

231:                                              ; preds = %226
  br label %232

232:                                              ; preds = %231
  %233 = load %11*, %11** %6, align 8
  %234 = call i32 @128(%11* %233)
  %235 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %235) #2
  br label %291

236:                                              ; preds = %120, %109, %101, %96, %85
  br label %237

237:                                              ; preds = %236
  %238 = bitcast %11** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %238) #2
  %239 = load %16*, %16** %3, align 8
  %240 = getelementptr inbounds %16, %16* %239, i32 0, i32 9
  %241 = load %11*, %11** %240, align 8
  %242 = load i32, i32* %4, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds %11, %11* %241, i64 %243
  store %11* %244, %11** %16, align 8
  %245 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %245) #2
  %246 = load %11*, %11** %5, align 8
  store %11* %246, %11** %17, align 8
  %247 = bitcast %58** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %247) #2
  %248 = load %11*, %11** %17, align 8
  %249 = getelementptr inbounds %11, %11* %248, i32 0, i32 0
  %250 = bitcast %12* %249 to %58**
  %251 = load %58*, %58** %250, align 8
  store %58* %251, %58** %18, align 8
  %252 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %252) #2
  %253 = load %11*, %11** %17, align 8
  %254 = getelementptr inbounds %11, %11* %253, i32 0, i32 1
  %255 = bitcast %13* %254 to i32*
  %256 = load i32, i32* %255, align 8
  store i32 %256, i32* %19, align 4
  br label %257

257:                                              ; preds = %237
  %258 = load %58*, %58** %18, align 8
  %259 = load %11*, %11** %16, align 8
  %260 = getelementptr inbounds %11, %11* %259, i32 0, i32 0
  %261 = bitcast %12* %260 to %58**
  store %58* %258, %58** %261, align 8
  %262 = load i32, i32* %19, align 4
  %263 = load %11*, %11** %16, align 8
  %264 = getelementptr inbounds %11, %11* %263, i32 0, i32 1
  %265 = bitcast %13* %264 to i32*
  store i32 %262, i32* %265, align 8
  br label %266

266:                                              ; preds = %257
  br label %267

267:                                              ; preds = %266
  %268 = load i32, i32* %19, align 4
  %269 = and i32 %268, 5120
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %271, label %284

271:                                              ; preds = %267
  %272 = load i32, i32* %19, align 4
  %273 = and i32 %272, 4096
  %274 = icmp ne i32 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %271
  %276 = load %11*, %11** %16, align 8
  call void @_zval_copy_ctor_func(%11* %276)
  br label %283

277:                                              ; preds = %271
  %278 = load %58*, %58** %18, align 8
  %279 = getelementptr inbounds %58, %58* %278, i32 0, i32 0
  %280 = getelementptr inbounds %6, %6* %279, i32 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = add i32 %281, 1
  store i32 %282, i32* %280, align 4
  br label %283

283:                                              ; preds = %277, %275
  br label %284

284:                                              ; preds = %283, %267
  %285 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %285) #2
  %286 = bitcast %58** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %286) #2
  %287 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %287) #2
  %288 = bitcast %11** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %288) #2
  br label %289

289:                                              ; preds = %284
  br label %290

290:                                              ; preds = %289
  br label %291

291:                                              ; preds = %290, %232
  br label %292

292:                                              ; preds = %291
  %293 = load i32, i32* %4, align 4
  %294 = add nsw i32 %293, 1
  store i32 %294, i32* %4, align 4
  br label %79

295:                                              ; preds = %79
  %296 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296) #2
  %297 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %297) #2
  br label %533

298:                                              ; preds = %62, %57
  %299 = bitcast %16** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %299) #2
  %300 = bitcast %64** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %300) #2
  %301 = bitcast %11** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %301) #2
  %302 = bitcast %65** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %302) #2
  br label %303

303:                                              ; preds = %298
  %304 = bitcast %5** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %304) #2
  %305 = load %16*, %16** %3, align 8
  %306 = getelementptr inbounds %16, %16* %305, i32 0, i32 12
  store %5* %306, %5** %24, align 8
  %307 = bitcast %9** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %307) #2
  %308 = load %5*, %5** %24, align 8
  %309 = getelementptr inbounds %5, %5* %308, i32 0, i32 3
  %310 = load %9*, %9** %309, align 8
  store %9* %310, %9** %25, align 8
  %311 = bitcast %9** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %311) #2
  %312 = load %9*, %9** %25, align 8
  %313 = load %5*, %5** %24, align 8
  %314 = getelementptr inbounds %5, %5* %313, i32 0, i32 4
  %315 = load i32, i32* %314, align 8
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds %9, %9* %312, i64 %316
  store %9* %317, %9** %26, align 8
  br label %318

318:                                              ; preds = %373, %303
  %319 = load %9*, %9** %25, align 8
  %320 = load %9*, %9** %26, align 8
  %321 = icmp ne %9* %319, %320
  br i1 %321, label %322, label %376

322:                                              ; preds = %318
  %323 = bitcast %11** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %323) #2
  %324 = load %9*, %9** %25, align 8
  %325 = getelementptr inbounds %9, %9* %324, i32 0, i32 0
  store %11* %325, %11** %27, align 8
  %326 = load %11*, %11** %27, align 8
  %327 = call zeroext i8 @125(%11* %326)
  %328 = zext i8 %327 to i32
  %329 = icmp eq i32 %328, 0
  %330 = xor i1 %329, true
  %331 = xor i1 %330, true
  %332 = zext i1 %331 to i32
  %333 = sext i32 %332 to i64
  %334 = call i64 @llvm.expect.i64(i64 %333, i64 0)
  %335 = icmp ne i64 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %322
  store i32 23, i32* %28, align 4
  br label %369

337:                                              ; preds = %322
  %338 = load %11*, %11** %27, align 8
  %339 = getelementptr inbounds %11, %11* %338, i32 0, i32 0
  %340 = bitcast %12* %339 to i8**
  %341 = load i8*, i8** %340, align 8
  %342 = bitcast i8* %341 to %64*
  store %64* %342, %64** %21, align 8
  %343 = load %64*, %64** %21, align 8
  %344 = getelementptr inbounds %64, %64* %343, i32 0, i32 0
  store %11* %344, %11** %22, align 8
  %345 = load %11*, %11** %22, align 8
  %346 = getelementptr inbounds %11, %11* %345, i32 0, i32 1
  %347 = bitcast %13* %346 to %59*
  %348 = getelementptr inbounds %59, %59* %347, i32 0, i32 1
  %349 = load i8, i8* %348, align 1
  %350 = zext i8 %349 to i32
  %351 = and i32 %350, 1
  %352 = icmp ne i32 %351, 0
  br i1 %352, label %353, label %368

353:                                              ; preds = %337
  %354 = load %11*, %11** %22, align 8
  %355 = load %64*, %64** %21, align 8
  %356 = getelementptr inbounds %64, %64* %355, i32 0, i32 2
  %357 = load %16*, %16** %356, align 8
  %358 = call i32 @zval_update_constant_ex(%11* %354, %16* %357)
  %359 = icmp ne i32 %358, 0
  %360 = xor i1 %359, true
  %361 = xor i1 %360, true
  %362 = zext i1 %361 to i32
  %363 = sext i32 %362 to i64
  %364 = call i64 @llvm.expect.i64(i64 %363, i64 0)
  %365 = icmp ne i64 %364, 0
  br i1 %365, label %366, label %367

366:                                              ; preds = %353
  store i32 -1, i32* %2, align 4
  store i32 1, i32* %28, align 4
  br label %369

367:                                              ; preds = %353
  br label %368

368:                                              ; preds = %367, %337
  store i32 0, i32* %28, align 4
  br label %369

369:                                              ; preds = %368, %366, %336
  %370 = bitcast %11** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370) #2
  %371 = load i32, i32* %28, align 4
  switch i32 %371, label %377 [
    i32 0, label %372
    i32 23, label %373
  ]

372:                                              ; preds = %369
  br label %373

373:                                              ; preds = %372, %369
  %374 = load %9*, %9** %25, align 8
  %375 = getelementptr inbounds %9, %9* %374, i32 1
  store %9* %375, %9** %25, align 8
  br label %318

376:                                              ; preds = %318
  store i32 0, i32* %28, align 4
  br label %377

377:                                              ; preds = %376, %369
  %378 = bitcast %9** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %378) #2
  %379 = bitcast %9** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %379) #2
  %380 = bitcast %5** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %380) #2
  %381 = load i32, i32* %28, align 4
  switch i32 %381, label %526 [
    i32 0, label %382
  ]

382:                                              ; preds = %377
  br label %383

383:                                              ; preds = %382
  br label %384

384:                                              ; preds = %383
  %385 = load %16*, %16** %3, align 8
  store %16* %385, %16** %20, align 8
  br label %386

386:                                              ; preds = %521, %384
  %387 = load %16*, %16** %20, align 8
  %388 = icmp ne %16* %387, null
  br i1 %388, label %389, label %525

389:                                              ; preds = %386
  br label %390

390:                                              ; preds = %389
  %391 = bitcast %5** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %391) #2
  %392 = load %16*, %16** %20, align 8
  %393 = getelementptr inbounds %16, %16* %392, i32 0, i32 11
  store %5* %393, %5** %29, align 8
  %394 = bitcast %9** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %394) #2
  %395 = load %5*, %5** %29, align 8
  %396 = getelementptr inbounds %5, %5* %395, i32 0, i32 3
  %397 = load %9*, %9** %396, align 8
  store %9* %397, %9** %30, align 8
  %398 = bitcast %9** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %398) #2
  %399 = load %9*, %9** %30, align 8
  %400 = load %5*, %5** %29, align 8
  %401 = getelementptr inbounds %5, %5* %400, i32 0, i32 4
  %402 = load i32, i32* %401, align 8
  %403 = zext i32 %402 to i64
  %404 = getelementptr inbounds %9, %9* %399, i64 %403
  store %9* %404, %9** %31, align 8
  br label %405

405:                                              ; preds = %510, %390
  %406 = load %9*, %9** %30, align 8
  %407 = load %9*, %9** %31, align 8
  %408 = icmp ne %9* %406, %407
  br i1 %408, label %409, label %513

409:                                              ; preds = %405
  %410 = bitcast %11** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %410) #2
  %411 = load %9*, %9** %30, align 8
  %412 = getelementptr inbounds %9, %9* %411, i32 0, i32 0
  store %11* %412, %11** %32, align 8
  %413 = load %11*, %11** %32, align 8
  %414 = call zeroext i8 @125(%11* %413)
  %415 = zext i8 %414 to i32
  %416 = icmp eq i32 %415, 0
  %417 = xor i1 %416, true
  %418 = xor i1 %417, true
  %419 = zext i1 %418 to i32
  %420 = sext i32 %419 to i64
  %421 = call i64 @llvm.expect.i64(i64 %420, i64 0)
  %422 = icmp ne i64 %421, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %409
  store i32 30, i32* %28, align 4
  br label %506

424:                                              ; preds = %409
  %425 = load %11*, %11** %32, align 8
  %426 = getelementptr inbounds %11, %11* %425, i32 0, i32 0
  %427 = bitcast %12* %426 to i8**
  %428 = load i8*, i8** %427, align 8
  %429 = bitcast i8* %428 to %65*
  store %65* %429, %65** %23, align 8
  %430 = load %65*, %65** %23, align 8
  %431 = getelementptr inbounds %65, %65* %430, i32 0, i32 4
  %432 = load %16*, %16** %431, align 8
  %433 = load %16*, %16** %20, align 8
  %434 = icmp eq %16* %432, %433
  br i1 %434, label %435, label %505

435:                                              ; preds = %424
  %436 = load %65*, %65** %23, align 8
  %437 = getelementptr inbounds %65, %65* %436, i32 0, i32 1
  %438 = load i32, i32* %437, align 4
  %439 = and i32 %438, 1
  %440 = icmp ne i32 %439, 0
  br i1 %440, label %441, label %450

441:                                              ; preds = %435
  %442 = load %16*, %16** %3, align 8
  %443 = getelementptr inbounds %16, %16* %442, i32 0, i32 9
  %444 = load %11*, %11** %443, align 8
  %445 = load %65*, %65** %23, align 8
  %446 = getelementptr inbounds %65, %65* %445, i32 0, i32 0
  %447 = load i32, i32* %446, align 8
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds %11, %11* %444, i64 %448
  store %11* %449, %11** %22, align 8
  br label %462

450:                                              ; preds = %435
  %451 = load %16*, %16** %3, align 8
  %452 = getelementptr inbounds %16, %16* %451, i32 0, i32 7
  %453 = load %11*, %11** %452, align 8
  %454 = bitcast %11* %453 to i8*
  %455 = load %65*, %65** %23, align 8
  %456 = getelementptr inbounds %65, %65* %455, i32 0, i32 0
  %457 = load i32, i32* %456, align 8
  %458 = zext i32 %457 to i64
  %459 = getelementptr inbounds i8, i8* %454, i64 %458
  %460 = getelementptr inbounds i8, i8* %459, i64 sub (i64 0, i64 zext (i32 ptrtoint (%11* getelementptr inbounds (%20, %20* null, i32 0, i32 5, i64 0) to i32) to i64))
  %461 = bitcast i8* %460 to %11*
  store %11* %461, %11** %22, align 8
  br label %462

462:                                              ; preds = %450, %441
  br label %463

463:                                              ; preds = %462
  %464 = load %11*, %11** %22, align 8
  %465 = call zeroext i8 @125(%11* %464)
  %466 = zext i8 %465 to i32
  %467 = icmp eq i32 %466, 10
  %468 = xor i1 %467, true
  %469 = xor i1 %468, true
  %470 = zext i1 %469 to i32
  %471 = sext i32 %470 to i64
  %472 = call i64 @llvm.expect.i64(i64 %471, i64 0)
  %473 = icmp ne i64 %472, 0
  br i1 %473, label %474, label %480

474:                                              ; preds = %463
  %475 = load %11*, %11** %22, align 8
  %476 = getelementptr inbounds %11, %11* %475, i32 0, i32 0
  %477 = bitcast %12* %476 to %61**
  %478 = load %61*, %61** %477, align 8
  %479 = getelementptr inbounds %61, %61* %478, i32 0, i32 1
  store %11* %479, %11** %22, align 8
  br label %480

480:                                              ; preds = %474, %463
  br label %481

481:                                              ; preds = %480
  br label %482

482:                                              ; preds = %481
  %483 = load %11*, %11** %22, align 8
  %484 = getelementptr inbounds %11, %11* %483, i32 0, i32 1
  %485 = bitcast %13* %484 to %59*
  %486 = getelementptr inbounds %59, %59* %485, i32 0, i32 1
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = and i32 %488, 1
  %490 = icmp ne i32 %489, 0
  br i1 %490, label %491, label %504

491:                                              ; preds = %482
  %492 = load %11*, %11** %22, align 8
  %493 = load %16*, %16** %20, align 8
  %494 = call i32 @zval_update_constant_ex(%11* %492, %16* %493)
  %495 = icmp ne i32 %494, 0
  %496 = xor i1 %495, true
  %497 = xor i1 %496, true
  %498 = zext i1 %497 to i32
  %499 = sext i32 %498 to i64
  %500 = call i64 @llvm.expect.i64(i64 %499, i64 0)
  %501 = icmp ne i64 %500, 0
  br i1 %501, label %502, label %503

502:                                              ; preds = %491
  store i32 -1, i32* %2, align 4
  store i32 1, i32* %28, align 4
  br label %506

503:                                              ; preds = %491
  br label %504

504:                                              ; preds = %503, %482
  br label %505

505:                                              ; preds = %504, %424
  store i32 0, i32* %28, align 4
  br label %506

506:                                              ; preds = %505, %502, %423
  %507 = bitcast %11** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %507) #2
  %508 = load i32, i32* %28, align 4
  switch i32 %508, label %514 [
    i32 0, label %509
    i32 30, label %510
  ]

509:                                              ; preds = %506
  br label %510

510:                                              ; preds = %509, %506
  %511 = load %9*, %9** %30, align 8
  %512 = getelementptr inbounds %9, %9* %511, i32 1
  store %9* %512, %9** %30, align 8
  br label %405

513:                                              ; preds = %405
  store i32 0, i32* %28, align 4
  br label %514

514:                                              ; preds = %513, %506
  %515 = bitcast %9** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %515) #2
  %516 = bitcast %9** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %516) #2
  %517 = bitcast %5** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %517) #2
  %518 = load i32, i32* %28, align 4
  switch i32 %518, label %526 [
    i32 0, label %519
  ]

519:                                              ; preds = %514
  br label %520

520:                                              ; preds = %519
  br label %521

521:                                              ; preds = %520
  %522 = load %16*, %16** %20, align 8
  %523 = getelementptr inbounds %16, %16* %522, i32 0, i32 2
  %524 = load %16*, %16** %523, align 8
  store %16* %524, %16** %20, align 8
  br label %386

525:                                              ; preds = %386
  store i32 0, i32* %28, align 4
  br label %526

526:                                              ; preds = %525, %514, %377
  %527 = bitcast %65** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %527) #2
  %528 = bitcast %11** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %528) #2
  %529 = bitcast %64** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %529) #2
  %530 = bitcast %16** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %530) #2
  %531 = load i32, i32* %28, align 4
  switch i32 %531, label %541 [
    i32 0, label %532
    i32 1, label %539
  ]

532:                                              ; preds = %526
  br label %533

533:                                              ; preds = %532, %295
  %534 = load %16*, %16** %3, align 8
  %535 = getelementptr inbounds %16, %16* %534, i32 0, i32 4
  %536 = load i32, i32* %535, align 4
  %537 = or i32 %536, 1048576
  store i32 %537, i32* %535, align 4
  br label %538

538:                                              ; preds = %533, %1
  store i32 0, i32* %2, align 4
  br label %539

539:                                              ; preds = %538, %526, %55
  %540 = load i32, i32* %2, align 4
  ret i32 %540

541:                                              ; preds = %526
  unreachable
}

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @_emalloc(i64) #8

declare dso_local noalias i8* @_emalloc_24() #4

declare dso_local i32 @zval_update_constant_ex(%11*, %16*) #4

; Function Attrs: nounwind uwtable
define dso_local void @object_properties_init(%20* %0, %16* %1) #0 {
  %3 = alloca %20*, align 8
  %4 = alloca %16*, align 8
  %5 = alloca %11*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %58*, align 8
  %11 = alloca i32, align 4
  store %20* %0, %20** %3, align 8
  store %16* %1, %16** %4, align 8
  %12 = load %16*, %16** %4, align 8
  %13 = getelementptr inbounds %16, %16* %12, i32 0, i32 5
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %89

16:                                               ; preds = %2
  %17 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load %16*, %16** %4, align 8
  %19 = getelementptr inbounds %16, %16* %18, i32 0, i32 7
  %20 = load %11*, %11** %19, align 8
  store %11* %20, %11** %5, align 8
  %21 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  %22 = load %20*, %20** %3, align 8
  %23 = getelementptr inbounds %20, %20* %22, i32 0, i32 5
  %24 = getelementptr inbounds [1 x %11], [1 x %11]* %23, i32 0, i32 0
  store %11* %24, %11** %6, align 8
  %25 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #2
  %26 = load %11*, %11** %5, align 8
  %27 = load %16*, %16** %4, align 8
  %28 = getelementptr inbounds %16, %16* %27, i32 0, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %11, %11* %26, i64 %30
  store %11* %31, %11** %7, align 8
  br label %32

32:                                               ; preds = %79, %16
  br label %33

33:                                               ; preds = %32
  %34 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #2
  %35 = load %11*, %11** %6, align 8
  store %11* %35, %11** %8, align 8
  %36 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #2
  %37 = load %11*, %11** %5, align 8
  store %11* %37, %11** %9, align 8
  %38 = bitcast %58** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #2
  %39 = load %11*, %11** %9, align 8
  %40 = getelementptr inbounds %11, %11* %39, i32 0, i32 0
  %41 = bitcast %12* %40 to %58**
  %42 = load %58*, %58** %41, align 8
  store %58* %42, %58** %10, align 8
  %43 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #2
  %44 = load %11*, %11** %9, align 8
  %45 = getelementptr inbounds %11, %11* %44, i32 0, i32 1
  %46 = bitcast %13* %45 to i32*
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %11, align 4
  br label %48

48:                                               ; preds = %33
  %49 = load %58*, %58** %10, align 8
  %50 = load %11*, %11** %8, align 8
  %51 = getelementptr inbounds %11, %11* %50, i32 0, i32 0
  %52 = bitcast %12* %51 to %58**
  store %58* %49, %58** %52, align 8
  %53 = load i32, i32* %11, align 4
  %54 = load %11*, %11** %8, align 8
  %55 = getelementptr inbounds %11, %11* %54, i32 0, i32 1
  %56 = bitcast %13* %55 to i32*
  store i32 %53, i32* %56, align 8
  br label %57

57:                                               ; preds = %48
  br label %58

58:                                               ; preds = %57
  %59 = load i32, i32* %11, align 4
  %60 = and i32 %59, 1024
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = load %58*, %58** %10, align 8
  %64 = getelementptr inbounds %58, %58* %63, i32 0, i32 0
  %65 = getelementptr inbounds %6, %6* %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 4
  br label %68

68:                                               ; preds = %62, %58
  %69 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %69) #2
  %70 = bitcast %58** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %70) #2
  %71 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %71) #2
  %72 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #2
  br label %73

73:                                               ; preds = %68
  br label %74

74:                                               ; preds = %73
  %75 = load %11*, %11** %5, align 8
  %76 = getelementptr inbounds %11, %11* %75, i32 1
  store %11* %76, %11** %5, align 8
  %77 = load %11*, %11** %6, align 8
  %78 = getelementptr inbounds %11, %11* %77, i32 1
  store %11* %78, %11** %6, align 8
  br label %79

79:                                               ; preds = %74
  %80 = load %11*, %11** %5, align 8
  %81 = load %11*, %11** %7, align 8
  %82 = icmp ne %11* %80, %81
  br i1 %82, label %32, label %83

83:                                               ; preds = %79
  %84 = load %20*, %20** %3, align 8
  %85 = getelementptr inbounds %20, %20* %84, i32 0, i32 4
  store %5* null, %5** %85, align 8
  %86 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #2
  %87 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #2
  %88 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #2
  br label %89

89:                                               ; preds = %83, %2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @object_properties_init_ex(%20* %0, %5* %1) #0 {
  %3 = alloca %20*, align 8
  %4 = alloca %5*, align 8
  %5 = alloca %11*, align 8
  %6 = alloca %10*, align 8
  %7 = alloca %65*, align 8
  %8 = alloca %5*, align 8
  %9 = alloca %9*, align 8
  %10 = alloca %9*, align 8
  %11 = alloca %11*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %11*, align 8
  %14 = alloca %11*, align 8
  %15 = alloca %11*, align 8
  %16 = alloca %58*, align 8
  %17 = alloca i32, align 4
  store %20* %0, %20** %3, align 8
  store %5* %1, %5** %4, align 8
  %18 = load %5*, %5** %4, align 8
  %19 = load %20*, %20** %3, align 8
  %20 = getelementptr inbounds %20, %20* %19, i32 0, i32 4
  store %5* %18, %5** %20, align 8
  %21 = load %20*, %20** %3, align 8
  %22 = getelementptr inbounds %20, %20* %21, i32 0, i32 2
  %23 = load %16*, %16** %22, align 8
  %24 = getelementptr inbounds %16, %16* %23, i32 0, i32 5
  %25 = load i32, i32* %24, align 8
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %155

27:                                               ; preds = %2
  %28 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #2
  %29 = bitcast %10** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #2
  %30 = bitcast %65** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #2
  br label %31

31:                                               ; preds = %27
  %32 = bitcast %5** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #2
  %33 = load %5*, %5** %4, align 8
  store %5* %33, %5** %8, align 8
  %34 = bitcast %9** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #2
  %35 = load %5*, %5** %8, align 8
  %36 = getelementptr inbounds %5, %5* %35, i32 0, i32 3
  %37 = load %9*, %9** %36, align 8
  store %9* %37, %9** %9, align 8
  %38 = bitcast %9** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #2
  %39 = load %9*, %9** %9, align 8
  %40 = load %5*, %5** %8, align 8
  %41 = getelementptr inbounds %5, %5* %40, i32 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %9, %9* %39, i64 %43
  store %9* %44, %9** %10, align 8
  br label %45

45:                                               ; preds = %143, %31
  %46 = load %9*, %9** %9, align 8
  %47 = load %9*, %9** %10, align 8
  %48 = icmp ne %9* %46, %47
  br i1 %48, label %49, label %146

49:                                               ; preds = %45
  %50 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #2
  %51 = load %9*, %9** %9, align 8
  %52 = getelementptr inbounds %9, %9* %51, i32 0, i32 0
  store %11* %52, %11** %11, align 8
  %53 = load %11*, %11** %11, align 8
  %54 = call zeroext i8 @125(%11* %53)
  %55 = zext i8 %54 to i32
  %56 = icmp eq i32 %55, 0
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 0)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %49
  store i32 6, i32* %12, align 4
  br label %139

64:                                               ; preds = %49
  %65 = load %9*, %9** %9, align 8
  %66 = getelementptr inbounds %9, %9* %65, i32 0, i32 2
  %67 = load %10*, %10** %66, align 8
  store %10* %67, %10** %6, align 8
  %68 = load %11*, %11** %11, align 8
  store %11* %68, %11** %5, align 8
  %69 = load %20*, %20** %3, align 8
  %70 = getelementptr inbounds %20, %20* %69, i32 0, i32 2
  %71 = load %16*, %16** %70, align 8
  %72 = load %10*, %10** %6, align 8
  %73 = call %65* @zend_get_property_info(%16* %71, %10* %72, i32 1)
  store %65* %73, %65** %7, align 8
  %74 = load %65*, %65** %7, align 8
  %75 = icmp ne %65* %74, inttoptr (i64 -1 to %65*)
  br i1 %75, label %76, label %138

76:                                               ; preds = %64
  %77 = load %65*, %65** %7, align 8
  %78 = icmp ne %65* %77, null
  br i1 %78, label %79, label %138

79:                                               ; preds = %76
  %80 = load %65*, %65** %7, align 8
  %81 = getelementptr inbounds %65, %65* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %138

85:                                               ; preds = %79
  %86 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %86) #2
  %87 = load %20*, %20** %3, align 8
  %88 = bitcast %20* %87 to i8*
  %89 = load %65*, %65** %7, align 8
  %90 = getelementptr inbounds %65, %65* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %88, i64 %92
  %94 = bitcast i8* %93 to %11*
  store %11* %94, %11** %13, align 8
  br label %95

95:                                               ; preds = %85
  %96 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %96) #2
  %97 = load %11*, %11** %13, align 8
  store %11* %97, %11** %14, align 8
  %98 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %98) #2
  %99 = load %11*, %11** %5, align 8
  store %11* %99, %11** %15, align 8
  %100 = bitcast %58** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %100) #2
  %101 = load %11*, %11** %15, align 8
  %102 = getelementptr inbounds %11, %11* %101, i32 0, i32 0
  %103 = bitcast %12* %102 to %58**
  %104 = load %58*, %58** %103, align 8
  store %58* %104, %58** %16, align 8
  %105 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %105) #2
  %106 = load %11*, %11** %15, align 8
  %107 = getelementptr inbounds %11, %11* %106, i32 0, i32 1
  %108 = bitcast %13* %107 to i32*
  %109 = load i32, i32* %108, align 8
  store i32 %109, i32* %17, align 4
  br label %110

110:                                              ; preds = %95
  %111 = load %58*, %58** %16, align 8
  %112 = load %11*, %11** %14, align 8
  %113 = getelementptr inbounds %11, %11* %112, i32 0, i32 0
  %114 = bitcast %12* %113 to %58**
  store %58* %111, %58** %114, align 8
  %115 = load i32, i32* %17, align 4
  %116 = load %11*, %11** %14, align 8
  %117 = getelementptr inbounds %11, %11* %116, i32 0, i32 1
  %118 = bitcast %13* %117 to i32*
  store i32 %115, i32* %118, align 8
  br label %119

119:                                              ; preds = %110
  br label %120

120:                                              ; preds = %119
  %121 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %121) #2
  %122 = bitcast %58** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #2
  %123 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #2
  %124 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #2
  br label %125

125:                                              ; preds = %120
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load %11*, %11** %13, align 8
  %129 = load %11*, %11** %5, align 8
  %130 = getelementptr inbounds %11, %11* %129, i32 0, i32 0
  %131 = bitcast %12* %130 to %11**
  store %11* %128, %11** %131, align 8
  %132 = load %11*, %11** %5, align 8
  %133 = getelementptr inbounds %11, %11* %132, i32 0, i32 1
  %134 = bitcast %13* %133 to i32*
  store i32 15, i32* %134, align 8
  br label %135

135:                                              ; preds = %127
  br label %136

136:                                              ; preds = %135
  %137 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %137) #2
  br label %138

138:                                              ; preds = %136, %79, %76, %64
  store i32 0, i32* %12, align 4
  br label %139

139:                                              ; preds = %138, %63
  %140 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %140) #2
  %141 = load i32, i32* %12, align 4
  switch i32 %141, label %156 [
    i32 0, label %142
    i32 6, label %143
  ]

142:                                              ; preds = %139
  br label %143

143:                                              ; preds = %142, %139
  %144 = load %9*, %9** %9, align 8
  %145 = getelementptr inbounds %9, %9* %144, i32 1
  store %9* %145, %9** %9, align 8
  br label %45

146:                                              ; preds = %45
  %147 = bitcast %9** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %147) #2
  %148 = bitcast %9** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #2
  %149 = bitcast %5** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #2
  br label %150

150:                                              ; preds = %146
  br label %151

151:                                              ; preds = %150
  %152 = bitcast %65** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %152) #2
  %153 = bitcast %10** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153) #2
  %154 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #2
  br label %155

155:                                              ; preds = %151, %2
  ret void

156:                                              ; preds = %139
  unreachable
}

declare dso_local %65* @zend_get_property_info(%16*, %10*, i32) #4

; Function Attrs: nounwind uwtable
define dso_local void @object_properties_load(%20* %0, %5* %1) #0 {
  %3 = alloca %20*, align 8
  %4 = alloca %5*, align 8
  %5 = alloca %11*, align 8
  %6 = alloca %11, align 8
  %7 = alloca %10*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %65*, align 8
  %10 = alloca %5*, align 8
  %11 = alloca %9*, align 8
  %12 = alloca %9*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca %10*, align 8
  %19 = alloca %16*, align 8
  %20 = alloca %10*, align 8
  %21 = alloca %11*, align 8
  %22 = alloca %11*, align 8
  %23 = alloca %11*, align 8
  %24 = alloca %58*, align 8
  %25 = alloca i32, align 4
  store %20* %0, %20** %3, align 8
  store %5* %1, %5** %4, align 8
  %26 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #2
  %27 = bitcast %11* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %27) #2
  %28 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #2
  %29 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #2
  %30 = bitcast %65** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #2
  br label %31

31:                                               ; preds = %2
  %32 = bitcast %5** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #2
  %33 = load %5*, %5** %4, align 8
  store %5* %33, %5** %10, align 8
  %34 = bitcast %9** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #2
  %35 = load %5*, %5** %10, align 8
  %36 = getelementptr inbounds %5, %5* %35, i32 0, i32 3
  %37 = load %9*, %9** %36, align 8
  store %9* %37, %9** %11, align 8
  %38 = bitcast %9** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #2
  %39 = load %9*, %9** %11, align 8
  %40 = load %5*, %5** %10, align 8
  %41 = getelementptr inbounds %5, %5* %40, i32 0, i32 4
  %42 = load i32, i32* %41, align 8
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %9, %9* %39, i64 %43
  store %9* %44, %9** %12, align 8
  br label %45

45:                                               ; preds = %246, %31
  %46 = load %9*, %9** %11, align 8
  %47 = load %9*, %9** %12, align 8
  %48 = icmp ne %9* %46, %47
  br i1 %48, label %49, label %249

49:                                               ; preds = %45
  %50 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #2
  %51 = load %9*, %9** %11, align 8
  %52 = getelementptr inbounds %9, %9* %51, i32 0, i32 0
  store %11* %52, %11** %13, align 8
  %53 = load %11*, %11** %13, align 8
  %54 = call zeroext i8 @125(%11* %53)
  %55 = zext i8 %54 to i32
  %56 = icmp eq i32 %55, 0
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 0)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %49
  store i32 6, i32* %14, align 4
  br label %242

64:                                               ; preds = %49
  %65 = load %9*, %9** %11, align 8
  %66 = getelementptr inbounds %9, %9* %65, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %8, align 8
  %68 = load %9*, %9** %11, align 8
  %69 = getelementptr inbounds %9, %9* %68, i32 0, i32 2
  %70 = load %10*, %10** %69, align 8
  store %10* %70, %10** %7, align 8
  %71 = load %11*, %11** %13, align 8
  store %11* %71, %11** %5, align 8
  %72 = load %10*, %10** %7, align 8
  %73 = icmp ne %10* %72, null
  br i1 %73, label %74, label %226

74:                                               ; preds = %64
  %75 = load %10*, %10** %7, align 8
  %76 = getelementptr inbounds %10, %10* %75, i32 0, i32 3
  %77 = getelementptr inbounds [1 x i8], [1 x i8]* %76, i64 0, i64 0
  %78 = load i8, i8* %77, align 8
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %128

81:                                               ; preds = %74
  %82 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82) #2
  %83 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %83) #2
  %84 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %84) #2
  %85 = load %10*, %10** %7, align 8
  %86 = call i32 @zend_unmangle_property_name_ex(%10* %85, i8** %15, i8** %16, i64* %17)
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %123

88:                                               ; preds = %81
  %89 = bitcast %10** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89) #2
  %90 = load i8*, i8** %16, align 8
  %91 = load i64, i64* %17, align 8
  %92 = call %10* @134(i8* %90, i64 %91, i32 0)
  store %10* %92, %10** %18, align 8
  %93 = bitcast %16** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %93) #2
  %94 = load %16*, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  store %16* %94, %16** %19, align 8
  %95 = load i8*, i8** %15, align 8
  %96 = icmp ne i8* %95, null
  br i1 %96, label %97, label %113

97:                                               ; preds = %88
  %98 = load i8*, i8** %15, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 0
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = icmp ne i32 %101, 42
  br i1 %102, label %103, label %113

103:                                              ; preds = %97
  %104 = bitcast %10** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %104) #2
  %105 = load i8*, i8** %15, align 8
  %106 = load i8*, i8** %15, align 8
  %107 = call i64 @strlen(i8* %106) #20
  %108 = call %10* @134(i8* %105, i64 %107, i32 0)
  store %10* %108, %10** %20, align 8
  %109 = load %10*, %10** %20, align 8
  %110 = call %16* @zend_lookup_class(%10* %109)
  store %16* %110, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %111 = load %10*, %10** %20, align 8
  call void @135(%10* %111)
  %112 = bitcast %10** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #2
  br label %113

113:                                              ; preds = %103, %97, %88
  %114 = load %20*, %20** %3, align 8
  %115 = getelementptr inbounds %20, %20* %114, i32 0, i32 2
  %116 = load %16*, %16** %115, align 8
  %117 = load %10*, %10** %18, align 8
  %118 = call %65* @zend_get_property_info(%16* %116, %10* %117, i32 1)
  store %65* %118, %65** %9, align 8
  %119 = load %10*, %10** %18, align 8
  call void @135(%10* %119)
  %120 = load %16*, %16** %19, align 8
  store %16* %120, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %121 = bitcast %16** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %121) #2
  %122 = bitcast %10** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #2
  br label %124

123:                                              ; preds = %81
  store %65* inttoptr (i64 -1 to %65*), %65** %9, align 8
  br label %124

124:                                              ; preds = %123, %113
  %125 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #2
  %126 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #2
  %127 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #2
  br label %134

128:                                              ; preds = %74
  %129 = load %20*, %20** %3, align 8
  %130 = getelementptr inbounds %20, %20* %129, i32 0, i32 2
  %131 = load %16*, %16** %130, align 8
  %132 = load %10*, %10** %7, align 8
  %133 = call %65* @zend_get_property_info(%16* %131, %10* %132, i32 1)
  store %65* %133, %65** %9, align 8
  br label %134

134:                                              ; preds = %128, %124
  %135 = load %65*, %65** %9, align 8
  %136 = icmp ne %65* %135, inttoptr (i64 -1 to %65*)
  br i1 %136, label %137, label %210

137:                                              ; preds = %134
  %138 = load %65*, %65** %9, align 8
  %139 = icmp ne %65* %138, null
  br i1 %139, label %140, label %210

140:                                              ; preds = %137
  %141 = load %65*, %65** %9, align 8
  %142 = getelementptr inbounds %65, %65* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %210

146:                                              ; preds = %140
  %147 = bitcast %11** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %147) #2
  %148 = load %20*, %20** %3, align 8
  %149 = bitcast %20* %148 to i8*
  %150 = load %65*, %65** %9, align 8
  %151 = getelementptr inbounds %65, %65* %150, i32 0, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %149, i64 %153
  %155 = bitcast i8* %154 to %11*
  store %11* %155, %11** %21, align 8
  %156 = load %11*, %11** %21, align 8
  call void @_zval_ptr_dtor(%11* %156)
  br label %157

157:                                              ; preds = %146
  %158 = bitcast %11** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %158) #2
  %159 = load %11*, %11** %21, align 8
  store %11* %159, %11** %22, align 8
  %160 = bitcast %11** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %160) #2
  %161 = load %11*, %11** %5, align 8
  store %11* %161, %11** %23, align 8
  %162 = bitcast %58** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %162) #2
  %163 = load %11*, %11** %23, align 8
  %164 = getelementptr inbounds %11, %11* %163, i32 0, i32 0
  %165 = bitcast %12* %164 to %58**
  %166 = load %58*, %58** %165, align 8
  store %58* %166, %58** %24, align 8
  %167 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %167) #2
  %168 = load %11*, %11** %23, align 8
  %169 = getelementptr inbounds %11, %11* %168, i32 0, i32 1
  %170 = bitcast %13* %169 to i32*
  %171 = load i32, i32* %170, align 8
  store i32 %171, i32* %25, align 4
  br label %172

172:                                              ; preds = %157
  %173 = load %58*, %58** %24, align 8
  %174 = load %11*, %11** %22, align 8
  %175 = getelementptr inbounds %11, %11* %174, i32 0, i32 0
  %176 = bitcast %12* %175 to %58**
  store %58* %173, %58** %176, align 8
  %177 = load i32, i32* %25, align 4
  %178 = load %11*, %11** %22, align 8
  %179 = getelementptr inbounds %11, %11* %178, i32 0, i32 1
  %180 = bitcast %13* %179 to i32*
  store i32 %177, i32* %180, align 8
  br label %181

181:                                              ; preds = %172
  br label %182

182:                                              ; preds = %181
  %183 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %183) #2
  %184 = bitcast %58** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184) #2
  %185 = bitcast %11** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %185) #2
  %186 = bitcast %11** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %186) #2
  br label %187

187:                                              ; preds = %182
  br label %188

188:                                              ; preds = %187
  %189 = load %11*, %11** %21, align 8
  call void @zval_add_ref(%11* %189)
  %190 = load %20*, %20** %3, align 8
  %191 = getelementptr inbounds %20, %20* %190, i32 0, i32 4
  %192 = load %5*, %5** %191, align 8
  %193 = icmp ne %5* %192, null
  br i1 %193, label %194, label %208

194:                                              ; preds = %188
  br label %195

195:                                              ; preds = %194
  %196 = load %11*, %11** %21, align 8
  %197 = getelementptr inbounds %11, %11* %6, i32 0, i32 0
  %198 = bitcast %12* %197 to %11**
  store %11* %196, %11** %198, align 8
  %199 = getelementptr inbounds %11, %11* %6, i32 0, i32 1
  %200 = bitcast %13* %199 to i32*
  store i32 15, i32* %200, align 8
  br label %201

201:                                              ; preds = %195
  br label %202

202:                                              ; preds = %201
  %203 = load %20*, %20** %3, align 8
  %204 = getelementptr inbounds %20, %20* %203, i32 0, i32 4
  %205 = load %5*, %5** %204, align 8
  %206 = load %10*, %10** %7, align 8
  %207 = call %11* @_zend_hash_update(%5* %205, %10* %206, %11* %6)
  br label %208

208:                                              ; preds = %202, %188
  %209 = bitcast %11** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %209) #2
  br label %225

210:                                              ; preds = %140, %137, %134
  %211 = load %20*, %20** %3, align 8
  %212 = getelementptr inbounds %20, %20* %211, i32 0, i32 4
  %213 = load %5*, %5** %212, align 8
  %214 = icmp ne %5* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %210
  %216 = load %20*, %20** %3, align 8
  call void @rebuild_object_properties(%20* %216)
  br label %217

217:                                              ; preds = %215, %210
  %218 = load %20*, %20** %3, align 8
  %219 = getelementptr inbounds %20, %20* %218, i32 0, i32 4
  %220 = load %5*, %5** %219, align 8
  %221 = load %10*, %10** %7, align 8
  %222 = load %11*, %11** %5, align 8
  %223 = call %11* @_zend_hash_update(%5* %220, %10* %221, %11* %222)
  store %11* %223, %11** %5, align 8
  %224 = load %11*, %11** %5, align 8
  call void @zval_add_ref(%11* %224)
  br label %225

225:                                              ; preds = %217, %208
  br label %241

226:                                              ; preds = %64
  %227 = load %20*, %20** %3, align 8
  %228 = getelementptr inbounds %20, %20* %227, i32 0, i32 4
  %229 = load %5*, %5** %228, align 8
  %230 = icmp ne %5* %229, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %226
  %232 = load %20*, %20** %3, align 8
  call void @rebuild_object_properties(%20* %232)
  br label %233

233:                                              ; preds = %231, %226
  %234 = load %20*, %20** %3, align 8
  %235 = getelementptr inbounds %20, %20* %234, i32 0, i32 4
  %236 = load %5*, %5** %235, align 8
  %237 = load i64, i64* %8, align 8
  %238 = load %11*, %11** %5, align 8
  %239 = call %11* @_zend_hash_index_update(%5* %236, i64 %237, %11* %238)
  store %11* %239, %11** %5, align 8
  %240 = load %11*, %11** %5, align 8
  call void @zval_add_ref(%11* %240)
  br label %241

241:                                              ; preds = %233, %225
  store i32 0, i32* %14, align 4
  br label %242

242:                                              ; preds = %241, %63
  %243 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %243) #2
  %244 = load i32, i32* %14, align 4
  switch i32 %244, label %260 [
    i32 0, label %245
    i32 6, label %246
  ]

245:                                              ; preds = %242
  br label %246

246:                                              ; preds = %245, %242
  %247 = load %9*, %9** %11, align 8
  %248 = getelementptr inbounds %9, %9* %247, i32 1
  store %9* %248, %9** %11, align 8
  br label %45

249:                                              ; preds = %45
  %250 = bitcast %9** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %250) #2
  %251 = bitcast %9** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %251) #2
  %252 = bitcast %5** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %252) #2
  br label %253

253:                                              ; preds = %249
  br label %254

254:                                              ; preds = %253
  %255 = bitcast %65** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %255) #2
  %256 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %256) #2
  %257 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #2
  %258 = bitcast %11* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %258) #2
  %259 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #2
  ret void

260:                                              ; preds = %242
  unreachable
}

declare dso_local i32 @zend_unmangle_property_name_ex(%10*, i8**, i8**, i64*) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal %10* @134(i8* %0, i64 %1, i32 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %10*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #2
  %9 = load i64, i64* %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call %10* @138(i64 %9, i32 %10)
  store %10* %11, %10** %7, align 8
  %12 = load %10*, %10** %7, align 8
  %13 = getelementptr inbounds %10, %10* %12, i32 0, i32 3
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i32 0, i32 0
  %15 = load i8*, i8** %4, align 8
  %16 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 %15, i64 %16, i1 false)
  %17 = load %10*, %10** %7, align 8
  %18 = getelementptr inbounds %10, %10* %17, i32 0, i32 3
  %19 = load i64, i64* %5, align 8
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i64 0, i64 %19
  store i8 0, i8* %20, align 1
  %21 = load %10*, %10** %7, align 8
  %22 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #2
  ret %10* %21
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #9

; Function Attrs: alwaysinline nounwind uwtable
define internal void @135(%10* %0) #3 {
  %2 = alloca %10*, align 8
  store %10* %0, %10** %2, align 8
  %3 = load %10*, %10** %2, align 8
  %4 = getelementptr inbounds %10, %10* %3, i32 0, i32 0
  %5 = getelementptr inbounds %6, %6* %4, i32 0, i32 1
  %6 = bitcast %7* %5 to %63*
  %7 = getelementptr inbounds %63, %63* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %1
  %13 = load %10*, %10** %2, align 8
  %14 = getelementptr inbounds %10, %10* %13, i32 0, i32 0
  %15 = getelementptr inbounds %6, %6* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %12
  %20 = load %10*, %10** %2, align 8
  %21 = getelementptr inbounds %10, %10* %20, i32 0, i32 0
  %22 = getelementptr inbounds %6, %6* %21, i32 0, i32 1
  %23 = bitcast %7* %22 to %63*
  %24 = getelementptr inbounds %63, %63* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %26, 1
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load %10*, %10** %2, align 8
  %31 = bitcast %10* %30 to i8*
  call void @free(i8* %31) #2
  br label %35

32:                                               ; preds = %19
  %33 = load %10*, %10** %2, align 8
  %34 = bitcast %10* %33 to i8*
  call void @_efree(i8* %34)
  br label %35

35:                                               ; preds = %32, %29
  br label %36

36:                                               ; preds = %35, %12
  br label %37

37:                                               ; preds = %36, %1
  ret void
}

declare dso_local void @zval_add_ref(%11*) #4

declare dso_local %11* @_zend_hash_update(%5*, %10*, %11*) #4

declare dso_local void @rebuild_object_properties(%20*) #4

declare dso_local %11* @_zend_hash_index_update(%5*, i64, %11*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @_object_and_properties_init(%11* %0, %16* %1, %5* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca %16*, align 8
  %7 = alloca %5*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %11*, align 8
  store %11* %0, %11** %5, align 8
  store %16* %1, %16** %6, align 8
  store %5* %2, %5** %7, align 8
  %10 = load %16*, %16** %6, align 8
  %11 = getelementptr inbounds %16, %16* %10, i32 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 240
  %14 = icmp ne i32 %13, 0
  %15 = xor i1 %14, true
  %16 = xor i1 %15, true
  %17 = zext i1 %16 to i32
  %18 = sext i32 %17 to i64
  %19 = call i64 @llvm.expect.i64(i64 %18, i64 0)
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %21, label %61

21:                                               ; preds = %3
  %22 = load %16*, %16** %6, align 8
  %23 = getelementptr inbounds %16, %16* %22, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 64
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = load %16*, %16** %6, align 8
  %29 = getelementptr inbounds %16, %16* %28, i32 0, i32 1
  %30 = load %10*, %10** %29, align 8
  %31 = getelementptr inbounds %10, %10* %30, i32 0, i32 3
  %32 = getelementptr inbounds [1 x i8], [1 x i8]* %31, i32 0, i32 0
  call void (%16*, i8*, ...) @zend_throw_error(%16* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @28, i32 0, i32 0), i8* %32)
  br label %52

33:                                               ; preds = %21
  %34 = load %16*, %16** %6, align 8
  %35 = getelementptr inbounds %16, %16* %34, i32 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 128
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %33
  %40 = load %16*, %16** %6, align 8
  %41 = getelementptr inbounds %16, %16* %40, i32 0, i32 1
  %42 = load %10*, %10** %41, align 8
  %43 = getelementptr inbounds %10, %10* %42, i32 0, i32 3
  %44 = getelementptr inbounds [1 x i8], [1 x i8]* %43, i32 0, i32 0
  call void (%16*, i8*, ...) @zend_throw_error(%16* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @29, i32 0, i32 0), i8* %44)
  br label %51

45:                                               ; preds = %33
  %46 = load %16*, %16** %6, align 8
  %47 = getelementptr inbounds %16, %16* %46, i32 0, i32 1
  %48 = load %10*, %10** %47, align 8
  %49 = getelementptr inbounds %10, %10* %48, i32 0, i32 3
  %50 = getelementptr inbounds [1 x i8], [1 x i8]* %49, i32 0, i32 0
  call void (%16*, i8*, ...) @zend_throw_error(%16* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @30, i32 0, i32 0), i8* %50)
  br label %51

51:                                               ; preds = %45, %39
  br label %52

52:                                               ; preds = %51, %27
  br label %53

53:                                               ; preds = %52
  %54 = load %11*, %11** %5, align 8
  %55 = getelementptr inbounds %11, %11* %54, i32 0, i32 1
  %56 = bitcast %13* %55 to i32*
  store i32 1, i32* %56, align 8
  br label %57

57:                                               ; preds = %53
  %58 = load %11*, %11** %5, align 8
  %59 = getelementptr inbounds %11, %11* %58, i32 0, i32 0
  %60 = bitcast %12* %59 to %20**
  store %20* null, %20** %60, align 8
  store i32 -1, i32* %4, align 4
  br label %146

61:                                               ; preds = %3
  %62 = load %16*, %16** %6, align 8
  %63 = getelementptr inbounds %16, %16* %62, i32 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 1048576
  %66 = icmp ne i32 %65, 0
  %67 = xor i1 %66, true
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 0)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %94

74:                                               ; preds = %61
  %75 = load %16*, %16** %6, align 8
  %76 = call i32 @zend_update_class_constants(%16* %75)
  %77 = icmp ne i32 %76, 0
  %78 = xor i1 %77, true
  %79 = xor i1 %78, true
  %80 = zext i1 %79 to i32
  %81 = sext i32 %80 to i64
  %82 = call i64 @llvm.expect.i64(i64 %81, i64 0)
  %83 = icmp ne i64 %82, 0
  br i1 %83, label %84, label %93

84:                                               ; preds = %74
  br label %85

85:                                               ; preds = %84
  %86 = load %11*, %11** %5, align 8
  %87 = getelementptr inbounds %11, %11* %86, i32 0, i32 1
  %88 = bitcast %13* %87 to i32*
  store i32 1, i32* %88, align 8
  br label %89

89:                                               ; preds = %85
  %90 = load %11*, %11** %5, align 8
  %91 = getelementptr inbounds %11, %11* %90, i32 0, i32 0
  %92 = bitcast %12* %91 to %20**
  store %20* null, %20** %92, align 8
  store i32 -1, i32* %4, align 4
  br label %146

93:                                               ; preds = %74
  br label %94

94:                                               ; preds = %93, %61
  %95 = load %16*, %16** %6, align 8
  %96 = getelementptr inbounds %16, %16* %95, i32 0, i32 27
  %97 = load %20* (%16*)*, %20* (%16*)** %96, align 8
  %98 = icmp eq %20* (%16*)* %97, null
  br i1 %98, label %99, label %128

99:                                               ; preds = %94
  br label %100

100:                                              ; preds = %99
  %101 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %101) #2
  %102 = load %11*, %11** %5, align 8
  store %11* %102, %11** %8, align 8
  %103 = load %16*, %16** %6, align 8
  %104 = call %20* @zend_objects_new(%16* %103)
  %105 = load %11*, %11** %8, align 8
  %106 = getelementptr inbounds %11, %11* %105, i32 0, i32 0
  %107 = bitcast %12* %106 to %20**
  store %20* %104, %20** %107, align 8
  %108 = load %11*, %11** %8, align 8
  %109 = getelementptr inbounds %11, %11* %108, i32 0, i32 1
  %110 = bitcast %13* %109 to i32*
  store i32 1032, i32* %110, align 8
  %111 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #2
  br label %112

112:                                              ; preds = %100
  %113 = load %5*, %5** %7, align 8
  %114 = icmp ne %5* %113, null
  br i1 %114, label %115, label %121

115:                                              ; preds = %112
  %116 = load %11*, %11** %5, align 8
  %117 = getelementptr inbounds %11, %11* %116, i32 0, i32 0
  %118 = bitcast %12* %117 to %20**
  %119 = load %20*, %20** %118, align 8
  %120 = load %5*, %5** %7, align 8
  call void @object_properties_init_ex(%20* %119, %5* %120)
  br label %127

121:                                              ; preds = %112
  %122 = load %11*, %11** %5, align 8
  %123 = getelementptr inbounds %11, %11* %122, i32 0, i32 0
  %124 = bitcast %12* %123 to %20**
  %125 = load %20*, %20** %124, align 8
  %126 = load %16*, %16** %6, align 8
  call void @object_properties_init(%20* %125, %16* %126)
  br label %127

127:                                              ; preds = %121, %115
  br label %145

128:                                              ; preds = %94
  br label %129

129:                                              ; preds = %128
  %130 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %130) #2
  %131 = load %11*, %11** %5, align 8
  store %11* %131, %11** %9, align 8
  %132 = load %16*, %16** %6, align 8
  %133 = getelementptr inbounds %16, %16* %132, i32 0, i32 27
  %134 = load %20* (%16*)*, %20* (%16*)** %133, align 8
  %135 = load %16*, %16** %6, align 8
  %136 = call %20* %134(%16* %135)
  %137 = load %11*, %11** %9, align 8
  %138 = getelementptr inbounds %11, %11* %137, i32 0, i32 0
  %139 = bitcast %12* %138 to %20**
  store %20* %136, %20** %139, align 8
  %140 = load %11*, %11** %9, align 8
  %141 = getelementptr inbounds %11, %11* %140, i32 0, i32 1
  %142 = bitcast %13* %141 to i32*
  store i32 1032, i32* %142, align 8
  %143 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #2
  br label %144

144:                                              ; preds = %129
  br label %145

145:                                              ; preds = %144, %127
  store i32 0, i32* %4, align 4
  br label %146

146:                                              ; preds = %145, %89, %57
  %147 = load i32, i32* %4, align 4
  ret i32 %147
}

declare dso_local %20* @zend_objects_new(%16*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @_object_init_ex(%11* %0, %16* %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca %16*, align 8
  store %11* %0, %11** %3, align 8
  store %16* %1, %16** %4, align 8
  %5 = load %11*, %11** %3, align 8
  %6 = load %16*, %16** %4, align 8
  %7 = call i32 @_object_and_properties_init(%11* %5, %16* %6, %5* null)
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define dso_local i32 @_object_init(%11* %0) #0 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  %3 = load %11*, %11** %2, align 8
  %4 = load %16*, %16** @zend_standard_class_def, align 8
  %5 = call i32 @_object_init_ex(%11* %3, %16* %4)
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_assoc_long_ex(%11* %0, i8* %1, i64 %2, i64 %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %12 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  store %11* %10, %11** %11, align 8
  %15 = load i64, i64* %8, align 8
  %16 = load %11*, %11** %11, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to i64*
  store i64 %15, i64* %18, align 8
  %19 = load %11*, %11** %11, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 1
  %21 = bitcast %13* %20 to i32*
  store i32 4, i32* %21, align 8
  %22 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #2
  %23 = load %11*, %11** %5, align 8
  %24 = getelementptr inbounds %11, %11* %23, i32 0, i32 0
  %25 = bitcast %12* %24 to %5**
  %26 = load %5*, %5** %25, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = load i64, i64* %7, align 8
  %29 = call %11* @136(%5* %26, i8* %27, i64 %28, %11* %10)
  store %11* %29, %11** %9, align 8
  %30 = load %11*, %11** %9, align 8
  %31 = icmp ne %11* %30, null
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i32 0, i32 -1
  %34 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %34) #2
  %35 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #2
  ret i32 %33
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %11* @136(%5* %0, i8* %1, i64 %2, %11* %3) #3 {
  %5 = alloca %11*, align 8
  %6 = alloca %5*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store %5* %0, %5** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store %11* %3, %11** %9, align 8
  %12 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = load i8*, i8** %7, align 8
  %14 = load i64, i64* %8, align 8
  %15 = call i32 @179(i8* %13, i64 %14, i64* %10)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %4
  %18 = load %5*, %5** %6, align 8
  %19 = load i64, i64* %10, align 8
  %20 = load %11*, %11** %9, align 8
  %21 = call %11* @_zend_hash_index_update(%5* %18, i64 %19, %11* %20)
  store %11* %21, %11** %5, align 8
  store i32 1, i32* %11, align 4
  br label %28

22:                                               ; preds = %4
  %23 = load %5*, %5** %6, align 8
  %24 = load i8*, i8** %7, align 8
  %25 = load i64, i64* %8, align 8
  %26 = load %11*, %11** %9, align 8
  %27 = call %11* @_zend_hash_str_update(%5* %23, i8* %24, i64 %25, %11* %26)
  store %11* %27, %11** %5, align 8
  store i32 1, i32* %11, align 4
  br label %28

28:                                               ; preds = %22, %17
  %29 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #2
  %30 = load %11*, %11** %5, align 8
  ret %11* %30
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_assoc_null_ex(%11* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %11*, align 8
  %8 = alloca %11, align 8
  store %11* %0, %11** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  %10 = bitcast %11* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #2
  br label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %11, %11* %8, i32 0, i32 1
  %13 = bitcast %13* %12 to i32*
  store i32 1, i32* %13, align 8
  br label %14

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %14
  %16 = load %11*, %11** %4, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to %5**
  %19 = load %5*, %5** %18, align 8
  %20 = load i8*, i8** %5, align 8
  %21 = load i64, i64* %6, align 8
  %22 = call %11* @136(%5* %19, i8* %20, i64 %21, %11* %8)
  store %11* %22, %11** %7, align 8
  %23 = load %11*, %11** %7, align 8
  %24 = icmp ne %11* %23, null
  %25 = zext i1 %24 to i64
  %26 = select i1 %24, i32 0, i32 -1
  %27 = bitcast %11* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %27) #2
  %28 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #2
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_assoc_bool_ex(%11* %0, i8* %1, i64 %2, i32 %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %11*, align 8
  %10 = alloca %11, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %11 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #2
  br label %13

13:                                               ; preds = %4
  %14 = load i32, i32* %8, align 4
  %15 = icmp ne i32 %14, 0
  %16 = zext i1 %15 to i64
  %17 = select i1 %15, i32 3, i32 2
  %18 = getelementptr inbounds %11, %11* %10, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  store i32 %17, i32* %19, align 8
  br label %20

20:                                               ; preds = %13
  br label %21

21:                                               ; preds = %20
  %22 = load %11*, %11** %5, align 8
  %23 = getelementptr inbounds %11, %11* %22, i32 0, i32 0
  %24 = bitcast %12* %23 to %5**
  %25 = load %5*, %5** %24, align 8
  %26 = load i8*, i8** %6, align 8
  %27 = load i64, i64* %7, align 8
  %28 = call %11* @136(%5* %25, i8* %26, i64 %27, %11* %10)
  store %11* %28, %11** %9, align 8
  %29 = load %11*, %11** %9, align 8
  %30 = icmp ne %11* %29, null
  %31 = zext i1 %30 to i64
  %32 = select i1 %30, i32 0, i32 -1
  %33 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %33) #2
  %34 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_assoc_resource_ex(%11* %0, i8* %1, i64 %2, %62* %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %62*, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store %62* %3, %62** %8, align 8
  %12 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  br label %14

14:                                               ; preds = %4
  %15 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  store %11* %10, %11** %11, align 8
  %16 = load %62*, %62** %8, align 8
  %17 = load %11*, %11** %11, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 0
  %19 = bitcast %12* %18 to %62**
  store %62* %16, %62** %19, align 8
  %20 = load %11*, %11** %11, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 1
  %22 = bitcast %13* %21 to i32*
  store i32 1033, i32* %22, align 8
  %23 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #2
  br label %24

24:                                               ; preds = %14
  br label %25

25:                                               ; preds = %24
  %26 = load %11*, %11** %5, align 8
  %27 = getelementptr inbounds %11, %11* %26, i32 0, i32 0
  %28 = bitcast %12* %27 to %5**
  %29 = load %5*, %5** %28, align 8
  %30 = load i8*, i8** %6, align 8
  %31 = load i64, i64* %7, align 8
  %32 = call %11* @136(%5* %29, i8* %30, i64 %31, %11* %10)
  store %11* %32, %11** %9, align 8
  %33 = load %11*, %11** %9, align 8
  %34 = icmp ne %11* %33, null
  %35 = zext i1 %34 to i64
  %36 = select i1 %34, i32 0, i32 -1
  %37 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %37) #2
  %38 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #2
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_assoc_double_ex(%11* %0, i8* %1, i64 %2, double %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store double %3, double* %8, align 8
  %12 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  store %11* %10, %11** %11, align 8
  %15 = load double, double* %8, align 8
  %16 = load %11*, %11** %11, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to double*
  store double %15, double* %18, align 8
  %19 = load %11*, %11** %11, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 1
  %21 = bitcast %13* %20 to i32*
  store i32 5, i32* %21, align 8
  %22 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #2
  %23 = load %11*, %11** %5, align 8
  %24 = getelementptr inbounds %11, %11* %23, i32 0, i32 0
  %25 = bitcast %12* %24 to %5**
  %26 = load %5*, %5** %25, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = load i64, i64* %7, align 8
  %29 = call %11* @136(%5* %26, i8* %27, i64 %28, %11* %10)
  store %11* %29, %11** %9, align 8
  %30 = load %11*, %11** %9, align 8
  %31 = icmp ne %11* %30, null
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i32 0, i32 -1
  %34 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %34) #2
  %35 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #2
  ret i32 %33
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_assoc_str_ex(%11* %0, i8* %1, i64 %2, %10* %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %10*, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store %10* %3, %10** %8, align 8
  %13 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  %14 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  br label %15

15:                                               ; preds = %4
  %16 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  store %11* %10, %11** %11, align 8
  %17 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load %10*, %10** %8, align 8
  store %10* %18, %10** %12, align 8
  %19 = load %10*, %10** %12, align 8
  %20 = load %11*, %11** %11, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 0
  %22 = bitcast %12* %21 to %10**
  store %10* %19, %10** %22, align 8
  %23 = load %10*, %10** %12, align 8
  %24 = getelementptr inbounds %10, %10* %23, i32 0, i32 0
  %25 = getelementptr inbounds %6, %6* %24, i32 0, i32 1
  %26 = bitcast %7* %25 to %63*
  %27 = getelementptr inbounds %63, %63* %26, i32 0, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = and i32 %29, 2
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i32 6, i32 5126
  %34 = load %11*, %11** %11, align 8
  %35 = getelementptr inbounds %11, %11* %34, i32 0, i32 1
  %36 = bitcast %13* %35 to i32*
  store i32 %33, i32* %36, align 8
  %37 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #2
  %38 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #2
  br label %39

39:                                               ; preds = %15
  br label %40

40:                                               ; preds = %39
  %41 = load %11*, %11** %5, align 8
  %42 = getelementptr inbounds %11, %11* %41, i32 0, i32 0
  %43 = bitcast %12* %42 to %5**
  %44 = load %5*, %5** %43, align 8
  %45 = load i8*, i8** %6, align 8
  %46 = load i64, i64* %7, align 8
  %47 = call %11* @136(%5* %44, i8* %45, i64 %46, %11* %10)
  store %11* %47, %11** %9, align 8
  %48 = load %11*, %11** %9, align 8
  %49 = icmp ne %11* %48, null
  %50 = zext i1 %49 to i64
  %51 = select i1 %49, i32 0, i32 -1
  %52 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %52) #2
  %53 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #2
  ret i32 %51
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_assoc_string_ex(%11* %0, i8* %1, i64 %2, i8* %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %11, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8* %3, i8** %8, align 8
  %14 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  %15 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #2
  br label %16

16:                                               ; preds = %4
  %17 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load i8*, i8** %8, align 8
  store i8* %18, i8** %11, align 8
  br label %19

19:                                               ; preds = %16
  br label %20

20:                                               ; preds = %19
  %21 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  store %11* %10, %11** %12, align 8
  %22 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #2
  %23 = load i8*, i8** %11, align 8
  %24 = load i8*, i8** %11, align 8
  %25 = call i64 @strlen(i8* %24) #20
  %26 = call %10* @134(i8* %23, i64 %25, i32 0)
  store %10* %26, %10** %13, align 8
  %27 = load %10*, %10** %13, align 8
  %28 = load %11*, %11** %12, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to %10**
  store %10* %27, %10** %30, align 8
  %31 = load %11*, %11** %12, align 8
  %32 = getelementptr inbounds %11, %11* %31, i32 0, i32 1
  %33 = bitcast %13* %32 to i32*
  store i32 5126, i32* %33, align 8
  %34 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  %35 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #2
  br label %36

36:                                               ; preds = %20
  br label %37

37:                                               ; preds = %36
  br label %38

38:                                               ; preds = %37
  br label %39

39:                                               ; preds = %38
  %40 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #2
  br label %41

41:                                               ; preds = %39
  br label %42

42:                                               ; preds = %41
  %43 = load %11*, %11** %5, align 8
  %44 = getelementptr inbounds %11, %11* %43, i32 0, i32 0
  %45 = bitcast %12* %44 to %5**
  %46 = load %5*, %5** %45, align 8
  %47 = load i8*, i8** %6, align 8
  %48 = load i64, i64* %7, align 8
  %49 = call %11* @136(%5* %46, i8* %47, i64 %48, %11* %10)
  store %11* %49, %11** %9, align 8
  %50 = load %11*, %11** %9, align 8
  %51 = icmp ne %11* %50, null
  %52 = zext i1 %51 to i64
  %53 = select i1 %51, i32 0, i32 -1
  %54 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %54) #2
  %55 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %55) #2
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_assoc_stringl_ex(%11* %0, i8* %1, i64 %2, i8* %3, i64 %4) #0 {
  %6 = alloca %11*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %11, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %10*, align 8
  store %11* %0, %11** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  store i64 %4, i64* %10, align 8
  %15 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  %16 = bitcast %11* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %16) #2
  br label %17

17:                                               ; preds = %5
  br label %18

18:                                               ; preds = %17
  %19 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  store %11* %12, %11** %13, align 8
  %20 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #2
  %21 = load i8*, i8** %9, align 8
  %22 = load i64, i64* %10, align 8
  %23 = call %10* @134(i8* %21, i64 %22, i32 0)
  store %10* %23, %10** %14, align 8
  %24 = load %10*, %10** %14, align 8
  %25 = load %11*, %11** %13, align 8
  %26 = getelementptr inbounds %11, %11* %25, i32 0, i32 0
  %27 = bitcast %12* %26 to %10**
  store %10* %24, %10** %27, align 8
  %28 = load %11*, %11** %13, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 1
  %30 = bitcast %13* %29 to i32*
  store i32 5126, i32* %30, align 8
  %31 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #2
  %32 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #2
  br label %33

33:                                               ; preds = %18
  br label %34

34:                                               ; preds = %33
  br label %35

35:                                               ; preds = %34
  br label %36

36:                                               ; preds = %35
  %37 = load %11*, %11** %6, align 8
  %38 = getelementptr inbounds %11, %11* %37, i32 0, i32 0
  %39 = bitcast %12* %38 to %5**
  %40 = load %5*, %5** %39, align 8
  %41 = load i8*, i8** %7, align 8
  %42 = load i64, i64* %8, align 8
  %43 = call %11* @136(%5* %40, i8* %41, i64 %42, %11* %12)
  store %11* %43, %11** %11, align 8
  %44 = load %11*, %11** %11, align 8
  %45 = icmp ne %11* %44, null
  %46 = zext i1 %45 to i64
  %47 = select i1 %45, i32 0, i32 -1
  %48 = bitcast %11* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %48) #2
  %49 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #2
  ret i32 %47
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_assoc_zval_ex(%11* %0, i8* %1, i64 %2, %11* %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %11*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store %11* %3, %11** %8, align 8
  %10 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load %11*, %11** %5, align 8
  %12 = getelementptr inbounds %11, %11* %11, i32 0, i32 0
  %13 = bitcast %12* %12 to %5**
  %14 = load %5*, %5** %13, align 8
  %15 = load i8*, i8** %6, align 8
  %16 = load i64, i64* %7, align 8
  %17 = load %11*, %11** %8, align 8
  %18 = call %11* @136(%5* %14, i8* %15, i64 %16, %11* %17)
  store %11* %18, %11** %9, align 8
  %19 = load %11*, %11** %9, align 8
  %20 = icmp ne %11* %19, null
  %21 = zext i1 %20 to i64
  %22 = select i1 %20, i32 0, i32 -1
  %23 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #2
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_index_long(%11* %0, i64 %1, i64 %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %11, align 8
  %8 = alloca %11*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #2
  %10 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  store %11* %7, %11** %8, align 8
  %11 = load i64, i64* %6, align 8
  %12 = load %11*, %11** %8, align 8
  %13 = getelementptr inbounds %11, %11* %12, i32 0, i32 0
  %14 = bitcast %12* %13 to i64*
  store i64 %11, i64* %14, align 8
  %15 = load %11*, %11** %8, align 8
  %16 = getelementptr inbounds %11, %11* %15, i32 0, i32 1
  %17 = bitcast %13* %16 to i32*
  store i32 4, i32* %17, align 8
  %18 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #2
  %19 = load %11*, %11** %4, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to %5**
  %22 = load %5*, %5** %21, align 8
  %23 = load i64, i64* %5, align 8
  %24 = call %11* @_zend_hash_index_update(%5* %22, i64 %23, %11* %7)
  %25 = icmp ne %11* %24, null
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i32 0, i32 -1
  %28 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %28) #2
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_index_null(%11* %0, i64 %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %11, align 8
  store %11* %0, %11** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %6) #2
  br label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %11, %11* %5, i32 0, i32 1
  %9 = bitcast %13* %8 to i32*
  store i32 1, i32* %9, align 8
  br label %10

10:                                               ; preds = %7
  br label %11

11:                                               ; preds = %10
  %12 = load %11*, %11** %3, align 8
  %13 = getelementptr inbounds %11, %11* %12, i32 0, i32 0
  %14 = bitcast %12* %13 to %5**
  %15 = load %5*, %5** %14, align 8
  %16 = load i64, i64* %4, align 8
  %17 = call %11* @_zend_hash_index_update(%5* %15, i64 %16, %11* %5)
  %18 = icmp ne %11* %17, null
  %19 = zext i1 %18 to i64
  %20 = select i1 %18, i32 0, i32 -1
  %21 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %21) #2
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_index_bool(%11* %0, i64 %1, i32 %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %11, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %8) #2
  br label %9

9:                                                ; preds = %3
  %10 = load i32, i32* %6, align 4
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i64
  %13 = select i1 %11, i32 3, i32 2
  %14 = getelementptr inbounds %11, %11* %7, i32 0, i32 1
  %15 = bitcast %13* %14 to i32*
  store i32 %13, i32* %15, align 8
  br label %16

16:                                               ; preds = %9
  br label %17

17:                                               ; preds = %16
  %18 = load %11*, %11** %4, align 8
  %19 = getelementptr inbounds %11, %11* %18, i32 0, i32 0
  %20 = bitcast %12* %19 to %5**
  %21 = load %5*, %5** %20, align 8
  %22 = load i64, i64* %5, align 8
  %23 = call %11* @_zend_hash_index_update(%5* %21, i64 %22, %11* %7)
  %24 = icmp ne %11* %23, null
  %25 = zext i1 %24 to i64
  %26 = select i1 %24, i32 0, i32 -1
  %27 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %27) #2
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_index_resource(%11* %0, i64 %1, %62* %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %62*, align 8
  %7 = alloca %11, align 8
  %8 = alloca %11*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store %62* %2, %62** %6, align 8
  %9 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #2
  br label %10

10:                                               ; preds = %3
  %11 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  store %11* %7, %11** %8, align 8
  %12 = load %62*, %62** %6, align 8
  %13 = load %11*, %11** %8, align 8
  %14 = getelementptr inbounds %11, %11* %13, i32 0, i32 0
  %15 = bitcast %12* %14 to %62**
  store %62* %12, %62** %15, align 8
  %16 = load %11*, %11** %8, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 1
  %18 = bitcast %13* %17 to i32*
  store i32 1033, i32* %18, align 8
  %19 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %19) #2
  br label %20

20:                                               ; preds = %10
  br label %21

21:                                               ; preds = %20
  %22 = load %11*, %11** %4, align 8
  %23 = getelementptr inbounds %11, %11* %22, i32 0, i32 0
  %24 = bitcast %12* %23 to %5**
  %25 = load %5*, %5** %24, align 8
  %26 = load i64, i64* %5, align 8
  %27 = call %11* @_zend_hash_index_update(%5* %25, i64 %26, %11* %7)
  %28 = icmp ne %11* %27, null
  %29 = zext i1 %28 to i64
  %30 = select i1 %28, i32 0, i32 -1
  %31 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %31) #2
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_index_double(%11* %0, i64 %1, double %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca %11, align 8
  %8 = alloca %11*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store double %2, double* %6, align 8
  %9 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #2
  %10 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  store %11* %7, %11** %8, align 8
  %11 = load double, double* %6, align 8
  %12 = load %11*, %11** %8, align 8
  %13 = getelementptr inbounds %11, %11* %12, i32 0, i32 0
  %14 = bitcast %12* %13 to double*
  store double %11, double* %14, align 8
  %15 = load %11*, %11** %8, align 8
  %16 = getelementptr inbounds %11, %11* %15, i32 0, i32 1
  %17 = bitcast %13* %16 to i32*
  store i32 5, i32* %17, align 8
  %18 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #2
  %19 = load %11*, %11** %4, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to %5**
  %22 = load %5*, %5** %21, align 8
  %23 = load i64, i64* %5, align 8
  %24 = call %11* @_zend_hash_index_update(%5* %22, i64 %23, %11* %7)
  %25 = icmp ne %11* %24, null
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i32 0, i32 -1
  %28 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %28) #2
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_index_str(%11* %0, i64 %1, %10* %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %10*, align 8
  %7 = alloca %11, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %10*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store %10* %2, %10** %6, align 8
  %10 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #2
  br label %11

11:                                               ; preds = %3
  %12 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  store %11* %7, %11** %8, align 8
  %13 = bitcast %10** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  %14 = load %10*, %10** %6, align 8
  store %10* %14, %10** %9, align 8
  %15 = load %10*, %10** %9, align 8
  %16 = load %11*, %11** %8, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to %10**
  store %10* %15, %10** %18, align 8
  %19 = load %10*, %10** %9, align 8
  %20 = getelementptr inbounds %10, %10* %19, i32 0, i32 0
  %21 = getelementptr inbounds %6, %6* %20, i32 0, i32 1
  %22 = bitcast %7* %21 to %63*
  %23 = getelementptr inbounds %63, %63* %22, i32 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = and i32 %25, 2
  %27 = icmp ne i32 %26, 0
  %28 = zext i1 %27 to i64
  %29 = select i1 %27, i32 6, i32 5126
  %30 = load %11*, %11** %8, align 8
  %31 = getelementptr inbounds %11, %11* %30, i32 0, i32 1
  %32 = bitcast %13* %31 to i32*
  store i32 %29, i32* %32, align 8
  %33 = bitcast %10** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #2
  %34 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  br label %35

35:                                               ; preds = %11
  br label %36

36:                                               ; preds = %35
  %37 = load %11*, %11** %4, align 8
  %38 = getelementptr inbounds %11, %11* %37, i32 0, i32 0
  %39 = bitcast %12* %38 to %5**
  %40 = load %5*, %5** %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = call %11* @_zend_hash_index_update(%5* %40, i64 %41, %11* %7)
  %43 = icmp ne %11* %42, null
  %44 = zext i1 %43 to i64
  %45 = select i1 %43, i32 0, i32 -1
  %46 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %46) #2
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_index_string(%11* %0, i64 %1, i8* %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %11, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %10*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %11 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #2
  br label %12

12:                                               ; preds = %3
  %13 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  %14 = load i8*, i8** %6, align 8
  store i8* %14, i8** %8, align 8
  br label %15

15:                                               ; preds = %12
  br label %16

16:                                               ; preds = %15
  %17 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  store %11* %7, %11** %9, align 8
  %18 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  %19 = load i8*, i8** %8, align 8
  %20 = load i8*, i8** %8, align 8
  %21 = call i64 @strlen(i8* %20) #20
  %22 = call %10* @134(i8* %19, i64 %21, i32 0)
  store %10* %22, %10** %10, align 8
  %23 = load %10*, %10** %10, align 8
  %24 = load %11*, %11** %9, align 8
  %25 = getelementptr inbounds %11, %11* %24, i32 0, i32 0
  %26 = bitcast %12* %25 to %10**
  store %10* %23, %10** %26, align 8
  %27 = load %11*, %11** %9, align 8
  %28 = getelementptr inbounds %11, %11* %27, i32 0, i32 1
  %29 = bitcast %13* %28 to i32*
  store i32 5126, i32* %29, align 8
  %30 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #2
  %31 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #2
  br label %32

32:                                               ; preds = %16
  br label %33

33:                                               ; preds = %32
  br label %34

34:                                               ; preds = %33
  br label %35

35:                                               ; preds = %34
  %36 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #2
  br label %37

37:                                               ; preds = %35
  br label %38

38:                                               ; preds = %37
  %39 = load %11*, %11** %4, align 8
  %40 = getelementptr inbounds %11, %11* %39, i32 0, i32 0
  %41 = bitcast %12* %40 to %5**
  %42 = load %5*, %5** %41, align 8
  %43 = load i64, i64* %5, align 8
  %44 = call %11* @_zend_hash_index_update(%5* %42, i64 %43, %11* %7)
  %45 = icmp ne %11* %44, null
  %46 = zext i1 %45 to i64
  %47 = select i1 %45, i32 0, i32 -1
  %48 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %48) #2
  ret i32 %47
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_index_stringl(%11* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11*, align 8
  %11 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %12 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #2
  br label %13

13:                                               ; preds = %4
  br label %14

14:                                               ; preds = %13
  %15 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  store %11* %9, %11** %10, align 8
  %16 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load i8*, i8** %7, align 8
  %18 = load i64, i64* %8, align 8
  %19 = call %10* @134(i8* %17, i64 %18, i32 0)
  store %10* %19, %10** %11, align 8
  %20 = load %10*, %10** %11, align 8
  %21 = load %11*, %11** %10, align 8
  %22 = getelementptr inbounds %11, %11* %21, i32 0, i32 0
  %23 = bitcast %12* %22 to %10**
  store %10* %20, %10** %23, align 8
  %24 = load %11*, %11** %10, align 8
  %25 = getelementptr inbounds %11, %11* %24, i32 0, i32 1
  %26 = bitcast %13* %25 to i32*
  store i32 5126, i32* %26, align 8
  %27 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #2
  %28 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #2
  br label %29

29:                                               ; preds = %14
  br label %30

30:                                               ; preds = %29
  br label %31

31:                                               ; preds = %30
  br label %32

32:                                               ; preds = %31
  %33 = load %11*, %11** %5, align 8
  %34 = getelementptr inbounds %11, %11* %33, i32 0, i32 0
  %35 = bitcast %12* %34 to %5**
  %36 = load %5*, %5** %35, align 8
  %37 = load i64, i64* %6, align 8
  %38 = call %11* @_zend_hash_index_update(%5* %36, i64 %37, %11* %9)
  %39 = icmp ne %11* %38, null
  %40 = zext i1 %39 to i64
  %41 = select i1 %39, i32 0, i32 -1
  %42 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %42) #2
  ret i32 %41
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_index_zval(%11* %0, i64 %1, %11* %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %11*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store %11* %2, %11** %6, align 8
  %7 = load %11*, %11** %4, align 8
  %8 = getelementptr inbounds %11, %11* %7, i32 0, i32 0
  %9 = bitcast %12* %8 to %5**
  %10 = load %5*, %5** %9, align 8
  %11 = load i64, i64* %5, align 8
  %12 = load %11*, %11** %6, align 8
  %13 = call %11* @_zend_hash_index_update(%5* %10, i64 %11, %11* %12)
  %14 = icmp ne %11* %13, null
  %15 = zext i1 %14 to i64
  %16 = select i1 %14, i32 0, i32 -1
  ret i32 %16
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_next_index_long(%11* %0, i64 %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %11, align 8
  %6 = alloca %11*, align 8
  store %11* %0, %11** %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %7) #2
  %8 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #2
  store %11* %5, %11** %6, align 8
  %9 = load i64, i64* %4, align 8
  %10 = load %11*, %11** %6, align 8
  %11 = getelementptr inbounds %11, %11* %10, i32 0, i32 0
  %12 = bitcast %12* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = load %11*, %11** %6, align 8
  %14 = getelementptr inbounds %11, %11* %13, i32 0, i32 1
  %15 = bitcast %13* %14 to i32*
  store i32 4, i32* %15, align 8
  %16 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #2
  %17 = load %11*, %11** %3, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 0
  %19 = bitcast %12* %18 to %5**
  %20 = load %5*, %5** %19, align 8
  %21 = call %11* @_zend_hash_next_index_insert(%5* %20, %11* %5)
  %22 = icmp ne %11* %21, null
  %23 = zext i1 %22 to i64
  %24 = select i1 %22, i32 0, i32 -1
  %25 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %25) #2
  ret i32 %24
}

declare dso_local %11* @_zend_hash_next_index_insert(%5*, %11*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @add_next_index_null(%11* %0) #0 {
  %2 = alloca %11*, align 8
  %3 = alloca %11, align 8
  store %11* %0, %11** %2, align 8
  %4 = bitcast %11* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %4) #2
  br label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %11, %11* %3, i32 0, i32 1
  %7 = bitcast %13* %6 to i32*
  store i32 1, i32* %7, align 8
  br label %8

8:                                                ; preds = %5
  br label %9

9:                                                ; preds = %8
  %10 = load %11*, %11** %2, align 8
  %11 = getelementptr inbounds %11, %11* %10, i32 0, i32 0
  %12 = bitcast %12* %11 to %5**
  %13 = load %5*, %5** %12, align 8
  %14 = call %11* @_zend_hash_next_index_insert(%5* %13, %11* %3)
  %15 = icmp ne %11* %14, null
  %16 = zext i1 %15 to i64
  %17 = select i1 %15, i32 0, i32 -1
  %18 = bitcast %11* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %18) #2
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_next_index_bool(%11* %0, i32 %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %11, align 8
  store %11* %0, %11** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %6) #2
  br label %7

7:                                                ; preds = %2
  %8 = load i32, i32* %4, align 4
  %9 = icmp ne i32 %8, 0
  %10 = zext i1 %9 to i64
  %11 = select i1 %9, i32 3, i32 2
  %12 = getelementptr inbounds %11, %11* %5, i32 0, i32 1
  %13 = bitcast %13* %12 to i32*
  store i32 %11, i32* %13, align 8
  br label %14

14:                                               ; preds = %7
  br label %15

15:                                               ; preds = %14
  %16 = load %11*, %11** %3, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to %5**
  %19 = load %5*, %5** %18, align 8
  %20 = call %11* @_zend_hash_next_index_insert(%5* %19, %11* %5)
  %21 = icmp ne %11* %20, null
  %22 = zext i1 %21 to i64
  %23 = select i1 %21, i32 0, i32 -1
  %24 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %24) #2
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_next_index_resource(%11* %0, %62* %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca %62*, align 8
  %5 = alloca %11, align 8
  %6 = alloca %11*, align 8
  store %11* %0, %11** %3, align 8
  store %62* %1, %62** %4, align 8
  %7 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %7) #2
  br label %8

8:                                                ; preds = %2
  %9 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  store %11* %5, %11** %6, align 8
  %10 = load %62*, %62** %4, align 8
  %11 = load %11*, %11** %6, align 8
  %12 = getelementptr inbounds %11, %11* %11, i32 0, i32 0
  %13 = bitcast %12* %12 to %62**
  store %62* %10, %62** %13, align 8
  %14 = load %11*, %11** %6, align 8
  %15 = getelementptr inbounds %11, %11* %14, i32 0, i32 1
  %16 = bitcast %13* %15 to i32*
  store i32 1033, i32* %16, align 8
  %17 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #2
  br label %18

18:                                               ; preds = %8
  br label %19

19:                                               ; preds = %18
  %20 = load %11*, %11** %3, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 0
  %22 = bitcast %12* %21 to %5**
  %23 = load %5*, %5** %22, align 8
  %24 = call %11* @_zend_hash_next_index_insert(%5* %23, %11* %5)
  %25 = icmp ne %11* %24, null
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i32 0, i32 -1
  %28 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %28) #2
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_next_index_double(%11* %0, double %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca double, align 8
  %5 = alloca %11, align 8
  %6 = alloca %11*, align 8
  store %11* %0, %11** %3, align 8
  store double %1, double* %4, align 8
  %7 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %7) #2
  %8 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #2
  store %11* %5, %11** %6, align 8
  %9 = load double, double* %4, align 8
  %10 = load %11*, %11** %6, align 8
  %11 = getelementptr inbounds %11, %11* %10, i32 0, i32 0
  %12 = bitcast %12* %11 to double*
  store double %9, double* %12, align 8
  %13 = load %11*, %11** %6, align 8
  %14 = getelementptr inbounds %11, %11* %13, i32 0, i32 1
  %15 = bitcast %13* %14 to i32*
  store i32 5, i32* %15, align 8
  %16 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #2
  %17 = load %11*, %11** %3, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 0
  %19 = bitcast %12* %18 to %5**
  %20 = load %5*, %5** %19, align 8
  %21 = call %11* @_zend_hash_next_index_insert(%5* %20, %11* %5)
  %22 = icmp ne %11* %21, null
  %23 = zext i1 %22 to i64
  %24 = select i1 %22, i32 0, i32 -1
  %25 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %25) #2
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_next_index_str(%11* %0, %10* %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca %10*, align 8
  %5 = alloca %11, align 8
  %6 = alloca %11*, align 8
  %7 = alloca %10*, align 8
  store %11* %0, %11** %3, align 8
  store %10* %1, %10** %4, align 8
  %8 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %8) #2
  br label %9

9:                                                ; preds = %2
  %10 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  store %11* %5, %11** %6, align 8
  %11 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = load %10*, %10** %4, align 8
  store %10* %12, %10** %7, align 8
  %13 = load %10*, %10** %7, align 8
  %14 = load %11*, %11** %6, align 8
  %15 = getelementptr inbounds %11, %11* %14, i32 0, i32 0
  %16 = bitcast %12* %15 to %10**
  store %10* %13, %10** %16, align 8
  %17 = load %10*, %10** %7, align 8
  %18 = getelementptr inbounds %10, %10* %17, i32 0, i32 0
  %19 = getelementptr inbounds %6, %6* %18, i32 0, i32 1
  %20 = bitcast %7* %19 to %63*
  %21 = getelementptr inbounds %63, %63* %20, i32 0, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = and i32 %23, 2
  %25 = icmp ne i32 %24, 0
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i32 6, i32 5126
  %28 = load %11*, %11** %6, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 1
  %30 = bitcast %13* %29 to i32*
  store i32 %27, i32* %30, align 8
  %31 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #2
  %32 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #2
  br label %33

33:                                               ; preds = %9
  br label %34

34:                                               ; preds = %33
  %35 = load %11*, %11** %3, align 8
  %36 = getelementptr inbounds %11, %11* %35, i32 0, i32 0
  %37 = bitcast %12* %36 to %5**
  %38 = load %5*, %5** %37, align 8
  %39 = call %11* @_zend_hash_next_index_insert(%5* %38, %11* %5)
  %40 = icmp ne %11* %39, null
  %41 = zext i1 %40 to i64
  %42 = select i1 %40, i32 0, i32 -1
  %43 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %43) #2
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_next_index_string(%11* %0, i8* %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %11, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca %10*, align 8
  store %11* %0, %11** %3, align 8
  store i8* %1, i8** %4, align 8
  %9 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #2
  br label %10

10:                                               ; preds = %2
  %11 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = load i8*, i8** %4, align 8
  store i8* %12, i8** %6, align 8
  br label %13

13:                                               ; preds = %10
  br label %14

14:                                               ; preds = %13
  %15 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  store %11* %5, %11** %7, align 8
  %16 = bitcast %10** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load i8*, i8** %6, align 8
  %18 = load i8*, i8** %6, align 8
  %19 = call i64 @strlen(i8* %18) #20
  %20 = call %10* @134(i8* %17, i64 %19, i32 0)
  store %10* %20, %10** %8, align 8
  %21 = load %10*, %10** %8, align 8
  %22 = load %11*, %11** %7, align 8
  %23 = getelementptr inbounds %11, %11* %22, i32 0, i32 0
  %24 = bitcast %12* %23 to %10**
  store %10* %21, %10** %24, align 8
  %25 = load %11*, %11** %7, align 8
  %26 = getelementptr inbounds %11, %11* %25, i32 0, i32 1
  %27 = bitcast %13* %26 to i32*
  store i32 5126, i32* %27, align 8
  %28 = bitcast %10** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #2
  %29 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #2
  br label %30

30:                                               ; preds = %14
  br label %31

31:                                               ; preds = %30
  br label %32

32:                                               ; preds = %31
  br label %33

33:                                               ; preds = %32
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  br label %35

35:                                               ; preds = %33
  br label %36

36:                                               ; preds = %35
  %37 = load %11*, %11** %3, align 8
  %38 = getelementptr inbounds %11, %11* %37, i32 0, i32 0
  %39 = bitcast %12* %38 to %5**
  %40 = load %5*, %5** %39, align 8
  %41 = call %11* @_zend_hash_next_index_insert(%5* %40, %11* %5)
  %42 = icmp ne %11* %41, null
  %43 = zext i1 %42 to i64
  %44 = select i1 %42, i32 0, i32 -1
  %45 = bitcast %11* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %45) #2
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_next_index_stringl(%11* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %11, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %10*, align 8
  store %11* %0, %11** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #2
  br label %11

11:                                               ; preds = %3
  br label %12

12:                                               ; preds = %11
  %13 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  store %11* %7, %11** %8, align 8
  %14 = bitcast %10** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  %15 = load i8*, i8** %5, align 8
  %16 = load i64, i64* %6, align 8
  %17 = call %10* @134(i8* %15, i64 %16, i32 0)
  store %10* %17, %10** %9, align 8
  %18 = load %10*, %10** %9, align 8
  %19 = load %11*, %11** %8, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to %10**
  store %10* %18, %10** %21, align 8
  %22 = load %11*, %11** %8, align 8
  %23 = getelementptr inbounds %11, %11* %22, i32 0, i32 1
  %24 = bitcast %13* %23 to i32*
  store i32 5126, i32* %24, align 8
  %25 = bitcast %10** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #2
  %26 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %26) #2
  br label %27

27:                                               ; preds = %12
  br label %28

28:                                               ; preds = %27
  br label %29

29:                                               ; preds = %28
  br label %30

30:                                               ; preds = %29
  %31 = load %11*, %11** %4, align 8
  %32 = getelementptr inbounds %11, %11* %31, i32 0, i32 0
  %33 = bitcast %12* %32 to %5**
  %34 = load %5*, %5** %33, align 8
  %35 = call %11* @_zend_hash_next_index_insert(%5* %34, %11* %7)
  %36 = icmp ne %11* %35, null
  %37 = zext i1 %36 to i64
  %38 = select i1 %36, i32 0, i32 -1
  %39 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %39) #2
  ret i32 %38
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_next_index_zval(%11* %0, %11* %1) #0 {
  %3 = alloca %11*, align 8
  %4 = alloca %11*, align 8
  store %11* %0, %11** %3, align 8
  store %11* %1, %11** %4, align 8
  %5 = load %11*, %11** %3, align 8
  %6 = getelementptr inbounds %11, %11* %5, i32 0, i32 0
  %7 = bitcast %12* %6 to %5**
  %8 = load %5*, %5** %7, align 8
  %9 = load %11*, %11** %4, align 8
  %10 = call %11* @_zend_hash_next_index_insert(%5* %8, %11* %9)
  %11 = icmp ne %11* %10, null
  %12 = zext i1 %11 to i64
  %13 = select i1 %11, i32 0, i32 -1
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define dso_local %11* @add_get_assoc_string_ex(%11* %0, i8* %1, i32 %2, i8* %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %14 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  %15 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  br label %16

16:                                               ; preds = %4
  %17 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load i8*, i8** %8, align 8
  store i8* %18, i8** %11, align 8
  br label %19

19:                                               ; preds = %16
  br label %20

20:                                               ; preds = %19
  %21 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  store %11* %9, %11** %12, align 8
  %22 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #2
  %23 = load i8*, i8** %11, align 8
  %24 = load i8*, i8** %11, align 8
  %25 = call i64 @strlen(i8* %24) #20
  %26 = call %10* @134(i8* %23, i64 %25, i32 0)
  store %10* %26, %10** %13, align 8
  %27 = load %10*, %10** %13, align 8
  %28 = load %11*, %11** %12, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to %10**
  store %10* %27, %10** %30, align 8
  %31 = load %11*, %11** %12, align 8
  %32 = getelementptr inbounds %11, %11* %31, i32 0, i32 1
  %33 = bitcast %13* %32 to i32*
  store i32 5126, i32* %33, align 8
  %34 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  %35 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #2
  br label %36

36:                                               ; preds = %20
  br label %37

37:                                               ; preds = %36
  br label %38

38:                                               ; preds = %37
  br label %39

39:                                               ; preds = %38
  %40 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #2
  br label %41

41:                                               ; preds = %39
  br label %42

42:                                               ; preds = %41
  %43 = load %11*, %11** %5, align 8
  %44 = getelementptr inbounds %11, %11* %43, i32 0, i32 0
  %45 = bitcast %12* %44 to %5**
  %46 = load %5*, %5** %45, align 8
  %47 = load i8*, i8** %6, align 8
  %48 = load i32, i32* %7, align 4
  %49 = zext i32 %48 to i64
  %50 = call %11* @136(%5* %46, i8* %47, i64 %49, %11* %9)
  store %11* %50, %11** %10, align 8
  %51 = load %11*, %11** %10, align 8
  %52 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #2
  %53 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %53) #2
  ret %11* %51
}

; Function Attrs: nounwind uwtable
define dso_local %11* @add_get_assoc_stringl_ex(%11* %0, i8* %1, i32 %2, i8* %3, i64 %4) #0 {
  %6 = alloca %11*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %10*, align 8
  store %11* %0, %11** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8* %3, i8** %9, align 8
  store i64 %4, i64* %10, align 8
  %15 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #2
  %16 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  br label %17

17:                                               ; preds = %5
  br label %18

18:                                               ; preds = %17
  %19 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  store %11* %11, %11** %13, align 8
  %20 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #2
  %21 = load i8*, i8** %9, align 8
  %22 = load i64, i64* %10, align 8
  %23 = call %10* @134(i8* %21, i64 %22, i32 0)
  store %10* %23, %10** %14, align 8
  %24 = load %10*, %10** %14, align 8
  %25 = load %11*, %11** %13, align 8
  %26 = getelementptr inbounds %11, %11* %25, i32 0, i32 0
  %27 = bitcast %12* %26 to %10**
  store %10* %24, %10** %27, align 8
  %28 = load %11*, %11** %13, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 1
  %30 = bitcast %13* %29 to i32*
  store i32 5126, i32* %30, align 8
  %31 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #2
  %32 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #2
  br label %33

33:                                               ; preds = %18
  br label %34

34:                                               ; preds = %33
  br label %35

35:                                               ; preds = %34
  br label %36

36:                                               ; preds = %35
  %37 = load %11*, %11** %6, align 8
  %38 = getelementptr inbounds %11, %11* %37, i32 0, i32 0
  %39 = bitcast %12* %38 to %5**
  %40 = load %5*, %5** %39, align 8
  %41 = load i8*, i8** %7, align 8
  %42 = load i32, i32* %8, align 4
  %43 = zext i32 %42 to i64
  %44 = call %11* @136(%5* %40, i8* %41, i64 %43, %11* %11)
  store %11* %44, %11** %12, align 8
  %45 = load %11*, %11** %12, align 8
  %46 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #2
  %47 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %47) #2
  ret %11* %45
}

; Function Attrs: nounwind uwtable
define dso_local %11* @add_get_index_long(%11* %0, i64 %1, i64 %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %11, align 8
  %8 = alloca %11*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #2
  %10 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  store %11* %7, %11** %8, align 8
  %11 = load i64, i64* %6, align 8
  %12 = load %11*, %11** %8, align 8
  %13 = getelementptr inbounds %11, %11* %12, i32 0, i32 0
  %14 = bitcast %12* %13 to i64*
  store i64 %11, i64* %14, align 8
  %15 = load %11*, %11** %8, align 8
  %16 = getelementptr inbounds %11, %11* %15, i32 0, i32 1
  %17 = bitcast %13* %16 to i32*
  store i32 4, i32* %17, align 8
  %18 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #2
  %19 = load %11*, %11** %4, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to %5**
  %22 = load %5*, %5** %21, align 8
  %23 = load i64, i64* %5, align 8
  %24 = call %11* @_zend_hash_index_update(%5* %22, i64 %23, %11* %7)
  %25 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %25) #2
  ret %11* %24
}

; Function Attrs: nounwind uwtable
define dso_local %11* @add_get_index_double(%11* %0, i64 %1, double %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca %11, align 8
  %8 = alloca %11*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store double %2, double* %6, align 8
  %9 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #2
  %10 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  store %11* %7, %11** %8, align 8
  %11 = load double, double* %6, align 8
  %12 = load %11*, %11** %8, align 8
  %13 = getelementptr inbounds %11, %11* %12, i32 0, i32 0
  %14 = bitcast %12* %13 to double*
  store double %11, double* %14, align 8
  %15 = load %11*, %11** %8, align 8
  %16 = getelementptr inbounds %11, %11* %15, i32 0, i32 1
  %17 = bitcast %13* %16 to i32*
  store i32 5, i32* %17, align 8
  %18 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #2
  %19 = load %11*, %11** %4, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to %5**
  %22 = load %5*, %5** %21, align 8
  %23 = load i64, i64* %5, align 8
  %24 = call %11* @_zend_hash_index_update(%5* %22, i64 %23, %11* %7)
  %25 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %25) #2
  ret %11* %24
}

; Function Attrs: nounwind uwtable
define dso_local %11* @add_get_index_str(%11* %0, i64 %1, %10* %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %10*, align 8
  %7 = alloca %11, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %10*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store %10* %2, %10** %6, align 8
  %10 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #2
  br label %11

11:                                               ; preds = %3
  %12 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  store %11* %7, %11** %8, align 8
  %13 = bitcast %10** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  %14 = load %10*, %10** %6, align 8
  store %10* %14, %10** %9, align 8
  %15 = load %10*, %10** %9, align 8
  %16 = load %11*, %11** %8, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to %10**
  store %10* %15, %10** %18, align 8
  %19 = load %10*, %10** %9, align 8
  %20 = getelementptr inbounds %10, %10* %19, i32 0, i32 0
  %21 = getelementptr inbounds %6, %6* %20, i32 0, i32 1
  %22 = bitcast %7* %21 to %63*
  %23 = getelementptr inbounds %63, %63* %22, i32 0, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = and i32 %25, 2
  %27 = icmp ne i32 %26, 0
  %28 = zext i1 %27 to i64
  %29 = select i1 %27, i32 6, i32 5126
  %30 = load %11*, %11** %8, align 8
  %31 = getelementptr inbounds %11, %11* %30, i32 0, i32 1
  %32 = bitcast %13* %31 to i32*
  store i32 %29, i32* %32, align 8
  %33 = bitcast %10** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #2
  %34 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  br label %35

35:                                               ; preds = %11
  br label %36

36:                                               ; preds = %35
  %37 = load %11*, %11** %4, align 8
  %38 = getelementptr inbounds %11, %11* %37, i32 0, i32 0
  %39 = bitcast %12* %38 to %5**
  %40 = load %5*, %5** %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = call %11* @_zend_hash_index_update(%5* %40, i64 %41, %11* %7)
  %43 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %43) #2
  ret %11* %42
}

; Function Attrs: nounwind uwtable
define dso_local %11* @add_get_index_string(%11* %0, i64 %1, i8* %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %11, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %10*, align 8
  store %11* %0, %11** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %11 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #2
  br label %12

12:                                               ; preds = %3
  %13 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  %14 = load i8*, i8** %6, align 8
  store i8* %14, i8** %8, align 8
  br label %15

15:                                               ; preds = %12
  br label %16

16:                                               ; preds = %15
  %17 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  store %11* %7, %11** %9, align 8
  %18 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  %19 = load i8*, i8** %8, align 8
  %20 = load i8*, i8** %8, align 8
  %21 = call i64 @strlen(i8* %20) #20
  %22 = call %10* @134(i8* %19, i64 %21, i32 0)
  store %10* %22, %10** %10, align 8
  %23 = load %10*, %10** %10, align 8
  %24 = load %11*, %11** %9, align 8
  %25 = getelementptr inbounds %11, %11* %24, i32 0, i32 0
  %26 = bitcast %12* %25 to %10**
  store %10* %23, %10** %26, align 8
  %27 = load %11*, %11** %9, align 8
  %28 = getelementptr inbounds %11, %11* %27, i32 0, i32 1
  %29 = bitcast %13* %28 to i32*
  store i32 5126, i32* %29, align 8
  %30 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #2
  %31 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #2
  br label %32

32:                                               ; preds = %16
  br label %33

33:                                               ; preds = %32
  br label %34

34:                                               ; preds = %33
  br label %35

35:                                               ; preds = %34
  %36 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #2
  br label %37

37:                                               ; preds = %35
  br label %38

38:                                               ; preds = %37
  %39 = load %11*, %11** %4, align 8
  %40 = getelementptr inbounds %11, %11* %39, i32 0, i32 0
  %41 = bitcast %12* %40 to %5**
  %42 = load %5*, %5** %41, align 8
  %43 = load i64, i64* %5, align 8
  %44 = call %11* @_zend_hash_index_update(%5* %42, i64 %43, %11* %7)
  %45 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %45) #2
  ret %11* %44
}

; Function Attrs: nounwind uwtable
define dso_local %11* @add_get_index_stringl(%11* %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11*, align 8
  %11 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %12 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #2
  br label %13

13:                                               ; preds = %4
  br label %14

14:                                               ; preds = %13
  %15 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  store %11* %9, %11** %10, align 8
  %16 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load i8*, i8** %7, align 8
  %18 = load i64, i64* %8, align 8
  %19 = call %10* @134(i8* %17, i64 %18, i32 0)
  store %10* %19, %10** %11, align 8
  %20 = load %10*, %10** %11, align 8
  %21 = load %11*, %11** %10, align 8
  %22 = getelementptr inbounds %11, %11* %21, i32 0, i32 0
  %23 = bitcast %12* %22 to %10**
  store %10* %20, %10** %23, align 8
  %24 = load %11*, %11** %10, align 8
  %25 = getelementptr inbounds %11, %11* %24, i32 0, i32 1
  %26 = bitcast %13* %25 to i32*
  store i32 5126, i32* %26, align 8
  %27 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #2
  %28 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #2
  br label %29

29:                                               ; preds = %14
  br label %30

30:                                               ; preds = %29
  br label %31

31:                                               ; preds = %30
  br label %32

32:                                               ; preds = %31
  %33 = load %11*, %11** %5, align 8
  %34 = getelementptr inbounds %11, %11* %33, i32 0, i32 0
  %35 = bitcast %12* %34 to %5**
  %36 = load %5*, %5** %35, align 8
  %37 = load i64, i64* %6, align 8
  %38 = call %11* @_zend_hash_index_update(%5* %36, i64 %37, %11* %9)
  %39 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %39) #2
  ret %11* %38
}

; Function Attrs: nounwind uwtable
define dso_local i32 @array_set_zval_key(%5* %0, %11* %1, %11* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %5*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca i32, align 4
  store %5* %0, %5** %5, align 8
  store %11* %1, %11** %6, align 8
  store %11* %2, %11** %7, align 8
  %10 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load %11*, %11** %6, align 8
  %12 = call zeroext i8 @125(%11* %11)
  %13 = zext i8 %12 to i32
  switch i32 %13, label %75 [
    i32 6, label %14
    i32 1, label %22
    i32 9, label %27
    i32 2, label %50
    i32 3, label %54
    i32 4, label %58
    i32 5, label %66
  ]

14:                                               ; preds = %3
  %15 = load %5*, %5** %5, align 8
  %16 = load %11*, %11** %6, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to %10**
  %19 = load %10*, %10** %18, align 8
  %20 = load %11*, %11** %7, align 8
  %21 = call %11* @137(%5* %15, %10* %19, %11* %20)
  store %11* %21, %11** %8, align 8
  br label %76

22:                                               ; preds = %3
  %23 = load %5*, %5** %5, align 8
  %24 = load %10*, %10** @zend_empty_string, align 8
  %25 = load %11*, %11** %7, align 8
  %26 = call %11* @137(%5* %23, %10* %24, %11* %25)
  store %11* %26, %11** %8, align 8
  br label %76

27:                                               ; preds = %3
  %28 = load %11*, %11** %6, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to %62**
  %31 = load %62*, %62** %30, align 8
  %32 = getelementptr inbounds %62, %62* %31, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = load %11*, %11** %6, align 8
  %35 = getelementptr inbounds %11, %11* %34, i32 0, i32 0
  %36 = bitcast %12* %35 to %62**
  %37 = load %62*, %62** %36, align 8
  %38 = getelementptr inbounds %62, %62* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  call void (i32, i8*, ...) @zend_error(i32 8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @31, i32 0, i32 0), i32 %33, i32 %39)
  %40 = load %5*, %5** %5, align 8
  %41 = load %11*, %11** %6, align 8
  %42 = getelementptr inbounds %11, %11* %41, i32 0, i32 0
  %43 = bitcast %12* %42 to %62**
  %44 = load %62*, %62** %43, align 8
  %45 = getelementptr inbounds %62, %62* %44, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = load %11*, %11** %7, align 8
  %49 = call %11* @_zend_hash_index_update(%5* %40, i64 %47, %11* %48)
  store %11* %49, %11** %8, align 8
  br label %76

50:                                               ; preds = %3
  %51 = load %5*, %5** %5, align 8
  %52 = load %11*, %11** %7, align 8
  %53 = call %11* @_zend_hash_index_update(%5* %51, i64 0, %11* %52)
  store %11* %53, %11** %8, align 8
  br label %76

54:                                               ; preds = %3
  %55 = load %5*, %5** %5, align 8
  %56 = load %11*, %11** %7, align 8
  %57 = call %11* @_zend_hash_index_update(%5* %55, i64 1, %11* %56)
  store %11* %57, %11** %8, align 8
  br label %76

58:                                               ; preds = %3
  %59 = load %5*, %5** %5, align 8
  %60 = load %11*, %11** %6, align 8
  %61 = getelementptr inbounds %11, %11* %60, i32 0, i32 0
  %62 = bitcast %12* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = load %11*, %11** %7, align 8
  %65 = call %11* @_zend_hash_index_update(%5* %59, i64 %63, %11* %64)
  store %11* %65, %11** %8, align 8
  br label %76

66:                                               ; preds = %3
  %67 = load %5*, %5** %5, align 8
  %68 = load %11*, %11** %6, align 8
  %69 = getelementptr inbounds %11, %11* %68, i32 0, i32 0
  %70 = bitcast %12* %69 to double*
  %71 = load double, double* %70, align 8
  %72 = call i64 @129(double %71)
  %73 = load %11*, %11** %7, align 8
  %74 = call %11* @_zend_hash_index_update(%5* %67, i64 %72, %11* %73)
  store %11* %74, %11** %8, align 8
  br label %76

75:                                               ; preds = %3
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @32, i32 0, i32 0))
  store %11* null, %11** %8, align 8
  br label %76

76:                                               ; preds = %75, %66, %58, %54, %50, %27, %22, %14
  %77 = load %11*, %11** %8, align 8
  %78 = icmp ne %11* %77, null
  br i1 %78, label %79, label %92

79:                                               ; preds = %76
  %80 = load %11*, %11** %8, align 8
  %81 = getelementptr inbounds %11, %11* %80, i32 0, i32 1
  %82 = bitcast %13* %81 to %59*
  %83 = getelementptr inbounds %59, %59* %82, i32 0, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = and i32 %85, 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %79
  %89 = load %11*, %11** %8, align 8
  %90 = call i32 @128(%11* %89)
  br label %91

91:                                               ; preds = %88, %79
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %93

92:                                               ; preds = %76
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %93

93:                                               ; preds = %92, %91
  %94 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #2
  %95 = load i32, i32* %4, align 4
  ret i32 %95
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %11* @137(%5* %0, %10* %1, %11* %2) #3 {
  %4 = alloca %11*, align 8
  %5 = alloca %5*, align 8
  %6 = alloca %10*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store %5* %0, %5** %5, align 8
  store %10* %1, %10** %6, align 8
  store %11* %2, %11** %7, align 8
  %10 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load %10*, %10** %6, align 8
  %12 = getelementptr inbounds %10, %10* %11, i32 0, i32 3
  %13 = getelementptr inbounds [1 x i8], [1 x i8]* %12, i32 0, i32 0
  %14 = load %10*, %10** %6, align 8
  %15 = getelementptr inbounds %10, %10* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = call i32 @179(i8* %13, i64 %16, i64* %8)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %3
  %20 = load %5*, %5** %5, align 8
  %21 = load i64, i64* %8, align 8
  %22 = load %11*, %11** %7, align 8
  %23 = call %11* @_zend_hash_index_update(%5* %20, i64 %21, %11* %22)
  store %11* %23, %11** %4, align 8
  store i32 1, i32* %9, align 4
  br label %29

24:                                               ; preds = %3
  %25 = load %5*, %5** %5, align 8
  %26 = load %10*, %10** %6, align 8
  %27 = load %11*, %11** %7, align 8
  %28 = call %11* @_zend_hash_update(%5* %25, %10* %26, %11* %27)
  store %11* %28, %11** %4, align 8
  store i32 1, i32* %9, align 4
  br label %29

29:                                               ; preds = %24, %19
  %30 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #2
  %31 = load %11*, %11** %4, align 8
  ret %11* %31
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_property_long_ex(%11* %0, i8* %1, i64 %2, i64 %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %14 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  %15 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #2
  %16 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  store %11* %9, %11** %11, align 8
  %17 = load i64, i64* %8, align 8
  %18 = load %11*, %11** %11, align 8
  %19 = getelementptr inbounds %11, %11* %18, i32 0, i32 0
  %20 = bitcast %12* %19 to i64*
  store i64 %17, i64* %20, align 8
  %21 = load %11*, %11** %11, align 8
  %22 = getelementptr inbounds %11, %11* %21, i32 0, i32 1
  %23 = bitcast %13* %22 to i32*
  store i32 4, i32* %23, align 8
  %24 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #2
  br label %25

25:                                               ; preds = %4
  br label %26

26:                                               ; preds = %25
  %27 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #2
  store %11* %10, %11** %12, align 8
  %28 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #2
  %29 = load i8*, i8** %6, align 8
  %30 = load i64, i64* %7, align 8
  %31 = call %10* @134(i8* %29, i64 %30, i32 0)
  store %10* %31, %10** %13, align 8
  %32 = load %10*, %10** %13, align 8
  %33 = load %11*, %11** %12, align 8
  %34 = getelementptr inbounds %11, %11* %33, i32 0, i32 0
  %35 = bitcast %12* %34 to %10**
  store %10* %32, %10** %35, align 8
  %36 = load %11*, %11** %12, align 8
  %37 = getelementptr inbounds %11, %11* %36, i32 0, i32 1
  %38 = bitcast %13* %37 to i32*
  store i32 5126, i32* %38, align 8
  %39 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #2
  %40 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #2
  br label %41

41:                                               ; preds = %26
  br label %42

42:                                               ; preds = %41
  br label %43

43:                                               ; preds = %42
  br label %44

44:                                               ; preds = %43
  %45 = load %11*, %11** %5, align 8
  %46 = getelementptr inbounds %11, %11* %45, i32 0, i32 0
  %47 = bitcast %12* %46 to %20**
  %48 = load %20*, %20** %47, align 8
  %49 = getelementptr inbounds %20, %20* %48, i32 0, i32 3
  %50 = load %21*, %21** %49, align 8
  %51 = getelementptr inbounds %21, %21* %50, i32 0, i32 5
  %52 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %51, align 8
  %53 = load %11*, %11** %5, align 8
  call void %52(%11* %53, %11* %10, %11* %9, i8** null)
  call void @_zval_ptr_dtor(%11* %9)
  call void @_zval_ptr_dtor(%11* %10)
  %54 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %54) #2
  %55 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %55) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_property_bool_ex(%11* %0, i8* %1, i64 %2, i64 %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %13 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  br label %15

15:                                               ; preds = %4
  %16 = load i64, i64* %8, align 8
  %17 = icmp ne i64 %16, 0
  %18 = zext i1 %17 to i64
  %19 = select i1 %17, i32 3, i32 2
  %20 = getelementptr inbounds %11, %11* %9, i32 0, i32 1
  %21 = bitcast %13* %20 to i32*
  store i32 %19, i32* %21, align 8
  br label %22

22:                                               ; preds = %15
  br label %23

23:                                               ; preds = %22
  br label %24

24:                                               ; preds = %23
  br label %25

25:                                               ; preds = %24
  %26 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #2
  store %11* %10, %11** %11, align 8
  %27 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #2
  %28 = load i8*, i8** %6, align 8
  %29 = load i64, i64* %7, align 8
  %30 = call %10* @134(i8* %28, i64 %29, i32 0)
  store %10* %30, %10** %12, align 8
  %31 = load %10*, %10** %12, align 8
  %32 = load %11*, %11** %11, align 8
  %33 = getelementptr inbounds %11, %11* %32, i32 0, i32 0
  %34 = bitcast %12* %33 to %10**
  store %10* %31, %10** %34, align 8
  %35 = load %11*, %11** %11, align 8
  %36 = getelementptr inbounds %11, %11* %35, i32 0, i32 1
  %37 = bitcast %13* %36 to i32*
  store i32 5126, i32* %37, align 8
  %38 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #2
  %39 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #2
  br label %40

40:                                               ; preds = %25
  br label %41

41:                                               ; preds = %40
  br label %42

42:                                               ; preds = %41
  br label %43

43:                                               ; preds = %42
  %44 = load %11*, %11** %5, align 8
  %45 = getelementptr inbounds %11, %11* %44, i32 0, i32 0
  %46 = bitcast %12* %45 to %20**
  %47 = load %20*, %20** %46, align 8
  %48 = getelementptr inbounds %20, %20* %47, i32 0, i32 3
  %49 = load %21*, %21** %48, align 8
  %50 = getelementptr inbounds %21, %21* %49, i32 0, i32 5
  %51 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %50, align 8
  %52 = load %11*, %11** %5, align 8
  call void %51(%11* %52, %11* %10, %11* %9, i8** null)
  call void @_zval_ptr_dtor(%11* %9)
  call void @_zval_ptr_dtor(%11* %10)
  %53 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %53) #2
  %54 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %54) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_property_null_ex(%11* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %11, align 8
  %8 = alloca %11, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %10*, align 8
  store %11* %0, %11** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %11 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #2
  %12 = bitcast %11* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #2
  br label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %11, %11* %7, i32 0, i32 1
  %15 = bitcast %13* %14 to i32*
  store i32 1, i32* %15, align 8
  br label %16

16:                                               ; preds = %13
  br label %17

17:                                               ; preds = %16
  br label %18

18:                                               ; preds = %17
  br label %19

19:                                               ; preds = %18
  %20 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #2
  store %11* %8, %11** %9, align 8
  %21 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  %22 = load i8*, i8** %5, align 8
  %23 = load i64, i64* %6, align 8
  %24 = call %10* @134(i8* %22, i64 %23, i32 0)
  store %10* %24, %10** %10, align 8
  %25 = load %10*, %10** %10, align 8
  %26 = load %11*, %11** %9, align 8
  %27 = getelementptr inbounds %11, %11* %26, i32 0, i32 0
  %28 = bitcast %12* %27 to %10**
  store %10* %25, %10** %28, align 8
  %29 = load %11*, %11** %9, align 8
  %30 = getelementptr inbounds %11, %11* %29, i32 0, i32 1
  %31 = bitcast %13* %30 to i32*
  store i32 5126, i32* %31, align 8
  %32 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #2
  %33 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #2
  br label %34

34:                                               ; preds = %19
  br label %35

35:                                               ; preds = %34
  br label %36

36:                                               ; preds = %35
  br label %37

37:                                               ; preds = %36
  %38 = load %11*, %11** %4, align 8
  %39 = getelementptr inbounds %11, %11* %38, i32 0, i32 0
  %40 = bitcast %12* %39 to %20**
  %41 = load %20*, %20** %40, align 8
  %42 = getelementptr inbounds %20, %20* %41, i32 0, i32 3
  %43 = load %21*, %21** %42, align 8
  %44 = getelementptr inbounds %21, %21* %43, i32 0, i32 5
  %45 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %44, align 8
  %46 = load %11*, %11** %4, align 8
  call void %45(%11* %46, %11* %8, %11* %7, i8** null)
  call void @_zval_ptr_dtor(%11* %7)
  call void @_zval_ptr_dtor(%11* %8)
  %47 = bitcast %11* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %47) #2
  %48 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %48) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_property_resource_ex(%11* %0, i8* %1, i64 %2, %62* %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %62*, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store %62* %3, %62** %8, align 8
  %14 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  %15 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #2
  br label %16

16:                                               ; preds = %4
  %17 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  store %11* %9, %11** %11, align 8
  %18 = load %62*, %62** %8, align 8
  %19 = load %11*, %11** %11, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to %62**
  store %62* %18, %62** %21, align 8
  %22 = load %11*, %11** %11, align 8
  %23 = getelementptr inbounds %11, %11* %22, i32 0, i32 1
  %24 = bitcast %13* %23 to i32*
  store i32 1033, i32* %24, align 8
  %25 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #2
  br label %26

26:                                               ; preds = %16
  br label %27

27:                                               ; preds = %26
  br label %28

28:                                               ; preds = %27
  br label %29

29:                                               ; preds = %28
  %30 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #2
  store %11* %10, %11** %12, align 8
  %31 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #2
  %32 = load i8*, i8** %6, align 8
  %33 = load i64, i64* %7, align 8
  %34 = call %10* @134(i8* %32, i64 %33, i32 0)
  store %10* %34, %10** %13, align 8
  %35 = load %10*, %10** %13, align 8
  %36 = load %11*, %11** %12, align 8
  %37 = getelementptr inbounds %11, %11* %36, i32 0, i32 0
  %38 = bitcast %12* %37 to %10**
  store %10* %35, %10** %38, align 8
  %39 = load %11*, %11** %12, align 8
  %40 = getelementptr inbounds %11, %11* %39, i32 0, i32 1
  %41 = bitcast %13* %40 to i32*
  store i32 5126, i32* %41, align 8
  %42 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #2
  %43 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #2
  br label %44

44:                                               ; preds = %29
  br label %45

45:                                               ; preds = %44
  br label %46

46:                                               ; preds = %45
  br label %47

47:                                               ; preds = %46
  %48 = load %11*, %11** %5, align 8
  %49 = getelementptr inbounds %11, %11* %48, i32 0, i32 0
  %50 = bitcast %12* %49 to %20**
  %51 = load %20*, %20** %50, align 8
  %52 = getelementptr inbounds %20, %20* %51, i32 0, i32 3
  %53 = load %21*, %21** %52, align 8
  %54 = getelementptr inbounds %21, %21* %53, i32 0, i32 5
  %55 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %54, align 8
  %56 = load %11*, %11** %5, align 8
  call void %55(%11* %56, %11* %10, %11* %9, i8** null)
  call void @_zval_ptr_dtor(%11* %9)
  call void @_zval_ptr_dtor(%11* %10)
  %57 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %57) #2
  %58 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %58) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_property_double_ex(%11* %0, i8* %1, i64 %2, double %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store double %3, double* %8, align 8
  %14 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  %15 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #2
  %16 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  store %11* %9, %11** %11, align 8
  %17 = load double, double* %8, align 8
  %18 = load %11*, %11** %11, align 8
  %19 = getelementptr inbounds %11, %11* %18, i32 0, i32 0
  %20 = bitcast %12* %19 to double*
  store double %17, double* %20, align 8
  %21 = load %11*, %11** %11, align 8
  %22 = getelementptr inbounds %11, %11* %21, i32 0, i32 1
  %23 = bitcast %13* %22 to i32*
  store i32 5, i32* %23, align 8
  %24 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #2
  br label %25

25:                                               ; preds = %4
  br label %26

26:                                               ; preds = %25
  %27 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #2
  store %11* %10, %11** %12, align 8
  %28 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #2
  %29 = load i8*, i8** %6, align 8
  %30 = load i64, i64* %7, align 8
  %31 = call %10* @134(i8* %29, i64 %30, i32 0)
  store %10* %31, %10** %13, align 8
  %32 = load %10*, %10** %13, align 8
  %33 = load %11*, %11** %12, align 8
  %34 = getelementptr inbounds %11, %11* %33, i32 0, i32 0
  %35 = bitcast %12* %34 to %10**
  store %10* %32, %10** %35, align 8
  %36 = load %11*, %11** %12, align 8
  %37 = getelementptr inbounds %11, %11* %36, i32 0, i32 1
  %38 = bitcast %13* %37 to i32*
  store i32 5126, i32* %38, align 8
  %39 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #2
  %40 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #2
  br label %41

41:                                               ; preds = %26
  br label %42

42:                                               ; preds = %41
  br label %43

43:                                               ; preds = %42
  br label %44

44:                                               ; preds = %43
  %45 = load %11*, %11** %5, align 8
  %46 = getelementptr inbounds %11, %11* %45, i32 0, i32 0
  %47 = bitcast %12* %46 to %20**
  %48 = load %20*, %20** %47, align 8
  %49 = getelementptr inbounds %20, %20* %48, i32 0, i32 3
  %50 = load %21*, %21** %49, align 8
  %51 = getelementptr inbounds %21, %21* %50, i32 0, i32 5
  %52 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %51, align 8
  %53 = load %11*, %11** %5, align 8
  call void %52(%11* %53, %11* %10, %11* %9, i8** null)
  call void @_zval_ptr_dtor(%11* %9)
  call void @_zval_ptr_dtor(%11* %10)
  %54 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %54) #2
  %55 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %55) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_property_str_ex(%11* %0, i8* %1, i64 %2, %10* %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %10*, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %10*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store %10* %3, %10** %8, align 8
  %15 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #2
  %16 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %16) #2
  br label %17

17:                                               ; preds = %4
  %18 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  store %11* %9, %11** %11, align 8
  %19 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  %20 = load %10*, %10** %8, align 8
  store %10* %20, %10** %12, align 8
  %21 = load %10*, %10** %12, align 8
  %22 = load %11*, %11** %11, align 8
  %23 = getelementptr inbounds %11, %11* %22, i32 0, i32 0
  %24 = bitcast %12* %23 to %10**
  store %10* %21, %10** %24, align 8
  %25 = load %10*, %10** %12, align 8
  %26 = getelementptr inbounds %10, %10* %25, i32 0, i32 0
  %27 = getelementptr inbounds %6, %6* %26, i32 0, i32 1
  %28 = bitcast %7* %27 to %63*
  %29 = getelementptr inbounds %63, %63* %28, i32 0, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = and i32 %31, 2
  %33 = icmp ne i32 %32, 0
  %34 = zext i1 %33 to i64
  %35 = select i1 %33, i32 6, i32 5126
  %36 = load %11*, %11** %11, align 8
  %37 = getelementptr inbounds %11, %11* %36, i32 0, i32 1
  %38 = bitcast %13* %37 to i32*
  store i32 %35, i32* %38, align 8
  %39 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #2
  %40 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #2
  br label %41

41:                                               ; preds = %17
  br label %42

42:                                               ; preds = %41
  br label %43

43:                                               ; preds = %42
  br label %44

44:                                               ; preds = %43
  %45 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #2
  store %11* %10, %11** %13, align 8
  %46 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #2
  %47 = load i8*, i8** %6, align 8
  %48 = load i64, i64* %7, align 8
  %49 = call %10* @134(i8* %47, i64 %48, i32 0)
  store %10* %49, %10** %14, align 8
  %50 = load %10*, %10** %14, align 8
  %51 = load %11*, %11** %13, align 8
  %52 = getelementptr inbounds %11, %11* %51, i32 0, i32 0
  %53 = bitcast %12* %52 to %10**
  store %10* %50, %10** %53, align 8
  %54 = load %11*, %11** %13, align 8
  %55 = getelementptr inbounds %11, %11* %54, i32 0, i32 1
  %56 = bitcast %13* %55 to i32*
  store i32 5126, i32* %56, align 8
  %57 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #2
  %58 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #2
  br label %59

59:                                               ; preds = %44
  br label %60

60:                                               ; preds = %59
  br label %61

61:                                               ; preds = %60
  br label %62

62:                                               ; preds = %61
  %63 = load %11*, %11** %5, align 8
  %64 = getelementptr inbounds %11, %11* %63, i32 0, i32 0
  %65 = bitcast %12* %64 to %20**
  %66 = load %20*, %20** %65, align 8
  %67 = getelementptr inbounds %20, %20* %66, i32 0, i32 3
  %68 = load %21*, %21** %67, align 8
  %69 = getelementptr inbounds %21, %21* %68, i32 0, i32 5
  %70 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %69, align 8
  %71 = load %11*, %11** %5, align 8
  call void %70(%11* %71, %11* %10, %11* %9, i8** null)
  call void @_zval_ptr_dtor(%11* %9)
  call void @_zval_ptr_dtor(%11* %10)
  %72 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %72) #2
  %73 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %73) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_property_string_ex(%11* %0, i8* %1, i64 %2, i8* %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  %14 = alloca %11*, align 8
  %15 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8* %3, i8** %8, align 8
  %16 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %16) #2
  %17 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %17) #2
  br label %18

18:                                               ; preds = %4
  %19 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  %20 = load i8*, i8** %8, align 8
  store i8* %20, i8** %11, align 8
  br label %21

21:                                               ; preds = %18
  br label %22

22:                                               ; preds = %21
  %23 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #2
  store %11* %9, %11** %12, align 8
  %24 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #2
  %25 = load i8*, i8** %11, align 8
  %26 = load i8*, i8** %11, align 8
  %27 = call i64 @strlen(i8* %26) #20
  %28 = call %10* @134(i8* %25, i64 %27, i32 0)
  store %10* %28, %10** %13, align 8
  %29 = load %10*, %10** %13, align 8
  %30 = load %11*, %11** %12, align 8
  %31 = getelementptr inbounds %11, %11* %30, i32 0, i32 0
  %32 = bitcast %12* %31 to %10**
  store %10* %29, %10** %32, align 8
  %33 = load %11*, %11** %12, align 8
  %34 = getelementptr inbounds %11, %11* %33, i32 0, i32 1
  %35 = bitcast %13* %34 to i32*
  store i32 5126, i32* %35, align 8
  %36 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #2
  %37 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #2
  br label %38

38:                                               ; preds = %22
  br label %39

39:                                               ; preds = %38
  br label %40

40:                                               ; preds = %39
  br label %41

41:                                               ; preds = %40
  %42 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #2
  br label %43

43:                                               ; preds = %41
  br label %44

44:                                               ; preds = %43
  br label %45

45:                                               ; preds = %44
  br label %46

46:                                               ; preds = %45
  %47 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #2
  store %11* %10, %11** %14, align 8
  %48 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #2
  %49 = load i8*, i8** %6, align 8
  %50 = load i64, i64* %7, align 8
  %51 = call %10* @134(i8* %49, i64 %50, i32 0)
  store %10* %51, %10** %15, align 8
  %52 = load %10*, %10** %15, align 8
  %53 = load %11*, %11** %14, align 8
  %54 = getelementptr inbounds %11, %11* %53, i32 0, i32 0
  %55 = bitcast %12* %54 to %10**
  store %10* %52, %10** %55, align 8
  %56 = load %11*, %11** %14, align 8
  %57 = getelementptr inbounds %11, %11* %56, i32 0, i32 1
  %58 = bitcast %13* %57 to i32*
  store i32 5126, i32* %58, align 8
  %59 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #2
  %60 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #2
  br label %61

61:                                               ; preds = %46
  br label %62

62:                                               ; preds = %61
  br label %63

63:                                               ; preds = %62
  br label %64

64:                                               ; preds = %63
  %65 = load %11*, %11** %5, align 8
  %66 = getelementptr inbounds %11, %11* %65, i32 0, i32 0
  %67 = bitcast %12* %66 to %20**
  %68 = load %20*, %20** %67, align 8
  %69 = getelementptr inbounds %20, %20* %68, i32 0, i32 3
  %70 = load %21*, %21** %69, align 8
  %71 = getelementptr inbounds %21, %21* %70, i32 0, i32 5
  %72 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %71, align 8
  %73 = load %11*, %11** %5, align 8
  call void %72(%11* %73, %11* %10, %11* %9, i8** null)
  call void @_zval_ptr_dtor(%11* %9)
  call void @_zval_ptr_dtor(%11* %10)
  %74 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %74) #2
  %75 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %75) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_property_stringl_ex(%11* %0, i8* %1, i64 %2, i8* %3, i64 %4) #0 {
  %6 = alloca %11*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %11, align 8
  %12 = alloca %11, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %10*, align 8
  %15 = alloca %11*, align 8
  %16 = alloca %10*, align 8
  store %11* %0, %11** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  store i64 %4, i64* %10, align 8
  %17 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %17) #2
  %18 = bitcast %11* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %18) #2
  br label %19

19:                                               ; preds = %5
  br label %20

20:                                               ; preds = %19
  %21 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  store %11* %11, %11** %13, align 8
  %22 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #2
  %23 = load i8*, i8** %9, align 8
  %24 = load i64, i64* %10, align 8
  %25 = call %10* @134(i8* %23, i64 %24, i32 0)
  store %10* %25, %10** %14, align 8
  %26 = load %10*, %10** %14, align 8
  %27 = load %11*, %11** %13, align 8
  %28 = getelementptr inbounds %11, %11* %27, i32 0, i32 0
  %29 = bitcast %12* %28 to %10**
  store %10* %26, %10** %29, align 8
  %30 = load %11*, %11** %13, align 8
  %31 = getelementptr inbounds %11, %11* %30, i32 0, i32 1
  %32 = bitcast %13* %31 to i32*
  store i32 5126, i32* %32, align 8
  %33 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #2
  %34 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  br label %35

35:                                               ; preds = %20
  br label %36

36:                                               ; preds = %35
  br label %37

37:                                               ; preds = %36
  br label %38

38:                                               ; preds = %37
  br label %39

39:                                               ; preds = %38
  br label %40

40:                                               ; preds = %39
  %41 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #2
  store %11* %12, %11** %15, align 8
  %42 = bitcast %10** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #2
  %43 = load i8*, i8** %7, align 8
  %44 = load i64, i64* %8, align 8
  %45 = call %10* @134(i8* %43, i64 %44, i32 0)
  store %10* %45, %10** %16, align 8
  %46 = load %10*, %10** %16, align 8
  %47 = load %11*, %11** %15, align 8
  %48 = getelementptr inbounds %11, %11* %47, i32 0, i32 0
  %49 = bitcast %12* %48 to %10**
  store %10* %46, %10** %49, align 8
  %50 = load %11*, %11** %15, align 8
  %51 = getelementptr inbounds %11, %11* %50, i32 0, i32 1
  %52 = bitcast %13* %51 to i32*
  store i32 5126, i32* %52, align 8
  %53 = bitcast %10** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #2
  %54 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #2
  br label %55

55:                                               ; preds = %40
  br label %56

56:                                               ; preds = %55
  br label %57

57:                                               ; preds = %56
  br label %58

58:                                               ; preds = %57
  %59 = load %11*, %11** %6, align 8
  %60 = getelementptr inbounds %11, %11* %59, i32 0, i32 0
  %61 = bitcast %12* %60 to %20**
  %62 = load %20*, %20** %61, align 8
  %63 = getelementptr inbounds %20, %20* %62, i32 0, i32 3
  %64 = load %21*, %21** %63, align 8
  %65 = getelementptr inbounds %21, %21* %64, i32 0, i32 5
  %66 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %65, align 8
  %67 = load %11*, %11** %6, align 8
  call void %66(%11* %67, %11* %12, %11* %11, i8** null)
  call void @_zval_ptr_dtor(%11* %11)
  call void @_zval_ptr_dtor(%11* %12)
  %68 = bitcast %11* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %68) #2
  %69 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %69) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @add_property_zval_ex(%11* %0, i8* %1, i64 %2, %11* %3) #0 {
  %5 = alloca %11*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11*, align 8
  %11 = alloca %10*, align 8
  store %11* %0, %11** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store %11* %3, %11** %8, align 8
  %12 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #2
  br label %13

13:                                               ; preds = %4
  br label %14

14:                                               ; preds = %13
  %15 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  store %11* %9, %11** %10, align 8
  %16 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load i8*, i8** %6, align 8
  %18 = load i64, i64* %7, align 8
  %19 = call %10* @134(i8* %17, i64 %18, i32 0)
  store %10* %19, %10** %11, align 8
  %20 = load %10*, %10** %11, align 8
  %21 = load %11*, %11** %10, align 8
  %22 = getelementptr inbounds %11, %11* %21, i32 0, i32 0
  %23 = bitcast %12* %22 to %10**
  store %10* %20, %10** %23, align 8
  %24 = load %11*, %11** %10, align 8
  %25 = getelementptr inbounds %11, %11* %24, i32 0, i32 1
  %26 = bitcast %13* %25 to i32*
  store i32 5126, i32* %26, align 8
  %27 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #2
  %28 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #2
  br label %29

29:                                               ; preds = %14
  br label %30

30:                                               ; preds = %29
  br label %31

31:                                               ; preds = %30
  br label %32

32:                                               ; preds = %31
  %33 = load %11*, %11** %5, align 8
  %34 = getelementptr inbounds %11, %11* %33, i32 0, i32 0
  %35 = bitcast %12* %34 to %20**
  %36 = load %20*, %20** %35, align 8
  %37 = getelementptr inbounds %20, %20* %36, i32 0, i32 3
  %38 = load %21*, %21** %37, align 8
  %39 = getelementptr inbounds %21, %21* %38, i32 0, i32 5
  %40 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %39, align 8
  %41 = load %11*, %11** %5, align 8
  %42 = load %11*, %11** %8, align 8
  call void %40(%11* %41, %11* %9, %11* %42, i8** null)
  call void @_zval_ptr_dtor(%11* %9)
  %43 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %43) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_startup_module_ex(%32* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %10*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %33*, align 8
  %8 = alloca %32*, align 8
  store %32* %0, %32** %3, align 8
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  %10 = bitcast %10** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load %32*, %32** %3, align 8
  %12 = getelementptr inbounds %32, %32* %11, i32 0, i32 19
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  store i32 1, i32* %6, align 4
  br label %131

16:                                               ; preds = %1
  %17 = load %32*, %32** %3, align 8
  %18 = getelementptr inbounds %32, %32* %17, i32 0, i32 19
  store i32 1, i32* %18, align 8
  %19 = load %32*, %32** %3, align 8
  %20 = getelementptr inbounds %32, %32* %19, i32 0, i32 5
  %21 = load %33*, %33** %20, align 8
  %22 = icmp ne %33* %21, null
  br i1 %22, label %23, label %88

23:                                               ; preds = %16
  %24 = bitcast %33** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #2
  %25 = load %32*, %32** %3, align 8
  %26 = getelementptr inbounds %32, %32* %25, i32 0, i32 5
  %27 = load %33*, %33** %26, align 8
  store %33* %27, %33** %7, align 8
  br label %28

28:                                               ; preds = %80, %23
  %29 = load %33*, %33** %7, align 8
  %30 = getelementptr inbounds %33, %33* %29, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %83

33:                                               ; preds = %28
  %34 = load %33*, %33** %7, align 8
  %35 = getelementptr inbounds %33, %33* %34, i32 0, i32 3
  %36 = load i8, i8* %35, align 8
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %80

39:                                               ; preds = %33
  %40 = bitcast %32** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #2
  %41 = load %33*, %33** %7, align 8
  %42 = getelementptr inbounds %33, %33* %41, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = call i64 @strlen(i8* %43) #20
  store i64 %44, i64* %4, align 8
  %45 = load i64, i64* %4, align 8
  %46 = call %10* @138(i64 %45, i32 0)
  store %10* %46, %10** %5, align 8
  %47 = load %10*, %10** %5, align 8
  %48 = getelementptr inbounds %10, %10* %47, i32 0, i32 3
  %49 = getelementptr inbounds [1 x i8], [1 x i8]* %48, i32 0, i32 0
  %50 = load %33*, %33** %7, align 8
  %51 = getelementptr inbounds %33, %33* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = load i64, i64* %4, align 8
  %54 = call i8* @zend_str_tolower_copy(i8* %49, i8* %52, i64 %53)
  %55 = load %10*, %10** %5, align 8
  %56 = call i8* @139(%5* @module_registry, %10* %55)
  %57 = bitcast i8* %56 to %32*
  store %32* %57, %32** %8, align 8
  %58 = icmp eq %32* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %39
  %60 = load %32*, %32** %8, align 8
  %61 = getelementptr inbounds %32, %32* %60, i32 0, i32 19
  %62 = load i32, i32* %61, align 8
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %59, %39
  %65 = load %10*, %10** %5, align 8
  call void @140(%10* %65)
  %66 = load %32*, %32** %3, align 8
  %67 = getelementptr inbounds %32, %32* %66, i32 0, i32 6
  %68 = load i8*, i8** %67, align 8
  %69 = load %33*, %33** %7, align 8
  %70 = getelementptr inbounds %33, %33* %69, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void (i32, i8*, ...) @zend_error(i32 32, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @33, i32 0, i32 0), i8* %68, i8* %71)
  %72 = load %32*, %32** %3, align 8
  %73 = getelementptr inbounds %32, %32* %72, i32 0, i32 19
  store i32 0, i32* %73, align 8
  store i32 -1, i32* %2, align 4
  store i32 1, i32* %6, align 4
  br label %76

74:                                               ; preds = %59
  %75 = load %10*, %10** %5, align 8
  call void @140(%10* %75)
  store i32 0, i32* %6, align 4
  br label %76

76:                                               ; preds = %74, %64
  %77 = bitcast %32** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #2
  %78 = load i32, i32* %6, align 4
  switch i32 %78, label %84 [
    i32 0, label %79
  ]

79:                                               ; preds = %76
  br label %80

80:                                               ; preds = %79, %33
  %81 = load %33*, %33** %7, align 8
  %82 = getelementptr inbounds %33, %33* %81, i32 1
  store %33* %82, %33** %7, align 8
  br label %28

83:                                               ; preds = %28
  store i32 0, i32* %6, align 4
  br label %84

84:                                               ; preds = %83, %76
  %85 = bitcast %33** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #2
  %86 = load i32, i32* %6, align 4
  switch i32 %86, label %131 [
    i32 0, label %87
  ]

87:                                               ; preds = %84
  br label %88

88:                                               ; preds = %87, %16
  %89 = load %32*, %32** %3, align 8
  %90 = getelementptr inbounds %32, %32* %89, i32 0, i32 14
  %91 = load i64, i64* %90, align 8
  %92 = icmp ne i64 %91, 0
  br i1 %92, label %93, label %106

93:                                               ; preds = %88
  %94 = load %32*, %32** %3, align 8
  %95 = getelementptr inbounds %32, %32* %94, i32 0, i32 16
  %96 = load void (i8*)*, void (i8*)** %95, align 8
  %97 = icmp ne void (i8*)* %96, null
  br i1 %97, label %98, label %105

98:                                               ; preds = %93
  %99 = load %32*, %32** %3, align 8
  %100 = getelementptr inbounds %32, %32* %99, i32 0, i32 16
  %101 = load void (i8*)*, void (i8*)** %100, align 8
  %102 = load %32*, %32** %3, align 8
  %103 = getelementptr inbounds %32, %32* %102, i32 0, i32 15
  %104 = load i8*, i8** %103, align 8
  call void %101(i8* %104)
  br label %105

105:                                              ; preds = %98, %93
  br label %106

106:                                              ; preds = %105, %88
  %107 = load %32*, %32** %3, align 8
  %108 = getelementptr inbounds %32, %32* %107, i32 0, i32 8
  %109 = load i32 (i32, i32)*, i32 (i32, i32)** %108, align 8
  %110 = icmp ne i32 (i32, i32)* %109, null
  br i1 %110, label %111, label %130

111:                                              ; preds = %106
  %112 = load %32*, %32** %3, align 8
  store %32* %112, %32** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 47), align 8
  %113 = load %32*, %32** %3, align 8
  %114 = getelementptr inbounds %32, %32* %113, i32 0, i32 8
  %115 = load i32 (i32, i32)*, i32 (i32, i32)** %114, align 8
  %116 = load %32*, %32** %3, align 8
  %117 = getelementptr inbounds %32, %32* %116, i32 0, i32 20
  %118 = load i8, i8* %117, align 4
  %119 = zext i8 %118 to i32
  %120 = load %32*, %32** %3, align 8
  %121 = getelementptr inbounds %32, %32* %120, i32 0, i32 22
  %122 = load i32, i32* %121, align 8
  %123 = call i32 %115(i32 %119, i32 %122)
  %124 = icmp eq i32 %123, -1
  br i1 %124, label %125, label %129

125:                                              ; preds = %111
  %126 = load %32*, %32** %3, align 8
  %127 = getelementptr inbounds %32, %32* %126, i32 0, i32 6
  %128 = load i8*, i8** %127, align 8
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @34, i32 0, i32 0), i8* %128) #18
  unreachable

129:                                              ; preds = %111
  store %32* null, %32** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 47), align 8
  br label %130

130:                                              ; preds = %129, %106
  store i32 0, i32* %2, align 4
  store i32 1, i32* %6, align 4
  br label %131

131:                                              ; preds = %130, %84, %15
  %132 = bitcast %10** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #2
  %133 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #2
  %134 = load i32, i32* %2, align 4
  ret i32 %134
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %10* @138(i64 %0, i32 %1) #3 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %10*, align 8
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %10** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #2
  %7 = load i32, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = load i64, i64* %3, align 8
  %11 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %10
  %12 = add i64 %11, 1
  %13 = add i64 %12, 8
  %14 = sub i64 %13, 1
  %15 = and i64 %14, -8
  %16 = call noalias i8* @__zend_malloc(i64 %15) #19
  br label %25

17:                                               ; preds = %2
  %18 = load i64, i64* %3, align 8
  %19 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %18
  %20 = add i64 %19, 1
  %21 = add i64 %20, 8
  %22 = sub i64 %21, 1
  %23 = and i64 %22, -8
  %24 = call noalias i8* @_emalloc(i64 %23) #19
  br label %25

25:                                               ; preds = %17, %9
  %26 = phi i8* [ %16, %9 ], [ %24, %17 ]
  %27 = bitcast i8* %26 to %10*
  store %10* %27, %10** %5, align 8
  %28 = load %10*, %10** %5, align 8
  %29 = getelementptr inbounds %10, %10* %28, i32 0, i32 0
  %30 = getelementptr inbounds %6, %6* %29, i32 0, i32 0
  store i32 1, i32* %30, align 8
  %31 = load i32, i32* %4, align 4
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i32 1, i32 0
  %35 = shl i32 %34, 8
  %36 = or i32 6, %35
  %37 = load %10*, %10** %5, align 8
  %38 = getelementptr inbounds %10, %10* %37, i32 0, i32 0
  %39 = getelementptr inbounds %6, %6* %38, i32 0, i32 1
  %40 = bitcast %7* %39 to i32*
  store i32 %36, i32* %40, align 4
  %41 = load %10*, %10** %5, align 8
  call void @180(%10* %41)
  %42 = load i64, i64* %3, align 8
  %43 = load %10*, %10** %5, align 8
  %44 = getelementptr inbounds %10, %10* %43, i32 0, i32 2
  store i64 %42, i64* %44, align 8
  %45 = load %10*, %10** %5, align 8
  %46 = bitcast %10** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #2
  ret %10* %45
}

declare dso_local i8* @zend_str_tolower_copy(i8*, i8*, i64) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @139(%5* %0, %10* %1) #3 {
  %3 = alloca i8*, align 8
  %4 = alloca %5*, align 8
  %5 = alloca %10*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca i32, align 4
  store %5* %0, %5** %4, align 8
  store %10* %1, %10** %5, align 8
  %8 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #2
  %9 = load %5*, %5** %4, align 8
  %10 = load %10*, %10** %5, align 8
  %11 = call %11* @zend_hash_find(%5* %9, %10* %10)
  store %11* %11, %11** %6, align 8
  %12 = load %11*, %11** %6, align 8
  %13 = icmp ne %11* %12, null
  br i1 %13, label %14, label %34

14:                                               ; preds = %2
  br label %15

15:                                               ; preds = %14
  %16 = load %11*, %11** %6, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = icmp ne i8* %19, null
  %21 = xor i1 %20, true
  %22 = zext i1 %21 to i32
  %23 = sext i32 %22 to i64
  %24 = call i64 @llvm.expect.i64(i64 %23, i64 0)
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %15
  unreachable

27:                                               ; preds = %15
  br label %28

28:                                               ; preds = %27
  br label %29

29:                                               ; preds = %28
  %30 = load %11*, %11** %6, align 8
  %31 = getelementptr inbounds %11, %11* %30, i32 0, i32 0
  %32 = bitcast %12* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  store i8* %33, i8** %3, align 8
  store i32 1, i32* %7, align 4
  br label %35

34:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  store i32 1, i32* %7, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #2
  %37 = load i8*, i8** %3, align 8
  ret i8* %37
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @140(%10* %0) #3 {
  %2 = alloca %10*, align 8
  store %10* %0, %10** %2, align 8
  %3 = load %10*, %10** %2, align 8
  %4 = getelementptr inbounds %10, %10* %3, i32 0, i32 0
  %5 = getelementptr inbounds %6, %6* %4, i32 0, i32 1
  %6 = bitcast %7* %5 to %63*
  %7 = getelementptr inbounds %63, %63* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %43, label %12

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12
  %14 = load %10*, %10** %2, align 8
  %15 = getelementptr inbounds %10, %10* %14, i32 0, i32 0
  %16 = getelementptr inbounds %6, %6* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ule i32 %17, 1
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = call i64 @llvm.expect.i64(i64 %21, i64 0)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  unreachable

25:                                               ; preds = %13
  br label %26

26:                                               ; preds = %25
  %27 = load %10*, %10** %2, align 8
  %28 = getelementptr inbounds %10, %10* %27, i32 0, i32 0
  %29 = getelementptr inbounds %6, %6* %28, i32 0, i32 1
  %30 = bitcast %7* %29 to %63*
  %31 = getelementptr inbounds %63, %63* %30, i32 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %26
  %37 = load %10*, %10** %2, align 8
  %38 = bitcast %10* %37 to i8*
  call void @free(i8* %38) #2
  br label %42

39:                                               ; preds = %26
  %40 = load %10*, %10** %2, align 8
  %41 = bitcast %10* %40 to i8*
  call void @_efree(i8* %41)
  br label %42

42:                                               ; preds = %39, %36
  br label %43

43:                                               ; preds = %42, %1
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_collect_module_handlers() #0 {
  %1 = alloca %32*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %5*, align 8
  %8 = alloca %9*, align 8
  %9 = alloca %9*, align 8
  %10 = alloca %11*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %5*, align 8
  %13 = alloca %9*, align 8
  %14 = alloca %9*, align 8
  %15 = alloca %11*, align 8
  %16 = alloca %5*, align 8
  %17 = alloca %9*, align 8
  %18 = alloca %9*, align 8
  %19 = alloca %11*, align 8
  %20 = alloca %5*, align 8
  %21 = alloca %9*, align 8
  %22 = alloca %9*, align 8
  %23 = alloca %11*, align 8
  %24 = bitcast %32** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #2
  %25 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #2
  store i32 0, i32* %2, align 4
  %26 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #2
  store i32 0, i32* %3, align 4
  %27 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #2
  store i32 0, i32* %4, align 4
  %28 = bitcast %16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #2
  %29 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #2
  store i32 0, i32* %6, align 4
  br label %30

30:                                               ; preds = %0
  %31 = bitcast %5** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #2
  store %5* @module_registry, %5** %7, align 8
  %32 = bitcast %9** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #2
  %33 = load %5*, %5** %7, align 8
  %34 = getelementptr inbounds %5, %5* %33, i32 0, i32 3
  %35 = load %9*, %9** %34, align 8
  store %9* %35, %9** %8, align 8
  %36 = bitcast %9** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #2
  %37 = load %9*, %9** %8, align 8
  %38 = load %5*, %5** %7, align 8
  %39 = getelementptr inbounds %5, %5* %38, i32 0, i32 4
  %40 = load i32, i32* %39, align 8
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %9, %9* %37, i64 %41
  store %9* %42, %9** %9, align 8
  br label %43

43:                                               ; preds = %96, %30
  %44 = load %9*, %9** %8, align 8
  %45 = load %9*, %9** %9, align 8
  %46 = icmp ne %9* %44, %45
  br i1 %46, label %47, label %99

47:                                               ; preds = %43
  %48 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #2
  %49 = load %9*, %9** %8, align 8
  %50 = getelementptr inbounds %9, %9* %49, i32 0, i32 0
  store %11* %50, %11** %10, align 8
  %51 = load %11*, %11** %10, align 8
  %52 = call zeroext i8 @125(%11* %51)
  %53 = zext i8 %52 to i32
  %54 = icmp eq i32 %53, 0
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %47
  store i32 6, i32* %11, align 4
  br label %92

62:                                               ; preds = %47
  %63 = load %11*, %11** %10, align 8
  %64 = getelementptr inbounds %11, %11* %63, i32 0, i32 0
  %65 = bitcast %12* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast i8* %66 to %32*
  store %32* %67, %32** %1, align 8
  %68 = load %32*, %32** %1, align 8
  %69 = getelementptr inbounds %32, %32* %68, i32 0, i32 10
  %70 = load i32 (i32, i32)*, i32 (i32, i32)** %69, align 8
  %71 = icmp ne i32 (i32, i32)* %70, null
  br i1 %71, label %72, label %75

72:                                               ; preds = %62
  %73 = load i32, i32* %2, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %2, align 4
  br label %75

75:                                               ; preds = %72, %62
  %76 = load %32*, %32** %1, align 8
  %77 = getelementptr inbounds %32, %32* %76, i32 0, i32 11
  %78 = load i32 (i32, i32)*, i32 (i32, i32)** %77, align 8
  %79 = icmp ne i32 (i32, i32)* %78, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = load i32, i32* %3, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %3, align 4
  br label %83

83:                                               ; preds = %80, %75
  %84 = load %32*, %32** %1, align 8
  %85 = getelementptr inbounds %32, %32* %84, i32 0, i32 18
  %86 = load i32 ()*, i32 ()** %85, align 8
  %87 = icmp ne i32 ()* %86, null
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = load i32, i32* %4, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %4, align 4
  br label %91

91:                                               ; preds = %88, %83
  store i32 0, i32* %11, align 4
  br label %92

92:                                               ; preds = %91, %61
  %93 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #2
  %94 = load i32, i32* %11, align 4
  switch i32 %94, label %382 [
    i32 0, label %95
    i32 6, label %96
  ]

95:                                               ; preds = %92
  br label %96

96:                                               ; preds = %95, %92
  %97 = load %9*, %9** %8, align 8
  %98 = getelementptr inbounds %9, %9* %97, i32 1
  store %9* %98, %9** %8, align 8
  br label %43

99:                                               ; preds = %43
  %100 = bitcast %9** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #2
  %101 = bitcast %9** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #2
  %102 = bitcast %5** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #2
  br label %103

103:                                              ; preds = %99
  br label %104

104:                                              ; preds = %103
  %105 = load i32, i32* %2, align 4
  %106 = add nsw i32 %105, 1
  %107 = load i32, i32* %3, align 4
  %108 = add nsw i32 %106, %107
  %109 = add nsw i32 %108, 1
  %110 = load i32, i32* %4, align 4
  %111 = add nsw i32 %109, %110
  %112 = add nsw i32 %111, 1
  %113 = sext i32 %112 to i64
  %114 = mul i64 8, %113
  %115 = call noalias i8* @malloc(i64 %114) #2
  %116 = bitcast i8* %115 to %32**
  store %32** %116, %32*** @35, align 8
  %117 = load %32**, %32*** @35, align 8
  %118 = load i32, i32* %2, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %32*, %32** %117, i64 %119
  store %32* null, %32** %120, align 8
  %121 = load %32**, %32*** @35, align 8
  %122 = load i32, i32* %2, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %32*, %32** %121, i64 %123
  %125 = getelementptr inbounds %32*, %32** %124, i64 1
  store %32** %125, %32*** @36, align 8
  %126 = load %32**, %32*** @36, align 8
  %127 = load i32, i32* %3, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %32*, %32** %126, i64 %128
  store %32* null, %32** %129, align 8
  %130 = load %32**, %32*** @36, align 8
  %131 = load i32, i32* %3, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %32*, %32** %130, i64 %132
  %134 = getelementptr inbounds %32*, %32** %133, i64 1
  store %32** %134, %32*** @37, align 8
  %135 = load %32**, %32*** @37, align 8
  %136 = load i32, i32* %4, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %32*, %32** %135, i64 %137
  store %32* null, %32** %138, align 8
  store i32 0, i32* %2, align 4
  br label %139

139:                                              ; preds = %104
  %140 = bitcast %5** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %140) #2
  store %5* @module_registry, %5** %12, align 8
  %141 = bitcast %9** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %141) #2
  %142 = load %5*, %5** %12, align 8
  %143 = getelementptr inbounds %5, %5* %142, i32 0, i32 3
  %144 = load %9*, %9** %143, align 8
  store %9* %144, %9** %13, align 8
  %145 = bitcast %9** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %145) #2
  %146 = load %9*, %9** %13, align 8
  %147 = load %5*, %5** %12, align 8
  %148 = getelementptr inbounds %5, %5* %147, i32 0, i32 4
  %149 = load i32, i32* %148, align 8
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %9, %9* %146, i64 %150
  store %9* %151, %9** %14, align 8
  br label %152

152:                                              ; preds = %217, %139
  %153 = load %9*, %9** %13, align 8
  %154 = load %9*, %9** %14, align 8
  %155 = icmp ne %9* %153, %154
  br i1 %155, label %156, label %220

156:                                              ; preds = %152
  %157 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %157) #2
  %158 = load %9*, %9** %13, align 8
  %159 = getelementptr inbounds %9, %9* %158, i32 0, i32 0
  store %11* %159, %11** %15, align 8
  %160 = load %11*, %11** %15, align 8
  %161 = call zeroext i8 @125(%11* %160)
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %162, 0
  %164 = xor i1 %163, true
  %165 = xor i1 %164, true
  %166 = zext i1 %165 to i32
  %167 = sext i32 %166 to i64
  %168 = call i64 @llvm.expect.i64(i64 %167, i64 0)
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %156
  store i32 11, i32* %11, align 4
  br label %213

171:                                              ; preds = %156
  %172 = load %11*, %11** %15, align 8
  %173 = getelementptr inbounds %11, %11* %172, i32 0, i32 0
  %174 = bitcast %12* %173 to i8**
  %175 = load i8*, i8** %174, align 8
  %176 = bitcast i8* %175 to %32*
  store %32* %176, %32** %1, align 8
  %177 = load %32*, %32** %1, align 8
  %178 = getelementptr inbounds %32, %32* %177, i32 0, i32 10
  %179 = load i32 (i32, i32)*, i32 (i32, i32)** %178, align 8
  %180 = icmp ne i32 (i32, i32)* %179, null
  br i1 %180, label %181, label %188

181:                                              ; preds = %171
  %182 = load %32*, %32** %1, align 8
  %183 = load %32**, %32*** @35, align 8
  %184 = load i32, i32* %2, align 4
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %2, align 4
  %186 = sext i32 %184 to i64
  %187 = getelementptr inbounds %32*, %32** %183, i64 %186
  store %32* %182, %32** %187, align 8
  br label %188

188:                                              ; preds = %181, %171
  %189 = load %32*, %32** %1, align 8
  %190 = getelementptr inbounds %32, %32* %189, i32 0, i32 11
  %191 = load i32 (i32, i32)*, i32 (i32, i32)** %190, align 8
  %192 = icmp ne i32 (i32, i32)* %191, null
  br i1 %192, label %193, label %200

193:                                              ; preds = %188
  %194 = load %32*, %32** %1, align 8
  %195 = load %32**, %32*** @36, align 8
  %196 = load i32, i32* %3, align 4
  %197 = add nsw i32 %196, -1
  store i32 %197, i32* %3, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds %32*, %32** %195, i64 %198
  store %32* %194, %32** %199, align 8
  br label %200

200:                                              ; preds = %193, %188
  %201 = load %32*, %32** %1, align 8
  %202 = getelementptr inbounds %32, %32* %201, i32 0, i32 18
  %203 = load i32 ()*, i32 ()** %202, align 8
  %204 = icmp ne i32 ()* %203, null
  br i1 %204, label %205, label %212

205:                                              ; preds = %200
  %206 = load %32*, %32** %1, align 8
  %207 = load %32**, %32*** @37, align 8
  %208 = load i32, i32* %4, align 4
  %209 = add nsw i32 %208, -1
  store i32 %209, i32* %4, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %32*, %32** %207, i64 %210
  store %32* %206, %32** %211, align 8
  br label %212

212:                                              ; preds = %205, %200
  store i32 0, i32* %11, align 4
  br label %213

213:                                              ; preds = %212, %170
  %214 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %214) #2
  %215 = load i32, i32* %11, align 4
  switch i32 %215, label %382 [
    i32 0, label %216
    i32 11, label %217
  ]

216:                                              ; preds = %213
  br label %217

217:                                              ; preds = %216, %213
  %218 = load %9*, %9** %13, align 8
  %219 = getelementptr inbounds %9, %9* %218, i32 1
  store %9* %219, %9** %13, align 8
  br label %152

220:                                              ; preds = %152
  %221 = bitcast %9** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #2
  %222 = bitcast %9** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #2
  %223 = bitcast %5** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #2
  br label %224

224:                                              ; preds = %220
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225
  %227 = bitcast %5** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %227) #2
  %228 = load %5*, %5** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 6), align 8
  store %5* %228, %5** %16, align 8
  %229 = bitcast %9** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %229) #2
  %230 = load %5*, %5** %16, align 8
  %231 = getelementptr inbounds %5, %5* %230, i32 0, i32 3
  %232 = load %9*, %9** %231, align 8
  store %9* %232, %9** %17, align 8
  %233 = bitcast %9** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %233) #2
  %234 = load %9*, %9** %17, align 8
  %235 = load %5*, %5** %16, align 8
  %236 = getelementptr inbounds %5, %5* %235, i32 0, i32 4
  %237 = load i32, i32* %236, align 8
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %9, %9* %234, i64 %238
  store %9* %239, %9** %18, align 8
  br label %240

240:                                              ; preds = %283, %226
  %241 = load %9*, %9** %17, align 8
  %242 = load %9*, %9** %18, align 8
  %243 = icmp ne %9* %241, %242
  br i1 %243, label %244, label %286

244:                                              ; preds = %240
  %245 = bitcast %11** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %245) #2
  %246 = load %9*, %9** %17, align 8
  %247 = getelementptr inbounds %9, %9* %246, i32 0, i32 0
  store %11* %247, %11** %19, align 8
  %248 = load %11*, %11** %19, align 8
  %249 = call zeroext i8 @125(%11* %248)
  %250 = zext i8 %249 to i32
  %251 = icmp eq i32 %250, 0
  %252 = xor i1 %251, true
  %253 = xor i1 %252, true
  %254 = zext i1 %253 to i32
  %255 = sext i32 %254 to i64
  %256 = call i64 @llvm.expect.i64(i64 %255, i64 0)
  %257 = icmp ne i64 %256, 0
  br i1 %257, label %258, label %259

258:                                              ; preds = %244
  store i32 16, i32* %11, align 4
  br label %279

259:                                              ; preds = %244
  %260 = load %11*, %11** %19, align 8
  %261 = getelementptr inbounds %11, %11* %260, i32 0, i32 0
  %262 = bitcast %12* %261 to i8**
  %263 = load i8*, i8** %262, align 8
  %264 = bitcast i8* %263 to %16*
  store %16* %264, %16** %5, align 8
  %265 = load %16*, %16** %5, align 8
  %266 = getelementptr inbounds %16, %16* %265, i32 0, i32 0
  %267 = load i8, i8* %266, align 8
  %268 = sext i8 %267 to i32
  %269 = icmp eq i32 %268, 1
  br i1 %269, label %270, label %278

270:                                              ; preds = %259
  %271 = load %16*, %16** %5, align 8
  %272 = getelementptr inbounds %16, %16* %271, i32 0, i32 6
  %273 = load i32, i32* %272, align 4
  %274 = icmp sgt i32 %273, 0
  br i1 %274, label %275, label %278

275:                                              ; preds = %270
  %276 = load i32, i32* %6, align 4
  %277 = add nsw i32 %276, 1
  store i32 %277, i32* %6, align 4
  br label %278

278:                                              ; preds = %275, %270, %259
  store i32 0, i32* %11, align 4
  br label %279

279:                                              ; preds = %278, %258
  %280 = bitcast %11** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %280) #2
  %281 = load i32, i32* %11, align 4
  switch i32 %281, label %382 [
    i32 0, label %282
    i32 16, label %283
  ]

282:                                              ; preds = %279
  br label %283

283:                                              ; preds = %282, %279
  %284 = load %9*, %9** %17, align 8
  %285 = getelementptr inbounds %9, %9* %284, i32 1
  store %9* %285, %9** %17, align 8
  br label %240

286:                                              ; preds = %240
  %287 = bitcast %9** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %287) #2
  %288 = bitcast %9** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %288) #2
  %289 = bitcast %5** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %289) #2
  br label %290

290:                                              ; preds = %286
  br label %291

291:                                              ; preds = %290
  %292 = load i32, i32* %6, align 4
  %293 = add nsw i32 %292, 1
  %294 = sext i32 %293 to i64
  %295 = mul i64 8, %294
  %296 = call noalias i8* @malloc(i64 %295) #2
  %297 = bitcast i8* %296 to %16**
  store %16** %297, %16*** @38, align 8
  %298 = load %16**, %16*** @38, align 8
  %299 = load i32, i32* %6, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds %16*, %16** %298, i64 %300
  store %16* null, %16** %301, align 8
  %302 = load i32, i32* %6, align 4
  %303 = icmp ne i32 %302, 0
  br i1 %303, label %304, label %375

304:                                              ; preds = %291
  br label %305

305:                                              ; preds = %304
  %306 = bitcast %5** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %306) #2
  %307 = load %5*, %5** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 6), align 8
  store %5* %307, %5** %20, align 8
  %308 = bitcast %9** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %308) #2
  %309 = load %5*, %5** %20, align 8
  %310 = getelementptr inbounds %5, %5* %309, i32 0, i32 3
  %311 = load %9*, %9** %310, align 8
  store %9* %311, %9** %21, align 8
  %312 = bitcast %9** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %312) #2
  %313 = load %9*, %9** %21, align 8
  %314 = load %5*, %5** %20, align 8
  %315 = getelementptr inbounds %5, %5* %314, i32 0, i32 4
  %316 = load i32, i32* %315, align 8
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds %9, %9* %313, i64 %317
  store %9* %318, %9** %22, align 8
  br label %319

319:                                              ; preds = %366, %305
  %320 = load %9*, %9** %21, align 8
  %321 = load %9*, %9** %22, align 8
  %322 = icmp ne %9* %320, %321
  br i1 %322, label %323, label %369

323:                                              ; preds = %319
  %324 = bitcast %11** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %324) #2
  %325 = load %9*, %9** %21, align 8
  %326 = getelementptr inbounds %9, %9* %325, i32 0, i32 0
  store %11* %326, %11** %23, align 8
  %327 = load %11*, %11** %23, align 8
  %328 = call zeroext i8 @125(%11* %327)
  %329 = zext i8 %328 to i32
  %330 = icmp eq i32 %329, 0
  %331 = xor i1 %330, true
  %332 = xor i1 %331, true
  %333 = zext i1 %332 to i32
  %334 = sext i32 %333 to i64
  %335 = call i64 @llvm.expect.i64(i64 %334, i64 0)
  %336 = icmp ne i64 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %323
  store i32 21, i32* %11, align 4
  br label %362

338:                                              ; preds = %323
  %339 = load %11*, %11** %23, align 8
  %340 = getelementptr inbounds %11, %11* %339, i32 0, i32 0
  %341 = bitcast %12* %340 to i8**
  %342 = load i8*, i8** %341, align 8
  %343 = bitcast i8* %342 to %16*
  store %16* %343, %16** %5, align 8
  %344 = load %16*, %16** %5, align 8
  %345 = getelementptr inbounds %16, %16* %344, i32 0, i32 0
  %346 = load i8, i8* %345, align 8
  %347 = sext i8 %346 to i32
  %348 = icmp eq i32 %347, 1
  br i1 %348, label %349, label %361

349:                                              ; preds = %338
  %350 = load %16*, %16** %5, align 8
  %351 = getelementptr inbounds %16, %16* %350, i32 0, i32 6
  %352 = load i32, i32* %351, align 4
  %353 = icmp sgt i32 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %349
  %355 = load %16*, %16** %5, align 8
  %356 = load %16**, %16*** @38, align 8
  %357 = load i32, i32* %6, align 4
  %358 = add nsw i32 %357, -1
  store i32 %358, i32* %6, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds %16*, %16** %356, i64 %359
  store %16* %355, %16** %360, align 8
  br label %361

361:                                              ; preds = %354, %349, %338
  store i32 0, i32* %11, align 4
  br label %362

362:                                              ; preds = %361, %337
  %363 = bitcast %11** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %363) #2
  %364 = load i32, i32* %11, align 4
  switch i32 %364, label %382 [
    i32 0, label %365
    i32 21, label %366
  ]

365:                                              ; preds = %362
  br label %366

366:                                              ; preds = %365, %362
  %367 = load %9*, %9** %21, align 8
  %368 = getelementptr inbounds %9, %9* %367, i32 1
  store %9* %368, %9** %21, align 8
  br label %319

369:                                              ; preds = %319
  %370 = bitcast %9** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370) #2
  %371 = bitcast %9** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #2
  %372 = bitcast %5** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %372) #2
  br label %373

373:                                              ; preds = %369
  br label %374

374:                                              ; preds = %373
  br label %375

375:                                              ; preds = %374, %291
  %376 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %376) #2
  %377 = bitcast %16** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %377) #2
  %378 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %378) #2
  %379 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %379) #2
  %380 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %380) #2
  %381 = bitcast %32** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %381) #2
  ret void

382:                                              ; preds = %362, %279, %213, %92
  unreachable
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #10

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_startup_modules() #0 {
  %1 = call i32 @zend_hash_sort_ex(%5* @module_registry, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)* @141, i32 (i8*, i8*)* null, i8 zeroext 0)
  call void @zend_hash_apply(%5* @module_registry, i32 (%11*)* @142)
  ret i32 0
}

declare dso_local i32 @zend_hash_sort_ex(%5*, void (i8*, i64, i64, i32 (i8*, i8*)*, void (i8*, i8*)*)*, i32 (i8*, i8*)*, i8 zeroext) #4

; Function Attrs: nounwind uwtable
define internal void @141(i8* %0, i64 %1, i64 %2, i32 (i8*, i8*)* %3, void (i8*, i8*)* %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32 (i8*, i8*)*, align 8
  %10 = alloca void (i8*, i8*)*, align 8
  %11 = alloca %9*, align 8
  %12 = alloca %9*, align 8
  %13 = alloca %9*, align 8
  %14 = alloca %9, align 8
  %15 = alloca %32*, align 8
  %16 = alloca %32*, align 8
  %17 = alloca %33*, align 8
  %18 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  store i64 %2, i64* %8, align 8
  store i32 (i8*, i8*)* %3, i32 (i8*, i8*)** %9, align 8
  store void (i8*, i8*)* %4, void (i8*, i8*)** %10, align 8
  %19 = bitcast %9** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  %20 = load i8*, i8** %6, align 8
  %21 = bitcast i8* %20 to %9*
  store %9* %21, %9** %11, align 8
  %22 = bitcast %9** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #2
  %23 = bitcast %9** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #2
  %24 = load %9*, %9** %11, align 8
  %25 = load i64, i64* %7, align 8
  %26 = getelementptr inbounds %9, %9* %24, i64 %25
  store %9* %26, %9** %13, align 8
  %27 = bitcast %9* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %27) #2
  %28 = bitcast %32** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #2
  %29 = bitcast %32** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #2
  br label %30

30:                                               ; preds = %118, %5
  %31 = load %9*, %9** %11, align 8
  %32 = load %9*, %9** %13, align 8
  %33 = icmp ult %9* %31, %32
  br i1 %33, label %34, label %121

34:                                               ; preds = %30
  br label %35

35:                                               ; preds = %114, %34
  %36 = load %9*, %9** %11, align 8
  %37 = getelementptr inbounds %9, %9* %36, i32 0, i32 0
  %38 = getelementptr inbounds %11, %11* %37, i32 0, i32 0
  %39 = bitcast %12* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast i8* %40 to %32*
  store %32* %41, %32** %15, align 8
  %42 = load %32*, %32** %15, align 8
  %43 = getelementptr inbounds %32, %32* %42, i32 0, i32 19
  %44 = load i32, i32* %43, align 8
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %118, label %46

46:                                               ; preds = %35
  %47 = load %32*, %32** %15, align 8
  %48 = getelementptr inbounds %32, %32* %47, i32 0, i32 5
  %49 = load %33*, %33** %48, align 8
  %50 = icmp ne %33* %49, null
  br i1 %50, label %51, label %118

51:                                               ; preds = %46
  %52 = bitcast %33** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #2
  %53 = load %32*, %32** %15, align 8
  %54 = getelementptr inbounds %32, %32* %53, i32 0, i32 5
  %55 = load %33*, %33** %54, align 8
  store %33* %55, %33** %17, align 8
  br label %56

56:                                               ; preds = %110, %51
  %57 = load %33*, %33** %17, align 8
  %58 = getelementptr inbounds %33, %33* %57, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp ne i8* %59, null
  br i1 %60, label %61, label %113

61:                                               ; preds = %56
  %62 = load %33*, %33** %17, align 8
  %63 = getelementptr inbounds %33, %33* %62, i32 0, i32 3
  %64 = load i8, i8* %63, align 8
  %65 = zext i8 %64 to i32
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load %33*, %33** %17, align 8
  %69 = getelementptr inbounds %33, %33* %68, i32 0, i32 3
  %70 = load i8, i8* %69, align 8
  %71 = zext i8 %70 to i32
  %72 = icmp eq i32 %71, 3
  br i1 %72, label %73, label %110

73:                                               ; preds = %67, %61
  %74 = load %9*, %9** %11, align 8
  %75 = getelementptr inbounds %9, %9* %74, i64 1
  store %9* %75, %9** %12, align 8
  br label %76

76:                                               ; preds = %106, %73
  %77 = load %9*, %9** %12, align 8
  %78 = load %9*, %9** %13, align 8
  %79 = icmp ult %9* %77, %78
  br i1 %79, label %80, label %109

80:                                               ; preds = %76
  %81 = load %9*, %9** %12, align 8
  %82 = getelementptr inbounds %9, %9* %81, i32 0, i32 0
  %83 = getelementptr inbounds %11, %11* %82, i32 0, i32 0
  %84 = bitcast %12* %83 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast i8* %85 to %32*
  store %32* %86, %32** %16, align 8
  %87 = load %33*, %33** %17, align 8
  %88 = getelementptr inbounds %33, %33* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = load %32*, %32** %16, align 8
  %91 = getelementptr inbounds %32, %32* %90, i32 0, i32 6
  %92 = load i8*, i8** %91, align 8
  %93 = call i32 @strcasecmp(i8* %89, i8* %92) #20
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %106

95:                                               ; preds = %80
  %96 = load %9*, %9** %11, align 8
  %97 = bitcast %9* %14 to i8*
  %98 = bitcast %9* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 32, i1 false)
  %99 = load %9*, %9** %11, align 8
  %100 = load %9*, %9** %12, align 8
  %101 = bitcast %9* %99 to i8*
  %102 = bitcast %9* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 32, i1 false)
  %103 = load %9*, %9** %12, align 8
  %104 = bitcast %9* %103 to i8*
  %105 = bitcast %9* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 32, i1 false)
  store i32 4, i32* %18, align 4
  br label %114

106:                                              ; preds = %80
  %107 = load %9*, %9** %12, align 8
  %108 = getelementptr inbounds %9, %9* %107, i32 1
  store %9* %108, %9** %12, align 8
  br label %76

109:                                              ; preds = %76
  br label %110

110:                                              ; preds = %109, %67
  %111 = load %33*, %33** %17, align 8
  %112 = getelementptr inbounds %33, %33* %111, i32 1
  store %33* %112, %33** %17, align 8
  br label %56

113:                                              ; preds = %56
  store i32 0, i32* %18, align 4
  br label %114

114:                                              ; preds = %113, %95
  %115 = bitcast %33** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #2
  %116 = load i32, i32* %18, align 4
  switch i32 %116, label %128 [
    i32 0, label %117
    i32 4, label %35
  ]

117:                                              ; preds = %114
  br label %118

118:                                              ; preds = %117, %46, %35
  %119 = load %9*, %9** %11, align 8
  %120 = getelementptr inbounds %9, %9* %119, i32 1
  store %9* %120, %9** %11, align 8
  br label %30

121:                                              ; preds = %30
  %122 = bitcast %32** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #2
  %123 = bitcast %32** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #2
  %124 = bitcast %9* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %124) #2
  %125 = bitcast %9** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #2
  %126 = bitcast %9** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #2
  %127 = bitcast %9** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #2
  ret void

128:                                              ; preds = %114
  unreachable
}

declare dso_local void @zend_hash_apply(%5*, i32 (%11*)*) #4

; Function Attrs: nounwind uwtable
define internal i32 @142(%11* %0) #0 {
  %2 = alloca %11*, align 8
  %3 = alloca %32*, align 8
  store %11* %0, %11** %2, align 8
  %4 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #2
  %5 = load %11*, %11** %2, align 8
  %6 = getelementptr inbounds %11, %11* %5, i32 0, i32 0
  %7 = bitcast %12* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to %32*
  store %32* %9, %32** %3, align 8
  %10 = load %32*, %32** %3, align 8
  %11 = call i32 @zend_startup_module_ex(%32* %10)
  %12 = icmp eq i32 %11, 0
  %13 = zext i1 %12 to i64
  %14 = select i1 %12, i32 0, i32 1
  %15 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #2
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_destroy_modules() #0 {
  %1 = load %16**, %16*** @38, align 8
  %2 = bitcast %16** %1 to i8*
  call void @free(i8* %2) #2
  %3 = load %32**, %32*** @35, align 8
  %4 = bitcast %32** %3 to i8*
  call void @free(i8* %4) #2
  call void @zend_hash_graceful_reverse_destroy(%5* @module_registry)
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #10

declare dso_local void @zend_hash_graceful_reverse_destroy(%5*) #4

; Function Attrs: nounwind uwtable
define dso_local %32* @zend_register_module_ex(%32* %0) #0 {
  %2 = alloca %32*, align 8
  %3 = alloca %32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %10*, align 8
  %6 = alloca %32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %33*, align 8
  store %32* %0, %32** %3, align 8
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  %10 = bitcast %10** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = bitcast %32** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = load %32*, %32** %3, align 8
  %13 = icmp ne %32* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %1
  store %32* null, %32** %2, align 8
  store i32 1, i32* %7, align 4
  br label %135

15:                                               ; preds = %1
  %16 = load %32*, %32** %3, align 8
  %17 = getelementptr inbounds %32, %32* %16, i32 0, i32 5
  %18 = load %33*, %33** %17, align 8
  %19 = icmp ne %33* %18, null
  br i1 %19, label %20, label %79

20:                                               ; preds = %15
  %21 = bitcast %33** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  %22 = load %32*, %32** %3, align 8
  %23 = getelementptr inbounds %32, %32* %22, i32 0, i32 5
  %24 = load %33*, %33** %23, align 8
  store %33* %24, %33** %8, align 8
  br label %25

25:                                               ; preds = %71, %20
  %26 = load %33*, %33** %8, align 8
  %27 = getelementptr inbounds %33, %33* %26, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %74

30:                                               ; preds = %25
  %31 = load %33*, %33** %8, align 8
  %32 = getelementptr inbounds %33, %33* %31, i32 0, i32 3
  %33 = load i8, i8* %32, align 8
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %36, label %71

36:                                               ; preds = %30
  %37 = load %33*, %33** %8, align 8
  %38 = getelementptr inbounds %33, %33* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = call i64 @strlen(i8* %39) #20
  store i64 %40, i64* %4, align 8
  %41 = load i64, i64* %4, align 8
  %42 = call %10* @138(i64 %41, i32 0)
  store %10* %42, %10** %5, align 8
  %43 = load %10*, %10** %5, align 8
  %44 = getelementptr inbounds %10, %10* %43, i32 0, i32 3
  %45 = getelementptr inbounds [1 x i8], [1 x i8]* %44, i32 0, i32 0
  %46 = load %33*, %33** %8, align 8
  %47 = getelementptr inbounds %33, %33* %46, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %4, align 8
  %50 = call i8* @zend_str_tolower_copy(i8* %45, i8* %48, i64 %49)
  %51 = load %10*, %10** %5, align 8
  %52 = call zeroext i8 @zend_hash_exists(%5* @module_registry, %10* %51)
  %53 = zext i8 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %36
  %56 = load %33*, %33** %8, align 8
  %57 = getelementptr inbounds %33, %33* %56, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = call %66* @zend_get_extension(i8* %58)
  %60 = icmp ne %66* %59, null
  br i1 %60, label %61, label %69

61:                                               ; preds = %55, %36
  %62 = load %10*, %10** %5, align 8
  call void @140(%10* %62)
  %63 = load %32*, %32** %3, align 8
  %64 = getelementptr inbounds %32, %32* %63, i32 0, i32 6
  %65 = load i8*, i8** %64, align 8
  %66 = load %33*, %33** %8, align 8
  %67 = getelementptr inbounds %33, %33* %66, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void (i32, i8*, ...) @zend_error(i32 32, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @39, i32 0, i32 0), i8* %65, i8* %68)
  store %32* null, %32** %2, align 8
  store i32 1, i32* %7, align 4
  br label %75

69:                                               ; preds = %55
  %70 = load %10*, %10** %5, align 8
  call void @140(%10* %70)
  br label %71

71:                                               ; preds = %69, %30
  %72 = load %33*, %33** %8, align 8
  %73 = getelementptr inbounds %33, %33* %72, i32 1
  store %33* %73, %33** %8, align 8
  br label %25

74:                                               ; preds = %25
  store i32 0, i32* %7, align 4
  br label %75

75:                                               ; preds = %74, %61
  %76 = bitcast %33** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #2
  %77 = load i32, i32* %7, align 4
  switch i32 %77, label %135 [
    i32 0, label %78
  ]

78:                                               ; preds = %75
  br label %79

79:                                               ; preds = %78, %15
  %80 = load %32*, %32** %3, align 8
  %81 = getelementptr inbounds %32, %32* %80, i32 0, i32 6
  %82 = load i8*, i8** %81, align 8
  %83 = call i64 @strlen(i8* %82) #20
  store i64 %83, i64* %4, align 8
  %84 = load i64, i64* %4, align 8
  %85 = call %10* @138(i64 %84, i32 1)
  store %10* %85, %10** %5, align 8
  %86 = load %10*, %10** %5, align 8
  %87 = getelementptr inbounds %10, %10* %86, i32 0, i32 3
  %88 = getelementptr inbounds [1 x i8], [1 x i8]* %87, i32 0, i32 0
  %89 = load %32*, %32** %3, align 8
  %90 = getelementptr inbounds %32, %32* %89, i32 0, i32 6
  %91 = load i8*, i8** %90, align 8
  %92 = load i64, i64* %4, align 8
  %93 = call i8* @zend_str_tolower_copy(i8* %88, i8* %91, i64 %92)
  %94 = load %10* (%10*)*, %10* (%10*)** @zend_new_interned_string, align 8
  %95 = load %10*, %10** %5, align 8
  %96 = call %10* %94(%10* %95)
  store %10* %96, %10** %5, align 8
  %97 = load %10*, %10** %5, align 8
  %98 = load %32*, %32** %3, align 8
  %99 = bitcast %32* %98 to i8*
  %100 = call i8* @143(%5* @module_registry, %10* %97, i8* %99, i64 168)
  %101 = bitcast i8* %100 to %32*
  store %32* %101, %32** %6, align 8
  %102 = icmp eq %32* %101, null
  br i1 %102, label %103, label %108

103:                                              ; preds = %79
  %104 = load %32*, %32** %3, align 8
  %105 = getelementptr inbounds %32, %32* %104, i32 0, i32 6
  %106 = load i8*, i8** %105, align 8
  call void (i32, i8*, ...) @zend_error(i32 32, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @40, i32 0, i32 0), i8* %106)
  %107 = load %10*, %10** %5, align 8
  call void @135(%10* %107)
  store %32* null, %32** %2, align 8
  store i32 1, i32* %7, align 4
  br label %135

108:                                              ; preds = %79
  %109 = load %32*, %32** %6, align 8
  store %32* %109, %32** %3, align 8
  %110 = load %32*, %32** %3, align 8
  store %32* %110, %32** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 47), align 8
  %111 = load %32*, %32** %3, align 8
  %112 = getelementptr inbounds %32, %32* %111, i32 0, i32 7
  %113 = load %34*, %34** %112, align 8
  %114 = icmp ne %34* %113, null
  br i1 %114, label %115, label %132

115:                                              ; preds = %108
  %116 = load %32*, %32** %3, align 8
  %117 = getelementptr inbounds %32, %32* %116, i32 0, i32 7
  %118 = load %34*, %34** %117, align 8
  %119 = load %32*, %32** %3, align 8
  %120 = getelementptr inbounds %32, %32* %119, i32 0, i32 20
  %121 = load i8, i8* %120, align 4
  %122 = zext i8 %121 to i32
  %123 = call i32 @zend_register_functions(%16* null, %34* %118, %5* null, i32 %122)
  %124 = icmp eq i32 %123, -1
  br i1 %124, label %125, label %132

125:                                              ; preds = %115
  %126 = load %10*, %10** %5, align 8
  %127 = call i32 @zend_hash_del(%5* @module_registry, %10* %126)
  %128 = load %10*, %10** %5, align 8
  call void @135(%10* %128)
  store %32* null, %32** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 47), align 8
  %129 = load %32*, %32** %3, align 8
  %130 = getelementptr inbounds %32, %32* %129, i32 0, i32 6
  %131 = load i8*, i8** %130, align 8
  call void (i32, i8*, ...) @zend_error(i32 32, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @41, i32 0, i32 0), i8* %131)
  store %32* null, %32** %2, align 8
  store i32 1, i32* %7, align 4
  br label %135

132:                                              ; preds = %115, %108
  store %32* null, %32** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 47), align 8
  %133 = load %10*, %10** %5, align 8
  call void @135(%10* %133)
  %134 = load %32*, %32** %3, align 8
  store %32* %134, %32** %2, align 8
  store i32 1, i32* %7, align 4
  br label %135

135:                                              ; preds = %132, %125, %103, %75, %14
  %136 = bitcast %32** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #2
  %137 = bitcast %10** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %137) #2
  %138 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #2
  %139 = load %32*, %32** %2, align 8
  ret %32* %139
}

declare dso_local zeroext i8 @zend_hash_exists(%5*, %10*) #4

declare dso_local %66* @zend_get_extension(i8*) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @143(%5* %0, %10* %1, i8* %2, i64 %3) #3 {
  %5 = alloca i8*, align 8
  %6 = alloca %5*, align 8
  %7 = alloca %10*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %11, align 8
  %11 = alloca %11*, align 8
  %12 = alloca i32, align 4
  store %5* %0, %5** %6, align 8
  store %10* %1, %10** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  %13 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  br label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %11, %11* %10, i32 0, i32 0
  %17 = bitcast %12* %16 to i8**
  store i8* null, i8** %17, align 8
  %18 = getelementptr inbounds %11, %11* %10, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  store i32 17, i32* %19, align 8
  br label %20

20:                                               ; preds = %15
  br label %21

21:                                               ; preds = %20
  %22 = load %5*, %5** %6, align 8
  %23 = load %10*, %10** %7, align 8
  %24 = call %11* @_zend_hash_add(%5* %22, %10* %23, %11* %10)
  store %11* %24, %11** %11, align 8
  %25 = icmp ne %11* %24, null
  br i1 %25, label %26, label %54

26:                                               ; preds = %21
  %27 = load %5*, %5** %6, align 8
  %28 = getelementptr inbounds %5, %5* %27, i32 0, i32 1
  %29 = bitcast %8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 1
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = load i64, i64* %9, align 8
  %35 = call noalias i8* @__zend_malloc(i64 %34) #19
  br label %39

36:                                               ; preds = %26
  %37 = load i64, i64* %9, align 8
  %38 = call noalias i8* @_emalloc(i64 %37) #19
  br label %39

39:                                               ; preds = %36, %33
  %40 = phi i8* [ %35, %33 ], [ %38, %36 ]
  %41 = load %11*, %11** %11, align 8
  %42 = getelementptr inbounds %11, %11* %41, i32 0, i32 0
  %43 = bitcast %12* %42 to i8**
  store i8* %40, i8** %43, align 8
  %44 = load %11*, %11** %11, align 8
  %45 = getelementptr inbounds %11, %11* %44, i32 0, i32 0
  %46 = bitcast %12* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = load i8*, i8** %8, align 8
  %49 = load i64, i64* %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %48, i64 %49, i1 false)
  %50 = load %11*, %11** %11, align 8
  %51 = getelementptr inbounds %11, %11* %50, i32 0, i32 0
  %52 = bitcast %12* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  store i8* %53, i8** %5, align 8
  store i32 1, i32* %12, align 4
  br label %55

54:                                               ; preds = %21
  store i8* null, i8** %5, align 8
  store i32 1, i32* %12, align 4
  br label %55

55:                                               ; preds = %54, %39
  %56 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #2
  %57 = bitcast %11* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %57) #2
  %58 = load i8*, i8** %5, align 8
  ret i8* %58
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_register_functions(%16* %0, %34* %1, %5* %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %16*, align 8
  %7 = alloca %34*, align 8
  %8 = alloca %5*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %34*, align 8
  %11 = alloca %37, align 8
  %12 = alloca %37*, align 8
  %13 = alloca %67*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %5*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %37*, align 8
  %19 = alloca %37*, align 8
  %20 = alloca %37*, align 8
  %21 = alloca %37*, align 8
  %22 = alloca %37*, align 8
  %23 = alloca %37*, align 8
  %24 = alloca %37*, align 8
  %25 = alloca %37*, align 8
  %26 = alloca %37*, align 8
  %27 = alloca %37*, align 8
  %28 = alloca %37*, align 8
  %29 = alloca %10*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %68*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %39*, align 8
  %40 = alloca %39*, align 8
  %41 = alloca i8*, align 8
  %42 = alloca i8, align 1
  %43 = alloca %10*, align 8
  store %16* %0, %16** %6, align 8
  store %34* %1, %34** %7, align 8
  store %5* %2, %5** %8, align 8
  store i32 %3, i32* %9, align 4
  %44 = bitcast %34** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #2
  %45 = load %34*, %34** %7, align 8
  store %34* %45, %34** %10, align 8
  %46 = bitcast %37* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* %46) #2
  %47 = bitcast %37** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #2
  %48 = bitcast %67** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #2
  %49 = bitcast %37* %11 to %67*
  store %67* %49, %67** %13, align 8
  %50 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #2
  store i32 0, i32* %14, align 4
  %51 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #2
  store i32 0, i32* %15, align 4
  %52 = bitcast %5** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #2
  %53 = load %5*, %5** %8, align 8
  store %5* %53, %5** %16, align 8
  %54 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #2
  %55 = bitcast %37** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #2
  store %37* null, %37** %18, align 8
  %56 = bitcast %37** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #2
  store %37* null, %37** %19, align 8
  %57 = bitcast %37** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #2
  store %37* null, %37** %20, align 8
  %58 = bitcast %37** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #2
  store %37* null, %37** %21, align 8
  %59 = bitcast %37** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #2
  store %37* null, %37** %22, align 8
  %60 = bitcast %37** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #2
  store %37* null, %37** %23, align 8
  %61 = bitcast %37** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #2
  store %37* null, %37** %24, align 8
  %62 = bitcast %37** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #2
  store %37* null, %37** %25, align 8
  %63 = bitcast %37** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #2
  store %37* null, %37** %26, align 8
  %64 = bitcast %37** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #2
  store %37* null, %37** %27, align 8
  %65 = bitcast %37** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %65) #2
  store %37* null, %37** %28, align 8
  %66 = bitcast %10** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %66) #2
  %67 = bitcast i64* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %67) #2
  %68 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %68) #2
  store i8* null, i8** %31, align 8
  %69 = bitcast i64* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %69) #2
  store i64 0, i64* %32, align 8
  %70 = load i32, i32* %9, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %73

72:                                               ; preds = %4
  store i32 32, i32* %17, align 4
  br label %74

73:                                               ; preds = %4
  store i32 2, i32* %17, align 4
  br label %74

74:                                               ; preds = %73, %72
  %75 = load %5*, %5** %16, align 8
  %76 = icmp ne %5* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = load %5*, %5** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 5), align 8
  store %5* %78, %5** %16, align 8
  br label %79

79:                                               ; preds = %77, %74
  %80 = load %67*, %67** %13, align 8
  %81 = getelementptr inbounds %67, %67* %80, i32 0, i32 0
  store i8 1, i8* %81, align 8
  %82 = load %32*, %32** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 47), align 8
  %83 = load %67*, %67** %13, align 8
  %84 = getelementptr inbounds %67, %67* %83, i32 0, i32 10
  store %32* %82, %32** %84, align 8
  %85 = load %67*, %67** %13, align 8
  %86 = getelementptr inbounds %67, %67* %85, i32 0, i32 11
  %87 = getelementptr inbounds [6 x i8*], [6 x i8*]* %86, i32 0, i32 0
  %88 = bitcast i8** %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 48, i1 false)
  %89 = load %16*, %16** %6, align 8
  %90 = icmp ne %16* %89, null
  br i1 %90, label %91, label %131

91:                                               ; preds = %79
  %92 = load %16*, %16** %6, align 8
  %93 = getelementptr inbounds %16, %16* %92, i32 0, i32 1
  %94 = load %10*, %10** %93, align 8
  %95 = getelementptr inbounds %10, %10* %94, i32 0, i32 2
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %32, align 8
  %97 = load %16*, %16** %6, align 8
  %98 = getelementptr inbounds %16, %16* %97, i32 0, i32 1
  %99 = load %10*, %10** %98, align 8
  %100 = getelementptr inbounds %10, %10* %99, i32 0, i32 3
  %101 = getelementptr inbounds [1 x i8], [1 x i8]* %100, i32 0, i32 0
  %102 = load i64, i64* %32, align 8
  %103 = call i8* @145(i8* %101, i32 92, i64 %102)
  store i8* %103, i8** %31, align 8
  %104 = icmp ne i8* %103, null
  br i1 %104, label %105, label %122

105:                                              ; preds = %91
  %106 = load i8*, i8** %31, align 8
  %107 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %107, i8** %31, align 8
  %108 = load i8*, i8** %31, align 8
  %109 = load %16*, %16** %6, align 8
  %110 = getelementptr inbounds %16, %16* %109, i32 0, i32 1
  %111 = load %10*, %10** %110, align 8
  %112 = getelementptr inbounds %10, %10* %111, i32 0, i32 3
  %113 = getelementptr inbounds [1 x i8], [1 x i8]* %112, i32 0, i32 0
  %114 = ptrtoint i8* %108 to i64
  %115 = ptrtoint i8* %113 to i64
  %116 = sub i64 %114, %115
  %117 = load i64, i64* %32, align 8
  %118 = sub i64 %117, %116
  store i64 %118, i64* %32, align 8
  %119 = load i8*, i8** %31, align 8
  %120 = load i64, i64* %32, align 8
  %121 = call i8* @zend_str_tolower_dup(i8* %119, i64 %120)
  store i8* %121, i8** %31, align 8
  br label %130

122:                                              ; preds = %91
  %123 = load %16*, %16** %6, align 8
  %124 = getelementptr inbounds %16, %16* %123, i32 0, i32 1
  %125 = load %10*, %10** %124, align 8
  %126 = getelementptr inbounds %10, %10* %125, i32 0, i32 3
  %127 = getelementptr inbounds [1 x i8], [1 x i8]* %126, i32 0, i32 0
  %128 = load i64, i64* %32, align 8
  %129 = call i8* @zend_str_tolower_dup(i8* %127, i64 %128)
  store i8* %129, i8** %31, align 8
  br label %130

130:                                              ; preds = %122, %105
  br label %131

131:                                              ; preds = %130, %79
  br label %132

132:                                              ; preds = %860, %131
  %133 = load %34*, %34** %10, align 8
  %134 = getelementptr inbounds %34, %34* %133, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = icmp ne i8* %135, null
  br i1 %136, label %137, label %866

137:                                              ; preds = %132
  %138 = load %34*, %34** %10, align 8
  %139 = getelementptr inbounds %34, %34* %138, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = call i64 @strlen(i8* %140) #20
  store i64 %141, i64* %30, align 8
  %142 = load %34*, %34** %10, align 8
  %143 = getelementptr inbounds %34, %34* %142, i32 0, i32 1
  %144 = load void (%4*, %11*)*, void (%4*, %11*)** %143, align 8
  %145 = load %67*, %67** %13, align 8
  %146 = getelementptr inbounds %67, %67* %145, i32 0, i32 9
  store void (%4*, %11*)* %144, void (%4*, %11*)** %146, align 8
  %147 = load %10* (%10*)*, %10* (%10*)** @zend_new_interned_string, align 8
  %148 = load %34*, %34** %10, align 8
  %149 = getelementptr inbounds %34, %34* %148, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = load i64, i64* %30, align 8
  %152 = call %10* @134(i8* %150, i64 %151, i32 1)
  %153 = call %10* %147(%10* %152)
  %154 = load %67*, %67** %13, align 8
  %155 = getelementptr inbounds %67, %67* %154, i32 0, i32 3
  store %10* %153, %10** %155, align 8
  %156 = load %16*, %16** %6, align 8
  %157 = load %67*, %67** %13, align 8
  %158 = getelementptr inbounds %67, %67* %157, i32 0, i32 4
  store %16* %156, %16** %158, align 8
  %159 = load %67*, %67** %13, align 8
  %160 = getelementptr inbounds %67, %67* %159, i32 0, i32 5
  store %37* null, %37** %160, align 8
  %161 = load %34*, %34** %10, align 8
  %162 = getelementptr inbounds %34, %34* %161, i32 0, i32 4
  %163 = load i32, i32* %162, align 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %213

165:                                              ; preds = %137
  %166 = load %34*, %34** %10, align 8
  %167 = getelementptr inbounds %34, %34* %166, i32 0, i32 4
  %168 = load i32, i32* %167, align 4
  %169 = and i32 %168, 1792
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %206, label %171

171:                                              ; preds = %165
  %172 = load %34*, %34** %10, align 8
  %173 = getelementptr inbounds %34, %34* %172, i32 0, i32 4
  %174 = load i32, i32* %173, align 4
  %175 = icmp ne i32 %174, 262144
  br i1 %175, label %176, label %199

176:                                              ; preds = %171
  %177 = load %16*, %16** %6, align 8
  %178 = icmp ne %16* %177, null
  br i1 %178, label %179, label %199

179:                                              ; preds = %176
  %180 = load i32, i32* %17, align 4
  %181 = load %16*, %16** %6, align 8
  %182 = icmp ne %16* %181, null
  br i1 %182, label %183, label %189

183:                                              ; preds = %179
  %184 = load %16*, %16** %6, align 8
  %185 = getelementptr inbounds %16, %16* %184, i32 0, i32 1
  %186 = load %10*, %10** %185, align 8
  %187 = getelementptr inbounds %10, %10* %186, i32 0, i32 3
  %188 = getelementptr inbounds [1 x i8], [1 x i8]* %187, i32 0, i32 0
  br label %190

189:                                              ; preds = %179
  br label %190

190:                                              ; preds = %189, %183
  %191 = phi i8* [ %188, %183 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), %189 ]
  %192 = load %16*, %16** %6, align 8
  %193 = icmp ne %16* %192, null
  %194 = zext i1 %193 to i64
  %195 = select i1 %193, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0)
  %196 = load %34*, %34** %10, align 8
  %197 = getelementptr inbounds %34, %34* %196, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8
  call void (i32, i8*, ...) @zend_error(i32 %180, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @60, i32 0, i32 0), i8* %191, i8* %195, i8* %198)
  br label %199

199:                                              ; preds = %190, %176, %171
  %200 = load %34*, %34** %10, align 8
  %201 = getelementptr inbounds %34, %34* %200, i32 0, i32 4
  %202 = load i32, i32* %201, align 4
  %203 = or i32 256, %202
  %204 = load %67*, %67** %13, align 8
  %205 = getelementptr inbounds %67, %67* %204, i32 0, i32 2
  store i32 %203, i32* %205, align 4
  br label %212

206:                                              ; preds = %165
  %207 = load %34*, %34** %10, align 8
  %208 = getelementptr inbounds %34, %34* %207, i32 0, i32 4
  %209 = load i32, i32* %208, align 4
  %210 = load %67*, %67** %13, align 8
  %211 = getelementptr inbounds %67, %67* %210, i32 0, i32 2
  store i32 %209, i32* %211, align 4
  br label %212

212:                                              ; preds = %206, %199
  br label %216

213:                                              ; preds = %137
  %214 = load %67*, %67** %13, align 8
  %215 = getelementptr inbounds %67, %67* %214, i32 0, i32 2
  store i32 256, i32* %215, align 4
  br label %216

216:                                              ; preds = %213, %212
  %217 = load %34*, %34** %10, align 8
  %218 = getelementptr inbounds %34, %34* %217, i32 0, i32 2
  %219 = load %35*, %35** %218, align 8
  %220 = icmp ne %35* %219, null
  br i1 %220, label %221, label %332

221:                                              ; preds = %216
  %222 = bitcast %68** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %222) #2
  %223 = load %34*, %34** %10, align 8
  %224 = getelementptr inbounds %34, %34* %223, i32 0, i32 2
  %225 = load %35*, %35** %224, align 8
  %226 = bitcast %35* %225 to %68*
  store %68* %226, %68** %33, align 8
  %227 = load %34*, %34** %10, align 8
  %228 = getelementptr inbounds %34, %34* %227, i32 0, i32 2
  %229 = load %35*, %35** %228, align 8
  %230 = getelementptr inbounds %35, %35* %229, i64 1
  %231 = load %67*, %67** %13, align 8
  %232 = getelementptr inbounds %67, %67* %231, i32 0, i32 8
  store %35* %230, %35** %232, align 8
  %233 = load %34*, %34** %10, align 8
  %234 = getelementptr inbounds %34, %34* %233, i32 0, i32 3
  %235 = load i32, i32* %234, align 8
  %236 = load %67*, %67** %13, align 8
  %237 = getelementptr inbounds %67, %67* %236, i32 0, i32 6
  store i32 %235, i32* %237, align 8
  %238 = load %68*, %68** %33, align 8
  %239 = getelementptr inbounds %68, %68* %238, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = icmp eq i64 %240, -1
  br i1 %241, label %242, label %248

242:                                              ; preds = %221
  %243 = load %34*, %34** %10, align 8
  %244 = getelementptr inbounds %34, %34* %243, i32 0, i32 3
  %245 = load i32, i32* %244, align 8
  %246 = load %67*, %67** %13, align 8
  %247 = getelementptr inbounds %67, %67* %246, i32 0, i32 7
  store i32 %245, i32* %247, align 4
  br label %255

248:                                              ; preds = %221
  %249 = load %68*, %68** %33, align 8
  %250 = getelementptr inbounds %68, %68* %249, i32 0, i32 0
  %251 = load i64, i64* %250, align 8
  %252 = trunc i64 %251 to i32
  %253 = load %67*, %67** %13, align 8
  %254 = getelementptr inbounds %67, %67* %253, i32 0, i32 7
  store i32 %252, i32* %254, align 4
  br label %255

255:                                              ; preds = %248, %242
  %256 = load %68*, %68** %33, align 8
  %257 = getelementptr inbounds %68, %68* %256, i32 0, i32 2
  %258 = load i8, i8* %257, align 8
  %259 = icmp ne i8 %258, 0
  br i1 %259, label %260, label %265

260:                                              ; preds = %255
  %261 = load %67*, %67** %13, align 8
  %262 = getelementptr inbounds %67, %67* %261, i32 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = or i32 %263, 67108864
  store i32 %264, i32* %262, align 4
  br label %265

265:                                              ; preds = %260, %255
  %266 = load %34*, %34** %10, align 8
  %267 = getelementptr inbounds %34, %34* %266, i32 0, i32 2
  %268 = load %35*, %35** %267, align 8
  %269 = load %34*, %34** %10, align 8
  %270 = getelementptr inbounds %34, %34* %269, i32 0, i32 3
  %271 = load i32, i32* %270, align 8
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds %35, %35* %268, i64 %272
  %274 = getelementptr inbounds %35, %35* %273, i32 0, i32 3
  %275 = load i8, i8* %274, align 1
  %276 = icmp ne i8 %275, 0
  br i1 %276, label %277, label %286

277:                                              ; preds = %265
  %278 = load %67*, %67** %13, align 8
  %279 = getelementptr inbounds %67, %67* %278, i32 0, i32 2
  %280 = load i32, i32* %279, align 4
  %281 = or i32 %280, 16777216
  store i32 %281, i32* %279, align 4
  %282 = load %67*, %67** %13, align 8
  %283 = getelementptr inbounds %67, %67* %282, i32 0, i32 6
  %284 = load i32, i32* %283, align 8
  %285 = add i32 %284, -1
  store i32 %285, i32* %283, align 8
  br label %286

286:                                              ; preds = %277, %265
  %287 = load %68*, %68** %33, align 8
  %288 = getelementptr inbounds %68, %68* %287, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
  %290 = icmp ugt i64 %289, 1
  br i1 %290, label %291, label %330

291:                                              ; preds = %286
  %292 = load %68*, %68** %33, align 8
  %293 = getelementptr inbounds %68, %68* %292, i32 0, i32 1
  %294 = load i64, i64* %293, align 8
  %295 = icmp ugt i64 %294, 511
  br i1 %295, label %296, label %325

296:                                              ; preds = %291
  %297 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %297) #2
  %298 = load %68*, %68** %33, align 8
  %299 = getelementptr inbounds %68, %68* %298, i32 0, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = inttoptr i64 %300 to i8*
  store i8* %301, i8** %34, align 8
  %302 = load i8*, i8** %34, align 8
  %303 = getelementptr inbounds i8, i8* %302, i64 0
  %304 = load i8, i8* %303, align 1
  %305 = sext i8 %304 to i32
  %306 = icmp eq i32 %305, 63
  br i1 %306, label %307, label %310

307:                                              ; preds = %296
  %308 = load i8*, i8** %34, align 8
  %309 = getelementptr inbounds i8, i8* %308, i32 1
  store i8* %309, i8** %34, align 8
  br label %310

310:                                              ; preds = %307, %296
  %311 = load %16*, %16** %6, align 8
  %312 = icmp ne %16* %311, null
  br i1 %312, label %323, label %313

313:                                              ; preds = %310
  %314 = load i8*, i8** %34, align 8
  %315 = call i32 @strcasecmp(i8* %314, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i32 0, i32 0)) #20
  %316 = icmp ne i32 %315, 0
  br i1 %316, label %317, label %321

317:                                              ; preds = %313
  %318 = load i8*, i8** %34, align 8
  %319 = call i32 @strcasecmp(i8* %318, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @62, i32 0, i32 0)) #20
  %320 = icmp ne i32 %319, 0
  br i1 %320, label %323, label %321

321:                                              ; preds = %317, %313
  %322 = load i8*, i8** %34, align 8
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @63, i32 0, i32 0), i8* %322) #18
  unreachable

323:                                              ; preds = %317, %310
  %324 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %324) #2
  br label %325

325:                                              ; preds = %323, %291
  %326 = load %67*, %67** %13, align 8
  %327 = getelementptr inbounds %67, %67* %326, i32 0, i32 2
  %328 = load i32, i32* %327, align 4
  %329 = or i32 %328, 1073741824
  store i32 %329, i32* %327, align 4
  br label %330

330:                                              ; preds = %325, %286
  %331 = bitcast %68** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %331) #2
  br label %339

332:                                              ; preds = %216
  %333 = load %67*, %67** %13, align 8
  %334 = getelementptr inbounds %67, %67* %333, i32 0, i32 8
  store %35* null, %35** %334, align 8
  %335 = load %67*, %67** %13, align 8
  %336 = getelementptr inbounds %67, %67* %335, i32 0, i32 6
  store i32 0, i32* %336, align 8
  %337 = load %67*, %67** %13, align 8
  %338 = getelementptr inbounds %67, %67* %337, i32 0, i32 7
  store i32 0, i32* %338, align 4
  br label %339

339:                                              ; preds = %332, %330
  %340 = load %67*, %67** %13, align 8
  %341 = bitcast %67* %340 to %37*
  call void @zend_set_function_arg_flags(%37* %341)
  %342 = load %34*, %34** %10, align 8
  %343 = getelementptr inbounds %34, %34* %342, i32 0, i32 4
  %344 = load i32, i32* %343, align 4
  %345 = and i32 %344, 2
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %347, label %402

347:                                              ; preds = %339
  %348 = load %16*, %16** %6, align 8
  %349 = icmp ne %16* %348, null
  br i1 %349, label %350, label %366

350:                                              ; preds = %347
  %351 = load %16*, %16** %6, align 8
  %352 = getelementptr inbounds %16, %16* %351, i32 0, i32 4
  %353 = load i32, i32* %352, align 4
  %354 = or i32 %353, 16
  store i32 %354, i32* %352, align 4
  %355 = load %16*, %16** %6, align 8
  %356 = getelementptr inbounds %16, %16* %355, i32 0, i32 4
  %357 = load i32, i32* %356, align 4
  %358 = and i32 %357, 64
  %359 = icmp ne i32 %358, 0
  br i1 %359, label %365, label %360

360:                                              ; preds = %350
  %361 = load %16*, %16** %6, align 8
  %362 = getelementptr inbounds %16, %16* %361, i32 0, i32 4
  %363 = load i32, i32* %362, align 4
  %364 = or i32 %363, 32
  store i32 %364, i32* %362, align 4
  br label %365

365:                                              ; preds = %360, %350
  br label %366

366:                                              ; preds = %365, %347
  %367 = load %34*, %34** %10, align 8
  %368 = getelementptr inbounds %34, %34* %367, i32 0, i32 4
  %369 = load i32, i32* %368, align 4
  %370 = and i32 %369, 1
  %371 = icmp ne i32 %370, 0
  br i1 %371, label %372, label %401

372:                                              ; preds = %366
  %373 = load %16*, %16** %6, align 8
  %374 = icmp ne %16* %373, null
  br i1 %374, label %375, label %381

375:                                              ; preds = %372
  %376 = load %16*, %16** %6, align 8
  %377 = getelementptr inbounds %16, %16* %376, i32 0, i32 4
  %378 = load i32, i32* %377, align 4
  %379 = and i32 %378, 64
  %380 = icmp ne i32 %379, 0
  br i1 %380, label %401, label %381

381:                                              ; preds = %375, %372
  %382 = load i32, i32* %17, align 4
  %383 = load %16*, %16** %6, align 8
  %384 = icmp ne %16* %383, null
  br i1 %384, label %385, label %391

385:                                              ; preds = %381
  %386 = load %16*, %16** %6, align 8
  %387 = getelementptr inbounds %16, %16* %386, i32 0, i32 1
  %388 = load %10*, %10** %387, align 8
  %389 = getelementptr inbounds %10, %10* %388, i32 0, i32 3
  %390 = getelementptr inbounds [1 x i8], [1 x i8]* %389, i32 0, i32 0
  br label %392

391:                                              ; preds = %381
  br label %392

392:                                              ; preds = %391, %385
  %393 = phi i8* [ %390, %385 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), %391 ]
  %394 = load %16*, %16** %6, align 8
  %395 = icmp ne %16* %394, null
  %396 = zext i1 %395 to i64
  %397 = select i1 %395, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0)
  %398 = load %34*, %34** %10, align 8
  %399 = getelementptr inbounds %34, %34* %398, i32 0, i32 0
  %400 = load i8*, i8** %399, align 8
  call void (i32, i8*, ...) @zend_error(i32 %382, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @64, i32 0, i32 0), i8* %393, i8* %397, i8* %400)
  br label %401

401:                                              ; preds = %392, %375, %366
  br label %456

402:                                              ; preds = %339
  %403 = load %16*, %16** %6, align 8
  %404 = icmp ne %16* %403, null
  br i1 %404, label %405, label %422

405:                                              ; preds = %402
  %406 = load %16*, %16** %6, align 8
  %407 = getelementptr inbounds %16, %16* %406, i32 0, i32 4
  %408 = load i32, i32* %407, align 4
  %409 = and i32 %408, 64
  %410 = icmp ne i32 %409, 0
  br i1 %410, label %411, label %422

411:                                              ; preds = %405
  %412 = load i8*, i8** %31, align 8
  call void @_efree(i8* %412)
  %413 = load i32, i32* %17, align 4
  %414 = load %16*, %16** %6, align 8
  %415 = getelementptr inbounds %16, %16* %414, i32 0, i32 1
  %416 = load %10*, %10** %415, align 8
  %417 = getelementptr inbounds %10, %10* %416, i32 0, i32 3
  %418 = getelementptr inbounds [1 x i8], [1 x i8]* %417, i32 0, i32 0
  %419 = load %34*, %34** %10, align 8
  %420 = getelementptr inbounds %34, %34* %419, i32 0, i32 0
  %421 = load i8*, i8** %420, align 8
  call void (i32, i8*, ...) @zend_error(i32 %413, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @65, i32 0, i32 0), i8* %418, i8* %421)
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %35, align 4
  br label %1370

422:                                              ; preds = %405, %402
  %423 = load %67*, %67** %13, align 8
  %424 = getelementptr inbounds %67, %67* %423, i32 0, i32 9
  %425 = load void (%4*, %11*)*, void (%4*, %11*)** %424, align 8
  %426 = icmp ne void (%4*, %11*)* %425, null
  br i1 %426, label %455, label %427

427:                                              ; preds = %422
  %428 = load %16*, %16** %6, align 8
  %429 = icmp ne %16* %428, null
  br i1 %429, label %430, label %432

430:                                              ; preds = %427
  %431 = load i8*, i8** %31, align 8
  call void @_efree(i8* %431)
  br label %432

432:                                              ; preds = %430, %427
  %433 = load i32, i32* %17, align 4
  %434 = load %16*, %16** %6, align 8
  %435 = icmp ne %16* %434, null
  br i1 %435, label %436, label %442

436:                                              ; preds = %432
  %437 = load %16*, %16** %6, align 8
  %438 = getelementptr inbounds %16, %16* %437, i32 0, i32 1
  %439 = load %10*, %10** %438, align 8
  %440 = getelementptr inbounds %10, %10* %439, i32 0, i32 3
  %441 = getelementptr inbounds [1 x i8], [1 x i8]* %440, i32 0, i32 0
  br label %443

442:                                              ; preds = %432
  br label %443

443:                                              ; preds = %442, %436
  %444 = phi i8* [ %441, %436 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), %442 ]
  %445 = load %16*, %16** %6, align 8
  %446 = icmp ne %16* %445, null
  %447 = zext i1 %446 to i64
  %448 = select i1 %446, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0)
  %449 = load %34*, %34** %10, align 8
  %450 = getelementptr inbounds %34, %34* %449, i32 0, i32 0
  %451 = load i8*, i8** %450, align 8
  call void (i32, i8*, ...) @zend_error(i32 %433, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @66, i32 0, i32 0), i8* %444, i8* %448, i8* %451)
  %452 = load %34*, %34** %7, align 8
  %453 = load i32, i32* %14, align 4
  %454 = load %5*, %5** %16, align 8
  call void @zend_unregister_functions(%34* %452, i32 %453, %5* %454)
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %35, align 4
  br label %1370

455:                                              ; preds = %422
  br label %456

456:                                              ; preds = %455, %401
  %457 = load i64, i64* %30, align 8
  %458 = call %10* @138(i64 %457, i32 1)
  store %10* %458, %10** %29, align 8
  %459 = load %10*, %10** %29, align 8
  %460 = getelementptr inbounds %10, %10* %459, i32 0, i32 3
  %461 = getelementptr inbounds [1 x i8], [1 x i8]* %460, i32 0, i32 0
  %462 = load %34*, %34** %10, align 8
  %463 = getelementptr inbounds %34, %34* %462, i32 0, i32 0
  %464 = load i8*, i8** %463, align 8
  %465 = load i64, i64* %30, align 8
  %466 = call i8* @zend_str_tolower_copy(i8* %461, i8* %464, i64 %465)
  %467 = load %10* (%10*)*, %10* (%10*)** @zend_new_interned_string, align 8
  %468 = load %10*, %10** %29, align 8
  %469 = call %10* %467(%10* %468)
  store %10* %469, %10** %29, align 8
  %470 = call noalias i8* @malloc(i64 112) #2
  %471 = bitcast i8* %470 to %37*
  store %37* %471, %37** %12, align 8
  %472 = load %37*, %37** %12, align 8
  %473 = bitcast %37* %472 to i8*
  %474 = bitcast %37* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %473, i8* align 8 %474, i64 112, i1 false)
  %475 = load %5*, %5** %16, align 8
  %476 = load %10*, %10** %29, align 8
  %477 = load %37*, %37** %12, align 8
  %478 = bitcast %37* %477 to i8*
  %479 = call i8* @146(%5* %475, %10* %476, i8* %478)
  %480 = icmp eq i8* %479, null
  br i1 %480, label %481, label %485

481:                                              ; preds = %456
  store i32 1, i32* %15, align 4
  %482 = load %37*, %37** %12, align 8
  %483 = bitcast %37* %482 to i8*
  call void @free(i8* %483) #2
  %484 = load %10*, %10** %29, align 8
  call void @135(%10* %484)
  br label %866

485:                                              ; preds = %456
  %486 = load %37*, %37** %12, align 8
  %487 = bitcast %37* %486 to %60*
  %488 = getelementptr inbounds %60, %60* %487, i32 0, i32 8
  %489 = load %39*, %39** %488, align 8
  %490 = icmp ne %39* %489, null
  br i1 %490, label %491, label %529

491:                                              ; preds = %485
  %492 = load %37*, %37** %12, align 8
  %493 = bitcast %37* %492 to %60*
  %494 = getelementptr inbounds %60, %60* %493, i32 0, i32 6
  %495 = load i32, i32* %494, align 8
  %496 = icmp ne i32 %495, 0
  br i1 %496, label %497, label %529

497:                                              ; preds = %491
  %498 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %498) #2
  store i32 0, i32* %36, align 4
  br label %499

499:                                              ; preds = %524, %497
  %500 = load i32, i32* %36, align 4
  %501 = load %37*, %37** %12, align 8
  %502 = bitcast %37* %501 to %60*
  %503 = getelementptr inbounds %60, %60* %502, i32 0, i32 6
  %504 = load i32, i32* %503, align 8
  %505 = icmp ult i32 %500, %504
  br i1 %505, label %506, label %527

506:                                              ; preds = %499
  %507 = load %37*, %37** %12, align 8
  %508 = bitcast %37* %507 to %60*
  %509 = getelementptr inbounds %60, %60* %508, i32 0, i32 8
  %510 = load %39*, %39** %509, align 8
  %511 = load i32, i32* %36, align 4
  %512 = zext i32 %511 to i64
  %513 = getelementptr inbounds %39, %39* %510, i64 %512
  %514 = getelementptr inbounds %39, %39* %513, i32 0, i32 1
  %515 = load i64, i64* %514, align 8
  %516 = icmp ugt i64 %515, 1
  br i1 %516, label %517, label %523

517:                                              ; preds = %506
  %518 = load %37*, %37** %12, align 8
  %519 = bitcast %37* %518 to %60*
  %520 = getelementptr inbounds %60, %60* %519, i32 0, i32 2
  %521 = load i32, i32* %520, align 4
  %522 = or i32 %521, 268435456
  store i32 %522, i32* %520, align 4
  br label %527

523:                                              ; preds = %506
  br label %524

524:                                              ; preds = %523
  %525 = load i32, i32* %36, align 4
  %526 = add i32 %525, 1
  store i32 %526, i32* %36, align 4
  br label %499

527:                                              ; preds = %517, %499
  %528 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %528) #2
  br label %529

529:                                              ; preds = %527, %491, %485
  %530 = load %37*, %37** %12, align 8
  %531 = bitcast %37* %530 to %60*
  %532 = getelementptr inbounds %60, %60* %531, i32 0, i32 8
  %533 = load %39*, %39** %532, align 8
  %534 = icmp ne %39* %533, null
  br i1 %534, label %535, label %645

535:                                              ; preds = %529
  %536 = load %37*, %37** %12, align 8
  %537 = bitcast %37* %536 to %60*
  %538 = getelementptr inbounds %60, %60* %537, i32 0, i32 2
  %539 = load i32, i32* %538, align 4
  %540 = and i32 %539, 1342177280
  %541 = icmp ne i32 %540, 0
  br i1 %541, label %542, label %645

542:                                              ; preds = %535
  %543 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %543) #2
  %544 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %544) #2
  %545 = load %37*, %37** %12, align 8
  %546 = bitcast %37* %545 to %60*
  %547 = getelementptr inbounds %60, %60* %546, i32 0, i32 6
  %548 = load i32, i32* %547, align 8
  %549 = add i32 %548, 1
  store i32 %549, i32* %38, align 4
  %550 = bitcast %39** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %550) #2
  %551 = load %37*, %37** %12, align 8
  %552 = bitcast %37* %551 to %60*
  %553 = getelementptr inbounds %60, %60* %552, i32 0, i32 8
  %554 = load %39*, %39** %553, align 8
  %555 = getelementptr inbounds %39, %39* %554, i64 -1
  store %39* %555, %39** %39, align 8
  %556 = bitcast %39** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %556) #2
  %557 = load %37*, %37** %12, align 8
  %558 = bitcast %37* %557 to %60*
  %559 = getelementptr inbounds %60, %60* %558, i32 0, i32 2
  %560 = load i32, i32* %559, align 4
  %561 = and i32 %560, 16777216
  %562 = icmp ne i32 %561, 0
  br i1 %562, label %563, label %566

563:                                              ; preds = %542
  %564 = load i32, i32* %38, align 4
  %565 = add i32 %564, 1
  store i32 %565, i32* %38, align 4
  br label %566

566:                                              ; preds = %563, %542
  %567 = load i32, i32* %38, align 4
  %568 = zext i32 %567 to i64
  %569 = mul i64 24, %568
  %570 = call noalias i8* @malloc(i64 %569) #2
  %571 = bitcast i8* %570 to %39*
  store %39* %571, %39** %40, align 8
  %572 = load %39*, %39** %40, align 8
  %573 = bitcast %39* %572 to i8*
  %574 = load %39*, %39** %39, align 8
  %575 = bitcast %39* %574 to i8*
  %576 = load i32, i32* %38, align 4
  %577 = zext i32 %576 to i64
  %578 = mul i64 24, %577
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %573, i8* align 8 %575, i64 %578, i1 false)
  %579 = load %39*, %39** %40, align 8
  %580 = getelementptr inbounds %39, %39* %579, i64 1
  %581 = load %37*, %37** %12, align 8
  %582 = bitcast %37* %581 to %60*
  %583 = getelementptr inbounds %60, %60* %582, i32 0, i32 8
  store %39* %580, %39** %583, align 8
  store i32 0, i32* %37, align 4
  br label %584

584:                                              ; preds = %637, %566
  %585 = load i32, i32* %37, align 4
  %586 = load i32, i32* %38, align 4
  %587 = icmp ult i32 %585, %586
  br i1 %587, label %588, label %640

588:                                              ; preds = %584
  %589 = load %39*, %39** %40, align 8
  %590 = load i32, i32* %37, align 4
  %591 = zext i32 %590 to i64
  %592 = getelementptr inbounds %39, %39* %589, i64 %591
  %593 = getelementptr inbounds %39, %39* %592, i32 0, i32 1
  %594 = load i64, i64* %593, align 8
  %595 = icmp ugt i64 %594, 511
  br i1 %595, label %596, label %636

596:                                              ; preds = %588
  %597 = bitcast i8** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %597) #2
  %598 = load %39*, %39** %40, align 8
  %599 = load i32, i32* %37, align 4
  %600 = zext i32 %599 to i64
  %601 = getelementptr inbounds %39, %39* %598, i64 %600
  %602 = getelementptr inbounds %39, %39* %601, i32 0, i32 1
  %603 = load i64, i64* %602, align 8
  %604 = inttoptr i64 %603 to i8*
  store i8* %604, i8** %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %42) #2
  store i8 0, i8* %42, align 1
  %605 = bitcast %10** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %605) #2
  %606 = load i8*, i8** %41, align 8
  %607 = getelementptr inbounds i8, i8* %606, i64 0
  %608 = load i8, i8* %607, align 1
  %609 = sext i8 %608 to i32
  %610 = icmp eq i32 %609, 63
  br i1 %610, label %611, label %614

611:                                              ; preds = %596
  %612 = load i8*, i8** %41, align 8
  %613 = getelementptr inbounds i8, i8* %612, i32 1
  store i8* %613, i8** %41, align 8
  store i8 1, i8* %42, align 1
  br label %614

614:                                              ; preds = %611, %596
  %615 = load %10* (%10*)*, %10* (%10*)** @zend_new_interned_string, align 8
  %616 = load i8*, i8** %41, align 8
  %617 = load i8*, i8** %41, align 8
  %618 = call i64 @strlen(i8* %617) #20
  %619 = call %10* @134(i8* %616, i64 %618, i32 1)
  %620 = call %10* %615(%10* %619)
  store %10* %620, %10** %43, align 8
  %621 = load %10*, %10** %43, align 8
  %622 = ptrtoint %10* %621 to i64
  %623 = load i8, i8* %42, align 1
  %624 = zext i8 %623 to i32
  %625 = icmp ne i32 %624, 0
  %626 = zext i1 %625 to i64
  %627 = select i1 %625, i64 1, i64 0
  %628 = or i64 %622, %627
  %629 = load %39*, %39** %40, align 8
  %630 = load i32, i32* %37, align 4
  %631 = zext i32 %630 to i64
  %632 = getelementptr inbounds %39, %39* %629, i64 %631
  %633 = getelementptr inbounds %39, %39* %632, i32 0, i32 1
  store i64 %628, i64* %633, align 8
  %634 = bitcast %10** %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %634) #2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %42) #2
  %635 = bitcast i8** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %635) #2
  br label %636

636:                                              ; preds = %614, %588
  br label %637

637:                                              ; preds = %636
  %638 = load i32, i32* %37, align 4
  %639 = add i32 %638, 1
  store i32 %639, i32* %37, align 4
  br label %584

640:                                              ; preds = %584
  %641 = bitcast %39** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %641) #2
  %642 = bitcast %39** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %642) #2
  %643 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %643) #2
  %644 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %644) #2
  br label %645

645:                                              ; preds = %640, %535, %529
  %646 = load %16*, %16** %6, align 8
  %647 = icmp ne %16* %646, null
  br i1 %647, label %648, label %860

648:                                              ; preds = %645
  %649 = load i64, i64* %30, align 8
  %650 = load i64, i64* %32, align 8
  %651 = icmp eq i64 %649, %650
  br i1 %651, label %652, label %666

652:                                              ; preds = %648
  %653 = load %37*, %37** %18, align 8
  %654 = icmp ne %37* %653, null
  br i1 %654, label %666, label %655

655:                                              ; preds = %652
  %656 = load %10*, %10** %29, align 8
  %657 = getelementptr inbounds %10, %10* %656, i32 0, i32 3
  %658 = getelementptr inbounds [1 x i8], [1 x i8]* %657, i32 0, i32 0
  %659 = load i8*, i8** %31, align 8
  %660 = load i64, i64* %32, align 8
  %661 = add i64 %660, 1
  %662 = call i32 @memcmp(i8* %658, i8* %659, i64 %661) #20
  %663 = icmp ne i32 %662, 0
  br i1 %663, label %666, label %664

664:                                              ; preds = %655
  %665 = load %37*, %37** %12, align 8
  store %37* %665, %37** %18, align 8
  br label %852

666:                                              ; preds = %655, %652, %648
  %667 = load %10*, %10** %29, align 8
  %668 = getelementptr inbounds %10, %10* %667, i32 0, i32 2
  %669 = load i64, i64* %668, align 8
  %670 = icmp eq i64 %669, 11
  br i1 %670, label %671, label %679

671:                                              ; preds = %666
  %672 = load %10*, %10** %29, align 8
  %673 = getelementptr inbounds %10, %10* %672, i32 0, i32 3
  %674 = getelementptr inbounds [1 x i8], [1 x i8]* %673, i32 0, i32 0
  %675 = call i32 @memcmp(i8* %674, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @67, i32 0, i32 0), i64 11) #20
  %676 = icmp ne i32 %675, 0
  br i1 %676, label %679, label %677

677:                                              ; preds = %671
  %678 = load %37*, %37** %12, align 8
  store %37* %678, %37** %18, align 8
  br label %851

679:                                              ; preds = %671, %666
  %680 = load %10*, %10** %29, align 8
  %681 = getelementptr inbounds %10, %10* %680, i32 0, i32 2
  %682 = load i64, i64* %681, align 8
  %683 = icmp eq i64 %682, 10
  br i1 %683, label %684, label %707

684:                                              ; preds = %679
  %685 = load %10*, %10** %29, align 8
  %686 = getelementptr inbounds %10, %10* %685, i32 0, i32 3
  %687 = getelementptr inbounds [1 x i8], [1 x i8]* %686, i32 0, i32 0
  %688 = call i32 @memcmp(i8* %687, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @42, i32 0, i32 0), i64 10) #20
  %689 = icmp ne i32 %688, 0
  br i1 %689, label %707, label %690

690:                                              ; preds = %684
  %691 = load %37*, %37** %12, align 8
  store %37* %691, %37** %19, align 8
  %692 = load %67*, %67** %13, align 8
  %693 = getelementptr inbounds %67, %67* %692, i32 0, i32 6
  %694 = load i32, i32* %693, align 8
  %695 = icmp ne i32 %694, 0
  br i1 %695, label %696, label %706

696:                                              ; preds = %690
  %697 = load i32, i32* %17, align 4
  %698 = load %16*, %16** %6, align 8
  %699 = getelementptr inbounds %16, %16* %698, i32 0, i32 1
  %700 = load %10*, %10** %699, align 8
  %701 = getelementptr inbounds %10, %10* %700, i32 0, i32 3
  %702 = getelementptr inbounds [1 x i8], [1 x i8]* %701, i32 0, i32 0
  %703 = load %34*, %34** %10, align 8
  %704 = getelementptr inbounds %34, %34* %703, i32 0, i32 0
  %705 = load i8*, i8** %704, align 8
  call void (i32, i8*, ...) @zend_error(i32 %697, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @43, i32 0, i32 0), i8* %702, i8* %705)
  br label %706

706:                                              ; preds = %696, %690
  br label %850

707:                                              ; preds = %684, %679
  %708 = load %10*, %10** %29, align 8
  %709 = getelementptr inbounds %10, %10* %708, i32 0, i32 2
  %710 = load i64, i64* %709, align 8
  %711 = icmp eq i64 %710, 7
  br i1 %711, label %712, label %720

712:                                              ; preds = %707
  %713 = load %10*, %10** %29, align 8
  %714 = getelementptr inbounds %10, %10* %713, i32 0, i32 3
  %715 = getelementptr inbounds [1 x i8], [1 x i8]* %714, i32 0, i32 0
  %716 = call i32 @memcmp(i8* %715, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @44, i32 0, i32 0), i64 7) #20
  %717 = icmp ne i32 %716, 0
  br i1 %717, label %720, label %718

718:                                              ; preds = %712
  %719 = load %37*, %37** %12, align 8
  store %37* %719, %37** %20, align 8
  br label %849

720:                                              ; preds = %712, %707
  %721 = load %10*, %10** %29, align 8
  %722 = getelementptr inbounds %10, %10* %721, i32 0, i32 2
  %723 = load i64, i64* %722, align 8
  %724 = icmp eq i64 %723, 6
  br i1 %724, label %725, label %733

725:                                              ; preds = %720
  %726 = load %10*, %10** %29, align 8
  %727 = getelementptr inbounds %10, %10* %726, i32 0, i32 3
  %728 = getelementptr inbounds [1 x i8], [1 x i8]* %727, i32 0, i32 0
  %729 = call i32 @memcmp(i8* %728, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @53, i32 0, i32 0), i64 6) #20
  %730 = icmp ne i32 %729, 0
  br i1 %730, label %733, label %731

731:                                              ; preds = %725
  %732 = load %37*, %37** %12, align 8
  store %37* %732, %37** %25, align 8
  br label %848

733:                                              ; preds = %725, %720
  %734 = load %10*, %10** %29, align 8
  %735 = getelementptr inbounds %10, %10* %734, i32 0, i32 2
  %736 = load i64, i64* %735, align 8
  %737 = icmp eq i64 %736, 12
  br i1 %737, label %738, label %746

738:                                              ; preds = %733
  %739 = load %10*, %10** %29, align 8
  %740 = getelementptr inbounds %10, %10* %739, i32 0, i32 3
  %741 = getelementptr inbounds [1 x i8], [1 x i8]* %740, i32 0, i32 0
  %742 = call i32 @memcmp(i8* %741, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @54, i32 0, i32 0), i64 12) #20
  %743 = icmp ne i32 %742, 0
  br i1 %743, label %746, label %744

744:                                              ; preds = %738
  %745 = load %37*, %37** %12, align 8
  store %37* %745, %37** %26, align 8
  br label %847

746:                                              ; preds = %738, %733
  %747 = load %10*, %10** %29, align 8
  %748 = getelementptr inbounds %10, %10* %747, i32 0, i32 2
  %749 = load i64, i64* %748, align 8
  %750 = icmp eq i64 %749, 10
  br i1 %750, label %751, label %759

751:                                              ; preds = %746
  %752 = load %10*, %10** %29, align 8
  %753 = getelementptr inbounds %10, %10* %752, i32 0, i32 3
  %754 = getelementptr inbounds [1 x i8], [1 x i8]* %753, i32 0, i32 0
  %755 = call i32 @memcmp(i8* %754, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @57, i32 0, i32 0), i64 10) #20
  %756 = icmp ne i32 %755, 0
  br i1 %756, label %759, label %757

757:                                              ; preds = %751
  %758 = load %37*, %37** %12, align 8
  store %37* %758, %37** %27, align 8
  br label %846

759:                                              ; preds = %751, %746
  %760 = load %10*, %10** %29, align 8
  %761 = getelementptr inbounds %10, %10* %760, i32 0, i32 2
  %762 = load i64, i64* %761, align 8
  %763 = icmp eq i64 %762, 5
  br i1 %763, label %764, label %776

764:                                              ; preds = %759
  %765 = load %10*, %10** %29, align 8
  %766 = getelementptr inbounds %10, %10* %765, i32 0, i32 3
  %767 = getelementptr inbounds [1 x i8], [1 x i8]* %766, i32 0, i32 0
  %768 = call i32 @memcmp(i8* %767, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @46, i32 0, i32 0), i64 5) #20
  %769 = icmp ne i32 %768, 0
  br i1 %769, label %776, label %770

770:                                              ; preds = %764
  %771 = load %37*, %37** %12, align 8
  store %37* %771, %37** %21, align 8
  %772 = load %16*, %16** %6, align 8
  %773 = getelementptr inbounds %16, %16* %772, i32 0, i32 4
  %774 = load i32, i32* %773, align 4
  %775 = or i32 %774, 16777216
  store i32 %775, i32* %773, align 4
  br label %845

776:                                              ; preds = %764, %759
  %777 = load %10*, %10** %29, align 8
  %778 = getelementptr inbounds %10, %10* %777, i32 0, i32 2
  %779 = load i64, i64* %778, align 8
  %780 = icmp eq i64 %779, 5
  br i1 %780, label %781, label %793

781:                                              ; preds = %776
  %782 = load %10*, %10** %29, align 8
  %783 = getelementptr inbounds %10, %10* %782, i32 0, i32 3
  %784 = getelementptr inbounds [1 x i8], [1 x i8]* %783, i32 0, i32 0
  %785 = call i32 @memcmp(i8* %784, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @49, i32 0, i32 0), i64 5) #20
  %786 = icmp ne i32 %785, 0
  br i1 %786, label %793, label %787

787:                                              ; preds = %781
  %788 = load %37*, %37** %12, align 8
  store %37* %788, %37** %22, align 8
  %789 = load %16*, %16** %6, align 8
  %790 = getelementptr inbounds %16, %16* %789, i32 0, i32 4
  %791 = load i32, i32* %790, align 4
  %792 = or i32 %791, 16777216
  store i32 %792, i32* %790, align 4
  br label %844

793:                                              ; preds = %781, %776
  %794 = load %10*, %10** %29, align 8
  %795 = getelementptr inbounds %10, %10* %794, i32 0, i32 2
  %796 = load i64, i64* %795, align 8
  %797 = icmp eq i64 %796, 7
  br i1 %797, label %798, label %810

798:                                              ; preds = %793
  %799 = load %10*, %10** %29, align 8
  %800 = getelementptr inbounds %10, %10* %799, i32 0, i32 3
  %801 = getelementptr inbounds [1 x i8], [1 x i8]* %800, i32 0, i32 0
  %802 = call i32 @memcmp(i8* %801, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @51, i32 0, i32 0), i64 7) #20
  %803 = icmp ne i32 %802, 0
  br i1 %803, label %810, label %804

804:                                              ; preds = %798
  %805 = load %37*, %37** %12, align 8
  store %37* %805, %37** %23, align 8
  %806 = load %16*, %16** %6, align 8
  %807 = getelementptr inbounds %16, %16* %806, i32 0, i32 4
  %808 = load i32, i32* %807, align 4
  %809 = or i32 %808, 16777216
  store i32 %809, i32* %807, align 4
  br label %843

810:                                              ; preds = %798, %793
  %811 = load %10*, %10** %29, align 8
  %812 = getelementptr inbounds %10, %10* %811, i32 0, i32 2
  %813 = load i64, i64* %812, align 8
  %814 = icmp eq i64 %813, 7
  br i1 %814, label %815, label %827

815:                                              ; preds = %810
  %816 = load %10*, %10** %29, align 8
  %817 = getelementptr inbounds %10, %10* %816, i32 0, i32 3
  %818 = getelementptr inbounds [1 x i8], [1 x i8]* %817, i32 0, i32 0
  %819 = call i32 @memcmp(i8* %818, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @52, i32 0, i32 0), i64 7) #20
  %820 = icmp ne i32 %819, 0
  br i1 %820, label %827, label %821

821:                                              ; preds = %815
  %822 = load %37*, %37** %12, align 8
  store %37* %822, %37** %24, align 8
  %823 = load %16*, %16** %6, align 8
  %824 = getelementptr inbounds %16, %16* %823, i32 0, i32 4
  %825 = load i32, i32* %824, align 4
  %826 = or i32 %825, 16777216
  store i32 %826, i32* %824, align 4
  br label %842

827:                                              ; preds = %815, %810
  %828 = load %10*, %10** %29, align 8
  %829 = getelementptr inbounds %10, %10* %828, i32 0, i32 2
  %830 = load i64, i64* %829, align 8
  %831 = icmp eq i64 %830, 11
  br i1 %831, label %832, label %840

832:                                              ; preds = %827
  %833 = load %10*, %10** %29, align 8
  %834 = getelementptr inbounds %10, %10* %833, i32 0, i32 3
  %835 = getelementptr inbounds [1 x i8], [1 x i8]* %834, i32 0, i32 0
  %836 = call i32 @memcmp(i8* %835, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @59, i32 0, i32 0), i64 11) #20
  %837 = icmp ne i32 %836, 0
  br i1 %837, label %840, label %838

838:                                              ; preds = %832
  %839 = load %37*, %37** %12, align 8
  store %37* %839, %37** %28, align 8
  br label %841

840:                                              ; preds = %832, %827
  store %37* null, %37** %12, align 8
  br label %841

841:                                              ; preds = %840, %838
  br label %842

842:                                              ; preds = %841, %821
  br label %843

843:                                              ; preds = %842, %804
  br label %844

844:                                              ; preds = %843, %787
  br label %845

845:                                              ; preds = %844, %770
  br label %846

846:                                              ; preds = %845, %757
  br label %847

847:                                              ; preds = %846, %744
  br label %848

848:                                              ; preds = %847, %731
  br label %849

849:                                              ; preds = %848, %718
  br label %850

850:                                              ; preds = %849, %706
  br label %851

851:                                              ; preds = %850, %677
  br label %852

852:                                              ; preds = %851, %664
  %853 = load %37*, %37** %12, align 8
  %854 = icmp ne %37* %853, null
  br i1 %854, label %855, label %859

855:                                              ; preds = %852
  %856 = load %16*, %16** %6, align 8
  %857 = load %37*, %37** %12, align 8
  %858 = load i32, i32* %17, align 4
  call void @zend_check_magic_method_implementation(%16* %856, %37* %857, i32 %858)
  br label %859

859:                                              ; preds = %855, %852
  br label %860

860:                                              ; preds = %859, %645
  %861 = load %34*, %34** %10, align 8
  %862 = getelementptr inbounds %34, %34* %861, i32 1
  store %34* %862, %34** %10, align 8
  %863 = load i32, i32* %14, align 4
  %864 = add nsw i32 %863, 1
  store i32 %864, i32* %14, align 4
  %865 = load %10*, %10** %29, align 8
  call void @135(%10* %865)
  br label %132

866:                                              ; preds = %481, %132
  %867 = load i32, i32* %15, align 4
  %868 = icmp ne i32 %867, 0
  br i1 %868, label %869, label %927

869:                                              ; preds = %866
  %870 = load %16*, %16** %6, align 8
  %871 = icmp ne %16* %870, null
  br i1 %871, label %872, label %874

872:                                              ; preds = %869
  %873 = load i8*, i8** %31, align 8
  call void @_efree(i8* %873)
  br label %874

874:                                              ; preds = %872, %869
  br label %875

875:                                              ; preds = %919, %874
  %876 = load %34*, %34** %10, align 8
  %877 = getelementptr inbounds %34, %34* %876, i32 0, i32 0
  %878 = load i8*, i8** %877, align 8
  %879 = icmp ne i8* %878, null
  br i1 %879, label %880, label %923

880:                                              ; preds = %875
  %881 = load %34*, %34** %10, align 8
  %882 = getelementptr inbounds %34, %34* %881, i32 0, i32 0
  %883 = load i8*, i8** %882, align 8
  %884 = call i64 @strlen(i8* %883) #20
  store i64 %884, i64* %30, align 8
  %885 = load i64, i64* %30, align 8
  %886 = call %10* @138(i64 %885, i32 0)
  store %10* %886, %10** %29, align 8
  %887 = load %10*, %10** %29, align 8
  %888 = getelementptr inbounds %10, %10* %887, i32 0, i32 3
  %889 = getelementptr inbounds [1 x i8], [1 x i8]* %888, i32 0, i32 0
  %890 = load %34*, %34** %10, align 8
  %891 = getelementptr inbounds %34, %34* %890, i32 0, i32 0
  %892 = load i8*, i8** %891, align 8
  %893 = load i64, i64* %30, align 8
  %894 = call i8* @zend_str_tolower_copy(i8* %889, i8* %892, i64 %893)
  %895 = load %5*, %5** %16, align 8
  %896 = load %10*, %10** %29, align 8
  %897 = call zeroext i8 @zend_hash_exists(%5* %895, %10* %896)
  %898 = icmp ne i8 %897, 0
  br i1 %898, label %899, label %919

899:                                              ; preds = %880
  %900 = load i32, i32* %17, align 4
  %901 = load %16*, %16** %6, align 8
  %902 = icmp ne %16* %901, null
  br i1 %902, label %903, label %909

903:                                              ; preds = %899
  %904 = load %16*, %16** %6, align 8
  %905 = getelementptr inbounds %16, %16* %904, i32 0, i32 1
  %906 = load %10*, %10** %905, align 8
  %907 = getelementptr inbounds %10, %10* %906, i32 0, i32 3
  %908 = getelementptr inbounds [1 x i8], [1 x i8]* %907, i32 0, i32 0
  br label %910

909:                                              ; preds = %899
  br label %910

910:                                              ; preds = %909, %903
  %911 = phi i8* [ %908, %903 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), %909 ]
  %912 = load %16*, %16** %6, align 8
  %913 = icmp ne %16* %912, null
  %914 = zext i1 %913 to i64
  %915 = select i1 %913, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0)
  %916 = load %34*, %34** %10, align 8
  %917 = getelementptr inbounds %34, %34* %916, i32 0, i32 0
  %918 = load i8*, i8** %917, align 8
  call void (i32, i8*, ...) @zend_error(i32 %900, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @68, i32 0, i32 0), i8* %911, i8* %915, i8* %918)
  br label %919

919:                                              ; preds = %910, %880
  %920 = load %10*, %10** %29, align 8
  call void @140(%10* %920)
  %921 = load %34*, %34** %10, align 8
  %922 = getelementptr inbounds %34, %34* %921, i32 1
  store %34* %922, %34** %10, align 8
  br label %875

923:                                              ; preds = %875
  %924 = load %34*, %34** %7, align 8
  %925 = load i32, i32* %14, align 4
  %926 = load %5*, %5** %16, align 8
  call void @zend_unregister_functions(%34* %924, i32 %925, %5* %926)
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %35, align 4
  br label %1370

927:                                              ; preds = %866
  %928 = load %16*, %16** %6, align 8
  %929 = icmp ne %16* %928, null
  br i1 %929, label %930, label %1369

930:                                              ; preds = %927
  %931 = load %37*, %37** %18, align 8
  %932 = load %16*, %16** %6, align 8
  %933 = getelementptr inbounds %16, %16* %932, i32 0, i32 13
  store %37* %931, %37** %933, align 8
  %934 = load %37*, %37** %19, align 8
  %935 = load %16*, %16** %6, align 8
  %936 = getelementptr inbounds %16, %16* %935, i32 0, i32 14
  store %37* %934, %37** %936, align 8
  %937 = load %37*, %37** %20, align 8
  %938 = load %16*, %16** %6, align 8
  %939 = getelementptr inbounds %16, %16* %938, i32 0, i32 15
  store %37* %937, %37** %939, align 8
  %940 = load %37*, %37** %25, align 8
  %941 = load %16*, %16** %6, align 8
  %942 = getelementptr inbounds %16, %16* %941, i32 0, i32 20
  store %37* %940, %37** %942, align 8
  %943 = load %37*, %37** %26, align 8
  %944 = load %16*, %16** %6, align 8
  %945 = getelementptr inbounds %16, %16* %944, i32 0, i32 21
  store %37* %943, %37** %945, align 8
  %946 = load %37*, %37** %27, align 8
  %947 = load %16*, %16** %6, align 8
  %948 = getelementptr inbounds %16, %16* %947, i32 0, i32 22
  store %37* %946, %37** %948, align 8
  %949 = load %37*, %37** %21, align 8
  %950 = load %16*, %16** %6, align 8
  %951 = getelementptr inbounds %16, %16* %950, i32 0, i32 16
  store %37* %949, %37** %951, align 8
  %952 = load %37*, %37** %22, align 8
  %953 = load %16*, %16** %6, align 8
  %954 = getelementptr inbounds %16, %16* %953, i32 0, i32 17
  store %37* %952, %37** %954, align 8
  %955 = load %37*, %37** %23, align 8
  %956 = load %16*, %16** %6, align 8
  %957 = getelementptr inbounds %16, %16* %956, i32 0, i32 18
  store %37* %955, %37** %957, align 8
  %958 = load %37*, %37** %24, align 8
  %959 = load %16*, %16** %6, align 8
  %960 = getelementptr inbounds %16, %16* %959, i32 0, i32 19
  store %37* %958, %37** %960, align 8
  %961 = load %37*, %37** %28, align 8
  %962 = load %16*, %16** %6, align 8
  %963 = getelementptr inbounds %16, %16* %962, i32 0, i32 23
  store %37* %961, %37** %963, align 8
  %964 = load %37*, %37** %18, align 8
  %965 = icmp ne %37* %964, null
  br i1 %965, label %966, label %997

966:                                              ; preds = %930
  %967 = load %37*, %37** %18, align 8
  %968 = bitcast %37* %967 to %60*
  %969 = getelementptr inbounds %60, %60* %968, i32 0, i32 2
  %970 = load i32, i32* %969, align 4
  %971 = or i32 %970, 8192
  store i32 %971, i32* %969, align 4
  %972 = load %37*, %37** %18, align 8
  %973 = bitcast %37* %972 to %60*
  %974 = getelementptr inbounds %60, %60* %973, i32 0, i32 2
  %975 = load i32, i32* %974, align 4
  %976 = and i32 %975, 1
  %977 = icmp ne i32 %976, 0
  br i1 %977, label %978, label %991

978:                                              ; preds = %966
  %979 = load i32, i32* %17, align 4
  %980 = load %16*, %16** %6, align 8
  %981 = getelementptr inbounds %16, %16* %980, i32 0, i32 1
  %982 = load %10*, %10** %981, align 8
  %983 = getelementptr inbounds %10, %10* %982, i32 0, i32 3
  %984 = getelementptr inbounds [1 x i8], [1 x i8]* %983, i32 0, i32 0
  %985 = load %37*, %37** %18, align 8
  %986 = bitcast %37* %985 to %60*
  %987 = getelementptr inbounds %60, %60* %986, i32 0, i32 3
  %988 = load %10*, %10** %987, align 8
  %989 = getelementptr inbounds %10, %10* %988, i32 0, i32 3
  %990 = getelementptr inbounds [1 x i8], [1 x i8]* %989, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %979, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @69, i32 0, i32 0), i8* %984, i8* %990)
  br label %991

991:                                              ; preds = %978, %966
  %992 = load %37*, %37** %18, align 8
  %993 = bitcast %37* %992 to %60*
  %994 = getelementptr inbounds %60, %60* %993, i32 0, i32 2
  %995 = load i32, i32* %994, align 4
  %996 = and i32 %995, -65537
  store i32 %996, i32* %994, align 4
  br label %997

997:                                              ; preds = %991, %930
  %998 = load %37*, %37** %19, align 8
  %999 = icmp ne %37* %998, null
  br i1 %999, label %1000, label %1031

1000:                                             ; preds = %997
  %1001 = load %37*, %37** %19, align 8
  %1002 = bitcast %37* %1001 to %60*
  %1003 = getelementptr inbounds %60, %60* %1002, i32 0, i32 2
  %1004 = load i32, i32* %1003, align 4
  %1005 = or i32 %1004, 16384
  store i32 %1005, i32* %1003, align 4
  %1006 = load %37*, %37** %19, align 8
  %1007 = bitcast %37* %1006 to %60*
  %1008 = getelementptr inbounds %60, %60* %1007, i32 0, i32 2
  %1009 = load i32, i32* %1008, align 4
  %1010 = and i32 %1009, 1
  %1011 = icmp ne i32 %1010, 0
  br i1 %1011, label %1012, label %1025

1012:                                             ; preds = %1000
  %1013 = load i32, i32* %17, align 4
  %1014 = load %16*, %16** %6, align 8
  %1015 = getelementptr inbounds %16, %16* %1014, i32 0, i32 1
  %1016 = load %10*, %10** %1015, align 8
  %1017 = getelementptr inbounds %10, %10* %1016, i32 0, i32 3
  %1018 = getelementptr inbounds [1 x i8], [1 x i8]* %1017, i32 0, i32 0
  %1019 = load %37*, %37** %19, align 8
  %1020 = bitcast %37* %1019 to %60*
  %1021 = getelementptr inbounds %60, %60* %1020, i32 0, i32 3
  %1022 = load %10*, %10** %1021, align 8
  %1023 = getelementptr inbounds %10, %10* %1022, i32 0, i32 3
  %1024 = getelementptr inbounds [1 x i8], [1 x i8]* %1023, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1013, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @70, i32 0, i32 0), i8* %1018, i8* %1024)
  br label %1025

1025:                                             ; preds = %1012, %1000
  %1026 = load %37*, %37** %19, align 8
  %1027 = bitcast %37* %1026 to %60*
  %1028 = getelementptr inbounds %60, %60* %1027, i32 0, i32 2
  %1029 = load i32, i32* %1028, align 4
  %1030 = and i32 %1029, -65537
  store i32 %1030, i32* %1028, align 4
  br label %1031

1031:                                             ; preds = %1025, %997
  %1032 = load %37*, %37** %20, align 8
  %1033 = icmp ne %37* %1032, null
  br i1 %1033, label %1034, label %1060

1034:                                             ; preds = %1031
  %1035 = load %37*, %37** %20, align 8
  %1036 = bitcast %37* %1035 to %60*
  %1037 = getelementptr inbounds %60, %60* %1036, i32 0, i32 2
  %1038 = load i32, i32* %1037, align 4
  %1039 = and i32 %1038, 1
  %1040 = icmp ne i32 %1039, 0
  br i1 %1040, label %1041, label %1054

1041:                                             ; preds = %1034
  %1042 = load i32, i32* %17, align 4
  %1043 = load %16*, %16** %6, align 8
  %1044 = getelementptr inbounds %16, %16* %1043, i32 0, i32 1
  %1045 = load %10*, %10** %1044, align 8
  %1046 = getelementptr inbounds %10, %10* %1045, i32 0, i32 3
  %1047 = getelementptr inbounds [1 x i8], [1 x i8]* %1046, i32 0, i32 0
  %1048 = load %37*, %37** %20, align 8
  %1049 = bitcast %37* %1048 to %60*
  %1050 = getelementptr inbounds %60, %60* %1049, i32 0, i32 3
  %1051 = load %10*, %10** %1050, align 8
  %1052 = getelementptr inbounds %10, %10* %1051, i32 0, i32 3
  %1053 = getelementptr inbounds [1 x i8], [1 x i8]* %1052, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1042, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @71, i32 0, i32 0), i8* %1047, i8* %1053)
  br label %1054

1054:                                             ; preds = %1041, %1034
  %1055 = load %37*, %37** %20, align 8
  %1056 = bitcast %37* %1055 to %60*
  %1057 = getelementptr inbounds %60, %60* %1056, i32 0, i32 2
  %1058 = load i32, i32* %1057, align 4
  %1059 = and i32 %1058, -65537
  store i32 %1059, i32* %1057, align 4
  br label %1060

1060:                                             ; preds = %1054, %1031
  %1061 = load %37*, %37** %25, align 8
  %1062 = icmp ne %37* %1061, null
  br i1 %1062, label %1063, label %1089

1063:                                             ; preds = %1060
  %1064 = load %37*, %37** %25, align 8
  %1065 = bitcast %37* %1064 to %60*
  %1066 = getelementptr inbounds %60, %60* %1065, i32 0, i32 2
  %1067 = load i32, i32* %1066, align 4
  %1068 = and i32 %1067, 1
  %1069 = icmp ne i32 %1068, 0
  br i1 %1069, label %1070, label %1083

1070:                                             ; preds = %1063
  %1071 = load i32, i32* %17, align 4
  %1072 = load %16*, %16** %6, align 8
  %1073 = getelementptr inbounds %16, %16* %1072, i32 0, i32 1
  %1074 = load %10*, %10** %1073, align 8
  %1075 = getelementptr inbounds %10, %10* %1074, i32 0, i32 3
  %1076 = getelementptr inbounds [1 x i8], [1 x i8]* %1075, i32 0, i32 0
  %1077 = load %37*, %37** %25, align 8
  %1078 = bitcast %37* %1077 to %60*
  %1079 = getelementptr inbounds %60, %60* %1078, i32 0, i32 3
  %1080 = load %10*, %10** %1079, align 8
  %1081 = getelementptr inbounds %10, %10* %1080, i32 0, i32 3
  %1082 = getelementptr inbounds [1 x i8], [1 x i8]* %1081, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1071, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @72, i32 0, i32 0), i8* %1076, i8* %1082)
  br label %1083

1083:                                             ; preds = %1070, %1063
  %1084 = load %37*, %37** %25, align 8
  %1085 = bitcast %37* %1084 to %60*
  %1086 = getelementptr inbounds %60, %60* %1085, i32 0, i32 2
  %1087 = load i32, i32* %1086, align 4
  %1088 = and i32 %1087, -65537
  store i32 %1088, i32* %1086, align 4
  br label %1089

1089:                                             ; preds = %1083, %1060
  %1090 = load %37*, %37** %26, align 8
  %1091 = icmp ne %37* %1090, null
  br i1 %1091, label %1092, label %1118

1092:                                             ; preds = %1089
  %1093 = load %37*, %37** %26, align 8
  %1094 = bitcast %37* %1093 to %60*
  %1095 = getelementptr inbounds %60, %60* %1094, i32 0, i32 2
  %1096 = load i32, i32* %1095, align 4
  %1097 = and i32 %1096, 1
  %1098 = icmp ne i32 %1097, 0
  br i1 %1098, label %1112, label %1099

1099:                                             ; preds = %1092
  %1100 = load i32, i32* %17, align 4
  %1101 = load %16*, %16** %6, align 8
  %1102 = getelementptr inbounds %16, %16* %1101, i32 0, i32 1
  %1103 = load %10*, %10** %1102, align 8
  %1104 = getelementptr inbounds %10, %10* %1103, i32 0, i32 3
  %1105 = getelementptr inbounds [1 x i8], [1 x i8]* %1104, i32 0, i32 0
  %1106 = load %37*, %37** %26, align 8
  %1107 = bitcast %37* %1106 to %60*
  %1108 = getelementptr inbounds %60, %60* %1107, i32 0, i32 3
  %1109 = load %10*, %10** %1108, align 8
  %1110 = getelementptr inbounds %10, %10* %1109, i32 0, i32 3
  %1111 = getelementptr inbounds [1 x i8], [1 x i8]* %1110, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1100, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @73, i32 0, i32 0), i8* %1105, i8* %1111)
  br label %1112

1112:                                             ; preds = %1099, %1092
  %1113 = load %37*, %37** %26, align 8
  %1114 = bitcast %37* %1113 to %60*
  %1115 = getelementptr inbounds %60, %60* %1114, i32 0, i32 2
  %1116 = load i32, i32* %1115, align 4
  %1117 = or i32 %1116, 1
  store i32 %1117, i32* %1115, align 4
  br label %1118

1118:                                             ; preds = %1112, %1089
  %1119 = load %37*, %37** %27, align 8
  %1120 = icmp ne %37* %1119, null
  br i1 %1120, label %1121, label %1147

1121:                                             ; preds = %1118
  %1122 = load %37*, %37** %27, align 8
  %1123 = bitcast %37* %1122 to %60*
  %1124 = getelementptr inbounds %60, %60* %1123, i32 0, i32 2
  %1125 = load i32, i32* %1124, align 4
  %1126 = and i32 %1125, 1
  %1127 = icmp ne i32 %1126, 0
  br i1 %1127, label %1128, label %1141

1128:                                             ; preds = %1121
  %1129 = load i32, i32* %17, align 4
  %1130 = load %16*, %16** %6, align 8
  %1131 = getelementptr inbounds %16, %16* %1130, i32 0, i32 1
  %1132 = load %10*, %10** %1131, align 8
  %1133 = getelementptr inbounds %10, %10* %1132, i32 0, i32 3
  %1134 = getelementptr inbounds [1 x i8], [1 x i8]* %1133, i32 0, i32 0
  %1135 = load %37*, %37** %27, align 8
  %1136 = bitcast %37* %1135 to %60*
  %1137 = getelementptr inbounds %60, %60* %1136, i32 0, i32 3
  %1138 = load %10*, %10** %1137, align 8
  %1139 = getelementptr inbounds %10, %10* %1138, i32 0, i32 3
  %1140 = getelementptr inbounds [1 x i8], [1 x i8]* %1139, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1129, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @72, i32 0, i32 0), i8* %1134, i8* %1140)
  br label %1141

1141:                                             ; preds = %1128, %1121
  %1142 = load %37*, %37** %27, align 8
  %1143 = bitcast %37* %1142 to %60*
  %1144 = getelementptr inbounds %60, %60* %1143, i32 0, i32 2
  %1145 = load i32, i32* %1144, align 4
  %1146 = and i32 %1145, -65537
  store i32 %1146, i32* %1144, align 4
  br label %1147

1147:                                             ; preds = %1141, %1118
  %1148 = load %37*, %37** %21, align 8
  %1149 = icmp ne %37* %1148, null
  br i1 %1149, label %1150, label %1176

1150:                                             ; preds = %1147
  %1151 = load %37*, %37** %21, align 8
  %1152 = bitcast %37* %1151 to %60*
  %1153 = getelementptr inbounds %60, %60* %1152, i32 0, i32 2
  %1154 = load i32, i32* %1153, align 4
  %1155 = and i32 %1154, 1
  %1156 = icmp ne i32 %1155, 0
  br i1 %1156, label %1157, label %1170

1157:                                             ; preds = %1150
  %1158 = load i32, i32* %17, align 4
  %1159 = load %16*, %16** %6, align 8
  %1160 = getelementptr inbounds %16, %16* %1159, i32 0, i32 1
  %1161 = load %10*, %10** %1160, align 8
  %1162 = getelementptr inbounds %10, %10* %1161, i32 0, i32 3
  %1163 = getelementptr inbounds [1 x i8], [1 x i8]* %1162, i32 0, i32 0
  %1164 = load %37*, %37** %21, align 8
  %1165 = bitcast %37* %1164 to %60*
  %1166 = getelementptr inbounds %60, %60* %1165, i32 0, i32 3
  %1167 = load %10*, %10** %1166, align 8
  %1168 = getelementptr inbounds %10, %10* %1167, i32 0, i32 3
  %1169 = getelementptr inbounds [1 x i8], [1 x i8]* %1168, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1158, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @72, i32 0, i32 0), i8* %1163, i8* %1169)
  br label %1170

1170:                                             ; preds = %1157, %1150
  %1171 = load %37*, %37** %21, align 8
  %1172 = bitcast %37* %1171 to %60*
  %1173 = getelementptr inbounds %60, %60* %1172, i32 0, i32 2
  %1174 = load i32, i32* %1173, align 4
  %1175 = and i32 %1174, -65537
  store i32 %1175, i32* %1173, align 4
  br label %1176

1176:                                             ; preds = %1170, %1147
  %1177 = load %37*, %37** %22, align 8
  %1178 = icmp ne %37* %1177, null
  br i1 %1178, label %1179, label %1205

1179:                                             ; preds = %1176
  %1180 = load %37*, %37** %22, align 8
  %1181 = bitcast %37* %1180 to %60*
  %1182 = getelementptr inbounds %60, %60* %1181, i32 0, i32 2
  %1183 = load i32, i32* %1182, align 4
  %1184 = and i32 %1183, 1
  %1185 = icmp ne i32 %1184, 0
  br i1 %1185, label %1186, label %1199

1186:                                             ; preds = %1179
  %1187 = load i32, i32* %17, align 4
  %1188 = load %16*, %16** %6, align 8
  %1189 = getelementptr inbounds %16, %16* %1188, i32 0, i32 1
  %1190 = load %10*, %10** %1189, align 8
  %1191 = getelementptr inbounds %10, %10* %1190, i32 0, i32 3
  %1192 = getelementptr inbounds [1 x i8], [1 x i8]* %1191, i32 0, i32 0
  %1193 = load %37*, %37** %22, align 8
  %1194 = bitcast %37* %1193 to %60*
  %1195 = getelementptr inbounds %60, %60* %1194, i32 0, i32 3
  %1196 = load %10*, %10** %1195, align 8
  %1197 = getelementptr inbounds %10, %10* %1196, i32 0, i32 3
  %1198 = getelementptr inbounds [1 x i8], [1 x i8]* %1197, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1187, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @72, i32 0, i32 0), i8* %1192, i8* %1198)
  br label %1199

1199:                                             ; preds = %1186, %1179
  %1200 = load %37*, %37** %22, align 8
  %1201 = bitcast %37* %1200 to %60*
  %1202 = getelementptr inbounds %60, %60* %1201, i32 0, i32 2
  %1203 = load i32, i32* %1202, align 4
  %1204 = and i32 %1203, -65537
  store i32 %1204, i32* %1202, align 4
  br label %1205

1205:                                             ; preds = %1199, %1176
  %1206 = load %37*, %37** %23, align 8
  %1207 = icmp ne %37* %1206, null
  br i1 %1207, label %1208, label %1234

1208:                                             ; preds = %1205
  %1209 = load %37*, %37** %23, align 8
  %1210 = bitcast %37* %1209 to %60*
  %1211 = getelementptr inbounds %60, %60* %1210, i32 0, i32 2
  %1212 = load i32, i32* %1211, align 4
  %1213 = and i32 %1212, 1
  %1214 = icmp ne i32 %1213, 0
  br i1 %1214, label %1215, label %1228

1215:                                             ; preds = %1208
  %1216 = load i32, i32* %17, align 4
  %1217 = load %16*, %16** %6, align 8
  %1218 = getelementptr inbounds %16, %16* %1217, i32 0, i32 1
  %1219 = load %10*, %10** %1218, align 8
  %1220 = getelementptr inbounds %10, %10* %1219, i32 0, i32 3
  %1221 = getelementptr inbounds [1 x i8], [1 x i8]* %1220, i32 0, i32 0
  %1222 = load %37*, %37** %23, align 8
  %1223 = bitcast %37* %1222 to %60*
  %1224 = getelementptr inbounds %60, %60* %1223, i32 0, i32 3
  %1225 = load %10*, %10** %1224, align 8
  %1226 = getelementptr inbounds %10, %10* %1225, i32 0, i32 3
  %1227 = getelementptr inbounds [1 x i8], [1 x i8]* %1226, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1216, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @72, i32 0, i32 0), i8* %1221, i8* %1227)
  br label %1228

1228:                                             ; preds = %1215, %1208
  %1229 = load %37*, %37** %23, align 8
  %1230 = bitcast %37* %1229 to %60*
  %1231 = getelementptr inbounds %60, %60* %1230, i32 0, i32 2
  %1232 = load i32, i32* %1231, align 4
  %1233 = and i32 %1232, -65537
  store i32 %1233, i32* %1231, align 4
  br label %1234

1234:                                             ; preds = %1228, %1205
  %1235 = load %37*, %37** %24, align 8
  %1236 = icmp ne %37* %1235, null
  br i1 %1236, label %1237, label %1263

1237:                                             ; preds = %1234
  %1238 = load %37*, %37** %24, align 8
  %1239 = bitcast %37* %1238 to %60*
  %1240 = getelementptr inbounds %60, %60* %1239, i32 0, i32 2
  %1241 = load i32, i32* %1240, align 4
  %1242 = and i32 %1241, 1
  %1243 = icmp ne i32 %1242, 0
  br i1 %1243, label %1244, label %1257

1244:                                             ; preds = %1237
  %1245 = load i32, i32* %17, align 4
  %1246 = load %16*, %16** %6, align 8
  %1247 = getelementptr inbounds %16, %16* %1246, i32 0, i32 1
  %1248 = load %10*, %10** %1247, align 8
  %1249 = getelementptr inbounds %10, %10* %1248, i32 0, i32 3
  %1250 = getelementptr inbounds [1 x i8], [1 x i8]* %1249, i32 0, i32 0
  %1251 = load %37*, %37** %24, align 8
  %1252 = bitcast %37* %1251 to %60*
  %1253 = getelementptr inbounds %60, %60* %1252, i32 0, i32 3
  %1254 = load %10*, %10** %1253, align 8
  %1255 = getelementptr inbounds %10, %10* %1254, i32 0, i32 3
  %1256 = getelementptr inbounds [1 x i8], [1 x i8]* %1255, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1245, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @72, i32 0, i32 0), i8* %1250, i8* %1256)
  br label %1257

1257:                                             ; preds = %1244, %1237
  %1258 = load %37*, %37** %24, align 8
  %1259 = bitcast %37* %1258 to %60*
  %1260 = getelementptr inbounds %60, %60* %1259, i32 0, i32 2
  %1261 = load i32, i32* %1260, align 4
  %1262 = and i32 %1261, -65537
  store i32 %1262, i32* %1260, align 4
  br label %1263

1263:                                             ; preds = %1257, %1234
  %1264 = load %37*, %37** %28, align 8
  %1265 = icmp ne %37* %1264, null
  br i1 %1265, label %1266, label %1287

1266:                                             ; preds = %1263
  %1267 = load %37*, %37** %28, align 8
  %1268 = bitcast %37* %1267 to %60*
  %1269 = getelementptr inbounds %60, %60* %1268, i32 0, i32 2
  %1270 = load i32, i32* %1269, align 4
  %1271 = and i32 %1270, 1
  %1272 = icmp ne i32 %1271, 0
  br i1 %1272, label %1273, label %1286

1273:                                             ; preds = %1266
  %1274 = load i32, i32* %17, align 4
  %1275 = load %16*, %16** %6, align 8
  %1276 = getelementptr inbounds %16, %16* %1275, i32 0, i32 1
  %1277 = load %10*, %10** %1276, align 8
  %1278 = getelementptr inbounds %10, %10* %1277, i32 0, i32 3
  %1279 = getelementptr inbounds [1 x i8], [1 x i8]* %1278, i32 0, i32 0
  %1280 = load %37*, %37** %28, align 8
  %1281 = bitcast %37* %1280 to %60*
  %1282 = getelementptr inbounds %60, %60* %1281, i32 0, i32 3
  %1283 = load %10*, %10** %1282, align 8
  %1284 = getelementptr inbounds %10, %10* %1283, i32 0, i32 3
  %1285 = getelementptr inbounds [1 x i8], [1 x i8]* %1284, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %1274, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @72, i32 0, i32 0), i8* %1279, i8* %1285)
  br label %1286

1286:                                             ; preds = %1273, %1266
  br label %1287

1287:                                             ; preds = %1286, %1263
  %1288 = load %37*, %37** %18, align 8
  %1289 = icmp ne %37* %1288, null
  br i1 %1289, label %1290, label %1316

1290:                                             ; preds = %1287
  %1291 = load %37*, %37** %18, align 8
  %1292 = bitcast %37* %1291 to %60*
  %1293 = getelementptr inbounds %60, %60* %1292, i32 0, i32 2
  %1294 = load i32, i32* %1293, align 4
  %1295 = and i32 %1294, 1073741824
  %1296 = icmp ne i32 %1295, 0
  br i1 %1296, label %1297, label %1316

1297:                                             ; preds = %1290
  %1298 = load %37*, %37** %18, align 8
  %1299 = bitcast %37* %1298 to %60*
  %1300 = getelementptr inbounds %60, %60* %1299, i32 0, i32 2
  %1301 = load i32, i32* %1300, align 4
  %1302 = and i32 %1301, 8192
  %1303 = icmp ne i32 %1302, 0
  br i1 %1303, label %1304, label %1316

1304:                                             ; preds = %1297
  %1305 = load %16*, %16** %6, align 8
  %1306 = getelementptr inbounds %16, %16* %1305, i32 0, i32 1
  %1307 = load %10*, %10** %1306, align 8
  %1308 = getelementptr inbounds %10, %10* %1307, i32 0, i32 3
  %1309 = getelementptr inbounds [1 x i8], [1 x i8]* %1308, i32 0, i32 0
  %1310 = load %37*, %37** %18, align 8
  %1311 = bitcast %37* %1310 to %60*
  %1312 = getelementptr inbounds %60, %60* %1311, i32 0, i32 3
  %1313 = load %10*, %10** %1312, align 8
  %1314 = getelementptr inbounds %10, %10* %1313, i32 0, i32 3
  %1315 = getelementptr inbounds [1 x i8], [1 x i8]* %1314, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @74, i32 0, i32 0), i8* %1309, i8* %1315) #18
  unreachable

1316:                                             ; preds = %1297, %1290, %1287
  %1317 = load %37*, %37** %19, align 8
  %1318 = icmp ne %37* %1317, null
  br i1 %1318, label %1319, label %1345

1319:                                             ; preds = %1316
  %1320 = load %37*, %37** %19, align 8
  %1321 = bitcast %37* %1320 to %60*
  %1322 = getelementptr inbounds %60, %60* %1321, i32 0, i32 2
  %1323 = load i32, i32* %1322, align 4
  %1324 = and i32 %1323, 1073741824
  %1325 = icmp ne i32 %1324, 0
  br i1 %1325, label %1326, label %1345

1326:                                             ; preds = %1319
  %1327 = load %37*, %37** %19, align 8
  %1328 = bitcast %37* %1327 to %60*
  %1329 = getelementptr inbounds %60, %60* %1328, i32 0, i32 2
  %1330 = load i32, i32* %1329, align 4
  %1331 = and i32 %1330, 16384
  %1332 = icmp ne i32 %1331, 0
  br i1 %1332, label %1333, label %1345

1333:                                             ; preds = %1326
  %1334 = load %16*, %16** %6, align 8
  %1335 = getelementptr inbounds %16, %16* %1334, i32 0, i32 1
  %1336 = load %10*, %10** %1335, align 8
  %1337 = getelementptr inbounds %10, %10* %1336, i32 0, i32 3
  %1338 = getelementptr inbounds [1 x i8], [1 x i8]* %1337, i32 0, i32 0
  %1339 = load %37*, %37** %19, align 8
  %1340 = bitcast %37* %1339 to %60*
  %1341 = getelementptr inbounds %60, %60* %1340, i32 0, i32 3
  %1342 = load %10*, %10** %1341, align 8
  %1343 = getelementptr inbounds %10, %10* %1342, i32 0, i32 3
  %1344 = getelementptr inbounds [1 x i8], [1 x i8]* %1343, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @75, i32 0, i32 0), i8* %1338, i8* %1344) #18
  unreachable

1345:                                             ; preds = %1326, %1319, %1316
  %1346 = load %37*, %37** %20, align 8
  %1347 = icmp ne %37* %1346, null
  br i1 %1347, label %1348, label %1367

1348:                                             ; preds = %1345
  %1349 = load %37*, %37** %20, align 8
  %1350 = bitcast %37* %1349 to %60*
  %1351 = getelementptr inbounds %60, %60* %1350, i32 0, i32 2
  %1352 = load i32, i32* %1351, align 4
  %1353 = and i32 %1352, 1073741824
  %1354 = icmp ne i32 %1353, 0
  br i1 %1354, label %1355, label %1367

1355:                                             ; preds = %1348
  %1356 = load %16*, %16** %6, align 8
  %1357 = getelementptr inbounds %16, %16* %1356, i32 0, i32 1
  %1358 = load %10*, %10** %1357, align 8
  %1359 = getelementptr inbounds %10, %10* %1358, i32 0, i32 3
  %1360 = getelementptr inbounds [1 x i8], [1 x i8]* %1359, i32 0, i32 0
  %1361 = load %37*, %37** %20, align 8
  %1362 = bitcast %37* %1361 to %60*
  %1363 = getelementptr inbounds %60, %60* %1362, i32 0, i32 3
  %1364 = load %10*, %10** %1363, align 8
  %1365 = getelementptr inbounds %10, %10* %1364, i32 0, i32 3
  %1366 = getelementptr inbounds [1 x i8], [1 x i8]* %1365, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @76, i32 0, i32 0), i8* %1360, i8* %1366) #18
  unreachable

1367:                                             ; preds = %1348, %1345
  %1368 = load i8*, i8** %31, align 8
  call void @_efree(i8* %1368)
  br label %1369

1369:                                             ; preds = %1367, %927
  store i32 0, i32* %5, align 4
  store i32 1, i32* %35, align 4
  br label %1370

1370:                                             ; preds = %1369, %923, %443, %411
  %1371 = bitcast i64* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1371) #2
  %1372 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1372) #2
  %1373 = bitcast i64* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1373) #2
  %1374 = bitcast %10** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1374) #2
  %1375 = bitcast %37** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1375) #2
  %1376 = bitcast %37** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1376) #2
  %1377 = bitcast %37** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1377) #2
  %1378 = bitcast %37** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1378) #2
  %1379 = bitcast %37** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1379) #2
  %1380 = bitcast %37** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1380) #2
  %1381 = bitcast %37** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1381) #2
  %1382 = bitcast %37** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1382) #2
  %1383 = bitcast %37** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1383) #2
  %1384 = bitcast %37** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1384) #2
  %1385 = bitcast %37** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1385) #2
  %1386 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1386) #2
  %1387 = bitcast %5** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1387) #2
  %1388 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1388) #2
  %1389 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1389) #2
  %1390 = bitcast %67** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1390) #2
  %1391 = bitcast %37** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1391) #2
  %1392 = bitcast %37* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 224, i8* %1392) #2
  %1393 = bitcast %34** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1393) #2
  %1394 = load i32, i32* %5, align 4
  ret i32 %1394
}

declare dso_local i32 @zend_hash_del(%5*, %10*) #4

; Function Attrs: nounwind uwtable
define dso_local %32* @zend_register_internal_module(%32* %0) #0 {
  %2 = alloca %32*, align 8
  store %32* %0, %32** %2, align 8
  %3 = call i32 @zend_next_free_module()
  %4 = load %32*, %32** %2, align 8
  %5 = getelementptr inbounds %32, %32* %4, i32 0, i32 22
  store i32 %3, i32* %5, align 8
  %6 = load %32*, %32** %2, align 8
  %7 = getelementptr inbounds %32, %32* %6, i32 0, i32 20
  store i8 1, i8* %7, align 4
  %8 = load %32*, %32** %2, align 8
  %9 = call %32* @zend_register_module_ex(%32* %8)
  ret %32* %9
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_next_free_module() #0 {
  %1 = load i32, i32* getelementptr inbounds (%5, %5* @module_registry, i32 0, i32 5), align 4
  %2 = add i32 %1, 1
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_check_magic_method_implementation(%16* %0, %37* %1, i32 %2) #0 {
  %4 = alloca %16*, align 8
  %5 = alloca %37*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [16 x i8], align 16
  %8 = alloca i64, align 8
  store %16* %0, %16** %4, align 8
  store %37* %1, %37** %5, align 8
  store i32 %2, i32* %6, align 4
  %9 = bitcast [16 x i8]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #2
  %10 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load %37*, %37** %5, align 8
  %12 = bitcast %37* %11 to %60*
  %13 = getelementptr inbounds %60, %60* %12, i32 0, i32 3
  %14 = load %10*, %10** %13, align 8
  %15 = getelementptr inbounds %10, %10* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %8, align 8
  %17 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %18 = load %37*, %37** %5, align 8
  %19 = bitcast %37* %18 to %60*
  %20 = getelementptr inbounds %60, %60* %19, i32 0, i32 3
  %21 = load %10*, %10** %20, align 8
  %22 = getelementptr inbounds %10, %10* %21, i32 0, i32 3
  %23 = getelementptr inbounds [1 x i8], [1 x i8]* %22, i32 0, i32 0
  %24 = load i64, i64* %8, align 8
  %25 = icmp ult i64 %24, 15
  br i1 %25, label %26, label %28

26:                                               ; preds = %3
  %27 = load i64, i64* %8, align 8
  br label %29

28:                                               ; preds = %3
  br label %29

29:                                               ; preds = %28, %26
  %30 = phi i64 [ %27, %26 ], [ 15, %28 ]
  %31 = call i8* @zend_str_tolower_copy(i8* %17, i8* %23, i64 %30)
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 15
  store i8 0, i8* %32, align 1
  %33 = load i64, i64* %8, align 8
  %34 = icmp eq i64 %33, 10
  br i1 %34, label %35, label %52

35:                                               ; preds = %29
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %37 = call i32 @memcmp(i8* %36, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @42, i32 0, i32 0), i64 10) #20
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = load %37*, %37** %5, align 8
  %41 = bitcast %37* %40 to %60*
  %42 = getelementptr inbounds %60, %60* %41, i32 0, i32 6
  %43 = load i32, i32* %42, align 8
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %52

45:                                               ; preds = %39
  %46 = load i32, i32* %6, align 4
  %47 = load %16*, %16** %4, align 8
  %48 = getelementptr inbounds %16, %16* %47, i32 0, i32 1
  %49 = load %10*, %10** %48, align 8
  %50 = getelementptr inbounds %10, %10* %49, i32 0, i32 3
  %51 = getelementptr inbounds [1 x i8], [1 x i8]* %50, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %46, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @43, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @42, i32 0, i32 0))
  br label %331

52:                                               ; preds = %39, %35, %29
  %53 = load i64, i64* %8, align 8
  %54 = icmp eq i64 %53, 7
  br i1 %54, label %55, label %72

55:                                               ; preds = %52
  %56 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %57 = call i32 @memcmp(i8* %56, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @44, i32 0, i32 0), i64 7) #20
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = load %37*, %37** %5, align 8
  %61 = bitcast %37* %60 to %60*
  %62 = getelementptr inbounds %60, %60* %61, i32 0, i32 6
  %63 = load i32, i32* %62, align 8
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %59
  %66 = load i32, i32* %6, align 4
  %67 = load %16*, %16** %4, align 8
  %68 = getelementptr inbounds %16, %16* %67, i32 0, i32 1
  %69 = load %10*, %10** %68, align 8
  %70 = getelementptr inbounds %10, %10* %69, i32 0, i32 3
  %71 = getelementptr inbounds [1 x i8], [1 x i8]* %70, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %66, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @45, i32 0, i32 0), i8* %71, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @44, i32 0, i32 0))
  br label %330

72:                                               ; preds = %59, %55, %52
  %73 = load i64, i64* %8, align 8
  %74 = icmp eq i64 %73, 5
  br i1 %74, label %75, label %105

75:                                               ; preds = %72
  %76 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %77 = call i32 @memcmp(i8* %76, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @46, i32 0, i32 0), i64 5) #20
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %105, label %79

79:                                               ; preds = %75
  %80 = load %37*, %37** %5, align 8
  %81 = bitcast %37* %80 to %60*
  %82 = getelementptr inbounds %60, %60* %81, i32 0, i32 6
  %83 = load i32, i32* %82, align 8
  %84 = icmp ne i32 %83, 1
  br i1 %84, label %85, label %92

85:                                               ; preds = %79
  %86 = load i32, i32* %6, align 4
  %87 = load %16*, %16** %4, align 8
  %88 = getelementptr inbounds %16, %16* %87, i32 0, i32 1
  %89 = load %10*, %10** %88, align 8
  %90 = getelementptr inbounds %10, %10* %89, i32 0, i32 3
  %91 = getelementptr inbounds [1 x i8], [1 x i8]* %90, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %86, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @47, i32 0, i32 0), i8* %91, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @46, i32 0, i32 0))
  br label %104

92:                                               ; preds = %79
  %93 = load %37*, %37** %5, align 8
  %94 = call i32 @144(%37* %93, i32 1, i32 3)
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %103

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4
  %98 = load %16*, %16** %4, align 8
  %99 = getelementptr inbounds %16, %16* %98, i32 0, i32 1
  %100 = load %10*, %10** %99, align 8
  %101 = getelementptr inbounds %10, %10* %100, i32 0, i32 3
  %102 = getelementptr inbounds [1 x i8], [1 x i8]* %101, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %97, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @48, i32 0, i32 0), i8* %102, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @46, i32 0, i32 0))
  br label %103

103:                                              ; preds = %96, %92
  br label %104

104:                                              ; preds = %103, %85
  br label %329

105:                                              ; preds = %75, %72
  %106 = load i64, i64* %8, align 8
  %107 = icmp eq i64 %106, 5
  br i1 %107, label %108, label %142

108:                                              ; preds = %105
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %110 = call i32 @memcmp(i8* %109, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @49, i32 0, i32 0), i64 5) #20
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %142, label %112

112:                                              ; preds = %108
  %113 = load %37*, %37** %5, align 8
  %114 = bitcast %37* %113 to %60*
  %115 = getelementptr inbounds %60, %60* %114, i32 0, i32 6
  %116 = load i32, i32* %115, align 8
  %117 = icmp ne i32 %116, 2
  br i1 %117, label %118, label %125

118:                                              ; preds = %112
  %119 = load i32, i32* %6, align 4
  %120 = load %16*, %16** %4, align 8
  %121 = getelementptr inbounds %16, %16* %120, i32 0, i32 1
  %122 = load %10*, %10** %121, align 8
  %123 = getelementptr inbounds %10, %10* %122, i32 0, i32 3
  %124 = getelementptr inbounds [1 x i8], [1 x i8]* %123, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %119, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @50, i32 0, i32 0), i8* %124, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @49, i32 0, i32 0))
  br label %141

125:                                              ; preds = %112
  %126 = load %37*, %37** %5, align 8
  %127 = call i32 @144(%37* %126, i32 1, i32 3)
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %125
  %130 = load %37*, %37** %5, align 8
  %131 = call i32 @144(%37* %130, i32 2, i32 3)
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %140

133:                                              ; preds = %129, %125
  %134 = load i32, i32* %6, align 4
  %135 = load %16*, %16** %4, align 8
  %136 = getelementptr inbounds %16, %16* %135, i32 0, i32 1
  %137 = load %10*, %10** %136, align 8
  %138 = getelementptr inbounds %10, %10* %137, i32 0, i32 3
  %139 = getelementptr inbounds [1 x i8], [1 x i8]* %138, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %134, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @48, i32 0, i32 0), i8* %139, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @49, i32 0, i32 0))
  br label %140

140:                                              ; preds = %133, %129
  br label %141

141:                                              ; preds = %140, %118
  br label %328

142:                                              ; preds = %108, %105
  %143 = load i64, i64* %8, align 8
  %144 = icmp eq i64 %143, 7
  br i1 %144, label %145, label %175

145:                                              ; preds = %142
  %146 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %147 = call i32 @memcmp(i8* %146, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @51, i32 0, i32 0), i64 7) #20
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %175, label %149

149:                                              ; preds = %145
  %150 = load %37*, %37** %5, align 8
  %151 = bitcast %37* %150 to %60*
  %152 = getelementptr inbounds %60, %60* %151, i32 0, i32 6
  %153 = load i32, i32* %152, align 8
  %154 = icmp ne i32 %153, 1
  br i1 %154, label %155, label %162

155:                                              ; preds = %149
  %156 = load i32, i32* %6, align 4
  %157 = load %16*, %16** %4, align 8
  %158 = getelementptr inbounds %16, %16* %157, i32 0, i32 1
  %159 = load %10*, %10** %158, align 8
  %160 = getelementptr inbounds %10, %10* %159, i32 0, i32 3
  %161 = getelementptr inbounds [1 x i8], [1 x i8]* %160, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %156, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @47, i32 0, i32 0), i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @51, i32 0, i32 0))
  br label %174

162:                                              ; preds = %149
  %163 = load %37*, %37** %5, align 8
  %164 = call i32 @144(%37* %163, i32 1, i32 3)
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %166, label %173

166:                                              ; preds = %162
  %167 = load i32, i32* %6, align 4
  %168 = load %16*, %16** %4, align 8
  %169 = getelementptr inbounds %16, %16* %168, i32 0, i32 1
  %170 = load %10*, %10** %169, align 8
  %171 = getelementptr inbounds %10, %10* %170, i32 0, i32 3
  %172 = getelementptr inbounds [1 x i8], [1 x i8]* %171, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %167, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @48, i32 0, i32 0), i8* %172, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @51, i32 0, i32 0))
  br label %173

173:                                              ; preds = %166, %162
  br label %174

174:                                              ; preds = %173, %155
  br label %327

175:                                              ; preds = %145, %142
  %176 = load i64, i64* %8, align 8
  %177 = icmp eq i64 %176, 7
  br i1 %177, label %178, label %208

178:                                              ; preds = %175
  %179 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %180 = call i32 @memcmp(i8* %179, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @52, i32 0, i32 0), i64 7) #20
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %208, label %182

182:                                              ; preds = %178
  %183 = load %37*, %37** %5, align 8
  %184 = bitcast %37* %183 to %60*
  %185 = getelementptr inbounds %60, %60* %184, i32 0, i32 6
  %186 = load i32, i32* %185, align 8
  %187 = icmp ne i32 %186, 1
  br i1 %187, label %188, label %195

188:                                              ; preds = %182
  %189 = load i32, i32* %6, align 4
  %190 = load %16*, %16** %4, align 8
  %191 = getelementptr inbounds %16, %16* %190, i32 0, i32 1
  %192 = load %10*, %10** %191, align 8
  %193 = getelementptr inbounds %10, %10* %192, i32 0, i32 3
  %194 = getelementptr inbounds [1 x i8], [1 x i8]* %193, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %189, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @47, i32 0, i32 0), i8* %194, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @52, i32 0, i32 0))
  br label %207

195:                                              ; preds = %182
  %196 = load %37*, %37** %5, align 8
  %197 = call i32 @144(%37* %196, i32 1, i32 3)
  %198 = icmp ne i32 %197, 0
  br i1 %198, label %199, label %206

199:                                              ; preds = %195
  %200 = load i32, i32* %6, align 4
  %201 = load %16*, %16** %4, align 8
  %202 = getelementptr inbounds %16, %16* %201, i32 0, i32 1
  %203 = load %10*, %10** %202, align 8
  %204 = getelementptr inbounds %10, %10* %203, i32 0, i32 3
  %205 = getelementptr inbounds [1 x i8], [1 x i8]* %204, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %200, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @48, i32 0, i32 0), i8* %205, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @52, i32 0, i32 0))
  br label %206

206:                                              ; preds = %199, %195
  br label %207

207:                                              ; preds = %206, %188
  br label %326

208:                                              ; preds = %178, %175
  %209 = load i64, i64* %8, align 8
  %210 = icmp eq i64 %209, 6
  br i1 %210, label %211, label %245

211:                                              ; preds = %208
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %213 = call i32 @memcmp(i8* %212, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @53, i32 0, i32 0), i64 6) #20
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %245, label %215

215:                                              ; preds = %211
  %216 = load %37*, %37** %5, align 8
  %217 = bitcast %37* %216 to %60*
  %218 = getelementptr inbounds %60, %60* %217, i32 0, i32 6
  %219 = load i32, i32* %218, align 8
  %220 = icmp ne i32 %219, 2
  br i1 %220, label %221, label %228

221:                                              ; preds = %215
  %222 = load i32, i32* %6, align 4
  %223 = load %16*, %16** %4, align 8
  %224 = getelementptr inbounds %16, %16* %223, i32 0, i32 1
  %225 = load %10*, %10** %224, align 8
  %226 = getelementptr inbounds %10, %10* %225, i32 0, i32 3
  %227 = getelementptr inbounds [1 x i8], [1 x i8]* %226, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %222, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @50, i32 0, i32 0), i8* %227, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @53, i32 0, i32 0))
  br label %244

228:                                              ; preds = %215
  %229 = load %37*, %37** %5, align 8
  %230 = call i32 @144(%37* %229, i32 1, i32 3)
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %236, label %232

232:                                              ; preds = %228
  %233 = load %37*, %37** %5, align 8
  %234 = call i32 @144(%37* %233, i32 2, i32 3)
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %236, label %243

236:                                              ; preds = %232, %228
  %237 = load i32, i32* %6, align 4
  %238 = load %16*, %16** %4, align 8
  %239 = getelementptr inbounds %16, %16* %238, i32 0, i32 1
  %240 = load %10*, %10** %239, align 8
  %241 = getelementptr inbounds %10, %10* %240, i32 0, i32 3
  %242 = getelementptr inbounds [1 x i8], [1 x i8]* %241, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %237, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @48, i32 0, i32 0), i8* %242, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @53, i32 0, i32 0))
  br label %243

243:                                              ; preds = %236, %232
  br label %244

244:                                              ; preds = %243, %221
  br label %325

245:                                              ; preds = %211, %208
  %246 = load i64, i64* %8, align 8
  %247 = icmp eq i64 %246, 12
  br i1 %247, label %248, label %282

248:                                              ; preds = %245
  %249 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %250 = call i32 @memcmp(i8* %249, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @54, i32 0, i32 0), i64 12) #20
  %251 = icmp ne i32 %250, 0
  br i1 %251, label %282, label %252

252:                                              ; preds = %248
  %253 = load %37*, %37** %5, align 8
  %254 = bitcast %37* %253 to %60*
  %255 = getelementptr inbounds %60, %60* %254, i32 0, i32 6
  %256 = load i32, i32* %255, align 8
  %257 = icmp ne i32 %256, 2
  br i1 %257, label %258, label %265

258:                                              ; preds = %252
  %259 = load i32, i32* %6, align 4
  %260 = load %16*, %16** %4, align 8
  %261 = getelementptr inbounds %16, %16* %260, i32 0, i32 1
  %262 = load %10*, %10** %261, align 8
  %263 = getelementptr inbounds %10, %10* %262, i32 0, i32 3
  %264 = getelementptr inbounds [1 x i8], [1 x i8]* %263, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %259, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @55, i32 0, i32 0), i8* %264)
  br label %281

265:                                              ; preds = %252
  %266 = load %37*, %37** %5, align 8
  %267 = call i32 @144(%37* %266, i32 1, i32 3)
  %268 = icmp ne i32 %267, 0
  br i1 %268, label %273, label %269

269:                                              ; preds = %265
  %270 = load %37*, %37** %5, align 8
  %271 = call i32 @144(%37* %270, i32 2, i32 3)
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %273, label %280

273:                                              ; preds = %269, %265
  %274 = load i32, i32* %6, align 4
  %275 = load %16*, %16** %4, align 8
  %276 = getelementptr inbounds %16, %16* %275, i32 0, i32 1
  %277 = load %10*, %10** %276, align 8
  %278 = getelementptr inbounds %10, %10* %277, i32 0, i32 3
  %279 = getelementptr inbounds [1 x i8], [1 x i8]* %278, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %274, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @56, i32 0, i32 0), i8* %279)
  br label %280

280:                                              ; preds = %273, %269
  br label %281

281:                                              ; preds = %280, %258
  br label %324

282:                                              ; preds = %248, %245
  %283 = load i64, i64* %8, align 8
  %284 = icmp eq i64 %283, 10
  br i1 %284, label %285, label %302

285:                                              ; preds = %282
  %286 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %287 = call i32 @memcmp(i8* %286, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @57, i32 0, i32 0), i64 10) #20
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %302, label %289

289:                                              ; preds = %285
  %290 = load %37*, %37** %5, align 8
  %291 = bitcast %37* %290 to %60*
  %292 = getelementptr inbounds %60, %60* %291, i32 0, i32 6
  %293 = load i32, i32* %292, align 8
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %295, label %302

295:                                              ; preds = %289
  %296 = load i32, i32* %6, align 4
  %297 = load %16*, %16** %4, align 8
  %298 = getelementptr inbounds %16, %16* %297, i32 0, i32 1
  %299 = load %10*, %10** %298, align 8
  %300 = getelementptr inbounds %10, %10* %299, i32 0, i32 3
  %301 = getelementptr inbounds [1 x i8], [1 x i8]* %300, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %296, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @58, i32 0, i32 0), i8* %301, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @57, i32 0, i32 0))
  br label %323

302:                                              ; preds = %289, %285, %282
  %303 = load i64, i64* %8, align 8
  %304 = icmp eq i64 %303, 11
  br i1 %304, label %305, label %322

305:                                              ; preds = %302
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0
  %307 = call i32 @memcmp(i8* %306, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @59, i32 0, i32 0), i64 11) #20
  %308 = icmp ne i32 %307, 0
  br i1 %308, label %322, label %309

309:                                              ; preds = %305
  %310 = load %37*, %37** %5, align 8
  %311 = bitcast %37* %310 to %60*
  %312 = getelementptr inbounds %60, %60* %311, i32 0, i32 6
  %313 = load i32, i32* %312, align 8
  %314 = icmp ne i32 %313, 0
  br i1 %314, label %315, label %322

315:                                              ; preds = %309
  %316 = load i32, i32* %6, align 4
  %317 = load %16*, %16** %4, align 8
  %318 = getelementptr inbounds %16, %16* %317, i32 0, i32 1
  %319 = load %10*, %10** %318, align 8
  %320 = getelementptr inbounds %10, %10* %319, i32 0, i32 3
  %321 = getelementptr inbounds [1 x i8], [1 x i8]* %320, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 %316, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @58, i32 0, i32 0), i8* %321, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @59, i32 0, i32 0))
  br label %322

322:                                              ; preds = %315, %309, %305, %302
  br label %323

323:                                              ; preds = %322, %295
  br label %324

324:                                              ; preds = %323, %281
  br label %325

325:                                              ; preds = %324, %244
  br label %326

326:                                              ; preds = %325, %207
  br label %327

327:                                              ; preds = %326, %174
  br label %328

328:                                              ; preds = %327, %141
  br label %329

329:                                              ; preds = %328, %104
  br label %330

330:                                              ; preds = %329, %65
  br label %331

331:                                              ; preds = %330, %45
  %332 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %332) #2
  %333 = bitcast [16 x i8]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %333) #2
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #9

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @144(%37* %0, i32 %1, i32 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca %37*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %37* %0, %37** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %8 = load i32, i32* %6, align 4
  %9 = add i32 %8, -1
  store i32 %9, i32* %6, align 4
  %10 = load i32, i32* %6, align 4
  %11 = load %37*, %37** %5, align 8
  %12 = bitcast %37* %11 to %60*
  %13 = getelementptr inbounds %60, %60* %12, i32 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = icmp uge i32 %10, %14
  %16 = xor i1 %15, true
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 0)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %41

22:                                               ; preds = %3
  %23 = load %37*, %37** %5, align 8
  %24 = bitcast %37* %23 to %60*
  %25 = getelementptr inbounds %60, %60* %24, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 16777216
  %28 = icmp eq i32 %27, 0
  %29 = xor i1 %28, true
  %30 = xor i1 %29, true
  %31 = zext i1 %30 to i32
  %32 = sext i32 %31 to i64
  %33 = call i64 @llvm.expect.i64(i64 %32, i64 1)
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %22
  store i32 0, i32* %4, align 4
  br label %61

36:                                               ; preds = %22
  %37 = load %37*, %37** %5, align 8
  %38 = bitcast %37* %37 to %60*
  %39 = getelementptr inbounds %60, %60* %38, i32 0, i32 6
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %6, align 4
  br label %41

41:                                               ; preds = %36, %3
  %42 = load %37*, %37** %5, align 8
  %43 = bitcast %37* %42 to %60*
  %44 = getelementptr inbounds %60, %60* %43, i32 0, i32 8
  %45 = load %39*, %39** %44, align 8
  %46 = load i32, i32* %6, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %39, %39* %45, i64 %47
  %49 = getelementptr inbounds %39, %39* %48, i32 0, i32 2
  %50 = load i8, i8* %49, align 8
  %51 = zext i8 %50 to i32
  %52 = load i32, i32* %7, align 4
  %53 = and i32 %51, %52
  %54 = icmp ne i32 %53, 0
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %4, align 4
  br label %61

61:                                               ; preds = %41, %35
  %62 = load i32, i32* %4, align 4
  ret i32 %62
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @145(i8* %0, i32 %1, i64 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  %10 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load i64, i64* %7, align 8
  %12 = icmp ule i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

14:                                               ; preds = %3
  %15 = load i8*, i8** %5, align 8
  %16 = load i64, i64* %7, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  %18 = getelementptr inbounds i8, i8* %17, i64 -1
  store i8* %18, i8** %8, align 8
  br label %19

19:                                               ; preds = %34, %14
  %20 = load i8*, i8** %8, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = icmp uge i8* %20, %21
  br i1 %22, label %23, label %37

23:                                               ; preds = %19
  %24 = load i8*, i8** %8, align 8
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = load i32, i32* %6, align 4
  %28 = trunc i32 %27 to i8
  %29 = zext i8 %28 to i32
  %30 = icmp eq i32 %26, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %23
  %32 = load i8*, i8** %8, align 8
  store i8* %32, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

33:                                               ; preds = %23
  br label %34

34:                                               ; preds = %33
  %35 = load i8*, i8** %8, align 8
  %36 = getelementptr inbounds i8, i8* %35, i32 -1
  store i8* %36, i8** %8, align 8
  br label %19

37:                                               ; preds = %19
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

38:                                               ; preds = %37, %31, %13
  %39 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #2
  %40 = load i8*, i8** %4, align 8
  ret i8* %40
}

declare dso_local i8* @zend_str_tolower_dup(i8*, i64) #4

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) #9

declare dso_local void @zend_set_function_arg_flags(%37*) #4

; Function Attrs: nounwind uwtable
define dso_local void @zend_unregister_functions(%34* %0, i32 %1, %5* %2) #0 {
  %4 = alloca %34*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %5*, align 8
  %7 = alloca %34*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %5*, align 8
  %10 = alloca %10*, align 8
  %11 = alloca i64, align 8
  store %34* %0, %34** %4, align 8
  store i32 %1, i32* %5, align 4
  store %5* %2, %5** %6, align 8
  %12 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = load %34*, %34** %4, align 8
  store %34* %13, %34** %7, align 8
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #2
  store i32 0, i32* %8, align 4
  %15 = bitcast %5** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  %16 = load %5*, %5** %6, align 8
  store %5* %16, %5** %9, align 8
  %17 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  %19 = load %5*, %5** %9, align 8
  %20 = icmp ne %5* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = load %5*, %5** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 5), align 8
  store %5* %22, %5** %9, align 8
  br label %23

23:                                               ; preds = %21, %3
  br label %24

24:                                               ; preds = %37, %23
  %25 = load %34*, %34** %7, align 8
  %26 = getelementptr inbounds %34, %34* %25, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %60

29:                                               ; preds = %24
  %30 = load i32, i32* %5, align 4
  %31 = icmp ne i32 %30, -1
  br i1 %31, label %32, label %37

32:                                               ; preds = %29
  %33 = load i32, i32* %8, align 4
  %34 = load i32, i32* %5, align 4
  %35 = icmp sge i32 %33, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  br label %60

37:                                               ; preds = %32, %29
  %38 = load %34*, %34** %7, align 8
  %39 = getelementptr inbounds %34, %34* %38, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = call i64 @strlen(i8* %40) #20
  store i64 %41, i64* %11, align 8
  %42 = load i64, i64* %11, align 8
  %43 = call %10* @138(i64 %42, i32 0)
  store %10* %43, %10** %10, align 8
  %44 = load %10*, %10** %10, align 8
  %45 = getelementptr inbounds %10, %10* %44, i32 0, i32 3
  %46 = getelementptr inbounds [1 x i8], [1 x i8]* %45, i32 0, i32 0
  %47 = load %34*, %34** %7, align 8
  %48 = getelementptr inbounds %34, %34* %47, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = load i64, i64* %11, align 8
  %51 = call i8* @zend_str_tolower_copy(i8* %46, i8* %49, i64 %50)
  %52 = load %5*, %5** %9, align 8
  %53 = load %10*, %10** %10, align 8
  %54 = call i32 @zend_hash_del(%5* %52, %10* %53)
  %55 = load %10*, %10** %10, align 8
  call void @140(%10* %55)
  %56 = load %34*, %34** %7, align 8
  %57 = getelementptr inbounds %34, %34* %56, i32 1
  store %34* %57, %34** %7, align 8
  %58 = load i32, i32* %8, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %8, align 4
  br label %24

60:                                               ; preds = %36, %24
  %61 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #2
  %62 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #2
  %63 = bitcast %5** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #2
  %64 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %64) #2
  %65 = bitcast %34** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #2
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @146(%5* %0, %10* %1, i8* %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca %5*, align 8
  %6 = alloca %10*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %11, align 8
  %9 = alloca %11*, align 8
  %10 = alloca i32, align 4
  store %5* %0, %5** %5, align 8
  store %10* %1, %10** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = bitcast %11* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #2
  %12 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  br label %13

13:                                               ; preds = %3
  %14 = load i8*, i8** %7, align 8
  %15 = getelementptr inbounds %11, %11* %8, i32 0, i32 0
  %16 = bitcast %12* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds %11, %11* %8, i32 0, i32 1
  %18 = bitcast %13* %17 to i32*
  store i32 17, i32* %18, align 8
  br label %19

19:                                               ; preds = %13
  br label %20

20:                                               ; preds = %19
  %21 = load %5*, %5** %5, align 8
  %22 = load %10*, %10** %6, align 8
  %23 = call %11* @_zend_hash_add(%5* %21, %10* %22, %11* %8)
  store %11* %23, %11** %9, align 8
  %24 = load %11*, %11** %9, align 8
  %25 = icmp ne %11* %24, null
  br i1 %25, label %26, label %46

26:                                               ; preds = %20
  br label %27

27:                                               ; preds = %26
  %28 = load %11*, %11** %9, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = sext i32 %34 to i64
  %36 = call i64 @llvm.expect.i64(i64 %35, i64 0)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %27
  unreachable

39:                                               ; preds = %27
  br label %40

40:                                               ; preds = %39
  br label %41

41:                                               ; preds = %40
  %42 = load %11*, %11** %9, align 8
  %43 = getelementptr inbounds %11, %11* %42, i32 0, i32 0
  %44 = bitcast %12* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  store i8* %45, i8** %4, align 8
  store i32 1, i32* %10, align 4
  br label %47

46:                                               ; preds = %20
  store i8* null, i8** %4, align 8
  store i32 1, i32* %10, align 4
  br label %47

47:                                               ; preds = %46, %41
  %48 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #2
  %49 = bitcast %11* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %49) #2
  %50 = load i8*, i8** %4, align 8
  ret i8* %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_startup_module(%32* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %32*, align 8
  store %32* %0, %32** %3, align 8
  %4 = load %32*, %32** %3, align 8
  %5 = call %32* @zend_register_internal_module(%32* %4)
  store %32* %5, %32** %3, align 8
  %6 = icmp ne %32* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = load %32*, %32** %3, align 8
  %9 = call i32 @zend_startup_module_ex(%32* %8)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  store i32 0, i32* %2, align 4
  br label %13

12:                                               ; preds = %7, %1
  store i32 -1, i32* %2, align 4
  br label %13

13:                                               ; preds = %12, %11
  %14 = load i32, i32* %2, align 4
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_get_module_started(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %32*, align 8
  store i8* %0, i8** %2, align 8
  %4 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #2
  %5 = load i8*, i8** %2, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = call i64 @strlen(i8* %6) #20
  %8 = call i8* @147(%5* @module_registry, i8* %5, i64 %7)
  %9 = bitcast i8* %8 to %32*
  store %32* %9, %32** %3, align 8
  %10 = load %32*, %32** %3, align 8
  %11 = icmp ne %32* %10, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %1
  %13 = load %32*, %32** %3, align 8
  %14 = getelementptr inbounds %32, %32* %13, i32 0, i32 19
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %15, 0
  br label %17

17:                                               ; preds = %12, %1
  %18 = phi i1 [ false, %1 ], [ %16, %12 ]
  %19 = zext i1 %18 to i64
  %20 = select i1 %18, i32 0, i32 -1
  %21 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #2
  ret i32 %20
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @147(%5* %0, i8* %1, i64 %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca %5*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %11*, align 8
  %9 = alloca i32, align 4
  store %5* %0, %5** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %10 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load %5*, %5** %5, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = load i64, i64* %7, align 8
  %14 = call %11* @zend_hash_str_find(%5* %11, i8* %12, i64 %13)
  store %11* %14, %11** %8, align 8
  %15 = load %11*, %11** %8, align 8
  %16 = icmp ne %11* %15, null
  br i1 %16, label %17, label %37

17:                                               ; preds = %3
  br label %18

18:                                               ; preds = %17
  %19 = load %11*, %11** %8, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ne i8* %22, null
  %24 = xor i1 %23, true
  %25 = zext i1 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = call i64 @llvm.expect.i64(i64 %26, i64 0)
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %18
  unreachable

30:                                               ; preds = %18
  br label %31

31:                                               ; preds = %30
  br label %32

32:                                               ; preds = %31
  %33 = load %11*, %11** %8, align 8
  %34 = getelementptr inbounds %11, %11* %33, i32 0, i32 0
  %35 = bitcast %12* %34 to i8**
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

37:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  store i32 1, i32* %9, align 4
  br label %38

38:                                               ; preds = %37, %32
  %39 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #2
  %40 = load i8*, i8** %4, align 8
  ret i8* %40
}

; Function Attrs: nounwind uwtable
define hidden void @module_destructor(%32* %0) #0 {
  %2 = alloca %32*, align 8
  store %32* %0, %32** %2, align 8
  %3 = load %32*, %32** %2, align 8
  %4 = getelementptr inbounds %32, %32* %3, i32 0, i32 20
  %5 = load i8, i8* %4, align 4
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %18

8:                                                ; preds = %1
  %9 = load %32*, %32** %2, align 8
  %10 = getelementptr inbounds %32, %32* %9, i32 0, i32 22
  %11 = load i32, i32* %10, align 8
  call void @zend_clean_module_rsrc_dtors(i32 %11)
  %12 = load %32*, %32** %2, align 8
  %13 = getelementptr inbounds %32, %32* %12, i32 0, i32 22
  %14 = load i32, i32* %13, align 8
  call void @clean_module_constants(i32 %14)
  %15 = load %32*, %32** %2, align 8
  %16 = getelementptr inbounds %32, %32* %15, i32 0, i32 22
  %17 = load i32, i32* %16, align 8
  call void @148(i32 %17)
  br label %18

18:                                               ; preds = %8, %1
  %19 = load %32*, %32** %2, align 8
  %20 = getelementptr inbounds %32, %32* %19, i32 0, i32 19
  %21 = load i32, i32* %20, align 8
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %40

23:                                               ; preds = %18
  %24 = load %32*, %32** %2, align 8
  %25 = getelementptr inbounds %32, %32* %24, i32 0, i32 9
  %26 = load i32 (i32, i32)*, i32 (i32, i32)** %25, align 8
  %27 = icmp ne i32 (i32, i32)* %26, null
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = load %32*, %32** %2, align 8
  %30 = getelementptr inbounds %32, %32* %29, i32 0, i32 9
  %31 = load i32 (i32, i32)*, i32 (i32, i32)** %30, align 8
  %32 = load %32*, %32** %2, align 8
  %33 = getelementptr inbounds %32, %32* %32, i32 0, i32 20
  %34 = load i8, i8* %33, align 4
  %35 = zext i8 %34 to i32
  %36 = load %32*, %32** %2, align 8
  %37 = getelementptr inbounds %32, %32* %36, i32 0, i32 22
  %38 = load i32, i32* %37, align 8
  %39 = call i32 %31(i32 %35, i32 %38)
  br label %40

40:                                               ; preds = %28, %23, %18
  %41 = load %32*, %32** %2, align 8
  %42 = getelementptr inbounds %32, %32* %41, i32 0, i32 14
  %43 = load i64, i64* %42, align 8
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %58

45:                                               ; preds = %40
  %46 = load %32*, %32** %2, align 8
  %47 = getelementptr inbounds %32, %32* %46, i32 0, i32 17
  %48 = load void (i8*)*, void (i8*)** %47, align 8
  %49 = icmp ne void (i8*)* %48, null
  br i1 %49, label %50, label %57

50:                                               ; preds = %45
  %51 = load %32*, %32** %2, align 8
  %52 = getelementptr inbounds %32, %32* %51, i32 0, i32 17
  %53 = load void (i8*)*, void (i8*)** %52, align 8
  %54 = load %32*, %32** %2, align 8
  %55 = getelementptr inbounds %32, %32* %54, i32 0, i32 15
  %56 = load i8*, i8** %55, align 8
  call void %53(i8* %56)
  br label %57

57:                                               ; preds = %50, %45
  br label %58

58:                                               ; preds = %57, %40
  %59 = load %32*, %32** %2, align 8
  %60 = getelementptr inbounds %32, %32* %59, i32 0, i32 19
  store i32 0, i32* %60, align 8
  %61 = load %32*, %32** %2, align 8
  %62 = getelementptr inbounds %32, %32* %61, i32 0, i32 7
  %63 = load %34*, %34** %62, align 8
  %64 = icmp ne %34* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %58
  %66 = load %32*, %32** %2, align 8
  %67 = getelementptr inbounds %32, %32* %66, i32 0, i32 7
  %68 = load %34*, %34** %67, align 8
  call void @zend_unregister_functions(%34* %68, i32 -1, %5* null)
  br label %69

69:                                               ; preds = %65, %58
  %70 = load %32*, %32** %2, align 8
  %71 = getelementptr inbounds %32, %32* %70, i32 0, i32 21
  %72 = load i8*, i8** %71, align 8
  %73 = icmp ne i8* %72, null
  br i1 %73, label %74, label %82

74:                                               ; preds = %69
  %75 = call i8* @getenv(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @77, i32 0, i32 0)) #2
  %76 = icmp ne i8* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %74
  %78 = load %32*, %32** %2, align 8
  %79 = getelementptr inbounds %32, %32* %78, i32 0, i32 21
  %80 = load i8*, i8** %79, align 8
  %81 = call i32 @dlclose(i8* %80) #2
  br label %82

82:                                               ; preds = %77, %74, %69
  ret void
}

declare dso_local void @zend_clean_module_rsrc_dtors(i32) #4

declare dso_local void @clean_module_constants(i32) #4

; Function Attrs: nounwind uwtable
define internal void @148(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load %5*, %5** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 11), align 8
  %4 = bitcast i32* %2 to i8*
  call void @zend_hash_apply_with_argument(%5* %3, i32 (%11*, i8*)* @181, i8* %4)
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #10

; Function Attrs: nounwind
declare dso_local i32 @dlclose(i8*) #10

; Function Attrs: nounwind uwtable
define dso_local void @zend_activate_modules() #0 {
  %1 = alloca %32**, align 8
  %2 = alloca %32*, align 8
  %3 = bitcast %32*** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #2
  %4 = load %32**, %32*** @35, align 8
  store %32** %4, %32*** %1, align 8
  br label %5

5:                                                ; preds = %29, %0
  %6 = load %32**, %32*** %1, align 8
  %7 = load %32*, %32** %6, align 8
  %8 = icmp ne %32* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = bitcast %32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load %32**, %32*** %1, align 8
  %12 = load %32*, %32** %11, align 8
  store %32* %12, %32** %2, align 8
  %13 = load %32*, %32** %2, align 8
  %14 = getelementptr inbounds %32, %32* %13, i32 0, i32 10
  %15 = load i32 (i32, i32)*, i32 (i32, i32)** %14, align 8
  %16 = load %32*, %32** %2, align 8
  %17 = getelementptr inbounds %32, %32* %16, i32 0, i32 20
  %18 = load i8, i8* %17, align 4
  %19 = zext i8 %18 to i32
  %20 = load %32*, %32** %2, align 8
  %21 = getelementptr inbounds %32, %32* %20, i32 0, i32 22
  %22 = load i32, i32* %21, align 8
  %23 = call i32 %15(i32 %19, i32 %22)
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %29

25:                                               ; preds = %9
  %26 = load %32*, %32** %2, align 8
  %27 = getelementptr inbounds %32, %32* %26, i32 0, i32 6
  %28 = load i8*, i8** %27, align 8
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @78, i32 0, i32 0), i8* %28)
  call void @exit(i32 1) #21
  unreachable

29:                                               ; preds = %9
  %30 = load %32**, %32*** %1, align 8
  %31 = getelementptr inbounds %32*, %32** %30, i32 1
  store %32** %31, %32*** %1, align 8
  %32 = bitcast %32** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #2
  br label %5

33:                                               ; preds = %5
  %34 = bitcast %32*** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #12

; Function Attrs: nounwind uwtable
define dso_local void @zend_deactivate_modules() #0 {
  %1 = alloca [1 x %1]*, align 8
  %2 = alloca [1 x %1], align 16
  %3 = alloca %32**, align 8
  %4 = alloca %32*, align 8
  store %4* null, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %5 = bitcast [1 x %1]** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #2
  %6 = load [1 x %1]*, [1 x %1]** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 7), align 8
  store [1 x %1]* %6, [1 x %1]** %1, align 8
  %7 = bitcast [1 x %1]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* %7) #2
  store [1 x %1]* %2, [1 x %1]** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 7), align 8
  %8 = getelementptr inbounds [1 x %1], [1 x %1]* %2, i32 0, i32 0
  %9 = call i32 @_setjmp(%1* %8) #22
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %43

11:                                               ; preds = %0
  %12 = load i8, i8* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 22), align 8
  %13 = icmp ne i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  call void @zend_hash_reverse_apply(%5* @module_registry, i32 (%11*)* @149)
  br label %42

15:                                               ; preds = %11
  %16 = bitcast %32*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load %32**, %32*** @36, align 8
  store %32** %17, %32*** %3, align 8
  br label %18

18:                                               ; preds = %22, %15
  %19 = load %32**, %32*** %3, align 8
  %20 = load %32*, %32** %19, align 8
  %21 = icmp ne %32* %20, null
  br i1 %21, label %22, label %40

22:                                               ; preds = %18
  %23 = bitcast %32** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #2
  %24 = load %32**, %32*** %3, align 8
  %25 = load %32*, %32** %24, align 8
  store %32* %25, %32** %4, align 8
  %26 = load %32*, %32** %4, align 8
  %27 = getelementptr inbounds %32, %32* %26, i32 0, i32 11
  %28 = load i32 (i32, i32)*, i32 (i32, i32)** %27, align 8
  %29 = load %32*, %32** %4, align 8
  %30 = getelementptr inbounds %32, %32* %29, i32 0, i32 20
  %31 = load i8, i8* %30, align 4
  %32 = zext i8 %31 to i32
  %33 = load %32*, %32** %4, align 8
  %34 = getelementptr inbounds %32, %32* %33, i32 0, i32 22
  %35 = load i32, i32* %34, align 8
  %36 = call i32 %28(i32 %32, i32 %35)
  %37 = load %32**, %32*** %3, align 8
  %38 = getelementptr inbounds %32*, %32** %37, i32 1
  store %32** %38, %32*** %3, align 8
  %39 = bitcast %32** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #2
  br label %18

40:                                               ; preds = %18
  %41 = bitcast %32*** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #2
  br label %42

42:                                               ; preds = %40, %14
  br label %43

43:                                               ; preds = %42, %0
  %44 = load [1 x %1]*, [1 x %1]** %1, align 8
  store [1 x %1]* %44, [1 x %1]** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 7), align 8
  %45 = bitcast [1 x %1]* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 200, i8* %45) #2
  %46 = bitcast [1 x %1]** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #2
  ret void
}

; Function Attrs: nounwind returns_twice
declare dso_local i32 @_setjmp(%1*) #13

declare dso_local void @zend_hash_reverse_apply(%5*, i32 (%11*)*) #4

; Function Attrs: nounwind uwtable
define internal i32 @149(%11* %0) #0 {
  %2 = alloca %11*, align 8
  %3 = alloca %32*, align 8
  store %11* %0, %11** %2, align 8
  %4 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #2
  %5 = load %11*, %11** %2, align 8
  %6 = getelementptr inbounds %11, %11* %5, i32 0, i32 0
  %7 = bitcast %12* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to %32*
  store %32* %9, %32** %3, align 8
  %10 = load %32*, %32** %3, align 8
  %11 = getelementptr inbounds %32, %32* %10, i32 0, i32 11
  %12 = load i32 (i32, i32)*, i32 (i32, i32)** %11, align 8
  %13 = icmp ne i32 (i32, i32)* %12, null
  br i1 %13, label %14, label %26

14:                                               ; preds = %1
  %15 = load %32*, %32** %3, align 8
  %16 = getelementptr inbounds %32, %32* %15, i32 0, i32 11
  %17 = load i32 (i32, i32)*, i32 (i32, i32)** %16, align 8
  %18 = load %32*, %32** %3, align 8
  %19 = getelementptr inbounds %32, %32* %18, i32 0, i32 20
  %20 = load i8, i8* %19, align 4
  %21 = zext i8 %20 to i32
  %22 = load %32*, %32** %3, align 8
  %23 = getelementptr inbounds %32, %32* %22, i32 0, i32 22
  %24 = load i32, i32* %23, align 8
  %25 = call i32 %17(i32 %21, i32 %24)
  br label %26

26:                                               ; preds = %14, %1
  %27 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_cleanup_internal_classes() #0 {
  %1 = alloca %16**, align 8
  %2 = bitcast %16*** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #2
  %3 = load %16**, %16*** @38, align 8
  store %16** %3, %16*** %1, align 8
  br label %4

4:                                                ; preds = %8, %0
  %5 = load %16**, %16*** %1, align 8
  %6 = load %16*, %16** %5, align 8
  %7 = icmp ne %16* %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = load %16**, %16*** %1, align 8
  %10 = load %16*, %16** %9, align 8
  call void @zend_cleanup_internal_class_data(%16* %10)
  %11 = load %16**, %16*** %1, align 8
  %12 = getelementptr inbounds %16*, %16** %11, i32 1
  store %16** %12, %16*** %1, align 8
  br label %4

13:                                               ; preds = %4
  %14 = bitcast %16*** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #2
  ret void
}

declare dso_local void @zend_cleanup_internal_class_data(%16*) #4

; Function Attrs: nounwind uwtable
define hidden i32 @module_registry_unload_temp(%32* %0) #0 {
  %2 = alloca %32*, align 8
  store %32* %0, %32** %2, align 8
  %3 = load %32*, %32** %2, align 8
  %4 = getelementptr inbounds %32, %32* %3, i32 0, i32 20
  %5 = load i8, i8* %4, align 4
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %6, 2
  %8 = zext i1 %7 to i64
  %9 = select i1 %7, i32 1, i32 2
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_post_deactivate_modules() #0 {
  %1 = alloca %32**, align 8
  %2 = alloca %32*, align 8
  %3 = load i8, i8* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 22), align 8
  %4 = icmp ne i8 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  call void @zend_hash_apply(%5* @module_registry, i32 (%11*)* @150)
  call void @zend_hash_reverse_apply(%5* @module_registry, i32 (%11*)* @151)
  br label %26

6:                                                ; preds = %0
  %7 = bitcast %32*** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #2
  %8 = load %32**, %32*** @37, align 8
  store %32** %8, %32*** %1, align 8
  br label %9

9:                                                ; preds = %13, %6
  %10 = load %32**, %32*** %1, align 8
  %11 = load %32*, %32** %10, align 8
  %12 = icmp ne %32* %11, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %9
  %14 = bitcast %32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  %15 = load %32**, %32*** %1, align 8
  %16 = load %32*, %32** %15, align 8
  store %32* %16, %32** %2, align 8
  %17 = load %32*, %32** %2, align 8
  %18 = getelementptr inbounds %32, %32* %17, i32 0, i32 18
  %19 = load i32 ()*, i32 ()** %18, align 8
  %20 = call i32 %19()
  %21 = load %32**, %32*** %1, align 8
  %22 = getelementptr inbounds %32*, %32** %21, i32 1
  store %32** %22, %32*** %1, align 8
  %23 = bitcast %32** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #2
  br label %9

24:                                               ; preds = %9
  %25 = bitcast %32*** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #2
  br label %26

26:                                               ; preds = %24, %5
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @150(%11* %0) #0 {
  %2 = alloca %11*, align 8
  %3 = alloca %32*, align 8
  store %11* %0, %11** %2, align 8
  %4 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #2
  %5 = load %11*, %11** %2, align 8
  %6 = getelementptr inbounds %11, %11* %5, i32 0, i32 0
  %7 = bitcast %12* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to %32*
  store %32* %9, %32** %3, align 8
  %10 = load %32*, %32** %3, align 8
  %11 = getelementptr inbounds %32, %32* %10, i32 0, i32 18
  %12 = load i32 ()*, i32 ()** %11, align 8
  %13 = icmp ne i32 ()* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %1
  %15 = load %32*, %32** %3, align 8
  %16 = getelementptr inbounds %32, %32* %15, i32 0, i32 18
  %17 = load i32 ()*, i32 ()** %16, align 8
  %18 = call i32 %17()
  br label %19

19:                                               ; preds = %14, %1
  %20 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @151(%11* %0) #0 {
  %2 = alloca %11*, align 8
  %3 = alloca %32*, align 8
  store %11* %0, %11** %2, align 8
  %4 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #2
  %5 = load %11*, %11** %2, align 8
  %6 = getelementptr inbounds %11, %11* %5, i32 0, i32 0
  %7 = bitcast %12* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to %32*
  store %32* %9, %32** %3, align 8
  %10 = load %32*, %32** %3, align 8
  %11 = call i32 @module_registry_unload_temp(%32* %10)
  %12 = bitcast %32** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #2
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define dso_local %16* @zend_register_internal_class_ex(%16* %0, %16* %1) #0 {
  %3 = alloca %16*, align 8
  %4 = alloca %16*, align 8
  %5 = alloca %16*, align 8
  store %16* %0, %16** %3, align 8
  store %16* %1, %16** %4, align 8
  %6 = bitcast %16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #2
  %7 = load %16*, %16** %3, align 8
  %8 = call %16* @zend_register_internal_class(%16* %7)
  store %16* %8, %16** %5, align 8
  %9 = load %16*, %16** %4, align 8
  %10 = icmp ne %16* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = load %16*, %16** %5, align 8
  %13 = load %16*, %16** %4, align 8
  call void @zend_do_inheritance(%16* %12, %16* %13)
  br label %14

14:                                               ; preds = %11, %2
  %15 = load %16*, %16** %5, align 8
  %16 = bitcast %16** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #2
  ret %16* %15
}

; Function Attrs: nounwind uwtable
define dso_local %16* @zend_register_internal_class(%16* %0) #0 {
  %2 = alloca %16*, align 8
  store %16* %0, %16** %2, align 8
  %3 = load %16*, %16** %2, align 8
  %4 = call %16* @152(%16* %3, i32 0)
  ret %16* %4
}

declare dso_local void @zend_do_inheritance(%16*, %16*) #4

; Function Attrs: nounwind uwtable
define dso_local void @zend_class_implements(%16* %0, i32 %1, ...) #0 {
  %3 = alloca %16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %16*, align 8
  %6 = alloca [1 x %57], align 16
  store %16* %0, %16** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = bitcast %16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #2
  %8 = bitcast [1 x %57]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %8) #2
  %9 = getelementptr inbounds [1 x %57], [1 x %57]* %6, i32 0, i32 0
  %10 = bitcast %57* %9 to i8*
  call void @llvm.va_start(i8* %10)
  br label %11

11:                                               ; preds = %31, %2
  %12 = load i32, i32* %4, align 4
  %13 = add nsw i32 %12, -1
  store i32 %13, i32* %4, align 4
  %14 = icmp ne i32 %12, 0
  br i1 %14, label %15, label %36

15:                                               ; preds = %11
  %16 = getelementptr inbounds [1 x %57], [1 x %57]* %6, i32 0, i32 0
  %17 = getelementptr inbounds %57, %57* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 16
  %19 = icmp ule i32 %18, 40
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %57, %57* %16, i32 0, i32 3
  %22 = load i8*, i8** %21, align 16
  %23 = getelementptr i8, i8* %22, i32 %18
  %24 = bitcast i8* %23 to %16**
  %25 = add i32 %18, 8
  store i32 %25, i32* %17, align 16
  br label %31

26:                                               ; preds = %15
  %27 = getelementptr inbounds %57, %57* %16, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to %16**
  %30 = getelementptr i8, i8* %28, i32 8
  store i8* %30, i8** %27, align 8
  br label %31

31:                                               ; preds = %26, %20
  %32 = phi %16** [ %24, %20 ], [ %29, %26 ]
  %33 = load %16*, %16** %32, align 8
  store %16* %33, %16** %5, align 8
  %34 = load %16*, %16** %3, align 8
  %35 = load %16*, %16** %5, align 8
  call void @zend_do_implement_interface(%16* %34, %16* %35)
  br label %11

36:                                               ; preds = %11
  %37 = getelementptr inbounds [1 x %57], [1 x %57]* %6, i32 0, i32 0
  %38 = bitcast %57* %37 to i8*
  call void @llvm.va_end(i8* %38)
  %39 = bitcast [1 x %57]* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %39) #2
  %40 = bitcast %16** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #2
  ret void
}

declare dso_local void @zend_do_implement_interface(%16*, %16*) #4

; Function Attrs: nounwind uwtable
define internal %16* @152(%16* %0, i32 %1) #0 {
  %3 = alloca %16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %16*, align 8
  %6 = alloca %10*, align 8
  store %16* %0, %16** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = bitcast %16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #2
  %8 = call noalias i8* @malloc(i64 504) #2
  %9 = bitcast i8* %8 to %16*
  store %16* %9, %16** %5, align 8
  %10 = bitcast %10** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load %16*, %16** %3, align 8
  %12 = getelementptr inbounds %16, %16* %11, i32 0, i32 1
  %13 = load %10*, %10** %12, align 8
  %14 = getelementptr inbounds %10, %10* %13, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = call %10* @138(i64 %15, i32 1)
  store %10* %16, %10** %6, align 8
  %17 = load %16*, %16** %5, align 8
  %18 = load %16*, %16** %3, align 8
  %19 = bitcast %16* %17 to i8*
  %20 = bitcast %16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 504, i1 false)
  %21 = load %16*, %16** %5, align 8
  %22 = getelementptr inbounds %16, %16* %21, i32 0, i32 0
  store i8 1, i8* %22, align 8
  %23 = load %16*, %16** %5, align 8
  call void @zend_initialize_class_data(%16* %23, i8 zeroext 0)
  %24 = load i32, i32* %4, align 4
  %25 = or i32 %24, 1048576
  %26 = load %16*, %16** %5, align 8
  %27 = getelementptr inbounds %16, %16* %26, i32 0, i32 4
  store i32 %25, i32* %27, align 4
  %28 = load %32*, %32** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 47), align 8
  %29 = load %16*, %16** %5, align 8
  %30 = getelementptr inbounds %16, %16* %29, i32 0, i32 39
  %31 = bitcast %28* %30 to %69*
  %32 = getelementptr inbounds %69, %69* %31, i32 0, i32 1
  store %32* %28, %32** %32, align 8
  %33 = load %16*, %16** %5, align 8
  %34 = getelementptr inbounds %16, %16* %33, i32 0, i32 39
  %35 = bitcast %28* %34 to %69*
  %36 = getelementptr inbounds %69, %69* %35, i32 0, i32 0
  %37 = load %34*, %34** %36, align 8
  %38 = icmp ne %34* %37, null
  br i1 %38, label %39, label %49

39:                                               ; preds = %2
  %40 = load %16*, %16** %5, align 8
  %41 = load %16*, %16** %5, align 8
  %42 = getelementptr inbounds %16, %16* %41, i32 0, i32 39
  %43 = bitcast %28* %42 to %69*
  %44 = getelementptr inbounds %69, %69* %43, i32 0, i32 0
  %45 = load %34*, %34** %44, align 8
  %46 = load %16*, %16** %5, align 8
  %47 = getelementptr inbounds %16, %16* %46, i32 0, i32 10
  %48 = call i32 @zend_register_functions(%16* %40, %34* %45, %5* %47, i32 1)
  br label %49

49:                                               ; preds = %39, %2
  %50 = load %10*, %10** %6, align 8
  %51 = getelementptr inbounds %10, %10* %50, i32 0, i32 3
  %52 = getelementptr inbounds [1 x i8], [1 x i8]* %51, i32 0, i32 0
  %53 = load %16*, %16** %3, align 8
  %54 = getelementptr inbounds %16, %16* %53, i32 0, i32 1
  %55 = load %10*, %10** %54, align 8
  %56 = getelementptr inbounds %10, %10* %55, i32 0, i32 3
  %57 = getelementptr inbounds [1 x i8], [1 x i8]* %56, i32 0, i32 0
  %58 = load %16*, %16** %5, align 8
  %59 = getelementptr inbounds %16, %16* %58, i32 0, i32 1
  %60 = load %10*, %10** %59, align 8
  %61 = getelementptr inbounds %10, %10* %60, i32 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = call i8* @zend_str_tolower_copy(i8* %52, i8* %57, i64 %62)
  %64 = load %10* (%10*)*, %10* (%10*)** @zend_new_interned_string, align 8
  %65 = load %10*, %10** %6, align 8
  %66 = call %10* %64(%10* %65)
  store %10* %66, %10** %6, align 8
  %67 = load %5*, %5** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 6), align 8
  %68 = load %10*, %10** %6, align 8
  %69 = load %16*, %16** %5, align 8
  %70 = bitcast %16* %69 to i8*
  %71 = call i8* @161(%5* %67, %10* %68, i8* %70)
  %72 = load %10*, %10** %6, align 8
  call void @135(%10* %72)
  %73 = load %16*, %16** %5, align 8
  %74 = bitcast %10** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #2
  %75 = bitcast %16** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #2
  ret %16* %73
}

; Function Attrs: nounwind uwtable
define dso_local %16* @zend_register_internal_interface(%16* %0) #0 {
  %2 = alloca %16*, align 8
  store %16* %0, %16** %2, align 8
  %3 = load %16*, %16** %2, align 8
  %4 = call %16* @152(%16* %3, i32 64)
  ret %16* %4
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_register_class_alias_ex(i8* %0, i64 %1, %16* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %16*, align 8
  %8 = alloca %10*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store %16* %2, %16** %7, align 8
  %11 = bitcast %10** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #2
  %12 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #2
  %13 = load %16*, %16** %7, align 8
  %14 = getelementptr inbounds %16, %16* %13, i32 0, i32 0
  %15 = load i8, i8* %14, align 8
  %16 = sext i8 %15 to i32
  %17 = icmp ne i32 %16, 2
  %18 = zext i1 %17 to i32
  store i32 %18, i32* %9, align 4
  %19 = load i8*, i8** %5, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 0
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %22, 92
  br i1 %23, label %24, label %37

24:                                               ; preds = %3
  %25 = load i64, i64* %6, align 8
  %26 = sub i64 %25, 1
  %27 = load i32, i32* %9, align 4
  %28 = call %10* @138(i64 %26, i32 %27)
  store %10* %28, %10** %8, align 8
  %29 = load %10*, %10** %8, align 8
  %30 = getelementptr inbounds %10, %10* %29, i32 0, i32 3
  %31 = getelementptr inbounds [1 x i8], [1 x i8]* %30, i32 0, i32 0
  %32 = load i8*, i8** %5, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 1
  %34 = load i64, i64* %6, align 8
  %35 = sub i64 %34, 1
  %36 = call i8* @zend_str_tolower_copy(i8* %31, i8* %33, i64 %35)
  br label %47

37:                                               ; preds = %3
  %38 = load i64, i64* %6, align 8
  %39 = load i32, i32* %9, align 4
  %40 = call %10* @138(i64 %38, i32 %39)
  store %10* %40, %10** %8, align 8
  %41 = load %10*, %10** %8, align 8
  %42 = getelementptr inbounds %10, %10* %41, i32 0, i32 3
  %43 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i32 0, i32 0
  %44 = load i8*, i8** %5, align 8
  %45 = load i64, i64* %6, align 8
  %46 = call i8* @zend_str_tolower_copy(i8* %43, i8* %44, i64 %45)
  br label %47

47:                                               ; preds = %37, %24
  %48 = load %10*, %10** %8, align 8
  call void @zend_assert_valid_class_name(%10* %48)
  %49 = load %10* (%10*)*, %10* (%10*)** @zend_new_interned_string, align 8
  %50 = load %10*, %10** %8, align 8
  %51 = call %10* %49(%10* %50)
  store %10* %51, %10** %8, align 8
  %52 = load %5*, %5** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 6), align 8
  %53 = load %10*, %10** %8, align 8
  %54 = load %16*, %16** %7, align 8
  %55 = bitcast %16* %54 to i8*
  %56 = call i8* @146(%5* %52, %10* %53, i8* %55)
  %57 = bitcast i8* %56 to %16*
  store %16* %57, %16** %7, align 8
  %58 = load %10*, %10** %8, align 8
  call void @135(%10* %58)
  %59 = load %16*, %16** %7, align 8
  %60 = icmp ne %16* %59, null
  br i1 %60, label %61, label %66

61:                                               ; preds = %47
  %62 = load %16*, %16** %7, align 8
  %63 = getelementptr inbounds %16, %16* %62, i32 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %63, align 8
  store i32 0, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %67

66:                                               ; preds = %47
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %67

67:                                               ; preds = %66, %61
  %68 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %68) #2
  %69 = bitcast %10** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %69) #2
  %70 = load i32, i32* %4, align 4
  ret i32 %70
}

declare dso_local void @zend_assert_valid_class_name(%10*) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_set_hash_symbol(%11* %0, i8* %1, i32 %2, i8 zeroext %3, i32 %4, ...) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %11*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca %5*, align 8
  %13 = alloca [1 x %57], align 16
  %14 = alloca i32, align 4
  %15 = alloca %11*, align 8
  %16 = alloca %61*, align 8
  %17 = alloca %11*, align 8
  %18 = alloca %11*, align 8
  %19 = alloca %58*, align 8
  %20 = alloca i32, align 4
  store %11* %0, %11** %7, align 8
  store i8* %1, i8** %8, align 8
  store i32 %2, i32* %9, align 4
  store i8 %3, i8* %10, align 1
  store i32 %4, i32* %11, align 4
  %21 = bitcast %5** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  %22 = bitcast [1 x %57]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %22) #2
  %23 = load i32, i32* %11, align 4
  %24 = icmp sle i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %5
  store i32 -1, i32* %6, align 4
  store i32 1, i32* %14, align 4
  br label %143

26:                                               ; preds = %5
  %27 = load i8, i8* %10, align 1
  %28 = icmp ne i8 %27, 0
  br i1 %28, label %29, label %96

29:                                               ; preds = %26
  br label %30

30:                                               ; preds = %29
  %31 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #2
  %32 = load %11*, %11** %7, align 8
  store %11* %32, %11** %15, align 8
  %33 = load %11*, %11** %15, align 8
  %34 = call zeroext i8 @125(%11* %33)
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 10
  br i1 %36, label %92, label %37

37:                                               ; preds = %30
  br label %38

38:                                               ; preds = %37
  %39 = bitcast %61** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #2
  %40 = call noalias i8* @_emalloc_24()
  %41 = bitcast i8* %40 to %61*
  store %61* %41, %61** %16, align 8
  %42 = load %61*, %61** %16, align 8
  %43 = getelementptr inbounds %61, %61* %42, i32 0, i32 0
  %44 = getelementptr inbounds %6, %6* %43, i32 0, i32 0
  store i32 1, i32* %44, align 8
  %45 = load %61*, %61** %16, align 8
  %46 = getelementptr inbounds %61, %61* %45, i32 0, i32 0
  %47 = getelementptr inbounds %6, %6* %46, i32 0, i32 1
  %48 = bitcast %7* %47 to i32*
  store i32 10, i32* %48, align 4
  br label %49

49:                                               ; preds = %38
  %50 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #2
  %51 = load %61*, %61** %16, align 8
  %52 = getelementptr inbounds %61, %61* %51, i32 0, i32 1
  store %11* %52, %11** %17, align 8
  %53 = bitcast %11** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #2
  %54 = load %11*, %11** %15, align 8
  store %11* %54, %11** %18, align 8
  %55 = bitcast %58** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #2
  %56 = load %11*, %11** %18, align 8
  %57 = getelementptr inbounds %11, %11* %56, i32 0, i32 0
  %58 = bitcast %12* %57 to %58**
  %59 = load %58*, %58** %58, align 8
  store %58* %59, %58** %19, align 8
  %60 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #2
  %61 = load %11*, %11** %18, align 8
  %62 = getelementptr inbounds %11, %11* %61, i32 0, i32 1
  %63 = bitcast %13* %62 to i32*
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %20, align 4
  br label %65

65:                                               ; preds = %49
  %66 = load %58*, %58** %19, align 8
  %67 = load %11*, %11** %17, align 8
  %68 = getelementptr inbounds %11, %11* %67, i32 0, i32 0
  %69 = bitcast %12* %68 to %58**
  store %58* %66, %58** %69, align 8
  %70 = load i32, i32* %20, align 4
  %71 = load %11*, %11** %17, align 8
  %72 = getelementptr inbounds %11, %11* %71, i32 0, i32 1
  %73 = bitcast %13* %72 to i32*
  store i32 %70, i32* %73, align 8
  br label %74

74:                                               ; preds = %65
  br label %75

75:                                               ; preds = %74
  %76 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %76) #2
  %77 = bitcast %58** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #2
  %78 = bitcast %11** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78) #2
  %79 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #2
  br label %80

80:                                               ; preds = %75
  br label %81

81:                                               ; preds = %80
  %82 = load %61*, %61** %16, align 8
  %83 = load %11*, %11** %15, align 8
  %84 = getelementptr inbounds %11, %11* %83, i32 0, i32 0
  %85 = bitcast %12* %84 to %61**
  store %61* %82, %61** %85, align 8
  %86 = load %11*, %11** %15, align 8
  %87 = getelementptr inbounds %11, %11* %86, i32 0, i32 1
  %88 = bitcast %13* %87 to i32*
  store i32 1034, i32* %88, align 8
  %89 = bitcast %61** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #2
  br label %90

90:                                               ; preds = %81
  br label %91

91:                                               ; preds = %90
  br label %92

92:                                               ; preds = %91, %30
  %93 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #2
  br label %94

94:                                               ; preds = %92
  br label %95

95:                                               ; preds = %94
  br label %96

96:                                               ; preds = %95, %26
  %97 = getelementptr inbounds [1 x %57], [1 x %57]* %13, i32 0, i32 0
  %98 = bitcast %57* %97 to i8*
  call void @llvm.va_start(i8* %98)
  br label %99

99:                                               ; preds = %139, %96
  %100 = load i32, i32* %11, align 4
  %101 = add nsw i32 %100, -1
  store i32 %101, i32* %11, align 4
  %102 = icmp sgt i32 %100, 0
  br i1 %102, label %103, label %140

103:                                              ; preds = %99
  %104 = getelementptr inbounds [1 x %57], [1 x %57]* %13, i32 0, i32 0
  %105 = getelementptr inbounds %57, %57* %104, i32 0, i32 0
  %106 = load i32, i32* %105, align 16
  %107 = icmp ule i32 %106, 40
  br i1 %107, label %108, label %114

108:                                              ; preds = %103
  %109 = getelementptr inbounds %57, %57* %104, i32 0, i32 3
  %110 = load i8*, i8** %109, align 16
  %111 = getelementptr i8, i8* %110, i32 %106
  %112 = bitcast i8* %111 to %5**
  %113 = add i32 %106, 8
  store i32 %113, i32* %105, align 16
  br label %119

114:                                              ; preds = %103
  %115 = getelementptr inbounds %57, %57* %104, i32 0, i32 2
  %116 = load i8*, i8** %115, align 8
  %117 = bitcast i8* %116 to %5**
  %118 = getelementptr i8, i8* %116, i32 8
  store i8* %118, i8** %115, align 8
  br label %119

119:                                              ; preds = %114, %108
  %120 = phi %5** [ %112, %108 ], [ %117, %114 ]
  %121 = load %5*, %5** %120, align 8
  store %5* %121, %5** %12, align 8
  %122 = load %5*, %5** %12, align 8
  %123 = load i8*, i8** %8, align 8
  %124 = load i32, i32* %9, align 4
  %125 = sext i32 %124 to i64
  %126 = load %11*, %11** %7, align 8
  %127 = call %11* @_zend_hash_str_update(%5* %122, i8* %123, i64 %125, %11* %126)
  %128 = load %11*, %11** %7, align 8
  %129 = getelementptr inbounds %11, %11* %128, i32 0, i32 1
  %130 = bitcast %13* %129 to %59*
  %131 = getelementptr inbounds %59, %59* %130, i32 0, i32 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = and i32 %133, 4
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %119
  %137 = load %11*, %11** %7, align 8
  %138 = call i32 @128(%11* %137)
  br label %139

139:                                              ; preds = %136, %119
  br label %99

140:                                              ; preds = %99
  %141 = getelementptr inbounds [1 x %57], [1 x %57]* %13, i32 0, i32 0
  %142 = bitcast %57* %141 to i8*
  call void @llvm.va_end(i8* %142)
  store i32 0, i32* %6, align 4
  store i32 1, i32* %14, align 4
  br label %143

143:                                              ; preds = %140, %25
  %144 = bitcast [1 x %57]* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %144) #2
  %145 = bitcast %5** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #2
  %146 = load i32, i32* %6, align 4
  ret i32 %146
}

declare dso_local %11* @_zend_hash_str_update(%5*, i8*, i64, %11*) #4

; Function Attrs: nounwind uwtable
define dso_local void @zif_display_disabled_function(%4* %0, %11* %1) #0 {
  %3 = alloca %4*, align 8
  %4 = alloca %11*, align 8
  store %4* %0, %4** %3, align 8
  store %11* %1, %11** %4, align 8
  %5 = call i8* @get_active_function_name()
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @79, i32 0, i32 0), i8* %5)
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_disable_function(i8* %0, i64 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %67*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %8 = bitcast %67** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #2
  %9 = load %5*, %5** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 5), align 8
  %10 = load i8*, i8** %4, align 8
  %11 = load i64, i64* %5, align 8
  %12 = call i8* @147(%5* %9, i8* %10, i64 %11)
  %13 = bitcast i8* %12 to %67*
  store %67* %13, %67** %6, align 8
  %14 = icmp ne %67* %13, null
  br i1 %14, label %15, label %26

15:                                               ; preds = %2
  %16 = load %67*, %67** %6, align 8
  %17 = getelementptr inbounds %67, %67* %16, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, -1358954497
  store i32 %19, i32* %17, align 4
  %20 = load %67*, %67** %6, align 8
  %21 = getelementptr inbounds %67, %67* %20, i32 0, i32 6
  store i32 0, i32* %21, align 8
  %22 = load %67*, %67** %6, align 8
  %23 = getelementptr inbounds %67, %67* %22, i32 0, i32 8
  store %35* null, %35** %23, align 8
  %24 = load %67*, %67** %6, align 8
  %25 = getelementptr inbounds %67, %67* %24, i32 0, i32 9
  store void (%4*, %11*)* @zif_display_disabled_function, void (%4*, %11*)** %25, align 8
  store i32 0, i32* %3, align 4
  store i32 1, i32* %7, align 4
  br label %27

26:                                               ; preds = %2
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %7, align 4
  br label %27

27:                                               ; preds = %26, %15
  %28 = bitcast %67** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #2
  %29 = load i32, i32* %3, align 4
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_disable_class(i8* %0, i64 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %16*, align 8
  %7 = alloca %10*, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  %9 = bitcast %16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  %10 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load i64, i64* %5, align 8
  %12 = call %10* @138(i64 %11, i32 0)
  store %10* %12, %10** %7, align 8
  %13 = load %10*, %10** %7, align 8
  %14 = getelementptr inbounds %10, %10* %13, i32 0, i32 3
  %15 = getelementptr inbounds [1 x i8], [1 x i8]* %14, i32 0, i32 0
  %16 = load i8*, i8** %4, align 8
  %17 = load i64, i64* %5, align 8
  %18 = call i8* @zend_str_tolower_copy(i8* %15, i8* %16, i64 %17)
  %19 = load %5*, %5** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 6), align 8
  %20 = load %10*, %10** %7, align 8
  %21 = call i8* @139(%5* %19, %10* %20)
  %22 = bitcast i8* %21 to %16*
  store %16* %22, %16** %6, align 8
  %23 = load %10*, %10** %7, align 8
  call void @135(%10* %23)
  %24 = load %16*, %16** %6, align 8
  %25 = icmp ne %16* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %2
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %99

27:                                               ; preds = %2
  %28 = load %16*, %16** %6, align 8
  %29 = getelementptr inbounds %16, %16* %28, i32 0, i32 13
  store %37* null, %37** %29, align 8
  %30 = load %16*, %16** %6, align 8
  %31 = getelementptr inbounds %16, %16* %30, i32 0, i32 14
  store %37* null, %37** %31, align 8
  %32 = load %16*, %16** %6, align 8
  %33 = getelementptr inbounds %16, %16* %32, i32 0, i32 15
  store %37* null, %37** %33, align 8
  %34 = load %16*, %16** %6, align 8
  %35 = getelementptr inbounds %16, %16* %34, i32 0, i32 31
  store i32 (%11*, i8**, i64*, %22*)* null, i32 (%11*, i8**, i64*, %22*)** %35, align 8
  %36 = load %16*, %16** %6, align 8
  %37 = getelementptr inbounds %16, %16* %36, i32 0, i32 32
  store i32 (%11*, %16*, i8*, i64, %23*)* null, i32 (%11*, %16*, i8*, i64, %23*)** %37, align 8
  %38 = load %16*, %16** %6, align 8
  %39 = getelementptr inbounds %16, %16* %38, i32 0, i32 27
  store %20* (%16*)* null, %20* (%16*)** %39, align 8
  %40 = load %16*, %16** %6, align 8
  %41 = getelementptr inbounds %16, %16* %40, i32 0, i32 29
  store i32 (%16*, %16*)* null, i32 (%16*, %16*)** %41, align 8
  %42 = load %16*, %16** %6, align 8
  %43 = getelementptr inbounds %16, %16* %42, i32 0, i32 30
  store %37* (%16*, %10*)* null, %37* (%16*, %10*)** %43, align 8
  %44 = load %16*, %16** %6, align 8
  %45 = getelementptr inbounds %16, %16* %44, i32 0, i32 20
  store %37* null, %37** %45, align 8
  %46 = load %16*, %16** %6, align 8
  %47 = getelementptr inbounds %16, %16* %46, i32 0, i32 21
  store %37* null, %37** %47, align 8
  %48 = load %16*, %16** %6, align 8
  %49 = getelementptr inbounds %16, %16* %48, i32 0, i32 22
  store %37* null, %37** %49, align 8
  %50 = load %16*, %16** %6, align 8
  %51 = getelementptr inbounds %16, %16* %50, i32 0, i32 16
  store %37* null, %37** %51, align 8
  %52 = load %16*, %16** %6, align 8
  %53 = getelementptr inbounds %16, %16* %52, i32 0, i32 17
  store %37* null, %37** %53, align 8
  %54 = load %16*, %16** %6, align 8
  %55 = getelementptr inbounds %16, %16* %54, i32 0, i32 18
  store %37* null, %37** %55, align 8
  %56 = load %16*, %16** %6, align 8
  %57 = getelementptr inbounds %16, %16* %56, i32 0, i32 19
  store %37* null, %37** %57, align 8
  %58 = load %16*, %16** %6, align 8
  %59 = getelementptr inbounds %16, %16* %58, i32 0, i32 23
  store %37* null, %37** %59, align 8
  %60 = load %16*, %16** %6, align 8
  %61 = getelementptr inbounds %16, %16* %60, i32 0, i32 24
  store %37* null, %37** %61, align 8
  %62 = load %16*, %16** %6, align 8
  %63 = getelementptr inbounds %16, %16* %62, i32 0, i32 25
  store %37* null, %37** %63, align 8
  %64 = load %16*, %16** %6, align 8
  %65 = getelementptr inbounds %16, %16* %64, i32 0, i32 31
  store i32 (%11*, i8**, i64*, %22*)* null, i32 (%11*, i8**, i64*, %22*)** %65, align 8
  %66 = load %16*, %16** %6, align 8
  %67 = getelementptr inbounds %16, %16* %66, i32 0, i32 32
  store i32 (%11*, %16*, i8*, i64, %23*)* null, i32 (%11*, %16*, i8*, i64, %23*)** %67, align 8
  %68 = load %16*, %16** %6, align 8
  %69 = getelementptr inbounds %16, %16* %68, i32 0, i32 2
  store %16* null, %16** %69, align 8
  %70 = load %16*, %16** %6, align 8
  %71 = getelementptr inbounds %16, %16* %70, i32 0, i32 33
  store i32 0, i32* %71, align 8
  %72 = load %16*, %16** %6, align 8
  %73 = getelementptr inbounds %16, %16* %72, i32 0, i32 36
  store %16** null, %16*** %73, align 8
  %74 = load %16*, %16** %6, align 8
  %75 = getelementptr inbounds %16, %16* %74, i32 0, i32 34
  store i32 0, i32* %75, align 4
  %76 = load %16*, %16** %6, align 8
  %77 = getelementptr inbounds %16, %16* %76, i32 0, i32 37
  store %24** null, %24*** %77, align 8
  %78 = load %16*, %16** %6, align 8
  %79 = getelementptr inbounds %16, %16* %78, i32 0, i32 38
  store %26** null, %26*** %79, align 8
  %80 = load %16*, %16** %6, align 8
  %81 = getelementptr inbounds %16, %16* %80, i32 0, i32 35
  store %16** null, %16*** %81, align 8
  %82 = load %16*, %16** %6, align 8
  %83 = getelementptr inbounds %16, %16* %82, i32 0, i32 28
  store %19* (%16*, %11*, i32)* null, %19* (%16*, %11*, i32)** %83, align 8
  %84 = load %16*, %16** %6, align 8
  %85 = getelementptr inbounds %16, %16* %84, i32 0, i32 26
  %86 = getelementptr inbounds %17, %17* %85, i32 0, i32 0
  store %18* null, %18** %86, align 8
  %87 = load %16*, %16** %6, align 8
  %88 = getelementptr inbounds %16, %16* %87, i32 0, i32 39
  %89 = bitcast %28* %88 to %69*
  %90 = getelementptr inbounds %69, %69* %89, i32 0, i32 1
  store %32* null, %32** %90, align 8
  %91 = load %16*, %16** %6, align 8
  %92 = getelementptr inbounds %16, %16* %91, i32 0, i32 39
  %93 = bitcast %28* %92 to %69*
  %94 = getelementptr inbounds %69, %69* %93, i32 0, i32 0
  store %34* getelementptr inbounds ([1 x %34], [1 x %34]* @80, i32 0, i32 0), %34** %94, align 8
  %95 = load %16*, %16** %6, align 8
  %96 = getelementptr inbounds %16, %16* %95, i32 0, i32 27
  store %20* (%16*)* @153, %20* (%16*)** %96, align 8
  %97 = load %16*, %16** %6, align 8
  %98 = getelementptr inbounds %16, %16* %97, i32 0, i32 10
  call void @zend_hash_clean(%5* %98)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %99

99:                                               ; preds = %27, %26
  %100 = bitcast %10** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #2
  %101 = bitcast %16** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #2
  %102 = load i32, i32* %3, align 4
  ret i32 %102
}

; Function Attrs: nounwind uwtable
define internal %20* @153(%16* %0) #0 {
  %2 = alloca %16*, align 8
  %3 = alloca %20*, align 8
  %4 = alloca %11*, align 8
  %5 = alloca %11*, align 8
  store %16* %0, %16** %2, align 8
  %6 = bitcast %20** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #2
  %7 = load %16*, %16** %2, align 8
  %8 = call %20* @zend_objects_new(%16* %7)
  store %20* %8, %20** %3, align 8
  %9 = load %16*, %16** %2, align 8
  %10 = getelementptr inbounds %16, %16* %9, i32 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  %13 = xor i1 %12, true
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = call i64 @llvm.expect.i64(i64 %16, i64 1)
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %47

19:                                               ; preds = %1
  %20 = bitcast %11** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #2
  %21 = load %20*, %20** %3, align 8
  %22 = getelementptr inbounds %20, %20* %21, i32 0, i32 5
  %23 = getelementptr inbounds [1 x %11], [1 x %11]* %22, i32 0, i32 0
  store %11* %23, %11** %4, align 8
  %24 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #2
  %25 = load %11*, %11** %4, align 8
  %26 = load %16*, %16** %2, align 8
  %27 = getelementptr inbounds %16, %16* %26, i32 0, i32 5
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %11, %11* %25, i64 %29
  store %11* %30, %11** %5, align 8
  br label %31

31:                                               ; preds = %40, %19
  br label %32

32:                                               ; preds = %31
  %33 = load %11*, %11** %4, align 8
  %34 = getelementptr inbounds %11, %11* %33, i32 0, i32 1
  %35 = bitcast %13* %34 to i32*
  store i32 0, i32* %35, align 8
  br label %36

36:                                               ; preds = %32
  br label %37

37:                                               ; preds = %36
  %38 = load %11*, %11** %4, align 8
  %39 = getelementptr inbounds %11, %11* %38, i32 1
  store %11* %39, %11** %4, align 8
  br label %40

40:                                               ; preds = %37
  %41 = load %11*, %11** %4, align 8
  %42 = load %11*, %11** %5, align 8
  %43 = icmp ne %11* %41, %42
  br i1 %43, label %31, label %44

44:                                               ; preds = %40
  %45 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #2
  %46 = bitcast %11** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #2
  br label %47

47:                                               ; preds = %44, %1
  %48 = load %16*, %16** %2, align 8
  %49 = getelementptr inbounds %16, %16* %48, i32 0, i32 1
  %50 = load %10*, %10** %49, align 8
  %51 = getelementptr inbounds %10, %10* %50, i32 0, i32 3
  %52 = getelementptr inbounds [1 x i8], [1 x i8]* %51, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error(i32 2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @79, i32 0, i32 0), i8* %52)
  %53 = load %20*, %20** %3, align 8
  %54 = bitcast %20** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #2
  ret %20* %53
}

declare dso_local void @zend_hash_clean(%5*) #4

; Function Attrs: nounwind uwtable
define dso_local %10* @zend_get_callable_name_ex(%11* %0, %20* %1) #0 {
  %3 = alloca %10*, align 8
  %4 = alloca %11*, align 8
  %5 = alloca %20*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %16*, align 8
  %10 = alloca %37*, align 8
  %11 = alloca %20*, align 8
  %12 = alloca %16*, align 8
  %13 = alloca %10*, align 8
  store %11* %0, %11** %4, align 8
  store %20* %1, %20** %5, align 8
  br label %14

14:                                               ; preds = %185, %2
  %15 = load %11*, %11** %4, align 8
  %16 = call zeroext i8 @125(%11* %15)
  %17 = zext i8 %16 to i32
  switch i32 %17, label %191 [
    i32 6, label %18
    i32 7, label %38
    i32 8, label %111
    i32 10, label %185
  ]

18:                                               ; preds = %14
  %19 = load %20*, %20** %5, align 8
  %20 = icmp ne %20* %19, null
  br i1 %20, label %21, label %32

21:                                               ; preds = %18
  %22 = load %20*, %20** %5, align 8
  %23 = getelementptr inbounds %20, %20* %22, i32 0, i32 2
  %24 = load %16*, %16** %23, align 8
  %25 = getelementptr inbounds %16, %16* %24, i32 0, i32 1
  %26 = load %10*, %10** %25, align 8
  %27 = load %11*, %11** %4, align 8
  %28 = getelementptr inbounds %11, %11* %27, i32 0, i32 0
  %29 = bitcast %12* %28 to %10**
  %30 = load %10*, %10** %29, align 8
  %31 = call %10* @154(%10* %26, %10* %30)
  store %10* %31, %10** %3, align 8
  br label %194

32:                                               ; preds = %18
  %33 = load %11*, %11** %4, align 8
  %34 = getelementptr inbounds %11, %11* %33, i32 0, i32 0
  %35 = bitcast %12* %34 to %10**
  %36 = load %10*, %10** %35, align 8
  %37 = call %10* @155(%10* %36)
  store %10* %37, %10** %3, align 8
  br label %194

38:                                               ; preds = %14
  %39 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #2
  store %11* null, %11** %6, align 8
  %40 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #2
  store %11* null, %11** %7, align 8
  %41 = load %11*, %11** %4, align 8
  %42 = getelementptr inbounds %11, %11* %41, i32 0, i32 0
  %43 = bitcast %12* %42 to %5**
  %44 = load %5*, %5** %43, align 8
  %45 = getelementptr inbounds %5, %5* %44, i32 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %48, label %59

48:                                               ; preds = %38
  %49 = load %11*, %11** %4, align 8
  %50 = getelementptr inbounds %11, %11* %49, i32 0, i32 0
  %51 = bitcast %12* %50 to %5**
  %52 = load %5*, %5** %51, align 8
  %53 = call %11* @156(%5* %52, i64 0)
  store %11* %53, %11** %7, align 8
  %54 = load %11*, %11** %4, align 8
  %55 = getelementptr inbounds %11, %11* %54, i32 0, i32 0
  %56 = bitcast %12* %55 to %5**
  %57 = load %5*, %5** %56, align 8
  %58 = call %11* @156(%5* %57, i64 1)
  store %11* %58, %11** %6, align 8
  br label %59

59:                                               ; preds = %48, %38
  %60 = load %11*, %11** %7, align 8
  %61 = icmp eq %11* %60, null
  br i1 %61, label %70, label %62

62:                                               ; preds = %59
  %63 = load %11*, %11** %6, align 8
  %64 = icmp eq %11* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = load %11*, %11** %6, align 8
  %67 = call zeroext i8 @125(%11* %66)
  %68 = zext i8 %67 to i32
  %69 = icmp ne i32 %68, 6
  br i1 %69, label %70, label %72

70:                                               ; preds = %65, %62, %59
  %71 = call %10* @134(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @81, i32 0, i32 0), i64 5, i32 0)
  store %10* %71, %10** %3, align 8
  store i32 1, i32* %8, align 4
  br label %108

72:                                               ; preds = %65
  %73 = load %11*, %11** %7, align 8
  %74 = call zeroext i8 @125(%11* %73)
  %75 = zext i8 %74 to i32
  %76 = icmp eq i32 %75, 6
  br i1 %76, label %77, label %87

77:                                               ; preds = %72
  %78 = load %11*, %11** %7, align 8
  %79 = getelementptr inbounds %11, %11* %78, i32 0, i32 0
  %80 = bitcast %12* %79 to %10**
  %81 = load %10*, %10** %80, align 8
  %82 = load %11*, %11** %6, align 8
  %83 = getelementptr inbounds %11, %11* %82, i32 0, i32 0
  %84 = bitcast %12* %83 to %10**
  %85 = load %10*, %10** %84, align 8
  %86 = call %10* @154(%10* %81, %10* %85)
  store %10* %86, %10** %3, align 8
  store i32 1, i32* %8, align 4
  br label %108

87:                                               ; preds = %72
  %88 = load %11*, %11** %7, align 8
  %89 = call zeroext i8 @125(%11* %88)
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 8
  br i1 %91, label %92, label %106

92:                                               ; preds = %87
  %93 = load %11*, %11** %7, align 8
  %94 = getelementptr inbounds %11, %11* %93, i32 0, i32 0
  %95 = bitcast %12* %94 to %20**
  %96 = load %20*, %20** %95, align 8
  %97 = getelementptr inbounds %20, %20* %96, i32 0, i32 2
  %98 = load %16*, %16** %97, align 8
  %99 = getelementptr inbounds %16, %16* %98, i32 0, i32 1
  %100 = load %10*, %10** %99, align 8
  %101 = load %11*, %11** %6, align 8
  %102 = getelementptr inbounds %11, %11* %101, i32 0, i32 0
  %103 = bitcast %12* %102 to %10**
  %104 = load %10*, %10** %103, align 8
  %105 = call %10* @154(%10* %100, %10* %104)
  store %10* %105, %10** %3, align 8
  store i32 1, i32* %8, align 4
  br label %108

106:                                              ; preds = %87
  %107 = call %10* @134(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @81, i32 0, i32 0), i64 5, i32 0)
  store %10* %107, %10** %3, align 8
  store i32 1, i32* %8, align 4
  br label %108

108:                                              ; preds = %106, %92, %77, %70
  %109 = bitcast %11** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109) #2
  %110 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110) #2
  br label %194

111:                                              ; preds = %14
  %112 = bitcast %16** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %112) #2
  %113 = bitcast %37** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %113) #2
  %114 = bitcast %20** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %114) #2
  %115 = load %11*, %11** %4, align 8
  %116 = getelementptr inbounds %11, %11* %115, i32 0, i32 0
  %117 = bitcast %12* %116 to %20**
  %118 = load %20*, %20** %117, align 8
  %119 = getelementptr inbounds %20, %20* %118, i32 0, i32 3
  %120 = load %21*, %21** %119, align 8
  %121 = getelementptr inbounds %21, %21* %120, i32 0, i32 24
  %122 = load i32 (%11*, %16**, %37**, %20**)*, i32 (%11*, %16**, %37**, %20**)** %121, align 8
  %123 = icmp ne i32 (%11*, %16**, %37**, %20**)* %122, null
  br i1 %123, label %124, label %178

124:                                              ; preds = %111
  %125 = load %11*, %11** %4, align 8
  %126 = getelementptr inbounds %11, %11* %125, i32 0, i32 0
  %127 = bitcast %12* %126 to %20**
  %128 = load %20*, %20** %127, align 8
  %129 = getelementptr inbounds %20, %20* %128, i32 0, i32 3
  %130 = load %21*, %21** %129, align 8
  %131 = getelementptr inbounds %21, %21* %130, i32 0, i32 24
  %132 = load i32 (%11*, %16**, %37**, %20**)*, i32 (%11*, %16**, %37**, %20**)** %131, align 8
  %133 = load %11*, %11** %4, align 8
  %134 = call i32 %132(%11* %133, %16** %9, %37** %10, %20** %11)
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %178

136:                                              ; preds = %124
  %137 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %137) #2
  %138 = load %11*, %11** %4, align 8
  %139 = getelementptr inbounds %11, %11* %138, i32 0, i32 0
  %140 = bitcast %12* %139 to %20**
  %141 = load %20*, %20** %140, align 8
  %142 = getelementptr inbounds %20, %20* %141, i32 0, i32 2
  %143 = load %16*, %16** %142, align 8
  store %16* %143, %16** %12, align 8
  %144 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %144) #2
  %145 = load %16*, %16** %12, align 8
  %146 = getelementptr inbounds %16, %16* %145, i32 0, i32 1
  %147 = load %10*, %10** %146, align 8
  %148 = getelementptr inbounds %10, %10* %147, i32 0, i32 2
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 11
  %151 = sub i64 %150, 1
  %152 = call %10* @138(i64 %151, i32 0)
  store %10* %152, %10** %13, align 8
  %153 = load %10*, %10** %13, align 8
  %154 = getelementptr inbounds %10, %10* %153, i32 0, i32 3
  %155 = getelementptr inbounds [1 x i8], [1 x i8]* %154, i32 0, i32 0
  %156 = load %16*, %16** %12, align 8
  %157 = getelementptr inbounds %16, %16* %156, i32 0, i32 1
  %158 = load %10*, %10** %157, align 8
  %159 = getelementptr inbounds %10, %10* %158, i32 0, i32 3
  %160 = getelementptr inbounds [1 x i8], [1 x i8]* %159, i32 0, i32 0
  %161 = load %16*, %16** %12, align 8
  %162 = getelementptr inbounds %16, %16* %161, i32 0, i32 1
  %163 = load %10*, %10** %162, align 8
  %164 = getelementptr inbounds %10, %10* %163, i32 0, i32 2
  %165 = load i64, i64* %164, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %160, i64 %165, i1 false)
  %166 = load %10*, %10** %13, align 8
  %167 = getelementptr inbounds %10, %10* %166, i32 0, i32 3
  %168 = getelementptr inbounds [1 x i8], [1 x i8]* %167, i32 0, i32 0
  %169 = load %16*, %16** %12, align 8
  %170 = getelementptr inbounds %16, %16* %169, i32 0, i32 1
  %171 = load %10*, %10** %170, align 8
  %172 = getelementptr inbounds %10, %10* %171, i32 0, i32 2
  %173 = load i64, i64* %172, align 8
  %174 = getelementptr inbounds i8, i8* %168, i64 %173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %174, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @82, i32 0, i32 0), i64 11, i1 false)
  %175 = load %10*, %10** %13, align 8
  store %10* %175, %10** %3, align 8
  store i32 1, i32* %8, align 4
  %176 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %176) #2
  %177 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %177) #2
  br label %181

178:                                              ; preds = %124, %111
  %179 = load %11*, %11** %4, align 8
  %180 = call %10* @157(%11* %179)
  store %10* %180, %10** %3, align 8
  store i32 1, i32* %8, align 4
  br label %181

181:                                              ; preds = %178, %136
  %182 = bitcast %20** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #2
  %183 = bitcast %37** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %183) #2
  %184 = bitcast %16** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184) #2
  br label %194

185:                                              ; preds = %14
  %186 = load %11*, %11** %4, align 8
  %187 = getelementptr inbounds %11, %11* %186, i32 0, i32 0
  %188 = bitcast %12* %187 to %61**
  %189 = load %61*, %61** %188, align 8
  %190 = getelementptr inbounds %61, %61* %189, i32 0, i32 1
  store %11* %190, %11** %4, align 8
  br label %14

191:                                              ; preds = %14
  %192 = load %11*, %11** %4, align 8
  %193 = call %10* @157(%11* %192)
  store %10* %193, %10** %3, align 8
  br label %194

194:                                              ; preds = %191, %181, %108, %32, %21
  %195 = load %10*, %10** %3, align 8
  ret %10* %195
}

; Function Attrs: nounwind uwtable
define internal %10* @154(%10* %0, %10* %1) #0 {
  %3 = alloca %10*, align 8
  %4 = alloca %10*, align 8
  %5 = alloca %10*, align 8
  %6 = alloca i8*, align 8
  store %10* %0, %10** %3, align 8
  store %10* %1, %10** %4, align 8
  %7 = bitcast %10** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #2
  %8 = load %10*, %10** %3, align 8
  %9 = getelementptr inbounds %10, %10* %8, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = load %10*, %10** %4, align 8
  %12 = getelementptr inbounds %10, %10* %11, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %10, %13
  %15 = add i64 %14, 3
  %16 = sub i64 %15, 1
  %17 = call %10* @138(i64 %16, i32 0)
  store %10* %17, %10** %5, align 8
  %18 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  %19 = load %10*, %10** %5, align 8
  %20 = getelementptr inbounds %10, %10* %19, i32 0, i32 3
  %21 = getelementptr inbounds [1 x i8], [1 x i8]* %20, i32 0, i32 0
  store i8* %21, i8** %6, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = load %10*, %10** %3, align 8
  %24 = getelementptr inbounds %10, %10* %23, i32 0, i32 3
  %25 = getelementptr inbounds [1 x i8], [1 x i8]* %24, i32 0, i32 0
  %26 = load %10*, %10** %3, align 8
  %27 = getelementptr inbounds %10, %10* %26, i32 0, i32 2
  %28 = load i64, i64* %27, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 8 %25, i64 %28, i1 false)
  %29 = load %10*, %10** %3, align 8
  %30 = getelementptr inbounds %10, %10* %29, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = load i8*, i8** %6, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  store i8* %33, i8** %6, align 8
  %34 = load i8*, i8** %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0), i64 2, i1 false)
  %35 = load i8*, i8** %6, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 2
  store i8* %36, i8** %6, align 8
  %37 = load i8*, i8** %6, align 8
  %38 = load %10*, %10** %4, align 8
  %39 = getelementptr inbounds %10, %10* %38, i32 0, i32 3
  %40 = getelementptr inbounds [1 x i8], [1 x i8]* %39, i32 0, i32 0
  %41 = load %10*, %10** %4, align 8
  %42 = getelementptr inbounds %10, %10* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 8 %40, i64 %44, i1 false)
  %45 = load %10*, %10** %5, align 8
  %46 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #2
  %47 = bitcast %10** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #2
  ret %10* %45
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %10* @155(%10* %0) #3 {
  %2 = alloca %10*, align 8
  store %10* %0, %10** %2, align 8
  %3 = load %10*, %10** %2, align 8
  %4 = getelementptr inbounds %10, %10* %3, i32 0, i32 0
  %5 = getelementptr inbounds %6, %6* %4, i32 0, i32 1
  %6 = bitcast %7* %5 to %63*
  %7 = getelementptr inbounds %63, %63* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = load %10*, %10** %2, align 8
  %14 = getelementptr inbounds %10, %10* %13, i32 0, i32 0
  %15 = getelementptr inbounds %6, %6* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  br label %18

18:                                               ; preds = %12, %1
  %19 = load %10*, %10** %2, align 8
  ret %10* %19
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %11* @156(%5* %0, i64 %1) #3 {
  %3 = alloca %5*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %11*, align 8
  store %5* %0, %5** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #2
  %7 = load %5*, %5** %3, align 8
  %8 = load i64, i64* %4, align 8
  %9 = call %11* @zend_hash_index_find(%5* %7, i64 %8)
  store %11* %9, %11** %5, align 8
  %10 = load %11*, %11** %5, align 8
  %11 = icmp ne %11* %10, null
  br i1 %11, label %12, label %33

12:                                               ; preds = %2
  br label %13

13:                                               ; preds = %12
  %14 = load %11*, %11** %5, align 8
  %15 = call zeroext i8 @125(%11* %14)
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %16, 10
  %18 = xor i1 %17, true
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = call i64 @llvm.expect.i64(i64 %21, i64 0)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %13
  %25 = load %11*, %11** %5, align 8
  %26 = getelementptr inbounds %11, %11* %25, i32 0, i32 0
  %27 = bitcast %12* %26 to %61**
  %28 = load %61*, %61** %27, align 8
  %29 = getelementptr inbounds %61, %61* %28, i32 0, i32 1
  store %11* %29, %11** %5, align 8
  br label %30

30:                                               ; preds = %24, %13
  br label %31

31:                                               ; preds = %30
  br label %32

32:                                               ; preds = %31
  br label %33

33:                                               ; preds = %32, %2
  %34 = load %11*, %11** %5, align 8
  %35 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #2
  ret %11* %34
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %10* @157(%11* %0) #3 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  %3 = load %11*, %11** %2, align 8
  %4 = call zeroext i8 @125(%11* %3)
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load %11*, %11** %2, align 8
  %9 = getelementptr inbounds %11, %11* %8, i32 0, i32 0
  %10 = bitcast %12* %9 to %10**
  %11 = load %10*, %10** %10, align 8
  %12 = call %10* @155(%10* %11)
  br label %16

13:                                               ; preds = %1
  %14 = load %11*, %11** %2, align 8
  %15 = call %10* @_zval_get_string_func(%11* %14)
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %10* [ %12, %7 ], [ %15, %13 ]
  ret %10* %17
}

; Function Attrs: nounwind uwtable
define dso_local %10* @zend_get_callable_name(%11* %0) #0 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  %3 = load %11*, %11** %2, align 8
  %4 = call %10* @zend_get_callable_name_ex(%11* %3, %20* null)
  ret %10* %4
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @zend_is_callable_ex(%11* %0, %20* %1, i32 %2, %10** %3, %70* %4, i8** %5) #0 {
  %7 = alloca %11*, align 8
  %8 = alloca %20*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %10**, align 8
  %11 = alloca %70*, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i8, align 1
  store %11* %0, %11** %7, align 8
  store %20* %1, %20** %8, align 8
  store i32 %2, i32* %9, align 4
  store %10** %3, %10*** %10, align 8
  store %70* %4, %70** %11, align 8
  store i8** %5, i8*** %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #2
  %14 = load %11*, %11** %7, align 8
  %15 = load %20*, %20** %8, align 8
  %16 = load i32, i32* %9, align 4
  %17 = load %70*, %70** %11, align 8
  %18 = load i8**, i8*** %12, align 8
  %19 = call zeroext i8 @158(%11* %14, %20* %15, i32 %16, %70* %17, i8** %18)
  store i8 %19, i8* %13, align 1
  %20 = load %10**, %10*** %10, align 8
  %21 = icmp ne %10** %20, null
  br i1 %21, label %22, label %27

22:                                               ; preds = %6
  %23 = load %11*, %11** %7, align 8
  %24 = load %20*, %20** %8, align 8
  %25 = call %10* @zend_get_callable_name_ex(%11* %23, %20* %24)
  %26 = load %10**, %10*** %10, align 8
  store %10* %25, %10** %26, align 8
  br label %27

27:                                               ; preds = %22, %6
  %28 = load i8, i8* %13, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #2
  ret i8 %28
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @158(%11* %0, %20* %1, i32 %2, %70* %3, i8** %4) #0 {
  %6 = alloca i8, align 1
  %7 = alloca %11*, align 8
  %8 = alloca %20*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %70*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i8, align 1
  %13 = alloca %70, align 8
  %14 = alloca i32, align 4
  %15 = alloca %11*, align 8
  %16 = alloca %11*, align 8
  %17 = alloca i32, align 4
  store %11* %0, %11** %7, align 8
  store %20* %1, %20** %8, align 8
  store i32 %2, i32* %9, align 4
  store %70* %3, %70** %10, align 8
  store i8** %4, i8*** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %12) #2
  %18 = bitcast %70* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %18) #2
  %19 = load %70*, %70** %10, align 8
  %20 = icmp eq %70* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %5
  store %70* %13, %70** %10, align 8
  br label %22

22:                                               ; preds = %21, %5
  %23 = load i8**, i8*** %11, align 8
  %24 = icmp ne i8** %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = load i8**, i8*** %11, align 8
  store i8* null, i8** %26, align 8
  br label %27

27:                                               ; preds = %25, %22
  %28 = load %70*, %70** %10, align 8
  %29 = getelementptr inbounds %70, %70* %28, i32 0, i32 0
  store i8 0, i8* %29, align 8
  %30 = load %70*, %70** %10, align 8
  %31 = getelementptr inbounds %70, %70* %30, i32 0, i32 2
  store %16* null, %16** %31, align 8
  %32 = load %70*, %70** %10, align 8
  %33 = getelementptr inbounds %70, %70* %32, i32 0, i32 3
  store %16* null, %16** %33, align 8
  %34 = load %70*, %70** %10, align 8
  %35 = getelementptr inbounds %70, %70* %34, i32 0, i32 1
  store %37* null, %37** %35, align 8
  %36 = load %70*, %70** %10, align 8
  %37 = getelementptr inbounds %70, %70* %36, i32 0, i32 4
  store %20* null, %20** %37, align 8
  br label %38

38:                                               ; preds = %470, %27
  %39 = load %11*, %11** %7, align 8
  %40 = call zeroext i8 @125(%11* %39)
  %41 = zext i8 %40 to i32
  switch i32 %41, label %476 [
    i32 6, label %42
    i32 7, label %143
    i32 8, label %427
    i32 10, label %470
  ]

42:                                               ; preds = %38
  %43 = load %20*, %20** %8, align 8
  %44 = icmp ne %20* %43, null
  br i1 %44, label %45, label %54

45:                                               ; preds = %42
  %46 = load %20*, %20** %8, align 8
  %47 = load %70*, %70** %10, align 8
  %48 = getelementptr inbounds %70, %70* %47, i32 0, i32 4
  store %20* %46, %20** %48, align 8
  %49 = load %20*, %20** %8, align 8
  %50 = getelementptr inbounds %20, %20* %49, i32 0, i32 2
  %51 = load %16*, %16** %50, align 8
  %52 = load %70*, %70** %10, align 8
  %53 = getelementptr inbounds %70, %70* %52, i32 0, i32 2
  store %16* %51, %16** %53, align 8
  br label %54

54:                                               ; preds = %45, %42
  %55 = load i32, i32* %9, align 4
  %56 = and i32 %55, 1
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = load %70*, %70** %10, align 8
  %60 = getelementptr inbounds %70, %70* %59, i32 0, i32 2
  %61 = load %16*, %16** %60, align 8
  %62 = load %70*, %70** %10, align 8
  %63 = getelementptr inbounds %70, %70* %62, i32 0, i32 3
  store %16* %61, %16** %63, align 8
  store i8 1, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %483

64:                                               ; preds = %54
  %65 = load i32, i32* %9, align 4
  %66 = load %11*, %11** %7, align 8
  %67 = load %70*, %70** %10, align 8
  %68 = load i8**, i8*** %11, align 8
  %69 = call i32 @182(i32 %65, %11* %66, %70* %67, i32 0, i8** %68)
  %70 = trunc i32 %69 to i8
  store i8 %70, i8* %12, align 1
  %71 = load %70*, %70** %10, align 8
  %72 = icmp eq %70* %71, %13
  br i1 %72, label %73, label %141

73:                                               ; preds = %64
  %74 = load %70*, %70** %10, align 8
  %75 = getelementptr inbounds %70, %70* %74, i32 0, i32 1
  %76 = load %37*, %37** %75, align 8
  %77 = icmp ne %37* %76, null
  br i1 %77, label %78, label %141

78:                                               ; preds = %73
  %79 = load %70*, %70** %10, align 8
  %80 = getelementptr inbounds %70, %70* %79, i32 0, i32 1
  %81 = load %37*, %37** %80, align 8
  %82 = bitcast %37* %81 to %60*
  %83 = getelementptr inbounds %60, %60* %82, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 2097152
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %103, label %87

87:                                               ; preds = %78
  %88 = load %70*, %70** %10, align 8
  %89 = getelementptr inbounds %70, %70* %88, i32 0, i32 1
  %90 = load %37*, %37** %89, align 8
  %91 = bitcast %37* %90 to i8*
  %92 = load i8, i8* %91, align 8
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 5
  br i1 %94, label %103, label %95

95:                                               ; preds = %87
  %96 = load %70*, %70** %10, align 8
  %97 = getelementptr inbounds %70, %70* %96, i32 0, i32 1
  %98 = load %37*, %37** %97, align 8
  %99 = bitcast %37* %98 to i8*
  %100 = load i8, i8* %99, align 8
  %101 = zext i8 %100 to i32
  %102 = icmp eq i32 %101, 3
  br i1 %102, label %103, label %141

103:                                              ; preds = %95, %87, %78
  %104 = load %70*, %70** %10, align 8
  %105 = getelementptr inbounds %70, %70* %104, i32 0, i32 1
  %106 = load %37*, %37** %105, align 8
  %107 = bitcast %37* %106 to i8*
  %108 = load i8, i8* %107, align 8
  %109 = zext i8 %108 to i32
  %110 = icmp ne i32 %109, 3
  br i1 %110, label %111, label %126

111:                                              ; preds = %103
  %112 = load %70*, %70** %10, align 8
  %113 = getelementptr inbounds %70, %70* %112, i32 0, i32 1
  %114 = load %37*, %37** %113, align 8
  %115 = bitcast %37* %114 to %60*
  %116 = getelementptr inbounds %60, %60* %115, i32 0, i32 3
  %117 = load %10*, %10** %116, align 8
  %118 = icmp ne %10* %117, null
  br i1 %118, label %119, label %126

119:                                              ; preds = %111
  %120 = load %70*, %70** %10, align 8
  %121 = getelementptr inbounds %70, %70* %120, i32 0, i32 1
  %122 = load %37*, %37** %121, align 8
  %123 = bitcast %37* %122 to %60*
  %124 = getelementptr inbounds %60, %60* %123, i32 0, i32 3
  %125 = load %10*, %10** %124, align 8
  call void @135(%10* %125)
  br label %126

126:                                              ; preds = %119, %111, %103
  br label %127

127:                                              ; preds = %126
  %128 = load %70*, %70** %10, align 8
  %129 = getelementptr inbounds %70, %70* %128, i32 0, i32 1
  %130 = load %37*, %37** %129, align 8
  %131 = icmp eq %37* %130, getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 57)
  br i1 %131, label %132, label %133

132:                                              ; preds = %127
  store %10* null, %10** getelementptr inbounds (%60, %60* bitcast (%37* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 57) to %60*), i32 0, i32 3), align 8
  br label %138

133:                                              ; preds = %127
  %134 = load %70*, %70** %10, align 8
  %135 = getelementptr inbounds %70, %70* %134, i32 0, i32 1
  %136 = load %37*, %37** %135, align 8
  %137 = bitcast %37* %136 to i8*
  call void @_efree(i8* %137)
  br label %138

138:                                              ; preds = %133, %132
  br label %139

139:                                              ; preds = %138
  br label %140

140:                                              ; preds = %139
  br label %141

141:                                              ; preds = %140, %95, %73, %64
  %142 = load i8, i8* %12, align 1
  store i8 %142, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %483

143:                                              ; preds = %38
  %144 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %144) #2
  store %11* null, %11** %15, align 8
  %145 = bitcast %11** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %145) #2
  store %11* null, %11** %16, align 8
  %146 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %146) #2
  store i32 0, i32* %17, align 4
  %147 = load %11*, %11** %7, align 8
  %148 = getelementptr inbounds %11, %11* %147, i32 0, i32 0
  %149 = bitcast %12* %148 to %5**
  %150 = load %5*, %5** %149, align 8
  %151 = getelementptr inbounds %5, %5* %150, i32 0, i32 5
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 2
  br i1 %153, label %154, label %165

154:                                              ; preds = %143
  %155 = load %11*, %11** %7, align 8
  %156 = getelementptr inbounds %11, %11* %155, i32 0, i32 0
  %157 = bitcast %12* %156 to %5**
  %158 = load %5*, %5** %157, align 8
  %159 = call %11* @zend_hash_index_find(%5* %158, i64 0)
  store %11* %159, %11** %16, align 8
  %160 = load %11*, %11** %7, align 8
  %161 = getelementptr inbounds %11, %11* %160, i32 0, i32 0
  %162 = bitcast %12* %161 to %5**
  %163 = load %5*, %5** %162, align 8
  %164 = call %11* @zend_hash_index_find(%5* %163, i64 1)
  store %11* %164, %11** %15, align 8
  br label %165

165:                                              ; preds = %154, %143
  br label %166

166:                                              ; preds = %165
  %167 = load %11*, %11** %16, align 8
  %168 = icmp eq %11* %167, null
  br i1 %168, label %172, label %169

169:                                              ; preds = %166
  %170 = load %11*, %11** %15, align 8
  %171 = icmp eq %11* %170, null
  br i1 %171, label %172, label %173

172:                                              ; preds = %169, %166
  br label %354

173:                                              ; preds = %169
  br label %174

174:                                              ; preds = %173
  %175 = load %11*, %11** %15, align 8
  %176 = call zeroext i8 @125(%11* %175)
  %177 = zext i8 %176 to i32
  %178 = icmp eq i32 %177, 10
  %179 = xor i1 %178, true
  %180 = xor i1 %179, true
  %181 = zext i1 %180 to i32
  %182 = sext i32 %181 to i64
  %183 = call i64 @llvm.expect.i64(i64 %182, i64 0)
  %184 = icmp ne i64 %183, 0
  br i1 %184, label %185, label %191

185:                                              ; preds = %174
  %186 = load %11*, %11** %15, align 8
  %187 = getelementptr inbounds %11, %11* %186, i32 0, i32 0
  %188 = bitcast %12* %187 to %61**
  %189 = load %61*, %61** %188, align 8
  %190 = getelementptr inbounds %61, %61* %189, i32 0, i32 1
  store %11* %190, %11** %15, align 8
  br label %191

191:                                              ; preds = %185, %174
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  %194 = load %11*, %11** %15, align 8
  %195 = call zeroext i8 @125(%11* %194)
  %196 = zext i8 %195 to i32
  %197 = icmp ne i32 %196, 6
  br i1 %197, label %198, label %199

198:                                              ; preds = %193
  br label %354

199:                                              ; preds = %193
  br label %200

200:                                              ; preds = %199
  %201 = load %11*, %11** %16, align 8
  %202 = call zeroext i8 @125(%11* %201)
  %203 = zext i8 %202 to i32
  %204 = icmp eq i32 %203, 10
  %205 = xor i1 %204, true
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %217

211:                                              ; preds = %200
  %212 = load %11*, %11** %16, align 8
  %213 = getelementptr inbounds %11, %11* %212, i32 0, i32 0
  %214 = bitcast %12* %213 to %61**
  %215 = load %61*, %61** %214, align 8
  %216 = getelementptr inbounds %61, %61* %215, i32 0, i32 1
  store %11* %216, %11** %16, align 8
  br label %217

217:                                              ; preds = %211, %200
  br label %218

218:                                              ; preds = %217
  br label %219

219:                                              ; preds = %218
  %220 = load %11*, %11** %16, align 8
  %221 = call zeroext i8 @125(%11* %220)
  %222 = zext i8 %221 to i32
  %223 = icmp eq i32 %222, 6
  br i1 %223, label %224, label %241

224:                                              ; preds = %219
  %225 = load i32, i32* %9, align 4
  %226 = and i32 %225, 1
  %227 = icmp ne i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  store i8 1, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %421

229:                                              ; preds = %224
  %230 = load %11*, %11** %16, align 8
  %231 = getelementptr inbounds %11, %11* %230, i32 0, i32 0
  %232 = bitcast %12* %231 to %10**
  %233 = load %10*, %10** %232, align 8
  %234 = call %16* @zend_get_executed_scope()
  %235 = load %70*, %70** %10, align 8
  %236 = load i8**, i8*** %11, align 8
  %237 = call i32 @183(%10* %233, %16* %234, %70* %235, i32* %17, i8** %236)
  %238 = icmp ne i32 %237, 0
  br i1 %238, label %240, label %239

239:                                              ; preds = %229
  store i8 0, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %421

240:                                              ; preds = %229
  br label %273

241:                                              ; preds = %219
  %242 = load %11*, %11** %16, align 8
  %243 = call zeroext i8 @125(%11* %242)
  %244 = zext i8 %243 to i32
  %245 = icmp eq i32 %244, 8
  br i1 %245, label %246, label %271

246:                                              ; preds = %241
  %247 = load %11*, %11** %16, align 8
  %248 = getelementptr inbounds %11, %11* %247, i32 0, i32 0
  %249 = bitcast %12* %248 to %20**
  %250 = load %20*, %20** %249, align 8
  %251 = getelementptr inbounds %20, %20* %250, i32 0, i32 2
  %252 = load %16*, %16** %251, align 8
  %253 = load %70*, %70** %10, align 8
  %254 = getelementptr inbounds %70, %70* %253, i32 0, i32 2
  store %16* %252, %16** %254, align 8
  %255 = load %11*, %11** %16, align 8
  %256 = getelementptr inbounds %11, %11* %255, i32 0, i32 0
  %257 = bitcast %12* %256 to %20**
  %258 = load %20*, %20** %257, align 8
  %259 = load %70*, %70** %10, align 8
  %260 = getelementptr inbounds %70, %70* %259, i32 0, i32 4
  store %20* %258, %20** %260, align 8
  %261 = load i32, i32* %9, align 4
  %262 = and i32 %261, 1
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %264, label %270

264:                                              ; preds = %246
  %265 = load %70*, %70** %10, align 8
  %266 = getelementptr inbounds %70, %70* %265, i32 0, i32 2
  %267 = load %16*, %16** %266, align 8
  %268 = load %70*, %70** %10, align 8
  %269 = getelementptr inbounds %70, %70* %268, i32 0, i32 3
  store %16* %267, %16** %269, align 8
  store i8 1, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %421

270:                                              ; preds = %246
  br label %272

271:                                              ; preds = %241
  br label %354

272:                                              ; preds = %270
  br label %273

273:                                              ; preds = %272, %240
  %274 = load i32, i32* %9, align 4
  %275 = load %11*, %11** %15, align 8
  %276 = load %70*, %70** %10, align 8
  %277 = load i32, i32* %17, align 4
  %278 = load i8**, i8*** %11, align 8
  %279 = call i32 @182(i32 %274, %11* %275, %70* %276, i32 %277, i8** %278)
  %280 = trunc i32 %279 to i8
  store i8 %280, i8* %12, align 1
  %281 = load %70*, %70** %10, align 8
  %282 = icmp eq %70* %281, %13
  br i1 %282, label %283, label %351

283:                                              ; preds = %273
  %284 = load %70*, %70** %10, align 8
  %285 = getelementptr inbounds %70, %70* %284, i32 0, i32 1
  %286 = load %37*, %37** %285, align 8
  %287 = icmp ne %37* %286, null
  br i1 %287, label %288, label %351

288:                                              ; preds = %283
  %289 = load %70*, %70** %10, align 8
  %290 = getelementptr inbounds %70, %70* %289, i32 0, i32 1
  %291 = load %37*, %37** %290, align 8
  %292 = bitcast %37* %291 to %60*
  %293 = getelementptr inbounds %60, %60* %292, i32 0, i32 2
  %294 = load i32, i32* %293, align 4
  %295 = and i32 %294, 2097152
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %313, label %297

297:                                              ; preds = %288
  %298 = load %70*, %70** %10, align 8
  %299 = getelementptr inbounds %70, %70* %298, i32 0, i32 1
  %300 = load %37*, %37** %299, align 8
  %301 = bitcast %37* %300 to i8*
  %302 = load i8, i8* %301, align 8
  %303 = zext i8 %302 to i32
  %304 = icmp eq i32 %303, 5
  br i1 %304, label %313, label %305

305:                                              ; preds = %297
  %306 = load %70*, %70** %10, align 8
  %307 = getelementptr inbounds %70, %70* %306, i32 0, i32 1
  %308 = load %37*, %37** %307, align 8
  %309 = bitcast %37* %308 to i8*
  %310 = load i8, i8* %309, align 8
  %311 = zext i8 %310 to i32
  %312 = icmp eq i32 %311, 3
  br i1 %312, label %313, label %351

313:                                              ; preds = %305, %297, %288
  %314 = load %70*, %70** %10, align 8
  %315 = getelementptr inbounds %70, %70* %314, i32 0, i32 1
  %316 = load %37*, %37** %315, align 8
  %317 = bitcast %37* %316 to i8*
  %318 = load i8, i8* %317, align 8
  %319 = zext i8 %318 to i32
  %320 = icmp ne i32 %319, 3
  br i1 %320, label %321, label %336

321:                                              ; preds = %313
  %322 = load %70*, %70** %10, align 8
  %323 = getelementptr inbounds %70, %70* %322, i32 0, i32 1
  %324 = load %37*, %37** %323, align 8
  %325 = bitcast %37* %324 to %60*
  %326 = getelementptr inbounds %60, %60* %325, i32 0, i32 3
  %327 = load %10*, %10** %326, align 8
  %328 = icmp ne %10* %327, null
  br i1 %328, label %329, label %336

329:                                              ; preds = %321
  %330 = load %70*, %70** %10, align 8
  %331 = getelementptr inbounds %70, %70* %330, i32 0, i32 1
  %332 = load %37*, %37** %331, align 8
  %333 = bitcast %37* %332 to %60*
  %334 = getelementptr inbounds %60, %60* %333, i32 0, i32 3
  %335 = load %10*, %10** %334, align 8
  call void @135(%10* %335)
  br label %336

336:                                              ; preds = %329, %321, %313
  br label %337

337:                                              ; preds = %336
  %338 = load %70*, %70** %10, align 8
  %339 = getelementptr inbounds %70, %70* %338, i32 0, i32 1
  %340 = load %37*, %37** %339, align 8
  %341 = icmp eq %37* %340, getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 57)
  br i1 %341, label %342, label %343

342:                                              ; preds = %337
  store %10* null, %10** getelementptr inbounds (%60, %60* bitcast (%37* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 57) to %60*), i32 0, i32 3), align 8
  br label %348

343:                                              ; preds = %337
  %344 = load %70*, %70** %10, align 8
  %345 = getelementptr inbounds %70, %70* %344, i32 0, i32 1
  %346 = load %37*, %37** %345, align 8
  %347 = bitcast %37* %346 to i8*
  call void @_efree(i8* %347)
  br label %348

348:                                              ; preds = %343, %342
  br label %349

349:                                              ; preds = %348
  br label %350

350:                                              ; preds = %349
  br label %351

351:                                              ; preds = %350, %305, %283, %273
  %352 = load i8, i8* %12, align 1
  store i8 %352, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %421

353:                                              ; No predecessors!
  br label %354

354:                                              ; preds = %353, %271, %198, %172
  %355 = load %11*, %11** %7, align 8
  %356 = getelementptr inbounds %11, %11* %355, i32 0, i32 0
  %357 = bitcast %12* %356 to %5**
  %358 = load %5*, %5** %357, align 8
  %359 = getelementptr inbounds %5, %5* %358, i32 0, i32 5
  %360 = load i32, i32* %359, align 4
  %361 = icmp eq i32 %360, 2
  br i1 %361, label %362, label %413

362:                                              ; preds = %354
  %363 = load %11*, %11** %16, align 8
  %364 = icmp ne %11* %363, null
  br i1 %364, label %365, label %398

365:                                              ; preds = %362
  %366 = load %11*, %11** %16, align 8
  %367 = call zeroext i8 @125(%11* %366)
  %368 = zext i8 %367 to i32
  %369 = icmp eq i32 %368, 10
  br i1 %369, label %380, label %370

370:                                              ; preds = %365
  %371 = load %11*, %11** %16, align 8
  %372 = call zeroext i8 @125(%11* %371)
  %373 = zext i8 %372 to i32
  %374 = icmp ne i32 %373, 6
  br i1 %374, label %375, label %405

375:                                              ; preds = %370
  %376 = load %11*, %11** %16, align 8
  %377 = call zeroext i8 @125(%11* %376)
  %378 = zext i8 %377 to i32
  %379 = icmp ne i32 %378, 8
  br i1 %379, label %398, label %405

380:                                              ; preds = %365
  %381 = load %11*, %11** %16, align 8
  %382 = getelementptr inbounds %11, %11* %381, i32 0, i32 0
  %383 = bitcast %12* %382 to %61**
  %384 = load %61*, %61** %383, align 8
  %385 = getelementptr inbounds %61, %61* %384, i32 0, i32 1
  %386 = call zeroext i8 @125(%11* %385)
  %387 = zext i8 %386 to i32
  %388 = icmp ne i32 %387, 6
  br i1 %388, label %389, label %405

389:                                              ; preds = %380
  %390 = load %11*, %11** %16, align 8
  %391 = getelementptr inbounds %11, %11* %390, i32 0, i32 0
  %392 = bitcast %12* %391 to %61**
  %393 = load %61*, %61** %392, align 8
  %394 = getelementptr inbounds %61, %61* %393, i32 0, i32 1
  %395 = call zeroext i8 @125(%11* %394)
  %396 = zext i8 %395 to i32
  %397 = icmp ne i32 %396, 8
  br i1 %397, label %398, label %405

398:                                              ; preds = %389, %375, %362
  %399 = load i8**, i8*** %11, align 8
  %400 = icmp ne i8** %399, null
  br i1 %400, label %401, label %404

401:                                              ; preds = %398
  %402 = load i8**, i8*** %11, align 8
  %403 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %402, i64 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @102, i32 0, i32 0))
  br label %404

404:                                              ; preds = %401, %398
  br label %412

405:                                              ; preds = %389, %380, %375, %370
  %406 = load i8**, i8*** %11, align 8
  %407 = icmp ne i8** %406, null
  br i1 %407, label %408, label %411

408:                                              ; preds = %405
  %409 = load i8**, i8*** %11, align 8
  %410 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %409, i64 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @103, i32 0, i32 0))
  br label %411

411:                                              ; preds = %408, %405
  br label %412

412:                                              ; preds = %411, %404
  br label %420

413:                                              ; preds = %354
  %414 = load i8**, i8*** %11, align 8
  %415 = icmp ne i8** %414, null
  br i1 %415, label %416, label %419

416:                                              ; preds = %413
  %417 = load i8**, i8*** %11, align 8
  %418 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %417, i64 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @104, i32 0, i32 0))
  br label %419

419:                                              ; preds = %416, %413
  br label %420

420:                                              ; preds = %419, %412
  store i32 0, i32* %14, align 4
  br label %421

421:                                              ; preds = %420, %351, %264, %239, %228
  %422 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %422) #2
  %423 = bitcast %11** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %423) #2
  %424 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %424) #2
  %425 = load i32, i32* %14, align 4
  switch i32 %425, label %483 [
    i32 0, label %426
  ]

426:                                              ; preds = %421
  store i8 0, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %483

427:                                              ; preds = %38
  %428 = load %11*, %11** %7, align 8
  %429 = getelementptr inbounds %11, %11* %428, i32 0, i32 0
  %430 = bitcast %12* %429 to %20**
  %431 = load %20*, %20** %430, align 8
  %432 = getelementptr inbounds %20, %20* %431, i32 0, i32 3
  %433 = load %21*, %21** %432, align 8
  %434 = getelementptr inbounds %21, %21* %433, i32 0, i32 24
  %435 = load i32 (%11*, %16**, %37**, %20**)*, i32 (%11*, %16**, %37**, %20**)** %434, align 8
  %436 = icmp ne i32 (%11*, %16**, %37**, %20**)* %435, null
  br i1 %436, label %437, label %463

437:                                              ; preds = %427
  %438 = load %11*, %11** %7, align 8
  %439 = getelementptr inbounds %11, %11* %438, i32 0, i32 0
  %440 = bitcast %12* %439 to %20**
  %441 = load %20*, %20** %440, align 8
  %442 = getelementptr inbounds %20, %20* %441, i32 0, i32 3
  %443 = load %21*, %21** %442, align 8
  %444 = getelementptr inbounds %21, %21* %443, i32 0, i32 24
  %445 = load i32 (%11*, %16**, %37**, %20**)*, i32 (%11*, %16**, %37**, %20**)** %444, align 8
  %446 = load %11*, %11** %7, align 8
  %447 = load %70*, %70** %10, align 8
  %448 = getelementptr inbounds %70, %70* %447, i32 0, i32 2
  %449 = load %70*, %70** %10, align 8
  %450 = getelementptr inbounds %70, %70* %449, i32 0, i32 1
  %451 = load %70*, %70** %10, align 8
  %452 = getelementptr inbounds %70, %70* %451, i32 0, i32 4
  %453 = call i32 %445(%11* %446, %16** %448, %37** %450, %20** %452)
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %463

455:                                              ; preds = %437
  %456 = load %70*, %70** %10, align 8
  %457 = getelementptr inbounds %70, %70* %456, i32 0, i32 2
  %458 = load %16*, %16** %457, align 8
  %459 = load %70*, %70** %10, align 8
  %460 = getelementptr inbounds %70, %70* %459, i32 0, i32 3
  store %16* %458, %16** %460, align 8
  %461 = load %70*, %70** %10, align 8
  %462 = getelementptr inbounds %70, %70* %461, i32 0, i32 0
  store i8 1, i8* %462, align 8
  store i8 1, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %483

463:                                              ; preds = %437, %427
  %464 = load i8**, i8*** %11, align 8
  %465 = icmp ne i8** %464, null
  br i1 %465, label %466, label %469

466:                                              ; preds = %463
  %467 = load i8**, i8*** %11, align 8
  %468 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %467, i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @105, i32 0, i32 0))
  br label %469

469:                                              ; preds = %466, %463
  store i8 0, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %483

470:                                              ; preds = %38
  %471 = load %11*, %11** %7, align 8
  %472 = getelementptr inbounds %11, %11* %471, i32 0, i32 0
  %473 = bitcast %12* %472 to %61**
  %474 = load %61*, %61** %473, align 8
  %475 = getelementptr inbounds %61, %61* %474, i32 0, i32 1
  store %11* %475, %11** %7, align 8
  br label %38

476:                                              ; preds = %38
  %477 = load i8**, i8*** %11, align 8
  %478 = icmp ne i8** %477, null
  br i1 %478, label %479, label %482

479:                                              ; preds = %476
  %480 = load i8**, i8*** %11, align 8
  %481 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %480, i64 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @105, i32 0, i32 0))
  br label %482

482:                                              ; preds = %479, %476
  store i8 0, i8* %6, align 1
  store i32 1, i32* %14, align 4
  br label %483

483:                                              ; preds = %482, %469, %455, %426, %421, %141, %58
  %484 = bitcast %70* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %484) #2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %12) #2
  %485 = load i8, i8* %6, align 1
  ret i8 %485
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @zend_is_callable(%11* %0, i32 %1, %10** %2) #0 {
  %4 = alloca %11*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %10**, align 8
  store %11* %0, %11** %4, align 8
  store i32 %1, i32* %5, align 4
  store %10** %2, %10*** %6, align 8
  %7 = load %11*, %11** %4, align 8
  %8 = load i32, i32* %5, align 4
  %9 = load %10**, %10*** %6, align 8
  %10 = call zeroext i8 @zend_is_callable_ex(%11* %7, %20* null, i32 %8, %10** %9, %70* null, i8** null)
  ret i8 %10
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @zend_make_callable(%11* %0, %10** %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca %11*, align 8
  %5 = alloca %10**, align 8
  %6 = alloca %70, align 8
  %7 = alloca i32, align 4
  store %11* %0, %11** %4, align 8
  store %10** %1, %10*** %5, align 8
  %8 = bitcast %70* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %8) #2
  %9 = load %11*, %11** %4, align 8
  %10 = load %10**, %10*** %5, align 8
  %11 = call zeroext i8 @zend_is_callable_ex(%11* %9, %20* null, i32 4, %10** %10, %70* %6, i8** null)
  %12 = icmp ne i8 %11, 0
  br i1 %12, label %13, label %94

13:                                               ; preds = %2
  %14 = load %11*, %11** %4, align 8
  %15 = call zeroext i8 @125(%11* %14)
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %16, 6
  br i1 %17, label %18, label %41

18:                                               ; preds = %13
  %19 = getelementptr inbounds %70, %70* %6, i32 0, i32 2
  %20 = load %16*, %16** %19, align 8
  %21 = icmp ne %16* %20, null
  br i1 %21, label %22, label %41

22:                                               ; preds = %18
  %23 = load %11*, %11** %4, align 8
  call void @131(%11* %23)
  %24 = load %11*, %11** %4, align 8
  %25 = call i32 @_array_init(%11* %24, i32 0)
  %26 = load %11*, %11** %4, align 8
  %27 = getelementptr inbounds %70, %70* %6, i32 0, i32 2
  %28 = load %16*, %16** %27, align 8
  %29 = getelementptr inbounds %16, %16* %28, i32 0, i32 1
  %30 = load %10*, %10** %29, align 8
  %31 = call %10* @155(%10* %30)
  %32 = call i32 @add_next_index_str(%11* %26, %10* %31)
  %33 = load %11*, %11** %4, align 8
  %34 = getelementptr inbounds %70, %70* %6, i32 0, i32 1
  %35 = load %37*, %37** %34, align 8
  %36 = bitcast %37* %35 to %60*
  %37 = getelementptr inbounds %60, %60* %36, i32 0, i32 3
  %38 = load %10*, %10** %37, align 8
  %39 = call %10* @155(%10* %38)
  %40 = call i32 @add_next_index_str(%11* %33, %10* %39)
  br label %41

41:                                               ; preds = %22, %18, %13
  %42 = getelementptr inbounds %70, %70* %6, i32 0, i32 1
  %43 = load %37*, %37** %42, align 8
  %44 = icmp ne %37* %43, null
  br i1 %44, label %45, label %93

45:                                               ; preds = %41
  %46 = getelementptr inbounds %70, %70* %6, i32 0, i32 1
  %47 = load %37*, %37** %46, align 8
  %48 = bitcast %37* %47 to %60*
  %49 = getelementptr inbounds %60, %60* %48, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 2097152
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %67, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %70, %70* %6, i32 0, i32 1
  %55 = load %37*, %37** %54, align 8
  %56 = bitcast %37* %55 to i8*
  %57 = load i8, i8* %56, align 8
  %58 = zext i8 %57 to i32
  %59 = icmp eq i32 %58, 5
  br i1 %59, label %67, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %70, %70* %6, i32 0, i32 1
  %62 = load %37*, %37** %61, align 8
  %63 = bitcast %37* %62 to i8*
  %64 = load i8, i8* %63, align 8
  %65 = zext i8 %64 to i32
  %66 = icmp eq i32 %65, 3
  br i1 %66, label %67, label %93

67:                                               ; preds = %60, %53, %45
  %68 = getelementptr inbounds %70, %70* %6, i32 0, i32 1
  %69 = load %37*, %37** %68, align 8
  %70 = bitcast %37* %69 to i8*
  %71 = load i8, i8* %70, align 8
  %72 = zext i8 %71 to i32
  %73 = icmp ne i32 %72, 3
  br i1 %73, label %74, label %80

74:                                               ; preds = %67
  %75 = getelementptr inbounds %70, %70* %6, i32 0, i32 1
  %76 = load %37*, %37** %75, align 8
  %77 = bitcast %37* %76 to %60*
  %78 = getelementptr inbounds %60, %60* %77, i32 0, i32 3
  %79 = load %10*, %10** %78, align 8
  call void @135(%10* %79)
  br label %80

80:                                               ; preds = %74, %67
  br label %81

81:                                               ; preds = %80
  %82 = getelementptr inbounds %70, %70* %6, i32 0, i32 1
  %83 = load %37*, %37** %82, align 8
  %84 = icmp eq %37* %83, getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 57)
  br i1 %84, label %85, label %86

85:                                               ; preds = %81
  store %10* null, %10** getelementptr inbounds (%60, %60* bitcast (%37* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 57) to %60*), i32 0, i32 3), align 8
  br label %90

86:                                               ; preds = %81
  %87 = getelementptr inbounds %70, %70* %6, i32 0, i32 1
  %88 = load %37*, %37** %87, align 8
  %89 = bitcast %37* %88 to i8*
  call void @_efree(i8* %89)
  br label %90

90:                                               ; preds = %86, %85
  br label %91

91:                                               ; preds = %90
  br label %92

92:                                               ; preds = %91
  br label %93

93:                                               ; preds = %92, %60, %41
  store i8 1, i8* %3, align 1
  store i32 1, i32* %7, align 4
  br label %95

94:                                               ; preds = %2
  store i8 0, i8* %3, align 1
  store i32 1, i32* %7, align 4
  br label %95

95:                                               ; preds = %94, %93
  %96 = bitcast %70* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %96) #2
  %97 = load i8, i8* %3, align 1
  ret i8 %97
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_fcall_info_init(%11* %0, i32 %1, %71* %2, %70* %3, %10** %4, i8** %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %11*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %71*, align 8
  %11 = alloca %70*, align 8
  %12 = alloca %10**, align 8
  %13 = alloca i8**, align 8
  %14 = alloca %11*, align 8
  %15 = alloca %11*, align 8
  %16 = alloca %58*, align 8
  %17 = alloca i32, align 4
  store %11* %0, %11** %8, align 8
  store i32 %1, i32* %9, align 4
  store %71* %2, %71** %10, align 8
  store %70* %3, %70** %11, align 8
  store %10** %4, %10*** %12, align 8
  store i8** %5, i8*** %13, align 8
  %18 = load %11*, %11** %8, align 8
  %19 = load i32, i32* %9, align 4
  %20 = load %10**, %10*** %12, align 8
  %21 = load %70*, %70** %11, align 8
  %22 = load i8**, i8*** %13, align 8
  %23 = call zeroext i8 @zend_is_callable_ex(%11* %18, %20* null, i32 %19, %10** %20, %70* %21, i8** %22)
  %24 = icmp ne i8 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %6
  store i32 -1, i32* %7, align 4
  br label %74

26:                                               ; preds = %6
  %27 = load %71*, %71** %10, align 8
  %28 = getelementptr inbounds %71, %71* %27, i32 0, i32 0
  store i64 56, i64* %28, align 8
  %29 = load %70*, %70** %11, align 8
  %30 = getelementptr inbounds %70, %70* %29, i32 0, i32 4
  %31 = load %20*, %20** %30, align 8
  %32 = load %71*, %71** %10, align 8
  %33 = getelementptr inbounds %71, %71* %32, i32 0, i32 4
  store %20* %31, %20** %33, align 8
  br label %34

34:                                               ; preds = %26
  %35 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #2
  %36 = load %71*, %71** %10, align 8
  %37 = getelementptr inbounds %71, %71* %36, i32 0, i32 1
  store %11* %37, %11** %14, align 8
  %38 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #2
  %39 = load %11*, %11** %8, align 8
  store %11* %39, %11** %15, align 8
  %40 = bitcast %58** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #2
  %41 = load %11*, %11** %15, align 8
  %42 = getelementptr inbounds %11, %11* %41, i32 0, i32 0
  %43 = bitcast %12* %42 to %58**
  %44 = load %58*, %58** %43, align 8
  store %58* %44, %58** %16, align 8
  %45 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #2
  %46 = load %11*, %11** %15, align 8
  %47 = getelementptr inbounds %11, %11* %46, i32 0, i32 1
  %48 = bitcast %13* %47 to i32*
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %17, align 4
  br label %50

50:                                               ; preds = %34
  %51 = load %58*, %58** %16, align 8
  %52 = load %11*, %11** %14, align 8
  %53 = getelementptr inbounds %11, %11* %52, i32 0, i32 0
  %54 = bitcast %12* %53 to %58**
  store %58* %51, %58** %54, align 8
  %55 = load i32, i32* %17, align 4
  %56 = load %11*, %11** %14, align 8
  %57 = getelementptr inbounds %11, %11* %56, i32 0, i32 1
  %58 = bitcast %13* %57 to i32*
  store i32 %55, i32* %58, align 8
  br label %59

59:                                               ; preds = %50
  br label %60

60:                                               ; preds = %59
  %61 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #2
  %62 = bitcast %58** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #2
  %63 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #2
  %64 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #2
  br label %65

65:                                               ; preds = %60
  %66 = load %71*, %71** %10, align 8
  %67 = getelementptr inbounds %71, %71* %66, i32 0, i32 2
  store %11* null, %11** %67, align 8
  %68 = load %71*, %71** %10, align 8
  %69 = getelementptr inbounds %71, %71* %68, i32 0, i32 6
  store i32 0, i32* %69, align 4
  %70 = load %71*, %71** %10, align 8
  %71 = getelementptr inbounds %71, %71* %70, i32 0, i32 3
  store %11* null, %11** %71, align 8
  %72 = load %71*, %71** %10, align 8
  %73 = getelementptr inbounds %71, %71* %72, i32 0, i32 5
  store i8 1, i8* %73, align 8
  store i32 0, i32* %7, align 4
  br label %74

74:                                               ; preds = %65, %25
  %75 = load i32, i32* %7, align 4
  ret i32 %75
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_fcall_info_args_clear(%71* %0, i32 %1) #0 {
  %3 = alloca %71*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca %11*, align 8
  store %71* %0, %71** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %71*, %71** %3, align 8
  %8 = getelementptr inbounds %71, %71* %7, i32 0, i32 3
  %9 = load %11*, %11** %8, align 8
  %10 = icmp ne %11* %9, null
  br i1 %10, label %11, label %44

11:                                               ; preds = %2
  %12 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = load %71*, %71** %3, align 8
  %14 = getelementptr inbounds %71, %71* %13, i32 0, i32 3
  %15 = load %11*, %11** %14, align 8
  store %11* %15, %11** %5, align 8
  %16 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load %11*, %11** %5, align 8
  %18 = load %71*, %71** %3, align 8
  %19 = getelementptr inbounds %71, %71* %18, i32 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %11, %11* %17, i64 %21
  store %11* %22, %11** %6, align 8
  br label %23

23:                                               ; preds = %27, %11
  %24 = load %11*, %11** %5, align 8
  %25 = load %11*, %11** %6, align 8
  %26 = icmp ne %11* %24, %25
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = load %11*, %11** %5, align 8
  call void @159(%11* %28)
  %29 = load %11*, %11** %5, align 8
  %30 = getelementptr inbounds %11, %11* %29, i32 1
  store %11* %30, %11** %5, align 8
  br label %23

31:                                               ; preds = %23
  %32 = load i32, i32* %4, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %31
  %35 = load %71*, %71** %3, align 8
  %36 = getelementptr inbounds %71, %71* %35, i32 0, i32 3
  %37 = load %11*, %11** %36, align 8
  %38 = bitcast %11* %37 to i8*
  call void @_efree(i8* %38)
  %39 = load %71*, %71** %3, align 8
  %40 = getelementptr inbounds %71, %71* %39, i32 0, i32 3
  store %11* null, %11** %40, align 8
  br label %41

41:                                               ; preds = %34, %31
  %42 = bitcast %11** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #2
  %43 = bitcast %11** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #2
  br label %44

44:                                               ; preds = %41, %2
  %45 = load %71*, %71** %3, align 8
  %46 = getelementptr inbounds %71, %71* %45, i32 0, i32 6
  store i32 0, i32* %46, align 4
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @159(%11* %0) #3 {
  %2 = alloca %11*, align 8
  %3 = alloca %58*, align 8
  store %11* %0, %11** %2, align 8
  %4 = load %11*, %11** %2, align 8
  %5 = getelementptr inbounds %11, %11* %4, i32 0, i32 1
  %6 = bitcast %13* %5 to %59*
  %7 = getelementptr inbounds %59, %59* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %30

12:                                               ; preds = %1
  %13 = bitcast %58** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  %14 = load %11*, %11** %2, align 8
  %15 = getelementptr inbounds %11, %11* %14, i32 0, i32 0
  %16 = bitcast %12* %15 to %58**
  %17 = load %58*, %58** %16, align 8
  store %58* %17, %58** %3, align 8
  %18 = load %58*, %58** %3, align 8
  %19 = getelementptr inbounds %58, %58* %18, i32 0, i32 0
  %20 = getelementptr inbounds %6, %6* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -1
  store i32 %22, i32* %20, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %12
  %25 = load %58*, %58** %3, align 8
  call void @_zval_dtor_func(%58* %25)
  br label %28

26:                                               ; preds = %12
  %27 = load %58*, %58** %3, align 8
  call void @185(%58* %27)
  br label %28

28:                                               ; preds = %26, %24
  %29 = bitcast %58** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #2
  br label %30

30:                                               ; preds = %28, %1
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_fcall_info_args_save(%71* %0, i32* %1, %11** %2) #0 {
  %4 = alloca %71*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %11**, align 8
  store %71* %0, %71** %4, align 8
  store i32* %1, i32** %5, align 8
  store %11** %2, %11*** %6, align 8
  %7 = load %71*, %71** %4, align 8
  %8 = getelementptr inbounds %71, %71* %7, i32 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = load i32*, i32** %5, align 8
  store i32 %9, i32* %10, align 4
  %11 = load %71*, %71** %4, align 8
  %12 = getelementptr inbounds %71, %71* %11, i32 0, i32 3
  %13 = load %11*, %11** %12, align 8
  %14 = load %11**, %11*** %6, align 8
  store %11* %13, %11** %14, align 8
  %15 = load %71*, %71** %4, align 8
  %16 = getelementptr inbounds %71, %71* %15, i32 0, i32 6
  store i32 0, i32* %16, align 4
  %17 = load %71*, %71** %4, align 8
  %18 = getelementptr inbounds %71, %71* %17, i32 0, i32 3
  store %11* null, %11** %18, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_fcall_info_args_restore(%71* %0, i32 %1, %11* %2) #0 {
  %4 = alloca %71*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %11*, align 8
  store %71* %0, %71** %4, align 8
  store i32 %1, i32* %5, align 4
  store %11* %2, %11** %6, align 8
  %7 = load %71*, %71** %4, align 8
  call void @zend_fcall_info_args_clear(%71* %7, i32 1)
  %8 = load i32, i32* %5, align 4
  %9 = load %71*, %71** %4, align 8
  %10 = getelementptr inbounds %71, %71* %9, i32 0, i32 6
  store i32 %8, i32* %10, align 4
  %11 = load %11*, %11** %6, align 8
  %12 = load %71*, %71** %4, align 8
  %13 = getelementptr inbounds %71, %71* %12, i32 0, i32 3
  store %11* %11, %11** %13, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_fcall_info_args_ex(%71* %0, %37* %1, %11* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %71*, align 8
  %6 = alloca %37*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %11*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %5*, align 8
  %13 = alloca %9*, align 8
  %14 = alloca %9*, align 8
  %15 = alloca %11*, align 8
  %16 = alloca %61*, align 8
  %17 = alloca %11*, align 8
  %18 = alloca %11*, align 8
  %19 = alloca %58*, align 8
  %20 = alloca i32, align 4
  %21 = alloca %11*, align 8
  %22 = alloca %11*, align 8
  %23 = alloca %58*, align 8
  %24 = alloca i32, align 4
  store %71* %0, %71** %5, align 8
  store %37* %1, %37** %6, align 8
  store %11* %2, %11** %7, align 8
  %25 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #2
  %26 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #2
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #2
  store i32 1, i32* %10, align 4
  %28 = load %71*, %71** %5, align 8
  %29 = load %11*, %11** %7, align 8
  %30 = icmp ne %11* %29, null
  %31 = xor i1 %30, true
  %32 = zext i1 %31 to i32
  call void @zend_fcall_info_args_clear(%71* %28, i32 %32)
  %33 = load %11*, %11** %7, align 8
  %34 = icmp ne %11* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  store i32 1, i32* %11, align 4
  br label %242

36:                                               ; preds = %3
  %37 = load %11*, %11** %7, align 8
  %38 = call zeroext i8 @125(%11* %37)
  %39 = zext i8 %38 to i32
  %40 = icmp ne i32 %39, 7
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %11, align 4
  br label %242

42:                                               ; preds = %36
  %43 = load %11*, %11** %7, align 8
  %44 = getelementptr inbounds %11, %11* %43, i32 0, i32 0
  %45 = bitcast %12* %44 to %5**
  %46 = load %5*, %5** %45, align 8
  %47 = getelementptr inbounds %5, %5* %46, i32 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = load %71*, %71** %5, align 8
  %50 = getelementptr inbounds %71, %71* %49, i32 0, i32 6
  store i32 %48, i32* %50, align 4
  %51 = load %71*, %71** %5, align 8
  %52 = getelementptr inbounds %71, %71* %51, i32 0, i32 3
  %53 = load %11*, %11** %52, align 8
  %54 = bitcast %11* %53 to i8*
  %55 = load %71*, %71** %5, align 8
  %56 = getelementptr inbounds %71, %71* %55, i32 0, i32 6
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = mul i64 %58, 16
  %60 = call i8* @_erealloc(i8* %54, i64 %59) #23
  %61 = bitcast i8* %60 to %11*
  store %11* %61, %11** %9, align 8
  %62 = load %71*, %71** %5, align 8
  %63 = getelementptr inbounds %71, %71* %62, i32 0, i32 3
  store %11* %61, %11** %63, align 8
  br label %64

64:                                               ; preds = %42
  %65 = bitcast %5** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %65) #2
  %66 = load %11*, %11** %7, align 8
  %67 = getelementptr inbounds %11, %11* %66, i32 0, i32 0
  %68 = bitcast %12* %67 to %5**
  %69 = load %5*, %5** %68, align 8
  store %5* %69, %5** %12, align 8
  %70 = bitcast %9** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %70) #2
  %71 = load %5*, %5** %12, align 8
  %72 = getelementptr inbounds %5, %5* %71, i32 0, i32 3
  %73 = load %9*, %9** %72, align 8
  store %9* %73, %9** %13, align 8
  %74 = bitcast %9** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #2
  %75 = load %9*, %9** %13, align 8
  %76 = load %5*, %5** %12, align 8
  %77 = getelementptr inbounds %5, %5* %76, i32 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %9, %9* %75, i64 %79
  store %9* %80, %9** %14, align 8
  br label %81

81:                                               ; preds = %233, %64
  %82 = load %9*, %9** %13, align 8
  %83 = load %9*, %9** %14, align 8
  %84 = icmp ne %9* %82, %83
  br i1 %84, label %85, label %236

85:                                               ; preds = %81
  %86 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %86) #2
  %87 = load %9*, %9** %13, align 8
  %88 = getelementptr inbounds %9, %9* %87, i32 0, i32 0
  store %11* %88, %11** %15, align 8
  %89 = load %11*, %11** %15, align 8
  %90 = call zeroext i8 @125(%11* %89)
  %91 = zext i8 %90 to i32
  %92 = icmp eq i32 %91, 0
  %93 = xor i1 %92, true
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %85
  store i32 6, i32* %11, align 4
  br label %229

100:                                              ; preds = %85
  %101 = load %11*, %11** %15, align 8
  store %11* %101, %11** %8, align 8
  %102 = load %37*, %37** %6, align 8
  %103 = icmp ne %37* %102, null
  br i1 %103, label %104, label %181

104:                                              ; preds = %100
  %105 = load %11*, %11** %8, align 8
  %106 = call zeroext i8 @125(%11* %105)
  %107 = zext i8 %106 to i32
  %108 = icmp eq i32 %107, 10
  br i1 %108, label %181, label %109

109:                                              ; preds = %104
  %110 = load %37*, %37** %6, align 8
  %111 = load i32, i32* %10, align 4
  %112 = call i32 @144(%37* %110, i32 %111, i32 3)
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %181

114:                                              ; preds = %109
  br label %115

115:                                              ; preds = %114
  %116 = bitcast %61** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %116) #2
  %117 = call noalias i8* @_emalloc_24()
  %118 = bitcast i8* %117 to %61*
  store %61* %118, %61** %16, align 8
  %119 = load %61*, %61** %16, align 8
  %120 = getelementptr inbounds %61, %61* %119, i32 0, i32 0
  %121 = getelementptr inbounds %6, %6* %120, i32 0, i32 0
  store i32 1, i32* %121, align 8
  %122 = load %61*, %61** %16, align 8
  %123 = getelementptr inbounds %61, %61* %122, i32 0, i32 0
  %124 = getelementptr inbounds %6, %6* %123, i32 0, i32 1
  %125 = bitcast %7* %124 to i32*
  store i32 10, i32* %125, align 4
  br label %126

126:                                              ; preds = %115
  %127 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127) #2
  %128 = load %61*, %61** %16, align 8
  %129 = getelementptr inbounds %61, %61* %128, i32 0, i32 1
  store %11* %129, %11** %17, align 8
  %130 = bitcast %11** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %130) #2
  %131 = load %11*, %11** %8, align 8
  store %11* %131, %11** %18, align 8
  %132 = bitcast %58** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %132) #2
  %133 = load %11*, %11** %18, align 8
  %134 = getelementptr inbounds %11, %11* %133, i32 0, i32 0
  %135 = bitcast %12* %134 to %58**
  %136 = load %58*, %58** %135, align 8
  store %58* %136, %58** %19, align 8
  %137 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %137) #2
  %138 = load %11*, %11** %18, align 8
  %139 = getelementptr inbounds %11, %11* %138, i32 0, i32 1
  %140 = bitcast %13* %139 to i32*
  %141 = load i32, i32* %140, align 8
  store i32 %141, i32* %20, align 4
  br label %142

142:                                              ; preds = %126
  %143 = load %58*, %58** %19, align 8
  %144 = load %11*, %11** %17, align 8
  %145 = getelementptr inbounds %11, %11* %144, i32 0, i32 0
  %146 = bitcast %12* %145 to %58**
  store %58* %143, %58** %146, align 8
  %147 = load i32, i32* %20, align 4
  %148 = load %11*, %11** %17, align 8
  %149 = getelementptr inbounds %11, %11* %148, i32 0, i32 1
  %150 = bitcast %13* %149 to i32*
  store i32 %147, i32* %150, align 8
  br label %151

151:                                              ; preds = %142
  br label %152

152:                                              ; preds = %151
  %153 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %153) #2
  %154 = bitcast %58** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #2
  %155 = bitcast %11** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %155) #2
  %156 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %156) #2
  br label %157

157:                                              ; preds = %152
  br label %158

158:                                              ; preds = %157
  %159 = load %61*, %61** %16, align 8
  %160 = load %11*, %11** %9, align 8
  %161 = getelementptr inbounds %11, %11* %160, i32 0, i32 0
  %162 = bitcast %12* %161 to %61**
  store %61* %159, %61** %162, align 8
  %163 = load %11*, %11** %9, align 8
  %164 = getelementptr inbounds %11, %11* %163, i32 0, i32 1
  %165 = bitcast %13* %164 to i32*
  store i32 1034, i32* %165, align 8
  %166 = bitcast %61** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #2
  br label %167

167:                                              ; preds = %158
  br label %168

168:                                              ; preds = %167
  %169 = load %11*, %11** %8, align 8
  %170 = getelementptr inbounds %11, %11* %169, i32 0, i32 1
  %171 = bitcast %13* %170 to %59*
  %172 = getelementptr inbounds %59, %59* %171, i32 0, i32 1
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = and i32 %174, 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %168
  %178 = load %11*, %11** %8, align 8
  %179 = call i32 @128(%11* %178)
  br label %180

180:                                              ; preds = %177, %168
  br label %224

181:                                              ; preds = %109, %104, %100
  br label %182

182:                                              ; preds = %181
  %183 = bitcast %11** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %183) #2
  %184 = load %11*, %11** %9, align 8
  store %11* %184, %11** %21, align 8
  %185 = bitcast %11** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %185) #2
  %186 = load %11*, %11** %8, align 8
  store %11* %186, %11** %22, align 8
  %187 = bitcast %58** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %187) #2
  %188 = load %11*, %11** %22, align 8
  %189 = getelementptr inbounds %11, %11* %188, i32 0, i32 0
  %190 = bitcast %12* %189 to %58**
  %191 = load %58*, %58** %190, align 8
  store %58* %191, %58** %23, align 8
  %192 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %192) #2
  %193 = load %11*, %11** %22, align 8
  %194 = getelementptr inbounds %11, %11* %193, i32 0, i32 1
  %195 = bitcast %13* %194 to i32*
  %196 = load i32, i32* %195, align 8
  store i32 %196, i32* %24, align 4
  br label %197

197:                                              ; preds = %182
  %198 = load %58*, %58** %23, align 8
  %199 = load %11*, %11** %21, align 8
  %200 = getelementptr inbounds %11, %11* %199, i32 0, i32 0
  %201 = bitcast %12* %200 to %58**
  store %58* %198, %58** %201, align 8
  %202 = load i32, i32* %24, align 4
  %203 = load %11*, %11** %21, align 8
  %204 = getelementptr inbounds %11, %11* %203, i32 0, i32 1
  %205 = bitcast %13* %204 to i32*
  store i32 %202, i32* %205, align 8
  br label %206

206:                                              ; preds = %197
  br label %207

207:                                              ; preds = %206
  %208 = load i32, i32* %24, align 4
  %209 = and i32 %208, 1024
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %211, label %217

211:                                              ; preds = %207
  %212 = load %58*, %58** %23, align 8
  %213 = getelementptr inbounds %58, %58* %212, i32 0, i32 0
  %214 = getelementptr inbounds %6, %6* %213, i32 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = add i32 %215, 1
  store i32 %216, i32* %214, align 4
  br label %217

217:                                              ; preds = %211, %207
  %218 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %218) #2
  %219 = bitcast %58** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %219) #2
  %220 = bitcast %11** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %220) #2
  %221 = bitcast %11** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #2
  br label %222

222:                                              ; preds = %217
  br label %223

223:                                              ; preds = %222
  br label %224

224:                                              ; preds = %223, %180
  %225 = load %11*, %11** %9, align 8
  %226 = getelementptr inbounds %11, %11* %225, i32 1
  store %11* %226, %11** %9, align 8
  %227 = load i32, i32* %10, align 4
  %228 = add i32 %227, 1
  store i32 %228, i32* %10, align 4
  store i32 0, i32* %11, align 4
  br label %229

229:                                              ; preds = %224, %99
  %230 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #2
  %231 = load i32, i32* %11, align 4
  switch i32 %231, label %247 [
    i32 0, label %232
    i32 6, label %233
  ]

232:                                              ; preds = %229
  br label %233

233:                                              ; preds = %232, %229
  %234 = load %9*, %9** %13, align 8
  %235 = getelementptr inbounds %9, %9* %234, i32 1
  store %9* %235, %9** %13, align 8
  br label %81

236:                                              ; preds = %81
  %237 = bitcast %9** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %237) #2
  %238 = bitcast %9** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #2
  %239 = bitcast %5** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %239) #2
  br label %240

240:                                              ; preds = %236
  br label %241

241:                                              ; preds = %240
  store i32 0, i32* %4, align 4
  store i32 1, i32* %11, align 4
  br label %242

242:                                              ; preds = %241, %41, %35
  %243 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %243) #2
  %244 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %244) #2
  %245 = bitcast %11** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %245) #2
  %246 = load i32, i32* %4, align 4
  ret i32 %246

247:                                              ; preds = %229
  unreachable
}

; Function Attrs: allocsize(1)
declare dso_local i8* @_erealloc(i8*, i64) #14

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_fcall_info_args(%71* %0, %11* %1) #0 {
  %3 = alloca %71*, align 8
  %4 = alloca %11*, align 8
  store %71* %0, %71** %3, align 8
  store %11* %1, %11** %4, align 8
  %5 = load %71*, %71** %3, align 8
  %6 = load %11*, %11** %4, align 8
  %7 = call i32 @zend_fcall_info_args_ex(%71* %5, %37* null, %11* %6)
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_fcall_info_argp(%71* %0, i32 %1, %11* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %71*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %11*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %11*, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %58*, align 8
  %13 = alloca i32, align 4
  store %71* %0, %71** %5, align 8
  store i32 %1, i32* %6, align 4
  store %11* %2, %11** %7, align 8
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #2
  %15 = load i32, i32* %6, align 4
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %103

18:                                               ; preds = %3
  %19 = load %71*, %71** %5, align 8
  %20 = load i32, i32* %6, align 4
  %21 = icmp ne i32 %20, 0
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i32
  call void @zend_fcall_info_args_clear(%71* %19, i32 %23)
  %24 = load i32, i32* %6, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %102

26:                                               ; preds = %18
  %27 = load i32, i32* %6, align 4
  %28 = load %71*, %71** %5, align 8
  %29 = getelementptr inbounds %71, %71* %28, i32 0, i32 6
  store i32 %27, i32* %29, align 4
  %30 = load %71*, %71** %5, align 8
  %31 = getelementptr inbounds %71, %71* %30, i32 0, i32 3
  %32 = load %11*, %11** %31, align 8
  %33 = bitcast %11* %32 to i8*
  %34 = load %71*, %71** %5, align 8
  %35 = getelementptr inbounds %71, %71* %34, i32 0, i32 6
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = mul i64 %37, 16
  %39 = call i8* @_erealloc(i8* %33, i64 %38) #23
  %40 = bitcast i8* %39 to %11*
  %41 = load %71*, %71** %5, align 8
  %42 = getelementptr inbounds %71, %71* %41, i32 0, i32 3
  store %11* %40, %11** %42, align 8
  store i32 0, i32* %8, align 4
  br label %43

43:                                               ; preds = %98, %26
  %44 = load i32, i32* %8, align 4
  %45 = load i32, i32* %6, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %101

47:                                               ; preds = %43
  br label %48

48:                                               ; preds = %47
  %49 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #2
  %50 = load %71*, %71** %5, align 8
  %51 = getelementptr inbounds %71, %71* %50, i32 0, i32 3
  %52 = load %11*, %11** %51, align 8
  %53 = load i32, i32* %8, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %11, %11* %52, i64 %54
  store %11* %55, %11** %10, align 8
  %56 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #2
  %57 = load %11*, %11** %7, align 8
  %58 = load i32, i32* %8, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %11, %11* %57, i64 %59
  store %11* %60, %11** %11, align 8
  %61 = bitcast %58** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #2
  %62 = load %11*, %11** %11, align 8
  %63 = getelementptr inbounds %11, %11* %62, i32 0, i32 0
  %64 = bitcast %12* %63 to %58**
  %65 = load %58*, %58** %64, align 8
  store %58* %65, %58** %12, align 8
  %66 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %66) #2
  %67 = load %11*, %11** %11, align 8
  %68 = getelementptr inbounds %11, %11* %67, i32 0, i32 1
  %69 = bitcast %13* %68 to i32*
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %13, align 4
  br label %71

71:                                               ; preds = %48
  %72 = load %58*, %58** %12, align 8
  %73 = load %11*, %11** %10, align 8
  %74 = getelementptr inbounds %11, %11* %73, i32 0, i32 0
  %75 = bitcast %12* %74 to %58**
  store %58* %72, %58** %75, align 8
  %76 = load i32, i32* %13, align 4
  %77 = load %11*, %11** %10, align 8
  %78 = getelementptr inbounds %11, %11* %77, i32 0, i32 1
  %79 = bitcast %13* %78 to i32*
  store i32 %76, i32* %79, align 8
  br label %80

80:                                               ; preds = %71
  br label %81

81:                                               ; preds = %80
  %82 = load i32, i32* %13, align 4
  %83 = and i32 %82, 1024
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = load %58*, %58** %12, align 8
  %87 = getelementptr inbounds %58, %58* %86, i32 0, i32 0
  %88 = getelementptr inbounds %6, %6* %87, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %88, align 4
  br label %91

91:                                               ; preds = %85, %81
  %92 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %92) #2
  %93 = bitcast %58** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %93) #2
  %94 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #2
  %95 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #2
  br label %96

96:                                               ; preds = %91
  br label %97

97:                                               ; preds = %96
  br label %98

98:                                               ; preds = %97
  %99 = load i32, i32* %8, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %8, align 4
  br label %43

101:                                              ; preds = %43
  br label %102

102:                                              ; preds = %101, %18
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %103

103:                                              ; preds = %102, %17
  %104 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %104) #2
  %105 = load i32, i32* %4, align 4
  ret i32 %105
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_fcall_info_argv(%71* %0, i32 %1, [1 x %57]* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %71*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [1 x %57]*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %11*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %11*, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %58*, align 8
  %14 = alloca i32, align 4
  store %71* %0, %71** %5, align 8
  store i32 %1, i32* %6, align 4
  store [1 x %57]* %2, [1 x %57]** %7, align 8
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #2
  %16 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %3
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %121

20:                                               ; preds = %3
  %21 = load %71*, %71** %5, align 8
  %22 = load i32, i32* %6, align 4
  %23 = icmp ne i32 %22, 0
  %24 = xor i1 %23, true
  %25 = zext i1 %24 to i32
  call void @zend_fcall_info_args_clear(%71* %21, i32 %25)
  %26 = load i32, i32* %6, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %120

28:                                               ; preds = %20
  %29 = load i32, i32* %6, align 4
  %30 = load %71*, %71** %5, align 8
  %31 = getelementptr inbounds %71, %71* %30, i32 0, i32 6
  store i32 %29, i32* %31, align 4
  %32 = load %71*, %71** %5, align 8
  %33 = getelementptr inbounds %71, %71* %32, i32 0, i32 3
  %34 = load %11*, %11** %33, align 8
  %35 = bitcast %11* %34 to i8*
  %36 = load %71*, %71** %5, align 8
  %37 = getelementptr inbounds %71, %71* %36, i32 0, i32 6
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = mul i64 %39, 16
  %41 = call i8* @_erealloc(i8* %35, i64 %40) #23
  %42 = bitcast i8* %41 to %11*
  %43 = load %71*, %71** %5, align 8
  %44 = getelementptr inbounds %71, %71* %43, i32 0, i32 3
  store %11* %42, %11** %44, align 8
  store i32 0, i32* %8, align 4
  br label %45

45:                                               ; preds = %116, %28
  %46 = load i32, i32* %8, align 4
  %47 = load i32, i32* %6, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %119

49:                                               ; preds = %45
  %50 = load [1 x %57]*, [1 x %57]** %7, align 8
  %51 = getelementptr inbounds [1 x %57], [1 x %57]* %50, i32 0, i32 0
  %52 = getelementptr inbounds %57, %57* %51, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp ule i32 %53, 40
  br i1 %54, label %55, label %61

55:                                               ; preds = %49
  %56 = getelementptr inbounds %57, %57* %51, i32 0, i32 3
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr i8, i8* %57, i32 %53
  %59 = bitcast i8* %58 to %11**
  %60 = add i32 %53, 8
  store i32 %60, i32* %52, align 8
  br label %66

61:                                               ; preds = %49
  %62 = getelementptr inbounds %57, %57* %51, i32 0, i32 2
  %63 = load i8*, i8** %62, align 8
  %64 = bitcast i8* %63 to %11**
  %65 = getelementptr i8, i8* %63, i32 8
  store i8* %65, i8** %62, align 8
  br label %66

66:                                               ; preds = %61, %55
  %67 = phi %11** [ %59, %55 ], [ %64, %61 ]
  %68 = load %11*, %11** %67, align 8
  store %11* %68, %11** %9, align 8
  br label %69

69:                                               ; preds = %66
  %70 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %70) #2
  %71 = load %71*, %71** %5, align 8
  %72 = getelementptr inbounds %71, %71* %71, i32 0, i32 3
  %73 = load %11*, %11** %72, align 8
  %74 = load i32, i32* %8, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %11, %11* %73, i64 %75
  store %11* %76, %11** %11, align 8
  %77 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #2
  %78 = load %11*, %11** %9, align 8
  store %11* %78, %11** %12, align 8
  %79 = bitcast %58** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %79) #2
  %80 = load %11*, %11** %12, align 8
  %81 = getelementptr inbounds %11, %11* %80, i32 0, i32 0
  %82 = bitcast %12* %81 to %58**
  %83 = load %58*, %58** %82, align 8
  store %58* %83, %58** %13, align 8
  %84 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %84) #2
  %85 = load %11*, %11** %12, align 8
  %86 = getelementptr inbounds %11, %11* %85, i32 0, i32 1
  %87 = bitcast %13* %86 to i32*
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %14, align 4
  br label %89

89:                                               ; preds = %69
  %90 = load %58*, %58** %13, align 8
  %91 = load %11*, %11** %11, align 8
  %92 = getelementptr inbounds %11, %11* %91, i32 0, i32 0
  %93 = bitcast %12* %92 to %58**
  store %58* %90, %58** %93, align 8
  %94 = load i32, i32* %14, align 4
  %95 = load %11*, %11** %11, align 8
  %96 = getelementptr inbounds %11, %11* %95, i32 0, i32 1
  %97 = bitcast %13* %96 to i32*
  store i32 %94, i32* %97, align 8
  br label %98

98:                                               ; preds = %89
  br label %99

99:                                               ; preds = %98
  %100 = load i32, i32* %14, align 4
  %101 = and i32 %100, 1024
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = load %58*, %58** %13, align 8
  %105 = getelementptr inbounds %58, %58* %104, i32 0, i32 0
  %106 = getelementptr inbounds %6, %6* %105, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %106, align 4
  br label %109

109:                                              ; preds = %103, %99
  %110 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %110) #2
  %111 = bitcast %58** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #2
  %112 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #2
  %113 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #2
  br label %114

114:                                              ; preds = %109
  br label %115

115:                                              ; preds = %114
  br label %116

116:                                              ; preds = %115
  %117 = load i32, i32* %8, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %8, align 4
  br label %45

119:                                              ; preds = %45
  br label %120

120:                                              ; preds = %119, %20
  store i32 0, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %121

121:                                              ; preds = %120, %19
  %122 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #2
  %123 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %123) #2
  %124 = load i32, i32* %4, align 4
  ret i32 %124
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_fcall_info_argn(%71* %0, i32 %1, ...) #0 {
  %3 = alloca %71*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [1 x %57], align 16
  store %71* %0, %71** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #2
  %8 = bitcast [1 x %57]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %8) #2
  %9 = getelementptr inbounds [1 x %57], [1 x %57]* %6, i32 0, i32 0
  %10 = bitcast %57* %9 to i8*
  call void @llvm.va_start(i8* %10)
  %11 = load %71*, %71** %3, align 8
  %12 = load i32, i32* %4, align 4
  %13 = call i32 @zend_fcall_info_argv(%71* %11, i32 %12, [1 x %57]* %6)
  store i32 %13, i32* %5, align 4
  %14 = getelementptr inbounds [1 x %57], [1 x %57]* %6, i32 0, i32 0
  %15 = bitcast %57* %14 to i8*
  call void @llvm.va_end(i8* %15)
  %16 = load i32, i32* %5, align 4
  %17 = bitcast [1 x %57]* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %17) #2
  %18 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #2
  ret i32 %16
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_fcall_info_call(%71* %0, %70* %1, %11* %2, %11* %3) #0 {
  %5 = alloca %71*, align 8
  %6 = alloca %70*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %71* %0, %71** %5, align 8
  store %70* %1, %70** %6, align 8
  store %11* %2, %11** %7, align 8
  store %11* %3, %11** %8, align 8
  %13 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  store %11* null, %11** %10, align 8
  %15 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #2
  %16 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #2
  store i32 0, i32* %12, align 4
  %17 = load %11*, %11** %7, align 8
  %18 = icmp ne %11* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %4
  %20 = load %11*, %11** %7, align 8
  br label %22

21:                                               ; preds = %4
  br label %22

22:                                               ; preds = %21, %19
  %23 = phi %11* [ %20, %19 ], [ %9, %21 ]
  %24 = load %71*, %71** %5, align 8
  %25 = getelementptr inbounds %71, %71* %24, i32 0, i32 2
  store %11* %23, %11** %25, align 8
  %26 = load %11*, %11** %8, align 8
  %27 = icmp ne %11* %26, null
  br i1 %27, label %28, label %33

28:                                               ; preds = %22
  %29 = load %71*, %71** %5, align 8
  call void @zend_fcall_info_args_save(%71* %29, i32* %12, %11** %10)
  %30 = load %71*, %71** %5, align 8
  %31 = load %11*, %11** %8, align 8
  %32 = call i32 @zend_fcall_info_args(%71* %30, %11* %31)
  br label %33

33:                                               ; preds = %28, %22
  %34 = load %71*, %71** %5, align 8
  %35 = load %70*, %70** %6, align 8
  %36 = call i32 @zend_call_function(%71* %34, %70* %35)
  store i32 %36, i32* %11, align 4
  %37 = load %11*, %11** %7, align 8
  %38 = icmp ne %11* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %33
  %40 = call zeroext i8 @125(%11* %9)
  %41 = zext i8 %40 to i32
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  call void @_zval_ptr_dtor(%11* %9)
  br label %44

44:                                               ; preds = %43, %39, %33
  %45 = load %11*, %11** %8, align 8
  %46 = icmp ne %11* %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = load %71*, %71** %5, align 8
  %49 = load i32, i32* %12, align 4
  %50 = load %11*, %11** %10, align 8
  call void @zend_fcall_info_args_restore(%71* %48, i32 %49, %11* %50)
  br label %51

51:                                               ; preds = %47, %44
  %52 = load i32, i32* %11, align 4
  %53 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %53) #2
  %54 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %54) #2
  %55 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %55) #2
  %56 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %56) #2
  ret i32 %52
}

declare dso_local i32 @zend_call_function(%71*, %70*) #4

; Function Attrs: nounwind uwtable
define dso_local i8* @zend_get_module_version(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %10*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %32*, align 8
  store i8* %0, i8** %2, align 8
  %6 = bitcast %10** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #2
  %7 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #2
  %8 = load i8*, i8** %2, align 8
  %9 = call i64 @strlen(i8* %8) #20
  store i64 %9, i64* %4, align 8
  %10 = bitcast %32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load i64, i64* %4, align 8
  %12 = call %10* @138(i64 %11, i32 0)
  store %10* %12, %10** %3, align 8
  %13 = load %10*, %10** %3, align 8
  %14 = getelementptr inbounds %10, %10* %13, i32 0, i32 3
  %15 = getelementptr inbounds [1 x i8], [1 x i8]* %14, i32 0, i32 0
  %16 = load i8*, i8** %2, align 8
  %17 = load i64, i64* %4, align 8
  %18 = call i8* @zend_str_tolower_copy(i8* %15, i8* %16, i64 %17)
  %19 = load %10*, %10** %3, align 8
  %20 = call i8* @139(%5* @module_registry, %10* %19)
  %21 = bitcast i8* %20 to %32*
  store %32* %21, %32** %5, align 8
  %22 = load %10*, %10** %3, align 8
  call void @140(%10* %22)
  %23 = load %32*, %32** %5, align 8
  %24 = icmp ne %32* %23, null
  br i1 %24, label %25, label %29

25:                                               ; preds = %1
  %26 = load %32*, %32** %5, align 8
  %27 = getelementptr inbounds %32, %32* %26, i32 0, i32 13
  %28 = load i8*, i8** %27, align 8
  br label %30

29:                                               ; preds = %1
  br label %30

30:                                               ; preds = %29, %25
  %31 = phi i8* [ %28, %25 ], [ null, %29 ]
  %32 = bitcast %32** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #2
  %33 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #2
  %34 = bitcast %10** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  ret i8* %31
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_property_ex(%16* %0, %10* %1, %11* %2, i32 %3, %10* %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca %10*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %10*, align 8
  %11 = alloca %65*, align 8
  %12 = alloca %65*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %11*, align 8
  %15 = alloca %58*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %11*, align 8
  %18 = alloca %11*, align 8
  %19 = alloca %58*, align 8
  %20 = alloca i32, align 4
  store %16* %0, %16** %6, align 8
  store %10* %1, %10** %7, align 8
  store %11* %2, %11** %8, align 8
  store i32 %3, i32* %9, align 4
  store %10* %4, %10** %10, align 8
  %21 = bitcast %65** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  %22 = bitcast %65** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #2
  %23 = load %16*, %16** %6, align 8
  %24 = getelementptr inbounds %16, %16* %23, i32 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %49

28:                                               ; preds = %5
  %29 = call noalias i8* @__zend_malloc(i64 32) #19
  %30 = bitcast i8* %29 to %65*
  store %65* %30, %65** %11, align 8
  %31 = load i32, i32* %9, align 4
  %32 = and i32 %31, 1
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %28
  %35 = load %11*, %11** %8, align 8
  %36 = getelementptr inbounds %11, %11* %35, i32 0, i32 1
  %37 = bitcast %13* %36 to %59*
  %38 = getelementptr inbounds %59, %59* %37, i32 0, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = and i32 %40, 1
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %34, %28
  %44 = load %16*, %16** %6, align 8
  %45 = getelementptr inbounds %16, %16* %44, i32 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, -1048577
  store i32 %47, i32* %45, align 4
  br label %48

48:                                               ; preds = %43, %34
  br label %66

49:                                               ; preds = %5
  %50 = call i8* @160(%56** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 23), i64 32)
  %51 = bitcast i8* %50 to %65*
  store %65* %51, %65** %11, align 8
  %52 = load %11*, %11** %8, align 8
  %53 = getelementptr inbounds %11, %11* %52, i32 0, i32 1
  %54 = bitcast %13* %53 to %59*
  %55 = getelementptr inbounds %59, %59* %54, i32 0, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = and i32 %57, 1
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %65

60:                                               ; preds = %49
  %61 = load %16*, %16** %6, align 8
  %62 = getelementptr inbounds %16, %16* %61, i32 0, i32 4
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, -1048577
  store i32 %64, i32* %62, align 4
  br label %65

65:                                               ; preds = %60, %49
  br label %66

66:                                               ; preds = %65, %48
  %67 = load i32, i32* %9, align 4
  %68 = and i32 %67, 1792
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %66
  %71 = load i32, i32* %9, align 4
  %72 = or i32 %71, 256
  store i32 %72, i32* %9, align 4
  br label %73

73:                                               ; preds = %70, %66
  %74 = load i32, i32* %9, align 4
  %75 = and i32 %74, 1
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %199

77:                                               ; preds = %73
  %78 = load %16*, %16** %6, align 8
  %79 = getelementptr inbounds %16, %16* %78, i32 0, i32 11
  %80 = load %10*, %10** %7, align 8
  %81 = call i8* @139(%5* %79, %10* %80)
  %82 = bitcast i8* %81 to %65*
  store %65* %82, %65** %12, align 8
  %83 = icmp ne %65* %82, null
  br i1 %83, label %84, label %108

84:                                               ; preds = %77
  %85 = load %65*, %65** %12, align 8
  %86 = getelementptr inbounds %65, %65* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 1
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %84
  %91 = load %65*, %65** %12, align 8
  %92 = getelementptr inbounds %65, %65* %91, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = load %65*, %65** %11, align 8
  %95 = getelementptr inbounds %65, %65* %94, i32 0, i32 0
  store i32 %93, i32* %95, align 8
  %96 = load %16*, %16** %6, align 8
  %97 = getelementptr inbounds %16, %16* %96, i32 0, i32 8
  %98 = load %11*, %11** %97, align 8
  %99 = load %65*, %65** %11, align 8
  %100 = getelementptr inbounds %65, %65* %99, i32 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %11, %11* %98, i64 %102
  call void @_zval_ptr_dtor(%11* %103)
  %104 = load %16*, %16** %6, align 8
  %105 = getelementptr inbounds %16, %16* %104, i32 0, i32 11
  %106 = load %10*, %10** %7, align 8
  %107 = call i32 @zend_hash_del(%5* %105, %10* %106)
  br label %147

108:                                              ; preds = %84, %77
  %109 = load %16*, %16** %6, align 8
  %110 = getelementptr inbounds %16, %16* %109, i32 0, i32 6
  %111 = load i32, i32* %110, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %110, align 4
  %113 = load %65*, %65** %11, align 8
  %114 = getelementptr inbounds %65, %65* %113, i32 0, i32 0
  store i32 %111, i32* %114, align 8
  %115 = load %16*, %16** %6, align 8
  %116 = getelementptr inbounds %16, %16* %115, i32 0, i32 0
  %117 = load i8, i8* %116, align 8
  %118 = sext i8 %117 to i32
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %131

120:                                              ; preds = %108
  %121 = load %16*, %16** %6, align 8
  %122 = getelementptr inbounds %16, %16* %121, i32 0, i32 8
  %123 = load %11*, %11** %122, align 8
  %124 = bitcast %11* %123 to i8*
  %125 = load %16*, %16** %6, align 8
  %126 = getelementptr inbounds %16, %16* %125, i32 0, i32 6
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = mul i64 16, %128
  %130 = call i8* @__zend_realloc(i8* %124, i64 %129) #23
  br label %142

131:                                              ; preds = %108
  %132 = load %16*, %16** %6, align 8
  %133 = getelementptr inbounds %16, %16* %132, i32 0, i32 8
  %134 = load %11*, %11** %133, align 8
  %135 = bitcast %11* %134 to i8*
  %136 = load %16*, %16** %6, align 8
  %137 = getelementptr inbounds %16, %16* %136, i32 0, i32 6
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = mul i64 16, %139
  %141 = call i8* @_erealloc(i8* %135, i64 %140) #23
  br label %142

142:                                              ; preds = %131, %120
  %143 = phi i8* [ %130, %120 ], [ %141, %131 ]
  %144 = bitcast i8* %143 to %11*
  %145 = load %16*, %16** %6, align 8
  %146 = getelementptr inbounds %16, %16* %145, i32 0, i32 8
  store %11* %144, %11** %146, align 8
  br label %147

147:                                              ; preds = %142, %90
  br label %148

148:                                              ; preds = %147
  %149 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %149) #2
  %150 = load %16*, %16** %6, align 8
  %151 = getelementptr inbounds %16, %16* %150, i32 0, i32 8
  %152 = load %11*, %11** %151, align 8
  %153 = load %65*, %65** %11, align 8
  %154 = getelementptr inbounds %65, %65* %153, i32 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %11, %11* %152, i64 %156
  store %11* %157, %11** %13, align 8
  %158 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %158) #2
  %159 = load %11*, %11** %8, align 8
  store %11* %159, %11** %14, align 8
  %160 = bitcast %58** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %160) #2
  %161 = load %11*, %11** %14, align 8
  %162 = getelementptr inbounds %11, %11* %161, i32 0, i32 0
  %163 = bitcast %12* %162 to %58**
  %164 = load %58*, %58** %163, align 8
  store %58* %164, %58** %15, align 8
  %165 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %165) #2
  %166 = load %11*, %11** %14, align 8
  %167 = getelementptr inbounds %11, %11* %166, i32 0, i32 1
  %168 = bitcast %13* %167 to i32*
  %169 = load i32, i32* %168, align 8
  store i32 %169, i32* %16, align 4
  br label %170

170:                                              ; preds = %148
  %171 = load %58*, %58** %15, align 8
  %172 = load %11*, %11** %13, align 8
  %173 = getelementptr inbounds %11, %11* %172, i32 0, i32 0
  %174 = bitcast %12* %173 to %58**
  store %58* %171, %58** %174, align 8
  %175 = load i32, i32* %16, align 4
  %176 = load %11*, %11** %13, align 8
  %177 = getelementptr inbounds %11, %11* %176, i32 0, i32 1
  %178 = bitcast %13* %177 to i32*
  store i32 %175, i32* %178, align 8
  br label %179

179:                                              ; preds = %170
  br label %180

180:                                              ; preds = %179
  %181 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %181) #2
  %182 = bitcast %58** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #2
  %183 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %183) #2
  %184 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184) #2
  br label %185

185:                                              ; preds = %180
  br label %186

186:                                              ; preds = %185
  %187 = load %16*, %16** %6, align 8
  %188 = getelementptr inbounds %16, %16* %187, i32 0, i32 0
  %189 = load i8, i8* %188, align 8
  %190 = sext i8 %189 to i32
  %191 = icmp eq i32 %190, 2
  br i1 %191, label %192, label %198

192:                                              ; preds = %186
  %193 = load %16*, %16** %6, align 8
  %194 = getelementptr inbounds %16, %16* %193, i32 0, i32 8
  %195 = load %11*, %11** %194, align 8
  %196 = load %16*, %16** %6, align 8
  %197 = getelementptr inbounds %16, %16* %196, i32 0, i32 9
  store %11* %195, %11** %197, align 8
  br label %198

198:                                              ; preds = %192, %186
  br label %320

199:                                              ; preds = %73
  %200 = load %16*, %16** %6, align 8
  %201 = getelementptr inbounds %16, %16* %200, i32 0, i32 11
  %202 = load %10*, %10** %7, align 8
  %203 = call i8* @139(%5* %201, %10* %202)
  %204 = bitcast i8* %203 to %65*
  store %65* %204, %65** %12, align 8
  %205 = icmp ne %65* %204, null
  br i1 %205, label %206, label %232

206:                                              ; preds = %199
  %207 = load %65*, %65** %12, align 8
  %208 = getelementptr inbounds %65, %65* %207, i32 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %232

212:                                              ; preds = %206
  %213 = load %65*, %65** %12, align 8
  %214 = getelementptr inbounds %65, %65* %213, i32 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = load %65*, %65** %11, align 8
  %217 = getelementptr inbounds %65, %65* %216, i32 0, i32 0
  store i32 %215, i32* %217, align 8
  %218 = load %16*, %16** %6, align 8
  %219 = getelementptr inbounds %16, %16* %218, i32 0, i32 7
  %220 = load %11*, %11** %219, align 8
  %221 = load %65*, %65** %11, align 8
  %222 = getelementptr inbounds %65, %65* %221, i32 0, i32 0
  %223 = load i32, i32* %222, align 8
  %224 = sub i32 %223, ptrtoint (%11* getelementptr inbounds (%20, %20* null, i32 0, i32 5, i64 0) to i32)
  %225 = zext i32 %224 to i64
  %226 = udiv i64 %225, 16
  %227 = getelementptr inbounds %11, %11* %220, i64 %226
  call void @_zval_ptr_dtor(%11* %227)
  %228 = load %16*, %16** %6, align 8
  %229 = getelementptr inbounds %16, %16* %228, i32 0, i32 11
  %230 = load %10*, %10** %7, align 8
  %231 = call i32 @zend_hash_del(%5* %229, %10* %230)
  br label %278

232:                                              ; preds = %206, %199
  %233 = load %16*, %16** %6, align 8
  %234 = getelementptr inbounds %16, %16* %233, i32 0, i32 5
  %235 = load i32, i32* %234, align 8
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [1 x %11], [1 x %11]* getelementptr inbounds (%20, %20* null, i32 0, i32 5), i64 0, i64 %236
  %238 = ptrtoint %11* %237 to i64
  %239 = trunc i64 %238 to i32
  %240 = load %65*, %65** %11, align 8
  %241 = getelementptr inbounds %65, %65* %240, i32 0, i32 0
  store i32 %239, i32* %241, align 8
  %242 = load %16*, %16** %6, align 8
  %243 = getelementptr inbounds %16, %16* %242, i32 0, i32 5
  %244 = load i32, i32* %243, align 8
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %243, align 8
  %246 = load %16*, %16** %6, align 8
  %247 = getelementptr inbounds %16, %16* %246, i32 0, i32 0
  %248 = load i8, i8* %247, align 8
  %249 = sext i8 %248 to i32
  %250 = icmp eq i32 %249, 1
  br i1 %250, label %251, label %262

251:                                              ; preds = %232
  %252 = load %16*, %16** %6, align 8
  %253 = getelementptr inbounds %16, %16* %252, i32 0, i32 7
  %254 = load %11*, %11** %253, align 8
  %255 = bitcast %11* %254 to i8*
  %256 = load %16*, %16** %6, align 8
  %257 = getelementptr inbounds %16, %16* %256, i32 0, i32 5
  %258 = load i32, i32* %257, align 8
  %259 = sext i32 %258 to i64
  %260 = mul i64 16, %259
  %261 = call i8* @__zend_realloc(i8* %255, i64 %260) #23
  br label %273

262:                                              ; preds = %232
  %263 = load %16*, %16** %6, align 8
  %264 = getelementptr inbounds %16, %16* %263, i32 0, i32 7
  %265 = load %11*, %11** %264, align 8
  %266 = bitcast %11* %265 to i8*
  %267 = load %16*, %16** %6, align 8
  %268 = getelementptr inbounds %16, %16* %267, i32 0, i32 5
  %269 = load i32, i32* %268, align 8
  %270 = sext i32 %269 to i64
  %271 = mul i64 16, %270
  %272 = call i8* @_erealloc(i8* %266, i64 %271) #23
  br label %273

273:                                              ; preds = %262, %251
  %274 = phi i8* [ %261, %251 ], [ %272, %262 ]
  %275 = bitcast i8* %274 to %11*
  %276 = load %16*, %16** %6, align 8
  %277 = getelementptr inbounds %16, %16* %276, i32 0, i32 7
  store %11* %275, %11** %277, align 8
  br label %278

278:                                              ; preds = %273, %212
  br label %279

279:                                              ; preds = %278
  %280 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %280) #2
  %281 = load %16*, %16** %6, align 8
  %282 = getelementptr inbounds %16, %16* %281, i32 0, i32 7
  %283 = load %11*, %11** %282, align 8
  %284 = load %65*, %65** %11, align 8
  %285 = getelementptr inbounds %65, %65* %284, i32 0, i32 0
  %286 = load i32, i32* %285, align 8
  %287 = sub i32 %286, ptrtoint (%11* getelementptr inbounds (%20, %20* null, i32 0, i32 5, i64 0) to i32)
  %288 = zext i32 %287 to i64
  %289 = udiv i64 %288, 16
  %290 = getelementptr inbounds %11, %11* %283, i64 %289
  store %11* %290, %11** %17, align 8
  %291 = bitcast %11** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %291) #2
  %292 = load %11*, %11** %8, align 8
  store %11* %292, %11** %18, align 8
  %293 = bitcast %58** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %293) #2
  %294 = load %11*, %11** %18, align 8
  %295 = getelementptr inbounds %11, %11* %294, i32 0, i32 0
  %296 = bitcast %12* %295 to %58**
  %297 = load %58*, %58** %296, align 8
  store %58* %297, %58** %19, align 8
  %298 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %298) #2
  %299 = load %11*, %11** %18, align 8
  %300 = getelementptr inbounds %11, %11* %299, i32 0, i32 1
  %301 = bitcast %13* %300 to i32*
  %302 = load i32, i32* %301, align 8
  store i32 %302, i32* %20, align 4
  br label %303

303:                                              ; preds = %279
  %304 = load %58*, %58** %19, align 8
  %305 = load %11*, %11** %17, align 8
  %306 = getelementptr inbounds %11, %11* %305, i32 0, i32 0
  %307 = bitcast %12* %306 to %58**
  store %58* %304, %58** %307, align 8
  %308 = load i32, i32* %20, align 4
  %309 = load %11*, %11** %17, align 8
  %310 = getelementptr inbounds %11, %11* %309, i32 0, i32 1
  %311 = bitcast %13* %310 to i32*
  store i32 %308, i32* %311, align 8
  br label %312

312:                                              ; preds = %303
  br label %313

313:                                              ; preds = %312
  %314 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %314) #2
  %315 = bitcast %58** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %315) #2
  %316 = bitcast %11** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %316) #2
  %317 = bitcast %11** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %317) #2
  br label %318

318:                                              ; preds = %313
  br label %319

319:                                              ; preds = %318
  br label %320

320:                                              ; preds = %319, %198
  %321 = load %16*, %16** %6, align 8
  %322 = getelementptr inbounds %16, %16* %321, i32 0, i32 0
  %323 = load i8, i8* %322, align 8
  %324 = sext i8 %323 to i32
  %325 = and i32 %324, 1
  %326 = icmp ne i32 %325, 0
  br i1 %326, label %327, label %338

327:                                              ; preds = %320
  %328 = load %11*, %11** %8, align 8
  %329 = call zeroext i8 @125(%11* %328)
  %330 = zext i8 %329 to i32
  switch i32 %330, label %332 [
    i32 7, label %331
    i32 8, label %331
    i32 9, label %331
  ]

331:                                              ; preds = %327, %327, %327
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @83, i32 0, i32 0)) #18
  unreachable

332:                                              ; preds = %327
  br label %333

333:                                              ; preds = %332
  %334 = load %10* (%10*)*, %10* (%10*)** @zend_new_interned_string, align 8
  %335 = load %10*, %10** %7, align 8
  %336 = call %10* @155(%10* %335)
  %337 = call %10* %334(%10* %336)
  store %10* %337, %10** %7, align 8
  br label %338

338:                                              ; preds = %333, %320
  %339 = load i32, i32* %9, align 4
  %340 = and i32 %339, 256
  %341 = icmp ne i32 %340, 0
  br i1 %341, label %342, label %347

342:                                              ; preds = %338
  %343 = load %10*, %10** %7, align 8
  %344 = call %10* @155(%10* %343)
  %345 = load %65*, %65** %11, align 8
  %346 = getelementptr inbounds %65, %65* %345, i32 0, i32 2
  store %10* %344, %10** %346, align 8
  br label %405

347:                                              ; preds = %338
  %348 = load i32, i32* %9, align 4
  %349 = and i32 %348, 1024
  %350 = icmp ne i32 %349, 0
  br i1 %350, label %351, label %376

351:                                              ; preds = %347
  %352 = load %16*, %16** %6, align 8
  %353 = getelementptr inbounds %16, %16* %352, i32 0, i32 1
  %354 = load %10*, %10** %353, align 8
  %355 = getelementptr inbounds %10, %10* %354, i32 0, i32 3
  %356 = getelementptr inbounds [1 x i8], [1 x i8]* %355, i32 0, i32 0
  %357 = load %16*, %16** %6, align 8
  %358 = getelementptr inbounds %16, %16* %357, i32 0, i32 1
  %359 = load %10*, %10** %358, align 8
  %360 = getelementptr inbounds %10, %10* %359, i32 0, i32 2
  %361 = load i64, i64* %360, align 8
  %362 = load %10*, %10** %7, align 8
  %363 = getelementptr inbounds %10, %10* %362, i32 0, i32 3
  %364 = getelementptr inbounds [1 x i8], [1 x i8]* %363, i32 0, i32 0
  %365 = load %10*, %10** %7, align 8
  %366 = getelementptr inbounds %10, %10* %365, i32 0, i32 2
  %367 = load i64, i64* %366, align 8
  %368 = load %16*, %16** %6, align 8
  %369 = getelementptr inbounds %16, %16* %368, i32 0, i32 0
  %370 = load i8, i8* %369, align 8
  %371 = sext i8 %370 to i32
  %372 = and i32 %371, 1
  %373 = call %10* @zend_mangle_property_name(i8* %356, i64 %361, i8* %364, i64 %367, i32 %372)
  %374 = load %65*, %65** %11, align 8
  %375 = getelementptr inbounds %65, %65* %374, i32 0, i32 2
  store %10* %373, %10** %375, align 8
  br label %404

376:                                              ; preds = %347
  br label %377

377:                                              ; preds = %376
  %378 = load i32, i32* %9, align 4
  %379 = and i32 %378, 512
  %380 = icmp ne i32 %379, 0
  %381 = xor i1 %380, true
  %382 = zext i1 %381 to i32
  %383 = sext i32 %382 to i64
  %384 = call i64 @llvm.expect.i64(i64 %383, i64 0)
  %385 = icmp ne i64 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %377
  unreachable

387:                                              ; preds = %377
  br label %388

388:                                              ; preds = %387
  br label %389

389:                                              ; preds = %388
  %390 = load %10*, %10** %7, align 8
  %391 = getelementptr inbounds %10, %10* %390, i32 0, i32 3
  %392 = getelementptr inbounds [1 x i8], [1 x i8]* %391, i32 0, i32 0
  %393 = load %10*, %10** %7, align 8
  %394 = getelementptr inbounds %10, %10* %393, i32 0, i32 2
  %395 = load i64, i64* %394, align 8
  %396 = load %16*, %16** %6, align 8
  %397 = getelementptr inbounds %16, %16* %396, i32 0, i32 0
  %398 = load i8, i8* %397, align 8
  %399 = sext i8 %398 to i32
  %400 = and i32 %399, 1
  %401 = call %10* @zend_mangle_property_name(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @84, i32 0, i32 0), i64 1, i8* %392, i64 %395, i32 %400)
  %402 = load %65*, %65** %11, align 8
  %403 = getelementptr inbounds %65, %65* %402, i32 0, i32 2
  store %10* %401, %10** %403, align 8
  br label %404

404:                                              ; preds = %389, %351
  br label %405

405:                                              ; preds = %404, %342
  %406 = load %10* (%10*)*, %10* (%10*)** @zend_new_interned_string, align 8
  %407 = load %65*, %65** %11, align 8
  %408 = getelementptr inbounds %65, %65* %407, i32 0, i32 2
  %409 = load %10*, %10** %408, align 8
  %410 = call %10* %406(%10* %409)
  %411 = load %65*, %65** %11, align 8
  %412 = getelementptr inbounds %65, %65* %411, i32 0, i32 2
  store %10* %410, %10** %412, align 8
  %413 = load i32, i32* %9, align 4
  %414 = load %65*, %65** %11, align 8
  %415 = getelementptr inbounds %65, %65* %414, i32 0, i32 1
  store i32 %413, i32* %415, align 4
  %416 = load %10*, %10** %10, align 8
  %417 = load %65*, %65** %11, align 8
  %418 = getelementptr inbounds %65, %65* %417, i32 0, i32 3
  store %10* %416, %10** %418, align 8
  %419 = load %16*, %16** %6, align 8
  %420 = load %65*, %65** %11, align 8
  %421 = getelementptr inbounds %65, %65* %420, i32 0, i32 4
  store %16* %419, %16** %421, align 8
  %422 = load %16*, %16** %6, align 8
  %423 = getelementptr inbounds %16, %16* %422, i32 0, i32 11
  %424 = load %10*, %10** %7, align 8
  %425 = load %65*, %65** %11, align 8
  %426 = bitcast %65* %425 to i8*
  %427 = call i8* @161(%5* %423, %10* %424, i8* %426)
  %428 = bitcast %65** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %428) #2
  %429 = bitcast %65** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %429) #2
  ret i32 0
}

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @__zend_malloc(i64) #8

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @160(%56** %0, i64 %1) #3 {
  %3 = alloca %56**, align 8
  %4 = alloca i64, align 8
  %5 = alloca %56*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %56*, align 8
  store %56** %0, %56*** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = bitcast %56** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  %10 = load %56**, %56*** %3, align 8
  %11 = load %56*, %56** %10, align 8
  store %56* %11, %56** %5, align 8
  %12 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = load %56*, %56** %5, align 8
  %14 = getelementptr inbounds %56, %56* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8* %15, i8** %6, align 8
  %16 = load i64, i64* %4, align 8
  %17 = add i64 %16, 8
  %18 = sub i64 %17, 1
  %19 = and i64 %18, -8
  store i64 %19, i64* %4, align 8
  %20 = load i64, i64* %4, align 8
  %21 = load %56*, %56** %5, align 8
  %22 = getelementptr inbounds %56, %56* %21, i32 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = load i8*, i8** %6, align 8
  %25 = ptrtoint i8* %23 to i64
  %26 = ptrtoint i8* %24 to i64
  %27 = sub i64 %25, %26
  %28 = icmp ule i64 %20, %27
  %29 = xor i1 %28, true
  %30 = xor i1 %29, true
  %31 = zext i1 %30 to i32
  %32 = sext i32 %31 to i64
  %33 = call i64 @llvm.expect.i64(i64 %32, i64 1)
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %2
  %36 = load i8*, i8** %6, align 8
  %37 = load i64, i64* %4, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = load %56*, %56** %5, align 8
  %40 = getelementptr inbounds %56, %56* %39, i32 0, i32 0
  store i8* %38, i8** %40, align 8
  br label %101

41:                                               ; preds = %2
  %42 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #2
  %43 = load i64, i64* %4, align 8
  %44 = add i64 %43, 24
  %45 = load %56*, %56** %5, align 8
  %46 = getelementptr inbounds %56, %56* %45, i32 0, i32 1
  %47 = load i8*, i8** %46, align 8
  %48 = load %56*, %56** %5, align 8
  %49 = bitcast %56* %48 to i8*
  %50 = ptrtoint i8* %47 to i64
  %51 = ptrtoint i8* %49 to i64
  %52 = sub i64 %50, %51
  %53 = icmp ugt i64 %44, %52
  %54 = xor i1 %53, true
  %55 = xor i1 %54, true
  %56 = zext i1 %55 to i32
  %57 = sext i32 %56 to i64
  %58 = call i64 @llvm.expect.i64(i64 %57, i64 0)
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %41
  %61 = load i64, i64* %4, align 8
  %62 = add i64 %61, 24
  br label %72

63:                                               ; preds = %41
  %64 = load %56*, %56** %5, align 8
  %65 = getelementptr inbounds %56, %56* %64, i32 0, i32 1
  %66 = load i8*, i8** %65, align 8
  %67 = load %56*, %56** %5, align 8
  %68 = bitcast %56* %67 to i8*
  %69 = ptrtoint i8* %66 to i64
  %70 = ptrtoint i8* %68 to i64
  %71 = sub i64 %69, %70
  br label %72

72:                                               ; preds = %63, %60
  %73 = phi i64 [ %62, %60 ], [ %71, %63 ]
  store i64 %73, i64* %7, align 8
  %74 = bitcast %56** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #2
  %75 = load i64, i64* %7, align 8
  %76 = call noalias i8* @_emalloc(i64 %75) #19
  %77 = bitcast i8* %76 to %56*
  store %56* %77, %56** %8, align 8
  %78 = load %56*, %56** %8, align 8
  %79 = bitcast %56* %78 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 24
  store i8* %80, i8** %6, align 8
  %81 = load %56*, %56** %8, align 8
  %82 = bitcast %56* %81 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 24
  %84 = load i64, i64* %4, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 %84
  %86 = load %56*, %56** %8, align 8
  %87 = getelementptr inbounds %56, %56* %86, i32 0, i32 0
  store i8* %85, i8** %87, align 8
  %88 = load %56*, %56** %8, align 8
  %89 = bitcast %56* %88 to i8*
  %90 = load i64, i64* %7, align 8
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = load %56*, %56** %8, align 8
  %93 = getelementptr inbounds %56, %56* %92, i32 0, i32 1
  store i8* %91, i8** %93, align 8
  %94 = load %56*, %56** %5, align 8
  %95 = load %56*, %56** %8, align 8
  %96 = getelementptr inbounds %56, %56* %95, i32 0, i32 2
  store %56* %94, %56** %96, align 8
  %97 = load %56*, %56** %8, align 8
  %98 = load %56**, %56*** %3, align 8
  store %56* %97, %56** %98, align 8
  %99 = bitcast %56** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #2
  %100 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #2
  br label %101

101:                                              ; preds = %72, %35
  %102 = load i8*, i8** %6, align 8
  %103 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #2
  %104 = bitcast %56** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #2
  ret i8* %102
}

; Function Attrs: allocsize(1)
declare dso_local i8* @__zend_realloc(i8*, i64) #14

declare dso_local %10* @zend_mangle_property_name(i8*, i64, i8*, i64, i32) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @161(%5* %0, %10* %1, i8* %2) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca %5*, align 8
  %6 = alloca %10*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %11, align 8
  %9 = alloca %11*, align 8
  %10 = alloca i32, align 4
  store %5* %0, %5** %5, align 8
  store %10* %1, %10** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = bitcast %11* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #2
  %12 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  br label %13

13:                                               ; preds = %3
  %14 = load i8*, i8** %7, align 8
  %15 = getelementptr inbounds %11, %11* %8, i32 0, i32 0
  %16 = bitcast %12* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds %11, %11* %8, i32 0, i32 1
  %18 = bitcast %13* %17 to i32*
  store i32 17, i32* %18, align 8
  br label %19

19:                                               ; preds = %13
  br label %20

20:                                               ; preds = %19
  %21 = load %5*, %5** %5, align 8
  %22 = load %10*, %10** %6, align 8
  %23 = call %11* @_zend_hash_update(%5* %21, %10* %22, %11* %8)
  store %11* %23, %11** %9, align 8
  %24 = load %11*, %11** %9, align 8
  %25 = icmp ne %11* %24, null
  br i1 %25, label %26, label %46

26:                                               ; preds = %20
  br label %27

27:                                               ; preds = %26
  %28 = load %11*, %11** %9, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = sext i32 %34 to i64
  %36 = call i64 @llvm.expect.i64(i64 %35, i64 0)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %27
  unreachable

39:                                               ; preds = %27
  br label %40

40:                                               ; preds = %39
  br label %41

41:                                               ; preds = %40
  %42 = load %11*, %11** %9, align 8
  %43 = getelementptr inbounds %11, %11* %42, i32 0, i32 0
  %44 = bitcast %12* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  store i8* %45, i8** %4, align 8
  store i32 1, i32* %10, align 4
  br label %47

46:                                               ; preds = %20
  store i8* null, i8** %4, align 8
  store i32 1, i32* %10, align 4
  br label %47

47:                                               ; preds = %46, %41
  %48 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #2
  %49 = bitcast %11* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %49) #2
  %50 = load i8*, i8** %4, align 8
  ret i8* %50
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_property(%16* %0, i8* %1, i64 %2, %11* %3, i32 %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %10*, align 8
  %12 = alloca i32, align 4
  store %16* %0, %16** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store %11* %3, %11** %9, align 8
  store i32 %4, i32* %10, align 4
  %13 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  %14 = load i8*, i8** %7, align 8
  %15 = load i64, i64* %8, align 8
  %16 = load %16*, %16** %6, align 8
  %17 = getelementptr inbounds %16, %16* %16, i32 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = sext i8 %18 to i32
  %20 = and i32 %19, 1
  %21 = call %10* @134(i8* %14, i64 %15, i32 %20)
  store %10* %21, %10** %11, align 8
  %22 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #2
  %23 = load %16*, %16** %6, align 8
  %24 = load %10*, %10** %11, align 8
  %25 = load %11*, %11** %9, align 8
  %26 = load i32, i32* %10, align 4
  %27 = call i32 @zend_declare_property_ex(%16* %23, %10* %24, %11* %25, i32 %26, %10* null)
  store i32 %27, i32* %12, align 4
  %28 = load %10*, %10** %11, align 8
  call void @135(%10* %28)
  %29 = load i32, i32* %12, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #2
  %31 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #2
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_property_null(%16* %0, i8* %1, i64 %2, i32 %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca %11, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %10 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #2
  br label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %11, %11* %9, i32 0, i32 1
  %13 = bitcast %13* %12 to i32*
  store i32 1, i32* %13, align 8
  br label %14

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %14
  %16 = load %16*, %16** %5, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = load i64, i64* %7, align 8
  %19 = load i32, i32* %8, align 4
  %20 = call i32 @zend_declare_property(%16* %16, i8* %17, i64 %18, %11* %9, i32 %19)
  %21 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %21) #2
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_property_bool(%16* %0, i8* %1, i64 %2, i64 %3, i32 %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %11, align 8
  store %16* %0, %16** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 %3, i64* %9, align 8
  store i32 %4, i32* %10, align 4
  %12 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #2
  br label %13

13:                                               ; preds = %5
  %14 = load i64, i64* %9, align 8
  %15 = icmp ne i64 %14, 0
  %16 = zext i1 %15 to i64
  %17 = select i1 %15, i32 3, i32 2
  %18 = getelementptr inbounds %11, %11* %11, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  store i32 %17, i32* %19, align 8
  br label %20

20:                                               ; preds = %13
  br label %21

21:                                               ; preds = %20
  %22 = load %16*, %16** %6, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = load i64, i64* %8, align 8
  %25 = load i32, i32* %10, align 4
  %26 = call i32 @zend_declare_property(%16* %22, i8* %23, i64 %24, %11* %11, i32 %25)
  %27 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %27) #2
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_property_long(%16* %0, i8* %1, i64 %2, i64 %3, i32 %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  store %16* %0, %16** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 %3, i64* %9, align 8
  store i32 %4, i32* %10, align 4
  %13 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  store %11* %11, %11** %12, align 8
  %15 = load i64, i64* %9, align 8
  %16 = load %11*, %11** %12, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to i64*
  store i64 %15, i64* %18, align 8
  %19 = load %11*, %11** %12, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 1
  %21 = bitcast %13* %20 to i32*
  store i32 4, i32* %21, align 8
  %22 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #2
  %23 = load %16*, %16** %6, align 8
  %24 = load i8*, i8** %7, align 8
  %25 = load i64, i64* %8, align 8
  %26 = load i32, i32* %10, align 4
  %27 = call i32 @zend_declare_property(%16* %23, i8* %24, i64 %25, %11* %11, i32 %26)
  %28 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %28) #2
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_property_double(%16* %0, i8* %1, i64 %2, double %3, i32 %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca double, align 8
  %10 = alloca i32, align 4
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  store %16* %0, %16** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store double %3, double* %9, align 8
  store i32 %4, i32* %10, align 4
  %13 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  store %11* %11, %11** %12, align 8
  %15 = load double, double* %9, align 8
  %16 = load %11*, %11** %12, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to double*
  store double %15, double* %18, align 8
  %19 = load %11*, %11** %12, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 1
  %21 = bitcast %13* %20 to i32*
  store i32 5, i32* %21, align 8
  %22 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #2
  %23 = load %16*, %16** %6, align 8
  %24 = load i8*, i8** %7, align 8
  %25 = load i64, i64* %8, align 8
  %26 = load i32, i32* %10, align 4
  %27 = call i32 @zend_declare_property(%16* %23, i8* %24, i64 %25, %11* %11, i32 %26)
  %28 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %28) #2
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_property_string(%16* %0, i8* %1, i64 %2, i8* %3, i32 %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  store %16* %0, %16** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  store i32 %4, i32* %10, align 4
  %14 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  br label %15

15:                                               ; preds = %5
  %16 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  store %11* %11, %11** %12, align 8
  %17 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load i8*, i8** %9, align 8
  %19 = load i8*, i8** %9, align 8
  %20 = call i64 @strlen(i8* %19) #20
  %21 = load %16*, %16** %6, align 8
  %22 = getelementptr inbounds %16, %16* %21, i32 0, i32 0
  %23 = load i8, i8* %22, align 8
  %24 = sext i8 %23 to i32
  %25 = and i32 %24, 1
  %26 = call %10* @134(i8* %18, i64 %20, i32 %25)
  store %10* %26, %10** %13, align 8
  %27 = load %10*, %10** %13, align 8
  %28 = load %11*, %11** %12, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to %10**
  store %10* %27, %10** %30, align 8
  %31 = load %11*, %11** %12, align 8
  %32 = getelementptr inbounds %11, %11* %31, i32 0, i32 1
  %33 = bitcast %13* %32 to i32*
  store i32 5126, i32* %33, align 8
  %34 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  %35 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #2
  br label %36

36:                                               ; preds = %15
  br label %37

37:                                               ; preds = %36
  %38 = load %16*, %16** %6, align 8
  %39 = load i8*, i8** %7, align 8
  %40 = load i64, i64* %8, align 8
  %41 = load i32, i32* %10, align 4
  %42 = call i32 @zend_declare_property(%16* %38, i8* %39, i64 %40, %11* %11, i32 %41)
  %43 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %43) #2
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_property_stringl(%16* %0, i8* %1, i64 %2, i8* %3, i64 %4, i32 %5) #0 {
  %7 = alloca %16*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %11, align 8
  %14 = alloca %11*, align 8
  %15 = alloca %10*, align 8
  store %16* %0, %16** %7, align 8
  store i8* %1, i8** %8, align 8
  store i64 %2, i64* %9, align 8
  store i8* %3, i8** %10, align 8
  store i64 %4, i64* %11, align 8
  store i32 %5, i32* %12, align 4
  %16 = bitcast %11* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %16) #2
  br label %17

17:                                               ; preds = %6
  %18 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  store %11* %13, %11** %14, align 8
  %19 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  %20 = load i8*, i8** %10, align 8
  %21 = load i64, i64* %11, align 8
  %22 = load %16*, %16** %7, align 8
  %23 = getelementptr inbounds %16, %16* %22, i32 0, i32 0
  %24 = load i8, i8* %23, align 8
  %25 = sext i8 %24 to i32
  %26 = and i32 %25, 1
  %27 = call %10* @134(i8* %20, i64 %21, i32 %26)
  store %10* %27, %10** %15, align 8
  %28 = load %10*, %10** %15, align 8
  %29 = load %11*, %11** %14, align 8
  %30 = getelementptr inbounds %11, %11* %29, i32 0, i32 0
  %31 = bitcast %12* %30 to %10**
  store %10* %28, %10** %31, align 8
  %32 = load %11*, %11** %14, align 8
  %33 = getelementptr inbounds %11, %11* %32, i32 0, i32 1
  %34 = bitcast %13* %33 to i32*
  store i32 5126, i32* %34, align 8
  %35 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #2
  %36 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #2
  br label %37

37:                                               ; preds = %17
  br label %38

38:                                               ; preds = %37
  %39 = load %16*, %16** %7, align 8
  %40 = load i8*, i8** %8, align 8
  %41 = load i64, i64* %9, align 8
  %42 = load i32, i32* %12, align 4
  %43 = call i32 @zend_declare_property(%16* %39, i8* %40, i64 %41, %11* %13, i32 %42)
  %44 = bitcast %11* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %44) #2
  ret i32 %43
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_class_constant_ex(%16* %0, %10* %1, %11* %2, i32 %3, %10* %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca %10*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %10*, align 8
  %11 = alloca %64*, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %58*, align 8
  %15 = alloca i32, align 4
  store %16* %0, %16** %6, align 8
  store %10* %1, %10** %7, align 8
  store %11* %2, %11** %8, align 8
  store i32 %3, i32* %9, align 4
  store %10* %4, %10** %10, align 8
  %16 = bitcast %64** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load %16*, %16** %6, align 8
  %18 = getelementptr inbounds %16, %16* %17, i32 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 64
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %35

22:                                               ; preds = %5
  %23 = load i32, i32* %9, align 4
  %24 = icmp ne i32 %23, 256
  br i1 %24, label %25, label %34

25:                                               ; preds = %22
  %26 = load %16*, %16** %6, align 8
  %27 = getelementptr inbounds %16, %16* %26, i32 0, i32 1
  %28 = load %10*, %10** %27, align 8
  %29 = getelementptr inbounds %10, %10* %28, i32 0, i32 3
  %30 = getelementptr inbounds [1 x i8], [1 x i8]* %29, i32 0, i32 0
  %31 = load %10*, %10** %7, align 8
  %32 = getelementptr inbounds %10, %10* %31, i32 0, i32 3
  %33 = getelementptr inbounds [1 x i8], [1 x i8]* %32, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 64, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @85, i32 0, i32 0), i8* %30, i8* %33) #18
  unreachable

34:                                               ; preds = %22
  br label %35

35:                                               ; preds = %34, %5
  %36 = load %10*, %10** %7, align 8
  %37 = getelementptr inbounds %10, %10* %36, i32 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 5
  br i1 %39, label %40, label %57

40:                                               ; preds = %35
  %41 = load %10*, %10** %7, align 8
  %42 = getelementptr inbounds %10, %10* %41, i32 0, i32 3
  %43 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i32 0, i32 0
  %44 = load %10*, %10** %7, align 8
  %45 = getelementptr inbounds %10, %10* %44, i32 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = call i32 @zend_binary_strcasecmp(i8* %43, i64 %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @86, i32 0, i32 0), i64 5)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %40
  %50 = load %16*, %16** %6, align 8
  %51 = getelementptr inbounds %16, %16* %50, i32 0, i32 0
  %52 = load i8, i8* %51, align 8
  %53 = sext i8 %52 to i32
  %54 = icmp eq i32 %53, 1
  %55 = zext i1 %54 to i64
  %56 = select i1 %54, i32 16, i32 64
  call void (i32, i8*, ...) @zend_error_noreturn(i32 %56, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @87, i32 0, i32 0)) #18
  unreachable

57:                                               ; preds = %40, %35
  %58 = load %16*, %16** %6, align 8
  %59 = getelementptr inbounds %16, %16* %58, i32 0, i32 0
  %60 = load i8, i8* %59, align 8
  %61 = sext i8 %60 to i32
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = call noalias i8* @__zend_malloc(i64 32) #19
  %65 = bitcast i8* %64 to %64*
  store %64* %65, %64** %11, align 8
  br label %69

66:                                               ; preds = %57
  %67 = call i8* @160(%56** getelementptr inbounds (%44, %44* @compiler_globals, i32 0, i32 23), i64 32)
  %68 = bitcast i8* %67 to %64*
  store %64* %68, %64** %11, align 8
  br label %69

69:                                               ; preds = %66, %63
  br label %70

70:                                               ; preds = %69
  %71 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #2
  %72 = load %64*, %64** %11, align 8
  %73 = getelementptr inbounds %64, %64* %72, i32 0, i32 0
  store %11* %73, %11** %12, align 8
  %74 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #2
  %75 = load %11*, %11** %8, align 8
  store %11* %75, %11** %13, align 8
  %76 = bitcast %58** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #2
  %77 = load %11*, %11** %13, align 8
  %78 = getelementptr inbounds %11, %11* %77, i32 0, i32 0
  %79 = bitcast %12* %78 to %58**
  %80 = load %58*, %58** %79, align 8
  store %58* %80, %58** %14, align 8
  %81 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %81) #2
  %82 = load %11*, %11** %13, align 8
  %83 = getelementptr inbounds %11, %11* %82, i32 0, i32 1
  %84 = bitcast %13* %83 to i32*
  %85 = load i32, i32* %84, align 8
  store i32 %85, i32* %15, align 4
  br label %86

86:                                               ; preds = %70
  %87 = load %58*, %58** %14, align 8
  %88 = load %11*, %11** %12, align 8
  %89 = getelementptr inbounds %11, %11* %88, i32 0, i32 0
  %90 = bitcast %12* %89 to %58**
  store %58* %87, %58** %90, align 8
  %91 = load i32, i32* %15, align 4
  %92 = load %11*, %11** %12, align 8
  %93 = getelementptr inbounds %11, %11* %92, i32 0, i32 1
  %94 = bitcast %13* %93 to i32*
  store i32 %91, i32* %94, align 8
  br label %95

95:                                               ; preds = %86
  br label %96

96:                                               ; preds = %95
  %97 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %97) #2
  %98 = bitcast %58** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #2
  %99 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #2
  %100 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #2
  br label %101

101:                                              ; preds = %96
  br label %102

102:                                              ; preds = %101
  %103 = load i32, i32* %9, align 4
  %104 = load %64*, %64** %11, align 8
  %105 = getelementptr inbounds %64, %64* %104, i32 0, i32 0
  %106 = getelementptr inbounds %11, %11* %105, i32 0, i32 2
  %107 = bitcast %14* %106 to i32*
  store i32 %103, i32* %107, align 4
  %108 = load %10*, %10** %10, align 8
  %109 = load %64*, %64** %11, align 8
  %110 = getelementptr inbounds %64, %64* %109, i32 0, i32 1
  store %10* %108, %10** %110, align 8
  %111 = load %16*, %16** %6, align 8
  %112 = load %64*, %64** %11, align 8
  %113 = getelementptr inbounds %64, %64* %112, i32 0, i32 2
  store %16* %111, %16** %113, align 8
  %114 = load %11*, %11** %8, align 8
  %115 = getelementptr inbounds %11, %11* %114, i32 0, i32 1
  %116 = bitcast %13* %115 to %59*
  %117 = getelementptr inbounds %59, %59* %116, i32 0, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = and i32 %119, 1
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %127

122:                                              ; preds = %102
  %123 = load %16*, %16** %6, align 8
  %124 = getelementptr inbounds %16, %16* %123, i32 0, i32 4
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, -1048577
  store i32 %126, i32* %124, align 4
  br label %127

127:                                              ; preds = %122, %102
  %128 = load %16*, %16** %6, align 8
  %129 = getelementptr inbounds %16, %16* %128, i32 0, i32 12
  %130 = load %10*, %10** %7, align 8
  %131 = load %64*, %64** %11, align 8
  %132 = bitcast %64* %131 to i8*
  %133 = call i8* @146(%5* %129, %10* %130, i8* %132)
  %134 = icmp ne i8* %133, null
  br i1 %134, label %151, label %135

135:                                              ; preds = %127
  %136 = load %16*, %16** %6, align 8
  %137 = getelementptr inbounds %16, %16* %136, i32 0, i32 0
  %138 = load i8, i8* %137, align 8
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %139, 1
  %141 = zext i1 %140 to i64
  %142 = select i1 %140, i32 16, i32 64
  %143 = load %16*, %16** %6, align 8
  %144 = getelementptr inbounds %16, %16* %143, i32 0, i32 1
  %145 = load %10*, %10** %144, align 8
  %146 = getelementptr inbounds %10, %10* %145, i32 0, i32 3
  %147 = getelementptr inbounds [1 x i8], [1 x i8]* %146, i32 0, i32 0
  %148 = load %10*, %10** %7, align 8
  %149 = getelementptr inbounds %10, %10* %148, i32 0, i32 3
  %150 = getelementptr inbounds [1 x i8], [1 x i8]* %149, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 %142, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @88, i32 0, i32 0), i8* %147, i8* %150) #18
  unreachable

151:                                              ; preds = %127
  %152 = bitcast %64** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %152) #2
  ret i32 0
}

declare dso_local i32 @zend_binary_strcasecmp(i8*, i64, i8*, i64) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_class_constant(%16* %0, i8* %1, i64 %2, %11* %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %11*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %10*, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store %11* %3, %11** %8, align 8
  %11 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #2
  %12 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = load i8*, i8** %6, align 8
  %14 = load i64, i64* %7, align 8
  %15 = load %16*, %16** %5, align 8
  %16 = getelementptr inbounds %16, %16* %15, i32 0, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = sext i8 %17 to i32
  %19 = and i32 %18, 1
  %20 = call %10* @134(i8* %13, i64 %14, i32 %19)
  store %10* %20, %10** %10, align 8
  %21 = load %16*, %16** %5, align 8
  %22 = getelementptr inbounds %16, %16* %21, i32 0, i32 0
  %23 = load i8, i8* %22, align 8
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %4
  %27 = load %10* (%10*)*, %10* (%10*)** @zend_new_interned_string, align 8
  %28 = load %10*, %10** %10, align 8
  %29 = call %10* %27(%10* %28)
  store %10* %29, %10** %10, align 8
  br label %30

30:                                               ; preds = %26, %4
  %31 = load %16*, %16** %5, align 8
  %32 = load %10*, %10** %10, align 8
  %33 = load %11*, %11** %8, align 8
  %34 = call i32 @zend_declare_class_constant_ex(%16* %31, %10* %32, %11* %33, i32 256, %10* null)
  store i32 %34, i32* %9, align 4
  %35 = load %10*, %10** %10, align 8
  call void @135(%10* %35)
  %36 = load i32, i32* %9, align 4
  %37 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #2
  %38 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %38) #2
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_class_constant_null(%16* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %16*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %11, align 8
  store %16* %0, %16** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %8) #2
  br label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %11, %11* %7, i32 0, i32 1
  %11 = bitcast %13* %10 to i32*
  store i32 1, i32* %11, align 8
  br label %12

12:                                               ; preds = %9
  br label %13

13:                                               ; preds = %12
  %14 = load %16*, %16** %4, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = load i64, i64* %6, align 8
  %17 = call i32 @zend_declare_class_constant(%16* %14, i8* %15, i64 %16, %11* %7)
  %18 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %18) #2
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_class_constant_long(%16* %0, i8* %1, i64 %2, i64 %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11*, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %11 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #2
  %12 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  store %11* %9, %11** %10, align 8
  %13 = load i64, i64* %8, align 8
  %14 = load %11*, %11** %10, align 8
  %15 = getelementptr inbounds %11, %11* %14, i32 0, i32 0
  %16 = bitcast %12* %15 to i64*
  store i64 %13, i64* %16, align 8
  %17 = load %11*, %11** %10, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  store i32 4, i32* %19, align 8
  %20 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #2
  %21 = load %16*, %16** %5, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i32 @zend_declare_class_constant(%16* %21, i8* %22, i64 %23, %11* %9)
  %25 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %25) #2
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_class_constant_bool(%16* %0, i8* %1, i64 %2, i8 zeroext %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca %11, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8 %3, i8* %8, align 1
  %10 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #2
  br label %11

11:                                               ; preds = %4
  %12 = load i8, i8* %8, align 1
  %13 = zext i8 %12 to i32
  %14 = icmp ne i32 %13, 0
  %15 = zext i1 %14 to i64
  %16 = select i1 %14, i32 3, i32 2
  %17 = getelementptr inbounds %11, %11* %9, i32 0, i32 1
  %18 = bitcast %13* %17 to i32*
  store i32 %16, i32* %18, align 8
  br label %19

19:                                               ; preds = %11
  br label %20

20:                                               ; preds = %19
  %21 = load %16*, %16** %5, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i32 @zend_declare_class_constant(%16* %21, i8* %22, i64 %23, %11* %9)
  %25 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %25) #2
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_class_constant_double(%16* %0, i8* %1, i64 %2, double %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11*, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store double %3, double* %8, align 8
  %11 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #2
  %12 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  store %11* %9, %11** %10, align 8
  %13 = load double, double* %8, align 8
  %14 = load %11*, %11** %10, align 8
  %15 = getelementptr inbounds %11, %11* %14, i32 0, i32 0
  %16 = bitcast %12* %15 to double*
  store double %13, double* %16, align 8
  %17 = load %11*, %11** %10, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  store i32 5, i32* %19, align 8
  %20 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #2
  %21 = load %16*, %16** %5, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i32 @zend_declare_class_constant(%16* %21, i8* %22, i64 %23, %11* %9)
  %25 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %25) #2
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_class_constant_stringl(%16* %0, i8* %1, i64 %2, i8* %3, i64 %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  store %16* %0, %16** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  store i64 %4, i64* %10, align 8
  %14 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  br label %15

15:                                               ; preds = %5
  %16 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  store %11* %11, %11** %12, align 8
  %17 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load i8*, i8** %9, align 8
  %19 = load i64, i64* %10, align 8
  %20 = load %16*, %16** %6, align 8
  %21 = getelementptr inbounds %16, %16* %20, i32 0, i32 0
  %22 = load i8, i8* %21, align 8
  %23 = sext i8 %22 to i32
  %24 = and i32 %23, 1
  %25 = call %10* @134(i8* %18, i64 %19, i32 %24)
  store %10* %25, %10** %13, align 8
  %26 = load %10*, %10** %13, align 8
  %27 = load %11*, %11** %12, align 8
  %28 = getelementptr inbounds %11, %11* %27, i32 0, i32 0
  %29 = bitcast %12* %28 to %10**
  store %10* %26, %10** %29, align 8
  %30 = load %11*, %11** %12, align 8
  %31 = getelementptr inbounds %11, %11* %30, i32 0, i32 1
  %32 = bitcast %13* %31 to i32*
  store i32 5126, i32* %32, align 8
  %33 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #2
  %34 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  br label %35

35:                                               ; preds = %15
  br label %36

36:                                               ; preds = %35
  %37 = load %16*, %16** %6, align 8
  %38 = load i8*, i8** %7, align 8
  %39 = load i64, i64* %8, align 8
  %40 = call i32 @zend_declare_class_constant(%16* %37, i8* %38, i64 %39, %11* %11)
  %41 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %41) #2
  ret i32 %40
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_declare_class_constant_string(%16* %0, i8* %1, i64 %2, i8* %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8* %3, i8** %8, align 8
  %9 = load %16*, %16** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load i64, i64* %7, align 8
  %12 = load i8*, i8** %8, align 8
  %13 = load i8*, i8** %8, align 8
  %14 = call i64 @strlen(i8* %13) #20
  %15 = call i32 @zend_declare_class_constant_stringl(%16* %9, i8* %10, i64 %11, i8* %12, i64 %14)
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_update_property_ex(%16* %0, %11* %1, %10* %2, %11* %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca %10*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca %11, align 8
  %10 = alloca %16*, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %10*, align 8
  store %16* %0, %16** %5, align 8
  store %11* %1, %11** %6, align 8
  store %10* %2, %10** %7, align 8
  store %11* %3, %11** %8, align 8
  %13 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %16** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  %15 = load %16*, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  store %16* %15, %16** %10, align 8
  %16 = load %16*, %16** %5, align 8
  store %16* %16, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %17 = load %11*, %11** %6, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 0
  %19 = bitcast %12* %18 to %20**
  %20 = load %20*, %20** %19, align 8
  %21 = getelementptr inbounds %20, %20* %20, i32 0, i32 3
  %22 = load %21*, %21** %21, align 8
  %23 = getelementptr inbounds %21, %21* %22, i32 0, i32 5
  %24 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %23, align 8
  %25 = icmp ne void (%11*, %11*, %11*, i8**)* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %4
  %27 = load %10*, %10** %7, align 8
  %28 = getelementptr inbounds %10, %10* %27, i32 0, i32 3
  %29 = getelementptr inbounds [1 x i8], [1 x i8]* %28, i32 0, i32 0
  %30 = load %11*, %11** %6, align 8
  %31 = getelementptr inbounds %11, %11* %30, i32 0, i32 0
  %32 = bitcast %12* %31 to %20**
  %33 = load %20*, %20** %32, align 8
  %34 = getelementptr inbounds %20, %20* %33, i32 0, i32 2
  %35 = load %16*, %16** %34, align 8
  %36 = getelementptr inbounds %16, %16* %35, i32 0, i32 1
  %37 = load %10*, %10** %36, align 8
  %38 = getelementptr inbounds %10, %10* %37, i32 0, i32 3
  %39 = getelementptr inbounds [1 x i8], [1 x i8]* %38, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @89, i32 0, i32 0), i8* %29, i8* %39) #18
  unreachable

40:                                               ; preds = %4
  br label %41

41:                                               ; preds = %40
  %42 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #2
  store %11* %9, %11** %11, align 8
  %43 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #2
  %44 = load %10*, %10** %7, align 8
  store %10* %44, %10** %12, align 8
  %45 = load %10*, %10** %12, align 8
  %46 = load %11*, %11** %11, align 8
  %47 = getelementptr inbounds %11, %11* %46, i32 0, i32 0
  %48 = bitcast %12* %47 to %10**
  store %10* %45, %10** %48, align 8
  %49 = load %10*, %10** %12, align 8
  %50 = getelementptr inbounds %10, %10* %49, i32 0, i32 0
  %51 = getelementptr inbounds %6, %6* %50, i32 0, i32 1
  %52 = bitcast %7* %51 to %63*
  %53 = getelementptr inbounds %63, %63* %52, i32 0, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = and i32 %55, 2
  %57 = icmp ne i32 %56, 0
  %58 = zext i1 %57 to i64
  %59 = select i1 %57, i32 6, i32 5126
  %60 = load %11*, %11** %11, align 8
  %61 = getelementptr inbounds %11, %11* %60, i32 0, i32 1
  %62 = bitcast %13* %61 to i32*
  store i32 %59, i32* %62, align 8
  %63 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #2
  %64 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #2
  br label %65

65:                                               ; preds = %41
  br label %66

66:                                               ; preds = %65
  %67 = load %11*, %11** %6, align 8
  %68 = getelementptr inbounds %11, %11* %67, i32 0, i32 0
  %69 = bitcast %12* %68 to %20**
  %70 = load %20*, %20** %69, align 8
  %71 = getelementptr inbounds %20, %20* %70, i32 0, i32 3
  %72 = load %21*, %21** %71, align 8
  %73 = getelementptr inbounds %21, %21* %72, i32 0, i32 5
  %74 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %73, align 8
  %75 = load %11*, %11** %6, align 8
  %76 = load %11*, %11** %8, align 8
  call void %74(%11* %75, %11* %9, %11* %76, i8** null)
  %77 = load %16*, %16** %10, align 8
  store %16* %77, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %78 = bitcast %16** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78) #2
  %79 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %79) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_update_property(%16* %0, %11* %1, i8* %2, i64 %3, %11* %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %11*, align 8
  %11 = alloca %11, align 8
  %12 = alloca %16*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %10*, align 8
  store %16* %0, %16** %6, align 8
  store %11* %1, %11** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store %11* %4, %11** %10, align 8
  %15 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #2
  %16 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load %16*, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  store %16* %17, %16** %12, align 8
  %18 = load %16*, %16** %6, align 8
  store %16* %18, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %19 = load %11*, %11** %7, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to %20**
  %22 = load %20*, %20** %21, align 8
  %23 = getelementptr inbounds %20, %20* %22, i32 0, i32 3
  %24 = load %21*, %21** %23, align 8
  %25 = getelementptr inbounds %21, %21* %24, i32 0, i32 5
  %26 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %25, align 8
  %27 = icmp ne void (%11*, %11*, %11*, i8**)* %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %5
  %29 = load i8*, i8** %8, align 8
  %30 = load %11*, %11** %7, align 8
  %31 = getelementptr inbounds %11, %11* %30, i32 0, i32 0
  %32 = bitcast %12* %31 to %20**
  %33 = load %20*, %20** %32, align 8
  %34 = getelementptr inbounds %20, %20* %33, i32 0, i32 2
  %35 = load %16*, %16** %34, align 8
  %36 = getelementptr inbounds %16, %16* %35, i32 0, i32 1
  %37 = load %10*, %10** %36, align 8
  %38 = getelementptr inbounds %10, %10* %37, i32 0, i32 3
  %39 = getelementptr inbounds [1 x i8], [1 x i8]* %38, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @89, i32 0, i32 0), i8* %29, i8* %39) #18
  unreachable

40:                                               ; preds = %5
  br label %41

41:                                               ; preds = %40
  br label %42

42:                                               ; preds = %41
  %43 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #2
  store %11* %11, %11** %13, align 8
  %44 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #2
  %45 = load i8*, i8** %8, align 8
  %46 = load i64, i64* %9, align 8
  %47 = call %10* @134(i8* %45, i64 %46, i32 0)
  store %10* %47, %10** %14, align 8
  %48 = load %10*, %10** %14, align 8
  %49 = load %11*, %11** %13, align 8
  %50 = getelementptr inbounds %11, %11* %49, i32 0, i32 0
  %51 = bitcast %12* %50 to %10**
  store %10* %48, %10** %51, align 8
  %52 = load %11*, %11** %13, align 8
  %53 = getelementptr inbounds %11, %11* %52, i32 0, i32 1
  %54 = bitcast %13* %53 to i32*
  store i32 5126, i32* %54, align 8
  %55 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %55) #2
  %56 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #2
  br label %57

57:                                               ; preds = %42
  br label %58

58:                                               ; preds = %57
  br label %59

59:                                               ; preds = %58
  br label %60

60:                                               ; preds = %59
  %61 = load %11*, %11** %7, align 8
  %62 = getelementptr inbounds %11, %11* %61, i32 0, i32 0
  %63 = bitcast %12* %62 to %20**
  %64 = load %20*, %20** %63, align 8
  %65 = getelementptr inbounds %20, %20* %64, i32 0, i32 3
  %66 = load %21*, %21** %65, align 8
  %67 = getelementptr inbounds %21, %21* %66, i32 0, i32 5
  %68 = load void (%11*, %11*, %11*, i8**)*, void (%11*, %11*, %11*, i8**)** %67, align 8
  %69 = load %11*, %11** %7, align 8
  %70 = load %11*, %11** %10, align 8
  call void %68(%11* %69, %11* %11, %11* %70, i8** null)
  call void @_zval_ptr_dtor(%11* %11)
  %71 = load %16*, %16** %12, align 8
  store %16* %71, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %72 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #2
  %73 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %73) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_update_property_null(%16* %0, %11* %1, i8* %2, i64 %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11, align 8
  store %16* %0, %16** %5, align 8
  store %11* %1, %11** %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %10 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #2
  br label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %11, %11* %9, i32 0, i32 1
  %13 = bitcast %13* %12 to i32*
  store i32 1, i32* %13, align 8
  br label %14

14:                                               ; preds = %11
  br label %15

15:                                               ; preds = %14
  %16 = load %16*, %16** %5, align 8
  %17 = load %11*, %11** %6, align 8
  %18 = load i8*, i8** %7, align 8
  %19 = load i64, i64* %8, align 8
  call void @zend_update_property(%16* %16, %11* %17, i8* %18, i64 %19, %11* %9)
  %20 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %20) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_unset_property(%16* %0, %11* %1, i8* %2, i64 %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca %11*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11, align 8
  %10 = alloca %16*, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %10*, align 8
  store %16* %0, %16** %5, align 8
  store %11* %1, %11** %6, align 8
  store i8* %2, i8** %7, align 8
  store i64 %3, i64* %8, align 8
  %13 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %16** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  %15 = load %16*, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  store %16* %15, %16** %10, align 8
  %16 = load %16*, %16** %5, align 8
  store %16* %16, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %17 = load %11*, %11** %6, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 0
  %19 = bitcast %12* %18 to %20**
  %20 = load %20*, %20** %19, align 8
  %21 = getelementptr inbounds %20, %20* %20, i32 0, i32 3
  %22 = load %21*, %21** %21, align 8
  %23 = getelementptr inbounds %21, %21* %22, i32 0, i32 12
  %24 = load void (%11*, %11*, i8**)*, void (%11*, %11*, i8**)** %23, align 8
  %25 = icmp ne void (%11*, %11*, i8**)* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %4
  %27 = load i8*, i8** %7, align 8
  %28 = load %11*, %11** %6, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to %20**
  %31 = load %20*, %20** %30, align 8
  %32 = getelementptr inbounds %20, %20* %31, i32 0, i32 2
  %33 = load %16*, %16** %32, align 8
  %34 = getelementptr inbounds %16, %16* %33, i32 0, i32 1
  %35 = load %10*, %10** %34, align 8
  %36 = getelementptr inbounds %10, %10* %35, i32 0, i32 3
  %37 = getelementptr inbounds [1 x i8], [1 x i8]* %36, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @90, i32 0, i32 0), i8* %27, i8* %37) #18
  unreachable

38:                                               ; preds = %4
  br label %39

39:                                               ; preds = %38
  br label %40

40:                                               ; preds = %39
  %41 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #2
  store %11* %9, %11** %11, align 8
  %42 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #2
  %43 = load i8*, i8** %7, align 8
  %44 = load i64, i64* %8, align 8
  %45 = call %10* @134(i8* %43, i64 %44, i32 0)
  store %10* %45, %10** %12, align 8
  %46 = load %10*, %10** %12, align 8
  %47 = load %11*, %11** %11, align 8
  %48 = getelementptr inbounds %11, %11* %47, i32 0, i32 0
  %49 = bitcast %12* %48 to %10**
  store %10* %46, %10** %49, align 8
  %50 = load %11*, %11** %11, align 8
  %51 = getelementptr inbounds %11, %11* %50, i32 0, i32 1
  %52 = bitcast %13* %51 to i32*
  store i32 5126, i32* %52, align 8
  %53 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #2
  %54 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #2
  br label %55

55:                                               ; preds = %40
  br label %56

56:                                               ; preds = %55
  br label %57

57:                                               ; preds = %56
  br label %58

58:                                               ; preds = %57
  %59 = load %11*, %11** %6, align 8
  %60 = getelementptr inbounds %11, %11* %59, i32 0, i32 0
  %61 = bitcast %12* %60 to %20**
  %62 = load %20*, %20** %61, align 8
  %63 = getelementptr inbounds %20, %20* %62, i32 0, i32 3
  %64 = load %21*, %21** %63, align 8
  %65 = getelementptr inbounds %21, %21* %64, i32 0, i32 12
  %66 = load void (%11*, %11*, i8**)*, void (%11*, %11*, i8**)** %65, align 8
  %67 = load %11*, %11** %6, align 8
  call void %66(%11* %67, %11* %9, i8** null)
  call void @_zval_ptr_dtor(%11* %9)
  %68 = load %16*, %16** %10, align 8
  store %16* %68, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %69 = bitcast %16** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %69) #2
  %70 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %70) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_update_property_bool(%16* %0, %11* %1, i8* %2, i64 %3, i64 %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %11, align 8
  store %16* %0, %16** %6, align 8
  store %11* %1, %11** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i64 %4, i64* %10, align 8
  %12 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %12) #2
  br label %13

13:                                               ; preds = %5
  %14 = load i64, i64* %10, align 8
  %15 = icmp ne i64 %14, 0
  %16 = zext i1 %15 to i64
  %17 = select i1 %15, i32 3, i32 2
  %18 = getelementptr inbounds %11, %11* %11, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  store i32 %17, i32* %19, align 8
  br label %20

20:                                               ; preds = %13
  br label %21

21:                                               ; preds = %20
  %22 = load %16*, %16** %6, align 8
  %23 = load %11*, %11** %7, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = load i64, i64* %9, align 8
  call void @zend_update_property(%16* %22, %11* %23, i8* %24, i64 %25, %11* %11)
  %26 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %26) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_update_property_long(%16* %0, %11* %1, i8* %2, i64 %3, i64 %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  store %16* %0, %16** %6, align 8
  store %11* %1, %11** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i64 %4, i64* %10, align 8
  %13 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  store %11* %11, %11** %12, align 8
  %15 = load i64, i64* %10, align 8
  %16 = load %11*, %11** %12, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to i64*
  store i64 %15, i64* %18, align 8
  %19 = load %11*, %11** %12, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 1
  %21 = bitcast %13* %20 to i32*
  store i32 4, i32* %21, align 8
  %22 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #2
  %23 = load %16*, %16** %6, align 8
  %24 = load %11*, %11** %7, align 8
  %25 = load i8*, i8** %8, align 8
  %26 = load i64, i64* %9, align 8
  call void @zend_update_property(%16* %23, %11* %24, i8* %25, i64 %26, %11* %11)
  %27 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %27) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_update_property_double(%16* %0, %11* %1, i8* %2, i64 %3, double %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca double, align 8
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  store %16* %0, %16** %6, align 8
  store %11* %1, %11** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store double %4, double* %10, align 8
  %13 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  %14 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  store %11* %11, %11** %12, align 8
  %15 = load double, double* %10, align 8
  %16 = load %11*, %11** %12, align 8
  %17 = getelementptr inbounds %11, %11* %16, i32 0, i32 0
  %18 = bitcast %12* %17 to double*
  store double %15, double* %18, align 8
  %19 = load %11*, %11** %12, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 1
  %21 = bitcast %13* %20 to i32*
  store i32 5, i32* %21, align 8
  %22 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #2
  %23 = load %16*, %16** %6, align 8
  %24 = load %11*, %11** %7, align 8
  %25 = load i8*, i8** %8, align 8
  %26 = load i64, i64* %9, align 8
  call void @zend_update_property(%16* %23, %11* %24, i8* %25, i64 %26, %11* %11)
  %27 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %27) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_update_property_str(%16* %0, %11* %1, i8* %2, i64 %3, %10* %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %10*, align 8
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  store %16* %0, %16** %6, align 8
  store %11* %1, %11** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store %10* %4, %10** %10, align 8
  %14 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  br label %15

15:                                               ; preds = %5
  %16 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  store %11* %11, %11** %12, align 8
  %17 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load %10*, %10** %10, align 8
  store %10* %18, %10** %13, align 8
  %19 = load %10*, %10** %13, align 8
  %20 = load %11*, %11** %12, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 0
  %22 = bitcast %12* %21 to %10**
  store %10* %19, %10** %22, align 8
  %23 = load %10*, %10** %13, align 8
  %24 = getelementptr inbounds %10, %10* %23, i32 0, i32 0
  %25 = getelementptr inbounds %6, %6* %24, i32 0, i32 1
  %26 = bitcast %7* %25 to %63*
  %27 = getelementptr inbounds %63, %63* %26, i32 0, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = and i32 %29, 2
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i32 6, i32 5126
  %34 = load %11*, %11** %12, align 8
  %35 = getelementptr inbounds %11, %11* %34, i32 0, i32 1
  %36 = bitcast %13* %35 to i32*
  store i32 %33, i32* %36, align 8
  %37 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #2
  %38 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #2
  br label %39

39:                                               ; preds = %15
  br label %40

40:                                               ; preds = %39
  %41 = load %16*, %16** %6, align 8
  %42 = load %11*, %11** %7, align 8
  %43 = load i8*, i8** %8, align 8
  %44 = load i64, i64* %9, align 8
  call void @zend_update_property(%16* %41, %11* %42, i8* %43, i64 %44, %11* %11)
  %45 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %45) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_update_property_string(%16* %0, %11* %1, i8* %2, i64 %3, i8* %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %11, align 8
  %12 = alloca i8*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %10*, align 8
  store %16* %0, %16** %6, align 8
  store %11* %1, %11** %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  store i8* %4, i8** %10, align 8
  %15 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #2
  br label %16

16:                                               ; preds = %5
  %17 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = load i8*, i8** %10, align 8
  store i8* %18, i8** %12, align 8
  br label %19

19:                                               ; preds = %16
  br label %20

20:                                               ; preds = %19
  %21 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  store %11* %11, %11** %13, align 8
  %22 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #2
  %23 = load i8*, i8** %12, align 8
  %24 = load i8*, i8** %12, align 8
  %25 = call i64 @strlen(i8* %24) #20
  %26 = call %10* @134(i8* %23, i64 %25, i32 0)
  store %10* %26, %10** %14, align 8
  %27 = load %10*, %10** %14, align 8
  %28 = load %11*, %11** %13, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to %10**
  store %10* %27, %10** %30, align 8
  %31 = load %11*, %11** %13, align 8
  %32 = getelementptr inbounds %11, %11* %31, i32 0, i32 1
  %33 = bitcast %13* %32 to i32*
  store i32 5126, i32* %33, align 8
  %34 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #2
  %35 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #2
  br label %36

36:                                               ; preds = %20
  br label %37

37:                                               ; preds = %36
  br label %38

38:                                               ; preds = %37
  br label %39

39:                                               ; preds = %38
  %40 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #2
  br label %41

41:                                               ; preds = %39
  br label %42

42:                                               ; preds = %41
  %43 = call i32 @162(%11* %11, i32 0)
  %44 = load %16*, %16** %6, align 8
  %45 = load %11*, %11** %7, align 8
  %46 = load i8*, i8** %8, align 8
  %47 = load i64, i64* %9, align 8
  call void @zend_update_property(%16* %44, %11* %45, i8* %46, i64 %47, %11* %11)
  %48 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %48) #2
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @162(%11* %0, i32 %1) #3 {
  %3 = alloca %11*, align 8
  %4 = alloca i32, align 4
  store %11* %0, %11** %3, align 8
  store i32 %1, i32* %4, align 4
  br label %5

5:                                                ; preds = %2
  %6 = load %11*, %11** %3, align 8
  %7 = getelementptr inbounds %11, %11* %6, i32 0, i32 1
  %8 = bitcast %13* %7 to %59*
  %9 = getelementptr inbounds %59, %59* %8, i32 0, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = and i32 %11, 4
  %13 = icmp ne i32 %12, 0
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = call i64 @llvm.expect.i64(i64 %16, i64 0)
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %5
  unreachable

20:                                               ; preds = %5
  br label %21

21:                                               ; preds = %20
  %22 = load i32, i32* %4, align 4
  %23 = load %11*, %11** %3, align 8
  %24 = getelementptr inbounds %11, %11* %23, i32 0, i32 0
  %25 = bitcast %12* %24 to %58**
  %26 = load %58*, %58** %25, align 8
  %27 = getelementptr inbounds %58, %58* %26, i32 0, i32 0
  %28 = getelementptr inbounds %6, %6* %27, i32 0, i32 0
  store i32 %22, i32* %28, align 4
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_update_property_stringl(%16* %0, %11* %1, i8* %2, i64 %3, i8* %4, i64 %5) #0 {
  %7 = alloca %16*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca %11, align 8
  %14 = alloca %11*, align 8
  %15 = alloca %10*, align 8
  store %16* %0, %16** %7, align 8
  store %11* %1, %11** %8, align 8
  store i8* %2, i8** %9, align 8
  store i64 %3, i64* %10, align 8
  store i8* %4, i8** %11, align 8
  store i64 %5, i64* %12, align 8
  %16 = bitcast %11* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %16) #2
  br label %17

17:                                               ; preds = %6
  br label %18

18:                                               ; preds = %17
  %19 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  store %11* %13, %11** %14, align 8
  %20 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #2
  %21 = load i8*, i8** %11, align 8
  %22 = load i64, i64* %12, align 8
  %23 = call %10* @134(i8* %21, i64 %22, i32 0)
  store %10* %23, %10** %15, align 8
  %24 = load %10*, %10** %15, align 8
  %25 = load %11*, %11** %14, align 8
  %26 = getelementptr inbounds %11, %11* %25, i32 0, i32 0
  %27 = bitcast %12* %26 to %10**
  store %10* %24, %10** %27, align 8
  %28 = load %11*, %11** %14, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 1
  %30 = bitcast %13* %29 to i32*
  store i32 5126, i32* %30, align 8
  %31 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #2
  %32 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #2
  br label %33

33:                                               ; preds = %18
  br label %34

34:                                               ; preds = %33
  br label %35

35:                                               ; preds = %34
  br label %36

36:                                               ; preds = %35
  %37 = call i32 @162(%11* %13, i32 0)
  %38 = load %16*, %16** %7, align 8
  %39 = load %11*, %11** %8, align 8
  %40 = load i8*, i8** %9, align 8
  %41 = load i64, i64* %10, align 8
  call void @zend_update_property(%16* %38, %11* %39, i8* %40, i64 %41, %11* %13)
  %42 = bitcast %11* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %42) #2
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_update_static_property(%16* %0, i8* %1, i64 %2, %11* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11*, align 8
  %10 = alloca %11*, align 8
  %11 = alloca %16*, align 8
  %12 = alloca %10*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %11*, align 8
  %15 = alloca %11*, align 8
  %16 = alloca %58*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %11, align 8
  %19 = alloca %11*, align 8
  %20 = alloca %11*, align 8
  %21 = alloca %58*, align 8
  %22 = alloca i32, align 4
  %23 = alloca %11*, align 8
  %24 = alloca %11*, align 8
  %25 = alloca %11*, align 8
  %26 = alloca %58*, align 8
  %27 = alloca i32, align 4
  %28 = alloca %11*, align 8
  %29 = alloca %11*, align 8
  %30 = alloca %58*, align 8
  %31 = alloca i32, align 4
  store %16* %0, %16** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store %11* %3, %11** %9, align 8
  %32 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #2
  %33 = bitcast %16** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #2
  %34 = load %16*, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  store %16* %34, %16** %11, align 8
  %35 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #2
  %36 = load i8*, i8** %7, align 8
  %37 = load i64, i64* %8, align 8
  %38 = call %10* @134(i8* %36, i64 %37, i32 0)
  store %10* %38, %10** %12, align 8
  %39 = load %16*, %16** %6, align 8
  store %16* %39, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %40 = load %16*, %16** %6, align 8
  %41 = load %10*, %10** %12, align 8
  %42 = call %11* @zend_std_get_static_property(%16* %40, %10* %41, i8 zeroext 0)
  store %11* %42, %11** %10, align 8
  %43 = load %16*, %16** %11, align 8
  store %16* %43, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %44 = load %10*, %10** %12, align 8
  call void @140(%10* %44)
  %45 = load %11*, %11** %10, align 8
  %46 = icmp ne %11* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %4
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %13, align 4
  br label %307

48:                                               ; preds = %4
  %49 = load %11*, %11** %10, align 8
  %50 = load %11*, %11** %9, align 8
  %51 = icmp ne %11* %49, %50
  br i1 %51, label %52, label %306

52:                                               ; preds = %48
  %53 = load %11*, %11** %10, align 8
  %54 = call zeroext i8 @125(%11* %53)
  %55 = zext i8 %54 to i32
  %56 = icmp eq i32 %55, 10
  br i1 %56, label %57, label %106

57:                                               ; preds = %52
  %58 = load %11*, %11** %10, align 8
  call void @131(%11* %58)
  br label %59

59:                                               ; preds = %57
  %60 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #2
  %61 = load %11*, %11** %10, align 8
  store %11* %61, %11** %14, align 8
  %62 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #2
  %63 = load %11*, %11** %9, align 8
  store %11* %63, %11** %15, align 8
  %64 = bitcast %58** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #2
  %65 = load %11*, %11** %15, align 8
  %66 = getelementptr inbounds %11, %11* %65, i32 0, i32 0
  %67 = bitcast %12* %66 to %58**
  %68 = load %58*, %58** %67, align 8
  store %58* %68, %58** %16, align 8
  %69 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %69) #2
  %70 = load %11*, %11** %15, align 8
  %71 = getelementptr inbounds %11, %11* %70, i32 0, i32 1
  %72 = bitcast %13* %71 to i32*
  %73 = load i32, i32* %72, align 8
  store i32 %73, i32* %17, align 4
  br label %74

74:                                               ; preds = %59
  %75 = load %58*, %58** %16, align 8
  %76 = load %11*, %11** %14, align 8
  %77 = getelementptr inbounds %11, %11* %76, i32 0, i32 0
  %78 = bitcast %12* %77 to %58**
  store %58* %75, %58** %78, align 8
  %79 = load i32, i32* %17, align 4
  %80 = load %11*, %11** %14, align 8
  %81 = getelementptr inbounds %11, %11* %80, i32 0, i32 1
  %82 = bitcast %13* %81 to i32*
  store i32 %79, i32* %82, align 8
  br label %83

83:                                               ; preds = %74
  br label %84

84:                                               ; preds = %83
  %85 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %85) #2
  %86 = bitcast %58** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #2
  %87 = bitcast %11** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #2
  %88 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #2
  br label %89

89:                                               ; preds = %84
  br label %90

90:                                               ; preds = %89
  %91 = load %11*, %11** %9, align 8
  %92 = getelementptr inbounds %11, %11* %91, i32 0, i32 1
  %93 = bitcast %13* %92 to %59*
  %94 = getelementptr inbounds %59, %59* %93, i32 0, i32 1
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = and i32 %96, 4
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %105

99:                                               ; preds = %90
  %100 = load %11*, %11** %9, align 8
  %101 = call i32 @126(%11* %100)
  %102 = icmp ugt i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = load %11*, %11** %10, align 8
  call void @163(%11* %104)
  br label %105

105:                                              ; preds = %103, %99, %90
  br label %305

106:                                              ; preds = %52
  %107 = bitcast %11* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %107) #2
  br label %108

108:                                              ; preds = %106
  %109 = bitcast %11** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #2
  store %11* %18, %11** %19, align 8
  %110 = bitcast %11** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %110) #2
  %111 = load %11*, %11** %10, align 8
  store %11* %111, %11** %20, align 8
  %112 = bitcast %58** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %112) #2
  %113 = load %11*, %11** %20, align 8
  %114 = getelementptr inbounds %11, %11* %113, i32 0, i32 0
  %115 = bitcast %12* %114 to %58**
  %116 = load %58*, %58** %115, align 8
  store %58* %116, %58** %21, align 8
  %117 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %117) #2
  %118 = load %11*, %11** %20, align 8
  %119 = getelementptr inbounds %11, %11* %118, i32 0, i32 1
  %120 = bitcast %13* %119 to i32*
  %121 = load i32, i32* %120, align 8
  store i32 %121, i32* %22, align 4
  br label %122

122:                                              ; preds = %108
  %123 = load %58*, %58** %21, align 8
  %124 = load %11*, %11** %19, align 8
  %125 = getelementptr inbounds %11, %11* %124, i32 0, i32 0
  %126 = bitcast %12* %125 to %58**
  store %58* %123, %58** %126, align 8
  %127 = load i32, i32* %22, align 4
  %128 = load %11*, %11** %19, align 8
  %129 = getelementptr inbounds %11, %11* %128, i32 0, i32 1
  %130 = bitcast %13* %129 to i32*
  store i32 %127, i32* %130, align 8
  br label %131

131:                                              ; preds = %122
  br label %132

132:                                              ; preds = %131
  %133 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %133) #2
  %134 = bitcast %58** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %134) #2
  %135 = bitcast %11** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %135) #2
  %136 = bitcast %11** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #2
  br label %137

137:                                              ; preds = %132
  br label %138

138:                                              ; preds = %137
  %139 = load %11*, %11** %9, align 8
  %140 = getelementptr inbounds %11, %11* %139, i32 0, i32 1
  %141 = bitcast %13* %140 to %59*
  %142 = getelementptr inbounds %59, %59* %141, i32 0, i32 1
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = and i32 %144, 4
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %271

147:                                              ; preds = %138
  %148 = load %11*, %11** %9, align 8
  %149 = call i32 @128(%11* %148)
  %150 = load %11*, %11** %9, align 8
  %151 = call zeroext i8 @125(%11* %150)
  %152 = zext i8 %151 to i32
  %153 = icmp eq i32 %152, 10
  br i1 %153, label %154, label %270

154:                                              ; preds = %147
  br label %155

155:                                              ; preds = %154
  %156 = bitcast %11** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %156) #2
  %157 = load %11*, %11** %9, align 8
  store %11* %157, %11** %23, align 8
  %158 = load %11*, %11** %23, align 8
  %159 = getelementptr inbounds %11, %11* %158, i32 0, i32 1
  %160 = bitcast %13* %159 to %59*
  %161 = getelementptr inbounds %59, %59* %160, i32 0, i32 1
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = and i32 %163, 4
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %175, label %166

166:                                              ; preds = %155
  %167 = load %11*, %11** %23, align 8
  %168 = getelementptr inbounds %11, %11* %167, i32 0, i32 1
  %169 = bitcast %13* %168 to %59*
  %170 = getelementptr inbounds %59, %59* %169, i32 0, i32 1
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = and i32 %172, 16
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %266

175:                                              ; preds = %166, %155
  %176 = load %11*, %11** %23, align 8
  %177 = call i32 @126(%11* %176)
  %178 = icmp ugt i32 %177, 1
  br i1 %178, label %179, label %265

179:                                              ; preds = %175
  %180 = load %11*, %11** %23, align 8
  %181 = getelementptr inbounds %11, %11* %180, i32 0, i32 1
  %182 = bitcast %13* %181 to %59*
  %183 = getelementptr inbounds %59, %59* %182, i32 0, i32 1
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = and i32 %185, 16
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %188, label %202

188:                                              ; preds = %179
  %189 = load %11*, %11** %23, align 8
  %190 = getelementptr inbounds %11, %11* %189, i32 0, i32 1
  %191 = bitcast %13* %190 to %59*
  %192 = getelementptr inbounds %59, %59* %191, i32 0, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = and i32 %194, 4
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %188
  %198 = load %11*, %11** %23, align 8
  %199 = call i32 @127(%11* %198)
  br label %200

200:                                              ; preds = %197, %188
  %201 = load %11*, %11** %23, align 8
  call void @_zval_copy_ctor_func(%11* %201)
  br label %264

202:                                              ; preds = %179
  %203 = load %11*, %11** %23, align 8
  %204 = call zeroext i8 @125(%11* %203)
  %205 = zext i8 %204 to i32
  %206 = icmp eq i32 %205, 10
  br i1 %206, label %207, label %263

207:                                              ; preds = %202
  %208 = load %11*, %11** %23, align 8
  %209 = call i32 @127(%11* %208)
  br label %210

210:                                              ; preds = %207
  %211 = bitcast %11** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %211) #2
  %212 = load %11*, %11** %23, align 8
  store %11* %212, %11** %24, align 8
  %213 = bitcast %11** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %213) #2
  %214 = load %11*, %11** %23, align 8
  %215 = getelementptr inbounds %11, %11* %214, i32 0, i32 0
  %216 = bitcast %12* %215 to %61**
  %217 = load %61*, %61** %216, align 8
  %218 = getelementptr inbounds %61, %61* %217, i32 0, i32 1
  store %11* %218, %11** %25, align 8
  %219 = bitcast %58** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %219) #2
  %220 = load %11*, %11** %25, align 8
  %221 = getelementptr inbounds %11, %11* %220, i32 0, i32 0
  %222 = bitcast %12* %221 to %58**
  %223 = load %58*, %58** %222, align 8
  store %58* %223, %58** %26, align 8
  %224 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %224) #2
  %225 = load %11*, %11** %25, align 8
  %226 = getelementptr inbounds %11, %11* %225, i32 0, i32 1
  %227 = bitcast %13* %226 to i32*
  %228 = load i32, i32* %227, align 8
  store i32 %228, i32* %27, align 4
  br label %229

229:                                              ; preds = %210
  %230 = load %58*, %58** %26, align 8
  %231 = load %11*, %11** %24, align 8
  %232 = getelementptr inbounds %11, %11* %231, i32 0, i32 0
  %233 = bitcast %12* %232 to %58**
  store %58* %230, %58** %233, align 8
  %234 = load i32, i32* %27, align 4
  %235 = load %11*, %11** %24, align 8
  %236 = getelementptr inbounds %11, %11* %235, i32 0, i32 1
  %237 = bitcast %13* %236 to i32*
  store i32 %234, i32* %237, align 8
  br label %238

238:                                              ; preds = %229
  br label %239

239:                                              ; preds = %238
  %240 = load i32, i32* %27, align 4
  %241 = and i32 %240, 5120
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %243, label %256

243:                                              ; preds = %239
  %244 = load i32, i32* %27, align 4
  %245 = and i32 %244, 4096
  %246 = icmp ne i32 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %243
  %248 = load %11*, %11** %24, align 8
  call void @_zval_copy_ctor_func(%11* %248)
  br label %255

249:                                              ; preds = %243
  %250 = load %58*, %58** %26, align 8
  %251 = getelementptr inbounds %58, %58* %250, i32 0, i32 0
  %252 = getelementptr inbounds %6, %6* %251, i32 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = add i32 %253, 1
  store i32 %254, i32* %252, align 4
  br label %255

255:                                              ; preds = %249, %247
  br label %256

256:                                              ; preds = %255, %239
  %257 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %257) #2
  %258 = bitcast %58** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %258) #2
  %259 = bitcast %11** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #2
  %260 = bitcast %11** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #2
  br label %261

261:                                              ; preds = %256
  br label %262

262:                                              ; preds = %261
  br label %263

263:                                              ; preds = %262, %202
  br label %264

264:                                              ; preds = %263, %200
  br label %265

265:                                              ; preds = %264, %175
  br label %266

266:                                              ; preds = %265, %166
  %267 = bitcast %11** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #2
  br label %268

268:                                              ; preds = %266
  br label %269

269:                                              ; preds = %268
  br label %270

270:                                              ; preds = %269, %147
  br label %271

271:                                              ; preds = %270, %138
  br label %272

272:                                              ; preds = %271
  %273 = bitcast %11** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %273) #2
  %274 = load %11*, %11** %10, align 8
  store %11* %274, %11** %28, align 8
  %275 = bitcast %11** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %275) #2
  %276 = load %11*, %11** %9, align 8
  store %11* %276, %11** %29, align 8
  %277 = bitcast %58** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %277) #2
  %278 = load %11*, %11** %29, align 8
  %279 = getelementptr inbounds %11, %11* %278, i32 0, i32 0
  %280 = bitcast %12* %279 to %58**
  %281 = load %58*, %58** %280, align 8
  store %58* %281, %58** %30, align 8
  %282 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %282) #2
  %283 = load %11*, %11** %29, align 8
  %284 = getelementptr inbounds %11, %11* %283, i32 0, i32 1
  %285 = bitcast %13* %284 to i32*
  %286 = load i32, i32* %285, align 8
  store i32 %286, i32* %31, align 4
  br label %287

287:                                              ; preds = %272
  %288 = load %58*, %58** %30, align 8
  %289 = load %11*, %11** %28, align 8
  %290 = getelementptr inbounds %11, %11* %289, i32 0, i32 0
  %291 = bitcast %12* %290 to %58**
  store %58* %288, %58** %291, align 8
  %292 = load i32, i32* %31, align 4
  %293 = load %11*, %11** %28, align 8
  %294 = getelementptr inbounds %11, %11* %293, i32 0, i32 1
  %295 = bitcast %13* %294 to i32*
  store i32 %292, i32* %295, align 8
  br label %296

296:                                              ; preds = %287
  br label %297

297:                                              ; preds = %296
  %298 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %298) #2
  %299 = bitcast %58** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %299) #2
  %300 = bitcast %11** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %300) #2
  %301 = bitcast %11** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %301) #2
  br label %302

302:                                              ; preds = %297
  br label %303

303:                                              ; preds = %302
  call void @_zval_ptr_dtor(%11* %18)
  %304 = bitcast %11* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %304) #2
  br label %305

305:                                              ; preds = %303, %105
  br label %306

306:                                              ; preds = %305, %48
  store i32 0, i32* %5, align 4
  store i32 1, i32* %13, align 4
  br label %307

307:                                              ; preds = %306, %47
  %308 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %308) #2
  %309 = bitcast %16** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %309) #2
  %310 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %310) #2
  %311 = load i32, i32* %5, align 4
  ret i32 %311
}

declare dso_local %11* @zend_std_get_static_property(%16*, %10*, i8 zeroext) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal void @163(%11* %0) #3 {
  %2 = alloca %11*, align 8
  store %11* %0, %11** %2, align 8
  %3 = load %11*, %11** %2, align 8
  %4 = getelementptr inbounds %11, %11* %3, i32 0, i32 1
  %5 = bitcast %13* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1024
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = load %11*, %11** %2, align 8
  %11 = getelementptr inbounds %11, %11* %10, i32 0, i32 1
  %12 = bitcast %13* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 4096
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %9, %1
  %17 = load %11*, %11** %2, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 4096
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = load %11*, %11** %2, align 8
  call void @_zval_copy_ctor_func(%11* %24)
  br label %28

25:                                               ; preds = %16
  %26 = load %11*, %11** %2, align 8
  %27 = call i32 @128(%11* %26)
  br label %28

28:                                               ; preds = %25, %23
  br label %29

29:                                               ; preds = %28, %9
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_update_static_property_null(%16* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %16*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %11, align 8
  store %16* %0, %16** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %8) #2
  br label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %11, %11* %7, i32 0, i32 1
  %11 = bitcast %13* %10 to i32*
  store i32 1, i32* %11, align 8
  br label %12

12:                                               ; preds = %9
  br label %13

13:                                               ; preds = %12
  %14 = load %16*, %16** %4, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = load i64, i64* %6, align 8
  %17 = call i32 @zend_update_static_property(%16* %14, i8* %15, i64 %16, %11* %7)
  %18 = bitcast %11* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %18) #2
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_update_static_property_bool(%16* %0, i8* %1, i64 %2, i64 %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %10 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #2
  br label %11

11:                                               ; preds = %4
  %12 = load i64, i64* %8, align 8
  %13 = icmp ne i64 %12, 0
  %14 = zext i1 %13 to i64
  %15 = select i1 %13, i32 3, i32 2
  %16 = getelementptr inbounds %11, %11* %9, i32 0, i32 1
  %17 = bitcast %13* %16 to i32*
  store i32 %15, i32* %17, align 8
  br label %18

18:                                               ; preds = %11
  br label %19

19:                                               ; preds = %18
  %20 = load %16*, %16** %5, align 8
  %21 = load i8*, i8** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = call i32 @zend_update_static_property(%16* %20, i8* %21, i64 %22, %11* %9)
  %24 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %24) #2
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_update_static_property_long(%16* %0, i8* %1, i64 %2, i64 %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11*, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  %11 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #2
  %12 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  store %11* %9, %11** %10, align 8
  %13 = load i64, i64* %8, align 8
  %14 = load %11*, %11** %10, align 8
  %15 = getelementptr inbounds %11, %11* %14, i32 0, i32 0
  %16 = bitcast %12* %15 to i64*
  store i64 %13, i64* %16, align 8
  %17 = load %11*, %11** %10, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  store i32 4, i32* %19, align 8
  %20 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #2
  %21 = load %16*, %16** %5, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i32 @zend_update_static_property(%16* %21, i8* %22, i64 %23, %11* %9)
  %25 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %25) #2
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_update_static_property_double(%16* %0, i8* %1, i64 %2, double %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca double, align 8
  %9 = alloca %11, align 8
  %10 = alloca %11*, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store double %3, double* %8, align 8
  %11 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #2
  %12 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  store %11* %9, %11** %10, align 8
  %13 = load double, double* %8, align 8
  %14 = load %11*, %11** %10, align 8
  %15 = getelementptr inbounds %11, %11* %14, i32 0, i32 0
  %16 = bitcast %12* %15 to double*
  store double %13, double* %16, align 8
  %17 = load %11*, %11** %10, align 8
  %18 = getelementptr inbounds %11, %11* %17, i32 0, i32 1
  %19 = bitcast %13* %18 to i32*
  store i32 5, i32* %19, align 8
  %20 = bitcast %11** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #2
  %21 = load %16*, %16** %5, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i32 @zend_update_static_property(%16* %21, i8* %22, i64 %23, %11* %9)
  %25 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %25) #2
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_update_static_property_string(%16* %0, i8* %1, i64 %2, i8* %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %11, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %11*, align 8
  %12 = alloca %10*, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8* %3, i8** %8, align 8
  %13 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #2
  br label %14

14:                                               ; preds = %4
  %15 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  %16 = load i8*, i8** %8, align 8
  store i8* %16, i8** %10, align 8
  br label %17

17:                                               ; preds = %14
  br label %18

18:                                               ; preds = %17
  %19 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #2
  store %11* %9, %11** %11, align 8
  %20 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #2
  %21 = load i8*, i8** %10, align 8
  %22 = load i8*, i8** %10, align 8
  %23 = call i64 @strlen(i8* %22) #20
  %24 = call %10* @134(i8* %21, i64 %23, i32 0)
  store %10* %24, %10** %12, align 8
  %25 = load %10*, %10** %12, align 8
  %26 = load %11*, %11** %11, align 8
  %27 = getelementptr inbounds %11, %11* %26, i32 0, i32 0
  %28 = bitcast %12* %27 to %10**
  store %10* %25, %10** %28, align 8
  %29 = load %11*, %11** %11, align 8
  %30 = getelementptr inbounds %11, %11* %29, i32 0, i32 1
  %31 = bitcast %13* %30 to i32*
  store i32 5126, i32* %31, align 8
  %32 = bitcast %10** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #2
  %33 = bitcast %11** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #2
  br label %34

34:                                               ; preds = %18
  br label %35

35:                                               ; preds = %34
  br label %36

36:                                               ; preds = %35
  br label %37

37:                                               ; preds = %36
  %38 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #2
  br label %39

39:                                               ; preds = %37
  br label %40

40:                                               ; preds = %39
  %41 = call i32 @162(%11* %9, i32 0)
  %42 = load %16*, %16** %5, align 8
  %43 = load i8*, i8** %6, align 8
  %44 = load i64, i64* %7, align 8
  %45 = call i32 @zend_update_static_property(%16* %42, i8* %43, i64 %44, %11* %9)
  %46 = bitcast %11* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %46) #2
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define dso_local i32 @zend_update_static_property_stringl(%16* %0, i8* %1, i64 %2, i8* %3, i64 %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %10*, align 8
  store %16* %0, %16** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  store i64 %4, i64* %10, align 8
  %14 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %14) #2
  br label %15

15:                                               ; preds = %5
  br label %16

16:                                               ; preds = %15
  %17 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  store %11* %11, %11** %12, align 8
  %18 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  %19 = load i8*, i8** %9, align 8
  %20 = load i64, i64* %10, align 8
  %21 = call %10* @134(i8* %19, i64 %20, i32 0)
  store %10* %21, %10** %13, align 8
  %22 = load %10*, %10** %13, align 8
  %23 = load %11*, %11** %12, align 8
  %24 = getelementptr inbounds %11, %11* %23, i32 0, i32 0
  %25 = bitcast %12* %24 to %10**
  store %10* %22, %10** %25, align 8
  %26 = load %11*, %11** %12, align 8
  %27 = getelementptr inbounds %11, %11* %26, i32 0, i32 1
  %28 = bitcast %13* %27 to i32*
  store i32 5126, i32* %28, align 8
  %29 = bitcast %10** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #2
  %30 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #2
  br label %31

31:                                               ; preds = %16
  br label %32

32:                                               ; preds = %31
  br label %33

33:                                               ; preds = %32
  br label %34

34:                                               ; preds = %33
  %35 = call i32 @162(%11* %11, i32 0)
  %36 = load %16*, %16** %6, align 8
  %37 = load i8*, i8** %7, align 8
  %38 = load i64, i64* %8, align 8
  %39 = call i32 @zend_update_static_property(%16* %36, i8* %37, i64 %38, %11* %11)
  %40 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %40) #2
  ret i32 %39
}

; Function Attrs: nounwind uwtable
define dso_local %11* @zend_read_property_ex(%16* %0, %11* %1, %10* %2, i8 zeroext %3, %11* %4) #0 {
  %6 = alloca %16*, align 8
  %7 = alloca %11*, align 8
  %8 = alloca %10*, align 8
  %9 = alloca i8, align 1
  %10 = alloca %11*, align 8
  %11 = alloca %11, align 8
  %12 = alloca %11*, align 8
  %13 = alloca %16*, align 8
  %14 = alloca %11*, align 8
  %15 = alloca %10*, align 8
  store %16* %0, %16** %6, align 8
  store %11* %1, %11** %7, align 8
  store %10* %2, %10** %8, align 8
  store i8 %3, i8* %9, align 1
  store %11* %4, %11** %10, align 8
  %16 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %16) #2
  %17 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  %18 = bitcast %16** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  %19 = load %16*, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  store %16* %19, %16** %13, align 8
  %20 = load %16*, %16** %6, align 8
  store %16* %20, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %21 = load %11*, %11** %7, align 8
  %22 = getelementptr inbounds %11, %11* %21, i32 0, i32 0
  %23 = bitcast %12* %22 to %20**
  %24 = load %20*, %20** %23, align 8
  %25 = getelementptr inbounds %20, %20* %24, i32 0, i32 3
  %26 = load %21*, %21** %25, align 8
  %27 = getelementptr inbounds %21, %21* %26, i32 0, i32 4
  %28 = load %11* (%11*, %11*, i32, i8**, %11*)*, %11* (%11*, %11*, i32, i8**, %11*)** %27, align 8
  %29 = icmp ne %11* (%11*, %11*, i32, i8**, %11*)* %28, null
  br i1 %29, label %44, label %30

30:                                               ; preds = %5
  %31 = load %10*, %10** %8, align 8
  %32 = getelementptr inbounds %10, %10* %31, i32 0, i32 3
  %33 = getelementptr inbounds [1 x i8], [1 x i8]* %32, i32 0, i32 0
  %34 = load %11*, %11** %7, align 8
  %35 = getelementptr inbounds %11, %11* %34, i32 0, i32 0
  %36 = bitcast %12* %35 to %20**
  %37 = load %20*, %20** %36, align 8
  %38 = getelementptr inbounds %20, %20* %37, i32 0, i32 2
  %39 = load %16*, %16** %38, align 8
  %40 = getelementptr inbounds %16, %16* %39, i32 0, i32 1
  %41 = load %10*, %10** %40, align 8
  %42 = getelementptr inbounds %10, %10* %41, i32 0, i32 3
  %43 = getelementptr inbounds [1 x i8], [1 x i8]* %42, i32 0, i32 0
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @91, i32 0, i32 0), i8* %33, i8* %43) #18
  unreachable

44:                                               ; preds = %5
  br label %45

45:                                               ; preds = %44
  %46 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #2
  store %11* %11, %11** %14, align 8
  %47 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #2
  %48 = load %10*, %10** %8, align 8
  store %10* %48, %10** %15, align 8
  %49 = load %10*, %10** %15, align 8
  %50 = load %11*, %11** %14, align 8
  %51 = getelementptr inbounds %11, %11* %50, i32 0, i32 0
  %52 = bitcast %12* %51 to %10**
  store %10* %49, %10** %52, align 8
  %53 = load %10*, %10** %15, align 8
  %54 = getelementptr inbounds %10, %10* %53, i32 0, i32 0
  %55 = getelementptr inbounds %6, %6* %54, i32 0, i32 1
  %56 = bitcast %7* %55 to %63*
  %57 = getelementptr inbounds %63, %63* %56, i32 0, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = and i32 %59, 2
  %61 = icmp ne i32 %60, 0
  %62 = zext i1 %61 to i64
  %63 = select i1 %61, i32 6, i32 5126
  %64 = load %11*, %11** %14, align 8
  %65 = getelementptr inbounds %11, %11* %64, i32 0, i32 1
  %66 = bitcast %13* %65 to i32*
  store i32 %63, i32* %66, align 8
  %67 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %67) #2
  %68 = bitcast %11** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %68) #2
  br label %69

69:                                               ; preds = %45
  br label %70

70:                                               ; preds = %69
  %71 = load %11*, %11** %7, align 8
  %72 = getelementptr inbounds %11, %11* %71, i32 0, i32 0
  %73 = bitcast %12* %72 to %20**
  %74 = load %20*, %20** %73, align 8
  %75 = getelementptr inbounds %20, %20* %74, i32 0, i32 3
  %76 = load %21*, %21** %75, align 8
  %77 = getelementptr inbounds %21, %21* %76, i32 0, i32 4
  %78 = load %11* (%11*, %11*, i32, i8**, %11*)*, %11* (%11*, %11*, i32, i8**, %11*)** %77, align 8
  %79 = load %11*, %11** %7, align 8
  %80 = load i8, i8* %9, align 1
  %81 = zext i8 %80 to i32
  %82 = icmp ne i32 %81, 0
  %83 = zext i1 %82 to i64
  %84 = select i1 %82, i32 3, i32 0
  %85 = load %11*, %11** %10, align 8
  %86 = call %11* %78(%11* %79, %11* %11, i32 %84, i8** null, %11* %85)
  store %11* %86, %11** %12, align 8
  %87 = load %16*, %16** %13, align 8
  store %16* %87, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %88 = load %11*, %11** %12, align 8
  %89 = bitcast %16** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #2
  %90 = bitcast %11** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #2
  %91 = bitcast %11* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %91) #2
  ret %11* %88
}

; Function Attrs: nounwind uwtable
define dso_local %11* @zend_read_property(%16* %0, %11* %1, i8* %2, i64 %3, i8 zeroext %4, %11* %5) #0 {
  %7 = alloca %16*, align 8
  %8 = alloca %11*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca %11*, align 8
  %13 = alloca %11*, align 8
  %14 = alloca %10*, align 8
  store %16* %0, %16** %7, align 8
  store %11* %1, %11** %8, align 8
  store i8* %2, i8** %9, align 8
  store i64 %3, i64* %10, align 8
  store i8 %4, i8* %11, align 1
  store %11* %5, %11** %12, align 8
  %15 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  %16 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load i8*, i8** %9, align 8
  %18 = load i64, i64* %10, align 8
  %19 = call %10* @134(i8* %17, i64 %18, i32 0)
  store %10* %19, %10** %14, align 8
  %20 = load %16*, %16** %7, align 8
  %21 = load %11*, %11** %8, align 8
  %22 = load %10*, %10** %14, align 8
  %23 = load i8, i8* %11, align 1
  %24 = load %11*, %11** %12, align 8
  %25 = call %11* @zend_read_property_ex(%16* %20, %11* %21, %10* %22, i8 zeroext %23, %11* %24)
  store %11* %25, %11** %13, align 8
  %26 = load %10*, %10** %14, align 8
  call void @135(%10* %26)
  %27 = load %11*, %11** %13, align 8
  %28 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #2
  %29 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #2
  ret %11* %27
}

; Function Attrs: nounwind uwtable
define dso_local %11* @zend_read_static_property(%16* %0, i8* %1, i64 %2, i8 zeroext %3) #0 {
  %5 = alloca %16*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca %11*, align 8
  %10 = alloca %16*, align 8
  %11 = alloca %10*, align 8
  store %16* %0, %16** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8 %3, i8* %8, align 1
  %12 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = bitcast %16** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #2
  %14 = load %16*, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  store %16* %14, %16** %10, align 8
  %15 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  %16 = load i8*, i8** %6, align 8
  %17 = load i64, i64* %7, align 8
  %18 = call %10* @134(i8* %16, i64 %17, i32 0)
  store %10* %18, %10** %11, align 8
  %19 = load %16*, %16** %5, align 8
  store %16* %19, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %20 = load %16*, %16** %5, align 8
  %21 = load %10*, %10** %11, align 8
  %22 = load i8, i8* %8, align 1
  %23 = call %11* @zend_std_get_static_property(%16* %20, %10* %21, i8 zeroext %22)
  store %11* %23, %11** %9, align 8
  %24 = load %16*, %16** %10, align 8
  store %16* %24, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 17), align 8
  %25 = load %10*, %10** %11, align 8
  call void @140(%10* %25)
  %26 = load %11*, %11** %9, align 8
  %27 = bitcast %10** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #2
  %28 = bitcast %16** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #2
  %29 = bitcast %11** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #2
  ret %11* %26
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_save_error_handling(%72* %0) #0 {
  %2 = alloca %72*, align 8
  %3 = alloca %11*, align 8
  %4 = alloca %11*, align 8
  %5 = alloca %58*, align 8
  %6 = alloca i32, align 4
  store %72* %0, %72** %2, align 8
  %7 = load i32, i32* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 35), align 8
  %8 = load %72*, %72** %2, align 8
  %9 = getelementptr inbounds %72, %72* %8, i32 0, i32 0
  store i32 %7, i32* %9, align 8
  %10 = load %16*, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 36), align 8
  %11 = load %72*, %72** %2, align 8
  %12 = getelementptr inbounds %72, %72* %11, i32 0, i32 1
  store %16* %10, %16** %12, align 8
  br label %13

13:                                               ; preds = %1
  %14 = bitcast %11** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  %15 = load %72*, %72** %2, align 8
  %16 = getelementptr inbounds %72, %72* %15, i32 0, i32 2
  store %11* %16, %11** %3, align 8
  %17 = bitcast %11** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #2
  store %11* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 30), %11** %4, align 8
  %18 = bitcast %58** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #2
  %19 = load %11*, %11** %4, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to %58**
  %22 = load %58*, %58** %21, align 8
  store %58* %22, %58** %5, align 8
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #2
  %24 = load %11*, %11** %4, align 8
  %25 = getelementptr inbounds %11, %11* %24, i32 0, i32 1
  %26 = bitcast %13* %25 to i32*
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %6, align 4
  br label %28

28:                                               ; preds = %13
  %29 = load %58*, %58** %5, align 8
  %30 = load %11*, %11** %3, align 8
  %31 = getelementptr inbounds %11, %11* %30, i32 0, i32 0
  %32 = bitcast %12* %31 to %58**
  store %58* %29, %58** %32, align 8
  %33 = load i32, i32* %6, align 4
  %34 = load %11*, %11** %3, align 8
  %35 = getelementptr inbounds %11, %11* %34, i32 0, i32 1
  %36 = bitcast %13* %35 to i32*
  store i32 %33, i32* %36, align 8
  br label %37

37:                                               ; preds = %28
  br label %38

38:                                               ; preds = %37
  %39 = load i32, i32* %6, align 4
  %40 = and i32 %39, 1024
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = load %58*, %58** %5, align 8
  %44 = getelementptr inbounds %58, %58* %43, i32 0, i32 0
  %45 = getelementptr inbounds %6, %6* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 4
  br label %48

48:                                               ; preds = %42, %38
  %49 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %49) #2
  %50 = bitcast %58** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #2
  %51 = bitcast %11** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #2
  %52 = bitcast %11** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #2
  br label %53

53:                                               ; preds = %48
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_replace_error_handling(i32 %0, %16* %1, %72* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %16*, align 8
  %6 = alloca %72*, align 8
  store i32 %0, i32* %4, align 4
  store %16* %1, %16** %5, align 8
  store %72* %2, %72** %6, align 8
  %7 = load %72*, %72** %6, align 8
  %8 = icmp ne %72* %7, null
  br i1 %8, label %9, label %21

9:                                                ; preds = %3
  %10 = load %72*, %72** %6, align 8
  call void @zend_save_error_handling(%72* %10)
  %11 = load i32, i32* %4, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %9
  %14 = call zeroext i8 @125(%11* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 30))
  %15 = zext i8 %14 to i32
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  call void @_zval_ptr_dtor(%11* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 30))
  br label %18

18:                                               ; preds = %17
  store i32 0, i32* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 30, i32 1, i32 0), align 8
  br label %19

19:                                               ; preds = %18
  br label %20

20:                                               ; preds = %19, %13, %9
  br label %21

21:                                               ; preds = %20, %3
  %22 = load i32, i32* %4, align 4
  store i32 %22, i32* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 35), align 8
  %23 = load i32, i32* %4, align 4
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = load %16*, %16** %5, align 8
  br label %28

27:                                               ; preds = %21
  br label %28

28:                                               ; preds = %27, %25
  %29 = phi %16* [ %26, %25 ], [ null, %27 ]
  store %16* %29, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 36), align 8
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zend_restore_error_handling(%72* %0) #0 {
  %2 = alloca %72*, align 8
  %3 = alloca %11*, align 8
  %4 = alloca %11*, align 8
  %5 = alloca %58*, align 8
  %6 = alloca i32, align 4
  store %72* %0, %72** %2, align 8
  %7 = load %72*, %72** %2, align 8
  %8 = getelementptr inbounds %72, %72* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 35), align 8
  %10 = load %72*, %72** %2, align 8
  %11 = getelementptr inbounds %72, %72* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = load %72*, %72** %2, align 8
  %16 = getelementptr inbounds %72, %72* %15, i32 0, i32 1
  %17 = load %16*, %16** %16, align 8
  br label %19

18:                                               ; preds = %1
  br label %19

19:                                               ; preds = %18, %14
  %20 = phi %16* [ %17, %14 ], [ null, %18 ]
  store %16* %20, %16** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 36), align 8
  %21 = load %72*, %72** %2, align 8
  %22 = getelementptr inbounds %72, %72* %21, i32 0, i32 2
  %23 = call zeroext i8 @125(%11* %22)
  %24 = zext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %63

26:                                               ; preds = %19
  %27 = load %72*, %72** %2, align 8
  %28 = getelementptr inbounds %72, %72* %27, i32 0, i32 2
  %29 = call i32 @164(%11* %28, %11* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 30))
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %63, label %31

31:                                               ; preds = %26
  call void @_zval_ptr_dtor(%11* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 30))
  br label %32

32:                                               ; preds = %31
  %33 = bitcast %11** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #2
  store %11* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 30), %11** %3, align 8
  %34 = bitcast %11** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #2
  %35 = load %72*, %72** %2, align 8
  %36 = getelementptr inbounds %72, %72* %35, i32 0, i32 2
  store %11* %36, %11** %4, align 8
  %37 = bitcast %58** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #2
  %38 = load %11*, %11** %4, align 8
  %39 = getelementptr inbounds %11, %11* %38, i32 0, i32 0
  %40 = bitcast %12* %39 to %58**
  %41 = load %58*, %58** %40, align 8
  store %58* %41, %58** %5, align 8
  %42 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #2
  %43 = load %11*, %11** %4, align 8
  %44 = getelementptr inbounds %11, %11* %43, i32 0, i32 1
  %45 = bitcast %13* %44 to i32*
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %6, align 4
  br label %47

47:                                               ; preds = %32
  %48 = load %58*, %58** %5, align 8
  %49 = load %11*, %11** %3, align 8
  %50 = getelementptr inbounds %11, %11* %49, i32 0, i32 0
  %51 = bitcast %12* %50 to %58**
  store %58* %48, %58** %51, align 8
  %52 = load i32, i32* %6, align 4
  %53 = load %11*, %11** %3, align 8
  %54 = getelementptr inbounds %11, %11* %53, i32 0, i32 1
  %55 = bitcast %13* %54 to i32*
  store i32 %52, i32* %55, align 8
  br label %56

56:                                               ; preds = %47
  br label %57

57:                                               ; preds = %56
  %58 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %58) #2
  %59 = bitcast %58** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #2
  %60 = bitcast %11** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #2
  %61 = bitcast %11** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #2
  br label %62

62:                                               ; preds = %57
  br label %72

63:                                               ; preds = %26, %19
  %64 = load %72*, %72** %2, align 8
  %65 = getelementptr inbounds %72, %72* %64, i32 0, i32 2
  %66 = call zeroext i8 @125(%11* %65)
  %67 = icmp ne i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = load %72*, %72** %2, align 8
  %70 = getelementptr inbounds %72, %72* %69, i32 0, i32 2
  call void @_zval_ptr_dtor(%11* %70)
  br label %71

71:                                               ; preds = %68, %63
  br label %72

72:                                               ; preds = %71, %62
  br label %73

73:                                               ; preds = %72
  %74 = load %72*, %72** %2, align 8
  %75 = getelementptr inbounds %72, %72* %74, i32 0, i32 2
  %76 = getelementptr inbounds %11, %11* %75, i32 0, i32 1
  %77 = bitcast %13* %76 to i32*
  store i32 0, i32* %77, align 8
  br label %78

78:                                               ; preds = %73
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @164(%11* %0, %11* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca %11*, align 8
  store %11* %0, %11** %4, align 8
  store %11* %1, %11** %5, align 8
  %6 = load %11*, %11** %4, align 8
  %7 = call zeroext i8 @125(%11* %6)
  %8 = zext i8 %7 to i32
  %9 = load %11*, %11** %5, align 8
  %10 = call zeroext i8 @125(%11* %9)
  %11 = zext i8 %10 to i32
  %12 = icmp ne i32 %8, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %53

14:                                               ; preds = %2
  %15 = load %11*, %11** %4, align 8
  %16 = call zeroext i8 @125(%11* %15)
  %17 = zext i8 %16 to i32
  switch i32 %17, label %52 [
    i32 0, label %18
    i32 1, label %18
    i32 2, label %18
    i32 3, label %18
    i32 4, label %19
    i32 5, label %30
    i32 6, label %41
    i32 7, label %41
    i32 8, label %41
    i32 9, label %41
  ]

18:                                               ; preds = %14, %14, %14, %14
  store i32 1, i32* %3, align 4
  br label %53

19:                                               ; preds = %14
  %20 = load %11*, %11** %4, align 8
  %21 = getelementptr inbounds %11, %11* %20, i32 0, i32 0
  %22 = bitcast %12* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = load %11*, %11** %5, align 8
  %25 = getelementptr inbounds %11, %11* %24, i32 0, i32 0
  %26 = bitcast %12* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %23, %27
  %29 = zext i1 %28 to i32
  store i32 %29, i32* %3, align 4
  br label %53

30:                                               ; preds = %14
  %31 = load %11*, %11** %4, align 8
  %32 = getelementptr inbounds %11, %11* %31, i32 0, i32 0
  %33 = bitcast %12* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = load %11*, %11** %5, align 8
  %36 = getelementptr inbounds %11, %11* %35, i32 0, i32 0
  %37 = bitcast %12* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %34, %38
  %40 = zext i1 %39 to i32
  store i32 %40, i32* %3, align 4
  br label %53

41:                                               ; preds = %14, %14, %14, %14
  %42 = load %11*, %11** %4, align 8
  %43 = getelementptr inbounds %11, %11* %42, i32 0, i32 0
  %44 = bitcast %12* %43 to %58**
  %45 = load %58*, %58** %44, align 8
  %46 = load %11*, %11** %5, align 8
  %47 = getelementptr inbounds %11, %11* %46, i32 0, i32 0
  %48 = bitcast %12* %47 to %58**
  %49 = load %58*, %58** %48, align 8
  %50 = icmp eq %58* %45, %49
  %51 = zext i1 %50 to i32
  store i32 %51, i32* %3, align 4
  br label %53

52:                                               ; preds = %14
  store i32 0, i32* %3, align 4
  br label %53

53:                                               ; preds = %52, %41, %30, %19, %18, %13
  %54 = load i32, i32* %3, align 4
  ret i32 %54
}

; Function Attrs: nounwind uwtable
define dso_local %10* @zend_find_alias_name(%16* %0, %10* %1) #0 {
  %3 = alloca %10*, align 8
  %4 = alloca %16*, align 8
  %5 = alloca %10*, align 8
  %6 = alloca %24*, align 8
  %7 = alloca %24**, align 8
  %8 = alloca i32, align 4
  store %16* %0, %16** %4, align 8
  store %10* %1, %10** %5, align 8
  %9 = bitcast %24** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  %10 = bitcast %24*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load %16*, %16** %4, align 8
  %12 = getelementptr inbounds %16, %16* %11, i32 0, i32 37
  %13 = load %24**, %24*** %12, align 8
  store %24** %13, %24*** %7, align 8
  %14 = icmp ne %24** %13, null
  br i1 %14, label %15, label %65

15:                                               ; preds = %2
  %16 = load %24**, %24*** %7, align 8
  %17 = load %24*, %24** %16, align 8
  store %24* %17, %24** %6, align 8
  br label %18

18:                                               ; preds = %59, %15
  %19 = load %24*, %24** %6, align 8
  %20 = icmp ne %24* %19, null
  br i1 %20, label %21, label %64

21:                                               ; preds = %18
  %22 = load %24*, %24** %6, align 8
  %23 = getelementptr inbounds %24, %24* %22, i32 0, i32 1
  %24 = load %10*, %10** %23, align 8
  %25 = icmp ne %10* %24, null
  br i1 %25, label %26, label %59

26:                                               ; preds = %21
  %27 = load %24*, %24** %6, align 8
  %28 = getelementptr inbounds %24, %24* %27, i32 0, i32 1
  %29 = load %10*, %10** %28, align 8
  %30 = getelementptr inbounds %10, %10* %29, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = load %10*, %10** %5, align 8
  %33 = getelementptr inbounds %10, %10* %32, i32 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %31, %34
  br i1 %35, label %36, label %59

36:                                               ; preds = %26
  %37 = load %24*, %24** %6, align 8
  %38 = getelementptr inbounds %24, %24* %37, i32 0, i32 1
  %39 = load %10*, %10** %38, align 8
  %40 = getelementptr inbounds %10, %10* %39, i32 0, i32 3
  %41 = getelementptr inbounds [1 x i8], [1 x i8]* %40, i32 0, i32 0
  %42 = load %24*, %24** %6, align 8
  %43 = getelementptr inbounds %24, %24* %42, i32 0, i32 1
  %44 = load %10*, %10** %43, align 8
  %45 = getelementptr inbounds %10, %10* %44, i32 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = load %10*, %10** %5, align 8
  %48 = getelementptr inbounds %10, %10* %47, i32 0, i32 3
  %49 = getelementptr inbounds [1 x i8], [1 x i8]* %48, i32 0, i32 0
  %50 = load %10*, %10** %5, align 8
  %51 = getelementptr inbounds %10, %10* %50, i32 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = call i32 @zend_binary_strcasecmp(i8* %41, i64 %46, i8* %49, i64 %52)
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %36
  %56 = load %24*, %24** %6, align 8
  %57 = getelementptr inbounds %24, %24* %56, i32 0, i32 1
  %58 = load %10*, %10** %57, align 8
  store %10* %58, %10** %3, align 8
  store i32 1, i32* %8, align 4
  br label %67

59:                                               ; preds = %36, %26, %21
  %60 = load %24**, %24*** %7, align 8
  %61 = getelementptr inbounds %24*, %24** %60, i32 1
  store %24** %61, %24*** %7, align 8
  %62 = load %24**, %24*** %7, align 8
  %63 = load %24*, %24** %62, align 8
  store %24* %63, %24** %6, align 8
  br label %18

64:                                               ; preds = %18
  br label %65

65:                                               ; preds = %64, %2
  %66 = load %10*, %10** %5, align 8
  store %10* %66, %10** %3, align 8
  store i32 1, i32* %8, align 4
  br label %67

67:                                               ; preds = %65, %55
  %68 = bitcast %24*** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %68) #2
  %69 = bitcast %24** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %69) #2
  %70 = load %10*, %10** %3, align 8
  ret %10* %70
}

; Function Attrs: nounwind uwtable
define dso_local %10* @zend_resolve_method_name(%16* %0, %37* %1) #0 {
  %3 = alloca %10*, align 8
  %4 = alloca %16*, align 8
  %5 = alloca %37*, align 8
  %6 = alloca %37*, align 8
  %7 = alloca %5*, align 8
  %8 = alloca %10*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %5*, align 8
  %11 = alloca %9*, align 8
  %12 = alloca %9*, align 8
  %13 = alloca %11*, align 8
  store %16* %0, %16** %4, align 8
  store %37* %1, %37** %5, align 8
  %14 = bitcast %37** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  %15 = bitcast %5** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #2
  %16 = bitcast %10** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #2
  %17 = load %37*, %37** %5, align 8
  %18 = bitcast %37* %17 to %60*
  %19 = getelementptr inbounds %60, %60* %18, i32 0, i32 0
  %20 = load i8, i8* %19, align 8
  %21 = zext i8 %20 to i32
  %22 = icmp ne i32 %21, 2
  br i1 %22, label %50, label %23

23:                                               ; preds = %2
  %24 = load %37*, %37** %5, align 8
  %25 = bitcast %37* %24 to %38*
  %26 = getelementptr inbounds %38, %38* %25, i32 0, i32 9
  %27 = load i32*, i32** %26, align 8
  %28 = icmp ne i32* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = load %37*, %37** %5, align 8
  %31 = bitcast %37* %30 to %38*
  %32 = getelementptr inbounds %38, %38* %31, i32 0, i32 9
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %34, 2
  br i1 %35, label %50, label %36

36:                                               ; preds = %29, %23
  %37 = load %37*, %37** %5, align 8
  %38 = bitcast %37* %37 to %60*
  %39 = getelementptr inbounds %60, %60* %38, i32 0, i32 4
  %40 = load %16*, %16** %39, align 8
  %41 = icmp ne %16* %40, null
  br i1 %41, label %42, label %50

42:                                               ; preds = %36
  %43 = load %37*, %37** %5, align 8
  %44 = bitcast %37* %43 to %60*
  %45 = getelementptr inbounds %60, %60* %44, i32 0, i32 4
  %46 = load %16*, %16** %45, align 8
  %47 = getelementptr inbounds %16, %16* %46, i32 0, i32 37
  %48 = load %24**, %24*** %47, align 8
  %49 = icmp ne %24** %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %42, %36, %29, %2
  %51 = load %37*, %37** %5, align 8
  %52 = bitcast %37* %51 to %60*
  %53 = getelementptr inbounds %60, %60* %52, i32 0, i32 3
  %54 = load %10*, %10** %53, align 8
  store %10* %54, %10** %3, align 8
  store i32 1, i32* %9, align 4
  br label %173

55:                                               ; preds = %42
  %56 = load %16*, %16** %4, align 8
  %57 = getelementptr inbounds %16, %16* %56, i32 0, i32 10
  store %5* %57, %5** %7, align 8
  br label %58

58:                                               ; preds = %55
  %59 = bitcast %5** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #2
  %60 = load %5*, %5** %7, align 8
  store %5* %60, %5** %10, align 8
  %61 = bitcast %9** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #2
  %62 = load %5*, %5** %10, align 8
  %63 = getelementptr inbounds %5, %5* %62, i32 0, i32 3
  %64 = load %9*, %9** %63, align 8
  store %9* %64, %9** %11, align 8
  %65 = bitcast %9** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %65) #2
  %66 = load %9*, %9** %11, align 8
  %67 = load %5*, %5** %10, align 8
  %68 = getelementptr inbounds %5, %5* %67, i32 0, i32 4
  %69 = load i32, i32* %68, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %9, %9* %66, i64 %70
  store %9* %71, %9** %12, align 8
  br label %72

72:                                               ; preds = %157, %58
  %73 = load %9*, %9** %11, align 8
  %74 = load %9*, %9** %12, align 8
  %75 = icmp ne %9* %73, %74
  br i1 %75, label %76, label %160

76:                                               ; preds = %72
  %77 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #2
  %78 = load %9*, %9** %11, align 8
  %79 = getelementptr inbounds %9, %9* %78, i32 0, i32 0
  store %11* %79, %11** %13, align 8
  %80 = load %11*, %11** %13, align 8
  %81 = call zeroext i8 @125(%11* %80)
  %82 = zext i8 %81 to i32
  %83 = icmp eq i32 %82, 0
  %84 = xor i1 %83, true
  %85 = xor i1 %84, true
  %86 = zext i1 %85 to i32
  %87 = sext i32 %86 to i64
  %88 = call i64 @llvm.expect.i64(i64 %87, i64 0)
  %89 = icmp ne i64 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %76
  store i32 6, i32* %9, align 4
  br label %153

91:                                               ; preds = %76
  %92 = load %9*, %9** %11, align 8
  %93 = getelementptr inbounds %9, %9* %92, i32 0, i32 2
  %94 = load %10*, %10** %93, align 8
  store %10* %94, %10** %8, align 8
  %95 = load %11*, %11** %13, align 8
  %96 = getelementptr inbounds %11, %11* %95, i32 0, i32 0
  %97 = bitcast %12* %96 to i8**
  %98 = load i8*, i8** %97, align 8
  %99 = bitcast i8* %98 to %37*
  store %37* %99, %37** %6, align 8
  %100 = load %37*, %37** %6, align 8
  %101 = load %37*, %37** %5, align 8
  %102 = icmp eq %37* %100, %101
  br i1 %102, label %103, label %152

103:                                              ; preds = %91
  %104 = load %10*, %10** %8, align 8
  %105 = icmp ne %10* %104, null
  br i1 %105, label %111, label %106

106:                                              ; preds = %103
  %107 = load %37*, %37** %5, align 8
  %108 = bitcast %37* %107 to %60*
  %109 = getelementptr inbounds %60, %60* %108, i32 0, i32 3
  %110 = load %10*, %10** %109, align 8
  store %10* %110, %10** %3, align 8
  store i32 1, i32* %9, align 4
  br label %153

111:                                              ; preds = %103
  %112 = load %10*, %10** %8, align 8
  %113 = getelementptr inbounds %10, %10* %112, i32 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = load %37*, %37** %5, align 8
  %116 = bitcast %37* %115 to %60*
  %117 = getelementptr inbounds %60, %60* %116, i32 0, i32 3
  %118 = load %10*, %10** %117, align 8
  %119 = getelementptr inbounds %10, %10* %118, i32 0, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %114, %120
  br i1 %121, label %122, label %145

122:                                              ; preds = %111
  %123 = load %10*, %10** %8, align 8
  %124 = getelementptr inbounds %10, %10* %123, i32 0, i32 3
  %125 = getelementptr inbounds [1 x i8], [1 x i8]* %124, i32 0, i32 0
  %126 = load %37*, %37** %5, align 8
  %127 = bitcast %37* %126 to %60*
  %128 = getelementptr inbounds %60, %60* %127, i32 0, i32 3
  %129 = load %10*, %10** %128, align 8
  %130 = getelementptr inbounds %10, %10* %129, i32 0, i32 3
  %131 = getelementptr inbounds [1 x i8], [1 x i8]* %130, i32 0, i32 0
  %132 = load %37*, %37** %5, align 8
  %133 = bitcast %37* %132 to %60*
  %134 = getelementptr inbounds %60, %60* %133, i32 0, i32 3
  %135 = load %10*, %10** %134, align 8
  %136 = getelementptr inbounds %10, %10* %135, i32 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = call i32 @strncasecmp(i8* %125, i8* %131, i64 %137) #20
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %145, label %140

140:                                              ; preds = %122
  %141 = load %37*, %37** %5, align 8
  %142 = bitcast %37* %141 to %60*
  %143 = getelementptr inbounds %60, %60* %142, i32 0, i32 3
  %144 = load %10*, %10** %143, align 8
  store %10* %144, %10** %3, align 8
  store i32 1, i32* %9, align 4
  br label %153

145:                                              ; preds = %122, %111
  %146 = load %37*, %37** %5, align 8
  %147 = bitcast %37* %146 to %60*
  %148 = getelementptr inbounds %60, %60* %147, i32 0, i32 4
  %149 = load %16*, %16** %148, align 8
  %150 = load %10*, %10** %8, align 8
  %151 = call %10* @zend_find_alias_name(%16* %149, %10* %150)
  store %10* %151, %10** %3, align 8
  store i32 1, i32* %9, align 4
  br label %153

152:                                              ; preds = %91
  store i32 0, i32* %9, align 4
  br label %153

153:                                              ; preds = %152, %145, %140, %106, %90
  %154 = bitcast %11** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #2
  %155 = load i32, i32* %9, align 4
  switch i32 %155, label %161 [
    i32 0, label %156
    i32 6, label %157
  ]

156:                                              ; preds = %153
  br label %157

157:                                              ; preds = %156, %153
  %158 = load %9*, %9** %11, align 8
  %159 = getelementptr inbounds %9, %9* %158, i32 1
  store %9* %159, %9** %11, align 8
  br label %72

160:                                              ; preds = %72
  store i32 0, i32* %9, align 4
  br label %161

161:                                              ; preds = %160, %153
  %162 = bitcast %9** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %162) #2
  %163 = bitcast %9** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163) #2
  %164 = bitcast %5** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #2
  %165 = load i32, i32* %9, align 4
  switch i32 %165, label %173 [
    i32 0, label %166
  ]

166:                                              ; preds = %161
  br label %167

167:                                              ; preds = %166
  br label %168

168:                                              ; preds = %167
  %169 = load %37*, %37** %5, align 8
  %170 = bitcast %37* %169 to %60*
  %171 = getelementptr inbounds %60, %60* %170, i32 0, i32 3
  %172 = load %10*, %10** %171, align 8
  store %10* %172, %10** %3, align 8
  store i32 1, i32* %9, align 4
  br label %173

173:                                              ; preds = %168, %161, %50
  %174 = bitcast %10** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %174) #2
  %175 = bitcast %5** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %175) #2
  %176 = bitcast %37** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %176) #2
  %177 = load %10*, %10** %3, align 8
  ret %10* %177
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #9

; Function Attrs: nounwind uwtable
define dso_local i8* @zend_get_object_type(%16* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %16*, align 8
  store %16* %0, %16** %3, align 8
  %4 = load %16*, %16** %3, align 8
  %5 = getelementptr inbounds %16, %16* %4, i32 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 128
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @92, i32 0, i32 0), i8** %2, align 8
  br label %18

10:                                               ; preds = %1
  %11 = load %16*, %16** %3, align 8
  %12 = getelementptr inbounds %16, %16* %11, i32 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 64
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @93, i32 0, i32 0), i8** %2, align 8
  br label %18

17:                                               ; preds = %10
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @86, i32 0, i32 0), i8** %2, align 8
  br label %18

18:                                               ; preds = %17, %16, %9
  %19 = load i8*, i8** %2, align 8
  ret i8* %19
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @zend_is_iterable(%11* %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca %11*, align 8
  store %11* %0, %11** %3, align 8
  %4 = load %11*, %11** %3, align 8
  %5 = call zeroext i8 @125(%11* %4)
  %6 = zext i8 %5 to i32
  switch i32 %6, label %17 [
    i32 7, label %7
    i32 8, label %8
  ]

7:                                                ; preds = %1
  store i8 1, i8* %2, align 1
  br label %18

8:                                                ; preds = %1
  %9 = load %11*, %11** %3, align 8
  %10 = getelementptr inbounds %11, %11* %9, i32 0, i32 0
  %11 = bitcast %12* %10 to %20**
  %12 = load %20*, %20** %11, align 8
  %13 = getelementptr inbounds %20, %20* %12, i32 0, i32 2
  %14 = load %16*, %16** %13, align 8
  %15 = load %16*, %16** @zend_ce_traversable, align 8
  %16 = call zeroext i8 @instanceof_function(%16* %14, %16* %15)
  store i8 %16, i8* %2, align 1
  br label %18

17:                                               ; preds = %1
  store i8 0, i8* %2, align 1
  br label %18

18:                                               ; preds = %17, %8, %7
  %19 = load i8, i8* %2, align 1
  ret i8 %19
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #15

declare dso_local i64 @zend_dval_to_lval_slow(double) #4

declare dso_local void @_zval_dtor_func(%58*) #4

; Function Attrs: nounwind uwtable
define internal i8* @165(i32 %0, %11* %1, [1 x %57]* %2, i8** %3, i8** %4, i32* %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %11*, align 8
  %10 = alloca [1 x %57]*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i8**, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %11*, align 8
  %19 = alloca %11*, align 8
  %20 = alloca i64*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca double*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8**, align 8
  %26 = alloca i64*, align 8
  %27 = alloca i8**, align 8
  %28 = alloca i64*, align 8
  %29 = alloca %10**, align 8
  %30 = alloca %10**, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca %11**, align 8
  %34 = alloca %11**, align 8
  %35 = alloca %5**, align 8
  %36 = alloca %11**, align 8
  %37 = alloca %11**, align 8
  %38 = alloca %16*, align 8
  %39 = alloca %16*, align 8
  %40 = alloca %16**, align 8
  %41 = alloca %16*, align 8
  %42 = alloca %71*, align 8
  %43 = alloca %70*, align 8
  %44 = alloca i8*, align 8
  %45 = alloca %11**, align 8
  store i32 %0, i32* %8, align 4
  store %11* %1, %11** %9, align 8
  store [1 x %57]* %2, [1 x %57]** %10, align 8
  store i8** %3, i8*** %11, align 8
  store i8** %4, i8*** %12, align 8
  store i32* %5, i32** %13, align 8
  %46 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #2
  %47 = load i8**, i8*** %11, align 8
  %48 = load i8*, i8** %47, align 8
  store i8* %48, i8** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #2
  %49 = load i8*, i8** %14, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %14, align 8
  %51 = load i8, i8* %49, align 1
  store i8 %51, i8* %15, align 1
  %52 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #2
  store i32 0, i32* %16, align 4
  %53 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #2
  store i32 0, i32* %17, align 4
  %54 = bitcast %11** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #2
  %55 = load %11*, %11** %9, align 8
  store %11* %55, %11** %18, align 8
  br label %56

56:                                               ; preds = %6
  %57 = load %11*, %11** %9, align 8
  %58 = call zeroext i8 @125(%11* %57)
  %59 = zext i8 %58 to i32
  %60 = icmp eq i32 %59, 10
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %56
  %68 = load %11*, %11** %9, align 8
  %69 = getelementptr inbounds %11, %11* %68, i32 0, i32 0
  %70 = bitcast %12* %69 to %61**
  %71 = load %61*, %61** %70, align 8
  %72 = getelementptr inbounds %61, %61* %71, i32 0, i32 1
  store %11* %72, %11** %9, align 8
  br label %73

73:                                               ; preds = %67, %56
  br label %74

74:                                               ; preds = %73
  br label %75

75:                                               ; preds = %74
  br label %76

76:                                               ; preds = %140, %75
  br label %77

77:                                               ; preds = %76
  %78 = load i8*, i8** %14, align 8
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  %81 = icmp eq i32 %80, 47
  br i1 %81, label %82, label %132

82:                                               ; preds = %77
  br label %83

83:                                               ; preds = %82
  %84 = bitcast %11** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %84) #2
  %85 = load %11*, %11** %9, align 8
  store %11* %85, %11** %19, align 8
  br label %86

86:                                               ; preds = %83
  %87 = load %11*, %11** %19, align 8
  %88 = call zeroext i8 @125(%11* %87)
  %89 = zext i8 %88 to i32
  %90 = icmp ne i32 %89, 10
  %91 = xor i1 %90, true
  %92 = zext i1 %91 to i32
  %93 = sext i32 %92 to i64
  %94 = call i64 @llvm.expect.i64(i64 %93, i64 0)
  %95 = icmp ne i64 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %86
  unreachable

97:                                               ; preds = %86
  br label %98

98:                                               ; preds = %97
  br label %99

99:                                               ; preds = %98
  %100 = load %11*, %11** %19, align 8
  %101 = getelementptr inbounds %11, %11* %100, i32 0, i32 1
  %102 = bitcast %13* %101 to %59*
  %103 = getelementptr inbounds %59, %59* %102, i32 0, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = and i32 %105, 16
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %127

108:                                              ; preds = %99
  %109 = load %11*, %11** %19, align 8
  %110 = call i32 @126(%11* %109)
  %111 = icmp ugt i32 %110, 1
  br i1 %111, label %112, label %126

112:                                              ; preds = %108
  %113 = load %11*, %11** %19, align 8
  %114 = getelementptr inbounds %11, %11* %113, i32 0, i32 1
  %115 = bitcast %13* %114 to %59*
  %116 = getelementptr inbounds %59, %59* %115, i32 0, i32 1
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = and i32 %118, 4
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %112
  %122 = load %11*, %11** %19, align 8
  %123 = call i32 @127(%11* %122)
  br label %124

124:                                              ; preds = %121, %112
  %125 = load %11*, %11** %19, align 8
  call void @_zval_copy_ctor_func(%11* %125)
  br label %126

126:                                              ; preds = %124, %108
  br label %127

127:                                              ; preds = %126, %99
  %128 = bitcast %11** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #2
  br label %129

129:                                              ; preds = %127
  br label %130

130:                                              ; preds = %129
  %131 = load %11*, %11** %9, align 8
  store %11* %131, %11** %18, align 8
  store i32 1, i32* %17, align 4
  br label %140

132:                                              ; preds = %77
  %133 = load i8*, i8** %14, align 8
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %135, 33
  br i1 %136, label %137, label %138

137:                                              ; preds = %132
  store i32 1, i32* %16, align 4
  br label %139

138:                                              ; preds = %132
  br label %143

139:                                              ; preds = %137
  br label %140

140:                                              ; preds = %139, %130
  %141 = load i8*, i8** %14, align 8
  %142 = getelementptr inbounds i8, i8* %141, i32 1
  store i8* %142, i8** %14, align 8
  br label %76

143:                                              ; preds = %138
  %144 = load i8, i8* %15, align 1
  %145 = sext i8 %144 to i32
  switch i32 %145, label %929 [
    i32 108, label %146
    i32 76, label %146
    i32 100, label %208
    i32 115, label %266
    i32 112, label %320
    i32 80, label %374
    i32 83, label %406
    i32 98, label %438
    i32 114, label %496
    i32 65, label %528
    i32 97, label %528
    i32 72, label %564
    i32 104, label %564
    i32 111, label %601
    i32 79, label %633
    i32 67, label %696
    i32 102, label %803
    i32 122, label %890
    i32 90, label %915
  ]

146:                                              ; preds = %143, %143
  %147 = bitcast i64** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %147) #2
  %148 = load [1 x %57]*, [1 x %57]** %10, align 8
  %149 = getelementptr inbounds [1 x %57], [1 x %57]* %148, i32 0, i32 0
  %150 = getelementptr inbounds %57, %57* %149, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = icmp ule i32 %151, 40
  br i1 %152, label %153, label %159

153:                                              ; preds = %146
  %154 = getelementptr inbounds %57, %57* %149, i32 0, i32 3
  %155 = load i8*, i8** %154, align 8
  %156 = getelementptr i8, i8* %155, i32 %151
  %157 = bitcast i8* %156 to i64**
  %158 = add i32 %151, 8
  store i32 %158, i32* %150, align 8
  br label %164

159:                                              ; preds = %146
  %160 = getelementptr inbounds %57, %57* %149, i32 0, i32 2
  %161 = load i8*, i8** %160, align 8
  %162 = bitcast i8* %161 to i64**
  %163 = getelementptr i8, i8* %161, i32 8
  store i8* %163, i8** %160, align 8
  br label %164

164:                                              ; preds = %159, %153
  %165 = phi i64** [ %157, %153 ], [ %162, %159 ]
  %166 = load i64*, i64** %165, align 8
  store i64* %166, i64** %20, align 8
  %167 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %167) #2
  store i8* null, i8** %21, align 8
  %168 = load i32, i32* %16, align 4
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %170, label %190

170:                                              ; preds = %164
  %171 = load [1 x %57]*, [1 x %57]** %10, align 8
  %172 = getelementptr inbounds [1 x %57], [1 x %57]* %171, i32 0, i32 0
  %173 = getelementptr inbounds %57, %57* %172, i32 0, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = icmp ule i32 %174, 40
  br i1 %175, label %176, label %182

176:                                              ; preds = %170
  %177 = getelementptr inbounds %57, %57* %172, i32 0, i32 3
  %178 = load i8*, i8** %177, align 8
  %179 = getelementptr i8, i8* %178, i32 %174
  %180 = bitcast i8* %179 to i8**
  %181 = add i32 %174, 8
  store i32 %181, i32* %173, align 8
  br label %187

182:                                              ; preds = %170
  %183 = getelementptr inbounds %57, %57* %172, i32 0, i32 2
  %184 = load i8*, i8** %183, align 8
  %185 = bitcast i8* %184 to i8**
  %186 = getelementptr i8, i8* %184, i32 8
  store i8* %186, i8** %183, align 8
  br label %187

187:                                              ; preds = %182, %176
  %188 = phi i8** [ %180, %176 ], [ %185, %182 ]
  %189 = load i8*, i8** %188, align 8
  store i8* %189, i8** %21, align 8
  br label %190

190:                                              ; preds = %187, %164
  %191 = load %11*, %11** %9, align 8
  %192 = load i64*, i64** %20, align 8
  %193 = load i8*, i8** %21, align 8
  %194 = load i32, i32* %16, align 4
  %195 = load i8, i8* %15, align 1
  %196 = sext i8 %195 to i32
  %197 = icmp eq i32 %196, 76
  %198 = zext i1 %197 to i32
  %199 = call i32 @166(%11* %191, i64* %192, i8* %193, i32 %194, i32 %198)
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %190
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %203

202:                                              ; preds = %190
  store i32 0, i32* %22, align 4
  br label %203

203:                                              ; preds = %202, %201
  %204 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %204) #2
  %205 = bitcast i64** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %205) #2
  %206 = load i32, i32* %22, align 4
  switch i32 %206, label %933 [
    i32 0, label %207
  ]

207:                                              ; preds = %203
  br label %930

208:                                              ; preds = %143
  %209 = bitcast double** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %209) #2
  %210 = load [1 x %57]*, [1 x %57]** %10, align 8
  %211 = getelementptr inbounds [1 x %57], [1 x %57]* %210, i32 0, i32 0
  %212 = getelementptr inbounds %57, %57* %211, i32 0, i32 0
  %213 = load i32, i32* %212, align 8
  %214 = icmp ule i32 %213, 40
  br i1 %214, label %215, label %221

215:                                              ; preds = %208
  %216 = getelementptr inbounds %57, %57* %211, i32 0, i32 3
  %217 = load i8*, i8** %216, align 8
  %218 = getelementptr i8, i8* %217, i32 %213
  %219 = bitcast i8* %218 to double**
  %220 = add i32 %213, 8
  store i32 %220, i32* %212, align 8
  br label %226

221:                                              ; preds = %208
  %222 = getelementptr inbounds %57, %57* %211, i32 0, i32 2
  %223 = load i8*, i8** %222, align 8
  %224 = bitcast i8* %223 to double**
  %225 = getelementptr i8, i8* %223, i32 8
  store i8* %225, i8** %222, align 8
  br label %226

226:                                              ; preds = %221, %215
  %227 = phi double** [ %219, %215 ], [ %224, %221 ]
  %228 = load double*, double** %227, align 8
  store double* %228, double** %23, align 8
  %229 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %229) #2
  store i8* null, i8** %24, align 8
  %230 = load i32, i32* %16, align 4
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %232, label %252

232:                                              ; preds = %226
  %233 = load [1 x %57]*, [1 x %57]** %10, align 8
  %234 = getelementptr inbounds [1 x %57], [1 x %57]* %233, i32 0, i32 0
  %235 = getelementptr inbounds %57, %57* %234, i32 0, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = icmp ule i32 %236, 40
  br i1 %237, label %238, label %244

238:                                              ; preds = %232
  %239 = getelementptr inbounds %57, %57* %234, i32 0, i32 3
  %240 = load i8*, i8** %239, align 8
  %241 = getelementptr i8, i8* %240, i32 %236
  %242 = bitcast i8* %241 to i8**
  %243 = add i32 %236, 8
  store i32 %243, i32* %235, align 8
  br label %249

244:                                              ; preds = %232
  %245 = getelementptr inbounds %57, %57* %234, i32 0, i32 2
  %246 = load i8*, i8** %245, align 8
  %247 = bitcast i8* %246 to i8**
  %248 = getelementptr i8, i8* %246, i32 8
  store i8* %248, i8** %245, align 8
  br label %249

249:                                              ; preds = %244, %238
  %250 = phi i8** [ %242, %238 ], [ %247, %244 ]
  %251 = load i8*, i8** %250, align 8
  store i8* %251, i8** %24, align 8
  br label %252

252:                                              ; preds = %249, %226
  %253 = load %11*, %11** %9, align 8
  %254 = load double*, double** %23, align 8
  %255 = load i8*, i8** %24, align 8
  %256 = load i32, i32* %16, align 4
  %257 = call i32 @167(%11* %253, double* %254, i8* %255, i32 %256)
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %260, label %259

259:                                              ; preds = %252
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %261

260:                                              ; preds = %252
  store i32 0, i32* %22, align 4
  br label %261

261:                                              ; preds = %260, %259
  %262 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #2
  %263 = bitcast double** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %263) #2
  %264 = load i32, i32* %22, align 4
  switch i32 %264, label %933 [
    i32 0, label %265
  ]

265:                                              ; preds = %261
  br label %930

266:                                              ; preds = %143
  %267 = bitcast i8*** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %267) #2
  %268 = load [1 x %57]*, [1 x %57]** %10, align 8
  %269 = getelementptr inbounds [1 x %57], [1 x %57]* %268, i32 0, i32 0
  %270 = getelementptr inbounds %57, %57* %269, i32 0, i32 0
  %271 = load i32, i32* %270, align 8
  %272 = icmp ule i32 %271, 40
  br i1 %272, label %273, label %279

273:                                              ; preds = %266
  %274 = getelementptr inbounds %57, %57* %269, i32 0, i32 3
  %275 = load i8*, i8** %274, align 8
  %276 = getelementptr i8, i8* %275, i32 %271
  %277 = bitcast i8* %276 to i8***
  %278 = add i32 %271, 8
  store i32 %278, i32* %270, align 8
  br label %284

279:                                              ; preds = %266
  %280 = getelementptr inbounds %57, %57* %269, i32 0, i32 2
  %281 = load i8*, i8** %280, align 8
  %282 = bitcast i8* %281 to i8***
  %283 = getelementptr i8, i8* %281, i32 8
  store i8* %283, i8** %280, align 8
  br label %284

284:                                              ; preds = %279, %273
  %285 = phi i8*** [ %277, %273 ], [ %282, %279 ]
  %286 = load i8**, i8*** %285, align 8
  store i8** %286, i8*** %25, align 8
  %287 = bitcast i64** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %287) #2
  %288 = load [1 x %57]*, [1 x %57]** %10, align 8
  %289 = getelementptr inbounds [1 x %57], [1 x %57]* %288, i32 0, i32 0
  %290 = getelementptr inbounds %57, %57* %289, i32 0, i32 0
  %291 = load i32, i32* %290, align 8
  %292 = icmp ule i32 %291, 40
  br i1 %292, label %293, label %299

293:                                              ; preds = %284
  %294 = getelementptr inbounds %57, %57* %289, i32 0, i32 3
  %295 = load i8*, i8** %294, align 8
  %296 = getelementptr i8, i8* %295, i32 %291
  %297 = bitcast i8* %296 to i64**
  %298 = add i32 %291, 8
  store i32 %298, i32* %290, align 8
  br label %304

299:                                              ; preds = %284
  %300 = getelementptr inbounds %57, %57* %289, i32 0, i32 2
  %301 = load i8*, i8** %300, align 8
  %302 = bitcast i8* %301 to i64**
  %303 = getelementptr i8, i8* %301, i32 8
  store i8* %303, i8** %300, align 8
  br label %304

304:                                              ; preds = %299, %293
  %305 = phi i64** [ %297, %293 ], [ %302, %299 ]
  %306 = load i64*, i64** %305, align 8
  store i64* %306, i64** %26, align 8
  %307 = load %11*, %11** %9, align 8
  %308 = load i8**, i8*** %25, align 8
  %309 = load i64*, i64** %26, align 8
  %310 = load i32, i32* %16, align 4
  %311 = call i32 @168(%11* %307, i8** %308, i64* %309, i32 %310)
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %314, label %313

313:                                              ; preds = %304
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %315

314:                                              ; preds = %304
  store i32 0, i32* %22, align 4
  br label %315

315:                                              ; preds = %314, %313
  %316 = bitcast i64** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %316) #2
  %317 = bitcast i8*** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %317) #2
  %318 = load i32, i32* %22, align 4
  switch i32 %318, label %933 [
    i32 0, label %319
  ]

319:                                              ; preds = %315
  br label %930

320:                                              ; preds = %143
  %321 = bitcast i8*** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %321) #2
  %322 = load [1 x %57]*, [1 x %57]** %10, align 8
  %323 = getelementptr inbounds [1 x %57], [1 x %57]* %322, i32 0, i32 0
  %324 = getelementptr inbounds %57, %57* %323, i32 0, i32 0
  %325 = load i32, i32* %324, align 8
  %326 = icmp ule i32 %325, 40
  br i1 %326, label %327, label %333

327:                                              ; preds = %320
  %328 = getelementptr inbounds %57, %57* %323, i32 0, i32 3
  %329 = load i8*, i8** %328, align 8
  %330 = getelementptr i8, i8* %329, i32 %325
  %331 = bitcast i8* %330 to i8***
  %332 = add i32 %325, 8
  store i32 %332, i32* %324, align 8
  br label %338

333:                                              ; preds = %320
  %334 = getelementptr inbounds %57, %57* %323, i32 0, i32 2
  %335 = load i8*, i8** %334, align 8
  %336 = bitcast i8* %335 to i8***
  %337 = getelementptr i8, i8* %335, i32 8
  store i8* %337, i8** %334, align 8
  br label %338

338:                                              ; preds = %333, %327
  %339 = phi i8*** [ %331, %327 ], [ %336, %333 ]
  %340 = load i8**, i8*** %339, align 8
  store i8** %340, i8*** %27, align 8
  %341 = bitcast i64** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %341) #2
  %342 = load [1 x %57]*, [1 x %57]** %10, align 8
  %343 = getelementptr inbounds [1 x %57], [1 x %57]* %342, i32 0, i32 0
  %344 = getelementptr inbounds %57, %57* %343, i32 0, i32 0
  %345 = load i32, i32* %344, align 8
  %346 = icmp ule i32 %345, 40
  br i1 %346, label %347, label %353

347:                                              ; preds = %338
  %348 = getelementptr inbounds %57, %57* %343, i32 0, i32 3
  %349 = load i8*, i8** %348, align 8
  %350 = getelementptr i8, i8* %349, i32 %345
  %351 = bitcast i8* %350 to i64**
  %352 = add i32 %345, 8
  store i32 %352, i32* %344, align 8
  br label %358

353:                                              ; preds = %338
  %354 = getelementptr inbounds %57, %57* %343, i32 0, i32 2
  %355 = load i8*, i8** %354, align 8
  %356 = bitcast i8* %355 to i64**
  %357 = getelementptr i8, i8* %355, i32 8
  store i8* %357, i8** %354, align 8
  br label %358

358:                                              ; preds = %353, %347
  %359 = phi i64** [ %351, %347 ], [ %356, %353 ]
  %360 = load i64*, i64** %359, align 8
  store i64* %360, i64** %28, align 8
  %361 = load %11*, %11** %9, align 8
  %362 = load i8**, i8*** %27, align 8
  %363 = load i64*, i64** %28, align 8
  %364 = load i32, i32* %16, align 4
  %365 = call i32 @169(%11* %361, i8** %362, i64* %363, i32 %364)
  %366 = icmp ne i32 %365, 0
  br i1 %366, label %368, label %367

367:                                              ; preds = %358
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @22, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %369

368:                                              ; preds = %358
  store i32 0, i32* %22, align 4
  br label %369

369:                                              ; preds = %368, %367
  %370 = bitcast i64** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370) #2
  %371 = bitcast i8*** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #2
  %372 = load i32, i32* %22, align 4
  switch i32 %372, label %933 [
    i32 0, label %373
  ]

373:                                              ; preds = %369
  br label %930

374:                                              ; preds = %143
  %375 = bitcast %10*** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %375) #2
  %376 = load [1 x %57]*, [1 x %57]** %10, align 8
  %377 = getelementptr inbounds [1 x %57], [1 x %57]* %376, i32 0, i32 0
  %378 = getelementptr inbounds %57, %57* %377, i32 0, i32 0
  %379 = load i32, i32* %378, align 8
  %380 = icmp ule i32 %379, 40
  br i1 %380, label %381, label %387

381:                                              ; preds = %374
  %382 = getelementptr inbounds %57, %57* %377, i32 0, i32 3
  %383 = load i8*, i8** %382, align 8
  %384 = getelementptr i8, i8* %383, i32 %379
  %385 = bitcast i8* %384 to %10***
  %386 = add i32 %379, 8
  store i32 %386, i32* %378, align 8
  br label %392

387:                                              ; preds = %374
  %388 = getelementptr inbounds %57, %57* %377, i32 0, i32 2
  %389 = load i8*, i8** %388, align 8
  %390 = bitcast i8* %389 to %10***
  %391 = getelementptr i8, i8* %389, i32 8
  store i8* %391, i8** %388, align 8
  br label %392

392:                                              ; preds = %387, %381
  %393 = phi %10*** [ %385, %381 ], [ %390, %387 ]
  %394 = load %10**, %10*** %393, align 8
  store %10** %394, %10*** %29, align 8
  %395 = load %11*, %11** %9, align 8
  %396 = load %10**, %10*** %29, align 8
  %397 = load i32, i32* %16, align 4
  %398 = call i32 @170(%11* %395, %10** %396, i32 %397)
  %399 = icmp ne i32 %398, 0
  br i1 %399, label %401, label %400

400:                                              ; preds = %392
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @22, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %402

401:                                              ; preds = %392
  store i32 0, i32* %22, align 4
  br label %402

402:                                              ; preds = %401, %400
  %403 = bitcast %10*** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %403) #2
  %404 = load i32, i32* %22, align 4
  switch i32 %404, label %933 [
    i32 0, label %405
  ]

405:                                              ; preds = %402
  br label %930

406:                                              ; preds = %143
  %407 = bitcast %10*** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %407) #2
  %408 = load [1 x %57]*, [1 x %57]** %10, align 8
  %409 = getelementptr inbounds [1 x %57], [1 x %57]* %408, i32 0, i32 0
  %410 = getelementptr inbounds %57, %57* %409, i32 0, i32 0
  %411 = load i32, i32* %410, align 8
  %412 = icmp ule i32 %411, 40
  br i1 %412, label %413, label %419

413:                                              ; preds = %406
  %414 = getelementptr inbounds %57, %57* %409, i32 0, i32 3
  %415 = load i8*, i8** %414, align 8
  %416 = getelementptr i8, i8* %415, i32 %411
  %417 = bitcast i8* %416 to %10***
  %418 = add i32 %411, 8
  store i32 %418, i32* %410, align 8
  br label %424

419:                                              ; preds = %406
  %420 = getelementptr inbounds %57, %57* %409, i32 0, i32 2
  %421 = load i8*, i8** %420, align 8
  %422 = bitcast i8* %421 to %10***
  %423 = getelementptr i8, i8* %421, i32 8
  store i8* %423, i8** %420, align 8
  br label %424

424:                                              ; preds = %419, %413
  %425 = phi %10*** [ %417, %413 ], [ %422, %419 ]
  %426 = load %10**, %10*** %425, align 8
  store %10** %426, %10*** %30, align 8
  %427 = load %11*, %11** %9, align 8
  %428 = load %10**, %10*** %30, align 8
  %429 = load i32, i32* %16, align 4
  %430 = call i32 @171(%11* %427, %10** %428, i32 %429)
  %431 = icmp ne i32 %430, 0
  br i1 %431, label %433, label %432

432:                                              ; preds = %424
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %434

433:                                              ; preds = %424
  store i32 0, i32* %22, align 4
  br label %434

434:                                              ; preds = %433, %432
  %435 = bitcast %10*** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %435) #2
  %436 = load i32, i32* %22, align 4
  switch i32 %436, label %933 [
    i32 0, label %437
  ]

437:                                              ; preds = %434
  br label %930

438:                                              ; preds = %143
  %439 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %439) #2
  %440 = load [1 x %57]*, [1 x %57]** %10, align 8
  %441 = getelementptr inbounds [1 x %57], [1 x %57]* %440, i32 0, i32 0
  %442 = getelementptr inbounds %57, %57* %441, i32 0, i32 0
  %443 = load i32, i32* %442, align 8
  %444 = icmp ule i32 %443, 40
  br i1 %444, label %445, label %451

445:                                              ; preds = %438
  %446 = getelementptr inbounds %57, %57* %441, i32 0, i32 3
  %447 = load i8*, i8** %446, align 8
  %448 = getelementptr i8, i8* %447, i32 %443
  %449 = bitcast i8* %448 to i8**
  %450 = add i32 %443, 8
  store i32 %450, i32* %442, align 8
  br label %456

451:                                              ; preds = %438
  %452 = getelementptr inbounds %57, %57* %441, i32 0, i32 2
  %453 = load i8*, i8** %452, align 8
  %454 = bitcast i8* %453 to i8**
  %455 = getelementptr i8, i8* %453, i32 8
  store i8* %455, i8** %452, align 8
  br label %456

456:                                              ; preds = %451, %445
  %457 = phi i8** [ %449, %445 ], [ %454, %451 ]
  %458 = load i8*, i8** %457, align 8
  store i8* %458, i8** %31, align 8
  %459 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %459) #2
  store i8* null, i8** %32, align 8
  %460 = load i32, i32* %16, align 4
  %461 = icmp ne i32 %460, 0
  br i1 %461, label %462, label %482

462:                                              ; preds = %456
  %463 = load [1 x %57]*, [1 x %57]** %10, align 8
  %464 = getelementptr inbounds [1 x %57], [1 x %57]* %463, i32 0, i32 0
  %465 = getelementptr inbounds %57, %57* %464, i32 0, i32 0
  %466 = load i32, i32* %465, align 8
  %467 = icmp ule i32 %466, 40
  br i1 %467, label %468, label %474

468:                                              ; preds = %462
  %469 = getelementptr inbounds %57, %57* %464, i32 0, i32 3
  %470 = load i8*, i8** %469, align 8
  %471 = getelementptr i8, i8* %470, i32 %466
  %472 = bitcast i8* %471 to i8**
  %473 = add i32 %466, 8
  store i32 %473, i32* %465, align 8
  br label %479

474:                                              ; preds = %462
  %475 = getelementptr inbounds %57, %57* %464, i32 0, i32 2
  %476 = load i8*, i8** %475, align 8
  %477 = bitcast i8* %476 to i8**
  %478 = getelementptr i8, i8* %476, i32 8
  store i8* %478, i8** %475, align 8
  br label %479

479:                                              ; preds = %474, %468
  %480 = phi i8** [ %472, %468 ], [ %477, %474 ]
  %481 = load i8*, i8** %480, align 8
  store i8* %481, i8** %32, align 8
  br label %482

482:                                              ; preds = %479, %456
  %483 = load %11*, %11** %9, align 8
  %484 = load i8*, i8** %31, align 8
  %485 = load i8*, i8** %32, align 8
  %486 = load i32, i32* %16, align 4
  %487 = call i32 @172(%11* %483, i8* %484, i8* %485, i32 %486)
  %488 = icmp ne i32 %487, 0
  br i1 %488, label %490, label %489

489:                                              ; preds = %482
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %491

490:                                              ; preds = %482
  store i32 0, i32* %22, align 4
  br label %491

491:                                              ; preds = %490, %489
  %492 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %492) #2
  %493 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %493) #2
  %494 = load i32, i32* %22, align 4
  switch i32 %494, label %933 [
    i32 0, label %495
  ]

495:                                              ; preds = %491
  br label %930

496:                                              ; preds = %143
  %497 = bitcast %11*** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %497) #2
  %498 = load [1 x %57]*, [1 x %57]** %10, align 8
  %499 = getelementptr inbounds [1 x %57], [1 x %57]* %498, i32 0, i32 0
  %500 = getelementptr inbounds %57, %57* %499, i32 0, i32 0
  %501 = load i32, i32* %500, align 8
  %502 = icmp ule i32 %501, 40
  br i1 %502, label %503, label %509

503:                                              ; preds = %496
  %504 = getelementptr inbounds %57, %57* %499, i32 0, i32 3
  %505 = load i8*, i8** %504, align 8
  %506 = getelementptr i8, i8* %505, i32 %501
  %507 = bitcast i8* %506 to %11***
  %508 = add i32 %501, 8
  store i32 %508, i32* %500, align 8
  br label %514

509:                                              ; preds = %496
  %510 = getelementptr inbounds %57, %57* %499, i32 0, i32 2
  %511 = load i8*, i8** %510, align 8
  %512 = bitcast i8* %511 to %11***
  %513 = getelementptr i8, i8* %511, i32 8
  store i8* %513, i8** %510, align 8
  br label %514

514:                                              ; preds = %509, %503
  %515 = phi %11*** [ %507, %503 ], [ %512, %509 ]
  %516 = load %11**, %11*** %515, align 8
  store %11** %516, %11*** %33, align 8
  %517 = load %11*, %11** %9, align 8
  %518 = load %11**, %11*** %33, align 8
  %519 = load i32, i32* %16, align 4
  %520 = call i32 @173(%11* %517, %11** %518, i32 %519)
  %521 = icmp ne i32 %520, 0
  br i1 %521, label %523, label %522

522:                                              ; preds = %514
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @6, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %524

523:                                              ; preds = %514
  store i32 0, i32* %22, align 4
  br label %524

524:                                              ; preds = %523, %522
  %525 = bitcast %11*** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %525) #2
  %526 = load i32, i32* %22, align 4
  switch i32 %526, label %933 [
    i32 0, label %527
  ]

527:                                              ; preds = %524
  br label %930

528:                                              ; preds = %143, %143
  %529 = bitcast %11*** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %529) #2
  %530 = load [1 x %57]*, [1 x %57]** %10, align 8
  %531 = getelementptr inbounds [1 x %57], [1 x %57]* %530, i32 0, i32 0
  %532 = getelementptr inbounds %57, %57* %531, i32 0, i32 0
  %533 = load i32, i32* %532, align 8
  %534 = icmp ule i32 %533, 40
  br i1 %534, label %535, label %541

535:                                              ; preds = %528
  %536 = getelementptr inbounds %57, %57* %531, i32 0, i32 3
  %537 = load i8*, i8** %536, align 8
  %538 = getelementptr i8, i8* %537, i32 %533
  %539 = bitcast i8* %538 to %11***
  %540 = add i32 %533, 8
  store i32 %540, i32* %532, align 8
  br label %546

541:                                              ; preds = %528
  %542 = getelementptr inbounds %57, %57* %531, i32 0, i32 2
  %543 = load i8*, i8** %542, align 8
  %544 = bitcast i8* %543 to %11***
  %545 = getelementptr i8, i8* %543, i32 8
  store i8* %545, i8** %542, align 8
  br label %546

546:                                              ; preds = %541, %535
  %547 = phi %11*** [ %539, %535 ], [ %544, %541 ]
  %548 = load %11**, %11*** %547, align 8
  store %11** %548, %11*** %34, align 8
  %549 = load %11*, %11** %9, align 8
  %550 = load %11**, %11*** %34, align 8
  %551 = load i32, i32* %16, align 4
  %552 = load i8, i8* %15, align 1
  %553 = sext i8 %552 to i32
  %554 = icmp eq i32 %553, 65
  %555 = zext i1 %554 to i32
  %556 = call i32 @174(%11* %549, %11** %550, i32 %551, i32 %555)
  %557 = icmp ne i32 %556, 0
  br i1 %557, label %559, label %558

558:                                              ; preds = %546
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @10, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %560

559:                                              ; preds = %546
  store i32 0, i32* %22, align 4
  br label %560

560:                                              ; preds = %559, %558
  %561 = bitcast %11*** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %561) #2
  %562 = load i32, i32* %22, align 4
  switch i32 %562, label %933 [
    i32 0, label %563
  ]

563:                                              ; preds = %560
  br label %930

564:                                              ; preds = %143, %143
  %565 = bitcast %5*** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %565) #2
  %566 = load [1 x %57]*, [1 x %57]** %10, align 8
  %567 = getelementptr inbounds [1 x %57], [1 x %57]* %566, i32 0, i32 0
  %568 = getelementptr inbounds %57, %57* %567, i32 0, i32 0
  %569 = load i32, i32* %568, align 8
  %570 = icmp ule i32 %569, 40
  br i1 %570, label %571, label %577

571:                                              ; preds = %564
  %572 = getelementptr inbounds %57, %57* %567, i32 0, i32 3
  %573 = load i8*, i8** %572, align 8
  %574 = getelementptr i8, i8* %573, i32 %569
  %575 = bitcast i8* %574 to %5***
  %576 = add i32 %569, 8
  store i32 %576, i32* %568, align 8
  br label %582

577:                                              ; preds = %564
  %578 = getelementptr inbounds %57, %57* %567, i32 0, i32 2
  %579 = load i8*, i8** %578, align 8
  %580 = bitcast i8* %579 to %5***
  %581 = getelementptr i8, i8* %579, i32 8
  store i8* %581, i8** %578, align 8
  br label %582

582:                                              ; preds = %577, %571
  %583 = phi %5*** [ %575, %571 ], [ %580, %577 ]
  %584 = load %5**, %5*** %583, align 8
  store %5** %584, %5*** %35, align 8
  %585 = load %11*, %11** %9, align 8
  %586 = load %5**, %5*** %35, align 8
  %587 = load i32, i32* %16, align 4
  %588 = load i8, i8* %15, align 1
  %589 = sext i8 %588 to i32
  %590 = icmp eq i32 %589, 72
  %591 = zext i1 %590 to i32
  %592 = load i32, i32* %17, align 4
  %593 = call i32 @175(%11* %585, %5** %586, i32 %587, i32 %591, i32 %592)
  %594 = icmp ne i32 %593, 0
  br i1 %594, label %596, label %595

595:                                              ; preds = %582
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @10, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %597

596:                                              ; preds = %582
  store i32 0, i32* %22, align 4
  br label %597

597:                                              ; preds = %596, %595
  %598 = bitcast %5*** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %598) #2
  %599 = load i32, i32* %22, align 4
  switch i32 %599, label %933 [
    i32 0, label %600
  ]

600:                                              ; preds = %597
  br label %930

601:                                              ; preds = %143
  %602 = bitcast %11*** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %602) #2
  %603 = load [1 x %57]*, [1 x %57]** %10, align 8
  %604 = getelementptr inbounds [1 x %57], [1 x %57]* %603, i32 0, i32 0
  %605 = getelementptr inbounds %57, %57* %604, i32 0, i32 0
  %606 = load i32, i32* %605, align 8
  %607 = icmp ule i32 %606, 40
  br i1 %607, label %608, label %614

608:                                              ; preds = %601
  %609 = getelementptr inbounds %57, %57* %604, i32 0, i32 3
  %610 = load i8*, i8** %609, align 8
  %611 = getelementptr i8, i8* %610, i32 %606
  %612 = bitcast i8* %611 to %11***
  %613 = add i32 %606, 8
  store i32 %613, i32* %605, align 8
  br label %619

614:                                              ; preds = %601
  %615 = getelementptr inbounds %57, %57* %604, i32 0, i32 2
  %616 = load i8*, i8** %615, align 8
  %617 = bitcast i8* %616 to %11***
  %618 = getelementptr i8, i8* %616, i32 8
  store i8* %618, i8** %615, align 8
  br label %619

619:                                              ; preds = %614, %608
  %620 = phi %11*** [ %612, %608 ], [ %617, %614 ]
  %621 = load %11**, %11*** %620, align 8
  store %11** %621, %11*** %36, align 8
  %622 = load %11*, %11** %9, align 8
  %623 = load %11**, %11*** %36, align 8
  %624 = load i32, i32* %16, align 4
  %625 = call i32 @176(%11* %622, %11** %623, %16* null, i32 %624)
  %626 = icmp ne i32 %625, 0
  br i1 %626, label %628, label %627

627:                                              ; preds = %619
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @5, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %629

628:                                              ; preds = %619
  store i32 0, i32* %22, align 4
  br label %629

629:                                              ; preds = %628, %627
  %630 = bitcast %11*** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %630) #2
  %631 = load i32, i32* %22, align 4
  switch i32 %631, label %933 [
    i32 0, label %632
  ]

632:                                              ; preds = %629
  br label %930

633:                                              ; preds = %143
  %634 = bitcast %11*** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %634) #2
  %635 = load [1 x %57]*, [1 x %57]** %10, align 8
  %636 = getelementptr inbounds [1 x %57], [1 x %57]* %635, i32 0, i32 0
  %637 = getelementptr inbounds %57, %57* %636, i32 0, i32 0
  %638 = load i32, i32* %637, align 8
  %639 = icmp ule i32 %638, 40
  br i1 %639, label %640, label %646

640:                                              ; preds = %633
  %641 = getelementptr inbounds %57, %57* %636, i32 0, i32 3
  %642 = load i8*, i8** %641, align 8
  %643 = getelementptr i8, i8* %642, i32 %638
  %644 = bitcast i8* %643 to %11***
  %645 = add i32 %638, 8
  store i32 %645, i32* %637, align 8
  br label %651

646:                                              ; preds = %633
  %647 = getelementptr inbounds %57, %57* %636, i32 0, i32 2
  %648 = load i8*, i8** %647, align 8
  %649 = bitcast i8* %648 to %11***
  %650 = getelementptr i8, i8* %648, i32 8
  store i8* %650, i8** %647, align 8
  br label %651

651:                                              ; preds = %646, %640
  %652 = phi %11*** [ %644, %640 ], [ %649, %646 ]
  %653 = load %11**, %11*** %652, align 8
  store %11** %653, %11*** %37, align 8
  %654 = bitcast %16** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %654) #2
  %655 = load [1 x %57]*, [1 x %57]** %10, align 8
  %656 = getelementptr inbounds [1 x %57], [1 x %57]* %655, i32 0, i32 0
  %657 = getelementptr inbounds %57, %57* %656, i32 0, i32 0
  %658 = load i32, i32* %657, align 8
  %659 = icmp ule i32 %658, 40
  br i1 %659, label %660, label %666

660:                                              ; preds = %651
  %661 = getelementptr inbounds %57, %57* %656, i32 0, i32 3
  %662 = load i8*, i8** %661, align 8
  %663 = getelementptr i8, i8* %662, i32 %658
  %664 = bitcast i8* %663 to %16**
  %665 = add i32 %658, 8
  store i32 %665, i32* %657, align 8
  br label %671

666:                                              ; preds = %651
  %667 = getelementptr inbounds %57, %57* %656, i32 0, i32 2
  %668 = load i8*, i8** %667, align 8
  %669 = bitcast i8* %668 to %16**
  %670 = getelementptr i8, i8* %668, i32 8
  store i8* %670, i8** %667, align 8
  br label %671

671:                                              ; preds = %666, %660
  %672 = phi %16** [ %664, %660 ], [ %669, %666 ]
  %673 = load %16*, %16** %672, align 8
  store %16* %673, %16** %38, align 8
  %674 = load %11*, %11** %9, align 8
  %675 = load %11**, %11*** %37, align 8
  %676 = load %16*, %16** %38, align 8
  %677 = load i32, i32* %16, align 4
  %678 = call i32 @176(%11* %674, %11** %675, %16* %676, i32 %677)
  %679 = icmp ne i32 %678, 0
  br i1 %679, label %690, label %680

680:                                              ; preds = %671
  %681 = load %16*, %16** %38, align 8
  %682 = icmp ne %16* %681, null
  br i1 %682, label %683, label %689

683:                                              ; preds = %680
  %684 = load %16*, %16** %38, align 8
  %685 = getelementptr inbounds %16, %16* %684, i32 0, i32 1
  %686 = load %10*, %10** %685, align 8
  %687 = getelementptr inbounds %10, %10* %686, i32 0, i32 3
  %688 = getelementptr inbounds [1 x i8], [1 x i8]* %687, i32 0, i32 0
  store i8* %688, i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %691

689:                                              ; preds = %680
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @5, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %691

690:                                              ; preds = %671
  store i32 0, i32* %22, align 4
  br label %691

691:                                              ; preds = %690, %689, %683
  %692 = bitcast %16** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %692) #2
  %693 = bitcast %11*** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %693) #2
  %694 = load i32, i32* %22, align 4
  switch i32 %694, label %933 [
    i32 0, label %695
  ]

695:                                              ; preds = %691
  br label %930

696:                                              ; preds = %143
  %697 = bitcast %16** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %697) #2
  %698 = bitcast %16*** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %698) #2
  %699 = load [1 x %57]*, [1 x %57]** %10, align 8
  %700 = getelementptr inbounds [1 x %57], [1 x %57]* %699, i32 0, i32 0
  %701 = getelementptr inbounds %57, %57* %700, i32 0, i32 0
  %702 = load i32, i32* %701, align 8
  %703 = icmp ule i32 %702, 40
  br i1 %703, label %704, label %710

704:                                              ; preds = %696
  %705 = getelementptr inbounds %57, %57* %700, i32 0, i32 3
  %706 = load i8*, i8** %705, align 8
  %707 = getelementptr i8, i8* %706, i32 %702
  %708 = bitcast i8* %707 to %16***
  %709 = add i32 %702, 8
  store i32 %709, i32* %701, align 8
  br label %715

710:                                              ; preds = %696
  %711 = getelementptr inbounds %57, %57* %700, i32 0, i32 2
  %712 = load i8*, i8** %711, align 8
  %713 = bitcast i8* %712 to %16***
  %714 = getelementptr i8, i8* %712, i32 8
  store i8* %714, i8** %711, align 8
  br label %715

715:                                              ; preds = %710, %704
  %716 = phi %16*** [ %708, %704 ], [ %713, %710 ]
  %717 = load %16**, %16*** %716, align 8
  store %16** %717, %16*** %40, align 8
  %718 = bitcast %16** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %718) #2
  %719 = load %16**, %16*** %40, align 8
  %720 = load %16*, %16** %719, align 8
  store %16* %720, %16** %41, align 8
  %721 = load i32, i32* %16, align 4
  %722 = icmp ne i32 %721, 0
  br i1 %722, label %723, label %730

723:                                              ; preds = %715
  %724 = load %11*, %11** %9, align 8
  %725 = call zeroext i8 @125(%11* %724)
  %726 = zext i8 %725 to i32
  %727 = icmp eq i32 %726, 1
  br i1 %727, label %728, label %730

728:                                              ; preds = %723
  %729 = load %16**, %16*** %40, align 8
  store %16* null, %16** %729, align 8
  store i32 10, i32* %22, align 4
  br label %798

730:                                              ; preds = %723, %715
  %731 = load %11*, %11** %9, align 8
  %732 = call zeroext i8 @125(%11* %731)
  %733 = zext i8 %732 to i32
  %734 = icmp ne i32 %733, 6
  br i1 %734, label %735, label %743

735:                                              ; preds = %730
  %736 = load %11*, %11** %9, align 8
  %737 = call zeroext i8 @125(%11* %736)
  %738 = zext i8 %737 to i32
  %739 = icmp ne i32 %738, 6
  br i1 %739, label %740, label %742

740:                                              ; preds = %735
  %741 = load %11*, %11** %9, align 8
  call void @_convert_to_string(%11* %741)
  br label %742

742:                                              ; preds = %740, %735
  br label %743

743:                                              ; preds = %742, %730
  %744 = load %11*, %11** %9, align 8
  %745 = getelementptr inbounds %11, %11* %744, i32 0, i32 0
  %746 = bitcast %12* %745 to %10**
  %747 = load %10*, %10** %746, align 8
  %748 = call %16* @zend_lookup_class(%10* %747)
  store %16* %748, %16** %39, align 8
  %749 = icmp eq %16* %748, null
  br i1 %749, label %750, label %752

750:                                              ; preds = %743
  %751 = load %16**, %16*** %40, align 8
  store %16* null, %16** %751, align 8
  br label %755

752:                                              ; preds = %743
  %753 = load %16*, %16** %39, align 8
  %754 = load %16**, %16*** %40, align 8
  store %16* %753, %16** %754, align 8
  br label %755

755:                                              ; preds = %752, %750
  %756 = load %16*, %16** %41, align 8
  %757 = icmp ne %16* %756, null
  br i1 %757, label %758, label %784

758:                                              ; preds = %755
  %759 = load %16**, %16*** %40, align 8
  %760 = load %16*, %16** %759, align 8
  %761 = icmp ne %16* %760, null
  br i1 %761, label %762, label %768

762:                                              ; preds = %758
  %763 = load %16**, %16*** %40, align 8
  %764 = load %16*, %16** %763, align 8
  %765 = load %16*, %16** %41, align 8
  %766 = call zeroext i8 @instanceof_function(%16* %764, %16* %765)
  %767 = icmp ne i8 %766, 0
  br i1 %767, label %783, label %768

768:                                              ; preds = %762, %758
  %769 = load i8**, i8*** %12, align 8
  %770 = load %16*, %16** %41, align 8
  %771 = getelementptr inbounds %16, %16* %770, i32 0, i32 1
  %772 = load %10*, %10** %771, align 8
  %773 = getelementptr inbounds %10, %10* %772, i32 0, i32 3
  %774 = getelementptr inbounds [1 x i8], [1 x i8]* %773, i32 0, i32 0
  %775 = load %11*, %11** %9, align 8
  %776 = getelementptr inbounds %11, %11* %775, i32 0, i32 0
  %777 = bitcast %12* %776 to %10**
  %778 = load %10*, %10** %777, align 8
  %779 = getelementptr inbounds %10, %10* %778, i32 0, i32 3
  %780 = getelementptr inbounds [1 x i8], [1 x i8]* %779, i32 0, i32 0
  %781 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %769, i64 0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @95, i32 0, i32 0), i8* %774, i8* %780)
  %782 = load %16**, %16*** %40, align 8
  store %16* null, %16** %782, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %798

783:                                              ; preds = %762
  br label %784

784:                                              ; preds = %783, %755
  %785 = load %16**, %16*** %40, align 8
  %786 = load %16*, %16** %785, align 8
  %787 = icmp ne %16* %786, null
  br i1 %787, label %797, label %788

788:                                              ; preds = %784
  %789 = load i8**, i8*** %12, align 8
  %790 = load %11*, %11** %9, align 8
  %791 = getelementptr inbounds %11, %11* %790, i32 0, i32 0
  %792 = bitcast %12* %791 to %10**
  %793 = load %10*, %10** %792, align 8
  %794 = getelementptr inbounds %10, %10* %793, i32 0, i32 3
  %795 = getelementptr inbounds [1 x i8], [1 x i8]* %794, i32 0, i32 0
  %796 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %789, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @96, i32 0, i32 0), i8* %795)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %798

797:                                              ; preds = %784
  store i32 10, i32* %22, align 4
  br label %798

798:                                              ; preds = %797, %788, %768, %728
  %799 = bitcast %16** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %799) #2
  %800 = bitcast %16*** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %800) #2
  %801 = bitcast %16** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %801) #2
  %802 = load i32, i32* %22, align 4
  switch i32 %802, label %933 [
    i32 10, label %930
  ]

803:                                              ; preds = %143
  %804 = bitcast %71** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %804) #2
  %805 = load [1 x %57]*, [1 x %57]** %10, align 8
  %806 = getelementptr inbounds [1 x %57], [1 x %57]* %805, i32 0, i32 0
  %807 = getelementptr inbounds %57, %57* %806, i32 0, i32 0
  %808 = load i32, i32* %807, align 8
  %809 = icmp ule i32 %808, 40
  br i1 %809, label %810, label %816

810:                                              ; preds = %803
  %811 = getelementptr inbounds %57, %57* %806, i32 0, i32 3
  %812 = load i8*, i8** %811, align 8
  %813 = getelementptr i8, i8* %812, i32 %808
  %814 = bitcast i8* %813 to %71**
  %815 = add i32 %808, 8
  store i32 %815, i32* %807, align 8
  br label %821

816:                                              ; preds = %803
  %817 = getelementptr inbounds %57, %57* %806, i32 0, i32 2
  %818 = load i8*, i8** %817, align 8
  %819 = bitcast i8* %818 to %71**
  %820 = getelementptr i8, i8* %818, i32 8
  store i8* %820, i8** %817, align 8
  br label %821

821:                                              ; preds = %816, %810
  %822 = phi %71** [ %814, %810 ], [ %819, %816 ]
  %823 = load %71*, %71** %822, align 8
  store %71* %823, %71** %42, align 8
  %824 = bitcast %70** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %824) #2
  %825 = load [1 x %57]*, [1 x %57]** %10, align 8
  %826 = getelementptr inbounds [1 x %57], [1 x %57]* %825, i32 0, i32 0
  %827 = getelementptr inbounds %57, %57* %826, i32 0, i32 0
  %828 = load i32, i32* %827, align 8
  %829 = icmp ule i32 %828, 40
  br i1 %829, label %830, label %836

830:                                              ; preds = %821
  %831 = getelementptr inbounds %57, %57* %826, i32 0, i32 3
  %832 = load i8*, i8** %831, align 8
  %833 = getelementptr i8, i8* %832, i32 %828
  %834 = bitcast i8* %833 to %70**
  %835 = add i32 %828, 8
  store i32 %835, i32* %827, align 8
  br label %841

836:                                              ; preds = %821
  %837 = getelementptr inbounds %57, %57* %826, i32 0, i32 2
  %838 = load i8*, i8** %837, align 8
  %839 = bitcast i8* %838 to %70**
  %840 = getelementptr i8, i8* %838, i32 8
  store i8* %840, i8** %837, align 8
  br label %841

841:                                              ; preds = %836, %830
  %842 = phi %70** [ %834, %830 ], [ %839, %836 ]
  %843 = load %70*, %70** %842, align 8
  store %70* %843, %70** %43, align 8
  %844 = bitcast i8** %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %844) #2
  store i8* null, i8** %44, align 8
  %845 = load i32, i32* %16, align 4
  %846 = icmp ne i32 %845, 0
  br i1 %846, label %847, label %857

847:                                              ; preds = %841
  %848 = load %11*, %11** %9, align 8
  %849 = call zeroext i8 @125(%11* %848)
  %850 = zext i8 %849 to i32
  %851 = icmp eq i32 %850, 1
  br i1 %851, label %852, label %857

852:                                              ; preds = %847
  %853 = load %71*, %71** %42, align 8
  %854 = getelementptr inbounds %71, %71* %853, i32 0, i32 0
  store i64 0, i64* %854, align 8
  %855 = load %70*, %70** %43, align 8
  %856 = getelementptr inbounds %70, %70* %855, i32 0, i32 0
  store i8 0, i8* %856, align 8
  store i32 10, i32* %22, align 4
  br label %885

857:                                              ; preds = %847, %841
  %858 = load %11*, %11** %9, align 8
  %859 = load %71*, %71** %42, align 8
  %860 = load %70*, %70** %43, align 8
  %861 = call i32 @zend_fcall_info_init(%11* %858, i32 0, %71* %859, %70* %860, %10** null, i8** %44)
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %863, label %875

863:                                              ; preds = %857
  %864 = load i8*, i8** %44, align 8
  %865 = icmp ne i8* %864, null
  br i1 %865, label %866, label %874

866:                                              ; preds = %863
  %867 = load i32*, i32** %13, align 8
  store i32 8192, i32* %867, align 4
  %868 = load i8**, i8*** %12, align 8
  %869 = load i8*, i8** %44, align 8
  %870 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %868, i64 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @97, i32 0, i32 0), i8* %869)
  %871 = load i8*, i8** %44, align 8
  call void @_efree(i8* %871)
  %872 = load i8*, i8** %14, align 8
  %873 = load i8**, i8*** %11, align 8
  store i8* %872, i8** %873, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %885

874:                                              ; preds = %863
  store i32 10, i32* %22, align 4
  br label %885

875:                                              ; preds = %857
  %876 = load i8*, i8** %44, align 8
  %877 = icmp ne i8* %876, null
  br i1 %877, label %878, label %884

878:                                              ; preds = %875
  %879 = load i32*, i32** %13, align 8
  store i32 1, i32* %879, align 4
  %880 = load i8**, i8*** %12, align 8
  %881 = load i8*, i8** %44, align 8
  %882 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %880, i64 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @97, i32 0, i32 0), i8* %881)
  %883 = load i8*, i8** %44, align 8
  call void @_efree(i8* %883)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %885

884:                                              ; preds = %875
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @21, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %885

885:                                              ; preds = %884, %878, %874, %866, %852
  %886 = bitcast i8** %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %886) #2
  %887 = bitcast %70** %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %887) #2
  %888 = bitcast %71** %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %888) #2
  %889 = load i32, i32* %22, align 4
  switch i32 %889, label %933 [
    i32 10, label %930
  ]

890:                                              ; preds = %143
  %891 = bitcast %11*** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %891) #2
  %892 = load [1 x %57]*, [1 x %57]** %10, align 8
  %893 = getelementptr inbounds [1 x %57], [1 x %57]* %892, i32 0, i32 0
  %894 = getelementptr inbounds %57, %57* %893, i32 0, i32 0
  %895 = load i32, i32* %894, align 8
  %896 = icmp ule i32 %895, 40
  br i1 %896, label %897, label %903

897:                                              ; preds = %890
  %898 = getelementptr inbounds %57, %57* %893, i32 0, i32 3
  %899 = load i8*, i8** %898, align 8
  %900 = getelementptr i8, i8* %899, i32 %895
  %901 = bitcast i8* %900 to %11***
  %902 = add i32 %895, 8
  store i32 %902, i32* %894, align 8
  br label %908

903:                                              ; preds = %890
  %904 = getelementptr inbounds %57, %57* %893, i32 0, i32 2
  %905 = load i8*, i8** %904, align 8
  %906 = bitcast i8* %905 to %11***
  %907 = getelementptr i8, i8* %905, i32 8
  store i8* %907, i8** %904, align 8
  br label %908

908:                                              ; preds = %903, %897
  %909 = phi %11*** [ %901, %897 ], [ %906, %903 ]
  %910 = load %11**, %11*** %909, align 8
  store %11** %910, %11*** %45, align 8
  %911 = load %11*, %11** %18, align 8
  %912 = load %11**, %11*** %45, align 8
  %913 = load i32, i32* %16, align 4
  call void @177(%11* %911, %11** %912, i32 %913)
  %914 = bitcast %11*** %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %914) #2
  br label %930

915:                                              ; preds = %143
  br label %916

916:                                              ; preds = %915
  %917 = load i8, i8* %15, align 1
  %918 = sext i8 %917 to i32
  %919 = icmp ne i32 %918, 90
  %920 = xor i1 %919, true
  %921 = zext i1 %920 to i32
  %922 = sext i32 %921 to i64
  %923 = call i64 @llvm.expect.i64(i64 %922, i64 0)
  %924 = icmp ne i64 %923, 0
  br i1 %924, label %925, label %926

925:                                              ; preds = %916
  unreachable

926:                                              ; preds = %916
  br label %927

927:                                              ; preds = %926
  br label %928

928:                                              ; preds = %927
  br label %929

929:                                              ; preds = %143, %928
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @12, i32 0, i32 0), i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %933

930:                                              ; preds = %908, %885, %798, %695, %632, %600, %563, %527, %495, %437, %405, %373, %319, %265, %207
  %931 = load i8*, i8** %14, align 8
  %932 = load i8**, i8*** %11, align 8
  store i8* %931, i8** %932, align 8
  store i8* null, i8** %7, align 8
  store i32 1, i32* %22, align 4
  br label %933

933:                                              ; preds = %930, %929, %885, %798, %691, %629, %597, %560, %524, %491, %434, %402, %369, %315, %261, %203
  %934 = bitcast %11** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %934) #2
  %935 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %935) #2
  %936 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %936) #2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #2
  %937 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %937) #2
  %938 = load i8*, i8** %7, align 8
  ret i8* %938
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @166(%11* %0, i64* %1, i8* %2, i32 %3, i32 %4) #3 {
  %6 = alloca i32, align 4
  %7 = alloca %11*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %11* %0, %11** %7, align 8
  store i64* %1, i64** %8, align 8
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %12 = load i32, i32* %10, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = load i8*, i8** %9, align 8
  store i8 0, i8* %15, align 1
  br label %16

16:                                               ; preds = %14, %5
  %17 = load %11*, %11** %7, align 8
  %18 = call zeroext i8 @125(%11* %17)
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 4
  %21 = xor i1 %20, true
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i32
  %24 = sext i32 %23 to i64
  %25 = call i64 @llvm.expect.i64(i64 %24, i64 1)
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %16
  %28 = load %11*, %11** %7, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = load i64*, i64** %8, align 8
  store i64 %31, i64* %32, align 8
  br label %56

33:                                               ; preds = %16
  %34 = load i32, i32* %10, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %33
  %37 = load %11*, %11** %7, align 8
  %38 = call zeroext i8 @125(%11* %37)
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = load i8*, i8** %9, align 8
  store i8 1, i8* %42, align 1
  %43 = load i64*, i64** %8, align 8
  store i64 0, i64* %43, align 8
  br label %55

44:                                               ; preds = %36, %33
  %45 = load i32, i32* %11, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = load %11*, %11** %7, align 8
  %49 = load i64*, i64** %8, align 8
  %50 = call i32 @zend_parse_arg_long_cap_slow(%11* %48, i64* %49)
  store i32 %50, i32* %6, align 4
  br label %57

51:                                               ; preds = %44
  %52 = load %11*, %11** %7, align 8
  %53 = load i64*, i64** %8, align 8
  %54 = call i32 @zend_parse_arg_long_slow(%11* %52, i64* %53)
  store i32 %54, i32* %6, align 4
  br label %57

55:                                               ; preds = %41
  br label %56

56:                                               ; preds = %55, %27
  store i32 1, i32* %6, align 4
  br label %57

57:                                               ; preds = %56, %51, %47
  %58 = load i32, i32* %6, align 4
  ret i32 %58
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @167(%11* %0, double* %1, i8* %2, i32 %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca %11*, align 8
  %7 = alloca double*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %11* %0, %11** %6, align 8
  store double* %1, double** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = load i8*, i8** %8, align 8
  store i8 0, i8* %13, align 1
  br label %14

14:                                               ; preds = %12, %4
  %15 = load %11*, %11** %6, align 8
  %16 = call zeroext i8 @125(%11* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 5
  %19 = xor i1 %18, true
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = call i64 @llvm.expect.i64(i64 %22, i64 1)
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = load %11*, %11** %6, align 8
  %27 = getelementptr inbounds %11, %11* %26, i32 0, i32 0
  %28 = bitcast %12* %27 to double*
  %29 = load double, double* %28, align 8
  %30 = load double*, double** %7, align 8
  store double %29, double* %30, align 8
  br label %47

31:                                               ; preds = %14
  %32 = load i32, i32* %9, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %42

34:                                               ; preds = %31
  %35 = load %11*, %11** %6, align 8
  %36 = call zeroext i8 @125(%11* %35)
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = load i8*, i8** %8, align 8
  store i8 1, i8* %40, align 1
  %41 = load double*, double** %7, align 8
  store double 0.000000e+00, double* %41, align 8
  br label %46

42:                                               ; preds = %34, %31
  %43 = load %11*, %11** %6, align 8
  %44 = load double*, double** %7, align 8
  %45 = call i32 @zend_parse_arg_double_slow(%11* %43, double* %44)
  store i32 %45, i32* %5, align 4
  br label %48

46:                                               ; preds = %39
  br label %47

47:                                               ; preds = %46, %25
  store i32 1, i32* %5, align 4
  br label %48

48:                                               ; preds = %47, %42
  %49 = load i32, i32* %5, align 4
  ret i32 %49
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @168(%11* %0, i8** %1, i64* %2, i32 %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca %11*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %10*, align 8
  %11 = alloca i32, align 4
  store %11* %0, %11** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  %12 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = load %11*, %11** %6, align 8
  %14 = load i32, i32* %9, align 4
  %15 = call i32 @171(%11* %13, %10** %10, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

18:                                               ; preds = %4
  %19 = load i32, i32* %9, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = load %10*, %10** %10, align 8
  %23 = icmp ne %10* %22, null
  %24 = xor i1 %23, true
  %25 = xor i1 %24, true
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = call i64 @llvm.expect.i64(i64 %28, i64 0)
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %21
  %32 = load i8**, i8*** %7, align 8
  store i8* null, i8** %32, align 8
  %33 = load i64*, i64** %8, align 8
  store i64 0, i64* %33, align 8
  br label %43

34:                                               ; preds = %21, %18
  %35 = load %10*, %10** %10, align 8
  %36 = getelementptr inbounds %10, %10* %35, i32 0, i32 3
  %37 = getelementptr inbounds [1 x i8], [1 x i8]* %36, i32 0, i32 0
  %38 = load i8**, i8*** %7, align 8
  store i8* %37, i8** %38, align 8
  %39 = load %10*, %10** %10, align 8
  %40 = getelementptr inbounds %10, %10* %39, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = load i64*, i64** %8, align 8
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %34, %31
  store i32 1, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

44:                                               ; preds = %43, %17
  %45 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #2
  %46 = load i32, i32* %5, align 4
  ret i32 %46
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @169(%11* %0, i8** %1, i64* %2, i32 %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca %11*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %10*, align 8
  %11 = alloca i32, align 4
  store %11* %0, %11** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  %12 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #2
  %13 = load %11*, %11** %6, align 8
  %14 = load i32, i32* %9, align 4
  %15 = call i32 @170(%11* %13, %10** %10, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

18:                                               ; preds = %4
  %19 = load i32, i32* %9, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = load %10*, %10** %10, align 8
  %23 = icmp ne %10* %22, null
  %24 = xor i1 %23, true
  %25 = xor i1 %24, true
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = call i64 @llvm.expect.i64(i64 %28, i64 0)
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %21
  %32 = load i8**, i8*** %7, align 8
  store i8* null, i8** %32, align 8
  %33 = load i64*, i64** %8, align 8
  store i64 0, i64* %33, align 8
  br label %43

34:                                               ; preds = %21, %18
  %35 = load %10*, %10** %10, align 8
  %36 = getelementptr inbounds %10, %10* %35, i32 0, i32 3
  %37 = getelementptr inbounds [1 x i8], [1 x i8]* %36, i32 0, i32 0
  %38 = load i8**, i8*** %7, align 8
  store i8* %37, i8** %38, align 8
  %39 = load %10*, %10** %10, align 8
  %40 = getelementptr inbounds %10, %10* %39, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = load i64*, i64** %8, align 8
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %34, %31
  store i32 1, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

44:                                               ; preds = %43, %17
  %45 = bitcast %10** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #2
  %46 = load i32, i32* %5, align 4
  ret i32 %46
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @170(%11* %0, %10** %1, i32 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca %10**, align 8
  %7 = alloca i32, align 4
  store %11* %0, %11** %5, align 8
  store %10** %1, %10*** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %11*, %11** %5, align 8
  %9 = load %10**, %10*** %6, align 8
  %10 = load i32, i32* %7, align 4
  %11 = call i32 @171(%11* %8, %10** %9, i32 %10)
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = load %10**, %10*** %6, align 8
  %15 = load %10*, %10** %14, align 8
  %16 = icmp ne %10* %15, null
  br i1 %16, label %17, label %35

17:                                               ; preds = %13
  %18 = load %10**, %10*** %6, align 8
  %19 = load %10*, %10** %18, align 8
  %20 = getelementptr inbounds %10, %10* %19, i32 0, i32 3
  %21 = getelementptr inbounds [1 x i8], [1 x i8]* %20, i32 0, i32 0
  %22 = call i64 @strlen(i8* %21) #20
  %23 = load %10**, %10*** %6, align 8
  %24 = load %10*, %10** %23, align 8
  %25 = getelementptr inbounds %10, %10* %24, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = icmp ne i64 %22, %26
  %28 = xor i1 %27, true
  %29 = xor i1 %28, true
  %30 = zext i1 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = call i64 @llvm.expect.i64(i64 %31, i64 0)
  %33 = icmp ne i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %17, %3
  store i32 0, i32* %4, align 4
  br label %36

35:                                               ; preds = %17, %13
  store i32 1, i32* %4, align 4
  br label %36

36:                                               ; preds = %35, %34
  %37 = load i32, i32* %4, align 4
  ret i32 %37
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @171(%11* %0, %10** %1, i32 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca %10**, align 8
  %7 = alloca i32, align 4
  store %11* %0, %11** %5, align 8
  store %10** %1, %10*** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %11*, %11** %5, align 8
  %9 = call zeroext i8 @125(%11* %8)
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 6
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = call i64 @llvm.expect.i64(i64 %15, i64 1)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %3
  %19 = load %11*, %11** %5, align 8
  %20 = getelementptr inbounds %11, %11* %19, i32 0, i32 0
  %21 = bitcast %12* %20 to %10**
  %22 = load %10*, %10** %21, align 8
  %23 = load %10**, %10*** %6, align 8
  store %10* %22, %10** %23, align 8
  br label %39

24:                                               ; preds = %3
  %25 = load i32, i32* %7, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = load %11*, %11** %5, align 8
  %29 = call zeroext i8 @125(%11* %28)
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = load %10**, %10*** %6, align 8
  store %10* null, %10** %33, align 8
  br label %38

34:                                               ; preds = %27, %24
  %35 = load %11*, %11** %5, align 8
  %36 = load %10**, %10*** %6, align 8
  %37 = call i32 @zend_parse_arg_str_slow(%11* %35, %10** %36)
  store i32 %37, i32* %4, align 4
  br label %40

38:                                               ; preds = %32
  br label %39

39:                                               ; preds = %38, %18
  store i32 1, i32* %4, align 4
  br label %40

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %4, align 4
  ret i32 %41
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @172(%11* %0, i8* %1, i8* %2, i32 %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca %11*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %11* %0, %11** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = load i8*, i8** %8, align 8
  store i8 0, i8* %13, align 1
  br label %14

14:                                               ; preds = %12, %4
  %15 = load %11*, %11** %6, align 8
  %16 = call zeroext i8 @125(%11* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 3
  %19 = xor i1 %18, true
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = call i64 @llvm.expect.i64(i64 %22, i64 1)
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %14
  %26 = load i8*, i8** %7, align 8
  store i8 1, i8* %26, align 1
  br label %57

27:                                               ; preds = %14
  %28 = load %11*, %11** %6, align 8
  %29 = call zeroext i8 @125(%11* %28)
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 2
  %32 = xor i1 %31, true
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = sext i32 %34 to i64
  %36 = call i64 @llvm.expect.i64(i64 %35, i64 1)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = load i8*, i8** %7, align 8
  store i8 0, i8* %39, align 1
  br label %56

40:                                               ; preds = %27
  %41 = load i32, i32* %9, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %40
  %44 = load %11*, %11** %6, align 8
  %45 = call zeroext i8 @125(%11* %44)
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = load i8*, i8** %8, align 8
  store i8 1, i8* %49, align 1
  %50 = load i8*, i8** %7, align 8
  store i8 0, i8* %50, align 1
  br label %55

51:                                               ; preds = %43, %40
  %52 = load %11*, %11** %6, align 8
  %53 = load i8*, i8** %7, align 8
  %54 = call i32 @zend_parse_arg_bool_slow(%11* %52, i8* %53)
  store i32 %54, i32* %5, align 4
  br label %58

55:                                               ; preds = %48
  br label %56

56:                                               ; preds = %55, %38
  br label %57

57:                                               ; preds = %56, %25
  store i32 1, i32* %5, align 4
  br label %58

58:                                               ; preds = %57, %51
  %59 = load i32, i32* %5, align 4
  ret i32 %59
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @173(%11* %0, %11** %1, i32 %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca %11*, align 8
  %6 = alloca %11**, align 8
  %7 = alloca i32, align 4
  store %11* %0, %11** %5, align 8
  store %11** %1, %11*** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %11*, %11** %5, align 8
  %9 = call zeroext i8 @125(%11* %8)
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 9
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = call i64 @llvm.expect.i64(i64 %15, i64 1)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %3
  %19 = load %11*, %11** %5, align 8
  %20 = load %11**, %11*** %6, align 8
  store %11* %19, %11** %20, align 8
  br label %39

21:                                               ; preds = %3
  %22 = load i32, i32* %7, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = load %11*, %11** %5, align 8
  %26 = call zeroext i8 @125(%11* %25)
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 1
  %29 = xor i1 %28, true
  %30 = xor i1 %29, true
  %31 = zext i1 %30 to i32
  %32 = sext i32 %31 to i64
  %33 = call i64 @llvm.expect.i64(i64 %32, i64 1)
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %24
  %36 = load %11**, %11*** %6, align 8
  store %11* null, %11** %36, align 8
  br label %38

37:                                               ; preds = %24, %21
  store i32 0, i32* %4, align 4
  br label %40

38:                                               ; preds = %35
  br label %39

39:                                               ; preds = %38, %18
  store i32 1, i32* %4, align 4
  br label %40

40:                                               ; preds = %39, %37
  %41 = load i32, i32* %4, align 4
  ret i32 %41
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @174(%11* %0, %11** %1, i32 %2, i32 %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca %11*, align 8
  %7 = alloca %11**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %11* %0, %11** %6, align 8
  store %11** %1, %11*** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %10 = load %11*, %11** %6, align 8
  %11 = call zeroext i8 @125(%11* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 7
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = call i64 @llvm.expect.i64(i64 %17, i64 1)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %4
  %21 = load i32, i32* %9, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %37

23:                                               ; preds = %20
  %24 = load %11*, %11** %6, align 8
  %25 = call zeroext i8 @125(%11* %24)
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 8
  %28 = xor i1 %27, true
  %29 = xor i1 %28, true
  %30 = zext i1 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = call i64 @llvm.expect.i64(i64 %31, i64 1)
  %33 = icmp ne i64 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %23, %4
  %35 = load %11*, %11** %6, align 8
  %36 = load %11**, %11*** %7, align 8
  store %11* %35, %11** %36, align 8
  br label %55

37:                                               ; preds = %23, %20
  %38 = load i32, i32* %8, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %53

40:                                               ; preds = %37
  %41 = load %11*, %11** %6, align 8
  %42 = call zeroext i8 @125(%11* %41)
  %43 = zext i8 %42 to i32
  %44 = icmp eq i32 %43, 1
  %45 = xor i1 %44, true
  %46 = xor i1 %45, true
  %47 = zext i1 %46 to i32
  %48 = sext i32 %47 to i64
  %49 = call i64 @llvm.expect.i64(i64 %48, i64 1)
  %50 = icmp ne i64 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %40
  %52 = load %11**, %11*** %7, align 8
  store %11* null, %11** %52, align 8
  br label %54

53:                                               ; preds = %40, %37
  store i32 0, i32* %5, align 4
  br label %56

54:                                               ; preds = %51
  br label %55

55:                                               ; preds = %54, %34
  store i32 1, i32* %5, align 4
  br label %56

56:                                               ; preds = %55, %53
  %57 = load i32, i32* %5, align 4
  ret i32 %57
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @175(%11* %0, %5** %1, i32 %2, i32 %3, i32 %4) #3 {
  %6 = alloca i32, align 4
  %7 = alloca %11*, align 8
  %8 = alloca %5**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %11* %0, %11** %7, align 8
  store %5** %1, %5*** %8, align 8
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %12 = load %11*, %11** %7, align 8
  %13 = call zeroext i8 @125(%11* %12)
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, 7
  %16 = xor i1 %15, true
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 1)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %5
  %23 = load %11*, %11** %7, align 8
  %24 = getelementptr inbounds %11, %11* %23, i32 0, i32 0
  %25 = bitcast %12* %24 to %5**
  %26 = load %5*, %5** %25, align 8
  %27 = load %5**, %5*** %8, align 8
  store %5* %26, %5** %27, align 8
  br label %147

28:                                               ; preds = %5
  %29 = load i32, i32* %10, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %128

31:                                               ; preds = %28
  %32 = load %11*, %11** %7, align 8
  %33 = call zeroext i8 @125(%11* %32)
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 %34, 8
  %36 = xor i1 %35, true
  %37 = xor i1 %36, true
  %38 = zext i1 %37 to i32
  %39 = sext i32 %38 to i64
  %40 = call i64 @llvm.expect.i64(i64 %39, i64 1)
  %41 = icmp ne i64 %40, 0
  br i1 %41, label %42, label %128

42:                                               ; preds = %31
  %43 = load i32, i32* %11, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %116

45:                                               ; preds = %42
  %46 = load %11*, %11** %7, align 8
  %47 = getelementptr inbounds %11, %11* %46, i32 0, i32 0
  %48 = bitcast %12* %47 to %20**
  %49 = load %20*, %20** %48, align 8
  %50 = getelementptr inbounds %20, %20* %49, i32 0, i32 4
  %51 = load %5*, %5** %50, align 8
  %52 = icmp ne %5* %51, null
  br i1 %52, label %53, label %116

53:                                               ; preds = %45
  %54 = load %11*, %11** %7, align 8
  %55 = getelementptr inbounds %11, %11* %54, i32 0, i32 0
  %56 = bitcast %12* %55 to %20**
  %57 = load %20*, %20** %56, align 8
  %58 = getelementptr inbounds %20, %20* %57, i32 0, i32 4
  %59 = load %5*, %5** %58, align 8
  %60 = getelementptr inbounds %5, %5* %59, i32 0, i32 0
  %61 = getelementptr inbounds %6, %6* %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp ugt i32 %62, 1
  %64 = xor i1 %63, true
  %65 = xor i1 %64, true
  %66 = zext i1 %65 to i32
  %67 = sext i32 %66 to i64
  %68 = call i64 @llvm.expect.i64(i64 %67, i64 0)
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %70, label %116

70:                                               ; preds = %53
  %71 = load %11*, %11** %7, align 8
  %72 = getelementptr inbounds %11, %11* %71, i32 0, i32 0
  %73 = bitcast %12* %72 to %20**
  %74 = load %20*, %20** %73, align 8
  %75 = getelementptr inbounds %20, %20* %74, i32 0, i32 4
  %76 = load %5*, %5** %75, align 8
  %77 = getelementptr inbounds %5, %5* %76, i32 0, i32 0
  %78 = getelementptr inbounds %6, %6* %77, i32 0, i32 1
  %79 = bitcast %7* %78 to %63*
  %80 = getelementptr inbounds %63, %63* %79, i32 0, i32 1
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = and i32 %82, 2
  %84 = icmp ne i32 %83, 0
  %85 = xor i1 %84, true
  %86 = xor i1 %85, true
  %87 = xor i1 %86, true
  %88 = zext i1 %87 to i32
  %89 = sext i32 %88 to i64
  %90 = call i64 @llvm.expect.i64(i64 %89, i64 1)
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %92, label %103

92:                                               ; preds = %70
  %93 = load %11*, %11** %7, align 8
  %94 = getelementptr inbounds %11, %11* %93, i32 0, i32 0
  %95 = bitcast %12* %94 to %20**
  %96 = load %20*, %20** %95, align 8
  %97 = getelementptr inbounds %20, %20* %96, i32 0, i32 4
  %98 = load %5*, %5** %97, align 8
  %99 = getelementptr inbounds %5, %5* %98, i32 0, i32 0
  %100 = getelementptr inbounds %6, %6* %99, i32 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %101, -1
  store i32 %102, i32* %100, align 8
  br label %103

103:                                              ; preds = %92, %70
  %104 = load %11*, %11** %7, align 8
  %105 = getelementptr inbounds %11, %11* %104, i32 0, i32 0
  %106 = bitcast %12* %105 to %20**
  %107 = load %20*, %20** %106, align 8
  %108 = getelementptr inbounds %20, %20* %107, i32 0, i32 4
  %109 = load %5*, %5** %108, align 8
  %110 = call %5* @zend_array_dup(%5* %109)
  %111 = load %11*, %11** %7, align 8
  %112 = getelementptr inbounds %11, %11* %111, i32 0, i32 0
  %113 = bitcast %12* %112 to %20**
  %114 = load %20*, %20** %113, align 8
  %115 = getelementptr inbounds %20, %20* %114, i32 0, i32 4
  store %5* %110, %5** %115, align 8
  br label %116

116:                                              ; preds = %103, %53, %45, %42
  %117 = load %11*, %11** %7, align 8
  %118 = getelementptr inbounds %11, %11* %117, i32 0, i32 0
  %119 = bitcast %12* %118 to %20**
  %120 = load %20*, %20** %119, align 8
  %121 = getelementptr inbounds %20, %20* %120, i32 0, i32 3
  %122 = load %21*, %21** %121, align 8
  %123 = getelementptr inbounds %21, %21* %122, i32 0, i32 15
  %124 = load %5* (%11*)*, %5* (%11*)** %123, align 8
  %125 = load %11*, %11** %7, align 8
  %126 = call %5* %124(%11* %125)
  %127 = load %5**, %5*** %8, align 8
  store %5* %126, %5** %127, align 8
  br label %146

128:                                              ; preds = %31, %28
  %129 = load i32, i32* %9, align 4
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %144

131:                                              ; preds = %128
  %132 = load %11*, %11** %7, align 8
  %133 = call zeroext i8 @125(%11* %132)
  %134 = zext i8 %133 to i32
  %135 = icmp eq i32 %134, 1
  %136 = xor i1 %135, true
  %137 = xor i1 %136, true
  %138 = zext i1 %137 to i32
  %139 = sext i32 %138 to i64
  %140 = call i64 @llvm.expect.i64(i64 %139, i64 1)
  %141 = icmp ne i64 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %131
  %143 = load %5**, %5*** %8, align 8
  store %5* null, %5** %143, align 8
  br label %145

144:                                              ; preds = %131, %128
  store i32 0, i32* %6, align 4
  br label %148

145:                                              ; preds = %142
  br label %146

146:                                              ; preds = %145, %116
  br label %147

147:                                              ; preds = %146, %22
  store i32 1, i32* %6, align 4
  br label %148

148:                                              ; preds = %147, %144
  %149 = load i32, i32* %6, align 4
  ret i32 %149
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @176(%11* %0, %11** %1, %16* %2, i32 %3) #3 {
  %5 = alloca i32, align 4
  %6 = alloca %11*, align 8
  %7 = alloca %11**, align 8
  %8 = alloca %16*, align 8
  %9 = alloca i32, align 4
  store %11* %0, %11** %6, align 8
  store %11** %1, %11*** %7, align 8
  store %16* %2, %16** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load %11*, %11** %6, align 8
  %11 = call zeroext i8 @125(%11* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 8
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = call i64 @llvm.expect.i64(i64 %17, i64 1)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %4
  %21 = load %16*, %16** %8, align 8
  %22 = icmp ne %16* %21, null
  br i1 %22, label %23, label %40

23:                                               ; preds = %20
  %24 = load %11*, %11** %6, align 8
  %25 = getelementptr inbounds %11, %11* %24, i32 0, i32 0
  %26 = bitcast %12* %25 to %20**
  %27 = load %20*, %20** %26, align 8
  %28 = getelementptr inbounds %20, %20* %27, i32 0, i32 2
  %29 = load %16*, %16** %28, align 8
  %30 = load %16*, %16** %8, align 8
  %31 = call zeroext i8 @instanceof_function(%16* %29, %16* %30)
  %32 = zext i8 %31 to i32
  %33 = icmp ne i32 %32, 0
  %34 = xor i1 %33, true
  %35 = xor i1 %34, true
  %36 = zext i1 %35 to i32
  %37 = sext i32 %36 to i64
  %38 = call i64 @llvm.expect.i64(i64 %37, i64 1)
  %39 = icmp ne i64 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %23, %20
  %41 = load %11*, %11** %6, align 8
  %42 = load %11**, %11*** %7, align 8
  store %11* %41, %11** %42, align 8
  br label %61

43:                                               ; preds = %23, %4
  %44 = load i32, i32* %9, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %59

46:                                               ; preds = %43
  %47 = load %11*, %11** %6, align 8
  %48 = call zeroext i8 @125(%11* %47)
  %49 = zext i8 %48 to i32
  %50 = icmp eq i32 %49, 1
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 1)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %46
  %58 = load %11**, %11*** %7, align 8
  store %11* null, %11** %58, align 8
  br label %60

59:                                               ; preds = %46, %43
  store i32 0, i32* %5, align 4
  br label %62

60:                                               ; preds = %57
  br label %61

61:                                               ; preds = %60, %40
  store i32 1, i32* %5, align 4
  br label %62

62:                                               ; preds = %61, %59
  %63 = load i32, i32* %5, align 4
  ret i32 %63
}

declare dso_local i64 @zend_spprintf(i8**, i64, i8*, ...) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal void @177(%11* %0, %11** %1, i32 %2) #3 {
  %4 = alloca %11*, align 8
  %5 = alloca %11**, align 8
  %6 = alloca i32, align 4
  store %11* %0, %11** %4, align 8
  store %11** %1, %11*** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %3
  %10 = load %11*, %11** %4, align 8
  %11 = call zeroext i8 @125(%11* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 1
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = call i64 @llvm.expect.i64(i64 %17, i64 0)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %9
  br label %23

21:                                               ; preds = %9, %3
  %22 = load %11*, %11** %4, align 8
  br label %23

23:                                               ; preds = %21, %20
  %24 = phi %11* [ null, %20 ], [ %22, %21 ]
  %25 = load %11**, %11*** %5, align 8
  store %11* %24, %11** %25, align 8
  ret void
}

declare dso_local %5* @zend_array_dup(%5*) #4

; Function Attrs: nounwind uwtable
define internal void @178(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %37*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %5 = bitcast %37** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #2
  %6 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %7 = getelementptr inbounds %4, %4* %6, i32 0, i32 3
  %8 = load %37*, %37** %7, align 8
  store %37* %8, %37** %3, align 8
  %9 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  %10 = load %37*, %37** %3, align 8
  %11 = bitcast %37* %10 to %60*
  %12 = getelementptr inbounds %60, %60* %11, i32 0, i32 4
  %13 = load %16*, %16** %12, align 8
  %14 = icmp ne %16* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %1
  %16 = load %37*, %37** %3, align 8
  %17 = bitcast %37* %16 to %60*
  %18 = getelementptr inbounds %60, %60* %17, i32 0, i32 4
  %19 = load %16*, %16** %18, align 8
  %20 = getelementptr inbounds %16, %16* %19, i32 0, i32 1
  %21 = load %10*, %10** %20, align 8
  %22 = getelementptr inbounds %10, %10* %21, i32 0, i32 3
  %23 = getelementptr inbounds [1 x i8], [1 x i8]* %22, i32 0, i32 0
  br label %25

24:                                               ; preds = %1
  br label %25

25:                                               ; preds = %24, %15
  %26 = phi i8* [ %23, %15 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0), %24 ]
  store i8* %26, i8** %4, align 8
  %27 = load i8*, i8** %4, align 8
  %28 = load i8*, i8** %4, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 0
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @13, i32 0, i32 0)
  %35 = load %37*, %37** %3, align 8
  %36 = bitcast %37* %35 to %60*
  %37 = getelementptr inbounds %60, %60* %36, i32 0, i32 3
  %38 = load %10*, %10** %37, align 8
  %39 = getelementptr inbounds %10, %10* %38, i32 0, i32 3
  %40 = getelementptr inbounds [1 x i8], [1 x i8]* %39, i32 0, i32 0
  %41 = load i8*, i8** %2, align 8
  call void (i32, i8*, ...) @zend_error_noreturn(i32 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @101, i32 0, i32 0), i8* %27, i8* %34, i8* %40, i8* %41) #18
  unreachable

42:                                               ; No predecessors!
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @179(i8* %0, i64 %1, i64* %2) #3 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  %10 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #2
  %11 = load i8*, i8** %5, align 8
  store i8* %11, i8** %8, align 8
  %12 = load i8*, i8** %8, align 8
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = icmp sgt i32 %14, 57
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %48

17:                                               ; preds = %3
  %18 = load i8*, i8** %8, align 8
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  %21 = icmp slt i32 %20, 48
  br i1 %21, label %22, label %42

22:                                               ; preds = %17
  %23 = load i8*, i8** %8, align 8
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp ne i32 %25, 45
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %48

28:                                               ; preds = %22
  %29 = load i8*, i8** %8, align 8
  %30 = getelementptr inbounds i8, i8* %29, i32 1
  store i8* %30, i8** %8, align 8
  %31 = load i8*, i8** %8, align 8
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp sgt i32 %33, 57
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = load i8*, i8** %8, align 8
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp slt i32 %38, 48
  br i1 %39, label %40, label %41

40:                                               ; preds = %35, %28
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %48

41:                                               ; preds = %35
  br label %42

42:                                               ; preds = %41, %17
  br label %43

43:                                               ; preds = %42
  %44 = load i8*, i8** %5, align 8
  %45 = load i64, i64* %6, align 8
  %46 = load i64*, i64** %7, align 8
  %47 = call i32 @_zend_handle_numeric_str_ex(i8* %44, i64 %45, i64* %46)
  store i32 %47, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %48

48:                                               ; preds = %43, %40, %27, %16
  %49 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #2
  %50 = load i32, i32* %4, align 4
  ret i32 %50
}

declare dso_local i32 @_zend_handle_numeric_str_ex(i8*, i64, i64*) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal void @180(%10* %0) #3 {
  %2 = alloca %10*, align 8
  store %10* %0, %10** %2, align 8
  %3 = load %10*, %10** %2, align 8
  %4 = getelementptr inbounds %10, %10* %3, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

declare dso_local %11* @zend_hash_find(%5*, %10*) #4

declare dso_local %11* @_zend_hash_add(%5*, %10*, %11*) #4

declare dso_local %11* @zend_hash_str_find(%5*, i8*, i64) #4

declare dso_local void @zend_hash_apply_with_argument(%5*, i32 (%11*, i8*)*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @181(%11* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %11*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %16*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %11* %0, %11** %4, align 8
  store i8* %1, i8** %5, align 8
  %9 = bitcast %16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #2
  %10 = load %11*, %11** %4, align 8
  %11 = getelementptr inbounds %11, %11* %10, i32 0, i32 0
  %12 = bitcast %12* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast i8* %13 to %16*
  store %16* %14, %16** %6, align 8
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #2
  %16 = load i8*, i8** %5, align 8
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %7, align 4
  %19 = load %16*, %16** %6, align 8
  %20 = getelementptr inbounds %16, %16* %19, i32 0, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %35

24:                                               ; preds = %2
  %25 = load %16*, %16** %6, align 8
  %26 = getelementptr inbounds %16, %16* %25, i32 0, i32 39
  %27 = bitcast %28* %26 to %69*
  %28 = getelementptr inbounds %69, %69* %27, i32 0, i32 1
  %29 = load %32*, %32** %28, align 8
  %30 = getelementptr inbounds %32, %32* %29, i32 0, i32 22
  %31 = load i32, i32* %30, align 8
  %32 = load i32, i32* %7, align 4
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %24
  store i32 1, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %36

35:                                               ; preds = %24, %2
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %36

36:                                               ; preds = %35, %34
  %37 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %37) #2
  %38 = bitcast %16** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #2
  %39 = load i32, i32* %3, align 4
  ret i32 %39
}

declare dso_local void @zend_initialize_class_data(%16*, i8 zeroext) #4

declare dso_local %11* @zend_hash_index_find(%5*, i64) #4

declare dso_local %10* @_zval_get_string_func(%11*) #4

; Function Attrs: nounwind uwtable
define internal i32 @182(i32 %0, %11* %1, %70* %2, i32 %3, i8** %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %11*, align 8
  %9 = alloca %70*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca %16*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %10*, align 8
  %15 = alloca %10*, align 8
  %16 = alloca %10*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %5*, align 8
  %20 = alloca i32, align 4
  %21 = alloca %16*, align 8
  %22 = alloca i8, align 1
  %23 = alloca %10*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i64, align 8
  %26 = alloca %37*, align 8
  %27 = alloca %20*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i8*, align 8
  store i32 %0, i32* %7, align 4
  store %11* %1, %11** %8, align 8
  store %70* %2, %70** %9, align 8
  store i32 %3, i32* %10, align 4
  store i8** %4, i8*** %11, align 8
  %30 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #2
  %31 = load %70*, %70** %9, align 8
  %32 = getelementptr inbounds %70, %70* %31, i32 0, i32 2
  %33 = load %16*, %16** %32, align 8
  store %16* %33, %16** %12, align 8
  %34 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #2
  store i32 0, i32* %13, align 4
  %35 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #2
  %36 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #2
  %37 = bitcast %10** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #2
  %38 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #2
  %39 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #2
  %40 = bitcast %5** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #2
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #2
  store i32 0, i32* %20, align 4
  %42 = bitcast %16** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #2
  %43 = load i8**, i8*** %11, align 8
  %44 = icmp ne i8** %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %5
  %46 = load i8**, i8*** %11, align 8
  store i8* null, i8** %46, align 8
  br label %47

47:                                               ; preds = %45, %5
  %48 = load %70*, %70** %9, align 8
  %49 = getelementptr inbounds %70, %70* %48, i32 0, i32 2
  store %16* null, %16** %49, align 8
  %50 = load %70*, %70** %9, align 8
  %51 = getelementptr inbounds %70, %70* %50, i32 0, i32 1
  store %37* null, %37** %51, align 8
  %52 = load %16*, %16** %12, align 8
  %53 = icmp ne %16* %52, null
  br i1 %53, label %379, label %54

54:                                               ; preds = %47
  %55 = bitcast %10** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #2
  %56 = load %11*, %11** %8, align 8
  %57 = getelementptr inbounds %11, %11* %56, i32 0, i32 0
  %58 = bitcast %12* %57 to %10**
  %59 = load %10*, %10** %58, align 8
  %60 = getelementptr inbounds %10, %10* %59, i32 0, i32 3
  %61 = getelementptr inbounds [1 x i8], [1 x i8]* %60, i64 0, i64 0
  %62 = load i8, i8* %61, align 8
  %63 = sext i8 %62 to i32
  %64 = icmp eq i32 %63, 92
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %171

71:                                               ; preds = %54
  br label %72

72:                                               ; preds = %71
  br label %73

73:                                               ; preds = %72
  %74 = load %11*, %11** %8, align 8
  %75 = getelementptr inbounds %11, %11* %74, i32 0, i32 0
  %76 = bitcast %12* %75 to %10**
  %77 = load %10*, %10** %76, align 8
  %78 = getelementptr inbounds %10, %10* %77, i32 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %79
  %81 = sub i64 %80, 1
  %82 = add i64 %81, 1
  %83 = add i64 %82, 7
  %84 = and i64 %83, -8
  %85 = icmp ugt i64 %84, 32768
  %86 = xor i1 %85, true
  %87 = xor i1 %86, true
  %88 = zext i1 %87 to i32
  %89 = sext i32 %88 to i64
  %90 = call i64 @llvm.expect.i64(i64 %89, i64 0)
  %91 = trunc i64 %90 to i8
  store i8 %91, i8* %22, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %107

94:                                               ; preds = %73
  %95 = load %11*, %11** %8, align 8
  %96 = getelementptr inbounds %11, %11* %95, i32 0, i32 0
  %97 = bitcast %12* %96 to %10**
  %98 = load %10*, %10** %97, align 8
  %99 = getelementptr inbounds %10, %10* %98, i32 0, i32 2
  %100 = load i64, i64* %99, align 8
  %101 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %100
  %102 = sub i64 %101, 1
  %103 = add i64 %102, 1
  %104 = add i64 %103, 7
  %105 = and i64 %104, -8
  %106 = call noalias i8* @_emalloc(i64 %105) #19
  br label %120

107:                                              ; preds = %73
  %108 = load %11*, %11** %8, align 8
  %109 = getelementptr inbounds %11, %11* %108, i32 0, i32 0
  %110 = bitcast %12* %109 to %10**
  %111 = load %10*, %10** %110, align 8
  %112 = getelementptr inbounds %10, %10* %111, i32 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %113
  %115 = sub i64 %114, 1
  %116 = add i64 %115, 1
  %117 = add i64 %116, 7
  %118 = and i64 %117, -8
  %119 = alloca i8, i64 %118, align 16
  br label %120

120:                                              ; preds = %107, %94
  %121 = phi i8* [ %106, %94 ], [ %119, %107 ]
  %122 = bitcast i8* %121 to %10*
  store %10* %122, %10** %23, align 8
  %123 = load %10*, %10** %23, align 8
  %124 = getelementptr inbounds %10, %10* %123, i32 0, i32 0
  %125 = getelementptr inbounds %6, %6* %124, i32 0, i32 0
  store i32 1, i32* %125, align 8
  %126 = load %10*, %10** %23, align 8
  %127 = getelementptr inbounds %10, %10* %126, i32 0, i32 0
  %128 = getelementptr inbounds %6, %6* %127, i32 0, i32 1
  %129 = bitcast %7* %128 to i32*
  store i32 6, i32* %129, align 4
  %130 = load %10*, %10** %23, align 8
  call void @180(%10* %130)
  %131 = load %11*, %11** %8, align 8
  %132 = getelementptr inbounds %11, %11* %131, i32 0, i32 0
  %133 = bitcast %12* %132 to %10**
  %134 = load %10*, %10** %133, align 8
  %135 = getelementptr inbounds %10, %10* %134, i32 0, i32 2
  %136 = load i64, i64* %135, align 8
  %137 = sub i64 %136, 1
  %138 = load %10*, %10** %23, align 8
  %139 = getelementptr inbounds %10, %10* %138, i32 0, i32 2
  store i64 %137, i64* %139, align 8
  br label %140

140:                                              ; preds = %120
  br label %141

141:                                              ; preds = %140
  %142 = load %10*, %10** %23, align 8
  %143 = getelementptr inbounds %10, %10* %142, i32 0, i32 3
  %144 = getelementptr inbounds [1 x i8], [1 x i8]* %143, i32 0, i32 0
  %145 = load %11*, %11** %8, align 8
  %146 = getelementptr inbounds %11, %11* %145, i32 0, i32 0
  %147 = bitcast %12* %146 to %10**
  %148 = load %10*, %10** %147, align 8
  %149 = getelementptr inbounds %10, %10* %148, i32 0, i32 3
  %150 = getelementptr inbounds [1 x i8], [1 x i8]* %149, i32 0, i32 0
  %151 = getelementptr inbounds i8, i8* %150, i64 1
  %152 = load %11*, %11** %8, align 8
  %153 = getelementptr inbounds %11, %11* %152, i32 0, i32 0
  %154 = bitcast %12* %153 to %10**
  %155 = load %10*, %10** %154, align 8
  %156 = getelementptr inbounds %10, %10* %155, i32 0, i32 2
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %157, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 1 %151, i64 %158, i1 false)
  %159 = load %10*, %10** %23, align 8
  %160 = getelementptr inbounds %10, %10* %159, i32 0, i32 3
  %161 = load %11*, %11** %8, align 8
  %162 = getelementptr inbounds %11, %11* %161, i32 0, i32 0
  %163 = bitcast %12* %162 to %10**
  %164 = load %10*, %10** %163, align 8
  %165 = getelementptr inbounds %10, %10* %164, i32 0, i32 2
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %166, 1
  %168 = getelementptr inbounds [1 x i8], [1 x i8]* %160, i64 0, i64 %167
  store i8 0, i8* %168, align 1
  br label %169

169:                                              ; preds = %141
  br label %170

170:                                              ; preds = %169
  br label %176

171:                                              ; preds = %54
  %172 = load %11*, %11** %8, align 8
  %173 = getelementptr inbounds %11, %11* %172, i32 0, i32 0
  %174 = bitcast %12* %173 to %10**
  %175 = load %10*, %10** %174, align 8
  store %10* %175, %10** %23, align 8
  br label %176

176:                                              ; preds = %171, %170
  %177 = load %5*, %5** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 10), align 8
  %178 = load %10*, %10** %23, align 8
  %179 = call i8* @139(%5* %177, %10* %178)
  %180 = bitcast i8* %179 to %37*
  %181 = load %70*, %70** %9, align 8
  %182 = getelementptr inbounds %70, %70* %181, i32 0, i32 1
  store %37* %180, %37** %182, align 8
  %183 = icmp ne %37* %180, null
  %184 = xor i1 %183, true
  %185 = xor i1 %184, true
  %186 = zext i1 %185 to i32
  %187 = sext i32 %186 to i64
  %188 = call i64 @llvm.expect.i64(i64 %187, i64 1)
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %216

190:                                              ; preds = %176
  %191 = load %10*, %10** %23, align 8
  %192 = load %11*, %11** %8, align 8
  %193 = getelementptr inbounds %11, %11* %192, i32 0, i32 0
  %194 = bitcast %12* %193 to %10**
  %195 = load %10*, %10** %194, align 8
  %196 = icmp ne %10* %191, %195
  br i1 %196, label %197, label %213

197:                                              ; preds = %190
  br label %198

198:                                              ; preds = %197
  %199 = load i8, i8* %22, align 1
  %200 = icmp ne i8 %199, 0
  %201 = xor i1 %200, true
  %202 = xor i1 %201, true
  %203 = zext i1 %202 to i32
  %204 = sext i32 %203 to i64
  %205 = call i64 @llvm.expect.i64(i64 %204, i64 0)
  %206 = icmp ne i64 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %198
  %208 = load %10*, %10** %23, align 8
  %209 = bitcast %10* %208 to i8*
  call void @_efree(i8* %209)
  br label %210

210:                                              ; preds = %207, %198
  br label %211

211:                                              ; preds = %210
  br label %212

212:                                              ; preds = %211
  br label %213

213:                                              ; preds = %212, %190
  %214 = load %70*, %70** %9, align 8
  %215 = getelementptr inbounds %70, %70* %214, i32 0, i32 0
  store i8 1, i8* %215, align 8
  store i32 1, i32* %6, align 4
  store i32 1, i32* %24, align 4
  br label %375

216:                                              ; preds = %176
  %217 = load %10*, %10** %23, align 8
  %218 = load %11*, %11** %8, align 8
  %219 = getelementptr inbounds %11, %11* %218, i32 0, i32 0
  %220 = bitcast %12* %219 to %10**
  %221 = load %10*, %10** %220, align 8
  %222 = icmp eq %10* %217, %221
  br i1 %222, label %223, label %316

223:                                              ; preds = %216
  br label %224

224:                                              ; preds = %223
  br label %225

225:                                              ; preds = %224
  %226 = load %11*, %11** %8, align 8
  %227 = getelementptr inbounds %11, %11* %226, i32 0, i32 0
  %228 = bitcast %12* %227 to %10**
  %229 = load %10*, %10** %228, align 8
  %230 = getelementptr inbounds %10, %10* %229, i32 0, i32 2
  %231 = load i64, i64* %230, align 8
  %232 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %231
  %233 = add i64 %232, 1
  %234 = add i64 %233, 7
  %235 = and i64 %234, -8
  %236 = icmp ugt i64 %235, 32768
  %237 = xor i1 %236, true
  %238 = xor i1 %237, true
  %239 = zext i1 %238 to i32
  %240 = sext i32 %239 to i64
  %241 = call i64 @llvm.expect.i64(i64 %240, i64 0)
  %242 = trunc i64 %241 to i8
  store i8 %242, i8* %22, align 1
  %243 = zext i8 %242 to i32
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %245, label %257

245:                                              ; preds = %225
  %246 = load %11*, %11** %8, align 8
  %247 = getelementptr inbounds %11, %11* %246, i32 0, i32 0
  %248 = bitcast %12* %247 to %10**
  %249 = load %10*, %10** %248, align 8
  %250 = getelementptr inbounds %10, %10* %249, i32 0, i32 2
  %251 = load i64, i64* %250, align 8
  %252 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %251
  %253 = add i64 %252, 1
  %254 = add i64 %253, 7
  %255 = and i64 %254, -8
  %256 = call noalias i8* @_emalloc(i64 %255) #19
  br label %269

257:                                              ; preds = %225
  %258 = load %11*, %11** %8, align 8
  %259 = getelementptr inbounds %11, %11* %258, i32 0, i32 0
  %260 = bitcast %12* %259 to %10**
  %261 = load %10*, %10** %260, align 8
  %262 = getelementptr inbounds %10, %10* %261, i32 0, i32 2
  %263 = load i64, i64* %262, align 8
  %264 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %263
  %265 = add i64 %264, 1
  %266 = add i64 %265, 7
  %267 = and i64 %266, -8
  %268 = alloca i8, i64 %267, align 16
  br label %269

269:                                              ; preds = %257, %245
  %270 = phi i8* [ %256, %245 ], [ %268, %257 ]
  %271 = bitcast i8* %270 to %10*
  store %10* %271, %10** %23, align 8
  %272 = load %10*, %10** %23, align 8
  %273 = getelementptr inbounds %10, %10* %272, i32 0, i32 0
  %274 = getelementptr inbounds %6, %6* %273, i32 0, i32 0
  store i32 1, i32* %274, align 8
  %275 = load %10*, %10** %23, align 8
  %276 = getelementptr inbounds %10, %10* %275, i32 0, i32 0
  %277 = getelementptr inbounds %6, %6* %276, i32 0, i32 1
  %278 = bitcast %7* %277 to i32*
  store i32 6, i32* %278, align 4
  %279 = load %10*, %10** %23, align 8
  call void @180(%10* %279)
  %280 = load %11*, %11** %8, align 8
  %281 = getelementptr inbounds %11, %11* %280, i32 0, i32 0
  %282 = bitcast %12* %281 to %10**
  %283 = load %10*, %10** %282, align 8
  %284 = getelementptr inbounds %10, %10* %283, i32 0, i32 2
  %285 = load i64, i64* %284, align 8
  %286 = load %10*, %10** %23, align 8
  %287 = getelementptr inbounds %10, %10* %286, i32 0, i32 2
  store i64 %285, i64* %287, align 8
  br label %288

288:                                              ; preds = %269
  br label %289

289:                                              ; preds = %288
  %290 = load %10*, %10** %23, align 8
  %291 = getelementptr inbounds %10, %10* %290, i32 0, i32 3
  %292 = getelementptr inbounds [1 x i8], [1 x i8]* %291, i32 0, i32 0
  %293 = load %11*, %11** %8, align 8
  %294 = getelementptr inbounds %11, %11* %293, i32 0, i32 0
  %295 = bitcast %12* %294 to %10**
  %296 = load %10*, %10** %295, align 8
  %297 = getelementptr inbounds %10, %10* %296, i32 0, i32 3
  %298 = getelementptr inbounds [1 x i8], [1 x i8]* %297, i32 0, i32 0
  %299 = load %11*, %11** %8, align 8
  %300 = getelementptr inbounds %11, %11* %299, i32 0, i32 0
  %301 = bitcast %12* %300 to %10**
  %302 = load %10*, %10** %301, align 8
  %303 = getelementptr inbounds %10, %10* %302, i32 0, i32 2
  %304 = load i64, i64* %303, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %292, i8* align 8 %298, i64 %304, i1 false)
  %305 = load %10*, %10** %23, align 8
  %306 = getelementptr inbounds %10, %10* %305, i32 0, i32 3
  %307 = load %11*, %11** %8, align 8
  %308 = getelementptr inbounds %11, %11* %307, i32 0, i32 0
  %309 = bitcast %12* %308 to %10**
  %310 = load %10*, %10** %309, align 8
  %311 = getelementptr inbounds %10, %10* %310, i32 0, i32 2
  %312 = load i64, i64* %311, align 8
  %313 = getelementptr inbounds [1 x i8], [1 x i8]* %306, i64 0, i64 %312
  store i8 0, i8* %313, align 1
  br label %314

314:                                              ; preds = %289
  br label %315

315:                                              ; preds = %314
  br label %318

316:                                              ; preds = %216
  %317 = load %10*, %10** %23, align 8
  call void @180(%10* %317)
  br label %318

318:                                              ; preds = %316, %315
  %319 = load %10*, %10** %23, align 8
  %320 = getelementptr inbounds %10, %10* %319, i32 0, i32 3
  %321 = getelementptr inbounds [1 x i8], [1 x i8]* %320, i32 0, i32 0
  %322 = load %10*, %10** %23, align 8
  %323 = getelementptr inbounds %10, %10* %322, i32 0, i32 2
  %324 = load i64, i64* %323, align 8
  call void @zend_str_tolower(i8* %321, i64 %324)
  %325 = load %5*, %5** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 10), align 8
  %326 = load %10*, %10** %23, align 8
  %327 = call i8* @139(%5* %325, %10* %326)
  %328 = bitcast i8* %327 to %37*
  %329 = load %70*, %70** %9, align 8
  %330 = getelementptr inbounds %70, %70* %329, i32 0, i32 1
  store %37* %328, %37** %330, align 8
  %331 = icmp ne %37* %328, null
  br i1 %331, label %332, label %350

332:                                              ; preds = %318
  br label %333

333:                                              ; preds = %332
  %334 = load i8, i8* %22, align 1
  %335 = icmp ne i8 %334, 0
  %336 = xor i1 %335, true
  %337 = xor i1 %336, true
  %338 = zext i1 %337 to i32
  %339 = sext i32 %338 to i64
  %340 = call i64 @llvm.expect.i64(i64 %339, i64 0)
  %341 = icmp ne i64 %340, 0
  br i1 %341, label %342, label %345

342:                                              ; preds = %333
  %343 = load %10*, %10** %23, align 8
  %344 = bitcast %10* %343 to i8*
  call void @_efree(i8* %344)
  br label %345

345:                                              ; preds = %342, %333
  br label %346

346:                                              ; preds = %345
  br label %347

347:                                              ; preds = %346
  %348 = load %70*, %70** %9, align 8
  %349 = getelementptr inbounds %70, %70* %348, i32 0, i32 0
  store i8 1, i8* %349, align 8
  store i32 1, i32* %6, align 4
  store i32 1, i32* %24, align 4
  br label %375

350:                                              ; preds = %318
  br label %351

351:                                              ; preds = %350
  %352 = load %10*, %10** %23, align 8
  %353 = load %11*, %11** %8, align 8
  %354 = getelementptr inbounds %11, %11* %353, i32 0, i32 0
  %355 = bitcast %12* %354 to %10**
  %356 = load %10*, %10** %355, align 8
  %357 = icmp ne %10* %352, %356
  br i1 %357, label %358, label %374

358:                                              ; preds = %351
  br label %359

359:                                              ; preds = %358
  %360 = load i8, i8* %22, align 1
  %361 = icmp ne i8 %360, 0
  %362 = xor i1 %361, true
  %363 = xor i1 %362, true
  %364 = zext i1 %363 to i32
  %365 = sext i32 %364 to i64
  %366 = call i64 @llvm.expect.i64(i64 %365, i64 0)
  %367 = icmp ne i64 %366, 0
  br i1 %367, label %368, label %371

368:                                              ; preds = %359
  %369 = load %10*, %10** %23, align 8
  %370 = bitcast %10* %369 to i8*
  call void @_efree(i8* %370)
  br label %371

371:                                              ; preds = %368, %359
  br label %372

372:                                              ; preds = %371
  br label %373

373:                                              ; preds = %372
  br label %374

374:                                              ; preds = %373, %351
  store i32 0, i32* %24, align 4
  br label %375

375:                                              ; preds = %374, %347, %213
  %376 = bitcast %10** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %376) #2
  %377 = load i32, i32* %24, align 4
  switch i32 %377, label %1315 [
    i32 0, label %378
  ]

378:                                              ; preds = %375
  br label %379

379:                                              ; preds = %378, %47
  %380 = load %11*, %11** %8, align 8
  %381 = getelementptr inbounds %11, %11* %380, i32 0, i32 0
  %382 = bitcast %12* %381 to %10**
  %383 = load %10*, %10** %382, align 8
  %384 = getelementptr inbounds %10, %10* %383, i32 0, i32 3
  %385 = getelementptr inbounds [1 x i8], [1 x i8]* %384, i32 0, i32 0
  %386 = load %11*, %11** %8, align 8
  %387 = getelementptr inbounds %11, %11* %386, i32 0, i32 0
  %388 = bitcast %12* %387 to %10**
  %389 = load %10*, %10** %388, align 8
  %390 = getelementptr inbounds %10, %10* %389, i32 0, i32 2
  %391 = load i64, i64* %390, align 8
  %392 = call i8* @145(i8* %385, i32 58, i64 %391)
  store i8* %392, i8** %17, align 8
  %393 = icmp ne i8* %392, null
  br i1 %393, label %394, label %521

394:                                              ; preds = %379
  %395 = load i8*, i8** %17, align 8
  %396 = load %11*, %11** %8, align 8
  %397 = getelementptr inbounds %11, %11* %396, i32 0, i32 0
  %398 = bitcast %12* %397 to %10**
  %399 = load %10*, %10** %398, align 8
  %400 = getelementptr inbounds %10, %10* %399, i32 0, i32 3
  %401 = getelementptr inbounds [1 x i8], [1 x i8]* %400, i32 0, i32 0
  %402 = icmp ugt i8* %395, %401
  br i1 %402, label %403, label %521

403:                                              ; preds = %394
  %404 = load i8*, i8** %17, align 8
  %405 = getelementptr inbounds i8, i8* %404, i64 -1
  %406 = load i8, i8* %405, align 1
  %407 = sext i8 %406 to i32
  %408 = icmp eq i32 %407, 58
  br i1 %408, label %409, label %521

409:                                              ; preds = %403
  %410 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %410) #2
  %411 = load i8*, i8** %17, align 8
  %412 = getelementptr inbounds i8, i8* %411, i32 -1
  store i8* %412, i8** %17, align 8
  %413 = load i8*, i8** %17, align 8
  %414 = load %11*, %11** %8, align 8
  %415 = getelementptr inbounds %11, %11* %414, i32 0, i32 0
  %416 = bitcast %12* %415 to %10**
  %417 = load %10*, %10** %416, align 8
  %418 = getelementptr inbounds %10, %10* %417, i32 0, i32 3
  %419 = getelementptr inbounds [1 x i8], [1 x i8]* %418, i32 0, i32 0
  %420 = ptrtoint i8* %413 to i64
  %421 = ptrtoint i8* %419 to i64
  %422 = sub i64 %420, %421
  store i64 %422, i64* %18, align 8
  %423 = load %11*, %11** %8, align 8
  %424 = getelementptr inbounds %11, %11* %423, i32 0, i32 0
  %425 = bitcast %12* %424 to %10**
  %426 = load %10*, %10** %425, align 8
  %427 = getelementptr inbounds %10, %10* %426, i32 0, i32 2
  %428 = load i64, i64* %427, align 8
  %429 = load i64, i64* %18, align 8
  %430 = sub i64 %428, %429
  %431 = sub i64 %430, 2
  store i64 %431, i64* %25, align 8
  %432 = load i8*, i8** %17, align 8
  %433 = load %11*, %11** %8, align 8
  %434 = getelementptr inbounds %11, %11* %433, i32 0, i32 0
  %435 = bitcast %12* %434 to %10**
  %436 = load %10*, %10** %435, align 8
  %437 = getelementptr inbounds %10, %10* %436, i32 0, i32 3
  %438 = getelementptr inbounds [1 x i8], [1 x i8]* %437, i32 0, i32 0
  %439 = icmp eq i8* %432, %438
  br i1 %439, label %440, label %447

440:                                              ; preds = %409
  %441 = load i8**, i8*** %11, align 8
  %442 = icmp ne i8** %441, null
  br i1 %442, label %443, label %446

443:                                              ; preds = %440
  %444 = load i8**, i8*** %11, align 8
  %445 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %444, i64 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @106, i32 0, i32 0))
  br label %446

446:                                              ; preds = %443, %440
  store i32 0, i32* %6, align 4
  store i32 1, i32* %24, align 4
  br label %517

447:                                              ; preds = %409
  %448 = load %16*, %16** %12, align 8
  %449 = icmp ne %16* %448, null
  br i1 %449, label %450, label %452

450:                                              ; preds = %447
  %451 = load %16*, %16** %12, align 8
  store %16* %451, %16** %21, align 8
  br label %454

452:                                              ; preds = %447
  %453 = call %16* @zend_get_executed_scope()
  store %16* %453, %16** %21, align 8
  br label %454

454:                                              ; preds = %452, %450
  %455 = load %11*, %11** %8, align 8
  %456 = getelementptr inbounds %11, %11* %455, i32 0, i32 0
  %457 = bitcast %12* %456 to %10**
  %458 = load %10*, %10** %457, align 8
  %459 = getelementptr inbounds %10, %10* %458, i32 0, i32 3
  %460 = getelementptr inbounds [1 x i8], [1 x i8]* %459, i32 0, i32 0
  %461 = load i64, i64* %18, align 8
  %462 = call %10* @134(i8* %460, i64 %461, i32 0)
  store %10* %462, %10** %15, align 8
  %463 = load %10*, %10** %15, align 8
  %464 = load %16*, %16** %21, align 8
  %465 = load %70*, %70** %9, align 8
  %466 = load i8**, i8*** %11, align 8
  %467 = call i32 @183(%10* %463, %16* %464, %70* %465, i32* %10, i8** %466)
  %468 = icmp ne i32 %467, 0
  br i1 %468, label %471, label %469

469:                                              ; preds = %454
  %470 = load %10*, %10** %15, align 8
  call void @135(%10* %470)
  store i32 0, i32* %6, align 4
  store i32 1, i32* %24, align 4
  br label %517

471:                                              ; preds = %454
  %472 = load %10*, %10** %15, align 8
  call void @135(%10* %472)
  %473 = load %70*, %70** %9, align 8
  %474 = getelementptr inbounds %70, %70* %473, i32 0, i32 2
  %475 = load %16*, %16** %474, align 8
  %476 = getelementptr inbounds %16, %16* %475, i32 0, i32 10
  store %5* %476, %5** %19, align 8
  %477 = load %16*, %16** %12, align 8
  %478 = icmp ne %16* %477, null
  br i1 %478, label %479, label %505

479:                                              ; preds = %471
  %480 = load %16*, %16** %12, align 8
  %481 = load %70*, %70** %9, align 8
  %482 = getelementptr inbounds %70, %70* %481, i32 0, i32 2
  %483 = load %16*, %16** %482, align 8
  %484 = call zeroext i8 @instanceof_function(%16* %480, %16* %483)
  %485 = icmp ne i8 %484, 0
  br i1 %485, label %505, label %486

486:                                              ; preds = %479
  %487 = load i8**, i8*** %11, align 8
  %488 = icmp ne i8** %487, null
  br i1 %488, label %489, label %504

489:                                              ; preds = %486
  %490 = load i8**, i8*** %11, align 8
  %491 = load %16*, %16** %12, align 8
  %492 = getelementptr inbounds %16, %16* %491, i32 0, i32 1
  %493 = load %10*, %10** %492, align 8
  %494 = getelementptr inbounds %10, %10* %493, i32 0, i32 3
  %495 = getelementptr inbounds [1 x i8], [1 x i8]* %494, i32 0, i32 0
  %496 = load %70*, %70** %9, align 8
  %497 = getelementptr inbounds %70, %70* %496, i32 0, i32 2
  %498 = load %16*, %16** %497, align 8
  %499 = getelementptr inbounds %16, %16* %498, i32 0, i32 1
  %500 = load %10*, %10** %499, align 8
  %501 = getelementptr inbounds %10, %10* %500, i32 0, i32 3
  %502 = getelementptr inbounds [1 x i8], [1 x i8]* %501, i32 0, i32 0
  %503 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %490, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @107, i32 0, i32 0), i8* %495, i8* %502)
  br label %504

504:                                              ; preds = %489, %486
  store i32 0, i32* %6, align 4
  store i32 1, i32* %24, align 4
  br label %517

505:                                              ; preds = %479, %471
  %506 = load %11*, %11** %8, align 8
  %507 = getelementptr inbounds %11, %11* %506, i32 0, i32 0
  %508 = bitcast %12* %507 to %10**
  %509 = load %10*, %10** %508, align 8
  %510 = getelementptr inbounds %10, %10* %509, i32 0, i32 3
  %511 = getelementptr inbounds [1 x i8], [1 x i8]* %510, i32 0, i32 0
  %512 = load i64, i64* %18, align 8
  %513 = getelementptr inbounds i8, i8* %511, i64 %512
  %514 = getelementptr inbounds i8, i8* %513, i64 2
  %515 = load i64, i64* %25, align 8
  %516 = call %10* @134(i8* %514, i64 %515, i32 0)
  store %10* %516, %10** %14, align 8
  store i32 0, i32* %24, align 4
  br label %517

517:                                              ; preds = %505, %504, %469, %446
  %518 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %518) #2
  %519 = load i32, i32* %24, align 4
  switch i32 %519, label %1315 [
    i32 0, label %520
  ]

520:                                              ; preds = %517
  br label %554

521:                                              ; preds = %403, %394, %379
  %522 = load %16*, %16** %12, align 8
  %523 = icmp ne %16* %522, null
  br i1 %523, label %524, label %536

524:                                              ; preds = %521
  %525 = load %11*, %11** %8, align 8
  %526 = getelementptr inbounds %11, %11* %525, i32 0, i32 0
  %527 = bitcast %12* %526 to %10**
  %528 = load %10*, %10** %527, align 8
  store %10* %528, %10** %14, align 8
  %529 = load %10*, %10** %14, align 8
  %530 = call i32 @184(%10* %529)
  %531 = load %16*, %16** %12, align 8
  %532 = getelementptr inbounds %16, %16* %531, i32 0, i32 10
  store %5* %532, %5** %19, align 8
  %533 = load %16*, %16** %12, align 8
  %534 = load %70*, %70** %9, align 8
  %535 = getelementptr inbounds %70, %70* %534, i32 0, i32 2
  store %16* %533, %16** %535, align 8
  br label %553

536:                                              ; preds = %521
  %537 = load i8**, i8*** %11, align 8
  %538 = icmp ne i8** %537, null
  br i1 %538, label %539, label %552

539:                                              ; preds = %536
  %540 = load i32, i32* %7, align 4
  %541 = and i32 %540, 8
  %542 = icmp ne i32 %541, 0
  br i1 %542, label %552, label %543

543:                                              ; preds = %539
  %544 = load i8**, i8*** %11, align 8
  %545 = load %11*, %11** %8, align 8
  %546 = getelementptr inbounds %11, %11* %545, i32 0, i32 0
  %547 = bitcast %12* %546 to %10**
  %548 = load %10*, %10** %547, align 8
  %549 = getelementptr inbounds %10, %10* %548, i32 0, i32 3
  %550 = getelementptr inbounds [1 x i8], [1 x i8]* %549, i32 0, i32 0
  %551 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %544, i64 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @108, i32 0, i32 0), i8* %550)
  br label %552

552:                                              ; preds = %543, %539, %536
  store i32 0, i32* %6, align 4
  store i32 1, i32* %24, align 4
  br label %1315

553:                                              ; preds = %524
  br label %554

554:                                              ; preds = %553, %520
  %555 = load %10*, %10** %14, align 8
  %556 = call %10* @zend_string_tolower(%10* %555)
  store %10* %556, %10** %16, align 8
  %557 = load i32, i32* %10, align 4
  %558 = icmp ne i32 %557, 0
  br i1 %558, label %559, label %589

559:                                              ; preds = %554
  %560 = load %70*, %70** %9, align 8
  %561 = getelementptr inbounds %70, %70* %560, i32 0, i32 2
  %562 = load %16*, %16** %561, align 8
  %563 = icmp ne %16* %562, null
  br i1 %563, label %564, label %589

564:                                              ; preds = %559
  %565 = load %10*, %10** %16, align 8
  %566 = getelementptr inbounds %10, %10* %565, i32 0, i32 2
  %567 = load i64, i64* %566, align 8
  %568 = icmp eq i64 %567, 11
  br i1 %568, label %569, label %589

569:                                              ; preds = %564
  %570 = load %10*, %10** %16, align 8
  %571 = getelementptr inbounds %10, %10* %570, i32 0, i32 3
  %572 = getelementptr inbounds [1 x i8], [1 x i8]* %571, i32 0, i32 0
  %573 = call i32 @memcmp(i8* %572, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @67, i32 0, i32 0), i64 11) #20
  %574 = icmp ne i32 %573, 0
  br i1 %574, label %589, label %575

575:                                              ; preds = %569
  %576 = load %70*, %70** %9, align 8
  %577 = getelementptr inbounds %70, %70* %576, i32 0, i32 2
  %578 = load %16*, %16** %577, align 8
  %579 = getelementptr inbounds %16, %16* %578, i32 0, i32 13
  %580 = load %37*, %37** %579, align 8
  %581 = load %70*, %70** %9, align 8
  %582 = getelementptr inbounds %70, %70* %581, i32 0, i32 1
  store %37* %580, %37** %582, align 8
  %583 = load %70*, %70** %9, align 8
  %584 = getelementptr inbounds %70, %70* %583, i32 0, i32 1
  %585 = load %37*, %37** %584, align 8
  %586 = icmp ne %37* %585, null
  br i1 %586, label %587, label %588

587:                                              ; preds = %575
  store i32 1, i32* %13, align 4
  br label %588

588:                                              ; preds = %587, %575
  br label %966

589:                                              ; preds = %569, %564, %559, %554
  %590 = load %5*, %5** %19, align 8
  %591 = load %10*, %10** %16, align 8
  %592 = call i8* @139(%5* %590, %10* %591)
  %593 = bitcast i8* %592 to %37*
  %594 = load %70*, %70** %9, align 8
  %595 = getelementptr inbounds %70, %70* %594, i32 0, i32 1
  store %37* %593, %37** %595, align 8
  %596 = icmp ne %37* %593, null
  br i1 %596, label %597, label %748

597:                                              ; preds = %589
  store i32 1, i32* %13, align 4
  %598 = load %70*, %70** %9, align 8
  %599 = getelementptr inbounds %70, %70* %598, i32 0, i32 1
  %600 = load %37*, %37** %599, align 8
  %601 = bitcast %37* %600 to %38*
  %602 = getelementptr inbounds %38, %38* %601, i32 0, i32 2
  %603 = load i32, i32* %602, align 4
  %604 = and i32 %603, 2048
  %605 = icmp ne i32 %604, 0
  br i1 %605, label %606, label %653

606:                                              ; preds = %597
  %607 = load i32, i32* %10, align 4
  %608 = icmp ne i32 %607, 0
  br i1 %608, label %653, label %609

609:                                              ; preds = %606
  %610 = call %16* @zend_get_executed_scope()
  store %16* %610, %16** %21, align 8
  %611 = load %16*, %16** %21, align 8
  %612 = icmp ne %16* %611, null
  br i1 %612, label %613, label %652

613:                                              ; preds = %609
  %614 = load %70*, %70** %9, align 8
  %615 = getelementptr inbounds %70, %70* %614, i32 0, i32 1
  %616 = load %37*, %37** %615, align 8
  %617 = bitcast %37* %616 to %60*
  %618 = getelementptr inbounds %60, %60* %617, i32 0, i32 4
  %619 = load %16*, %16** %618, align 8
  %620 = load %16*, %16** %21, align 8
  %621 = call zeroext i8 @instanceof_function(%16* %619, %16* %620)
  %622 = zext i8 %621 to i32
  %623 = icmp ne i32 %622, 0
  br i1 %623, label %624, label %652

624:                                              ; preds = %613
  %625 = bitcast %37** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %625) #2
  %626 = load %16*, %16** %21, align 8
  %627 = getelementptr inbounds %16, %16* %626, i32 0, i32 10
  %628 = load %10*, %10** %16, align 8
  %629 = call i8* @139(%5* %627, %10* %628)
  %630 = bitcast i8* %629 to %37*
  store %37* %630, %37** %26, align 8
  %631 = icmp ne %37* %630, null
  br i1 %631, label %632, label %650

632:                                              ; preds = %624
  %633 = load %37*, %37** %26, align 8
  %634 = bitcast %37* %633 to %60*
  %635 = getelementptr inbounds %60, %60* %634, i32 0, i32 2
  %636 = load i32, i32* %635, align 4
  %637 = and i32 %636, 1024
  %638 = icmp ne i32 %637, 0
  br i1 %638, label %639, label %650

639:                                              ; preds = %632
  %640 = load %37*, %37** %26, align 8
  %641 = bitcast %37* %640 to %60*
  %642 = getelementptr inbounds %60, %60* %641, i32 0, i32 4
  %643 = load %16*, %16** %642, align 8
  %644 = load %16*, %16** %21, align 8
  %645 = icmp eq %16* %643, %644
  br i1 %645, label %646, label %650

646:                                              ; preds = %639
  %647 = load %37*, %37** %26, align 8
  %648 = load %70*, %70** %9, align 8
  %649 = getelementptr inbounds %70, %70* %648, i32 0, i32 1
  store %37* %647, %37** %649, align 8
  br label %650

650:                                              ; preds = %646, %639, %632, %624
  %651 = bitcast %37** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %651) #2
  br label %652

652:                                              ; preds = %650, %613, %609
  br label %653

653:                                              ; preds = %652, %606, %597
  %654 = load i32, i32* %7, align 4
  %655 = and i32 %654, 2
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %657, label %747

657:                                              ; preds = %653
  %658 = load %70*, %70** %9, align 8
  %659 = getelementptr inbounds %70, %70* %658, i32 0, i32 2
  %660 = load %16*, %16** %659, align 8
  %661 = icmp ne %16* %660, null
  br i1 %661, label %662, label %747

662:                                              ; preds = %657
  %663 = load %70*, %70** %9, align 8
  %664 = getelementptr inbounds %70, %70* %663, i32 0, i32 4
  %665 = load %20*, %20** %664, align 8
  %666 = icmp ne %20* %665, null
  br i1 %666, label %667, label %674

667:                                              ; preds = %662
  %668 = load %70*, %70** %9, align 8
  %669 = getelementptr inbounds %70, %70* %668, i32 0, i32 2
  %670 = load %16*, %16** %669, align 8
  %671 = getelementptr inbounds %16, %16* %670, i32 0, i32 20
  %672 = load %37*, %37** %671, align 8
  %673 = icmp ne %37* %672, null
  br i1 %673, label %686, label %674

674:                                              ; preds = %667, %662
  %675 = load %70*, %70** %9, align 8
  %676 = getelementptr inbounds %70, %70* %675, i32 0, i32 4
  %677 = load %20*, %20** %676, align 8
  %678 = icmp ne %20* %677, null
  br i1 %678, label %747, label %679

679:                                              ; preds = %674
  %680 = load %70*, %70** %9, align 8
  %681 = getelementptr inbounds %70, %70* %680, i32 0, i32 2
  %682 = load %16*, %16** %681, align 8
  %683 = getelementptr inbounds %16, %16* %682, i32 0, i32 21
  %684 = load %37*, %37** %683, align 8
  %685 = icmp ne %37* %684, null
  br i1 %685, label %686, label %747

686:                                              ; preds = %679, %667
  %687 = load %70*, %70** %9, align 8
  %688 = getelementptr inbounds %70, %70* %687, i32 0, i32 1
  %689 = load %37*, %37** %688, align 8
  %690 = bitcast %37* %689 to %38*
  %691 = getelementptr inbounds %38, %38* %690, i32 0, i32 2
  %692 = load i32, i32* %691, align 4
  %693 = and i32 %692, 1024
  %694 = icmp ne i32 %693, 0
  br i1 %694, label %695, label %721

695:                                              ; preds = %686
  %696 = call %16* @zend_get_executed_scope()
  store %16* %696, %16** %21, align 8
  %697 = load %70*, %70** %9, align 8
  %698 = getelementptr inbounds %70, %70* %697, i32 0, i32 1
  %699 = load %37*, %37** %698, align 8
  %700 = load %70*, %70** %9, align 8
  %701 = getelementptr inbounds %70, %70* %700, i32 0, i32 4
  %702 = load %20*, %20** %701, align 8
  %703 = icmp ne %20* %702, null
  br i1 %703, label %704, label %710

704:                                              ; preds = %695
  %705 = load %70*, %70** %9, align 8
  %706 = getelementptr inbounds %70, %70* %705, i32 0, i32 4
  %707 = load %20*, %20** %706, align 8
  %708 = getelementptr inbounds %20, %20* %707, i32 0, i32 2
  %709 = load %16*, %16** %708, align 8
  br label %712

710:                                              ; preds = %695
  %711 = load %16*, %16** %21, align 8
  br label %712

712:                                              ; preds = %710, %704
  %713 = phi %16* [ %709, %704 ], [ %711, %710 ]
  %714 = load %10*, %10** %16, align 8
  %715 = call i32 @zend_check_private(%37* %699, %16* %713, %10* %714)
  %716 = icmp ne i32 %715, 0
  br i1 %716, label %720, label %717

717:                                              ; preds = %712
  store i32 0, i32* %13, align 4
  %718 = load %70*, %70** %9, align 8
  %719 = getelementptr inbounds %70, %70* %718, i32 0, i32 1
  store %37* null, %37** %719, align 8
  br label %749

720:                                              ; preds = %712
  br label %746

721:                                              ; preds = %686
  %722 = load %70*, %70** %9, align 8
  %723 = getelementptr inbounds %70, %70* %722, i32 0, i32 1
  %724 = load %37*, %37** %723, align 8
  %725 = bitcast %37* %724 to %60*
  %726 = getelementptr inbounds %60, %60* %725, i32 0, i32 2
  %727 = load i32, i32* %726, align 4
  %728 = and i32 %727, 512
  %729 = icmp ne i32 %728, 0
  br i1 %729, label %730, label %745

730:                                              ; preds = %721
  %731 = call %16* @zend_get_executed_scope()
  store %16* %731, %16** %21, align 8
  %732 = load %70*, %70** %9, align 8
  %733 = getelementptr inbounds %70, %70* %732, i32 0, i32 1
  %734 = load %37*, %37** %733, align 8
  %735 = bitcast %37* %734 to %60*
  %736 = getelementptr inbounds %60, %60* %735, i32 0, i32 4
  %737 = load %16*, %16** %736, align 8
  %738 = load %16*, %16** %21, align 8
  %739 = call i32 @zend_check_protected(%16* %737, %16* %738)
  %740 = icmp ne i32 %739, 0
  br i1 %740, label %744, label %741

741:                                              ; preds = %730
  store i32 0, i32* %13, align 4
  %742 = load %70*, %70** %9, align 8
  %743 = getelementptr inbounds %70, %70* %742, i32 0, i32 1
  store %37* null, %37** %743, align 8
  br label %749

744:                                              ; preds = %730
  br label %745

745:                                              ; preds = %744, %721
  br label %746

746:                                              ; preds = %745, %720
  br label %747

747:                                              ; preds = %746, %679, %674, %657, %653
  br label %965

748:                                              ; preds = %589
  br label %749

749:                                              ; preds = %748, %741, %717
  %750 = load %70*, %70** %9, align 8
  %751 = getelementptr inbounds %70, %70* %750, i32 0, i32 4
  %752 = load %20*, %20** %751, align 8
  %753 = icmp ne %20* %752, null
  br i1 %753, label %754, label %884

754:                                              ; preds = %749
  %755 = load %70*, %70** %9, align 8
  %756 = getelementptr inbounds %70, %70* %755, i32 0, i32 2
  %757 = load %16*, %16** %756, align 8
  %758 = load %16*, %16** %12, align 8
  %759 = icmp eq %16* %757, %758
  br i1 %759, label %760, label %884

760:                                              ; preds = %754
  %761 = load i32, i32* %10, align 4
  %762 = icmp ne i32 %761, 0
  br i1 %762, label %763, label %774

763:                                              ; preds = %760
  %764 = load %16*, %16** %12, align 8
  %765 = getelementptr inbounds %16, %16* %764, i32 0, i32 20
  %766 = load %37*, %37** %765, align 8
  %767 = icmp ne %37* %766, null
  br i1 %767, label %768, label %774

768:                                              ; preds = %763
  %769 = load %16*, %16** %12, align 8
  %770 = load %10*, %10** %14, align 8
  %771 = call %37* @zend_get_call_trampoline_func(%16* %769, %10* %770, i32 0)
  %772 = load %70*, %70** %9, align 8
  %773 = getelementptr inbounds %70, %70* %772, i32 0, i32 1
  store %37* %771, %37** %773, align 8
  store i32 1, i32* %20, align 4
  store i32 1, i32* %13, align 4
  br label %883

774:                                              ; preds = %763, %760
  %775 = load %70*, %70** %9, align 8
  %776 = getelementptr inbounds %70, %70* %775, i32 0, i32 4
  %777 = load %20*, %20** %776, align 8
  %778 = getelementptr inbounds %20, %20* %777, i32 0, i32 3
  %779 = load %21*, %21** %778, align 8
  %780 = getelementptr inbounds %21, %21* %779, i32 0, i32 16
  %781 = load %37* (%20**, %10*, %11*)*, %37* (%20**, %10*, %11*)** %780, align 8
  %782 = icmp ne %37* (%20**, %10*, %11*)* %781, null
  br i1 %782, label %783, label %882

783:                                              ; preds = %774
  %784 = load %70*, %70** %9, align 8
  %785 = getelementptr inbounds %70, %70* %784, i32 0, i32 4
  %786 = load %20*, %20** %785, align 8
  %787 = getelementptr inbounds %20, %20* %786, i32 0, i32 3
  %788 = load %21*, %21** %787, align 8
  %789 = getelementptr inbounds %21, %21* %788, i32 0, i32 16
  %790 = load %37* (%20**, %10*, %11*)*, %37* (%20**, %10*, %11*)** %789, align 8
  %791 = load %70*, %70** %9, align 8
  %792 = getelementptr inbounds %70, %70* %791, i32 0, i32 4
  %793 = load %10*, %10** %14, align 8
  %794 = call %37* %790(%20** %792, %10* %793, %11* null)
  %795 = load %70*, %70** %9, align 8
  %796 = getelementptr inbounds %70, %70* %795, i32 0, i32 1
  store %37* %794, %37** %796, align 8
  %797 = load %70*, %70** %9, align 8
  %798 = getelementptr inbounds %70, %70* %797, i32 0, i32 1
  %799 = load %37*, %37** %798, align 8
  %800 = icmp ne %37* %799, null
  br i1 %800, label %801, label %881

801:                                              ; preds = %783
  %802 = load i32, i32* %10, align 4
  %803 = icmp ne i32 %802, 0
  br i1 %803, label %804, label %870

804:                                              ; preds = %801
  %805 = load %70*, %70** %9, align 8
  %806 = getelementptr inbounds %70, %70* %805, i32 0, i32 1
  %807 = load %37*, %37** %806, align 8
  %808 = bitcast %37* %807 to %60*
  %809 = getelementptr inbounds %60, %60* %808, i32 0, i32 4
  %810 = load %16*, %16** %809, align 8
  %811 = icmp ne %16* %810, null
  br i1 %811, label %812, label %822

812:                                              ; preds = %804
  %813 = load %16*, %16** %12, align 8
  %814 = load %70*, %70** %9, align 8
  %815 = getelementptr inbounds %70, %70* %814, i32 0, i32 1
  %816 = load %37*, %37** %815, align 8
  %817 = bitcast %37* %816 to %60*
  %818 = getelementptr inbounds %60, %60* %817, i32 0, i32 4
  %819 = load %16*, %16** %818, align 8
  %820 = call zeroext i8 @instanceof_function(%16* %813, %16* %819)
  %821 = icmp ne i8 %820, 0
  br i1 %821, label %870, label %822

822:                                              ; preds = %812, %804
  %823 = load %70*, %70** %9, align 8
  %824 = getelementptr inbounds %70, %70* %823, i32 0, i32 1
  %825 = load %37*, %37** %824, align 8
  %826 = bitcast %37* %825 to %60*
  %827 = getelementptr inbounds %60, %60* %826, i32 0, i32 2
  %828 = load i32, i32* %827, align 4
  %829 = and i32 %828, 2097152
  %830 = icmp ne i32 %829, 0
  br i1 %830, label %831, label %869

831:                                              ; preds = %822
  %832 = load %70*, %70** %9, align 8
  %833 = getelementptr inbounds %70, %70* %832, i32 0, i32 1
  %834 = load %37*, %37** %833, align 8
  %835 = bitcast %37* %834 to i8*
  %836 = load i8, i8* %835, align 8
  %837 = zext i8 %836 to i32
  %838 = icmp ne i32 %837, 3
  br i1 %838, label %839, label %854

839:                                              ; preds = %831
  %840 = load %70*, %70** %9, align 8
  %841 = getelementptr inbounds %70, %70* %840, i32 0, i32 1
  %842 = load %37*, %37** %841, align 8
  %843 = bitcast %37* %842 to %60*
  %844 = getelementptr inbounds %60, %60* %843, i32 0, i32 3
  %845 = load %10*, %10** %844, align 8
  %846 = icmp ne %10* %845, null
  br i1 %846, label %847, label %854

847:                                              ; preds = %839
  %848 = load %70*, %70** %9, align 8
  %849 = getelementptr inbounds %70, %70* %848, i32 0, i32 1
  %850 = load %37*, %37** %849, align 8
  %851 = bitcast %37* %850 to %60*
  %852 = getelementptr inbounds %60, %60* %851, i32 0, i32 3
  %853 = load %10*, %10** %852, align 8
  call void @135(%10* %853)
  br label %854

854:                                              ; preds = %847, %839, %831
  br label %855

855:                                              ; preds = %854
  %856 = load %70*, %70** %9, align 8
  %857 = getelementptr inbounds %70, %70* %856, i32 0, i32 1
  %858 = load %37*, %37** %857, align 8
  %859 = icmp eq %37* %858, getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 57)
  br i1 %859, label %860, label %861

860:                                              ; preds = %855
  store %10* null, %10** getelementptr inbounds (%60, %60* bitcast (%37* getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 57) to %60*), i32 0, i32 3), align 8
  br label %866

861:                                              ; preds = %855
  %862 = load %70*, %70** %9, align 8
  %863 = getelementptr inbounds %70, %70* %862, i32 0, i32 1
  %864 = load %37*, %37** %863, align 8
  %865 = bitcast %37* %864 to i8*
  call void @_efree(i8* %865)
  br label %866

866:                                              ; preds = %861, %860
  br label %867

867:                                              ; preds = %866
  br label %868

868:                                              ; preds = %867
  br label %869

869:                                              ; preds = %868, %822
  br label %880

870:                                              ; preds = %812, %801
  store i32 1, i32* %13, align 4
  %871 = load %70*, %70** %9, align 8
  %872 = getelementptr inbounds %70, %70* %871, i32 0, i32 1
  %873 = load %37*, %37** %872, align 8
  %874 = bitcast %37* %873 to %60*
  %875 = getelementptr inbounds %60, %60* %874, i32 0, i32 2
  %876 = load i32, i32* %875, align 4
  %877 = and i32 %876, 2097152
  %878 = icmp ne i32 %877, 0
  %879 = zext i1 %878 to i32
  store i32 %879, i32* %20, align 4
  br label %880

880:                                              ; preds = %870, %869
  br label %881

881:                                              ; preds = %880, %783
  br label %882

882:                                              ; preds = %881, %774
  br label %883

883:                                              ; preds = %882, %768
  br label %964

884:                                              ; preds = %754, %749
  %885 = load %70*, %70** %9, align 8
  %886 = getelementptr inbounds %70, %70* %885, i32 0, i32 2
  %887 = load %16*, %16** %886, align 8
  %888 = icmp ne %16* %887, null
  br i1 %888, label %889, label %963

889:                                              ; preds = %884
  %890 = load %70*, %70** %9, align 8
  %891 = getelementptr inbounds %70, %70* %890, i32 0, i32 2
  %892 = load %16*, %16** %891, align 8
  %893 = getelementptr inbounds %16, %16* %892, i32 0, i32 30
  %894 = load %37* (%16*, %10*)*, %37* (%16*, %10*)** %893, align 8
  %895 = icmp ne %37* (%16*, %10*)* %894, null
  br i1 %895, label %896, label %909

896:                                              ; preds = %889
  %897 = load %70*, %70** %9, align 8
  %898 = getelementptr inbounds %70, %70* %897, i32 0, i32 2
  %899 = load %16*, %16** %898, align 8
  %900 = getelementptr inbounds %16, %16* %899, i32 0, i32 30
  %901 = load %37* (%16*, %10*)*, %37* (%16*, %10*)** %900, align 8
  %902 = load %70*, %70** %9, align 8
  %903 = getelementptr inbounds %70, %70* %902, i32 0, i32 2
  %904 = load %16*, %16** %903, align 8
  %905 = load %10*, %10** %14, align 8
  %906 = call %37* %901(%16* %904, %10* %905)
  %907 = load %70*, %70** %9, align 8
  %908 = getelementptr inbounds %70, %70* %907, i32 0, i32 1
  store %37* %906, %37** %908, align 8
  br label %917

909:                                              ; preds = %889
  %910 = load %70*, %70** %9, align 8
  %911 = getelementptr inbounds %70, %70* %910, i32 0, i32 2
  %912 = load %16*, %16** %911, align 8
  %913 = load %10*, %10** %14, align 8
  %914 = call %37* @zend_std_get_static_method(%16* %912, %10* %913, %11* null)
  %915 = load %70*, %70** %9, align 8
  %916 = getelementptr inbounds %70, %70* %915, i32 0, i32 1
  store %37* %914, %37** %916, align 8
  br label %917

917:                                              ; preds = %909, %896
  %918 = load %70*, %70** %9, align 8
  %919 = getelementptr inbounds %70, %70* %918, i32 0, i32 1
  %920 = load %37*, %37** %919, align 8
  %921 = icmp ne %37* %920, null
  br i1 %921, label %922, label %962

922:                                              ; preds = %917
  store i32 1, i32* %13, align 4
  %923 = load %70*, %70** %9, align 8
  %924 = getelementptr inbounds %70, %70* %923, i32 0, i32 1
  %925 = load %37*, %37** %924, align 8
  %926 = bitcast %37* %925 to %60*
  %927 = getelementptr inbounds %60, %60* %926, i32 0, i32 2
  %928 = load i32, i32* %927, align 4
  %929 = and i32 %928, 2097152
  %930 = icmp ne i32 %929, 0
  %931 = zext i1 %930 to i32
  store i32 %931, i32* %20, align 4
  %932 = load i32, i32* %20, align 4
  %933 = icmp ne i32 %932, 0
  br i1 %933, label %934, label %961

934:                                              ; preds = %922
  %935 = load %70*, %70** %9, align 8
  %936 = getelementptr inbounds %70, %70* %935, i32 0, i32 4
  %937 = load %20*, %20** %936, align 8
  %938 = icmp ne %20* %937, null
  br i1 %938, label %961, label %939

939:                                              ; preds = %934
  %940 = bitcast %20** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %940) #2
  %941 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %942 = call %20* @zend_get_this_object(%4* %941)
  store %20* %942, %20** %27, align 8
  %943 = load %20*, %20** %27, align 8
  %944 = icmp ne %20* %943, null
  br i1 %944, label %945, label %959

945:                                              ; preds = %939
  %946 = load %20*, %20** %27, align 8
  %947 = getelementptr inbounds %20, %20* %946, i32 0, i32 2
  %948 = load %16*, %16** %947, align 8
  %949 = load %70*, %70** %9, align 8
  %950 = getelementptr inbounds %70, %70* %949, i32 0, i32 2
  %951 = load %16*, %16** %950, align 8
  %952 = call zeroext i8 @instanceof_function(%16* %948, %16* %951)
  %953 = zext i8 %952 to i32
  %954 = icmp ne i32 %953, 0
  br i1 %954, label %955, label %959

955:                                              ; preds = %945
  %956 = load %20*, %20** %27, align 8
  %957 = load %70*, %70** %9, align 8
  %958 = getelementptr inbounds %70, %70* %957, i32 0, i32 4
  store %20* %956, %20** %958, align 8
  br label %959

959:                                              ; preds = %955, %945, %939
  %960 = bitcast %20** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %960) #2
  br label %961

961:                                              ; preds = %959, %934, %922
  br label %962

962:                                              ; preds = %961, %917
  br label %963

963:                                              ; preds = %962, %884
  br label %964

964:                                              ; preds = %963, %883
  br label %965

965:                                              ; preds = %964, %747
  br label %966

966:                                              ; preds = %965, %588
  %967 = load i32, i32* %13, align 4
  %968 = icmp ne i32 %967, 0
  br i1 %968, label %969, label %1251

969:                                              ; preds = %966
  %970 = load %70*, %70** %9, align 8
  %971 = getelementptr inbounds %70, %70* %970, i32 0, i32 2
  %972 = load %16*, %16** %971, align 8
  %973 = icmp ne %16* %972, null
  br i1 %973, label %974, label %1250

974:                                              ; preds = %969
  %975 = load i32, i32* %20, align 4
  %976 = icmp ne i32 %975, 0
  br i1 %976, label %1250, label %977

977:                                              ; preds = %974
  %978 = load %70*, %70** %9, align 8
  %979 = getelementptr inbounds %70, %70* %978, i32 0, i32 1
  %980 = load %37*, %37** %979, align 8
  %981 = bitcast %37* %980 to %60*
  %982 = getelementptr inbounds %60, %60* %981, i32 0, i32 2
  %983 = load i32, i32* %982, align 4
  %984 = and i32 %983, 2
  %985 = icmp ne i32 %984, 0
  br i1 %985, label %986, label %1024

986:                                              ; preds = %977
  %987 = load i8**, i8*** %11, align 8
  %988 = icmp ne i8** %987, null
  br i1 %988, label %989, label %1007

989:                                              ; preds = %986
  %990 = load i8**, i8*** %11, align 8
  %991 = load %70*, %70** %9, align 8
  %992 = getelementptr inbounds %70, %70* %991, i32 0, i32 2
  %993 = load %16*, %16** %992, align 8
  %994 = getelementptr inbounds %16, %16* %993, i32 0, i32 1
  %995 = load %10*, %10** %994, align 8
  %996 = getelementptr inbounds %10, %10* %995, i32 0, i32 3
  %997 = getelementptr inbounds [1 x i8], [1 x i8]* %996, i32 0, i32 0
  %998 = load %70*, %70** %9, align 8
  %999 = getelementptr inbounds %70, %70* %998, i32 0, i32 1
  %1000 = load %37*, %37** %999, align 8
  %1001 = bitcast %37* %1000 to %60*
  %1002 = getelementptr inbounds %60, %60* %1001, i32 0, i32 3
  %1003 = load %10*, %10** %1002, align 8
  %1004 = getelementptr inbounds %10, %10* %1003, i32 0, i32 3
  %1005 = getelementptr inbounds [1 x i8], [1 x i8]* %1004, i32 0, i32 0
  %1006 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %990, i64 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @109, i32 0, i32 0), i8* %997, i8* %1005)
  store i32 0, i32* %13, align 4
  br label %1023

1007:                                             ; preds = %986
  %1008 = load %70*, %70** %9, align 8
  %1009 = getelementptr inbounds %70, %70* %1008, i32 0, i32 2
  %1010 = load %16*, %16** %1009, align 8
  %1011 = getelementptr inbounds %16, %16* %1010, i32 0, i32 1
  %1012 = load %10*, %10** %1011, align 8
  %1013 = getelementptr inbounds %10, %10* %1012, i32 0, i32 3
  %1014 = getelementptr inbounds [1 x i8], [1 x i8]* %1013, i32 0, i32 0
  %1015 = load %70*, %70** %9, align 8
  %1016 = getelementptr inbounds %70, %70* %1015, i32 0, i32 1
  %1017 = load %37*, %37** %1016, align 8
  %1018 = bitcast %37* %1017 to %60*
  %1019 = getelementptr inbounds %60, %60* %1018, i32 0, i32 3
  %1020 = load %10*, %10** %1019, align 8
  %1021 = getelementptr inbounds %10, %10* %1020, i32 0, i32 3
  %1022 = getelementptr inbounds [1 x i8], [1 x i8]* %1021, i32 0, i32 0
  call void (%16*, i8*, ...) @zend_throw_error(%16* null, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @110, i32 0, i32 0), i8* %1014, i8* %1022)
  store i32 0, i32* %13, align 4
  br label %1023

1023:                                             ; preds = %1007, %989
  br label %1129

1024:                                             ; preds = %977
  %1025 = load %70*, %70** %9, align 8
  %1026 = getelementptr inbounds %70, %70* %1025, i32 0, i32 4
  %1027 = load %20*, %20** %1026, align 8
  %1028 = icmp ne %20* %1027, null
  br i1 %1028, label %1128, label %1029

1029:                                             ; preds = %1024
  %1030 = load %70*, %70** %9, align 8
  %1031 = getelementptr inbounds %70, %70* %1030, i32 0, i32 1
  %1032 = load %37*, %37** %1031, align 8
  %1033 = bitcast %37* %1032 to %60*
  %1034 = getelementptr inbounds %60, %60* %1033, i32 0, i32 2
  %1035 = load i32, i32* %1034, align 4
  %1036 = and i32 %1035, 1
  %1037 = icmp ne i32 %1036, 0
  br i1 %1037, label %1128, label %1038

1038:                                             ; preds = %1029
  %1039 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1039) #2
  %1040 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1040) #2
  %1041 = load %70*, %70** %9, align 8
  %1042 = getelementptr inbounds %70, %70* %1041, i32 0, i32 1
  %1043 = load %37*, %37** %1042, align 8
  %1044 = bitcast %37* %1043 to %60*
  %1045 = getelementptr inbounds %60, %60* %1044, i32 0, i32 2
  %1046 = load i32, i32* %1045, align 4
  %1047 = and i32 %1046, 65536
  %1048 = icmp ne i32 %1047, 0
  br i1 %1048, label %1049, label %1050

1049:                                             ; preds = %1038
  store i32 8192, i32* %28, align 4
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @111, i32 0, i32 0), i8** %29, align 8
  br label %1051

1050:                                             ; preds = %1038
  store i32 1, i32* %28, align 4
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @112, i32 0, i32 0), i8** %29, align 8
  br label %1051

1051:                                             ; preds = %1050, %1049
  %1052 = load i32, i32* %7, align 4
  %1053 = and i32 %1052, 4
  %1054 = icmp ne i32 %1053, 0
  br i1 %1054, label %1055, label %1056

1055:                                             ; preds = %1051
  store i32 0, i32* %13, align 4
  br label %1056

1056:                                             ; preds = %1055, %1051
  %1057 = load i8**, i8*** %11, align 8
  %1058 = icmp ne i8** %1057, null
  br i1 %1058, label %1059, label %1082

1059:                                             ; preds = %1056
  %1060 = load i8**, i8*** %11, align 8
  %1061 = load %70*, %70** %9, align 8
  %1062 = getelementptr inbounds %70, %70* %1061, i32 0, i32 2
  %1063 = load %16*, %16** %1062, align 8
  %1064 = getelementptr inbounds %16, %16* %1063, i32 0, i32 1
  %1065 = load %10*, %10** %1064, align 8
  %1066 = getelementptr inbounds %10, %10* %1065, i32 0, i32 3
  %1067 = getelementptr inbounds [1 x i8], [1 x i8]* %1066, i32 0, i32 0
  %1068 = load %70*, %70** %9, align 8
  %1069 = getelementptr inbounds %70, %70* %1068, i32 0, i32 1
  %1070 = load %37*, %37** %1069, align 8
  %1071 = bitcast %37* %1070 to %60*
  %1072 = getelementptr inbounds %60, %60* %1071, i32 0, i32 3
  %1073 = load %10*, %10** %1072, align 8
  %1074 = getelementptr inbounds %10, %10* %1073, i32 0, i32 3
  %1075 = getelementptr inbounds [1 x i8], [1 x i8]* %1074, i32 0, i32 0
  %1076 = load i8*, i8** %29, align 8
  %1077 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %1060, i64 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @113, i32 0, i32 0), i8* %1067, i8* %1075, i8* %1076)
  %1078 = load i32, i32* %28, align 4
  %1079 = icmp ne i32 %1078, 8192
  br i1 %1079, label %1080, label %1081

1080:                                             ; preds = %1059
  store i32 0, i32* %13, align 4
  br label %1081

1081:                                             ; preds = %1080, %1059
  br label %1125

1082:                                             ; preds = %1056
  %1083 = load i32, i32* %13, align 4
  %1084 = icmp ne i32 %1083, 0
  br i1 %1084, label %1085, label %1124

1085:                                             ; preds = %1082
  %1086 = load i32, i32* %28, align 4
  %1087 = icmp eq i32 %1086, 1
  br i1 %1087, label %1088, label %1105

1088:                                             ; preds = %1085
  %1089 = load %70*, %70** %9, align 8
  %1090 = getelementptr inbounds %70, %70* %1089, i32 0, i32 2
  %1091 = load %16*, %16** %1090, align 8
  %1092 = getelementptr inbounds %16, %16* %1091, i32 0, i32 1
  %1093 = load %10*, %10** %1092, align 8
  %1094 = getelementptr inbounds %10, %10* %1093, i32 0, i32 3
  %1095 = getelementptr inbounds [1 x i8], [1 x i8]* %1094, i32 0, i32 0
  %1096 = load %70*, %70** %9, align 8
  %1097 = getelementptr inbounds %70, %70* %1096, i32 0, i32 1
  %1098 = load %37*, %37** %1097, align 8
  %1099 = bitcast %37* %1098 to %60*
  %1100 = getelementptr inbounds %60, %60* %1099, i32 0, i32 3
  %1101 = load %10*, %10** %1100, align 8
  %1102 = getelementptr inbounds %10, %10* %1101, i32 0, i32 3
  %1103 = getelementptr inbounds [1 x i8], [1 x i8]* %1102, i32 0, i32 0
  %1104 = load i8*, i8** %29, align 8
  call void (%16*, i8*, ...) @zend_throw_error(%16* null, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @114, i32 0, i32 0), i8* %1095, i8* %1103, i8* %1104)
  br label %1123

1105:                                             ; preds = %1085
  %1106 = load i32, i32* %28, align 4
  %1107 = load %70*, %70** %9, align 8
  %1108 = getelementptr inbounds %70, %70* %1107, i32 0, i32 2
  %1109 = load %16*, %16** %1108, align 8
  %1110 = getelementptr inbounds %16, %16* %1109, i32 0, i32 1
  %1111 = load %10*, %10** %1110, align 8
  %1112 = getelementptr inbounds %10, %10* %1111, i32 0, i32 3
  %1113 = getelementptr inbounds [1 x i8], [1 x i8]* %1112, i32 0, i32 0
  %1114 = load %70*, %70** %9, align 8
  %1115 = getelementptr inbounds %70, %70* %1114, i32 0, i32 1
  %1116 = load %37*, %37** %1115, align 8
  %1117 = bitcast %37* %1116 to %60*
  %1118 = getelementptr inbounds %60, %60* %1117, i32 0, i32 3
  %1119 = load %10*, %10** %1118, align 8
  %1120 = getelementptr inbounds %10, %10* %1119, i32 0, i32 3
  %1121 = getelementptr inbounds [1 x i8], [1 x i8]* %1120, i32 0, i32 0
  %1122 = load i8*, i8** %29, align 8
  call void (i32, i8*, ...) @zend_error(i32 %1106, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @114, i32 0, i32 0), i8* %1113, i8* %1121, i8* %1122)
  br label %1123

1123:                                             ; preds = %1105, %1088
  br label %1124

1124:                                             ; preds = %1123, %1082
  br label %1125

1125:                                             ; preds = %1124, %1081
  %1126 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1126) #2
  %1127 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1127) #2
  br label %1128

1128:                                             ; preds = %1125, %1029, %1024
  br label %1129

1129:                                             ; preds = %1128, %1023
  %1130 = load i32, i32* %13, align 4
  %1131 = icmp ne i32 %1130, 0
  br i1 %1131, label %1132, label %1249

1132:                                             ; preds = %1129
  %1133 = load i32, i32* %7, align 4
  %1134 = and i32 %1133, 2
  %1135 = icmp eq i32 %1134, 0
  br i1 %1135, label %1136, label %1249

1136:                                             ; preds = %1132
  %1137 = load %70*, %70** %9, align 8
  %1138 = getelementptr inbounds %70, %70* %1137, i32 0, i32 1
  %1139 = load %37*, %37** %1138, align 8
  %1140 = bitcast %37* %1139 to %38*
  %1141 = getelementptr inbounds %38, %38* %1140, i32 0, i32 2
  %1142 = load i32, i32* %1141, align 4
  %1143 = and i32 %1142, 1024
  %1144 = icmp ne i32 %1143, 0
  br i1 %1144, label %1145, label %1197

1145:                                             ; preds = %1136
  %1146 = call %16* @zend_get_executed_scope()
  store %16* %1146, %16** %21, align 8
  %1147 = load %70*, %70** %9, align 8
  %1148 = getelementptr inbounds %70, %70* %1147, i32 0, i32 1
  %1149 = load %37*, %37** %1148, align 8
  %1150 = load %70*, %70** %9, align 8
  %1151 = getelementptr inbounds %70, %70* %1150, i32 0, i32 4
  %1152 = load %20*, %20** %1151, align 8
  %1153 = icmp ne %20* %1152, null
  br i1 %1153, label %1154, label %1160

1154:                                             ; preds = %1145
  %1155 = load %70*, %70** %9, align 8
  %1156 = getelementptr inbounds %70, %70* %1155, i32 0, i32 4
  %1157 = load %20*, %20** %1156, align 8
  %1158 = getelementptr inbounds %20, %20* %1157, i32 0, i32 2
  %1159 = load %16*, %16** %1158, align 8
  br label %1162

1160:                                             ; preds = %1145
  %1161 = load %16*, %16** %21, align 8
  br label %1162

1162:                                             ; preds = %1160, %1154
  %1163 = phi %16* [ %1159, %1154 ], [ %1161, %1160 ]
  %1164 = load %10*, %10** %16, align 8
  %1165 = call i32 @zend_check_private(%37* %1149, %16* %1163, %10* %1164)
  %1166 = icmp ne i32 %1165, 0
  br i1 %1166, label %1196, label %1167

1167:                                             ; preds = %1162
  %1168 = load i8**, i8*** %11, align 8
  %1169 = icmp ne i8** %1168, null
  br i1 %1169, label %1170, label %1195

1170:                                             ; preds = %1167
  %1171 = load i8**, i8*** %11, align 8
  %1172 = load i8*, i8** %1171, align 8
  %1173 = icmp ne i8* %1172, null
  br i1 %1173, label %1174, label %1177

1174:                                             ; preds = %1170
  %1175 = load i8**, i8*** %11, align 8
  %1176 = load i8*, i8** %1175, align 8
  call void @_efree(i8* %1176)
  br label %1177

1177:                                             ; preds = %1174, %1170
  %1178 = load i8**, i8*** %11, align 8
  %1179 = load %70*, %70** %9, align 8
  %1180 = getelementptr inbounds %70, %70* %1179, i32 0, i32 2
  %1181 = load %16*, %16** %1180, align 8
  %1182 = getelementptr inbounds %16, %16* %1181, i32 0, i32 1
  %1183 = load %10*, %10** %1182, align 8
  %1184 = getelementptr inbounds %10, %10* %1183, i32 0, i32 3
  %1185 = getelementptr inbounds [1 x i8], [1 x i8]* %1184, i32 0, i32 0
  %1186 = load %70*, %70** %9, align 8
  %1187 = getelementptr inbounds %70, %70* %1186, i32 0, i32 1
  %1188 = load %37*, %37** %1187, align 8
  %1189 = bitcast %37* %1188 to %60*
  %1190 = getelementptr inbounds %60, %60* %1189, i32 0, i32 3
  %1191 = load %10*, %10** %1190, align 8
  %1192 = getelementptr inbounds %10, %10* %1191, i32 0, i32 3
  %1193 = getelementptr inbounds [1 x i8], [1 x i8]* %1192, i32 0, i32 0
  %1194 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %1178, i64 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @115, i32 0, i32 0), i8* %1185, i8* %1193)
  br label %1195

1195:                                             ; preds = %1177, %1167
  store i32 0, i32* %13, align 4
  br label %1196

1196:                                             ; preds = %1195, %1162
  br label %1248

1197:                                             ; preds = %1136
  %1198 = load %70*, %70** %9, align 8
  %1199 = getelementptr inbounds %70, %70* %1198, i32 0, i32 1
  %1200 = load %37*, %37** %1199, align 8
  %1201 = bitcast %37* %1200 to %60*
  %1202 = getelementptr inbounds %60, %60* %1201, i32 0, i32 2
  %1203 = load i32, i32* %1202, align 4
  %1204 = and i32 %1203, 512
  %1205 = icmp ne i32 %1204, 0
  br i1 %1205, label %1206, label %1247

1206:                                             ; preds = %1197
  %1207 = call %16* @zend_get_executed_scope()
  store %16* %1207, %16** %21, align 8
  %1208 = load %70*, %70** %9, align 8
  %1209 = getelementptr inbounds %70, %70* %1208, i32 0, i32 1
  %1210 = load %37*, %37** %1209, align 8
  %1211 = bitcast %37* %1210 to %60*
  %1212 = getelementptr inbounds %60, %60* %1211, i32 0, i32 4
  %1213 = load %16*, %16** %1212, align 8
  %1214 = load %16*, %16** %21, align 8
  %1215 = call i32 @zend_check_protected(%16* %1213, %16* %1214)
  %1216 = icmp ne i32 %1215, 0
  br i1 %1216, label %1246, label %1217

1217:                                             ; preds = %1206
  %1218 = load i8**, i8*** %11, align 8
  %1219 = icmp ne i8** %1218, null
  br i1 %1219, label %1220, label %1245

1220:                                             ; preds = %1217
  %1221 = load i8**, i8*** %11, align 8
  %1222 = load i8*, i8** %1221, align 8
  %1223 = icmp ne i8* %1222, null
  br i1 %1223, label %1224, label %1227

1224:                                             ; preds = %1220
  %1225 = load i8**, i8*** %11, align 8
  %1226 = load i8*, i8** %1225, align 8
  call void @_efree(i8* %1226)
  br label %1227

1227:                                             ; preds = %1224, %1220
  %1228 = load i8**, i8*** %11, align 8
  %1229 = load %70*, %70** %9, align 8
  %1230 = getelementptr inbounds %70, %70* %1229, i32 0, i32 2
  %1231 = load %16*, %16** %1230, align 8
  %1232 = getelementptr inbounds %16, %16* %1231, i32 0, i32 1
  %1233 = load %10*, %10** %1232, align 8
  %1234 = getelementptr inbounds %10, %10* %1233, i32 0, i32 3
  %1235 = getelementptr inbounds [1 x i8], [1 x i8]* %1234, i32 0, i32 0
  %1236 = load %70*, %70** %9, align 8
  %1237 = getelementptr inbounds %70, %70* %1236, i32 0, i32 1
  %1238 = load %37*, %37** %1237, align 8
  %1239 = bitcast %37* %1238 to %60*
  %1240 = getelementptr inbounds %60, %60* %1239, i32 0, i32 3
  %1241 = load %10*, %10** %1240, align 8
  %1242 = getelementptr inbounds %10, %10* %1241, i32 0, i32 3
  %1243 = getelementptr inbounds [1 x i8], [1 x i8]* %1242, i32 0, i32 0
  %1244 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %1228, i64 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @116, i32 0, i32 0), i8* %1235, i8* %1243)
  br label %1245

1245:                                             ; preds = %1227, %1217
  store i32 0, i32* %13, align 4
  br label %1246

1246:                                             ; preds = %1245, %1206
  br label %1247

1247:                                             ; preds = %1246, %1197
  br label %1248

1248:                                             ; preds = %1247, %1196
  br label %1249

1249:                                             ; preds = %1248, %1132, %1129
  br label %1250

1250:                                             ; preds = %1249, %974, %969
  br label %1292

1251:                                             ; preds = %966
  %1252 = load i8**, i8*** %11, align 8
  %1253 = icmp ne i8** %1252, null
  br i1 %1253, label %1254, label %1291

1254:                                             ; preds = %1251
  %1255 = load i32, i32* %7, align 4
  %1256 = and i32 %1255, 8
  %1257 = icmp ne i32 %1256, 0
  br i1 %1257, label %1291, label %1258

1258:                                             ; preds = %1254
  %1259 = load %70*, %70** %9, align 8
  %1260 = getelementptr inbounds %70, %70* %1259, i32 0, i32 2
  %1261 = load %16*, %16** %1260, align 8
  %1262 = icmp ne %16* %1261, null
  br i1 %1262, label %1263, label %1280

1263:                                             ; preds = %1258
  %1264 = load i8**, i8*** %11, align 8
  %1265 = icmp ne i8** %1264, null
  br i1 %1265, label %1266, label %1279

1266:                                             ; preds = %1263
  %1267 = load i8**, i8*** %11, align 8
  %1268 = load %70*, %70** %9, align 8
  %1269 = getelementptr inbounds %70, %70* %1268, i32 0, i32 2
  %1270 = load %16*, %16** %1269, align 8
  %1271 = getelementptr inbounds %16, %16* %1270, i32 0, i32 1
  %1272 = load %10*, %10** %1271, align 8
  %1273 = getelementptr inbounds %10, %10* %1272, i32 0, i32 3
  %1274 = getelementptr inbounds [1 x i8], [1 x i8]* %1273, i32 0, i32 0
  %1275 = load %10*, %10** %14, align 8
  %1276 = getelementptr inbounds %10, %10* %1275, i32 0, i32 3
  %1277 = getelementptr inbounds [1 x i8], [1 x i8]* %1276, i32 0, i32 0
  %1278 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %1267, i64 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @117, i32 0, i32 0), i8* %1274, i8* %1277)
  br label %1279

1279:                                             ; preds = %1266, %1263
  br label %1290

1280:                                             ; preds = %1258
  %1281 = load i8**, i8*** %11, align 8
  %1282 = icmp ne i8** %1281, null
  br i1 %1282, label %1283, label %1289

1283:                                             ; preds = %1280
  %1284 = load i8**, i8*** %11, align 8
  %1285 = load %10*, %10** %14, align 8
  %1286 = getelementptr inbounds %10, %10* %1285, i32 0, i32 3
  %1287 = getelementptr inbounds [1 x i8], [1 x i8]* %1286, i32 0, i32 0
  %1288 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %1284, i64 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @118, i32 0, i32 0), i8* %1287)
  br label %1289

1289:                                             ; preds = %1283, %1280
  br label %1290

1290:                                             ; preds = %1289, %1279
  br label %1291

1291:                                             ; preds = %1290, %1254, %1251
  br label %1292

1292:                                             ; preds = %1291, %1250
  %1293 = load %10*, %10** %16, align 8
  call void @135(%10* %1293)
  %1294 = load %10*, %10** %14, align 8
  call void @135(%10* %1294)
  %1295 = load %70*, %70** %9, align 8
  %1296 = getelementptr inbounds %70, %70* %1295, i32 0, i32 4
  %1297 = load %20*, %20** %1296, align 8
  %1298 = icmp ne %20* %1297, null
  br i1 %1298, label %1299, label %1307

1299:                                             ; preds = %1292
  %1300 = load %70*, %70** %9, align 8
  %1301 = getelementptr inbounds %70, %70* %1300, i32 0, i32 4
  %1302 = load %20*, %20** %1301, align 8
  %1303 = getelementptr inbounds %20, %20* %1302, i32 0, i32 2
  %1304 = load %16*, %16** %1303, align 8
  %1305 = load %70*, %70** %9, align 8
  %1306 = getelementptr inbounds %70, %70* %1305, i32 0, i32 3
  store %16* %1304, %16** %1306, align 8
  br label %1307

1307:                                             ; preds = %1299, %1292
  %1308 = load i32, i32* %13, align 4
  %1309 = icmp ne i32 %1308, 0
  br i1 %1309, label %1310, label %1313

1310:                                             ; preds = %1307
  %1311 = load %70*, %70** %9, align 8
  %1312 = getelementptr inbounds %70, %70* %1311, i32 0, i32 0
  store i8 1, i8* %1312, align 8
  br label %1313

1313:                                             ; preds = %1310, %1307
  %1314 = load i32, i32* %13, align 4
  store i32 %1314, i32* %6, align 4
  store i32 1, i32* %24, align 4
  br label %1315

1315:                                             ; preds = %1313, %552, %517, %375
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #2
  %1316 = bitcast %16** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1316) #2
  %1317 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1317) #2
  %1318 = bitcast %5** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1318) #2
  %1319 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1319) #2
  %1320 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1320) #2
  %1321 = bitcast %10** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1321) #2
  %1322 = bitcast %10** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1322) #2
  %1323 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1323) #2
  %1324 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1324) #2
  %1325 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1325) #2
  %1326 = load i32, i32* %6, align 4
  ret i32 %1326
}

; Function Attrs: nounwind uwtable
define internal i32 @183(%10* %0, %16* %1, %70* %2, i32* %3, i8** %4) #0 {
  %6 = alloca %10*, align 8
  %7 = alloca %16*, align 8
  %8 = alloca %70*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i8**, align 8
  %11 = alloca i32, align 4
  %12 = alloca %16*, align 8
  %13 = alloca i64, align 8
  %14 = alloca %10*, align 8
  %15 = alloca i8, align 1
  %16 = alloca %16*, align 8
  %17 = alloca %16*, align 8
  %18 = alloca %4*, align 8
  %19 = alloca %20*, align 8
  store %10* %0, %10** %6, align 8
  store %16* %1, %16** %7, align 8
  store %70* %2, %70** %8, align 8
  store i32* %3, i32** %9, align 8
  store i8** %4, i8*** %10, align 8
  %20 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #2
  store i32 0, i32* %11, align 4
  %21 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #2
  %22 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #2
  %23 = load %10*, %10** %6, align 8
  %24 = getelementptr inbounds %10, %10* %23, i32 0, i32 2
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %13, align 8
  %26 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #2
  br label %27

27:                                               ; preds = %5
  %28 = load i64, i64* %13, align 8
  %29 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %28
  %30 = add i64 %29, 1
  %31 = add i64 %30, 7
  %32 = and i64 %31, -8
  %33 = icmp ugt i64 %32, 32768
  %34 = xor i1 %33, true
  %35 = xor i1 %34, true
  %36 = zext i1 %35 to i32
  %37 = sext i32 %36 to i64
  %38 = call i64 @llvm.expect.i64(i64 %37, i64 0)
  %39 = trunc i64 %38 to i8
  store i8 %39, i8* %15, align 1
  %40 = zext i8 %39 to i32
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %27
  %43 = load i64, i64* %13, align 8
  %44 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %43
  %45 = add i64 %44, 1
  %46 = add i64 %45, 7
  %47 = and i64 %46, -8
  %48 = call noalias i8* @_emalloc(i64 %47) #19
  br label %56

49:                                               ; preds = %27
  %50 = load i64, i64* %13, align 8
  %51 = add i64 ptrtoint (i8* getelementptr inbounds (%10, %10* null, i32 0, i32 3, i32 0) to i64), %50
  %52 = add i64 %51, 1
  %53 = add i64 %52, 7
  %54 = and i64 %53, -8
  %55 = alloca i8, i64 %54, align 16
  br label %56

56:                                               ; preds = %49, %42
  %57 = phi i8* [ %48, %42 ], [ %55, %49 ]
  %58 = bitcast i8* %57 to %10*
  store %10* %58, %10** %14, align 8
  %59 = load %10*, %10** %14, align 8
  %60 = getelementptr inbounds %10, %10* %59, i32 0, i32 0
  %61 = getelementptr inbounds %6, %6* %60, i32 0, i32 0
  store i32 1, i32* %61, align 8
  %62 = load %10*, %10** %14, align 8
  %63 = getelementptr inbounds %10, %10* %62, i32 0, i32 0
  %64 = getelementptr inbounds %6, %6* %63, i32 0, i32 1
  %65 = bitcast %7* %64 to i32*
  store i32 6, i32* %65, align 4
  %66 = load %10*, %10** %14, align 8
  call void @180(%10* %66)
  %67 = load i64, i64* %13, align 8
  %68 = load %10*, %10** %14, align 8
  %69 = getelementptr inbounds %10, %10* %68, i32 0, i32 2
  store i64 %67, i64* %69, align 8
  br label %70

70:                                               ; preds = %56
  br label %71

71:                                               ; preds = %70
  %72 = load %10*, %10** %14, align 8
  %73 = getelementptr inbounds %10, %10* %72, i32 0, i32 3
  %74 = getelementptr inbounds [1 x i8], [1 x i8]* %73, i32 0, i32 0
  %75 = load %10*, %10** %6, align 8
  %76 = getelementptr inbounds %10, %10* %75, i32 0, i32 3
  %77 = getelementptr inbounds [1 x i8], [1 x i8]* %76, i32 0, i32 0
  %78 = load i64, i64* %13, align 8
  %79 = call i8* @zend_str_tolower_copy(i8* %74, i8* %77, i64 %78)
  %80 = load i32*, i32** %9, align 8
  store i32 0, i32* %80, align 4
  %81 = load %10*, %10** %14, align 8
  %82 = getelementptr inbounds %10, %10* %81, i32 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 4
  br i1 %84, label %85, label %120

85:                                               ; preds = %71
  %86 = load %10*, %10** %14, align 8
  %87 = getelementptr inbounds %10, %10* %86, i32 0, i32 3
  %88 = getelementptr inbounds [1 x i8], [1 x i8]* %87, i32 0, i32 0
  %89 = call i32 @memcmp(i8* %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @61, i32 0, i32 0), i64 4) #20
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %120, label %91

91:                                               ; preds = %85
  %92 = load %16*, %16** %7, align 8
  %93 = icmp ne %16* %92, null
  br i1 %93, label %101, label %94

94:                                               ; preds = %91
  %95 = load i8**, i8*** %10, align 8
  %96 = icmp ne i8** %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %94
  %98 = call noalias i8* @_estrdup(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @119, i32 0, i32 0))
  %99 = load i8**, i8*** %10, align 8
  store i8* %98, i8** %99, align 8
  br label %100

100:                                              ; preds = %97, %94
  br label %119

101:                                              ; preds = %91
  %102 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %103 = call %16* @zend_get_called_scope(%4* %102)
  %104 = load %70*, %70** %8, align 8
  %105 = getelementptr inbounds %70, %70* %104, i32 0, i32 3
  store %16* %103, %16** %105, align 8
  %106 = load %16*, %16** %7, align 8
  %107 = load %70*, %70** %8, align 8
  %108 = getelementptr inbounds %70, %70* %107, i32 0, i32 2
  store %16* %106, %16** %108, align 8
  %109 = load %70*, %70** %8, align 8
  %110 = getelementptr inbounds %70, %70* %109, i32 0, i32 4
  %111 = load %20*, %20** %110, align 8
  %112 = icmp ne %20* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %101
  %114 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %115 = call %20* @zend_get_this_object(%4* %114)
  %116 = load %70*, %70** %8, align 8
  %117 = getelementptr inbounds %70, %70* %116, i32 0, i32 4
  store %20* %115, %20** %117, align 8
  br label %118

118:                                              ; preds = %113, %101
  store i32 1, i32* %11, align 4
  br label %119

119:                                              ; preds = %118, %100
  br label %354

120:                                              ; preds = %85, %71
  %121 = load %10*, %10** %14, align 8
  %122 = getelementptr inbounds %10, %10* %121, i32 0, i32 2
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 6
  br i1 %124, label %125, label %176

125:                                              ; preds = %120
  %126 = load %10*, %10** %14, align 8
  %127 = getelementptr inbounds %10, %10* %126, i32 0, i32 3
  %128 = getelementptr inbounds [1 x i8], [1 x i8]* %127, i32 0, i32 0
  %129 = call i32 @memcmp(i8* %128, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @62, i32 0, i32 0), i64 6) #20
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %176, label %131

131:                                              ; preds = %125
  %132 = load %16*, %16** %7, align 8
  %133 = icmp ne %16* %132, null
  br i1 %133, label %141, label %134

134:                                              ; preds = %131
  %135 = load i8**, i8*** %10, align 8
  %136 = icmp ne i8** %135, null
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = call noalias i8* @_estrdup(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @120, i32 0, i32 0))
  %139 = load i8**, i8*** %10, align 8
  store i8* %138, i8** %139, align 8
  br label %140

140:                                              ; preds = %137, %134
  br label %175

141:                                              ; preds = %131
  %142 = load %16*, %16** %7, align 8
  %143 = getelementptr inbounds %16, %16* %142, i32 0, i32 2
  %144 = load %16*, %16** %143, align 8
  %145 = icmp ne %16* %144, null
  br i1 %145, label %153, label %146

146:                                              ; preds = %141
  %147 = load i8**, i8*** %10, align 8
  %148 = icmp ne i8** %147, null
  br i1 %148, label %149, label %152

149:                                              ; preds = %146
  %150 = call noalias i8* @_estrdup(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @121, i32 0, i32 0))
  %151 = load i8**, i8*** %10, align 8
  store i8* %150, i8** %151, align 8
  br label %152

152:                                              ; preds = %149, %146
  br label %174

153:                                              ; preds = %141
  %154 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %155 = call %16* @zend_get_called_scope(%4* %154)
  %156 = load %70*, %70** %8, align 8
  %157 = getelementptr inbounds %70, %70* %156, i32 0, i32 3
  store %16* %155, %16** %157, align 8
  %158 = load %16*, %16** %7, align 8
  %159 = getelementptr inbounds %16, %16* %158, i32 0, i32 2
  %160 = load %16*, %16** %159, align 8
  %161 = load %70*, %70** %8, align 8
  %162 = getelementptr inbounds %70, %70* %161, i32 0, i32 2
  store %16* %160, %16** %162, align 8
  %163 = load %70*, %70** %8, align 8
  %164 = getelementptr inbounds %70, %70* %163, i32 0, i32 4
  %165 = load %20*, %20** %164, align 8
  %166 = icmp ne %20* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %153
  %168 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %169 = call %20* @zend_get_this_object(%4* %168)
  %170 = load %70*, %70** %8, align 8
  %171 = getelementptr inbounds %70, %70* %170, i32 0, i32 4
  store %20* %169, %20** %171, align 8
  br label %172

172:                                              ; preds = %167, %153
  %173 = load i32*, i32** %9, align 8
  store i32 1, i32* %173, align 4
  store i32 1, i32* %11, align 4
  br label %174

174:                                              ; preds = %172, %152
  br label %175

175:                                              ; preds = %174, %140
  br label %353

176:                                              ; preds = %125, %120
  %177 = load %10*, %10** %14, align 8
  %178 = getelementptr inbounds %10, %10* %177, i32 0, i32 2
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %179, 6
  br i1 %180, label %181, label %220

181:                                              ; preds = %176
  %182 = load %10*, %10** %14, align 8
  %183 = getelementptr inbounds %10, %10* %182, i32 0, i32 3
  %184 = getelementptr inbounds [1 x i8], [1 x i8]* %183, i32 0, i32 0
  %185 = call i32 @memcmp(i8* %184, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @122, i32 0, i32 0), i64 6) #20
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %220, label %187

187:                                              ; preds = %181
  %188 = bitcast %16** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %188) #2
  %189 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %190 = call %16* @zend_get_called_scope(%4* %189)
  store %16* %190, %16** %16, align 8
  %191 = load %16*, %16** %16, align 8
  %192 = icmp ne %16* %191, null
  br i1 %192, label %200, label %193

193:                                              ; preds = %187
  %194 = load i8**, i8*** %10, align 8
  %195 = icmp ne i8** %194, null
  br i1 %195, label %196, label %199

196:                                              ; preds = %193
  %197 = call noalias i8* @_estrdup(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @123, i32 0, i32 0))
  %198 = load i8**, i8*** %10, align 8
  store i8* %197, i8** %198, align 8
  br label %199

199:                                              ; preds = %196, %193
  br label %218

200:                                              ; preds = %187
  %201 = load %16*, %16** %16, align 8
  %202 = load %70*, %70** %8, align 8
  %203 = getelementptr inbounds %70, %70* %202, i32 0, i32 3
  store %16* %201, %16** %203, align 8
  %204 = load %16*, %16** %16, align 8
  %205 = load %70*, %70** %8, align 8
  %206 = getelementptr inbounds %70, %70* %205, i32 0, i32 2
  store %16* %204, %16** %206, align 8
  %207 = load %70*, %70** %8, align 8
  %208 = getelementptr inbounds %70, %70* %207, i32 0, i32 4
  %209 = load %20*, %20** %208, align 8
  %210 = icmp ne %20* %209, null
  br i1 %210, label %216, label %211

211:                                              ; preds = %200
  %212 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %213 = call %20* @zend_get_this_object(%4* %212)
  %214 = load %70*, %70** %8, align 8
  %215 = getelementptr inbounds %70, %70* %214, i32 0, i32 4
  store %20* %213, %20** %215, align 8
  br label %216

216:                                              ; preds = %211, %200
  %217 = load i32*, i32** %9, align 8
  store i32 1, i32* %217, align 4
  store i32 1, i32* %11, align 4
  br label %218

218:                                              ; preds = %216, %199
  %219 = bitcast %16** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %219) #2
  br label %352

220:                                              ; preds = %181, %176
  %221 = load %10*, %10** %6, align 8
  %222 = call %16* @zend_lookup_class_ex(%10* %221, %11* null, i32 1)
  store %16* %222, %16** %12, align 8
  %223 = icmp ne %16* %222, null
  br i1 %223, label %224, label %339

224:                                              ; preds = %220
  %225 = bitcast %16** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %225) #2
  %226 = bitcast %4** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %226) #2
  %227 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  store %4* %227, %4** %18, align 8
  br label %228

228:                                              ; preds = %250, %224
  %229 = load %4*, %4** %18, align 8
  %230 = icmp ne %4* %229, null
  br i1 %230, label %231, label %248

231:                                              ; preds = %228
  %232 = load %4*, %4** %18, align 8
  %233 = getelementptr inbounds %4, %4* %232, i32 0, i32 3
  %234 = load %37*, %37** %233, align 8
  %235 = icmp ne %37* %234, null
  br i1 %235, label %236, label %246

236:                                              ; preds = %231
  %237 = load %4*, %4** %18, align 8
  %238 = getelementptr inbounds %4, %4* %237, i32 0, i32 3
  %239 = load %37*, %37** %238, align 8
  %240 = bitcast %37* %239 to i8*
  %241 = load i8, i8* %240, align 8
  %242 = zext i8 %241 to i32
  %243 = and i32 %242, 1
  %244 = icmp eq i32 %243, 0
  %245 = xor i1 %244, true
  br label %246

246:                                              ; preds = %236, %231
  %247 = phi i1 [ true, %231 ], [ %245, %236 ]
  br label %248

248:                                              ; preds = %246, %228
  %249 = phi i1 [ false, %228 ], [ %247, %246 ]
  br i1 %249, label %250, label %254

250:                                              ; preds = %248
  %251 = load %4*, %4** %18, align 8
  %252 = getelementptr inbounds %4, %4* %251, i32 0, i32 5
  %253 = load %4*, %4** %252, align 8
  store %4* %253, %4** %18, align 8
  br label %228

254:                                              ; preds = %248
  %255 = load %4*, %4** %18, align 8
  %256 = icmp ne %4* %255, null
  br i1 %256, label %257, label %264

257:                                              ; preds = %254
  %258 = load %4*, %4** %18, align 8
  %259 = getelementptr inbounds %4, %4* %258, i32 0, i32 3
  %260 = load %37*, %37** %259, align 8
  %261 = bitcast %37* %260 to %60*
  %262 = getelementptr inbounds %60, %60* %261, i32 0, i32 4
  %263 = load %16*, %16** %262, align 8
  br label %265

264:                                              ; preds = %254
  br label %265

265:                                              ; preds = %264, %257
  %266 = phi %16* [ %263, %257 ], [ null, %264 ]
  store %16* %266, %16** %17, align 8
  %267 = load %16*, %16** %12, align 8
  %268 = load %70*, %70** %8, align 8
  %269 = getelementptr inbounds %70, %70* %268, i32 0, i32 2
  store %16* %267, %16** %269, align 8
  %270 = load %16*, %16** %17, align 8
  %271 = icmp ne %16* %270, null
  br i1 %271, label %272, label %316

272:                                              ; preds = %265
  %273 = load %70*, %70** %8, align 8
  %274 = getelementptr inbounds %70, %70* %273, i32 0, i32 4
  %275 = load %20*, %20** %274, align 8
  %276 = icmp ne %20* %275, null
  br i1 %276, label %316, label %277

277:                                              ; preds = %272
  %278 = bitcast %20** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %278) #2
  %279 = load %4*, %4** getelementptr inbounds (%0, %0* @executor_globals, i32 0, i32 16), align 8
  %280 = call %20* @zend_get_this_object(%4* %279)
  store %20* %280, %20** %19, align 8
  %281 = load %20*, %20** %19, align 8
  %282 = icmp ne %20* %281, null
  br i1 %282, label %283, label %308

283:                                              ; preds = %277
  %284 = load %20*, %20** %19, align 8
  %285 = getelementptr inbounds %20, %20* %284, i32 0, i32 2
  %286 = load %16*, %16** %285, align 8
  %287 = load %16*, %16** %17, align 8
  %288 = call zeroext i8 @instanceof_function(%16* %286, %16* %287)
  %289 = zext i8 %288 to i32
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %291, label %308

291:                                              ; preds = %283
  %292 = load %16*, %16** %17, align 8
  %293 = load %70*, %70** %8, align 8
  %294 = getelementptr inbounds %70, %70* %293, i32 0, i32 2
  %295 = load %16*, %16** %294, align 8
  %296 = call zeroext i8 @instanceof_function(%16* %292, %16* %295)
  %297 = zext i8 %296 to i32
  %298 = icmp ne i32 %297, 0
  br i1 %298, label %299, label %308

299:                                              ; preds = %291
  %300 = load %20*, %20** %19, align 8
  %301 = load %70*, %70** %8, align 8
  %302 = getelementptr inbounds %70, %70* %301, i32 0, i32 4
  store %20* %300, %20** %302, align 8
  %303 = load %20*, %20** %19, align 8
  %304 = getelementptr inbounds %20, %20* %303, i32 0, i32 2
  %305 = load %16*, %16** %304, align 8
  %306 = load %70*, %70** %8, align 8
  %307 = getelementptr inbounds %70, %70* %306, i32 0, i32 3
  store %16* %305, %16** %307, align 8
  br label %314

308:                                              ; preds = %291, %283, %277
  %309 = load %70*, %70** %8, align 8
  %310 = getelementptr inbounds %70, %70* %309, i32 0, i32 2
  %311 = load %16*, %16** %310, align 8
  %312 = load %70*, %70** %8, align 8
  %313 = getelementptr inbounds %70, %70* %312, i32 0, i32 3
  store %16* %311, %16** %313, align 8
  br label %314

314:                                              ; preds = %308, %299
  %315 = bitcast %20** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %315) #2
  br label %335

316:                                              ; preds = %272, %265
  %317 = load %70*, %70** %8, align 8
  %318 = getelementptr inbounds %70, %70* %317, i32 0, i32 4
  %319 = load %20*, %20** %318, align 8
  %320 = icmp ne %20* %319, null
  br i1 %320, label %321, label %327

321:                                              ; preds = %316
  %322 = load %70*, %70** %8, align 8
  %323 = getelementptr inbounds %70, %70* %322, i32 0, i32 4
  %324 = load %20*, %20** %323, align 8
  %325 = getelementptr inbounds %20, %20* %324, i32 0, i32 2
  %326 = load %16*, %16** %325, align 8
  br label %331

327:                                              ; preds = %316
  %328 = load %70*, %70** %8, align 8
  %329 = getelementptr inbounds %70, %70* %328, i32 0, i32 2
  %330 = load %16*, %16** %329, align 8
  br label %331

331:                                              ; preds = %327, %321
  %332 = phi %16* [ %326, %321 ], [ %330, %327 ]
  %333 = load %70*, %70** %8, align 8
  %334 = getelementptr inbounds %70, %70* %333, i32 0, i32 3
  store %16* %332, %16** %334, align 8
  br label %335

335:                                              ; preds = %331, %314
  %336 = load i32*, i32** %9, align 8
  store i32 1, i32* %336, align 4
  store i32 1, i32* %11, align 4
  %337 = bitcast %4** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %337) #2
  %338 = bitcast %16** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %338) #2
  br label %351

339:                                              ; preds = %220
  %340 = load i8**, i8*** %10, align 8
  %341 = icmp ne i8** %340, null
  br i1 %341, label %342, label %350

342:                                              ; preds = %339
  %343 = load i8**, i8*** %10, align 8
  %344 = load i64, i64* %13, align 8
  %345 = trunc i64 %344 to i32
  %346 = load %10*, %10** %6, align 8
  %347 = getelementptr inbounds %10, %10* %346, i32 0, i32 3
  %348 = getelementptr inbounds [1 x i8], [1 x i8]* %347, i32 0, i32 0
  %349 = call i64 (i8**, i64, i8*, ...) @zend_spprintf(i8** %343, i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @124, i32 0, i32 0), i32 %345, i8* %348)
  br label %350

350:                                              ; preds = %342, %339
  br label %351

351:                                              ; preds = %350, %335
  br label %352

352:                                              ; preds = %351, %218
  br label %353

353:                                              ; preds = %352, %175
  br label %354

354:                                              ; preds = %353, %119
  br label %355

355:                                              ; preds = %354
  %356 = load i8, i8* %15, align 1
  %357 = icmp ne i8 %356, 0
  %358 = xor i1 %357, true
  %359 = xor i1 %358, true
  %360 = zext i1 %359 to i32
  %361 = sext i32 %360 to i64
  %362 = call i64 @llvm.expect.i64(i64 %361, i64 0)
  %363 = icmp ne i64 %362, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %355
  %365 = load %10*, %10** %14, align 8
  %366 = bitcast %10* %365 to i8*
  call void @_efree(i8* %366)
  br label %367

367:                                              ; preds = %364, %355
  br label %368

368:                                              ; preds = %367
  br label %369

369:                                              ; preds = %368
  %370 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #2
  %371 = bitcast %10** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #2
  %372 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %372) #2
  %373 = bitcast %16** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %373) #2
  %374 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %374) #2
  ret i32 %370
}

declare dso_local %16* @zend_get_executed_scope() #4

declare dso_local void @zend_str_tolower(i8*, i64) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @184(%10* %0) #3 {
  %2 = alloca i32, align 4
  %3 = alloca %10*, align 8
  store %10* %0, %10** %3, align 8
  %4 = load %10*, %10** %3, align 8
  %5 = getelementptr inbounds %10, %10* %4, i32 0, i32 0
  %6 = getelementptr inbounds %6, %6* %5, i32 0, i32 1
  %7 = bitcast %7* %6 to %63*
  %8 = getelementptr inbounds %63, %63* %7, i32 0, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = and i32 %10, 2
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %1
  %14 = load %10*, %10** %3, align 8
  %15 = getelementptr inbounds %10, %10* %14, i32 0, i32 0
  %16 = getelementptr inbounds %6, %6* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, 1
  store i32 %18, i32* %16, align 8
  store i32 %18, i32* %2, align 4
  br label %20

19:                                               ; preds = %1
  store i32 1, i32* %2, align 4
  br label %20

20:                                               ; preds = %19, %13
  %21 = load i32, i32* %2, align 4
  ret i32 %21
}

declare dso_local %10* @zend_string_tolower(%10*) #4

declare dso_local i32 @zend_check_private(%37*, %16*, %10*) #4

declare dso_local i32 @zend_check_protected(%16*, %16*) #4

declare dso_local %37* @zend_get_call_trampoline_func(%16*, %10*, i32) #4

declare dso_local %37* @zend_std_get_static_method(%16*, %10*, %11*) #4

declare dso_local %20* @zend_get_this_object(%4*) #4

declare dso_local noalias i8* @_estrdup(i8*) #4

declare dso_local %16* @zend_get_called_scope(%4*) #4

declare dso_local %16* @zend_lookup_class_ex(%10*, %11*, i32) #4

; Function Attrs: alwaysinline nounwind uwtable
define internal void @185(%58* %0) #3 {
  %2 = alloca %58*, align 8
  %3 = alloca %11*, align 8
  %4 = alloca i32, align 4
  store %58* %0, %58** %2, align 8
  %5 = load %58*, %58** %2, align 8
  %6 = getelementptr inbounds %58, %58* %5, i32 0, i32 0
  %7 = getelementptr inbounds %6, %6* %6, i32 0, i32 1
  %8 = bitcast %7* %7 to %63*
  %9 = getelementptr inbounds %63, %63* %8, i32 0, i32 0
  %10 = load i8, i8* %9, align 4
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 10
  br i1 %12, label %13, label %36

13:                                               ; preds = %1
  %14 = bitcast %11** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #2
  %15 = load %58*, %58** %2, align 8
  %16 = bitcast %58* %15 to %61*
  %17 = getelementptr inbounds %61, %61* %16, i32 0, i32 1
  store %11* %17, %11** %3, align 8
  %18 = load %11*, %11** %3, align 8
  %19 = getelementptr inbounds %11, %11* %18, i32 0, i32 1
  %20 = bitcast %13* %19 to %59*
  %21 = getelementptr inbounds %59, %59* %20, i32 0, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = and i32 %23, 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %13
  store i32 1, i32* %4, align 4
  br label %32

27:                                               ; preds = %13
  %28 = load %11*, %11** %3, align 8
  %29 = getelementptr inbounds %11, %11* %28, i32 0, i32 0
  %30 = bitcast %12* %29 to %58**
  %31 = load %58*, %58** %30, align 8
  store %58* %31, %58** %2, align 8
  store i32 0, i32* %4, align 4
  br label %32

32:                                               ; preds = %27, %26
  %33 = bitcast %11** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #2
  %34 = load i32, i32* %4, align 4
  switch i32 %34, label %53 [
    i32 0, label %35
    i32 1, label %52
  ]

35:                                               ; preds = %32
  br label %36

36:                                               ; preds = %35, %1
  %37 = load %58*, %58** %2, align 8
  %38 = getelementptr inbounds %58, %58* %37, i32 0, i32 0
  %39 = getelementptr inbounds %6, %6* %38, i32 0, i32 1
  %40 = bitcast %7* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, -32768
  %43 = icmp eq i32 %42, 32768
  %44 = xor i1 %43, true
  %45 = xor i1 %44, true
  %46 = zext i1 %45 to i32
  %47 = sext i32 %46 to i64
  %48 = call i64 @llvm.expect.i64(i64 %47, i64 0)
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %36
  %51 = load %58*, %58** %2, align 8
  call void @gc_possible_root(%58* %51)
  br label %52

52:                                               ; preds = %32, %50, %36
  ret void

53:                                               ; preds = %32
  unreachable
}

declare dso_local void @gc_possible_root(%58*) #4

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nounwind }
attributes #3 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind willreturn writeonly }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable willreturn }
attributes #16 = { nounwind readnone }
attributes #17 = { readnone }
attributes #18 = { noreturn }
attributes #19 = { allocsize(0) }
attributes #20 = { nounwind readonly }
attributes #21 = { noreturn nounwind }
attributes #22 = { nounwind returns_twice }
attributes #23 = { allocsize(1) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
