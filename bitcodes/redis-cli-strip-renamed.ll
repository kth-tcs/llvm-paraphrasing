; ModuleID = 'redis-cli-strip-renamed.bc'
source_filename = "redis-cli.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i8*, i8*, i8*, i32, i8* }
%1 = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %2*, %1*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%2 = type { %2*, %1*, i32 }
%3 = type { i32 }
%4 = type { %5*, i8*, [2 x %6], i64, i64 }
%5 = type { i64 (i8*)*, i8* (i8*, i8*)*, i8* (i8*, i8*)*, i32 (i8*, i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }
%6 = type { %7**, i64, i64, i64 }
%7 = type { i8*, %8, %7* }
%8 = type { i8* }
%9 = type { i8*, i32 (i32, i8**)*, i32, i8*, i8* }
%10 = type { %11*, i32, [128 x i8], i32, i32, i8*, %13*, i32, %16*, %17, %18, %19*, i64, i8* }
%11 = type { void (i8*)*, void (%12*)*, void (%12*)*, i32 (%10*, i8*, i64)*, i32 (%10*)* }
%12 = type opaque
%13 = type { i32, [128 x i8], i8*, i64, i64, i64, [9 x %14], i32, i8*, %15*, i8* }
%14 = type { i32, i32, i32, i8*, %14*, i8* }
%15 = type { i8* (%14*, i8*, i64)*, i8* (%14*, i64)*, i8* (%14*, i64)*, i8* (%14*, double, i8*, i64)*, i8* (%14*)*, i8* (%14*, i32)*, void (i8*)* }
%16 = type { i64, i64 }
%17 = type { i8*, i8*, i32 }
%18 = type { i8* }
%19 = type opaque
%20 = type { i8*, i8*, i8*, i64, i64, i64, i8* }
%21 = type { i8*, i32, i8*, i32, i8*, i8*, i8*, i8*, i8*, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i8*, i32, i8*, i32, i8*, [128 x i8], i8*, i32, i32, i32, i32, i32, i32, %22, i32, i32 }
%22 = type { i8*, i32, i8**, i32, i32, i8*, i8*, i8**, i32, i8*, i32, i32, i32, float, i8* }
%23 = type { %24*, %24*, i32 }
%24 = type { %25*, %25*, i8* (i8*)*, void (i8*)*, i32 (i8*, i8*)*, i64 }
%25 = type { %25*, %25*, i8* }
%26 = type { i64, i64, i32 }
%27 = type { i32, i32, i8**, i8*, %0* }
%28 = type { %10*, i8*, i8*, i32, i64, i64, i64, i32, %24*, i8*, i32, [16384 x i8], i32, i32, %24*, i8**, i8**, i32, i32, float, i32 }
%29 = type { %28**, %28**, i32, i32 }
%30 = type { %25*, i32 }
%31 = type { i32, i64, double, i64, i8*, [4 x i8], i64, %31** }
%32 = type { %28*, i32 }
%33 = type { %4*, i64, i32, i32, %7*, %7*, i64 }
%34 = type { i32, i32, i8*, i8* }
%35 = type { i8, i8, i8, [0 x i8] }
%36 = type <{ i16, i16, i8, [0 x i8] }>
%37 = type <{ i32, i32, i8, [0 x i8] }>
%38 = type <{ i64, i64, i8, [0 x i8] }>
%39 = type { i8*, i8*, i32, i32 }
%40 = type { i32, i32 }
%41 = type { i64, i8** }

@0 = private unnamed_addr constant [8 x i8] c"ACL CAT\00", align 1
@1 = private unnamed_addr constant [15 x i8] c"[categoryname]\00", align 1
@2 = private unnamed_addr constant [58 x i8] c"List the ACL categories or the commands inside a category\00", align 1
@3 = private unnamed_addr constant [6 x i8] c"6.0.0\00", align 1
@4 = private unnamed_addr constant [12 x i8] c"ACL DELUSER\00", align 1
@5 = private unnamed_addr constant [24 x i8] c"username [username ...]\00", align 1
@6 = private unnamed_addr constant [56 x i8] c"Remove the specified ACL users and the associated rules\00", align 1
@7 = private unnamed_addr constant [12 x i8] c"ACL GENPASS\00", align 1
@8 = private unnamed_addr constant [7 x i8] c"[bits]\00", align 1
@9 = private unnamed_addr constant [61 x i8] c"Generate a pseudorandom secure password to use for ACL users\00", align 1
@10 = private unnamed_addr constant [9 x i8] c"ACL LIST\00", align 1
@11 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@12 = private unnamed_addr constant [53 x i8] c"List the current ACL rules in ACL config file format\00", align 1
@13 = private unnamed_addr constant [9 x i8] c"ACL LOAD\00", align 1
@14 = private unnamed_addr constant [45 x i8] c"Reload the ACLs from the configured ACL file\00", align 1
@15 = private unnamed_addr constant [8 x i8] c"ACL LOG\00", align 1
@16 = private unnamed_addr constant [17 x i8] c"[count or RESET]\00", align 1
@17 = private unnamed_addr constant [51 x i8] c"List latest events denied because of ACLs in place\00", align 1
@18 = private unnamed_addr constant [9 x i8] c"ACL SAVE\00", align 1
@19 = private unnamed_addr constant [54 x i8] c"Save the current ACL rules in the configured ACL file\00", align 1
@20 = private unnamed_addr constant [12 x i8] c"ACL SETUSER\00", align 1
@21 = private unnamed_addr constant [16 x i8] c"rule [rule ...]\00", align 1
@22 = private unnamed_addr constant [51 x i8] c"Modify or create the rules for a specific ACL user\00", align 1
@23 = private unnamed_addr constant [10 x i8] c"ACL USERS\00", align 1
@24 = private unnamed_addr constant [50 x i8] c"List the username of all the configured ACL rules\00", align 1
@25 = private unnamed_addr constant [11 x i8] c"ACL WHOAMI\00", align 1
@26 = private unnamed_addr constant [65 x i8] c"Return the name of the user associated to the current connection\00", align 1
@27 = private unnamed_addr constant [7 x i8] c"APPEND\00", align 1
@28 = private unnamed_addr constant [10 x i8] c"key value\00", align 1
@29 = private unnamed_addr constant [24 x i8] c"Append a value to a key\00", align 1
@30 = private unnamed_addr constant [6 x i8] c"2.0.0\00", align 1
@31 = private unnamed_addr constant [5 x i8] c"AUTH\00", align 1
@32 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@33 = private unnamed_addr constant [27 x i8] c"Authenticate to the server\00", align 1
@34 = private unnamed_addr constant [6 x i8] c"1.0.0\00", align 1
@35 = private unnamed_addr constant [13 x i8] c"BGREWRITEAOF\00", align 1
@36 = private unnamed_addr constant [44 x i8] c"Asynchronously rewrite the append-only file\00", align 1
@37 = private unnamed_addr constant [7 x i8] c"BGSAVE\00", align 1
@38 = private unnamed_addr constant [11 x i8] c"[SCHEDULE]\00", align 1
@39 = private unnamed_addr constant [40 x i8] c"Asynchronously save the dataset to disk\00", align 1
@40 = private unnamed_addr constant [9 x i8] c"BITCOUNT\00", align 1
@41 = private unnamed_addr constant [16 x i8] c"key [start end]\00", align 1
@42 = private unnamed_addr constant [27 x i8] c"Count set bits in a string\00", align 1
@43 = private unnamed_addr constant [6 x i8] c"2.6.0\00", align 1
@44 = private unnamed_addr constant [9 x i8] c"BITFIELD\00", align 1
@45 = private unnamed_addr constant [102 x i8] c"key [GET type offset] [SET type offset value] [INCRBY type offset increment] [OVERFLOW WRAP|SAT|FAIL]\00", align 1
@46 = private unnamed_addr constant [57 x i8] c"Perform arbitrary bitfield integer operations on strings\00", align 1
@47 = private unnamed_addr constant [6 x i8] c"3.2.0\00", align 1
@48 = private unnamed_addr constant [6 x i8] c"BITOP\00", align 1
@49 = private unnamed_addr constant [32 x i8] c"operation destkey key [key ...]\00", align 1
@50 = private unnamed_addr constant [43 x i8] c"Perform bitwise operations between strings\00", align 1
@51 = private unnamed_addr constant [7 x i8] c"BITPOS\00", align 1
@52 = private unnamed_addr constant [22 x i8] c"key bit [start] [end]\00", align 1
@53 = private unnamed_addr constant [40 x i8] c"Find first bit set or clear in a string\00", align 1
@54 = private unnamed_addr constant [6 x i8] c"2.8.7\00", align 1
@55 = private unnamed_addr constant [6 x i8] c"BLPOP\00", align 1
@56 = private unnamed_addr constant [22 x i8] c"key [key ...] timeout\00", align 1
@57 = private unnamed_addr constant [76 x i8] c"Remove and get the first element in a list, or block until one is available\00", align 1
@58 = private unnamed_addr constant [6 x i8] c"BRPOP\00", align 1
@59 = private unnamed_addr constant [75 x i8] c"Remove and get the last element in a list, or block until one is available\00", align 1
@60 = private unnamed_addr constant [11 x i8] c"BRPOPLPUSH\00", align 1
@61 = private unnamed_addr constant [27 x i8] c"source destination timeout\00", align 1
@62 = private unnamed_addr constant [99 x i8] c"Pop an element from a list, push it to another list and return it; or block until one is available\00", align 1
@63 = private unnamed_addr constant [6 x i8] c"2.2.0\00", align 1
@64 = private unnamed_addr constant [9 x i8] c"BZPOPMAX\00", align 1
@65 = private unnamed_addr constant [114 x i8] c"Remove and return the member with the highest score from one or more sorted sets, or block until one is available\00", align 1
@66 = private unnamed_addr constant [6 x i8] c"5.0.0\00", align 1
@67 = private unnamed_addr constant [9 x i8] c"BZPOPMIN\00", align 1
@68 = private unnamed_addr constant [113 x i8] c"Remove and return the member with the lowest score from one or more sorted sets, or block until one is available\00", align 1
@69 = private unnamed_addr constant [15 x i8] c"CLIENT CACHING\00", align 1
@70 = private unnamed_addr constant [7 x i8] c"YES|NO\00", align 1
@71 = private unnamed_addr constant [67 x i8] c"Instruct the server about tracking or not keys in the next request\00", align 1
@72 = private unnamed_addr constant [15 x i8] c"CLIENT GETNAME\00", align 1
@73 = private unnamed_addr constant [32 x i8] c"Get the current connection name\00", align 1
@74 = private unnamed_addr constant [6 x i8] c"2.6.9\00", align 1
@75 = private unnamed_addr constant [16 x i8] c"CLIENT GETREDIR\00", align 1
@76 = private unnamed_addr constant [56 x i8] c"Get tracking notifications redirection client ID if any\00", align 1
@77 = private unnamed_addr constant [10 x i8] c"CLIENT ID\00", align 1
@78 = private unnamed_addr constant [49 x i8] c"Returns the client ID for the current connection\00", align 1
@79 = private unnamed_addr constant [12 x i8] c"CLIENT KILL\00", align 1
@80 = private unnamed_addr constant [90 x i8] c"[ip:port] [ID client-id] [TYPE normal|master|slave|pubsub] [ADDR ip:port] [SKIPME yes/no]\00", align 1
@81 = private unnamed_addr constant [32 x i8] c"Kill the connection of a client\00", align 1
@82 = private unnamed_addr constant [6 x i8] c"2.4.0\00", align 1
@83 = private unnamed_addr constant [12 x i8] c"CLIENT LIST\00", align 1
@84 = private unnamed_addr constant [36 x i8] c"[TYPE normal|master|replica|pubsub]\00", align 1
@85 = private unnamed_addr constant [35 x i8] c"Get the list of client connections\00", align 1
@86 = private unnamed_addr constant [13 x i8] c"CLIENT PAUSE\00", align 1
@87 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@88 = private unnamed_addr constant [52 x i8] c"Stop processing commands from clients for some time\00", align 1
@89 = private unnamed_addr constant [7 x i8] c"2.9.50\00", align 1
@90 = private unnamed_addr constant [13 x i8] c"CLIENT REPLY\00", align 1
@91 = private unnamed_addr constant [12 x i8] c"ON|OFF|SKIP\00", align 1
@92 = private unnamed_addr constant [49 x i8] c"Instruct the server whether to reply to commands\00", align 1
@93 = private unnamed_addr constant [4 x i8] c"3.2\00", align 1
@94 = private unnamed_addr constant [15 x i8] c"CLIENT SETNAME\00", align 1
@95 = private unnamed_addr constant [16 x i8] c"connection-name\00", align 1
@96 = private unnamed_addr constant [32 x i8] c"Set the current connection name\00", align 1
@97 = private unnamed_addr constant [16 x i8] c"CLIENT TRACKING\00", align 1
@98 = private unnamed_addr constant [78 x i8] c"ON|OFF [REDIRECT client-id] [PREFIX prefix] [BCAST] [OPTIN] [OPTOUT] [NOLOOP]\00", align 1
@99 = private unnamed_addr constant [62 x i8] c"Enable or disable server assisted client side caching support\00", align 1
@100 = private unnamed_addr constant [15 x i8] c"CLIENT UNBLOCK\00", align 1
@101 = private unnamed_addr constant [26 x i8] c"client-id [TIMEOUT|ERROR]\00", align 1
@102 = private unnamed_addr constant [75 x i8] c"Unblock a client blocked in a blocking command from a different connection\00", align 1
@103 = private unnamed_addr constant [17 x i8] c"CLUSTER ADDSLOTS\00", align 1
@104 = private unnamed_addr constant [16 x i8] c"slot [slot ...]\00", align 1
@105 = private unnamed_addr constant [40 x i8] c"Assign new hash slots to receiving node\00", align 1
@106 = private unnamed_addr constant [6 x i8] c"3.0.0\00", align 1
@107 = private unnamed_addr constant [18 x i8] c"CLUSTER BUMPEPOCH\00", align 1
@108 = private unnamed_addr constant [33 x i8] c"Advance the cluster config epoch\00", align 1
@109 = private unnamed_addr constant [30 x i8] c"CLUSTER COUNT-FAILURE-REPORTS\00", align 1
@110 = private unnamed_addr constant [8 x i8] c"node-id\00", align 1
@111 = private unnamed_addr constant [61 x i8] c"Return the number of failure reports active for a given node\00", align 1
@112 = private unnamed_addr constant [24 x i8] c"CLUSTER COUNTKEYSINSLOT\00", align 1
@113 = private unnamed_addr constant [5 x i8] c"slot\00", align 1
@114 = private unnamed_addr constant [59 x i8] c"Return the number of local keys in the specified hash slot\00", align 1
@115 = private unnamed_addr constant [17 x i8] c"CLUSTER DELSLOTS\00", align 1
@116 = private unnamed_addr constant [44 x i8] c"Set hash slots as unbound in receiving node\00", align 1
@117 = private unnamed_addr constant [17 x i8] c"CLUSTER FAILOVER\00", align 1
@118 = private unnamed_addr constant [17 x i8] c"[FORCE|TAKEOVER]\00", align 1
@119 = private unnamed_addr constant [61 x i8] c"Forces a replica to perform a manual failover of its master.\00", align 1
@120 = private unnamed_addr constant [19 x i8] c"CLUSTER FLUSHSLOTS\00", align 1
@121 = private unnamed_addr constant [38 x i8] c"Delete a node's own slots information\00", align 1
@122 = private unnamed_addr constant [15 x i8] c"CLUSTER FORGET\00", align 1
@123 = private unnamed_addr constant [35 x i8] c"Remove a node from the nodes table\00", align 1
@124 = private unnamed_addr constant [22 x i8] c"CLUSTER GETKEYSINSLOT\00", align 1
@125 = private unnamed_addr constant [11 x i8] c"slot count\00", align 1
@126 = private unnamed_addr constant [50 x i8] c"Return local key names in the specified hash slot\00", align 1
@127 = private unnamed_addr constant [13 x i8] c"CLUSTER INFO\00", align 1
@128 = private unnamed_addr constant [45 x i8] c"Provides info about Redis Cluster node state\00", align 1
@129 = private unnamed_addr constant [16 x i8] c"CLUSTER KEYSLOT\00", align 1
@130 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@131 = private unnamed_addr constant [43 x i8] c"Returns the hash slot of the specified key\00", align 1
@132 = private unnamed_addr constant [13 x i8] c"CLUSTER MEET\00", align 1
@133 = private unnamed_addr constant [8 x i8] c"ip port\00", align 1
@134 = private unnamed_addr constant [52 x i8] c"Force a node cluster to handshake with another node\00", align 1
@135 = private unnamed_addr constant [13 x i8] c"CLUSTER MYID\00", align 1
@136 = private unnamed_addr constant [19 x i8] c"Return the node id\00", align 1
@137 = private unnamed_addr constant [14 x i8] c"CLUSTER NODES\00", align 1
@138 = private unnamed_addr constant [32 x i8] c"Get Cluster config for the node\00", align 1
@139 = private unnamed_addr constant [17 x i8] c"CLUSTER REPLICAS\00", align 1
@140 = private unnamed_addr constant [48 x i8] c"List replica nodes of the specified master node\00", align 1
@141 = private unnamed_addr constant [18 x i8] c"CLUSTER REPLICATE\00", align 1
@142 = private unnamed_addr constant [61 x i8] c"Reconfigure a node as a replica of the specified master node\00", align 1
@143 = private unnamed_addr constant [14 x i8] c"CLUSTER RESET\00", align 1
@144 = private unnamed_addr constant [12 x i8] c"[HARD|SOFT]\00", align 1
@145 = private unnamed_addr constant [27 x i8] c"Reset a Redis Cluster node\00", align 1
@146 = private unnamed_addr constant [19 x i8] c"CLUSTER SAVECONFIG\00", align 1
@147 = private unnamed_addr constant [46 x i8] c"Forces the node to save cluster state on disk\00", align 1
@148 = private unnamed_addr constant [25 x i8] c"CLUSTER SET-CONFIG-EPOCH\00", align 1
@149 = private unnamed_addr constant [13 x i8] c"config-epoch\00", align 1
@150 = private unnamed_addr constant [42 x i8] c"Set the configuration epoch in a new node\00", align 1
@151 = private unnamed_addr constant [16 x i8] c"CLUSTER SETSLOT\00", align 1
@152 = private unnamed_addr constant [47 x i8] c"slot IMPORTING|MIGRATING|STABLE|NODE [node-id]\00", align 1
@153 = private unnamed_addr constant [36 x i8] c"Bind a hash slot to a specific node\00", align 1
@154 = private unnamed_addr constant [15 x i8] c"CLUSTER SLAVES\00", align 1
@155 = private unnamed_addr constant [14 x i8] c"CLUSTER SLOTS\00", align 1
@156 = private unnamed_addr constant [43 x i8] c"Get array of Cluster slot to node mappings\00", align 1
@157 = private unnamed_addr constant [8 x i8] c"COMMAND\00", align 1
@158 = private unnamed_addr constant [35 x i8] c"Get array of Redis command details\00", align 1
@159 = private unnamed_addr constant [7 x i8] c"2.8.13\00", align 1
@160 = private unnamed_addr constant [14 x i8] c"COMMAND COUNT\00", align 1
@161 = private unnamed_addr constant [35 x i8] c"Get total number of Redis commands\00", align 1
@162 = private unnamed_addr constant [16 x i8] c"COMMAND GETKEYS\00", align 1
@163 = private unnamed_addr constant [40 x i8] c"Extract keys given a full Redis command\00", align 1
@164 = private unnamed_addr constant [13 x i8] c"COMMAND INFO\00", align 1
@165 = private unnamed_addr constant [32 x i8] c"command-name [command-name ...]\00", align 1
@166 = private unnamed_addr constant [44 x i8] c"Get array of specific Redis command details\00", align 1
@167 = private unnamed_addr constant [11 x i8] c"CONFIG GET\00", align 1
@168 = private unnamed_addr constant [10 x i8] c"parameter\00", align 1
@169 = private unnamed_addr constant [43 x i8] c"Get the value of a configuration parameter\00", align 1
@170 = private unnamed_addr constant [17 x i8] c"CONFIG RESETSTAT\00", align 1
@171 = private unnamed_addr constant [33 x i8] c"Reset the stats returned by INFO\00", align 1
@172 = private unnamed_addr constant [15 x i8] c"CONFIG REWRITE\00", align 1
@173 = private unnamed_addr constant [64 x i8] c"Rewrite the configuration file with the in memory configuration\00", align 1
@174 = private unnamed_addr constant [6 x i8] c"2.8.0\00", align 1
@175 = private unnamed_addr constant [11 x i8] c"CONFIG SET\00", align 1
@176 = private unnamed_addr constant [16 x i8] c"parameter value\00", align 1
@177 = private unnamed_addr constant [49 x i8] c"Set a configuration parameter to the given value\00", align 1
@178 = private unnamed_addr constant [7 x i8] c"DBSIZE\00", align 1
@179 = private unnamed_addr constant [51 x i8] c"Return the number of keys in the selected database\00", align 1
@180 = private unnamed_addr constant [13 x i8] c"DEBUG OBJECT\00", align 1
@181 = private unnamed_addr constant [38 x i8] c"Get debugging information about a key\00", align 1
@182 = private unnamed_addr constant [15 x i8] c"DEBUG SEGFAULT\00", align 1
@183 = private unnamed_addr constant [22 x i8] c"Make the server crash\00", align 1
@184 = private unnamed_addr constant [5 x i8] c"DECR\00", align 1
@185 = private unnamed_addr constant [44 x i8] c"Decrement the integer value of a key by one\00", align 1
@186 = private unnamed_addr constant [7 x i8] c"DECRBY\00", align 1
@187 = private unnamed_addr constant [14 x i8] c"key decrement\00", align 1
@188 = private unnamed_addr constant [57 x i8] c"Decrement the integer value of a key by the given number\00", align 1
@189 = private unnamed_addr constant [4 x i8] c"DEL\00", align 1
@190 = private unnamed_addr constant [14 x i8] c"key [key ...]\00", align 1
@191 = private unnamed_addr constant [13 x i8] c"Delete a key\00", align 1
@192 = private unnamed_addr constant [8 x i8] c"DISCARD\00", align 1
@193 = private unnamed_addr constant [40 x i8] c"Discard all commands issued after MULTI\00", align 1
@194 = private unnamed_addr constant [5 x i8] c"DUMP\00", align 1
@195 = private unnamed_addr constant [70 x i8] c"Return a serialized version of the value stored at the specified key.\00", align 1
@196 = private unnamed_addr constant [5 x i8] c"ECHO\00", align 1
@197 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@198 = private unnamed_addr constant [22 x i8] c"Echo the given string\00", align 1
@199 = private unnamed_addr constant [5 x i8] c"EVAL\00", align 1
@200 = private unnamed_addr constant [43 x i8] c"script numkeys key [key ...] arg [arg ...]\00", align 1
@201 = private unnamed_addr constant [33 x i8] c"Execute a Lua script server side\00", align 1
@202 = private unnamed_addr constant [8 x i8] c"EVALSHA\00", align 1
@203 = private unnamed_addr constant [41 x i8] c"sha1 numkeys key [key ...] arg [arg ...]\00", align 1
@204 = private unnamed_addr constant [5 x i8] c"EXEC\00", align 1
@205 = private unnamed_addr constant [40 x i8] c"Execute all commands issued after MULTI\00", align 1
@206 = private unnamed_addr constant [6 x i8] c"1.2.0\00", align 1
@207 = private unnamed_addr constant [7 x i8] c"EXISTS\00", align 1
@208 = private unnamed_addr constant [26 x i8] c"Determine if a key exists\00", align 1
@209 = private unnamed_addr constant [7 x i8] c"EXPIRE\00", align 1
@210 = private unnamed_addr constant [12 x i8] c"key seconds\00", align 1
@211 = private unnamed_addr constant [36 x i8] c"Set a key's time to live in seconds\00", align 1
@212 = private unnamed_addr constant [9 x i8] c"EXPIREAT\00", align 1
@213 = private unnamed_addr constant [14 x i8] c"key timestamp\00", align 1
@214 = private unnamed_addr constant [49 x i8] c"Set the expiration for a key as a UNIX timestamp\00", align 1
@215 = private unnamed_addr constant [9 x i8] c"FLUSHALL\00", align 1
@216 = private unnamed_addr constant [8 x i8] c"[ASYNC]\00", align 1
@217 = private unnamed_addr constant [35 x i8] c"Remove all keys from all databases\00", align 1
@218 = private unnamed_addr constant [8 x i8] c"FLUSHDB\00", align 1
@219 = private unnamed_addr constant [42 x i8] c"Remove all keys from the current database\00", align 1
@220 = private unnamed_addr constant [7 x i8] c"GEOADD\00", align 1
@221 = private unnamed_addr constant [62 x i8] c"key longitude latitude member [longitude latitude member ...]\00", align 1
@222 = private unnamed_addr constant [88 x i8] c"Add one or more geospatial items in the geospatial index represented using a sorted set\00", align 1
@223 = private unnamed_addr constant [8 x i8] c"GEODIST\00", align 1
@224 = private unnamed_addr constant [33 x i8] c"key member1 member2 [m|km|ft|mi]\00", align 1
@225 = private unnamed_addr constant [63 x i8] c"Returns the distance between two members of a geospatial index\00", align 1
@226 = private unnamed_addr constant [8 x i8] c"GEOHASH\00", align 1
@227 = private unnamed_addr constant [24 x i8] c"key member [member ...]\00", align 1
@228 = private unnamed_addr constant [66 x i8] c"Returns members of a geospatial index as standard geohash strings\00", align 1
@229 = private unnamed_addr constant [7 x i8] c"GEOPOS\00", align 1
@230 = private unnamed_addr constant [64 x i8] c"Returns longitude and latitude of members of a geospatial index\00", align 1
@231 = private unnamed_addr constant [10 x i8] c"GEORADIUS\00", align 1
@232 = private unnamed_addr constant [128 x i8] c"key longitude latitude radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]\00", align 1
@233 = private unnamed_addr constant [115 x i8] c"Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a point\00", align 1
@234 = private unnamed_addr constant [18 x i8] c"GEORADIUSBYMEMBER\00", align 1
@235 = private unnamed_addr constant [116 x i8] c"key member radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]\00", align 1
@236 = private unnamed_addr constant [116 x i8] c"Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a member\00", align 1
@237 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@238 = private unnamed_addr constant [23 x i8] c"Get the value of a key\00", align 1
@239 = private unnamed_addr constant [7 x i8] c"GETBIT\00", align 1
@240 = private unnamed_addr constant [11 x i8] c"key offset\00", align 1
@241 = private unnamed_addr constant [66 x i8] c"Returns the bit value at offset in the string value stored at key\00", align 1
@242 = private unnamed_addr constant [9 x i8] c"GETRANGE\00", align 1
@243 = private unnamed_addr constant [14 x i8] c"key start end\00", align 1
@244 = private unnamed_addr constant [46 x i8] c"Get a substring of the string stored at a key\00", align 1
@245 = private unnamed_addr constant [7 x i8] c"GETSET\00", align 1
@246 = private unnamed_addr constant [55 x i8] c"Set the string value of a key and return its old value\00", align 1
@247 = private unnamed_addr constant [5 x i8] c"HDEL\00", align 1
@248 = private unnamed_addr constant [22 x i8] c"key field [field ...]\00", align 1
@249 = private unnamed_addr constant [31 x i8] c"Delete one or more hash fields\00", align 1
@250 = private unnamed_addr constant [6 x i8] c"HELLO\00", align 1
@251 = private unnamed_addr constant [55 x i8] c"protover [AUTH username password] [SETNAME clientname]\00", align 1
@252 = private unnamed_addr constant [22 x i8] c"switch Redis protocol\00", align 1
@253 = private unnamed_addr constant [8 x i8] c"HEXISTS\00", align 1
@254 = private unnamed_addr constant [10 x i8] c"key field\00", align 1
@255 = private unnamed_addr constant [33 x i8] c"Determine if a hash field exists\00", align 1
@256 = private unnamed_addr constant [5 x i8] c"HGET\00", align 1
@257 = private unnamed_addr constant [30 x i8] c"Get the value of a hash field\00", align 1
@258 = private unnamed_addr constant [8 x i8] c"HGETALL\00", align 1
@259 = private unnamed_addr constant [40 x i8] c"Get all the fields and values in a hash\00", align 1
@260 = private unnamed_addr constant [8 x i8] c"HINCRBY\00", align 1
@261 = private unnamed_addr constant [20 x i8] c"key field increment\00", align 1
@262 = private unnamed_addr constant [64 x i8] c"Increment the integer value of a hash field by the given number\00", align 1
@263 = private unnamed_addr constant [13 x i8] c"HINCRBYFLOAT\00", align 1
@264 = private unnamed_addr constant [62 x i8] c"Increment the float value of a hash field by the given amount\00", align 1
@265 = private unnamed_addr constant [6 x i8] c"HKEYS\00", align 1
@266 = private unnamed_addr constant [29 x i8] c"Get all the fields in a hash\00", align 1
@267 = private unnamed_addr constant [5 x i8] c"HLEN\00", align 1
@268 = private unnamed_addr constant [35 x i8] c"Get the number of fields in a hash\00", align 1
@269 = private unnamed_addr constant [6 x i8] c"HMGET\00", align 1
@270 = private unnamed_addr constant [44 x i8] c"Get the values of all the given hash fields\00", align 1
@271 = private unnamed_addr constant [6 x i8] c"HMSET\00", align 1
@272 = private unnamed_addr constant [34 x i8] c"key field value [field value ...]\00", align 1
@273 = private unnamed_addr constant [44 x i8] c"Set multiple hash fields to multiple values\00", align 1
@274 = private unnamed_addr constant [6 x i8] c"HSCAN\00", align 1
@275 = private unnamed_addr constant [41 x i8] c"key cursor [MATCH pattern] [COUNT count]\00", align 1
@276 = private unnamed_addr constant [56 x i8] c"Incrementally iterate hash fields and associated values\00", align 1
@277 = private unnamed_addr constant [5 x i8] c"HSET\00", align 1
@278 = private unnamed_addr constant [37 x i8] c"Set the string value of a hash field\00", align 1
@279 = private unnamed_addr constant [7 x i8] c"HSETNX\00", align 1
@280 = private unnamed_addr constant [16 x i8] c"key field value\00", align 1
@281 = private unnamed_addr constant [64 x i8] c"Set the value of a hash field, only if the field does not exist\00", align 1
@282 = private unnamed_addr constant [8 x i8] c"HSTRLEN\00", align 1
@283 = private unnamed_addr constant [44 x i8] c"Get the length of the value of a hash field\00", align 1
@284 = private unnamed_addr constant [6 x i8] c"HVALS\00", align 1
@285 = private unnamed_addr constant [29 x i8] c"Get all the values in a hash\00", align 1
@286 = private unnamed_addr constant [5 x i8] c"INCR\00", align 1
@287 = private unnamed_addr constant [44 x i8] c"Increment the integer value of a key by one\00", align 1
@288 = private unnamed_addr constant [7 x i8] c"INCRBY\00", align 1
@289 = private unnamed_addr constant [14 x i8] c"key increment\00", align 1
@290 = private unnamed_addr constant [57 x i8] c"Increment the integer value of a key by the given amount\00", align 1
@291 = private unnamed_addr constant [12 x i8] c"INCRBYFLOAT\00", align 1
@292 = private unnamed_addr constant [55 x i8] c"Increment the float value of a key by the given amount\00", align 1
@293 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@294 = private unnamed_addr constant [10 x i8] c"[section]\00", align 1
@295 = private unnamed_addr constant [48 x i8] c"Get information and statistics about the server\00", align 1
@296 = private unnamed_addr constant [5 x i8] c"KEYS\00", align 1
@297 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@298 = private unnamed_addr constant [41 x i8] c"Find all keys matching the given pattern\00", align 1
@299 = private unnamed_addr constant [9 x i8] c"LASTSAVE\00", align 1
@300 = private unnamed_addr constant [60 x i8] c"Get the UNIX time stamp of the last successful save to disk\00", align 1
@301 = private unnamed_addr constant [15 x i8] c"LATENCY DOCTOR\00", align 1
@302 = private unnamed_addr constant [49 x i8] c"Return a human readable latency analysis report.\00", align 1
@303 = private unnamed_addr constant [14 x i8] c"LATENCY GRAPH\00", align 1
@304 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@305 = private unnamed_addr constant [38 x i8] c"Return a latency graph for the event.\00", align 1
@306 = private unnamed_addr constant [13 x i8] c"LATENCY HELP\00", align 1
@307 = private unnamed_addr constant [51 x i8] c"Show helpful text about the different subcommands.\00", align 1
@308 = private unnamed_addr constant [16 x i8] c"LATENCY HISTORY\00", align 1
@309 = private unnamed_addr constant [48 x i8] c"Return timestamp-latency samples for the event.\00", align 1
@310 = private unnamed_addr constant [15 x i8] c"LATENCY LATEST\00", align 1
@311 = private unnamed_addr constant [50 x i8] c"Return the latest latency samples for all events.\00", align 1
@312 = private unnamed_addr constant [14 x i8] c"LATENCY RESET\00", align 1
@313 = private unnamed_addr constant [8 x i8] c"[event]\00", align 1
@314 = private unnamed_addr constant [43 x i8] c"Reset latency data for one or more events.\00", align 1
@315 = private unnamed_addr constant [7 x i8] c"LINDEX\00", align 1
@316 = private unnamed_addr constant [10 x i8] c"key index\00", align 1
@317 = private unnamed_addr constant [40 x i8] c"Get an element from a list by its index\00", align 1
@318 = private unnamed_addr constant [8 x i8] c"LINSERT\00", align 1
@319 = private unnamed_addr constant [31 x i8] c"key BEFORE|AFTER pivot element\00", align 1
@320 = private unnamed_addr constant [60 x i8] c"Insert an element before or after another element in a list\00", align 1
@321 = private unnamed_addr constant [5 x i8] c"LLEN\00", align 1
@322 = private unnamed_addr constant [25 x i8] c"Get the length of a list\00", align 1
@323 = private unnamed_addr constant [7 x i8] c"LOLWUT\00", align 1
@324 = private unnamed_addr constant [18 x i8] c"[VERSION version]\00", align 1
@325 = private unnamed_addr constant [48 x i8] c"Display some computer art and the Redis version\00", align 1
@326 = private unnamed_addr constant [5 x i8] c"LPOP\00", align 1
@327 = private unnamed_addr constant [43 x i8] c"Remove and get the first element in a list\00", align 1
@328 = private unnamed_addr constant [6 x i8] c"LPUSH\00", align 1
@329 = private unnamed_addr constant [26 x i8] c"key element [element ...]\00", align 1
@330 = private unnamed_addr constant [43 x i8] c"Prepend one or multiple elements to a list\00", align 1
@331 = private unnamed_addr constant [7 x i8] c"LPUSHX\00", align 1
@332 = private unnamed_addr constant [54 x i8] c"Prepend an element to a list, only if the list exists\00", align 1
@333 = private unnamed_addr constant [7 x i8] c"LRANGE\00", align 1
@334 = private unnamed_addr constant [15 x i8] c"key start stop\00", align 1
@335 = private unnamed_addr constant [36 x i8] c"Get a range of elements from a list\00", align 1
@336 = private unnamed_addr constant [5 x i8] c"LREM\00", align 1
@337 = private unnamed_addr constant [18 x i8] c"key count element\00", align 1
@338 = private unnamed_addr constant [28 x i8] c"Remove elements from a list\00", align 1
@339 = private unnamed_addr constant [5 x i8] c"LSET\00", align 1
@340 = private unnamed_addr constant [18 x i8] c"key index element\00", align 1
@341 = private unnamed_addr constant [51 x i8] c"Set the value of an element in a list by its index\00", align 1
@342 = private unnamed_addr constant [6 x i8] c"LTRIM\00", align 1
@343 = private unnamed_addr constant [35 x i8] c"Trim a list to the specified range\00", align 1
@344 = private unnamed_addr constant [14 x i8] c"MEMORY DOCTOR\00", align 1
@345 = private unnamed_addr constant [31 x i8] c"Outputs memory problems report\00", align 1
@346 = private unnamed_addr constant [6 x i8] c"4.0.0\00", align 1
@347 = private unnamed_addr constant [12 x i8] c"MEMORY HELP\00", align 1
@348 = private unnamed_addr constant [50 x i8] c"Show helpful text about the different subcommands\00", align 1
@349 = private unnamed_addr constant [20 x i8] c"MEMORY MALLOC-STATS\00", align 1
@350 = private unnamed_addr constant [30 x i8] c"Show allocator internal stats\00", align 1
@351 = private unnamed_addr constant [13 x i8] c"MEMORY PURGE\00", align 1
@352 = private unnamed_addr constant [36 x i8] c"Ask the allocator to release memory\00", align 1
@353 = private unnamed_addr constant [13 x i8] c"MEMORY STATS\00", align 1
@354 = private unnamed_addr constant [26 x i8] c"Show memory usage details\00", align 1
@355 = private unnamed_addr constant [13 x i8] c"MEMORY USAGE\00", align 1
@356 = private unnamed_addr constant [20 x i8] c"key [SAMPLES count]\00", align 1
@357 = private unnamed_addr constant [35 x i8] c"Estimate the memory usage of a key\00", align 1
@358 = private unnamed_addr constant [5 x i8] c"MGET\00", align 1
@359 = private unnamed_addr constant [37 x i8] c"Get the values of all the given keys\00", align 1
@360 = private unnamed_addr constant [8 x i8] c"MIGRATE\00", align 1
@361 = private unnamed_addr constant [82 x i8] c"host port key| destination-db timeout [COPY] [REPLACE] [AUTH password] [KEYS key]\00", align 1
@362 = private unnamed_addr constant [64 x i8] c"Atomically transfer a key from a Redis instance to another one.\00", align 1
@363 = private unnamed_addr constant [12 x i8] c"MODULE LIST\00", align 1
@364 = private unnamed_addr constant [38 x i8] c"List all modules loaded by the server\00", align 1
@365 = private unnamed_addr constant [12 x i8] c"MODULE LOAD\00", align 1
@366 = private unnamed_addr constant [11 x i8] c"path [arg]\00", align 1
@367 = private unnamed_addr constant [14 x i8] c"Load a module\00", align 1
@368 = private unnamed_addr constant [14 x i8] c"MODULE UNLOAD\00", align 1
@369 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@370 = private unnamed_addr constant [16 x i8] c"Unload a module\00", align 1
@371 = private unnamed_addr constant [8 x i8] c"MONITOR\00", align 1
@372 = private unnamed_addr constant [60 x i8] c"Listen for all requests received by the server in real time\00", align 1
@373 = private unnamed_addr constant [5 x i8] c"MOVE\00", align 1
@374 = private unnamed_addr constant [7 x i8] c"key db\00", align 1
@375 = private unnamed_addr constant [31 x i8] c"Move a key to another database\00", align 1
@376 = private unnamed_addr constant [5 x i8] c"MSET\00", align 1
@377 = private unnamed_addr constant [26 x i8] c"key value [key value ...]\00", align 1
@378 = private unnamed_addr constant [37 x i8] c"Set multiple keys to multiple values\00", align 1
@379 = private unnamed_addr constant [6 x i8] c"1.0.1\00", align 1
@380 = private unnamed_addr constant [7 x i8] c"MSETNX\00", align 1
@381 = private unnamed_addr constant [69 x i8] c"Set multiple keys to multiple values, only if none of the keys exist\00", align 1
@382 = private unnamed_addr constant [6 x i8] c"MULTI\00", align 1
@383 = private unnamed_addr constant [38 x i8] c"Mark the start of a transaction block\00", align 1
@384 = private unnamed_addr constant [7 x i8] c"OBJECT\00", align 1
@385 = private unnamed_addr constant [39 x i8] c"subcommand [arguments [arguments ...]]\00", align 1
@386 = private unnamed_addr constant [39 x i8] c"Inspect the internals of Redis objects\00", align 1
@387 = private unnamed_addr constant [6 x i8] c"2.2.3\00", align 1
@388 = private unnamed_addr constant [8 x i8] c"PERSIST\00", align 1
@389 = private unnamed_addr constant [33 x i8] c"Remove the expiration from a key\00", align 1
@390 = private unnamed_addr constant [8 x i8] c"PEXPIRE\00", align 1
@391 = private unnamed_addr constant [17 x i8] c"key milliseconds\00", align 1
@392 = private unnamed_addr constant [41 x i8] c"Set a key's time to live in milliseconds\00", align 1
@393 = private unnamed_addr constant [10 x i8] c"PEXPIREAT\00", align 1
@394 = private unnamed_addr constant [27 x i8] c"key milliseconds-timestamp\00", align 1
@395 = private unnamed_addr constant [75 x i8] c"Set the expiration for a key as a UNIX timestamp specified in milliseconds\00", align 1
@396 = private unnamed_addr constant [6 x i8] c"PFADD\00", align 1
@397 = private unnamed_addr constant [58 x i8] c"Adds the specified elements to the specified HyperLogLog.\00", align 1
@398 = private unnamed_addr constant [6 x i8] c"2.8.9\00", align 1
@399 = private unnamed_addr constant [8 x i8] c"PFCOUNT\00", align 1
@400 = private unnamed_addr constant [89 x i8] c"Return the approximated cardinality of the set(s) observed by the HyperLogLog at key(s).\00", align 1
@401 = private unnamed_addr constant [8 x i8] c"PFMERGE\00", align 1
@402 = private unnamed_addr constant [34 x i8] c"destkey sourcekey [sourcekey ...]\00", align 1
@403 = private unnamed_addr constant [50 x i8] c"Merge N different HyperLogLogs into a single one.\00", align 1
@404 = private unnamed_addr constant [5 x i8] c"PING\00", align 1
@405 = private unnamed_addr constant [10 x i8] c"[message]\00", align 1
@406 = private unnamed_addr constant [16 x i8] c"Ping the server\00", align 1
@407 = private unnamed_addr constant [7 x i8] c"PSETEX\00", align 1
@408 = private unnamed_addr constant [23 x i8] c"key milliseconds value\00", align 1
@409 = private unnamed_addr constant [54 x i8] c"Set the value and expiration in milliseconds of a key\00", align 1
@410 = private unnamed_addr constant [11 x i8] c"PSUBSCRIBE\00", align 1
@411 = private unnamed_addr constant [22 x i8] c"pattern [pattern ...]\00", align 1
@412 = private unnamed_addr constant [70 x i8] c"Listen for messages published to channels matching the given patterns\00", align 1
@413 = private unnamed_addr constant [6 x i8] c"PSYNC\00", align 1
@414 = private unnamed_addr constant [21 x i8] c"replicationid offset\00", align 1
@415 = private unnamed_addr constant [38 x i8] c"Internal command used for replication\00", align 1
@416 = private unnamed_addr constant [5 x i8] c"PTTL\00", align 1
@417 = private unnamed_addr constant [47 x i8] c"Get the time to live for a key in milliseconds\00", align 1
@418 = private unnamed_addr constant [8 x i8] c"PUBLISH\00", align 1
@419 = private unnamed_addr constant [16 x i8] c"channel message\00", align 1
@420 = private unnamed_addr constant [28 x i8] c"Post a message to a channel\00", align 1
@421 = private unnamed_addr constant [7 x i8] c"PUBSUB\00", align 1
@422 = private unnamed_addr constant [37 x i8] c"subcommand [argument [argument ...]]\00", align 1
@423 = private unnamed_addr constant [43 x i8] c"Inspect the state of the Pub/Sub subsystem\00", align 1
@424 = private unnamed_addr constant [13 x i8] c"PUNSUBSCRIBE\00", align 1
@425 = private unnamed_addr constant [24 x i8] c"[pattern [pattern ...]]\00", align 1
@426 = private unnamed_addr constant [75 x i8] c"Stop listening for messages posted to channels matching the given patterns\00", align 1
@427 = private unnamed_addr constant [5 x i8] c"QUIT\00", align 1
@428 = private unnamed_addr constant [21 x i8] c"Close the connection\00", align 1
@429 = private unnamed_addr constant [10 x i8] c"RANDOMKEY\00", align 1
@430 = private unnamed_addr constant [38 x i8] c"Return a random key from the keyspace\00", align 1
@431 = private unnamed_addr constant [9 x i8] c"READONLY\00", align 1
@432 = private unnamed_addr constant [64 x i8] c"Enables read queries for a connection to a cluster replica node\00", align 1
@433 = private unnamed_addr constant [10 x i8] c"READWRITE\00", align 1
@434 = private unnamed_addr constant [65 x i8] c"Disables read queries for a connection to a cluster replica node\00", align 1
@435 = private unnamed_addr constant [7 x i8] c"RENAME\00", align 1
@436 = private unnamed_addr constant [11 x i8] c"key newkey\00", align 1
@437 = private unnamed_addr constant [13 x i8] c"Rename a key\00", align 1
@438 = private unnamed_addr constant [9 x i8] c"RENAMENX\00", align 1
@439 = private unnamed_addr constant [49 x i8] c"Rename a key, only if the new key does not exist\00", align 1
@440 = private unnamed_addr constant [10 x i8] c"REPLICAOF\00", align 1
@441 = private unnamed_addr constant [10 x i8] c"host port\00", align 1
@442 = private unnamed_addr constant [72 x i8] c"Make the server a replica of another instance, or promote it as master.\00", align 1
@443 = private unnamed_addr constant [8 x i8] c"RESTORE\00", align 1
@444 = private unnamed_addr constant [80 x i8] c"key ttl serialized-value [REPLACE] [ABSTTL] [IDLETIME seconds] [FREQ frequency]\00", align 1
@445 = private unnamed_addr constant [82 x i8] c"Create a key using the provided serialized value, previously obtained using DUMP.\00", align 1
@446 = private unnamed_addr constant [5 x i8] c"ROLE\00", align 1
@447 = private unnamed_addr constant [62 x i8] c"Return the role of the instance in the context of replication\00", align 1
@448 = private unnamed_addr constant [7 x i8] c"2.8.12\00", align 1
@449 = private unnamed_addr constant [5 x i8] c"RPOP\00", align 1
@450 = private unnamed_addr constant [42 x i8] c"Remove and get the last element in a list\00", align 1
@451 = private unnamed_addr constant [10 x i8] c"RPOPLPUSH\00", align 1
@452 = private unnamed_addr constant [19 x i8] c"source destination\00", align 1
@453 = private unnamed_addr constant [76 x i8] c"Remove the last element in a list, prepend it to another list and return it\00", align 1
@454 = private unnamed_addr constant [6 x i8] c"RPUSH\00", align 1
@455 = private unnamed_addr constant [42 x i8] c"Append one or multiple elements to a list\00", align 1
@456 = private unnamed_addr constant [7 x i8] c"RPUSHX\00", align 1
@457 = private unnamed_addr constant [53 x i8] c"Append an element to a list, only if the list exists\00", align 1
@458 = private unnamed_addr constant [5 x i8] c"SADD\00", align 1
@459 = private unnamed_addr constant [33 x i8] c"Add one or more members to a set\00", align 1
@460 = private unnamed_addr constant [5 x i8] c"SAVE\00", align 1
@461 = private unnamed_addr constant [39 x i8] c"Synchronously save the dataset to disk\00", align 1
@462 = private unnamed_addr constant [5 x i8] c"SCAN\00", align 1
@463 = private unnamed_addr constant [49 x i8] c"cursor [MATCH pattern] [COUNT count] [TYPE type]\00", align 1
@464 = private unnamed_addr constant [37 x i8] c"Incrementally iterate the keys space\00", align 1
@465 = private unnamed_addr constant [6 x i8] c"SCARD\00", align 1
@466 = private unnamed_addr constant [35 x i8] c"Get the number of members in a set\00", align 1
@467 = private unnamed_addr constant [13 x i8] c"SCRIPT DEBUG\00", align 1
@468 = private unnamed_addr constant [12 x i8] c"YES|SYNC|NO\00", align 1
@469 = private unnamed_addr constant [41 x i8] c"Set the debug mode for executed scripts.\00", align 1
@470 = private unnamed_addr constant [14 x i8] c"SCRIPT EXISTS\00", align 1
@471 = private unnamed_addr constant [16 x i8] c"sha1 [sha1 ...]\00", align 1
@472 = private unnamed_addr constant [48 x i8] c"Check existence of scripts in the script cache.\00", align 1
@473 = private unnamed_addr constant [13 x i8] c"SCRIPT FLUSH\00", align 1
@474 = private unnamed_addr constant [46 x i8] c"Remove all the scripts from the script cache.\00", align 1
@475 = private unnamed_addr constant [12 x i8] c"SCRIPT KILL\00", align 1
@476 = private unnamed_addr constant [40 x i8] c"Kill the script currently in execution.\00", align 1
@477 = private unnamed_addr constant [12 x i8] c"SCRIPT LOAD\00", align 1
@478 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@479 = private unnamed_addr constant [53 x i8] c"Load the specified Lua script into the script cache.\00", align 1
@480 = private unnamed_addr constant [6 x i8] c"SDIFF\00", align 1
@481 = private unnamed_addr constant [23 x i8] c"Subtract multiple sets\00", align 1
@482 = private unnamed_addr constant [11 x i8] c"SDIFFSTORE\00", align 1
@483 = private unnamed_addr constant [26 x i8] c"destination key [key ...]\00", align 1
@484 = private unnamed_addr constant [60 x i8] c"Subtract multiple sets and store the resulting set in a key\00", align 1
@485 = private unnamed_addr constant [7 x i8] c"SELECT\00", align 1
@486 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@487 = private unnamed_addr constant [56 x i8] c"Change the selected database for the current connection\00", align 1
@488 = private unnamed_addr constant [4 x i8] c"SET\00", align 1
@489 = private unnamed_addr constant [57 x i8] c"key value [EX seconds|PX milliseconds] [NX|XX] [KEEPTTL]\00", align 1
@490 = private unnamed_addr constant [30 x i8] c"Set the string value of a key\00", align 1
@491 = private unnamed_addr constant [7 x i8] c"SETBIT\00", align 1
@492 = private unnamed_addr constant [17 x i8] c"key offset value\00", align 1
@493 = private unnamed_addr constant [67 x i8] c"Sets or clears the bit at offset in the string value stored at key\00", align 1
@494 = private unnamed_addr constant [6 x i8] c"SETEX\00", align 1
@495 = private unnamed_addr constant [18 x i8] c"key seconds value\00", align 1
@496 = private unnamed_addr constant [38 x i8] c"Set the value and expiration of a key\00", align 1
@497 = private unnamed_addr constant [6 x i8] c"SETNX\00", align 1
@498 = private unnamed_addr constant [55 x i8] c"Set the value of a key, only if the key does not exist\00", align 1
@499 = private unnamed_addr constant [9 x i8] c"SETRANGE\00", align 1
@500 = private unnamed_addr constant [67 x i8] c"Overwrite part of a string at key starting at the specified offset\00", align 1
@501 = private unnamed_addr constant [9 x i8] c"SHUTDOWN\00", align 1
@502 = private unnamed_addr constant [14 x i8] c"[NOSAVE|SAVE]\00", align 1
@503 = private unnamed_addr constant [69 x i8] c"Synchronously save the dataset to disk and then shut down the server\00", align 1
@504 = private unnamed_addr constant [7 x i8] c"SINTER\00", align 1
@505 = private unnamed_addr constant [24 x i8] c"Intersect multiple sets\00", align 1
@506 = private unnamed_addr constant [12 x i8] c"SINTERSTORE\00", align 1
@507 = private unnamed_addr constant [61 x i8] c"Intersect multiple sets and store the resulting set in a key\00", align 1
@508 = private unnamed_addr constant [10 x i8] c"SISMEMBER\00", align 1
@509 = private unnamed_addr constant [11 x i8] c"key member\00", align 1
@510 = private unnamed_addr constant [48 x i8] c"Determine if a given value is a member of a set\00", align 1
@511 = private unnamed_addr constant [8 x i8] c"SLAVEOF\00", align 1
@512 = private unnamed_addr constant [129 x i8] c"Make the server a replica of another instance, or promote it as master. Deprecated starting with Redis 5. Use REPLICAOF instead.\00", align 1
@513 = private unnamed_addr constant [8 x i8] c"SLOWLOG\00", align 1
@514 = private unnamed_addr constant [22 x i8] c"subcommand [argument]\00", align 1
@515 = private unnamed_addr constant [35 x i8] c"Manages the Redis slow queries log\00", align 1
@516 = private unnamed_addr constant [7 x i8] c"2.2.12\00", align 1
@517 = private unnamed_addr constant [9 x i8] c"SMEMBERS\00", align 1
@518 = private unnamed_addr constant [29 x i8] c"Get all the members in a set\00", align 1
@519 = private unnamed_addr constant [6 x i8] c"SMOVE\00", align 1
@520 = private unnamed_addr constant [26 x i8] c"source destination member\00", align 1
@521 = private unnamed_addr constant [38 x i8] c"Move a member from one set to another\00", align 1
@522 = private unnamed_addr constant [5 x i8] c"SORT\00", align 1
@523 = private unnamed_addr constant [109 x i8] c"key [BY pattern] [LIMIT offset count] [GET pattern [GET pattern ...]] [ASC|DESC] [ALPHA] [STORE destination]\00", align 1
@524 = private unnamed_addr constant [47 x i8] c"Sort the elements in a list, set or sorted set\00", align 1
@525 = private unnamed_addr constant [5 x i8] c"SPOP\00", align 1
@526 = private unnamed_addr constant [12 x i8] c"key [count]\00", align 1
@527 = private unnamed_addr constant [60 x i8] c"Remove and return one or multiple random members from a set\00", align 1
@528 = private unnamed_addr constant [12 x i8] c"SRANDMEMBER\00", align 1
@529 = private unnamed_addr constant [46 x i8] c"Get one or multiple random members from a set\00", align 1
@530 = private unnamed_addr constant [5 x i8] c"SREM\00", align 1
@531 = private unnamed_addr constant [38 x i8] c"Remove one or more members from a set\00", align 1
@532 = private unnamed_addr constant [6 x i8] c"SSCAN\00", align 1
@533 = private unnamed_addr constant [35 x i8] c"Incrementally iterate Set elements\00", align 1
@534 = private unnamed_addr constant [8 x i8] c"STRALGO\00", align 1
@535 = private unnamed_addr constant [56 x i8] c"LCS algo-specific-argument [algo-specific-argument ...]\00", align 1
@536 = private unnamed_addr constant [47 x i8] c"Run algorithms (currently LCS) against strings\00", align 1
@537 = private unnamed_addr constant [7 x i8] c"STRLEN\00", align 1
@538 = private unnamed_addr constant [44 x i8] c"Get the length of the value stored in a key\00", align 1
@539 = private unnamed_addr constant [10 x i8] c"SUBSCRIBE\00", align 1
@540 = private unnamed_addr constant [22 x i8] c"channel [channel ...]\00", align 1
@541 = private unnamed_addr constant [52 x i8] c"Listen for messages published to the given channels\00", align 1
@542 = private unnamed_addr constant [7 x i8] c"SUNION\00", align 1
@543 = private unnamed_addr constant [18 x i8] c"Add multiple sets\00", align 1
@544 = private unnamed_addr constant [12 x i8] c"SUNIONSTORE\00", align 1
@545 = private unnamed_addr constant [55 x i8] c"Add multiple sets and store the resulting set in a key\00", align 1
@546 = private unnamed_addr constant [7 x i8] c"SWAPDB\00", align 1
@547 = private unnamed_addr constant [14 x i8] c"index1 index2\00", align 1
@548 = private unnamed_addr constant [26 x i8] c"Swaps two Redis databases\00", align 1
@549 = private unnamed_addr constant [5 x i8] c"SYNC\00", align 1
@550 = private unnamed_addr constant [5 x i8] c"TIME\00", align 1
@551 = private unnamed_addr constant [31 x i8] c"Return the current server time\00", align 1
@552 = private unnamed_addr constant [6 x i8] c"TOUCH\00", align 1
@553 = private unnamed_addr constant [88 x i8] c"Alters the last access time of a key(s). Returns the number of existing keys specified.\00", align 1
@554 = private unnamed_addr constant [6 x i8] c"3.2.1\00", align 1
@555 = private unnamed_addr constant [4 x i8] c"TTL\00", align 1
@556 = private unnamed_addr constant [31 x i8] c"Get the time to live for a key\00", align 1
@557 = private unnamed_addr constant [5 x i8] c"TYPE\00", align 1
@558 = private unnamed_addr constant [33 x i8] c"Determine the type stored at key\00", align 1
@559 = private unnamed_addr constant [7 x i8] c"UNLINK\00", align 1
@560 = private unnamed_addr constant [94 x i8] c"Delete a key asynchronously in another thread. Otherwise it is just as DEL, but non blocking.\00", align 1
@561 = private unnamed_addr constant [12 x i8] c"UNSUBSCRIBE\00", align 1
@562 = private unnamed_addr constant [24 x i8] c"[channel [channel ...]]\00", align 1
@563 = private unnamed_addr constant [57 x i8] c"Stop listening for messages posted to the given channels\00", align 1
@564 = private unnamed_addr constant [8 x i8] c"UNWATCH\00", align 1
@565 = private unnamed_addr constant [30 x i8] c"Forget about all watched keys\00", align 1
@566 = private unnamed_addr constant [5 x i8] c"WAIT\00", align 1
@567 = private unnamed_addr constant [20 x i8] c"numreplicas timeout\00", align 1
@568 = private unnamed_addr constant [109 x i8] c"Wait for the synchronous replication of all the write commands sent in the context of the current connection\00", align 1
@569 = private unnamed_addr constant [6 x i8] c"WATCH\00", align 1
@570 = private unnamed_addr constant [68 x i8] c"Watch the given keys to determine execution of the MULTI/EXEC block\00", align 1
@571 = private unnamed_addr constant [5 x i8] c"XACK\00", align 1
@572 = private unnamed_addr constant [22 x i8] c"key group ID [ID ...]\00", align 1
@573 = private unnamed_addr constant [268 x i8] c"Marks a pending message as correctly processed, effectively removing it from the pending entries list of the consumer group. Return value of the command is the number of messages successfully acknowledged, that is, the IDs we were actually able to resolve in the PEL.\00", align 1
@574 = private unnamed_addr constant [5 x i8] c"XADD\00", align 1
@575 = private unnamed_addr constant [37 x i8] c"key ID field value [field value ...]\00", align 1
@576 = private unnamed_addr constant [32 x i8] c"Appends a new entry to a stream\00", align 1
@577 = private unnamed_addr constant [7 x i8] c"XCLAIM\00", align 1
@578 = private unnamed_addr constant [111 x i8] c"key group consumer min-idle-time ID [ID ...] [IDLE ms] [TIME ms-unix-time] [RETRYCOUNT count] [force] [justid]\00", align 1
@579 = private unnamed_addr constant [125 x i8] c"Changes (or acquires) ownership of a message in a consumer group, as if the message was delivered to the specified consumer.\00", align 1
@580 = private unnamed_addr constant [5 x i8] c"XDEL\00", align 1
@581 = private unnamed_addr constant [16 x i8] c"key ID [ID ...]\00", align 1
@582 = private unnamed_addr constant [179 x i8] c"Removes the specified entries from the stream. Returns the number of items actually deleted, that may be different from the number of IDs passed in case certain IDs do not exist.\00", align 1
@583 = private unnamed_addr constant [7 x i8] c"XGROUP\00", align 1
@584 = private unnamed_addr constant [126 x i8] c"[CREATE key groupname id-or-$] [SETID key groupname id-or-$] [DESTROY key groupname] [DELCONSUMER key groupname consumername]\00", align 1
@585 = private unnamed_addr constant [45 x i8] c"Create, destroy, and manage consumer groups.\00", align 1
@586 = private unnamed_addr constant [6 x i8] c"XINFO\00", align 1
@587 = private unnamed_addr constant [59 x i8] c"[CONSUMERS key groupname] [GROUPS key] [STREAM key] [HELP]\00", align 1
@588 = private unnamed_addr constant [47 x i8] c"Get information on streams and consumer groups\00", align 1
@589 = private unnamed_addr constant [5 x i8] c"XLEN\00", align 1
@590 = private unnamed_addr constant [41 x i8] c"Return the number of entires in a stream\00", align 1
@591 = private unnamed_addr constant [9 x i8] c"XPENDING\00", align 1
@592 = private unnamed_addr constant [39 x i8] c"key group [start end count] [consumer]\00", align 1
@593 = private unnamed_addr constant [132 x i8] c"Return information and entries from a stream consumer group pending entries list, that are messages fetched but never acknowledged.\00", align 1
@594 = private unnamed_addr constant [7 x i8] c"XRANGE\00", align 1
@595 = private unnamed_addr constant [28 x i8] c"key start end [COUNT count]\00", align 1
@596 = private unnamed_addr constant [85 x i8] c"Return a range of elements in a stream, with IDs matching the specified IDs interval\00", align 1
@597 = private unnamed_addr constant [6 x i8] c"XREAD\00", align 1
@598 = private unnamed_addr constant [69 x i8] c"[COUNT count] [BLOCK milliseconds] STREAMS key [key ...] id [id ...]\00", align 1
@599 = private unnamed_addr constant [130 x i8] c"Return never seen elements in multiple streams, with IDs greater than the ones reported by the caller for each stream. Can block.\00", align 1
@600 = private unnamed_addr constant [11 x i8] c"XREADGROUP\00", align 1
@601 = private unnamed_addr constant [98 x i8] c"GROUP group consumer [COUNT count] [BLOCK milliseconds] [NOACK] STREAMS key [key ...] ID [ID ...]\00", align 1
@602 = private unnamed_addr constant [135 x i8] c"Return new entries from a stream using a consumer group, or access the history of the pending entries for a given consumer. Can block.\00", align 1
@603 = private unnamed_addr constant [10 x i8] c"XREVRANGE\00", align 1
@604 = private unnamed_addr constant [28 x i8] c"key end start [COUNT count]\00", align 1
@605 = private unnamed_addr constant [152 x i8] c"Return a range of elements in a stream, with IDs matching the specified IDs interval, in reverse order (from greater to smaller IDs) compared to XRANGE\00", align 1
@606 = private unnamed_addr constant [6 x i8] c"XTRIM\00", align 1
@607 = private unnamed_addr constant [21 x i8] c"key MAXLEN [~] count\00", align 1
@608 = private unnamed_addr constant [68 x i8] c"Trims the stream to (approximately if '~' is passed) a certain size\00", align 1
@609 = private unnamed_addr constant [5 x i8] c"ZADD\00", align 1
@610 = private unnamed_addr constant [56 x i8] c"key [NX|XX] [CH] [INCR] score member [score member ...]\00", align 1
@611 = private unnamed_addr constant [82 x i8] c"Add one or more members to a sorted set, or update its score if it already exists\00", align 1
@612 = private unnamed_addr constant [6 x i8] c"ZCARD\00", align 1
@613 = private unnamed_addr constant [42 x i8] c"Get the number of members in a sorted set\00", align 1
@614 = private unnamed_addr constant [7 x i8] c"ZCOUNT\00", align 1
@615 = private unnamed_addr constant [12 x i8] c"key min max\00", align 1
@616 = private unnamed_addr constant [70 x i8] c"Count the members in a sorted set with scores within the given values\00", align 1
@617 = private unnamed_addr constant [8 x i8] c"ZINCRBY\00", align 1
@618 = private unnamed_addr constant [21 x i8] c"key increment member\00", align 1
@619 = private unnamed_addr constant [48 x i8] c"Increment the score of a member in a sorted set\00", align 1
@620 = private unnamed_addr constant [12 x i8] c"ZINTERSTORE\00", align 1
@621 = private unnamed_addr constant [75 x i8] c"destination numkeys key [key ...] [WEIGHTS weight] [AGGREGATE SUM|MIN|MAX]\00", align 1
@622 = private unnamed_addr constant [79 x i8] c"Intersect multiple sorted sets and store the resulting sorted set in a new key\00", align 1
@623 = private unnamed_addr constant [10 x i8] c"ZLEXCOUNT\00", align 1
@624 = private unnamed_addr constant [82 x i8] c"Count the number of members in a sorted set between a given lexicographical range\00", align 1
@625 = private unnamed_addr constant [8 x i8] c"ZPOPMAX\00", align 1
@626 = private unnamed_addr constant [66 x i8] c"Remove and return members with the highest scores in a sorted set\00", align 1
@627 = private unnamed_addr constant [8 x i8] c"ZPOPMIN\00", align 1
@628 = private unnamed_addr constant [65 x i8] c"Remove and return members with the lowest scores in a sorted set\00", align 1
@629 = private unnamed_addr constant [7 x i8] c"ZRANGE\00", align 1
@630 = private unnamed_addr constant [28 x i8] c"key start stop [WITHSCORES]\00", align 1
@631 = private unnamed_addr constant [52 x i8] c"Return a range of members in a sorted set, by index\00", align 1
@632 = private unnamed_addr constant [12 x i8] c"ZRANGEBYLEX\00", align 1
@633 = private unnamed_addr constant [33 x i8] c"key min max [LIMIT offset count]\00", align 1
@634 = private unnamed_addr constant [68 x i8] c"Return a range of members in a sorted set, by lexicographical range\00", align 1
@635 = private unnamed_addr constant [14 x i8] c"ZRANGEBYSCORE\00", align 1
@636 = private unnamed_addr constant [46 x i8] c"key min max [WITHSCORES] [LIMIT offset count]\00", align 1
@637 = private unnamed_addr constant [52 x i8] c"Return a range of members in a sorted set, by score\00", align 1
@638 = private unnamed_addr constant [6 x i8] c"1.0.5\00", align 1
@639 = private unnamed_addr constant [6 x i8] c"ZRANK\00", align 1
@640 = private unnamed_addr constant [48 x i8] c"Determine the index of a member in a sorted set\00", align 1
@641 = private unnamed_addr constant [5 x i8] c"ZREM\00", align 1
@642 = private unnamed_addr constant [45 x i8] c"Remove one or more members from a sorted set\00", align 1
@643 = private unnamed_addr constant [15 x i8] c"ZREMRANGEBYLEX\00", align 1
@644 = private unnamed_addr constant [75 x i8] c"Remove all members in a sorted set between the given lexicographical range\00", align 1
@645 = private unnamed_addr constant [16 x i8] c"ZREMRANGEBYRANK\00", align 1
@646 = private unnamed_addr constant [60 x i8] c"Remove all members in a sorted set within the given indexes\00", align 1
@647 = private unnamed_addr constant [17 x i8] c"ZREMRANGEBYSCORE\00", align 1
@648 = private unnamed_addr constant [59 x i8] c"Remove all members in a sorted set within the given scores\00", align 1
@649 = private unnamed_addr constant [10 x i8] c"ZREVRANGE\00", align 1
@650 = private unnamed_addr constant [90 x i8] c"Return a range of members in a sorted set, by index, with scores ordered from high to low\00", align 1
@651 = private unnamed_addr constant [15 x i8] c"ZREVRANGEBYLEX\00", align 1
@652 = private unnamed_addr constant [33 x i8] c"key max min [LIMIT offset count]\00", align 1
@653 = private unnamed_addr constant [107 x i8] c"Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings.\00", align 1
@654 = private unnamed_addr constant [17 x i8] c"ZREVRANGEBYSCORE\00", align 1
@655 = private unnamed_addr constant [46 x i8] c"key max min [WITHSCORES] [LIMIT offset count]\00", align 1
@656 = private unnamed_addr constant [90 x i8] c"Return a range of members in a sorted set, by score, with scores ordered from high to low\00", align 1
@657 = private unnamed_addr constant [9 x i8] c"ZREVRANK\00", align 1
@658 = private unnamed_addr constant [86 x i8] c"Determine the index of a member in a sorted set, with scores ordered from high to low\00", align 1
@659 = private unnamed_addr constant [6 x i8] c"ZSCAN\00", align 1
@660 = private unnamed_addr constant [65 x i8] c"Incrementally iterate sorted sets elements and associated scores\00", align 1
@661 = private unnamed_addr constant [7 x i8] c"ZSCORE\00", align 1
@662 = private unnamed_addr constant [63 x i8] c"Get the score associated with the given member in a sorted set\00", align 1
@663 = private unnamed_addr constant [12 x i8] c"ZUNIONSTORE\00", align 1
@664 = private unnamed_addr constant [73 x i8] c"Add multiple sorted sets and store the resulting sorted set in a new key\00", align 1
@commandHelp = dso_local global [256 x %0] [%0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @2, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @6, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @9, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @12, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @14, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @17, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @19, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @22, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @24, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @26, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @29, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @33, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @35, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @36, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @37, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @38, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @39, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @40, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @41, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @42, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @44, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @45, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @46, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @48, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @49, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @50, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @51, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @52, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @53, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @54, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @55, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @57, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @58, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @59, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @60, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @61, i32 0, i32 0), i8* getelementptr inbounds ([99 x i8], [99 x i8]* @62, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @64, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @65, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @67, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @56, i32 0, i32 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @68, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @69, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @70, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @71, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @72, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @73, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @74, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @75, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @76, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @77, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @78, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @79, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @80, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @81, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @82, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @83, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @84, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @85, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @82, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @86, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @87, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @88, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @89, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @90, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @91, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @92, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @93, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @94, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @95, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @96, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @74, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @97, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @98, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @99, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @100, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @101, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @102, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @103, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @104, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @105, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @107, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @108, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @109, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @111, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @113, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @114, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @115, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @104, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @116, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @117, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @118, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @119, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @120, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @121, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @122, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @123, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @124, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @125, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @126, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @127, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @128, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @129, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @131, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @132, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @133, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @134, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @135, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @136, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @137, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @138, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @139, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @140, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @141, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @142, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @143, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @144, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @145, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @146, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @147, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @148, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @149, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @150, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @151, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @152, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @153, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @154, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @110, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @140, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @155, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @156, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @157, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @158, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @160, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @161, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @162, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @163, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @164, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @165, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @166, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @167, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @168, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @169, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @170, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @171, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @172, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @173, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @175, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @176, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @177, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @178, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @179, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @180, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @181, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @182, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @183, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @184, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @185, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @186, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @187, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @188, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @189, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @191, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @192, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @193, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @194, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @195, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @196, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @197, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @198, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @199, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @200, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @201, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @202, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @203, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @201, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @205, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @207, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @208, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @209, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @210, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @211, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @212, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @213, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @214, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @215, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @216, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @217, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @218, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @216, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @219, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @220, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @221, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @222, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @223, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @224, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @225, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @226, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @228, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @229, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @230, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @231, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @232, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @233, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @234, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @235, i32 0, i32 0), i8* getelementptr inbounds ([116 x i8], [116 x i8]* @236, i32 0, i32 0), i32 13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @237, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @238, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @239, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @240, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @241, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @242, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @243, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @244, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @82, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @245, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @246, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @247, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @248, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @249, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @250, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @251, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @252, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @253, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @254, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @255, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @256, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @254, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @257, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @258, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @259, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @260, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @261, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @262, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @263, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @261, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @264, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @265, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @266, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @267, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @268, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @269, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @248, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @270, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @271, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @272, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @273, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @274, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @275, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @276, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @277, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @272, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @278, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @279, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @280, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @281, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @282, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @254, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @283, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @284, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @285, i32 0, i32 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @287, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @288, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @289, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @290, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @291, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @289, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @292, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @294, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @295, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @296, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @297, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @298, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @299, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @300, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @301, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @302, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @303, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @304, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @305, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @306, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @307, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @308, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @304, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @309, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @310, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @311, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @312, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @313, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @314, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @159, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @315, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @316, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @317, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @318, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @319, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @320, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @321, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @322, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @323, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @324, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @325, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @326, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @327, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @328, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @330, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @331, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @332, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @333, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @334, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @335, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @336, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @337, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @338, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @339, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @340, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @341, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @342, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @334, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @343, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @344, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @345, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @347, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @348, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @349, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @350, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @351, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @352, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @353, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @354, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @355, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @356, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @357, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @358, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @359, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @360, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @361, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @362, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @363, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @364, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @365, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @366, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @367, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @368, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @369, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @370, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @371, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @372, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @373, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @374, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @375, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @376, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @377, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @378, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @379, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @380, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @377, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @381, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @379, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @382, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @383, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @384, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @385, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @386, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @387, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @388, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @389, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @390, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @391, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @392, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @393, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @394, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @395, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @396, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @397, i32 0, i32 0), i32 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @399, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @400, i32 0, i32 0), i32 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @401, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @402, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @403, i32 0, i32 0), i32 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @404, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @405, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @406, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @407, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @408, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @409, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @410, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @411, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @412, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @413, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @414, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @415, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @416, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @417, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @418, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @419, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @420, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @421, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @422, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @423, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @424, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @425, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @426, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @427, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @428, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @429, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @430, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @431, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @432, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @433, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @434, i32 0, i32 0), i32 12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @435, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @436, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @437, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @438, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @436, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @439, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @440, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @441, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @442, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @443, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @444, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @445, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @446, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @447, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @448, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @449, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @450, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @451, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @452, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @453, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @454, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @455, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @456, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @329, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @457, i32 0, i32 0), i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @458, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @459, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @460, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @461, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @462, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @463, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @464, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @465, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @466, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @467, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @468, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @469, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @47, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @470, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @471, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @472, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @473, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @474, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @475, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @476, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @477, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @478, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @479, i32 0, i32 0), i32 10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @480, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @481, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @482, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @483, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @484, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @485, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @486, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @487, i32 0, i32 0), i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @488, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @489, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @490, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @491, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @492, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @493, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @494, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @495, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @496, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @497, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @498, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @499, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @492, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @500, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @501, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @502, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @503, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @504, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @505, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @506, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @483, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @507, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @508, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @509, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @510, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @511, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @441, i32 0, i32 0), i8* getelementptr inbounds ([129 x i8], [129 x i8]* @512, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @513, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @514, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @515, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @516, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @517, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @518, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @519, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @520, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @521, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @522, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @523, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @524, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @525, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @526, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @527, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @528, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @526, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @529, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @530, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @531, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @532, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @275, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @533, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @534, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @535, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @536, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @537, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @538, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @539, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @540, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @541, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @542, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @543, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @544, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @483, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @545, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @546, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @547, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @548, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @549, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @415, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @550, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @551, i32 0, i32 0), i32 9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @43, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @552, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @553, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @554, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @555, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @556, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @557, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @558, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @34, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @559, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @560, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @346, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @561, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @562, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @563, i32 0, i32 0), i32 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @564, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @565, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @566, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @567, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @568, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @106, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @569, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @190, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @570, i32 0, i32 0), i32 7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @571, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @572, i32 0, i32 0), i8* getelementptr inbounds ([268 x i8], [268 x i8]* @573, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @574, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @575, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @576, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @577, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @578, i32 0, i32 0), i8* getelementptr inbounds ([125 x i8], [125 x i8]* @579, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @580, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @581, i32 0, i32 0), i8* getelementptr inbounds ([179 x i8], [179 x i8]* @582, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @583, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @584, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @585, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @586, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @587, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @588, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @589, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @590, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @591, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @592, i32 0, i32 0), i8* getelementptr inbounds ([132 x i8], [132 x i8]* @593, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @594, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @595, i32 0, i32 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @596, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @597, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @598, i32 0, i32 0), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @599, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @600, i32 0, i32 0), i8* getelementptr inbounds ([98 x i8], [98 x i8]* @601, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @602, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @603, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @604, i32 0, i32 0), i8* getelementptr inbounds ([152 x i8], [152 x i8]* @605, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @606, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @607, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @608, i32 0, i32 0), i32 14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @609, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @610, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @611, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @612, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @130, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @613, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @614, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @615, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @616, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @617, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @618, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @619, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @620, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @621, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @622, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @623, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @615, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @624, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @625, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @526, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @626, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @627, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @526, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @628, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @66, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @629, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @630, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @631, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @632, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @633, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @634, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @635, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @636, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @637, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @638, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @639, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @509, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @640, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @641, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @227, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @642, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @643, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @615, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @644, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @645, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @334, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @646, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @647, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @615, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @648, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @649, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @630, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @650, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @651, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @652, i32 0, i32 0), i8* getelementptr inbounds ([107 x i8], [107 x i8]* @653, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @398, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @654, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @655, i32 0, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @656, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @63, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @657, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @509, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @658, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @659, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @275, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @660, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @174, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @661, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @509, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @662, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @206, i32 0, i32 0) }, %0 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @663, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @621, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @664, i32 0, i32 0), i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @30, i32 0, i32 0) }], align 16
@spectrum_palette_color_size = dso_local global i32 19, align 4
@spectrum_palette_color = dso_local global [19 x i32] [i32 0, i32 233, i32 234, i32 235, i32 237, i32 239, i32 241, i32 243, i32 245, i32 247, i32 144, i32 143, i32 142, i32 184, i32 226, i32 214, i32 208, i32 202, i32 196], align 16
@spectrum_palette_mono_size = dso_local global i32 13, align 4
@spectrum_palette_mono = dso_local global [13 x i32] [i32 0, i32 233, i32 234, i32 235, i32 237, i32 239, i32 241, i32 243, i32 245, i32 247, i32 249, i32 251, i32 253], align 16
@stderr = external dso_local global %1*, align 8
@665 = private unnamed_addr constant [25 x i8] c"=== ASSERTION FAILED ===\00", align 1
@666 = private unnamed_addr constant [27 x i8] c"==> %s:%d '%s' is not true\00", align 1
@667 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@668 = private unnamed_addr constant [6 x i8] c"xterm\00", align 1
@669 = private unnamed_addr constant [5 x i8] c"bold\00", align 1
@670 = private unnamed_addr constant [4 x i8] c"red\00", align 1
@671 = private unnamed_addr constant [6 x i8] c"green\00", align 1
@672 = private unnamed_addr constant [7 x i8] c"yellow\00", align 1
@673 = private unnamed_addr constant [5 x i8] c"blue\00", align 1
@674 = private unnamed_addr constant [8 x i8] c"magenta\00", align 1
@675 = private unnamed_addr constant [5 x i8] c"cyan\00", align 1
@676 = private unnamed_addr constant [6 x i8] c"white\00", align 1
@677 = private unnamed_addr constant [12 x i8] c"\1B[%i;%i;49m\00", align 1
@678 = private unnamed_addr constant [5 x i8] c"\1B[0m\00", align 1
@679 = private unnamed_addr constant [8 x i8] c"<debug>\00", align 1
@680 = private unnamed_addr constant [8 x i8] c"<redis>\00", align 1
@681 = private unnamed_addr constant [8 x i8] c"<reply>\00", align 1
@682 = private unnamed_addr constant [8 x i8] c"<error>\00", align 1
@683 = private unnamed_addr constant [7 x i8] c"<hint>\00", align 1
@684 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@685 = private unnamed_addr constant [9 x i8] c"<retval>\00", align 1
@686 = private unnamed_addr constant [5 x i8] c":set\00", align 1
@687 = private unnamed_addr constant [6 x i8] c"hints\00", align 1
@688 = internal global %3 zeroinitializer, align 4
@689 = private unnamed_addr constant [8 x i8] c"nohints\00", align 1
@690 = private unnamed_addr constant [37 x i8] c"%sunknown redis-cli preference '%s'\0A\00", align 1
@691 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@692 = private unnamed_addr constant [14 x i8] c".redisclirc: \00", align 1
@693 = private unnamed_addr constant [43 x i8] c"%sunknown redis-cli internal command '%s'\0A\00", align 1
@694 = private unnamed_addr constant [16 x i8] c"REDISCLI_RCFILE\00", align 1
@695 = private unnamed_addr constant [12 x i8] c".redisclirc\00", align 1
@696 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@clusterManagerUncoveredSlots = dso_local global %4* null, align 8
@697 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@698 = private unnamed_addr constant [28 x i8] c"host1:port1 ... hostN:portN\00", align 1
@699 = private unnamed_addr constant [15 x i8] c"replicas <arg>\00", align 1
@700 = private unnamed_addr constant [6 x i8] c"check\00", align 1
@701 = private unnamed_addr constant [10 x i8] c"host:port\00", align 1
@702 = private unnamed_addr constant [23 x i8] c"search-multiple-owners\00", align 1
@703 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@704 = private unnamed_addr constant [4 x i8] c"fix\00", align 1
@705 = private unnamed_addr constant [52 x i8] c"search-multiple-owners,fix-with-unreachable-masters\00", align 1
@706 = private unnamed_addr constant [8 x i8] c"reshard\00", align 1
@707 = private unnamed_addr constant [73 x i8] c"from <arg>,to <arg>,slots <arg>,yes,timeout <arg>,pipeline <arg>,replace\00", align 1
@708 = private unnamed_addr constant [10 x i8] c"rebalance\00", align 1
@709 = private unnamed_addr constant [109 x i8] c"weight <node1=w1...nodeN=wN>,use-empty-masters,timeout <arg>,simulate,pipeline <arg>,threshold <arg>,replace\00", align 1
@710 = private unnamed_addr constant [9 x i8] c"add-node\00", align 1
@711 = private unnamed_addr constant [46 x i8] c"new_host:new_port existing_host:existing_port\00", align 1
@712 = private unnamed_addr constant [22 x i8] c"slave,master-id <arg>\00", align 1
@713 = private unnamed_addr constant [9 x i8] c"del-node\00", align 1
@714 = private unnamed_addr constant [18 x i8] c"host:port node_id\00", align 1
@715 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@716 = private unnamed_addr constant [33 x i8] c"host:port command arg arg .. arg\00", align 1
@717 = private unnamed_addr constant [12 x i8] c"set-timeout\00", align 1
@718 = private unnamed_addr constant [23 x i8] c"host:port milliseconds\00", align 1
@719 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@720 = private unnamed_addr constant [24 x i8] c"from <arg>,copy,replace\00", align 1
@721 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@722 = private unnamed_addr constant [27 x i8] c"host:port backup_directory\00", align 1
@723 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@clusterManagerCommands = dso_local global [13 x %9] [%9 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @697, i32 0, i32 0), i32 (i32, i8**)* @1372, i32 -2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @698, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @699, i32 0, i32 0) }, %9 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @700, i32 0, i32 0), i32 (i32, i8**)* @1373, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @701, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @702, i32 0, i32 0) }, %9 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @703, i32 0, i32 0), i32 (i32, i8**)* @1374, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @701, i32 0, i32 0), i8* null }, %9 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @704, i32 0, i32 0), i32 (i32, i8**)* @1375, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @701, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @705, i32 0, i32 0) }, %9 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @706, i32 0, i32 0), i32 (i32, i8**)* @1376, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @701, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @707, i32 0, i32 0) }, %9 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @708, i32 0, i32 0), i32 (i32, i8**)* @1377, i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @701, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @709, i32 0, i32 0) }, %9 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @710, i32 0, i32 0), i32 (i32, i8**)* @1378, i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @711, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @712, i32 0, i32 0) }, %9 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @713, i32 0, i32 0), i32 (i32, i8**)* @1379, i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @714, i32 0, i32 0), i8* null }, %9 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @715, i32 0, i32 0), i32 (i32, i8**)* @1380, i32 -2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @716, i32 0, i32 0), i8* null }, %9 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @717, i32 0, i32 0), i32 (i32, i8**)* @1381, i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @718, i32 0, i32 0), i8* null }, %9 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @719, i32 0, i32 0), i32 (i32, i8**)* @1382, i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @701, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @720, i32 0, i32 0) }, %9 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @721, i32 0, i32 0), i32 (i32, i8**)* @1383, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @722, i32 0, i32 0), i8* null }, %9 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @723, i32 0, i32 0), i32 (i32, i8**)* @1384, i32 0, i8* null, i8* null }], align 16
@724 = private unnamed_addr constant [10 x i8] c"\1B[38;5;0m\00", align 1
@spectrum_palette_size = common dso_local global i32 0, align 4
@spectrum_palette = common dso_local global i32* null, align 8
@725 = private unnamed_addr constant [13 x i8] c"\1B[48;5;%dm%c\00", align 1
@726 = private unnamed_addr constant [6 x i8] c"\1B[0m\0A\00", align 1
@stdout = external dso_local global %1*, align 8
@727 = private unnamed_addr constant [47 x i8] c"---------------------------------------------\0A\00", align 1
@728 = private unnamed_addr constant [47 x i8] c". - * #          .01 .125 .25 .5 milliseconds\0A\00", align 1
@729 = private unnamed_addr constant [47 x i8] c"1,2,3,...,9      from 1 to 9     milliseconds\0A\00", align 1
@730 = private unnamed_addr constant [47 x i8] c"A,B,C,D,E        10,20,30,40,50  milliseconds\0A\00", align 1
@731 = private unnamed_addr constant [47 x i8] c"F,G,H,I,J        .1,.2,.3,.4,.5       seconds\0A\00", align 1
@732 = private unnamed_addr constant [47 x i8] c"K,L,M,N,O,P,Q,?  1,2,4,8,16,30,60,>60 seconds\0A\00", align 1
@733 = private unnamed_addr constant [18 x i8] c"From 0 to 100%%: \00", align 1
@734 = private unnamed_addr constant [12 x i8] c"\1B[48;5;%dm \00", align 1
@735 = private unnamed_addr constant [24 x i8] c"sending REPLCONF %s %s\0A\00", align 1
@736 = internal global %10* null, align 8
@737 = private unnamed_addr constant [15 x i8] c"REPLCONF %s %s\00", align 1
@738 = private unnamed_addr constant [12 x i8] c"\0AI/O error\0A\00", align 1
@739 = private unnamed_addr constant [23 x i8] c"REPLCONF %s error: %s\0A\00", align 1
@740 = private unnamed_addr constant [5 x i8] c"capa\00", align 1
@741 = private unnamed_addr constant [4 x i8] c"eof\00", align 1
@742 = private unnamed_addr constant [7 x i8] c"SYNC\0D\0A\00", align 1
@743 = private unnamed_addr constant [25 x i8] c"Error writing to master\0A\00", align 1
@744 = private unnamed_addr constant [41 x i8] c"Error reading bulk length while SYNCing\0A\00", align 1
@745 = private unnamed_addr constant [29 x i8] c"SYNC with master failed: %s\0A\00", align 1
@746 = private unnamed_addr constant [5 x i8] c"EOF:\00", align 1
@747 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@748 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@type_string = dso_local global %20 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @747, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @537, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @748, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@749 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@750 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@type_list = dso_local global %20 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @749, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @750, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@751 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@752 = private unnamed_addr constant [8 x i8] c"members\00", align 1
@type_set = dso_local global %20 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @751, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @465, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @752, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@753 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@754 = private unnamed_addr constant [7 x i8] c"fields\00", align 1
@type_hash = dso_local global %20 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @753, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @267, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @754, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@755 = private unnamed_addr constant [5 x i8] c"zset\00", align 1
@type_zset = dso_local global %20 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @755, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @612, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @752, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@756 = private unnamed_addr constant [7 x i8] c"stream\00", align 1
@757 = private unnamed_addr constant [8 x i8] c"entries\00", align 1
@type_stream = dso_local global %20 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @756, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @589, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @757, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@758 = private unnamed_addr constant [6 x i8] c"other\00", align 1
@759 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@type_other = dso_local global %20 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @758, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @759, i32 0, i32 0), i64 0, i64 0, i64 0, i8* null }, align 8
@760 = private unnamed_addr constant [6 x i8] c"%lldB\00", align 1
@761 = private unnamed_addr constant [6 x i8] c"%.2fK\00", align 1
@762 = private unnamed_addr constant [6 x i8] c"%.2fM\00", align 1
@763 = private unnamed_addr constant [6 x i8] c"%.2fG\00", align 1
@764 = private unnamed_addr constant [9 x i8] c"lru:%lld\00", align 1
@765 = internal global %21 zeroinitializer, align 8
@766 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@767 = private unnamed_addr constant [8 x i8] c"FAKETTY\00", align 1
@768 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@769 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@770 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@771 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@772 = internal global %23 zeroinitializer, align 8
@773 = private unnamed_addr constant [28 x i8] c"Invalid address format: %s\0A\00", align 1
@774 = private unnamed_addr constant [35 x i8] c"Node %s:%d replied with error:\0A%s\0A\00", align 1
@775 = private unnamed_addr constant [172 x i8] c"*** ERROR: Invalid configuration for cluster creation.\0A*** Redis Cluster requires at least 3 master nodes.\0A*** This is not possible with %d nodes and %d replicas per node.\00", align 1
@776 = private unnamed_addr constant [38 x i8] c"\0A*** At least %d nodes are required.\0A\00", align 1
@777 = private unnamed_addr constant [53 x i8] c">>> Performing hash slots allocation on %d nodes...\0A\00", align 1
@778 = private unnamed_addr constant [31 x i8] c"Master[%d] -> Slots %lu - %lu\0A\00", align 1
@779 = private unnamed_addr constant [31 x i8] c"Adding replica %s:%d to %s:%d\0A\00", align 1
@780 = private unnamed_addr constant [26 x i8] c"Adding extra replicas...\0A\00", align 1
@781 = private unnamed_addr constant [35 x i8] c"Can I set the above configuration?\00", align 1
@782 = private unnamed_addr constant [33 x i8] c">>> Nodes configuration updated\0A\00", align 1
@783 = private unnamed_addr constant [50 x i8] c">>> Assign a different config epoch to each node\0A\00", align 1
@784 = private unnamed_addr constant [28 x i8] c"cluster set-config-epoch %d\00", align 1
@785 = private unnamed_addr constant [55 x i8] c">>> Sending CLUSTER MEET messages to join the cluster\0A\00", align 1
@786 = private unnamed_addr constant [19 x i8] c"cluster meet %s %d\00", align 1
@787 = private unnamed_addr constant [38 x i8] c"Failed to send CLUSTER MEET command.\0A\00", align 1
@788 = private unnamed_addr constant [15 x i8] c"TLS Error: %s\0A\00", align 1
@789 = private unnamed_addr constant [31 x i8] c"Could not connect to Redis at \00", align 1
@790 = private unnamed_addr constant [11 x i8] c"%s:%d: %s\0A\00", align 1
@791 = private unnamed_addr constant [8 x i8] c"AUTH %s\00", align 1
@792 = private unnamed_addr constant [11 x i8] c"AUTH %s %s\00", align 1
@793 = private unnamed_addr constant [16 x i8] c"cluster_enabled\00", align 1
@794 = private unnamed_addr constant [37 x i8] c"is not configured as a cluster node.\00", align 1
@795 = private unnamed_addr constant [21 x i8] c"[ERR] Node %s:%d %s\0A\00", align 1
@796 = private unnamed_addr constant [7 x i8] c"myself\00", align 1
@797 = private unnamed_addr constant [4 x i8] c"->-\00", align 1
@798 = private unnamed_addr constant [4 x i8] c"-<-\00", align 1
@799 = private unnamed_addr constant [36 x i8] c"Error: invalid CLUSTER NODES reply\0A\00", align 1
@800 = private unnamed_addr constant [7 x i8] c"noaddr\00", align 1
@801 = private unnamed_addr constant [13 x i8] c"disconnected\00", align 1
@802 = private unnamed_addr constant [5 x i8] c"fail\00", align 1
@803 = private unnamed_addr constant [6 x i8] c"slave\00", align 1
@804 = private unnamed_addr constant [3 x i8] c"\1B[\00", align 1
@805 = private unnamed_addr constant [6 x i8] c"29;1m\00", align 1
@806 = private unnamed_addr constant [6 x i8] c"33;1m\00", align 1
@807 = private unnamed_addr constant [6 x i8] c"31;1m\00", align 1
@808 = private unnamed_addr constant [6 x i8] c"32;1m\00", align 1
@809 = private unnamed_addr constant [3 x i8] c"0m\00", align 1
@810 = private unnamed_addr constant [5 x i8] c"db0:\00", align 1
@811 = private unnamed_addr constant [20 x i8] c"cluster_known_nodes\00", align 1
@812 = private unnamed_addr constant [119 x i8] c"is not empty. Either the node already knows other nodes (check with CLUSTER NODES) or contains some key in database 0.\00", align 1
@813 = private unnamed_addr constant [43 x i8] c"array->nodes < (array->nodes + array->len)\00", align 1
@814 = private unnamed_addr constant [12 x i8] c"redis-cli.c\00", align 1
@815 = private unnamed_addr constant [81 x i8] c"void clusterManagerNodeArrayAdd(clusterManagerNodeArray *, clusterManagerNode *)\00", align 1
@816 = private unnamed_addr constant [13 x i8] c"node != NULL\00", align 1
@817 = private unnamed_addr constant [26 x i8] c"array->count < array->len\00", align 1
@818 = private unnamed_addr constant [84 x i8] c"void clusterManagerNodeArrayShift(clusterManagerNodeArray *, clusterManagerNode **)\00", align 1
@819 = private unnamed_addr constant [60 x i8] c">>> Trying to optimize slaves allocation for anti-affinity\0A\00", align 1
@820 = private unnamed_addr constant [37 x i8] c"[OK] Perfect anti-affinity obtained!\00", align 1
@821 = private unnamed_addr constant [59 x i8] c"[WARNING] Some slaves are in the same host as their master\00", align 1
@822 = private unnamed_addr constant [62 x i8] c"[WARNING] Some slaves of the same master are in the same host\00", align 1
@823 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@824 = internal global %5 { i64 (i8*)* @1433, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @1434, void (i8*, i8*)* null, void (i8*, i8*)* @1435 }, align 8
@825 = private unnamed_addr constant [12 x i8] c"key != NULL\00", align 1
@826 = private unnamed_addr constant [102 x i8] c"int clusterManagerGetAntiAffinityScore(clusterManagerNodeArray *, int, clusterManagerNode ***, int *)\00", align 1
@827 = private unnamed_addr constant [4 x i8] c"m%s\00", align 1
@828 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@829 = private unnamed_addr constant [2 x i8] c" \00", align 1
@830 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@831 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@832 = private unnamed_addr constant [12 x i8] c"S: %S %s:%u\00", align 1
@833 = private unnamed_addr constant [41 x i8] c"%s: %S %s:%u\0A%s   slots:%S (%u slots) %S\00", align 1
@834 = private unnamed_addr constant [20 x i8] c"\0A%s   replicates %S\00", align 1
@835 = private unnamed_addr constant [31 x i8] c"\0A%s   %U additional replica(s)\00", align 1
@836 = private unnamed_addr constant [2 x i8] c",\00", align 1
@837 = private unnamed_addr constant [4 x i8] c"[%u\00", align 1
@838 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@839 = private unnamed_addr constant [5 x i8] c"-%u]\00", align 1
@840 = private unnamed_addr constant [3 x i8] c"%S\00", align 1
@841 = private unnamed_addr constant [28 x i8] c"%s (type 'yes' to accept): \00", align 1
@stdin = external dso_local global %1*, align 8
@842 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@843 = private unnamed_addr constant [21 x i8] c"CLUSTER REPLICATE %s\00", align 1
@844 = private unnamed_addr constant [8 x i8] c"CLUSTER\00", align 1
@845 = private unnamed_addr constant [9 x i8] c"ADDSLOTS\00", align 1
@846 = private unnamed_addr constant [33 x i8] c"Waiting for the cluster to join\0A\00", align 1
@847 = private unnamed_addr constant [2 x i8] c".\00", align 1
@848 = private unnamed_addr constant [40 x i8] c"Warning: %d node(s) may be unreachable\0A\00", align 1
@849 = private unnamed_addr constant [52 x i8] c" - The port %d of node %s may be unreachable from:\0A\00", align 1
@850 = private unnamed_addr constant [37 x i8] c" - Node %s may be unreachable from:\0A\00", align 1
@851 = private unnamed_addr constant [7 x i8] c"   %s\0A\00", align 1
@852 = private unnamed_addr constant [128 x i8] c"Cluster bus ports must be reachable by every node.\0ARemember that cluster bus ports are different from standard instance ports.\0A\00", align 1
@853 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@854 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@855 = internal global %5 { i64 (i8*)* @1433, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @1434, void (i8*, i8*)* @1435, void (i8*, i8*)* @1445 }, align 8
@856 = private unnamed_addr constant [6 x i8] c"%s:%u\00", align 1
@857 = private unnamed_addr constant [10 x i8] c"handshake\00", align 1
@858 = private unnamed_addr constant [42 x i8] c"[ERR] Unable to load info for node %s:%d\0A\00", align 1
@859 = private unnamed_addr constant [62 x i8] c"*** WARNING: %s:%d claims to be slave of unknown node ID %s.\0A\00", align 1
@860 = private unnamed_addr constant [49 x i8] c">>> Performing Cluster Check (using node %s:%d)\0A\00", align 1
@861 = private unnamed_addr constant [45 x i8] c"[ERR] Nodes don't agree about configuration!\00", align 1
@862 = private unnamed_addr constant [49 x i8] c"[OK] All nodes agree about slots configuration.\0A\00", align 1
@863 = private unnamed_addr constant [29 x i8] c">>> Check for open slots...\0A\00", align 1
@864 = private unnamed_addr constant [51 x i8] c"[WARNING] Node %s:%d has slots in migrating state \00", align 1
@865 = private unnamed_addr constant [4 x i8] c",%S\00", align 1
@866 = private unnamed_addr constant [51 x i8] c"[WARNING] Node %s:%d has slots in importing state \00", align 1
@867 = private unnamed_addr constant [41 x i8] c"[WARNING] The following slots are open: \00", align 1
@868 = private unnamed_addr constant [5 x i8] c"%s.\0A\00", align 1
@869 = private unnamed_addr constant [29 x i8] c">>> Check slots coverage...\0A\00", align 1
@870 = private unnamed_addr constant [28 x i8] c"[OK] All %d slots covered.\0A\00", align 1
@871 = private unnamed_addr constant [46 x i8] c"[ERR] Not all %d slots are covered by nodes.\0A\00", align 1
@872 = private unnamed_addr constant [39 x i8] c">>> Check for multiple slot owners...\0A\00", align 1
@873 = private unnamed_addr constant [34 x i8] c"[WARNING] Slot %d has %d owners:\0A\00", align 1
@874 = private unnamed_addr constant [11 x i8] c"    %s:%d\0A\00", align 1
@875 = private unnamed_addr constant [43 x i8] c"Failed to fix multiple owners for slot %d\0A\00", align 1
@876 = private unnamed_addr constant [32 x i8] c"[OK] No multiple owners found.\0A\00", align 1
@877 = private unnamed_addr constant [351 x i8] c"*** Fixing open slots with %d unreachable masters is dangerous: redis-cli will assume that slots about masters that are not reachable are not covered, and will try to reassign them to the reachable nodes. This can cause data loss and is rarely what you want to do. If you really want to proceed use the --cluster-fix-with-unreachable-masters option.\0A\00", align 1
@878 = private unnamed_addr constant [25 x i8] c">>> Fixing open slot %d\0A\00", align 1
@879 = private unnamed_addr constant [27 x i8] c"CLUSTER COUNTKEYSINSLOT %d\00", align 1
@880 = private unnamed_addr constant [55 x i8] c"*** Found keys about slot %d in non-owner node %s:%d!\0A\00", align 1
@881 = private unnamed_addr constant [8 x i8] c"%s%s:%u\00", align 1
@882 = private unnamed_addr constant [45 x i8] c"*** Found keys about slot %d in node %s:%d!\0A\00", align 1
@883 = private unnamed_addr constant [8 x i8] c"%s%S:%u\00", align 1
@884 = private unnamed_addr constant [25 x i8] c"Set as migrating in: %s\0A\00", align 1
@885 = private unnamed_addr constant [25 x i8] c"Set as importing in: %s\0A\00", align 1
@886 = private unnamed_addr constant [76 x i8] c">>> No single clear owner for the slot, selecting an owner by # of keys...\0A\00", align 1
@887 = private unnamed_addr constant [53 x i8] c"[ERR] Can't select a slot owner. Impossible to fix.\0A\00", align 1
@888 = private unnamed_addr constant [41 x i8] c"*** Configuring %s:%d as the slot owner\0A\00", align 1
@889 = private unnamed_addr constant [14 x i8] c"owner != NULL\00", align 1
@890 = private unnamed_addr constant [35 x i8] c"int clusterManagerFixOpenSlot(int)\00", align 1
@891 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@892 = private unnamed_addr constant [10 x i8] c"importing\00", align 1
@893 = private unnamed_addr constant [48 x i8] c">>> Case 1: Moving slot %d from %s:%d to %s:%d\0A\00", align 1
@894 = private unnamed_addr constant [60 x i8] c">>> Case 2: Moving all the %d slot keys to its owner %s:%d\0A\00", align 1
@895 = private unnamed_addr constant [35 x i8] c">>> Setting %d as STABLE in %s:%d\0A\00", align 1
@896 = private unnamed_addr constant [5 x i8] c"NODE\00", align 1
@897 = private unnamed_addr constant [18 x i8] c"target_id != NULL\00", align 1
@898 = private unnamed_addr constant [97 x i8] c">>> Case 3: Moving slot %d from %s:%d to %s:%d and closing it on all the other importing nodes.\0A\00", align 1
@899 = private unnamed_addr constant [68 x i8] c">>> Case 3: Closing slot %d on both migrating and importing nodes.\0A\00", align 1
@900 = private unnamed_addr constant [28 x i8] c"CLUSTER GETKEYSINSLOT %d %d\00", align 1
@901 = private unnamed_addr constant [38 x i8] c">>> Case 4: Closing slot %d on %s:%d\0A\00", align 1
@902 = private unnamed_addr constant [22 x i8] c"CLUSTER SETSLOT %d %s\00", align 1
@903 = private unnamed_addr constant [7 x i8] c"STABLE\00", align 1
@904 = private unnamed_addr constant [135 x i8] c"[ERR] Sorry, redis-cli can't fix this slot yet (work in progress). Slot is set as migrating in %s, as importing in %s, owner is %s:%d\0A\00", align 1
@905 = private unnamed_addr constant [20 x i8] c"CLUSTER ADDSLOTS %d\00", align 1
@906 = private unnamed_addr constant [20 x i8] c"CLUSTER DELSLOTS %d\00", align 1
@907 = private unnamed_addr constant [42 x i8] c"slot >= 0 && slot < CLUSTER_MANAGER_SLOTS\00", align 1
@908 = private unnamed_addr constant [83 x i8] c"clusterManagerNode *clusterManagerGetSlotOwner(clusterManagerNode *, int, char **)\00", align 1
@909 = private unnamed_addr constant [33 x i8] c"reply->type == REDIS_REPLY_ARRAY\00", align 1
@910 = private unnamed_addr constant [49 x i8] c"r->type == REDIS_REPLY_ARRAY && r->elements >= 3\00", align 1
@911 = private unnamed_addr constant [51 x i8] c"nr->type == REDIS_REPLY_ARRAY && nr->elements >= 2\00", align 1
@912 = private unnamed_addr constant [11 x i8] c"ip != NULL\00", align 1
@913 = private unnamed_addr constant [25 x i8] c"CLUSTER SETSLOT %d %s %s\00", align 1
@914 = private unnamed_addr constant [37 x i8] c"Moving slot %d from %s:%d to %s:%d: \00", align 1
@915 = private unnamed_addr constant [10 x i8] c"migrating\00", align 1
@916 = private unnamed_addr constant [109 x i8] c"int clusterManagerMigrateKeysInSlot(clusterManagerNode *, clusterManagerNode *, int, int, int, int, char **)\00", align 1
@917 = private unnamed_addr constant [8 x i8] c"BUSYKEY\00", align 1
@918 = private unnamed_addr constant [55 x i8] c"*** Slot was not served, setting owner to node %s:%d.\0A\00", align 1
@919 = private unnamed_addr constant [24 x i8] c"\0A*** Target key exists\0A\00", align 1
@920 = private unnamed_addr constant [42 x i8] c"*** Checking key values on both nodes...\0A\00", align 1
@921 = private unnamed_addr constant [25 x i8] c"*** Value check failed!\0A\00", align 1
@922 = private unnamed_addr constant [141 x i8] c"*** Found %d key(s) in both source node and target node having different values.\0A    Source node: %s:%d\0A    Target node: %s:%d\0A    Keys(s):\0A\00", align 1
@923 = private unnamed_addr constant [10 x i8] c"    - %s\0A\00", align 1
@924 = private unnamed_addr constant [132 x i8] c"Please fix the above key(s) manually and try again or relaunch the command \0Awith --cluster-replace option to force key overriding.\0A\00", align 1
@925 = private unnamed_addr constant [30 x i8] c"*** Replacing target keys...\0A\00", align 1
@926 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@927 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@928 = private unnamed_addr constant [8 x i8] c"REPLACE\00", align 1
@929 = private unnamed_addr constant [6 x i8] c"AUTH2\00", align 1
@930 = private unnamed_addr constant [34 x i8] c"entry->type == REDIS_REPLY_STRING\00", align 1
@931 = private unnamed_addr constant [121 x i8] c"redisReply *clusterManagerMigrateKeysInReply(clusterManagerNode *, clusterManagerNode *, redisReply *, int, int, char *)\00", align 1
@932 = internal global i8* getelementptr inbounds ([41 x i8], [41 x i8]* @933, i32 0, i32 0), align 8
@933 = private unnamed_addr constant [41 x i8] c"0000000000000000000000000000000000000000\00", align 1
@934 = private unnamed_addr constant [6 x i8] c"DEBUG\00", align 1
@935 = private unnamed_addr constant [13 x i8] c"DIGEST-VALUE\00", align 1
@936 = private unnamed_addr constant [77 x i8] c"keys_reply->elements == r1->elements && keys_reply->elements == r2->elements\00", align 1
@937 = private unnamed_addr constant [102 x i8] c"int clusterManagerCompareKeysValues(clusterManagerNode *, clusterManagerNode *, redisReply *, list *)\00", align 1
@938 = private unnamed_addr constant [355 x i8] c"*** Fixing slots coverage with %d unreachable masters is dangerous: redis-cli will assume that slots about masters that are not reachable are not covered, and will try to reassign them to the reachable nodes. This can cause data loss and is rarely what you want to do. If you really want to proceed use the --cluster-fix-with-unreachable-masters option.\0A\00", align 1
@939 = private unnamed_addr constant [30 x i8] c">>> Fixing slots coverage...\0A\00", align 1
@940 = private unnamed_addr constant [43 x i8] c"int clusterManagerFixSlotsCoverage(char *)\00", align 1
@941 = private unnamed_addr constant [3 x i8] c", \00", align 1
@942 = private unnamed_addr constant [64 x i8] c"The following uncovered slots have no keys across the cluster:\0A\00", align 1
@943 = private unnamed_addr constant [48 x i8] c"Fix these slots by covering with a random node?\00", align 1
@944 = private unnamed_addr constant [33 x i8] c">>> Covering slot %s with %s:%d\0A\00", align 1
@945 = private unnamed_addr constant [59 x i8] c"The following uncovered slots have keys in just one node:\0A\00", align 1
@946 = private unnamed_addr constant [46 x i8] c"Fix these slots by covering with those nodes?\00", align 1
@947 = private unnamed_addr constant [14 x i8] c"entry != NULL\00", align 1
@948 = private unnamed_addr constant [11 x i8] c"fn != NULL\00", align 1
@949 = private unnamed_addr constant [60 x i8] c"The following uncovered slots have keys in multiple nodes:\0A\00", align 1
@950 = private unnamed_addr constant [51 x i8] c"Fix these slots by moving keys into a single node?\00", align 1
@951 = private unnamed_addr constant [43 x i8] c">>> Covering slot %s moving keys to %s:%d\0A\00", align 1
@952 = private unnamed_addr constant [10 x i8] c"IMPORTING\00", align 1
@953 = private unnamed_addr constant [43 x i8] c">>> Fixing multiple owners for slot %d...\0A\00", align 1
@954 = private unnamed_addr constant [23 x i8] c"listLength(owners) > 1\00", align 1
@955 = private unnamed_addr constant [53 x i8] c"int clusterManagerFixMultipleSlotOwners(int, list *)\00", align 1
@956 = private unnamed_addr constant [34 x i8] c">>> Setting slot %d owner: %s:%d\0A\00", align 1
@957 = private unnamed_addr constant [40 x i8] c">>> Adding node %s:%d to cluster %s:%d\0A\00", align 1
@958 = private unnamed_addr constant [28 x i8] c"[ERR] No such master ID %s\0A\00", align 1
@959 = private unnamed_addr constant [20 x i8] c"master_node != NULL\00", align 1
@960 = private unnamed_addr constant [47 x i8] c"int clusterManagerCommandAddNode(int, char **)\00", align 1
@961 = private unnamed_addr constant [37 x i8] c"Automatically selected master %s:%d\0A\00", align 1
@962 = private unnamed_addr constant [42 x i8] c"[ERR] Sorry, can't connect to node %s:%d\0A\00", align 1
@963 = private unnamed_addr constant [66 x i8] c">>> Send CLUSTER MEET to node %s:%d to make it join the cluster.\0A\00", align 1
@964 = private unnamed_addr constant [19 x i8] c"CLUSTER MEET %s %d\00", align 1
@965 = private unnamed_addr constant [41 x i8] c">>> Configure node as replica of %s:%d.\0A\00", align 1
@966 = private unnamed_addr constant [32 x i8] c"[OK] New node added correctly.\0A\00", align 1
@967 = private unnamed_addr constant [139 x i8] c"[ERR] Invalid arguments: you need to pass either a valid address (ie. 120.0.0.1:7000) or space separated IP and port (ie. 120.0.0.1 7000)\0A\00", align 1
@968 = private unnamed_addr constant [41 x i8] c">>> Removing node %s from cluster %s:%d\0A\00", align 1
@969 = private unnamed_addr constant [26 x i8] c"[ERR] No such node ID %s\0A\00", align 1
@970 = private unnamed_addr constant [65 x i8] c"[ERR] Node %s:%d is not empty! Reshard data away and try again.\0A\00", align 1
@971 = private unnamed_addr constant [55 x i8] c">>> Sending CLUSTER FORGET messages to the cluster...\0A\00", align 1
@972 = private unnamed_addr constant [15 x i8] c"master != NULL\00", align 1
@973 = private unnamed_addr constant [50 x i8] c"int clusterManagerCommandDeleteNode(int, char **)\00", align 1
@974 = private unnamed_addr constant [31 x i8] c">>> %s:%d as replica of %s:%d\0A\00", align 1
@975 = private unnamed_addr constant [18 x i8] c"CLUSTER FORGET %s\00", align 1
@976 = private unnamed_addr constant [53 x i8] c">>> Sending CLUSTER RESET SOFT to the deleted node.\0A\00", align 1
@977 = private unnamed_addr constant [17 x i8] c"CLUSTER RESET %s\00", align 1
@978 = private unnamed_addr constant [5 x i8] c"SOFT\00", align 1
@979 = private unnamed_addr constant [50 x i8] c"%s:%d (%s...) -> %d keys | %d slots | %d slaves.\0A\00", align 1
@980 = private unnamed_addr constant [29 x i8] c"[OK] %d keys in %d masters.\0A\00", align 1
@981 = private unnamed_addr constant [32 x i8] c"%.2f keys per slot on average.\0A\00", align 1
@982 = private unnamed_addr constant [56 x i8] c"*** Please fix your cluster problems before resharding\0A\00", align 1
@983 = private unnamed_addr constant [52 x i8] c"How many slots do you want to move (from 1 to %d)? \00", align 1
@984 = private unnamed_addr constant [32 x i8] c"What is the receiving node ID? \00", align 1
@985 = private unnamed_addr constant [39 x i8] c"Please enter all the source node IDs.\0A\00", align 1
@986 = private unnamed_addr constant [71 x i8] c"  Type 'all' to use all the nodes as source nodes for the hash slots.\0A\00", align 1
@987 = private unnamed_addr constant [58 x i8] c"  Type 'done' once you entered all the source nodes IDs.\0A\00", align 1
@988 = private unnamed_addr constant [19 x i8] c"Source node #%lu: \00", align 1
@989 = private unnamed_addr constant [5 x i8] c"done\00", align 1
@990 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@991 = private unnamed_addr constant [47 x i8] c"*** No source nodes given, operation aborted.\0A\00", align 1
@992 = private unnamed_addr constant [26 x i8] c"\0AReady to move %d slots.\0A\00", align 1
@993 = private unnamed_addr constant [17 x i8] c"  Source nodes:\0A\00", align 1
@994 = private unnamed_addr constant [21 x i8] c"  Destination node:\0A\00", align 1
@995 = private unnamed_addr constant [20 x i8] c"  Resharding plan:\0A\00", align 1
@996 = private unnamed_addr constant [65 x i8] c"Do you want to proceed with the proposed reshard plan (yes/no)? \00", align 1
@997 = private unnamed_addr constant [73 x i8] c"*** The specified node (%s) is not known or not a master, please retry.\0A\00", align 1
@998 = private unnamed_addr constant [63 x i8] c"*** It is not possible to use the target node as source node.\0A\00", align 1
@999 = private unnamed_addr constant [28 x i8] c"    Moving slot %d from %s\0A\00", align 1
@1000 = private unnamed_addr constant [28 x i8] c"*** No such master node %s\0A\00", align 1
@1001 = private unnamed_addr constant [57 x i8] c"*** Please fix your cluster problems before rebalancing\0A\00", align 1
@1002 = private unnamed_addr constant [71 x i8] c"*** No rebalancing needed! All nodes are within the %.2f%% threshold.\0A\00", align 1
@1003 = private unnamed_addr constant [54 x i8] c">>> Rebalancing across %d nodes. Total weight = %.2f\0A\00", align 1
@1004 = private unnamed_addr constant [27 x i8] c"%s:%d balance is %d slots\0A\00", align 1
@1005 = private unnamed_addr constant [37 x i8] c"Moving %d slots from %s:%d to %s:%d\0A\00", align 1
@1006 = private unnamed_addr constant [55 x i8] c"*** Assertion failed: Reshard table != number of slots\00", align 1
@1007 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@1008 = private unnamed_addr constant [69 x i8] c"Setting a node timeout of less than 100 milliseconds is a bad idea.\0A\00", align 1
@1009 = private unnamed_addr constant [57 x i8] c">>> Reconfiguring node timeout in every cluster node...\0A\00", align 1
@1010 = private unnamed_addr constant [16 x i8] c"CONFIG %s %s %d\00", align 1
@1011 = private unnamed_addr constant [21 x i8] c"cluster-node-timeout\00", align 1
@1012 = private unnamed_addr constant [10 x i8] c"CONFIG %s\00", align 1
@1013 = private unnamed_addr constant [8 x i8] c"REWRITE\00", align 1
@1014 = private unnamed_addr constant [31 x i8] c"*** New timeout set for %s:%d\0A\00", align 1
@1015 = private unnamed_addr constant [39 x i8] c"ERR setting node-timeot for %s:%d: %s\0A\00", align 1
@1016 = private unnamed_addr constant [42 x i8] c">>> New node timeout set. %d OK, %d ERR.\0A\00", align 1
@1017 = private unnamed_addr constant [68 x i8] c"[ERR] Option '--cluster-from' is required for subcommand 'import'.\0A\00", align 1
@1018 = private unnamed_addr constant [91 x i8] c"[ERR] Invalid --cluster-from host. You need to pass a valid address (ie. 120.0.0.1:7000).\0A\00", align 1
@1019 = private unnamed_addr constant [48 x i8] c">>> Importing data from %s:%d to cluster %s:%d\0A\00", align 1
@1020 = private unnamed_addr constant [42 x i8] c"Could not connect to Redis at %s:%d: %s.\0A\00", align 1
@1021 = private unnamed_addr constant [53 x i8] c"[ERR] The source node should not be a cluster node.\0A\00", align 1
@1022 = private unnamed_addr constant [33 x i8] c"*** Importing %d keys from DB 0\0A\00", align 1
@1023 = private unnamed_addr constant [50 x i8] c"MIGRATE %s %d %s %d %d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@1024 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@1025 = private unnamed_addr constant [17 x i8] c"SCAN %d COUNT %d\00", align 1
@1026 = private unnamed_addr constant [37 x i8] c"src_reply->type == REDIS_REPLY_ARRAY\00", align 1
@1027 = private unnamed_addr constant [46 x i8] c"int clusterManagerCommandImport(int, char **)\00", align 1
@1028 = private unnamed_addr constant [25 x i8] c"src_reply->elements >= 2\00", align 1
@1029 = private unnamed_addr constant [49 x i8] c"src_reply->element[1]->type == REDIS_REPLY_ARRAY\00", align 1
@1030 = private unnamed_addr constant [31 x i8] c"kr->type == REDIS_REPLY_STRING\00", align 1
@1031 = private unnamed_addr constant [24 x i8] c"Migrating %s to %s:%d: \00", align 1
@1032 = private unnamed_addr constant [5 x i8] c"COPY\00", align 1
@1033 = private unnamed_addr constant [37 x i8] c"Source %s:%d replied with error:\0A%s\0A\00", align 1
@1034 = private unnamed_addr constant [4 x i8] c"OK\0A\00", align 1
@1035 = private unnamed_addr constant [8 x i8] c"!c->err\00", align 1
@1036 = private unnamed_addr constant [72 x i8] c"redisReply *reconnectingRedisCommand(redisContext *, const char *, ...)\00", align 1
@1037 = private unnamed_addr constant [6 x i8] c"\0D\1B[0K\00", align 1
@1038 = private unnamed_addr constant [20 x i8] c"Reconnecting... %d\0D\00", align 1
@1039 = private unnamed_addr constant [11 x i8] c"Error: %s\0A\00", align 1
@1040 = private unnamed_addr constant [12 x i8] c">>> Calling\00", align 1
@1041 = private unnamed_addr constant [16 x i8] c"%s:%d: Failed!\0A\00", align 1
@1042 = private unnamed_addr constant [13 x i8] c"<endsession>\00", align 1
@1043 = private unnamed_addr constant [7 x i8] c"(true)\00", align 1
@1044 = private unnamed_addr constant [8 x i8] c"(false)\00", align 1
@1045 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@1046 = private unnamed_addr constant [24 x i8] c"Unknown reply type: %d\0A\00", align 1
@1047 = private unnamed_addr constant [9 x i8] c"redis %s\00", align 1
@1048 = private unnamed_addr constant [5 x i8] c"[%i]\00", align 1
@1049 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@1050 = private unnamed_addr constant [3 x i8] c"[\0A\00", align 1
@1051 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@1052 = private unnamed_addr constant [33 x i8] c">>> Node %s:%d -> Saving RDB...\0A\00", align 1
@1053 = private unnamed_addr constant [3 x i8] c"\0A]\00", align 1
@1054 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@1055 = private unnamed_addr constant [11 x i8] c"nodes.json\00", align 1
@1056 = private unnamed_addr constant [37 x i8] c"Saving cluster configuration to: %s\0A\00", align 1
@1057 = private unnamed_addr constant [3 x i8] c"w+\00", align 1
@1058 = private unnamed_addr constant [29 x i8] c"Could not save nodes to: %s\0A\00", align 1
@1059 = private unnamed_addr constant [104 x i8] c"*** Cluster seems to have some problems, please be aware of it if you're going to restore this backup.\0A\00", align 1
@1060 = private unnamed_addr constant [30 x i8] c"[OK] Backup created into: %s\0A\00", align 1
@1061 = private unnamed_addr constant [31 x i8] c"[ERR] Failed to back cluster!\0A\00", align 1
@1062 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@1063 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@1064 = private unnamed_addr constant [164 x i8] c"  {\0A    \22name\22: \22%s\22,\0A    \22host\22: \22%s\22,\0A    \22port\22: %d,\0A    \22replicate\22: %s,\0A    \22slots\22: [%s],\0A    \22slots_count\22: %d,\0A    \22flags\22: \22%s\22,\0A    \22current_epoch\22: %llu\00", align 1
@1065 = private unnamed_addr constant [28 x i8] c",\0A    \22cluster_errors\22: %lu\00", align 1
@1066 = private unnamed_addr constant [11 x i8] c"\22%S\22: \22%S\22\00", align 1
@1067 = private unnamed_addr constant [24 x i8] c",\0A    \22migrating\22: {%S}\00", align 1
@1068 = private unnamed_addr constant [24 x i8] c",\0A    \22importing\22: {%S}\00", align 1
@1069 = private unnamed_addr constant [5 x i8] c"\0A  }\00", align 1
@1070 = private unnamed_addr constant [27 x i8] c"Cluster Manager Commands:\0A\00", align 1
@1071 = private unnamed_addr constant [5 x i8] c"  %s\00", align 1
@1072 = private unnamed_addr constant [16 x i8] c"  --cluster-%s\0A\00", align 1
@1073 = private unnamed_addr constant [120 x i8] c"\0AFor check, fix, reshard, del-node, set-timeout you can specify the host and port of any working node in the cluster.\0A\0A\00", align 1
@1074 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@1075 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@1076 = private unnamed_addr constant [3 x i8] c"-x\00", align 1
@1077 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@1078 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@1079 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@1080 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@1081 = private unnamed_addr constant [3 x i8] c"-n\00", align 1
@1082 = private unnamed_addr constant [18 x i8] c"--no-auth-warning\00", align 1
@1083 = private unnamed_addr constant [10 x i8] c"--askpass\00", align 1
@1084 = private unnamed_addr constant [3 x i8] c"-a\00", align 1
@1085 = private unnamed_addr constant [7 x i8] c"--pass\00", align 1
@1086 = private unnamed_addr constant [7 x i8] c"--user\00", align 1
@1087 = private unnamed_addr constant [3 x i8] c"-u\00", align 1
@1088 = private unnamed_addr constant [6 x i8] c"--raw\00", align 1
@1089 = private unnamed_addr constant [9 x i8] c"--no-raw\00", align 1
@1090 = private unnamed_addr constant [6 x i8] c"--csv\00", align 1
@1091 = private unnamed_addr constant [10 x i8] c"--latency\00", align 1
@1092 = private unnamed_addr constant [15 x i8] c"--latency-dist\00", align 1
@1093 = private unnamed_addr constant [7 x i8] c"--mono\00", align 1
@1094 = private unnamed_addr constant [18 x i8] c"--latency-history\00", align 1
@1095 = private unnamed_addr constant [11 x i8] c"--lru-test\00", align 1
@1096 = private unnamed_addr constant [8 x i8] c"--slave\00", align 1
@1097 = private unnamed_addr constant [10 x i8] c"--replica\00", align 1
@1098 = private unnamed_addr constant [7 x i8] c"--stat\00", align 1
@1099 = private unnamed_addr constant [7 x i8] c"--scan\00", align 1
@1100 = private unnamed_addr constant [10 x i8] c"--pattern\00", align 1
@1101 = private unnamed_addr constant [20 x i8] c"--intrinsic-latency\00", align 1
@1102 = private unnamed_addr constant [6 x i8] c"--rdb\00", align 1
@1103 = private unnamed_addr constant [7 x i8] c"--pipe\00", align 1
@1104 = private unnamed_addr constant [15 x i8] c"--pipe-timeout\00", align 1
@1105 = private unnamed_addr constant [10 x i8] c"--bigkeys\00", align 1
@1106 = private unnamed_addr constant [10 x i8] c"--memkeys\00", align 1
@1107 = private unnamed_addr constant [18 x i8] c"--memkeys-samples\00", align 1
@1108 = private unnamed_addr constant [10 x i8] c"--hotkeys\00", align 1
@1109 = private unnamed_addr constant [7 x i8] c"--eval\00", align 1
@1110 = private unnamed_addr constant [6 x i8] c"--ldb\00", align 1
@1111 = private unnamed_addr constant [16 x i8] c"--ldb-sync-mode\00", align 1
@1112 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@1113 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@1114 = private unnamed_addr constant [10 x i8] c"--verbose\00", align 1
@1115 = private unnamed_addr constant [10 x i8] c"--cluster\00", align 1
@1116 = private unnamed_addr constant [19 x i8] c"--cluster-replicas\00", align 1
@1117 = private unnamed_addr constant [20 x i8] c"--cluster-master-id\00", align 1
@1118 = private unnamed_addr constant [15 x i8] c"--cluster-from\00", align 1
@1119 = private unnamed_addr constant [13 x i8] c"--cluster-to\00", align 1
@1120 = private unnamed_addr constant [17 x i8] c"--cluster-weight\00", align 1
@1121 = private unnamed_addr constant [156 x i8] c"WARNING: you cannot use --cluster-weight more than once.\0AYou can set more weights by adding them as a space-separated list, ie:\0A--cluster-weight n1=w n2=w\0A\00", align 1
@1122 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@1123 = private unnamed_addr constant [16 x i8] c"--cluster-slots\00", align 1
@1124 = private unnamed_addr constant [18 x i8] c"--cluster-timeout\00", align 1
@1125 = private unnamed_addr constant [19 x i8] c"--cluster-pipeline\00", align 1
@1126 = private unnamed_addr constant [20 x i8] c"--cluster-threshold\00", align 1
@1127 = private unnamed_addr constant [14 x i8] c"--cluster-yes\00", align 1
@1128 = private unnamed_addr constant [19 x i8] c"--cluster-simulate\00", align 1
@1129 = private unnamed_addr constant [18 x i8] c"--cluster-replace\00", align 1
@1130 = private unnamed_addr constant [15 x i8] c"--cluster-copy\00", align 1
@1131 = private unnamed_addr constant [16 x i8] c"--cluster-slave\00", align 1
@1132 = private unnamed_addr constant [28 x i8] c"--cluster-use-empty-masters\00", align 1
@1133 = private unnamed_addr constant [33 x i8] c"--cluster-search-multiple-owners\00", align 1
@1134 = private unnamed_addr constant [39 x i8] c"--cluster-fix-with-unreachable-masters\00", align 1
@1135 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@1136 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@1137 = private unnamed_addr constant [14 x i8] c"redis-cli %s\0A\00", align 1
@1138 = private unnamed_addr constant [3 x i8] c"-3\00", align 1
@1139 = private unnamed_addr constant [53 x i8] c"Unrecognized option or bad number of args for: '%s'\0A\00", align 1
@1140 = private unnamed_addr constant [51 x i8] c"Options --ldb and --ldb-sync-mode require --eval.\0A\00", align 1
@1141 = private unnamed_addr constant [37 x i8] c"Try %s --help for more information.\0A\00", align 1
@1142 = private unnamed_addr constant [99 x i8] c"Warning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\0A\00", align 1
@1143 = private unnamed_addr constant [2210 x i8] c"redis-cli %s\0A\0AUsage: redis-cli [OPTIONS] [cmd [arg [arg ...]]]\0A  -h <hostname>      Server hostname (default: 127.0.0.1).\0A  -p <port>          Server port (default: 6379).\0A  -s <socket>        Server socket (overrides hostname and port).\0A  -a <password>      Password to use when connecting to the server.\0A                     You can also use the REDISCLI_AUTH environment\0A                     variable to pass this password more safely\0A                     (if both are used, this argument takes predecence).\0A  --user <username>  Used to send ACL style 'AUTH username pass'. Needs -a.\0A  --pass <password>  Alias of -a for consistency with the new --user option.\0A  --askpass          Force user to input password with mask from STDIN.\0A                     If this argument is used, '-a' and REDISCLI_AUTH\0A                     environment variable will be ignored.\0A  -u <uri>           Server URI.\0A  -r <repeat>        Execute specified command N times.\0A  -i <interval>      When -r is used, waits <interval> seconds per command.\0A                     It is possible to specify sub-second times like -i 0.1.\0A  -n <db>            Database number.\0A  -3                 Start session in RESP3 protocol mode.\0A  -x                 Read last argument from STDIN.\0A  -d <delimiter>     Multi-bulk delimiter in for raw formatting (default: \\n).\0A  -c                 Enable cluster mode (follow -ASK and -MOVED redirections).\0A  --raw              Use raw formatting for replies (default when STDOUT is\0A                     not a tty).\0A  --no-raw           Force formatted output even when STDOUT is not a tty.\0A  --csv              Output in CSV format.\0A  --stat             Print rolling stats about server: mem, clients, ...\0A  --latency          Enter a special mode continuously sampling latency.\0A                     If you use this mode in an interactive session it runs\0A                     forever displaying real-time stats. Otherwise if --raw or\0A                     --csv is specified, or if you redirect the output to a non\0A                     TTY, it samples the latency for 1 second (you can use\0A                     -i to change the interval), then produces a single output\0A                     and exits.\0A\00", align 1
@1144 = private unnamed_addr constant [814 x i8] c"  --latency-history  Like --latency but tracking latency changes over time.\0A                     Default time interval is 15 sec. Change it using -i.\0A  --latency-dist     Shows latency as a spectrum, requires xterm 256 colors.\0A                     Default time interval is 1 sec. Change it using -i.\0A  --lru-test <keys>  Simulate a cache workload with an 80-20 distribution.\0A  --replica          Simulate a replica showing commands received from the master.\0A  --rdb <filename>   Transfer an RDB dump from remote server to local file.\0A  --pipe             Transfer raw Redis protocol from stdin to server.\0A  --pipe-timeout <n> In --pipe mode, abort with error if after sending all data.\0A                     no reply is received within <n> seconds.\0A                     Default timeout: %d. Use 0 to wait forever.\0A\00", align 1
@1145 = private unnamed_addr constant [1440 x i8] c"  --bigkeys          Sample Redis keys looking for keys with many elements (complexity).\0A  --memkeys          Sample Redis keys looking for keys consuming a lot of memory.\0A  --memkeys-samples <n> Sample Redis keys looking for keys consuming a lot of memory.\0A                     And define number of key elements to sample\0A  --hotkeys          Sample Redis keys looking for hot keys.\0A                     only works when maxmemory-policy is *lfu.\0A  --scan             List all keys using the SCAN command.\0A  --pattern <pat>    Useful with --scan to specify a SCAN pattern.\0A  --intrinsic-latency <sec> Run a test to measure intrinsic system latency.\0A                     The test will run for the specified amount of seconds.\0A  --eval <file>      Send an EVAL command using the Lua script at <file>.\0A  --ldb              Used with --eval enable the Redis Lua debugger.\0A  --ldb-sync-mode    Like --ldb but uses the synchronous Lua debugger, in\0A                     this mode the server is blocked and script changes are\0A                     not rolled back from the server memory.\0A  --cluster <command> [args...] [opts...]\0A                     Cluster Manager command and arguments (see below).\0A  --verbose          Verbose mode.\0A  --no-auth-warning  Don't show warning message when using password on command\0A                     line interface.\0A  --help             Output this help and exit.\0A  --version          Output version and exit.\0A\0A\00", align 1
@1146 = private unnamed_addr constant [590 x i8] c"Cluster Manager Commands:\0A  Use --cluster help to list all available cluster manager commands.\0A\0AExamples:\0A  cat /etc/passwd | redis-cli -x set mypasswd\0A  redis-cli get mypasswd\0A  redis-cli -r 100 lpush mylist x\0A  redis-cli -r 100 -i 1 info | grep used_memory_human:\0A  redis-cli --eval myscript.lua key1 key2 , arg1 arg2 arg3\0A  redis-cli --scan --pattern '*:12345*'\0A\0A  (Note: when using --eval the comma separates KEYS[] from ARGV[] items)\0A\0AWhen no command is given, redis-cli starts in interactive mode.\0AType \22help\22 in interactive mode for information on available commands\0Aand settings.\0A\0A\00", align 1
@1147 = private unnamed_addr constant [9 x i8] c"redis://\00", align 1
@1148 = private unnamed_addr constant [20 x i8] c"Invalid URI scheme\0A\00", align 1
@1149 = private unnamed_addr constant [25 x i8] c"Incomplete URI encoding\0A\00", align 1
@1150 = private unnamed_addr constant [35 x i8] c"Illegal character in URI encoding\0A\00", align 1
@1151 = private unnamed_addr constant [12 x i8] c"999.999.999\00", align 1
@1152 = private unnamed_addr constant [9 x i8] c" (git:%s\00", align 1
@1153 = private unnamed_addr constant [7 x i8] c"-dirty\00", align 1
@1154 = private unnamed_addr constant [2 x i8] c")\00", align 1
@1155 = private unnamed_addr constant [14 x i8] c"REDISCLI_AUTH\00", align 1
@1156 = private unnamed_addr constant [24 x i8] c"Please input password: \00", align 1
@1157 = private unnamed_addr constant [69 x i8] c"[ERR] Wrong number of arguments for specified --cluster sub command\0A\00", align 1
@1158 = private unnamed_addr constant [30 x i8] c"Unknown --cluster subcommand\0A\00", align 1
@1159 = private unnamed_addr constant [42 x i8] c"Could not negotiate a TLS connection: %s\0A\00", align 1
@1160 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@1161 = private unnamed_addr constant [22 x i8] c"Warning: AUTH failed\0A\00", align 1
@1162 = private unnamed_addr constant [10 x i8] c"SELECT %d\00", align 1
@1163 = private unnamed_addr constant [8 x i8] c"HELLO 3\00", align 1
@1164 = private unnamed_addr constant [9 x i8] c"\1B[0G\1B[2K\00", align 1
@1165 = private unnamed_addr constant [24 x i8] c" -- %.2f seconds range\0A\00", align 1
@1166 = private unnamed_addr constant [47 x i8] c"min: %lld, max: %lld, avg: %.2f (%lld samples)\00", align 1
@1167 = private unnamed_addr constant [21 x i8] c"%lld,%lld,%.2f,%lld\0A\00", align 1
@1168 = private unnamed_addr constant [21 x i8] c"%lld %lld %.2f %lld\0A\00", align 1
@1169 = private unnamed_addr constant [31 x %26] [%26 { i64 10, i64 0, i32 46 }, %26 { i64 125, i64 0, i32 45 }, %26 { i64 250, i64 0, i32 42 }, %26 { i64 500, i64 0, i32 35 }, %26 { i64 1000, i64 0, i32 49 }, %26 { i64 2000, i64 0, i32 50 }, %26 { i64 3000, i64 0, i32 51 }, %26 { i64 4000, i64 0, i32 52 }, %26 { i64 5000, i64 0, i32 53 }, %26 { i64 6000, i64 0, i32 54 }, %26 { i64 7000, i64 0, i32 55 }, %26 { i64 8000, i64 0, i32 56 }, %26 { i64 9000, i64 0, i32 57 }, %26 { i64 10000, i64 0, i32 65 }, %26 { i64 20000, i64 0, i32 66 }, %26 { i64 30000, i64 0, i32 67 }, %26 { i64 40000, i64 0, i32 68 }, %26 { i64 50000, i64 0, i32 69 }, %26 { i64 100000, i64 0, i32 70 }, %26 { i64 200000, i64 0, i32 71 }, %26 { i64 300000, i64 0, i32 72 }, %26 { i64 400000, i64 0, i32 73 }, %26 { i64 500000, i64 0, i32 74 }, %26 { i64 1000000, i64 0, i32 75 }, %26 { i64 2000000, i64 0, i32 76 }, %26 { i64 4000000, i64 0, i32 77 }, %26 { i64 8000000, i64 0, i32 78 }, %26 { i64 16000000, i64 0, i32 79 }, %26 { i64 30000000, i64 0, i32 80 }, %26 { i64 60000000, i64 0, i32 81 }, %26 { i64 0, i64 0, i32 63 }], align 16
@1170 = internal global [40 x i8] zeroinitializer, align 16
@1171 = internal global [40 x i8] zeroinitializer, align 16
@1172 = internal global i32 0, align 4
@1173 = private unnamed_addr constant [73 x i8] c"SYNC with master, discarding bytes of bulk transfer until EOF marker...\0A\00", align 1
@1174 = private unnamed_addr constant [61 x i8] c"SYNC with master, discarding %llu bytes of bulk transfer...\0A\00", align 1
@1175 = private unnamed_addr constant [41 x i8] c"Error reading RDB payload while SYNCing\0A\00", align 1
@1176 = private unnamed_addr constant [59 x i8] c"SYNC done after %llu bytes. Logging commands from master.\0A\00", align 1
@1177 = private unnamed_addr constant [4 x i8] c"ACK\00", align 1
@1178 = private unnamed_addr constant [42 x i8] c"SYNC done. Logging commands from master.\0A\00", align 1
@1179 = private unnamed_addr constant [6 x i8] c"MOVED\00", align 1
@1180 = private unnamed_addr constant [4 x i8] c"ASK\00", align 1
@1181 = private unnamed_addr constant [45 x i8] c"-> Redirected to slot [%d] located at %s:%d\0A\00", align 1
@1182 = private unnamed_addr constant [12 x i8] c"(error) %s\0A\00", align 1
@1183 = private unnamed_addr constant [16 x i8] c"(integer) %lld\0A\00", align 1
@1184 = private unnamed_addr constant [13 x i8] c"(double) %s\0A\00", align 1
@1185 = private unnamed_addr constant [7 x i8] c"(nil)\0A\00", align 1
@1186 = private unnamed_addr constant [8 x i8] c"(true)\0A\00", align 1
@1187 = private unnamed_addr constant [9 x i8] c"(false)\0A\00", align 1
@1188 = private unnamed_addr constant [15 x i8] c"(empty array)\0A\00", align 1
@1189 = private unnamed_addr constant [14 x i8] c"(empty hash)\0A\00", align 1
@1190 = private unnamed_addr constant [13 x i8] c"(empty set)\0A\00", align 1
@1191 = private unnamed_addr constant [24 x i8] c"(empty aggregate type)\0A\00", align 1
@1192 = private unnamed_addr constant [12 x i8] c"%%s%%%ud%c \00", align 1
@1193 = private unnamed_addr constant [5 x i8] c" => \00", align 1
@1194 = private unnamed_addr constant [7 x i8] c"ERROR,\00", align 1
@1195 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@1196 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@1197 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@1198 = private unnamed_addr constant [14 x i8] c"node->context\00", align 1
@1199 = private unnamed_addr constant [34 x i8] c"void getRDB(clusterManagerNode *)\00", align 1
@1200 = internal global [40 x i8] zeroinitializer, align 16
@1201 = internal global [40 x i8] zeroinitializer, align 16
@1202 = internal global i32 0, align 4
@1203 = private unnamed_addr constant [78 x i8] c"SYNC sent to master, writing bytes of bulk transfer until EOF marker to '%s'\0A\00", align 1
@1204 = private unnamed_addr constant [49 x i8] c"SYNC sent to master, writing %llu bytes to '%s'\0A\00", align 1
@1205 = private unnamed_addr constant [24 x i8] c"Error opening '%s': %s\0A\00", align 1
@1206 = private unnamed_addr constant [43 x i8] c"I/O Error reading RDB payload from socket\0A\00", align 1
@1207 = private unnamed_addr constant [32 x i8] c"Error writing data to file: %s\0A\00", align 1
@1208 = private unnamed_addr constant [12 x i8] c"short write\00", align 1
@1209 = private unnamed_addr constant [23 x i8] c"ftruncate failed: %s.\0A\00", align 1
@1210 = private unnamed_addr constant [49 x i8] c"Transfer finished with success after %llu bytes\0A\00", align 1
@1211 = private unnamed_addr constant [33 x i8] c"Transfer finished with success.\0A\00", align 1
@1212 = private unnamed_addr constant [42 x i8] c"config.cluster_manager_command.backup_dir\00", align 1
@1213 = private unnamed_addr constant [59 x i8] c"sds clusterManagerGetNodeRDBFilename(clusterManagerNode *)\00", align 1
@1214 = private unnamed_addr constant [24 x i8] c"redis-node-%s-%d-%s.rdb\00", align 1
@1215 = private unnamed_addr constant [47 x i8] c"Can't set the socket in non blocking mode: %s\0A\00", align 1
@1216 = private unnamed_addr constant [35 x i8] c"Error reading from the server: %s\0A\00", align 1
@1217 = private unnamed_addr constant [35 x i8] c"Error reading replies from server\0A\00", align 1
@1218 = private unnamed_addr constant [34 x i8] c"Last reply received from server.\0A\00", align 1
@1219 = private unnamed_addr constant [33 x i8] c"Error writing to the server: %s\0A\00", align 1
@1220 = private unnamed_addr constant [44 x i8] c"\0D\0A*2\0D\0A$4\0D\0AECHO\0D\0A$20\0D\0A01234567890123456789\0D\0A\00", align 16
@1221 = private unnamed_addr constant [53 x i8] c"All data transferred. Waiting for the last reply...\0A\00", align 1
@1222 = private unnamed_addr constant [30 x i8] c"Error reading from stdin: %s\0A\00", align 1
@1223 = private unnamed_addr constant [37 x i8] c"No replies for %d seconds: exiting.\0A\00", align 1
@1224 = private unnamed_addr constant [29 x i8] c"errors: %lld, replies: %lld\0A\00", align 1
@1225 = internal global %5 { i64 (i8*)* @1433, i8* (i8*, i8*)* null, i8* (i8*, i8*)* null, i32 (i8*, i8*, i8*)* @1434, void (i8*, i8*)* null, void (i8*, i8*)* @type_free }, align 8
@1226 = private unnamed_addr constant [65 x i8] c"\0A# Scanning the entire keyspace to find biggest keys as well as\0A\00", align 1
@1227 = private unnamed_addr constant [68 x i8] c"# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\0A\00", align 1
@1228 = private unnamed_addr constant [48 x i8] c"# per 100 SCAN commands (not usually needed).\0A\0A\00", align 1
@1229 = private unnamed_addr constant [38 x i8] c"Failed to allocate storage for keys!\0A\00", align 1
@1230 = private unnamed_addr constant [56 x i8] c"[%05.2f%%] Biggest %-6s found so far '%s' with %llu %s\0A\00", align 1
@1231 = private unnamed_addr constant [36 x i8] c"Failed to allocate memory for key!\0A\00", align 1
@1232 = private unnamed_addr constant [37 x i8] c"[%05.2f%%] Sampled %llu keys so far\0A\00", align 1
@1233 = private unnamed_addr constant [28 x i8] c"\0A-------- summary -------\0A\0A\00", align 1
@1234 = private unnamed_addr constant [36 x i8] c"Sampled %llu keys in the keyspace!\0A\00", align 1
@1235 = private unnamed_addr constant [51 x i8] c"Total key length in bytes is %llu (avg len %.2f)\0A\0A\00", align 1
@1236 = private unnamed_addr constant [36 x i8] c"Biggest %6s found '%s' has %llu %s\0A\00", align 1
@1237 = private unnamed_addr constant [57 x i8] c"%llu %ss with %llu %s (%05.2f%% of keys, avg size %.2f)\0A\00", align 1
@1238 = private unnamed_addr constant [28 x i8] c"Couldn't determine DBSIZE!\0A\00", align 1
@1239 = private unnamed_addr constant [10 x i8] c"SCAN %llu\00", align 1
@1240 = private unnamed_addr constant [16 x i8] c"SCAN error: %s\0A\00", align 1
@1241 = private unnamed_addr constant [31 x i8] c"Non ARRAY response from SCAN!\0A\00", align 1
@1242 = private unnamed_addr constant [34 x i8] c"Invalid element count from SCAN!\0A\00", align 1
@1243 = private unnamed_addr constant [46 x i8] c"reply->element[0]->type == REDIS_REPLY_STRING\00", align 1
@1244 = private unnamed_addr constant [43 x i8] c"redisReply *sendScan(unsigned long long *)\00", align 1
@1245 = private unnamed_addr constant [45 x i8] c"reply->element[1]->type == REDIS_REPLY_ARRAY\00", align 1
@1246 = private unnamed_addr constant [8 x i8] c"TYPE %s\00", align 1
@1247 = private unnamed_addr constant [42 x i8] c"Error getting type for key '%s' (%d: %s)\0A\00", align 1
@1248 = private unnamed_addr constant [28 x i8] c"TYPE returned an error: %s\0A\00", align 1
@1249 = private unnamed_addr constant [47 x i8] c"Invalid reply type (%d) for TYPE on key '%s'!\0A\00", align 1
@1250 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@1251 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@1252 = private unnamed_addr constant [9 x i8] c"%s %s %s\00", align 1
@1253 = private unnamed_addr constant [7 x i8] c"MEMORY\00", align 1
@1254 = private unnamed_addr constant [6 x i8] c"USAGE\00", align 1
@1255 = private unnamed_addr constant [20 x i8] c"%s %s %s SAMPLES %u\00", align 1
@1256 = private unnamed_addr constant [42 x i8] c"Error getting size for key '%s' (%d: %s)\0A\00", align 1
@1257 = private unnamed_addr constant [53 x i8] c"Warning:  %s on '%s' failed (may have changed type)\0A\00", align 1
@1258 = private unnamed_addr constant [61 x i8] c"\0A# Scanning the entire keyspace to find hot keys as well as\0A\00", align 1
@1259 = private unnamed_addr constant [56 x i8] c"[%05.2f%%] Hot key '%s' found so far with counter %llu\0A\00", align 1
@1260 = private unnamed_addr constant [46 x i8] c"hot key found with counter: %llu\09keyname: %s\0A\00", align 1
@1261 = private unnamed_addr constant [15 x i8] c"OBJECT freq %s\00", align 1
@1262 = private unnamed_addr constant [42 x i8] c"Error getting freq for key '%s' (%d: %s)\0A\00", align 1
@1263 = private unnamed_addr constant [61 x i8] c"Warning: OBJECT freq on '%s' failed (may have been deleted)\0A\00", align 1
@1264 = private unnamed_addr constant [11 x i8] c"ERROR: %s\0A\00", align 1
@1265 = private unnamed_addr constant [157 x i8] c"------- data ------ --------------------- load -------------------- - child -\0Akeys       mem      clients blocked requests            connections          \0A\00", align 1
@1266 = private unnamed_addr constant [10 x i8] c"db%d:keys\00", align 1
@1267 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@1268 = private unnamed_addr constant [6 x i8] c"%-11s\00", align 1
@1269 = private unnamed_addr constant [12 x i8] c"used_memory\00", align 1
@1270 = private unnamed_addr constant [5 x i8] c"%-8s\00", align 1
@1271 = private unnamed_addr constant [18 x i8] c"connected_clients\00", align 1
@1272 = private unnamed_addr constant [6 x i8] c" %-8s\00", align 1
@1273 = private unnamed_addr constant [16 x i8] c"blocked_clients\00", align 1
@1274 = private unnamed_addr constant [25 x i8] c"total_commands_processed\00", align 1
@1275 = private unnamed_addr constant [11 x i8] c"%ld (+%ld)\00", align 1
@1276 = private unnamed_addr constant [6 x i8] c"%-19s\00", align 1
@1277 = private unnamed_addr constant [27 x i8] c"total_connections_received\00", align 1
@1278 = private unnamed_addr constant [7 x i8] c" %-12s\00", align 1
@1279 = private unnamed_addr constant [19 x i8] c"bgsave_in_progress\00", align 1
@1280 = private unnamed_addr constant [24 x i8] c"aof_rewrite_in_progress\00", align 1
@1281 = private unnamed_addr constant [8 x i8] c"loading\00", align 1
@1282 = private unnamed_addr constant [4 x i8] c"AOF\00", align 1
@1283 = private unnamed_addr constant [9 x i8] c"SAVE+AOF\00", align 1
@1284 = private unnamed_addr constant [5 x i8] c"LOAD\00", align 1
@1285 = private unnamed_addr constant [19 x i8] c"SCAN %llu MATCH %s\00", align 1
@1286 = private unnamed_addr constant [11 x i8] c"I/O error\0A\00", align 1
@1287 = private unnamed_addr constant [10 x i8] c"SET %s %s\00", align 1
@1288 = private unnamed_addr constant [7 x i8] c"GET %s\00", align 1
@1289 = private unnamed_addr constant [27 x i8] c"I/O error during LRU test\0A\00", align 1
@1290 = private unnamed_addr constant [61 x i8] c"%lld Gets/sec | Hits: %lld (%.2f%%) | Misses: %lld (%.2f%%)\0A\00", align 1
@1291 = private unnamed_addr constant [40 x i8] c"Max latency so far: %lld microseconds.\0A\00", align 1
@1292 = internal global i32 0, align 4
@1293 = private unnamed_addr constant [79 x i8] c"\0A%lld total runs (avg latency: %.4f microseconds / %.2f nanoseconds per run).\0A\00", align 1
@1294 = private unnamed_addr constant [55 x i8] c"Worst run took %.0fx longer than the average latency.\0A\00", align 1
@1295 = private unnamed_addr constant [18 x i8] c"REDISCLI_HISTFILE\00", align 1
@1296 = private unnamed_addr constant [18 x i8] c".rediscli_history\00", align 1
@1297 = private unnamed_addr constant [16 x i8] c"not connected> \00", align 1
@1298 = private unnamed_addr constant [48 x i8] c"Invalid redis-cli repeat command option value.\0A\00", align 1
@1299 = private unnamed_addr constant [5 x i8] c"auth\00", align 1
@1300 = private unnamed_addr constant [4 x i8] c"acl\00", align 1
@1301 = private unnamed_addr constant [8 x i8] c"setuser\00", align 1
@1302 = private unnamed_addr constant [21 x i8] c"Invalid argument(s)\0A\00", align 1
@1303 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@1304 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@1305 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@1306 = private unnamed_addr constant [42 x i8] c"Use 'restart' only in Lua debugging mode.\00", align 1
@1307 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@1308 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@1309 = private unnamed_addr constant [35 x i8] c"\0A(Lua debugging session ended%s)\0A\0A\00", align 1
@1310 = private unnamed_addr constant [32 x i8] c" -- dataset changes rolled back\00", align 1
@1311 = private unnamed_addr constant [9 x i8] c"(%.2fs)\0A\00", align 1
@1312 = internal global i32 0, align 4
@1313 = internal global %27* null, align 8
@1314 = private unnamed_addr constant [4 x i8] c"@%s\00", align 1
@1315 = internal global [15 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1316, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @747, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @749, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @751, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1317, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @753, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1318, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1319, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1320, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1321, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1322, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1324, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @756, i32 0, i32 0)], align 16
@1316 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@1317 = private unnamed_addr constant [11 x i8] c"sorted_set\00", align 1
@1318 = private unnamed_addr constant [7 x i8] c"pubsub\00", align 1
@1319 = private unnamed_addr constant [13 x i8] c"transactions\00", align 1
@1320 = private unnamed_addr constant [11 x i8] c"connection\00", align 1
@1321 = private unnamed_addr constant [7 x i8] c"server\00", align 1
@1322 = private unnamed_addr constant [10 x i8] c"scripting\00", align 1
@1323 = private unnamed_addr constant [12 x i8] c"hyperloglog\00", align 1
@1324 = private unnamed_addr constant [8 x i8] c"cluster\00", align 1
@1325 = private unnamed_addr constant [4 x i8] c"geo\00", align 1
@1326 = private unnamed_addr constant [5 x i8] c"key \00", align 1
@1327 = private unnamed_addr constant [5 x i8] c"arg \00", align 1
@1328 = private unnamed_addr constant [14 x i8] c"...options...\00", align 1
@1329 = private unnamed_addr constant [19 x i8] c"Help not available\00", align 1
@1330 = private unnamed_addr constant [10 x i8] c"not known\00", align 1
@1331 = private unnamed_addr constant [6 x i8] c"help \00", align 1
@1332 = private unnamed_addr constant [6 x i8] c"eval \00", align 1
@1333 = private unnamed_addr constant [3 x i8] c"e \00", align 1
@1334 = private unnamed_addr constant [7 x i8] c"lolwut\00", align 1
@1335 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@1336 = private unnamed_addr constant [8 x i8] c"htstats\00", align 1
@1337 = private unnamed_addr constant [12 x i8] c"htstats-key\00", align 1
@1338 = private unnamed_addr constant [7 x i8] c"memory\00", align 1
@1339 = private unnamed_addr constant [13 x i8] c"malloc-stats\00", align 1
@1340 = private unnamed_addr constant [7 x i8] c"doctor\00", align 1
@1341 = private unnamed_addr constant [6 x i8] c"nodes\00", align 1
@1342 = private unnamed_addr constant [7 x i8] c"client\00", align 1
@1343 = private unnamed_addr constant [8 x i8] c"latency\00", align 1
@1344 = private unnamed_addr constant [6 x i8] c"graph\00", align 1
@1345 = private unnamed_addr constant [6 x i8] c"proxy\00", align 1
@1346 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@1347 = private unnamed_addr constant [8 x i8] c"monitor\00", align 1
@1348 = private unnamed_addr constant [10 x i8] c"subscribe\00", align 1
@1349 = private unnamed_addr constant [11 x i8] c"psubscribe\00", align 1
@1350 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@1351 = private unnamed_addr constant [6 x i8] c"psync\00", align 1
@1352 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@1353 = private unnamed_addr constant [44 x i8] c"Reading messages... (press Ctrl-C to quit)\0A\00", align 1
@1354 = private unnamed_addr constant [57 x i8] c"Entering replica output mode...  (press Ctrl-C to quit)\0A\00", align 1
@1355 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@1356 = private unnamed_addr constant [9 x i8] c"argc > 0\00", align 1
@1357 = private unnamed_addr constant [33 x i8] c"void cliOutputHelp(int, char **)\00", align 1
@1358 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@1359 = private unnamed_addr constant [385 x i8] c"redis-cli %s\0ATo get help about Redis commands type:\0A      \22help @<group>\22 to get a list of commands in <group>\0A      \22help <command>\22 for help on <command>\0A      \22help <tab>\22 to get a list of possible help topics\0A      \22quit\22 to exit\0A\0ATo set redis-cli preferences:\0A      \22:set hints\22 enable online hints\0A      \22:set nohints\22 disable online hints\0ASet your preferences in ~/.redisclirc\0A\00", align 1
@1360 = private unnamed_addr constant [29 x i8] c"\0D\0A  \1B[1m%s\1B[0m \1B[90m%s\1B[0m\0D\0A\00", align 1
@1361 = private unnamed_addr constant [25 x i8] c"  \1B[33msummary:\1B[0m %s\0D\0A\00", align 1
@1362 = private unnamed_addr constant [23 x i8] c"  \1B[33msince:\1B[0m %s\0D\0A\00", align 1
@1363 = private unnamed_addr constant [23 x i8] c"  \1B[33mgroup:\1B[0m %s\0D\0A\00", align 1
@1364 = private unnamed_addr constant [171 x i8] c"Lua debugging session started, please use:\0Aquit    -- End the session.\0Arestart -- Restart the script in debug mode again.\0Ahelp    -- Show Lua script debugging commands.\0A\0A\00", align 1
@1365 = private unnamed_addr constant [26 x i8] c"Can't open file '%s': %s\0A\00", align 1
@1366 = private unnamed_addr constant [18 x i8] c"SCRIPT DEBUG sync\00", align 1
@1367 = private unnamed_addr constant [17 x i8] c"SCRIPT DEBUG yes\00", align 1
@1368 = private unnamed_addr constant [37 x i8] c"Eval debugging session can't start:\0A\00", align 1
@1369 = private unnamed_addr constant [15 x i8] c"lua debugger> \00", align 1
@1370 = private unnamed_addr constant [28 x i8] c"Reading from standard input\00", align 1

; Function Attrs: nounwind uwtable
define dso_local void @_serverAssert(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %1*, %1** @stderr, align 8
  %8 = call i32 (%1*, i8*, ...) @fprintf(%1* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @665, i32 0, i32 0))
  %9 = load %1*, %1** @stderr, align 8
  %10 = load i8*, i8** %5, align 8
  %11 = load i32, i32* %6, align 4
  %12 = load i8*, i8** %4, align 8
  %13 = call i32 (%1*, i8*, ...) @fprintf(%1* %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @666, i32 0, i32 0), i8* %10, i32 %11, i8* %12)
  store i8 120, i8* inttoptr (i64 -1 to i8*), align 1
  ret void
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @fprintf(%1*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define dso_local i32 @isColorTerm() #0 {
  %1 = alloca i8*, align 8
  %2 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #10
  %3 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @667, i32 0, i32 0)) #10
  store i8* %3, i8** %1, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %0
  %7 = load i8*, i8** %1, align 8
  %8 = call i8* @strstr(i8* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @668, i32 0, i32 0)) #12
  %9 = icmp ne i8* %8, null
  br label %10

10:                                               ; preds = %6, %0
  %11 = phi i1 [ false, %0 ], [ %9, %6 ]
  %12 = zext i1 %11 to i32
  %13 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #10
  ret i32 %12
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #4

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define dso_local i8* @sdscatcolor(i8* %0, i8* %1, i64 %2, i8* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  %12 = call i32 @isColorTerm()
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = load i8*, i8** %6, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = load i64, i64* %8, align 8
  %18 = call i8* @sdscatlen(i8* %15, i8* %16, i64 %17)
  store i8* %18, i8** %5, align 8
  br label %80

19:                                               ; preds = %4
  %20 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #10
  %21 = load i8*, i8** %9, align 8
  %22 = call i8* @strstr(i8* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @669, i32 0, i32 0)) #12
  %23 = icmp ne i8* %22, null
  %24 = zext i1 %23 to i32
  store i32 %24, i32* %10, align 4
  %25 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #10
  store i32 37, i32* %11, align 4
  %26 = load i8*, i8** %9, align 8
  %27 = call i8* @strstr(i8* %26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @670, i32 0, i32 0)) #12
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %19
  store i32 31, i32* %11, align 4
  br label %66

30:                                               ; preds = %19
  %31 = load i8*, i8** %9, align 8
  %32 = call i8* @strstr(i8* %31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @671, i32 0, i32 0)) #12
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  store i32 32, i32* %11, align 4
  br label %65

35:                                               ; preds = %30
  %36 = load i8*, i8** %9, align 8
  %37 = call i8* @strstr(i8* %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @672, i32 0, i32 0)) #12
  %38 = icmp ne i8* %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i32 33, i32* %11, align 4
  br label %64

40:                                               ; preds = %35
  %41 = load i8*, i8** %9, align 8
  %42 = call i8* @strstr(i8* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @673, i32 0, i32 0)) #12
  %43 = icmp ne i8* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  store i32 34, i32* %11, align 4
  br label %63

45:                                               ; preds = %40
  %46 = load i8*, i8** %9, align 8
  %47 = call i8* @strstr(i8* %46, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @674, i32 0, i32 0)) #12
  %48 = icmp ne i8* %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  store i32 35, i32* %11, align 4
  br label %62

50:                                               ; preds = %45
  %51 = load i8*, i8** %9, align 8
  %52 = call i8* @strstr(i8* %51, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @675, i32 0, i32 0)) #12
  %53 = icmp ne i8* %52, null
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  store i32 36, i32* %11, align 4
  br label %61

55:                                               ; preds = %50
  %56 = load i8*, i8** %9, align 8
  %57 = call i8* @strstr(i8* %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @676, i32 0, i32 0)) #12
  %58 = icmp ne i8* %57, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  store i32 37, i32* %11, align 4
  br label %60

60:                                               ; preds = %59, %55
  br label %61

61:                                               ; preds = %60, %54
  br label %62

62:                                               ; preds = %61, %49
  br label %63

63:                                               ; preds = %62, %44
  br label %64

64:                                               ; preds = %63, %39
  br label %65

65:                                               ; preds = %64, %34
  br label %66

66:                                               ; preds = %65, %29
  %67 = load i8*, i8** %6, align 8
  %68 = load i32, i32* %10, align 4
  %69 = load i32, i32* %11, align 4
  %70 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %67, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @677, i32 0, i32 0), i32 %68, i32 %69)
  store i8* %70, i8** %6, align 8
  %71 = load i8*, i8** %6, align 8
  %72 = load i8*, i8** %7, align 8
  %73 = load i64, i64* %8, align 8
  %74 = call i8* @sdscatlen(i8* %71, i8* %72, i64 %73)
  store i8* %74, i8** %6, align 8
  %75 = load i8*, i8** %6, align 8
  %76 = call i8* @sdscat(i8* %75, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @678, i32 0, i32 0))
  store i8* %76, i8** %6, align 8
  %77 = load i8*, i8** %6, align 8
  store i8* %77, i8** %5, align 8
  %78 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %78) #10
  %79 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %79) #10
  br label %80

80:                                               ; preds = %66, %14
  %81 = load i8*, i8** %5, align 8
  ret i8* %81
}

declare dso_local i8* @sdscatlen(i8*, i8*, i64) #2

declare dso_local i8* @sdscatfmt(i8*, i8*, ...) #2

declare dso_local i8* @sdscat(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define dso_local i8* @sdsCatColorizedLdbReply(i8* %0, i8* %1, i64 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @676, i32 0, i32 0), i8** %7, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = call i8* @strstr(i8* %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @679, i32 0, i32 0)) #12
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @669, i32 0, i32 0), i8** %7, align 8
  br label %13

13:                                               ; preds = %12, %3
  %14 = load i8*, i8** %5, align 8
  %15 = call i8* @strstr(i8* %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @680, i32 0, i32 0)) #12
  %16 = icmp ne i8* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @671, i32 0, i32 0), i8** %7, align 8
  br label %18

18:                                               ; preds = %17, %13
  %19 = load i8*, i8** %5, align 8
  %20 = call i8* @strstr(i8* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @681, i32 0, i32 0)) #12
  %21 = icmp ne i8* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @675, i32 0, i32 0), i8** %7, align 8
  br label %23

23:                                               ; preds = %22, %18
  %24 = load i8*, i8** %5, align 8
  %25 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @682, i32 0, i32 0)) #12
  %26 = icmp ne i8* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @670, i32 0, i32 0), i8** %7, align 8
  br label %28

28:                                               ; preds = %27, %23
  %29 = load i8*, i8** %5, align 8
  %30 = call i8* @strstr(i8* %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @683, i32 0, i32 0)) #12
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @669, i32 0, i32 0), i8** %7, align 8
  br label %33

33:                                               ; preds = %32, %28
  %34 = load i8*, i8** %5, align 8
  %35 = call i8* @strstr(i8* %34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @684, i32 0, i32 0)) #12
  %36 = icmp ne i8* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = load i8*, i8** %5, align 8
  %39 = call i8* @strstr(i8* %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @685, i32 0, i32 0)) #12
  %40 = icmp ne i8* %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %33
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @674, i32 0, i32 0), i8** %7, align 8
  br label %42

42:                                               ; preds = %41, %37
  %43 = load i64, i64* %6, align 8
  %44 = icmp ugt i64 %43, 4
  br i1 %44, label %45, label %74

45:                                               ; preds = %42
  %46 = call i16** @__ctype_b_loc() #13
  %47 = load i16*, i16** %46, align 8
  %48 = load i8*, i8** %5, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 3
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %47, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = and i32 %55, 2048
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %74

58:                                               ; preds = %45
  %59 = load i8*, i8** %5, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 1
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %62, 62
  br i1 %63, label %64, label %65

64:                                               ; preds = %58
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @672, i32 0, i32 0), i8** %7, align 8
  br label %73

65:                                               ; preds = %58
  %66 = load i8*, i8** %5, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 2
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i32
  %70 = icmp eq i32 %69, 35
  br i1 %70, label %71, label %72

71:                                               ; preds = %65
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @669, i32 0, i32 0), i8** %7, align 8
  br label %72

72:                                               ; preds = %71, %65
  br label %73

73:                                               ; preds = %72, %64
  br label %74

74:                                               ; preds = %73, %45, %42
  %75 = load i8*, i8** %4, align 8
  %76 = load i8*, i8** %5, align 8
  %77 = load i64, i64* %6, align 8
  %78 = load i8*, i8** %7, align 8
  %79 = call i8* @sdscatcolor(i8* %75, i8* %76, i64 %77, i8* %78)
  %80 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #10
  ret i8* %79
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #6

; Function Attrs: nounwind uwtable
define dso_local void @cliSetPreferences(i8** %0, i32 %1, i32 %2) #0 {
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8** %0, i8*** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load i8**, i8*** %4, align 8
  %8 = getelementptr inbounds i8*, i8** %7, i64 0
  %9 = load i8*, i8** %8, align 8
  %10 = call i32 @strcasecmp(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @686, i32 0, i32 0)) #12
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %40, label %12

12:                                               ; preds = %3
  %13 = load i32, i32* %5, align 4
  %14 = icmp sge i32 %13, 2
  br i1 %14, label %15, label %40

15:                                               ; preds = %12
  %16 = load i8**, i8*** %4, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 1
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @strcasecmp(i8* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @687, i32 0, i32 0)) #12
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  store i32 1, i32* getelementptr inbounds (%3, %3* @688, i32 0, i32 0), align 4
  br label %39

22:                                               ; preds = %15
  %23 = load i8**, i8*** %4, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 @strcasecmp(i8* %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @689, i32 0, i32 0)) #12
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  store i32 0, i32* getelementptr inbounds (%3, %3* @688, i32 0, i32 0), align 4
  br label %38

29:                                               ; preds = %22
  %30 = load i32, i32* %6, align 4
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @692, i32 0, i32 0)
  %34 = load i8**, i8*** %4, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 1
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @690, i32 0, i32 0), i8* %33, i8* %36)
  br label %38

38:                                               ; preds = %29, %28
  br label %39

39:                                               ; preds = %38, %21
  br label %49

40:                                               ; preds = %12, %3
  %41 = load i32, i32* %6, align 4
  %42 = icmp ne i32 %41, 0
  %43 = zext i1 %42 to i64
  %44 = select i1 %42, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @692, i32 0, i32 0)
  %45 = load i8**, i8*** %4, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 0
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @693, i32 0, i32 0), i8* %44, i8* %47)
  br label %49

49:                                               ; preds = %40, %39
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) #5

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: nounwind uwtable
define dso_local void @cliLoadPreferences() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %1*, align 8
  %4 = alloca [1024 x i8], align 16
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = call i8* @1371(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @694, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @695, i32 0, i32 0))
  store i8* %8, i8** %1, align 8
  %9 = load i8*, i8** %1, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %0
  store i32 1, i32* %2, align 4
  br label %47

12:                                               ; preds = %0
  %13 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = load i8*, i8** %1, align 8
  %15 = call %1* @fopen64(i8* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @696, i32 0, i32 0))
  store %1* %15, %1** %3, align 8
  %16 = bitcast [1024 x i8]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* %16) #10
  %17 = load %1*, %1** %3, align 8
  %18 = icmp ne %1* %17, null
  br i1 %18, label %19, label %43

19:                                               ; preds = %12
  br label %20

20:                                               ; preds = %35, %19
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i32 0, i32 0
  %22 = load %1*, %1** %3, align 8
  %23 = call i8* @fgets(i8* %21, i32 1024, %1* %22)
  %24 = icmp ne i8* %23, null
  br i1 %24, label %25, label %40

25:                                               ; preds = %20
  %26 = bitcast i8*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #10
  %27 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #10
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i32 0, i32 0
  %29 = call i8** @sdssplitargs(i8* %28, i32* %6)
  store i8** %29, i8*** %5, align 8
  %30 = load i32, i32* %6, align 4
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = load i8**, i8*** %5, align 8
  %34 = load i32, i32* %6, align 4
  call void @cliSetPreferences(i8** %33, i32 %34, i32 0)
  br label %35

35:                                               ; preds = %32, %25
  %36 = load i8**, i8*** %5, align 8
  %37 = load i32, i32* %6, align 4
  call void @sdsfreesplitres(i8** %36, i32 %37)
  %38 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %38) #10
  %39 = bitcast i8*** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #10
  br label %20

40:                                               ; preds = %20
  %41 = load %1*, %1** %3, align 8
  %42 = call i32 @fclose(%1* %41)
  br label %43

43:                                               ; preds = %40, %12
  %44 = load i8*, i8** %1, align 8
  call void @sdsfree(i8* %44)
  %45 = bitcast [1024 x i8]* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* %45) #10
  %46 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #10
  store i32 0, i32* %2, align 4
  br label %47

47:                                               ; preds = %43, %11
  %48 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #10
  %49 = load i32, i32* %2, align 4
  switch i32 %49, label %51 [
    i32 0, label %50
    i32 1, label %50
  ]

50:                                               ; preds = %47, %47
  ret void

51:                                               ; preds = %47
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i8* @1371(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %10 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  store i8* null, i8** %6, align 8
  %11 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  store i8* null, i8** %7, align 8
  %12 = load i8*, i8** %4, align 8
  %13 = call i8* @getenv(i8* %12) #10
  store i8* %13, i8** %6, align 8
  %14 = load i8*, i8** %6, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %16, label %29

16:                                               ; preds = %2
  %17 = load i8*, i8** %6, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %16
  %22 = load i8*, i8** %6, align 8
  %23 = call i32 @strcmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @769, i32 0, i32 0), i8* %22) #12
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  store i8* null, i8** %3, align 8
  store i32 1, i32* %8, align 4
  br label %48

26:                                               ; preds = %21
  %27 = load i8*, i8** %6, align 8
  %28 = call i8* @sdsnew(i8* %27)
  store i8* %28, i8** %7, align 8
  br label %46

29:                                               ; preds = %16, %2
  %30 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #10
  %31 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @770, i32 0, i32 0)) #10
  store i8* %31, i8** %9, align 8
  %32 = load i8*, i8** %9, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %44

34:                                               ; preds = %29
  %35 = load i8*, i8** %9, align 8
  %36 = load i8, i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %34
  %40 = call i8* @sdsempty()
  %41 = load i8*, i8** %9, align 8
  %42 = load i8*, i8** %5, align 8
  %43 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @771, i32 0, i32 0), i8* %41, i8* %42)
  store i8* %43, i8** %7, align 8
  br label %44

44:                                               ; preds = %39, %34, %29
  %45 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #10
  br label %46

46:                                               ; preds = %44, %26
  %47 = load i8*, i8** %7, align 8
  store i8* %47, i8** %3, align 8
  store i32 1, i32* %8, align 4
  br label %48

48:                                               ; preds = %46, %25
  %49 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #10
  %50 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #10
  %51 = load i8*, i8** %3, align 8
  ret i8* %51
}

declare dso_local %1* @fopen64(i8*, i8*) #2

declare dso_local i8* @fgets(i8*, i32, %1*) #2

declare dso_local i8** @sdssplitargs(i8*, i32*) #2

declare dso_local void @sdsfreesplitres(i8**, i32) #2

declare dso_local i32 @fclose(%1*) #2

declare dso_local void @sdsfree(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @1372(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %28*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %28**, align 8
  %22 = alloca i8**, align 8
  %23 = alloca %29*, align 8
  %24 = alloca %30, align 8
  %25 = alloca %25*, align 8
  %26 = alloca %28*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca %29*, align 8
  %30 = alloca %29*, align 8
  %31 = alloca %28*, align 8
  %32 = alloca %28**, align 8
  %33 = alloca float, align 4
  %34 = alloca i64, align 8
  %35 = alloca float, align 4
  %36 = alloca %28*, align 8
  %37 = alloca i64, align 8
  %38 = alloca %28*, align 8
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca %28*, align 8
  %42 = alloca i32, align 4
  %43 = alloca %28*, align 8
  %44 = alloca %28*, align 8
  %45 = alloca i32, align 4
  %46 = alloca %28*, align 8
  %47 = alloca %29*, align 8
  %48 = alloca %28*, align 8
  %49 = alloca i8*, align 8
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca %28*, align 8
  %53 = alloca %31*, align 8
  %54 = alloca %28*, align 8
  %55 = alloca %28*, align 8
  %56 = alloca %31*, align 8
  %57 = alloca i32, align 4
  %58 = alloca %28*, align 8
  %59 = alloca i8*, align 8
  %60 = alloca i32, align 4
  %61 = alloca %28*, align 8
  %62 = alloca %28*, align 8
  %63 = alloca %29*, align 8
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %64 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %64) #10
  %65 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %65) #10
  %66 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %66) #10
  store i32 1, i32* %8, align 4
  %67 = call %24* @listCreate()
  store %24* %67, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  store i32 0, i32* %6, align 4
  br label %68

68:                                               ; preds = %173, %2
  %69 = load i32, i32* %6, align 4
  %70 = load i32, i32* %4, align 4
  %71 = icmp slt i32 %69, %70
  br i1 %71, label %72, label %176

72:                                               ; preds = %68
  %73 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #10
  %74 = load i8**, i8*** %5, align 8
  %75 = load i32, i32* %6, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8*, i8** %74, i64 %76
  %78 = load i8*, i8** %77, align 8
  store i8* %78, i8** %9, align 8
  %79 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %79) #10
  %80 = load i8*, i8** %9, align 8
  %81 = call i8* @strrchr(i8* %80, i32 64) #12
  store i8* %81, i8** %10, align 8
  %82 = load i8*, i8** %10, align 8
  %83 = icmp ne i8* %82, null
  br i1 %83, label %84, label %86

84:                                               ; preds = %72
  %85 = load i8*, i8** %10, align 8
  store i8 0, i8* %85, align 1
  br label %86

86:                                               ; preds = %84, %72
  %87 = load i8*, i8** %9, align 8
  %88 = call i8* @strrchr(i8* %87, i32 58) #12
  store i8* %88, i8** %10, align 8
  %89 = load i8*, i8** %10, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %86
  %92 = load %1*, %1** @stderr, align 8
  %93 = load i8*, i8** %9, align 8
  %94 = call i32 (%1*, i8*, ...) @fprintf(%1* %92, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @773, i32 0, i32 0), i8* %93)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %168

95:                                               ; preds = %86
  %96 = load i8*, i8** %10, align 8
  store i8 0, i8* %96, align 1
  %97 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %97) #10
  %98 = load i8*, i8** %9, align 8
  store i8* %98, i8** %12, align 8
  %99 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %99) #10
  %100 = load i8*, i8** %10, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %10, align 8
  %102 = call i32 @atoi(i8* %101) #12
  store i32 %102, i32* %13, align 4
  %103 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %103) #10
  %104 = load i8*, i8** %12, align 8
  %105 = load i32, i32* %13, align 4
  %106 = call %28* @1404(i8* %104, i32 %105)
  store %28* %106, %28** %14, align 8
  %107 = load %28*, %28** %14, align 8
  %108 = call i32 @1405(%28* %107)
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %95
  %111 = load %28*, %28** %14, align 8
  call void @1406(%28* %111)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %164

112:                                              ; preds = %95
  %113 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %113) #10
  store i8* null, i8** %15, align 8
  %114 = load %28*, %28** %14, align 8
  %115 = call i32 @1407(%28* %114, i8** %15)
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %126, label %117

117:                                              ; preds = %112
  %118 = load %28*, %28** %14, align 8
  %119 = load i8*, i8** %15, align 8
  call void @1408(%28* %118, i8* %119)
  %120 = load i8*, i8** %15, align 8
  %121 = icmp ne i8* %120, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %117
  %123 = load i8*, i8** %15, align 8
  call void @zfree(i8* %123)
  br label %124

124:                                              ; preds = %122, %117
  %125 = load %28*, %28** %14, align 8
  call void @1406(%28* %125)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %162

126:                                              ; preds = %112
  store i8* null, i8** %15, align 8
  %127 = load %28*, %28** %14, align 8
  %128 = call i32 @1409(%28* %127, i32 0, i8** %15)
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %144, label %130

130:                                              ; preds = %126
  %131 = load i8*, i8** %15, align 8
  %132 = icmp ne i8* %131, null
  br i1 %132, label %133, label %142

133:                                              ; preds = %130
  %134 = load %28*, %28** %14, align 8
  %135 = getelementptr inbounds %28, %28* %134, i32 0, i32 2
  %136 = load i8*, i8** %135, align 8
  %137 = load %28*, %28** %14, align 8
  %138 = getelementptr inbounds %28, %28* %137, i32 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = load i8*, i8** %15, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %136, i32 %139, i8* %140)
  %141 = load i8*, i8** %15, align 8
  call void @zfree(i8* %141)
  br label %142

142:                                              ; preds = %133, %130
  %143 = load %28*, %28** %14, align 8
  call void @1406(%28* %143)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %162

144:                                              ; preds = %126
  store i8* null, i8** %15, align 8
  %145 = load %28*, %28** %14, align 8
  %146 = call i32 @1411(%28* %145, i8** %15)
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %157, label %148

148:                                              ; preds = %144
  %149 = load %28*, %28** %14, align 8
  %150 = load i8*, i8** %15, align 8
  call void @1412(%28* %149, i8* %150)
  %151 = load i8*, i8** %15, align 8
  %152 = icmp ne i8* %151, null
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  %154 = load i8*, i8** %15, align 8
  call void @zfree(i8* %154)
  br label %155

155:                                              ; preds = %153, %148
  %156 = load %28*, %28** %14, align 8
  call void @1406(%28* %156)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %162

157:                                              ; preds = %144
  %158 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %159 = load %28*, %28** %14, align 8
  %160 = bitcast %28* %159 to i8*
  %161 = call %24* @listAddNodeTail(%24* %158, i8* %160)
  store i32 0, i32* %11, align 4
  br label %162

162:                                              ; preds = %157, %155, %142, %124
  %163 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163) #10
  br label %164

164:                                              ; preds = %162, %110
  %165 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #10
  %166 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %166) #10
  %167 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #10
  br label %168

168:                                              ; preds = %164, %91
  %169 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %169) #10
  %170 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #10
  %171 = load i32, i32* %11, align 4
  switch i32 %171, label %911 [
    i32 0, label %172
  ]

172:                                              ; preds = %168
  br label %173

173:                                              ; preds = %172
  %174 = load i32, i32* %6, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, i32* %6, align 4
  br label %68

176:                                              ; preds = %68
  %177 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %177) #10
  %178 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %179 = getelementptr inbounds %24, %24* %178, i32 0, i32 5
  %180 = load i64, i64* %179, align 8
  %181 = trunc i64 %180 to i32
  store i32 %181, i32* %16, align 4
  %182 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %182) #10
  %183 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 4), align 4
  store i32 %183, i32* %17, align 4
  %184 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %184) #10
  %185 = load i32, i32* %16, align 4
  %186 = load i32, i32* %17, align 4
  %187 = add nsw i32 %186, 1
  %188 = sdiv i32 %185, %187
  store i32 %188, i32* %18, align 4
  %189 = load i32, i32* %18, align 4
  %190 = icmp slt i32 %189, 3
  br i1 %190, label %191, label %197

191:                                              ; preds = %176
  %192 = load i32, i32* %16, align 4
  %193 = load i32, i32* %17, align 4
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([172 x i8], [172 x i8]* @775, i32 0, i32 0), i32 %192, i32 %193)
  %194 = load i32, i32* %17, align 4
  %195 = add nsw i32 %194, 1
  %196 = mul nsw i32 3, %195
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @776, i32 0, i32 0), i32 %196)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %907

197:                                              ; preds = %176
  %198 = load i32, i32* %16, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @777, i32 0, i32 0), i32 %198)
  %199 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %199) #10
  store i32 0, i32* %19, align 4
  %200 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %200) #10
  store i32 0, i32* %20, align 4
  %201 = bitcast %28*** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %201) #10
  %202 = load i32, i32* %16, align 4
  %203 = sext i32 %202 to i64
  %204 = mul i64 %203, 16520
  %205 = call i8* @zcalloc(i64 %204)
  %206 = bitcast i8* %205 to %28**
  store %28** %206, %28*** %21, align 8
  %207 = bitcast i8*** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %207) #10
  %208 = load i32, i32* %16, align 4
  %209 = sext i32 %208 to i64
  %210 = mul i64 %209, 8
  %211 = call i8* @zcalloc(i64 %210)
  %212 = bitcast i8* %211 to i8**
  store i8** %212, i8*** %22, align 8
  %213 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %213) #10
  %214 = load i32, i32* %16, align 4
  %215 = sext i32 %214 to i64
  %216 = mul i64 %215, 24
  %217 = call i8* @zcalloc(i64 %216)
  %218 = bitcast i8* %217 to %29*
  store %29* %218, %29** %23, align 8
  %219 = bitcast %30* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %219) #10
  %220 = bitcast %25** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %220) #10
  %221 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %221, %30* %24)
  br label %222

222:                                              ; preds = %283, %197
  %223 = call %25* @listNext(%30* %24)
  store %25* %223, %25** %25, align 8
  %224 = icmp ne %25* %223, null
  br i1 %224, label %225, label %289

225:                                              ; preds = %222
  %226 = bitcast %28** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %226) #10
  %227 = load %25*, %25** %25, align 8
  %228 = getelementptr inbounds %25, %25* %227, i32 0, i32 2
  %229 = load i8*, i8** %228, align 8
  %230 = bitcast i8* %229 to %28*
  store %28* %230, %28** %26, align 8
  %231 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %231) #10
  store i32 0, i32* %27, align 4
  store i32 0, i32* %6, align 4
  br label %232

232:                                              ; preds = %255, %225
  %233 = load i32, i32* %6, align 4
  %234 = load i32, i32* %20, align 4
  %235 = icmp slt i32 %233, %234
  br i1 %235, label %236, label %258

236:                                              ; preds = %232
  %237 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %237) #10
  %238 = load i8**, i8*** %22, align 8
  %239 = load i32, i32* %6, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i8*, i8** %238, i64 %240
  %242 = load i8*, i8** %241, align 8
  store i8* %242, i8** %28, align 8
  %243 = load i8*, i8** %28, align 8
  %244 = load %28*, %28** %26, align 8
  %245 = getelementptr inbounds %28, %28* %244, i32 0, i32 2
  %246 = load i8*, i8** %245, align 8
  %247 = call i32 @strcmp(i8* %243, i8* %246) #12
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %250, label %249

249:                                              ; preds = %236
  store i32 1, i32* %27, align 4
  store i32 7, i32* %11, align 4
  br label %251

250:                                              ; preds = %236
  store i32 0, i32* %11, align 4
  br label %251

251:                                              ; preds = %250, %249
  %252 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %252) #10
  %253 = load i32, i32* %11, align 4
  switch i32 %253, label %916 [
    i32 0, label %254
    i32 7, label %258
  ]

254:                                              ; preds = %251
  br label %255

255:                                              ; preds = %254
  %256 = load i32, i32* %6, align 4
  %257 = add nsw i32 %256, 1
  store i32 %257, i32* %6, align 4
  br label %232

258:                                              ; preds = %251, %232
  %259 = load i32, i32* %27, align 4
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %270, label %261

261:                                              ; preds = %258
  %262 = load %28*, %28** %26, align 8
  %263 = getelementptr inbounds %28, %28* %262, i32 0, i32 2
  %264 = load i8*, i8** %263, align 8
  %265 = load i8**, i8*** %22, align 8
  %266 = load i32, i32* %20, align 4
  %267 = add nsw i32 %266, 1
  store i32 %267, i32* %20, align 4
  %268 = sext i32 %266 to i64
  %269 = getelementptr inbounds i8*, i8** %265, i64 %268
  store i8* %264, i8** %269, align 8
  br label %270

270:                                              ; preds = %261, %258
  %271 = bitcast %29** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %271) #10
  %272 = load %29*, %29** %23, align 8
  %273 = load i32, i32* %6, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds %29, %29* %272, i64 %274
  store %29* %275, %29** %29, align 8
  %276 = load %29*, %29** %29, align 8
  %277 = getelementptr inbounds %29, %29* %276, i32 0, i32 0
  %278 = load %28**, %28*** %277, align 8
  %279 = icmp eq %28** %278, null
  br i1 %279, label %280, label %283

280:                                              ; preds = %270
  %281 = load %29*, %29** %29, align 8
  %282 = load i32, i32* %16, align 4
  call void @1413(%29* %281, i32 %282)
  br label %283

283:                                              ; preds = %280, %270
  %284 = load %29*, %29** %29, align 8
  %285 = load %28*, %28** %26, align 8
  call void @1414(%29* %284, %28* %285)
  %286 = bitcast %29** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %286) #10
  %287 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %287) #10
  %288 = bitcast %28** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %288) #10
  br label %222

289:                                              ; preds = %222
  br label %290

290:                                              ; preds = %324, %289
  %291 = load i32, i32* %19, align 4
  %292 = load i32, i32* %16, align 4
  %293 = icmp slt i32 %291, %292
  br i1 %293, label %294, label %325

294:                                              ; preds = %290
  store i32 0, i32* %6, align 4
  br label %295

295:                                              ; preds = %321, %294
  %296 = load i32, i32* %6, align 4
  %297 = load i32, i32* %20, align 4
  %298 = icmp slt i32 %296, %297
  br i1 %298, label %299, label %324

299:                                              ; preds = %295
  %300 = bitcast %29** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %300) #10
  %301 = load %29*, %29** %23, align 8
  %302 = load i32, i32* %6, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds %29, %29* %301, i64 %303
  store %29* %304, %29** %30, align 8
  %305 = load %29*, %29** %30, align 8
  %306 = getelementptr inbounds %29, %29* %305, i32 0, i32 3
  %307 = load i32, i32* %306, align 4
  %308 = icmp sgt i32 %307, 0
  br i1 %308, label %309, label %319

309:                                              ; preds = %299
  %310 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %310) #10
  store %28* null, %28** %31, align 8
  %311 = load %29*, %29** %30, align 8
  call void @1415(%29* %311, %28** %31)
  %312 = load %28*, %28** %31, align 8
  %313 = load %28**, %28*** %21, align 8
  %314 = load i32, i32* %19, align 4
  %315 = add nsw i32 %314, 1
  store i32 %315, i32* %19, align 4
  %316 = sext i32 %314 to i64
  %317 = getelementptr inbounds %28*, %28** %313, i64 %316
  store %28* %312, %28** %317, align 8
  %318 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %318) #10
  br label %319

319:                                              ; preds = %309, %299
  %320 = bitcast %29** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %320) #10
  br label %321

321:                                              ; preds = %319
  %322 = load i32, i32* %6, align 4
  %323 = add nsw i32 %322, 1
  store i32 %323, i32* %6, align 4
  br label %295

324:                                              ; preds = %295
  br label %290

325:                                              ; preds = %290
  %326 = bitcast %28*** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %326) #10
  %327 = load %28**, %28*** %21, align 8
  store %28** %327, %28*** %32, align 8
  %328 = load i32, i32* %18, align 4
  %329 = load %28**, %28*** %21, align 8
  %330 = sext i32 %328 to i64
  %331 = getelementptr inbounds %28*, %28** %329, i64 %330
  store %28** %331, %28*** %21, align 8
  %332 = load i32, i32* %18, align 4
  %333 = load i32, i32* %19, align 4
  %334 = sub nsw i32 %333, %332
  store i32 %334, i32* %19, align 4
  %335 = bitcast float* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %335) #10
  %336 = load i32, i32* %18, align 4
  %337 = sitofp i32 %336 to float
  %338 = fdiv float 1.638400e+04, %337
  store float %338, float* %33, align 4
  %339 = bitcast i64* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %339) #10
  store i64 0, i64* %34, align 8
  %340 = bitcast float* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %340) #10
  store float 0.000000e+00, float* %35, align 4
  store i32 0, i32* %6, align 4
  br label %341

341:                                              ; preds = %410, %325
  %342 = load i32, i32* %6, align 4
  %343 = load i32, i32* %18, align 4
  %344 = icmp slt i32 %342, %343
  br i1 %344, label %345, label %413

345:                                              ; preds = %341
  %346 = bitcast %28** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %346) #10
  %347 = load %28**, %28*** %32, align 8
  %348 = load i32, i32* %6, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds %28*, %28** %347, i64 %349
  %351 = load %28*, %28** %350, align 8
  store %28* %351, %28** %36, align 8
  %352 = bitcast i64* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %352) #10
  %353 = load float, float* %35, align 4
  %354 = load float, float* %33, align 4
  %355 = fadd float %353, %354
  %356 = fsub float %355, 1.000000e+00
  %357 = fpext float %356 to double
  %358 = call i64 @lround(double %357) #10
  store i64 %358, i64* %37, align 8
  %359 = load i64, i64* %37, align 8
  %360 = icmp sgt i64 %359, 16384
  br i1 %360, label %366, label %361

361:                                              ; preds = %345
  %362 = load i32, i32* %6, align 4
  %363 = load i32, i32* %18, align 4
  %364 = sub nsw i32 %363, 1
  %365 = icmp eq i32 %362, %364
  br i1 %365, label %366, label %367

366:                                              ; preds = %361, %345
  store i64 16383, i64* %37, align 8
  br label %367

367:                                              ; preds = %366, %361
  %368 = load i64, i64* %37, align 8
  %369 = load i64, i64* %34, align 8
  %370 = icmp slt i64 %368, %369
  br i1 %370, label %371, label %373

371:                                              ; preds = %367
  %372 = load i64, i64* %34, align 8
  store i64 %372, i64* %37, align 8
  br label %373

373:                                              ; preds = %371, %367
  %374 = load i32, i32* %6, align 4
  %375 = load i64, i64* %34, align 8
  %376 = load i64, i64* %37, align 8
  %377 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @778, i32 0, i32 0), i32 %374, i64 %375, i64 %376)
  %378 = load %28*, %28** %36, align 8
  %379 = getelementptr inbounds %28, %28* %378, i32 0, i32 12
  store i32 0, i32* %379, align 4
  %380 = load i64, i64* %34, align 8
  %381 = trunc i64 %380 to i32
  store i32 %381, i32* %7, align 4
  br label %382

382:                                              ; preds = %397, %373
  %383 = load i32, i32* %7, align 4
  %384 = sext i32 %383 to i64
  %385 = load i64, i64* %37, align 8
  %386 = icmp sle i64 %384, %385
  br i1 %386, label %387, label %400

387:                                              ; preds = %382
  %388 = load %28*, %28** %36, align 8
  %389 = getelementptr inbounds %28, %28* %388, i32 0, i32 11
  %390 = load i32, i32* %7, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [16384 x i8], [16384 x i8]* %389, i64 0, i64 %391
  store i8 1, i8* %392, align 1
  %393 = load %28*, %28** %36, align 8
  %394 = getelementptr inbounds %28, %28* %393, i32 0, i32 12
  %395 = load i32, i32* %394, align 4
  %396 = add nsw i32 %395, 1
  store i32 %396, i32* %394, align 4
  br label %397

397:                                              ; preds = %387
  %398 = load i32, i32* %7, align 4
  %399 = add nsw i32 %398, 1
  store i32 %399, i32* %7, align 4
  br label %382

400:                                              ; preds = %382
  %401 = load %28*, %28** %36, align 8
  %402 = getelementptr inbounds %28, %28* %401, i32 0, i32 10
  store i32 1, i32* %402, align 8
  %403 = load i64, i64* %37, align 8
  %404 = add nsw i64 %403, 1
  store i64 %404, i64* %34, align 8
  %405 = load float, float* %33, align 4
  %406 = load float, float* %35, align 4
  %407 = fadd float %406, %405
  store float %407, float* %35, align 4
  %408 = bitcast i64* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %408) #10
  %409 = bitcast %28** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %409) #10
  br label %410

410:                                              ; preds = %400
  %411 = load i32, i32* %6, align 4
  %412 = add nsw i32 %411, 1
  store i32 %412, i32* %6, align 4
  br label %341

413:                                              ; preds = %341
  %414 = bitcast %28** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %414) #10
  %415 = load %28**, %28*** %21, align 8
  %416 = getelementptr inbounds %28*, %28** %415, i64 0
  %417 = load %28*, %28** %416, align 8
  store %28* %417, %28** %38, align 8
  store i32 0, i32* %6, align 4
  br label %418

418:                                              ; preds = %434, %413
  %419 = load i32, i32* %6, align 4
  %420 = load i32, i32* %19, align 4
  %421 = sub nsw i32 %420, 1
  %422 = icmp slt i32 %419, %421
  br i1 %422, label %423, label %437

423:                                              ; preds = %418
  %424 = load %28**, %28*** %21, align 8
  %425 = load i32, i32* %6, align 4
  %426 = add nsw i32 %425, 1
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds %28*, %28** %424, i64 %427
  %429 = load %28*, %28** %428, align 8
  %430 = load %28**, %28*** %21, align 8
  %431 = load i32, i32* %6, align 4
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds %28*, %28** %430, i64 %432
  store %28* %429, %28** %433, align 8
  br label %434

434:                                              ; preds = %423
  %435 = load i32, i32* %6, align 4
  %436 = add nsw i32 %435, 1
  store i32 %436, i32* %6, align 4
  br label %418

437:                                              ; preds = %418
  %438 = load %28*, %28** %38, align 8
  %439 = load %28**, %28*** %21, align 8
  %440 = load i32, i32* %19, align 4
  %441 = sub nsw i32 %440, 1
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds %28*, %28** %439, i64 %442
  store %28* %438, %28** %443, align 8
  %444 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %444) #10
  store i32 0, i32* %39, align 4
  %445 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %445) #10
  %446 = load i32, i32* %19, align 4
  store i32 %446, i32* %40, align 4
  br label %447

447:                                              ; preds = %609, %437
  store i32 0, i32* %6, align 4
  br label %448

448:                                              ; preds = %600, %447
  %449 = load i32, i32* %6, align 4
  %450 = load i32, i32* %18, align 4
  %451 = icmp slt i32 %449, %450
  br i1 %451, label %452, label %603

452:                                              ; preds = %448
  %453 = bitcast %28** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %453) #10
  %454 = load %28**, %28*** %32, align 8
  %455 = load i32, i32* %6, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds %28*, %28** %454, i64 %456
  %458 = load %28*, %28** %457, align 8
  store %28* %458, %28** %41, align 8
  %459 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %459) #10
  store i32 0, i32* %42, align 4
  br label %460

460:                                              ; preds = %596, %452
  %461 = load i32, i32* %42, align 4
  %462 = load i32, i32* %17, align 4
  %463 = icmp slt i32 %461, %462
  br i1 %463, label %464, label %597

464:                                              ; preds = %460
  %465 = load i32, i32* %40, align 4
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %468

467:                                              ; preds = %464
  br label %597

468:                                              ; preds = %464
  %469 = bitcast %28** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %469) #10
  store %28* null, %28** %43, align 8
  %470 = bitcast %28** %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %470) #10
  store %28* null, %28** %44, align 8
  %471 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %471) #10
  store i32 -1, i32* %45, align 4
  store i32 0, i32* %7, align 4
  br label %472

472:                                              ; preds = %511, %468
  %473 = load i32, i32* %7, align 4
  %474 = load i32, i32* %19, align 4
  %475 = icmp slt i32 %473, %474
  br i1 %475, label %476, label %514

476:                                              ; preds = %472
  %477 = bitcast %28** %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %477) #10
  %478 = load %28**, %28*** %21, align 8
  %479 = load i32, i32* %7, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds %28*, %28** %478, i64 %480
  %482 = load %28*, %28** %481, align 8
  store %28* %482, %28** %46, align 8
  %483 = load %28*, %28** %46, align 8
  %484 = icmp eq %28* %483, null
  br i1 %484, label %485, label %486

485:                                              ; preds = %476
  store i32 32, i32* %11, align 4
  br label %507

486:                                              ; preds = %476
  %487 = load %28*, %28** %46, align 8
  %488 = getelementptr inbounds %28, %28* %487, i32 0, i32 2
  %489 = load i8*, i8** %488, align 8
  %490 = load %28*, %28** %41, align 8
  %491 = getelementptr inbounds %28, %28* %490, i32 0, i32 2
  %492 = load i8*, i8** %491, align 8
  %493 = call i32 @strcmp(i8* %489, i8* %492) #12
  %494 = icmp ne i32 %493, 0
  br i1 %494, label %495, label %501

495:                                              ; preds = %486
  %496 = load %28*, %28** %46, align 8
  store %28* %496, %28** %43, align 8
  %497 = load %28**, %28*** %21, align 8
  %498 = load i32, i32* %7, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds %28*, %28** %497, i64 %499
  store %28* null, %28** %500, align 8
  store i32 30, i32* %11, align 4
  br label %507

501:                                              ; preds = %486
  %502 = load i32, i32* %45, align 4
  %503 = icmp slt i32 %502, 0
  br i1 %503, label %504, label %506

504:                                              ; preds = %501
  %505 = load i32, i32* %7, align 4
  store i32 %505, i32* %45, align 4
  br label %506

506:                                              ; preds = %504, %501
  store i32 0, i32* %11, align 4
  br label %507

507:                                              ; preds = %506, %495, %485
  %508 = bitcast %28** %46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %508) #10
  %509 = load i32, i32* %11, align 4
  switch i32 %509, label %916 [
    i32 0, label %510
    i32 32, label %511
    i32 30, label %514
  ]

510:                                              ; preds = %507
  br label %511

511:                                              ; preds = %510, %507
  %512 = load i32, i32* %7, align 4
  %513 = add nsw i32 %512, 1
  store i32 %513, i32* %7, align 4
  br label %472

514:                                              ; preds = %507, %472
  %515 = load %28*, %28** %43, align 8
  %516 = icmp ne %28* %515, null
  br i1 %516, label %517, label %519

517:                                              ; preds = %514
  %518 = load %28*, %28** %43, align 8
  store %28* %518, %28** %44, align 8
  br label %547

519:                                              ; preds = %514
  %520 = load i32, i32* %45, align 4
  %521 = icmp sge i32 %520, 0
  br i1 %521, label %522, label %546

522:                                              ; preds = %519
  %523 = load %28**, %28*** %21, align 8
  %524 = load i32, i32* %45, align 4
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds %28*, %28** %523, i64 %525
  %527 = load %28*, %28** %526, align 8
  store %28* %527, %28** %44, align 8
  %528 = load %28**, %28*** %21, align 8
  %529 = load %28**, %28*** %21, align 8
  %530 = load i32, i32* %45, align 4
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds %28*, %28** %529, i64 %531
  %533 = ptrtoint %28** %528 to i64
  %534 = ptrtoint %28** %532 to i64
  %535 = sub i64 %533, %534
  %536 = sdiv exact i64 %535, 8
  %537 = load i32, i32* %19, align 4
  %538 = sext i32 %537 to i64
  %539 = sub nsw i64 %538, %536
  %540 = trunc i64 %539 to i32
  store i32 %540, i32* %19, align 4
  %541 = load i32, i32* %45, align 4
  %542 = add nsw i32 %541, 1
  %543 = load %28**, %28*** %21, align 8
  %544 = sext i32 %542 to i64
  %545 = getelementptr inbounds %28*, %28** %543, i64 %544
  store %28** %545, %28*** %21, align 8
  br label %546

546:                                              ; preds = %522, %519
  br label %547

547:                                              ; preds = %546, %517
  %548 = load %28*, %28** %44, align 8
  %549 = icmp ne %28* %548, null
  br i1 %549, label %550, label %572

550:                                              ; preds = %547
  %551 = load i32, i32* %42, align 4
  %552 = add nsw i32 %551, 1
  store i32 %552, i32* %42, align 4
  %553 = load i32, i32* %40, align 4
  %554 = add nsw i32 %553, -1
  store i32 %554, i32* %40, align 4
  %555 = load %28*, %28** %44, align 8
  %556 = getelementptr inbounds %28, %28* %555, i32 0, i32 9
  %557 = load i8*, i8** %556, align 8
  %558 = icmp ne i8* %557, null
  br i1 %558, label %559, label %563

559:                                              ; preds = %550
  %560 = load %28*, %28** %44, align 8
  %561 = getelementptr inbounds %28, %28* %560, i32 0, i32 9
  %562 = load i8*, i8** %561, align 8
  call void @sdsfree(i8* %562)
  br label %563

563:                                              ; preds = %559, %550
  %564 = load %28*, %28** %41, align 8
  %565 = getelementptr inbounds %28, %28* %564, i32 0, i32 1
  %566 = load i8*, i8** %565, align 8
  %567 = call i8* @sdsnew(i8* %566)
  %568 = load %28*, %28** %44, align 8
  %569 = getelementptr inbounds %28, %28* %568, i32 0, i32 9
  store i8* %567, i8** %569, align 8
  %570 = load %28*, %28** %44, align 8
  %571 = getelementptr inbounds %28, %28* %570, i32 0, i32 10
  store i32 1, i32* %571, align 8
  br label %573

572:                                              ; preds = %547
  store i32 29, i32* %11, align 4
  br label %591

573:                                              ; preds = %563
  %574 = load %28*, %28** %44, align 8
  %575 = getelementptr inbounds %28, %28* %574, i32 0, i32 2
  %576 = load i8*, i8** %575, align 8
  %577 = load %28*, %28** %44, align 8
  %578 = getelementptr inbounds %28, %28* %577, i32 0, i32 3
  %579 = load i32, i32* %578, align 8
  %580 = load %28*, %28** %41, align 8
  %581 = getelementptr inbounds %28, %28* %580, i32 0, i32 2
  %582 = load i8*, i8** %581, align 8
  %583 = load %28*, %28** %41, align 8
  %584 = getelementptr inbounds %28, %28* %583, i32 0, i32 3
  %585 = load i32, i32* %584, align 8
  %586 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @779, i32 0, i32 0), i8* %576, i32 %579, i8* %582, i32 %585)
  %587 = load i32, i32* %39, align 4
  %588 = icmp ne i32 %587, 0
  br i1 %588, label %589, label %590

589:                                              ; preds = %573
  store i32 29, i32* %11, align 4
  br label %591

590:                                              ; preds = %573
  store i32 0, i32* %11, align 4
  br label %591

591:                                              ; preds = %590, %589, %572
  %592 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %592) #10
  %593 = bitcast %28** %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %593) #10
  %594 = bitcast %28** %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %594) #10
  %595 = load i32, i32* %11, align 4
  switch i32 %595, label %916 [
    i32 0, label %596
    i32 29, label %597
  ]

596:                                              ; preds = %591
  br label %460

597:                                              ; preds = %591, %467, %460
  %598 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %598) #10
  %599 = bitcast %28** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %599) #10
  br label %600

600:                                              ; preds = %597
  %601 = load i32, i32* %6, align 4
  %602 = add nsw i32 %601, 1
  store i32 %602, i32* %6, align 4
  br label %448

603:                                              ; preds = %448
  %604 = load i32, i32* %39, align 4
  %605 = icmp ne i32 %604, 0
  br i1 %605, label %611, label %606

606:                                              ; preds = %603
  %607 = load i32, i32* %40, align 4
  %608 = icmp sgt i32 %607, 0
  br i1 %608, label %609, label %611

609:                                              ; preds = %606
  store i32 1, i32* %39, align 4
  %610 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @780, i32 0, i32 0))
  br label %447

611:                                              ; preds = %606, %603
  store i32 0, i32* %6, align 4
  br label %612

612:                                              ; preds = %624, %611
  %613 = load i32, i32* %6, align 4
  %614 = load i32, i32* %20, align 4
  %615 = icmp slt i32 %613, %614
  br i1 %615, label %616, label %627

616:                                              ; preds = %612
  %617 = bitcast %29** %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %617) #10
  %618 = load %29*, %29** %23, align 8
  %619 = load i32, i32* %6, align 4
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds %29, %29* %618, i64 %620
  store %29* %621, %29** %47, align 8
  %622 = load %29*, %29** %47, align 8
  call void @1416(%29* %622)
  %623 = bitcast %29** %47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %623) #10
  br label %624

624:                                              ; preds = %616
  %625 = load i32, i32* %6, align 4
  %626 = add nsw i32 %625, 1
  store i32 %626, i32* %6, align 4
  br label %612

627:                                              ; preds = %612
  %628 = load %29*, %29** %23, align 8
  %629 = load i32, i32* %20, align 4
  call void @1417(%29* %628, i32 %629)
  call void @1418()
  %630 = call i32 @1419(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @781, i32 0, i32 0))
  %631 = icmp ne i32 %630, 0
  br i1 %631, label %632, label %864

632:                                              ; preds = %627
  %633 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %633, %30* %24)
  br label %634

634:                                              ; preds = %684, %632
  %635 = call %25* @listNext(%30* %24)
  store %25* %635, %25** %25, align 8
  %636 = icmp ne %25* %635, null
  br i1 %636, label %637, label %685

637:                                              ; preds = %634
  %638 = bitcast %28** %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %638) #10
  %639 = load %25*, %25** %25, align 8
  %640 = getelementptr inbounds %25, %25* %639, i32 0, i32 2
  %641 = load i8*, i8** %640, align 8
  %642 = bitcast i8* %641 to %28*
  store %28* %642, %28** %48, align 8
  %643 = bitcast i8** %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %643) #10
  store i8* null, i8** %49, align 8
  %644 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %644) #10
  %645 = load %28*, %28** %48, align 8
  %646 = call i32 @1420(%28* %645, i8** %49)
  store i32 %646, i32* %50, align 4
  %647 = load i32, i32* %50, align 4
  %648 = icmp ne i32 %647, 0
  br i1 %648, label %672, label %649

649:                                              ; preds = %637
  %650 = load %28*, %28** %48, align 8
  %651 = getelementptr inbounds %28, %28* %650, i32 0, i32 10
  %652 = load i32, i32* %651, align 8
  %653 = icmp ne i32 %652, 0
  br i1 %653, label %654, label %672

654:                                              ; preds = %649
  %655 = load %28*, %28** %48, align 8
  %656 = getelementptr inbounds %28, %28* %655, i32 0, i32 9
  %657 = load i8*, i8** %656, align 8
  %658 = icmp ne i8* %657, null
  br i1 %658, label %672, label %659

659:                                              ; preds = %654
  %660 = load i8*, i8** %49, align 8
  %661 = icmp ne i8* %660, null
  br i1 %661, label %662, label %671

662:                                              ; preds = %659
  %663 = load %28*, %28** %48, align 8
  %664 = getelementptr inbounds %28, %28* %663, i32 0, i32 2
  %665 = load i8*, i8** %664, align 8
  %666 = load %28*, %28** %48, align 8
  %667 = getelementptr inbounds %28, %28* %666, i32 0, i32 3
  %668 = load i32, i32* %667, align 8
  %669 = load i8*, i8** %49, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %665, i32 %668, i8* %669)
  %670 = load i8*, i8** %49, align 8
  call void @zfree(i8* %670)
  br label %671

671:                                              ; preds = %662, %659
  store i32 0, i32* %8, align 4
  store i32 38, i32* %11, align 4
  br label %679

672:                                              ; preds = %654, %649, %637
  %673 = load i8*, i8** %49, align 8
  %674 = icmp ne i8* %673, null
  br i1 %674, label %675, label %677

675:                                              ; preds = %672
  %676 = load i8*, i8** %49, align 8
  call void @zfree(i8* %676)
  br label %677

677:                                              ; preds = %675, %672
  br label %678

678:                                              ; preds = %677
  store i32 0, i32* %11, align 4
  br label %679

679:                                              ; preds = %671, %678
  %680 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %680) #10
  %681 = bitcast i8** %49 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %681) #10
  %682 = bitcast %28** %48 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %682) #10
  %683 = load i32, i32* %11, align 4
  switch i32 %683, label %892 [
    i32 0, label %684
    i32 38, label %865
  ]

684:                                              ; preds = %679
  br label %634

685:                                              ; preds = %634
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @782, i32 0, i32 0))
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @783, i32 0, i32 0))
  %686 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %686) #10
  store i32 1, i32* %51, align 4
  %687 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %687, %30* %24)
  br label %688

688:                                              ; preds = %710, %685
  %689 = call %25* @listNext(%30* %24)
  store %25* %689, %25** %25, align 8
  %690 = icmp ne %25* %689, null
  br i1 %690, label %691, label %713

691:                                              ; preds = %688
  %692 = bitcast %28** %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %692) #10
  %693 = load %25*, %25** %25, align 8
  %694 = getelementptr inbounds %25, %25* %693, i32 0, i32 2
  %695 = load i8*, i8** %694, align 8
  %696 = bitcast i8* %695 to %28*
  store %28* %696, %28** %52, align 8
  %697 = bitcast %31** %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %697) #10
  store %31* null, %31** %53, align 8
  %698 = load %28*, %28** %52, align 8
  %699 = getelementptr inbounds %28, %28* %698, i32 0, i32 0
  %700 = load %10*, %10** %699, align 8
  %701 = load i32, i32* %51, align 4
  %702 = add nsw i32 %701, 1
  store i32 %702, i32* %51, align 4
  %703 = call i8* (%10*, i8*, ...) @redisCommand(%10* %700, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @784, i32 0, i32 0), i32 %701)
  %704 = bitcast i8* %703 to %31*
  store %31* %704, %31** %53, align 8
  %705 = load %31*, %31** %53, align 8
  %706 = icmp ne %31* %705, null
  br i1 %706, label %707, label %710

707:                                              ; preds = %691
  %708 = load %31*, %31** %53, align 8
  %709 = bitcast %31* %708 to i8*
  call void @freeReplyObject(i8* %709)
  br label %710

710:                                              ; preds = %707, %691
  %711 = bitcast %31** %53 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %711) #10
  %712 = bitcast %28** %52 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %712) #10
  br label %688

713:                                              ; preds = %688
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @785, i32 0, i32 0))
  %714 = bitcast %28** %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %714) #10
  store %28* null, %28** %54, align 8
  %715 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %715, %30* %24)
  br label %716

716:                                              ; preds = %778, %775, %713
  %717 = call %25* @listNext(%30* %24)
  store %25* %717, %25** %25, align 8
  %718 = icmp ne %25* %717, null
  br i1 %718, label %719, label %779

719:                                              ; preds = %716
  %720 = bitcast %28** %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %720) #10
  %721 = load %25*, %25** %25, align 8
  %722 = getelementptr inbounds %25, %25* %721, i32 0, i32 2
  %723 = load i8*, i8** %722, align 8
  %724 = bitcast i8* %723 to %28*
  store %28* %724, %28** %55, align 8
  %725 = load %28*, %28** %54, align 8
  %726 = icmp eq %28* %725, null
  br i1 %726, label %727, label %729

727:                                              ; preds = %719
  %728 = load %28*, %28** %55, align 8
  store %28* %728, %28** %54, align 8
  store i32 41, i32* %11, align 4
  br label %775

729:                                              ; preds = %719
  %730 = bitcast %31** %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %730) #10
  store %31* null, %31** %56, align 8
  %731 = load %28*, %28** %55, align 8
  %732 = getelementptr inbounds %28, %28* %731, i32 0, i32 0
  %733 = load %10*, %10** %732, align 8
  %734 = load %28*, %28** %54, align 8
  %735 = getelementptr inbounds %28, %28* %734, i32 0, i32 2
  %736 = load i8*, i8** %735, align 8
  %737 = load %28*, %28** %54, align 8
  %738 = getelementptr inbounds %28, %28* %737, i32 0, i32 3
  %739 = load i32, i32* %738, align 8
  %740 = call i8* (%10*, i8*, ...) @redisCommand(%10* %733, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @786, i32 0, i32 0), i8* %736, i32 %739)
  %741 = bitcast i8* %740 to %31*
  store %31* %741, %31** %56, align 8
  %742 = bitcast i32* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %742) #10
  store i32 0, i32* %57, align 4
  %743 = load %31*, %31** %56, align 8
  %744 = icmp ne %31* %743, null
  br i1 %744, label %745, label %764

745:                                              ; preds = %729
  %746 = load %31*, %31** %56, align 8
  %747 = getelementptr inbounds %31, %31* %746, i32 0, i32 0
  %748 = load i32, i32* %747, align 8
  %749 = icmp eq i32 %748, 6
  %750 = zext i1 %749 to i32
  store i32 %750, i32* %57, align 4
  br i1 %749, label %751, label %761

751:                                              ; preds = %745
  %752 = load %28*, %28** %55, align 8
  %753 = getelementptr inbounds %28, %28* %752, i32 0, i32 2
  %754 = load i8*, i8** %753, align 8
  %755 = load %28*, %28** %55, align 8
  %756 = getelementptr inbounds %28, %28* %755, i32 0, i32 3
  %757 = load i32, i32* %756, align 8
  %758 = load %31*, %31** %56, align 8
  %759 = getelementptr inbounds %31, %31* %758, i32 0, i32 4
  %760 = load i8*, i8** %759, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %754, i32 %757, i8* %760)
  br label %761

761:                                              ; preds = %751, %745
  %762 = load %31*, %31** %56, align 8
  %763 = bitcast %31* %762 to i8*
  call void @freeReplyObject(i8* %763)
  br label %767

764:                                              ; preds = %729
  store i32 1, i32* %57, align 4
  %765 = load %1*, %1** @stderr, align 8
  %766 = call i32 (%1*, i8*, ...) @fprintf(%1* %765, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @787, i32 0, i32 0))
  br label %767

767:                                              ; preds = %764, %761
  %768 = load i32, i32* %57, align 4
  %769 = icmp ne i32 %768, 0
  br i1 %769, label %770, label %771

770:                                              ; preds = %767
  store i32 0, i32* %8, align 4
  store i32 38, i32* %11, align 4
  br label %772

771:                                              ; preds = %767
  store i32 0, i32* %11, align 4
  br label %772

772:                                              ; preds = %770, %771
  %773 = bitcast i32* %57 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %773) #10
  %774 = bitcast %31** %56 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %774) #10
  br label %775

775:                                              ; preds = %772, %727
  %776 = bitcast %28** %55 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %776) #10
  %777 = load i32, i32* %11, align 4
  switch i32 %777, label %859 [
    i32 0, label %778
    i32 41, label %716
  ]

778:                                              ; preds = %775
  br label %716

779:                                              ; preds = %716
  %780 = call i32 @sleep(i32 1)
  call void @1421()
  %781 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %781, %30* %24)
  br label %782

782:                                              ; preds = %828, %825, %779
  %783 = call %25* @listNext(%30* %24)
  store %25* %783, %25** %25, align 8
  %784 = icmp ne %25* %783, null
  br i1 %784, label %785, label %829

785:                                              ; preds = %782
  %786 = bitcast %28** %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %786) #10
  %787 = load %25*, %25** %25, align 8
  %788 = getelementptr inbounds %25, %25* %787, i32 0, i32 2
  %789 = load i8*, i8** %788, align 8
  %790 = bitcast i8* %789 to %28*
  store %28* %790, %28** %58, align 8
  %791 = load %28*, %28** %58, align 8
  %792 = getelementptr inbounds %28, %28* %791, i32 0, i32 10
  %793 = load i32, i32* %792, align 8
  %794 = icmp ne i32 %793, 0
  br i1 %794, label %796, label %795

795:                                              ; preds = %785
  store i32 43, i32* %11, align 4
  br label %825

796:                                              ; preds = %785
  %797 = bitcast i8** %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %797) #10
  store i8* null, i8** %59, align 8
  %798 = bitcast i32* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %798) #10
  %799 = load %28*, %28** %58, align 8
  %800 = call i32 @1420(%28* %799, i8** %59)
  store i32 %800, i32* %60, align 4
  %801 = load i32, i32* %60, align 4
  %802 = icmp ne i32 %801, 0
  br i1 %802, label %821, label %803

803:                                              ; preds = %796
  %804 = load %28*, %28** %58, align 8
  %805 = getelementptr inbounds %28, %28* %804, i32 0, i32 9
  %806 = load i8*, i8** %805, align 8
  %807 = icmp ne i8* %806, null
  br i1 %807, label %821, label %808

808:                                              ; preds = %803
  %809 = load i8*, i8** %59, align 8
  %810 = icmp ne i8* %809, null
  br i1 %810, label %811, label %820

811:                                              ; preds = %808
  %812 = load %28*, %28** %58, align 8
  %813 = getelementptr inbounds %28, %28* %812, i32 0, i32 2
  %814 = load i8*, i8** %813, align 8
  %815 = load %28*, %28** %58, align 8
  %816 = getelementptr inbounds %28, %28* %815, i32 0, i32 3
  %817 = load i32, i32* %816, align 8
  %818 = load i8*, i8** %59, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %814, i32 %817, i8* %818)
  %819 = load i8*, i8** %59, align 8
  call void @zfree(i8* %819)
  br label %820

820:                                              ; preds = %811, %808
  store i32 0, i32* %8, align 4
  store i32 38, i32* %11, align 4
  br label %822

821:                                              ; preds = %803, %796
  store i32 0, i32* %11, align 4
  br label %822

822:                                              ; preds = %820, %821
  %823 = bitcast i32* %60 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %823) #10
  %824 = bitcast i8** %59 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %824) #10
  br label %825

825:                                              ; preds = %822, %795
  %826 = bitcast %28** %58 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %826) #10
  %827 = load i32, i32* %11, align 4
  switch i32 %827, label %859 [
    i32 0, label %828
    i32 43, label %782
  ]

828:                                              ; preds = %825
  br label %782

829:                                              ; preds = %782
  %830 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %830, %30* %24)
  %831 = bitcast %28** %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %831) #10
  store %28* null, %28** %61, align 8
  br label %832

832:                                              ; preds = %847, %829
  %833 = call %25* @listNext(%30* %24)
  store %25* %833, %25** %25, align 8
  %834 = icmp ne %25* %833, null
  br i1 %834, label %835, label %849

835:                                              ; preds = %832
  %836 = bitcast %28** %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %836) #10
  %837 = load %25*, %25** %25, align 8
  %838 = getelementptr inbounds %25, %25* %837, i32 0, i32 2
  %839 = load i8*, i8** %838, align 8
  %840 = bitcast i8* %839 to %28*
  store %28* %840, %28** %62, align 8
  %841 = load %28*, %28** %61, align 8
  %842 = icmp ne %28* %841, null
  br i1 %842, label %845, label %843

843:                                              ; preds = %835
  %844 = load %28*, %28** %62, align 8
  store %28* %844, %28** %61, align 8
  br label %847

845:                                              ; preds = %835
  %846 = load %28*, %28** %62, align 8
  call void @1406(%28* %846)
  br label %847

847:                                              ; preds = %845, %843
  %848 = bitcast %28** %62 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %848) #10
  br label %832

849:                                              ; preds = %832
  %850 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listEmpty(%24* %850)
  %851 = load %28*, %28** %61, align 8
  %852 = call i32 @1422(%28* %851, i32 0)
  %853 = icmp ne i32 %852, 0
  br i1 %853, label %855, label %854

854:                                              ; preds = %849
  store i32 0, i32* %8, align 4
  store i32 38, i32* %11, align 4
  br label %857

855:                                              ; preds = %849
  %856 = call i32 @1423(i32 0)
  store i32 0, i32* %11, align 4
  br label %857

857:                                              ; preds = %854, %855
  %858 = bitcast %28** %61 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %858) #10
  br label %859

859:                                              ; preds = %857, %825, %775
  %860 = bitcast %28** %54 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %860) #10
  %861 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %861) #10
  %862 = load i32, i32* %11, align 4
  switch i32 %862, label %892 [
    i32 0, label %863
    i32 38, label %865
  ]

863:                                              ; preds = %859
  br label %864

864:                                              ; preds = %863, %627
  br label %865

865:                                              ; preds = %864, %859, %679
  %866 = load %28**, %28*** %32, align 8
  %867 = bitcast %28** %866 to i8*
  call void @zfree(i8* %867)
  %868 = load i8**, i8*** %22, align 8
  %869 = bitcast i8** %868 to i8*
  call void @zfree(i8* %869)
  store i32 0, i32* %6, align 4
  br label %870

870:                                              ; preds = %885, %865
  %871 = load i32, i32* %6, align 4
  %872 = load i32, i32* %16, align 4
  %873 = icmp slt i32 %871, %872
  br i1 %873, label %874, label %888

874:                                              ; preds = %870
  %875 = bitcast %29** %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %875) #10
  %876 = load %29*, %29** %23, align 8
  %877 = load i32, i32* %6, align 4
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds %29, %29* %876, i64 %878
  store %29* %879, %29** %63, align 8
  %880 = load %29*, %29** %63, align 8
  %881 = getelementptr inbounds %29, %29* %880, i32 0, i32 1
  %882 = load %28**, %28*** %881, align 8
  %883 = bitcast %28** %882 to i8*
  call void @zfree(i8* %883)
  %884 = bitcast %29** %63 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %884) #10
  br label %885

885:                                              ; preds = %874
  %886 = load i32, i32* %6, align 4
  %887 = add nsw i32 %886, 1
  store i32 %887, i32* %6, align 4
  br label %870

888:                                              ; preds = %870
  %889 = load %29*, %29** %23, align 8
  %890 = bitcast %29* %889 to i8*
  call void @zfree(i8* %890)
  %891 = load i32, i32* %8, align 4
  store i32 %891, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %892

892:                                              ; preds = %888, %859, %679
  %893 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %893) #10
  %894 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %894) #10
  %895 = bitcast %28** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %895) #10
  %896 = bitcast float* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %896) #10
  %897 = bitcast i64* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %897) #10
  %898 = bitcast float* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %898) #10
  %899 = bitcast %28*** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %899) #10
  %900 = bitcast %25** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %900) #10
  %901 = bitcast %30* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %901) #10
  %902 = bitcast %29** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %902) #10
  %903 = bitcast i8*** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %903) #10
  %904 = bitcast %28*** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %904) #10
  %905 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %905) #10
  %906 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %906) #10
  br label %907

907:                                              ; preds = %892, %191
  %908 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %908) #10
  %909 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %909) #10
  %910 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %910) #10
  br label %911

911:                                              ; preds = %907, %168
  %912 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %912) #10
  %913 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %913) #10
  %914 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %914) #10
  %915 = load i32, i32* %3, align 4
  ret i32 %915

916:                                              ; preds = %591, %507, %251
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1373(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  store i32 0, i32* %6, align 4
  %11 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  store i8* null, i8** %7, align 8
  %12 = load i32, i32* %4, align 4
  %13 = load i8**, i8*** %5, align 8
  %14 = call i32 @1471(i32 %12, i8** %13, i8** %7, i32* %6)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  br label %27

17:                                               ; preds = %2
  %18 = load i8*, i8** %7, align 8
  %19 = load i32, i32* %6, align 4
  %20 = call %28* @1404(i8* %18, i32 %19)
  store %28* %20, %28** %8, align 8
  %21 = load %28*, %28** %8, align 8
  %22 = call i32 @1422(%28* %21, i32 0)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %30

25:                                               ; preds = %17
  call void @1473()
  %26 = call i32 @1423(i32 0)
  store i32 %26, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %30

27:                                               ; preds = %16
  %28 = load %1*, %1** @stderr, align 8
  %29 = call i32 (%1*, i8*, ...) @fprintf(%1* %28, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %30

30:                                               ; preds = %27, %25, %24
  %31 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #10
  %32 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32) #10
  %33 = load i32, i32* %3, align 4
  ret i32 %33
}

; Function Attrs: nounwind uwtable
define internal i32 @1374(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  store i32 0, i32* %6, align 4
  %11 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  store i8* null, i8** %7, align 8
  %12 = load i32, i32* %4, align 4
  %13 = load i8**, i8*** %5, align 8
  %14 = call i32 @1471(i32 %12, i8** %13, i8** %7, i32* %6)
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  br label %26

17:                                               ; preds = %2
  %18 = load i8*, i8** %7, align 8
  %19 = load i32, i32* %6, align 4
  %20 = call %28* @1404(i8* %18, i32 %19)
  store %28* %20, %28** %8, align 8
  %21 = load %28*, %28** %8, align 8
  %22 = call i32 @1422(%28* %21, i32 0)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %29

25:                                               ; preds = %17
  call void @1473()
  store i32 1, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %29

26:                                               ; preds = %16
  %27 = load %1*, %1** @stderr, align 8
  %28 = call i32 (%1*, i8*, ...) @fprintf(%1* %27, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %29

29:                                               ; preds = %26, %25, %24
  %30 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #10
  %31 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %31) #10
  %32 = load i32, i32* %3, align 4
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define internal i32 @1375(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %5 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %6 = or i32 %5, 1
  store i32 %6, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %7 = load i32, i32* %3, align 4
  %8 = load i8**, i8*** %4, align 8
  %9 = call i32 @1373(i32 %7, i8** %8)
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define internal i32 @1376(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [6 x i8], align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca [255 x i8], align 16
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %28*, align 8
  %23 = alloca %24*, align 8
  %24 = alloca %24*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %28*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca %28*, align 8
  %33 = alloca %28*, align 8
  %34 = alloca %30, align 8
  %35 = alloca %25*, align 8
  %36 = alloca %28*, align 8
  %37 = alloca %28*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca [4 x i8], align 1
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca %32*, align 8
  %44 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %45 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #10
  store i32 0, i32* %6, align 4
  %46 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #10
  store i8* null, i8** %7, align 8
  %47 = load i32, i32* %4, align 4
  %48 = load i8**, i8*** %5, align 8
  %49 = call i32 @1471(i32 %47, i8** %48, i8** %7, i32* %6)
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %2
  br label %529

52:                                               ; preds = %2
  %53 = load i8*, i8** %7, align 8
  %54 = load i32, i32* %6, align 4
  %55 = call %28* @1404(i8* %53, i32 %54)
  store %28* %55, %28** %8, align 8
  %56 = load %28*, %28** %8, align 8
  %57 = call i32 @1422(%28* %56, i32 0)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %52
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %532

60:                                               ; preds = %52
  %61 = call i32 @1423(i32 0)
  %62 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  %63 = icmp ne %24* %62, null
  br i1 %63, label %64, label %74

64:                                               ; preds = %60
  %65 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  %66 = getelementptr inbounds %24, %24* %65, i32 0, i32 5
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = load %1*, %1** @stdout, align 8
  %71 = call i32 @fflush(%1* %70)
  %72 = load %1*, %1** @stderr, align 8
  %73 = call i32 (%1*, i8*, ...) @fprintf(%1* %72, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @982, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %532

74:                                               ; preds = %64, %60
  %75 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 10), align 8
  store i32 %75, i32* %10, align 4
  %76 = load i32, i32* %10, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %137, label %78

78:                                               ; preds = %74
  br label %79

79:                                               ; preds = %135, %131, %78
  %80 = load i32, i32* %10, align 4
  %81 = icmp sle i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  %83 = load i32, i32* %10, align 4
  %84 = icmp sgt i32 %83, 16384
  br label %85

85:                                               ; preds = %82, %79
  %86 = phi i1 [ true, %79 ], [ %84, %82 ]
  br i1 %86, label %87, label %136

87:                                               ; preds = %85
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @983, i32 0, i32 0), i32 16384)
  %89 = load %1*, %1** @stdout, align 8
  %90 = call i32 @fflush(%1* %89)
  %91 = bitcast [6 x i8]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* %91) #10
  %92 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %92) #10
  %93 = load %1*, %1** @stdin, align 8
  %94 = call i32 @fileno(%1* %93) #10
  %95 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i32 0, i32 0
  %96 = call i64 @read(i32 %94, i8* %95, i64 6)
  %97 = trunc i64 %96 to i32
  store i32 %97, i32* %12, align 4
  %98 = load i32, i32* %12, align 4
  %99 = icmp sle i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %87
  store i32 3, i32* %9, align 4
  br label %131

101:                                              ; preds = %87
  %102 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %102) #10
  %103 = load i32, i32* %12, align 4
  %104 = sub nsw i32 %103, 1
  store i32 %104, i32* %13, align 4
  %105 = load i32, i32* %13, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = sext i8 %108 to i32
  %110 = icmp ne i32 %109, 10
  br i1 %110, label %111, label %124

111:                                              ; preds = %101
  %112 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %112) #10
  br label %113

113:                                              ; preds = %121, %111
  %114 = call i32 @getchar()
  store i32 %114, i32* %14, align 4
  %115 = icmp ne i32 %114, 10
  br i1 %115, label %116, label %119

116:                                              ; preds = %113
  %117 = load i32, i32* %14, align 4
  %118 = icmp ne i32 %117, -1
  br label %119

119:                                              ; preds = %116, %113
  %120 = phi i1 [ false, %113 ], [ %118, %116 ]
  br i1 %120, label %121, label %122

121:                                              ; preds = %119
  br label %113

122:                                              ; preds = %119
  %123 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %123) #10
  br label %124

124:                                              ; preds = %122, %101
  %125 = load i32, i32* %13, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 %126
  store i8 0, i8* %127, align 1
  %128 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i32 0, i32 0
  %129 = call i32 @atoi(i8* %128) #12
  store i32 %129, i32* %10, align 4
  %130 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %130) #10
  store i32 0, i32* %9, align 4
  br label %131

131:                                              ; preds = %124, %100
  %132 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %132) #10
  %133 = bitcast [6 x i8]* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 6, i8* %133) #10
  %134 = load i32, i32* %9, align 4
  switch i32 %134, label %536 [
    i32 0, label %135
    i32 3, label %79
  ]

135:                                              ; preds = %131
  br label %79

136:                                              ; preds = %85
  br label %137

137:                                              ; preds = %136, %74
  %138 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 6), align 8
  store i8* %138, i8** %16, align 8
  %139 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 5), align 8
  store i8* %139, i8** %17, align 8
  br label %140

140:                                              ; preds = %193, %190, %137
  %141 = load i8*, i8** %16, align 8
  %142 = icmp eq i8* %141, null
  br i1 %142, label %143, label %194

143:                                              ; preds = %140
  %144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @984, i32 0, i32 0))
  %145 = load %1*, %1** @stdout, align 8
  %146 = call i32 @fflush(%1* %145)
  %147 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %147) #10
  %148 = load %1*, %1** @stdin, align 8
  %149 = call i32 @fileno(%1* %148) #10
  %150 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i32 0, i32 0
  %151 = call i64 @read(i32 %149, i8* %150, i64 255)
  %152 = trunc i64 %151 to i32
  store i32 %152, i32* %18, align 4
  %153 = load i32, i32* %18, align 4
  %154 = icmp sle i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %143
  store i32 7, i32* %9, align 4
  br label %190

156:                                              ; preds = %143
  %157 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %157) #10
  %158 = load i32, i32* %18, align 4
  %159 = sub nsw i32 %158, 1
  store i32 %159, i32* %19, align 4
  %160 = load i32, i32* %19, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp ne i32 %164, 10
  br i1 %165, label %166, label %179

166:                                              ; preds = %156
  %167 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %167) #10
  br label %168

168:                                              ; preds = %176, %166
  %169 = call i32 @getchar()
  store i32 %169, i32* %20, align 4
  %170 = icmp ne i32 %169, 10
  br i1 %170, label %171, label %174

171:                                              ; preds = %168
  %172 = load i32, i32* %20, align 4
  %173 = icmp ne i32 %172, -1
  br label %174

174:                                              ; preds = %171, %168
  %175 = phi i1 [ false, %168 ], [ %173, %171 ]
  br i1 %175, label %176, label %177

176:                                              ; preds = %174
  br label %168

177:                                              ; preds = %174
  %178 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %178) #10
  br label %179

179:                                              ; preds = %177, %156
  %180 = load i32, i32* %19, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i64 0, i64 %181
  store i8 0, i8* %182, align 1
  %183 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i32 0, i32 0
  %184 = call i64 @strlen(i8* %183) #12
  %185 = icmp ugt i64 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %179
  %187 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i32 0, i32 0
  store i8* %187, i8** %16, align 8
  br label %188

188:                                              ; preds = %186, %179
  %189 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %189) #10
  store i32 0, i32* %9, align 4
  br label %190

190:                                              ; preds = %188, %155
  %191 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #10
  %192 = load i32, i32* %9, align 4
  switch i32 %192, label %536 [
    i32 0, label %193
    i32 7, label %140
  ]

193:                                              ; preds = %190
  br label %140

194:                                              ; preds = %140
  store i32 0, i32* %21, align 4
  %195 = load i8*, i8** %16, align 8
  %196 = call %28* @1474(i8* %195, %28* null, i32* %21)
  store %28* %196, %28** %22, align 8
  %197 = load %28*, %28** %22, align 8
  %198 = icmp eq %28* %197, null
  br i1 %198, label %199, label %200

199:                                              ; preds = %194
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %532

200:                                              ; preds = %194
  %201 = call %24* @listCreate()
  store %24* %201, %24** %23, align 8
  store %24* null, %24** %24, align 8
  store i32 0, i32* %25, align 4
  store i32 1, i32* %26, align 4
  %202 = load i8*, i8** %17, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %204, label %293

204:                                              ; preds = %200
  %205 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @985, i32 0, i32 0))
  %206 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @986, i32 0, i32 0))
  %207 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @987, i32 0, i32 0))
  br label %208

208:                                              ; preds = %291, %288, %204
  br label %209

209:                                              ; preds = %208
  %210 = load %24*, %24** %23, align 8
  %211 = getelementptr inbounds %24, %24* %210, i32 0, i32 5
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, 1
  %214 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @988, i32 0, i32 0), i64 %213)
  %215 = load %1*, %1** @stdout, align 8
  %216 = call i32 @fflush(%1* %215)
  %217 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %217) #10
  %218 = load %1*, %1** @stdin, align 8
  %219 = call i32 @fileno(%1* %218) #10
  %220 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i32 0, i32 0
  %221 = call i64 @read(i32 %219, i8* %220, i64 255)
  %222 = trunc i64 %221 to i32
  store i32 %222, i32* %27, align 4
  %223 = load i32, i32* %27, align 4
  %224 = icmp sle i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %209
  store i32 11, i32* %9, align 4
  br label %288

226:                                              ; preds = %209
  %227 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %227) #10
  %228 = load i32, i32* %27, align 4
  %229 = sub nsw i32 %228, 1
  store i32 %229, i32* %28, align 4
  %230 = load i32, i32* %28, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i64 0, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = sext i8 %233 to i32
  %235 = icmp ne i32 %234, 10
  br i1 %235, label %236, label %249

236:                                              ; preds = %226
  %237 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %237) #10
  br label %238

238:                                              ; preds = %246, %236
  %239 = call i32 @getchar()
  store i32 %239, i32* %29, align 4
  %240 = icmp ne i32 %239, 10
  br i1 %240, label %241, label %244

241:                                              ; preds = %238
  %242 = load i32, i32* %29, align 4
  %243 = icmp ne i32 %242, -1
  br label %244

244:                                              ; preds = %241, %238
  %245 = phi i1 [ false, %238 ], [ %243, %241 ]
  br i1 %245, label %246, label %247

246:                                              ; preds = %244
  br label %238

247:                                              ; preds = %244
  %248 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %248) #10
  br label %249

249:                                              ; preds = %247, %226
  %250 = load i32, i32* %28, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i64 0, i64 %251
  store i8 0, i8* %252, align 1
  %253 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i32 0, i32 0
  %254 = call i32 @strcmp(i8* %253, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @989, i32 0, i32 0)) #12
  %255 = icmp ne i32 %254, 0
  br i1 %255, label %257, label %256

256:                                              ; preds = %249
  store i32 12, i32* %9, align 4
  br label %286

257:                                              ; preds = %249
  %258 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i32 0, i32 0
  %259 = call i32 @strcmp(i8* %258, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @990, i32 0, i32 0)) #12
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %262, label %261

261:                                              ; preds = %257
  store i32 1, i32* %25, align 4
  store i32 12, i32* %9, align 4
  br label %286

262:                                              ; preds = %257
  %263 = bitcast %28** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %263) #10
  %264 = getelementptr inbounds [255 x i8], [255 x i8]* %15, i32 0, i32 0
  %265 = load %28*, %28** %22, align 8
  %266 = call %28* @1474(i8* %264, %28* %265, i32* %21)
  store %28* %266, %28** %30, align 8
  %267 = load %28*, %28** %30, align 8
  %268 = icmp ne %28* %267, null
  br i1 %268, label %269, label %274

269:                                              ; preds = %262
  %270 = load %24*, %24** %23, align 8
  %271 = load %28*, %28** %30, align 8
  %272 = bitcast %28* %271 to i8*
  %273 = call %24* @listAddNodeTail(%24* %270, i8* %272)
  br label %279

274:                                              ; preds = %262
  %275 = load i32, i32* %21, align 4
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  store i32 0, i32* %26, align 4
  store i32 15, i32* %9, align 4
  br label %280

278:                                              ; preds = %274
  br label %279

279:                                              ; preds = %278, %269
  store i32 0, i32* %9, align 4
  br label %280

280:                                              ; preds = %277, %279
  %281 = bitcast %28** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %281) #10
  %282 = load i32, i32* %9, align 4
  switch i32 %282, label %286 [
    i32 0, label %283
  ]

283:                                              ; preds = %280
  br label %284

284:                                              ; preds = %283
  br label %285

285:                                              ; preds = %284
  store i32 0, i32* %9, align 4
  br label %286

286:                                              ; preds = %285, %280, %261, %256
  %287 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %287) #10
  br label %288

288:                                              ; preds = %286, %225
  %289 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %289) #10
  %290 = load i32, i32* %9, align 4
  switch i32 %290, label %532 [
    i32 0, label %291
    i32 11, label %208
    i32 12, label %292
    i32 15, label %525
  ]

291:                                              ; preds = %288
  br label %208

292:                                              ; preds = %288
  br label %373

293:                                              ; preds = %200
  %294 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %294) #10
  br label %295

295:                                              ; preds = %327, %293
  %296 = load i8*, i8** %17, align 8
  %297 = call i8* @strchr(i8* %296, i32 44) #12
  store i8* %297, i8** %31, align 8
  %298 = icmp ne i8* %297, null
  br i1 %298, label %299, label %330

299:                                              ; preds = %295
  %300 = load i8*, i8** %31, align 8
  store i8 0, i8* %300, align 1
  %301 = load i8*, i8** %17, align 8
  %302 = call i32 @strcmp(i8* %301, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @990, i32 0, i32 0)) #12
  %303 = icmp ne i32 %302, 0
  br i1 %303, label %305, label %304

304:                                              ; preds = %299
  store i32 1, i32* %25, align 4
  br label %330

305:                                              ; preds = %299
  %306 = bitcast %28** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %306) #10
  %307 = load i8*, i8** %17, align 8
  %308 = load %28*, %28** %22, align 8
  %309 = call %28* @1474(i8* %307, %28* %308, i32* %21)
  store %28* %309, %28** %32, align 8
  %310 = load %28*, %28** %32, align 8
  %311 = icmp ne %28* %310, null
  br i1 %311, label %312, label %317

312:                                              ; preds = %305
  %313 = load %24*, %24** %23, align 8
  %314 = load %28*, %28** %32, align 8
  %315 = bitcast %28* %314 to i8*
  %316 = call %24* @listAddNodeTail(%24* %313, i8* %315)
  br label %322

317:                                              ; preds = %305
  %318 = load i32, i32* %21, align 4
  %319 = icmp ne i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  store i32 0, i32* %26, align 4
  store i32 15, i32* %9, align 4
  br label %323

321:                                              ; preds = %317
  br label %322

322:                                              ; preds = %321, %312
  store i32 0, i32* %9, align 4
  br label %323

323:                                              ; preds = %320, %322
  %324 = bitcast %28** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %324) #10
  %325 = load i32, i32* %9, align 4
  switch i32 %325, label %369 [
    i32 0, label %326
  ]

326:                                              ; preds = %323
  br label %327

327:                                              ; preds = %326
  %328 = load i8*, i8** %31, align 8
  %329 = getelementptr inbounds i8, i8* %328, i64 1
  store i8* %329, i8** %17, align 8
  br label %295

330:                                              ; preds = %304, %295
  %331 = load i32, i32* %25, align 4
  %332 = icmp ne i32 %331, 0
  br i1 %332, label %368, label %333

333:                                              ; preds = %330
  %334 = load i8*, i8** %17, align 8
  %335 = call i64 @strlen(i8* %334) #12
  %336 = icmp ugt i64 %335, 0
  br i1 %336, label %337, label %368

337:                                              ; preds = %333
  %338 = load i8*, i8** %17, align 8
  %339 = call i32 @strcmp(i8* %338, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @990, i32 0, i32 0)) #12
  %340 = icmp ne i32 %339, 0
  br i1 %340, label %342, label %341

341:                                              ; preds = %337
  store i32 1, i32* %25, align 4
  br label %342

342:                                              ; preds = %341, %337
  %343 = load i32, i32* %25, align 4
  %344 = icmp ne i32 %343, 0
  br i1 %344, label %367, label %345

345:                                              ; preds = %342
  %346 = bitcast %28** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %346) #10
  %347 = load i8*, i8** %17, align 8
  %348 = load %28*, %28** %22, align 8
  %349 = call %28* @1474(i8* %347, %28* %348, i32* %21)
  store %28* %349, %28** %33, align 8
  %350 = load %28*, %28** %33, align 8
  %351 = icmp ne %28* %350, null
  br i1 %351, label %352, label %357

352:                                              ; preds = %345
  %353 = load %24*, %24** %23, align 8
  %354 = load %28*, %28** %33, align 8
  %355 = bitcast %28* %354 to i8*
  %356 = call %24* @listAddNodeTail(%24* %353, i8* %355)
  br label %362

357:                                              ; preds = %345
  %358 = load i32, i32* %21, align 4
  %359 = icmp ne i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  store i32 0, i32* %26, align 4
  store i32 15, i32* %9, align 4
  br label %363

361:                                              ; preds = %357
  br label %362

362:                                              ; preds = %361, %352
  store i32 0, i32* %9, align 4
  br label %363

363:                                              ; preds = %360, %362
  %364 = bitcast %28** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %364) #10
  %365 = load i32, i32* %9, align 4
  switch i32 %365, label %369 [
    i32 0, label %366
  ]

366:                                              ; preds = %363
  br label %367

367:                                              ; preds = %366, %342
  br label %368

368:                                              ; preds = %367, %333, %330
  store i32 0, i32* %9, align 4
  br label %369

369:                                              ; preds = %368, %363, %323
  %370 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370) #10
  %371 = load i32, i32* %9, align 4
  switch i32 %371, label %532 [
    i32 0, label %372
    i32 15, label %525
  ]

372:                                              ; preds = %369
  br label %373

373:                                              ; preds = %372, %292
  %374 = load i32, i32* %25, align 4
  %375 = icmp ne i32 %374, 0
  br i1 %375, label %376, label %419

376:                                              ; preds = %373
  %377 = load %24*, %24** %23, align 8
  call void @listEmpty(%24* %377)
  %378 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %378, %30* %34)
  br label %379

379:                                              ; preds = %417, %414, %376
  %380 = call %25* @listNext(%30* %34)
  store %25* %380, %25** %35, align 8
  %381 = icmp ne %25* %380, null
  br i1 %381, label %382, label %418

382:                                              ; preds = %379
  %383 = bitcast %28** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %383) #10
  %384 = load %25*, %25** %35, align 8
  %385 = getelementptr inbounds %25, %25* %384, i32 0, i32 2
  %386 = load i8*, i8** %385, align 8
  %387 = bitcast i8* %386 to %28*
  store %28* %387, %28** %36, align 8
  %388 = load %28*, %28** %36, align 8
  %389 = getelementptr inbounds %28, %28* %388, i32 0, i32 7
  %390 = load i32, i32* %389, align 8
  %391 = and i32 %390, 2
  %392 = icmp ne i32 %391, 0
  br i1 %392, label %398, label %393

393:                                              ; preds = %382
  %394 = load %28*, %28** %36, align 8
  %395 = getelementptr inbounds %28, %28* %394, i32 0, i32 9
  %396 = load i8*, i8** %395, align 8
  %397 = icmp ne i8* %396, null
  br i1 %397, label %398, label %399

398:                                              ; preds = %393, %382
  store i32 18, i32* %9, align 4
  br label %414

399:                                              ; preds = %393
  %400 = load %28*, %28** %36, align 8
  %401 = getelementptr inbounds %28, %28* %400, i32 0, i32 1
  %402 = load i8*, i8** %401, align 8
  %403 = load %28*, %28** %22, align 8
  %404 = getelementptr inbounds %28, %28* %403, i32 0, i32 1
  %405 = load i8*, i8** %404, align 8
  %406 = call i32 @sdscmp(i8* %402, i8* %405)
  %407 = icmp ne i32 %406, 0
  br i1 %407, label %409, label %408

408:                                              ; preds = %399
  store i32 18, i32* %9, align 4
  br label %414

409:                                              ; preds = %399
  %410 = load %24*, %24** %23, align 8
  %411 = load %28*, %28** %36, align 8
  %412 = bitcast %28* %411 to i8*
  %413 = call %24* @listAddNodeTail(%24* %410, i8* %412)
  store i32 0, i32* %9, align 4
  br label %414

414:                                              ; preds = %409, %408, %398
  %415 = bitcast %28** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %415) #10
  %416 = load i32, i32* %9, align 4
  switch i32 %416, label %536 [
    i32 0, label %417
    i32 18, label %379
  ]

417:                                              ; preds = %414
  br label %379

418:                                              ; preds = %379
  br label %419

419:                                              ; preds = %418, %373
  %420 = load %24*, %24** %23, align 8
  %421 = getelementptr inbounds %24, %24* %420, i32 0, i32 5
  %422 = load i64, i64* %421, align 8
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %424, label %427

424:                                              ; preds = %419
  %425 = load %1*, %1** @stderr, align 8
  %426 = call i32 (%1*, i8*, ...) @fprintf(%1* %425, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @991, i32 0, i32 0))
  store i32 0, i32* %26, align 4
  br label %525

427:                                              ; preds = %419
  %428 = load i32, i32* %10, align 4
  %429 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @992, i32 0, i32 0), i32 %428)
  %430 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @993, i32 0, i32 0))
  %431 = load %24*, %24** %23, align 8
  call void @listRewind(%24* %431, %30* %34)
  br label %432

432:                                              ; preds = %435, %427
  %433 = call %25* @listNext(%30* %34)
  store %25* %433, %25** %35, align 8
  %434 = icmp ne %25* %433, null
  br i1 %434, label %435, label %449

435:                                              ; preds = %432
  %436 = bitcast %28** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %436) #10
  %437 = load %25*, %25** %35, align 8
  %438 = getelementptr inbounds %25, %25* %437, i32 0, i32 2
  %439 = load i8*, i8** %438, align 8
  %440 = bitcast i8* %439 to %28*
  store %28* %440, %28** %37, align 8
  %441 = bitcast i8** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %441) #10
  %442 = load %28*, %28** %37, align 8
  %443 = call i8* @1436(%28* %442, i32 4)
  store i8* %443, i8** %38, align 8
  %444 = load i8*, i8** %38, align 8
  %445 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %444)
  %446 = load i8*, i8** %38, align 8
  call void @sdsfree(i8* %446)
  %447 = bitcast i8** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %447) #10
  %448 = bitcast %28** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %448) #10
  br label %432

449:                                              ; preds = %432
  %450 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @994, i32 0, i32 0))
  %451 = load %28*, %28** %22, align 8
  %452 = call i8* @1436(%28* %451, i32 4)
  store i8* %452, i8** %39, align 8
  %453 = load i8*, i8** %39, align 8
  %454 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %453)
  %455 = load i8*, i8** %39, align 8
  call void @sdsfree(i8* %455)
  %456 = load %24*, %24** %23, align 8
  %457 = load i32, i32* %10, align 4
  %458 = call %24* @1475(%24* %456, i32 %457)
  store %24* %458, %24** %24, align 8
  %459 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @995, i32 0, i32 0))
  %460 = load %24*, %24** %24, align 8
  call void @1476(%24* %460)
  %461 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %462 = and i32 %461, 4
  %463 = icmp ne i32 %462, 0
  br i1 %463, label %489, label %464

464:                                              ; preds = %449
  %465 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @996, i32 0, i32 0))
  %466 = load %1*, %1** @stdout, align 8
  %467 = call i32 @fflush(%1* %466)
  %468 = bitcast [4 x i8]* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %468) #10
  %469 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %469) #10
  %470 = load %1*, %1** @stdin, align 8
  %471 = call i32 @fileno(%1* %470) #10
  %472 = getelementptr inbounds [4 x i8], [4 x i8]* %40, i32 0, i32 0
  %473 = call i64 @read(i32 %471, i8* %472, i64 4)
  %474 = trunc i64 %473 to i32
  store i32 %474, i32* %41, align 4
  %475 = getelementptr inbounds [4 x i8], [4 x i8]* %40, i64 0, i64 3
  store i8 0, i8* %475, align 1
  %476 = load i32, i32* %41, align 4
  %477 = icmp sle i32 %476, 0
  br i1 %477, label %482, label %478

478:                                              ; preds = %464
  %479 = getelementptr inbounds [4 x i8], [4 x i8]* %40, i32 0, i32 0
  %480 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @842, i32 0, i32 0), i8* %479) #12
  %481 = icmp ne i32 %480, 0
  br i1 %481, label %482, label %483

482:                                              ; preds = %478, %464
  store i32 0, i32* %26, align 4
  store i32 15, i32* %9, align 4
  br label %484

483:                                              ; preds = %478
  store i32 0, i32* %9, align 4
  br label %484

484:                                              ; preds = %482, %483
  %485 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %485) #10
  %486 = bitcast [4 x i8]* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %486) #10
  %487 = load i32, i32* %9, align 4
  switch i32 %487, label %532 [
    i32 0, label %488
    i32 15, label %525
  ]

488:                                              ; preds = %484
  br label %489

489:                                              ; preds = %488, %449
  store i32 128, i32* %42, align 4
  %490 = load %24*, %24** %24, align 8
  call void @listRewind(%24* %490, %30* %34)
  br label %491

491:                                              ; preds = %523, %489
  %492 = call %25* @listNext(%30* %34)
  store %25* %492, %25** %35, align 8
  %493 = icmp ne %25* %492, null
  br i1 %493, label %494, label %524

494:                                              ; preds = %491
  %495 = bitcast %32** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %495) #10
  %496 = load %25*, %25** %35, align 8
  %497 = getelementptr inbounds %25, %25* %496, i32 0, i32 2
  %498 = load i8*, i8** %497, align 8
  %499 = bitcast i8* %498 to %32*
  store %32* %499, %32** %43, align 8
  %500 = bitcast i8** %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %500) #10
  store i8* null, i8** %44, align 8
  %501 = load %32*, %32** %43, align 8
  %502 = getelementptr inbounds %32, %32* %501, i32 0, i32 0
  %503 = load %28*, %28** %502, align 8
  %504 = load %28*, %28** %22, align 8
  %505 = load %32*, %32** %43, align 8
  %506 = getelementptr inbounds %32, %32* %505, i32 0, i32 1
  %507 = load i32, i32* %506, align 8
  %508 = load i32, i32* %42, align 4
  %509 = call i32 @1460(%28* %503, %28* %504, i32 %507, i32 %508, i8** %44)
  store i32 %509, i32* %26, align 4
  %510 = load i32, i32* %26, align 4
  %511 = icmp ne i32 %510, 0
  br i1 %511, label %518, label %512

512:                                              ; preds = %494
  %513 = load i8*, i8** %44, align 8
  %514 = icmp ne i8* %513, null
  br i1 %514, label %515, label %517

515:                                              ; preds = %512
  %516 = load i8*, i8** %44, align 8
  call void @zfree(i8* %516)
  br label %517

517:                                              ; preds = %515, %512
  store i32 15, i32* %9, align 4
  br label %519

518:                                              ; preds = %494
  store i32 0, i32* %9, align 4
  br label %519

519:                                              ; preds = %517, %518
  %520 = bitcast i8** %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %520) #10
  %521 = bitcast %32** %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %521) #10
  %522 = load i32, i32* %9, align 4
  switch i32 %522, label %532 [
    i32 0, label %523
    i32 15, label %525
  ]

523:                                              ; preds = %519
  br label %491

524:                                              ; preds = %491
  br label %525

525:                                              ; preds = %524, %519, %484, %369, %288, %424
  %526 = load %24*, %24** %23, align 8
  call void @listRelease(%24* %526)
  %527 = load %24*, %24** %24, align 8
  call void @1477(%24* %527)
  %528 = load i32, i32* %26, align 4
  store i32 %528, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %532

529:                                              ; preds = %51
  %530 = load %1*, %1** @stderr, align 8
  %531 = call i32 (%1*, i8*, ...) @fprintf(%1* %530, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %532

532:                                              ; preds = %529, %525, %519, %484, %369, %288, %199, %69, %59
  %533 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %533) #10
  %534 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %534) #10
  %535 = load i32, i32* %3, align 4
  ret i32 %535

536:                                              ; preds = %414, %190, %131
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1377(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %28**, align 8
  %9 = alloca %24*, align 8
  %10 = alloca %28*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca float, align 4
  %17 = alloca %28*, align 8
  %18 = alloca float, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %30, align 8
  %22 = alloca %25*, align 8
  %23 = alloca %28*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca float, align 4
  %27 = alloca %28*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca float, align 4
  %31 = alloca %28*, align 8
  %32 = alloca %28*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca %28*, align 8
  %37 = alloca %28*, align 8
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca %24*, align 8
  %42 = alloca %24*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %32*, align 8
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %46 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #10
  store i32 0, i32* %6, align 4
  %47 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #10
  store i8* null, i8** %7, align 8
  %48 = bitcast %28*** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #10
  store %28** null, %28*** %8, align 8
  %49 = bitcast %24** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #10
  store %24* null, %24** %9, align 8
  %50 = load i32, i32* %4, align 4
  %51 = load i8**, i8*** %5, align 8
  %52 = call i32 @1471(i32 %50, i8** %51, i8** %7, i32* %6)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %2
  br label %535

55:                                               ; preds = %2
  %56 = load i8*, i8** %7, align 8
  %57 = load i32, i32* %6, align 4
  %58 = call %28* @1404(i8* %56, i32 %57)
  store %28* %58, %28** %10, align 8
  %59 = load %28*, %28** %10, align 8
  %60 = call i32 @1422(%28* %59, i32 0)
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %55
  store i32 0, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %538

63:                                               ; preds = %55
  store i32 1, i32* %12, align 4
  %64 = load i8**, i8*** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 7), align 8
  %65 = icmp ne i8** %64, null
  br i1 %65, label %66, label %114

66:                                               ; preds = %63
  store i32 0, i32* %13, align 4
  br label %67

67:                                               ; preds = %110, %66
  %68 = load i32, i32* %13, align 4
  %69 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 8), align 8
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %71, label %113

71:                                               ; preds = %67
  %72 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #10
  %73 = load i8**, i8*** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 7), align 8
  %74 = load i32, i32* %13, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8*, i8** %73, i64 %75
  %77 = load i8*, i8** %76, align 8
  store i8* %77, i8** %14, align 8
  %78 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %78) #10
  %79 = load i8*, i8** %14, align 8
  %80 = call i8* @strchr(i8* %79, i32 61) #12
  store i8* %80, i8** %15, align 8
  %81 = load i8*, i8** %15, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %71
  store i32 0, i32* %12, align 4
  store i32 6, i32* %11, align 4
  br label %105

84:                                               ; preds = %71
  %85 = load i8*, i8** %15, align 8
  store i8 0, i8* %85, align 1
  %86 = bitcast float* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %86) #10
  %87 = load i8*, i8** %15, align 8
  %88 = getelementptr inbounds i8, i8* %87, i32 1
  store i8* %88, i8** %15, align 8
  %89 = call double @atof(i8* %88) #12
  %90 = fptrunc double %89 to float
  store float %90, float* %16, align 4
  %91 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %91) #10
  %92 = load i8*, i8** %14, align 8
  %93 = call %28* @1478(i8* %92)
  store %28* %93, %28** %17, align 8
  %94 = load %28*, %28** %17, align 8
  %95 = icmp eq %28* %94, null
  br i1 %95, label %96, label %98

96:                                               ; preds = %84
  %97 = load i8*, i8** %14, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1000, i32 0, i32 0), i8* %97)
  store i32 0, i32* %12, align 4
  store i32 6, i32* %11, align 4
  br label %102

98:                                               ; preds = %84
  %99 = load float, float* %16, align 4
  %100 = load %28*, %28** %17, align 8
  %101 = getelementptr inbounds %28, %28* %100, i32 0, i32 19
  store float %99, float* %101, align 8
  store i32 0, i32* %11, align 4
  br label %102

102:                                              ; preds = %96, %98
  %103 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #10
  %104 = bitcast float* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %104) #10
  br label %105

105:                                              ; preds = %83, %102
  %106 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %106) #10
  %107 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #10
  %108 = load i32, i32* %11, align 4
  switch i32 %108, label %538 [
    i32 0, label %109
    i32 6, label %522
  ]

109:                                              ; preds = %105
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %13, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %13, align 4
  br label %67

113:                                              ; preds = %67
  br label %114

114:                                              ; preds = %113, %63
  store float 0.000000e+00, float* %18, align 4
  store i32 0, i32* %19, align 4
  %115 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %116 = and i32 %115, 16
  store i32 %116, i32* %20, align 4
  %117 = call %24* @listCreate()
  store %24* %117, %24** %9, align 8
  %118 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %118, %30* %21)
  br label %119

119:                                              ; preds = %165, %162, %114
  %120 = call %25* @listNext(%30* %21)
  store %25* %120, %25** %22, align 8
  %121 = icmp ne %25* %120, null
  br i1 %121, label %122, label %166

122:                                              ; preds = %119
  %123 = bitcast %28** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %123) #10
  %124 = load %25*, %25** %22, align 8
  %125 = getelementptr inbounds %25, %25* %124, i32 0, i32 2
  %126 = load i8*, i8** %125, align 8
  %127 = bitcast i8* %126 to %28*
  store %28* %127, %28** %23, align 8
  %128 = load %28*, %28** %23, align 8
  %129 = getelementptr inbounds %28, %28* %128, i32 0, i32 7
  %130 = load i32, i32* %129, align 8
  %131 = and i32 %130, 2
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %138, label %133

133:                                              ; preds = %122
  %134 = load %28*, %28** %23, align 8
  %135 = getelementptr inbounds %28, %28* %134, i32 0, i32 9
  %136 = load i8*, i8** %135, align 8
  %137 = icmp ne i8* %136, null
  br i1 %137, label %138, label %139

138:                                              ; preds = %133, %122
  store i32 7, i32* %11, align 4
  br label %162

139:                                              ; preds = %133
  %140 = load i32, i32* %20, align 4
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %150, label %142

142:                                              ; preds = %139
  %143 = load %28*, %28** %23, align 8
  %144 = getelementptr inbounds %28, %28* %143, i32 0, i32 12
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %142
  %148 = load %28*, %28** %23, align 8
  %149 = getelementptr inbounds %28, %28* %148, i32 0, i32 19
  store float 0.000000e+00, float* %149, align 8
  store i32 7, i32* %11, align 4
  br label %162

150:                                              ; preds = %142, %139
  %151 = load %28*, %28** %23, align 8
  %152 = getelementptr inbounds %28, %28* %151, i32 0, i32 19
  %153 = load float, float* %152, align 8
  %154 = load float, float* %18, align 4
  %155 = fadd float %154, %153
  store float %155, float* %18, align 4
  %156 = load i32, i32* %19, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %19, align 4
  %158 = load %24*, %24** %9, align 8
  %159 = load %28*, %28** %23, align 8
  %160 = bitcast %28* %159 to i8*
  %161 = call %24* @listAddNodeTail(%24* %158, i8* %160)
  store i32 0, i32* %11, align 4
  br label %162

162:                                              ; preds = %150, %147, %138
  %163 = bitcast %28** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163) #10
  %164 = load i32, i32* %11, align 4
  switch i32 %164, label %544 [
    i32 0, label %165
    i32 7, label %119
  ]

165:                                              ; preds = %162
  br label %119

166:                                              ; preds = %119
  %167 = load i32, i32* %19, align 4
  %168 = sext i32 %167 to i64
  %169 = mul i64 %168, 8
  %170 = call i8* @zmalloc(i64 %169)
  %171 = bitcast i8* %170 to %28**
  store %28** %171, %28*** %8, align 8
  %172 = load %28**, %28*** %8, align 8
  %173 = icmp eq %28** %172, null
  br i1 %173, label %174, label %175

174:                                              ; preds = %166
  br label %522

175:                                              ; preds = %166
  %176 = call i32 @1423(i32 1)
  %177 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  %178 = icmp ne %24* %177, null
  br i1 %178, label %179, label %185

179:                                              ; preds = %175
  %180 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  %181 = getelementptr inbounds %24, %24* %180, i32 0, i32 5
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %179
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @1001, i32 0, i32 0))
  store i32 0, i32* %12, align 4
  br label %522

185:                                              ; preds = %179, %175
  store i32 0, i32* %24, align 4
  store i32 0, i32* %25, align 4
  %186 = load float, float* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 13), align 4
  store float %186, float* %26, align 4
  store i32 0, i32* %13, align 4
  %187 = load %24*, %24** %9, align 8
  call void @listRewind(%24* %187, %30* %21)
  br label %188

188:                                              ; preds = %260, %185
  %189 = call %25* @listNext(%30* %21)
  store %25* %189, %25** %22, align 8
  %190 = icmp ne %25* %189, null
  br i1 %190, label %191, label %264

191:                                              ; preds = %188
  %192 = bitcast %28** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %192) #10
  %193 = load %25*, %25** %22, align 8
  %194 = getelementptr inbounds %25, %25* %193, i32 0, i32 2
  %195 = load i8*, i8** %194, align 8
  %196 = bitcast i8* %195 to %28*
  store %28* %196, %28** %27, align 8
  %197 = load %28*, %28** %27, align 8
  %198 = load %28**, %28*** %8, align 8
  %199 = load i32, i32* %13, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %13, align 4
  %201 = sext i32 %199 to i64
  %202 = getelementptr inbounds %28*, %28** %198, i64 %201
  store %28* %197, %28** %202, align 8
  %203 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %203) #10
  %204 = load float, float* %18, align 4
  %205 = fdiv float 1.638400e+04, %204
  %206 = load %28*, %28** %27, align 8
  %207 = getelementptr inbounds %28, %28* %206, i32 0, i32 19
  %208 = load float, float* %207, align 8
  %209 = fmul float %205, %208
  %210 = fptosi float %209 to i32
  store i32 %210, i32* %28, align 4
  %211 = load %28*, %28** %27, align 8
  %212 = getelementptr inbounds %28, %28* %211, i32 0, i32 12
  %213 = load i32, i32* %212, align 4
  %214 = load i32, i32* %28, align 4
  %215 = sub nsw i32 %213, %214
  %216 = load %28*, %28** %27, align 8
  %217 = getelementptr inbounds %28, %28* %216, i32 0, i32 20
  store i32 %215, i32* %217, align 4
  %218 = load %28*, %28** %27, align 8
  %219 = getelementptr inbounds %28, %28* %218, i32 0, i32 20
  %220 = load i32, i32* %219, align 4
  %221 = load i32, i32* %25, align 4
  %222 = add nsw i32 %221, %220
  store i32 %222, i32* %25, align 4
  %223 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %223) #10
  store i32 0, i32* %29, align 4
  %224 = load float, float* %26, align 4
  %225 = fcmp ogt float %224, 0.000000e+00
  br i1 %225, label %226, label %256

226:                                              ; preds = %191
  %227 = load %28*, %28** %27, align 8
  %228 = getelementptr inbounds %28, %28* %227, i32 0, i32 12
  %229 = load i32, i32* %228, align 4
  %230 = icmp sgt i32 %229, 0
  br i1 %230, label %231, label %250

231:                                              ; preds = %226
  %232 = bitcast float* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %232) #10
  %233 = load i32, i32* %28, align 4
  %234 = sitofp i32 %233 to double
  %235 = fmul double 1.000000e+02, %234
  %236 = load %28*, %28** %27, align 8
  %237 = getelementptr inbounds %28, %28* %236, i32 0, i32 12
  %238 = load i32, i32* %237, align 4
  %239 = sitofp i32 %238 to double
  %240 = fdiv double %235, %239
  %241 = fsub double 1.000000e+02, %240
  %242 = call double @llvm.fabs.f64(double %241)
  %243 = fptrunc double %242 to float
  store float %243, float* %30, align 4
  %244 = load float, float* %30, align 4
  %245 = load float, float* %26, align 4
  %246 = fcmp ogt float %244, %245
  br i1 %246, label %247, label %248

247:                                              ; preds = %231
  store i32 1, i32* %29, align 4
  br label %248

248:                                              ; preds = %247, %231
  %249 = bitcast float* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %249) #10
  br label %255

250:                                              ; preds = %226
  %251 = load i32, i32* %28, align 4
  %252 = icmp sgt i32 %251, 1
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  store i32 1, i32* %29, align 4
  br label %254

254:                                              ; preds = %253, %250
  br label %255

255:                                              ; preds = %254, %248
  br label %256

256:                                              ; preds = %255, %191
  %257 = load i32, i32* %29, align 4
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  store i32 1, i32* %24, align 4
  br label %260

260:                                              ; preds = %259, %256
  %261 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %261) #10
  %262 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %262) #10
  %263 = bitcast %28** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %263) #10
  br label %188

264:                                              ; preds = %188
  %265 = load i32, i32* %24, align 4
  %266 = icmp ne i32 %265, 0
  br i1 %266, label %270, label %267

267:                                              ; preds = %264
  %268 = load float, float* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 13), align 4
  %269 = fpext float %268 to double
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @1002, i32 0, i32 0), double %269)
  br label %522

270:                                              ; preds = %264
  br label %271

271:                                              ; preds = %301, %270
  %272 = load i32, i32* %25, align 4
  %273 = icmp sgt i32 %272, 0
  br i1 %273, label %274, label %302

274:                                              ; preds = %271
  %275 = load %24*, %24** %9, align 8
  call void @listRewind(%24* %275, %30* %21)
  br label %276

276:                                              ; preds = %299, %274
  %277 = call %25* @listNext(%30* %21)
  store %25* %277, %25** %22, align 8
  %278 = icmp ne %25* %277, null
  br i1 %278, label %279, label %301

279:                                              ; preds = %276
  %280 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %280) #10
  %281 = load %25*, %25** %22, align 8
  %282 = getelementptr inbounds %25, %25* %281, i32 0, i32 2
  %283 = load i8*, i8** %282, align 8
  %284 = bitcast i8* %283 to %28*
  store %28* %284, %28** %31, align 8
  %285 = load %28*, %28** %31, align 8
  %286 = getelementptr inbounds %28, %28* %285, i32 0, i32 20
  %287 = load i32, i32* %286, align 4
  %288 = icmp sle i32 %287, 0
  br i1 %288, label %289, label %299

289:                                              ; preds = %279
  %290 = load i32, i32* %25, align 4
  %291 = icmp sgt i32 %290, 0
  br i1 %291, label %292, label %299

292:                                              ; preds = %289
  %293 = load %28*, %28** %31, align 8
  %294 = getelementptr inbounds %28, %28* %293, i32 0, i32 20
  %295 = load i32, i32* %294, align 4
  %296 = add nsw i32 %295, -1
  store i32 %296, i32* %294, align 4
  %297 = load i32, i32* %25, align 4
  %298 = add nsw i32 %297, -1
  store i32 %298, i32* %25, align 4
  br label %299

299:                                              ; preds = %292, %289, %279
  %300 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %300) #10
  br label %276

301:                                              ; preds = %276
  br label %271

302:                                              ; preds = %271
  %303 = load %28**, %28*** %8, align 8
  %304 = bitcast %28** %303 to i8*
  %305 = load i32, i32* %19, align 4
  %306 = sext i32 %305 to i64
  call void @qsort(i8* %304, i64 %306, i64 8, i32 (i8*, i8*)* @clusterManagerCompareNodeBalance)
  %307 = load i32, i32* %19, align 4
  %308 = load float, float* %18, align 4
  %309 = fpext float %308 to double
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @1003, i32 0, i32 0), i32 %307, double %309)
  %310 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 50), align 4
  %311 = icmp ne i32 %310, 0
  br i1 %311, label %312, label %339

312:                                              ; preds = %302
  store i32 0, i32* %13, align 4
  br label %313

313:                                              ; preds = %335, %312
  %314 = load i32, i32* %13, align 4
  %315 = load i32, i32* %19, align 4
  %316 = icmp slt i32 %314, %315
  br i1 %316, label %317, label %338

317:                                              ; preds = %313
  %318 = bitcast %28** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %318) #10
  %319 = load %28**, %28*** %8, align 8
  %320 = load i32, i32* %13, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds %28*, %28** %319, i64 %321
  %323 = load %28*, %28** %322, align 8
  store %28* %323, %28** %32, align 8
  %324 = load %28*, %28** %32, align 8
  %325 = getelementptr inbounds %28, %28* %324, i32 0, i32 2
  %326 = load i8*, i8** %325, align 8
  %327 = load %28*, %28** %32, align 8
  %328 = getelementptr inbounds %28, %28* %327, i32 0, i32 3
  %329 = load i32, i32* %328, align 8
  %330 = load %28*, %28** %32, align 8
  %331 = getelementptr inbounds %28, %28* %330, i32 0, i32 20
  %332 = load i32, i32* %331, align 4
  %333 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1004, i32 0, i32 0), i8* %326, i32 %329, i32 %332)
  %334 = bitcast %28** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %334) #10
  br label %335

335:                                              ; preds = %317
  %336 = load i32, i32* %13, align 4
  %337 = add nsw i32 %336, 1
  store i32 %337, i32* %13, align 4
  br label %313

338:                                              ; preds = %313
  br label %339

339:                                              ; preds = %338, %302
  store i32 0, i32* %33, align 4
  %340 = load i32, i32* %19, align 4
  %341 = sub nsw i32 %340, 1
  store i32 %341, i32* %34, align 4
  %342 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %343 = and i32 %342, 32
  store i32 %343, i32* %35, align 4
  br label %344

344:                                              ; preds = %520, %339
  %345 = load i32, i32* %33, align 4
  %346 = load i32, i32* %34, align 4
  %347 = icmp slt i32 %345, %346
  br i1 %347, label %348, label %521

348:                                              ; preds = %344
  %349 = bitcast %28** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %349) #10
  %350 = load %28**, %28*** %8, align 8
  %351 = load i32, i32* %33, align 4
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds %28*, %28** %350, i64 %352
  %354 = load %28*, %28** %353, align 8
  store %28* %354, %28** %36, align 8
  %355 = bitcast %28** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %355) #10
  %356 = load %28**, %28*** %8, align 8
  %357 = load i32, i32* %34, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds %28*, %28** %356, i64 %358
  %360 = load %28*, %28** %359, align 8
  store %28* %360, %28** %37, align 8
  %361 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %361) #10
  %362 = load %28*, %28** %36, align 8
  %363 = getelementptr inbounds %28, %28* %362, i32 0, i32 20
  %364 = load i32, i32* %363, align 4
  %365 = call i32 @abs(i32 %364) #13
  store i32 %365, i32* %38, align 4
  %366 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %366) #10
  %367 = load %28*, %28** %37, align 8
  %368 = getelementptr inbounds %28, %28* %367, i32 0, i32 20
  %369 = load i32, i32* %368, align 4
  %370 = call i32 @abs(i32 %369) #13
  store i32 %370, i32* %39, align 4
  %371 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %371) #10
  %372 = load i32, i32* %38, align 4
  %373 = load i32, i32* %39, align 4
  %374 = icmp slt i32 %372, %373
  br i1 %374, label %375, label %377

375:                                              ; preds = %348
  %376 = load i32, i32* %38, align 4
  br label %379

377:                                              ; preds = %348
  %378 = load i32, i32* %39, align 4
  br label %379

379:                                              ; preds = %377, %375
  %380 = phi i32 [ %376, %375 ], [ %378, %377 ]
  store i32 %380, i32* %40, align 4
  %381 = load i32, i32* %40, align 4
  %382 = icmp sgt i32 %381, 0
  br i1 %382, label %383, label %486

383:                                              ; preds = %379
  %384 = load i32, i32* %40, align 4
  %385 = load %28*, %28** %37, align 8
  %386 = getelementptr inbounds %28, %28* %385, i32 0, i32 2
  %387 = load i8*, i8** %386, align 8
  %388 = load %28*, %28** %37, align 8
  %389 = getelementptr inbounds %28, %28* %388, i32 0, i32 3
  %390 = load i32, i32* %389, align 8
  %391 = load %28*, %28** %36, align 8
  %392 = getelementptr inbounds %28, %28* %391, i32 0, i32 2
  %393 = load i8*, i8** %392, align 8
  %394 = load %28*, %28** %36, align 8
  %395 = getelementptr inbounds %28, %28* %394, i32 0, i32 3
  %396 = load i32, i32* %395, align 8
  %397 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1005, i32 0, i32 0), i32 %384, i8* %387, i32 %390, i8* %393, i32 %396)
  %398 = bitcast %24** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %398) #10
  %399 = call %24* @listCreate()
  store %24* %399, %24** %41, align 8
  %400 = bitcast %24** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %400) #10
  store %24* null, %24** %42, align 8
  %401 = load %24*, %24** %41, align 8
  %402 = load %28*, %28** %37, align 8
  %403 = bitcast %28* %402 to i8*
  %404 = call %24* @listAddNodeTail(%24* %401, i8* %403)
  %405 = load %24*, %24** %41, align 8
  %406 = load i32, i32* %40, align 4
  %407 = call %24* @1475(%24* %405, i32 %406)
  store %24* %407, %24** %42, align 8
  %408 = load %24*, %24** %41, align 8
  call void @listRelease(%24* %408)
  %409 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %409) #10
  %410 = load %24*, %24** %42, align 8
  %411 = getelementptr inbounds %24, %24* %410, i32 0, i32 5
  %412 = load i64, i64* %411, align 8
  %413 = trunc i64 %412 to i32
  store i32 %413, i32* %43, align 4
  %414 = load %24*, %24** %42, align 8
  %415 = icmp ne %24* %414, null
  br i1 %415, label %416, label %420

416:                                              ; preds = %383
  %417 = load i32, i32* %43, align 4
  %418 = load i32, i32* %40, align 4
  %419 = icmp ne i32 %417, %418
  br i1 %419, label %420, label %421

420:                                              ; preds = %416, %383
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @1006, i32 0, i32 0))
  store i32 0, i32* %12, align 4
  br label %474

421:                                              ; preds = %416
  %422 = load i32, i32* %35, align 4
  %423 = icmp ne i32 %422, 0
  br i1 %423, label %424, label %435

424:                                              ; preds = %421
  store i32 0, i32* %13, align 4
  br label %425

425:                                              ; preds = %431, %424
  %426 = load i32, i32* %13, align 4
  %427 = load i32, i32* %43, align 4
  %428 = icmp slt i32 %426, %427
  br i1 %428, label %429, label %434

429:                                              ; preds = %425
  %430 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1007, i32 0, i32 0))
  br label %431

431:                                              ; preds = %429
  %432 = load i32, i32* %13, align 4
  %433 = add nsw i32 %432, 1
  store i32 %433, i32* %13, align 4
  br label %425

434:                                              ; preds = %425
  br label %472

435:                                              ; preds = %421
  %436 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %436) #10
  store i32 68, i32* %44, align 4
  %437 = load %24*, %24** %42, align 8
  call void @listRewind(%24* %437, %30* %21)
  br label %438

438:                                              ; preds = %466, %435
  %439 = call %25* @listNext(%30* %21)
  store %25* %439, %25** %22, align 8
  %440 = icmp ne %25* %439, null
  br i1 %440, label %441, label %467

441:                                              ; preds = %438
  %442 = bitcast %32** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %442) #10
  %443 = load %25*, %25** %22, align 8
  %444 = getelementptr inbounds %25, %25* %443, i32 0, i32 2
  %445 = load i8*, i8** %444, align 8
  %446 = bitcast i8* %445 to %32*
  store %32* %446, %32** %45, align 8
  %447 = load %32*, %32** %45, align 8
  %448 = getelementptr inbounds %32, %32* %447, i32 0, i32 0
  %449 = load %28*, %28** %448, align 8
  %450 = load %28*, %28** %36, align 8
  %451 = load %32*, %32** %45, align 8
  %452 = getelementptr inbounds %32, %32* %451, i32 0, i32 1
  %453 = load i32, i32* %452, align 8
  %454 = load i32, i32* %44, align 4
  %455 = call i32 @1460(%28* %449, %28* %450, i32 %453, i32 %454, i8** null)
  store i32 %455, i32* %12, align 4
  %456 = load i32, i32* %12, align 4
  %457 = icmp ne i32 %456, 0
  br i1 %457, label %459, label %458

458:                                              ; preds = %441
  store i32 20, i32* %11, align 4
  br label %463

459:                                              ; preds = %441
  %460 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1007, i32 0, i32 0))
  %461 = load %1*, %1** @stdout, align 8
  %462 = call i32 @fflush(%1* %461)
  store i32 0, i32* %11, align 4
  br label %463

463:                                              ; preds = %458, %459
  %464 = bitcast %32** %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %464) #10
  %465 = load i32, i32* %11, align 4
  switch i32 %465, label %468 [
    i32 0, label %466
  ]

466:                                              ; preds = %463
  br label %438

467:                                              ; preds = %438
  store i32 0, i32* %11, align 4
  br label %468

468:                                              ; preds = %467, %463
  %469 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %469) #10
  %470 = load i32, i32* %11, align 4
  switch i32 %470, label %480 [
    i32 0, label %471
    i32 20, label %474
  ]

471:                                              ; preds = %468
  br label %472

472:                                              ; preds = %471, %434
  %473 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  br label %474

474:                                              ; preds = %472, %468, %420
  %475 = load %24*, %24** %42, align 8
  call void @1477(%24* %475)
  %476 = load i32, i32* %12, align 4
  %477 = icmp ne i32 %476, 0
  br i1 %477, label %479, label %478

478:                                              ; preds = %474
  store i32 6, i32* %11, align 4
  br label %480

479:                                              ; preds = %474
  store i32 0, i32* %11, align 4
  br label %480

480:                                              ; preds = %478, %479, %468
  %481 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %481) #10
  %482 = bitcast %24** %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %482) #10
  %483 = bitcast %24** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %483) #10
  %484 = load i32, i32* %11, align 4
  switch i32 %484, label %513 [
    i32 0, label %485
  ]

485:                                              ; preds = %480
  br label %486

486:                                              ; preds = %485, %379
  %487 = load i32, i32* %40, align 4
  %488 = load %28*, %28** %36, align 8
  %489 = getelementptr inbounds %28, %28* %488, i32 0, i32 20
  %490 = load i32, i32* %489, align 4
  %491 = add nsw i32 %490, %487
  store i32 %491, i32* %489, align 4
  %492 = load i32, i32* %40, align 4
  %493 = load %28*, %28** %37, align 8
  %494 = getelementptr inbounds %28, %28* %493, i32 0, i32 20
  %495 = load i32, i32* %494, align 4
  %496 = sub nsw i32 %495, %492
  store i32 %496, i32* %494, align 4
  %497 = load %28*, %28** %36, align 8
  %498 = getelementptr inbounds %28, %28* %497, i32 0, i32 20
  %499 = load i32, i32* %498, align 4
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %504

501:                                              ; preds = %486
  %502 = load i32, i32* %33, align 4
  %503 = add nsw i32 %502, 1
  store i32 %503, i32* %33, align 4
  br label %504

504:                                              ; preds = %501, %486
  %505 = load %28*, %28** %37, align 8
  %506 = getelementptr inbounds %28, %28* %505, i32 0, i32 20
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %512

509:                                              ; preds = %504
  %510 = load i32, i32* %34, align 4
  %511 = add nsw i32 %510, -1
  store i32 %511, i32* %34, align 4
  br label %512

512:                                              ; preds = %509, %504
  store i32 0, i32* %11, align 4
  br label %513

513:                                              ; preds = %512, %480
  %514 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %514) #10
  %515 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %515) #10
  %516 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %516) #10
  %517 = bitcast %28** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %517) #10
  %518 = bitcast %28** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %518) #10
  %519 = load i32, i32* %11, align 4
  switch i32 %519, label %538 [
    i32 0, label %520
    i32 6, label %522
  ]

520:                                              ; preds = %513
  br label %344

521:                                              ; preds = %344
  br label %522

522:                                              ; preds = %521, %513, %105, %267, %184, %174
  %523 = load %24*, %24** %9, align 8
  %524 = icmp ne %24* %523, null
  br i1 %524, label %525, label %527

525:                                              ; preds = %522
  %526 = load %24*, %24** %9, align 8
  call void @listRelease(%24* %526)
  br label %527

527:                                              ; preds = %525, %522
  %528 = load %28**, %28*** %8, align 8
  %529 = icmp ne %28** %528, null
  br i1 %529, label %530, label %533

530:                                              ; preds = %527
  %531 = load %28**, %28*** %8, align 8
  %532 = bitcast %28** %531 to i8*
  call void @zfree(i8* %532)
  br label %533

533:                                              ; preds = %530, %527
  %534 = load i32, i32* %12, align 4
  store i32 %534, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %538

535:                                              ; preds = %54
  %536 = load %1*, %1** @stderr, align 8
  %537 = call i32 (%1*, i8*, ...) @fprintf(%1* %536, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %11, align 4
  br label %538

538:                                              ; preds = %535, %533, %513, %105, %62
  %539 = bitcast %24** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %539) #10
  %540 = bitcast %28*** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %540) #10
  %541 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %541) #10
  %542 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %542) #10
  %543 = load i32, i32* %3, align 4
  ret i32 %543

544:                                              ; preds = %162
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1378(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %31*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %28*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %28*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca %28*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca %28*, align 8
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %20 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #10
  store i32 1, i32* %6, align 4
  %21 = bitcast %31** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  store %31* null, %31** %7, align 8
  %22 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  store i8* null, i8** %8, align 8
  %23 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #10
  store i8* null, i8** %9, align 8
  %24 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #10
  store i32 0, i32* %10, align 4
  %25 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #10
  store i32 0, i32* %11, align 4
  %26 = load i32, i32* %4, align 4
  %27 = sub nsw i32 %26, 1
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 1
  %30 = call i32 @1471(i32 %27, i8** %29, i8** %8, i32* %10)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %2
  br label %215

33:                                               ; preds = %2
  %34 = load i8**, i8*** %5, align 8
  %35 = call i32 @1471(i32 1, i8** %34, i8** %9, i32* %11)
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  br label %215

38:                                               ; preds = %33
  %39 = load i8*, i8** %9, align 8
  %40 = load i32, i32* %11, align 4
  %41 = load i8*, i8** %8, align 8
  %42 = load i32, i32* %10, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @957, i32 0, i32 0), i8* %39, i32 %40, i8* %41, i32 %42)
  %43 = load i8*, i8** %8, align 8
  %44 = load i32, i32* %10, align 4
  %45 = call %28* @1404(i8* %43, i32 %44)
  store %28* %45, %28** %12, align 8
  %46 = load %28*, %28** %12, align 8
  %47 = call i32 @1422(%28* %46, i32 0)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %38
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %218

50:                                               ; preds = %38
  %51 = call i32 @1423(i32 0)
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %218

54:                                               ; preds = %50
  store %28* null, %28** %14, align 8
  %55 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %56 = and i32 %55, 2
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %91

58:                                               ; preds = %54
  %59 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #10
  %60 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 9), align 8
  store i8* %60, i8** %15, align 8
  %61 = load i8*, i8** %15, align 8
  %62 = icmp ne i8* %61, null
  br i1 %62, label %63, label %71

63:                                               ; preds = %58
  %64 = load i8*, i8** %15, align 8
  %65 = call %28* @1446(i8* %64)
  store %28* %65, %28** %14, align 8
  %66 = load %28*, %28** %14, align 8
  %67 = icmp eq %28* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = load i8*, i8** %15, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @958, i32 0, i32 0), i8* %69)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %87

70:                                               ; preds = %63
  br label %86

71:                                               ; preds = %58
  %72 = call %28* @1472()
  store %28* %72, %28** %14, align 8
  %73 = load %28*, %28** %14, align 8
  %74 = icmp ne %28* %73, null
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  br label %78

76:                                               ; preds = %71
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @959, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 5646, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @960, i32 0, i32 0)) #14
  unreachable

77:                                               ; No predecessors!
  br label %78

78:                                               ; preds = %77, %75
  %79 = load %28*, %28** %14, align 8
  %80 = getelementptr inbounds %28, %28* %79, i32 0, i32 2
  %81 = load i8*, i8** %80, align 8
  %82 = load %28*, %28** %14, align 8
  %83 = getelementptr inbounds %28, %28* %82, i32 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @961, i32 0, i32 0), i8* %81, i32 %84)
  br label %86

86:                                               ; preds = %78, %70
  store i32 0, i32* %13, align 4
  br label %87

87:                                               ; preds = %86, %68
  %88 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #10
  %89 = load i32, i32* %13, align 4
  switch i32 %89, label %218 [
    i32 0, label %90
  ]

90:                                               ; preds = %87
  br label %91

91:                                               ; preds = %90, %54
  %92 = load i8*, i8** %9, align 8
  %93 = load i32, i32* %11, align 4
  %94 = call %28* @1404(i8* %92, i32 %93)
  store %28* %94, %28** %16, align 8
  store i32 0, i32* %17, align 4
  %95 = load %28*, %28** %16, align 8
  %96 = call i32 @1405(%28* %95)
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %91
  %99 = load i8*, i8** %9, align 8
  %100 = load i32, i32* %11, align 4
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @962, i32 0, i32 0), i8* %99, i32 %100)
  store i32 0, i32* %6, align 4
  br label %199

101:                                              ; preds = %91
  store i8* null, i8** %18, align 8
  %102 = load %28*, %28** %16, align 8
  %103 = call i32 @1407(%28* %102, i8** %18)
  store i32 %103, i32* %6, align 4
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %113, label %105

105:                                              ; preds = %101
  %106 = load %28*, %28** %16, align 8
  %107 = load i8*, i8** %18, align 8
  call void @1408(%28* %106, i8* %107)
  %108 = load i8*, i8** %18, align 8
  %109 = icmp ne i8* %108, null
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = load i8*, i8** %18, align 8
  call void @zfree(i8* %111)
  br label %112

112:                                              ; preds = %110, %105
  br label %199

113:                                              ; preds = %101
  %114 = load %28*, %28** %16, align 8
  %115 = call i32 @1409(%28* %114, i32 0, i8** %18)
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %130, label %117

117:                                              ; preds = %113
  %118 = load i8*, i8** %18, align 8
  %119 = icmp ne i8* %118, null
  br i1 %119, label %120, label %129

120:                                              ; preds = %117
  %121 = load %28*, %28** %16, align 8
  %122 = getelementptr inbounds %28, %28* %121, i32 0, i32 2
  %123 = load i8*, i8** %122, align 8
  %124 = load %28*, %28** %16, align 8
  %125 = getelementptr inbounds %28, %28* %124, i32 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = load i8*, i8** %18, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %123, i32 %126, i8* %127)
  %128 = load i8*, i8** %18, align 8
  call void @zfree(i8* %128)
  br label %129

129:                                              ; preds = %120, %117
  store i32 0, i32* %6, align 4
  br label %199

130:                                              ; preds = %113
  %131 = load %28*, %28** %16, align 8
  %132 = call i32 @1411(%28* %131, i8** %18)
  store i32 %132, i32* %6, align 4
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %130
  %135 = load %28*, %28** %16, align 8
  %136 = load i8*, i8** %18, align 8
  call void @1412(%28* %135, i8* %136)
  %137 = load i8*, i8** %18, align 8
  %138 = icmp ne i8* %137, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  %140 = load i8*, i8** %18, align 8
  call void @zfree(i8* %140)
  br label %141

141:                                              ; preds = %139, %134
  br label %199

142:                                              ; preds = %130
  %143 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %144 = getelementptr inbounds %24, %24* %143, i32 0, i32 0
  %145 = load %25*, %25** %144, align 8
  %146 = getelementptr inbounds %25, %25* %145, i32 0, i32 2
  %147 = load i8*, i8** %146, align 8
  %148 = bitcast i8* %147 to %28*
  store %28* %148, %28** %19, align 8
  %149 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %150 = load %28*, %28** %16, align 8
  %151 = bitcast %28* %150 to i8*
  %152 = call %24* @listAddNodeTail(%24* %149, i8* %151)
  store i32 1, i32* %17, align 4
  %153 = load i8*, i8** %9, align 8
  %154 = load i32, i32* %11, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @963, i32 0, i32 0), i8* %153, i32 %154)
  %155 = load %28*, %28** %16, align 8
  %156 = getelementptr inbounds %28, %28* %155, i32 0, i32 0
  %157 = load %10*, %10** %156, align 8
  %158 = load %28*, %28** %19, align 8
  %159 = getelementptr inbounds %28, %28* %158, i32 0, i32 2
  %160 = load i8*, i8** %159, align 8
  %161 = load %28*, %28** %19, align 8
  %162 = getelementptr inbounds %28, %28* %161, i32 0, i32 3
  %163 = load i32, i32* %162, align 8
  %164 = call i8* (%10*, i8*, ...) @redisCommand(%10* %157, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @964, i32 0, i32 0), i8* %160, i32 %163)
  %165 = bitcast i8* %164 to %31*
  store %31* %165, %31** %7, align 8
  %166 = load %28*, %28** %16, align 8
  %167 = load %31*, %31** %7, align 8
  %168 = call i32 @1426(%28* %166, %31* %167, i8** null)
  store i32 %168, i32* %6, align 4
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %171, label %170

170:                                              ; preds = %142
  br label %199

171:                                              ; preds = %142
  %172 = load %28*, %28** %14, align 8
  %173 = icmp ne %28* %172, null
  br i1 %173, label %174, label %198

174:                                              ; preds = %171
  %175 = call i32 @sleep(i32 1)
  call void @1421()
  %176 = load %28*, %28** %14, align 8
  %177 = getelementptr inbounds %28, %28* %176, i32 0, i32 2
  %178 = load i8*, i8** %177, align 8
  %179 = load %28*, %28** %14, align 8
  %180 = getelementptr inbounds %28, %28* %179, i32 0, i32 3
  %181 = load i32, i32* %180, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @965, i32 0, i32 0), i8* %178, i32 %181)
  %182 = load %31*, %31** %7, align 8
  %183 = bitcast %31* %182 to i8*
  call void @freeReplyObject(i8* %183)
  %184 = load %28*, %28** %16, align 8
  %185 = getelementptr inbounds %28, %28* %184, i32 0, i32 0
  %186 = load %10*, %10** %185, align 8
  %187 = load %28*, %28** %14, align 8
  %188 = getelementptr inbounds %28, %28* %187, i32 0, i32 1
  %189 = load i8*, i8** %188, align 8
  %190 = call i8* (%10*, i8*, ...) @redisCommand(%10* %186, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @843, i32 0, i32 0), i8* %189)
  %191 = bitcast i8* %190 to %31*
  store %31* %191, %31** %7, align 8
  %192 = load %28*, %28** %16, align 8
  %193 = load %31*, %31** %7, align 8
  %194 = call i32 @1426(%28* %192, %31* %193, i8** null)
  store i32 %194, i32* %6, align 4
  %195 = icmp ne i32 %194, 0
  br i1 %195, label %197, label %196

196:                                              ; preds = %174
  br label %199

197:                                              ; preds = %174
  br label %198

198:                                              ; preds = %197, %171
  call void (i32, i8*, ...) @1410(i32 4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @966, i32 0, i32 0))
  br label %199

199:                                              ; preds = %198, %196, %170, %141, %129, %112, %98
  %200 = load i32, i32* %17, align 4
  %201 = icmp ne i32 %200, 0
  br i1 %201, label %207, label %202

202:                                              ; preds = %199
  %203 = load %28*, %28** %16, align 8
  %204 = icmp ne %28* %203, null
  br i1 %204, label %205, label %207

205:                                              ; preds = %202
  %206 = load %28*, %28** %16, align 8
  call void @1406(%28* %206)
  br label %207

207:                                              ; preds = %205, %202, %199
  %208 = load %31*, %31** %7, align 8
  %209 = icmp ne %31* %208, null
  br i1 %209, label %210, label %213

210:                                              ; preds = %207
  %211 = load %31*, %31** %7, align 8
  %212 = bitcast %31* %211 to i8*
  call void @freeReplyObject(i8* %212)
  br label %213

213:                                              ; preds = %210, %207
  %214 = load i32, i32* %6, align 4
  store i32 %214, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %218

215:                                              ; preds = %37, %32
  %216 = load %1*, %1** @stderr, align 8
  %217 = call i32 (%1*, i8*, ...) @fprintf(%1* %216, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %218

218:                                              ; preds = %215, %213, %87, %53, %49
  %219 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %219) #10
  %220 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %220) #10
  %221 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #10
  %222 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #10
  %223 = bitcast %31** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #10
  %224 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %224) #10
  %225 = load i32, i32* %3, align 4
  ret i32 %225
}

; Function Attrs: nounwind uwtable
define internal i32 @1379(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %28*, align 8
  %11 = alloca %28*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %30, align 8
  %14 = alloca %25*, align 8
  %15 = alloca %28*, align 8
  %16 = alloca %28*, align 8
  %17 = alloca %31*, align 8
  %18 = alloca %31*, align 8
  %19 = alloca %31*, align 8
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %20 = load i32, i32* %4, align 4
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #10
  store i32 1, i32* %6, align 4
  %22 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #10
  store i32 0, i32* %7, align 4
  %23 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #10
  store i8* null, i8** %8, align 8
  %24 = load i8**, i8*** %5, align 8
  %25 = call i32 @1471(i32 1, i8** %24, i8** %8, i32* %7)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %2
  br label %179

28:                                               ; preds = %2
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 1
  %31 = load i8*, i8** %30, align 8
  store i8* %31, i8** %9, align 8
  %32 = load i8*, i8** %9, align 8
  %33 = load i8*, i8** %8, align 8
  %34 = load i32, i32* %7, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @968, i32 0, i32 0), i8* %32, i8* %33, i32 %34)
  %35 = load i8*, i8** %8, align 8
  %36 = load i32, i32* %7, align 4
  %37 = call %28* @1404(i8* %35, i32 %36)
  store %28* %37, %28** %10, align 8
  store %28* null, %28** %11, align 8
  %38 = load %28*, %28** %10, align 8
  %39 = call i32 @1422(%28* %38, i32 0)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %28
  store i32 0, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %182

42:                                               ; preds = %28
  %43 = load i8*, i8** %9, align 8
  %44 = call %28* @1446(i8* %43)
  store %28* %44, %28** %11, align 8
  %45 = load %28*, %28** %11, align 8
  %46 = icmp eq %28* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = load i8*, i8** %9, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @969, i32 0, i32 0), i8* %48)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %182

49:                                               ; preds = %42
  %50 = load %28*, %28** %11, align 8
  %51 = getelementptr inbounds %28, %28* %50, i32 0, i32 12
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %49
  %55 = load %28*, %28** %11, align 8
  %56 = getelementptr inbounds %28, %28* %55, i32 0, i32 2
  %57 = load i8*, i8** %56, align 8
  %58 = load %28*, %28** %11, align 8
  %59 = getelementptr inbounds %28, %28* %58, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @970, i32 0, i32 0), i8* %57, i32 %60)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %182

61:                                               ; preds = %49
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @971, i32 0, i32 0))
  %62 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %62, %30* %13)
  br label %63

63:                                               ; preds = %162, %159, %61
  %64 = call %25* @listNext(%30* %13)
  store %25* %64, %25** %14, align 8
  %65 = icmp ne %25* %64, null
  br i1 %65, label %66, label %163

66:                                               ; preds = %63
  %67 = bitcast %28** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %67) #10
  %68 = load %25*, %25** %14, align 8
  %69 = getelementptr inbounds %25, %25* %68, i32 0, i32 2
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast i8* %70 to %28*
  store %28* %71, %28** %15, align 8
  %72 = load %28*, %28** %15, align 8
  %73 = load %28*, %28** %11, align 8
  %74 = icmp eq %28* %72, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %66
  store i32 3, i32* %12, align 4
  br label %159

76:                                               ; preds = %66
  %77 = load %28*, %28** %15, align 8
  %78 = getelementptr inbounds %28, %28* %77, i32 0, i32 9
  %79 = load i8*, i8** %78, align 8
  %80 = icmp ne i8* %79, null
  br i1 %80, label %81, label %136

81:                                               ; preds = %76
  %82 = load %28*, %28** %15, align 8
  %83 = getelementptr inbounds %28, %28* %82, i32 0, i32 9
  %84 = load i8*, i8** %83, align 8
  %85 = load i8*, i8** %9, align 8
  %86 = call i32 @strcasecmp(i8* %84, i8* %85) #12
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %136, label %88

88:                                               ; preds = %81
  %89 = bitcast %28** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89) #10
  %90 = call %28* @1472()
  store %28* %90, %28** %16, align 8
  %91 = load %28*, %28** %16, align 8
  %92 = icmp ne %28* %91, null
  br i1 %92, label %93, label %94

93:                                               ; preds = %88
  br label %96

94:                                               ; preds = %88
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @972, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 5753, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @973, i32 0, i32 0)) #14
  unreachable

95:                                               ; No predecessors!
  br label %96

96:                                               ; preds = %95, %93
  %97 = load %28*, %28** %15, align 8
  %98 = getelementptr inbounds %28, %28* %97, i32 0, i32 2
  %99 = load i8*, i8** %98, align 8
  %100 = load %28*, %28** %15, align 8
  %101 = getelementptr inbounds %28, %28* %100, i32 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = load %28*, %28** %16, align 8
  %104 = getelementptr inbounds %28, %28* %103, i32 0, i32 2
  %105 = load i8*, i8** %104, align 8
  %106 = load %28*, %28** %16, align 8
  %107 = getelementptr inbounds %28, %28* %106, i32 0, i32 3
  %108 = load i32, i32* %107, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @974, i32 0, i32 0), i8* %99, i32 %102, i8* %105, i32 %108)
  %109 = bitcast %31** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #10
  %110 = load %28*, %28** %15, align 8
  %111 = getelementptr inbounds %28, %28* %110, i32 0, i32 0
  %112 = load %10*, %10** %111, align 8
  %113 = load %28*, %28** %16, align 8
  %114 = getelementptr inbounds %28, %28* %113, i32 0, i32 1
  %115 = load i8*, i8** %114, align 8
  %116 = call i8* (%10*, i8*, ...) @redisCommand(%10* %112, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @843, i32 0, i32 0), i8* %115)
  %117 = bitcast i8* %116 to %31*
  store %31* %117, %31** %17, align 8
  %118 = load %28*, %28** %15, align 8
  %119 = load %31*, %31** %17, align 8
  %120 = call i32 @1426(%28* %118, %31* %119, i8** null)
  store i32 %120, i32* %6, align 4
  %121 = load %31*, %31** %17, align 8
  %122 = icmp ne %31* %121, null
  br i1 %122, label %123, label %126

123:                                              ; preds = %96
  %124 = load %31*, %31** %17, align 8
  %125 = bitcast %31* %124 to i8*
  call void @freeReplyObject(i8* %125)
  br label %126

126:                                              ; preds = %123, %96
  %127 = load i32, i32* %6, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %130, label %129

129:                                              ; preds = %126
  store i32 0, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %131

130:                                              ; preds = %126
  store i32 0, i32* %12, align 4
  br label %131

131:                                              ; preds = %130, %129
  %132 = bitcast %31** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #10
  %133 = bitcast %28** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #10
  %134 = load i32, i32* %12, align 4
  switch i32 %134, label %159 [
    i32 0, label %135
  ]

135:                                              ; preds = %131
  br label %136

136:                                              ; preds = %135, %81, %76
  %137 = bitcast %31** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %137) #10
  %138 = load %28*, %28** %15, align 8
  %139 = getelementptr inbounds %28, %28* %138, i32 0, i32 0
  %140 = load %10*, %10** %139, align 8
  %141 = load i8*, i8** %9, align 8
  %142 = call i8* (%10*, i8*, ...) @redisCommand(%10* %140, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @975, i32 0, i32 0), i8* %141)
  %143 = bitcast i8* %142 to %31*
  store %31* %143, %31** %18, align 8
  %144 = load %28*, %28** %15, align 8
  %145 = load %31*, %31** %18, align 8
  %146 = call i32 @1426(%28* %144, %31* %145, i8** null)
  store i32 %146, i32* %6, align 4
  %147 = load %31*, %31** %18, align 8
  %148 = icmp ne %31* %147, null
  br i1 %148, label %149, label %152

149:                                              ; preds = %136
  %150 = load %31*, %31** %18, align 8
  %151 = bitcast %31* %150 to i8*
  call void @freeReplyObject(i8* %151)
  br label %152

152:                                              ; preds = %149, %136
  %153 = load i32, i32* %6, align 4
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %156, label %155

155:                                              ; preds = %152
  store i32 0, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %157

156:                                              ; preds = %152
  store i32 0, i32* %12, align 4
  br label %157

157:                                              ; preds = %156, %155
  %158 = bitcast %31** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %158) #10
  br label %159

159:                                              ; preds = %157, %131, %75
  %160 = bitcast %28** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %160) #10
  %161 = load i32, i32* %12, align 4
  switch i32 %161, label %182 [
    i32 0, label %162
    i32 3, label %63
  ]

162:                                              ; preds = %159
  br label %63

163:                                              ; preds = %63
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @976, i32 0, i32 0))
  %164 = load %28*, %28** %11, align 8
  %165 = getelementptr inbounds %28, %28* %164, i32 0, i32 0
  %166 = load %10*, %10** %165, align 8
  %167 = call i8* (%10*, i8*, ...) @redisCommand(%10* %166, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @977, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @978, i32 0, i32 0))
  %168 = bitcast i8* %167 to %31*
  store %31* %168, %31** %19, align 8
  %169 = load %28*, %28** %11, align 8
  %170 = load %31*, %31** %19, align 8
  %171 = call i32 @1426(%28* %169, %31* %170, i8** null)
  store i32 %171, i32* %6, align 4
  %172 = load %31*, %31** %19, align 8
  %173 = icmp ne %31* %172, null
  br i1 %173, label %174, label %177

174:                                              ; preds = %163
  %175 = load %31*, %31** %19, align 8
  %176 = bitcast %31* %175 to i8*
  call void @freeReplyObject(i8* %176)
  br label %177

177:                                              ; preds = %174, %163
  %178 = load i32, i32* %6, align 4
  store i32 %178, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %182

179:                                              ; preds = %27
  %180 = load %1*, %1** @stderr, align 8
  %181 = call i32 (%1*, i8*, ...) @fprintf(%1* %180, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %182

182:                                              ; preds = %179, %177, %159, %54, %47, %41
  %183 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %183) #10
  %184 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %184) #10
  %185 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %185) #10
  %186 = load i32, i32* %3, align 4
  ret i32 %186
}

; Function Attrs: nounwind uwtable
define internal i32 @1380(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %28*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64*, align 8
  %12 = alloca %30, align 8
  %13 = alloca %25*, align 8
  %14 = alloca %28*, align 8
  %15 = alloca %31*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %18 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #10
  store i32 0, i32* %6, align 4
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #10
  %20 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #10
  store i8* null, i8** %8, align 8
  %21 = load i8**, i8*** %5, align 8
  %22 = call i32 @1471(i32 1, i8** %21, i8** %8, i32* %6)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %2
  br label %146

25:                                               ; preds = %2
  %26 = load i8*, i8** %8, align 8
  %27 = load i32, i32* %6, align 4
  %28 = call %28* @1404(i8* %26, i32 %27)
  store %28* %28, %28** %9, align 8
  %29 = load %28*, %28** %9, align 8
  %30 = call i32 @1422(%28* %29, i32 0)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %25
  store i32 0, i32* %3, align 4
  store i32 1, i32* %10, align 4
  br label %149

33:                                               ; preds = %25
  %34 = load i32, i32* %4, align 4
  %35 = add nsw i32 %34, -1
  store i32 %35, i32* %4, align 4
  %36 = load i8**, i8*** %5, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i32 1
  store i8** %37, i8*** %5, align 8
  %38 = load i32, i32* %4, align 4
  %39 = sext i32 %38 to i64
  %40 = mul i64 %39, 8
  %41 = call i8* @zmalloc(i64 %40)
  %42 = bitcast i8* %41 to i64*
  store i64* %42, i64** %11, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1040, i32 0, i32 0))
  store i32 0, i32* %7, align 4
  br label %43

43:                                               ; preds = %64, %33
  %44 = load i32, i32* %7, align 4
  %45 = load i32, i32* %4, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %67

47:                                               ; preds = %43
  %48 = load i8**, i8*** %5, align 8
  %49 = load i32, i32* %7, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8*, i8** %48, i64 %50
  %52 = load i8*, i8** %51, align 8
  %53 = call i64 @strlen(i8* %52) #12
  %54 = load i64*, i64** %11, align 8
  %55 = load i32, i32* %7, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i64, i64* %54, i64 %56
  store i64 %53, i64* %57, align 8
  %58 = load i8**, i8*** %5, align 8
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8*, i8** %58, i64 %60
  %62 = load i8*, i8** %61, align 8
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1024, i32 0, i32 0), i8* %62)
  br label %64

64:                                               ; preds = %47
  %65 = load i32, i32* %7, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %7, align 4
  br label %43

67:                                               ; preds = %43
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  %69 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %69, %30* %12)
  br label %70

70:                                               ; preds = %142, %139, %67
  %71 = call %25* @listNext(%30* %12)
  store %25* %71, %25** %13, align 8
  %72 = icmp ne %25* %71, null
  br i1 %72, label %73, label %143

73:                                               ; preds = %70
  %74 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #10
  %75 = load %25*, %25** %13, align 8
  %76 = getelementptr inbounds %25, %25* %75, i32 0, i32 2
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast i8* %77 to %28*
  store %28* %78, %28** %14, align 8
  %79 = load %28*, %28** %14, align 8
  %80 = getelementptr inbounds %28, %28* %79, i32 0, i32 0
  %81 = load %10*, %10** %80, align 8
  %82 = icmp ne %10* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %73
  %84 = load %28*, %28** %14, align 8
  %85 = call i32 @1405(%28* %84)
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  store i32 6, i32* %10, align 4
  br label %139

88:                                               ; preds = %83, %73
  %89 = bitcast %31** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89) #10
  store %31* null, %31** %15, align 8
  %90 = load %28*, %28** %14, align 8
  %91 = getelementptr inbounds %28, %28* %90, i32 0, i32 0
  %92 = load %10*, %10** %91, align 8
  %93 = load i32, i32* %4, align 4
  %94 = load i8**, i8*** %5, align 8
  %95 = load i64*, i64** %11, align 8
  %96 = call i32 @redisAppendCommandArgv(%10* %92, i32 %93, i8** %94, i64* %95)
  %97 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %97) #10
  %98 = load %28*, %28** %14, align 8
  %99 = getelementptr inbounds %28, %28* %98, i32 0, i32 0
  %100 = load %10*, %10** %99, align 8
  %101 = bitcast %31** %15 to i8**
  %102 = call i32 @redisGetReply(%10* %100, i8** %101)
  store i32 %102, i32* %16, align 4
  %103 = load i32, i32* %16, align 4
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %88
  %106 = load %31*, %31** %15, align 8
  %107 = icmp eq %31* %106, null
  br i1 %107, label %108, label %116

108:                                              ; preds = %105, %88
  %109 = load %28*, %28** %14, align 8
  %110 = getelementptr inbounds %28, %28* %109, i32 0, i32 2
  %111 = load i8*, i8** %110, align 8
  %112 = load %28*, %28** %14, align 8
  %113 = getelementptr inbounds %28, %28* %112, i32 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1041, i32 0, i32 0), i8* %111, i32 %114)
  br label %130

116:                                              ; preds = %105
  %117 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %117) #10
  %118 = load %31*, %31** %15, align 8
  %119 = call i8* @1481(%31* %118)
  store i8* %119, i8** %17, align 8
  %120 = load %28*, %28** %14, align 8
  %121 = getelementptr inbounds %28, %28* %120, i32 0, i32 2
  %122 = load i8*, i8** %121, align 8
  %123 = load %28*, %28** %14, align 8
  %124 = getelementptr inbounds %28, %28* %123, i32 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = load i8*, i8** %17, align 8
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @790, i32 0, i32 0), i8* %122, i32 %125, i8* %126)
  %128 = load i8*, i8** %17, align 8
  call void @sdsfree(i8* %128)
  %129 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %129) #10
  br label %130

130:                                              ; preds = %116, %108
  %131 = load %31*, %31** %15, align 8
  %132 = icmp ne %31* %131, null
  br i1 %132, label %133, label %136

133:                                              ; preds = %130
  %134 = load %31*, %31** %15, align 8
  %135 = bitcast %31* %134 to i8*
  call void @freeReplyObject(i8* %135)
  br label %136

136:                                              ; preds = %133, %130
  %137 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %137) #10
  %138 = bitcast %31** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #10
  store i32 0, i32* %10, align 4
  br label %139

139:                                              ; preds = %136, %87
  %140 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %140) #10
  %141 = load i32, i32* %10, align 4
  switch i32 %141, label %154 [
    i32 0, label %142
    i32 6, label %70
  ]

142:                                              ; preds = %139
  br label %70

143:                                              ; preds = %70
  %144 = load i64*, i64** %11, align 8
  %145 = bitcast i64* %144 to i8*
  call void @zfree(i8* %145)
  store i32 1, i32* %3, align 4
  store i32 1, i32* %10, align 4
  br label %149

146:                                              ; preds = %24
  %147 = load %1*, %1** @stderr, align 8
  %148 = call i32 (%1*, i8*, ...) @fprintf(%1* %147, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %10, align 4
  br label %149

149:                                              ; preds = %146, %143, %32
  %150 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #10
  %151 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %151) #10
  %152 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %152) #10
  %153 = load i32, i32* %3, align 4
  ret i32 %153

154:                                              ; preds = %139
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1381(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %28*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %30, align 8
  %14 = alloca %25*, align 8
  %15 = alloca %28*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca %31*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %20 = load i32, i32* %4, align 4
  %21 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #10
  store i32 0, i32* %6, align 4
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  store i8* null, i8** %7, align 8
  %23 = load i8**, i8*** %5, align 8
  %24 = call i32 @1471(i32 1, i8** %23, i8** %7, i32* %6)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %2
  br label %132

27:                                               ; preds = %2
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 1
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 @atoi(i8* %30) #12
  store i32 %31, i32* %8, align 4
  %32 = load i32, i32* %8, align 4
  %33 = icmp slt i32 %32, 100
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = load %1*, %1** @stderr, align 8
  %36 = call i32 (%1*, i8*, ...) @fprintf(%1* %35, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @1008, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %135

37:                                               ; preds = %27
  %38 = load i8*, i8** %7, align 8
  %39 = load i32, i32* %6, align 4
  %40 = call %28* @1404(i8* %38, i32 %39)
  store %28* %40, %28** %10, align 8
  %41 = load %28*, %28** %10, align 8
  %42 = call i32 @1422(%28* %41, i32 0)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %37
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %135

45:                                               ; preds = %37
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @1009, i32 0, i32 0))
  %46 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %46, %30* %13)
  br label %47

47:                                               ; preds = %128, %123, %45
  %48 = call %25* @listNext(%30* %13)
  store %25* %48, %25** %14, align 8
  %49 = icmp ne %25* %48, null
  br i1 %49, label %50, label %129

50:                                               ; preds = %47
  %51 = bitcast %28** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #10
  %52 = load %25*, %25** %14, align 8
  %53 = getelementptr inbounds %25, %25* %52, i32 0, i32 2
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast i8* %54 to %28*
  store %28* %55, %28** %15, align 8
  %56 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #10
  store i8* null, i8** %16, align 8
  %57 = bitcast %31** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #10
  %58 = load %28*, %28** %15, align 8
  %59 = getelementptr inbounds %28, %28* %58, i32 0, i32 0
  %60 = load %10*, %10** %59, align 8
  %61 = load i32, i32* %8, align 4
  %62 = call i8* (%10*, i8*, ...) @redisCommand(%10* %60, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1010, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @488, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1011, i32 0, i32 0), i32 %61)
  %63 = bitcast i8* %62 to %31*
  store %31* %63, %31** %17, align 8
  %64 = load %31*, %31** %17, align 8
  %65 = icmp eq %31* %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %50
  br label %103

67:                                               ; preds = %50
  %68 = load %28*, %28** %15, align 8
  %69 = load %31*, %31** %17, align 8
  %70 = call i32 @1426(%28* %68, %31* %69, i8** %16)
  store i32 %70, i32* %18, align 4
  %71 = load %31*, %31** %17, align 8
  %72 = bitcast %31* %71 to i8*
  call void @freeReplyObject(i8* %72)
  %73 = load i32, i32* %18, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %67
  br label %103

76:                                               ; preds = %67
  %77 = load %28*, %28** %15, align 8
  %78 = getelementptr inbounds %28, %28* %77, i32 0, i32 0
  %79 = load %10*, %10** %78, align 8
  %80 = call i8* (%10*, i8*, ...) @redisCommand(%10* %79, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1012, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1013, i32 0, i32 0))
  %81 = bitcast i8* %80 to %31*
  store %31* %81, %31** %17, align 8
  %82 = load %31*, %31** %17, align 8
  %83 = icmp eq %31* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %76
  br label %103

85:                                               ; preds = %76
  %86 = load %28*, %28** %15, align 8
  %87 = load %31*, %31** %17, align 8
  %88 = call i32 @1426(%28* %86, %31* %87, i8** %16)
  store i32 %88, i32* %18, align 4
  %89 = load %31*, %31** %17, align 8
  %90 = bitcast %31* %89 to i8*
  call void @freeReplyObject(i8* %90)
  %91 = load i32, i32* %18, align 4
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %85
  br label %103

94:                                               ; preds = %85
  %95 = load %28*, %28** %15, align 8
  %96 = getelementptr inbounds %28, %28* %95, i32 0, i32 2
  %97 = load i8*, i8** %96, align 8
  %98 = load %28*, %28** %15, align 8
  %99 = getelementptr inbounds %28, %28* %98, i32 0, i32 3
  %100 = load i32, i32* %99, align 8
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @1014, i32 0, i32 0), i8* %97, i32 %100)
  %101 = load i32, i32* %11, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %11, align 4
  store i32 3, i32* %9, align 4
  br label %123

103:                                              ; preds = %93, %84, %75, %66
  store i32 0, i32* %19, align 4
  %104 = load i8*, i8** %16, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), i8** %16, align 8
  br label %108

107:                                              ; preds = %103
  store i32 1, i32* %19, align 4
  br label %108

108:                                              ; preds = %107, %106
  %109 = load %28*, %28** %15, align 8
  %110 = getelementptr inbounds %28, %28* %109, i32 0, i32 2
  %111 = load i8*, i8** %110, align 8
  %112 = load %28*, %28** %15, align 8
  %113 = getelementptr inbounds %28, %28* %112, i32 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = load i8*, i8** %16, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @1015, i32 0, i32 0), i8* %111, i32 %114, i8* %115)
  %116 = load i32, i32* %19, align 4
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %108
  %119 = load i8*, i8** %16, align 8
  call void @zfree(i8* %119)
  br label %120

120:                                              ; preds = %118, %108
  %121 = load i32, i32* %12, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %12, align 4
  store i32 0, i32* %9, align 4
  br label %123

123:                                              ; preds = %120, %94
  %124 = bitcast %31** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #10
  %125 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #10
  %126 = bitcast %28** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #10
  %127 = load i32, i32* %9, align 4
  switch i32 %127, label %139 [
    i32 0, label %128
    i32 3, label %47
  ]

128:                                              ; preds = %123
  br label %47

129:                                              ; preds = %47
  %130 = load i32, i32* %11, align 4
  %131 = load i32, i32* %12, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1016, i32 0, i32 0), i32 %130, i32 %131)
  store i32 1, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %135

132:                                              ; preds = %26
  %133 = load %1*, %1** @stderr, align 8
  %134 = call i32 (%1*, i8*, ...) @fprintf(%1* %133, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %9, align 4
  br label %135

135:                                              ; preds = %132, %129, %44, %34
  %136 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #10
  %137 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %137) #10
  %138 = load i32, i32* %3, align 4
  ret i32 %138

139:                                              ; preds = %123
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1382(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca [1 x i8*], align 8
  %13 = alloca %28*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca %31*, align 8
  %17 = alloca %10*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca [16384 x %28*], align 16
  %21 = alloca %30, align 8
  %22 = alloca %25*, align 8
  %23 = alloca %28*, align 8
  %24 = alloca [50 x i8], align 16
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %31*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i16, align 2
  %31 = alloca %28*, align 8
  %32 = alloca %31*, align 8
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %33 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #10
  store i32 1, i32* %6, align 4
  %34 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #10
  store i32 0, i32* %7, align 4
  %35 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #10
  store i32 0, i32* %8, align 4
  %36 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #10
  store i8* null, i8** %9, align 8
  %37 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #10
  store i8* null, i8** %10, align 8
  %38 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #10
  store i8* null, i8** %11, align 8
  %39 = load i32, i32* %4, align 4
  %40 = load i8**, i8*** %5, align 8
  %41 = call i32 @1471(i32 %39, i8** %40, i8** %9, i32* %7)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %2
  store i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0), i8** %11, align 8
  br label %451

44:                                               ; preds = %2
  %45 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 5), align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  store i8* getelementptr inbounds ([68 x i8], [68 x i8]* @1017, i32 0, i32 0), i8** %11, align 8
  br label %451

48:                                               ; preds = %44
  %49 = getelementptr inbounds [1 x i8*], [1 x i8*]* %12, i64 0, i64 0
  %50 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 5), align 8
  store i8* %50, i8** %49, align 8
  %51 = getelementptr inbounds [1 x i8*], [1 x i8*]* %12, i32 0, i32 0
  %52 = call i32 @1471(i32 1, i8** %51, i8** %10, i32* %8)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %48
  store i8* getelementptr inbounds ([91 x i8], [91 x i8]* @1018, i32 0, i32 0), i8** %11, align 8
  br label %451

55:                                               ; preds = %48
  %56 = load i8*, i8** %10, align 8
  %57 = load i32, i32* %8, align 4
  %58 = load i8*, i8** %9, align 8
  %59 = load i32, i32* %7, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @1019, i32 0, i32 0), i8* %56, i32 %57, i8* %58, i32 %59)
  %60 = load i8*, i8** %9, align 8
  %61 = load i32, i32* %7, align 4
  %62 = call %28* @1404(i8* %60, i32 %61)
  store %28* %62, %28** %13, align 8
  %63 = load %28*, %28** %13, align 8
  %64 = call i32 @1422(%28* %63, i32 0)
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %55
  store i32 0, i32* %3, align 4
  store i32 1, i32* %14, align 4
  br label %455

67:                                               ; preds = %55
  %68 = call i32 @1423(i32 0)
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %67
  store i32 0, i32* %3, align 4
  store i32 1, i32* %14, align 4
  br label %455

71:                                               ; preds = %67
  store i8* null, i8** %15, align 8
  store %31* null, %31** %16, align 8
  %72 = load i8*, i8** %10, align 8
  %73 = load i32, i32* %8, align 4
  %74 = call %10* @redisConnect(i8* %72, i32 %73)
  store %10* %74, %10** %17, align 8
  %75 = load %10*, %10** %17, align 8
  %76 = getelementptr inbounds %10, %10* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %87

79:                                               ; preds = %71
  store i32 0, i32* %6, align 4
  %80 = load %1*, %1** @stderr, align 8
  %81 = load i8*, i8** %10, align 8
  %82 = load i32, i32* %8, align 4
  %83 = load %10*, %10** %17, align 8
  %84 = getelementptr inbounds %10, %10* %83, i32 0, i32 2
  %85 = getelementptr inbounds [128 x i8], [128 x i8]* %84, i32 0, i32 0
  %86 = call i32 (%1*, i8*, ...) @fprintf(%1* %80, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1020, i32 0, i32 0), i8* %81, i32 %82, i8* %85)
  br label %431

87:                                               ; preds = %71
  %88 = load %10*, %10** %17, align 8
  %89 = call %31* (%10*, i8*, ...) @1479(%10* %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i32 0, i32 0))
  store %31* %89, %31** %16, align 8
  %90 = load %31*, %31** %16, align 8
  %91 = icmp ne %31* %90, null
  br i1 %91, label %92, label %97

92:                                               ; preds = %87
  %93 = load %31*, %31** %16, align 8
  %94 = getelementptr inbounds %31, %31* %93, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 6
  br i1 %96, label %97, label %110

97:                                               ; preds = %92, %87
  %98 = load %31*, %31** %16, align 8
  %99 = icmp ne %31* %98, null
  br i1 %99, label %100, label %109

100:                                              ; preds = %97
  %101 = load %31*, %31** %16, align 8
  %102 = getelementptr inbounds %31, %31* %101, i32 0, i32 4
  %103 = load i8*, i8** %102, align 8
  %104 = icmp ne i8* %103, null
  br i1 %104, label %105, label %109

105:                                              ; preds = %100
  %106 = load %31*, %31** %16, align 8
  %107 = getelementptr inbounds %31, %31* %106, i32 0, i32 4
  %108 = load i8*, i8** %107, align 8
  store i8* %108, i8** %15, align 8
  br label %109

109:                                              ; preds = %105, %100, %97
  store i32 0, i32* %6, align 4
  br label %431

110:                                              ; preds = %92
  %111 = load %31*, %31** %16, align 8
  %112 = getelementptr inbounds %31, %31* %111, i32 0, i32 4
  %113 = load i8*, i8** %112, align 8
  %114 = call i64 @1429(i8* %113, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @793, i32 0, i32 0))
  %115 = icmp ne i64 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %110
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @1021, i32 0, i32 0))
  store i32 0, i32* %6, align 4
  br label %431

117:                                              ; preds = %110
  %118 = load %31*, %31** %16, align 8
  %119 = bitcast %31* %118 to i8*
  call void @freeReplyObject(i8* %119)
  %120 = load %10*, %10** %17, align 8
  %121 = call %31* (%10*, i8*, ...) @1479(%10* %120, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @178, i32 0, i32 0))
  store %31* %121, %31** %16, align 8
  %122 = load %31*, %31** %16, align 8
  %123 = icmp ne %31* %122, null
  br i1 %123, label %124, label %129

124:                                              ; preds = %117
  %125 = load %31*, %31** %16, align 8
  %126 = getelementptr inbounds %31, %31* %125, i32 0, i32 0
  %127 = load i32, i32* %126, align 8
  %128 = icmp eq i32 %127, 6
  br i1 %128, label %129, label %142

129:                                              ; preds = %124, %117
  %130 = load %31*, %31** %16, align 8
  %131 = icmp ne %31* %130, null
  br i1 %131, label %132, label %141

132:                                              ; preds = %129
  %133 = load %31*, %31** %16, align 8
  %134 = getelementptr inbounds %31, %31* %133, i32 0, i32 4
  %135 = load i8*, i8** %134, align 8
  %136 = icmp ne i8* %135, null
  br i1 %136, label %137, label %141

137:                                              ; preds = %132
  %138 = load %31*, %31** %16, align 8
  %139 = getelementptr inbounds %31, %31* %138, i32 0, i32 4
  %140 = load i8*, i8** %139, align 8
  store i8* %140, i8** %15, align 8
  br label %141

141:                                              ; preds = %137, %132, %129
  store i32 0, i32* %6, align 4
  br label %431

142:                                              ; preds = %124
  %143 = load %31*, %31** %16, align 8
  %144 = getelementptr inbounds %31, %31* %143, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = trunc i64 %145 to i32
  store i32 %146, i32* %18, align 4
  %147 = load i32, i32* %18, align 4
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1022, i32 0, i32 0), i32 %147)
  %148 = getelementptr inbounds [16384 x %28*], [16384 x %28*]* %20, i32 0, i32 0
  %149 = bitcast %28** %148 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %149, i8 0, i64 131072, i1 false)
  store i32 0, i32* %19, align 4
  br label %150

150:                                              ; preds = %195, %142
  %151 = load i32, i32* %19, align 4
  %152 = icmp slt i32 %151, 16384
  br i1 %152, label %153, label %198

153:                                              ; preds = %150
  %154 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %154, %30* %21)
  br label %155

155:                                              ; preds = %193, %190, %153
  %156 = call %25* @listNext(%30* %21)
  store %25* %156, %25** %22, align 8
  %157 = icmp ne %25* %156, null
  br i1 %157, label %158, label %194

158:                                              ; preds = %155
  %159 = bitcast %28** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %159) #10
  %160 = load %25*, %25** %22, align 8
  %161 = getelementptr inbounds %25, %25* %160, i32 0, i32 2
  %162 = load i8*, i8** %161, align 8
  %163 = bitcast i8* %162 to %28*
  store %28* %163, %28** %23, align 8
  %164 = load %28*, %28** %23, align 8
  %165 = getelementptr inbounds %28, %28* %164, i32 0, i32 7
  %166 = load i32, i32* %165, align 8
  %167 = and i32 %166, 2
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %158
  store i32 7, i32* %14, align 4
  br label %190

170:                                              ; preds = %158
  %171 = load %28*, %28** %23, align 8
  %172 = getelementptr inbounds %28, %28* %171, i32 0, i32 12
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %170
  store i32 7, i32* %14, align 4
  br label %190

176:                                              ; preds = %170
  %177 = load %28*, %28** %23, align 8
  %178 = getelementptr inbounds %28, %28* %177, i32 0, i32 11
  %179 = load i32, i32* %19, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [16384 x i8], [16384 x i8]* %178, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = icmp ne i8 %182, 0
  br i1 %183, label %184, label %189

184:                                              ; preds = %176
  %185 = load %28*, %28** %23, align 8
  %186 = load i32, i32* %19, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [16384 x %28*], [16384 x %28*]* %20, i64 0, i64 %187
  store %28* %185, %28** %188, align 8
  store i32 8, i32* %14, align 4
  br label %190

189:                                              ; preds = %176
  store i32 0, i32* %14, align 4
  br label %190

190:                                              ; preds = %189, %184, %175, %169
  %191 = bitcast %28** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %191) #10
  %192 = load i32, i32* %14, align 4
  switch i32 %192, label %463 [
    i32 0, label %193
    i32 7, label %155
    i32 8, label %194
  ]

193:                                              ; preds = %190
  br label %155

194:                                              ; preds = %190, %155
  br label %195

195:                                              ; preds = %194
  %196 = load i32, i32* %19, align 4
  %197 = add nsw i32 %196, 1
  store i32 %197, i32* %19, align 4
  br label %150

198:                                              ; preds = %150
  %199 = bitcast [50 x i8]* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %199, i8* align 16 getelementptr inbounds ([50 x i8], [50 x i8]* @1023, i32 0, i32 0), i64 50, i1 false)
  %200 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %201 = and i32 %200, 128
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %198
  %204 = getelementptr inbounds [50 x i8], [50 x i8]* %24, i32 0, i32 0
  %205 = call i8* @strcat(i8* %204, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1024, i32 0, i32 0)) #10
  br label %206

206:                                              ; preds = %203, %198
  %207 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %208 = and i32 %207, 64
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %206
  %211 = getelementptr inbounds [50 x i8], [50 x i8]* %24, i32 0, i32 0
  %212 = call i8* @strcat(i8* %211, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1024, i32 0, i32 0)) #10
  br label %213

213:                                              ; preds = %210, %206
  store i32 -999, i32* %25, align 4
  %214 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 11), align 4
  store i32 %214, i32* %26, align 4
  br label %215

215:                                              ; preds = %429, %213
  %216 = load i32, i32* %25, align 4
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %218, label %430

218:                                              ; preds = %215
  %219 = load i32, i32* %25, align 4
  %220 = icmp slt i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  store i32 0, i32* %25, align 4
  br label %222

222:                                              ; preds = %221, %218
  %223 = load %31*, %31** %16, align 8
  %224 = bitcast %31* %223 to i8*
  call void @freeReplyObject(i8* %224)
  %225 = load %10*, %10** %17, align 8
  %226 = load i32, i32* %25, align 4
  %227 = call %31* (%10*, i8*, ...) @1479(%10* %225, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @1025, i32 0, i32 0), i32 %226, i32 1000)
  store %31* %227, %31** %16, align 8
  %228 = load %31*, %31** %16, align 8
  %229 = icmp ne %31* %228, null
  br i1 %229, label %230, label %235

230:                                              ; preds = %222
  %231 = load %31*, %31** %16, align 8
  %232 = getelementptr inbounds %31, %31* %231, i32 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp eq i32 %233, 6
  br i1 %234, label %235, label %248

235:                                              ; preds = %230, %222
  %236 = load %31*, %31** %16, align 8
  %237 = icmp ne %31* %236, null
  br i1 %237, label %238, label %247

238:                                              ; preds = %235
  %239 = load %31*, %31** %16, align 8
  %240 = getelementptr inbounds %31, %31* %239, i32 0, i32 4
  %241 = load i8*, i8** %240, align 8
  %242 = icmp ne i8* %241, null
  br i1 %242, label %243, label %247

243:                                              ; preds = %238
  %244 = load %31*, %31** %16, align 8
  %245 = getelementptr inbounds %31, %31* %244, i32 0, i32 4
  %246 = load i8*, i8** %245, align 8
  store i8* %246, i8** %15, align 8
  br label %247

247:                                              ; preds = %243, %238, %235
  store i32 0, i32* %6, align 4
  br label %431

248:                                              ; preds = %230
  %249 = load %31*, %31** %16, align 8
  %250 = getelementptr inbounds %31, %31* %249, i32 0, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = icmp eq i32 %251, 2
  br i1 %252, label %253, label %254

253:                                              ; preds = %248
  br label %256

254:                                              ; preds = %248
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1026, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 6341, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1027, i32 0, i32 0)) #14
  unreachable

255:                                              ; No predecessors!
  br label %256

256:                                              ; preds = %255, %253
  %257 = load %31*, %31** %16, align 8
  %258 = getelementptr inbounds %31, %31* %257, i32 0, i32 6
  %259 = load i64, i64* %258, align 8
  %260 = icmp uge i64 %259, 2
  br i1 %260, label %261, label %262

261:                                              ; preds = %256
  br label %264

262:                                              ; preds = %256
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @1028, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 6342, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1027, i32 0, i32 0)) #14
  unreachable

263:                                              ; No predecessors!
  br label %264

264:                                              ; preds = %263, %261
  %265 = load %31*, %31** %16, align 8
  %266 = getelementptr inbounds %31, %31* %265, i32 0, i32 7
  %267 = load %31**, %31*** %266, align 8
  %268 = getelementptr inbounds %31*, %31** %267, i64 1
  %269 = load %31*, %31** %268, align 8
  %270 = getelementptr inbounds %31, %31* %269, i32 0, i32 0
  %271 = load i32, i32* %270, align 8
  %272 = icmp eq i32 %271, 2
  br i1 %272, label %273, label %274

273:                                              ; preds = %264
  br label %276

274:                                              ; preds = %264
  call void @__assert_fail(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @1029, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 6343, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1027, i32 0, i32 0)) #14
  unreachable

275:                                              ; No predecessors!
  br label %276

276:                                              ; preds = %275, %273
  %277 = load %31*, %31** %16, align 8
  %278 = getelementptr inbounds %31, %31* %277, i32 0, i32 7
  %279 = load %31**, %31*** %278, align 8
  %280 = getelementptr inbounds %31*, %31** %279, i64 0
  %281 = load %31*, %31** %280, align 8
  %282 = getelementptr inbounds %31, %31* %281, i32 0, i32 0
  %283 = load i32, i32* %282, align 8
  %284 = icmp eq i32 %283, 1
  br i1 %284, label %285, label %294

285:                                              ; preds = %276
  %286 = load %31*, %31** %16, align 8
  %287 = getelementptr inbounds %31, %31* %286, i32 0, i32 7
  %288 = load %31**, %31*** %287, align 8
  %289 = getelementptr inbounds %31*, %31** %288, i64 0
  %290 = load %31*, %31** %289, align 8
  %291 = getelementptr inbounds %31, %31* %290, i32 0, i32 4
  %292 = load i8*, i8** %291, align 8
  %293 = call i32 @atoi(i8* %292) #12
  store i32 %293, i32* %25, align 4
  br label %313

294:                                              ; preds = %276
  %295 = load %31*, %31** %16, align 8
  %296 = getelementptr inbounds %31, %31* %295, i32 0, i32 7
  %297 = load %31**, %31*** %296, align 8
  %298 = getelementptr inbounds %31*, %31** %297, i64 0
  %299 = load %31*, %31** %298, align 8
  %300 = getelementptr inbounds %31, %31* %299, i32 0, i32 0
  %301 = load i32, i32* %300, align 8
  %302 = icmp eq i32 %301, 3
  br i1 %302, label %303, label %312

303:                                              ; preds = %294
  %304 = load %31*, %31** %16, align 8
  %305 = getelementptr inbounds %31, %31* %304, i32 0, i32 7
  %306 = load %31**, %31*** %305, align 8
  %307 = getelementptr inbounds %31*, %31** %306, i64 0
  %308 = load %31*, %31** %307, align 8
  %309 = getelementptr inbounds %31, %31* %308, i32 0, i32 1
  %310 = load i64, i64* %309, align 8
  %311 = trunc i64 %310 to i32
  store i32 %311, i32* %25, align 4
  br label %312

312:                                              ; preds = %303, %294
  br label %313

313:                                              ; preds = %312, %285
  %314 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %314) #10
  %315 = load %31*, %31** %16, align 8
  %316 = getelementptr inbounds %31, %31* %315, i32 0, i32 7
  %317 = load %31**, %31*** %316, align 8
  %318 = getelementptr inbounds %31*, %31** %317, i64 1
  %319 = load %31*, %31** %318, align 8
  %320 = getelementptr inbounds %31, %31* %319, i32 0, i32 6
  %321 = load i64, i64* %320, align 8
  %322 = trunc i64 %321 to i32
  store i32 %322, i32* %27, align 4
  store i32 0, i32* %19, align 4
  br label %323

323:                                              ; preds = %422, %313
  %324 = load i32, i32* %19, align 4
  %325 = load i32, i32* %27, align 4
  %326 = icmp slt i32 %324, %325
  br i1 %326, label %327, label %425

327:                                              ; preds = %323
  %328 = bitcast %31** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %328) #10
  %329 = load %31*, %31** %16, align 8
  %330 = getelementptr inbounds %31, %31* %329, i32 0, i32 7
  %331 = load %31**, %31*** %330, align 8
  %332 = getelementptr inbounds %31*, %31** %331, i64 1
  %333 = load %31*, %31** %332, align 8
  %334 = getelementptr inbounds %31, %31* %333, i32 0, i32 7
  %335 = load %31**, %31*** %334, align 8
  %336 = load i32, i32* %19, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds %31*, %31** %335, i64 %337
  %339 = load %31*, %31** %338, align 8
  store %31* %339, %31** %28, align 8
  %340 = load %31*, %31** %28, align 8
  %341 = getelementptr inbounds %31, %31* %340, i32 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = icmp eq i32 %342, 1
  br i1 %343, label %344, label %345

344:                                              ; preds = %327
  br label %347

345:                                              ; preds = %327
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @1030, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 6351, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1027, i32 0, i32 0)) #14
  unreachable

346:                                              ; No predecessors!
  br label %347

347:                                              ; preds = %346, %344
  %348 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %348) #10
  %349 = load %31*, %31** %28, align 8
  %350 = getelementptr inbounds %31, %31* %349, i32 0, i32 4
  %351 = load i8*, i8** %350, align 8
  store i8* %351, i8** %29, align 8
  %352 = bitcast i16* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %352) #10
  %353 = load i8*, i8** %29, align 8
  %354 = load %31*, %31** %28, align 8
  %355 = getelementptr inbounds %31, %31* %354, i32 0, i32 3
  %356 = load i64, i64* %355, align 8
  %357 = trunc i64 %356 to i32
  %358 = call i32 @1480(i8* %353, i32 %357)
  %359 = trunc i32 %358 to i16
  store i16 %359, i16* %30, align 2
  %360 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %360) #10
  %361 = load i16, i16* %30, align 2
  %362 = zext i16 %361 to i64
  %363 = getelementptr inbounds [16384 x %28*], [16384 x %28*]* %20, i64 0, i64 %362
  %364 = load %28*, %28** %363, align 8
  store %28* %364, %28** %31, align 8
  %365 = load i8*, i8** %29, align 8
  %366 = load %28*, %28** %31, align 8
  %367 = getelementptr inbounds %28, %28* %366, i32 0, i32 2
  %368 = load i8*, i8** %367, align 8
  %369 = load %28*, %28** %31, align 8
  %370 = getelementptr inbounds %28, %28* %369, i32 0, i32 3
  %371 = load i32, i32* %370, align 8
  %372 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1031, i32 0, i32 0), i8* %365, i8* %368, i32 %371)
  %373 = bitcast %31** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %373) #10
  %374 = load %10*, %10** %17, align 8
  %375 = getelementptr inbounds [50 x i8], [50 x i8]* %24, i32 0, i32 0
  %376 = load %28*, %28** %31, align 8
  %377 = getelementptr inbounds %28, %28* %376, i32 0, i32 2
  %378 = load i8*, i8** %377, align 8
  %379 = load %28*, %28** %31, align 8
  %380 = getelementptr inbounds %28, %28* %379, i32 0, i32 3
  %381 = load i32, i32* %380, align 8
  %382 = load i8*, i8** %29, align 8
  %383 = load i32, i32* %26, align 4
  %384 = call %31* (%10*, i8*, ...) @1479(%10* %374, i8* %375, i8* %378, i32 %381, i8* %382, i32 0, i32 %383, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1032, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @928, i32 0, i32 0))
  store %31* %384, %31** %32, align 8
  %385 = load %31*, %31** %32, align 8
  %386 = icmp ne %31* %385, null
  br i1 %386, label %387, label %392

387:                                              ; preds = %347
  %388 = load %31*, %31** %32, align 8
  %389 = getelementptr inbounds %31, %31* %388, i32 0, i32 0
  %390 = load i32, i32* %389, align 8
  %391 = icmp eq i32 %390, 6
  br i1 %391, label %392, label %407

392:                                              ; preds = %387, %347
  %393 = load %31*, %31** %32, align 8
  %394 = icmp ne %31* %393, null
  br i1 %394, label %395, label %406

395:                                              ; preds = %392
  %396 = load %31*, %31** %32, align 8
  %397 = getelementptr inbounds %31, %31* %396, i32 0, i32 4
  %398 = load i8*, i8** %397, align 8
  %399 = icmp ne i8* %398, null
  br i1 %399, label %400, label %406

400:                                              ; preds = %395
  %401 = load i8*, i8** %10, align 8
  %402 = load i32, i32* %8, align 4
  %403 = load %31*, %31** %32, align 8
  %404 = getelementptr inbounds %31, %31* %403, i32 0, i32 4
  %405 = load i8*, i8** %404, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1033, i32 0, i32 0), i8* %401, i32 %402, i8* %405)
  br label %406

406:                                              ; preds = %400, %395, %392
  store i32 0, i32* %6, align 4
  br label %407

407:                                              ; preds = %406, %387
  %408 = load %31*, %31** %32, align 8
  %409 = bitcast %31* %408 to i8*
  call void @freeReplyObject(i8* %409)
  %410 = load i32, i32* %6, align 4
  %411 = icmp ne i32 %410, 0
  br i1 %411, label %413, label %412

412:                                              ; preds = %407
  store i32 3, i32* %14, align 4
  br label %414

413:                                              ; preds = %407
  call void (i32, i8*, ...) @1410(i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1034, i32 0, i32 0))
  store i32 0, i32* %14, align 4
  br label %414

414:                                              ; preds = %412, %413
  %415 = bitcast %31** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %415) #10
  %416 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %416) #10
  %417 = bitcast i16* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %417) #10
  %418 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %418) #10
  %419 = bitcast %31** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %419) #10
  %420 = load i32, i32* %14, align 4
  switch i32 %420, label %426 [
    i32 0, label %421
  ]

421:                                              ; preds = %414
  br label %422

422:                                              ; preds = %421
  %423 = load i32, i32* %19, align 4
  %424 = add nsw i32 %423, 1
  store i32 %424, i32* %19, align 4
  br label %323

425:                                              ; preds = %323
  store i32 0, i32* %14, align 4
  br label %426

426:                                              ; preds = %425, %414
  %427 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %427) #10
  %428 = load i32, i32* %14, align 4
  switch i32 %428, label %455 [
    i32 0, label %429
    i32 3, label %431
  ]

429:                                              ; preds = %426
  br label %215

430:                                              ; preds = %215
  br label %431

431:                                              ; preds = %430, %426, %247, %141, %116, %109, %79
  %432 = load i8*, i8** %15, align 8
  %433 = icmp ne i8* %432, null
  br i1 %433, label %434, label %438

434:                                              ; preds = %431
  %435 = load i8*, i8** %10, align 8
  %436 = load i32, i32* %8, align 4
  %437 = load i8*, i8** %15, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1033, i32 0, i32 0), i8* %435, i32 %436, i8* %437)
  br label %438

438:                                              ; preds = %434, %431
  %439 = load %10*, %10** %17, align 8
  %440 = icmp ne %10* %439, null
  br i1 %440, label %441, label %443

441:                                              ; preds = %438
  %442 = load %10*, %10** %17, align 8
  call void @redisFree(%10* %442)
  br label %443

443:                                              ; preds = %441, %438
  %444 = load %31*, %31** %16, align 8
  %445 = icmp ne %31* %444, null
  br i1 %445, label %446, label %449

446:                                              ; preds = %443
  %447 = load %31*, %31** %16, align 8
  %448 = bitcast %31* %447 to i8*
  call void @freeReplyObject(i8* %448)
  br label %449

449:                                              ; preds = %446, %443
  %450 = load i32, i32* %6, align 4
  store i32 %450, i32* %3, align 4
  store i32 1, i32* %14, align 4
  br label %455

451:                                              ; preds = %54, %47, %43
  %452 = load %1*, %1** @stderr, align 8
  %453 = load i8*, i8** %11, align 8
  %454 = call i32 (%1*, i8*, ...) @fprintf(%1* %452, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @854, i32 0, i32 0), i8* %453)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %14, align 4
  br label %455

455:                                              ; preds = %451, %449, %426, %70, %66
  %456 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %456) #10
  %457 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %457) #10
  %458 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %458) #10
  %459 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %459) #10
  %460 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %460) #10
  %461 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %461) #10
  %462 = load i32, i32* %3, align 4
  ret i32 %462

463:                                              ; preds = %190
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1383(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %28*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %30, align 8
  %16 = alloca %25*, align 8
  %17 = alloca %28*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca %1*, align 8
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %21 = load i32, i32* %4, align 4
  %22 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #10
  store i32 1, i32* %6, align 4
  %23 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #10
  store i32 0, i32* %7, align 4
  %24 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #10
  store i8* null, i8** %8, align 8
  %25 = load i8**, i8*** %5, align 8
  %26 = call i32 @1471(i32 1, i8** %25, i8** %8, i32* %7)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %2
  br label %147

29:                                               ; preds = %2
  %30 = load i8*, i8** %8, align 8
  %31 = load i32, i32* %7, align 4
  %32 = call %28* @1404(i8* %30, i32 %31)
  store %28* %32, %28** %9, align 8
  %33 = load %28*, %28** %9, align 8
  %34 = call i32 @1422(%28* %33, i32 0)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  store i32 0, i32* %3, align 4
  store i32 1, i32* %10, align 4
  br label %150

37:                                               ; preds = %29
  %38 = call i32 @1423(i32 0)
  store i32 %38, i32* %11, align 4
  %39 = load i32, i32* %11, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  br label %46

42:                                               ; preds = %37
  %43 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  %44 = getelementptr inbounds %24, %24* %43, i32 0, i32 5
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %42, %41
  %47 = phi i64 [ 0, %41 ], [ %45, %42 ]
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %12, align 4
  %49 = load i8**, i8*** %5, align 8
  %50 = getelementptr inbounds i8*, i8** %49, i64 1
  %51 = load i8*, i8** %50, align 8
  store i8* %51, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 14), align 8
  %52 = call i8* @sdsnew(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1050, i32 0, i32 0))
  store i8* %52, i8** %13, align 8
  store i32 0, i32* %14, align 4
  %53 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %53, %30* %15)
  br label %54

54:                                               ; preds = %98, %94, %46
  %55 = call %25* @listNext(%30* %15)
  store %25* %55, %25** %16, align 8
  %56 = icmp ne %25* %55, null
  br i1 %56, label %57, label %99

57:                                               ; preds = %54
  %58 = load i32, i32* %14, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  store i32 1, i32* %14, align 4
  br label %64

61:                                               ; preds = %57
  %62 = load i8*, i8** %13, align 8
  %63 = call i8* @sdscat(i8* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1051, i32 0, i32 0))
  store i8* %63, i8** %13, align 8
  br label %64

64:                                               ; preds = %61, %60
  %65 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %65) #10
  %66 = load %25*, %25** %16, align 8
  %67 = getelementptr inbounds %25, %25* %66, i32 0, i32 2
  %68 = load i8*, i8** %67, align 8
  %69 = bitcast i8* %68 to %28*
  store %28* %69, %28** %17, align 8
  %70 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %70) #10
  %71 = load %28*, %28** %17, align 8
  %72 = load i32, i32* %12, align 4
  %73 = sext i32 %72 to i64
  %74 = call i8* @1483(%28* %71, i64 %73)
  store i8* %74, i8** %18, align 8
  %75 = load i8*, i8** %13, align 8
  %76 = load i8*, i8** %18, align 8
  %77 = call i8* @sdscat(i8* %75, i8* %76)
  store i8* %77, i8** %13, align 8
  %78 = load i8*, i8** %18, align 8
  call void @sdsfree(i8* %78)
  %79 = load %28*, %28** %17, align 8
  %80 = getelementptr inbounds %28, %28* %79, i32 0, i32 9
  %81 = load i8*, i8** %80, align 8
  %82 = icmp ne i8* %81, null
  br i1 %82, label %83, label %84

83:                                               ; preds = %64
  store i32 3, i32* %10, align 4
  br label %94

84:                                               ; preds = %64
  %85 = load %28*, %28** %17, align 8
  %86 = getelementptr inbounds %28, %28* %85, i32 0, i32 2
  %87 = load i8*, i8** %86, align 8
  %88 = load %28*, %28** %17, align 8
  %89 = getelementptr inbounds %28, %28* %88, i32 0, i32 3
  %90 = load i32, i32* %89, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1052, i32 0, i32 0), i8* %87, i32 %90)
  %91 = load %1*, %1** @stdout, align 8
  %92 = call i32 @fflush(%1* %91)
  %93 = load %28*, %28** %17, align 8
  call void @1392(%28* %93)
  store i32 0, i32* %10, align 4
  br label %94

94:                                               ; preds = %84, %83
  %95 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #10
  %96 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #10
  %97 = load i32, i32* %10, align 4
  switch i32 %97, label %155 [
    i32 0, label %98
    i32 3, label %54
  ]

98:                                               ; preds = %94
  br label %54

99:                                               ; preds = %54
  %100 = load i8*, i8** %13, align 8
  %101 = call i8* @sdscat(i8* %100, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1053, i32 0, i32 0))
  store i8* %101, i8** %13, align 8
  %102 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 14), align 8
  %103 = call i8* @sdsnew(i8* %102)
  store i8* %103, i8** %19, align 8
  %104 = load i8*, i8** %19, align 8
  %105 = load i8*, i8** %19, align 8
  %106 = call i64 @1432(i8* %105)
  %107 = sub i64 %106, 1
  %108 = getelementptr inbounds i8, i8* %104, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = sext i8 %109 to i32
  %111 = icmp ne i32 %110, 47
  br i1 %111, label %112, label %115

112:                                              ; preds = %99
  %113 = load i8*, i8** %19, align 8
  %114 = call i8* @sdscat(i8* %113, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1054, i32 0, i32 0))
  store i8* %114, i8** %19, align 8
  br label %115

115:                                              ; preds = %112, %99
  %116 = load i8*, i8** %19, align 8
  %117 = call i8* @sdscat(i8* %116, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1055, i32 0, i32 0))
  store i8* %117, i8** %19, align 8
  %118 = load %1*, %1** @stdout, align 8
  %119 = call i32 @fflush(%1* %118)
  %120 = load i8*, i8** %19, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1056, i32 0, i32 0), i8* %120)
  %121 = load i8*, i8** %19, align 8
  %122 = call %1* @fopen64(i8* %121, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1057, i32 0, i32 0))
  store %1* %122, %1** %20, align 8
  %123 = load %1*, %1** %20, align 8
  %124 = icmp ne %1* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %115
  %126 = load i8*, i8** %19, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @1058, i32 0, i32 0), i8* %126)
  store i32 0, i32* %6, align 4
  br label %133

127:                                              ; preds = %115
  %128 = load i8*, i8** %13, align 8
  %129 = load %1*, %1** %20, align 8
  %130 = call i32 @fputs(i8* %128, %1* %129)
  %131 = load %1*, %1** %20, align 8
  %132 = call i32 @fclose(%1* %131)
  br label %133

133:                                              ; preds = %127, %125
  %134 = load i8*, i8** %13, align 8
  call void @sdsfree(i8* %134)
  %135 = load i8*, i8** %19, align 8
  call void @sdsfree(i8* %135)
  %136 = load i32, i32* %6, align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %144

138:                                              ; preds = %133
  %139 = load i32, i32* %11, align 4
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %138
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @1059, i32 0, i32 0))
  br label %142

142:                                              ; preds = %141, %138
  %143 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 14), align 8
  call void (i32, i8*, ...) @1410(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @1060, i32 0, i32 0), i8* %143)
  br label %145

144:                                              ; preds = %133
  call void (i32, i8*, ...) @1410(i32 4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @1061, i32 0, i32 0))
  br label %145

145:                                              ; preds = %144, %142
  %146 = load i32, i32* %6, align 4
  store i32 %146, i32* %3, align 4
  store i32 1, i32* %10, align 4
  br label %150

147:                                              ; preds = %28
  %148 = load %1*, %1** @stderr, align 8
  %149 = call i32 (%1*, i8*, ...) @fprintf(%1* %148, i8* getelementptr inbounds ([139 x i8], [139 x i8]* @967, i32 0, i32 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %10, align 4
  br label %150

150:                                              ; preds = %147, %145, %36
  %151 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %151) #10
  %152 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %152) #10
  %153 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %153) #10
  %154 = load i32, i32* %3, align 4
  ret i32 %154

155:                                              ; preds = %94
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1384(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %9*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca [255 x i8], align 16
  %18 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %19 = load i32, i32* %3, align 4
  %20 = load i8**, i8*** %4, align 8
  %21 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #10
  store i32 13, i32* %5, align 4
  %22 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #10
  store i32 0, i32* %6, align 4
  %23 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #10
  %24 = load %1*, %1** @stderr, align 8
  %25 = call i32 (%1*, i8*, ...) @fprintf(%1* %24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1070, i32 0, i32 0))
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #10
  store i32 15, i32* %8, align 4
  br label %27

27:                                               ; preds = %170, %2
  %28 = load i32, i32* %6, align 4
  %29 = load i32, i32* %5, align 4
  %30 = icmp slt i32 %28, %29
  br i1 %30, label %31, label %173

31:                                               ; preds = %27
  %32 = bitcast %9** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #10
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [13 x %9], [13 x %9]* @clusterManagerCommands, i64 0, i64 %34
  store %9* %35, %9** %9, align 8
  %36 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #10
  %37 = load %9*, %9** %9, align 8
  %38 = getelementptr inbounds %9, %9* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = call i64 @strlen(i8* %39) #12
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %10, align 4
  %42 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #10
  %43 = load i32, i32* %8, align 4
  %44 = load i32, i32* %10, align 4
  %45 = sub nsw i32 %43, %44
  store i32 %45, i32* %11, align 4
  %46 = load %1*, %1** @stderr, align 8
  %47 = load %9*, %9** %9, align 8
  %48 = getelementptr inbounds %9, %9* %47, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = call i32 (%1*, i8*, ...) @fprintf(%1* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1071, i32 0, i32 0), i8* %49)
  store i32 0, i32* %7, align 4
  br label %51

51:                                               ; preds = %58, %31
  %52 = load i32, i32* %7, align 4
  %53 = load i32, i32* %11, align 4
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = load %1*, %1** @stderr, align 8
  %57 = call i32 (%1*, i8*, ...) @fprintf(%1* %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @829, i32 0, i32 0))
  br label %58

58:                                               ; preds = %55
  %59 = load i32, i32* %7, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %7, align 4
  br label %51

61:                                               ; preds = %51
  %62 = load %1*, %1** @stderr, align 8
  %63 = load %9*, %9** %9, align 8
  %64 = getelementptr inbounds %9, %9* %63, i32 0, i32 3
  %65 = load i8*, i8** %64, align 8
  %66 = icmp ne i8* %65, null
  br i1 %66, label %67, label %71

67:                                               ; preds = %61
  %68 = load %9*, %9** %9, align 8
  %69 = getelementptr inbounds %9, %9* %68, i32 0, i32 3
  %70 = load i8*, i8** %69, align 8
  br label %72

71:                                               ; preds = %61
  br label %72

72:                                               ; preds = %71, %67
  %73 = phi i8* [ %70, %67 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), %71 ]
  %74 = call i32 (%1*, i8*, ...) @fprintf(%1* %62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %73)
  %75 = load %9*, %9** %9, align 8
  %76 = getelementptr inbounds %9, %9* %75, i32 0, i32 4
  %77 = load i8*, i8** %76, align 8
  %78 = icmp ne i8* %77, null
  br i1 %78, label %79, label %166

79:                                               ; preds = %72
  %80 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %80) #10
  %81 = load %9*, %9** %9, align 8
  %82 = getelementptr inbounds %9, %9* %81, i32 0, i32 4
  %83 = load i8*, i8** %82, align 8
  %84 = call i64 @strlen(i8* %83) #12
  %85 = trunc i64 %84 to i32
  store i32 %85, i32* %12, align 4
  %86 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %86) #10
  %87 = load %9*, %9** %9, align 8
  %88 = getelementptr inbounds %9, %9* %87, i32 0, i32 4
  %89 = load i8*, i8** %88, align 8
  store i8* %89, i8** %13, align 8
  %90 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %90) #10
  %91 = load i8*, i8** %13, align 8
  %92 = load i32, i32* %12, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %91, i64 %93
  store i8* %94, i8** %14, align 8
  %95 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %95) #10
  store i8* null, i8** %15, align 8
  br label %96

96:                                               ; preds = %141, %79
  %97 = load i8*, i8** %13, align 8
  %98 = call i8* @strchr(i8* %97, i32 44) #12
  store i8* %98, i8** %15, align 8
  %99 = icmp ne i8* %98, null
  br i1 %99, label %100, label %142

100:                                              ; preds = %96
  %101 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %101) #10
  %102 = load i8*, i8** %15, align 8
  %103 = load i8*, i8** %13, align 8
  %104 = ptrtoint i8* %102 to i64
  %105 = ptrtoint i8* %103 to i64
  %106 = sub i64 %104, %105
  %107 = trunc i64 %106 to i32
  store i32 %107, i32* %16, align 4
  %108 = bitcast [255 x i8]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 255, i8* %108) #10
  %109 = getelementptr inbounds [255 x i8], [255 x i8]* %17, i32 0, i32 0
  %110 = load i8*, i8** %13, align 8
  %111 = load i32, i32* %16, align 4
  %112 = sext i32 %111 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %109, i8* align 1 %110, i64 %112, i1 false)
  %113 = load i32, i32* %16, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [255 x i8], [255 x i8]* %17, i64 0, i64 %114
  store i8 0, i8* %115, align 1
  store i32 0, i32* %7, align 4
  br label %116

116:                                              ; preds = %123, %100
  %117 = load i32, i32* %7, align 4
  %118 = load i32, i32* %8, align 4
  %119 = icmp slt i32 %117, %118
  br i1 %119, label %120, label %126

120:                                              ; preds = %116
  %121 = load %1*, %1** @stderr, align 8
  %122 = call i32 (%1*, i8*, ...) @fprintf(%1* %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @829, i32 0, i32 0))
  br label %123

123:                                              ; preds = %120
  %124 = load i32, i32* %7, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %7, align 4
  br label %116

126:                                              ; preds = %116
  %127 = load %1*, %1** @stderr, align 8
  %128 = getelementptr inbounds [255 x i8], [255 x i8]* %17, i32 0, i32 0
  %129 = call i32 (%1*, i8*, ...) @fprintf(%1* %127, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1072, i32 0, i32 0), i8* %128)
  %130 = load i8*, i8** %15, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 1
  store i8* %131, i8** %13, align 8
  %132 = load i8*, i8** %13, align 8
  %133 = load i8*, i8** %14, align 8
  %134 = icmp uge i8* %132, %133
  br i1 %134, label %135, label %136

135:                                              ; preds = %126
  store i32 9, i32* %18, align 4
  br label %137

136:                                              ; preds = %126
  store i32 0, i32* %18, align 4
  br label %137

137:                                              ; preds = %136, %135
  %138 = bitcast [255 x i8]* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 255, i8* %138) #10
  %139 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %139) #10
  %140 = load i32, i32* %18, align 4
  switch i32 %140, label %180 [
    i32 0, label %141
    i32 9, label %142
  ]

141:                                              ; preds = %137
  br label %96

142:                                              ; preds = %137, %96
  %143 = load i8*, i8** %13, align 8
  %144 = load i8*, i8** %14, align 8
  %145 = icmp ult i8* %143, %144
  br i1 %145, label %146, label %161

146:                                              ; preds = %142
  store i32 0, i32* %7, align 4
  br label %147

147:                                              ; preds = %154, %146
  %148 = load i32, i32* %7, align 4
  %149 = load i32, i32* %8, align 4
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %151, label %157

151:                                              ; preds = %147
  %152 = load %1*, %1** @stderr, align 8
  %153 = call i32 (%1*, i8*, ...) @fprintf(%1* %152, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @829, i32 0, i32 0))
  br label %154

154:                                              ; preds = %151
  %155 = load i32, i32* %7, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %7, align 4
  br label %147

157:                                              ; preds = %147
  %158 = load %1*, %1** @stderr, align 8
  %159 = load i8*, i8** %13, align 8
  %160 = call i32 (%1*, i8*, ...) @fprintf(%1* %158, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1072, i32 0, i32 0), i8* %159)
  br label %161

161:                                              ; preds = %157, %142
  %162 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %162) #10
  %163 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163) #10
  %164 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #10
  %165 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %165) #10
  br label %166

166:                                              ; preds = %161, %72
  %167 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %167) #10
  %168 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %168) #10
  %169 = bitcast %9** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %169) #10
  br label %170

170:                                              ; preds = %166
  %171 = load i32, i32* %6, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %6, align 4
  br label %27

173:                                              ; preds = %27
  %174 = load %1*, %1** @stderr, align 8
  %175 = call i32 (%1*, i8*, ...) @fprintf(%1* %174, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @1073, i32 0, i32 0))
  store i32 1, i32* %18, align 4
  %176 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %176) #10
  %177 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %177) #10
  %178 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %178) #10
  %179 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %179) #10
  ret i32 0

180:                                              ; preds = %137
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local i32 @clusterManagerSlotCompare(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i8**, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = bitcast i8*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = load i8*, i8** %3, align 8
  %9 = bitcast i8* %8 to i8**
  store i8** %9, i8*** %5, align 8
  %10 = bitcast i8*** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  %11 = load i8*, i8** %4, align 8
  %12 = bitcast i8* %11 to i8**
  store i8** %12, i8*** %6, align 8
  %13 = load i8**, i8*** %5, align 8
  %14 = load i8*, i8** %13, align 8
  %15 = load i8**, i8*** %6, align 8
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @strcmp(i8* %14, i8* %16) #12
  %18 = bitcast i8*** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #10
  %19 = bitcast i8*** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %19) #10
  ret i32 %17
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: nounwind uwtable
define dso_local i32 @clusterManagerSlotCountCompareDesc(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca %28*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = load i8*, i8** %3, align 8
  %9 = bitcast i8* %8 to %28**
  %10 = load %28*, %28** %9, align 8
  store %28* %10, %28** %5, align 8
  %11 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = load i8*, i8** %4, align 8
  %13 = bitcast i8* %12 to %28**
  %14 = load %28*, %28** %13, align 8
  store %28* %14, %28** %6, align 8
  %15 = load %28*, %28** %6, align 8
  %16 = getelementptr inbounds %28, %28* %15, i32 0, i32 12
  %17 = load i32, i32* %16, align 4
  %18 = load %28*, %28** %5, align 8
  %19 = getelementptr inbounds %28, %28* %18, i32 0, i32 12
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %17, %20
  %22 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #10
  %23 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define dso_local i32 @clusterManagerCompareNodeBalance(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca %28*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = load i8*, i8** %3, align 8
  %9 = bitcast i8* %8 to %28**
  %10 = load %28*, %28** %9, align 8
  store %28* %10, %28** %5, align 8
  %11 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = load i8*, i8** %4, align 8
  %13 = bitcast i8* %12 to %28**
  %14 = load %28*, %28** %13, align 8
  store %28* %14, %28** %6, align 8
  %15 = load %28*, %28** %5, align 8
  %16 = getelementptr inbounds %28, %28* %15, i32 0, i32 20
  %17 = load i32, i32* %16, align 4
  %18 = load %28*, %28** %6, align 8
  %19 = getelementptr inbounds %28, %28* %18, i32 0, i32 20
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %17, %20
  %22 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #10
  %23 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define dso_local void @showLatencyDistSamples(%26* %0, i64 %1) #0 {
  %3 = alloca %26*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %26* %0, %26** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @724, i32 0, i32 0))
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %63, %2
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  %13 = load %26*, %26** %3, align 8
  %14 = load i32, i32* %5, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %26, %26* %13, i64 %15
  %17 = getelementptr inbounds %26, %26* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = sitofp i64 %18 to float
  %20 = load i64, i64* %4, align 8
  %21 = sitofp i64 %20 to float
  %22 = fdiv float %19, %21
  %23 = load i32, i32* @spectrum_palette_size, align 4
  %24 = sub nsw i32 %23, 1
  %25 = sitofp i32 %24 to float
  %26 = fmul float %22, %25
  %27 = fpext float %26 to double
  %28 = call double @llvm.ceil.f64(double %27)
  %29 = fptosi double %28 to i32
  store i32 %29, i32* %6, align 4
  %30 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #10
  %31 = load i32*, i32** @spectrum_palette, align 8
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %31, i64 %33
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %7, align 4
  %36 = load i32, i32* %7, align 4
  %37 = load %26*, %26** %3, align 8
  %38 = load i32, i32* %5, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %26, %26* %37, i64 %39
  %41 = getelementptr inbounds %26, %26* %40, i32 0, i32 2
  %42 = load i32, i32* %41, align 8
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @725, i32 0, i32 0), i32 %36, i32 %42)
  %44 = load %26*, %26** %3, align 8
  %45 = load i32, i32* %5, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %26, %26* %44, i64 %46
  %48 = getelementptr inbounds %26, %26* %47, i32 0, i32 1
  store i64 0, i64* %48, align 8
  %49 = load %26*, %26** %3, align 8
  %50 = load i32, i32* %5, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %26, %26* %49, i64 %51
  %53 = getelementptr inbounds %26, %26* %52, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %11
  store i32 2, i32* %8, align 4
  br label %58

57:                                               ; preds = %11
  store i32 0, i32* %8, align 4
  br label %58

58:                                               ; preds = %57, %56
  %59 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %59) #10
  %60 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %60) #10
  %61 = load i32, i32* %8, align 4
  switch i32 %61, label %71 [
    i32 0, label %62
    i32 2, label %66
  ]

62:                                               ; preds = %58
  br label %63

63:                                               ; preds = %62
  %64 = load i32, i32* %5, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %5, align 4
  br label %11

66:                                               ; preds = %58
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @726, i32 0, i32 0))
  %68 = load %1*, %1** @stdout, align 8
  %69 = call i32 @fflush(%1* %68)
  %70 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %70) #10
  ret void

71:                                               ; preds = %58
  unreachable
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

declare dso_local i32 @fflush(%1*) #2

; Function Attrs: nounwind uwtable
define dso_local void @showLatencyDistLegend() #0 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #10
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @727, i32 0, i32 0))
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @728, i32 0, i32 0))
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @729, i32 0, i32 0))
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @730, i32 0, i32 0))
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @731, i32 0, i32 0))
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @732, i32 0, i32 0))
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @733, i32 0, i32 0))
  store i32 0, i32* %1, align 4
  br label %10

10:                                               ; preds = %21, %0
  %11 = load i32, i32* %1, align 4
  %12 = load i32, i32* @spectrum_palette_size, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = load i32*, i32** @spectrum_palette, align 8
  %16 = load i32, i32* %1, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %15, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @734, i32 0, i32 0), i32 %19)
  br label %21

21:                                               ; preds = %14
  %22 = load i32, i32* %1, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %1, align 4
  br label %10

24:                                               ; preds = %10
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @726, i32 0, i32 0))
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @727, i32 0, i32 0))
  %27 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %27) #10
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @sendReplconf(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %31*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @735, i32 0, i32 0), i8* %6, i8* %7)
  %9 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #10
  %10 = load %10*, %10** @736, align 8
  %11 = load i8*, i8** %3, align 8
  %12 = load i8*, i8** %4, align 8
  %13 = call i8* (%10*, i8*, ...) @redisCommand(%10* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @737, i32 0, i32 0), i8* %11, i8* %12)
  %14 = bitcast i8* %13 to %31*
  store %31* %14, %31** %5, align 8
  %15 = load %31*, %31** %5, align 8
  %16 = icmp eq %31* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = load %1*, %1** @stderr, align 8
  %19 = call i32 (%1*, i8*, ...) @fprintf(%1* %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @738, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

20:                                               ; preds = %2
  %21 = load %31*, %31** %5, align 8
  %22 = getelementptr inbounds %31, %31* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 6
  br i1 %24, label %25, label %32

25:                                               ; preds = %20
  %26 = load %1*, %1** @stderr, align 8
  %27 = load i8*, i8** %3, align 8
  %28 = load %31*, %31** %5, align 8
  %29 = getelementptr inbounds %31, %31* %28, i32 0, i32 4
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 (%1*, i8*, ...) @fprintf(%1* %26, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @739, i32 0, i32 0), i8* %27, i8* %30)
  br label %32

32:                                               ; preds = %25, %20
  br label %33

33:                                               ; preds = %32
  %34 = load %31*, %31** %5, align 8
  %35 = bitcast %31* %34 to i8*
  call void @freeReplyObject(i8* %35)
  %36 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #10
  ret void
}

declare dso_local i8* @redisCommand(%10*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #7

declare dso_local void @freeReplyObject(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local void @sendCapa() #0 {
  call void @sendReplconf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @740, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @741, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i64 @sendSync(i32 %0, i8* %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca [4096 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  %10 = bitcast [4096 x i8]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* %10) #10
  %11 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = load i32, i32* %4, align 4
  %14 = call i64 @write(i32 %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @742, i32 0, i32 0), i64 6)
  %15 = icmp ne i64 %14, 6
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load %1*, %1** @stderr, align 8
  %18 = call i32 (%1*, i8*, ...) @fprintf(%1* %17, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @743, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

19:                                               ; preds = %2
  %20 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i32 0, i32 0
  store i8* %20, i8** %7, align 8
  br label %21

21:                                               ; preds = %49, %19
  br label %22

22:                                               ; preds = %21
  %23 = load i32, i32* %4, align 4
  %24 = load i8*, i8** %7, align 8
  %25 = call i64 @read(i32 %23, i8* %24, i64 1)
  store i64 %25, i64* %8, align 8
  %26 = load i64, i64* %8, align 8
  %27 = icmp sle i64 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = load %1*, %1** @stderr, align 8
  %30 = call i32 (%1*, i8*, ...) @fprintf(%1* %29, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @744, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

31:                                               ; preds = %22
  %32 = load i8*, i8** %7, align 8
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 10
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = load i8*, i8** %7, align 8
  %38 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i32 0, i32 0
  %39 = icmp ne i8* %37, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  br label %50

41:                                               ; preds = %36, %31
  %42 = load i8*, i8** %7, align 8
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = icmp ne i32 %44, 10
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = load i8*, i8** %7, align 8
  %48 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %48, i8** %7, align 8
  br label %49

49:                                               ; preds = %46, %41
  br label %21

50:                                               ; preds = %40
  %51 = load i8*, i8** %7, align 8
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  %53 = load i8, i8* %52, align 16
  %54 = sext i8 %53 to i32
  %55 = icmp eq i32 %54, 45
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i32 0, i32 0
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @745, i32 0, i32 0), i8* %57)
  call void @exit(i32 1) #14
  unreachable

59:                                               ; preds = %50
  %60 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i32 0, i32 0
  %61 = getelementptr inbounds i8, i8* %60, i64 1
  %62 = call i32 @strncmp(i8* %61, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @746, i32 0, i32 0), i64 4) #12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %73

64:                                               ; preds = %59
  %65 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i32 0, i32 0
  %66 = getelementptr inbounds i8, i8* %65, i64 5
  %67 = call i64 @strlen(i8* %66) #12
  %68 = icmp uge i64 %67, 40
  br i1 %68, label %69, label %73

69:                                               ; preds = %64
  %70 = load i8*, i8** %5, align 8
  %71 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i32 0, i32 0
  %72 = getelementptr inbounds i8, i8* %71, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 40, i1 false)
  store i64 0, i64* %3, align 8
  store i32 1, i32* %9, align 4
  br label %77

73:                                               ; preds = %64, %59
  %74 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i32 0, i32 0
  %75 = getelementptr inbounds i8, i8* %74, i64 1
  %76 = call i64 @strtoull(i8* %75, i8** null, i32 10) #10
  store i64 %76, i64* %3, align 8
  store i32 1, i32* %9, align 4
  br label %77

77:                                               ; preds = %73, %69
  %78 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78) #10
  %79 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #10
  %80 = bitcast [4096 x i8]* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* %80) #10
  %81 = load i64, i64* %3, align 8
  ret i64 %81
}

declare dso_local i64 @write(i32, i8*, i64) #2

declare dso_local i64 @read(i32, i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #5

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare dso_local i64 @strtoull(i8*, i8**, i32) #4

; Function Attrs: nounwind uwtable
define dso_local void @type_free(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %20*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = bitcast %20** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %7 = load i8*, i8** %4, align 8
  %8 = bitcast i8* %7 to %20*
  store %20* %8, %20** %5, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = load %20*, %20** %5, align 8
  %11 = getelementptr inbounds %20, %20* %10, i32 0, i32 6
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ne i8* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = load %20*, %20** %5, align 8
  %16 = getelementptr inbounds %20, %20* %15, i32 0, i32 6
  %17 = load i8*, i8** %16, align 8
  call void @sdsfree(i8* %17)
  br label %18

18:                                               ; preds = %14, %2
  %19 = load %20*, %20** %5, align 8
  %20 = getelementptr inbounds %20, %20* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @sdsfree(i8* %21)
  %22 = load %20*, %20** %5, align 8
  %23 = bitcast %20* %22 to i8*
  call void @zfree(i8* %23)
  %24 = bitcast %20** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #10
  ret void
}

declare dso_local void @zfree(i8*) #2

; Function Attrs: nounwind uwtable
define dso_local void @bytesToHuman(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca double, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = load i64, i64* %4, align 8
  %9 = icmp slt i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = load i8*, i8** %3, align 8
  store i8 45, i8* %11, align 1
  %12 = load i8*, i8** %3, align 8
  %13 = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %13, i8** %3, align 8
  %14 = load i64, i64* %4, align 8
  %15 = sub nsw i64 0, %14
  store i64 %15, i64* %4, align 8
  br label %16

16:                                               ; preds = %10, %2
  %17 = load i64, i64* %4, align 8
  %18 = icmp slt i64 %17, 1024
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = load i8*, i8** %3, align 8
  %21 = load i64, i64* %4, align 8
  %22 = call i32 (i8*, i8*, ...) @sprintf(i8* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @760, i32 0, i32 0), i64 %21) #10
  store i32 1, i32* %6, align 4
  br label %57

23:                                               ; preds = %16
  %24 = load i64, i64* %4, align 8
  %25 = icmp slt i64 %24, 1048576
  br i1 %25, label %26, label %33

26:                                               ; preds = %23
  %27 = load i64, i64* %4, align 8
  %28 = sitofp i64 %27 to double
  %29 = fdiv double %28, 1.024000e+03
  store double %29, double* %5, align 8
  %30 = load i8*, i8** %3, align 8
  %31 = load double, double* %5, align 8
  %32 = call i32 (i8*, i8*, ...) @sprintf(i8* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @761, i32 0, i32 0), double %31) #10
  br label %55

33:                                               ; preds = %23
  %34 = load i64, i64* %4, align 8
  %35 = icmp slt i64 %34, 1073741824
  br i1 %35, label %36, label %43

36:                                               ; preds = %33
  %37 = load i64, i64* %4, align 8
  %38 = sitofp i64 %37 to double
  %39 = fdiv double %38, 0x4130000000000000
  store double %39, double* %5, align 8
  %40 = load i8*, i8** %3, align 8
  %41 = load double, double* %5, align 8
  %42 = call i32 (i8*, i8*, ...) @sprintf(i8* %40, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @762, i32 0, i32 0), double %41) #10
  br label %54

43:                                               ; preds = %33
  %44 = load i64, i64* %4, align 8
  %45 = icmp slt i64 %44, 1099511627776
  br i1 %45, label %46, label %53

46:                                               ; preds = %43
  %47 = load i64, i64* %4, align 8
  %48 = sitofp i64 %47 to double
  %49 = fdiv double %48, 0x41D0000000000000
  store double %49, double* %5, align 8
  %50 = load i8*, i8** %3, align 8
  %51 = load double, double* %5, align 8
  %52 = call i32 (i8*, i8*, ...) @sprintf(i8* %50, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @763, i32 0, i32 0), double %51) #10
  br label %53

53:                                               ; preds = %46, %43
  br label %54

54:                                               ; preds = %53, %36
  br label %55

55:                                               ; preds = %54, %26
  br label %56

56:                                               ; preds = %55
  store i32 0, i32* %6, align 4
  br label %57

57:                                               ; preds = %56, %19
  %58 = bitcast double* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #10
  %59 = load i32, i32* %6, align 4
  switch i32 %59, label %61 [
    i32 0, label %60
    i32 1, label %60
  ]

60:                                               ; preds = %57, %57
  ret void

61:                                               ; preds = %57
  unreachable
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: nounwind uwtable
define dso_local i64 @powerLawRand(i64 %0, i64 %1, double %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  store i64 %0, i64* %4, align 8
  store i64 %1, i64* %5, align 8
  store double %2, double* %6, align 8
  %9 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #10
  %10 = bitcast double* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  %11 = load i64, i64* %5, align 8
  %12 = add nsw i64 %11, 1
  store i64 %12, i64* %5, align 8
  %13 = call i32 @rand() #10
  %14 = sitofp i32 %13 to double
  %15 = fdiv double %14, 0x41DFFFFFFFC00000
  store double %15, double* %8, align 8
  %16 = load i64, i64* %5, align 8
  %17 = sitofp i64 %16 to double
  %18 = load double, double* %6, align 8
  %19 = fadd double %18, 1.000000e+00
  %20 = call double @pow(double %17, double %19) #10
  %21 = load i64, i64* %4, align 8
  %22 = sitofp i64 %21 to double
  %23 = load double, double* %6, align 8
  %24 = fadd double %23, 1.000000e+00
  %25 = call double @pow(double %22, double %24) #10
  %26 = fsub double %20, %25
  %27 = load double, double* %8, align 8
  %28 = fmul double %26, %27
  %29 = load i64, i64* %4, align 8
  %30 = sitofp i64 %29 to double
  %31 = load double, double* %6, align 8
  %32 = fadd double %31, 1.000000e+00
  %33 = call double @pow(double %30, double %32) #10
  %34 = fadd double %28, %33
  %35 = load double, double* %6, align 8
  %36 = fadd double %35, 1.000000e+00
  %37 = fdiv double 1.000000e+00, %36
  %38 = call double @pow(double %34, double %37) #10
  store double %38, double* %7, align 8
  %39 = load i64, i64* %5, align 8
  %40 = sub nsw i64 %39, 1
  %41 = load double, double* %7, align 8
  %42 = fptosi double %41 to i64
  %43 = sub nsw i64 %40, %42
  %44 = load i64, i64* %4, align 8
  %45 = add nsw i64 %43, %44
  %46 = bitcast double* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #10
  %47 = bitcast double* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #10
  ret i64 %45
}

; Function Attrs: nounwind
declare dso_local i32 @rand() #4

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #4

; Function Attrs: nounwind uwtable
define dso_local void @LRUTestGenKey(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 20), align 8
  %8 = call i64 @powerLawRand(i64 1, i64 %7, double 6.200000e+00)
  %9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @764, i32 0, i32 0), i64 %8) #10
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #4

; Function Attrs: nounwind uwtable
define dso_local i64 @compute_something_fast() #0 {
  %1 = alloca [256 x i8], align 16
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = bitcast [256 x i8]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %8) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %4) #10
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  store i32 1000, i32* %5, align 4
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  %11 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  store i64 0, i64* %7, align 8
  store i32 0, i32* %6, align 4
  br label %12

12:                                               ; preds = %21, %0
  %13 = load i32, i32* %6, align 4
  %14 = icmp slt i32 %13, 256
  br i1 %14, label %15, label %24

15:                                               ; preds = %12
  %16 = load i32, i32* %6, align 4
  %17 = trunc i32 %16 to i8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %19
  store i8 %17, i8* %20, align 1
  br label %21

21:                                               ; preds = %15
  %22 = load i32, i32* %6, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %6, align 4
  br label %12

24:                                               ; preds = %12
  store i8 0, i8* %2, align 1
  store i8 0, i8* %3, align 1
  br label %25

25:                                               ; preds = %29, %24
  %26 = load i32, i32* %5, align 4
  %27 = add nsw i32 %26, -1
  store i32 %27, i32* %5, align 4
  %28 = icmp ne i32 %26, 0
  br i1 %28, label %29, label %74

29:                                               ; preds = %25
  %30 = load i8, i8* %2, align 1
  %31 = add i8 %30, 1
  store i8 %31, i8* %2, align 1
  %32 = load i8, i8* %3, align 1
  %33 = zext i8 %32 to i32
  %34 = load i8, i8* %2, align 1
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = add nsw i32 %33, %38
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %3, align 1
  %41 = load i8, i8* %2, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  store i8 %44, i8* %4, align 1
  %45 = load i8, i8* %3, align 1
  %46 = zext i8 %45 to i64
  %47 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %2, align 1
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %50
  store i8 %48, i8* %51, align 1
  %52 = load i8, i8* %4, align 1
  %53 = load i8, i8* %3, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %54
  store i8 %52, i8* %55, align 1
  %56 = load i8, i8* %2, align 1
  %57 = zext i8 %56 to i64
  %58 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = load i8, i8* %3, align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = add nsw i32 %60, %65
  %67 = and i32 %66, 255
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i64 0, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = load i64, i64* %7, align 8
  %73 = add i64 %72, %71
  store i64 %73, i64* %7, align 8
  br label %25

74:                                               ; preds = %25
  %75 = load i64, i64* %7, align 8
  %76 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #10
  %77 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %77) #10
  %78 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %78) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %4) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %3) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %2) #10
  %79 = bitcast [256 x i8]* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %79) #10
  ret i64 %75
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32 (i32, i8**)*, align 8
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  %10 = call i8* @sdsnew(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @766, i32 0, i32 0))
  store i8* %10, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  store i32 6379, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 2), align 8
  store i64 1, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 9), align 8
  store i64 0, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 11), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 12), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 13), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 14), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 15), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 16), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 17), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 18), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 19), align 8
  store i64 0, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 20), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 21), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 23), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 26), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 27), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 28), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 29), align 8
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 31), align 8
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 32), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 24), align 4
  store i32 30, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 25), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 33), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 36), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 37), align 8
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 39), align 8
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 44), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 47), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 46), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 48), align 4
  store i32 -1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 49), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 50), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 52), align 8
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 0), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 1), align 8
  store i8** null, i8*** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 2), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 4), align 4
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 5), align 8
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 6), align 8
  store i8** null, i8*** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 7), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 8), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 10), align 8
  store i32 60000, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 11), align 4
  store i32 10, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 12), align 8
  store float 2.000000e+00, float* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 13), align 4
  store i8* null, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 14), align 8
  store i32 1, i32* getelementptr inbounds (%3, %3* @688, i32 0, i32 0), align 4
  store i32* getelementptr inbounds ([19 x i32], [19 x i32]* @spectrum_palette_color, i32 0, i32 0), i32** @spectrum_palette, align 8
  %11 = load i32, i32* @spectrum_palette_color_size, align 4
  store i32 %11, i32* @spectrum_palette_size, align 4
  %12 = load %1*, %1** @stdout, align 8
  %13 = call i32 @fileno(%1* %12) #10
  %14 = call i32 @isatty(i32 %13) #10
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %2
  %17 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @767, i32 0, i32 0)) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  br label %21

20:                                               ; preds = %16, %2
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  br label %21

21:                                               ; preds = %20, %19
  %22 = call i8* @sdsnew(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  store i8* %22, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 42), align 8
  %23 = load i32, i32* %4, align 4
  %24 = load i8**, i8*** %5, align 8
  %25 = call i32 @1385(i32 %23, i8** %24)
  store i32 %25, i32* %6, align 4
  %26 = load i32, i32* %6, align 4
  %27 = load i32, i32* %4, align 4
  %28 = sub nsw i32 %27, %26
  store i32 %28, i32* %4, align 4
  %29 = load i32, i32* %6, align 4
  %30 = load i8**, i8*** %5, align 8
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds i8*, i8** %30, i64 %31
  store i8** %32, i8*** %5, align 8
  call void @1489()
  %33 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 39), align 8
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %21
  %36 = call i8* @1490()
  store i8* %36, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  br label %37

37:                                               ; preds = %35, %21
  %38 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 0), align 8
  %39 = icmp ne i8* %38, null
  br i1 %39, label %40, label %51

40:                                               ; preds = %37
  %41 = bitcast i32 (i32, i8**)** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #10
  %42 = call i32 (i32, i8**)* @1386()
  store i32 (i32, i8**)* %42, i32 (i32, i8**)** %7, align 8
  %43 = load i32 (i32, i8**)*, i32 (i32, i8**)** %7, align 8
  %44 = icmp ne i32 (i32, i8**)* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %40
  %46 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  call void @sdsfree(i8* %46)
  %47 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 42), align 8
  call void @sdsfree(i8* %47)
  call void @exit(i32 1) #14
  unreachable

48:                                               ; preds = %40
  %49 = load i32 (i32, i8**)*, i32 (i32, i8**)** %7, align 8
  call void @1387(i32 (i32, i8**)* %49)
  %50 = bitcast i32 (i32, i8**)** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #10
  br label %51

51:                                               ; preds = %48, %37
  %52 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 16), align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %51
  %55 = call i32 @1388(i32 0)
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @exit(i32 1) #14
  unreachable

58:                                               ; preds = %54
  call void @1389()
  br label %59

59:                                               ; preds = %58, %51
  %60 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 17), align 8
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %59
  %63 = call i32 @1388(i32 0)
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @exit(i32 1) #14
  unreachable

66:                                               ; preds = %62
  call void @1390()
  br label %67

67:                                               ; preds = %66, %59
  %68 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 23), align 8
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %67
  %71 = call i32 @1388(i32 0)
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @exit(i32 1) #14
  unreachable

74:                                               ; preds = %70
  call void @sendCapa()
  call void @1391()
  br label %75

75:                                               ; preds = %74, %67
  %76 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 26), align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %83

78:                                               ; preds = %75
  %79 = call i32 @1388(i32 0)
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @exit(i32 1) #14
  unreachable

82:                                               ; preds = %78
  call void @sendCapa()
  call void @1392(%28* null)
  br label %83

83:                                               ; preds = %82, %75
  %84 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 24), align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %91

86:                                               ; preds = %83
  %87 = call i32 @1388(i32 0)
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @exit(i32 1) #14
  unreachable

90:                                               ; preds = %86
  call void @1393()
  br label %91

91:                                               ; preds = %90, %83
  %92 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 33), align 8
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %99

94:                                               ; preds = %91
  %95 = call i32 @1388(i32 0)
  %96 = icmp eq i32 %95, -1
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @exit(i32 1) #14
  unreachable

98:                                               ; preds = %94
  call void @1394(i32 0, i32 0)
  br label %99

99:                                               ; preds = %98, %91
  %100 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 34), align 4
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %108

102:                                              ; preds = %99
  %103 = call i32 @1388(i32 0)
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @exit(i32 1) #14
  unreachable

106:                                              ; preds = %102
  %107 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 35), align 8
  call void @1394(i32 1, i32 %107)
  br label %108

108:                                              ; preds = %106, %99
  %109 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 36), align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %108
  %112 = call i32 @1388(i32 0)
  %113 = icmp eq i32 %112, -1
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @exit(i32 1) #14
  unreachable

115:                                              ; preds = %111
  call void @1395()
  br label %116

116:                                              ; preds = %115, %108
  %117 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 27), align 8
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %128

119:                                              ; preds = %116
  %120 = call i32 @1388(i32 0)
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @exit(i32 1) #14
  unreachable

123:                                              ; preds = %119
  %124 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  store i64 1000000, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  br label %127

127:                                              ; preds = %126, %123
  call void @1396()
  br label %128

128:                                              ; preds = %127, %116
  %129 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 28), align 4
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %136

131:                                              ; preds = %128
  %132 = call i32 @1388(i32 0)
  %133 = icmp eq i32 %132, -1
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @exit(i32 1) #14
  unreachable

135:                                              ; preds = %131
  call void @1397()
  br label %136

136:                                              ; preds = %135, %128
  %137 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 19), align 8
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %144

139:                                              ; preds = %136
  %140 = call i32 @1388(i32 0)
  %141 = icmp eq i32 %140, -1
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @exit(i32 1) #14
  unreachable

143:                                              ; preds = %139
  call void @1398()
  br label %144

144:                                              ; preds = %143, %136
  %145 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 29), align 8
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @1399()
  br label %148

148:                                              ; preds = %147, %144
  %149 = load i32, i32* %4, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %148
  %152 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 44), align 8
  %153 = icmp ne i8* %152, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %151
  %155 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #10
  %156 = call i32 @1388(i32 0)
  call void @1400()
  br label %157

157:                                              ; preds = %154, %151, %148
  %158 = call i32 @1388(i32 0)
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @exit(i32 1) #14
  unreachable

161:                                              ; preds = %157
  %162 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 44), align 8
  %163 = icmp ne i8* %162, null
  br i1 %163, label %164, label %168

164:                                              ; preds = %161
  %165 = load i32, i32* %4, align 4
  %166 = load i8**, i8*** %5, align 8
  %167 = call i32 @1401(i32 %165, i8** %166)
  store i32 %167, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %174

168:                                              ; preds = %161
  %169 = load i32, i32* %4, align 4
  %170 = load i32, i32* %4, align 4
  %171 = load i8**, i8*** %5, align 8
  %172 = call i8** @1403(i32 %170, i8** %171)
  %173 = call i32 @1402(i32 %169, i8** %172)
  store i32 %173, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %174

174:                                              ; preds = %168, %164
  %175 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %175) #10
  %176 = load i32, i32* %3, align 4
  ret i32 %176
}

declare dso_local i8* @sdsnew(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @fileno(%1*) #4

; Function Attrs: nounwind uwtable
define internal i32 @1385(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %17 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  store i32 1, i32* %5, align 4
  br label %18

18:                                               ; preds = %1138, %2
  %19 = load i32, i32* %5, align 4
  %20 = load i32, i32* %3, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %1141

22:                                               ; preds = %18
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #10
  %24 = load i32, i32* %5, align 4
  %25 = load i32, i32* %3, align 4
  %26 = sub nsw i32 %25, 1
  %27 = icmp eq i32 %24, %26
  %28 = zext i1 %27 to i32
  store i32 %28, i32* %6, align 4
  %29 = load i8**, i8*** %4, align 8
  %30 = load i32, i32* %5, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %29, i64 %31
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1074, i32 0, i32 0)) #12
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %22
  %37 = load i32, i32* %6, align 4
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %36
  %40 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  call void @sdsfree(i8* %40)
  %41 = load i8**, i8*** %4, align 8
  %42 = load i32, i32* %5, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %5, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8*, i8** %41, i64 %44
  %46 = load i8*, i8** %45, align 8
  %47 = call i8* @sdsnew(i8* %46)
  store i8* %47, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  br label %1133

48:                                               ; preds = %36, %22
  %49 = load i8**, i8*** %4, align 8
  %50 = load i32, i32* %5, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8*, i8** %49, i64 %51
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 @strcmp(i8* %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1074, i32 0, i32 0)) #12
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %48
  %57 = load i32, i32* %6, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @1484()
  br label %1132

60:                                               ; preds = %56, %48
  %61 = load i8**, i8*** %4, align 8
  %62 = load i32, i32* %5, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8*, i8** %61, i64 %63
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @strcmp(i8* %65, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1075, i32 0, i32 0)) #12
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %60
  call void @1484()
  br label %1131

69:                                               ; preds = %60
  %70 = load i8**, i8*** %4, align 8
  %71 = load i32, i32* %5, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8*, i8** %70, i64 %72
  %74 = load i8*, i8** %73, align 8
  %75 = call i32 @strcmp(i8* %74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1076, i32 0, i32 0)) #12
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %78, label %77

77:                                               ; preds = %69
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 37), align 8
  br label %1130

78:                                               ; preds = %69
  %79 = load i8**, i8*** %4, align 8
  %80 = load i32, i32* %5, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8*, i8** %79, i64 %81
  %83 = load i8*, i8** %82, align 8
  %84 = call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1077, i32 0, i32 0)) #12
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %97, label %86

86:                                               ; preds = %78
  %87 = load i32, i32* %6, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %86
  %90 = load i8**, i8*** %4, align 8
  %91 = load i32, i32* %5, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %5, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8*, i8** %90, i64 %93
  %95 = load i8*, i8** %94, align 8
  %96 = call i32 @atoi(i8* %95) #12
  store i32 %96, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  br label %1129

97:                                               ; preds = %86, %78
  %98 = load i8**, i8*** %4, align 8
  %99 = load i32, i32* %5, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8*, i8** %98, i64 %100
  %102 = load i8*, i8** %101, align 8
  %103 = call i32 @strcmp(i8* %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1078, i32 0, i32 0)) #12
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %115, label %105

105:                                              ; preds = %97
  %106 = load i32, i32* %6, align 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %115, label %108

108:                                              ; preds = %105
  %109 = load i8**, i8*** %4, align 8
  %110 = load i32, i32* %5, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %5, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8*, i8** %109, i64 %112
  %114 = load i8*, i8** %113, align 8
  store i8* %114, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 2), align 8
  br label %1128

115:                                              ; preds = %105, %97
  %116 = load i8**, i8*** %4, align 8
  %117 = load i32, i32* %5, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8*, i8** %116, i64 %118
  %120 = load i8*, i8** %119, align 8
  %121 = call i32 @strcmp(i8* %120, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1079, i32 0, i32 0)) #12
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %134, label %123

123:                                              ; preds = %115
  %124 = load i32, i32* %6, align 4
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %134, label %126

126:                                              ; preds = %123
  %127 = load i8**, i8*** %4, align 8
  %128 = load i32, i32* %5, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %5, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8*, i8** %127, i64 %130
  %132 = load i8*, i8** %131, align 8
  %133 = call i64 @strtoll(i8* %132, i8** null, i32 10) #10
  store i64 %133, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 9), align 8
  br label %1127

134:                                              ; preds = %123, %115
  %135 = load i8**, i8*** %4, align 8
  %136 = load i32, i32* %5, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8*, i8** %135, i64 %137
  %139 = load i8*, i8** %138, align 8
  %140 = call i32 @strcmp(i8* %139, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1080, i32 0, i32 0)) #12
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %158, label %142

142:                                              ; preds = %134
  %143 = load i32, i32* %6, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %158, label %145

145:                                              ; preds = %142
  %146 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %146) #10
  %147 = load i8**, i8*** %4, align 8
  %148 = load i32, i32* %5, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %5, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i8*, i8** %147, i64 %150
  %152 = load i8*, i8** %151, align 8
  %153 = call double @atof(i8* %152) #12
  store double %153, double* %7, align 8
  %154 = load double, double* %7, align 8
  %155 = fmul double %154, 1.000000e+06
  %156 = fptosi double %155 to i64
  store i64 %156, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %157 = bitcast double* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #10
  br label %1126

158:                                              ; preds = %142, %134
  %159 = load i8**, i8*** %4, align 8
  %160 = load i32, i32* %5, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8*, i8** %159, i64 %161
  %163 = load i8*, i8** %162, align 8
  %164 = call i32 @strcmp(i8* %163, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1081, i32 0, i32 0)) #12
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %177, label %166

166:                                              ; preds = %158
  %167 = load i32, i32* %6, align 4
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %177, label %169

169:                                              ; preds = %166
  %170 = load i8**, i8*** %4, align 8
  %171 = load i32, i32* %5, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %5, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8*, i8** %170, i64 %173
  %175 = load i8*, i8** %174, align 8
  %176 = call i32 @atoi(i8* %175) #12
  store i32 %176, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 11), align 8
  br label %1125

177:                                              ; preds = %166, %158
  %178 = load i8**, i8*** %4, align 8
  %179 = load i32, i32* %5, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8*, i8** %178, i64 %180
  %182 = load i8*, i8** %181, align 8
  %183 = call i32 @strcmp(i8* %182, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1082, i32 0, i32 0)) #12
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %186, label %185

185:                                              ; preds = %177
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 52), align 8
  br label %1124

186:                                              ; preds = %177
  %187 = load i8**, i8*** %4, align 8
  %188 = load i32, i32* %5, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i8*, i8** %187, i64 %189
  %191 = load i8*, i8** %190, align 8
  %192 = call i32 @strcmp(i8* %191, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1083, i32 0, i32 0)) #12
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %195, label %194

194:                                              ; preds = %186
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 39), align 8
  br label %1123

195:                                              ; preds = %186
  %196 = load i8**, i8*** %4, align 8
  %197 = load i32, i32* %5, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8*, i8** %196, i64 %198
  %200 = load i8*, i8** %199, align 8
  %201 = call i32 @strcmp(i8* %200, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1084, i32 0, i32 0)) #12
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %203, label %211

203:                                              ; preds = %195
  %204 = load i8**, i8*** %4, align 8
  %205 = load i32, i32* %5, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8*, i8** %204, i64 %206
  %208 = load i8*, i8** %207, align 8
  %209 = call i32 @strcmp(i8* %208, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1085, i32 0, i32 0)) #12
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %221, label %211

211:                                              ; preds = %203, %195
  %212 = load i32, i32* %6, align 4
  %213 = icmp ne i32 %212, 0
  br i1 %213, label %221, label %214

214:                                              ; preds = %211
  %215 = load i8**, i8*** %4, align 8
  %216 = load i32, i32* %5, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %5, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8*, i8** %215, i64 %218
  %220 = load i8*, i8** %219, align 8
  store i8* %220, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  br label %1122

221:                                              ; preds = %211, %203
  %222 = load i8**, i8*** %4, align 8
  %223 = load i32, i32* %5, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8*, i8** %222, i64 %224
  %226 = load i8*, i8** %225, align 8
  %227 = call i32 @strcmp(i8* %226, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1086, i32 0, i32 0)) #12
  %228 = icmp ne i32 %227, 0
  br i1 %228, label %239, label %229

229:                                              ; preds = %221
  %230 = load i32, i32* %6, align 4
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %239, label %232

232:                                              ; preds = %229
  %233 = load i8**, i8*** %4, align 8
  %234 = load i32, i32* %5, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %5, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i8*, i8** %233, i64 %236
  %238 = load i8*, i8** %237, align 8
  store i8* %238, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  br label %1121

239:                                              ; preds = %229, %221
  %240 = load i8**, i8*** %4, align 8
  %241 = load i32, i32* %5, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i8*, i8** %240, i64 %242
  %244 = load i8*, i8** %243, align 8
  %245 = call i32 @strcmp(i8* %244, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1087, i32 0, i32 0)) #12
  %246 = icmp ne i32 %245, 0
  br i1 %246, label %257, label %247

247:                                              ; preds = %239
  %248 = load i32, i32* %6, align 4
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %257, label %250

250:                                              ; preds = %247
  %251 = load i8**, i8*** %4, align 8
  %252 = load i32, i32* %5, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %5, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds i8*, i8** %251, i64 %254
  %256 = load i8*, i8** %255, align 8
  call void @1485(i8* %256)
  br label %1120

257:                                              ; preds = %247, %239
  %258 = load i8**, i8*** %4, align 8
  %259 = load i32, i32* %5, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i8*, i8** %258, i64 %260
  %262 = load i8*, i8** %261, align 8
  %263 = call i32 @strcmp(i8* %262, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1088, i32 0, i32 0)) #12
  %264 = icmp ne i32 %263, 0
  br i1 %264, label %266, label %265

265:                                              ; preds = %257
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  br label %1119

266:                                              ; preds = %257
  %267 = load i8**, i8*** %4, align 8
  %268 = load i32, i32* %5, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds i8*, i8** %267, i64 %269
  %271 = load i8*, i8** %270, align 8
  %272 = call i32 @strcmp(i8* %271, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1089, i32 0, i32 0)) #12
  %273 = icmp ne i32 %272, 0
  br i1 %273, label %275, label %274

274:                                              ; preds = %266
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  br label %1118

275:                                              ; preds = %266
  %276 = load i8**, i8*** %4, align 8
  %277 = load i32, i32* %5, align 4
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i8*, i8** %276, i64 %278
  %280 = load i8*, i8** %279, align 8
  %281 = call i32 @strcmp(i8* %280, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1090, i32 0, i32 0)) #12
  %282 = icmp ne i32 %281, 0
  br i1 %282, label %284, label %283

283:                                              ; preds = %275
  store i32 2, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  br label %1117

284:                                              ; preds = %275
  %285 = load i8**, i8*** %4, align 8
  %286 = load i32, i32* %5, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds i8*, i8** %285, i64 %287
  %289 = load i8*, i8** %288, align 8
  %290 = call i32 @strcmp(i8* %289, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1091, i32 0, i32 0)) #12
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %293, label %292

292:                                              ; preds = %284
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 16), align 4
  br label %1116

293:                                              ; preds = %284
  %294 = load i8**, i8*** %4, align 8
  %295 = load i32, i32* %5, align 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8*, i8** %294, i64 %296
  %298 = load i8*, i8** %297, align 8
  %299 = call i32 @strcmp(i8* %298, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1092, i32 0, i32 0)) #12
  %300 = icmp ne i32 %299, 0
  br i1 %300, label %302, label %301

301:                                              ; preds = %293
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 17), align 8
  br label %1115

302:                                              ; preds = %293
  %303 = load i8**, i8*** %4, align 8
  %304 = load i32, i32* %5, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8*, i8** %303, i64 %305
  %307 = load i8*, i8** %306, align 8
  %308 = call i32 @strcmp(i8* %307, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1093, i32 0, i32 0)) #12
  %309 = icmp ne i32 %308, 0
  br i1 %309, label %312, label %310

310:                                              ; preds = %302
  store i32* getelementptr inbounds ([13 x i32], [13 x i32]* @spectrum_palette_mono, i32 0, i32 0), i32** @spectrum_palette, align 8
  %311 = load i32, i32* @spectrum_palette_mono_size, align 4
  store i32 %311, i32* @spectrum_palette_size, align 4
  br label %1114

312:                                              ; preds = %302
  %313 = load i8**, i8*** %4, align 8
  %314 = load i32, i32* %5, align 4
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8*, i8** %313, i64 %315
  %317 = load i8*, i8** %316, align 8
  %318 = call i32 @strcmp(i8* %317, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1094, i32 0, i32 0)) #12
  %319 = icmp ne i32 %318, 0
  br i1 %319, label %321, label %320

320:                                              ; preds = %312
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 16), align 4
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 18), align 4
  br label %1113

321:                                              ; preds = %312
  %322 = load i8**, i8*** %4, align 8
  %323 = load i32, i32* %5, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i8*, i8** %322, i64 %324
  %326 = load i8*, i8** %325, align 8
  %327 = call i32 @strcmp(i8* %326, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1095, i32 0, i32 0)) #12
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %340, label %329

329:                                              ; preds = %321
  %330 = load i32, i32* %6, align 4
  %331 = icmp ne i32 %330, 0
  br i1 %331, label %340, label %332

332:                                              ; preds = %329
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 19), align 8
  %333 = load i8**, i8*** %4, align 8
  %334 = load i32, i32* %5, align 4
  %335 = add nsw i32 %334, 1
  store i32 %335, i32* %5, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds i8*, i8** %333, i64 %336
  %338 = load i8*, i8** %337, align 8
  %339 = call i64 @strtoll(i8* %338, i8** null, i32 10) #10
  store i64 %339, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 20), align 8
  br label %1112

340:                                              ; preds = %329, %321
  %341 = load i8**, i8*** %4, align 8
  %342 = load i32, i32* %5, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds i8*, i8** %341, i64 %343
  %345 = load i8*, i8** %344, align 8
  %346 = call i32 @strcmp(i8* %345, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1096, i32 0, i32 0)) #12
  %347 = icmp ne i32 %346, 0
  br i1 %347, label %349, label %348

348:                                              ; preds = %340
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 23), align 8
  br label %1111

349:                                              ; preds = %340
  %350 = load i8**, i8*** %4, align 8
  %351 = load i32, i32* %5, align 4
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds i8*, i8** %350, i64 %352
  %354 = load i8*, i8** %353, align 8
  %355 = call i32 @strcmp(i8* %354, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1097, i32 0, i32 0)) #12
  %356 = icmp ne i32 %355, 0
  br i1 %356, label %358, label %357

357:                                              ; preds = %349
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 23), align 8
  br label %1110

358:                                              ; preds = %349
  %359 = load i8**, i8*** %4, align 8
  %360 = load i32, i32* %5, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds i8*, i8** %359, i64 %361
  %363 = load i8*, i8** %362, align 8
  %364 = call i32 @strcmp(i8* %363, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1098, i32 0, i32 0)) #12
  %365 = icmp ne i32 %364, 0
  br i1 %365, label %367, label %366

366:                                              ; preds = %358
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 27), align 8
  br label %1109

367:                                              ; preds = %358
  %368 = load i8**, i8*** %4, align 8
  %369 = load i32, i32* %5, align 4
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds i8*, i8** %368, i64 %370
  %372 = load i8*, i8** %371, align 8
  %373 = call i32 @strcmp(i8* %372, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1099, i32 0, i32 0)) #12
  %374 = icmp ne i32 %373, 0
  br i1 %374, label %376, label %375

375:                                              ; preds = %367
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 28), align 4
  br label %1108

376:                                              ; preds = %367
  %377 = load i8**, i8*** %4, align 8
  %378 = load i32, i32* %5, align 4
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds i8*, i8** %377, i64 %379
  %381 = load i8*, i8** %380, align 8
  %382 = call i32 @strcmp(i8* %381, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1100, i32 0, i32 0)) #12
  %383 = icmp ne i32 %382, 0
  br i1 %383, label %394, label %384

384:                                              ; preds = %376
  %385 = load i32, i32* %6, align 4
  %386 = icmp ne i32 %385, 0
  br i1 %386, label %394, label %387

387:                                              ; preds = %384
  %388 = load i8**, i8*** %4, align 8
  %389 = load i32, i32* %5, align 4
  %390 = add nsw i32 %389, 1
  store i32 %390, i32* %5, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i8*, i8** %388, i64 %391
  %393 = load i8*, i8** %392, align 8
  store i8* %393, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 31), align 8
  br label %1107

394:                                              ; preds = %384, %376
  %395 = load i8**, i8*** %4, align 8
  %396 = load i32, i32* %5, align 4
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds i8*, i8** %395, i64 %397
  %399 = load i8*, i8** %398, align 8
  %400 = call i32 @strcmp(i8* %399, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1101, i32 0, i32 0)) #12
  %401 = icmp ne i32 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %394
  %403 = load i32, i32* %6, align 4
  %404 = icmp ne i32 %403, 0
  br i1 %404, label %413, label %405

405:                                              ; preds = %402
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 29), align 8
  %406 = load i8**, i8*** %4, align 8
  %407 = load i32, i32* %5, align 4
  %408 = add nsw i32 %407, 1
  store i32 %408, i32* %5, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds i8*, i8** %406, i64 %409
  %411 = load i8*, i8** %410, align 8
  %412 = call i32 @atoi(i8* %411) #12
  store i32 %412, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 30), align 4
  br label %1106

413:                                              ; preds = %402, %394
  %414 = load i8**, i8*** %4, align 8
  %415 = load i32, i32* %5, align 4
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds i8*, i8** %414, i64 %416
  %418 = load i8*, i8** %417, align 8
  %419 = call i32 @strcmp(i8* %418, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1102, i32 0, i32 0)) #12
  %420 = icmp ne i32 %419, 0
  br i1 %420, label %431, label %421

421:                                              ; preds = %413
  %422 = load i32, i32* %6, align 4
  %423 = icmp ne i32 %422, 0
  br i1 %423, label %431, label %424

424:                                              ; preds = %421
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 26), align 4
  %425 = load i8**, i8*** %4, align 8
  %426 = load i32, i32* %5, align 4
  %427 = add nsw i32 %426, 1
  store i32 %427, i32* %5, align 4
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i8*, i8** %425, i64 %428
  %430 = load i8*, i8** %429, align 8
  store i8* %430, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 32), align 8
  br label %1105

431:                                              ; preds = %421, %413
  %432 = load i8**, i8*** %4, align 8
  %433 = load i32, i32* %5, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i8*, i8** %432, i64 %434
  %436 = load i8*, i8** %435, align 8
  %437 = call i32 @strcmp(i8* %436, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1103, i32 0, i32 0)) #12
  %438 = icmp ne i32 %437, 0
  br i1 %438, label %440, label %439

439:                                              ; preds = %431
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 24), align 4
  br label %1104

440:                                              ; preds = %431
  %441 = load i8**, i8*** %4, align 8
  %442 = load i32, i32* %5, align 4
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds i8*, i8** %441, i64 %443
  %445 = load i8*, i8** %444, align 8
  %446 = call i32 @strcmp(i8* %445, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1104, i32 0, i32 0)) #12
  %447 = icmp ne i32 %446, 0
  br i1 %447, label %459, label %448

448:                                              ; preds = %440
  %449 = load i32, i32* %6, align 4
  %450 = icmp ne i32 %449, 0
  br i1 %450, label %459, label %451

451:                                              ; preds = %448
  %452 = load i8**, i8*** %4, align 8
  %453 = load i32, i32* %5, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %5, align 4
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i8*, i8** %452, i64 %455
  %457 = load i8*, i8** %456, align 8
  %458 = call i32 @atoi(i8* %457) #12
  store i32 %458, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 25), align 8
  br label %1103

459:                                              ; preds = %448, %440
  %460 = load i8**, i8*** %4, align 8
  %461 = load i32, i32* %5, align 4
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds i8*, i8** %460, i64 %462
  %464 = load i8*, i8** %463, align 8
  %465 = call i32 @strcmp(i8* %464, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1105, i32 0, i32 0)) #12
  %466 = icmp ne i32 %465, 0
  br i1 %466, label %468, label %467

467:                                              ; preds = %459
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 33), align 8
  br label %1102

468:                                              ; preds = %459
  %469 = load i8**, i8*** %4, align 8
  %470 = load i32, i32* %5, align 4
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds i8*, i8** %469, i64 %471
  %473 = load i8*, i8** %472, align 8
  %474 = call i32 @strcmp(i8* %473, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1106, i32 0, i32 0)) #12
  %475 = icmp ne i32 %474, 0
  br i1 %475, label %477, label %476

476:                                              ; preds = %468
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 34), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 35), align 8
  br label %1101

477:                                              ; preds = %468
  %478 = load i8**, i8*** %4, align 8
  %479 = load i32, i32* %5, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds i8*, i8** %478, i64 %480
  %482 = load i8*, i8** %481, align 8
  %483 = call i32 @strcmp(i8* %482, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1107, i32 0, i32 0)) #12
  %484 = icmp ne i32 %483, 0
  br i1 %484, label %493, label %485

485:                                              ; preds = %477
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 34), align 4
  %486 = load i8**, i8*** %4, align 8
  %487 = load i32, i32* %5, align 4
  %488 = add nsw i32 %487, 1
  store i32 %488, i32* %5, align 4
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds i8*, i8** %486, i64 %489
  %491 = load i8*, i8** %490, align 8
  %492 = call i32 @atoi(i8* %491) #12
  store i32 %492, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 35), align 8
  br label %1100

493:                                              ; preds = %477
  %494 = load i8**, i8*** %4, align 8
  %495 = load i32, i32* %5, align 4
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds i8*, i8** %494, i64 %496
  %498 = load i8*, i8** %497, align 8
  %499 = call i32 @strcmp(i8* %498, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1108, i32 0, i32 0)) #12
  %500 = icmp ne i32 %499, 0
  br i1 %500, label %502, label %501

501:                                              ; preds = %493
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 36), align 4
  br label %1099

502:                                              ; preds = %493
  %503 = load i8**, i8*** %4, align 8
  %504 = load i32, i32* %5, align 4
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds i8*, i8** %503, i64 %505
  %507 = load i8*, i8** %506, align 8
  %508 = call i32 @strcmp(i8* %507, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1109, i32 0, i32 0)) #12
  %509 = icmp ne i32 %508, 0
  br i1 %509, label %520, label %510

510:                                              ; preds = %502
  %511 = load i32, i32* %6, align 4
  %512 = icmp ne i32 %511, 0
  br i1 %512, label %520, label %513

513:                                              ; preds = %510
  %514 = load i8**, i8*** %4, align 8
  %515 = load i32, i32* %5, align 4
  %516 = add nsw i32 %515, 1
  store i32 %516, i32* %5, align 4
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds i8*, i8** %514, i64 %517
  %519 = load i8*, i8** %518, align 8
  store i8* %519, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 44), align 8
  br label %1098

520:                                              ; preds = %510, %502
  %521 = load i8**, i8*** %4, align 8
  %522 = load i32, i32* %5, align 4
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds i8*, i8** %521, i64 %523
  %525 = load i8*, i8** %524, align 8
  %526 = call i32 @strcmp(i8* %525, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1110, i32 0, i32 0)) #12
  %527 = icmp ne i32 %526, 0
  br i1 %527, label %529, label %528

528:                                              ; preds = %520
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  br label %1097

529:                                              ; preds = %520
  %530 = load i8**, i8*** %4, align 8
  %531 = load i32, i32* %5, align 4
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8*, i8** %530, i64 %532
  %534 = load i8*, i8** %533, align 8
  %535 = call i32 @strcmp(i8* %534, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1111, i32 0, i32 0)) #12
  %536 = icmp ne i32 %535, 0
  br i1 %536, label %538, label %537

537:                                              ; preds = %529
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 46), align 4
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  br label %1096

538:                                              ; preds = %529
  %539 = load i8**, i8*** %4, align 8
  %540 = load i32, i32* %5, align 4
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds i8*, i8** %539, i64 %541
  %543 = load i8*, i8** %542, align 8
  %544 = call i32 @strcmp(i8* %543, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1112, i32 0, i32 0)) #12
  %545 = icmp ne i32 %544, 0
  br i1 %545, label %547, label %546

546:                                              ; preds = %538
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 21), align 8
  br label %1095

547:                                              ; preds = %538
  %548 = load i8**, i8*** %4, align 8
  %549 = load i32, i32* %5, align 4
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds i8*, i8** %548, i64 %550
  %552 = load i8*, i8** %551, align 8
  %553 = call i32 @strcmp(i8* %552, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1113, i32 0, i32 0)) #12
  %554 = icmp ne i32 %553, 0
  br i1 %554, label %567, label %555

555:                                              ; preds = %547
  %556 = load i32, i32* %6, align 4
  %557 = icmp ne i32 %556, 0
  br i1 %557, label %567, label %558

558:                                              ; preds = %555
  %559 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 42), align 8
  call void @sdsfree(i8* %559)
  %560 = load i8**, i8*** %4, align 8
  %561 = load i32, i32* %5, align 4
  %562 = add nsw i32 %561, 1
  store i32 %562, i32* %5, align 4
  %563 = sext i32 %562 to i64
  %564 = getelementptr inbounds i8*, i8** %560, i64 %563
  %565 = load i8*, i8** %564, align 8
  %566 = call i8* @sdsnew(i8* %565)
  store i8* %566, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 42), align 8
  br label %1094

567:                                              ; preds = %555, %547
  %568 = load i8**, i8*** %4, align 8
  %569 = load i32, i32* %5, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds i8*, i8** %568, i64 %570
  %572 = load i8*, i8** %571, align 8
  %573 = call i32 @strcmp(i8* %572, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1114, i32 0, i32 0)) #12
  %574 = icmp ne i32 %573, 0
  br i1 %574, label %576, label %575

575:                                              ; preds = %567
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 50), align 4
  br label %1093

576:                                              ; preds = %567
  %577 = load i8**, i8*** %4, align 8
  %578 = load i32, i32* %5, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds i8*, i8** %577, i64 %579
  %581 = load i8*, i8** %580, align 8
  %582 = call i32 @strcmp(i8* %581, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1115, i32 0, i32 0)) #12
  %583 = icmp ne i32 %582, 0
  br i1 %583, label %640, label %584

584:                                              ; preds = %576
  %585 = load i32, i32* %6, align 4
  %586 = icmp ne i32 %585, 0
  br i1 %586, label %640, label %587

587:                                              ; preds = %584
  %588 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 0), align 8
  %589 = icmp ne i8* %588, null
  br i1 %589, label %590, label %591

590:                                              ; preds = %587
  call void @1484()
  br label %591

591:                                              ; preds = %590, %587
  %592 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %592) #10
  %593 = load i8**, i8*** %4, align 8
  %594 = load i32, i32* %5, align 4
  %595 = add nsw i32 %594, 1
  store i32 %595, i32* %5, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds i8*, i8** %593, i64 %596
  %598 = load i8*, i8** %597, align 8
  store i8* %598, i8** %8, align 8
  %599 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %599) #10
  %600 = load i32, i32* %5, align 4
  store i32 %600, i32* %9, align 4
  br label %601

601:                                              ; preds = %617, %591
  %602 = load i32, i32* %9, align 4
  %603 = load i32, i32* %3, align 4
  %604 = icmp slt i32 %602, %603
  br i1 %604, label %605, label %615

605:                                              ; preds = %601
  %606 = load i8**, i8*** %4, align 8
  %607 = load i32, i32* %9, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds i8*, i8** %606, i64 %608
  %610 = load i8*, i8** %609, align 8
  %611 = getelementptr inbounds i8, i8* %610, i64 0
  %612 = load i8, i8* %611, align 1
  %613 = sext i8 %612 to i32
  %614 = icmp ne i32 %613, 45
  br label %615

615:                                              ; preds = %605, %601
  %616 = phi i1 [ false, %601 ], [ %614, %605 ]
  br i1 %616, label %617, label %620

617:                                              ; preds = %615
  %618 = load i32, i32* %9, align 4
  %619 = add nsw i32 %618, 1
  store i32 %619, i32* %9, align 4
  br label %601

620:                                              ; preds = %615
  %621 = load i32, i32* %9, align 4
  %622 = load i32, i32* %5, align 4
  %623 = icmp sgt i32 %621, %622
  br i1 %623, label %624, label %627

624:                                              ; preds = %620
  %625 = load i32, i32* %9, align 4
  %626 = add nsw i32 %625, -1
  store i32 %626, i32* %9, align 4
  br label %627

627:                                              ; preds = %624, %620
  %628 = load i8*, i8** %8, align 8
  %629 = load i32, i32* %9, align 4
  %630 = load i32, i32* %5, align 4
  %631 = sub nsw i32 %629, %630
  %632 = load i8**, i8*** %4, align 8
  %633 = load i32, i32* %5, align 4
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds i8*, i8** %632, i64 %634
  %636 = getelementptr inbounds i8*, i8** %635, i64 1
  call void @1486(i8* %628, i32 %631, i8** %636)
  %637 = load i32, i32* %9, align 4
  store i32 %637, i32* %5, align 4
  %638 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %638) #10
  %639 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %639) #10
  br label %1092

640:                                              ; preds = %584, %576
  %641 = load i8**, i8*** %4, align 8
  %642 = load i32, i32* %5, align 4
  %643 = sext i32 %642 to i64
  %644 = getelementptr inbounds i8*, i8** %641, i64 %643
  %645 = load i8*, i8** %644, align 8
  %646 = call i32 @strcmp(i8* %645, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1115, i32 0, i32 0)) #12
  %647 = icmp ne i32 %646, 0
  br i1 %647, label %652, label %648

648:                                              ; preds = %640
  %649 = load i32, i32* %6, align 4
  %650 = icmp ne i32 %649, 0
  br i1 %650, label %651, label %652

651:                                              ; preds = %648
  call void @1484()
  br label %1091

652:                                              ; preds = %648, %640
  %653 = load i8**, i8*** %4, align 8
  %654 = load i32, i32* %5, align 4
  %655 = sext i32 %654 to i64
  %656 = getelementptr inbounds i8*, i8** %653, i64 %655
  %657 = load i8*, i8** %656, align 8
  %658 = call i32 @strcmp(i8* %657, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1116, i32 0, i32 0)) #12
  %659 = icmp ne i32 %658, 0
  br i1 %659, label %671, label %660

660:                                              ; preds = %652
  %661 = load i32, i32* %6, align 4
  %662 = icmp ne i32 %661, 0
  br i1 %662, label %671, label %663

663:                                              ; preds = %660
  %664 = load i8**, i8*** %4, align 8
  %665 = load i32, i32* %5, align 4
  %666 = add nsw i32 %665, 1
  store i32 %666, i32* %5, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds i8*, i8** %664, i64 %667
  %669 = load i8*, i8** %668, align 8
  %670 = call i32 @atoi(i8* %669) #12
  store i32 %670, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 4), align 4
  br label %1090

671:                                              ; preds = %660, %652
  %672 = load i8**, i8*** %4, align 8
  %673 = load i32, i32* %5, align 4
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds i8*, i8** %672, i64 %674
  %676 = load i8*, i8** %675, align 8
  %677 = call i32 @strcmp(i8* %676, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1117, i32 0, i32 0)) #12
  %678 = icmp ne i32 %677, 0
  br i1 %678, label %689, label %679

679:                                              ; preds = %671
  %680 = load i32, i32* %6, align 4
  %681 = icmp ne i32 %680, 0
  br i1 %681, label %689, label %682

682:                                              ; preds = %679
  %683 = load i8**, i8*** %4, align 8
  %684 = load i32, i32* %5, align 4
  %685 = add nsw i32 %684, 1
  store i32 %685, i32* %5, align 4
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds i8*, i8** %683, i64 %686
  %688 = load i8*, i8** %687, align 8
  store i8* %688, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 9), align 8
  br label %1089

689:                                              ; preds = %679, %671
  %690 = load i8**, i8*** %4, align 8
  %691 = load i32, i32* %5, align 4
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds i8*, i8** %690, i64 %692
  %694 = load i8*, i8** %693, align 8
  %695 = call i32 @strcmp(i8* %694, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1118, i32 0, i32 0)) #12
  %696 = icmp ne i32 %695, 0
  br i1 %696, label %707, label %697

697:                                              ; preds = %689
  %698 = load i32, i32* %6, align 4
  %699 = icmp ne i32 %698, 0
  br i1 %699, label %707, label %700

700:                                              ; preds = %697
  %701 = load i8**, i8*** %4, align 8
  %702 = load i32, i32* %5, align 4
  %703 = add nsw i32 %702, 1
  store i32 %703, i32* %5, align 4
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds i8*, i8** %701, i64 %704
  %706 = load i8*, i8** %705, align 8
  store i8* %706, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 5), align 8
  br label %1088

707:                                              ; preds = %697, %689
  %708 = load i8**, i8*** %4, align 8
  %709 = load i32, i32* %5, align 4
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds i8*, i8** %708, i64 %710
  %712 = load i8*, i8** %711, align 8
  %713 = call i32 @strcmp(i8* %712, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1119, i32 0, i32 0)) #12
  %714 = icmp ne i32 %713, 0
  br i1 %714, label %725, label %715

715:                                              ; preds = %707
  %716 = load i32, i32* %6, align 4
  %717 = icmp ne i32 %716, 0
  br i1 %717, label %725, label %718

718:                                              ; preds = %715
  %719 = load i8**, i8*** %4, align 8
  %720 = load i32, i32* %5, align 4
  %721 = add nsw i32 %720, 1
  store i32 %721, i32* %5, align 4
  %722 = sext i32 %721 to i64
  %723 = getelementptr inbounds i8*, i8** %719, i64 %722
  %724 = load i8*, i8** %723, align 8
  store i8* %724, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 6), align 8
  br label %1087

725:                                              ; preds = %715, %707
  %726 = load i8**, i8*** %4, align 8
  %727 = load i32, i32* %5, align 4
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds i8*, i8** %726, i64 %728
  %730 = load i8*, i8** %729, align 8
  %731 = call i32 @strcmp(i8* %730, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @1120, i32 0, i32 0)) #12
  %732 = icmp ne i32 %731, 0
  br i1 %732, label %798, label %733

733:                                              ; preds = %725
  %734 = load i32, i32* %6, align 4
  %735 = icmp ne i32 %734, 0
  br i1 %735, label %798, label %736

736:                                              ; preds = %733
  %737 = load i8**, i8*** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 7), align 8
  %738 = icmp ne i8** %737, null
  br i1 %738, label %739, label %742

739:                                              ; preds = %736
  %740 = load %1*, %1** @stderr, align 8
  %741 = call i32 (%1*, i8*, ...) @fprintf(%1* %740, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @1121, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

742:                                              ; preds = %736
  %743 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %743) #10
  %744 = load i32, i32* %5, align 4
  %745 = add nsw i32 %744, 1
  store i32 %745, i32* %10, align 4
  %746 = bitcast i8*** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %746) #10
  %747 = load i8**, i8*** %4, align 8
  %748 = load i32, i32* %10, align 4
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds i8*, i8** %747, i64 %749
  store i8** %750, i8*** %11, align 8
  %751 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %751) #10
  store i32 0, i32* %12, align 4
  br label %752

752:                                              ; preds = %782, %742
  %753 = load i32, i32* %10, align 4
  %754 = load i32, i32* %3, align 4
  %755 = icmp slt i32 %753, %754
  br i1 %755, label %756, label %785

756:                                              ; preds = %752
  %757 = load i8**, i8*** %4, align 8
  %758 = load i32, i32* %10, align 4
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds i8*, i8** %757, i64 %759
  %761 = load i8*, i8** %760, align 8
  %762 = call i8* @strstr(i8* %761, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1122, i32 0, i32 0)) #12
  %763 = load i8**, i8*** %4, align 8
  %764 = load i32, i32* %10, align 4
  %765 = sext i32 %764 to i64
  %766 = getelementptr inbounds i8*, i8** %763, i64 %765
  %767 = load i8*, i8** %766, align 8
  %768 = icmp eq i8* %762, %767
  br i1 %768, label %769, label %770

769:                                              ; preds = %756
  br label %785

770:                                              ; preds = %756
  %771 = load i8**, i8*** %4, align 8
  %772 = load i32, i32* %10, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds i8*, i8** %771, i64 %773
  %775 = load i8*, i8** %774, align 8
  %776 = call i8* @strchr(i8* %775, i32 61) #12
  %777 = icmp eq i8* %776, null
  br i1 %777, label %778, label %779

778:                                              ; preds = %770
  br label %785

779:                                              ; preds = %770
  %780 = load i32, i32* %12, align 4
  %781 = add nsw i32 %780, 1
  store i32 %781, i32* %12, align 4
  br label %782

782:                                              ; preds = %779
  %783 = load i32, i32* %10, align 4
  %784 = add nsw i32 %783, 1
  store i32 %784, i32* %10, align 4
  br label %752

785:                                              ; preds = %778, %769, %752
  %786 = load i32, i32* %12, align 4
  %787 = icmp sgt i32 %786, 0
  br i1 %787, label %788, label %794

788:                                              ; preds = %785
  %789 = load i8**, i8*** %11, align 8
  store i8** %789, i8*** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 7), align 8
  %790 = load i32, i32* %12, align 4
  store i32 %790, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 8), align 8
  %791 = load i32, i32* %12, align 4
  %792 = load i32, i32* %5, align 4
  %793 = add nsw i32 %792, %791
  store i32 %793, i32* %5, align 4
  br label %794

794:                                              ; preds = %788, %785
  %795 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %795) #10
  %796 = bitcast i8*** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %796) #10
  %797 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %797) #10
  br label %1086

798:                                              ; preds = %733, %725
  %799 = load i8**, i8*** %4, align 8
  %800 = load i32, i32* %5, align 4
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds i8*, i8** %799, i64 %801
  %803 = load i8*, i8** %802, align 8
  %804 = call i32 @strcmp(i8* %803, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1123, i32 0, i32 0)) #12
  %805 = icmp ne i32 %804, 0
  br i1 %805, label %817, label %806

806:                                              ; preds = %798
  %807 = load i32, i32* %6, align 4
  %808 = icmp ne i32 %807, 0
  br i1 %808, label %817, label %809

809:                                              ; preds = %806
  %810 = load i8**, i8*** %4, align 8
  %811 = load i32, i32* %5, align 4
  %812 = add nsw i32 %811, 1
  store i32 %812, i32* %5, align 4
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds i8*, i8** %810, i64 %813
  %815 = load i8*, i8** %814, align 8
  %816 = call i32 @atoi(i8* %815) #12
  store i32 %816, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 10), align 8
  br label %1085

817:                                              ; preds = %806, %798
  %818 = load i8**, i8*** %4, align 8
  %819 = load i32, i32* %5, align 4
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds i8*, i8** %818, i64 %820
  %822 = load i8*, i8** %821, align 8
  %823 = call i32 @strcmp(i8* %822, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1124, i32 0, i32 0)) #12
  %824 = icmp ne i32 %823, 0
  br i1 %824, label %836, label %825

825:                                              ; preds = %817
  %826 = load i32, i32* %6, align 4
  %827 = icmp ne i32 %826, 0
  br i1 %827, label %836, label %828

828:                                              ; preds = %825
  %829 = load i8**, i8*** %4, align 8
  %830 = load i32, i32* %5, align 4
  %831 = add nsw i32 %830, 1
  store i32 %831, i32* %5, align 4
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds i8*, i8** %829, i64 %832
  %834 = load i8*, i8** %833, align 8
  %835 = call i32 @atoi(i8* %834) #12
  store i32 %835, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 11), align 4
  br label %1084

836:                                              ; preds = %825, %817
  %837 = load i8**, i8*** %4, align 8
  %838 = load i32, i32* %5, align 4
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds i8*, i8** %837, i64 %839
  %841 = load i8*, i8** %840, align 8
  %842 = call i32 @strcmp(i8* %841, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1125, i32 0, i32 0)) #12
  %843 = icmp ne i32 %842, 0
  br i1 %843, label %855, label %844

844:                                              ; preds = %836
  %845 = load i32, i32* %6, align 4
  %846 = icmp ne i32 %845, 0
  br i1 %846, label %855, label %847

847:                                              ; preds = %844
  %848 = load i8**, i8*** %4, align 8
  %849 = load i32, i32* %5, align 4
  %850 = add nsw i32 %849, 1
  store i32 %850, i32* %5, align 4
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds i8*, i8** %848, i64 %851
  %853 = load i8*, i8** %852, align 8
  %854 = call i32 @atoi(i8* %853) #12
  store i32 %854, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 12), align 8
  br label %1083

855:                                              ; preds = %844, %836
  %856 = load i8**, i8*** %4, align 8
  %857 = load i32, i32* %5, align 4
  %858 = sext i32 %857 to i64
  %859 = getelementptr inbounds i8*, i8** %856, i64 %858
  %860 = load i8*, i8** %859, align 8
  %861 = call i32 @strcmp(i8* %860, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1126, i32 0, i32 0)) #12
  %862 = icmp ne i32 %861, 0
  br i1 %862, label %875, label %863

863:                                              ; preds = %855
  %864 = load i32, i32* %6, align 4
  %865 = icmp ne i32 %864, 0
  br i1 %865, label %875, label %866

866:                                              ; preds = %863
  %867 = load i8**, i8*** %4, align 8
  %868 = load i32, i32* %5, align 4
  %869 = add nsw i32 %868, 1
  store i32 %869, i32* %5, align 4
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds i8*, i8** %867, i64 %870
  %872 = load i8*, i8** %871, align 8
  %873 = call double @atof(i8* %872) #12
  %874 = fptrunc double %873 to float
  store float %874, float* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 13), align 4
  br label %1082

875:                                              ; preds = %863, %855
  %876 = load i8**, i8*** %4, align 8
  %877 = load i32, i32* %5, align 4
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds i8*, i8** %876, i64 %878
  %880 = load i8*, i8** %879, align 8
  %881 = call i32 @strcmp(i8* %880, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1127, i32 0, i32 0)) #12
  %882 = icmp ne i32 %881, 0
  br i1 %882, label %886, label %883

883:                                              ; preds = %875
  %884 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %885 = or i32 %884, 4
  store i32 %885, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  br label %1081

886:                                              ; preds = %875
  %887 = load i8**, i8*** %4, align 8
  %888 = load i32, i32* %5, align 4
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds i8*, i8** %887, i64 %889
  %891 = load i8*, i8** %890, align 8
  %892 = call i32 @strcmp(i8* %891, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1128, i32 0, i32 0)) #12
  %893 = icmp ne i32 %892, 0
  br i1 %893, label %897, label %894

894:                                              ; preds = %886
  %895 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %896 = or i32 %895, 32
  store i32 %896, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  br label %1080

897:                                              ; preds = %886
  %898 = load i8**, i8*** %4, align 8
  %899 = load i32, i32* %5, align 4
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds i8*, i8** %898, i64 %900
  %902 = load i8*, i8** %901, align 8
  %903 = call i32 @strcmp(i8* %902, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1129, i32 0, i32 0)) #12
  %904 = icmp ne i32 %903, 0
  br i1 %904, label %908, label %905

905:                                              ; preds = %897
  %906 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %907 = or i32 %906, 64
  store i32 %907, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  br label %1079

908:                                              ; preds = %897
  %909 = load i8**, i8*** %4, align 8
  %910 = load i32, i32* %5, align 4
  %911 = sext i32 %910 to i64
  %912 = getelementptr inbounds i8*, i8** %909, i64 %911
  %913 = load i8*, i8** %912, align 8
  %914 = call i32 @strcmp(i8* %913, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1130, i32 0, i32 0)) #12
  %915 = icmp ne i32 %914, 0
  br i1 %915, label %919, label %916

916:                                              ; preds = %908
  %917 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %918 = or i32 %917, 128
  store i32 %918, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  br label %1078

919:                                              ; preds = %908
  %920 = load i8**, i8*** %4, align 8
  %921 = load i32, i32* %5, align 4
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds i8*, i8** %920, i64 %922
  %924 = load i8*, i8** %923, align 8
  %925 = call i32 @strcmp(i8* %924, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1131, i32 0, i32 0)) #12
  %926 = icmp ne i32 %925, 0
  br i1 %926, label %930, label %927

927:                                              ; preds = %919
  %928 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %929 = or i32 %928, 2
  store i32 %929, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  br label %1077

930:                                              ; preds = %919
  %931 = load i8**, i8*** %4, align 8
  %932 = load i32, i32* %5, align 4
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds i8*, i8** %931, i64 %933
  %935 = load i8*, i8** %934, align 8
  %936 = call i32 @strcmp(i8* %935, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1132, i32 0, i32 0)) #12
  %937 = icmp ne i32 %936, 0
  br i1 %937, label %941, label %938

938:                                              ; preds = %930
  %939 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %940 = or i32 %939, 16
  store i32 %940, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  br label %1076

941:                                              ; preds = %930
  %942 = load i8**, i8*** %4, align 8
  %943 = load i32, i32* %5, align 4
  %944 = sext i32 %943 to i64
  %945 = getelementptr inbounds i8*, i8** %942, i64 %944
  %946 = load i8*, i8** %945, align 8
  %947 = call i32 @strcmp(i8* %946, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1133, i32 0, i32 0)) #12
  %948 = icmp ne i32 %947, 0
  br i1 %948, label %952, label %949

949:                                              ; preds = %941
  %950 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %951 = or i32 %950, 512
  store i32 %951, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  br label %1075

952:                                              ; preds = %941
  %953 = load i8**, i8*** %4, align 8
  %954 = load i32, i32* %5, align 4
  %955 = sext i32 %954 to i64
  %956 = getelementptr inbounds i8*, i8** %953, i64 %955
  %957 = load i8*, i8** %956, align 8
  %958 = call i32 @strcmp(i8* %957, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @1134, i32 0, i32 0)) #12
  %959 = icmp ne i32 %958, 0
  br i1 %959, label %963, label %960

960:                                              ; preds = %952
  %961 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %962 = or i32 %961, 1024
  store i32 %962, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  br label %1074

963:                                              ; preds = %952
  %964 = load i8**, i8*** %4, align 8
  %965 = load i32, i32* %5, align 4
  %966 = sext i32 %965 to i64
  %967 = getelementptr inbounds i8*, i8** %964, i64 %966
  %968 = load i8*, i8** %967, align 8
  %969 = call i32 @strcmp(i8* %968, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1135, i32 0, i32 0)) #12
  %970 = icmp ne i32 %969, 0
  br i1 %970, label %971, label %979

971:                                              ; preds = %963
  %972 = load i8**, i8*** %4, align 8
  %973 = load i32, i32* %5, align 4
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds i8*, i8** %972, i64 %974
  %976 = load i8*, i8** %975, align 8
  %977 = call i32 @strcmp(i8* %976, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1136, i32 0, i32 0)) #12
  %978 = icmp ne i32 %977, 0
  br i1 %978, label %985, label %979

979:                                              ; preds = %971, %963
  %980 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %980) #10
  %981 = call i8* @1487()
  store i8* %981, i8** %13, align 8
  %982 = load i8*, i8** %13, align 8
  %983 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1137, i32 0, i32 0), i8* %982)
  %984 = load i8*, i8** %13, align 8
  call void @sdsfree(i8* %984)
  call void @exit(i32 0) #14
  unreachable

985:                                              ; preds = %971
  %986 = load i8**, i8*** %4, align 8
  %987 = load i32, i32* %5, align 4
  %988 = sext i32 %987 to i64
  %989 = getelementptr inbounds i8*, i8** %986, i64 %988
  %990 = load i8*, i8** %989, align 8
  %991 = call i32 @strcmp(i8* %990, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1138, i32 0, i32 0)) #12
  %992 = icmp ne i32 %991, 0
  br i1 %992, label %994, label %993

993:                                              ; preds = %985
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 53), align 4
  br label %1072

994:                                              ; preds = %985
  %995 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 0), align 8
  %996 = icmp ne i8* %995, null
  br i1 %996, label %997, label %1052

997:                                              ; preds = %994
  %998 = load i8**, i8*** %4, align 8
  %999 = load i32, i32* %5, align 4
  %1000 = sext i32 %999 to i64
  %1001 = getelementptr inbounds i8*, i8** %998, i64 %1000
  %1002 = load i8*, i8** %1001, align 8
  %1003 = getelementptr inbounds i8, i8* %1002, i64 0
  %1004 = load i8, i8* %1003, align 1
  %1005 = sext i8 %1004 to i32
  %1006 = icmp ne i32 %1005, 45
  br i1 %1006, label %1007, label %1052

1007:                                             ; preds = %997
  %1008 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 1), align 8
  %1009 = icmp eq i32 %1008, 0
  br i1 %1009, label %1010, label %1051

1010:                                             ; preds = %1007
  %1011 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1011) #10
  %1012 = load i32, i32* %5, align 4
  %1013 = add nsw i32 %1012, 1
  store i32 %1013, i32* %14, align 4
  br label %1014

1014:                                             ; preds = %1030, %1010
  %1015 = load i32, i32* %14, align 4
  %1016 = load i32, i32* %3, align 4
  %1017 = icmp slt i32 %1015, %1016
  br i1 %1017, label %1018, label %1028

1018:                                             ; preds = %1014
  %1019 = load i8**, i8*** %4, align 8
  %1020 = load i32, i32* %14, align 4
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds i8*, i8** %1019, i64 %1021
  %1023 = load i8*, i8** %1022, align 8
  %1024 = getelementptr inbounds i8, i8* %1023, i64 0
  %1025 = load i8, i8* %1024, align 1
  %1026 = sext i8 %1025 to i32
  %1027 = icmp ne i32 %1026, 45
  br label %1028

1028:                                             ; preds = %1018, %1014
  %1029 = phi i1 [ false, %1014 ], [ %1027, %1018 ]
  br i1 %1029, label %1030, label %1033

1030:                                             ; preds = %1028
  %1031 = load i32, i32* %14, align 4
  %1032 = add nsw i32 %1031, 1
  store i32 %1032, i32* %14, align 4
  br label %1014

1033:                                             ; preds = %1028
  %1034 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1034) #10
  %1035 = load i32, i32* %14, align 4
  %1036 = load i32, i32* %5, align 4
  %1037 = sub nsw i32 %1035, %1036
  store i32 %1037, i32* %15, align 4
  %1038 = load i32, i32* %15, align 4
  store i32 %1038, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 1), align 8
  %1039 = load i8**, i8*** %4, align 8
  %1040 = load i32, i32* %5, align 4
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds i8*, i8** %1039, i64 %1041
  store i8** %1042, i8*** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 2), align 8
  %1043 = load i32, i32* %15, align 4
  %1044 = icmp sgt i32 %1043, 1
  br i1 %1044, label %1045, label %1048

1045:                                             ; preds = %1033
  %1046 = load i32, i32* %14, align 4
  %1047 = sub nsw i32 %1046, 1
  store i32 %1047, i32* %5, align 4
  br label %1048

1048:                                             ; preds = %1045, %1033
  %1049 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1049) #10
  %1050 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1050) #10
  br label %1051

1051:                                             ; preds = %1048, %1007
  br label %1071

1052:                                             ; preds = %997, %994
  %1053 = load i8**, i8*** %4, align 8
  %1054 = load i32, i32* %5, align 4
  %1055 = sext i32 %1054 to i64
  %1056 = getelementptr inbounds i8*, i8** %1053, i64 %1055
  %1057 = load i8*, i8** %1056, align 8
  %1058 = getelementptr inbounds i8, i8* %1057, i64 0
  %1059 = load i8, i8* %1058, align 1
  %1060 = sext i8 %1059 to i32
  %1061 = icmp eq i32 %1060, 45
  br i1 %1061, label %1062, label %1070

1062:                                             ; preds = %1052
  %1063 = load %1*, %1** @stderr, align 8
  %1064 = load i8**, i8*** %4, align 8
  %1065 = load i32, i32* %5, align 4
  %1066 = sext i32 %1065 to i64
  %1067 = getelementptr inbounds i8*, i8** %1064, i64 %1066
  %1068 = load i8*, i8** %1067, align 8
  %1069 = call i32 (%1*, i8*, ...) @fprintf(%1* %1063, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @1139, i32 0, i32 0), i8* %1068)
  call void @exit(i32 1) #14
  unreachable

1070:                                             ; preds = %1052
  store i32 2, i32* %16, align 4
  br label %1134

1071:                                             ; preds = %1051
  br label %1072

1072:                                             ; preds = %1071, %993
  br label %1073

1073:                                             ; preds = %1072
  br label %1074

1074:                                             ; preds = %1073, %960
  br label %1075

1075:                                             ; preds = %1074, %949
  br label %1076

1076:                                             ; preds = %1075, %938
  br label %1077

1077:                                             ; preds = %1076, %927
  br label %1078

1078:                                             ; preds = %1077, %916
  br label %1079

1079:                                             ; preds = %1078, %905
  br label %1080

1080:                                             ; preds = %1079, %894
  br label %1081

1081:                                             ; preds = %1080, %883
  br label %1082

1082:                                             ; preds = %1081, %866
  br label %1083

1083:                                             ; preds = %1082, %847
  br label %1084

1084:                                             ; preds = %1083, %828
  br label %1085

1085:                                             ; preds = %1084, %809
  br label %1086

1086:                                             ; preds = %1085, %794
  br label %1087

1087:                                             ; preds = %1086, %718
  br label %1088

1088:                                             ; preds = %1087, %700
  br label %1089

1089:                                             ; preds = %1088, %682
  br label %1090

1090:                                             ; preds = %1089, %663
  br label %1091

1091:                                             ; preds = %1090, %651
  br label %1092

1092:                                             ; preds = %1091, %627
  br label %1093

1093:                                             ; preds = %1092, %575
  br label %1094

1094:                                             ; preds = %1093, %558
  br label %1095

1095:                                             ; preds = %1094, %546
  br label %1096

1096:                                             ; preds = %1095, %537
  br label %1097

1097:                                             ; preds = %1096, %528
  br label %1098

1098:                                             ; preds = %1097, %513
  br label %1099

1099:                                             ; preds = %1098, %501
  br label %1100

1100:                                             ; preds = %1099, %485
  br label %1101

1101:                                             ; preds = %1100, %476
  br label %1102

1102:                                             ; preds = %1101, %467
  br label %1103

1103:                                             ; preds = %1102, %451
  br label %1104

1104:                                             ; preds = %1103, %439
  br label %1105

1105:                                             ; preds = %1104, %424
  br label %1106

1106:                                             ; preds = %1105, %405
  br label %1107

1107:                                             ; preds = %1106, %387
  br label %1108

1108:                                             ; preds = %1107, %375
  br label %1109

1109:                                             ; preds = %1108, %366
  br label %1110

1110:                                             ; preds = %1109, %357
  br label %1111

1111:                                             ; preds = %1110, %348
  br label %1112

1112:                                             ; preds = %1111, %332
  br label %1113

1113:                                             ; preds = %1112, %320
  br label %1114

1114:                                             ; preds = %1113, %310
  br label %1115

1115:                                             ; preds = %1114, %301
  br label %1116

1116:                                             ; preds = %1115, %292
  br label %1117

1117:                                             ; preds = %1116, %283
  br label %1118

1118:                                             ; preds = %1117, %274
  br label %1119

1119:                                             ; preds = %1118, %265
  br label %1120

1120:                                             ; preds = %1119, %250
  br label %1121

1121:                                             ; preds = %1120, %232
  br label %1122

1122:                                             ; preds = %1121, %214
  br label %1123

1123:                                             ; preds = %1122, %194
  br label %1124

1124:                                             ; preds = %1123, %185
  br label %1125

1125:                                             ; preds = %1124, %169
  br label %1126

1126:                                             ; preds = %1125, %145
  br label %1127

1127:                                             ; preds = %1126, %126
  br label %1128

1128:                                             ; preds = %1127, %108
  br label %1129

1129:                                             ; preds = %1128, %89
  br label %1130

1130:                                             ; preds = %1129, %77
  br label %1131

1131:                                             ; preds = %1130, %68
  br label %1132

1132:                                             ; preds = %1131, %59
  br label %1133

1133:                                             ; preds = %1132, %39
  store i32 0, i32* %16, align 4
  br label %1134

1134:                                             ; preds = %1133, %1070
  %1135 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1135) #10
  %1136 = load i32, i32* %16, align 4
  switch i32 %1136, label %1167 [
    i32 0, label %1137
    i32 2, label %1141
  ]

1137:                                             ; preds = %1134
  br label %1138

1138:                                             ; preds = %1137
  %1139 = load i32, i32* %5, align 4
  %1140 = add nsw i32 %1139, 1
  store i32 %1140, i32* %5, align 4
  br label %18

1141:                                             ; preds = %1134, %18
  %1142 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  %1143 = icmp ne i32 %1142, 0
  br i1 %1143, label %1144, label %1155

1144:                                             ; preds = %1141
  %1145 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 44), align 8
  %1146 = icmp eq i8* %1145, null
  br i1 %1146, label %1147, label %1155

1147:                                             ; preds = %1144
  %1148 = load %1*, %1** @stderr, align 8
  %1149 = call i32 (%1*, i8*, ...) @fprintf(%1* %1148, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @1140, i32 0, i32 0))
  %1150 = load %1*, %1** @stderr, align 8
  %1151 = load i8**, i8*** %4, align 8
  %1152 = getelementptr inbounds i8*, i8** %1151, i64 0
  %1153 = load i8*, i8** %1152, align 8
  %1154 = call i32 (%1*, i8*, ...) @fprintf(%1* %1150, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1141, i32 0, i32 0), i8* %1153)
  call void @exit(i32 1) #14
  unreachable

1155:                                             ; preds = %1144, %1141
  %1156 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 52), align 8
  %1157 = icmp ne i32 %1156, 0
  br i1 %1157, label %1164, label %1158

1158:                                             ; preds = %1155
  %1159 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %1160 = icmp ne i8* %1159, null
  br i1 %1160, label %1161, label %1164

1161:                                             ; preds = %1158
  %1162 = load %1*, %1** @stderr, align 8
  %1163 = call i32 @fputs(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @1142, i32 0, i32 0), %1* %1162)
  br label %1164

1164:                                             ; preds = %1161, %1158, %1155
  %1165 = load i32, i32* %5, align 4
  store i32 1, i32* %16, align 4
  %1166 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1166) #10
  ret i32 %1165

1167:                                             ; preds = %1134
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 (i32, i8**)* @1386() #0 {
  %1 = alloca i32 (i32, i8**)*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32 (i32, i8**)*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %9, align 8
  %8 = alloca i32, align 4
  %9 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  store i32 13, i32* %3, align 4
  %11 = bitcast i32 (i32, i8**)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  store i32 (i32, i8**)* null, i32 (i32, i8**)** %4, align 8
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 0), align 8
  store i8* %13, i8** %5, align 8
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #10
  %15 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 1), align 8
  store i32 %15, i32* %6, align 4
  store i32 0, i32* %2, align 4
  br label %16

16:                                               ; preds = %62, %0
  %17 = load i32, i32* %2, align 4
  %18 = load i32, i32* %3, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %65

20:                                               ; preds = %16
  %21 = bitcast %9* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %21) #10
  %22 = load i32, i32* %2, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [13 x %9], [13 x %9]* @clusterManagerCommands, i64 0, i64 %23
  %25 = bitcast %9* %7 to i8*
  %26 = bitcast %9* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 40, i1 false)
  %27 = getelementptr inbounds %9, %9* %7, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = load i8*, i8** %5, align 8
  %30 = call i32 @strcmp(i8* %28, i8* %29) #12
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %57, label %32

32:                                               ; preds = %20
  %33 = getelementptr inbounds %9, %9* %7, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %32
  %37 = load i32, i32* %6, align 4
  %38 = getelementptr inbounds %9, %9* %7, i32 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = icmp ne i32 %37, %39
  br i1 %40, label %51, label %41

41:                                               ; preds = %36, %32
  %42 = getelementptr inbounds %9, %9* %7, i32 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %54

45:                                               ; preds = %41
  %46 = load i32, i32* %6, align 4
  %47 = getelementptr inbounds %9, %9* %7, i32 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = mul nsw i32 %48, -1
  %50 = icmp slt i32 %46, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %45, %36
  %52 = load %1*, %1** @stderr, align 8
  %53 = call i32 (%1*, i8*, ...) @fprintf(%1* %52, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @1157, i32 0, i32 0))
  store i32 (i32, i8**)* null, i32 (i32, i8**)** %1, align 8
  store i32 1, i32* %8, align 4
  br label %58

54:                                               ; preds = %45, %41
  %55 = getelementptr inbounds %9, %9* %7, i32 0, i32 1
  %56 = load i32 (i32, i8**)*, i32 (i32, i8**)** %55, align 8
  store i32 (i32, i8**)* %56, i32 (i32, i8**)** %4, align 8
  br label %57

57:                                               ; preds = %54, %20
  store i32 0, i32* %8, align 4
  br label %58

58:                                               ; preds = %57, %51
  %59 = bitcast %9* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %59) #10
  %60 = load i32, i32* %8, align 4
  switch i32 %60, label %73 [
    i32 0, label %61
  ]

61:                                               ; preds = %58
  br label %62

62:                                               ; preds = %61
  %63 = load i32, i32* %2, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %2, align 4
  br label %16

65:                                               ; preds = %16
  %66 = load i32 (i32, i8**)*, i32 (i32, i8**)** %4, align 8
  %67 = icmp ne i32 (i32, i8**)* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = load %1*, %1** @stderr, align 8
  %70 = call i32 (%1*, i8*, ...) @fprintf(%1* %69, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @1158, i32 0, i32 0))
  br label %71

71:                                               ; preds = %68, %65
  %72 = load i32 (i32, i8**)*, i32 (i32, i8**)** %4, align 8
  store i32 (i32, i8**)* %72, i32 (i32, i8**)** %1, align 8
  store i32 1, i32* %8, align 4
  br label %73

73:                                               ; preds = %71, %58
  %74 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %74) #10
  %75 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #10
  %76 = bitcast i32 (i32, i8**)** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #10
  %77 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %77) #10
  %78 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %78) #10
  %79 = load i32 (i32, i8**)*, i32 (i32, i8**)** %1, align 8
  ret i32 (i32, i8**)* %79
}

; Function Attrs: nounwind uwtable
define internal void @1387(i32 (i32, i8**)* %0) #0 {
  %2 = alloca i32 (i32, i8**)*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  store i32 (i32, i8**)* %0, i32 (i32, i8**)** %2, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #10
  %6 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 1), align 8
  store i32 %6, i32* %3, align 4
  %7 = bitcast i8*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = load i8**, i8*** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 2), align 8
  store i8** %8, i8*** %4, align 8
  store %24* null, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %9 = load i32 (i32, i8**)*, i32 (i32, i8**)** %2, align 8
  %10 = load i32, i32* %3, align 4
  %11 = load i8**, i8*** %4, align 8
  %12 = call i32 %9(i32 %10, i8** %11)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %1
  br label %16

15:                                               ; preds = %1
  call void @1491()
  call void @exit(i32 0) #14
  unreachable

16:                                               ; preds = %14
  call void @1491()
  %17 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  call void @sdsfree(i8* %17)
  %18 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 42), align 8
  call void @sdsfree(i8* %18)
  call void @exit(i32 1) #14
  unreachable

19:                                               ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @1388(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %6 = load %10*, %10** @736, align 8
  %7 = icmp eq %10* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = load i32, i32* %3, align 4
  %10 = and i32 %9, 1
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %102

12:                                               ; preds = %8, %1
  %13 = load %10*, %10** @736, align 8
  %14 = icmp ne %10* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = load %10*, %10** @736, align 8
  call void @redisFree(%10* %16)
  br label %17

17:                                               ; preds = %15, %12
  %18 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 2), align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %17
  %21 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  %22 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  %23 = call %10* @redisConnect(i8* %21, i32 %22)
  store %10* %23, %10** @736, align 8
  br label %27

24:                                               ; preds = %17
  %25 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 2), align 8
  %26 = call %10* @redisConnectUnix(i8* %25)
  store %10* %26, %10** @736, align 8
  br label %27

27:                                               ; preds = %24, %20
  %28 = load %10*, %10** @736, align 8
  %29 = getelementptr inbounds %10, %10* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %53, label %32

32:                                               ; preds = %27
  %33 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 3), align 8
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %53

35:                                               ; preds = %32
  %36 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #10
  store i8* null, i8** %4, align 8
  %37 = load %10*, %10** @736, align 8
  %38 = call i32 @1425(%10* %37, i8** %4)
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = load i8*, i8** %4, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %48

43:                                               ; preds = %40
  %44 = load %1*, %1** @stderr, align 8
  %45 = load i8*, i8** %4, align 8
  %46 = call i32 (%1*, i8*, ...) @fprintf(%1* %44, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1159, i32 0, i32 0), i8* %45)
  store %10* null, %10** @736, align 8
  %47 = load %10*, %10** @736, align 8
  call void @redisFree(%10* %47)
  store i32 -1, i32* %2, align 4
  store i32 1, i32* %5, align 4
  br label %49

48:                                               ; preds = %40, %35
  store i32 0, i32* %5, align 4
  br label %49

49:                                               ; preds = %48, %43
  %50 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #10
  %51 = load i32, i32* %5, align 4
  switch i32 %51, label %105 [
    i32 0, label %52
    i32 1, label %103
  ]

52:                                               ; preds = %49
  br label %53

53:                                               ; preds = %52, %32, %27
  %54 = load %10*, %10** @736, align 8
  %55 = getelementptr inbounds %10, %10* %54, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %85

58:                                               ; preds = %53
  %59 = load i32, i32* %3, align 4
  %60 = and i32 %59, 2
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %83, label %62

62:                                               ; preds = %58
  %63 = load %1*, %1** @stderr, align 8
  %64 = call i32 (%1*, i8*, ...) @fprintf(%1* %63, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @789, i32 0, i32 0))
  %65 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 2), align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %67, label %75

67:                                               ; preds = %62
  %68 = load %1*, %1** @stderr, align 8
  %69 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  %70 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  %71 = load %10*, %10** @736, align 8
  %72 = getelementptr inbounds %10, %10* %71, i32 0, i32 2
  %73 = getelementptr inbounds [128 x i8], [128 x i8]* %72, i32 0, i32 0
  %74 = call i32 (%1*, i8*, ...) @fprintf(%1* %68, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @790, i32 0, i32 0), i8* %69, i32 %70, i8* %73)
  br label %82

75:                                               ; preds = %62
  %76 = load %1*, %1** @stderr, align 8
  %77 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 2), align 8
  %78 = load %10*, %10** @736, align 8
  %79 = getelementptr inbounds %10, %10* %78, i32 0, i32 2
  %80 = getelementptr inbounds [128 x i8], [128 x i8]* %79, i32 0, i32 0
  %81 = call i32 (%1*, i8*, ...) @fprintf(%1* %76, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1160, i32 0, i32 0), i8* %77, i8* %80)
  br label %82

82:                                               ; preds = %75, %67
  br label %83

83:                                               ; preds = %82, %58
  %84 = load %10*, %10** @736, align 8
  call void @redisFree(%10* %84)
  store %10* null, %10** @736, align 8
  store i32 -1, i32* %2, align 4
  br label %103

85:                                               ; preds = %53
  %86 = load %10*, %10** @736, align 8
  %87 = getelementptr inbounds %10, %10* %86, i32 0, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = call i32 @anetKeepAlive(i8* null, i32 %88, i32 15)
  %90 = call i32 @1492()
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %85
  store i32 -1, i32* %2, align 4
  br label %103

93:                                               ; preds = %85
  %94 = call i32 @1493()
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  store i32 -1, i32* %2, align 4
  br label %103

97:                                               ; preds = %93
  %98 = call i32 @1494()
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  store i32 -1, i32* %2, align 4
  br label %103

101:                                              ; preds = %97
  br label %102

102:                                              ; preds = %101, %8
  store i32 0, i32* %2, align 4
  br label %103

103:                                              ; preds = %102, %100, %96, %92, %83, %49
  %104 = load i32, i32* %2, align 4
  ret i32 %104

105:                                              ; preds = %49
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1389() #0 {
  %1 = alloca %31*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca double, align 8
  %10 = alloca i64, align 8
  %11 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  store i64 0, i64* %4, align 8
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  store i64 0, i64* %5, align 8
  %16 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #10
  store i64 0, i64* %6, align 8
  %17 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10
  store i64 0, i64* %7, align 8
  %18 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #10
  %19 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %0
  %22 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %23 = sdiv i64 %22, 1000
  br label %25

24:                                               ; preds = %0
  br label %25

25:                                               ; preds = %24, %21
  %26 = phi i64 [ %23, %21 ], [ 15000, %24 ]
  store i64 %26, i64* %8, align 8
  %27 = bitcast double* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #10
  %28 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #10
  %29 = call i64 @1495()
  store i64 %29, i64* %10, align 8
  %30 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %25
  store i64 1000, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  br label %36

33:                                               ; preds = %25
  %34 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %35 = sdiv i64 %34, 1000
  store i64 %35, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  br label %36

36:                                               ; preds = %33, %32
  %37 = load %10*, %10** @736, align 8
  %38 = icmp ne %10* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  call void @exit(i32 1) #14
  unreachable

40:                                               ; preds = %36
  br label %41

41:                                               ; preds = %134, %40
  br label %42

42:                                               ; preds = %41
  %43 = call i64 @1495()
  store i64 %43, i64* %2, align 8
  %44 = load %10*, %10** @736, align 8
  %45 = call %31* (%10*, i8*, ...) @1479(%10* %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @404, i32 0, i32 0))
  store %31* %45, %31** %1, align 8
  %46 = load %31*, %31** %1, align 8
  %47 = icmp eq %31* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = load %1*, %1** @stderr, align 8
  %50 = call i32 (%1*, i8*, ...) @fprintf(%1* %49, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @738, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

51:                                               ; preds = %42
  %52 = call i64 @1495()
  %53 = load i64, i64* %2, align 8
  %54 = sub nsw i64 %52, %53
  store i64 %54, i64* %3, align 8
  %55 = load %31*, %31** %1, align 8
  %56 = bitcast %31* %55 to i8*
  call void @freeReplyObject(i8* %56)
  %57 = load i64, i64* %7, align 8
  %58 = add nsw i64 %57, 1
  store i64 %58, i64* %7, align 8
  %59 = load i64, i64* %7, align 8
  %60 = icmp eq i64 %59, 1
  br i1 %60, label %61, label %65

61:                                               ; preds = %51
  %62 = load i64, i64* %3, align 8
  store i64 %62, i64* %6, align 8
  store i64 %62, i64* %5, align 8
  store i64 %62, i64* %4, align 8
  %63 = load i64, i64* %3, align 8
  %64 = sitofp i64 %63 to double
  store double %64, double* %9, align 8
  br label %86

65:                                               ; preds = %51
  %66 = load i64, i64* %3, align 8
  %67 = load i64, i64* %4, align 8
  %68 = icmp slt i64 %66, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = load i64, i64* %3, align 8
  store i64 %70, i64* %4, align 8
  br label %71

71:                                               ; preds = %69, %65
  %72 = load i64, i64* %3, align 8
  %73 = load i64, i64* %5, align 8
  %74 = icmp sgt i64 %72, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = load i64, i64* %3, align 8
  store i64 %76, i64* %5, align 8
  br label %77

77:                                               ; preds = %75, %71
  %78 = load i64, i64* %3, align 8
  %79 = load i64, i64* %6, align 8
  %80 = add nsw i64 %79, %78
  store i64 %80, i64* %6, align 8
  %81 = load i64, i64* %6, align 8
  %82 = sitofp i64 %81 to double
  %83 = load i64, i64* %7, align 8
  %84 = sitofp i64 %83 to double
  %85 = fdiv double %82, %84
  store double %85, double* %9, align 8
  br label %86

86:                                               ; preds = %77, %61
  %87 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %95

89:                                               ; preds = %86
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1164, i32 0, i32 0))
  %91 = load i64, i64* %4, align 8
  %92 = load i64, i64* %5, align 8
  %93 = load double, double* %9, align 8
  %94 = load i64, i64* %7, align 8
  call void @1496(i64 %91, i64 %92, double %93, i64 %94)
  br label %116

95:                                               ; preds = %86
  %96 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 18), align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %103

98:                                               ; preds = %95
  %99 = load i64, i64* %4, align 8
  %100 = load i64, i64* %5, align 8
  %101 = load double, double* %9, align 8
  %102 = load i64, i64* %7, align 8
  call void @1496(i64 %99, i64 %100, double %101, i64 %102)
  br label %115

103:                                              ; preds = %95
  %104 = call i64 @1495()
  %105 = load i64, i64* %10, align 8
  %106 = sub nsw i64 %104, %105
  %107 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %108 = icmp sgt i64 %106, %107
  br i1 %108, label %109, label %114

109:                                              ; preds = %103
  %110 = load i64, i64* %4, align 8
  %111 = load i64, i64* %5, align 8
  %112 = load double, double* %9, align 8
  %113 = load i64, i64* %7, align 8
  call void @1496(i64 %110, i64 %111, double %112, i64 %113)
  call void @exit(i32 0) #14
  unreachable

114:                                              ; preds = %103
  br label %115

115:                                              ; preds = %114, %98
  br label %116

116:                                              ; preds = %115, %89
  %117 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 18), align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %134

119:                                              ; preds = %116
  %120 = call i64 @1495()
  %121 = load i64, i64* %10, align 8
  %122 = sub nsw i64 %120, %121
  %123 = load i64, i64* %8, align 8
  %124 = icmp sgt i64 %122, %123
  br i1 %124, label %125, label %134

125:                                              ; preds = %119
  %126 = call i64 @1495()
  %127 = load i64, i64* %10, align 8
  %128 = sub nsw i64 %126, %127
  %129 = sitofp i64 %128 to float
  %130 = fdiv float %129, 1.000000e+03
  %131 = fpext float %130 to double
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1165, i32 0, i32 0), double %131)
  %133 = call i64 @1495()
  store i64 %133, i64* %10, align 8
  store i64 0, i64* %7, align 8
  store i64 0, i64* %6, align 8
  store i64 0, i64* %5, align 8
  store i64 0, i64* %4, align 8
  br label %134

134:                                              ; preds = %125, %119, %116
  %135 = call i32 @usleep(i32 10000)
  br label %41

136:                                              ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1390() #0 {
  %1 = alloca %31*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [31 x %26], align 16
  %10 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  %11 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  store i64 0, i64* %4, align 8
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  %15 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %0
  %18 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %19 = sdiv i64 %18, 1000
  br label %21

20:                                               ; preds = %0
  br label %21

21:                                               ; preds = %20, %17
  %22 = phi i64 [ %19, %17 ], [ 1000, %20 ]
  store i64 %22, i64* %5, align 8
  %23 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #10
  %24 = call i64 @1497()
  store i64 %24, i64* %6, align 8
  %25 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #10
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #10
  store i32 0, i32* %8, align 4
  %27 = bitcast [31 x %26]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 744, i8* %27) #10
  %28 = bitcast [31 x %26]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %28, i8* align 16 bitcast ([31 x %26]* @1169 to i8*), i64 744, i1 false)
  %29 = load %10*, %10** @736, align 8
  %30 = icmp ne %10* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %21
  call void @exit(i32 1) #14
  unreachable

32:                                               ; preds = %21
  br label %33

33:                                               ; preds = %97, %32
  br label %34

34:                                               ; preds = %33
  %35 = call i64 @1497()
  store i64 %35, i64* %2, align 8
  %36 = load %10*, %10** @736, align 8
  %37 = call %31* (%10*, i8*, ...) @1479(%10* %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @404, i32 0, i32 0))
  store %31* %37, %31** %1, align 8
  %38 = load %31*, %31** %1, align 8
  %39 = icmp eq %31* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = load %1*, %1** @stderr, align 8
  %42 = call i32 (%1*, i8*, ...) @fprintf(%1* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @738, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

43:                                               ; preds = %34
  %44 = call i64 @1497()
  %45 = load i64, i64* %2, align 8
  %46 = sub nsw i64 %44, %45
  store i64 %46, i64* %3, align 8
  %47 = load %31*, %31** %1, align 8
  %48 = bitcast %31* %47 to i8*
  call void @freeReplyObject(i8* %48)
  %49 = load i64, i64* %4, align 8
  %50 = add nsw i64 %49, 1
  store i64 %50, i64* %4, align 8
  store i32 0, i32* %7, align 4
  br label %51

51:                                               ; preds = %74, %43
  %52 = load i32, i32* %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [31 x %26], [31 x %26]* %9, i64 0, i64 %53
  %55 = getelementptr inbounds %26, %26* %54, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %51
  %59 = load i64, i64* %3, align 8
  %60 = load i32, i32* %7, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [31 x %26], [31 x %26]* %9, i64 0, i64 %61
  %63 = getelementptr inbounds %26, %26* %62, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp sle i64 %59, %64
  br i1 %65, label %66, label %73

66:                                               ; preds = %58, %51
  %67 = load i32, i32* %7, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [31 x %26], [31 x %26]* %9, i64 0, i64 %68
  %70 = getelementptr inbounds %26, %26* %69, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = add nsw i64 %71, 1
  store i64 %72, i64* %70, align 8
  br label %77

73:                                               ; preds = %58
  br label %74

74:                                               ; preds = %73
  %75 = load i32, i32* %7, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %7, align 4
  br label %51

77:                                               ; preds = %66
  %78 = load i64, i64* %4, align 8
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %97

80:                                               ; preds = %77
  %81 = call i64 @1497()
  %82 = load i64, i64* %6, align 8
  %83 = sub nsw i64 %81, %82
  %84 = sdiv i64 %83, 1000
  %85 = load i64, i64* %5, align 8
  %86 = icmp sgt i64 %84, %85
  br i1 %86, label %87, label %97

87:                                               ; preds = %80
  %88 = load i32, i32* %8, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %8, align 4
  %90 = srem i32 %88, 20
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %87
  call void @showLatencyDistLegend()
  br label %93

93:                                               ; preds = %92, %87
  %94 = getelementptr inbounds [31 x %26], [31 x %26]* %9, i32 0, i32 0
  %95 = load i64, i64* %4, align 8
  call void @showLatencyDistSamples(%26* %94, i64 %95)
  %96 = call i64 @1497()
  store i64 %96, i64* %6, align 8
  store i64 0, i64* %4, align 8
  br label %97

97:                                               ; preds = %93, %80, %77
  %98 = call i32 @usleep(i32 10000)
  br label %33

99:                                               ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1391() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca [1024 x i8], align 16
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  %10 = load %10*, %10** @736, align 8
  %11 = getelementptr inbounds %10, %10* %10, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %1, align 4
  %13 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = load i32, i32* %1, align 4
  %15 = call i64 @sendSync(i32 %14, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1170, i32 0, i32 0))
  store i64 %15, i64* %2, align 8
  %16 = bitcast [1024 x i8]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* %16) #10
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  %18 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  store i32 %18, i32* %4, align 4
  %19 = load i64, i64* %2, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %0
  store i64 -1, i64* %2, align 8
  call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1171, i32 0, i32 0), i8 0, i64 40, i1 false)
  store i32 1, i32* @1172, align 4
  %22 = load %1*, %1** @stderr, align 8
  %23 = call i32 (%1*, i8*, ...) @fprintf(%1* %22, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @1173, i32 0, i32 0))
  br label %28

24:                                               ; preds = %0
  %25 = load %1*, %1** @stderr, align 8
  %26 = load i64, i64* %2, align 8
  %27 = call i32 (%1*, i8*, ...) @fprintf(%1* %25, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @1174, i32 0, i32 0), i64 %26)
  br label %28

28:                                               ; preds = %24, %21
  br label %29

29:                                               ; preds = %87, %28
  %30 = load i64, i64* %2, align 8
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %32, label %88

32:                                               ; preds = %29
  %33 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #10
  %34 = load i32, i32* %1, align 4
  %35 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0
  %36 = load i64, i64* %2, align 8
  %37 = icmp ugt i64 %36, 1024
  br i1 %37, label %38, label %39

38:                                               ; preds = %32
  br label %41

39:                                               ; preds = %32
  %40 = load i64, i64* %2, align 8
  br label %41

41:                                               ; preds = %39, %38
  %42 = phi i64 [ 1024, %38 ], [ %40, %39 ]
  %43 = call i64 @read(i32 %34, i8* %35, i64 %42)
  store i64 %43, i64* %5, align 8
  %44 = load i64, i64* %5, align 8
  %45 = icmp sle i64 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = load %1*, %1** @stderr, align 8
  %48 = call i32 (%1*, i8*, ...) @fprintf(%1* %47, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @1175, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

49:                                               ; preds = %41
  %50 = load i64, i64* %5, align 8
  %51 = load i64, i64* %2, align 8
  %52 = sub i64 %51, %50
  store i64 %52, i64* %2, align 8
  %53 = load i32, i32* @1172, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %83

55:                                               ; preds = %49
  %56 = load i64, i64* %5, align 8
  %57 = icmp sge i64 %56, 40
  br i1 %57, label %58, label %63

58:                                               ; preds = %55
  %59 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0
  %60 = load i64, i64* %5, align 8
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  %62 = getelementptr inbounds i8, i8* %61, i64 -40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1171, i32 0, i32 0), i8* align 1 %62, i64 40, i1 false)
  br label %78

63:                                               ; preds = %55
  %64 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %64) #10
  %65 = load i64, i64* %5, align 8
  %66 = sub nsw i64 40, %65
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %6, align 4
  %68 = load i64, i64* %5, align 8
  %69 = getelementptr inbounds i8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1171, i32 0, i32 0), i64 %68
  %70 = load i32, i32* %6, align 4
  %71 = sext i32 %70 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1171, i32 0, i32 0), i8* align 1 %69, i64 %71, i1 false)
  %72 = load i32, i32* %6, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1171, i32 0, i32 0), i64 %73
  %75 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i32 0, i32 0
  %76 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 16 %75, i64 %76, i1 false)
  %77 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %77) #10
  br label %78

78:                                               ; preds = %63, %58
  %79 = call i32 @memcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1171, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1170, i32 0, i32 0), i64 40) #12
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  store i32 3, i32* %7, align 4
  br label %84

82:                                               ; preds = %78
  br label %83

83:                                               ; preds = %82, %49
  store i32 0, i32* %7, align 4
  br label %84

84:                                               ; preds = %83, %81
  %85 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #10
  %86 = load i32, i32* %7, align 4
  switch i32 %86, label %114 [
    i32 0, label %87
    i32 3, label %88
  ]

87:                                               ; preds = %84
  br label %29

88:                                               ; preds = %84, %29
  %89 = load i32, i32* @1172, align 4
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %100

91:                                               ; preds = %88
  %92 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %92) #10
  %93 = load i64, i64* %2, align 8
  %94 = sub i64 -1, %93
  store i64 %94, i64* %8, align 8
  %95 = load %1*, %1** @stderr, align 8
  %96 = load i64, i64* %8, align 8
  %97 = call i32 (%1*, i8*, ...) @fprintf(%1* %95, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @1176, i32 0, i32 0), i64 %96)
  %98 = call i32 @sleep(i32 1)
  call void @sendReplconf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1177, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @927, i32 0, i32 0))
  %99 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #10
  br label %103

100:                                              ; preds = %88
  %101 = load %1*, %1** @stderr, align 8
  %102 = call i32 (%1*, i8*, ...) @fprintf(%1* %101, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1178, i32 0, i32 0))
  br label %103

103:                                              ; preds = %100, %91
  store i32 2, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  br label %104

104:                                              ; preds = %107, %103
  %105 = call i32 @1498(i32 0)
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  br label %104

108:                                              ; preds = %104
  %109 = load i32, i32* %4, align 4
  store i32 %109, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %110 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %110) #10
  %111 = bitcast [1024 x i8]* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* %111) #10
  %112 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #10
  %113 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %113) #10
  ret void

114:                                              ; preds = %84
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1392(%28* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca [4096 x i8], align 16
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %28* %0, %28** %2, align 8
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  %13 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #10
  %14 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  %15 = load %28*, %28** %2, align 8
  %16 = icmp ne %28* %15, null
  br i1 %16, label %17, label %33

17:                                               ; preds = %1
  %18 = load %28*, %28** %2, align 8
  %19 = getelementptr inbounds %28, %28* %18, i32 0, i32 0
  %20 = load %10*, %10** %19, align 8
  %21 = icmp ne %10* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  br label %25

23:                                               ; preds = %17
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1198, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 6885, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @1199, i32 0, i32 0)) #14
  unreachable

24:                                               ; No predecessors!
  br label %25

25:                                               ; preds = %24, %22
  %26 = load %28*, %28** %2, align 8
  %27 = getelementptr inbounds %28, %28* %26, i32 0, i32 0
  %28 = load %10*, %10** %27, align 8
  %29 = getelementptr inbounds %10, %10* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %3, align 4
  %31 = load %28*, %28** %2, align 8
  %32 = call i8* @1502(%28* %31)
  store i8* %32, i8** %5, align 8
  br label %38

33:                                               ; preds = %1
  %34 = load %10*, %10** @736, align 8
  %35 = getelementptr inbounds %10, %10* %34, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %3, align 4
  %37 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 32), align 8
  store i8* %37, i8** %5, align 8
  br label %38

38:                                               ; preds = %33, %25
  %39 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #10
  %40 = load i32, i32* %3, align 4
  %41 = call i64 @sendSync(i32 %40, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1200, i32 0, i32 0))
  store i64 %41, i64* %6, align 8
  %42 = bitcast [4096 x i8]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* %42) #10
  %43 = load i64, i64* %6, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %38
  store i64 -1, i64* %6, align 8
  call void @llvm.memset.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1201, i32 0, i32 0), i8 0, i64 40, i1 false)
  store i32 1, i32* @1202, align 4
  %46 = load %1*, %1** @stderr, align 8
  %47 = load i8*, i8** %5, align 8
  %48 = call i32 (%1*, i8*, ...) @fprintf(%1* %46, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @1203, i32 0, i32 0), i8* %47)
  br label %54

49:                                               ; preds = %38
  %50 = load %1*, %1** @stderr, align 8
  %51 = load i64, i64* %6, align 8
  %52 = load i8*, i8** %5, align 8
  %53 = call i32 (%1*, i8*, ...) @fprintf(%1* %50, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @1204, i32 0, i32 0), i64 %51, i8* %52)
  br label %54

54:                                               ; preds = %49, %45
  %55 = load i8*, i8** %5, align 8
  %56 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0)) #12
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %54
  store i32 1, i32* %4, align 4
  br label %72

59:                                               ; preds = %54
  %60 = load i8*, i8** %5, align 8
  %61 = call i32 (i8*, i32, ...) @open64(i8* %60, i32 65, i32 420)
  store i32 %61, i32* %4, align 4
  %62 = load i32, i32* %4, align 4
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %64, label %71

64:                                               ; preds = %59
  %65 = load %1*, %1** @stderr, align 8
  %66 = load i8*, i8** %5, align 8
  %67 = call i32* @__errno_location() #13
  %68 = load i32, i32* %67, align 4
  %69 = call i8* @strerror(i32 %68) #10
  %70 = call i32 (%1*, i8*, ...) @fprintf(%1* %65, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1205, i32 0, i32 0), i8* %66, i8* %69)
  call void @exit(i32 1) #14
  unreachable

71:                                               ; preds = %59
  br label %72

72:                                               ; preds = %71, %58
  br label %73

73:                                               ; preds = %153, %72
  %74 = load i64, i64* %6, align 8
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %154

76:                                               ; preds = %73
  %77 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #10
  %78 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %78) #10
  %79 = load i32, i32* %3, align 4
  %80 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %81 = load i64, i64* %6, align 8
  %82 = icmp ugt i64 %81, 4096
  br i1 %82, label %83, label %84

83:                                               ; preds = %76
  br label %86

84:                                               ; preds = %76
  %85 = load i64, i64* %6, align 8
  br label %86

86:                                               ; preds = %84, %83
  %87 = phi i64 [ 4096, %83 ], [ %85, %84 ]
  %88 = call i64 @read(i32 %79, i8* %80, i64 %87)
  store i64 %88, i64* %8, align 8
  %89 = load i64, i64* %8, align 8
  %90 = icmp sle i64 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %86
  %92 = load %1*, %1** @stderr, align 8
  %93 = call i32 (%1*, i8*, ...) @fprintf(%1* %92, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @1206, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

94:                                               ; preds = %86
  %95 = load i32, i32* %4, align 4
  %96 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %97 = load i64, i64* %8, align 8
  %98 = call i64 @write(i32 %95, i8* %96, i64 %97)
  store i64 %98, i64* %9, align 8
  %99 = load i64, i64* %9, align 8
  %100 = load i64, i64* %8, align 8
  %101 = icmp ne i64 %99, %100
  br i1 %101, label %102, label %114

102:                                              ; preds = %94
  %103 = load %1*, %1** @stderr, align 8
  %104 = load i64, i64* %9, align 8
  %105 = icmp eq i64 %104, -1
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = call i32* @__errno_location() #13
  %108 = load i32, i32* %107, align 4
  %109 = call i8* @strerror(i32 %108) #10
  br label %111

110:                                              ; preds = %102
  br label %111

111:                                              ; preds = %110, %106
  %112 = phi i8* [ %109, %106 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @1208, i32 0, i32 0), %110 ]
  %113 = call i32 (%1*, i8*, ...) @fprintf(%1* %103, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @1207, i32 0, i32 0), i8* %112)
  call void @exit(i32 1) #14
  unreachable

114:                                              ; preds = %94
  %115 = load i64, i64* %8, align 8
  %116 = load i64, i64* %6, align 8
  %117 = sub i64 %116, %115
  store i64 %117, i64* %6, align 8
  %118 = load i32, i32* @1202, align 4
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %148

120:                                              ; preds = %114
  %121 = load i64, i64* %8, align 8
  %122 = icmp sge i64 %121, 40
  br i1 %122, label %123, label %128

123:                                              ; preds = %120
  %124 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %125 = load i64, i64* %8, align 8
  %126 = getelementptr inbounds i8, i8* %124, i64 %125
  %127 = getelementptr inbounds i8, i8* %126, i64 -40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1201, i32 0, i32 0), i8* align 1 %127, i64 40, i1 false)
  br label %143

128:                                              ; preds = %120
  %129 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %129) #10
  %130 = load i64, i64* %8, align 8
  %131 = sub nsw i64 40, %130
  %132 = trunc i64 %131 to i32
  store i32 %132, i32* %10, align 4
  %133 = load i64, i64* %8, align 8
  %134 = getelementptr inbounds i8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1201, i32 0, i32 0), i64 %133
  %135 = load i32, i32* %10, align 4
  %136 = sext i32 %135 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([40 x i8], [40 x i8]* @1201, i32 0, i32 0), i8* align 1 %134, i64 %136, i1 false)
  %137 = load i32, i32* %10, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1201, i32 0, i32 0), i64 %138
  %140 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %141 = load i64, i64* %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %139, i8* align 16 %140, i64 %141, i1 false)
  %142 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %142) #10
  br label %143

143:                                              ; preds = %128, %123
  %144 = call i32 @memcmp(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1201, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1200, i32 0, i32 0), i64 40) #12
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  store i32 3, i32* %11, align 4
  br label %149

147:                                              ; preds = %143
  br label %148

148:                                              ; preds = %147, %114
  store i32 0, i32* %11, align 4
  br label %149

149:                                              ; preds = %148, %146
  %150 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %150) #10
  %151 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %151) #10
  %152 = load i32, i32* %11, align 4
  switch i32 %152, label %197 [
    i32 0, label %153
    i32 3, label %154
  ]

153:                                              ; preds = %149
  br label %73

154:                                              ; preds = %149, %73
  %155 = load i32, i32* @1202, align 4
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %175

157:                                              ; preds = %154
  %158 = load i64, i64* %6, align 8
  %159 = sub i64 -1, %158
  %160 = sub i64 %159, 40
  store i64 %160, i64* %6, align 8
  %161 = load i32, i32* %4, align 4
  %162 = load i64, i64* %6, align 8
  %163 = call i32 @ftruncate64(i32 %161, i64 %162) #10
  %164 = icmp eq i32 %163, -1
  br i1 %164, label %165, label %171

165:                                              ; preds = %157
  %166 = load %1*, %1** @stderr, align 8
  %167 = call i32* @__errno_location() #13
  %168 = load i32, i32* %167, align 4
  %169 = call i8* @strerror(i32 %168) #10
  %170 = call i32 (%1*, i8*, ...) @fprintf(%1* %166, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @1209, i32 0, i32 0), i8* %169)
  br label %171

171:                                              ; preds = %165, %157
  %172 = load %1*, %1** @stderr, align 8
  %173 = load i64, i64* %6, align 8
  %174 = call i32 (%1*, i8*, ...) @fprintf(%1* %172, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @1210, i32 0, i32 0), i64 %173)
  br label %178

175:                                              ; preds = %154
  %176 = load %1*, %1** @stderr, align 8
  %177 = call i32 (%1*, i8*, ...) @fprintf(%1* %176, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1211, i32 0, i32 0))
  br label %178

178:                                              ; preds = %175, %171
  %179 = load i32, i32* %3, align 4
  %180 = call i32 @close(i32 %179)
  %181 = load i32, i32* %4, align 4
  %182 = call i32 @fsync(i32 %181)
  %183 = load i32, i32* %4, align 4
  %184 = call i32 @close(i32 %183)
  %185 = load %1*, %1** @stderr, align 8
  %186 = call i32 (%1*, i8*, ...) @fprintf(%1* %185, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1211, i32 0, i32 0))
  %187 = load %28*, %28** %2, align 8
  %188 = icmp ne %28* %187, null
  br i1 %188, label %189, label %196

189:                                              ; preds = %178
  %190 = load i8*, i8** %5, align 8
  call void @sdsfree(i8* %190)
  store i32 1, i32* %11, align 4
  %191 = bitcast [4096 x i8]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* %191) #10
  %192 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #10
  %193 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #10
  %194 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #10
  %195 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #10
  ret void

196:                                              ; preds = %178
  call void @exit(i32 0) #14
  unreachable

197:                                              ; preds = %149
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1393() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca [16384 x i8], align 16
  %7 = alloca [16384 x i8], align 16
  %8 = alloca [256 x i8], align 16
  %9 = alloca %13*, align 8
  %10 = alloca %31*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [20 x i8], align 16
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  %21 = alloca i64, align 8
  %22 = alloca [44 x i8], align 16
  %23 = alloca i32, align 4
  %24 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #10
  %25 = load %10*, %10** @736, align 8
  %26 = getelementptr inbounds %10, %10* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %1, align 4
  %28 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #10
  store i64 0, i64* %2, align 8
  %29 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #10
  store i64 0, i64* %3, align 8
  %30 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #10
  store i64 0, i64* %4, align 8
  %31 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #10
  store i64 0, i64* %5, align 8
  %32 = bitcast [16384 x i8]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* %32) #10
  %33 = bitcast [16384 x i8]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* %33) #10
  %34 = bitcast [256 x i8]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %34) #10
  %35 = bitcast %13** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #10
  %36 = call %13* @redisReaderCreate()
  store %13* %36, %13** %9, align 8
  %37 = bitcast %31** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #10
  %38 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #10
  store i32 0, i32* %11, align 4
  %39 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #10
  store i32 0, i32* %12, align 4
  %40 = bitcast [20 x i8]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* %40) #10
  %41 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #10
  %42 = call i64 @time(i64* null) #10
  store i64 %42, i64* %14, align 8
  %43 = call i64 @time(i64* null) #10
  %44 = trunc i64 %43 to i32
  call void @srand(i32 %44) #10
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i32 0, i32 0
  %46 = load i32, i32* %1, align 4
  %47 = call i32 @anetNonBlock(i8* %45, i32 %46)
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %53

49:                                               ; preds = %0
  %50 = load %1*, %1** @stderr, align 8
  %51 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i32 0, i32 0
  %52 = call i32 (%1*, i8*, ...) @fprintf(%1* %50, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @1215, i32 0, i32 0), i8* %51)
  call void @exit(i32 1) #14
  unreachable

53:                                               ; preds = %0
  br label %54

54:                                               ; preds = %320, %53
  %55 = load i32, i32* %12, align 4
  %56 = icmp ne i32 %55, 0
  %57 = xor i1 %56, true
  br i1 %57, label %58, label %321

58:                                               ; preds = %54
  %59 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #10
  store i32 1, i32* %15, align 4
  %60 = load i32, i32* %11, align 4
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = load i64, i64* %4, align 8
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %62, %58
  %66 = load i32, i32* %15, align 4
  %67 = or i32 %66, 2
  store i32 %67, i32* %15, align 4
  br label %68

68:                                               ; preds = %65, %62
  %69 = load i32, i32* %1, align 4
  %70 = load i32, i32* %15, align 4
  %71 = call i32 @aeWait(i32 %69, i32 %70, i64 1000)
  store i32 %71, i32* %15, align 4
  %72 = load i32, i32* %15, align 4
  %73 = and i32 %72, 1
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %178

75:                                               ; preds = %68
  %76 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #10
  %77 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %77) #10
  store i32 0, i32* %17, align 4
  br label %78

78:                                               ; preds = %108, %75
  %79 = load i32, i32* %1, align 4
  %80 = getelementptr inbounds [16384 x i8], [16384 x i8]* %6, i32 0, i32 0
  %81 = call i64 @read(i32 %79, i8* %80, i64 16384)
  store i64 %81, i64* %16, align 8
  %82 = load i64, i64* %16, align 8
  %83 = icmp eq i64 %82, -1
  br i1 %83, label %84, label %98

84:                                               ; preds = %78
  %85 = call i32* @__errno_location() #13
  %86 = load i32, i32* %85, align 4
  %87 = icmp ne i32 %86, 11
  br i1 %87, label %88, label %98

88:                                               ; preds = %84
  %89 = call i32* @__errno_location() #13
  %90 = load i32, i32* %89, align 4
  %91 = icmp ne i32 %90, 4
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = load %1*, %1** @stderr, align 8
  %94 = call i32* @__errno_location() #13
  %95 = load i32, i32* %94, align 4
  %96 = call i8* @strerror(i32 %95) #10
  %97 = call i32 (%1*, i8*, ...) @fprintf(%1* %93, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @1216, i32 0, i32 0), i8* %96)
  store i32 1, i32* %17, align 4
  br label %111

98:                                               ; preds = %88, %84, %78
  %99 = load i64, i64* %16, align 8
  %100 = icmp sgt i64 %99, 0
  br i1 %100, label %101, label %107

101:                                              ; preds = %98
  %102 = load %13*, %13** %9, align 8
  %103 = getelementptr inbounds [16384 x i8], [16384 x i8]* %6, i32 0, i32 0
  %104 = load i64, i64* %16, align 8
  %105 = call i32 @redisReaderFeed(%13* %102, i8* %103, i64 %104)
  %106 = call i64 @time(i64* null) #10
  store i64 %106, i64* %14, align 8
  br label %107

107:                                              ; preds = %101, %98
  br label %108

108:                                              ; preds = %107
  %109 = load i64, i64* %16, align 8
  %110 = icmp sgt i64 %109, 0
  br i1 %110, label %78, label %111

111:                                              ; preds = %108, %92
  br label %112

112:                                              ; preds = %168, %111
  %113 = load %13*, %13** %9, align 8
  %114 = bitcast %31** %10 to i8**
  %115 = call i32 @redisReaderGetReply(%13* %113, i8** %114)
  %116 = icmp eq i32 %115, -1
  br i1 %116, label %117, label %120

117:                                              ; preds = %112
  %118 = load %1*, %1** @stderr, align 8
  %119 = call i32 (%1*, i8*, ...) @fprintf(%1* %118, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @1217, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

120:                                              ; preds = %112
  %121 = load %31*, %31** %10, align 8
  %122 = icmp ne %31* %121, null
  br i1 %122, label %123, label %167

123:                                              ; preds = %120
  %124 = load %31*, %31** %10, align 8
  %125 = getelementptr inbounds %31, %31* %124, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 6
  br i1 %127, label %128, label %136

128:                                              ; preds = %123
  %129 = load %1*, %1** @stderr, align 8
  %130 = load %31*, %31** %10, align 8
  %131 = getelementptr inbounds %31, %31* %130, i32 0, i32 4
  %132 = load i8*, i8** %131, align 8
  %133 = call i32 (%1*, i8*, ...) @fprintf(%1* %129, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %132)
  %134 = load i64, i64* %2, align 8
  %135 = add nsw i64 %134, 1
  store i64 %135, i64* %2, align 8
  br label %162

136:                                              ; preds = %123
  %137 = load i32, i32* %11, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %161

139:                                              ; preds = %136
  %140 = load %31*, %31** %10, align 8
  %141 = getelementptr inbounds %31, %31* %140, i32 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %161

144:                                              ; preds = %139
  %145 = load %31*, %31** %10, align 8
  %146 = getelementptr inbounds %31, %31* %145, i32 0, i32 3
  %147 = load i64, i64* %146, align 8
  %148 = icmp eq i64 %147, 20
  br i1 %148, label %149, label %161

149:                                              ; preds = %144
  %150 = load %31*, %31** %10, align 8
  %151 = getelementptr inbounds %31, %31* %150, i32 0, i32 4
  %152 = load i8*, i8** %151, align 8
  %153 = getelementptr inbounds [20 x i8], [20 x i8]* %13, i32 0, i32 0
  %154 = call i32 @memcmp(i8* %152, i8* %153, i64 20) #12
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %160

156:                                              ; preds = %149
  %157 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @1218, i32 0, i32 0))
  store i32 1, i32* %12, align 4
  %158 = load i64, i64* %3, align 8
  %159 = add nsw i64 %158, -1
  store i64 %159, i64* %3, align 8
  br label %160

160:                                              ; preds = %156, %149
  br label %161

161:                                              ; preds = %160, %144, %139, %136
  br label %162

162:                                              ; preds = %161, %128
  %163 = load i64, i64* %3, align 8
  %164 = add nsw i64 %163, 1
  store i64 %164, i64* %3, align 8
  %165 = load %31*, %31** %10, align 8
  %166 = bitcast %31* %165 to i8*
  call void @freeReplyObject(i8* %166)
  br label %167

167:                                              ; preds = %162, %120
  br label %168

168:                                              ; preds = %167
  %169 = load %31*, %31** %10, align 8
  %170 = icmp ne %31* %169, null
  br i1 %170, label %112, label %171

171:                                              ; preds = %168
  %172 = load i32, i32* %17, align 4
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @exit(i32 1) #14
  unreachable

175:                                              ; preds = %171
  %176 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %176) #10
  %177 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %177) #10
  br label %178

178:                                              ; preds = %175, %68
  %179 = load i32, i32* %15, align 4
  %180 = and i32 %179, 2
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %182, label %297

182:                                              ; preds = %178
  %183 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %183) #10
  store i64 0, i64* %18, align 8
  br label %184

184:                                              ; preds = %294, %182
  br label %185

185:                                              ; preds = %184
  %186 = load i64, i64* %4, align 8
  %187 = icmp ne i64 %186, 0
  br i1 %187, label %188, label %232

188:                                              ; preds = %185
  %189 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %189) #10
  %190 = load i32, i32* %1, align 4
  %191 = getelementptr inbounds [16384 x i8], [16384 x i8]* %7, i32 0, i32 0
  %192 = load i64, i64* %5, align 8
  %193 = getelementptr inbounds i8, i8* %191, i64 %192
  %194 = load i64, i64* %4, align 8
  %195 = call i64 @write(i32 %190, i8* %193, i64 %194)
  store i64 %195, i64* %19, align 8
  %196 = load i64, i64* %19, align 8
  %197 = icmp eq i64 %196, -1
  br i1 %197, label %198, label %214

198:                                              ; preds = %188
  %199 = call i32* @__errno_location() #13
  %200 = load i32, i32* %199, align 4
  %201 = icmp ne i32 %200, 11
  br i1 %201, label %202, label %212

202:                                              ; preds = %198
  %203 = call i32* @__errno_location() #13
  %204 = load i32, i32* %203, align 4
  %205 = icmp ne i32 %204, 4
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = load %1*, %1** @stderr, align 8
  %208 = call i32* @__errno_location() #13
  %209 = load i32, i32* %208, align 4
  %210 = call i8* @strerror(i32 %209) #10
  %211 = call i32 (%1*, i8*, ...) @fprintf(%1* %207, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1219, i32 0, i32 0), i8* %210)
  call void @exit(i32 1) #14
  unreachable

212:                                              ; preds = %202, %198
  store i64 0, i64* %19, align 8
  br label %213

213:                                              ; preds = %212
  br label %214

214:                                              ; preds = %213, %188
  %215 = load i64, i64* %19, align 8
  %216 = load i64, i64* %4, align 8
  %217 = sub nsw i64 %216, %215
  store i64 %217, i64* %4, align 8
  %218 = load i64, i64* %19, align 8
  %219 = load i64, i64* %5, align 8
  %220 = add nsw i64 %219, %218
  store i64 %220, i64* %5, align 8
  %221 = load i64, i64* %19, align 8
  %222 = load i64, i64* %18, align 8
  %223 = add nsw i64 %222, %221
  store i64 %223, i64* %18, align 8
  %224 = load i64, i64* %4, align 8
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %214
  store i32 9, i32* %20, align 4
  br label %228

227:                                              ; preds = %214
  store i32 0, i32* %20, align 4
  br label %228

228:                                              ; preds = %227, %226
  %229 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %229) #10
  %230 = load i32, i32* %20, align 4
  switch i32 %230, label %331 [
    i32 0, label %231
    i32 9, label %295
  ]

231:                                              ; preds = %228
  br label %232

232:                                              ; preds = %231, %185
  %233 = load i64, i64* %4, align 8
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %284

235:                                              ; preds = %232
  %236 = load i32, i32* %11, align 4
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %284, label %238

238:                                              ; preds = %235
  %239 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %239) #10
  %240 = getelementptr inbounds [16384 x i8], [16384 x i8]* %7, i32 0, i32 0
  %241 = call i64 @read(i32 0, i8* %240, i64 16384)
  store i64 %241, i64* %21, align 8
  %242 = load i64, i64* %21, align 8
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %244, label %270

244:                                              ; preds = %238
  %245 = bitcast [44 x i8]* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* %245) #10
  %246 = bitcast [44 x i8]* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %246, i8* align 16 getelementptr inbounds ([44 x i8], [44 x i8]* @1220, i32 0, i32 0), i64 44, i1 false)
  %247 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %247) #10
  store i32 1, i32* %11, align 4
  store i32 0, i32* %23, align 4
  br label %248

248:                                              ; preds = %258, %244
  %249 = load i32, i32* %23, align 4
  %250 = icmp slt i32 %249, 20
  br i1 %250, label %251, label %261

251:                                              ; preds = %248
  %252 = call i32 @rand() #10
  %253 = and i32 %252, 255
  %254 = trunc i32 %253 to i8
  %255 = load i32, i32* %23, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [20 x i8], [20 x i8]* %13, i64 0, i64 %256
  store i8 %254, i8* %257, align 1
  br label %258

258:                                              ; preds = %251
  %259 = load i32, i32* %23, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %23, align 4
  br label %248

261:                                              ; preds = %248
  %262 = getelementptr inbounds [44 x i8], [44 x i8]* %22, i32 0, i32 0
  %263 = getelementptr inbounds i8, i8* %262, i64 21
  %264 = getelementptr inbounds [20 x i8], [20 x i8]* %13, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %263, i8* align 16 %264, i64 20, i1 false)
  %265 = getelementptr inbounds [16384 x i8], [16384 x i8]* %7, i32 0, i32 0
  %266 = getelementptr inbounds [44 x i8], [44 x i8]* %22, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %265, i8* align 16 %266, i64 43, i1 false)
  store i64 43, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %267 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @1221, i32 0, i32 0))
  %268 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %268) #10
  %269 = bitcast [44 x i8]* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 44, i8* %269) #10
  br label %282

270:                                              ; preds = %238
  %271 = load i64, i64* %21, align 8
  %272 = icmp eq i64 %271, -1
  br i1 %272, label %273, label %279

273:                                              ; preds = %270
  %274 = load %1*, %1** @stderr, align 8
  %275 = call i32* @__errno_location() #13
  %276 = load i32, i32* %275, align 4
  %277 = call i8* @strerror(i32 %276) #10
  %278 = call i32 (%1*, i8*, ...) @fprintf(%1* %274, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @1222, i32 0, i32 0), i8* %277)
  call void @exit(i32 1) #14
  unreachable

279:                                              ; preds = %270
  %280 = load i64, i64* %21, align 8
  store i64 %280, i64* %4, align 8
  store i64 0, i64* %5, align 8
  br label %281

281:                                              ; preds = %279
  br label %282

282:                                              ; preds = %281, %261
  %283 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %283) #10
  br label %284

284:                                              ; preds = %282, %235, %232
  %285 = load i64, i64* %4, align 8
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %290

287:                                              ; preds = %284
  %288 = load i32, i32* %11, align 4
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %293, label %290

290:                                              ; preds = %287, %284
  %291 = load i64, i64* %18, align 8
  %292 = icmp sgt i64 %291, 131072
  br i1 %292, label %293, label %294

293:                                              ; preds = %290, %287
  br label %295

294:                                              ; preds = %290
  br label %184

295:                                              ; preds = %293, %228
  %296 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %296) #10
  br label %297

297:                                              ; preds = %295, %178
  %298 = load i32, i32* %11, align 4
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %300, label %316

300:                                              ; preds = %297
  %301 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 25), align 8
  %302 = icmp sgt i32 %301, 0
  br i1 %302, label %303, label %316

303:                                              ; preds = %300
  %304 = call i64 @time(i64* null) #10
  %305 = load i64, i64* %14, align 8
  %306 = sub nsw i64 %304, %305
  %307 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 25), align 8
  %308 = sext i32 %307 to i64
  %309 = icmp sgt i64 %306, %308
  br i1 %309, label %310, label %316

310:                                              ; preds = %303
  %311 = load %1*, %1** @stderr, align 8
  %312 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 25), align 8
  %313 = call i32 (%1*, i8*, ...) @fprintf(%1* %311, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1223, i32 0, i32 0), i32 %312)
  %314 = load i64, i64* %2, align 8
  %315 = add nsw i64 %314, 1
  store i64 %315, i64* %2, align 8
  store i32 3, i32* %20, align 4
  br label %317

316:                                              ; preds = %303, %300, %297
  store i32 0, i32* %20, align 4
  br label %317

317:                                              ; preds = %316, %310
  %318 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %318) #10
  %319 = load i32, i32* %20, align 4
  switch i32 %319, label %331 [
    i32 0, label %320
    i32 3, label %321
  ]

320:                                              ; preds = %317
  br label %54

321:                                              ; preds = %317, %54
  %322 = load %13*, %13** %9, align 8
  call void @redisReaderFree(%13* %322)
  %323 = load i64, i64* %2, align 8
  %324 = load i64, i64* %3, align 8
  %325 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @1224, i32 0, i32 0), i64 %323, i64 %324)
  %326 = load i64, i64* %2, align 8
  %327 = icmp ne i64 %326, 0
  br i1 %327, label %328, label %329

328:                                              ; preds = %321
  call void @exit(i32 1) #14
  unreachable

329:                                              ; preds = %321
  call void @exit(i32 0) #14
  unreachable

330:                                              ; No predecessors!
  ret void

331:                                              ; preds = %317, %228
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1394(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %31*, align 8
  %11 = alloca %31*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %33*, align 8
  %15 = alloca %7*, align 8
  %16 = alloca %20**, align 8
  %17 = alloca double, align 8
  %18 = alloca %4*, align 8
  %19 = alloca %20*, align 8
  %20 = alloca i32, align 4
  %21 = alloca %20*, align 8
  %22 = alloca %20*, align 8
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %23 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #10
  store i64 0, i64* %5, align 8
  %24 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #10
  %25 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #10
  store i64 0, i64* %7, align 8
  %26 = bitcast i64** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #10
  store i64* null, i64** %8, align 8
  %27 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #10
  store i64 0, i64* %9, align 8
  %28 = bitcast %31** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #10
  %29 = bitcast %31** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #10
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #10
  store i32 0, i32* %12, align 4
  %31 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #10
  %32 = bitcast %33** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #10
  %33 = bitcast %7** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #10
  %34 = bitcast %20*** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #10
  store %20** null, %20*** %16, align 8
  %35 = bitcast double* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #10
  %36 = bitcast %4** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #10
  %37 = call %4* @dictCreate(%5* @1225, i8* null)
  store %4* %37, %4** %18, align 8
  %38 = load %4*, %4** %18, align 8
  %39 = call %20* @1503(%4* %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @747, i32 0, i32 0), %20* @type_string)
  %40 = load %4*, %4** %18, align 8
  %41 = call %20* @1503(%4* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @749, i32 0, i32 0), %20* @type_list)
  %42 = load %4*, %4** %18, align 8
  %43 = call %20* @1503(%4* %42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @751, i32 0, i32 0), %20* @type_set)
  %44 = load %4*, %4** %18, align 8
  %45 = call %20* @1503(%4* %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @753, i32 0, i32 0), %20* @type_hash)
  %46 = load %4*, %4** %18, align 8
  %47 = call %20* @1503(%4* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @755, i32 0, i32 0), %20* @type_zset)
  %48 = load %4*, %4** %18, align 8
  %49 = call %20* @1503(%4* %48, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @756, i32 0, i32 0), %20* @type_stream)
  %50 = call i32 @1504()
  %51 = sext i32 %50 to i64
  store i64 %51, i64* %6, align 8
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @1226, i32 0, i32 0))
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @1227, i32 0, i32 0))
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @1228, i32 0, i32 0))
  br label %55

55:                                               ; preds = %264, %2
  %56 = load i64, i64* %5, align 8
  %57 = uitofp i64 %56 to double
  %58 = fmul double 1.000000e+02, %57
  %59 = load i64, i64* %6, align 8
  %60 = uitofp i64 %59 to double
  %61 = fdiv double %58, %60
  store double %61, double* %17, align 8
  %62 = call %31* @1505(i64* %9)
  store %31* %62, %31** %10, align 8
  %63 = load %31*, %31** %10, align 8
  %64 = getelementptr inbounds %31, %31* %63, i32 0, i32 7
  %65 = load %31**, %31*** %64, align 8
  %66 = getelementptr inbounds %31*, %31** %65, i64 1
  %67 = load %31*, %31** %66, align 8
  store %31* %67, %31** %11, align 8
  %68 = load %31*, %31** %11, align 8
  %69 = getelementptr inbounds %31, %31* %68, i32 0, i32 6
  %70 = load i64, i64* %69, align 8
  %71 = load i32, i32* %12, align 4
  %72 = zext i32 %71 to i64
  %73 = icmp ugt i64 %70, %72
  br i1 %73, label %74, label %104

74:                                               ; preds = %55
  %75 = load %20**, %20*** %16, align 8
  %76 = bitcast %20** %75 to i8*
  %77 = load %31*, %31** %11, align 8
  %78 = getelementptr inbounds %31, %31* %77, i32 0, i32 6
  %79 = load i64, i64* %78, align 8
  %80 = mul i64 8, %79
  %81 = call i8* @zrealloc(i8* %76, i64 %80)
  %82 = bitcast i8* %81 to %20**
  store %20** %82, %20*** %16, align 8
  %83 = load i64*, i64** %8, align 8
  %84 = bitcast i64* %83 to i8*
  %85 = load %31*, %31** %11, align 8
  %86 = getelementptr inbounds %31, %31* %85, i32 0, i32 6
  %87 = load i64, i64* %86, align 8
  %88 = mul i64 8, %87
  %89 = call i8* @zrealloc(i8* %84, i64 %88)
  %90 = bitcast i8* %89 to i64*
  store i64* %90, i64** %8, align 8
  %91 = load %20**, %20*** %16, align 8
  %92 = icmp ne %20** %91, null
  br i1 %92, label %93, label %96

93:                                               ; preds = %74
  %94 = load i64*, i64** %8, align 8
  %95 = icmp ne i64* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %93, %74
  %97 = load %1*, %1** @stderr, align 8
  %98 = call i32 (%1*, i8*, ...) @fprintf(%1* %97, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @1229, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

99:                                               ; preds = %93
  %100 = load %31*, %31** %11, align 8
  %101 = getelementptr inbounds %31, %31* %100, i32 0, i32 6
  %102 = load i64, i64* %101, align 8
  %103 = trunc i64 %102 to i32
  store i32 %103, i32* %12, align 4
  br label %104

104:                                              ; preds = %99, %55
  %105 = load %4*, %4** %18, align 8
  %106 = load %31*, %31** %11, align 8
  %107 = load %20**, %20*** %16, align 8
  call void @1506(%4* %105, %31* %106, %20** %107)
  %108 = load %31*, %31** %11, align 8
  %109 = load %20**, %20*** %16, align 8
  %110 = load i64*, i64** %8, align 8
  %111 = load i32, i32* %3, align 4
  %112 = load i32, i32* %4, align 4
  call void @1507(%31* %108, %20** %109, i64* %110, i32 %111, i32 %112)
  store i32 0, i32* %13, align 4
  br label %113

113:                                              ; preds = %244, %104
  %114 = load i32, i32* %13, align 4
  %115 = zext i32 %114 to i64
  %116 = load %31*, %31** %11, align 8
  %117 = getelementptr inbounds %31, %31* %116, i32 0, i32 6
  %118 = load i64, i64* %117, align 8
  %119 = icmp ult i64 %115, %118
  br i1 %119, label %120, label %247

120:                                              ; preds = %113
  %121 = bitcast %20** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %121) #10
  %122 = load %20**, %20*** %16, align 8
  %123 = load i32, i32* %13, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds %20*, %20** %122, i64 %124
  %126 = load %20*, %20** %125, align 8
  store %20* %126, %20** %19, align 8
  %127 = load %20*, %20** %19, align 8
  %128 = icmp ne %20* %127, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %120
  store i32 6, i32* %20, align 4
  br label %240

130:                                              ; preds = %120
  %131 = load i64*, i64** %8, align 8
  %132 = load i32, i32* %13, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds i64, i64* %131, i64 %133
  %135 = load i64, i64* %134, align 8
  %136 = load %20*, %20** %19, align 8
  %137 = getelementptr inbounds %20, %20* %136, i32 0, i32 5
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, %135
  store i64 %139, i64* %137, align 8
  %140 = load %20*, %20** %19, align 8
  %141 = getelementptr inbounds %20, %20* %140, i32 0, i32 4
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %141, align 8
  %144 = load %31*, %31** %11, align 8
  %145 = getelementptr inbounds %31, %31* %144, i32 0, i32 7
  %146 = load %31**, %31*** %145, align 8
  %147 = load i32, i32* %13, align 4
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds %31*, %31** %146, i64 %148
  %150 = load %31*, %31** %149, align 8
  %151 = getelementptr inbounds %31, %31* %150, i32 0, i32 3
  %152 = load i64, i64* %151, align 8
  %153 = load i64, i64* %7, align 8
  %154 = add i64 %153, %152
  store i64 %154, i64* %7, align 8
  %155 = load i64, i64* %5, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %5, align 8
  %157 = load %20*, %20** %19, align 8
  %158 = getelementptr inbounds %20, %20* %157, i32 0, i32 3
  %159 = load i64, i64* %158, align 8
  %160 = load i64*, i64** %8, align 8
  %161 = load i32, i32* %13, align 4
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds i64, i64* %160, i64 %162
  %164 = load i64, i64* %163, align 8
  %165 = icmp ult i64 %159, %164
  br i1 %165, label %166, label %231

166:                                              ; preds = %130
  %167 = load double, double* %17, align 8
  %168 = load %20*, %20** %19, align 8
  %169 = getelementptr inbounds %20, %20* %168, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  %171 = load %31*, %31** %11, align 8
  %172 = getelementptr inbounds %31, %31* %171, i32 0, i32 7
  %173 = load %31**, %31*** %172, align 8
  %174 = load i32, i32* %13, align 4
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %31*, %31** %173, i64 %175
  %177 = load %31*, %31** %176, align 8
  %178 = getelementptr inbounds %31, %31* %177, i32 0, i32 4
  %179 = load i8*, i8** %178, align 8
  %180 = load i64*, i64** %8, align 8
  %181 = load i32, i32* %13, align 4
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds i64, i64* %180, i64 %182
  %184 = load i64, i64* %183, align 8
  %185 = load i32, i32* %3, align 4
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %166
  %188 = load %20*, %20** %19, align 8
  %189 = getelementptr inbounds %20, %20* %188, i32 0, i32 2
  %190 = load i8*, i8** %189, align 8
  br label %192

191:                                              ; preds = %166
  br label %192

192:                                              ; preds = %191, %187
  %193 = phi i8* [ %190, %187 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @748, i32 0, i32 0), %191 ]
  %194 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @1230, i32 0, i32 0), double %167, i8* %170, i8* %179, i64 %184, i8* %193)
  %195 = load %20*, %20** %19, align 8
  %196 = getelementptr inbounds %20, %20* %195, i32 0, i32 6
  %197 = load i8*, i8** %196, align 8
  %198 = icmp ne i8* %197, null
  br i1 %198, label %199, label %203

199:                                              ; preds = %192
  %200 = load %20*, %20** %19, align 8
  %201 = getelementptr inbounds %20, %20* %200, i32 0, i32 6
  %202 = load i8*, i8** %201, align 8
  call void @sdsfree(i8* %202)
  br label %203

203:                                              ; preds = %199, %192
  %204 = load %31*, %31** %11, align 8
  %205 = getelementptr inbounds %31, %31* %204, i32 0, i32 7
  %206 = load %31**, %31*** %205, align 8
  %207 = load i32, i32* %13, align 4
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds %31*, %31** %206, i64 %208
  %210 = load %31*, %31** %209, align 8
  %211 = getelementptr inbounds %31, %31* %210, i32 0, i32 4
  %212 = load i8*, i8** %211, align 8
  %213 = call i8* @sdsnew(i8* %212)
  %214 = load %20*, %20** %19, align 8
  %215 = getelementptr inbounds %20, %20* %214, i32 0, i32 6
  store i8* %213, i8** %215, align 8
  %216 = load %20*, %20** %19, align 8
  %217 = getelementptr inbounds %20, %20* %216, i32 0, i32 6
  %218 = load i8*, i8** %217, align 8
  %219 = icmp ne i8* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %203
  %221 = load %1*, %1** @stderr, align 8
  %222 = call i32 (%1*, i8*, ...) @fprintf(%1* %221, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1231, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

223:                                              ; preds = %203
  %224 = load i64*, i64** %8, align 8
  %225 = load i32, i32* %13, align 4
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds i64, i64* %224, i64 %226
  %228 = load i64, i64* %227, align 8
  %229 = load %20*, %20** %19, align 8
  %230 = getelementptr inbounds %20, %20* %229, i32 0, i32 3
  store i64 %228, i64* %230, align 8
  br label %231

231:                                              ; preds = %223, %130
  %232 = load i64, i64* %5, align 8
  %233 = urem i64 %232, 1000000
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %239

235:                                              ; preds = %231
  %236 = load double, double* %17, align 8
  %237 = load i64, i64* %5, align 8
  %238 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1232, i32 0, i32 0), double %236, i64 %237)
  br label %239

239:                                              ; preds = %235, %231
  store i32 0, i32* %20, align 4
  br label %240

240:                                              ; preds = %239, %129
  %241 = bitcast %20** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #10
  %242 = load i32, i32* %20, align 4
  switch i32 %242, label %406 [
    i32 0, label %243
    i32 6, label %244
  ]

243:                                              ; preds = %240
  br label %244

244:                                              ; preds = %243, %240
  %245 = load i32, i32* %13, align 4
  %246 = add i32 %245, 1
  store i32 %246, i32* %13, align 4
  br label %113

247:                                              ; preds = %113
  %248 = load i64, i64* %5, align 8
  %249 = icmp ne i64 %248, 0
  br i1 %249, label %250, label %261

250:                                              ; preds = %247
  %251 = load i64, i64* %5, align 8
  %252 = urem i64 %251, 100
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %261

254:                                              ; preds = %250
  %255 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %256 = icmp ne i64 %255, 0
  br i1 %256, label %257, label %261

257:                                              ; preds = %254
  %258 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %259 = trunc i64 %258 to i32
  %260 = call i32 @usleep(i32 %259)
  br label %261

261:                                              ; preds = %257, %254, %250, %247
  %262 = load %31*, %31** %10, align 8
  %263 = bitcast %31* %262 to i8*
  call void @freeReplyObject(i8* %263)
  br label %264

264:                                              ; preds = %261
  %265 = load i64, i64* %9, align 8
  %266 = icmp ne i64 %265, 0
  br i1 %266, label %55, label %267

267:                                              ; preds = %264
  %268 = load %20**, %20*** %16, align 8
  %269 = icmp ne %20** %268, null
  br i1 %269, label %270, label %273

270:                                              ; preds = %267
  %271 = load %20**, %20*** %16, align 8
  %272 = bitcast %20** %271 to i8*
  call void @zfree(i8* %272)
  br label %273

273:                                              ; preds = %270, %267
  %274 = load i64*, i64** %8, align 8
  %275 = icmp ne i64* %274, null
  br i1 %275, label %276, label %279

276:                                              ; preds = %273
  %277 = load i64*, i64** %8, align 8
  %278 = bitcast i64* %277 to i8*
  call void @zfree(i8* %278)
  br label %279

279:                                              ; preds = %276, %273
  %280 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1233, i32 0, i32 0))
  %281 = load i64, i64* %5, align 8
  %282 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1234, i32 0, i32 0), i64 %281)
  %283 = load i64, i64* %7, align 8
  %284 = load i64, i64* %7, align 8
  %285 = icmp ne i64 %284, 0
  br i1 %285, label %286, label %292

286:                                              ; preds = %279
  %287 = load i64, i64* %7, align 8
  %288 = uitofp i64 %287 to double
  %289 = load i64, i64* %5, align 8
  %290 = uitofp i64 %289 to double
  %291 = fdiv double %288, %290
  br label %293

292:                                              ; preds = %279
  br label %293

293:                                              ; preds = %292, %286
  %294 = phi double [ %291, %286 ], [ 0.000000e+00, %292 ]
  %295 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @1235, i32 0, i32 0), i64 %283, double %294)
  %296 = load %4*, %4** %18, align 8
  %297 = call %33* @dictGetIterator(%4* %296)
  store %33* %297, %33** %14, align 8
  br label %298

298:                                              ; preds = %333, %293
  %299 = load %33*, %33** %14, align 8
  %300 = call %7* @dictNext(%33* %299)
  store %7* %300, %7** %15, align 8
  %301 = icmp ne %7* %300, null
  br i1 %301, label %302, label %335

302:                                              ; preds = %298
  %303 = bitcast %20** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %303) #10
  %304 = load %7*, %7** %15, align 8
  %305 = getelementptr inbounds %7, %7* %304, i32 0, i32 1
  %306 = bitcast %8* %305 to i8**
  %307 = load i8*, i8** %306, align 8
  %308 = bitcast i8* %307 to %20*
  store %20* %308, %20** %21, align 8
  %309 = load %20*, %20** %21, align 8
  %310 = getelementptr inbounds %20, %20* %309, i32 0, i32 6
  %311 = load i8*, i8** %310, align 8
  %312 = icmp ne i8* %311, null
  br i1 %312, label %313, label %333

313:                                              ; preds = %302
  %314 = load %20*, %20** %21, align 8
  %315 = getelementptr inbounds %20, %20* %314, i32 0, i32 0
  %316 = load i8*, i8** %315, align 8
  %317 = load %20*, %20** %21, align 8
  %318 = getelementptr inbounds %20, %20* %317, i32 0, i32 6
  %319 = load i8*, i8** %318, align 8
  %320 = load %20*, %20** %21, align 8
  %321 = getelementptr inbounds %20, %20* %320, i32 0, i32 3
  %322 = load i64, i64* %321, align 8
  %323 = load i32, i32* %3, align 4
  %324 = icmp ne i32 %323, 0
  br i1 %324, label %329, label %325

325:                                              ; preds = %313
  %326 = load %20*, %20** %21, align 8
  %327 = getelementptr inbounds %20, %20* %326, i32 0, i32 2
  %328 = load i8*, i8** %327, align 8
  br label %330

329:                                              ; preds = %313
  br label %330

330:                                              ; preds = %329, %325
  %331 = phi i8* [ %328, %325 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @748, i32 0, i32 0), %329 ]
  %332 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1236, i32 0, i32 0), i8* %316, i8* %319, i64 %322, i8* %331)
  br label %333

333:                                              ; preds = %330, %302
  %334 = bitcast %20** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %334) #10
  br label %298

335:                                              ; preds = %298
  %336 = load %33*, %33** %14, align 8
  call void @dictReleaseIterator(%33* %336)
  %337 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  %338 = load %4*, %4** %18, align 8
  %339 = call %33* @dictGetIterator(%4* %338)
  store %33* %339, %33** %14, align 8
  br label %340

340:                                              ; preds = %398, %335
  %341 = load %33*, %33** %14, align 8
  %342 = call %7* @dictNext(%33* %341)
  store %7* %342, %7** %15, align 8
  %343 = icmp ne %7* %342, null
  br i1 %343, label %344, label %402

344:                                              ; preds = %340
  %345 = bitcast %20** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %345) #10
  %346 = load %7*, %7** %15, align 8
  %347 = getelementptr inbounds %7, %7* %346, i32 0, i32 1
  %348 = bitcast %8* %347 to i8**
  %349 = load i8*, i8** %348, align 8
  %350 = bitcast i8* %349 to %20*
  store %20* %350, %20** %22, align 8
  %351 = load %20*, %20** %22, align 8
  %352 = getelementptr inbounds %20, %20* %351, i32 0, i32 4
  %353 = load i64, i64* %352, align 8
  %354 = load %20*, %20** %22, align 8
  %355 = getelementptr inbounds %20, %20* %354, i32 0, i32 0
  %356 = load i8*, i8** %355, align 8
  %357 = load %20*, %20** %22, align 8
  %358 = getelementptr inbounds %20, %20* %357, i32 0, i32 5
  %359 = load i64, i64* %358, align 8
  %360 = load i32, i32* %3, align 4
  %361 = icmp ne i32 %360, 0
  br i1 %361, label %366, label %362

362:                                              ; preds = %344
  %363 = load %20*, %20** %22, align 8
  %364 = getelementptr inbounds %20, %20* %363, i32 0, i32 2
  %365 = load i8*, i8** %364, align 8
  br label %367

366:                                              ; preds = %344
  br label %367

367:                                              ; preds = %366, %362
  %368 = phi i8* [ %365, %362 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @748, i32 0, i32 0), %366 ]
  %369 = load i64, i64* %5, align 8
  %370 = icmp ne i64 %369, 0
  br i1 %370, label %371, label %380

371:                                              ; preds = %367
  %372 = load %20*, %20** %22, align 8
  %373 = getelementptr inbounds %20, %20* %372, i32 0, i32 4
  %374 = load i64, i64* %373, align 8
  %375 = uitofp i64 %374 to double
  %376 = fmul double 1.000000e+02, %375
  %377 = load i64, i64* %5, align 8
  %378 = uitofp i64 %377 to double
  %379 = fdiv double %376, %378
  br label %381

380:                                              ; preds = %367
  br label %381

381:                                              ; preds = %380, %371
  %382 = phi double [ %379, %371 ], [ 0.000000e+00, %380 ]
  %383 = load %20*, %20** %22, align 8
  %384 = getelementptr inbounds %20, %20* %383, i32 0, i32 4
  %385 = load i64, i64* %384, align 8
  %386 = icmp ne i64 %385, 0
  br i1 %386, label %387, label %397

387:                                              ; preds = %381
  %388 = load %20*, %20** %22, align 8
  %389 = getelementptr inbounds %20, %20* %388, i32 0, i32 5
  %390 = load i64, i64* %389, align 8
  %391 = uitofp i64 %390 to double
  %392 = load %20*, %20** %22, align 8
  %393 = getelementptr inbounds %20, %20* %392, i32 0, i32 4
  %394 = load i64, i64* %393, align 8
  %395 = uitofp i64 %394 to double
  %396 = fdiv double %391, %395
  br label %398

397:                                              ; preds = %381
  br label %398

398:                                              ; preds = %397, %387
  %399 = phi double [ %396, %387 ], [ 0.000000e+00, %397 ]
  %400 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @1237, i32 0, i32 0), i64 %353, i8* %356, i64 %359, i8* %368, double %382, double %399)
  %401 = bitcast %20** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %401) #10
  br label %340

402:                                              ; preds = %340
  %403 = load %33*, %33** %14, align 8
  call void @dictReleaseIterator(%33* %403)
  %404 = load %4*, %4** %18, align 8
  call void @dictRelease(%4* %404)
  call void @exit(i32 0) #14
  unreachable

405:                                              ; No predecessors!
  ret void

406:                                              ; preds = %240
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1395() #0 {
  %1 = alloca %31*, align 8
  %2 = alloca %31*, align 8
  %3 = alloca [16 x i64], align 16
  %4 = alloca [16 x i8*], align 16
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca double, align 8
  %13 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = bitcast %31** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  %15 = bitcast [16 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* %15) #10
  %16 = bitcast [16 x i64]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %16, i8 0, i64 128, i1 false)
  %17 = bitcast [16 x i8*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* %17) #10
  %18 = bitcast [16 x i8*]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %18, i8 0, i64 128, i1 false)
  %19 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #10
  store i64 0, i64* %5, align 8
  %20 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #10
  %21 = bitcast i64** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  store i64* null, i64** %7, align 8
  %22 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  store i64 0, i64* %8, align 8
  %23 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #10
  store i32 0, i32* %9, align 4
  %24 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #10
  %25 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #10
  %26 = bitcast double* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #10
  %27 = call i32 @1504()
  %28 = sext i32 %27 to i64
  store i64 %28, i64* %6, align 8
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @1258, i32 0, i32 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @1227, i32 0, i32 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @1228, i32 0, i32 0))
  br label %32

32:                                               ; preds = %207, %0
  %33 = load i64, i64* %5, align 8
  %34 = uitofp i64 %33 to double
  %35 = fmul double 1.000000e+02, %34
  %36 = load i64, i64* %6, align 8
  %37 = uitofp i64 %36 to double
  %38 = fdiv double %35, %37
  store double %38, double* %12, align 8
  %39 = call %31* @1505(i64* %8)
  store %31* %39, %31** %2, align 8
  %40 = load %31*, %31** %2, align 8
  %41 = getelementptr inbounds %31, %31* %40, i32 0, i32 7
  %42 = load %31**, %31*** %41, align 8
  %43 = getelementptr inbounds %31*, %31** %42, i64 1
  %44 = load %31*, %31** %43, align 8
  store %31* %44, %31** %1, align 8
  %45 = load %31*, %31** %1, align 8
  %46 = getelementptr inbounds %31, %31* %45, i32 0, i32 6
  %47 = load i64, i64* %46, align 8
  %48 = load i32, i32* %9, align 4
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %47, %49
  br i1 %50, label %51, label %70

51:                                               ; preds = %32
  %52 = load i64*, i64** %7, align 8
  %53 = bitcast i64* %52 to i8*
  %54 = load %31*, %31** %1, align 8
  %55 = getelementptr inbounds %31, %31* %54, i32 0, i32 6
  %56 = load i64, i64* %55, align 8
  %57 = mul i64 8, %56
  %58 = call i8* @zrealloc(i8* %53, i64 %57)
  %59 = bitcast i8* %58 to i64*
  store i64* %59, i64** %7, align 8
  %60 = load i64*, i64** %7, align 8
  %61 = icmp ne i64* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %51
  %63 = load %1*, %1** @stderr, align 8
  %64 = call i32 (%1*, i8*, ...) @fprintf(%1* %63, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @1229, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

65:                                               ; preds = %51
  %66 = load %31*, %31** %1, align 8
  %67 = getelementptr inbounds %31, %31* %66, i32 0, i32 6
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %68 to i32
  store i32 %69, i32* %9, align 4
  br label %70

70:                                               ; preds = %65, %32
  %71 = load %31*, %31** %1, align 8
  %72 = load i64*, i64** %7, align 8
  call void @1508(%31* %71, i64* %72)
  store i32 0, i32* %10, align 4
  br label %73

73:                                               ; preds = %187, %70
  %74 = load i32, i32* %10, align 4
  %75 = zext i32 %74 to i64
  %76 = load %31*, %31** %1, align 8
  %77 = getelementptr inbounds %31, %31* %76, i32 0, i32 6
  %78 = load i64, i64* %77, align 8
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %80, label %190

80:                                               ; preds = %73
  %81 = load i64, i64* %5, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %5, align 8
  %83 = load i64, i64* %5, align 8
  %84 = urem i64 %83, 1000000
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %80
  %87 = load double, double* %12, align 8
  %88 = load i64, i64* %5, align 8
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1232, i32 0, i32 0), double %87, i64 %88)
  br label %90

90:                                               ; preds = %86, %80
  store i32 0, i32* %11, align 4
  br label %91

91:                                               ; preds = %107, %90
  %92 = load i32, i32* %11, align 4
  %93 = icmp ult i32 %92, 16
  br i1 %93, label %94, label %105

94:                                               ; preds = %91
  %95 = load i64*, i64** %7, align 8
  %96 = load i32, i32* %10, align 4
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i64, i64* %95, i64 %97
  %99 = load i64, i64* %98, align 8
  %100 = load i32, i32* %11, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i64 0, i64 %101
  %103 = load i64, i64* %102, align 8
  %104 = icmp ugt i64 %99, %103
  br label %105

105:                                              ; preds = %94, %91
  %106 = phi i1 [ false, %91 ], [ %104, %94 ]
  br i1 %106, label %107, label %110

107:                                              ; preds = %105
  %108 = load i32, i32* %11, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %11, align 4
  br label %91

110:                                              ; preds = %105
  %111 = load i32, i32* %11, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  br label %187

114:                                              ; preds = %110
  %115 = load i32, i32* %11, align 4
  %116 = add i32 %115, -1
  store i32 %116, i32* %11, align 4
  %117 = load i32, i32* %11, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = load i32, i32* %11, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i64 0, i64 %121
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %119, %114
  %126 = load i32, i32* %11, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 %127
  %129 = load i8*, i8** %128, align 8
  call void @sdsfree(i8* %129)
  br label %149

130:                                              ; preds = %119
  %131 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 0
  %132 = load i8*, i8** %131, align 16
  call void @sdsfree(i8* %132)
  %133 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i32 0, i32 0
  %134 = bitcast i64* %133 to i8*
  %135 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i32 0, i32 0
  %136 = getelementptr inbounds i64, i64* %135, i64 1
  %137 = bitcast i64* %136 to i8*
  %138 = load i32, i32* %11, align 4
  %139 = zext i32 %138 to i64
  %140 = mul i64 8, %139
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 16 %134, i8* align 8 %137, i64 %140, i1 false)
  %141 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i32 0, i32 0
  %142 = bitcast i8** %141 to i8*
  %143 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i32 0, i32 0
  %144 = getelementptr inbounds i8*, i8** %143, i64 1
  %145 = bitcast i8** %144 to i8*
  %146 = load i32, i32* %11, align 4
  %147 = zext i32 %146 to i64
  %148 = mul i64 8, %147
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 16 %142, i8* align 8 %145, i64 %148, i1 false)
  br label %149

149:                                              ; preds = %130, %125
  %150 = load i64*, i64** %7, align 8
  %151 = load i32, i32* %10, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i64, i64* %150, i64 %152
  %154 = load i64, i64* %153, align 8
  %155 = load i32, i32* %11, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i64 0, i64 %156
  store i64 %154, i64* %157, align 8
  %158 = load %31*, %31** %1, align 8
  %159 = getelementptr inbounds %31, %31* %158, i32 0, i32 7
  %160 = load %31**, %31*** %159, align 8
  %161 = load i32, i32* %10, align 4
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds %31*, %31** %160, i64 %162
  %164 = load %31*, %31** %163, align 8
  %165 = getelementptr inbounds %31, %31* %164, i32 0, i32 4
  %166 = load i8*, i8** %165, align 8
  %167 = call i8* @sdsnew(i8* %166)
  %168 = load i32, i32* %11, align 4
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 %169
  store i8* %167, i8** %170, align 8
  %171 = load double, double* %12, align 8
  %172 = load %31*, %31** %1, align 8
  %173 = getelementptr inbounds %31, %31* %172, i32 0, i32 7
  %174 = load %31**, %31*** %173, align 8
  %175 = load i32, i32* %10, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %31*, %31** %174, i64 %176
  %178 = load %31*, %31** %177, align 8
  %179 = getelementptr inbounds %31, %31* %178, i32 0, i32 4
  %180 = load i8*, i8** %179, align 8
  %181 = load i64*, i64** %7, align 8
  %182 = load i32, i32* %10, align 4
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds i64, i64* %181, i64 %183
  %185 = load i64, i64* %184, align 8
  %186 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @1259, i32 0, i32 0), double %171, i8* %180, i64 %185)
  br label %187

187:                                              ; preds = %149, %113
  %188 = load i32, i32* %10, align 4
  %189 = add i32 %188, 1
  store i32 %189, i32* %10, align 4
  br label %73

190:                                              ; preds = %73
  %191 = load i64, i64* %5, align 8
  %192 = icmp ne i64 %191, 0
  br i1 %192, label %193, label %204

193:                                              ; preds = %190
  %194 = load i64, i64* %5, align 8
  %195 = urem i64 %194, 100
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %204

197:                                              ; preds = %193
  %198 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %199 = icmp ne i64 %198, 0
  br i1 %199, label %200, label %204

200:                                              ; preds = %197
  %201 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %202 = trunc i64 %201 to i32
  %203 = call i32 @usleep(i32 %202)
  br label %204

204:                                              ; preds = %200, %197, %193, %190
  %205 = load %31*, %31** %2, align 8
  %206 = bitcast %31* %205 to i8*
  call void @freeReplyObject(i8* %206)
  br label %207

207:                                              ; preds = %204
  %208 = load i64, i64* %8, align 8
  %209 = icmp ne i64 %208, 0
  br i1 %209, label %32, label %210

210:                                              ; preds = %207
  %211 = load i64*, i64** %7, align 8
  %212 = icmp ne i64* %211, null
  br i1 %212, label %213, label %216

213:                                              ; preds = %210
  %214 = load i64*, i64** %7, align 8
  %215 = bitcast i64* %214 to i8*
  call void @zfree(i8* %215)
  br label %216

216:                                              ; preds = %213, %210
  %217 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1233, i32 0, i32 0))
  %218 = load i64, i64* %5, align 8
  %219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @1234, i32 0, i32 0), i64 %218)
  store i32 1, i32* %10, align 4
  br label %220

220:                                              ; preds = %246, %216
  %221 = load i32, i32* %10, align 4
  %222 = icmp ule i32 %221, 16
  br i1 %222, label %223, label %249

223:                                              ; preds = %220
  %224 = load i32, i32* %10, align 4
  %225 = sub i32 16, %224
  store i32 %225, i32* %11, align 4
  %226 = load i32, i32* %11, align 4
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i64 0, i64 %227
  %229 = load i64, i64* %228, align 8
  %230 = icmp ugt i64 %229, 0
  br i1 %230, label %231, label %245

231:                                              ; preds = %223
  %232 = load i32, i32* %11, align 4
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds [16 x i64], [16 x i64]* %3, i64 0, i64 %233
  %235 = load i64, i64* %234, align 8
  %236 = load i32, i32* %11, align 4
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 %237
  %239 = load i8*, i8** %238, align 8
  %240 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1260, i32 0, i32 0), i64 %235, i8* %239)
  %241 = load i32, i32* %11, align 4
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds [16 x i8*], [16 x i8*]* %4, i64 0, i64 %242
  %244 = load i8*, i8** %243, align 8
  call void @sdsfree(i8* %244)
  br label %245

245:                                              ; preds = %231, %223
  br label %246

246:                                              ; preds = %245
  %247 = load i32, i32* %10, align 4
  %248 = add i32 %247, 1
  store i32 %248, i32* %10, align 4
  br label %220

249:                                              ; preds = %220
  call void @exit(i32 0) #14
  unreachable

250:                                              ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1396() #0 {
  %1 = alloca %31*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca [64 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #10
  %10 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  %11 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  store i64 0, i64* %3, align 8
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  store i32 0, i32* %4, align 4
  br label %13

13:                                               ; preds = %150, %0
  br label %14

14:                                               ; preds = %13
  %15 = bitcast [64 x i8]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %15) #10
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  %17 = load %10*, %10** @736, align 8
  %18 = call %31* (%10*, i8*, ...) @1479(%10* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i32 0, i32 0))
  store %31* %18, %31** %1, align 8
  %19 = load %31*, %31** %1, align 8
  %20 = getelementptr inbounds %31, %31* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 6
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = load %31*, %31** %1, align 8
  %25 = getelementptr inbounds %31, %31* %24, i32 0, i32 4
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1264, i32 0, i32 0), i8* %26)
  call void @exit(i32 1) #14
  unreachable

28:                                               ; preds = %14
  %29 = load i32, i32* %4, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %4, align 4
  %31 = srem i32 %29, 20
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([157 x i8], [157 x i8]* @1265, i32 0, i32 0))
  br label %35

35:                                               ; preds = %33, %28
  store i64 0, i64* %2, align 8
  store i32 0, i32* %6, align 4
  br label %36

36:                                               ; preds = %60, %35
  %37 = load i32, i32* %6, align 4
  %38 = icmp slt i32 %37, 20
  br i1 %38, label %39, label %63

39:                                               ; preds = %36
  %40 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #10
  %41 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %42 = load i32, i32* %6, align 4
  %43 = call i32 (i8*, i8*, ...) @sprintf(i8* %41, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1266, i32 0, i32 0), i32 %42) #10
  %44 = load %31*, %31** %1, align 8
  %45 = getelementptr inbounds %31, %31* %44, i32 0, i32 4
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %48 = call i64 @1429(i8* %46, i8* %47)
  store i64 %48, i64* %7, align 8
  %49 = load i64, i64* %7, align 8
  %50 = icmp eq i64 %49, -9223372036854775808
  br i1 %50, label %51, label %52

51:                                               ; preds = %39
  store i32 6, i32* %8, align 4
  br label %56

52:                                               ; preds = %39
  %53 = load i64, i64* %7, align 8
  %54 = load i64, i64* %2, align 8
  %55 = add nsw i64 %54, %53
  store i64 %55, i64* %2, align 8
  store i32 0, i32* %8, align 4
  br label %56

56:                                               ; preds = %52, %51
  %57 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #10
  %58 = load i32, i32* %8, align 4
  switch i32 %58, label %160 [
    i32 0, label %59
    i32 6, label %60
  ]

59:                                               ; preds = %56
  br label %60

60:                                               ; preds = %59, %56
  %61 = load i32, i32* %6, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %6, align 4
  br label %36

63:                                               ; preds = %36
  %64 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %65 = load i64, i64* %2, align 8
  %66 = call i32 (i8*, i8*, ...) @sprintf(i8* %64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1267, i32 0, i32 0), i64 %65) #10
  %67 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1268, i32 0, i32 0), i8* %67)
  %69 = load %31*, %31** %1, align 8
  %70 = getelementptr inbounds %31, %31* %69, i32 0, i32 4
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @1429(i8* %71, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1269, i32 0, i32 0))
  store i64 %72, i64* %2, align 8
  %73 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %74 = load i64, i64* %2, align 8
  call void @bytesToHuman(i8* %73, i64 %74)
  %75 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1270, i32 0, i32 0), i8* %75)
  %77 = load %31*, %31** %1, align 8
  %78 = getelementptr inbounds %31, %31* %77, i32 0, i32 4
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @1429(i8* %79, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1271, i32 0, i32 0))
  store i64 %80, i64* %2, align 8
  %81 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %82 = load i64, i64* %2, align 8
  %83 = call i32 (i8*, i8*, ...) @sprintf(i8* %81, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1267, i32 0, i32 0), i64 %82) #10
  %84 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1272, i32 0, i32 0), i8* %84)
  %86 = load %31*, %31** %1, align 8
  %87 = getelementptr inbounds %31, %31* %86, i32 0, i32 4
  %88 = load i8*, i8** %87, align 8
  %89 = call i64 @1429(i8* %88, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1273, i32 0, i32 0))
  store i64 %89, i64* %2, align 8
  %90 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %91 = load i64, i64* %2, align 8
  %92 = call i32 (i8*, i8*, ...) @sprintf(i8* %90, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1267, i32 0, i32 0), i64 %91) #10
  %93 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1270, i32 0, i32 0), i8* %93)
  %95 = load %31*, %31** %1, align 8
  %96 = getelementptr inbounds %31, %31* %95, i32 0, i32 4
  %97 = load i8*, i8** %96, align 8
  %98 = call i64 @1429(i8* %97, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @1274, i32 0, i32 0))
  store i64 %98, i64* %2, align 8
  %99 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %100 = load i64, i64* %2, align 8
  %101 = load i64, i64* %3, align 8
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %63
  br label %108

104:                                              ; preds = %63
  %105 = load i64, i64* %2, align 8
  %106 = load i64, i64* %3, align 8
  %107 = sub nsw i64 %105, %106
  br label %108

108:                                              ; preds = %104, %103
  %109 = phi i64 [ 0, %103 ], [ %107, %104 ]
  %110 = call i32 (i8*, i8*, ...) @sprintf(i8* %99, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1275, i32 0, i32 0), i64 %100, i64 %109) #10
  %111 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1276, i32 0, i32 0), i8* %111)
  %113 = load i64, i64* %2, align 8
  store i64 %113, i64* %3, align 8
  %114 = load %31*, %31** %1, align 8
  %115 = getelementptr inbounds %31, %31* %114, i32 0, i32 4
  %116 = load i8*, i8** %115, align 8
  %117 = call i64 @1429(i8* %116, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1277, i32 0, i32 0))
  store i64 %117, i64* %2, align 8
  %118 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %119 = load i64, i64* %2, align 8
  %120 = call i32 (i8*, i8*, ...) @sprintf(i8* %118, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1267, i32 0, i32 0), i64 %119) #10
  %121 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i32 0, i32 0
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1278, i32 0, i32 0), i8* %121)
  %123 = load %31*, %31** %1, align 8
  %124 = getelementptr inbounds %31, %31* %123, i32 0, i32 4
  %125 = load i8*, i8** %124, align 8
  %126 = call i64 @1429(i8* %125, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1279, i32 0, i32 0))
  store i64 %126, i64* %2, align 8
  %127 = load %31*, %31** %1, align 8
  %128 = getelementptr inbounds %31, %31* %127, i32 0, i32 4
  %129 = load i8*, i8** %128, align 8
  %130 = call i64 @1429(i8* %129, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1280, i32 0, i32 0))
  %131 = shl i64 %130, 1
  %132 = load i64, i64* %2, align 8
  %133 = or i64 %132, %131
  store i64 %133, i64* %2, align 8
  %134 = load %31*, %31** %1, align 8
  %135 = getelementptr inbounds %31, %31* %134, i32 0, i32 4
  %136 = load i8*, i8** %135, align 8
  %137 = call i64 @1429(i8* %136, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1281, i32 0, i32 0))
  %138 = shl i64 %137, 2
  %139 = load i64, i64* %2, align 8
  %140 = or i64 %139, %138
  store i64 %140, i64* %2, align 8
  %141 = load i64, i64* %2, align 8
  switch i64 %141, label %150 [
    i64 0, label %150
    i64 1, label %142
    i64 2, label %144
    i64 3, label %146
    i64 4, label %148
  ]

142:                                              ; preds = %108
  %143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @460, i32 0, i32 0))
  br label %150

144:                                              ; preds = %108
  %145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1282, i32 0, i32 0))
  br label %150

146:                                              ; preds = %108
  %147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1283, i32 0, i32 0))
  br label %150

148:                                              ; preds = %108
  %149 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1284, i32 0, i32 0))
  br label %150

150:                                              ; preds = %108, %148, %146, %144, %142, %108
  %151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  %152 = load %31*, %31** %1, align 8
  %153 = bitcast %31* %152 to i8*
  call void @freeReplyObject(i8* %153)
  %154 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %155 = trunc i64 %154 to i32
  %156 = call i32 @usleep(i32 %155)
  %157 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %157) #10
  %158 = bitcast [64 x i8]* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %158) #10
  br label %13

159:                                              ; No predecessors!
  ret void

160:                                              ; preds = %56
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1397() #0 {
  %1 = alloca %31*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %5 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #10
  store i64 0, i64* %2, align 8
  br label %6

6:                                                ; preds = %80, %0
  %7 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 31), align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = load %10*, %10** @736, align 8
  %11 = load i64, i64* %2, align 8
  %12 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 31), align 8
  %13 = call i8* (%10*, i8*, ...) @redisCommand(%10* %10, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1285, i32 0, i32 0), i64 %11, i8* %12)
  %14 = bitcast i8* %13 to %31*
  store %31* %14, %31** %1, align 8
  br label %20

15:                                               ; preds = %6
  %16 = load %10*, %10** @736, align 8
  %17 = load i64, i64* %2, align 8
  %18 = call i8* (%10*, i8*, ...) @redisCommand(%10* %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1239, i32 0, i32 0), i64 %17)
  %19 = bitcast i8* %18 to %31*
  store %31* %19, %31** %1, align 8
  br label %20

20:                                               ; preds = %15, %9
  %21 = load %31*, %31** %1, align 8
  %22 = icmp eq %31* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1286, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

25:                                               ; preds = %20
  %26 = load %31*, %31** %1, align 8
  %27 = getelementptr inbounds %31, %31* %26, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %30, label %35

30:                                               ; preds = %25
  %31 = load %31*, %31** %1, align 8
  %32 = getelementptr inbounds %31, %31* %31, i32 0, i32 4
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1264, i32 0, i32 0), i8* %33)
  call void @exit(i32 1) #14
  unreachable

35:                                               ; preds = %25
  %36 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #10
  %37 = load %31*, %31** %1, align 8
  %38 = getelementptr inbounds %31, %31* %37, i32 0, i32 7
  %39 = load %31**, %31*** %38, align 8
  %40 = getelementptr inbounds %31*, %31** %39, i64 0
  %41 = load %31*, %31** %40, align 8
  %42 = getelementptr inbounds %31, %31* %41, i32 0, i32 4
  %43 = load i8*, i8** %42, align 8
  %44 = call i64 @strtoull(i8* %43, i8** null, i32 10) #10
  store i64 %44, i64* %2, align 8
  store i32 0, i32* %3, align 4
  br label %45

45:                                               ; preds = %71, %35
  %46 = load i32, i32* %3, align 4
  %47 = zext i32 %46 to i64
  %48 = load %31*, %31** %1, align 8
  %49 = getelementptr inbounds %31, %31* %48, i32 0, i32 7
  %50 = load %31**, %31*** %49, align 8
  %51 = getelementptr inbounds %31*, %31** %50, i64 1
  %52 = load %31*, %31** %51, align 8
  %53 = getelementptr inbounds %31, %31* %52, i32 0, i32 6
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %47, %54
  br i1 %55, label %56, label %74

56:                                               ; preds = %45
  %57 = load %31*, %31** %1, align 8
  %58 = getelementptr inbounds %31, %31* %57, i32 0, i32 7
  %59 = load %31**, %31*** %58, align 8
  %60 = getelementptr inbounds %31*, %31** %59, i64 1
  %61 = load %31*, %31** %60, align 8
  %62 = getelementptr inbounds %31, %31* %61, i32 0, i32 7
  %63 = load %31**, %31*** %62, align 8
  %64 = load i32, i32* %3, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %31*, %31** %63, i64 %65
  %67 = load %31*, %31** %66, align 8
  %68 = getelementptr inbounds %31, %31* %67, i32 0, i32 4
  %69 = load i8*, i8** %68, align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %69)
  br label %71

71:                                               ; preds = %56
  %72 = load i32, i32* %3, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %3, align 4
  br label %45

74:                                               ; preds = %45
  %75 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %75) #10
  br label %76

76:                                               ; preds = %74
  br label %77

77:                                               ; preds = %76
  %78 = load %31*, %31** %1, align 8
  %79 = bitcast %31* %78 to i8*
  call void @freeReplyObject(i8* %79)
  br label %80

80:                                               ; preds = %77
  %81 = load i64, i64* %2, align 8
  %82 = icmp ne i64 %81, 0
  br i1 %82, label %6, label %83

83:                                               ; preds = %80
  call void @exit(i32 0) #14
  unreachable

84:                                               ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1398() #0 {
  %1 = alloca %31*, align 8
  %2 = alloca [128 x i8], align 16
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca [6 x i8], align 1
  %8 = alloca i32, align 4
  %9 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #10
  %10 = bitcast [128 x i8]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* %10) #10
  %11 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  %13 = call i64 @time(i64* null) #10
  %14 = call i32 @getpid() #10
  %15 = sext i32 %14 to i64
  %16 = xor i64 %13, %15
  %17 = trunc i64 %16 to i32
  call void @srand(i32 %17) #10
  br label %18

18:                                               ; preds = %123, %0
  br label %19

19:                                               ; preds = %18
  %20 = call i64 @1495()
  store i64 %20, i64* %3, align 8
  %21 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  store i64 0, i64* %5, align 8
  %22 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  store i64 0, i64* %6, align 8
  br label %23

23:                                               ; preds = %122, %19
  %24 = call i64 @1495()
  %25 = load i64, i64* %3, align 8
  %26 = sub nsw i64 %24, %25
  %27 = icmp slt i64 %26, 1000
  br i1 %27, label %28, label %123

28:                                               ; preds = %23
  store i32 0, i32* %4, align 4
  br label %29

29:                                               ; preds = %59, %28
  %30 = load i32, i32* %4, align 4
  %31 = icmp slt i32 %30, 250
  br i1 %31, label %32, label %62

32:                                               ; preds = %29
  %33 = bitcast [6 x i8]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* %33) #10
  %34 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 5
  store i8 0, i8* %34, align 1
  %35 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #10
  store i32 0, i32* %8, align 4
  br label %36

36:                                               ; preds = %49, %32
  %37 = load i32, i32* %8, align 4
  %38 = icmp slt i32 %37, 5
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  %40 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %40) #10
  br label %52

41:                                               ; preds = %36
  %42 = call i32 @rand() #10
  %43 = srem i32 %42, 57
  %44 = add nsw i32 65, %43
  %45 = trunc i32 %44 to i8
  %46 = load i32, i32* %8, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 %47
  store i8 %45, i8* %48, align 1
  br label %49

49:                                               ; preds = %41
  %50 = load i32, i32* %8, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %8, align 4
  br label %36

52:                                               ; preds = %39
  %53 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i32 0, i32 0
  call void @LRUTestGenKey(i8* %53, i64 128)
  %54 = load %10*, %10** @736, align 8
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i32 0, i32 0
  %56 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i32 0, i32 0
  %57 = call i32 (%10*, i8*, ...) @redisAppendCommand(%10* %54, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1287, i32 0, i32 0), i8* %55, i8* %56)
  %58 = bitcast [6 x i8]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 6, i8* %58) #10
  br label %59

59:                                               ; preds = %52
  %60 = load i32, i32* %4, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %4, align 4
  br label %29

62:                                               ; preds = %29
  store i32 0, i32* %4, align 4
  br label %63

63:                                               ; preds = %70, %62
  %64 = load i32, i32* %4, align 4
  %65 = icmp slt i32 %64, 250
  br i1 %65, label %66, label %73

66:                                               ; preds = %63
  %67 = load %10*, %10** @736, align 8
  %68 = bitcast %31** %1 to i8**
  %69 = call i32 @redisGetReply(%10* %67, i8** %68)
  br label %70

70:                                               ; preds = %66
  %71 = load i32, i32* %4, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %4, align 4
  br label %63

73:                                               ; preds = %63
  store i32 0, i32* %4, align 4
  br label %74

74:                                               ; preds = %82, %73
  %75 = load i32, i32* %4, align 4
  %76 = icmp slt i32 %75, 250
  br i1 %76, label %77, label %85

77:                                               ; preds = %74
  %78 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i32 0, i32 0
  call void @LRUTestGenKey(i8* %78, i64 128)
  %79 = load %10*, %10** @736, align 8
  %80 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i32 0, i32 0
  %81 = call i32 (%10*, i8*, ...) @redisAppendCommand(%10* %79, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1288, i32 0, i32 0), i8* %80)
  br label %82

82:                                               ; preds = %77
  %83 = load i32, i32* %4, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %4, align 4
  br label %74

85:                                               ; preds = %74
  store i32 0, i32* %4, align 4
  br label %86

86:                                               ; preds = %111, %85
  %87 = load i32, i32* %4, align 4
  %88 = icmp slt i32 %87, 250
  br i1 %88, label %89, label %114

89:                                               ; preds = %86
  %90 = load %10*, %10** @736, align 8
  %91 = bitcast %31** %1 to i8**
  %92 = call i32 @redisGetReply(%10* %90, i8** %91)
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %110

94:                                               ; preds = %89
  %95 = load %31*, %31** %1, align 8
  %96 = getelementptr inbounds %31, %31* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  switch i32 %97, label %106 [
    i32 6, label %98
    i32 4, label %103
  ]

98:                                               ; preds = %94
  %99 = load %31*, %31** %1, align 8
  %100 = getelementptr inbounds %31, %31* %99, i32 0, i32 4
  %101 = load i8*, i8** %100, align 8
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %101)
  br label %109

103:                                              ; preds = %94
  %104 = load i64, i64* %6, align 8
  %105 = add nsw i64 %104, 1
  store i64 %105, i64* %6, align 8
  br label %109

106:                                              ; preds = %94
  %107 = load i64, i64* %5, align 8
  %108 = add nsw i64 %107, 1
  store i64 %108, i64* %5, align 8
  br label %109

109:                                              ; preds = %106, %103, %98
  br label %110

110:                                              ; preds = %109, %89
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %4, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %4, align 4
  br label %86

114:                                              ; preds = %86
  %115 = load %10*, %10** @736, align 8
  %116 = getelementptr inbounds %10, %10* %115, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = load %1*, %1** @stderr, align 8
  %121 = call i32 (%1*, i8*, ...) @fprintf(%1* %120, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1289, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

122:                                              ; preds = %114
  br label %23

123:                                              ; preds = %23
  %124 = load i64, i64* %5, align 8
  %125 = load i64, i64* %6, align 8
  %126 = add nsw i64 %124, %125
  %127 = load i64, i64* %5, align 8
  %128 = load i64, i64* %5, align 8
  %129 = sitofp i64 %128 to double
  %130 = load i64, i64* %5, align 8
  %131 = load i64, i64* %6, align 8
  %132 = add nsw i64 %130, %131
  %133 = sitofp i64 %132 to double
  %134 = fdiv double %129, %133
  %135 = fmul double %134, 1.000000e+02
  %136 = load i64, i64* %6, align 8
  %137 = load i64, i64* %6, align 8
  %138 = sitofp i64 %137 to double
  %139 = load i64, i64* %5, align 8
  %140 = load i64, i64* %6, align 8
  %141 = add nsw i64 %139, %140
  %142 = sitofp i64 %141 to double
  %143 = fdiv double %138, %142
  %144 = fmul double %143, 1.000000e+02
  %145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @1290, i32 0, i32 0), i64 %126, i64 %127, double %135, i64 %136, double %144)
  %146 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %146) #10
  %147 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %147) #10
  br label %18

148:                                              ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1399() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = bitcast i64* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  store i64 0, i64* %3, align 8
  %14 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  store i64 0, i64* %4, align 8
  %15 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 30), align 4
  %16 = mul nsw i32 %15, 1000000
  %17 = sext i32 %16 to i64
  store i64 %17, i64* %2, align 8
  %18 = call i64 @1497()
  %19 = load i64, i64* %2, align 8
  %20 = add nsw i64 %18, %19
  store i64 %20, i64* %1, align 8
  %21 = call void (i32)* @signal(i32 2, void (i32)* @1509) #10
  br label %22

22:                                               ; preds = %80, %75, %0
  br label %23

23:                                               ; preds = %22
  %24 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #10
  %25 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #10
  %26 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #10
  %27 = call i64 @1497()
  store i64 %27, i64* %5, align 8
  %28 = call i64 @compute_something_fast()
  %29 = call i64 @1497()
  store i64 %29, i64* %6, align 8
  %30 = load i64, i64* %6, align 8
  %31 = load i64, i64* %5, align 8
  %32 = sub nsw i64 %30, %31
  store i64 %32, i64* %7, align 8
  %33 = load i64, i64* %4, align 8
  %34 = add nsw i64 %33, 1
  store i64 %34, i64* %4, align 8
  %35 = load i64, i64* %7, align 8
  %36 = icmp sle i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %23
  store i32 2, i32* %8, align 4
  br label %75

38:                                               ; preds = %23
  %39 = load i64, i64* %7, align 8
  %40 = load i64, i64* %3, align 8
  %41 = icmp sgt i64 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = load i64, i64* %7, align 8
  store i64 %43, i64* %3, align 8
  %44 = load i64, i64* %3, align 8
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @1291, i32 0, i32 0), i64 %44)
  br label %46

46:                                               ; preds = %42, %38
  %47 = bitcast double* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #10
  %48 = load i64, i64* %2, align 8
  %49 = sitofp i64 %48 to double
  %50 = load i64, i64* %4, align 8
  %51 = sitofp i64 %50 to double
  %52 = fdiv double %49, %51
  store double %52, double* %9, align 8
  %53 = bitcast double* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #10
  %54 = load double, double* %9, align 8
  %55 = fmul double %54, 1.000000e+03
  store double %55, double* %10, align 8
  %56 = load volatile i32, i32* @1292, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %46
  %59 = load i64, i64* %6, align 8
  %60 = load i64, i64* %1, align 8
  %61 = icmp sgt i64 %59, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %58, %46
  %63 = load i64, i64* %4, align 8
  %64 = load double, double* %9, align 8
  %65 = load double, double* %10, align 8
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @1293, i32 0, i32 0), i64 %63, double %64, double %65)
  %67 = load i64, i64* %3, align 8
  %68 = sitofp i64 %67 to double
  %69 = load double, double* %9, align 8
  %70 = fdiv double %68, %69
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @1294, i32 0, i32 0), double %70)
  call void @exit(i32 0) #14
  unreachable

72:                                               ; preds = %58
  %73 = bitcast double* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %73) #10
  %74 = bitcast double* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #10
  store i32 0, i32* %8, align 4
  br label %75

75:                                               ; preds = %72, %37
  %76 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #10
  %77 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #10
  %78 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %78) #10
  %79 = load i32, i32* %8, align 4
  switch i32 %79, label %82 [
    i32 0, label %80
    i32 2, label %22
  ]

80:                                               ; preds = %75
  br label %22

81:                                               ; No predecessors!
  ret void

82:                                               ; preds = %75
  unreachable
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #4

; Function Attrs: nounwind uwtable
define internal void @1400() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  store i8* null, i8** %1, align 8
  %14 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #10
  store i32 0, i32* %2, align 4
  %15 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  %17 = bitcast i8*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10
  call void @1510()
  call void @1511()
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 12), align 4
  call void @linenoiseSetMultiLine(i32 1)
  call void @linenoiseSetCompletionCallback(void (i8*, %41*)* @1512)
  call void @linenoiseSetHintsCallback(i8* (i8*, i32*, i32*)* @1513)
  call void @linenoiseSetFreeHintsCallback(void (i8*)* @1514)
  %18 = load %1*, %1** @stdin, align 8
  %19 = call i32 @fileno(%1* %18) #10
  %20 = call i32 @isatty(i32 %19) #10
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %0
  %23 = call i8* @1371(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1295, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1296, i32 0, i32 0))
  store i8* %23, i8** %1, align 8
  store i32 1, i32* %2, align 4
  %24 = load i8*, i8** %1, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %22
  %27 = load i8*, i8** %1, align 8
  %28 = call i32 @linenoiseHistoryLoad(i8* %27)
  br label %29

29:                                               ; preds = %26, %22
  call void @cliLoadPreferences()
  br label %30

30:                                               ; preds = %29, %0
  call void @1482()
  br label %31

31:                                               ; preds = %283, %277, %30
  %32 = load %10*, %10** @736, align 8
  %33 = icmp ne %10* %32, null
  %34 = zext i1 %33 to i64
  %35 = select i1 %33, i8* getelementptr inbounds (%21, %21* @765, i32 0, i32 43, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1297, i32 0, i32 0)
  %36 = call i8* @linenoise(i8* %35)
  store i8* %36, i8** %3, align 8
  %37 = icmp ne i8* %36, null
  br i1 %37, label %38, label %285

38:                                               ; preds = %31
  %39 = load i8*, i8** %3, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 0
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %283

44:                                               ; preds = %38
  %45 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #10
  store i64 1, i64* %6, align 8
  %46 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #10
  store i32 0, i32* %7, align 4
  %47 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #10
  store i8* null, i8** %8, align 8
  %48 = load i8*, i8** %3, align 8
  %49 = call i8** @1515(i8* %48, i32* %4)
  store i8** %49, i8*** %5, align 8
  %50 = load i8**, i8*** %5, align 8
  %51 = icmp ne i8** %50, null
  br i1 %51, label %52, label %88

52:                                               ; preds = %44
  %53 = load i32, i32* %4, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %88

55:                                               ; preds = %52
  %56 = call i32* @__errno_location() #13
  store i32 0, i32* %56, align 4
  %57 = load i8**, i8*** %5, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 0
  %59 = load i8*, i8** %58, align 8
  %60 = call i64 @strtol(i8* %59, i8** %8, i32 10) #10
  store i64 %60, i64* %6, align 8
  %61 = load i32, i32* %4, align 4
  %62 = icmp sgt i32 %61, 1
  br i1 %62, label %63, label %86

63:                                               ; preds = %55
  %64 = load i8*, i8** %8, align 8
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %86

68:                                               ; preds = %63
  %69 = call i32* @__errno_location() #13
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 34
  br i1 %71, label %79, label %72

72:                                               ; preds = %68
  %73 = call i32* @__errno_location() #13
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 22
  br i1 %75, label %79, label %76

76:                                               ; preds = %72
  %77 = load i64, i64* %6, align 8
  %78 = icmp sle i64 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %76, %72, %68
  %80 = load %1*, %1** @stdout, align 8
  %81 = call i32 @fputs(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @1298, i32 0, i32 0), %1* %80)
  %82 = load i8**, i8*** %5, align 8
  %83 = load i32, i32* %4, align 4
  call void @sdsfreesplitres(i8** %82, i32 %83)
  %84 = load i8*, i8** %3, align 8
  call void @linenoiseFree(i8* %84)
  store i32 2, i32* %9, align 4
  br label %277

85:                                               ; preds = %76
  store i32 1, i32* %7, align 4
  br label %87

86:                                               ; preds = %63, %55
  store i64 1, i64* %6, align 8
  br label %87

87:                                               ; preds = %86, %85
  br label %88

88:                                               ; preds = %87, %52, %44
  %89 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %89) #10
  store i32 0, i32* %10, align 4
  %90 = load i8**, i8*** %5, align 8
  %91 = icmp ne i8** %90, null
  br i1 %91, label %92, label %129

92:                                               ; preds = %88
  %93 = load i32, i32* %4, align 4
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %129

95:                                               ; preds = %92
  %96 = load i8**, i8*** %5, align 8
  %97 = load i32, i32* %7, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8*, i8** %96, i64 %98
  %100 = load i8*, i8** %99, align 8
  %101 = call i32 @strcasecmp(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1299, i32 0, i32 0)) #12
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %104, label %103

103:                                              ; preds = %95
  store i32 1, i32* %10, align 4
  br label %128

104:                                              ; preds = %95
  %105 = load i32, i32* %7, align 4
  %106 = add nsw i32 %105, 1
  %107 = load i32, i32* %4, align 4
  %108 = icmp slt i32 %106, %107
  br i1 %108, label %109, label %127

109:                                              ; preds = %104
  %110 = load i8**, i8*** %5, align 8
  %111 = load i32, i32* %7, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8*, i8** %110, i64 %112
  %114 = load i8*, i8** %113, align 8
  %115 = call i32 @strcasecmp(i8* %114, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1300, i32 0, i32 0)) #12
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %127, label %117

117:                                              ; preds = %109
  %118 = load i8**, i8*** %5, align 8
  %119 = load i32, i32* %7, align 4
  %120 = add nsw i32 %119, 1
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8*, i8** %118, i64 %121
  %123 = load i8*, i8** %122, align 8
  %124 = call i32 @strcasecmp(i8* %123, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1301, i32 0, i32 0)) #12
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %117
  store i32 1, i32* %10, align 4
  br label %127

127:                                              ; preds = %126, %117, %109, %104
  br label %128

128:                                              ; preds = %127, %103
  br label %129

129:                                              ; preds = %128, %92, %88
  %130 = load i32, i32* %10, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %145, label %132

132:                                              ; preds = %129
  %133 = load i32, i32* %2, align 4
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %132
  %136 = load i8*, i8** %3, align 8
  %137 = call i32 @linenoiseHistoryAdd(i8* %136)
  br label %138

138:                                              ; preds = %135, %132
  %139 = load i8*, i8** %1, align 8
  %140 = icmp ne i8* %139, null
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = load i8*, i8** %1, align 8
  %143 = call i32 @linenoiseHistorySave(i8* %142)
  br label %144

144:                                              ; preds = %141, %138
  br label %145

145:                                              ; preds = %144, %129
  %146 = load i8**, i8*** %5, align 8
  %147 = icmp eq i8** %146, null
  br i1 %147, label %148, label %151

148:                                              ; preds = %145
  %149 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1302, i32 0, i32 0))
  %150 = load i8*, i8** %3, align 8
  call void @linenoiseFree(i8* %150)
  store i32 2, i32* %9, align 4
  br label %275

151:                                              ; preds = %145
  %152 = load i32, i32* %4, align 4
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %154, label %271

154:                                              ; preds = %151
  %155 = load i8**, i8*** %5, align 8
  %156 = getelementptr inbounds i8*, i8** %155, i64 0
  %157 = load i8*, i8** %156, align 8
  %158 = call i32 @strcasecmp(i8* %157, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1303, i32 0, i32 0)) #12
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %166, label %160

160:                                              ; preds = %154
  %161 = load i8**, i8*** %5, align 8
  %162 = getelementptr inbounds i8*, i8** %161, i64 0
  %163 = load i8*, i8** %162, align 8
  %164 = call i32 @strcasecmp(i8* %163, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1304, i32 0, i32 0)) #12
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %160, %154
  call void @exit(i32 0) #14
  unreachable

167:                                              ; preds = %160
  %168 = load i8**, i8*** %5, align 8
  %169 = getelementptr inbounds i8*, i8** %168, i64 0
  %170 = load i8*, i8** %169, align 8
  %171 = getelementptr inbounds i8, i8* %170, i64 0
  %172 = load i8, i8* %171, align 1
  %173 = sext i8 %172 to i32
  %174 = icmp eq i32 %173, 58
  br i1 %174, label %175, label %181

175:                                              ; preds = %167
  %176 = load i8**, i8*** %5, align 8
  %177 = load i32, i32* %4, align 4
  call void @cliSetPreferences(i8** %176, i32 %177, i32 1)
  %178 = load i8**, i8*** %5, align 8
  %179 = load i32, i32* %4, align 4
  call void @sdsfreesplitres(i8** %178, i32 %179)
  %180 = load i8*, i8** %3, align 8
  call void @linenoiseFree(i8* %180)
  store i32 2, i32* %9, align 4
  br label %275

181:                                              ; preds = %167
  %182 = load i8**, i8*** %5, align 8
  %183 = getelementptr inbounds i8*, i8** %182, i64 0
  %184 = load i8*, i8** %183, align 8
  %185 = call i32 @strcasecmp(i8* %184, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1305, i32 0, i32 0)) #12
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %197

187:                                              ; preds = %181
  %188 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 44), align 8
  %189 = icmp ne i8* %188, null
  br i1 %189, label %190, label %194

190:                                              ; preds = %187
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %191 = load i8**, i8*** %5, align 8
  %192 = load i32, i32* %4, align 4
  call void @sdsfreesplitres(i8** %191, i32 %192)
  %193 = load i8*, i8** %3, align 8
  call void @linenoiseFree(i8* %193)
  store i32 1, i32* %9, align 4
  br label %275

194:                                              ; preds = %187
  %195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1306, i32 0, i32 0))
  br label %196

196:                                              ; preds = %194
  br label %268

197:                                              ; preds = %181
  %198 = load i32, i32* %4, align 4
  %199 = icmp eq i32 %198, 3
  br i1 %199, label %200, label %217

200:                                              ; preds = %197
  %201 = load i8**, i8*** %5, align 8
  %202 = getelementptr inbounds i8*, i8** %201, i64 0
  %203 = load i8*, i8** %202, align 8
  %204 = call i32 @strcasecmp(i8* %203, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1307, i32 0, i32 0)) #12
  %205 = icmp ne i32 %204, 0
  br i1 %205, label %217, label %206

206:                                              ; preds = %200
  %207 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  call void @sdsfree(i8* %207)
  %208 = load i8**, i8*** %5, align 8
  %209 = getelementptr inbounds i8*, i8** %208, i64 1
  %210 = load i8*, i8** %209, align 8
  %211 = call i8* @sdsnew(i8* %210)
  store i8* %211, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  %212 = load i8**, i8*** %5, align 8
  %213 = getelementptr inbounds i8*, i8** %212, i64 2
  %214 = load i8*, i8** %213, align 8
  %215 = call i32 @atoi(i8* %214) #12
  store i32 %215, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  call void @1482()
  %216 = call i32 @1388(i32 1)
  br label %267

217:                                              ; preds = %200, %197
  %218 = load i32, i32* %4, align 4
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %227

220:                                              ; preds = %217
  %221 = load i8**, i8*** %5, align 8
  %222 = getelementptr inbounds i8*, i8** %221, i64 0
  %223 = load i8*, i8** %222, align 8
  %224 = call i32 @strcasecmp(i8* %223, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1308, i32 0, i32 0)) #12
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %227, label %226

226:                                              ; preds = %220
  call void @linenoiseClearScreen()
  br label %266

227:                                              ; preds = %220, %217
  %228 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %228) #10
  %229 = call i64 @1495()
  store i64 %229, i64* %11, align 8
  %230 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %230) #10
  %231 = load i32, i32* %4, align 4
  %232 = load i32, i32* %7, align 4
  %233 = sub nsw i32 %231, %232
  %234 = load i8**, i8*** %5, align 8
  %235 = load i32, i32* %7, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i8*, i8** %234, i64 %236
  %238 = load i64, i64* %6, align 8
  %239 = call i32 @1516(i32 %233, i8** %237, i64 %238)
  %240 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 47), align 8
  %241 = icmp ne i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %227
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 47), align 8
  %243 = call i32 @1498(i32 0)
  %244 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 46), align 4
  %245 = icmp ne i32 %244, 0
  %246 = zext i1 %245 to i64
  %247 = select i1 %245, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @1310, i32 0, i32 0)
  %248 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @1309, i32 0, i32 0), i8* %247)
  br label %249

249:                                              ; preds = %242, %227
  %250 = call i64 @1495()
  %251 = load i64, i64* %11, align 8
  %252 = sub nsw i64 %250, %251
  store i64 %252, i64* %12, align 8
  %253 = load i64, i64* %12, align 8
  %254 = icmp sge i64 %253, 500
  br i1 %254, label %255, label %263

255:                                              ; preds = %249
  %256 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %263

258:                                              ; preds = %255
  %259 = load i64, i64* %12, align 8
  %260 = sitofp i64 %259 to double
  %261 = fdiv double %260, 1.000000e+03
  %262 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1311, i32 0, i32 0), double %261)
  br label %263

263:                                              ; preds = %258, %255, %249
  %264 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #10
  %265 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %265) #10
  br label %266

266:                                              ; preds = %263, %226
  br label %267

267:                                              ; preds = %266, %206
  br label %268

268:                                              ; preds = %267, %196
  br label %269

269:                                              ; preds = %268
  br label %270

270:                                              ; preds = %269
  br label %271

271:                                              ; preds = %270, %151
  br label %272

272:                                              ; preds = %271
  %273 = load i8**, i8*** %5, align 8
  %274 = load i32, i32* %4, align 4
  call void @sdsfreesplitres(i8** %273, i32 %274)
  store i32 0, i32* %9, align 4
  br label %275

275:                                              ; preds = %272, %190, %175, %148
  %276 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #10
  br label %277

277:                                              ; preds = %275, %79
  %278 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %278) #10
  %279 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #10
  %280 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %280) #10
  %281 = load i32, i32* %9, align 4
  switch i32 %281, label %286 [
    i32 0, label %282
    i32 2, label %31
  ]

282:                                              ; preds = %277
  br label %283

283:                                              ; preds = %282, %38
  %284 = load i8*, i8** %3, align 8
  call void @linenoiseFree(i8* %284)
  br label %31

285:                                              ; preds = %31
  call void @exit(i32 0) #14
  unreachable

286:                                              ; preds = %277
  %287 = bitcast i8*** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %287) #10
  %288 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %288) #10
  %289 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %289) #10
  %290 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %290) #10
  %291 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %291) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @1401(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %1*, align 8
  %7 = alloca [1024 x i8], align 16
  %8 = alloca i64, align 8
  %9 = alloca i8**, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %31*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %17 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10
  store i8* null, i8** %5, align 8
  %18 = bitcast %1** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #10
  %19 = bitcast [1024 x i8]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* %19) #10
  %20 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #10
  %21 = bitcast i8*** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  %22 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #10
  %23 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #10
  %24 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #10
  %25 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #10
  store i32 0, i32* %13, align 4
  br label %26

26:                                               ; preds = %174, %2
  br label %27

27:                                               ; preds = %26
  %28 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @1364, i32 0, i32 0))
  br label %32

32:                                               ; preds = %30, %27
  %33 = load i8*, i8** %5, align 8
  call void @sdsfree(i8* %33)
  %34 = call i8* @sdsempty()
  store i8* %34, i8** %5, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %35 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 44), align 8
  %36 = call %1* @fopen64(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @696, i32 0, i32 0))
  store %1* %36, %1** %6, align 8
  %37 = load %1*, %1** %6, align 8
  %38 = icmp ne %1* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %32
  %40 = load %1*, %1** @stderr, align 8
  %41 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 44), align 8
  %42 = call i32* @__errno_location() #13
  %43 = load i32, i32* %42, align 4
  %44 = call i8* @strerror(i32 %43) #10
  %45 = call i32 (%1*, i8*, ...) @fprintf(%1* %40, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @1365, i32 0, i32 0), i8* %41, i8* %44)
  call void @exit(i32 1) #14
  unreachable

46:                                               ; preds = %32
  br label %47

47:                                               ; preds = %52, %46
  %48 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0
  %49 = load %1*, %1** %6, align 8
  %50 = call i64 @fread(i8* %48, i64 1, i64 1024, %1* %49)
  store i64 %50, i64* %8, align 8
  %51 = icmp ne i64 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %47
  %53 = load i8*, i8** %5, align 8
  %54 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0
  %55 = load i64, i64* %8, align 8
  %56 = call i8* @sdscatlen(i8* %53, i8* %54, i64 %55)
  store i8* %56, i8** %5, align 8
  br label %47

57:                                               ; preds = %47
  %58 = load %1*, %1** %6, align 8
  %59 = call i32 @fclose(%1* %58)
  %60 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %78

62:                                               ; preds = %57
  %63 = bitcast %31** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #10
  %64 = load %10*, %10** @736, align 8
  %65 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 46), align 4
  %66 = icmp ne i32 %65, 0
  %67 = zext i1 %66 to i64
  %68 = select i1 %66, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1366, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @1367, i32 0, i32 0)
  %69 = call i8* (%10*, i8*, ...) @redisCommand(%10* %64, i8* %68)
  %70 = bitcast i8* %69 to %31*
  store %31* %70, %31** %14, align 8
  %71 = load %31*, %31** %14, align 8
  %72 = icmp ne %31* %71, null
  br i1 %72, label %73, label %76

73:                                               ; preds = %62
  %74 = load %31*, %31** %14, align 8
  %75 = bitcast %31* %74 to i8*
  call void @freeReplyObject(i8* %75)
  br label %76

76:                                               ; preds = %73, %62
  %77 = bitcast %31** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #10
  br label %78

78:                                               ; preds = %76, %57
  %79 = load i32, i32* %3, align 4
  %80 = add nsw i32 %79, 3
  %81 = sext i32 %80 to i64
  %82 = mul i64 8, %81
  %83 = call i8* @zmalloc(i64 %82)
  %84 = bitcast i8* %83 to i8**
  store i8** %84, i8*** %9, align 8
  %85 = call i8* @sdsnew(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @199, i32 0, i32 0))
  %86 = load i8**, i8*** %9, align 8
  %87 = getelementptr inbounds i8*, i8** %86, i64 0
  store i8* %85, i8** %87, align 8
  %88 = load i8*, i8** %5, align 8
  %89 = load i8**, i8*** %9, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 1
  store i8* %88, i8** %90, align 8
  store i32 0, i32* %10, align 4
  br label %91

91:                                               ; preds = %139, %78
  %92 = load i32, i32* %10, align 4
  %93 = load i32, i32* %3, align 4
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %95, label %142

95:                                               ; preds = %91
  %96 = load i32, i32* %11, align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %119, label %98

98:                                               ; preds = %95
  %99 = load i8**, i8*** %4, align 8
  %100 = load i32, i32* %10, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8*, i8** %99, i64 %101
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 0
  %105 = load i8, i8* %104, align 1
  %106 = sext i8 %105 to i32
  %107 = icmp eq i32 %106, 44
  br i1 %107, label %108, label %119

108:                                              ; preds = %98
  %109 = load i8**, i8*** %4, align 8
  %110 = load i32, i32* %10, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8*, i8** %109, i64 %111
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i32
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %108
  store i32 1, i32* %11, align 4
  br label %139

119:                                              ; preds = %108, %98, %95
  %120 = load i8**, i8*** %4, align 8
  %121 = load i32, i32* %10, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8*, i8** %120, i64 %122
  %124 = load i8*, i8** %123, align 8
  %125 = call i8* @sdsnew(i8* %124)
  %126 = load i8**, i8*** %9, align 8
  %127 = load i32, i32* %10, align 4
  %128 = add nsw i32 %127, 3
  %129 = load i32, i32* %11, align 4
  %130 = sub nsw i32 %128, %129
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8*, i8** %126, i64 %131
  store i8* %125, i8** %132, align 8
  %133 = load i32, i32* %11, align 4
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %119
  %136 = load i32, i32* %12, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %12, align 4
  br label %138

138:                                              ; preds = %135, %119
  br label %139

139:                                              ; preds = %138, %118
  %140 = load i32, i32* %10, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %10, align 4
  br label %91

142:                                              ; preds = %91
  %143 = call i8* @sdsempty()
  %144 = load i32, i32* %12, align 4
  %145 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %143, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @926, i32 0, i32 0), i32 %144)
  %146 = load i8**, i8*** %9, align 8
  %147 = getelementptr inbounds i8*, i8** %146, i64 2
  store i8* %145, i8** %147, align 8
  %148 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %148) #10
  %149 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  store i32 %149, i32* %15, align 4
  %150 = load i32, i32* %3, align 4
  %151 = add nsw i32 %150, 3
  %152 = load i32, i32* %11, align 4
  %153 = sub nsw i32 %151, %152
  %154 = load i8**, i8*** %9, align 8
  %155 = call i32 @1521(i32 %153, i8** %154)
  store i32 %155, i32* %13, align 4
  %156 = load i32, i32* %15, align 4
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %158, label %169

158:                                              ; preds = %142
  %159 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %158
  %162 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1368, i32 0, i32 0))
  %163 = call i32 @1498(i32 0)
  store i32 3, i32* %16, align 4
  br label %171

164:                                              ; preds = %158
  %165 = call i8* @strncpy(i8* getelementptr inbounds (%21, %21* @765, i32 0, i32 43, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1369, i32 0, i32 0), i64 128) #10
  call void @1400()
  %166 = call i32 @1388(i32 1)
  %167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  br label %168

168:                                              ; preds = %164
  br label %170

169:                                              ; preds = %142
  store i32 3, i32* %16, align 4
  br label %171

170:                                              ; preds = %168
  store i32 0, i32* %16, align 4
  br label %171

171:                                              ; preds = %170, %169, %161
  %172 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %172) #10
  %173 = load i32, i32* %16, align 4
  switch i32 %173, label %186 [
    i32 0, label %174
    i32 3, label %175
  ]

174:                                              ; preds = %171
  br label %26

175:                                              ; preds = %171
  %176 = load i32, i32* %13, align 4
  store i32 1, i32* %16, align 4
  %177 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %177) #10
  %178 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %178) #10
  %179 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %179) #10
  %180 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %180) #10
  %181 = bitcast i8*** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %181) #10
  %182 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #10
  %183 = bitcast [1024 x i8]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* %183) #10
  %184 = bitcast %1** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184) #10
  %185 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %185) #10
  ret i32 %176

186:                                              ; preds = %171
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1402(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #10
  store i32 0, i32* %5, align 4
  %7 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 37), align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %27

9:                                                ; preds = %2
  %10 = load i8**, i8*** %4, align 8
  %11 = bitcast i8** %10 to i8*
  %12 = load i32, i32* %3, align 4
  %13 = add nsw i32 %12, 1
  %14 = sext i32 %13 to i64
  %15 = mul i64 %14, 8
  %16 = call i8* @zrealloc(i8* %11, i64 %15)
  %17 = bitcast i8* %16 to i8**
  store i8** %17, i8*** %4, align 8
  %18 = call i8* @1522()
  %19 = load i8**, i8*** %4, align 8
  %20 = load i32, i32* %3, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8*, i8** %19, i64 %21
  store i8* %18, i8** %22, align 8
  %23 = load i32, i32* %3, align 4
  %24 = add nsw i32 %23, 1
  %25 = load i8**, i8*** %4, align 8
  %26 = call i32 @1521(i32 %24, i8** %25)
  store i32 %26, i32* %5, align 4
  br label %31

27:                                               ; preds = %2
  %28 = load i32, i32* %3, align 4
  %29 = load i8**, i8*** %4, align 8
  %30 = call i32 @1521(i32 %28, i8** %29)
  store i32 %30, i32* %5, align 4
  br label %31

31:                                               ; preds = %27, %9
  %32 = load i32, i32* %5, align 4
  %33 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #10
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define internal i8** @1403(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #10
  %8 = bitcast i8*** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = load i32, i32* %3, align 4
  %10 = sext i32 %9 to i64
  %11 = mul i64 8, %10
  %12 = call i8* @zmalloc(i64 %11)
  %13 = bitcast i8* %12 to i8**
  store i8** %13, i8*** %6, align 8
  store i32 0, i32* %5, align 4
  br label %14

14:                                               ; preds = %29, %2
  %15 = load i32, i32* %5, align 4
  %16 = load i32, i32* %3, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %32

18:                                               ; preds = %14
  %19 = load i8**, i8*** %4, align 8
  %20 = load i32, i32* %5, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8*, i8** %19, i64 %21
  %23 = load i8*, i8** %22, align 8
  %24 = call i8* @sdsnew(i8* %23)
  %25 = load i8**, i8*** %6, align 8
  %26 = load i32, i32* %5, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8*, i8** %25, i64 %27
  store i8* %24, i8** %28, align 8
  br label %29

29:                                               ; preds = %18
  %30 = load i32, i32* %5, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %5, align 4
  br label %14

32:                                               ; preds = %14
  %33 = load i8**, i8*** %6, align 8
  %34 = bitcast i8*** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #10
  %35 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %35) #10
  ret i8** %33
}

declare dso_local i8* @sdscatprintf(i8*, i8*, ...) #2

declare dso_local i8* @sdsempty() #2

declare dso_local %24* @listCreate() #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #5

; Function Attrs: inlinehint nounwind readonly uwtable
define available_externally dso_local i32 @atoi(i8* nonnull %0) #8 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i64 @strtol(i8* %3, i8** null, i32 10) #10
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define internal %28* @1404(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %28*, align 8
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %7 = call i8* @zmalloc(i64 16520)
  %8 = bitcast i8* %7 to %28*
  store %28* %8, %28** %5, align 8
  %9 = load %28*, %28** %5, align 8
  %10 = getelementptr inbounds %28, %28* %9, i32 0, i32 0
  store %10* null, %10** %10, align 8
  %11 = load %28*, %28** %5, align 8
  %12 = getelementptr inbounds %28, %28* %11, i32 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = load %28*, %28** %5, align 8
  %15 = getelementptr inbounds %28, %28* %14, i32 0, i32 2
  store i8* %13, i8** %15, align 8
  %16 = load i32, i32* %4, align 4
  %17 = load %28*, %28** %5, align 8
  %18 = getelementptr inbounds %28, %28* %17, i32 0, i32 3
  store i32 %16, i32* %18, align 8
  %19 = load %28*, %28** %5, align 8
  %20 = getelementptr inbounds %28, %28* %19, i32 0, i32 4
  store i64 0, i64* %20, align 8
  %21 = load %28*, %28** %5, align 8
  %22 = getelementptr inbounds %28, %28* %21, i32 0, i32 5
  store i64 0, i64* %22, align 8
  %23 = load %28*, %28** %5, align 8
  %24 = getelementptr inbounds %28, %28* %23, i32 0, i32 6
  store i64 0, i64* %24, align 8
  %25 = load %28*, %28** %5, align 8
  %26 = getelementptr inbounds %28, %28* %25, i32 0, i32 7
  store i32 0, i32* %26, align 8
  %27 = load %28*, %28** %5, align 8
  %28 = getelementptr inbounds %28, %28* %27, i32 0, i32 8
  store %24* null, %24** %28, align 8
  %29 = load %28*, %28** %5, align 8
  %30 = getelementptr inbounds %28, %28* %29, i32 0, i32 9
  store i8* null, i8** %30, align 8
  %31 = load %28*, %28** %5, align 8
  %32 = getelementptr inbounds %28, %28* %31, i32 0, i32 10
  store i32 0, i32* %32, align 8
  %33 = load %28*, %28** %5, align 8
  %34 = getelementptr inbounds %28, %28* %33, i32 0, i32 14
  store %24* null, %24** %34, align 8
  %35 = load %28*, %28** %5, align 8
  %36 = getelementptr inbounds %28, %28* %35, i32 0, i32 15
  store i8** null, i8*** %36, align 8
  %37 = load %28*, %28** %5, align 8
  %38 = getelementptr inbounds %28, %28* %37, i32 0, i32 16
  store i8** null, i8*** %38, align 8
  %39 = load %28*, %28** %5, align 8
  %40 = getelementptr inbounds %28, %28* %39, i32 0, i32 17
  store i32 0, i32* %40, align 8
  %41 = load %28*, %28** %5, align 8
  %42 = getelementptr inbounds %28, %28* %41, i32 0, i32 18
  store i32 0, i32* %42, align 4
  %43 = load %28*, %28** %5, align 8
  %44 = getelementptr inbounds %28, %28* %43, i32 0, i32 13
  store i32 0, i32* %44, align 8
  %45 = load %28*, %28** %5, align 8
  %46 = getelementptr inbounds %28, %28* %45, i32 0, i32 19
  store float 1.000000e+00, float* %46, align 8
  %47 = load %28*, %28** %5, align 8
  %48 = getelementptr inbounds %28, %28* %47, i32 0, i32 20
  store i32 0, i32* %48, align 4
  %49 = load %28*, %28** %5, align 8
  call void @1424(%28* %49)
  %50 = load %28*, %28** %5, align 8
  %51 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #10
  ret %28* %50
}

; Function Attrs: nounwind uwtable
define internal i32 @1405(%28* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %28*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %31*, align 8
  %7 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  %8 = load %28*, %28** %3, align 8
  %9 = getelementptr inbounds %28, %28* %8, i32 0, i32 0
  %10 = load %10*, %10** %9, align 8
  %11 = icmp ne %10* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = load %28*, %28** %3, align 8
  %14 = getelementptr inbounds %28, %28* %13, i32 0, i32 0
  %15 = load %10*, %10** %14, align 8
  call void @redisFree(%10* %15)
  br label %16

16:                                               ; preds = %12, %1
  %17 = load %28*, %28** %3, align 8
  %18 = getelementptr inbounds %28, %28* %17, i32 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = load %28*, %28** %3, align 8
  %21 = getelementptr inbounds %28, %28* %20, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = call %10* @redisConnect(i8* %19, i32 %22)
  %24 = load %28*, %28** %3, align 8
  %25 = getelementptr inbounds %28, %28* %24, i32 0, i32 0
  store %10* %23, %10** %25, align 8
  %26 = load %28*, %28** %3, align 8
  %27 = getelementptr inbounds %28, %28* %26, i32 0, i32 0
  %28 = load %10*, %10** %27, align 8
  %29 = getelementptr inbounds %10, %10* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %59, label %32

32:                                               ; preds = %16
  %33 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 3), align 8
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %59

35:                                               ; preds = %32
  %36 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #10
  store i8* null, i8** %4, align 8
  %37 = load %28*, %28** %3, align 8
  %38 = getelementptr inbounds %28, %28* %37, i32 0, i32 0
  %39 = load %10*, %10** %38, align 8
  %40 = call i32 @1425(%10* %39, i8** %4)
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %54

42:                                               ; preds = %35
  %43 = load i8*, i8** %4, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %45, label %54

45:                                               ; preds = %42
  %46 = load %1*, %1** @stderr, align 8
  %47 = load i8*, i8** %4, align 8
  %48 = call i32 (%1*, i8*, ...) @fprintf(%1* %46, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @788, i32 0, i32 0), i8* %47)
  %49 = load %28*, %28** %3, align 8
  %50 = getelementptr inbounds %28, %28* %49, i32 0, i32 0
  %51 = load %10*, %10** %50, align 8
  call void @redisFree(%10* %51)
  %52 = load %28*, %28** %3, align 8
  %53 = getelementptr inbounds %28, %28* %52, i32 0, i32 0
  store %10* null, %10** %53, align 8
  store i32 0, i32* %2, align 4
  store i32 1, i32* %5, align 4
  br label %55

54:                                               ; preds = %42, %35
  store i32 0, i32* %5, align 4
  br label %55

55:                                               ; preds = %54, %45
  %56 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #10
  %57 = load i32, i32* %5, align 4
  switch i32 %57, label %138 [
    i32 0, label %58
    i32 1, label %136
  ]

58:                                               ; preds = %55
  br label %59

59:                                               ; preds = %58, %32, %16
  %60 = load %28*, %28** %3, align 8
  %61 = getelementptr inbounds %28, %28* %60, i32 0, i32 0
  %62 = load %10*, %10** %61, align 8
  %63 = getelementptr inbounds %10, %10* %62, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %87

66:                                               ; preds = %59
  %67 = load %1*, %1** @stderr, align 8
  %68 = call i32 (%1*, i8*, ...) @fprintf(%1* %67, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @789, i32 0, i32 0))
  %69 = load %1*, %1** @stderr, align 8
  %70 = load %28*, %28** %3, align 8
  %71 = getelementptr inbounds %28, %28* %70, i32 0, i32 2
  %72 = load i8*, i8** %71, align 8
  %73 = load %28*, %28** %3, align 8
  %74 = getelementptr inbounds %28, %28* %73, i32 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = load %28*, %28** %3, align 8
  %77 = getelementptr inbounds %28, %28* %76, i32 0, i32 0
  %78 = load %10*, %10** %77, align 8
  %79 = getelementptr inbounds %10, %10* %78, i32 0, i32 2
  %80 = getelementptr inbounds [128 x i8], [128 x i8]* %79, i32 0, i32 0
  %81 = call i32 (%1*, i8*, ...) @fprintf(%1* %69, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @790, i32 0, i32 0), i8* %72, i32 %75, i8* %80)
  %82 = load %28*, %28** %3, align 8
  %83 = getelementptr inbounds %28, %28* %82, i32 0, i32 0
  %84 = load %10*, %10** %83, align 8
  call void @redisFree(%10* %84)
  %85 = load %28*, %28** %3, align 8
  %86 = getelementptr inbounds %28, %28* %85, i32 0, i32 0
  store %10* null, %10** %86, align 8
  store i32 0, i32* %2, align 4
  br label %136

87:                                               ; preds = %59
  %88 = load %28*, %28** %3, align 8
  %89 = getelementptr inbounds %28, %28* %88, i32 0, i32 0
  %90 = load %10*, %10** %89, align 8
  %91 = getelementptr inbounds %10, %10* %90, i32 0, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = call i32 @anetKeepAlive(i8* null, i32 %92, i32 15)
  %94 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %95 = icmp ne i8* %94, null
  br i1 %95, label %96, label %135

96:                                               ; preds = %87
  %97 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %97) #10
  %98 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %107

100:                                              ; preds = %96
  %101 = load %28*, %28** %3, align 8
  %102 = getelementptr inbounds %28, %28* %101, i32 0, i32 0
  %103 = load %10*, %10** %102, align 8
  %104 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %105 = call i8* (%10*, i8*, ...) @redisCommand(%10* %103, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @791, i32 0, i32 0), i8* %104)
  %106 = bitcast i8* %105 to %31*
  store %31* %106, %31** %6, align 8
  br label %115

107:                                              ; preds = %96
  %108 = load %28*, %28** %3, align 8
  %109 = getelementptr inbounds %28, %28* %108, i32 0, i32 0
  %110 = load %10*, %10** %109, align 8
  %111 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  %112 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %113 = call i8* (%10*, i8*, ...) @redisCommand(%10* %110, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @792, i32 0, i32 0), i8* %111, i8* %112)
  %114 = bitcast i8* %113 to %31*
  store %31* %114, %31** %6, align 8
  br label %115

115:                                              ; preds = %107, %100
  %116 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %116) #10
  %117 = load %28*, %28** %3, align 8
  %118 = load %31*, %31** %6, align 8
  %119 = call i32 @1426(%28* %117, %31* %118, i8** null)
  store i32 %119, i32* %7, align 4
  %120 = load %31*, %31** %6, align 8
  %121 = icmp ne %31* %120, null
  br i1 %121, label %122, label %125

122:                                              ; preds = %115
  %123 = load %31*, %31** %6, align 8
  %124 = bitcast %31* %123 to i8*
  call void @freeReplyObject(i8* %124)
  br label %125

125:                                              ; preds = %122, %115
  %126 = load i32, i32* %7, align 4
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %125
  store i32 0, i32* %2, align 4
  store i32 1, i32* %5, align 4
  br label %130

129:                                              ; preds = %125
  store i32 0, i32* %5, align 4
  br label %130

130:                                              ; preds = %129, %128
  %131 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %131) #10
  %132 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #10
  %133 = load i32, i32* %5, align 4
  switch i32 %133, label %138 [
    i32 0, label %134
    i32 1, label %136
  ]

134:                                              ; preds = %130
  br label %135

135:                                              ; preds = %134, %87
  store i32 1, i32* %2, align 4
  br label %136

136:                                              ; preds = %135, %130, %66, %55
  %137 = load i32, i32* %2, align 4
  ret i32 %137

138:                                              ; preds = %130, %55
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1406(%28* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca %30, align 8
  %4 = alloca %25*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca i32, align 4
  store %28* %0, %28** %2, align 8
  %7 = load %28*, %28** %2, align 8
  %8 = getelementptr inbounds %28, %28* %7, i32 0, i32 0
  %9 = load %10*, %10** %8, align 8
  %10 = icmp ne %10* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = load %28*, %28** %2, align 8
  %13 = getelementptr inbounds %28, %28* %12, i32 0, i32 0
  %14 = load %10*, %10** %13, align 8
  call void @redisFree(%10* %14)
  br label %15

15:                                               ; preds = %11, %1
  %16 = load %28*, %28** %2, align 8
  %17 = getelementptr inbounds %28, %28* %16, i32 0, i32 14
  %18 = load %24*, %24** %17, align 8
  %19 = icmp ne %24* %18, null
  br i1 %19, label %20, label %45

20:                                               ; preds = %15
  %21 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %21) #10
  %22 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  %23 = load %28*, %28** %2, align 8
  %24 = getelementptr inbounds %28, %28* %23, i32 0, i32 14
  %25 = load %24*, %24** %24, align 8
  call void @listRewind(%24* %25, %30* %3)
  br label %26

26:                                               ; preds = %29, %20
  %27 = call %25* @listNext(%30* %3)
  store %25* %27, %25** %4, align 8
  %28 = icmp ne %25* %27, null
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #10
  %31 = load %25*, %25** %4, align 8
  %32 = getelementptr inbounds %25, %25* %31, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to %28*
  store %28* %34, %28** %5, align 8
  %35 = load %28*, %28** %5, align 8
  call void @1406(%28* %35)
  %36 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #10
  br label %26

37:                                               ; preds = %26
  %38 = load %28*, %28** %2, align 8
  %39 = getelementptr inbounds %28, %28* %38, i32 0, i32 14
  %40 = load %24*, %24** %39, align 8
  call void @listRelease(%24* %40)
  %41 = load %28*, %28** %2, align 8
  %42 = getelementptr inbounds %28, %28* %41, i32 0, i32 14
  store %24* null, %24** %42, align 8
  %43 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #10
  %44 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %44) #10
  br label %45

45:                                               ; preds = %37, %15
  %46 = load %28*, %28** %2, align 8
  %47 = getelementptr inbounds %28, %28* %46, i32 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = icmp ne i8* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = load %28*, %28** %2, align 8
  %52 = getelementptr inbounds %28, %28* %51, i32 0, i32 1
  %53 = load i8*, i8** %52, align 8
  call void @sdsfree(i8* %53)
  br label %54

54:                                               ; preds = %50, %45
  %55 = load %28*, %28** %2, align 8
  %56 = getelementptr inbounds %28, %28* %55, i32 0, i32 9
  %57 = load i8*, i8** %56, align 8
  %58 = icmp ne i8* %57, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %54
  %60 = load %28*, %28** %2, align 8
  %61 = getelementptr inbounds %28, %28* %60, i32 0, i32 9
  %62 = load i8*, i8** %61, align 8
  call void @sdsfree(i8* %62)
  br label %63

63:                                               ; preds = %59, %54
  %64 = load %28*, %28** %2, align 8
  %65 = getelementptr inbounds %28, %28* %64, i32 0, i32 7
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %78

69:                                               ; preds = %63
  %70 = load %28*, %28** %2, align 8
  %71 = getelementptr inbounds %28, %28* %70, i32 0, i32 2
  %72 = load i8*, i8** %71, align 8
  %73 = icmp ne i8* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = load %28*, %28** %2, align 8
  %76 = getelementptr inbounds %28, %28* %75, i32 0, i32 2
  %77 = load i8*, i8** %76, align 8
  call void @sdsfree(i8* %77)
  br label %78

78:                                               ; preds = %74, %69, %63
  %79 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %79) #10
  %80 = load %28*, %28** %2, align 8
  %81 = getelementptr inbounds %28, %28* %80, i32 0, i32 15
  %82 = load i8**, i8*** %81, align 8
  %83 = icmp ne i8** %82, null
  br i1 %83, label %84, label %107

84:                                               ; preds = %78
  store i32 0, i32* %6, align 4
  br label %85

85:                                               ; preds = %99, %84
  %86 = load i32, i32* %6, align 4
  %87 = load %28*, %28** %2, align 8
  %88 = getelementptr inbounds %28, %28* %87, i32 0, i32 17
  %89 = load i32, i32* %88, align 8
  %90 = icmp slt i32 %86, %89
  br i1 %90, label %91, label %102

91:                                               ; preds = %85
  %92 = load %28*, %28** %2, align 8
  %93 = getelementptr inbounds %28, %28* %92, i32 0, i32 15
  %94 = load i8**, i8*** %93, align 8
  %95 = load i32, i32* %6, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8*, i8** %94, i64 %96
  %98 = load i8*, i8** %97, align 8
  call void @sdsfree(i8* %98)
  br label %99

99:                                               ; preds = %91
  %100 = load i32, i32* %6, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %6, align 4
  br label %85

102:                                              ; preds = %85
  %103 = load %28*, %28** %2, align 8
  %104 = getelementptr inbounds %28, %28* %103, i32 0, i32 15
  %105 = load i8**, i8*** %104, align 8
  %106 = bitcast i8** %105 to i8*
  call void @zfree(i8* %106)
  br label %107

107:                                              ; preds = %102, %78
  %108 = load %28*, %28** %2, align 8
  %109 = getelementptr inbounds %28, %28* %108, i32 0, i32 16
  %110 = load i8**, i8*** %109, align 8
  %111 = icmp ne i8** %110, null
  br i1 %111, label %112, label %135

112:                                              ; preds = %107
  store i32 0, i32* %6, align 4
  br label %113

113:                                              ; preds = %127, %112
  %114 = load i32, i32* %6, align 4
  %115 = load %28*, %28** %2, align 8
  %116 = getelementptr inbounds %28, %28* %115, i32 0, i32 18
  %117 = load i32, i32* %116, align 4
  %118 = icmp slt i32 %114, %117
  br i1 %118, label %119, label %130

119:                                              ; preds = %113
  %120 = load %28*, %28** %2, align 8
  %121 = getelementptr inbounds %28, %28* %120, i32 0, i32 16
  %122 = load i8**, i8*** %121, align 8
  %123 = load i32, i32* %6, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8*, i8** %122, i64 %124
  %126 = load i8*, i8** %125, align 8
  call void @sdsfree(i8* %126)
  br label %127

127:                                              ; preds = %119
  %128 = load i32, i32* %6, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %6, align 4
  br label %113

130:                                              ; preds = %113
  %131 = load %28*, %28** %2, align 8
  %132 = getelementptr inbounds %28, %28* %131, i32 0, i32 16
  %133 = load i8**, i8*** %132, align 8
  %134 = bitcast i8** %133 to i8*
  call void @zfree(i8* %134)
  br label %135

135:                                              ; preds = %130, %107
  %136 = load %28*, %28** %2, align 8
  %137 = getelementptr inbounds %28, %28* %136, i32 0, i32 8
  %138 = load %24*, %24** %137, align 8
  %139 = icmp ne %24* %138, null
  br i1 %139, label %140, label %146

140:                                              ; preds = %135
  %141 = load %28*, %28** %2, align 8
  %142 = getelementptr inbounds %28, %28* %141, i32 0, i32 8
  %143 = load %24*, %24** %142, align 8
  call void @1427(%24* %143)
  %144 = load %28*, %28** %2, align 8
  %145 = getelementptr inbounds %28, %28* %144, i32 0, i32 8
  store %24* null, %24** %145, align 8
  br label %146

146:                                              ; preds = %140, %135
  %147 = load %28*, %28** %2, align 8
  %148 = bitcast %28* %147 to i8*
  call void @zfree(i8* %148)
  %149 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %149) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @1407(%28* %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %28*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca %31*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %28* %0, %28** %4, align 8
  store i8** %1, i8*** %5, align 8
  %9 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #10
  %10 = load %28*, %28** %4, align 8
  %11 = load i8**, i8*** %5, align 8
  %12 = call %31* @1428(%28* %10, i8** %11)
  store %31* %12, %31** %6, align 8
  %13 = load %31*, %31** %6, align 8
  %14 = icmp eq %31* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  store i32 1, i32* %7, align 4
  br label %27

16:                                               ; preds = %2
  %17 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  %18 = load %31*, %31** %6, align 8
  %19 = getelementptr inbounds %31, %31* %18, i32 0, i32 4
  %20 = load i8*, i8** %19, align 8
  %21 = call i64 @1429(i8* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @793, i32 0, i32 0))
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %8, align 4
  %23 = load %31*, %31** %6, align 8
  %24 = bitcast %31* %23 to i8*
  call void @freeReplyObject(i8* %24)
  %25 = load i32, i32* %8, align 4
  store i32 %25, i32* %3, align 4
  store i32 1, i32* %7, align 4
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #10
  br label %27

27:                                               ; preds = %16, %15
  %28 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #10
  %29 = load i32, i32* %3, align 4
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define internal void @1408(%28* %0, i8* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store %28* %0, %28** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %7 = load i8*, i8** %4, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = load i8*, i8** %4, align 8
  br label %12

11:                                               ; preds = %2
  br label %12

12:                                               ; preds = %11, %9
  %13 = phi i8* [ %10, %9 ], [ getelementptr inbounds ([37 x i8], [37 x i8]* @794, i32 0, i32 0), %11 ]
  store i8* %13, i8** %5, align 8
  %14 = load %28*, %28** %3, align 8
  %15 = getelementptr inbounds %28, %28* %14, i32 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = load %28*, %28** %3, align 8
  %18 = getelementptr inbounds %28, %28* %17, i32 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = load i8*, i8** %5, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @795, i32 0, i32 0), i8* %16, i32 %19, i8* %20)
  %21 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @1409(%28* %0, i32 %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %28*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca %31*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %28*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i8*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i8*, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i8*, align 8
  %34 = alloca i8*, align 8
  %35 = alloca i8*, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i8*, align 8
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i8*, align 8
  %42 = alloca i8*, align 8
  store %28* %0, %28** %5, align 8
  store i32 %1, i32* %6, align 4
  store i8** %2, i8*** %7, align 8
  %43 = bitcast %31** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #10
  %44 = load %28*, %28** %5, align 8
  %45 = getelementptr inbounds %28, %28* %44, i32 0, i32 0
  %46 = load %10*, %10** %45, align 8
  %47 = call i8* (%10*, i8*, ...) @redisCommand(%10* %46, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @137, i32 0, i32 0))
  %48 = bitcast i8* %47 to %31*
  store %31* %48, %31** %8, align 8
  %49 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #10
  store i32 1, i32* %9, align 4
  %50 = load i8**, i8*** %7, align 8
  store i8* null, i8** %50, align 8
  %51 = load %28*, %28** %5, align 8
  %52 = load %31*, %31** %8, align 8
  %53 = load i8**, i8*** %7, align 8
  %54 = call i32 @1426(%28* %51, %31* %52, i8** %53)
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %3
  store i32 0, i32* %9, align 4
  br label %615

57:                                               ; preds = %3
  %58 = load i32, i32* %6, align 4
  %59 = and i32 %58, 1
  store i32 %59, i32* %10, align 4
  %60 = load %31*, %31** %8, align 8
  %61 = getelementptr inbounds %31, %31* %60, i32 0, i32 4
  %62 = load i8*, i8** %61, align 8
  store i8* %62, i8** %11, align 8
  br label %63

63:                                               ; preds = %613, %602, %57
  %64 = load i8*, i8** %11, align 8
  %65 = call i8* @strstr(i8* %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0)) #12
  store i8* %65, i8** %12, align 8
  %66 = icmp ne i8* %65, null
  br i1 %66, label %67, label %614

67:                                               ; preds = %63
  %68 = load i8*, i8** %12, align 8
  store i8 0, i8* %68, align 1
  %69 = load i8*, i8** %11, align 8
  store i8* %69, i8** %13, align 8
  %70 = load i8*, i8** %12, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 1
  store i8* %71, i8** %11, align 8
  %72 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #10
  store i8* null, i8** %14, align 8
  %73 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #10
  store i8* null, i8** %15, align 8
  %74 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #10
  store i8* null, i8** %16, align 8
  %75 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #10
  store i8* null, i8** %17, align 8
  %76 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #10
  store i8* null, i8** %18, align 8
  %77 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #10
  store i8* null, i8** %19, align 8
  %78 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %78) #10
  store i8* null, i8** %20, align 8
  %79 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %79) #10
  store i8* null, i8** %21, align 8
  %80 = load i8*, i8** %21, align 8
  %81 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %81) #10
  store i32 0, i32* %22, align 4
  br label %82

82:                                               ; preds = %118, %67
  %83 = load i8*, i8** %13, align 8
  %84 = call i8* @strchr(i8* %83, i32 32) #12
  store i8* %84, i8** %12, align 8
  %85 = icmp ne i8* %84, null
  br i1 %85, label %86, label %119

86:                                               ; preds = %82
  %87 = load i8*, i8** %12, align 8
  store i8 0, i8* %87, align 1
  %88 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %88) #10
  %89 = load i8*, i8** %13, align 8
  store i8* %89, i8** %23, align 8
  %90 = load i8*, i8** %12, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 1
  store i8* %91, i8** %13, align 8
  %92 = load i32, i32* %22, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %22, align 4
  switch i32 %92, label %110 [
    i32 0, label %94
    i32 1, label %96
    i32 2, label %98
    i32 3, label %100
    i32 4, label %102
    i32 5, label %104
    i32 6, label %106
    i32 7, label %108
  ]

94:                                               ; preds = %86
  %95 = load i8*, i8** %23, align 8
  store i8* %95, i8** %14, align 8
  br label %110

96:                                               ; preds = %86
  %97 = load i8*, i8** %23, align 8
  store i8* %97, i8** %15, align 8
  br label %110

98:                                               ; preds = %86
  %99 = load i8*, i8** %23, align 8
  store i8* %99, i8** %16, align 8
  br label %110

100:                                              ; preds = %86
  %101 = load i8*, i8** %23, align 8
  store i8* %101, i8** %17, align 8
  br label %110

102:                                              ; preds = %86
  %103 = load i8*, i8** %23, align 8
  store i8* %103, i8** %18, align 8
  br label %110

104:                                              ; preds = %86
  %105 = load i8*, i8** %23, align 8
  store i8* %105, i8** %19, align 8
  br label %110

106:                                              ; preds = %86
  %107 = load i8*, i8** %23, align 8
  store i8* %107, i8** %20, align 8
  br label %110

108:                                              ; preds = %86
  %109 = load i8*, i8** %23, align 8
  store i8* %109, i8** %21, align 8
  br label %110

110:                                              ; preds = %86, %108, %106, %104, %102, %100, %98, %96, %94
  %111 = load i32, i32* %22, align 4
  %112 = icmp eq i32 %111, 8
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  store i32 6, i32* %24, align 4
  br label %115

114:                                              ; preds = %110
  store i32 0, i32* %24, align 4
  br label %115

115:                                              ; preds = %114, %113
  %116 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #10
  %117 = load i32, i32* %24, align 4
  switch i32 %117, label %627 [
    i32 0, label %118
    i32 6, label %119
  ]

118:                                              ; preds = %115
  br label %82

119:                                              ; preds = %115, %82
  %120 = load i8*, i8** %16, align 8
  %121 = icmp ne i8* %120, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %119
  store i32 0, i32* %9, align 4
  store i32 2, i32* %24, align 4
  br label %602

123:                                              ; preds = %119
  %124 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %124) #10
  %125 = load i8*, i8** %16, align 8
  %126 = call i8* @strstr(i8* %125, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @796, i32 0, i32 0)) #12
  %127 = icmp ne i8* %126, null
  %128 = zext i1 %127 to i32
  store i32 %128, i32* %25, align 4
  %129 = bitcast %28** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %129) #10
  store %28* null, %28** %26, align 8
  %130 = load i32, i32* %25, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %377

132:                                              ; preds = %123
  %133 = load %28*, %28** %5, align 8
  %134 = getelementptr inbounds %28, %28* %133, i32 0, i32 7
  %135 = load i32, i32* %134, align 8
  %136 = or i32 %135, 1
  store i32 %136, i32* %134, align 8
  %137 = load %28*, %28** %5, align 8
  store %28* %137, %28** %26, align 8
  %138 = load %28*, %28** %5, align 8
  call void @1424(%28* %138)
  %139 = load i32, i32* %22, align 4
  %140 = icmp eq i32 %139, 8
  br i1 %140, label %141, label %374

141:                                              ; preds = %132
  %142 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %142) #10
  %143 = load i8*, i8** %13, align 8
  %144 = call i64 @strlen(i8* %143) #12
  %145 = trunc i64 %144 to i32
  store i32 %145, i32* %27, align 4
  br label %146

146:                                              ; preds = %369, %141
  %147 = load i32, i32* %27, align 4
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %149, label %372

149:                                              ; preds = %146
  %150 = load i8*, i8** %13, align 8
  %151 = call i8* @strchr(i8* %150, i32 32) #12
  store i8* %151, i8** %12, align 8
  %152 = load i8*, i8** %12, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %154, label %159

154:                                              ; preds = %149
  %155 = load i8*, i8** %13, align 8
  %156 = load i32, i32* %27, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %155, i64 %157
  store i8* %158, i8** %12, align 8
  br label %159

159:                                              ; preds = %154, %149
  %160 = load i8*, i8** %12, align 8
  %161 = load i8*, i8** %13, align 8
  %162 = ptrtoint i8* %160 to i64
  %163 = ptrtoint i8* %161 to i64
  %164 = sub i64 %162, %163
  %165 = load i32, i32* %27, align 4
  %166 = sext i32 %165 to i64
  %167 = sub nsw i64 %166, %164
  %168 = trunc i64 %167 to i32
  store i32 %168, i32* %27, align 4
  %169 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %169) #10
  %170 = load i8*, i8** %13, align 8
  store i8* %170, i8** %28, align 8
  %171 = load i8*, i8** %12, align 8
  store i8 0, i8* %171, align 1
  %172 = load i32, i32* %27, align 4
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %179

174:                                              ; preds = %159
  %175 = load i8*, i8** %12, align 8
  %176 = getelementptr inbounds i8, i8* %175, i64 1
  store i8* %176, i8** %13, align 8
  %177 = load i32, i32* %27, align 4
  %178 = add nsw i32 %177, -1
  store i32 %178, i32* %27, align 4
  br label %181

179:                                              ; preds = %159
  %180 = load i8*, i8** %12, align 8
  store i8* %180, i8** %13, align 8
  br label %181

181:                                              ; preds = %179, %174
  %182 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %182) #10
  store i8* null, i8** %29, align 8
  %183 = load i8*, i8** %28, align 8
  %184 = getelementptr inbounds i8, i8* %183, i64 0
  %185 = load i8, i8* %184, align 1
  %186 = sext i8 %185 to i32
  %187 = icmp eq i32 %186, 91
  br i1 %187, label %188, label %316

188:                                              ; preds = %181
  %189 = load i8*, i8** %28, align 8
  %190 = getelementptr inbounds i8, i8* %189, i32 1
  store i8* %190, i8** %28, align 8
  %191 = load i8*, i8** %28, align 8
  %192 = call i8* @strstr(i8* %191, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @797, i32 0, i32 0)) #12
  store i8* %192, i8** %12, align 8
  %193 = icmp ne i8* %192, null
  br i1 %193, label %194, label %252

194:                                              ; preds = %188
  %195 = load i8*, i8** %12, align 8
  store i8 0, i8* %195, align 1
  %196 = load i8*, i8** %12, align 8
  %197 = getelementptr inbounds i8, i8* %196, i64 3
  store i8* %197, i8** %12, align 8
  %198 = bitcast i8** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %198) #10
  %199 = load i8*, i8** %12, align 8
  %200 = call i8* @strchr(i8* %199, i32 93) #12
  store i8* %200, i8** %30, align 8
  %201 = load i8*, i8** %30, align 8
  %202 = icmp ne i8* %201, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %194
  %204 = load i8*, i8** %30, align 8
  store i8 0, i8* %204, align 1
  br label %205

205:                                              ; preds = %203, %194
  %206 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %206) #10
  %207 = load i8*, i8** %28, align 8
  %208 = call i8* @sdsnew(i8* %207)
  store i8* %208, i8** %31, align 8
  %209 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %209) #10
  %210 = load i8*, i8** %12, align 8
  %211 = call i8* @sdsnew(i8* %210)
  store i8* %211, i8** %32, align 8
  %212 = load %28*, %28** %5, align 8
  %213 = getelementptr inbounds %28, %28* %212, i32 0, i32 17
  %214 = load i32, i32* %213, align 8
  %215 = add nsw i32 %214, 2
  store i32 %215, i32* %213, align 8
  %216 = load %28*, %28** %5, align 8
  %217 = getelementptr inbounds %28, %28* %216, i32 0, i32 15
  %218 = load i8**, i8*** %217, align 8
  %219 = bitcast i8** %218 to i8*
  %220 = load %28*, %28** %5, align 8
  %221 = getelementptr inbounds %28, %28* %220, i32 0, i32 17
  %222 = load i32, i32* %221, align 8
  %223 = sext i32 %222 to i64
  %224 = mul i64 %223, 8
  %225 = call i8* @zrealloc(i8* %219, i64 %224)
  %226 = bitcast i8* %225 to i8**
  %227 = load %28*, %28** %5, align 8
  %228 = getelementptr inbounds %28, %28* %227, i32 0, i32 15
  store i8** %226, i8*** %228, align 8
  %229 = load i8*, i8** %31, align 8
  %230 = load %28*, %28** %5, align 8
  %231 = getelementptr inbounds %28, %28* %230, i32 0, i32 15
  %232 = load i8**, i8*** %231, align 8
  %233 = load %28*, %28** %5, align 8
  %234 = getelementptr inbounds %28, %28* %233, i32 0, i32 17
  %235 = load i32, i32* %234, align 8
  %236 = sub nsw i32 %235, 2
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds i8*, i8** %232, i64 %237
  store i8* %229, i8** %238, align 8
  %239 = load i8*, i8** %32, align 8
  %240 = load %28*, %28** %5, align 8
  %241 = getelementptr inbounds %28, %28* %240, i32 0, i32 15
  %242 = load i8**, i8*** %241, align 8
  %243 = load %28*, %28** %5, align 8
  %244 = getelementptr inbounds %28, %28* %243, i32 0, i32 17
  %245 = load i32, i32* %244, align 8
  %246 = sub nsw i32 %245, 1
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i8*, i8** %242, i64 %247
  store i8* %239, i8** %248, align 8
  %249 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %249) #10
  %250 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %250) #10
  %251 = bitcast i8** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %251) #10
  br label %315

252:                                              ; preds = %188
  %253 = load i8*, i8** %28, align 8
  %254 = call i8* @strstr(i8* %253, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @798, i32 0, i32 0)) #12
  store i8* %254, i8** %12, align 8
  %255 = icmp ne i8* %254, null
  br i1 %255, label %256, label %314

256:                                              ; preds = %252
  %257 = load i8*, i8** %12, align 8
  store i8 0, i8* %257, align 1
  %258 = load i8*, i8** %12, align 8
  %259 = getelementptr inbounds i8, i8* %258, i64 3
  store i8* %259, i8** %12, align 8
  %260 = bitcast i8** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %260) #10
  %261 = load i8*, i8** %12, align 8
  %262 = call i8* @strchr(i8* %261, i32 93) #12
  store i8* %262, i8** %33, align 8
  %263 = load i8*, i8** %33, align 8
  %264 = icmp ne i8* %263, null
  br i1 %264, label %265, label %267

265:                                              ; preds = %256
  %266 = load i8*, i8** %33, align 8
  store i8 0, i8* %266, align 1
  br label %267

267:                                              ; preds = %265, %256
  %268 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %268) #10
  %269 = load i8*, i8** %28, align 8
  %270 = call i8* @sdsnew(i8* %269)
  store i8* %270, i8** %34, align 8
  %271 = bitcast i8** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %271) #10
  %272 = load i8*, i8** %12, align 8
  %273 = call i8* @sdsnew(i8* %272)
  store i8* %273, i8** %35, align 8
  %274 = load %28*, %28** %5, align 8
  %275 = getelementptr inbounds %28, %28* %274, i32 0, i32 18
  %276 = load i32, i32* %275, align 4
  %277 = add nsw i32 %276, 2
  store i32 %277, i32* %275, align 4
  %278 = load %28*, %28** %5, align 8
  %279 = getelementptr inbounds %28, %28* %278, i32 0, i32 16
  %280 = load i8**, i8*** %279, align 8
  %281 = bitcast i8** %280 to i8*
  %282 = load %28*, %28** %5, align 8
  %283 = getelementptr inbounds %28, %28* %282, i32 0, i32 18
  %284 = load i32, i32* %283, align 4
  %285 = sext i32 %284 to i64
  %286 = mul i64 %285, 8
  %287 = call i8* @zrealloc(i8* %281, i64 %286)
  %288 = bitcast i8* %287 to i8**
  %289 = load %28*, %28** %5, align 8
  %290 = getelementptr inbounds %28, %28* %289, i32 0, i32 16
  store i8** %288, i8*** %290, align 8
  %291 = load i8*, i8** %34, align 8
  %292 = load %28*, %28** %5, align 8
  %293 = getelementptr inbounds %28, %28* %292, i32 0, i32 16
  %294 = load i8**, i8*** %293, align 8
  %295 = load %28*, %28** %5, align 8
  %296 = getelementptr inbounds %28, %28* %295, i32 0, i32 18
  %297 = load i32, i32* %296, align 4
  %298 = sub nsw i32 %297, 2
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i8*, i8** %294, i64 %299
  store i8* %291, i8** %300, align 8
  %301 = load i8*, i8** %35, align 8
  %302 = load %28*, %28** %5, align 8
  %303 = getelementptr inbounds %28, %28* %302, i32 0, i32 16
  %304 = load i8**, i8*** %303, align 8
  %305 = load %28*, %28** %5, align 8
  %306 = getelementptr inbounds %28, %28* %305, i32 0, i32 18
  %307 = load i32, i32* %306, align 4
  %308 = sub nsw i32 %307, 1
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8*, i8** %304, i64 %309
  store i8* %301, i8** %310, align 8
  %311 = bitcast i8** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %311) #10
  %312 = bitcast i8** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %312) #10
  %313 = bitcast i8** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %313) #10
  br label %314

314:                                              ; preds = %267, %252
  br label %315

315:                                              ; preds = %314, %205
  br label %369

316:                                              ; preds = %181
  %317 = load i8*, i8** %28, align 8
  %318 = call i8* @strchr(i8* %317, i32 45) #12
  store i8* %318, i8** %29, align 8
  %319 = icmp ne i8* %318, null
  br i1 %319, label %320, label %352

320:                                              ; preds = %316
  %321 = load i8*, i8** %29, align 8
  store i8* %321, i8** %12, align 8
  %322 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %322) #10
  %323 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %323) #10
  %324 = load i8*, i8** %12, align 8
  store i8 0, i8* %324, align 1
  %325 = load i8*, i8** %28, align 8
  %326 = call i32 @atoi(i8* %325) #12
  store i32 %326, i32* %36, align 4
  %327 = load i8*, i8** %12, align 8
  %328 = getelementptr inbounds i8, i8* %327, i64 1
  %329 = call i32 @atoi(i8* %328) #12
  store i32 %329, i32* %37, align 4
  %330 = load i32, i32* %37, align 4
  %331 = load i32, i32* %36, align 4
  %332 = sub nsw i32 %331, 1
  %333 = sub nsw i32 %330, %332
  %334 = load %28*, %28** %5, align 8
  %335 = getelementptr inbounds %28, %28* %334, i32 0, i32 12
  %336 = load i32, i32* %335, align 4
  %337 = add nsw i32 %336, %333
  store i32 %337, i32* %335, align 4
  br label %338

338:                                              ; preds = %342, %320
  %339 = load i32, i32* %36, align 4
  %340 = load i32, i32* %37, align 4
  %341 = icmp sle i32 %339, %340
  br i1 %341, label %342, label %349

342:                                              ; preds = %338
  %343 = load %28*, %28** %5, align 8
  %344 = getelementptr inbounds %28, %28* %343, i32 0, i32 11
  %345 = load i32, i32* %36, align 4
  %346 = add nsw i32 %345, 1
  store i32 %346, i32* %36, align 4
  %347 = sext i32 %345 to i64
  %348 = getelementptr inbounds [16384 x i8], [16384 x i8]* %344, i64 0, i64 %347
  store i8 1, i8* %348, align 1
  br label %338

349:                                              ; preds = %338
  %350 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %350) #10
  %351 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #10
  br label %368

352:                                              ; preds = %316
  %353 = load i8*, i8** %12, align 8
  %354 = load i8*, i8** %28, align 8
  %355 = icmp ugt i8* %353, %354
  br i1 %355, label %356, label %367

356:                                              ; preds = %352
  %357 = load %28*, %28** %5, align 8
  %358 = getelementptr inbounds %28, %28* %357, i32 0, i32 11
  %359 = load i8*, i8** %28, align 8
  %360 = call i32 @atoi(i8* %359) #12
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [16384 x i8], [16384 x i8]* %358, i64 0, i64 %361
  store i8 1, i8* %362, align 1
  %363 = load %28*, %28** %5, align 8
  %364 = getelementptr inbounds %28, %28* %363, i32 0, i32 12
  %365 = load i32, i32* %364, align 4
  %366 = add nsw i32 %365, 1
  store i32 %366, i32* %364, align 4
  br label %367

367:                                              ; preds = %356, %352
  br label %368

368:                                              ; preds = %367, %349
  br label %369

369:                                              ; preds = %368, %315
  %370 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370) #10
  %371 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #10
  br label %146

372:                                              ; preds = %146
  %373 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %373) #10
  br label %374

374:                                              ; preds = %372, %132
  %375 = load %28*, %28** %5, align 8
  %376 = getelementptr inbounds %28, %28* %375, i32 0, i32 10
  store i32 0, i32* %376, align 8
  br label %445

377:                                              ; preds = %123
  %378 = load i32, i32* %10, align 4
  %379 = icmp ne i32 %378, 0
  br i1 %379, label %388, label %380

380:                                              ; preds = %377
  %381 = load %28*, %28** %5, align 8
  %382 = getelementptr inbounds %28, %28* %381, i32 0, i32 7
  %383 = load i32, i32* %382, align 8
  %384 = and i32 %383, 1
  %385 = icmp ne i32 %384, 0
  br i1 %385, label %387, label %386

386:                                              ; preds = %380
  store i32 3, i32* %24, align 4
  br label %599

387:                                              ; preds = %380
  store i32 4, i32* %24, align 4
  br label %599

388:                                              ; preds = %377
  %389 = load i8*, i8** %15, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %391, label %394

391:                                              ; preds = %388
  %392 = load %1*, %1** @stderr, align 8
  %393 = call i32 (%1*, i8*, ...) @fprintf(%1* %392, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @799, i32 0, i32 0))
  store i32 0, i32* %9, align 4
  store i32 2, i32* %24, align 4
  br label %599

394:                                              ; preds = %388
  %395 = bitcast i8** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %395) #10
  %396 = load i8*, i8** %15, align 8
  %397 = call i8* @strrchr(i8* %396, i32 64) #12
  store i8* %397, i8** %38, align 8
  %398 = load i8*, i8** %38, align 8
  %399 = icmp ne i8* %398, null
  br i1 %399, label %400, label %402

400:                                              ; preds = %394
  %401 = load i8*, i8** %38, align 8
  store i8 0, i8* %401, align 1
  br label %402

402:                                              ; preds = %400, %394
  %403 = load i8*, i8** %15, align 8
  %404 = call i8* @strrchr(i8* %403, i32 58) #12
  store i8* %404, i8** %38, align 8
  %405 = load i8*, i8** %38, align 8
  %406 = icmp eq i8* %405, null
  br i1 %406, label %407, label %410

407:                                              ; preds = %402
  %408 = load %1*, %1** @stderr, align 8
  %409 = call i32 (%1*, i8*, ...) @fprintf(%1* %408, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @799, i32 0, i32 0))
  store i32 0, i32* %9, align 4
  store i32 2, i32* %24, align 4
  br label %440

410:                                              ; preds = %402
  %411 = load i8*, i8** %38, align 8
  store i8 0, i8* %411, align 1
  %412 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %412) #10
  %413 = load i8*, i8** %38, align 8
  %414 = getelementptr inbounds i8, i8* %413, i32 1
  store i8* %414, i8** %38, align 8
  %415 = call i32 @atoi(i8* %414) #12
  store i32 %415, i32* %39, align 4
  %416 = load i8*, i8** %15, align 8
  %417 = call i8* @sdsnew(i8* %416)
  %418 = load i32, i32* %39, align 4
  %419 = call %28* @1404(i8* %417, i32 %418)
  store %28* %419, %28** %26, align 8
  %420 = load %28*, %28** %26, align 8
  %421 = getelementptr inbounds %28, %28* %420, i32 0, i32 7
  %422 = load i32, i32* %421, align 8
  %423 = or i32 %422, 4
  store i32 %423, i32* %421, align 8
  %424 = load %28*, %28** %5, align 8
  %425 = getelementptr inbounds %28, %28* %424, i32 0, i32 14
  %426 = load %24*, %24** %425, align 8
  %427 = icmp eq %24* %426, null
  br i1 %427, label %428, label %432

428:                                              ; preds = %410
  %429 = call %24* @listCreate()
  %430 = load %28*, %28** %5, align 8
  %431 = getelementptr inbounds %28, %28* %430, i32 0, i32 14
  store %24* %429, %24** %431, align 8
  br label %432

432:                                              ; preds = %428, %410
  %433 = load %28*, %28** %5, align 8
  %434 = getelementptr inbounds %28, %28* %433, i32 0, i32 14
  %435 = load %24*, %24** %434, align 8
  %436 = load %28*, %28** %26, align 8
  %437 = bitcast %28* %436 to i8*
  %438 = call %24* @listAddNodeTail(%24* %435, i8* %437)
  %439 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %439) #10
  store i32 0, i32* %24, align 4
  br label %440

440:                                              ; preds = %407, %432
  %441 = bitcast i8** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %441) #10
  %442 = load i32, i32* %24, align 4
  switch i32 %442, label %599 [
    i32 0, label %443
  ]

443:                                              ; preds = %440
  br label %444

444:                                              ; preds = %443
  br label %445

445:                                              ; preds = %444, %374
  %446 = load i8*, i8** %14, align 8
  %447 = icmp ne i8* %446, null
  br i1 %447, label %448, label %462

448:                                              ; preds = %445
  %449 = load %28*, %28** %26, align 8
  %450 = getelementptr inbounds %28, %28* %449, i32 0, i32 1
  %451 = load i8*, i8** %450, align 8
  %452 = icmp ne i8* %451, null
  br i1 %452, label %453, label %457

453:                                              ; preds = %448
  %454 = load %28*, %28** %26, align 8
  %455 = getelementptr inbounds %28, %28* %454, i32 0, i32 1
  %456 = load i8*, i8** %455, align 8
  call void @sdsfree(i8* %456)
  br label %457

457:                                              ; preds = %453, %448
  %458 = load i8*, i8** %14, align 8
  %459 = call i8* @sdsnew(i8* %458)
  %460 = load %28*, %28** %26, align 8
  %461 = getelementptr inbounds %28, %28* %460, i32 0, i32 1
  store i8* %459, i8** %461, align 8
  br label %462

462:                                              ; preds = %457, %445
  %463 = load %28*, %28** %26, align 8
  %464 = getelementptr inbounds %28, %28* %463, i32 0, i32 8
  %465 = load %24*, %24** %464, align 8
  %466 = icmp ne %24* %465, null
  br i1 %466, label %467, label %471

467:                                              ; preds = %462
  %468 = load %28*, %28** %26, align 8
  %469 = getelementptr inbounds %28, %28* %468, i32 0, i32 8
  %470 = load %24*, %24** %469, align 8
  call void @1427(%24* %470)
  br label %471

471:                                              ; preds = %467, %462
  %472 = call %24* @listCreate()
  %473 = load %28*, %28** %26, align 8
  %474 = getelementptr inbounds %28, %28* %473, i32 0, i32 8
  store %24* %472, %24** %474, align 8
  %475 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %475) #10
  br label %476

476:                                              ; preds = %557, %471
  %477 = load i8*, i8** %16, align 8
  %478 = call i64 @strlen(i8* %477) #12
  %479 = trunc i64 %478 to i32
  store i32 %479, i32* %40, align 4
  %480 = icmp sgt i32 %479, 0
  br i1 %480, label %481, label %565

481:                                              ; preds = %476
  %482 = bitcast i8** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %482) #10
  store i8* null, i8** %41, align 8
  %483 = bitcast i8** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %483) #10
  %484 = load i8*, i8** %16, align 8
  %485 = call i8* @strchr(i8* %484, i32 44) #12
  store i8* %485, i8** %42, align 8
  %486 = load i8*, i8** %42, align 8
  %487 = icmp ne i8* %486, null
  br i1 %487, label %488, label %494

488:                                              ; preds = %481
  %489 = load i8*, i8** %42, align 8
  store i8 0, i8* %489, align 1
  %490 = load i8*, i8** %16, align 8
  %491 = call i8* @sdsnew(i8* %490)
  store i8* %491, i8** %41, align 8
  %492 = load i8*, i8** %42, align 8
  %493 = getelementptr inbounds i8, i8* %492, i64 1
  store i8* %493, i8** %16, align 8
  br label %501

494:                                              ; preds = %481
  %495 = load i8*, i8** %16, align 8
  %496 = call i8* @sdsnew(i8* %495)
  store i8* %496, i8** %41, align 8
  %497 = load i32, i32* %40, align 4
  %498 = load i8*, i8** %16, align 8
  %499 = sext i32 %497 to i64
  %500 = getelementptr inbounds i8, i8* %498, i64 %499
  store i8* %500, i8** %16, align 8
  br label %501

501:                                              ; preds = %494, %488
  %502 = load i8*, i8** %41, align 8
  %503 = call i32 @strcmp(i8* %502, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @800, i32 0, i32 0)) #12
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %510

505:                                              ; preds = %501
  %506 = load %28*, %28** %26, align 8
  %507 = getelementptr inbounds %28, %28* %506, i32 0, i32 7
  %508 = load i32, i32* %507, align 8
  %509 = or i32 %508, 8
  store i32 %509, i32* %507, align 8
  br label %557

510:                                              ; preds = %501
  %511 = load i8*, i8** %41, align 8
  %512 = call i32 @strcmp(i8* %511, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @801, i32 0, i32 0)) #12
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %519

514:                                              ; preds = %510
  %515 = load %28*, %28** %26, align 8
  %516 = getelementptr inbounds %28, %28* %515, i32 0, i32 7
  %517 = load i32, i32* %516, align 8
  %518 = or i32 %517, 16
  store i32 %518, i32* %516, align 8
  br label %556

519:                                              ; preds = %510
  %520 = load i8*, i8** %41, align 8
  %521 = call i32 @strcmp(i8* %520, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @802, i32 0, i32 0)) #12
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %528

523:                                              ; preds = %519
  %524 = load %28*, %28** %26, align 8
  %525 = getelementptr inbounds %28, %28* %524, i32 0, i32 7
  %526 = load i32, i32* %525, align 8
  %527 = or i32 %526, 32
  store i32 %527, i32* %525, align 8
  br label %555

528:                                              ; preds = %519
  %529 = load i8*, i8** %41, align 8
  %530 = call i32 @strcmp(i8* %529, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @803, i32 0, i32 0)) #12
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %554

532:                                              ; preds = %528
  %533 = load %28*, %28** %26, align 8
  %534 = getelementptr inbounds %28, %28* %533, i32 0, i32 7
  %535 = load i32, i32* %534, align 8
  %536 = or i32 %535, 2
  store i32 %536, i32* %534, align 8
  %537 = load i8*, i8** %17, align 8
  %538 = icmp ne i8* %537, null
  br i1 %538, label %539, label %553

539:                                              ; preds = %532
  %540 = load %28*, %28** %26, align 8
  %541 = getelementptr inbounds %28, %28* %540, i32 0, i32 9
  %542 = load i8*, i8** %541, align 8
  %543 = icmp ne i8* %542, null
  br i1 %543, label %544, label %548

544:                                              ; preds = %539
  %545 = load %28*, %28** %26, align 8
  %546 = getelementptr inbounds %28, %28* %545, i32 0, i32 9
  %547 = load i8*, i8** %546, align 8
  call void @sdsfree(i8* %547)
  br label %548

548:                                              ; preds = %544, %539
  %549 = load i8*, i8** %17, align 8
  %550 = call i8* @sdsnew(i8* %549)
  %551 = load %28*, %28** %26, align 8
  %552 = getelementptr inbounds %28, %28* %551, i32 0, i32 9
  store i8* %550, i8** %552, align 8
  br label %553

553:                                              ; preds = %548, %532
  br label %554

554:                                              ; preds = %553, %528
  br label %555

555:                                              ; preds = %554, %523
  br label %556

556:                                              ; preds = %555, %514
  br label %557

557:                                              ; preds = %556, %505
  %558 = load %28*, %28** %26, align 8
  %559 = getelementptr inbounds %28, %28* %558, i32 0, i32 8
  %560 = load %24*, %24** %559, align 8
  %561 = load i8*, i8** %41, align 8
  %562 = call %24* @listAddNodeTail(%24* %560, i8* %561)
  %563 = bitcast i8** %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %563) #10
  %564 = bitcast i8** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %564) #10
  br label %476

565:                                              ; preds = %476
  %566 = load i8*, i8** %20, align 8
  %567 = icmp ne i8* %566, null
  br i1 %567, label %568, label %573

568:                                              ; preds = %565
  %569 = load i8*, i8** %20, align 8
  %570 = call i64 @atoll(i8* %569) #12
  %571 = load %28*, %28** %26, align 8
  %572 = getelementptr inbounds %28, %28* %571, i32 0, i32 4
  store i64 %570, i64* %572, align 8
  br label %573

573:                                              ; preds = %568, %565
  %574 = load i8*, i8** %18, align 8
  %575 = icmp ne i8* %574, null
  br i1 %575, label %576, label %581

576:                                              ; preds = %573
  %577 = load i8*, i8** %18, align 8
  %578 = call i64 @atoll(i8* %577) #12
  %579 = load %28*, %28** %26, align 8
  %580 = getelementptr inbounds %28, %28* %579, i32 0, i32 5
  store i64 %578, i64* %580, align 8
  br label %581

581:                                              ; preds = %576, %573
  %582 = load i8*, i8** %19, align 8
  %583 = icmp ne i8* %582, null
  br i1 %583, label %584, label %589

584:                                              ; preds = %581
  %585 = load i8*, i8** %19, align 8
  %586 = call i64 @atoll(i8* %585) #12
  %587 = load %28*, %28** %26, align 8
  %588 = getelementptr inbounds %28, %28* %587, i32 0, i32 6
  store i64 %586, i64* %588, align 8
  br label %589

589:                                              ; preds = %584, %581
  %590 = load i32, i32* %10, align 4
  %591 = icmp ne i32 %590, 0
  br i1 %591, label %596, label %592

592:                                              ; preds = %589
  %593 = load i32, i32* %25, align 4
  %594 = icmp ne i32 %593, 0
  br i1 %594, label %595, label %596

595:                                              ; preds = %592
  store i32 4, i32* %24, align 4
  br label %597

596:                                              ; preds = %592, %589
  store i32 0, i32* %24, align 4
  br label %597

597:                                              ; preds = %596, %595
  %598 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %598) #10
  br label %599

599:                                              ; preds = %391, %597, %440, %387, %386
  %600 = bitcast %28** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %600) #10
  %601 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %601) #10
  br label %602

602:                                              ; preds = %122, %599
  %603 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %603) #10
  %604 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %604) #10
  %605 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %605) #10
  %606 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %606) #10
  %607 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %607) #10
  %608 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %608) #10
  %609 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %609) #10
  %610 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %610) #10
  %611 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %611) #10
  %612 = load i32, i32* %24, align 4
  switch i32 %612, label %623 [
    i32 0, label %613
    i32 3, label %63
    i32 4, label %614
    i32 2, label %615
  ]

613:                                              ; preds = %602
  br label %63

614:                                              ; preds = %602, %63
  br label %615

615:                                              ; preds = %614, %602, %56
  %616 = load %31*, %31** %8, align 8
  %617 = icmp ne %31* %616, null
  br i1 %617, label %618, label %621

618:                                              ; preds = %615
  %619 = load %31*, %31** %8, align 8
  %620 = bitcast %31* %619 to i8*
  call void @freeReplyObject(i8* %620)
  br label %621

621:                                              ; preds = %618, %615
  %622 = load i32, i32* %9, align 4
  store i32 %622, i32* %4, align 4
  store i32 1, i32* %24, align 4
  br label %623

623:                                              ; preds = %621, %602
  %624 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %624) #10
  %625 = bitcast %31** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %625) #10
  %626 = load i32, i32* %4, align 4
  ret i32 %626

627:                                              ; preds = %115
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1410(i32 %0, i8* %1, ...) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [1 x %34], align 16
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #10
  %8 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %9 = and i32 %8, 256
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %2
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @804, i32 0, i32 0))
  %14 = load i32, i32* %3, align 4
  switch i32 %14, label %23 [
    i32 1, label %15
    i32 2, label %17
    i32 3, label %19
    i32 4, label %21
  ]

15:                                               ; preds = %12
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @805, i32 0, i32 0))
  br label %25

17:                                               ; preds = %12
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @806, i32 0, i32 0))
  br label %25

19:                                               ; preds = %12
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @807, i32 0, i32 0))
  br label %25

21:                                               ; preds = %12
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @808, i32 0, i32 0))
  br label %25

23:                                               ; preds = %12
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @809, i32 0, i32 0))
  br label %25

25:                                               ; preds = %23, %21, %19, %17, %15
  br label %26

26:                                               ; preds = %25, %2
  %27 = bitcast [1 x %34]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %27) #10
  %28 = getelementptr inbounds [1 x %34], [1 x %34]* %6, i32 0, i32 0
  %29 = bitcast %34* %28 to i8*
  call void @llvm.va_start(i8* %29)
  %30 = load i8*, i8** %4, align 8
  %31 = getelementptr inbounds [1 x %34], [1 x %34]* %6, i32 0, i32 0
  %32 = call i32 @vprintf(i8* %30, %34* %31)
  %33 = getelementptr inbounds [1 x %34], [1 x %34]* %6, i32 0, i32 0
  %34 = bitcast %34* %33 to i8*
  call void @llvm.va_end(i8* %34)
  %35 = load i32, i32* %5, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %26
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @678, i32 0, i32 0))
  br label %39

39:                                               ; preds = %37, %26
  %40 = bitcast [1 x %34]* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %40) #10
  %41 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %41) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @1411(%28* %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %28*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca %31*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store %28* %0, %28** %4, align 8
  store i8** %1, i8*** %5, align 8
  %10 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  %11 = load %28*, %28** %4, align 8
  %12 = load i8**, i8*** %5, align 8
  %13 = call %31* @1428(%28* %11, i8** %12)
  store %31* %13, %31** %6, align 8
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #10
  store i32 1, i32* %7, align 4
  %15 = load %31*, %31** %6, align 8
  %16 = icmp eq %31* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %56

18:                                               ; preds = %2
  %19 = load %31*, %31** %6, align 8
  %20 = getelementptr inbounds %31, %31* %19, i32 0, i32 4
  %21 = load i8*, i8** %20, align 8
  %22 = call i8* @strstr(i8* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @810, i32 0, i32 0)) #12
  %23 = icmp ne i8* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %18
  store i32 0, i32* %7, align 4
  br label %52

25:                                               ; preds = %18
  %26 = load %31*, %31** %6, align 8
  %27 = bitcast %31* %26 to i8*
  call void @freeReplyObject(i8* %27)
  %28 = load %28*, %28** %4, align 8
  %29 = getelementptr inbounds %28, %28* %28, i32 0, i32 0
  %30 = load %10*, %10** %29, align 8
  %31 = call i8* (%10*, i8*, ...) @redisCommand(%10* %30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @127, i32 0, i32 0))
  %32 = bitcast i8* %31 to %31*
  store %31* %32, %31** %6, align 8
  %33 = load i8**, i8*** %5, align 8
  %34 = icmp ne i8** %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %25
  %36 = load i8**, i8*** %5, align 8
  store i8* null, i8** %36, align 8
  br label %37

37:                                               ; preds = %35, %25
  %38 = load %28*, %28** %4, align 8
  %39 = load %31*, %31** %6, align 8
  %40 = load i8**, i8*** %5, align 8
  %41 = call i32 @1426(%28* %38, %31* %39, i8** %40)
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  store i32 0, i32* %7, align 4
  br label %52

44:                                               ; preds = %37
  %45 = load %31*, %31** %6, align 8
  %46 = getelementptr inbounds %31, %31* %45, i32 0, i32 4
  %47 = load i8*, i8** %46, align 8
  %48 = call i64 @1429(i8* %47, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @811, i32 0, i32 0))
  store i64 %48, i64* %9, align 8
  %49 = load i64, i64* %9, align 8
  %50 = icmp eq i64 %49, 1
  %51 = zext i1 %50 to i32
  store i32 %51, i32* %7, align 4
  br label %52

52:                                               ; preds = %44, %43, %24
  %53 = load %31*, %31** %6, align 8
  %54 = bitcast %31* %53 to i8*
  call void @freeReplyObject(i8* %54)
  %55 = load i32, i32* %7, align 4
  store i32 %55, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %56

56:                                               ; preds = %52, %17
  %57 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %57) #10
  %58 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #10
  %59 = load i32, i32* %3, align 4
  ret i32 %59
}

; Function Attrs: nounwind uwtable
define internal void @1412(%28* %0, i8* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store %28* %0, %28** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %7 = load i8*, i8** %4, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = load i8*, i8** %4, align 8
  store i8* %10, i8** %5, align 8
  br label %12

11:                                               ; preds = %2
  store i8* getelementptr inbounds ([119 x i8], [119 x i8]* @812, i32 0, i32 0), i8** %5, align 8
  br label %12

12:                                               ; preds = %11, %9
  %13 = load %28*, %28** %3, align 8
  %14 = getelementptr inbounds %28, %28* %13, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = load %28*, %28** %3, align 8
  %17 = getelementptr inbounds %28, %28* %16, i32 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = load i8*, i8** %5, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @795, i32 0, i32 0), i8* %15, i32 %18, i8* %19)
  %20 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #10
  ret void
}

declare dso_local %24* @listAddNodeTail(%24*, i8*) #2

declare dso_local i8* @zcalloc(i64) #2

declare dso_local void @listRewind(%24*, %30*) #2

declare dso_local %25* @listNext(%30*) #2

; Function Attrs: nounwind uwtable
define internal void @1413(%29* %0, i32 %1) #0 {
  %3 = alloca %29*, align 8
  %4 = alloca i32, align 4
  store %29* %0, %29** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  %7 = mul i64 %6, 8
  %8 = call i8* @zcalloc(i64 %7)
  %9 = bitcast i8* %8 to %28**
  %10 = load %29*, %29** %3, align 8
  %11 = getelementptr inbounds %29, %29* %10, i32 0, i32 0
  store %28** %9, %28*** %11, align 8
  %12 = load %29*, %29** %3, align 8
  %13 = getelementptr inbounds %29, %29* %12, i32 0, i32 0
  %14 = load %28**, %28*** %13, align 8
  %15 = load %29*, %29** %3, align 8
  %16 = getelementptr inbounds %29, %29* %15, i32 0, i32 1
  store %28** %14, %28*** %16, align 8
  %17 = load i32, i32* %4, align 4
  %18 = load %29*, %29** %3, align 8
  %19 = getelementptr inbounds %29, %29* %18, i32 0, i32 2
  store i32 %17, i32* %19, align 8
  %20 = load %29*, %29** %3, align 8
  %21 = getelementptr inbounds %29, %29* %20, i32 0, i32 3
  store i32 0, i32* %21, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1414(%29* %0, %28* %1) #0 {
  %3 = alloca %29*, align 8
  %4 = alloca %28*, align 8
  store %29* %0, %29** %3, align 8
  store %28* %1, %28** %4, align 8
  %5 = load %29*, %29** %3, align 8
  %6 = getelementptr inbounds %29, %29* %5, i32 0, i32 0
  %7 = load %28**, %28*** %6, align 8
  %8 = load %29*, %29** %3, align 8
  %9 = getelementptr inbounds %29, %29* %8, i32 0, i32 0
  %10 = load %28**, %28*** %9, align 8
  %11 = load %29*, %29** %3, align 8
  %12 = getelementptr inbounds %29, %29* %11, i32 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %28*, %28** %10, i64 %14
  %16 = icmp ult %28** %7, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  br label %20

18:                                               ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @813, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 5299, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @815, i32 0, i32 0)) #14
  unreachable

19:                                               ; No predecessors!
  br label %20

20:                                               ; preds = %19, %17
  %21 = load %28*, %28** %4, align 8
  %22 = icmp ne %28* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  br label %26

24:                                               ; preds = %20
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @816, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 5300, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @815, i32 0, i32 0)) #14
  unreachable

25:                                               ; No predecessors!
  br label %26

26:                                               ; preds = %25, %23
  %27 = load %29*, %29** %3, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = load %29*, %29** %3, align 8
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp slt i32 %29, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %26
  br label %37

35:                                               ; preds = %26
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @817, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 5301, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @815, i32 0, i32 0)) #14
  unreachable

36:                                               ; No predecessors!
  br label %37

37:                                               ; preds = %36, %34
  %38 = load %28*, %28** %4, align 8
  %39 = load %29*, %29** %3, align 8
  %40 = getelementptr inbounds %29, %29* %39, i32 0, i32 0
  %41 = load %28**, %28*** %40, align 8
  %42 = load %29*, %29** %3, align 8
  %43 = getelementptr inbounds %29, %29* %42, i32 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %43, align 4
  %46 = sext i32 %44 to i64
  %47 = getelementptr inbounds %28*, %28** %41, i64 %46
  store %28* %38, %28** %47, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1415(%29* %0, %28** %1) #0 {
  %3 = alloca %29*, align 8
  %4 = alloca %28**, align 8
  store %29* %0, %29** %3, align 8
  store %28** %1, %28*** %4, align 8
  %5 = load %29*, %29** %3, align 8
  %6 = getelementptr inbounds %29, %29* %5, i32 0, i32 0
  %7 = load %28**, %28*** %6, align 8
  %8 = load %29*, %29** %3, align 8
  %9 = getelementptr inbounds %29, %29* %8, i32 0, i32 0
  %10 = load %28**, %28*** %9, align 8
  %11 = load %29*, %29** %3, align 8
  %12 = getelementptr inbounds %29, %29* %11, i32 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %28*, %28** %10, i64 %14
  %16 = icmp ult %28** %7, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  br label %20

18:                                               ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @813, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 5286, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @818, i32 0, i32 0)) #14
  unreachable

19:                                               ; No predecessors!
  br label %20

20:                                               ; preds = %19, %17
  %21 = load %29*, %29** %3, align 8
  %22 = getelementptr inbounds %29, %29* %21, i32 0, i32 0
  %23 = load %28**, %28*** %22, align 8
  %24 = load %28*, %28** %23, align 8
  %25 = icmp ne %28* %24, null
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = load %29*, %29** %3, align 8
  %28 = getelementptr inbounds %29, %29* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %28, align 4
  br label %31

31:                                               ; preds = %26, %20
  %32 = load %29*, %29** %3, align 8
  %33 = getelementptr inbounds %29, %29* %32, i32 0, i32 0
  %34 = load %28**, %28*** %33, align 8
  %35 = load %28*, %28** %34, align 8
  %36 = load %28**, %28*** %4, align 8
  store %28* %35, %28** %36, align 8
  %37 = load %29*, %29** %3, align 8
  %38 = getelementptr inbounds %29, %29* %37, i32 0, i32 0
  %39 = load %28**, %28*** %38, align 8
  %40 = getelementptr inbounds %28*, %28** %39, i32 1
  store %28** %40, %28*** %38, align 8
  %41 = load %29*, %29** %3, align 8
  %42 = getelementptr inbounds %29, %29* %41, i32 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %42, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local i64 @lround(double) #4

; Function Attrs: nounwind uwtable
define internal void @1416(%29* %0) #0 {
  %2 = alloca %29*, align 8
  %3 = alloca i32, align 4
  store %29* %0, %29** %2, align 8
  %4 = load %29*, %29** %2, align 8
  %5 = getelementptr inbounds %29, %29* %4, i32 0, i32 0
  %6 = load %28**, %28*** %5, align 8
  %7 = load %29*, %29** %2, align 8
  %8 = getelementptr inbounds %29, %29* %7, i32 0, i32 1
  %9 = load %28**, %28*** %8, align 8
  %10 = icmp ugt %28** %6, %9
  br i1 %10, label %11, label %59

11:                                               ; preds = %1
  %12 = load %29*, %29** %2, align 8
  %13 = getelementptr inbounds %29, %29* %12, i32 0, i32 0
  %14 = load %28**, %28*** %13, align 8
  %15 = load %29*, %29** %2, align 8
  %16 = getelementptr inbounds %29, %29* %15, i32 0, i32 1
  %17 = load %28**, %28*** %16, align 8
  %18 = ptrtoint %28** %14 to i64
  %19 = ptrtoint %28** %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  %22 = trunc i64 %21 to i32
  %23 = load %29*, %29** %2, align 8
  %24 = getelementptr inbounds %29, %29* %23, i32 0, i32 2
  store i32 %22, i32* %24, align 8
  %25 = load %29*, %29** %2, align 8
  %26 = getelementptr inbounds %29, %29* %25, i32 0, i32 1
  %27 = load %28**, %28*** %26, align 8
  %28 = load %29*, %29** %2, align 8
  %29 = getelementptr inbounds %29, %29* %28, i32 0, i32 0
  store %28** %27, %28*** %29, align 8
  %30 = load %29*, %29** %2, align 8
  %31 = getelementptr inbounds %29, %29* %30, i32 0, i32 3
  store i32 0, i32* %31, align 4
  %32 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #10
  store i32 0, i32* %3, align 4
  br label %33

33:                                               ; preds = %54, %11
  %34 = load i32, i32* %3, align 4
  %35 = load %29*, %29** %2, align 8
  %36 = getelementptr inbounds %29, %29* %35, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %34, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %33
  %40 = load %29*, %29** %2, align 8
  %41 = getelementptr inbounds %29, %29* %40, i32 0, i32 0
  %42 = load %28**, %28*** %41, align 8
  %43 = load i32, i32* %3, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %28*, %28** %42, i64 %44
  %46 = load %28*, %28** %45, align 8
  %47 = icmp ne %28* %46, null
  br i1 %47, label %48, label %53

48:                                               ; preds = %39
  %49 = load %29*, %29** %2, align 8
  %50 = getelementptr inbounds %29, %29* %49, i32 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %50, align 4
  br label %53

53:                                               ; preds = %48, %39
  br label %54

54:                                               ; preds = %53
  %55 = load i32, i32* %3, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %3, align 4
  br label %33

57:                                               ; preds = %33
  %58 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %58) #10
  br label %59

59:                                               ; preds = %57, %1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1417(%29* %0, i32 %1) #0 {
  %3 = alloca %29*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %28**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %28*, align 8
  %13 = alloca %28*, align 8
  %14 = alloca %28**, align 8
  %15 = alloca i32, align 4
  %16 = alloca %30, align 8
  %17 = alloca %25*, align 8
  %18 = alloca %28*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %29* %0, %29** %3, align 8
  store i32 %1, i32* %4, align 4
  %25 = bitcast %28*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #10
  store %28** null, %28*** %5, align 8
  %26 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #10
  %27 = load %29*, %29** %3, align 8
  %28 = load i32, i32* %4, align 4
  %29 = call i32 @1431(%29* %27, i32 %28, %28*** null, i32* null)
  store i32 %29, i32* %6, align 4
  %30 = load i32, i32* %6, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %2
  br label %198

33:                                               ; preds = %2
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @819, i32 0, i32 0))
  %34 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %35 = getelementptr inbounds %24, %24* %34, i32 0, i32 5
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %7, align 4
  %38 = load i32, i32* %7, align 4
  %39 = mul nsw i32 500, %38
  store i32 %39, i32* %8, align 4
  %40 = call i64 @time(i64* null) #10
  %41 = trunc i64 %40 to i32
  call void @srand(i32 %41) #10
  br label %42

42:                                               ; preds = %174, %33
  %43 = load i32, i32* %8, align 4
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %175

45:                                               ; preds = %42
  %46 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #10
  store i32 0, i32* %9, align 4
  %47 = load %28**, %28*** %5, align 8
  %48 = icmp ne %28** %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = load %28**, %28*** %5, align 8
  %51 = bitcast %28** %50 to i8*
  call void @zfree(i8* %51)
  store %28** null, %28*** %5, align 8
  br label %52

52:                                               ; preds = %49, %45
  %53 = load %29*, %29** %3, align 8
  %54 = load i32, i32* %4, align 4
  %55 = call i32 @1431(%29* %53, i32 %54, %28*** %5, i32* %9)
  store i32 %55, i32* %6, align 4
  %56 = load i32, i32* %6, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  store i32 4, i32* %10, align 4
  br label %171

59:                                               ; preds = %52
  %60 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #10
  %61 = call i32 @rand() #10
  %62 = load i32, i32* %9, align 4
  %63 = srem i32 %61, %62
  store i32 %63, i32* %11, align 4
  %64 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #10
  %65 = load %28**, %28*** %5, align 8
  %66 = load i32, i32* %11, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %28*, %28** %65, i64 %67
  %69 = load %28*, %28** %68, align 8
  store %28* %69, %28** %12, align 8
  %70 = bitcast %28** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %70) #10
  store %28* null, %28** %13, align 8
  %71 = bitcast %28*** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #10
  %72 = load i32, i32* %7, align 4
  %73 = sub nsw i32 %72, 1
  %74 = sext i32 %73 to i64
  %75 = mul i64 %74, 8
  %76 = call i8* @zcalloc(i64 %75)
  %77 = bitcast i8* %76 to %28**
  store %28** %77, %28*** %14, align 8
  %78 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %78) #10
  store i32 0, i32* %15, align 4
  %79 = bitcast %30* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %79) #10
  %80 = bitcast %25** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #10
  %81 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %81, %30* %16)
  br label %82

82:                                               ; preds = %106, %59
  %83 = call %25* @listNext(%30* %16)
  store %25* %83, %25** %17, align 8
  %84 = icmp ne %25* %83, null
  br i1 %84, label %85, label %108

85:                                               ; preds = %82
  %86 = bitcast %28** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %86) #10
  %87 = load %25*, %25** %17, align 8
  %88 = getelementptr inbounds %25, %25* %87, i32 0, i32 2
  %89 = load i8*, i8** %88, align 8
  %90 = bitcast i8* %89 to %28*
  store %28* %90, %28** %18, align 8
  %91 = load %28*, %28** %18, align 8
  %92 = load %28*, %28** %12, align 8
  %93 = icmp ne %28* %91, %92
  br i1 %93, label %94, label %106

94:                                               ; preds = %85
  %95 = load %28*, %28** %18, align 8
  %96 = getelementptr inbounds %28, %28* %95, i32 0, i32 9
  %97 = load i8*, i8** %96, align 8
  %98 = icmp ne i8* %97, null
  br i1 %98, label %99, label %106

99:                                               ; preds = %94
  %100 = load %28*, %28** %18, align 8
  %101 = load %28**, %28*** %14, align 8
  %102 = load i32, i32* %15, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %15, align 4
  %104 = sext i32 %102 to i64
  %105 = getelementptr inbounds %28*, %28** %101, i64 %104
  store %28* %100, %28** %105, align 8
  br label %106

106:                                              ; preds = %99, %94, %85
  %107 = bitcast %28** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #10
  br label %82

108:                                              ; preds = %82
  %109 = load i32, i32* %15, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %108
  %112 = load %28**, %28*** %14, align 8
  %113 = bitcast %28** %112 to i8*
  call void @zfree(i8* %113)
  store i32 4, i32* %10, align 4
  br label %163

114:                                              ; preds = %108
  %115 = call i32 @rand() #10
  %116 = load i32, i32* %15, align 4
  %117 = srem i32 %115, %116
  store i32 %117, i32* %11, align 4
  %118 = load %28**, %28*** %14, align 8
  %119 = load i32, i32* %11, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds %28*, %28** %118, i64 %120
  %122 = load %28*, %28** %121, align 8
  store %28* %122, %28** %13, align 8
  %123 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %123) #10
  %124 = load %28*, %28** %12, align 8
  %125 = getelementptr inbounds %28, %28* %124, i32 0, i32 9
  %126 = load i8*, i8** %125, align 8
  store i8* %126, i8** %19, align 8
  %127 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %127) #10
  %128 = load %28*, %28** %13, align 8
  %129 = getelementptr inbounds %28, %28* %128, i32 0, i32 9
  %130 = load i8*, i8** %129, align 8
  store i8* %130, i8** %20, align 8
  %131 = load i8*, i8** %20, align 8
  %132 = load %28*, %28** %12, align 8
  %133 = getelementptr inbounds %28, %28* %132, i32 0, i32 9
  store i8* %131, i8** %133, align 8
  %134 = load %28*, %28** %12, align 8
  %135 = getelementptr inbounds %28, %28* %134, i32 0, i32 10
  store i32 1, i32* %135, align 8
  %136 = load i8*, i8** %19, align 8
  %137 = load %28*, %28** %13, align 8
  %138 = getelementptr inbounds %28, %28* %137, i32 0, i32 9
  store i8* %136, i8** %138, align 8
  %139 = load %28*, %28** %13, align 8
  %140 = getelementptr inbounds %28, %28* %139, i32 0, i32 10
  store i32 1, i32* %140, align 8
  %141 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %141) #10
  %142 = load %29*, %29** %3, align 8
  %143 = load i32, i32* %4, align 4
  %144 = call i32 @1431(%29* %142, i32 %143, %28*** null, i32* null)
  store i32 %144, i32* %21, align 4
  %145 = load i32, i32* %21, align 4
  %146 = load i32, i32* %6, align 4
  %147 = icmp sgt i32 %145, %146
  br i1 %147, label %148, label %155

148:                                              ; preds = %114
  %149 = load i8*, i8** %19, align 8
  %150 = load %28*, %28** %12, align 8
  %151 = getelementptr inbounds %28, %28* %150, i32 0, i32 9
  store i8* %149, i8** %151, align 8
  %152 = load i8*, i8** %20, align 8
  %153 = load %28*, %28** %13, align 8
  %154 = getelementptr inbounds %28, %28* %153, i32 0, i32 9
  store i8* %152, i8** %154, align 8
  br label %155

155:                                              ; preds = %148, %114
  %156 = load %28**, %28*** %14, align 8
  %157 = bitcast %28** %156 to i8*
  call void @zfree(i8* %157)
  %158 = load i32, i32* %8, align 4
  %159 = add nsw i32 %158, -1
  store i32 %159, i32* %8, align 4
  %160 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %160) #10
  %161 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %161) #10
  %162 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %162) #10
  store i32 0, i32* %10, align 4
  br label %163

163:                                              ; preds = %155, %111
  %164 = bitcast %25** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #10
  %165 = bitcast %30* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %165) #10
  %166 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %166) #10
  %167 = bitcast %28*** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #10
  %168 = bitcast %28** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %168) #10
  %169 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %169) #10
  %170 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %170) #10
  br label %171

171:                                              ; preds = %163, %58
  %172 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %172) #10
  %173 = load i32, i32* %10, align 4
  switch i32 %173, label %203 [
    i32 0, label %174
    i32 4, label %175
  ]

174:                                              ; preds = %171
  br label %42

175:                                              ; preds = %171, %42
  %176 = load %29*, %29** %3, align 8
  %177 = load i32, i32* %4, align 4
  %178 = call i32 @1431(%29* %176, i32 %177, %28*** null, i32* null)
  store i32 %178, i32* %6, align 4
  %179 = load i32, i32* %6, align 4
  %180 = icmp eq i32 %179, 0
  %181 = zext i1 %180 to i32
  store i32 %181, i32* %23, align 4
  %182 = load i32, i32* %23, align 4
  %183 = icmp ne i32 %182, 0
  %184 = zext i1 %183 to i64
  %185 = select i1 %183, i32 4, i32 2
  store i32 %185, i32* %24, align 4
  %186 = load i32, i32* %23, align 4
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %175
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @820, i32 0, i32 0), i8** %22, align 8
  br label %195

189:                                              ; preds = %175
  %190 = load i32, i32* %6, align 4
  %191 = icmp sge i32 %190, 10000
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @821, i32 0, i32 0), i8** %22, align 8
  br label %194

193:                                              ; preds = %189
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @822, i32 0, i32 0), i8** %22, align 8
  br label %194

194:                                              ; preds = %193, %192
  br label %195

195:                                              ; preds = %194, %188
  %196 = load i32, i32* %24, align 4
  %197 = load i8*, i8** %22, align 8
  call void (i32, i8*, ...) @1410(i32 %196, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %197)
  br label %198

198:                                              ; preds = %195, %32
  %199 = load %28**, %28*** %5, align 8
  %200 = bitcast %28** %199 to i8*
  call void @zfree(i8* %200)
  %201 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #10
  %202 = bitcast %28*** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %202) #10
  ret void

203:                                              ; preds = %171
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1418() #0 {
  %1 = alloca %30, align 8
  %2 = alloca %25*, align 8
  %3 = alloca %28*, align 8
  %4 = alloca i8*, align 8
  %5 = bitcast %30* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %5) #10
  %6 = bitcast %25** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %7 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %7, %30* %1)
  br label %8

8:                                                ; preds = %11, %0
  %9 = call %25* @listNext(%30* %1)
  store %25* %9, %25** %2, align 8
  %10 = icmp ne %25* %9, null
  br i1 %10, label %11, label %25

11:                                               ; preds = %8
  %12 = bitcast %28** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = load %25*, %25** %2, align 8
  %14 = getelementptr inbounds %25, %25* %13, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %28*
  store %28* %16, %28** %3, align 8
  %17 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10
  %18 = load %28*, %28** %3, align 8
  %19 = call i8* @1436(%28* %18, i32 0)
  store i8* %19, i8** %4, align 8
  %20 = load i8*, i8** %4, align 8
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %20)
  %22 = load i8*, i8** %4, align 8
  call void @sdsfree(i8* %22)
  %23 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  %24 = bitcast %28** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #10
  br label %8

25:                                               ; preds = %8
  %26 = bitcast %25** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %26) #10
  %27 = bitcast %30* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %27) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @1419(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca [4 x i8], align 1
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @841, i32 0, i32 0), i8* %5)
  %7 = load %1*, %1** @stdout, align 8
  %8 = call i32 @fflush(%1* %7)
  %9 = bitcast [4 x i8]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  %11 = load %1*, %1** @stdin, align 8
  %12 = call i32 @fileno(%1* %11) #10
  %13 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i32 0, i32 0
  %14 = call i64 @read(i32 %12, i8* %13, i64 4)
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %4, align 4
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 3
  store i8 0, i8* %16, align 1
  %17 = load i32, i32* %4, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %1
  %20 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i32 0, i32 0
  %21 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @842, i32 0, i32 0), i8* %20) #12
  %22 = icmp ne i32 %21, 0
  %23 = xor i1 %22, true
  br label %24

24:                                               ; preds = %19, %1
  %25 = phi i1 [ false, %1 ], [ %23, %19 ]
  %26 = zext i1 %25 to i32
  %27 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %27) #10
  %28 = bitcast [4 x i8]* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %28) #10
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @1420(%28* %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %28*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca %31*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %28* %0, %28** %4, align 8
  store i8** %1, i8*** %5, align 8
  %10 = load %28*, %28** %4, align 8
  %11 = getelementptr inbounds %28, %28* %10, i32 0, i32 10
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %95

15:                                               ; preds = %2
  %16 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #10
  store %31* null, %31** %6, align 8
  %17 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  store i32 0, i32* %7, align 4
  %18 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #10
  store i32 1, i32* %8, align 4
  %19 = load i8**, i8*** %5, align 8
  %20 = icmp ne i8** %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = load i8**, i8*** %5, align 8
  store i8* null, i8** %22, align 8
  br label %23

23:                                               ; preds = %21, %15
  %24 = load %28*, %28** %4, align 8
  %25 = getelementptr inbounds %28, %28* %24, i32 0, i32 9
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ne i8* %26, null
  br i1 %27, label %28, label %67

28:                                               ; preds = %23
  %29 = load %28*, %28** %4, align 8
  %30 = getelementptr inbounds %28, %28* %29, i32 0, i32 0
  %31 = load %10*, %10** %30, align 8
  %32 = load %28*, %28** %4, align 8
  %33 = getelementptr inbounds %28, %28* %32, i32 0, i32 9
  %34 = load i8*, i8** %33, align 8
  %35 = call i8* (%10*, i8*, ...) @redisCommand(%10* %31, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @843, i32 0, i32 0), i8* %34)
  %36 = bitcast i8* %35 to %31*
  store %31* %36, %31** %6, align 8
  %37 = load %31*, %31** %6, align 8
  %38 = icmp eq %31* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %28
  %40 = load %31*, %31** %6, align 8
  %41 = getelementptr inbounds %31, %31* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 6
  %44 = zext i1 %43 to i32
  store i32 %44, i32* %7, align 4
  br i1 %43, label %45, label %66

45:                                               ; preds = %39, %28
  %46 = load i32, i32* %7, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %65

48:                                               ; preds = %45
  %49 = load i8**, i8*** %5, align 8
  %50 = icmp ne i8** %49, null
  br i1 %50, label %51, label %65

51:                                               ; preds = %48
  %52 = load %31*, %31** %6, align 8
  %53 = getelementptr inbounds %31, %31* %52, i32 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 1
  %56 = mul i64 %55, 1
  %57 = call i8* @zmalloc(i64 %56)
  %58 = load i8**, i8*** %5, align 8
  store i8* %57, i8** %58, align 8
  %59 = load i8**, i8*** %5, align 8
  %60 = load i8*, i8** %59, align 8
  %61 = load %31*, %31** %6, align 8
  %62 = getelementptr inbounds %31, %31* %61, i32 0, i32 4
  %63 = load i8*, i8** %62, align 8
  %64 = call i8* @strcpy(i8* %60, i8* %63) #10
  br label %65

65:                                               ; preds = %51, %48, %45
  store i32 0, i32* %8, align 4
  br label %84

66:                                               ; preds = %39
  br label %81

67:                                               ; preds = %23
  %68 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %68) #10
  %69 = load %28*, %28** %4, align 8
  %70 = load i8**, i8*** %5, align 8
  %71 = call i32 @1439(%28* %69, i8** %70)
  store i32 %71, i32* %9, align 4
  %72 = load i32, i32* %9, align 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %67
  %75 = load i8**, i8*** %5, align 8
  %76 = load i8*, i8** %75, align 8
  %77 = icmp ne i8* %76, null
  br i1 %77, label %78, label %79

78:                                               ; preds = %74, %67
  store i32 0, i32* %8, align 4
  br label %79

79:                                               ; preds = %78, %74
  %80 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %80) #10
  br label %81

81:                                               ; preds = %79, %66
  %82 = load %28*, %28** %4, align 8
  %83 = getelementptr inbounds %28, %28* %82, i32 0, i32 10
  store i32 0, i32* %83, align 8
  br label %84

84:                                               ; preds = %81, %65
  %85 = load %31*, %31** %6, align 8
  %86 = icmp ne %31* %85, null
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = load %31*, %31** %6, align 8
  %89 = bitcast %31* %88 to i8*
  call void @freeReplyObject(i8* %89)
  br label %90

90:                                               ; preds = %87, %84
  %91 = load i32, i32* %8, align 4
  store i32 %91, i32* %3, align 4
  %92 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %92) #10
  %93 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %93) #10
  %94 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #10
  br label %95

95:                                               ; preds = %90, %14
  %96 = load i32, i32* %3, align 4
  ret i32 %96
}

declare dso_local i32 @sleep(i32) #2

; Function Attrs: nounwind uwtable
define internal void @1421() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %4*, align 8
  %4 = alloca %33*, align 8
  %5 = alloca %7*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %24*, align 8
  %11 = alloca %30, align 8
  %12 = alloca %25*, align 8
  %13 = alloca i8*, align 8
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @846, i32 0, i32 0))
  %15 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #10
  store i32 0, i32* %1, align 4
  %16 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  %17 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %18 = getelementptr inbounds %24, %24* %17, i32 0, i32 5
  %19 = load i64, i64* %18, align 8
  %20 = uitofp i64 %19 to float
  %21 = fmul float %20, 0x3FC3333340000000
  %22 = fptosi float %21 to i32
  %23 = add nsw i32 20, %22
  store i32 %23, i32* %2, align 4
  br label %24

24:                                               ; preds = %140, %0
  %25 = call i32 @1440()
  %26 = icmp ne i32 %25, 0
  %27 = xor i1 %26, true
  br i1 %27, label %28, label %141

28:                                               ; preds = %24
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @847, i32 0, i32 0))
  %30 = load %1*, %1** @stdout, align 8
  %31 = call i32 @fflush(%1* %30)
  %32 = call i32 @sleep(i32 1)
  %33 = load i32, i32* %1, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %1, align 4
  %35 = load i32, i32* %2, align 4
  %36 = icmp sgt i32 %34, %35
  br i1 %36, label %37, label %140

37:                                               ; preds = %28
  %38 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #10
  %39 = call %4* @1441()
  store %4* %39, %4** %3, align 8
  %40 = bitcast %33** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #10
  store %33* null, %33** %4, align 8
  %41 = load %4*, %4** %3, align 8
  %42 = icmp ne %4* %41, null
  br i1 %42, label %43, label %127

43:                                               ; preds = %37
  %44 = load %4*, %4** %3, align 8
  %45 = getelementptr inbounds %4, %4* %44, i32 0, i32 2
  %46 = getelementptr inbounds [2 x %6], [2 x %6]* %45, i64 0, i64 0
  %47 = getelementptr inbounds %6, %6* %46, i32 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = load %4*, %4** %3, align 8
  %50 = getelementptr inbounds %4, %4* %49, i32 0, i32 2
  %51 = getelementptr inbounds [2 x %6], [2 x %6]* %50, i64 0, i64 1
  %52 = getelementptr inbounds %6, %6* %51, i32 0, i32 3
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %48, %53
  %55 = icmp ugt i64 %54, 0
  br i1 %55, label %56, label %127

56:                                               ; preds = %43
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  %58 = load %4*, %4** %3, align 8
  %59 = getelementptr inbounds %4, %4* %58, i32 0, i32 2
  %60 = getelementptr inbounds [2 x %6], [2 x %6]* %59, i64 0, i64 0
  %61 = getelementptr inbounds %6, %6* %60, i32 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = load %4*, %4** %3, align 8
  %64 = getelementptr inbounds %4, %4* %63, i32 0, i32 2
  %65 = getelementptr inbounds [2 x %6], [2 x %6]* %64, i64 0, i64 1
  %66 = getelementptr inbounds %6, %6* %65, i32 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %62, %67
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @848, i32 0, i32 0), i64 %68)
  %69 = load %4*, %4** %3, align 8
  %70 = call %33* @dictGetIterator(%4* %69)
  store %33* %70, %33** %4, align 8
  %71 = bitcast %7** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #10
  br label %72

72:                                               ; preds = %116, %56
  %73 = load %33*, %33** %4, align 8
  %74 = call %7* @dictNext(%33* %73)
  store %7* %74, %7** %5, align 8
  %75 = icmp ne %7* %74, null
  br i1 %75, label %76, label %125

76:                                               ; preds = %72
  %77 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #10
  %78 = load %7*, %7** %5, align 8
  %79 = getelementptr inbounds %7, %7* %78, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  store i8* %80, i8** %6, align 8
  %81 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %81) #10
  store i8* null, i8** %7, align 8
  %82 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %82) #10
  store i32 0, i32* %8, align 4
  %83 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %83) #10
  store i32 0, i32* %9, align 4
  %84 = bitcast %24** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %84) #10
  %85 = load %7*, %7** %5, align 8
  %86 = getelementptr inbounds %7, %7* %85, i32 0, i32 1
  %87 = bitcast %8* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = bitcast i8* %88 to %24*
  store %24* %89, %24** %10, align 8
  %90 = load i8*, i8** %6, align 8
  %91 = call i32 @1442(i8* %90, i8** %7, i32* %8, i32* %9)
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %99

93:                                               ; preds = %76
  %94 = load i32, i32* %9, align 4
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %93
  %97 = load i32, i32* %9, align 4
  %98 = load i8*, i8** %7, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @849, i32 0, i32 0), i32 %97, i8* %98)
  br label %101

99:                                               ; preds = %93, %76
  %100 = load i8*, i8** %6, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @850, i32 0, i32 0), i8* %100)
  br label %101

101:                                              ; preds = %99, %96
  %102 = bitcast %30* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %102) #10
  %103 = bitcast %25** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %103) #10
  %104 = load %24*, %24** %10, align 8
  call void @listRewind(%24* %104, %30* %11)
  br label %105

105:                                              ; preds = %108, %101
  %106 = call %25* @listNext(%30* %11)
  store %25* %106, %25** %12, align 8
  %107 = icmp ne %25* %106, null
  br i1 %107, label %108, label %116

108:                                              ; preds = %105
  %109 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #10
  %110 = load %25*, %25** %12, align 8
  %111 = getelementptr inbounds %25, %25* %110, i32 0, i32 2
  %112 = load i8*, i8** %111, align 8
  store i8* %112, i8** %13, align 8
  %113 = load i8*, i8** %13, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @851, i32 0, i32 0), i8* %113)
  %114 = load i8*, i8** %13, align 8
  call void @sdsfree(i8* %114)
  %115 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #10
  br label %105

116:                                              ; preds = %105
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @852, i32 0, i32 0))
  %117 = load %24*, %24** %10, align 8
  call void @listEmpty(%24* %117)
  %118 = bitcast %25** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %118) #10
  %119 = bitcast %30* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %119) #10
  %120 = bitcast %24** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %120) #10
  %121 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %121) #10
  %122 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %122) #10
  %123 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #10
  %124 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %124) #10
  br label %72

125:                                              ; preds = %72
  %126 = bitcast %7** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #10
  br label %127

127:                                              ; preds = %125, %43, %37
  %128 = load %33*, %33** %4, align 8
  %129 = icmp ne %33* %128, null
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = load %33*, %33** %4, align 8
  call void @dictReleaseIterator(%33* %131)
  br label %132

132:                                              ; preds = %130, %127
  %133 = load %4*, %4** %3, align 8
  %134 = icmp ne %4* %133, null
  br i1 %134, label %135, label %137

135:                                              ; preds = %132
  %136 = load %4*, %4** %3, align 8
  call void @dictRelease(%4* %136)
  br label %137

137:                                              ; preds = %135, %132
  store i32 0, i32* %1, align 4
  %138 = bitcast %33** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #10
  %139 = bitcast %4** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %139) #10
  br label %140

140:                                              ; preds = %137, %28
  br label %24

141:                                              ; preds = %24
  %142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  %143 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %143) #10
  %144 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %144) #10
  ret void
}

declare dso_local void @listEmpty(%24*) #2

; Function Attrs: nounwind uwtable
define internal i32 @1422(%28* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %28*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %30, align 8
  %9 = alloca %25*, align 8
  %10 = alloca %28*, align 8
  %11 = alloca %28*, align 8
  %12 = alloca %28*, align 8
  store %28* %0, %28** %4, align 8
  store i32 %1, i32* %5, align 4
  %13 = load %28*, %28** %4, align 8
  %14 = getelementptr inbounds %28, %28* %13, i32 0, i32 0
  %15 = load %10*, %10** %14, align 8
  %16 = icmp eq %10* %15, null
  br i1 %16, label %17, label %23

17:                                               ; preds = %2
  %18 = load %28*, %28** %4, align 8
  %19 = call i32 @1405(%28* %18)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = load %28*, %28** %4, align 8
  call void @1406(%28* %22)
  store i32 0, i32* %3, align 4
  br label %210

23:                                               ; preds = %17, %2
  %24 = load i32, i32* %5, align 4
  %25 = or i32 %24, 1
  store i32 %25, i32* %5, align 4
  %26 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #10
  store i8* null, i8** %6, align 8
  %27 = load %28*, %28** %4, align 8
  %28 = call i32 @1407(%28* %27, i8** %6)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %23
  %31 = load %28*, %28** %4, align 8
  %32 = load i8*, i8** %6, align 8
  call void @1408(%28* %31, i8* %32)
  %33 = load i8*, i8** %6, align 8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = load i8*, i8** %6, align 8
  call void @zfree(i8* %36)
  br label %37

37:                                               ; preds = %35, %30
  %38 = load %28*, %28** %4, align 8
  call void @1406(%28* %38)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %7, align 4
  br label %208

39:                                               ; preds = %23
  store i8* null, i8** %6, align 8
  %40 = load %28*, %28** %4, align 8
  %41 = load i32, i32* %5, align 4
  %42 = call i32 @1409(%28* %40, i32 %41, i8** %6)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %39
  %45 = load i8*, i8** %6, align 8
  %46 = icmp ne i8* %45, null
  br i1 %46, label %47, label %56

47:                                               ; preds = %44
  %48 = load %28*, %28** %4, align 8
  %49 = getelementptr inbounds %28, %28* %48, i32 0, i32 2
  %50 = load i8*, i8** %49, align 8
  %51 = load %28*, %28** %4, align 8
  %52 = getelementptr inbounds %28, %28* %51, i32 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = load i8*, i8** %6, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %50, i32 %53, i8* %54)
  %55 = load i8*, i8** %6, align 8
  call void @zfree(i8* %55)
  br label %56

56:                                               ; preds = %47, %44
  %57 = load %28*, %28** %4, align 8
  call void @1406(%28* %57)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %7, align 4
  br label %208

58:                                               ; preds = %39
  %59 = bitcast %30* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %59) #10
  %60 = bitcast %25** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #10
  %61 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %62 = icmp ne %24* %61, null
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %64, %30* %8)
  br label %65

65:                                               ; preds = %68, %63
  %66 = call %25* @listNext(%30* %8)
  store %25* %66, %25** %9, align 8
  %67 = icmp ne %25* %66, null
  br i1 %67, label %68, label %73

68:                                               ; preds = %65
  %69 = load %25*, %25** %9, align 8
  %70 = getelementptr inbounds %25, %25* %69, i32 0, i32 2
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast i8* %71 to %28*
  call void @1406(%28* %72)
  br label %65

73:                                               ; preds = %65
  %74 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRelease(%24* %74)
  br label %75

75:                                               ; preds = %73, %58
  %76 = call %24* @listCreate()
  store %24* %76, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %77 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %78 = load %28*, %28** %4, align 8
  %79 = bitcast %28* %78 to i8*
  %80 = call %24* @listAddNodeTail(%24* %77, i8* %79)
  %81 = load %28*, %28** %4, align 8
  %82 = getelementptr inbounds %28, %28* %81, i32 0, i32 14
  %83 = load %24*, %24** %82, align 8
  %84 = icmp ne %24* %83, null
  br i1 %84, label %85, label %163

85:                                               ; preds = %75
  %86 = load %28*, %28** %4, align 8
  %87 = getelementptr inbounds %28, %28* %86, i32 0, i32 14
  %88 = load %24*, %24** %87, align 8
  call void @listRewind(%24* %88, %30* %8)
  br label %89

89:                                               ; preds = %156, %153, %85
  %90 = call %25* @listNext(%30* %8)
  store %25* %90, %25** %9, align 8
  %91 = icmp ne %25* %90, null
  br i1 %91, label %92, label %157

92:                                               ; preds = %89
  %93 = bitcast %28** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %93) #10
  %94 = load %25*, %25** %9, align 8
  %95 = getelementptr inbounds %25, %25* %94, i32 0, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast i8* %96 to %28*
  store %28* %97, %28** %10, align 8
  %98 = load %28*, %28** %10, align 8
  %99 = getelementptr inbounds %28, %28* %98, i32 0, i32 2
  %100 = load i8*, i8** %99, align 8
  %101 = icmp ne i8* %100, null
  br i1 %101, label %102, label %107

102:                                              ; preds = %92
  %103 = load %28*, %28** %10, align 8
  %104 = getelementptr inbounds %28, %28* %103, i32 0, i32 3
  %105 = load i32, i32* %104, align 8
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %102, %92
  br label %142

108:                                              ; preds = %102
  %109 = load %28*, %28** %10, align 8
  %110 = getelementptr inbounds %28, %28* %109, i32 0, i32 0
  %111 = load %10*, %10** %110, align 8
  %112 = icmp ne %10* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %108
  %114 = load %28*, %28** %10, align 8
  %115 = call i32 @1405(%28* %114)
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %118, label %117

117:                                              ; preds = %113
  br label %142

118:                                              ; preds = %113, %108
  store i8* null, i8** %6, align 8
  %119 = load %28*, %28** %10, align 8
  %120 = call i32 @1409(%28* %119, i32 0, i8** %6)
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %134

122:                                              ; preds = %118
  %123 = load %28*, %28** %10, align 8
  %124 = getelementptr inbounds %28, %28* %123, i32 0, i32 7
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 56
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %122
  br label %142

129:                                              ; preds = %122
  %130 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %131 = load %28*, %28** %10, align 8
  %132 = bitcast %28* %131 to i8*
  %133 = call %24* @listAddNodeTail(%24* %130, i8* %132)
  br label %141

134:                                              ; preds = %118
  %135 = load %28*, %28** %10, align 8
  %136 = getelementptr inbounds %28, %28* %135, i32 0, i32 2
  %137 = load i8*, i8** %136, align 8
  %138 = load %28*, %28** %10, align 8
  %139 = getelementptr inbounds %28, %28* %138, i32 0, i32 3
  %140 = load i32, i32* %139, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @858, i32 0, i32 0), i8* %137, i32 %140)
  br label %142

141:                                              ; preds = %129
  store i32 4, i32* %7, align 4
  br label %153

142:                                              ; preds = %134, %128, %117, %107
  %143 = load %28*, %28** %10, align 8
  %144 = getelementptr inbounds %28, %28* %143, i32 0, i32 7
  %145 = load i32, i32* %144, align 8
  %146 = and i32 %145, 2
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %142
  %149 = load i32, i32* getelementptr inbounds (%23, %23* @772, i32 0, i32 2), align 8
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* getelementptr inbounds (%23, %23* @772, i32 0, i32 2), align 8
  br label %151

151:                                              ; preds = %148, %142
  %152 = load %28*, %28** %10, align 8
  call void @1406(%28* %152)
  store i32 0, i32* %7, align 4
  br label %153

153:                                              ; preds = %151, %141
  %154 = bitcast %28** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #10
  %155 = load i32, i32* %7, align 4
  switch i32 %155, label %212 [
    i32 0, label %156
    i32 4, label %89
  ]

156:                                              ; preds = %153
  br label %89

157:                                              ; preds = %89
  %158 = load %28*, %28** %4, align 8
  %159 = getelementptr inbounds %28, %28* %158, i32 0, i32 14
  %160 = load %24*, %24** %159, align 8
  call void @listRelease(%24* %160)
  %161 = load %28*, %28** %4, align 8
  %162 = getelementptr inbounds %28, %28* %161, i32 0, i32 14
  store %24* null, %24** %162, align 8
  br label %163

163:                                              ; preds = %157, %75
  %164 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %164, %30* %8)
  br label %165

165:                                              ; preds = %203, %163
  %166 = call %25* @listNext(%30* %8)
  store %25* %166, %25** %9, align 8
  %167 = icmp ne %25* %166, null
  br i1 %167, label %168, label %205

168:                                              ; preds = %165
  %169 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %169) #10
  %170 = load %25*, %25** %9, align 8
  %171 = getelementptr inbounds %25, %25* %170, i32 0, i32 2
  %172 = load i8*, i8** %171, align 8
  %173 = bitcast i8* %172 to %28*
  store %28* %173, %28** %11, align 8
  %174 = load %28*, %28** %11, align 8
  %175 = getelementptr inbounds %28, %28* %174, i32 0, i32 9
  %176 = load i8*, i8** %175, align 8
  %177 = icmp ne i8* %176, null
  br i1 %177, label %178, label %203

178:                                              ; preds = %168
  %179 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %179) #10
  %180 = load %28*, %28** %11, align 8
  %181 = getelementptr inbounds %28, %28* %180, i32 0, i32 9
  %182 = load i8*, i8** %181, align 8
  %183 = call %28* @1446(i8* %182)
  store %28* %183, %28** %12, align 8
  %184 = load %28*, %28** %12, align 8
  %185 = icmp eq %28* %184, null
  br i1 %185, label %186, label %196

186:                                              ; preds = %178
  %187 = load %28*, %28** %11, align 8
  %188 = getelementptr inbounds %28, %28* %187, i32 0, i32 2
  %189 = load i8*, i8** %188, align 8
  %190 = load %28*, %28** %11, align 8
  %191 = getelementptr inbounds %28, %28* %190, i32 0, i32 3
  %192 = load i32, i32* %191, align 8
  %193 = load %28*, %28** %11, align 8
  %194 = getelementptr inbounds %28, %28* %193, i32 0, i32 9
  %195 = load i8*, i8** %194, align 8
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @859, i32 0, i32 0), i8* %189, i32 %192, i8* %195)
  br label %201

196:                                              ; preds = %178
  %197 = load %28*, %28** %12, align 8
  %198 = getelementptr inbounds %28, %28* %197, i32 0, i32 13
  %199 = load i32, i32* %198, align 8
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %198, align 8
  br label %201

201:                                              ; preds = %196, %186
  %202 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %202) #10
  br label %203

203:                                              ; preds = %201, %168
  %204 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %204) #10
  br label %165

205:                                              ; preds = %165
  store i32 1, i32* %3, align 4
  store i32 1, i32* %7, align 4
  %206 = bitcast %25** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %206) #10
  %207 = bitcast %30* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %207) #10
  br label %208

208:                                              ; preds = %205, %56, %37
  %209 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %209) #10
  br label %210

210:                                              ; preds = %208, %21
  %211 = load i32, i32* %3, align 4
  ret i32 %211

212:                                              ; preds = %153
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1423(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %25*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %28*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca %30, align 8
  %12 = alloca i32, align 4
  %13 = alloca %4*, align 8
  %14 = alloca %28*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca %33*, align 8
  %22 = alloca %7*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca [16384 x i8], align 16
  %28 = alloca i32, align 4
  %29 = alloca i8*, align 8
  %30 = alloca %5, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca %30, align 8
  %36 = alloca %25*, align 8
  %37 = alloca %24*, align 8
  %38 = alloca %28*, align 8
  %39 = alloca i32, align 4
  %40 = alloca %28*, align 8
  store i32 %0, i32* %3, align 4
  %41 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #10
  %42 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %43 = getelementptr inbounds %24, %24* %42, i32 0, i32 0
  %44 = load %25*, %25** %43, align 8
  store %25* %44, %25** %4, align 8
  %45 = load %25*, %25** %4, align 8
  %46 = icmp ne %25* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  store i32 1, i32* %5, align 4
  br label %469

48:                                               ; preds = %1
  %49 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #10
  %50 = load %25*, %25** %4, align 8
  %51 = getelementptr inbounds %25, %25* %50, i32 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast i8* %52 to %28*
  store %28* %53, %28** %6, align 8
  %54 = load %28*, %28** %6, align 8
  %55 = getelementptr inbounds %28, %28* %54, i32 0, i32 2
  %56 = load i8*, i8** %55, align 8
  %57 = load %28*, %28** %6, align 8
  %58 = getelementptr inbounds %28, %28* %57, i32 0, i32 3
  %59 = load i32, i32* %58, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @860, i32 0, i32 0), i8* %56, i32 %59)
  %60 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #10
  store i32 1, i32* %7, align 4
  %61 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #10
  store i32 0, i32* %8, align 4
  %62 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #10
  %63 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %64 = and i32 %63, 1
  store i32 %64, i32* %9, align 4
  %65 = load i32, i32* %3, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %48
  call void @1418()
  br label %68

68:                                               ; preds = %67, %48
  %69 = call i32 @1440()
  store i32 %69, i32* %8, align 4
  %70 = load i32, i32* %8, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #10
  %74 = call i8* @sdsnew(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @861, i32 0, i32 0))
  store i8* %74, i8** %10, align 8
  %75 = load i8*, i8** %10, align 8
  call void @1447(i8* %75)
  store i32 0, i32* %7, align 4
  %76 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #10
  br label %78

77:                                               ; preds = %68
  call void (i32, i8*, ...) @1410(i32 4, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @862, i32 0, i32 0))
  br label %78

78:                                               ; preds = %77, %72
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @863, i32 0, i32 0))
  %79 = bitcast %30* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %79) #10
  %80 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %80, %30* %11)
  %81 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %81) #10
  %82 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82) #10
  store %4* null, %4** %13, align 8
  br label %83

83:                                               ; preds = %225, %78
  %84 = call %25* @listNext(%30* %11)
  store %25* %84, %25** %4, align 8
  %85 = icmp ne %25* %84, null
  br i1 %85, label %86, label %227

86:                                               ; preds = %83
  %87 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %87) #10
  %88 = load %25*, %25** %4, align 8
  %89 = getelementptr inbounds %25, %25* %88, i32 0, i32 2
  %90 = load i8*, i8** %89, align 8
  %91 = bitcast i8* %90 to %28*
  store %28* %91, %28** %14, align 8
  %92 = load %28*, %28** %14, align 8
  %93 = getelementptr inbounds %28, %28* %92, i32 0, i32 15
  %94 = load i8**, i8*** %93, align 8
  %95 = icmp ne i8** %94, null
  br i1 %95, label %96, label %158

96:                                               ; preds = %86
  %97 = load %4*, %4** %13, align 8
  %98 = icmp eq %4* %97, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = call %4* @dictCreate(%5* @824, i8* null)
  store %4* %100, %4** %13, align 8
  br label %101

101:                                              ; preds = %99, %96
  %102 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %102) #10
  %103 = call i8* @sdsempty()
  store i8* %103, i8** %15, align 8
  %104 = load i8*, i8** %15, align 8
  %105 = load %28*, %28** %14, align 8
  %106 = getelementptr inbounds %28, %28* %105, i32 0, i32 2
  %107 = load i8*, i8** %106, align 8
  %108 = load %28*, %28** %14, align 8
  %109 = getelementptr inbounds %28, %28* %108, i32 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %104, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @864, i32 0, i32 0), i8* %107, i32 %110)
  store i8* %111, i8** %15, align 8
  store i32 0, i32* %12, align 4
  br label %112

112:                                              ; preds = %150, %101
  %113 = load i32, i32* %12, align 4
  %114 = load %28*, %28** %14, align 8
  %115 = getelementptr inbounds %28, %28* %114, i32 0, i32 17
  %116 = load i32, i32* %115, align 8
  %117 = icmp slt i32 %113, %116
  br i1 %117, label %118, label %153

118:                                              ; preds = %112
  %119 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %119) #10
  %120 = load %28*, %28** %14, align 8
  %121 = getelementptr inbounds %28, %28* %120, i32 0, i32 15
  %122 = load i8**, i8*** %121, align 8
  %123 = load i32, i32* %12, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8*, i8** %122, i64 %124
  %126 = load i8*, i8** %125, align 8
  store i8* %126, i8** %16, align 8
  %127 = load %4*, %4** %13, align 8
  %128 = load i8*, i8** %16, align 8
  %129 = load %28*, %28** %14, align 8
  %130 = getelementptr inbounds %28, %28* %129, i32 0, i32 15
  %131 = load i8**, i8*** %130, align 8
  %132 = load i32, i32* %12, align 4
  %133 = add nsw i32 %132, 1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8*, i8** %131, i64 %134
  %136 = load i8*, i8** %135, align 8
  %137 = call i8* @sdsdup(i8* %136)
  %138 = call i32 @dictReplace(%4* %127, i8* %128, i8* %137)
  %139 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %139) #10
  %140 = load i32, i32* %12, align 4
  %141 = icmp sgt i32 %140, 0
  %142 = zext i1 %141 to i64
  %143 = select i1 %141, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @865, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @840, i32 0, i32 0)
  store i8* %143, i8** %17, align 8
  %144 = load i8*, i8** %15, align 8
  %145 = load i8*, i8** %17, align 8
  %146 = load i8*, i8** %16, align 8
  %147 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %144, i8* %145, i8* %146)
  store i8* %147, i8** %15, align 8
  %148 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #10
  %149 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #10
  br label %150

150:                                              ; preds = %118
  %151 = load i32, i32* %12, align 4
  %152 = add nsw i32 %151, 2
  store i32 %152, i32* %12, align 4
  br label %112

153:                                              ; preds = %112
  %154 = load i8*, i8** %15, align 8
  %155 = call i8* @sdscat(i8* %154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @847, i32 0, i32 0))
  store i8* %155, i8** %15, align 8
  %156 = load i8*, i8** %15, align 8
  call void @1447(i8* %156)
  %157 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #10
  br label %158

158:                                              ; preds = %153, %86
  %159 = load %28*, %28** %14, align 8
  %160 = getelementptr inbounds %28, %28* %159, i32 0, i32 16
  %161 = load i8**, i8*** %160, align 8
  %162 = icmp ne i8** %161, null
  br i1 %162, label %163, label %225

163:                                              ; preds = %158
  %164 = load %4*, %4** %13, align 8
  %165 = icmp eq %4* %164, null
  br i1 %165, label %166, label %168

166:                                              ; preds = %163
  %167 = call %4* @dictCreate(%5* @824, i8* null)
  store %4* %167, %4** %13, align 8
  br label %168

168:                                              ; preds = %166, %163
  %169 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %169) #10
  %170 = call i8* @sdsempty()
  store i8* %170, i8** %18, align 8
  %171 = load i8*, i8** %18, align 8
  %172 = load %28*, %28** %14, align 8
  %173 = getelementptr inbounds %28, %28* %172, i32 0, i32 2
  %174 = load i8*, i8** %173, align 8
  %175 = load %28*, %28** %14, align 8
  %176 = getelementptr inbounds %28, %28* %175, i32 0, i32 3
  %177 = load i32, i32* %176, align 8
  %178 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %171, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @866, i32 0, i32 0), i8* %174, i32 %177)
  store i8* %178, i8** %18, align 8
  store i32 0, i32* %12, align 4
  br label %179

179:                                              ; preds = %217, %168
  %180 = load i32, i32* %12, align 4
  %181 = load %28*, %28** %14, align 8
  %182 = getelementptr inbounds %28, %28* %181, i32 0, i32 18
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %180, %183
  br i1 %184, label %185, label %220

185:                                              ; preds = %179
  %186 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %186) #10
  %187 = load %28*, %28** %14, align 8
  %188 = getelementptr inbounds %28, %28* %187, i32 0, i32 16
  %189 = load i8**, i8*** %188, align 8
  %190 = load i32, i32* %12, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i8*, i8** %189, i64 %191
  %193 = load i8*, i8** %192, align 8
  store i8* %193, i8** %19, align 8
  %194 = load %4*, %4** %13, align 8
  %195 = load i8*, i8** %19, align 8
  %196 = load %28*, %28** %14, align 8
  %197 = getelementptr inbounds %28, %28* %196, i32 0, i32 16
  %198 = load i8**, i8*** %197, align 8
  %199 = load i32, i32* %12, align 4
  %200 = add nsw i32 %199, 1
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8*, i8** %198, i64 %201
  %203 = load i8*, i8** %202, align 8
  %204 = call i8* @sdsdup(i8* %203)
  %205 = call i32 @dictReplace(%4* %194, i8* %195, i8* %204)
  %206 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %206) #10
  %207 = load i32, i32* %12, align 4
  %208 = icmp sgt i32 %207, 0
  %209 = zext i1 %208 to i64
  %210 = select i1 %208, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @865, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @840, i32 0, i32 0)
  store i8* %210, i8** %20, align 8
  %211 = load i8*, i8** %18, align 8
  %212 = load i8*, i8** %20, align 8
  %213 = load i8*, i8** %19, align 8
  %214 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %211, i8* %212, i8* %213)
  store i8* %214, i8** %18, align 8
  %215 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %215) #10
  %216 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %216) #10
  br label %217

217:                                              ; preds = %185
  %218 = load i32, i32* %12, align 4
  %219 = add nsw i32 %218, 2
  store i32 %219, i32* %12, align 4
  br label %179

220:                                              ; preds = %179
  %221 = load i8*, i8** %18, align 8
  %222 = call i8* @sdscat(i8* %221, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @847, i32 0, i32 0))
  store i8* %222, i8** %18, align 8
  %223 = load i8*, i8** %18, align 8
  call void @1447(i8* %223)
  %224 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %224) #10
  br label %225

225:                                              ; preds = %220, %158
  %226 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %226) #10
  br label %83

227:                                              ; preds = %83
  %228 = load %4*, %4** %13, align 8
  %229 = icmp ne %4* %228, null
  br i1 %229, label %230, label %294

230:                                              ; preds = %227
  store i32 0, i32* %7, align 4
  %231 = bitcast %33** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %231) #10
  %232 = load %4*, %4** %13, align 8
  %233 = call %33* @dictGetIterator(%4* %232)
  store %33* %233, %33** %21, align 8
  %234 = bitcast %7** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %234) #10
  %235 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %235) #10
  %236 = call i8* @sdsnew(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @867, i32 0, i32 0))
  store i8* %236, i8** %23, align 8
  store i32 0, i32* %12, align 4
  br label %237

237:                                              ; preds = %241, %230
  %238 = load %33*, %33** %21, align 8
  %239 = call %7* @dictNext(%33* %238)
  store %7* %239, %7** %22, align 8
  %240 = icmp ne %7* %239, null
  br i1 %240, label %241, label %258

241:                                              ; preds = %237
  %242 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %242) #10
  %243 = load %7*, %7** %22, align 8
  %244 = getelementptr inbounds %7, %7* %243, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  store i8* %245, i8** %24, align 8
  %246 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %246) #10
  %247 = load i32, i32* %12, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %12, align 4
  %249 = icmp sgt i32 %247, 0
  %250 = zext i1 %249 to i64
  %251 = select i1 %249, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @865, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @840, i32 0, i32 0)
  store i8* %251, i8** %25, align 8
  %252 = load i8*, i8** %23, align 8
  %253 = load i8*, i8** %25, align 8
  %254 = load i8*, i8** %24, align 8
  %255 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %252, i8* %253, i8* %254)
  store i8* %255, i8** %23, align 8
  %256 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %256) #10
  %257 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #10
  br label %237

258:                                              ; preds = %237
  %259 = load i8*, i8** %23, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @868, i32 0, i32 0), i8* %259)
  %260 = load i8*, i8** %23, align 8
  call void @sdsfree(i8* %260)
  %261 = load i32, i32* %9, align 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %288

263:                                              ; preds = %258
  %264 = load %33*, %33** %21, align 8
  call void @dictReleaseIterator(%33* %264)
  %265 = load %4*, %4** %13, align 8
  %266 = call %33* @dictGetIterator(%4* %265)
  store %33* %266, %33** %21, align 8
  br label %267

267:                                              ; preds = %286, %263
  %268 = load %33*, %33** %21, align 8
  %269 = call %7* @dictNext(%33* %268)
  store %7* %269, %7** %22, align 8
  %270 = icmp ne %7* %269, null
  br i1 %270, label %271, label %287

271:                                              ; preds = %267
  %272 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %272) #10
  %273 = load %7*, %7** %22, align 8
  %274 = getelementptr inbounds %7, %7* %273, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8
  store i8* %275, i8** %26, align 8
  %276 = load i8*, i8** %26, align 8
  %277 = call i32 @atoi(i8* %276) #12
  %278 = call i32 @1448(i32 %277)
  store i32 %278, i32* %7, align 4
  %279 = load i32, i32* %7, align 4
  %280 = icmp ne i32 %279, 0
  br i1 %280, label %282, label %281

281:                                              ; preds = %271
  store i32 13, i32* %5, align 4
  br label %283

282:                                              ; preds = %271
  store i32 0, i32* %5, align 4
  br label %283

283:                                              ; preds = %282, %281
  %284 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %284) #10
  %285 = load i32, i32* %5, align 4
  switch i32 %285, label %472 [
    i32 0, label %286
    i32 13, label %287
  ]

286:                                              ; preds = %283
  br label %267

287:                                              ; preds = %283, %267
  br label %288

288:                                              ; preds = %287, %258
  %289 = load %33*, %33** %21, align 8
  call void @dictReleaseIterator(%33* %289)
  %290 = load %4*, %4** %13, align 8
  call void @dictRelease(%4* %290)
  %291 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %291) #10
  %292 = bitcast %7** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %292) #10
  %293 = bitcast %33** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %293) #10
  br label %294

294:                                              ; preds = %288, %227
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @869, i32 0, i32 0))
  %295 = bitcast [16384 x i8]* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* %295) #10
  %296 = getelementptr inbounds [16384 x i8], [16384 x i8]* %27, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %296, i8 0, i64 16384, i1 false)
  %297 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %297) #10
  %298 = getelementptr inbounds [16384 x i8], [16384 x i8]* %27, i32 0, i32 0
  %299 = call i32 @1449(i8* %298)
  store i32 %299, i32* %28, align 4
  %300 = load i32, i32* %28, align 4
  %301 = icmp eq i32 %300, 16384
  br i1 %301, label %302, label %303

302:                                              ; preds = %294
  call void (i32, i8*, ...) @1410(i32 4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @870, i32 0, i32 0), i32 16384)
  br label %328

303:                                              ; preds = %294
  %304 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %304) #10
  %305 = call i8* @sdsempty()
  store i8* %305, i8** %29, align 8
  %306 = load i8*, i8** %29, align 8
  %307 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %306, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @871, i32 0, i32 0), i32 16384)
  store i8* %307, i8** %29, align 8
  %308 = load i8*, i8** %29, align 8
  call void @1447(i8* %308)
  store i32 0, i32* %7, align 4
  %309 = load i32, i32* %9, align 4
  %310 = icmp ne i32 %309, 0
  br i1 %310, label %311, label %326

311:                                              ; preds = %303
  %312 = bitcast %5* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* %312) #10
  %313 = bitcast %5* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %313, i8* align 8 bitcast (%5* @824 to i8*), i64 48, i1 false)
  %314 = getelementptr inbounds %5, %5* %30, i32 0, i32 4
  store void (i8*, i8*)* @1435, void (i8*, i8*)** %314, align 8
  %315 = getelementptr inbounds %5, %5* %30, i32 0, i32 5
  store void (i8*, i8*)* @1445, void (i8*, i8*)** %315, align 8
  %316 = call %4* @dictCreate(%5* %30, i8* null)
  store %4* %316, %4** @clusterManagerUncoveredSlots, align 8
  %317 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %317) #10
  %318 = getelementptr inbounds [16384 x i8], [16384 x i8]* %27, i32 0, i32 0
  %319 = call i32 @1450(i8* %318)
  store i32 %319, i32* %31, align 4
  %320 = load i32, i32* %31, align 4
  %321 = icmp sgt i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %311
  store i32 1, i32* %7, align 4
  br label %323

323:                                              ; preds = %322, %311
  %324 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %324) #10
  %325 = bitcast %5* %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 48, i8* %325) #10
  br label %326

326:                                              ; preds = %323, %303
  %327 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %327) #10
  br label %328

328:                                              ; preds = %326, %302
  %329 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %329) #10
  %330 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %331 = and i32 %330, 512
  store i32 %331, i32* %32, align 4
  %332 = load i32, i32* %32, align 4
  %333 = icmp ne i32 %332, 0
  br i1 %333, label %334, label %457

334:                                              ; preds = %328
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @872, i32 0, i32 0))
  %335 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %335) #10
  store i32 0, i32* %33, align 4
  %336 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %336) #10
  store i32 0, i32* %34, align 4
  br label %337

337:                                              ; preds = %447, %334
  %338 = load i32, i32* %33, align 4
  %339 = icmp slt i32 %338, 16384
  br i1 %339, label %340, label %450

340:                                              ; preds = %337
  %341 = bitcast %30* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %341) #10
  %342 = bitcast %25** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %342) #10
  %343 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %343, %30* %35)
  %344 = bitcast %24** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %344) #10
  %345 = call %24* @listCreate()
  store %24* %345, %24** %37, align 8
  br label %346

346:                                              ; preds = %392, %389, %340
  %347 = call %25* @listNext(%30* %35)
  store %25* %347, %25** %36, align 8
  %348 = icmp ne %25* %347, null
  br i1 %348, label %349, label %393

349:                                              ; preds = %346
  %350 = bitcast %28** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %350) #10
  %351 = load %25*, %25** %36, align 8
  %352 = getelementptr inbounds %25, %25* %351, i32 0, i32 2
  %353 = load i8*, i8** %352, align 8
  %354 = bitcast i8* %353 to %28*
  store %28* %354, %28** %38, align 8
  %355 = load %28*, %28** %38, align 8
  %356 = getelementptr inbounds %28, %28* %355, i32 0, i32 7
  %357 = load i32, i32* %356, align 8
  %358 = and i32 %357, 2
  %359 = icmp ne i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %349
  store i32 17, i32* %5, align 4
  br label %389

361:                                              ; preds = %349
  %362 = load %28*, %28** %38, align 8
  %363 = getelementptr inbounds %28, %28* %362, i32 0, i32 11
  %364 = load i32, i32* %33, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds [16384 x i8], [16384 x i8]* %363, i64 0, i64 %365
  %367 = load i8, i8* %366, align 1
  %368 = icmp ne i8 %367, 0
  br i1 %368, label %369, label %374

369:                                              ; preds = %361
  %370 = load %24*, %24** %37, align 8
  %371 = load %28*, %28** %38, align 8
  %372 = bitcast %28* %371 to i8*
  %373 = call %24* @listAddNodeTail(%24* %370, i8* %372)
  br label %388

374:                                              ; preds = %361
  %375 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %375) #10
  %376 = load %28*, %28** %38, align 8
  %377 = load i32, i32* %33, align 4
  %378 = call i32 @1451(%28* %376, i32 %377)
  store i32 %378, i32* %39, align 4
  %379 = load i32, i32* %39, align 4
  %380 = icmp sgt i32 %379, 0
  br i1 %380, label %381, label %386

381:                                              ; preds = %374
  %382 = load %24*, %24** %37, align 8
  %383 = load %28*, %28** %38, align 8
  %384 = bitcast %28* %383 to i8*
  %385 = call %24* @listAddNodeTail(%24* %382, i8* %384)
  br label %386

386:                                              ; preds = %381, %374
  %387 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %387) #10
  br label %388

388:                                              ; preds = %386, %369
  store i32 0, i32* %5, align 4
  br label %389

389:                                              ; preds = %388, %360
  %390 = bitcast %28** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %390) #10
  %391 = load i32, i32* %5, align 4
  switch i32 %391, label %472 [
    i32 0, label %392
    i32 17, label %346
  ]

392:                                              ; preds = %389
  br label %346

393:                                              ; preds = %346
  %394 = load %24*, %24** %37, align 8
  %395 = getelementptr inbounds %24, %24* %394, i32 0, i32 5
  %396 = load i64, i64* %395, align 8
  %397 = icmp ugt i64 %396, 1
  br i1 %397, label %398, label %439

398:                                              ; preds = %393
  store i32 0, i32* %7, align 4
  %399 = load i32, i32* %33, align 4
  %400 = load %24*, %24** %37, align 8
  %401 = getelementptr inbounds %24, %24* %400, i32 0, i32 5
  %402 = load i64, i64* %401, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @873, i32 0, i32 0), i32 %399, i64 %402)
  %403 = load %24*, %24** %37, align 8
  call void @listRewind(%24* %403, %30* %35)
  br label %404

404:                                              ; preds = %407, %398
  %405 = call %25* @listNext(%30* %35)
  store %25* %405, %25** %36, align 8
  %406 = icmp ne %25* %405, null
  br i1 %406, label %407, label %420

407:                                              ; preds = %404
  %408 = bitcast %28** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %408) #10
  %409 = load %25*, %25** %36, align 8
  %410 = getelementptr inbounds %25, %25* %409, i32 0, i32 2
  %411 = load i8*, i8** %410, align 8
  %412 = bitcast i8* %411 to %28*
  store %28* %412, %28** %40, align 8
  %413 = load %28*, %28** %40, align 8
  %414 = getelementptr inbounds %28, %28* %413, i32 0, i32 2
  %415 = load i8*, i8** %414, align 8
  %416 = load %28*, %28** %40, align 8
  %417 = getelementptr inbounds %28, %28* %416, i32 0, i32 3
  %418 = load i32, i32* %417, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @874, i32 0, i32 0), i8* %415, i32 %418)
  %419 = bitcast %28** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %419) #10
  br label %404

420:                                              ; preds = %404
  %421 = load i32, i32* %34, align 4
  %422 = add nsw i32 %421, 1
  store i32 %422, i32* %34, align 4
  %423 = load i32, i32* %9, align 4
  %424 = icmp ne i32 %423, 0
  br i1 %424, label %425, label %438

425:                                              ; preds = %420
  %426 = load i32, i32* %33, align 4
  %427 = load %24*, %24** %37, align 8
  %428 = call i32 @1452(i32 %426, %24* %427)
  store i32 %428, i32* %7, align 4
  %429 = load i32, i32* %7, align 4
  %430 = icmp ne i32 %429, 0
  br i1 %430, label %434, label %431

431:                                              ; preds = %425
  %432 = load i32, i32* %33, align 4
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @875, i32 0, i32 0), i32 %432)
  %433 = load %24*, %24** %37, align 8
  call void @listRelease(%24* %433)
  store i32 14, i32* %5, align 4
  br label %441

434:                                              ; preds = %425
  %435 = load i32, i32* %34, align 4
  %436 = add nsw i32 %435, -1
  store i32 %436, i32* %34, align 4
  br label %437

437:                                              ; preds = %434
  br label %438

438:                                              ; preds = %437, %420
  br label %439

439:                                              ; preds = %438, %393
  %440 = load %24*, %24** %37, align 8
  call void @listRelease(%24* %440)
  store i32 0, i32* %5, align 4
  br label %441

441:                                              ; preds = %439, %431
  %442 = bitcast %24** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %442) #10
  %443 = bitcast %25** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %443) #10
  %444 = bitcast %30* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %444) #10
  %445 = load i32, i32* %5, align 4
  switch i32 %445, label %472 [
    i32 0, label %446
    i32 14, label %450
  ]

446:                                              ; preds = %441
  br label %447

447:                                              ; preds = %446
  %448 = load i32, i32* %33, align 4
  %449 = add nsw i32 %448, 1
  store i32 %449, i32* %33, align 4
  br label %337

450:                                              ; preds = %441, %337
  %451 = load i32, i32* %34, align 4
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %453, label %454

453:                                              ; preds = %450
  call void (i32, i8*, ...) @1410(i32 4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @876, i32 0, i32 0))
  br label %454

454:                                              ; preds = %453, %450
  %455 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %455) #10
  %456 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %456) #10
  br label %457

457:                                              ; preds = %454, %328
  %458 = load i32, i32* %7, align 4
  store i32 %458, i32* %2, align 4
  store i32 1, i32* %5, align 4
  %459 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %459) #10
  %460 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %460) #10
  %461 = bitcast [16384 x i8]* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* %461) #10
  %462 = bitcast %4** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %462) #10
  %463 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %463) #10
  %464 = bitcast %30* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %464) #10
  %465 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %465) #10
  %466 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %466) #10
  %467 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %467) #10
  %468 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %468) #10
  br label %469

469:                                              ; preds = %457, %47
  %470 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %470) #10
  %471 = load i32, i32* %2, align 4
  ret i32 %471

472:                                              ; preds = %441, %389, %283
  unreachable
}

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #4

declare dso_local i8* @zmalloc(i64) #2

; Function Attrs: nounwind uwtable
define internal void @1424(%28* %0) #0 {
  %2 = alloca %28*, align 8
  store %28* %0, %28** %2, align 8
  %3 = load %28*, %28** %2, align 8
  %4 = getelementptr inbounds %28, %28* %3, i32 0, i32 11
  %5 = getelementptr inbounds [16384 x i8], [16384 x i8]* %4, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 16384, i1 false)
  %6 = load %28*, %28** %2, align 8
  %7 = getelementptr inbounds %28, %28* %6, i32 0, i32 12
  store i32 0, i32* %7, align 4
  ret void
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

declare dso_local void @redisFree(%10*) #2

declare dso_local %10* @redisConnect(i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @1425(%10* %0, i8** %1) #0 {
  %3 = alloca %10*, align 8
  %4 = alloca i8**, align 8
  store %10* %0, %10** %3, align 8
  store i8** %1, i8*** %4, align 8
  %5 = load %10*, %10** %3, align 8
  %6 = load i8**, i8*** %4, align 8
  ret i32 0
}

declare dso_local i32 @anetKeepAlive(i8*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @1426(%28* %0, %31* %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %28*, align 8
  %6 = alloca %31*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %28* %0, %28** %5, align 8
  store %31* %1, %31** %6, align 8
  store i8** %2, i8*** %7, align 8
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  store i32 0, i32* %8, align 4
  %11 = load %31*, %31** %6, align 8
  %12 = icmp ne %31* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %3
  %14 = load %31*, %31** %6, align 8
  %15 = getelementptr inbounds %31, %31* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 6
  %18 = zext i1 %17 to i32
  store i32 %18, i32* %8, align 4
  br i1 %17, label %19, label %51

19:                                               ; preds = %13, %3
  %20 = load i32, i32* %8, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %50

22:                                               ; preds = %19
  %23 = load i8**, i8*** %7, align 8
  %24 = icmp ne i8** %23, null
  br i1 %24, label %25, label %39

25:                                               ; preds = %22
  %26 = load %31*, %31** %6, align 8
  %27 = getelementptr inbounds %31, %31* %26, i32 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  %30 = mul i64 %29, 1
  %31 = call i8* @zmalloc(i64 %30)
  %32 = load i8**, i8*** %7, align 8
  store i8* %31, i8** %32, align 8
  %33 = load i8**, i8*** %7, align 8
  %34 = load i8*, i8** %33, align 8
  %35 = load %31*, %31** %6, align 8
  %36 = getelementptr inbounds %31, %31* %35, i32 0, i32 4
  %37 = load i8*, i8** %36, align 8
  %38 = call i8* @strcpy(i8* %34, i8* %37) #10
  br label %49

39:                                               ; preds = %22
  %40 = load %28*, %28** %5, align 8
  %41 = getelementptr inbounds %28, %28* %40, i32 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = load %28*, %28** %5, align 8
  %44 = getelementptr inbounds %28, %28* %43, i32 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = load %31*, %31** %6, align 8
  %47 = getelementptr inbounds %31, %31* %46, i32 0, i32 4
  %48 = load i8*, i8** %47, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %42, i32 %45, i8* %48)
  br label %49

49:                                               ; preds = %39, %25
  br label %50

50:                                               ; preds = %49, %19
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %52

51:                                               ; preds = %13
  store i32 1, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %52

52:                                               ; preds = %51, %50
  %53 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %53) #10
  %54 = load i32, i32* %4, align 4
  ret i32 %54
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #4

declare dso_local void @listRelease(%24*) #2

; Function Attrs: nounwind uwtable
define internal void @1427(%24* %0) #0 {
  %2 = alloca %24*, align 8
  %3 = alloca %30, align 8
  %4 = alloca %25*, align 8
  %5 = alloca i8*, align 8
  store %24* %0, %24** %2, align 8
  %6 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %6) #10
  %7 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = load %24*, %24** %2, align 8
  call void @listRewind(%24* %8, %30* %3)
  br label %9

9:                                                ; preds = %12, %1
  %10 = call %25* @listNext(%30* %3)
  store %25* %10, %25** %4, align 8
  %11 = icmp ne %25* %10, null
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = load %25*, %25** %4, align 8
  %15 = getelementptr inbounds %25, %25* %14, i32 0, i32 2
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %5, align 8
  %17 = load i8*, i8** %5, align 8
  call void @sdsfree(i8* %17)
  %18 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #10
  br label %9

19:                                               ; preds = %9
  %20 = load %24*, %24** %2, align 8
  call void @listRelease(%24* %20)
  %21 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #10
  %22 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %22) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal %31* @1428(%28* %0, i8** %1) #0 {
  %3 = alloca %31*, align 8
  %4 = alloca %28*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca %31*, align 8
  %7 = alloca i32, align 4
  store %28* %0, %28** %4, align 8
  store i8** %1, i8*** %5, align 8
  %8 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = load %28*, %28** %4, align 8
  %10 = getelementptr inbounds %28, %28* %9, i32 0, i32 0
  %11 = load %10*, %10** %10, align 8
  %12 = call i8* (%10*, i8*, ...) @redisCommand(%10* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @293, i32 0, i32 0))
  %13 = bitcast i8* %12 to %31*
  store %31* %13, %31** %6, align 8
  %14 = load i8**, i8*** %5, align 8
  %15 = icmp ne i8** %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = load i8**, i8*** %5, align 8
  store i8* null, i8** %17, align 8
  br label %18

18:                                               ; preds = %16, %2
  %19 = load %31*, %31** %6, align 8
  %20 = icmp eq %31* %19, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  store %31* null, %31** %3, align 8
  store i32 1, i32* %7, align 4
  br label %49

22:                                               ; preds = %18
  %23 = load %31*, %31** %6, align 8
  %24 = getelementptr inbounds %31, %31* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 6
  br i1 %26, label %27, label %47

27:                                               ; preds = %22
  %28 = load i8**, i8*** %5, align 8
  %29 = icmp ne i8** %28, null
  br i1 %29, label %30, label %44

30:                                               ; preds = %27
  %31 = load %31*, %31** %6, align 8
  %32 = getelementptr inbounds %31, %31* %31, i32 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 1
  %35 = mul i64 %34, 1
  %36 = call i8* @zmalloc(i64 %35)
  %37 = load i8**, i8*** %5, align 8
  store i8* %36, i8** %37, align 8
  %38 = load i8**, i8*** %5, align 8
  %39 = load i8*, i8** %38, align 8
  %40 = load %31*, %31** %6, align 8
  %41 = getelementptr inbounds %31, %31* %40, i32 0, i32 4
  %42 = load i8*, i8** %41, align 8
  %43 = call i8* @strcpy(i8* %39, i8* %42) #10
  br label %44

44:                                               ; preds = %30, %27
  %45 = load %31*, %31** %6, align 8
  %46 = bitcast %31* %45 to i8*
  call void @freeReplyObject(i8* %46)
  store %31* null, %31** %3, align 8
  store i32 1, i32* %7, align 4
  br label %49

47:                                               ; preds = %22
  %48 = load %31*, %31** %6, align 8
  store %31* %48, %31** %3, align 8
  store i32 1, i32* %7, align 4
  br label %49

49:                                               ; preds = %47, %44, %21
  %50 = bitcast %31** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #10
  %51 = load %31*, %31** %3, align 8
  ret %31* %51
}

; Function Attrs: nounwind uwtable
define internal i64 @1429(i8* %0, i8* %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %9 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #10
  %10 = load i8*, i8** %4, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = call i8* @1430(i8* %10, i8* %11)
  store i8* %12, i8** %6, align 8
  %13 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = load i8*, i8** %6, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  store i64 -9223372036854775808, i64* %3, align 8
  store i32 1, i32* %8, align 4
  br label %22

17:                                               ; preds = %2
  %18 = load i8*, i8** %6, align 8
  %19 = call i64 @strtol(i8* %18, i8** null, i32 10) #10
  store i64 %19, i64* %7, align 8
  %20 = load i8*, i8** %6, align 8
  call void @zfree(i8* %20)
  %21 = load i64, i64* %7, align 8
  store i64 %21, i64* %3, align 8
  store i32 1, i32* %8, align 4
  br label %22

22:                                               ; preds = %17, %16
  %23 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  %24 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #10
  %25 = load i64, i64* %3, align 8
  ret i64 %25
}

; Function Attrs: nounwind uwtable
define internal i8* @1430(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %11 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = load i8*, i8** %4, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = call i8* @strstr(i8* %12, i8* %13) #12
  store i8* %14, i8** %6, align 8
  %15 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %16 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #10
  %17 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10
  %18 = load i8*, i8** %6, align 8
  %19 = icmp ne i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  store i32 1, i32* %10, align 4
  br label %63

21:                                               ; preds = %2
  %22 = load i8*, i8** %5, align 8
  %23 = call i64 @strlen(i8* %22) #12
  %24 = add i64 %23, 1
  %25 = load i8*, i8** %6, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %24
  store i8* %26, i8** %6, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = call i8* @strchr(i8* %27, i32 13) #12
  store i8* %28, i8** %7, align 8
  %29 = load i8*, i8** %6, align 8
  %30 = call i8* @strchr(i8* %29, i32 44) #12
  store i8* %30, i8** %8, align 8
  %31 = load i8*, i8** %8, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %33, label %39

33:                                               ; preds = %21
  %34 = load i8*, i8** %8, align 8
  %35 = load i8*, i8** %7, align 8
  %36 = icmp ult i8* %34, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = load i8*, i8** %8, align 8
  store i8* %38, i8** %7, align 8
  br label %39

39:                                               ; preds = %37, %33, %21
  %40 = load i8*, i8** %7, align 8
  %41 = load i8*, i8** %6, align 8
  %42 = ptrtoint i8* %40 to i64
  %43 = ptrtoint i8* %41 to i64
  %44 = sub i64 %42, %43
  %45 = mul i64 1, %44
  %46 = add i64 %45, 1
  %47 = call i8* @zmalloc(i64 %46)
  store i8* %47, i8** %9, align 8
  %48 = load i8*, i8** %9, align 8
  %49 = load i8*, i8** %6, align 8
  %50 = load i8*, i8** %7, align 8
  %51 = load i8*, i8** %6, align 8
  %52 = ptrtoint i8* %50 to i64
  %53 = ptrtoint i8* %51 to i64
  %54 = sub i64 %52, %53
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %49, i64 %54, i1 false)
  %55 = load i8*, i8** %9, align 8
  %56 = load i8*, i8** %7, align 8
  %57 = load i8*, i8** %6, align 8
  %58 = ptrtoint i8* %56 to i64
  %59 = ptrtoint i8* %57 to i64
  %60 = sub i64 %58, %59
  %61 = getelementptr inbounds i8, i8* %55, i64 %60
  store i8 0, i8* %61, align 1
  %62 = load i8*, i8** %9, align 8
  store i8* %62, i8** %3, align 8
  store i32 1, i32* %10, align 4
  br label %63

63:                                               ; preds = %39, %20
  %64 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #10
  %65 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #10
  %66 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %66) #10
  %67 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %67) #10
  %68 = load i8*, i8** %3, align 8
  ret i8* %68
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #5

declare dso_local i8* @zrealloc(i8*, i64) #2

; Function Attrs: inlinehint nounwind readonly uwtable
define available_externally dso_local i64 @atoll(i8* nonnull %0) #8 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i64 @strtoll(i8* %3, i8** null, i32 10) #10
  ret i64 %4
}

; Function Attrs: nounwind
declare dso_local i64 @strtoll(i8*, i8**, i32) #4

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: inlinehint nounwind uwtable
define available_externally dso_local i32 @vprintf(i8* noalias %0, %34* %1) #11 {
  %3 = alloca i8*, align 8
  %4 = alloca %34*, align 8
  store i8* %0, i8** %3, align 8
  store %34* %1, %34** %4, align 8
  %5 = load %1*, %1** @stdout, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = load %34*, %34** %4, align 8
  %8 = call i32 @vfprintf(%1* %5, i8* %6, %34* %7)
  ret i32 %8
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

declare dso_local i32 @vfprintf(%1*, i8*, %34*) #2

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #7

; Function Attrs: nounwind uwtable
define internal i32 @1431(%29* %0, i32 %1, %28*** %2, i32* %3) #0 {
  %5 = alloca %29*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %28***, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %28**, align 8
  %14 = alloca %29*, align 8
  %15 = alloca %4*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca %28*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca %7*, align 8
  %22 = alloca %33*, align 8
  %23 = alloca %7*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i32, align 4
  %27 = alloca %30, align 8
  %28 = alloca %25*, align 8
  %29 = alloca %28*, align 8
  store %29* %0, %29** %5, align 8
  store i32 %1, i32* %6, align 4
  store %28*** %2, %28**** %7, align 8
  store i32* %3, i32** %8, align 8
  %30 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #10
  store i32 0, i32* %9, align 4
  %31 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #10
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #10
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #10
  %34 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %35 = getelementptr inbounds %24, %24* %34, i32 0, i32 5
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %12, align 4
  %38 = bitcast %28*** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #10
  store %28** null, %28*** %13, align 8
  %39 = load %28***, %28**** %7, align 8
  %40 = icmp ne %28*** %39, null
  br i1 %40, label %41, label %50

41:                                               ; preds = %4
  %42 = load i32, i32* %12, align 4
  %43 = sext i32 %42 to i64
  %44 = mul i64 %43, 8
  %45 = call i8* @zcalloc(i64 %44)
  %46 = bitcast i8* %45 to %28**
  %47 = load %28***, %28**** %7, align 8
  store %28** %46, %28*** %47, align 8
  %48 = load %28***, %28**** %7, align 8
  %49 = load %28**, %28*** %48, align 8
  store %28** %49, %28*** %13, align 8
  br label %50

50:                                               ; preds = %41, %4
  store i32 0, i32* %10, align 4
  br label %51

51:                                               ; preds = %265, %50
  %52 = load i32, i32* %10, align 4
  %53 = load i32, i32* %6, align 4
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %55, label %268

55:                                               ; preds = %51
  %56 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #10
  %57 = load %29*, %29** %5, align 8
  %58 = load i32, i32* %10, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %29, %29* %57, i64 %59
  store %29* %60, %29** %14, align 8
  %61 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #10
  %62 = call %4* @dictCreate(%5* @824, i8* null)
  store %4* %62, %4** %15, align 8
  %63 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #10
  store i8* null, i8** %16, align 8
  store i32 0, i32* %11, align 4
  br label %64

64:                                               ; preds = %150, %55
  %65 = load i32, i32* %11, align 4
  %66 = load %29*, %29** %14, align 8
  %67 = getelementptr inbounds %29, %29* %66, i32 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = icmp slt i32 %65, %68
  br i1 %69, label %70, label %153

70:                                               ; preds = %64
  %71 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #10
  %72 = load %29*, %29** %14, align 8
  %73 = getelementptr inbounds %29, %29* %72, i32 0, i32 0
  %74 = load %28**, %28*** %73, align 8
  %75 = load i32, i32* %11, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %28*, %28** %74, i64 %76
  %78 = load %28*, %28** %77, align 8
  store %28* %78, %28** %17, align 8
  %79 = load %28*, %28** %17, align 8
  %80 = icmp eq %28* %79, null
  br i1 %80, label %81, label %82

81:                                               ; preds = %70
  store i32 7, i32* %18, align 4
  br label %146

82:                                               ; preds = %70
  %83 = load i8*, i8** %16, align 8
  %84 = icmp ne i8* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = load %28*, %28** %17, align 8
  %87 = getelementptr inbounds %28, %28* %86, i32 0, i32 2
  %88 = load i8*, i8** %87, align 8
  store i8* %88, i8** %16, align 8
  br label %89

89:                                               ; preds = %85, %82
  %90 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %90) #10
  %91 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %91) #10
  %92 = load %28*, %28** %17, align 8
  %93 = getelementptr inbounds %28, %28* %92, i32 0, i32 9
  %94 = load i8*, i8** %93, align 8
  %95 = icmp ne i8* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %89
  %97 = load %28*, %28** %17, align 8
  %98 = getelementptr inbounds %28, %28* %97, i32 0, i32 1
  %99 = load i8*, i8** %98, align 8
  br label %104

100:                                              ; preds = %89
  %101 = load %28*, %28** %17, align 8
  %102 = getelementptr inbounds %28, %28* %101, i32 0, i32 9
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %100, %96
  %105 = phi i8* [ %99, %96 ], [ %103, %100 ]
  store i8* %105, i8** %20, align 8
  %106 = load i8*, i8** %20, align 8
  %107 = icmp ne i8* %106, null
  br i1 %107, label %108, label %109

108:                                              ; preds = %104
  br label %111

109:                                              ; preds = %104
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @825, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 2763, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @826, i32 0, i32 0)) #14
  unreachable

110:                                              ; No predecessors!
  br label %111

111:                                              ; preds = %110, %108
  %112 = bitcast %7** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %112) #10
  %113 = load %4*, %4** %15, align 8
  %114 = load i8*, i8** %20, align 8
  %115 = call %7* @dictFind(%4* %113, i8* %114)
  store %7* %115, %7** %21, align 8
  %116 = load %7*, %7** %21, align 8
  %117 = icmp ne %7* %116, null
  br i1 %117, label %118, label %124

118:                                              ; preds = %111
  %119 = load %7*, %7** %21, align 8
  %120 = getelementptr inbounds %7, %7* %119, i32 0, i32 1
  %121 = bitcast %8* %120 to i8**
  %122 = load i8*, i8** %121, align 8
  %123 = call i8* @sdsdup(i8* %122)
  store i8* %123, i8** %19, align 8
  br label %126

124:                                              ; preds = %111
  %125 = call i8* @sdsempty()
  store i8* %125, i8** %19, align 8
  br label %126

126:                                              ; preds = %124, %118
  %127 = load %28*, %28** %17, align 8
  %128 = getelementptr inbounds %28, %28* %127, i32 0, i32 9
  %129 = load i8*, i8** %128, align 8
  %130 = icmp ne i8* %129, null
  br i1 %130, label %135, label %131

131:                                              ; preds = %126
  %132 = load i8*, i8** %19, align 8
  %133 = load i8*, i8** %19, align 8
  %134 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %132, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @827, i32 0, i32 0), i8* %133)
  store i8* %134, i8** %19, align 8
  br label %138

135:                                              ; preds = %126
  %136 = load i8*, i8** %19, align 8
  %137 = call i8* @sdscat(i8* %136, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @828, i32 0, i32 0))
  store i8* %137, i8** %19, align 8
  br label %138

138:                                              ; preds = %135, %131
  %139 = load %4*, %4** %15, align 8
  %140 = load i8*, i8** %20, align 8
  %141 = load i8*, i8** %19, align 8
  %142 = call i32 @dictReplace(%4* %139, i8* %140, i8* %141)
  %143 = bitcast %7** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #10
  %144 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %144) #10
  %145 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #10
  store i32 0, i32* %18, align 4
  br label %146

146:                                              ; preds = %138, %81
  %147 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %147) #10
  %148 = load i32, i32* %18, align 4
  switch i32 %148, label %275 [
    i32 0, label %149
    i32 7, label %150
  ]

149:                                              ; preds = %146
  br label %150

150:                                              ; preds = %149, %146
  %151 = load i32, i32* %11, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %11, align 4
  br label %64

153:                                              ; preds = %64
  %154 = bitcast %33** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %154) #10
  %155 = load %4*, %4** %15, align 8
  %156 = call %33* @dictGetIterator(%4* %155)
  store %33* %156, %33** %22, align 8
  %157 = bitcast %7** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %157) #10
  br label %158

158:                                              ; preds = %256, %251, %153
  %159 = load %33*, %33** %22, align 8
  %160 = call %7* @dictNext(%33* %159)
  store %7* %160, %7** %23, align 8
  %161 = icmp ne %7* %160, null
  br i1 %161, label %162, label %257

162:                                              ; preds = %158
  %163 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163) #10
  %164 = load %7*, %7** %23, align 8
  %165 = getelementptr inbounds %7, %7* %164, i32 0, i32 1
  %166 = bitcast %8* %165 to i8**
  %167 = load i8*, i8** %166, align 8
  store i8* %167, i8** %24, align 8
  %168 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %168) #10
  %169 = load %7*, %7** %23, align 8
  %170 = getelementptr inbounds %7, %7* %169, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  store i8* %171, i8** %25, align 8
  %172 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %172) #10
  %173 = load i8*, i8** %24, align 8
  %174 = call i64 @1432(i8* %173)
  %175 = trunc i64 %174 to i32
  store i32 %175, i32* %26, align 4
  %176 = load i32, i32* %26, align 4
  %177 = icmp slt i32 %176, 2
  br i1 %177, label %178, label %179

178:                                              ; preds = %162
  store i32 8, i32* %18, align 4
  br label %251

179:                                              ; preds = %162
  %180 = load i8*, i8** %24, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 0
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %183, 109
  br i1 %184, label %185, label %191

185:                                              ; preds = %179
  %186 = load i32, i32* %26, align 4
  %187 = sub nsw i32 %186, 1
  %188 = mul nsw i32 10000, %187
  %189 = load i32, i32* %9, align 4
  %190 = add nsw i32 %189, %188
  store i32 %190, i32* %9, align 4
  br label %196

191:                                              ; preds = %179
  %192 = load i32, i32* %26, align 4
  %193 = mul nsw i32 1, %192
  %194 = load i32, i32* %9, align 4
  %195 = add nsw i32 %194, %193
  store i32 %195, i32* %9, align 4
  br label %196

196:                                              ; preds = %191, %185
  %197 = load %28***, %28**** %7, align 8
  %198 = icmp eq %28*** %197, null
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  store i32 8, i32* %18, align 4
  br label %251

200:                                              ; preds = %196
  %201 = bitcast %30* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %201) #10
  %202 = bitcast %25** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #10
  %203 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %203, %30* %27)
  br label %204

204:                                              ; preds = %247, %244, %200
  %205 = call %25* @listNext(%30* %27)
  store %25* %205, %25** %28, align 8
  %206 = icmp ne %25* %205, null
  br i1 %206, label %207, label %248

207:                                              ; preds = %204
  %208 = bitcast %28** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %208) #10
  %209 = load %25*, %25** %28, align 8
  %210 = getelementptr inbounds %25, %25* %209, i32 0, i32 2
  %211 = load i8*, i8** %210, align 8
  %212 = bitcast i8* %211 to %28*
  store %28* %212, %28** %29, align 8
  %213 = load %28*, %28** %29, align 8
  %214 = getelementptr inbounds %28, %28* %213, i32 0, i32 9
  %215 = load i8*, i8** %214, align 8
  %216 = icmp eq i8* %215, null
  br i1 %216, label %217, label %218

217:                                              ; preds = %207
  store i32 10, i32* %18, align 4
  br label %244

218:                                              ; preds = %207
  %219 = load %28*, %28** %29, align 8
  %220 = getelementptr inbounds %28, %28* %219, i32 0, i32 9
  %221 = load i8*, i8** %220, align 8
  %222 = load i8*, i8** %25, align 8
  %223 = call i32 @strcmp(i8* %221, i8* %222) #12
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %243, label %225

225:                                              ; preds = %218
  %226 = load %28*, %28** %29, align 8
  %227 = getelementptr inbounds %28, %28* %226, i32 0, i32 2
  %228 = load i8*, i8** %227, align 8
  %229 = load i8*, i8** %16, align 8
  %230 = call i32 @strcmp(i8* %228, i8* %229) #12
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %243, label %232

232:                                              ; preds = %225
  %233 = load %28*, %28** %29, align 8
  %234 = load %28**, %28*** %13, align 8
  %235 = getelementptr inbounds %28*, %28** %234, i32 1
  store %28** %235, %28*** %13, align 8
  store %28* %233, %28** %234, align 8
  %236 = load i32*, i32** %8, align 8
  %237 = icmp ne i32* %236, null
  br i1 %237, label %238, label %242

238:                                              ; preds = %232
  %239 = load i32*, i32** %8, align 8
  %240 = load i32, i32* %239, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %239, align 4
  br label %242

242:                                              ; preds = %238, %232
  store i32 11, i32* %18, align 4
  br label %244

243:                                              ; preds = %225, %218
  store i32 0, i32* %18, align 4
  br label %244

244:                                              ; preds = %243, %242, %217
  %245 = bitcast %28** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %245) #10
  %246 = load i32, i32* %18, align 4
  switch i32 %246, label %275 [
    i32 0, label %247
    i32 10, label %204
    i32 11, label %248
  ]

247:                                              ; preds = %244
  br label %204

248:                                              ; preds = %244, %204
  %249 = bitcast %25** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %249) #10
  %250 = bitcast %30* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %250) #10
  store i32 0, i32* %18, align 4
  br label %251

251:                                              ; preds = %248, %199, %178
  %252 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %252) #10
  %253 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %253) #10
  %254 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %254) #10
  %255 = load i32, i32* %18, align 4
  switch i32 %255, label %275 [
    i32 0, label %256
    i32 8, label %158
  ]

256:                                              ; preds = %251
  br label %158

257:                                              ; preds = %158
  %258 = load %33*, %33** %22, align 8
  call void @dictReleaseIterator(%33* %258)
  %259 = load %4*, %4** %15, align 8
  call void @dictRelease(%4* %259)
  %260 = bitcast %7** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #10
  %261 = bitcast %33** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %261) #10
  %262 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #10
  %263 = bitcast %4** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %263) #10
  %264 = bitcast %29** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #10
  br label %265

265:                                              ; preds = %257
  %266 = load i32, i32* %10, align 4
  %267 = add nsw i32 %266, 1
  store i32 %267, i32* %10, align 4
  br label %51

268:                                              ; preds = %51
  %269 = load i32, i32* %9, align 4
  store i32 1, i32* %18, align 4
  %270 = bitcast %28*** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #10
  %271 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #10
  %272 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #10
  %273 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #10
  %274 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #10
  ret i32 %269

275:                                              ; preds = %251, %244, %146
  unreachable
}

; Function Attrs: nounwind
declare dso_local void @srand(i32) #4

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #4

declare dso_local %4* @dictCreate(%5*, i8*) #2

declare dso_local %7* @dictFind(%4*, i8*) #2

declare dso_local i8* @sdsdup(i8*) #2

declare dso_local i32 @dictReplace(%4*, i8*, i8*) #2

declare dso_local %33* @dictGetIterator(%4*) #2

declare dso_local %7* @dictNext(%33*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @1432(i8* %0) #11 {
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %4) #10
  %6 = load i8*, i8** %3, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 -1
  %8 = load i8, i8* %7, align 1
  store i8 %8, i8* %4, align 1
  %9 = load i8, i8* %4, align 1
  %10 = zext i8 %9 to i32
  %11 = and i32 %10, 7
  switch i32 %11, label %44 [
    i32 0, label %12
    i32 1, label %17
    i32 2, label %24
    i32 3, label %31
    i32 4, label %38
  ]

12:                                               ; preds = %1
  %13 = load i8, i8* %4, align 1
  %14 = zext i8 %13 to i32
  %15 = ashr i32 %14, 3
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %2, align 8
  store i32 1, i32* %5, align 4
  br label %45

17:                                               ; preds = %1
  %18 = load i8*, i8** %3, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 -3
  %20 = bitcast i8* %19 to %35*
  %21 = getelementptr inbounds %35, %35* %20, i32 0, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  store i64 %23, i64* %2, align 8
  store i32 1, i32* %5, align 4
  br label %45

24:                                               ; preds = %1
  %25 = load i8*, i8** %3, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 -5
  %27 = bitcast i8* %26 to %36*
  %28 = getelementptr inbounds %36, %36* %27, i32 0, i32 0
  %29 = load i16, i16* %28, align 1
  %30 = zext i16 %29 to i64
  store i64 %30, i64* %2, align 8
  store i32 1, i32* %5, align 4
  br label %45

31:                                               ; preds = %1
  %32 = load i8*, i8** %3, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 -9
  %34 = bitcast i8* %33 to %37*
  %35 = getelementptr inbounds %37, %37* %34, i32 0, i32 0
  %36 = load i32, i32* %35, align 1
  %37 = zext i32 %36 to i64
  store i64 %37, i64* %2, align 8
  store i32 1, i32* %5, align 4
  br label %45

38:                                               ; preds = %1
  %39 = load i8*, i8** %3, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 -17
  %41 = bitcast i8* %40 to %38*
  %42 = getelementptr inbounds %38, %38* %41, i32 0, i32 0
  %43 = load i64, i64* %42, align 1
  store i64 %43, i64* %2, align 8
  store i32 1, i32* %5, align 4
  br label %45

44:                                               ; preds = %1
  store i64 0, i64* %2, align 8
  store i32 1, i32* %5, align 4
  br label %45

45:                                               ; preds = %44, %38, %31, %24, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %4) #10
  %46 = load i64, i64* %2, align 8
  ret i64 %46
}

declare dso_local void @dictReleaseIterator(%33*) #2

declare dso_local void @dictRelease(%4*) #2

; Function Attrs: nounwind uwtable
define internal i64 @1433(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i64 @1432(i8* %4)
  %6 = trunc i64 %5 to i32
  %7 = call i64 @dictGenHashFunction(i8* %3, i32 %6)
  ret i64 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @1434(i8* %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #10
  %12 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  %13 = load i8*, i8** %5, align 8
  %14 = load i8*, i8** %6, align 8
  %15 = call i64 @1432(i8* %14)
  %16 = trunc i64 %15 to i32
  store i32 %16, i32* %8, align 4
  %17 = load i8*, i8** %7, align 8
  %18 = call i64 @1432(i8* %17)
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %9, align 4
  %20 = load i32, i32* %8, align 4
  %21 = load i32, i32* %9, align 4
  %22 = icmp ne i32 %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %32

24:                                               ; preds = %3
  %25 = load i8*, i8** %6, align 8
  %26 = load i8*, i8** %7, align 8
  %27 = load i32, i32* %8, align 4
  %28 = sext i32 %27 to i64
  %29 = call i32 @memcmp(i8* %25, i8* %26, i64 %28) #12
  %30 = icmp eq i32 %29, 0
  %31 = zext i1 %30 to i32
  store i32 %31, i32* %4, align 4
  store i32 1, i32* %10, align 4
  br label %32

32:                                               ; preds = %24, %23
  %33 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #10
  %34 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34) #10
  %35 = load i32, i32* %4, align 4
  ret i32 %35
}

; Function Attrs: nounwind uwtable
define internal void @1435(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  call void @sdsfree(i8* %6)
  ret void
}

declare dso_local i64 @dictGenHashFunction(i8*, i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #5

; Function Attrs: nounwind uwtable
define internal i8* @1436(%28* %0, i32 %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store %28* %0, %28** %3, align 8
  store i32 %1, i32* %4, align 4
  %12 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = call i8* @sdsempty()
  store i8* %13, i8** %5, align 8
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  %15 = call i8* @sdsempty()
  store i8* %15, i8** %6, align 8
  %16 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  store i32 0, i32* %7, align 4
  br label %17

17:                                               ; preds = %24, %2
  %18 = load i32, i32* %7, align 4
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = load i8*, i8** %6, align 8
  %23 = call i8* @sdscat(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @829, i32 0, i32 0))
  store i8* %23, i8** %6, align 8
  br label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %7, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %7, align 4
  br label %17

27:                                               ; preds = %17
  %28 = load i32, i32* %4, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  %31 = load i8*, i8** %5, align 8
  %32 = load i8*, i8** %6, align 8
  %33 = call i8* @sdscat(i8* %31, i8* %32)
  store i8* %33, i8** %5, align 8
  br label %34

34:                                               ; preds = %30, %27
  %35 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #10
  %36 = load %28*, %28** %3, align 8
  %37 = getelementptr inbounds %28, %28* %36, i32 0, i32 7
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 2
  %40 = icmp ne i32 %39, 0
  %41 = xor i1 %40, true
  %42 = zext i1 %41 to i32
  store i32 %42, i32* %8, align 4
  %43 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #10
  %44 = load i32, i32* %8, align 4
  %45 = icmp ne i32 %44, 0
  %46 = zext i1 %45 to i64
  %47 = select i1 %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @830, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @831, i32 0, i32 0)
  store i8* %47, i8** %9, align 8
  %48 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #10
  store i8* null, i8** %10, align 8
  %49 = load %28*, %28** %3, align 8
  %50 = getelementptr inbounds %28, %28* %49, i32 0, i32 10
  %51 = load i32, i32* %50, align 8
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %70

53:                                               ; preds = %34
  %54 = load %28*, %28** %3, align 8
  %55 = getelementptr inbounds %28, %28* %54, i32 0, i32 9
  %56 = load i8*, i8** %55, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = load i8*, i8** %5, align 8
  %60 = load %28*, %28** %3, align 8
  %61 = getelementptr inbounds %28, %28* %60, i32 0, i32 1
  %62 = load i8*, i8** %61, align 8
  %63 = load %28*, %28** %3, align 8
  %64 = getelementptr inbounds %28, %28* %63, i32 0, i32 2
  %65 = load i8*, i8** %64, align 8
  %66 = load %28*, %28** %3, align 8
  %67 = getelementptr inbounds %28, %28* %66, i32 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %59, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @832, i32 0, i32 0), i8* %62, i8* %65, i32 %68)
  store i8* %69, i8** %5, align 8
  br label %97

70:                                               ; preds = %53, %34
  %71 = load %28*, %28** %3, align 8
  %72 = call i8* @1437(%28* %71)
  store i8* %72, i8** %10, align 8
  %73 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #10
  %74 = load %28*, %28** %3, align 8
  %75 = call i8* @1438(%28* %74)
  store i8* %75, i8** %11, align 8
  %76 = load i8*, i8** %5, align 8
  %77 = load i8*, i8** %9, align 8
  %78 = load %28*, %28** %3, align 8
  %79 = getelementptr inbounds %28, %28* %78, i32 0, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = load %28*, %28** %3, align 8
  %82 = getelementptr inbounds %28, %28* %81, i32 0, i32 2
  %83 = load i8*, i8** %82, align 8
  %84 = load %28*, %28** %3, align 8
  %85 = getelementptr inbounds %28, %28* %84, i32 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = load i8*, i8** %6, align 8
  %88 = load i8*, i8** %10, align 8
  %89 = load %28*, %28** %3, align 8
  %90 = getelementptr inbounds %28, %28* %89, i32 0, i32 12
  %91 = load i32, i32* %90, align 4
  %92 = load i8*, i8** %11, align 8
  %93 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %76, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @833, i32 0, i32 0), i8* %77, i8* %80, i8* %83, i32 %86, i8* %87, i8* %88, i32 %91, i8* %92)
  store i8* %93, i8** %5, align 8
  %94 = load i8*, i8** %10, align 8
  call void @sdsfree(i8* %94)
  %95 = load i8*, i8** %11, align 8
  call void @sdsfree(i8* %95)
  %96 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #10
  br label %97

97:                                               ; preds = %70, %58
  %98 = load %28*, %28** %3, align 8
  %99 = getelementptr inbounds %28, %28* %98, i32 0, i32 9
  %100 = load i8*, i8** %99, align 8
  %101 = icmp ne i8* %100, null
  br i1 %101, label %102, label %109

102:                                              ; preds = %97
  %103 = load i8*, i8** %5, align 8
  %104 = load i8*, i8** %6, align 8
  %105 = load %28*, %28** %3, align 8
  %106 = getelementptr inbounds %28, %28* %105, i32 0, i32 9
  %107 = load i8*, i8** %106, align 8
  %108 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %103, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @834, i32 0, i32 0), i8* %104, i8* %107)
  store i8* %108, i8** %5, align 8
  br label %122

109:                                              ; preds = %97
  %110 = load %28*, %28** %3, align 8
  %111 = getelementptr inbounds %28, %28* %110, i32 0, i32 13
  %112 = load i32, i32* %111, align 8
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %121

114:                                              ; preds = %109
  %115 = load i8*, i8** %5, align 8
  %116 = load i8*, i8** %6, align 8
  %117 = load %28*, %28** %3, align 8
  %118 = getelementptr inbounds %28, %28* %117, i32 0, i32 13
  %119 = load i32, i32* %118, align 8
  %120 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %115, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @835, i32 0, i32 0), i8* %116, i32 %119)
  store i8* %120, i8** %5, align 8
  br label %121

121:                                              ; preds = %114, %109
  br label %122

122:                                              ; preds = %121, %102
  %123 = load i8*, i8** %6, align 8
  call void @sdsfree(i8* %123)
  %124 = load i8*, i8** %5, align 8
  %125 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #10
  %126 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #10
  %127 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %127) #10
  %128 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %128) #10
  %129 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %129) #10
  %130 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #10
  ret i8* %124
}

; Function Attrs: nounwind uwtable
define internal i8* @1437(%28* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %28* %0, %28** %2, align 8
  %8 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = call i8* @sdsempty()
  store i8* %9, i8** %3, align 8
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  store i32 -1, i32* %4, align 4
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #10
  store i32 -1, i32* %5, align 4
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %62, %1
  %14 = load i32, i32* %6, align 4
  %15 = icmp slt i32 %14, 16384
  br i1 %15, label %16, label %65

16:                                               ; preds = %13
  %17 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  %18 = load %28*, %28** %2, align 8
  %19 = getelementptr inbounds %28, %28* %18, i32 0, i32 11
  %20 = load i32, i32* %6, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [16384 x i8], [16384 x i8]* %19, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  store i32 %24, i32* %7, align 4
  %25 = load i32, i32* %7, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %44

27:                                               ; preds = %16
  %28 = load i32, i32* %4, align 4
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %42

30:                                               ; preds = %27
  %31 = load i8*, i8** %3, align 8
  %32 = call i64 @1432(i8* %31)
  %33 = icmp ne i64 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = load i8*, i8** %3, align 8
  %36 = call i8* @sdscat(i8* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @836, i32 0, i32 0))
  store i8* %36, i8** %3, align 8
  br label %37

37:                                               ; preds = %34, %30
  %38 = load i32, i32* %6, align 4
  store i32 %38, i32* %4, align 4
  %39 = load i8*, i8** %3, align 8
  %40 = load i32, i32* %6, align 4
  %41 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @837, i32 0, i32 0), i32 %40)
  store i8* %41, i8** %3, align 8
  br label %42

42:                                               ; preds = %37, %27
  %43 = load i32, i32* %6, align 4
  store i32 %43, i32* %5, align 4
  br label %60

44:                                               ; preds = %16
  %45 = load i32, i32* %5, align 4
  %46 = icmp sge i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %44
  %48 = load i32, i32* %4, align 4
  %49 = load i32, i32* %5, align 4
  %50 = icmp eq i32 %48, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = load i8*, i8** %3, align 8
  %53 = call i8* @sdscat(i8* %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @838, i32 0, i32 0))
  store i8* %53, i8** %3, align 8
  br label %58

54:                                               ; preds = %47
  %55 = load i8*, i8** %3, align 8
  %56 = load i32, i32* %5, align 4
  %57 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @839, i32 0, i32 0), i32 %56)
  store i8* %57, i8** %3, align 8
  br label %58

58:                                               ; preds = %54, %51
  br label %59

59:                                               ; preds = %58, %44
  store i32 -1, i32* %5, align 4
  store i32 -1, i32* %4, align 4
  br label %60

60:                                               ; preds = %59, %42
  %61 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #10
  br label %62

62:                                               ; preds = %60
  %63 = load i32, i32* %6, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %6, align 4
  br label %13

65:                                               ; preds = %13
  %66 = load i32, i32* %5, align 4
  %67 = icmp sge i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %65
  %69 = load i32, i32* %4, align 4
  %70 = load i32, i32* %5, align 4
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %72, label %75

72:                                               ; preds = %68
  %73 = load i8*, i8** %3, align 8
  %74 = call i8* @sdscat(i8* %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @838, i32 0, i32 0))
  store i8* %74, i8** %3, align 8
  br label %79

75:                                               ; preds = %68
  %76 = load i8*, i8** %3, align 8
  %77 = load i32, i32* %5, align 4
  %78 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %76, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @839, i32 0, i32 0), i32 %77)
  store i8* %78, i8** %3, align 8
  br label %79

79:                                               ; preds = %75, %72
  br label %80

80:                                               ; preds = %79, %65
  %81 = load i8*, i8** %3, align 8
  %82 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %82) #10
  %83 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %83) #10
  %84 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %84) #10
  %85 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #10
  ret i8* %81
}

; Function Attrs: nounwind uwtable
define internal i8* @1438(%28* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %28*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %30, align 8
  %8 = alloca %25*, align 8
  %9 = alloca i8*, align 8
  store %28* %0, %28** %3, align 8
  %10 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  %11 = call i8* @sdsempty()
  store i8* %11, i8** %4, align 8
  %12 = load %28*, %28** %3, align 8
  %13 = getelementptr inbounds %28, %28* %12, i32 0, i32 8
  %14 = load %24*, %24** %13, align 8
  %15 = icmp ne %24* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  %17 = load i8*, i8** %4, align 8
  store i8* %17, i8** %2, align 8
  store i32 1, i32* %5, align 4
  br label %56

18:                                               ; preds = %1
  %19 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #10
  store i32 1, i32* %6, align 4
  %20 = bitcast %30* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %20) #10
  %21 = bitcast %25** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  %22 = load %28*, %28** %3, align 8
  %23 = getelementptr inbounds %28, %28* %22, i32 0, i32 8
  %24 = load %24*, %24** %23, align 8
  call void @listRewind(%24* %24, %30* %7)
  br label %25

25:                                               ; preds = %50, %47, %18
  %26 = call %25* @listNext(%30* %7)
  store %25* %26, %25** %8, align 8
  %27 = icmp ne %25* %26, null
  br i1 %27, label %28, label %51

28:                                               ; preds = %25
  %29 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #10
  %30 = load %25*, %25** %8, align 8
  %31 = getelementptr inbounds %25, %25* %30, i32 0, i32 2
  %32 = load i8*, i8** %31, align 8
  store i8* %32, i8** %9, align 8
  %33 = load i8*, i8** %9, align 8
  %34 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @796, i32 0, i32 0)) #12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %28
  store i32 2, i32* %5, align 4
  br label %47

37:                                               ; preds = %28
  %38 = load i32, i32* %6, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i8*, i8** %4, align 8
  %42 = call i8* @sdscat(i8* %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @836, i32 0, i32 0))
  store i8* %42, i8** %4, align 8
  br label %43

43:                                               ; preds = %40, %37
  %44 = load i8*, i8** %4, align 8
  %45 = load i8*, i8** %9, align 8
  %46 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @840, i32 0, i32 0), i8* %45)
  store i8* %46, i8** %4, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %5, align 4
  br label %47

47:                                               ; preds = %43, %36
  %48 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #10
  %49 = load i32, i32* %5, align 4
  switch i32 %49, label %59 [
    i32 0, label %50
    i32 2, label %25
  ]

50:                                               ; preds = %47
  br label %25

51:                                               ; preds = %25
  %52 = load i8*, i8** %4, align 8
  store i8* %52, i8** %2, align 8
  store i32 1, i32* %5, align 4
  %53 = bitcast %25** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #10
  %54 = bitcast %30* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %54) #10
  %55 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %55) #10
  br label %56

56:                                               ; preds = %51, %16
  %57 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #10
  %58 = load i8*, i8** %2, align 8
  ret i8* %58

59:                                               ; preds = %47
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1439(%28* %0, i8** %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca i8**, align 8
  %5 = alloca %31*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8**, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store i8** %1, i8*** %4, align 8
  %13 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  store %31* null, %31** %5, align 8
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  store i8* null, i8** %6, align 8
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #10
  store i32 1, i32* %7, align 4
  %16 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  %17 = load %28*, %28** %3, align 8
  %18 = getelementptr inbounds %28, %28* %17, i32 0, i32 12
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, 2
  store i32 %20, i32* %8, align 4
  %21 = bitcast i8*** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  %22 = load i32, i32* %8, align 4
  %23 = sext i32 %22 to i64
  %24 = mul i64 %23, 8
  %25 = call i8* @zmalloc(i64 %24)
  %26 = bitcast i8* %25 to i8**
  store i8** %26, i8*** %9, align 8
  %27 = bitcast i64** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #10
  %28 = load i32, i32* %8, align 4
  %29 = sext i32 %28 to i64
  %30 = mul i64 %29, 8
  %31 = call i8* @zmalloc(i64 %30)
  %32 = bitcast i8* %31 to i64*
  store i64* %32, i64** %10, align 8
  %33 = load i8**, i8*** %9, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @844, i32 0, i32 0), i8** %34, align 8
  %35 = load i8**, i8*** %9, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @845, i32 0, i32 0), i8** %36, align 8
  %37 = load i64*, i64** %10, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 0
  store i64 7, i64* %38, align 8
  %39 = load i64*, i64** %10, align 8
  %40 = getelementptr inbounds i64, i64* %39, i64 1
  store i64 8, i64* %40, align 8
  %41 = load i8**, i8*** %4, align 8
  store i8* null, i8** %41, align 8
  %42 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #10
  %43 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #10
  store i32 2, i32* %12, align 4
  store i32 0, i32* %11, align 4
  br label %44

44:                                               ; preds = %81, %2
  %45 = load i32, i32* %11, align 4
  %46 = icmp slt i32 %45, 16384
  br i1 %46, label %47, label %84

47:                                               ; preds = %44
  %48 = load i32, i32* %12, align 4
  %49 = load i32, i32* %8, align 4
  %50 = icmp sge i32 %48, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  br label %84

52:                                               ; preds = %47
  %53 = load %28*, %28** %3, align 8
  %54 = getelementptr inbounds %28, %28* %53, i32 0, i32 11
  %55 = load i32, i32* %11, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [16384 x i8], [16384 x i8]* %54, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = icmp ne i8 %58, 0
  br i1 %59, label %60, label %80

60:                                               ; preds = %52
  %61 = load i32, i32* %11, align 4
  %62 = sext i32 %61 to i64
  %63 = call i8* @sdsfromlonglong(i64 %62)
  %64 = load i8**, i8*** %9, align 8
  %65 = load i32, i32* %12, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8*, i8** %64, i64 %66
  store i8* %63, i8** %67, align 8
  %68 = load i8**, i8*** %9, align 8
  %69 = load i32, i32* %12, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8*, i8** %68, i64 %70
  %72 = load i8*, i8** %71, align 8
  %73 = call i64 @1432(i8* %72)
  %74 = load i64*, i64** %10, align 8
  %75 = load i32, i32* %12, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i64, i64* %74, i64 %76
  store i64 %73, i64* %77, align 8
  %78 = load i32, i32* %12, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %12, align 4
  br label %80

80:                                               ; preds = %60, %52
  br label %81

81:                                               ; preds = %80
  %82 = load i32, i32* %11, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %11, align 4
  br label %44

84:                                               ; preds = %51, %44
  %85 = load i32, i32* %12, align 4
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %84
  store i32 0, i32* %7, align 4
  br label %109

88:                                               ; preds = %84
  %89 = load %28*, %28** %3, align 8
  %90 = getelementptr inbounds %28, %28* %89, i32 0, i32 0
  %91 = load %10*, %10** %90, align 8
  %92 = load i32, i32* %8, align 4
  %93 = load i8**, i8*** %9, align 8
  %94 = load i64*, i64** %10, align 8
  %95 = call i32 @redisAppendCommandArgv(%10* %91, i32 %92, i8** %93, i64* %94)
  %96 = load %28*, %28** %3, align 8
  %97 = getelementptr inbounds %28, %28* %96, i32 0, i32 0
  %98 = load %10*, %10** %97, align 8
  %99 = call i32 @redisGetReply(%10* %98, i8** %6)
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %88
  store i32 0, i32* %7, align 4
  br label %109

102:                                              ; preds = %88
  %103 = load i8*, i8** %6, align 8
  %104 = bitcast i8* %103 to %31*
  store %31* %104, %31** %5, align 8
  %105 = load %28*, %28** %3, align 8
  %106 = load %31*, %31** %5, align 8
  %107 = load i8**, i8*** %4, align 8
  %108 = call i32 @1426(%28* %105, %31* %106, i8** %107)
  store i32 %108, i32* %7, align 4
  br label %109

109:                                              ; preds = %102, %101, %87
  %110 = load i64*, i64** %10, align 8
  %111 = bitcast i64* %110 to i8*
  call void @zfree(i8* %111)
  %112 = load i8**, i8*** %9, align 8
  %113 = icmp ne i8** %112, null
  br i1 %113, label %114, label %131

114:                                              ; preds = %109
  store i32 2, i32* %11, align 4
  br label %115

115:                                              ; preds = %125, %114
  %116 = load i32, i32* %11, align 4
  %117 = load i32, i32* %8, align 4
  %118 = icmp slt i32 %116, %117
  br i1 %118, label %119, label %128

119:                                              ; preds = %115
  %120 = load i8**, i8*** %9, align 8
  %121 = load i32, i32* %11, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8*, i8** %120, i64 %122
  %124 = load i8*, i8** %123, align 8
  call void @sdsfree(i8* %124)
  br label %125

125:                                              ; preds = %119
  %126 = load i32, i32* %11, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %11, align 4
  br label %115

128:                                              ; preds = %115
  %129 = load i8**, i8*** %9, align 8
  %130 = bitcast i8** %129 to i8*
  call void @zfree(i8* %130)
  br label %131

131:                                              ; preds = %128, %109
  %132 = load %31*, %31** %5, align 8
  %133 = icmp ne %31* %132, null
  br i1 %133, label %134, label %137

134:                                              ; preds = %131
  %135 = load %31*, %31** %5, align 8
  %136 = bitcast %31* %135 to i8*
  call void @freeReplyObject(i8* %136)
  br label %137

137:                                              ; preds = %134, %131
  %138 = load i32, i32* %7, align 4
  %139 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %139) #10
  %140 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %140) #10
  %141 = bitcast i64** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #10
  %142 = bitcast i8*** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #10
  %143 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %143) #10
  %144 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %144) #10
  %145 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #10
  %146 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %146) #10
  ret i32 %138
}

declare dso_local i8* @sdsfromlonglong(i64) #2

declare dso_local i32 @redisAppendCommandArgv(%10*, i32, i8**, i64*) #2

declare dso_local i32 @redisGetReply(%10*, i8**) #2

; Function Attrs: nounwind uwtable
define internal i32 @1440() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %30, align 8
  %6 = alloca %25*, align 8
  %7 = alloca %28*, align 8
  %8 = alloca i8*, align 8
  %9 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %10 = icmp eq %24* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %0
  store i32 0, i32* %1, align 4
  br label %77

12:                                               ; preds = %0
  %13 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #10
  %14 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %15 = getelementptr inbounds %24, %24* %14, i32 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = icmp ule i64 %16, 1
  %18 = zext i1 %17 to i32
  store i32 %18, i32* %2, align 4
  %19 = load i32, i32* %2, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %12
  store i32 1, i32* %1, align 4
  store i32 1, i32* %3, align 4
  br label %75

22:                                               ; preds = %12
  %23 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #10
  store i8* null, i8** %4, align 8
  %24 = bitcast %30* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %24) #10
  %25 = bitcast %25** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #10
  %26 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %26, %30* %5)
  br label %27

27:                                               ; preds = %64, %22
  %28 = call %25* @listNext(%30* %5)
  store %25* %28, %25** %6, align 8
  %29 = icmp ne %25* %28, null
  br i1 %29, label %30, label %65

30:                                               ; preds = %27
  %31 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #10
  %32 = load %25*, %25** %6, align 8
  %33 = getelementptr inbounds %25, %25* %32, i32 0, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast i8* %34 to %28*
  store %28* %35, %28** %7, align 8
  %36 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #10
  %37 = load %28*, %28** %7, align 8
  %38 = call i8* @1443(%28* %37)
  store i8* %38, i8** %8, align 8
  %39 = load i8*, i8** %8, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %30
  store i32 0, i32* %2, align 4
  store i32 3, i32* %3, align 4
  br label %60

42:                                               ; preds = %30
  %43 = load i8*, i8** %4, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load i8*, i8** %8, align 8
  store i8* %46, i8** %4, align 8
  br label %59

47:                                               ; preds = %42
  %48 = load i8*, i8** %4, align 8
  %49 = load i8*, i8** %8, align 8
  %50 = call i32 @sdscmp(i8* %48, i8* %49)
  %51 = icmp ne i32 %50, 0
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  store i32 %53, i32* %2, align 4
  %54 = load i8*, i8** %8, align 8
  call void @sdsfree(i8* %54)
  %55 = load i32, i32* %2, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %47
  store i32 3, i32* %3, align 4
  br label %60

58:                                               ; preds = %47
  br label %59

59:                                               ; preds = %58, %45
  store i32 0, i32* %3, align 4
  br label %60

60:                                               ; preds = %59, %57, %41
  %61 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #10
  %62 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #10
  %63 = load i32, i32* %3, align 4
  switch i32 %63, label %79 [
    i32 0, label %64
    i32 3, label %65
  ]

64:                                               ; preds = %60
  br label %27

65:                                               ; preds = %60, %27
  %66 = load i8*, i8** %4, align 8
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = load i8*, i8** %4, align 8
  call void @sdsfree(i8* %69)
  br label %70

70:                                               ; preds = %68, %65
  %71 = load i32, i32* %2, align 4
  store i32 %71, i32* %1, align 4
  store i32 1, i32* %3, align 4
  %72 = bitcast %25** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #10
  %73 = bitcast %30* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %73) #10
  %74 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #10
  br label %75

75:                                               ; preds = %70, %21
  %76 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %76) #10
  br label %77

77:                                               ; preds = %75, %11
  %78 = load i32, i32* %1, align 4
  ret i32 %78

79:                                               ; preds = %60
  unreachable
}

; Function Attrs: nounwind uwtable
define internal %4* @1441() #0 {
  %1 = alloca %4*, align 8
  %2 = alloca %4*, align 8
  %3 = alloca %30, align 8
  %4 = alloca %25*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca %24*, align 8
  %7 = alloca %30, align 8
  %8 = alloca %25*, align 8
  %9 = alloca %39*, align 8
  %10 = alloca %24*, align 8
  %11 = alloca %7*, align 8
  %12 = alloca i8*, align 8
  %13 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %14 = icmp eq %24* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %0
  store %4* null, %4** %1, align 8
  br label %112

16:                                               ; preds = %0
  %17 = bitcast %4** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10
  %18 = call %4* @dictCreate(%5* @855, i8* null)
  store %4* %18, %4** %2, align 8
  %19 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %19) #10
  %20 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #10
  %21 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %21, %30* %3)
  br label %22

22:                                               ; preds = %104, %16
  %23 = call %25* @listNext(%30* %3)
  store %25* %23, %25** %4, align 8
  %24 = icmp ne %25* %23, null
  br i1 %24, label %25, label %107

25:                                               ; preds = %22
  %26 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #10
  %27 = load %25*, %25** %4, align 8
  %28 = getelementptr inbounds %25, %25* %27, i32 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast i8* %29 to %28*
  store %28* %30, %28** %5, align 8
  %31 = bitcast %24** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #10
  %32 = load %28*, %28** %5, align 8
  %33 = call %24* @1444(%28* %32)
  store %24* %33, %24** %6, align 8
  %34 = load %24*, %24** %6, align 8
  %35 = icmp ne %24* %34, null
  br i1 %35, label %36, label %104

36:                                               ; preds = %25
  %37 = bitcast %30* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %37) #10
  %38 = bitcast %25** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #10
  %39 = load %24*, %24** %6, align 8
  call void @listRewind(%24* %39, %30* %7)
  br label %40

40:                                               ; preds = %74, %36
  %41 = call %25* @listNext(%30* %7)
  store %25* %41, %25** %8, align 8
  %42 = icmp ne %25* %41, null
  br i1 %42, label %43, label %100

43:                                               ; preds = %40
  %44 = bitcast %39** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #10
  %45 = load %25*, %25** %8, align 8
  %46 = getelementptr inbounds %25, %25* %45, i32 0, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast i8* %47 to %39*
  store %39* %48, %39** %9, align 8
  %49 = bitcast %24** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #10
  store %24* null, %24** %10, align 8
  %50 = bitcast %7** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #10
  %51 = load %4*, %4** %2, align 8
  %52 = load %39*, %39** %9, align 8
  %53 = getelementptr inbounds %39, %39* %52, i32 0, i32 1
  %54 = load i8*, i8** %53, align 8
  %55 = call %7* @dictFind(%4* %51, i8* %54)
  store %7* %55, %7** %11, align 8
  %56 = load %7*, %7** %11, align 8
  %57 = icmp ne %7* %56, null
  br i1 %57, label %58, label %64

58:                                               ; preds = %43
  %59 = load %7*, %7** %11, align 8
  %60 = getelementptr inbounds %7, %7* %59, i32 0, i32 1
  %61 = bitcast %8* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast i8* %62 to %24*
  store %24* %63, %24** %10, align 8
  br label %74

64:                                               ; preds = %43
  %65 = call %24* @listCreate()
  store %24* %65, %24** %10, align 8
  %66 = load %4*, %4** %2, align 8
  %67 = load %39*, %39** %9, align 8
  %68 = getelementptr inbounds %39, %39* %67, i32 0, i32 1
  %69 = load i8*, i8** %68, align 8
  %70 = call i8* @sdsdup(i8* %69)
  %71 = load %24*, %24** %10, align 8
  %72 = bitcast %24* %71 to i8*
  %73 = call i32 @dictAdd(%4* %66, i8* %70, i8* %72)
  br label %74

74:                                               ; preds = %64, %58
  %75 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #10
  %76 = call i8* @sdsempty()
  store i8* %76, i8** %12, align 8
  %77 = load i8*, i8** %12, align 8
  %78 = load %28*, %28** %5, align 8
  %79 = getelementptr inbounds %28, %28* %78, i32 0, i32 2
  %80 = load i8*, i8** %79, align 8
  %81 = load %28*, %28** %5, align 8
  %82 = getelementptr inbounds %28, %28* %81, i32 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %77, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @856, i32 0, i32 0), i8* %80, i32 %83)
  store i8* %84, i8** %12, align 8
  %85 = load %24*, %24** %10, align 8
  %86 = load i8*, i8** %12, align 8
  %87 = call %24* @listAddNodeTail(%24* %85, i8* %86)
  %88 = load %39*, %39** %9, align 8
  %89 = getelementptr inbounds %39, %39* %88, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @sdsfree(i8* %90)
  %91 = load %39*, %39** %9, align 8
  %92 = getelementptr inbounds %39, %39* %91, i32 0, i32 1
  %93 = load i8*, i8** %92, align 8
  call void @sdsfree(i8* %93)
  %94 = load %39*, %39** %9, align 8
  %95 = bitcast %39* %94 to i8*
  call void @zfree(i8* %95)
  %96 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #10
  %97 = bitcast %7** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %97) #10
  %98 = bitcast %24** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #10
  %99 = bitcast %39** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #10
  br label %40

100:                                              ; preds = %40
  %101 = load %24*, %24** %6, align 8
  call void @listRelease(%24* %101)
  %102 = bitcast %25** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #10
  %103 = bitcast %30* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %103) #10
  br label %104

104:                                              ; preds = %100, %25
  %105 = bitcast %24** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #10
  %106 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %106) #10
  br label %22

107:                                              ; preds = %22
  %108 = load %4*, %4** %2, align 8
  store %4* %108, %4** %1, align 8
  %109 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109) #10
  %110 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %110) #10
  %111 = bitcast %4** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #10
  br label %112

112:                                              ; preds = %107, %15
  %113 = load %4*, %4** %1, align 8
  ret %4* %113
}

; Function Attrs: nounwind uwtable
define internal i32 @1442(i8* %0, i8** %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  %12 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = load i8*, i8** %6, align 8
  %14 = call i8* @strrchr(i8* %13, i32 64) #12
  store i8* %14, i8** %10, align 8
  %15 = load i8*, i8** %10, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %17, label %27

17:                                               ; preds = %4
  %18 = load i8*, i8** %10, align 8
  store i8 0, i8* %18, align 1
  %19 = load i32*, i32** %9, align 8
  %20 = icmp ne i32* %19, null
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = load i8*, i8** %10, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  %24 = call i32 @atoi(i8* %23) #12
  %25 = load i32*, i32** %9, align 8
  store i32 %24, i32* %25, align 4
  br label %26

26:                                               ; preds = %21, %17
  br label %27

27:                                               ; preds = %26, %4
  %28 = load i8*, i8** %6, align 8
  %29 = call i8* @strrchr(i8* %28, i32 58) #12
  store i8* %29, i8** %10, align 8
  %30 = load i8*, i8** %10, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = load i8*, i8** %10, align 8
  store i8 0, i8* %33, align 1
  %34 = load i8*, i8** %6, align 8
  %35 = load i8**, i8*** %7, align 8
  store i8* %34, i8** %35, align 8
  %36 = load i8*, i8** %10, align 8
  %37 = getelementptr inbounds i8, i8* %36, i32 1
  store i8* %37, i8** %10, align 8
  %38 = call i32 @atoi(i8* %37) #12
  %39 = load i32*, i32** %8, align 8
  store i32 %38, i32* %39, align 4
  br label %41

40:                                               ; preds = %27
  store i32 0, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %42

41:                                               ; preds = %32
  store i32 1, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %42

42:                                               ; preds = %41, %40
  %43 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #10
  %44 = load i32, i32* %5, align 4
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define internal i8* @1443(%28* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca %31*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8**, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  store %28* %0, %28** %2, align 8
  %24 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #10
  store i8* null, i8** %3, align 8
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #10
  store i32 0, i32* %4, align 4
  %26 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #10
  store i32 0, i32* %5, align 4
  %27 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #10
  store i32 0, i32* %6, align 4
  %28 = bitcast i8*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #10
  store i8** null, i8*** %7, align 8
  %29 = bitcast %31** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #10
  %30 = load %28*, %28** %2, align 8
  %31 = getelementptr inbounds %28, %28* %30, i32 0, i32 0
  %32 = load %10*, %10** %31, align 8
  %33 = call i8* (%10*, i8*, ...) @redisCommand(%10* %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @137, i32 0, i32 0))
  %34 = bitcast i8* %33 to %31*
  store %31* %34, %31** %8, align 8
  %35 = load %31*, %31** %8, align 8
  %36 = icmp eq %31* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %1
  %38 = load %31*, %31** %8, align 8
  %39 = getelementptr inbounds %31, %31* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 6
  br i1 %41, label %42, label %43

42:                                               ; preds = %37, %1
  br label %313

43:                                               ; preds = %37
  %44 = load %31*, %31** %8, align 8
  %45 = getelementptr inbounds %31, %31* %44, i32 0, i32 4
  %46 = load i8*, i8** %45, align 8
  store i8* %46, i8** %9, align 8
  br label %47

47:                                               ; preds = %276, %272, %43
  %48 = load i8*, i8** %9, align 8
  %49 = call i8* @strstr(i8* %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0)) #12
  store i8* %49, i8** %10, align 8
  %50 = icmp ne i8* %49, null
  br i1 %50, label %51, label %277

51:                                               ; preds = %47
  store i32 0, i32* %5, align 4
  %52 = load i8*, i8** %10, align 8
  store i8 0, i8* %52, align 1
  %53 = load i8*, i8** %9, align 8
  store i8* %53, i8** %11, align 8
  %54 = load i8*, i8** %10, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  store i8* %55, i8** %9, align 8
  %56 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #10
  store i8* null, i8** %12, align 8
  %57 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #10
  store i32 0, i32* %13, align 4
  br label %58

58:                                               ; preds = %89, %51
  %59 = load i8*, i8** %11, align 8
  %60 = call i8* @strchr(i8* %59, i32 32) #12
  store i8* %60, i8** %10, align 8
  %61 = icmp ne i8* %60, null
  br i1 %61, label %62, label %90

62:                                               ; preds = %58
  %63 = load i8*, i8** %10, align 8
  store i8 0, i8* %63, align 1
  %64 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #10
  %65 = load i8*, i8** %11, align 8
  store i8* %65, i8** %14, align 8
  %66 = load i8*, i8** %10, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 1
  store i8* %67, i8** %11, align 8
  %68 = load i32, i32* %5, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %80

70:                                               ; preds = %62
  %71 = load i8*, i8** %14, align 8
  store i8* %71, i8** %12, align 8
  %72 = load i8*, i8** %10, align 8
  %73 = load i8*, i8** %14, align 8
  %74 = ptrtoint i8* %72 to i64
  %75 = ptrtoint i8* %73 to i64
  %76 = sub i64 %74, %75
  %77 = trunc i64 %76 to i32
  store i32 %77, i32* %13, align 4
  %78 = load i32, i32* %13, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %13, align 4
  store i32 %78, i32* %6, align 4
  br label %80

80:                                               ; preds = %70, %62
  %81 = load i32, i32* %5, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %5, align 4
  %83 = icmp eq i32 %82, 8
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  store i32 6, i32* %15, align 4
  br label %86

85:                                               ; preds = %80
  store i32 0, i32* %15, align 4
  br label %86

86:                                               ; preds = %85, %84
  %87 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #10
  %88 = load i32, i32* %15, align 4
  switch i32 %88, label %347 [
    i32 0, label %89
    i32 6, label %90
  ]

89:                                               ; preds = %86
  br label %58

90:                                               ; preds = %86, %58
  %91 = load i32, i32* %5, align 4
  %92 = icmp ne i32 %91, 8
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  store i32 3, i32* %15, align 4
  br label %272

94:                                               ; preds = %90
  %95 = load i8*, i8** %12, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  store i32 3, i32* %15, align 4
  br label %272

98:                                               ; preds = %94
  %99 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %99) #10
  %100 = load i8*, i8** %11, align 8
  %101 = call i64 @strlen(i8* %100) #12
  %102 = trunc i64 %101 to i32
  store i32 %102, i32* %16, align 4
  %103 = load i32, i32* %16, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  store i32 3, i32* %15, align 4
  br label %270

106:                                              ; preds = %98
  %107 = bitcast i8*** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %107) #10
  store i8** null, i8*** %17, align 8
  %108 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %108) #10
  store i32 0, i32* %18, align 4
  br label %109

109:                                              ; preds = %170, %106
  %110 = load i32, i32* %16, align 4
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %112, label %173

112:                                              ; preds = %109
  %113 = load i8*, i8** %11, align 8
  %114 = call i8* @strchr(i8* %113, i32 32) #12
  store i8* %114, i8** %10, align 8
  %115 = load i8*, i8** %10, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %122

117:                                              ; preds = %112
  %118 = load i8*, i8** %11, align 8
  %119 = load i32, i32* %16, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %118, i64 %120
  store i8* %121, i8** %10, align 8
  br label %122

122:                                              ; preds = %117, %112
  %123 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %123) #10
  %124 = load i8*, i8** %10, align 8
  %125 = load i8*, i8** %11, align 8
  %126 = ptrtoint i8* %124 to i64
  %127 = ptrtoint i8* %125 to i64
  %128 = sub i64 %126, %127
  %129 = trunc i64 %128 to i32
  store i32 %129, i32* %19, align 4
  %130 = load i32, i32* %19, align 4
  %131 = load i32, i32* %16, align 4
  %132 = sub nsw i32 %131, %130
  store i32 %132, i32* %16, align 4
  %133 = load i32, i32* %19, align 4
  %134 = load i32, i32* %13, align 4
  %135 = add nsw i32 %134, %133
  store i32 %135, i32* %13, align 4
  %136 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %136) #10
  %137 = load i8*, i8** %11, align 8
  store i8* %137, i8** %20, align 8
  %138 = load i8*, i8** %10, align 8
  store i8 0, i8* %138, align 1
  %139 = load i32, i32* %16, align 4
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %146

141:                                              ; preds = %122
  %142 = load i8*, i8** %10, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 1
  store i8* %143, i8** %11, align 8
  %144 = load i32, i32* %16, align 4
  %145 = add nsw i32 %144, -1
  store i32 %145, i32* %16, align 4
  br label %148

146:                                              ; preds = %122
  %147 = load i8*, i8** %10, align 8
  store i8* %147, i8** %11, align 8
  br label %148

148:                                              ; preds = %146, %141
  %149 = load i8*, i8** %20, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 0
  %151 = load i8, i8* %150, align 1
  %152 = sext i8 %151 to i32
  %153 = icmp ne i32 %152, 91
  br i1 %153, label %154, label %170

154:                                              ; preds = %148
  %155 = load i32, i32* %18, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %18, align 4
  %157 = load i8**, i8*** %17, align 8
  %158 = bitcast i8** %157 to i8*
  %159 = load i32, i32* %18, align 4
  %160 = sext i32 %159 to i64
  %161 = mul i64 %160, 8
  %162 = call i8* @zrealloc(i8* %158, i64 %161)
  %163 = bitcast i8* %162 to i8**
  store i8** %163, i8*** %17, align 8
  %164 = load i8*, i8** %20, align 8
  %165 = load i8**, i8*** %17, align 8
  %166 = load i32, i32* %18, align 4
  %167 = sub nsw i32 %166, 1
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8*, i8** %165, i64 %168
  store i8* %164, i8** %169, align 8
  br label %170

170:                                              ; preds = %154, %148
  %171 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %171) #10
  %172 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %172) #10
  br label %109

173:                                              ; preds = %109
  %174 = load i32, i32* %18, align 4
  %175 = icmp sgt i32 %174, 0
  br i1 %175, label %176, label %265

176:                                              ; preds = %173
  %177 = load i32, i32* %18, align 4
  %178 = icmp sgt i32 %177, 1
  br i1 %178, label %179, label %184

179:                                              ; preds = %176
  %180 = load i8**, i8*** %17, align 8
  %181 = bitcast i8** %180 to i8*
  %182 = load i32, i32* %18, align 4
  %183 = sext i32 %182 to i64
  call void @qsort(i8* %181, i64 %183, i64 8, i32 (i8*, i8*)* @clusterManagerSlotCompare)
  br label %184

184:                                              ; preds = %179, %176
  %185 = load i32, i32* %4, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %4, align 4
  %187 = load i8**, i8*** %7, align 8
  %188 = bitcast i8** %187 to i8*
  %189 = load i32, i32* %4, align 4
  %190 = sext i32 %189 to i64
  %191 = mul i64 %190, 8
  %192 = call i8* @zrealloc(i8* %188, i64 %191)
  %193 = bitcast i8* %192 to i8**
  store i8** %193, i8*** %7, align 8
  %194 = load i32, i32* %18, align 4
  %195 = sub nsw i32 %194, 1
  %196 = sext i32 %195 to i64
  %197 = mul i64 1, %196
  %198 = load i32, i32* %13, align 4
  %199 = sext i32 %198 to i64
  %200 = add i64 %199, %197
  %201 = trunc i64 %200 to i32
  store i32 %201, i32* %13, align 4
  %202 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #10
  %203 = load i32, i32* %13, align 4
  %204 = sext i32 %203 to i64
  %205 = mul i64 1, %204
  %206 = add i64 %205, 1
  %207 = call i8* @zmalloc(i64 %206)
  store i8* %207, i8** %21, align 8
  %208 = load i8*, i8** %21, align 8
  %209 = load i8*, i8** %12, align 8
  %210 = load i32, i32* %6, align 4
  %211 = sext i32 %210 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %208, i8* align 1 %209, i64 %211, i1 false)
  %212 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %212) #10
  %213 = load i8*, i8** %21, align 8
  %214 = load i32, i32* %6, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i8, i8* %213, i64 %215
  store i8* %216, i8** %22, align 8
  %217 = load i8*, i8** %22, align 8
  %218 = getelementptr inbounds i8, i8* %217, i32 1
  store i8* %218, i8** %22, align 8
  store i8 58, i8* %217, align 1
  store i32 0, i32* %5, align 4
  br label %219

219:                                              ; preds = %251, %184
  %220 = load i32, i32* %5, align 4
  %221 = load i32, i32* %18, align 4
  %222 = icmp slt i32 %220, %221
  br i1 %222, label %223, label %254

223:                                              ; preds = %219
  %224 = load i32, i32* %5, align 4
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %223
  %227 = load i8*, i8** %22, align 8
  %228 = getelementptr inbounds i8, i8* %227, i32 1
  store i8* %228, i8** %22, align 8
  store i8 44, i8* %227, align 1
  br label %229

229:                                              ; preds = %226, %223
  %230 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %230) #10
  %231 = load i8**, i8*** %17, align 8
  %232 = load i32, i32* %5, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i8*, i8** %231, i64 %233
  %235 = load i8*, i8** %234, align 8
  %236 = call i64 @strlen(i8* %235) #12
  %237 = trunc i64 %236 to i32
  store i32 %237, i32* %23, align 4
  %238 = load i8*, i8** %22, align 8
  %239 = load i8**, i8*** %17, align 8
  %240 = load i32, i32* %5, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8*, i8** %239, i64 %241
  %243 = load i8*, i8** %242, align 8
  %244 = load i32, i32* %23, align 4
  %245 = sext i32 %244 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %238, i8* align 1 %243, i64 %245, i1 false)
  %246 = load i32, i32* %23, align 4
  %247 = load i8*, i8** %22, align 8
  %248 = sext i32 %246 to i64
  %249 = getelementptr inbounds i8, i8* %247, i64 %248
  store i8* %249, i8** %22, align 8
  %250 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %250) #10
  br label %251

251:                                              ; preds = %229
  %252 = load i32, i32* %5, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %5, align 4
  br label %219

254:                                              ; preds = %219
  %255 = load i8*, i8** %22, align 8
  %256 = getelementptr inbounds i8, i8* %255, i32 1
  store i8* %256, i8** %22, align 8
  store i8 0, i8* %255, align 1
  %257 = load i8*, i8** %21, align 8
  %258 = load i8**, i8*** %7, align 8
  %259 = load i32, i32* %4, align 4
  %260 = sub nsw i32 %259, 1
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i8*, i8** %258, i64 %261
  store i8* %257, i8** %262, align 8
  %263 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %263) #10
  %264 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #10
  br label %265

265:                                              ; preds = %254, %173
  %266 = load i8**, i8*** %17, align 8
  %267 = bitcast i8** %266 to i8*
  call void @zfree(i8* %267)
  %268 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %268) #10
  %269 = bitcast i8*** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %269) #10
  store i32 0, i32* %15, align 4
  br label %270

270:                                              ; preds = %265, %105
  %271 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #10
  br label %272

272:                                              ; preds = %270, %97, %93
  %273 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #10
  %274 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #10
  %275 = load i32, i32* %15, align 4
  switch i32 %275, label %347 [
    i32 0, label %276
    i32 3, label %47
  ]

276:                                              ; preds = %272
  br label %47

277:                                              ; preds = %47
  %278 = load i32, i32* %4, align 4
  %279 = icmp sgt i32 %278, 0
  br i1 %279, label %280, label %312

280:                                              ; preds = %277
  %281 = load i32, i32* %4, align 4
  %282 = icmp sgt i32 %281, 1
  br i1 %282, label %283, label %288

283:                                              ; preds = %280
  %284 = load i8**, i8*** %7, align 8
  %285 = bitcast i8** %284 to i8*
  %286 = load i32, i32* %4, align 4
  %287 = sext i32 %286 to i64
  call void @qsort(i8* %285, i64 %287, i64 8, i32 (i8*, i8*)* @clusterManagerSlotCompare)
  br label %288

288:                                              ; preds = %283, %280
  %289 = call i8* @sdsempty()
  store i8* %289, i8** %3, align 8
  store i32 0, i32* %5, align 4
  br label %290

290:                                              ; preds = %308, %288
  %291 = load i32, i32* %5, align 4
  %292 = load i32, i32* %4, align 4
  %293 = icmp slt i32 %291, %292
  br i1 %293, label %294, label %311

294:                                              ; preds = %290
  %295 = load i32, i32* %5, align 4
  %296 = icmp sgt i32 %295, 0
  br i1 %296, label %297, label %300

297:                                              ; preds = %294
  %298 = load i8*, i8** %3, align 8
  %299 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %298, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @853, i32 0, i32 0), i32 124)
  store i8* %299, i8** %3, align 8
  br label %300

300:                                              ; preds = %297, %294
  %301 = load i8*, i8** %3, align 8
  %302 = load i8**, i8*** %7, align 8
  %303 = load i32, i32* %5, align 4
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds i8*, i8** %302, i64 %304
  %306 = load i8*, i8** %305, align 8
  %307 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %301, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @854, i32 0, i32 0), i8* %306)
  store i8* %307, i8** %3, align 8
  br label %308

308:                                              ; preds = %300
  %309 = load i32, i32* %5, align 4
  %310 = add nsw i32 %309, 1
  store i32 %310, i32* %5, align 4
  br label %290

311:                                              ; preds = %290
  br label %312

312:                                              ; preds = %311, %277
  br label %313

313:                                              ; preds = %312, %42
  %314 = load %31*, %31** %8, align 8
  %315 = icmp ne %31* %314, null
  br i1 %315, label %316, label %319

316:                                              ; preds = %313
  %317 = load %31*, %31** %8, align 8
  %318 = bitcast %31* %317 to i8*
  call void @freeReplyObject(i8* %318)
  br label %319

319:                                              ; preds = %316, %313
  %320 = load i8**, i8*** %7, align 8
  %321 = icmp ne i8** %320, null
  br i1 %321, label %322, label %339

322:                                              ; preds = %319
  store i32 0, i32* %5, align 4
  br label %323

323:                                              ; preds = %333, %322
  %324 = load i32, i32* %5, align 4
  %325 = load i32, i32* %4, align 4
  %326 = icmp slt i32 %324, %325
  br i1 %326, label %327, label %336

327:                                              ; preds = %323
  %328 = load i8**, i8*** %7, align 8
  %329 = load i32, i32* %5, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8*, i8** %328, i64 %330
  %332 = load i8*, i8** %331, align 8
  call void @zfree(i8* %332)
  br label %333

333:                                              ; preds = %327
  %334 = load i32, i32* %5, align 4
  %335 = add nsw i32 %334, 1
  store i32 %335, i32* %5, align 4
  br label %323

336:                                              ; preds = %323
  %337 = load i8**, i8*** %7, align 8
  %338 = bitcast i8** %337 to i8*
  call void @zfree(i8* %338)
  br label %339

339:                                              ; preds = %336, %319
  %340 = load i8*, i8** %3, align 8
  store i32 1, i32* %15, align 4
  %341 = bitcast %31** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %341) #10
  %342 = bitcast i8*** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %342) #10
  %343 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %343) #10
  %344 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #10
  %345 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #10
  %346 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %346) #10
  ret i8* %340

347:                                              ; preds = %272, %86
  unreachable
}

declare dso_local i32 @sdscmp(i8*, i8*) #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: nounwind uwtable
define internal %24* @1444(%28* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca %24*, align 8
  %4 = alloca %31*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %39*, align 8
  store %28* %0, %28** %2, align 8
  %18 = bitcast %24** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #10
  store %24* null, %24** %3, align 8
  %19 = bitcast %31** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #10
  %20 = load %28*, %28** %2, align 8
  %21 = getelementptr inbounds %28, %28* %20, i32 0, i32 0
  %22 = load %10*, %10** %21, align 8
  %23 = call i8* (%10*, i8*, ...) @redisCommand(%10* %22, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @137, i32 0, i32 0))
  %24 = bitcast i8* %23 to %31*
  store %31* %24, %31** %4, align 8
  %25 = load %28*, %28** %2, align 8
  %26 = load %31*, %31** %4, align 8
  %27 = call i32 @1426(%28* %25, %31* %26, i8** null)
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %1
  br label %172

30:                                               ; preds = %1
  %31 = call %24* @listCreate()
  store %24* %31, %24** %3, align 8
  %32 = load %31*, %31** %4, align 8
  %33 = getelementptr inbounds %31, %31* %32, i32 0, i32 4
  %34 = load i8*, i8** %33, align 8
  store i8* %34, i8** %5, align 8
  br label %35

35:                                               ; preds = %170, %163, %30
  %36 = load i8*, i8** %5, align 8
  %37 = call i8* @strstr(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0)) #12
  store i8* %37, i8** %6, align 8
  %38 = icmp ne i8* %37, null
  br i1 %38, label %39, label %171

39:                                               ; preds = %35
  %40 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #10
  store i32 0, i32* %8, align 4
  %41 = load i8*, i8** %6, align 8
  store i8 0, i8* %41, align 1
  %42 = load i8*, i8** %5, align 8
  store i8* %42, i8** %7, align 8
  %43 = load i8*, i8** %6, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %44, i8** %5, align 8
  %45 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #10
  store i8* null, i8** %9, align 8
  %46 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #10
  store i8* null, i8** %10, align 8
  %47 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #10
  store i8* null, i8** %11, align 8
  %48 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #10
  store i8* null, i8** %12, align 8
  br label %49

49:                                               ; preds = %92, %39
  %50 = load i8*, i8** %7, align 8
  %51 = call i8* @strchr(i8* %50, i32 32) #12
  store i8* %51, i8** %6, align 8
  %52 = icmp ne i8* %51, null
  br i1 %52, label %53, label %93

53:                                               ; preds = %49
  %54 = load i8*, i8** %6, align 8
  store i8 0, i8* %54, align 1
  %55 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #10
  %56 = load i8*, i8** %7, align 8
  store i8* %56, i8** %13, align 8
  %57 = load i8*, i8** %6, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %58, i8** %7, align 8
  %59 = load i32, i32* %8, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %53
  %62 = load i8*, i8** %13, align 8
  store i8* %62, i8** %9, align 8
  br label %86

63:                                               ; preds = %53
  %64 = load i32, i32* %8, align 4
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = load i8*, i8** %13, align 8
  store i8* %67, i8** %10, align 8
  br label %85

68:                                               ; preds = %63
  %69 = load i32, i32* %8, align 4
  %70 = icmp eq i32 %69, 2
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = load i8*, i8** %13, align 8
  store i8* %72, i8** %11, align 8
  br label %84

73:                                               ; preds = %68
  %74 = load i32, i32* %8, align 4
  %75 = icmp eq i32 %74, 7
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = load i8*, i8** %13, align 8
  store i8* %77, i8** %12, align 8
  br label %83

78:                                               ; preds = %73
  %79 = load i32, i32* %8, align 4
  %80 = icmp eq i32 %79, 8
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  store i32 6, i32* %14, align 4
  br label %89

82:                                               ; preds = %78
  br label %83

83:                                               ; preds = %82, %76
  br label %84

84:                                               ; preds = %83, %71
  br label %85

85:                                               ; preds = %84, %66
  br label %86

86:                                               ; preds = %85, %61
  %87 = load i32, i32* %8, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %8, align 4
  store i32 0, i32* %14, align 4
  br label %89

89:                                               ; preds = %86, %81
  %90 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #10
  %91 = load i32, i32* %14, align 4
  switch i32 %91, label %182 [
    i32 0, label %92
    i32 6, label %93
  ]

92:                                               ; preds = %89
  br label %49

93:                                               ; preds = %89, %49
  %94 = load i32, i32* %8, align 4
  %95 = icmp eq i32 %94, 7
  br i1 %95, label %96, label %98

96:                                               ; preds = %93
  %97 = load i8*, i8** %7, align 8
  store i8* %97, i8** %12, align 8
  br label %98

98:                                               ; preds = %96, %93
  %99 = load i8*, i8** %9, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %110, label %101

101:                                              ; preds = %98
  %102 = load i8*, i8** %10, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %110, label %104

104:                                              ; preds = %101
  %105 = load i8*, i8** %11, align 8
  %106 = icmp eq i8* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %104
  %108 = load i8*, i8** %12, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %110, label %111

110:                                              ; preds = %107, %104, %101, %98
  store i32 3, i32* %14, align 4
  br label %163

111:                                              ; preds = %107
  %112 = load i8*, i8** %11, align 8
  %113 = call i8* @strstr(i8* %112, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @796, i32 0, i32 0)) #12
  %114 = icmp ne i8* %113, null
  br i1 %114, label %115, label %116

115:                                              ; preds = %111
  store i32 3, i32* %14, align 4
  br label %163

116:                                              ; preds = %111
  %117 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %117) #10
  %118 = load i8*, i8** %11, align 8
  %119 = call i8* @strstr(i8* %118, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @801, i32 0, i32 0)) #12
  %120 = icmp ne i8* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %116
  %122 = load i8*, i8** %12, align 8
  %123 = call i8* @strstr(i8* %122, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @801, i32 0, i32 0)) #12
  %124 = icmp ne i8* %123, null
  br label %125

125:                                              ; preds = %121, %116
  %126 = phi i1 [ true, %116 ], [ %124, %121 ]
  %127 = zext i1 %126 to i32
  store i32 %127, i32* %15, align 4
  %128 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %128) #10
  %129 = load i8*, i8** %11, align 8
  %130 = call i8* @strstr(i8* %129, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @857, i32 0, i32 0)) #12
  %131 = icmp ne i8* %130, null
  %132 = zext i1 %131 to i32
  store i32 %132, i32* %16, align 4
  %133 = load i32, i32* %15, align 4
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %125
  %136 = load i32, i32* %16, align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %135, %125
  %139 = bitcast %39** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %139) #10
  %140 = call i8* @zmalloc(i64 24)
  %141 = bitcast i8* %140 to %39*
  store %39* %141, %39** %17, align 8
  %142 = load i8*, i8** %9, align 8
  %143 = call i8* @sdsnew(i8* %142)
  %144 = load %39*, %39** %17, align 8
  %145 = getelementptr inbounds %39, %39* %144, i32 0, i32 0
  store i8* %143, i8** %145, align 8
  %146 = load i8*, i8** %10, align 8
  %147 = call i8* @sdsnew(i8* %146)
  %148 = load %39*, %39** %17, align 8
  %149 = getelementptr inbounds %39, %39* %148, i32 0, i32 1
  store i8* %147, i8** %149, align 8
  %150 = load %39*, %39** %17, align 8
  %151 = getelementptr inbounds %39, %39* %150, i32 0, i32 2
  store i32 0, i32* %151, align 8
  %152 = load i32, i32* %16, align 4
  %153 = load %39*, %39** %17, align 8
  %154 = getelementptr inbounds %39, %39* %153, i32 0, i32 3
  store i32 %152, i32* %154, align 4
  %155 = load %24*, %24** %3, align 8
  %156 = load %39*, %39** %17, align 8
  %157 = bitcast %39* %156 to i8*
  %158 = call %24* @listAddNodeTail(%24* %155, i8* %157)
  %159 = bitcast %39** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %159) #10
  br label %160

160:                                              ; preds = %138, %135
  %161 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %161) #10
  %162 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %162) #10
  store i32 0, i32* %14, align 4
  br label %163

163:                                              ; preds = %160, %115, %110
  %164 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #10
  %165 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #10
  %166 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #10
  %167 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #10
  %168 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %168) #10
  %169 = load i32, i32* %14, align 4
  switch i32 %169, label %182 [
    i32 0, label %170
    i32 3, label %35
  ]

170:                                              ; preds = %163
  br label %35

171:                                              ; preds = %35
  br label %172

172:                                              ; preds = %171, %29
  %173 = load %31*, %31** %4, align 8
  %174 = icmp ne %31* %173, null
  br i1 %174, label %175, label %178

175:                                              ; preds = %172
  %176 = load %31*, %31** %4, align 8
  %177 = bitcast %31* %176 to i8*
  call void @freeReplyObject(i8* %177)
  br label %178

178:                                              ; preds = %175, %172
  %179 = load %24*, %24** %3, align 8
  store i32 1, i32* %14, align 4
  %180 = bitcast %31** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %180) #10
  %181 = bitcast %24** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %181) #10
  ret %24* %179

182:                                              ; preds = %163, %89
  unreachable
}

declare dso_local i32 @dictAdd(%4*, i8*, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @1445(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = bitcast i8* %6 to %24*
  call void @listRelease(%24* %7)
  ret void
}

; Function Attrs: nounwind uwtable
define internal %28* @1446(i8* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %28*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %30, align 8
  %7 = alloca %25*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %10 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %11 = icmp eq %24* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  store %28* null, %28** %2, align 8
  br label %58

13:                                               ; preds = %1
  %14 = bitcast %28** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  store %28* null, %28** %4, align 8
  %15 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %16 = call i8* @sdsempty()
  store i8* %16, i8** %5, align 8
  %17 = load i8*, i8** %5, align 8
  %18 = load i8*, i8** %3, align 8
  %19 = call i8* @sdscpy(i8* %17, i8* %18)
  store i8* %19, i8** %5, align 8
  %20 = load i8*, i8** %5, align 8
  call void @sdstolower(i8* %20)
  %21 = bitcast %30* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %21) #10
  %22 = bitcast %25** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  %23 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %23, %30* %6)
  br label %24

24:                                               ; preds = %50, %13
  %25 = call %25* @listNext(%30* %6)
  store %25* %25, %25** %7, align 8
  %26 = icmp ne %25* %25, null
  br i1 %26, label %27, label %51

27:                                               ; preds = %24
  %28 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #10
  %29 = load %25*, %25** %7, align 8
  %30 = getelementptr inbounds %25, %25* %29, i32 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast i8* %31 to %28*
  store %28* %32, %28** %8, align 8
  %33 = load %28*, %28** %8, align 8
  %34 = getelementptr inbounds %28, %28* %33, i32 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = icmp ne i8* %35, null
  br i1 %36, label %37, label %46

37:                                               ; preds = %27
  %38 = load %28*, %28** %8, align 8
  %39 = getelementptr inbounds %28, %28* %38, i32 0, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = load i8*, i8** %5, align 8
  %42 = call i32 @sdscmp(i8* %40, i8* %41)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %37
  %45 = load %28*, %28** %8, align 8
  store %28* %45, %28** %4, align 8
  store i32 3, i32* %9, align 4
  br label %47

46:                                               ; preds = %37, %27
  store i32 0, i32* %9, align 4
  br label %47

47:                                               ; preds = %46, %44
  %48 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #10
  %49 = load i32, i32* %9, align 4
  switch i32 %49, label %60 [
    i32 0, label %50
    i32 3, label %51
  ]

50:                                               ; preds = %47
  br label %24

51:                                               ; preds = %47, %24
  %52 = load i8*, i8** %5, align 8
  call void @sdsfree(i8* %52)
  %53 = load %28*, %28** %4, align 8
  store %28* %53, %28** %2, align 8
  store i32 1, i32* %9, align 4
  %54 = bitcast %25** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #10
  %55 = bitcast %30* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %55) #10
  %56 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #10
  %57 = bitcast %28** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #10
  br label %58

58:                                               ; preds = %51, %12
  %59 = load %28*, %28** %2, align 8
  ret %28* %59

60:                                               ; preds = %47
  unreachable
}

declare dso_local i8* @sdscpy(i8*, i8*) #2

declare dso_local void @sdstolower(i8*) #2

; Function Attrs: nounwind uwtable
define internal void @1447(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  %4 = icmp eq %24* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = call %24* @listCreate()
  store %24* %6, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  br label %7

7:                                                ; preds = %5, %1
  %8 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  %9 = load i8*, i8** %2, align 8
  %10 = call %24* @listAddNodeTail(%24* %8, i8* %9)
  %11 = load i8*, i8** %2, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %11)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @1448(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %24*, align 8
  %7 = alloca %24*, align 8
  %8 = alloca %24*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %28*, align 8
  %12 = alloca %30, align 8
  %13 = alloca %25*, align 8
  %14 = alloca %28*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %31*, align 8
  %17 = alloca %28*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca %31*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca %28*, align 8
  %29 = alloca i32, align 4
  %30 = alloca %28*, align 8
  %31 = alloca %28*, align 8
  %32 = alloca %28*, align 8
  %33 = alloca %28*, align 8
  %34 = alloca i32, align 4
  %35 = alloca %28*, align 8
  %36 = alloca %28*, align 8
  %37 = alloca i8*, align 8
  %38 = alloca i32, align 4
  %39 = alloca i8*, align 8
  %40 = alloca %30, align 8
  %41 = alloca %25*, align 8
  %42 = alloca %28*, align 8
  %43 = alloca i32, align 4
  %44 = alloca %28*, align 8
  %45 = alloca %28*, align 8
  %46 = alloca i32, align 4
  %47 = alloca %28*, align 8
  %48 = alloca %31*, align 8
  %49 = alloca %28*, align 8
  %50 = alloca %31*, align 8
  store i32 %0, i32* %3, align 4
  %51 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #10
  %52 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %53 = and i32 %52, 1024
  store i32 %53, i32* %4, align 4
  %54 = load i32, i32* getelementptr inbounds (%23, %23* @772, i32 0, i32 2), align 8
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %1
  %57 = load i32, i32* %4, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = load i32, i32* getelementptr inbounds (%23, %23* @772, i32 0, i32 2), align 8
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([351 x i8], [351 x i8]* @877, i32 0, i32 0), i32 %60)
  call void @exit(i32 1) #14
  unreachable

61:                                               ; preds = %56, %1
  %62 = load i32, i32* %3, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @878, i32 0, i32 0), i32 %62)
  %63 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %63) #10
  store i32 1, i32* %5, align 4
  %64 = bitcast %24** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #10
  %65 = call %24* @listCreate()
  store %24* %65, %24** %6, align 8
  %66 = bitcast %24** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %66) #10
  %67 = call %24* @listCreate()
  store %24* %67, %24** %7, align 8
  %68 = bitcast %24** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %68) #10
  %69 = call %24* @listCreate()
  store %24* %69, %24** %8, align 8
  %70 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %70) #10
  %71 = call i8* @sdsempty()
  store i8* %71, i8** %9, align 8
  %72 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #10
  %73 = call i8* @sdsempty()
  store i8* %73, i8** %10, align 8
  %74 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #10
  store %28* null, %28** %11, align 8
  %75 = bitcast %30* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %75) #10
  %76 = bitcast %25** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #10
  %77 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %77, %30* %12)
  br label %78

78:                                               ; preds = %155, %152, %61
  %79 = call %25* @listNext(%30* %12)
  store %25* %79, %25** %13, align 8
  %80 = icmp ne %25* %79, null
  br i1 %80, label %81, label %156

81:                                               ; preds = %78
  %82 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82) #10
  %83 = load %25*, %25** %13, align 8
  %84 = getelementptr inbounds %25, %25* %83, i32 0, i32 2
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast i8* %85 to %28*
  store %28* %86, %28** %14, align 8
  %87 = load %28*, %28** %14, align 8
  %88 = getelementptr inbounds %28, %28* %87, i32 0, i32 7
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 2
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %81
  store i32 2, i32* %15, align 4
  br label %152

93:                                               ; preds = %81
  %94 = load %28*, %28** %14, align 8
  %95 = getelementptr inbounds %28, %28* %94, i32 0, i32 11
  %96 = load i32, i32* %3, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [16384 x i8], [16384 x i8]* %95, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = icmp ne i8 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %93
  %102 = load %24*, %24** %6, align 8
  %103 = load %28*, %28** %14, align 8
  %104 = bitcast %28* %103 to i8*
  %105 = call %24* @listAddNodeTail(%24* %102, i8* %104)
  br label %151

106:                                              ; preds = %93
  %107 = bitcast %31** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %107) #10
  %108 = load %28*, %28** %14, align 8
  %109 = getelementptr inbounds %28, %28* %108, i32 0, i32 0
  %110 = load %10*, %10** %109, align 8
  %111 = load i32, i32* %3, align 4
  %112 = call i8* (%10*, i8*, ...) @redisCommand(%10* %110, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @879, i32 0, i32 0), i32 %111)
  %113 = bitcast i8* %112 to %31*
  store %31* %113, %31** %16, align 8
  %114 = load %28*, %28** %14, align 8
  %115 = load %31*, %31** %16, align 8
  %116 = call i32 @1426(%28* %114, %31* %115, i8** null)
  store i32 %116, i32* %5, align 4
  %117 = load i32, i32* %5, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %136

119:                                              ; preds = %106
  %120 = load %31*, %31** %16, align 8
  %121 = getelementptr inbounds %31, %31* %120, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = icmp sgt i64 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %119
  %125 = load i32, i32* %3, align 4
  %126 = load %28*, %28** %14, align 8
  %127 = getelementptr inbounds %28, %28* %126, i32 0, i32 2
  %128 = load i8*, i8** %127, align 8
  %129 = load %28*, %28** %14, align 8
  %130 = getelementptr inbounds %28, %28* %129, i32 0, i32 3
  %131 = load i32, i32* %130, align 8
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @880, i32 0, i32 0), i32 %125, i8* %128, i32 %131)
  %132 = load %24*, %24** %6, align 8
  %133 = load %28*, %28** %14, align 8
  %134 = bitcast %28* %133 to i8*
  %135 = call %24* @listAddNodeTail(%24* %132, i8* %134)
  br label %136

136:                                              ; preds = %124, %119, %106
  %137 = load %31*, %31** %16, align 8
  %138 = icmp ne %31* %137, null
  br i1 %138, label %139, label %142

139:                                              ; preds = %136
  %140 = load %31*, %31** %16, align 8
  %141 = bitcast %31* %140 to i8*
  call void @freeReplyObject(i8* %141)
  br label %142

142:                                              ; preds = %139, %136
  %143 = load i32, i32* %5, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  store i32 4, i32* %15, align 4
  br label %147

146:                                              ; preds = %142
  store i32 0, i32* %15, align 4
  br label %147

147:                                              ; preds = %145, %146
  %148 = bitcast %31** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #10
  %149 = load i32, i32* %15, align 4
  switch i32 %149, label %152 [
    i32 0, label %150
  ]

150:                                              ; preds = %147
  br label %151

151:                                              ; preds = %150, %101
  store i32 0, i32* %15, align 4
  br label %152

152:                                              ; preds = %151, %147, %92
  %153 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %153) #10
  %154 = load i32, i32* %15, align 4
  switch i32 %154, label %995 [
    i32 0, label %155
    i32 2, label %78
    i32 4, label %988
  ]

155:                                              ; preds = %152
  br label %78

156:                                              ; preds = %78
  %157 = load %24*, %24** %6, align 8
  %158 = getelementptr inbounds %24, %24* %157, i32 0, i32 5
  %159 = load i64, i64* %158, align 8
  %160 = icmp eq i64 %159, 1
  br i1 %160, label %161, label %168

161:                                              ; preds = %156
  %162 = load %24*, %24** %6, align 8
  %163 = getelementptr inbounds %24, %24* %162, i32 0, i32 0
  %164 = load %25*, %25** %163, align 8
  %165 = getelementptr inbounds %25, %25* %164, i32 0, i32 2
  %166 = load i8*, i8** %165, align 8
  %167 = bitcast i8* %166 to %28*
  store %28* %167, %28** %11, align 8
  br label %168

168:                                              ; preds = %161, %156
  %169 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %169, %30* %12)
  br label %170

170:                                              ; preds = %389, %386, %168
  %171 = call %25* @listNext(%30* %12)
  store %25* %171, %25** %13, align 8
  %172 = icmp ne %25* %171, null
  br i1 %172, label %173, label %390

173:                                              ; preds = %170
  %174 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %174) #10
  %175 = load %25*, %25** %13, align 8
  %176 = getelementptr inbounds %25, %25* %175, i32 0, i32 2
  %177 = load i8*, i8** %176, align 8
  %178 = bitcast i8* %177 to %28*
  store %28* %178, %28** %17, align 8
  %179 = load %28*, %28** %17, align 8
  %180 = getelementptr inbounds %28, %28* %179, i32 0, i32 7
  %181 = load i32, i32* %180, align 8
  %182 = and i32 %181, 2
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %173
  store i32 5, i32* %15, align 4
  br label %386

185:                                              ; preds = %173
  %186 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %186) #10
  store i32 0, i32* %18, align 4
  %187 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %187) #10
  store i32 0, i32* %19, align 4
  %188 = load %28*, %28** %17, align 8
  %189 = getelementptr inbounds %28, %28* %188, i32 0, i32 15
  %190 = load i8**, i8*** %189, align 8
  %191 = icmp ne i8** %190, null
  br i1 %191, label %192, label %247

192:                                              ; preds = %185
  %193 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %193) #10
  store i32 0, i32* %20, align 4
  br label %194

194:                                              ; preds = %241, %192
  %195 = load i32, i32* %20, align 4
  %196 = load %28*, %28** %17, align 8
  %197 = getelementptr inbounds %28, %28* %196, i32 0, i32 17
  %198 = load i32, i32* %197, align 8
  %199 = icmp slt i32 %195, %198
  br i1 %199, label %201, label %200

200:                                              ; preds = %194
  store i32 7, i32* %15, align 4
  br label %244

201:                                              ; preds = %194
  %202 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #10
  %203 = load %28*, %28** %17, align 8
  %204 = getelementptr inbounds %28, %28* %203, i32 0, i32 15
  %205 = load i8**, i8*** %204, align 8
  %206 = load i32, i32* %20, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i8*, i8** %205, i64 %207
  %209 = load i8*, i8** %208, align 8
  store i8* %209, i8** %21, align 8
  %210 = load i8*, i8** %21, align 8
  %211 = call i32 @atoi(i8* %210) #12
  %212 = load i32, i32* %3, align 4
  %213 = icmp eq i32 %211, %212
  br i1 %213, label %214, label %236

214:                                              ; preds = %201
  %215 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %215) #10
  %216 = load %24*, %24** %7, align 8
  %217 = getelementptr inbounds %24, %24* %216, i32 0, i32 5
  %218 = load i64, i64* %217, align 8
  %219 = icmp eq i64 %218, 0
  %220 = zext i1 %219 to i64
  %221 = select i1 %219, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @836, i32 0, i32 0)
  store i8* %221, i8** %22, align 8
  %222 = load i8*, i8** %9, align 8
  %223 = load i8*, i8** %22, align 8
  %224 = load %28*, %28** %17, align 8
  %225 = getelementptr inbounds %28, %28* %224, i32 0, i32 2
  %226 = load i8*, i8** %225, align 8
  %227 = load %28*, %28** %17, align 8
  %228 = getelementptr inbounds %28, %28* %227, i32 0, i32 3
  %229 = load i32, i32* %228, align 8
  %230 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %222, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @881, i32 0, i32 0), i8* %223, i8* %226, i32 %229)
  store i8* %230, i8** %9, align 8
  %231 = load %24*, %24** %7, align 8
  %232 = load %28*, %28** %17, align 8
  %233 = bitcast %28* %232 to i8*
  %234 = call %24* @listAddNodeTail(%24* %231, i8* %233)
  store i32 1, i32* %18, align 4
  store i32 7, i32* %15, align 4
  %235 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %235) #10
  br label %237

236:                                              ; preds = %201
  store i32 0, i32* %15, align 4
  br label %237

237:                                              ; preds = %236, %214
  %238 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #10
  %239 = load i32, i32* %15, align 4
  switch i32 %239, label %244 [
    i32 0, label %240
  ]

240:                                              ; preds = %237
  br label %241

241:                                              ; preds = %240
  %242 = load i32, i32* %20, align 4
  %243 = add nsw i32 %242, 2
  store i32 %243, i32* %20, align 4
  br label %194

244:                                              ; preds = %237, %200
  %245 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %245) #10
  br label %246

246:                                              ; preds = %244
  br label %247

247:                                              ; preds = %246, %185
  %248 = load i32, i32* %18, align 4
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %310, label %250

250:                                              ; preds = %247
  %251 = load %28*, %28** %17, align 8
  %252 = getelementptr inbounds %28, %28* %251, i32 0, i32 16
  %253 = load i8**, i8*** %252, align 8
  %254 = icmp ne i8** %253, null
  br i1 %254, label %255, label %310

255:                                              ; preds = %250
  %256 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %256) #10
  store i32 0, i32* %23, align 4
  br label %257

257:                                              ; preds = %304, %255
  %258 = load i32, i32* %23, align 4
  %259 = load %28*, %28** %17, align 8
  %260 = getelementptr inbounds %28, %28* %259, i32 0, i32 18
  %261 = load i32, i32* %260, align 4
  %262 = icmp slt i32 %258, %261
  br i1 %262, label %264, label %263

263:                                              ; preds = %257
  store i32 10, i32* %15, align 4
  br label %307

264:                                              ; preds = %257
  %265 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %265) #10
  %266 = load %28*, %28** %17, align 8
  %267 = getelementptr inbounds %28, %28* %266, i32 0, i32 16
  %268 = load i8**, i8*** %267, align 8
  %269 = load i32, i32* %23, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8*, i8** %268, i64 %270
  %272 = load i8*, i8** %271, align 8
  store i8* %272, i8** %24, align 8
  %273 = load i8*, i8** %24, align 8
  %274 = call i32 @atoi(i8* %273) #12
  %275 = load i32, i32* %3, align 4
  %276 = icmp eq i32 %274, %275
  br i1 %276, label %277, label %299

277:                                              ; preds = %264
  %278 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %278) #10
  %279 = load %24*, %24** %8, align 8
  %280 = getelementptr inbounds %24, %24* %279, i32 0, i32 5
  %281 = load i64, i64* %280, align 8
  %282 = icmp eq i64 %281, 0
  %283 = zext i1 %282 to i64
  %284 = select i1 %282, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @836, i32 0, i32 0)
  store i8* %284, i8** %25, align 8
  %285 = load i8*, i8** %10, align 8
  %286 = load i8*, i8** %25, align 8
  %287 = load %28*, %28** %17, align 8
  %288 = getelementptr inbounds %28, %28* %287, i32 0, i32 2
  %289 = load i8*, i8** %288, align 8
  %290 = load %28*, %28** %17, align 8
  %291 = getelementptr inbounds %28, %28* %290, i32 0, i32 3
  %292 = load i32, i32* %291, align 8
  %293 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %285, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @881, i32 0, i32 0), i8* %286, i8* %289, i32 %292)
  store i8* %293, i8** %10, align 8
  %294 = load %24*, %24** %8, align 8
  %295 = load %28*, %28** %17, align 8
  %296 = bitcast %28* %295 to i8*
  %297 = call %24* @listAddNodeTail(%24* %294, i8* %296)
  store i32 1, i32* %19, align 4
  store i32 10, i32* %15, align 4
  %298 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %298) #10
  br label %300

299:                                              ; preds = %264
  store i32 0, i32* %15, align 4
  br label %300

300:                                              ; preds = %299, %277
  %301 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %301) #10
  %302 = load i32, i32* %15, align 4
  switch i32 %302, label %307 [
    i32 0, label %303
  ]

303:                                              ; preds = %300
  br label %304

304:                                              ; preds = %303
  %305 = load i32, i32* %23, align 4
  %306 = add nsw i32 %305, 2
  store i32 %306, i32* %23, align 4
  br label %257

307:                                              ; preds = %300, %263
  %308 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %308) #10
  br label %309

309:                                              ; preds = %307
  br label %310

310:                                              ; preds = %309, %250, %247
  %311 = load i32, i32* %18, align 4
  %312 = icmp ne i32 %311, 0
  br i1 %312, label %382, label %313

313:                                              ; preds = %310
  %314 = load i32, i32* %19, align 4
  %315 = icmp ne i32 %314, 0
  br i1 %315, label %382, label %316

316:                                              ; preds = %313
  %317 = load %28*, %28** %17, align 8
  %318 = load %28*, %28** %11, align 8
  %319 = icmp ne %28* %317, %318
  br i1 %319, label %320, label %382

320:                                              ; preds = %316
  %321 = bitcast %31** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %321) #10
  %322 = load %28*, %28** %17, align 8
  %323 = getelementptr inbounds %28, %28* %322, i32 0, i32 0
  %324 = load %10*, %10** %323, align 8
  %325 = load i32, i32* %3, align 4
  %326 = call i8* (%10*, i8*, ...) @redisCommand(%10* %324, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @879, i32 0, i32 0), i32 %325)
  %327 = bitcast i8* %326 to %31*
  store %31* %327, %31** %26, align 8
  %328 = load %28*, %28** %17, align 8
  %329 = load %31*, %31** %26, align 8
  %330 = call i32 @1426(%28* %328, %31* %329, i8** null)
  store i32 %330, i32* %5, align 4
  %331 = load i32, i32* %5, align 4
  %332 = icmp ne i32 %331, 0
  br i1 %332, label %333, label %367

333:                                              ; preds = %320
  %334 = load %31*, %31** %26, align 8
  %335 = getelementptr inbounds %31, %31* %334, i32 0, i32 1
  %336 = load i64, i64* %335, align 8
  %337 = icmp sgt i64 %336, 0
  br i1 %337, label %338, label %367

338:                                              ; preds = %333
  %339 = load i32, i32* %3, align 4
  %340 = load %28*, %28** %17, align 8
  %341 = getelementptr inbounds %28, %28* %340, i32 0, i32 2
  %342 = load i8*, i8** %341, align 8
  %343 = load %28*, %28** %17, align 8
  %344 = getelementptr inbounds %28, %28* %343, i32 0, i32 3
  %345 = load i32, i32* %344, align 8
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @882, i32 0, i32 0), i32 %339, i8* %342, i32 %345)
  %346 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %346) #10
  %347 = load %24*, %24** %8, align 8
  %348 = getelementptr inbounds %24, %24* %347, i32 0, i32 5
  %349 = load i64, i64* %348, align 8
  %350 = icmp eq i64 %349, 0
  %351 = zext i1 %350 to i64
  %352 = select i1 %350, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @836, i32 0, i32 0)
  store i8* %352, i8** %27, align 8
  %353 = load i8*, i8** %10, align 8
  %354 = load i8*, i8** %27, align 8
  %355 = load %28*, %28** %17, align 8
  %356 = getelementptr inbounds %28, %28* %355, i32 0, i32 2
  %357 = load i8*, i8** %356, align 8
  %358 = load %28*, %28** %17, align 8
  %359 = getelementptr inbounds %28, %28* %358, i32 0, i32 3
  %360 = load i32, i32* %359, align 8
  %361 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %353, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @883, i32 0, i32 0), i8* %354, i8* %357, i32 %360)
  store i8* %361, i8** %10, align 8
  %362 = load %24*, %24** %8, align 8
  %363 = load %28*, %28** %17, align 8
  %364 = bitcast %28* %363 to i8*
  %365 = call %24* @listAddNodeTail(%24* %362, i8* %364)
  %366 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %366) #10
  br label %367

367:                                              ; preds = %338, %333, %320
  %368 = load %31*, %31** %26, align 8
  %369 = icmp ne %31* %368, null
  br i1 %369, label %370, label %373

370:                                              ; preds = %367
  %371 = load %31*, %31** %26, align 8
  %372 = bitcast %31* %371 to i8*
  call void @freeReplyObject(i8* %372)
  br label %373

373:                                              ; preds = %370, %367
  %374 = load i32, i32* %5, align 4
  %375 = icmp ne i32 %374, 0
  br i1 %375, label %377, label %376

376:                                              ; preds = %373
  store i32 4, i32* %15, align 4
  br label %378

377:                                              ; preds = %373
  store i32 0, i32* %15, align 4
  br label %378

378:                                              ; preds = %376, %377
  %379 = bitcast %31** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %379) #10
  %380 = load i32, i32* %15, align 4
  switch i32 %380, label %383 [
    i32 0, label %381
  ]

381:                                              ; preds = %378
  br label %382

382:                                              ; preds = %381, %316, %313, %310
  store i32 0, i32* %15, align 4
  br label %383

383:                                              ; preds = %382, %378
  %384 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %384) #10
  %385 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %385) #10
  br label %386

386:                                              ; preds = %383, %184
  %387 = bitcast %28** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %387) #10
  %388 = load i32, i32* %15, align 4
  switch i32 %388, label %995 [
    i32 0, label %389
    i32 5, label %170
    i32 4, label %988
  ]

389:                                              ; preds = %386
  br label %170

390:                                              ; preds = %170
  %391 = load i8*, i8** %9, align 8
  %392 = call i64 @1432(i8* %391)
  %393 = icmp ugt i64 %392, 0
  br i1 %393, label %394, label %397

394:                                              ; preds = %390
  %395 = load i8*, i8** %9, align 8
  %396 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @884, i32 0, i32 0), i8* %395)
  br label %397

397:                                              ; preds = %394, %390
  %398 = load i8*, i8** %10, align 8
  %399 = call i64 @1432(i8* %398)
  %400 = icmp ugt i64 %399, 0
  br i1 %400, label %401, label %404

401:                                              ; preds = %397
  %402 = load i8*, i8** %10, align 8
  %403 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @885, i32 0, i32 0), i8* %402)
  br label %404

404:                                              ; preds = %401, %397
  %405 = load %28*, %28** %11, align 8
  %406 = icmp eq %28* %405, null
  br i1 %406, label %407, label %450

407:                                              ; preds = %404
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @886, i32 0, i32 0))
  %408 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %409 = load i32, i32* %3, align 4
  %410 = call %28* @1453(%24* %408, i32 %409, i8** null)
  store %28* %410, %28** %11, align 8
  %411 = load %28*, %28** %11, align 8
  %412 = icmp eq %28* %411, null
  br i1 %412, label %413, label %414

413:                                              ; preds = %407
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @887, i32 0, i32 0))
  store i32 0, i32* %5, align 4
  br label %988

414:                                              ; preds = %407
  %415 = load %28*, %28** %11, align 8
  %416 = getelementptr inbounds %28, %28* %415, i32 0, i32 2
  %417 = load i8*, i8** %416, align 8
  %418 = load %28*, %28** %11, align 8
  %419 = getelementptr inbounds %28, %28* %418, i32 0, i32 3
  %420 = load i32, i32* %419, align 8
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @888, i32 0, i32 0), i8* %417, i32 %420)
  %421 = load %28*, %28** %11, align 8
  %422 = load i32, i32* %3, align 4
  %423 = call i32 @1454(%28* %421, i32 %422)
  store i32 %423, i32* %5, align 4
  %424 = load i32, i32* %5, align 4
  %425 = icmp ne i32 %424, 0
  br i1 %425, label %427, label %426

426:                                              ; preds = %414
  br label %988

427:                                              ; preds = %414
  %428 = load %28*, %28** %11, align 8
  %429 = load i32, i32* %3, align 4
  %430 = call i32 @1455(%28* %428, i32 %429, i32 0)
  store i32 %430, i32* %5, align 4
  %431 = load i32, i32* %5, align 4
  %432 = icmp ne i32 %431, 0
  br i1 %432, label %434, label %433

433:                                              ; preds = %427
  br label %988

434:                                              ; preds = %427
  %435 = load %28*, %28** %11, align 8
  %436 = getelementptr inbounds %28, %28* %435, i32 0, i32 11
  %437 = load i32, i32* %3, align 4
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds [16384 x i8], [16384 x i8]* %436, i64 0, i64 %438
  store i8 1, i8* %439, align 1
  %440 = load %28*, %28** %11, align 8
  %441 = call i32 @1456(%28* %440)
  store i32 %441, i32* %5, align 4
  %442 = load i32, i32* %5, align 4
  %443 = icmp ne i32 %442, 0
  br i1 %443, label %445, label %444

444:                                              ; preds = %434
  br label %988

445:                                              ; preds = %434
  %446 = load %24*, %24** %7, align 8
  %447 = load %28*, %28** %11, align 8
  call void @1457(%24* %446, %28* %447)
  %448 = load %24*, %24** %8, align 8
  %449 = load %28*, %28** %11, align 8
  call void @1457(%24* %448, %28* %449)
  br label %450

450:                                              ; preds = %445, %404
  %451 = load %24*, %24** %6, align 8
  %452 = getelementptr inbounds %24, %24* %451, i32 0, i32 5
  %453 = load i64, i64* %452, align 8
  %454 = icmp ugt i64 %453, 1
  br i1 %454, label %455, label %518

455:                                              ; preds = %450
  %456 = load %28*, %28** %11, align 8
  %457 = icmp ne %28* %456, null
  br i1 %457, label %458, label %459

458:                                              ; preds = %455
  br label %461

459:                                              ; preds = %455
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @889, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 4776, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @890, i32 0, i32 0)) #14
  unreachable

460:                                              ; No predecessors!
  br label %461

461:                                              ; preds = %460, %458
  %462 = load %24*, %24** %6, align 8
  call void @listRewind(%24* %462, %30* %12)
  br label %463

463:                                              ; preds = %516, %513, %461
  %464 = call %25* @listNext(%30* %12)
  store %25* %464, %25** %13, align 8
  %465 = icmp ne %25* %464, null
  br i1 %465, label %466, label %517

466:                                              ; preds = %463
  %467 = bitcast %28** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %467) #10
  %468 = load %25*, %25** %13, align 8
  %469 = getelementptr inbounds %25, %25* %468, i32 0, i32 2
  %470 = load i8*, i8** %469, align 8
  %471 = bitcast i8* %470 to %28*
  store %28* %471, %28** %28, align 8
  %472 = load %28*, %28** %28, align 8
  %473 = load %28*, %28** %11, align 8
  %474 = icmp eq %28* %472, %473
  br i1 %474, label %475, label %476

475:                                              ; preds = %466
  store i32 13, i32* %15, align 4
  br label %513

476:                                              ; preds = %466
  %477 = load %28*, %28** %28, align 8
  %478 = load i32, i32* %3, align 4
  %479 = call i32 @1458(%28* %477, i32 %478, i32 1)
  store i32 %479, i32* %5, align 4
  %480 = load i32, i32* %5, align 4
  %481 = icmp ne i32 %480, 0
  br i1 %481, label %483, label %482

482:                                              ; preds = %476
  store i32 4, i32* %15, align 4
  br label %513

483:                                              ; preds = %476
  %484 = load %28*, %28** %28, align 8
  %485 = getelementptr inbounds %28, %28* %484, i32 0, i32 11
  %486 = load i32, i32* %3, align 4
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds [16384 x i8], [16384 x i8]* %485, i64 0, i64 %487
  store i8 0, i8* %488, align 1
  %489 = load %28*, %28** %28, align 8
  %490 = load %28*, %28** %11, align 8
  %491 = load i32, i32* %3, align 4
  %492 = call i32 @1459(%28* %489, %28* %490, i32 %491, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @891, i32 0, i32 0), i8** null)
  store i32 %492, i32* %5, align 4
  %493 = load i32, i32* %5, align 4
  %494 = icmp ne i32 %493, 0
  br i1 %494, label %496, label %495

495:                                              ; preds = %483
  store i32 4, i32* %15, align 4
  br label %513

496:                                              ; preds = %483
  %497 = load %28*, %28** %28, align 8
  %498 = load %28*, %28** %11, align 8
  %499 = load i32, i32* %3, align 4
  %500 = call i32 @1459(%28* %497, %28* %498, i32 %499, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @892, i32 0, i32 0), i8** null)
  store i32 %500, i32* %5, align 4
  %501 = load i32, i32* %5, align 4
  %502 = icmp ne i32 %501, 0
  br i1 %502, label %504, label %503

503:                                              ; preds = %496
  store i32 4, i32* %15, align 4
  br label %513

504:                                              ; preds = %496
  %505 = load %24*, %24** %8, align 8
  %506 = load %28*, %28** %28, align 8
  call void @1457(%24* %505, %28* %506)
  %507 = load %24*, %24** %8, align 8
  %508 = load %28*, %28** %28, align 8
  %509 = bitcast %28* %508 to i8*
  %510 = call %24* @listAddNodeTail(%24* %507, i8* %509)
  %511 = load %24*, %24** %7, align 8
  %512 = load %28*, %28** %28, align 8
  call void @1457(%24* %511, %28* %512)
  store i32 0, i32* %15, align 4
  br label %513

513:                                              ; preds = %503, %495, %482, %504, %475
  %514 = bitcast %28** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %514) #10
  %515 = load i32, i32* %15, align 4
  switch i32 %515, label %995 [
    i32 0, label %516
    i32 13, label %463
    i32 4, label %988
  ]

516:                                              ; preds = %513
  br label %463

517:                                              ; preds = %463
  br label %518

518:                                              ; preds = %517, %450
  store i32 128, i32* %29, align 4
  %519 = load %24*, %24** %7, align 8
  %520 = getelementptr inbounds %24, %24* %519, i32 0, i32 5
  %521 = load i64, i64* %520, align 8
  %522 = icmp eq i64 %521, 1
  br i1 %522, label %523, label %565

523:                                              ; preds = %518
  %524 = load %24*, %24** %8, align 8
  %525 = getelementptr inbounds %24, %24* %524, i32 0, i32 5
  %526 = load i64, i64* %525, align 8
  %527 = icmp eq i64 %526, 1
  br i1 %527, label %528, label %565

528:                                              ; preds = %523
  %529 = bitcast %28** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %529) #10
  %530 = load %24*, %24** %7, align 8
  %531 = getelementptr inbounds %24, %24* %530, i32 0, i32 0
  %532 = load %25*, %25** %531, align 8
  %533 = getelementptr inbounds %25, %25* %532, i32 0, i32 2
  %534 = load i8*, i8** %533, align 8
  %535 = bitcast i8* %534 to %28*
  store %28* %535, %28** %30, align 8
  %536 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %536) #10
  %537 = load %24*, %24** %8, align 8
  %538 = getelementptr inbounds %24, %24* %537, i32 0, i32 0
  %539 = load %25*, %25** %538, align 8
  %540 = getelementptr inbounds %25, %25* %539, i32 0, i32 2
  %541 = load i8*, i8** %540, align 8
  %542 = bitcast i8* %541 to %28*
  store %28* %542, %28** %31, align 8
  %543 = load i32, i32* %3, align 4
  %544 = load %28*, %28** %30, align 8
  %545 = getelementptr inbounds %28, %28* %544, i32 0, i32 2
  %546 = load i8*, i8** %545, align 8
  %547 = load %28*, %28** %30, align 8
  %548 = getelementptr inbounds %28, %28* %547, i32 0, i32 3
  %549 = load i32, i32* %548, align 8
  %550 = load %28*, %28** %31, align 8
  %551 = getelementptr inbounds %28, %28* %550, i32 0, i32 2
  %552 = load i8*, i8** %551, align 8
  %553 = load %28*, %28** %31, align 8
  %554 = getelementptr inbounds %28, %28* %553, i32 0, i32 3
  %555 = load i32, i32* %554, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @893, i32 0, i32 0), i32 %543, i8* %546, i32 %549, i8* %552, i32 %555)
  %556 = load i32, i32* %29, align 4
  %557 = or i32 %556, 4
  store i32 %557, i32* %29, align 4
  %558 = load %28*, %28** %30, align 8
  %559 = load %28*, %28** %31, align 8
  %560 = load i32, i32* %3, align 4
  %561 = load i32, i32* %29, align 4
  %562 = call i32 @1460(%28* %558, %28* %559, i32 %560, i32 %561, i8** null)
  store i32 %562, i32* %5, align 4
  %563 = bitcast %28** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %563) #10
  %564 = bitcast %28** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %564) #10
  br label %987

565:                                              ; preds = %523, %518
  %566 = load %24*, %24** %7, align 8
  %567 = getelementptr inbounds %24, %24* %566, i32 0, i32 5
  %568 = load i64, i64* %567, align 8
  %569 = icmp eq i64 %568, 0
  br i1 %569, label %570, label %663

570:                                              ; preds = %565
  %571 = load %24*, %24** %8, align 8
  %572 = getelementptr inbounds %24, %24* %571, i32 0, i32 5
  %573 = load i64, i64* %572, align 8
  %574 = icmp ugt i64 %573, 0
  br i1 %574, label %575, label %663

575:                                              ; preds = %570
  %576 = load i32, i32* %3, align 4
  %577 = load %28*, %28** %11, align 8
  %578 = getelementptr inbounds %28, %28* %577, i32 0, i32 2
  %579 = load i8*, i8** %578, align 8
  %580 = load %28*, %28** %11, align 8
  %581 = getelementptr inbounds %28, %28* %580, i32 0, i32 3
  %582 = load i32, i32* %581, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @894, i32 0, i32 0), i32 %576, i8* %579, i32 %582)
  %583 = load i32, i32* %29, align 4
  %584 = or i32 %583, 2
  store i32 %584, i32* %29, align 4
  %585 = load %24*, %24** %8, align 8
  call void @listRewind(%24* %585, %30* %12)
  br label %586

586:                                              ; preds = %626, %623, %575
  %587 = call %25* @listNext(%30* %12)
  store %25* %587, %25** %13, align 8
  %588 = icmp ne %25* %587, null
  br i1 %588, label %589, label %627

589:                                              ; preds = %586
  %590 = bitcast %28** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %590) #10
  %591 = load %25*, %25** %13, align 8
  %592 = getelementptr inbounds %25, %25* %591, i32 0, i32 2
  %593 = load i8*, i8** %592, align 8
  %594 = bitcast i8* %593 to %28*
  store %28* %594, %28** %32, align 8
  %595 = load %28*, %28** %32, align 8
  %596 = load %28*, %28** %11, align 8
  %597 = icmp eq %28* %595, %596
  br i1 %597, label %598, label %599

598:                                              ; preds = %589
  store i32 15, i32* %15, align 4
  br label %623

599:                                              ; preds = %589
  %600 = load %28*, %28** %32, align 8
  %601 = load %28*, %28** %11, align 8
  %602 = load i32, i32* %3, align 4
  %603 = load i32, i32* %29, align 4
  %604 = call i32 @1460(%28* %600, %28* %601, i32 %602, i32 %603, i8** null)
  store i32 %604, i32* %5, align 4
  %605 = load i32, i32* %5, align 4
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %608, label %607

607:                                              ; preds = %599
  store i32 4, i32* %15, align 4
  br label %623

608:                                              ; preds = %599
  %609 = load i32, i32* %3, align 4
  %610 = load %28*, %28** %32, align 8
  %611 = getelementptr inbounds %28, %28* %610, i32 0, i32 2
  %612 = load i8*, i8** %611, align 8
  %613 = load %28*, %28** %32, align 8
  %614 = getelementptr inbounds %28, %28* %613, i32 0, i32 3
  %615 = load i32, i32* %614, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @895, i32 0, i32 0), i32 %609, i8* %612, i32 %615)
  %616 = load %28*, %28** %32, align 8
  %617 = load i32, i32* %3, align 4
  %618 = call i32 @1454(%28* %616, i32 %617)
  store i32 %618, i32* %5, align 4
  %619 = load i32, i32* %5, align 4
  %620 = icmp ne i32 %619, 0
  br i1 %620, label %622, label %621

621:                                              ; preds = %608
  store i32 4, i32* %15, align 4
  br label %623

622:                                              ; preds = %608
  store i32 0, i32* %15, align 4
  br label %623

623:                                              ; preds = %621, %607, %622, %598
  %624 = bitcast %28** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %624) #10
  %625 = load i32, i32* %15, align 4
  switch i32 %625, label %995 [
    i32 0, label %626
    i32 15, label %586
    i32 4, label %988
  ]

626:                                              ; preds = %623
  br label %586

627:                                              ; preds = %586
  %628 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %628, %30* %12)
  br label %629

629:                                              ; preds = %661, %658, %627
  %630 = call %25* @listNext(%30* %12)
  store %25* %630, %25** %13, align 8
  %631 = icmp ne %25* %630, null
  br i1 %631, label %632, label %662

632:                                              ; preds = %629
  %633 = bitcast %28** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %633) #10
  %634 = load %25*, %25** %13, align 8
  %635 = getelementptr inbounds %25, %25* %634, i32 0, i32 2
  %636 = load i8*, i8** %635, align 8
  %637 = bitcast i8* %636 to %28*
  store %28* %637, %28** %33, align 8
  %638 = load %28*, %28** %33, align 8
  %639 = load %28*, %28** %11, align 8
  %640 = icmp eq %28* %638, %639
  br i1 %640, label %641, label %642

641:                                              ; preds = %632
  store i32 17, i32* %15, align 4
  br label %658

642:                                              ; preds = %632
  %643 = load %28*, %28** %33, align 8
  %644 = getelementptr inbounds %28, %28* %643, i32 0, i32 7
  %645 = load i32, i32* %644, align 8
  %646 = and i32 %645, 2
  %647 = icmp ne i32 %646, 0
  br i1 %647, label %648, label %649

648:                                              ; preds = %642
  store i32 17, i32* %15, align 4
  br label %658

649:                                              ; preds = %642
  %650 = load %28*, %28** %33, align 8
  %651 = load %28*, %28** %11, align 8
  %652 = load i32, i32* %3, align 4
  %653 = call i32 @1459(%28* %650, %28* %651, i32 %652, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @896, i32 0, i32 0), i8** null)
  store i32 %653, i32* %5, align 4
  %654 = load i32, i32* %5, align 4
  %655 = icmp ne i32 %654, 0
  br i1 %655, label %657, label %656

656:                                              ; preds = %649
  store i32 4, i32* %15, align 4
  br label %658

657:                                              ; preds = %649
  store i32 0, i32* %15, align 4
  br label %658

658:                                              ; preds = %656, %657, %648, %641
  %659 = bitcast %28** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %659) #10
  %660 = load i32, i32* %15, align 4
  switch i32 %660, label %995 [
    i32 0, label %661
    i32 17, label %629
    i32 4, label %988
  ]

661:                                              ; preds = %658
  br label %629

662:                                              ; preds = %629
  br label %986

663:                                              ; preds = %570, %565
  %664 = load %24*, %24** %7, align 8
  %665 = getelementptr inbounds %24, %24* %664, i32 0, i32 5
  %666 = load i64, i64* %665, align 8
  %667 = icmp eq i64 %666, 1
  br i1 %667, label %668, label %863

668:                                              ; preds = %663
  %669 = load %24*, %24** %8, align 8
  %670 = getelementptr inbounds %24, %24* %669, i32 0, i32 5
  %671 = load i64, i64* %670, align 8
  %672 = icmp ugt i64 %671, 1
  br i1 %672, label %673, label %863

673:                                              ; preds = %668
  %674 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %674) #10
  store i32 1, i32* %34, align 4
  %675 = bitcast %28** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %675) #10
  %676 = load %24*, %24** %7, align 8
  %677 = getelementptr inbounds %24, %24* %676, i32 0, i32 0
  %678 = load %25*, %25** %677, align 8
  %679 = getelementptr inbounds %25, %25* %678, i32 0, i32 2
  %680 = load i8*, i8** %679, align 8
  %681 = bitcast i8* %680 to %28*
  store %28* %681, %28** %35, align 8
  %682 = bitcast %28** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %682) #10
  store %28* null, %28** %36, align 8
  %683 = bitcast i8** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %683) #10
  store i8* null, i8** %37, align 8
  %684 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %684) #10
  store i32 0, i32* %38, align 4
  br label %685

685:                                              ; preds = %719, %673
  %686 = load i32, i32* %38, align 4
  %687 = load %28*, %28** %35, align 8
  %688 = getelementptr inbounds %28, %28* %687, i32 0, i32 17
  %689 = load i32, i32* %688, align 8
  %690 = icmp slt i32 %686, %689
  br i1 %690, label %692, label %691

691:                                              ; preds = %685
  store i32 19, i32* %15, align 4
  br label %722

692:                                              ; preds = %685
  %693 = bitcast i8** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %693) #10
  %694 = load %28*, %28** %35, align 8
  %695 = getelementptr inbounds %28, %28* %694, i32 0, i32 15
  %696 = load i8**, i8*** %695, align 8
  %697 = load i32, i32* %38, align 4
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds i8*, i8** %696, i64 %698
  %700 = load i8*, i8** %699, align 8
  store i8* %700, i8** %39, align 8
  %701 = load i8*, i8** %39, align 8
  %702 = call i32 @atoi(i8* %701) #12
  %703 = load i32, i32* %3, align 4
  %704 = icmp eq i32 %702, %703
  br i1 %704, label %705, label %714

705:                                              ; preds = %692
  %706 = load %28*, %28** %35, align 8
  %707 = getelementptr inbounds %28, %28* %706, i32 0, i32 15
  %708 = load i8**, i8*** %707, align 8
  %709 = load i32, i32* %38, align 4
  %710 = add nsw i32 %709, 1
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds i8*, i8** %708, i64 %711
  %713 = load i8*, i8** %712, align 8
  store i8* %713, i8** %37, align 8
  store i32 19, i32* %15, align 4
  br label %715

714:                                              ; preds = %692
  store i32 0, i32* %15, align 4
  br label %715

715:                                              ; preds = %714, %705
  %716 = bitcast i8** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %716) #10
  %717 = load i32, i32* %15, align 4
  switch i32 %717, label %722 [
    i32 0, label %718
  ]

718:                                              ; preds = %715
  br label %719

719:                                              ; preds = %718
  %720 = load i32, i32* %38, align 4
  %721 = add nsw i32 %720, 2
  store i32 %721, i32* %38, align 4
  br label %685

722:                                              ; preds = %715, %691
  %723 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %723) #10
  br label %724

724:                                              ; preds = %722
  %725 = load i8*, i8** %37, align 8
  %726 = icmp ne i8* %725, null
  br i1 %726, label %727, label %728

727:                                              ; preds = %724
  br label %730

728:                                              ; preds = %724
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @897, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 4862, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @890, i32 0, i32 0)) #14
  unreachable

729:                                              ; No predecessors!
  br label %730

730:                                              ; preds = %729, %727
  %731 = bitcast %30* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %731) #10
  %732 = bitcast %25** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %732) #10
  %733 = load %24*, %24** %8, align 8
  call void @listRewind(%24* %733, %30* %40)
  br label %734

734:                                              ; preds = %764, %730
  %735 = call %25* @listNext(%30* %40)
  store %25* %735, %25** %41, align 8
  %736 = icmp ne %25* %735, null
  br i1 %736, label %737, label %765

737:                                              ; preds = %734
  %738 = bitcast %28** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %738) #10
  %739 = load %25*, %25** %41, align 8
  %740 = getelementptr inbounds %25, %25* %739, i32 0, i32 2
  %741 = load i8*, i8** %740, align 8
  %742 = bitcast i8* %741 to %28*
  store %28* %742, %28** %42, align 8
  %743 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %743) #10
  %744 = load %28*, %28** %42, align 8
  %745 = load i32, i32* %3, align 4
  %746 = call i32 @1451(%28* %744, i32 %745)
  store i32 %746, i32* %43, align 4
  %747 = load i32, i32* %43, align 4
  %748 = icmp sgt i32 %747, 0
  br i1 %748, label %749, label %750

749:                                              ; preds = %737
  store i32 0, i32* %34, align 4
  store i32 23, i32* %15, align 4
  br label %760

750:                                              ; preds = %737
  %751 = load %28*, %28** %42, align 8
  %752 = getelementptr inbounds %28, %28* %751, i32 0, i32 1
  %753 = load i8*, i8** %752, align 8
  %754 = load i8*, i8** %37, align 8
  %755 = call i32 @strcmp(i8* %753, i8* %754) #12
  %756 = icmp eq i32 %755, 0
  br i1 %756, label %757, label %759

757:                                              ; preds = %750
  %758 = load %28*, %28** %42, align 8
  store %28* %758, %28** %36, align 8
  br label %759

759:                                              ; preds = %757, %750
  store i32 0, i32* %15, align 4
  br label %760

760:                                              ; preds = %759, %749
  %761 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %761) #10
  %762 = bitcast %28** %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %762) #10
  %763 = load i32, i32* %15, align 4
  switch i32 %763, label %1007 [
    i32 0, label %764
    i32 23, label %765
  ]

764:                                              ; preds = %760
  br label %734

765:                                              ; preds = %760, %734
  %766 = load i32, i32* %34, align 4
  %767 = icmp ne i32 %766, 0
  br i1 %767, label %769, label %768

768:                                              ; preds = %765
  store i32 24, i32* %15, align 4
  br label %854

769:                                              ; preds = %765
  %770 = load %28*, %28** %36, align 8
  %771 = icmp ne %28* %770, null
  br i1 %771, label %772, label %822

772:                                              ; preds = %769
  %773 = load i32, i32* %3, align 4
  %774 = load %28*, %28** %35, align 8
  %775 = getelementptr inbounds %28, %28* %774, i32 0, i32 2
  %776 = load i8*, i8** %775, align 8
  %777 = load %28*, %28** %35, align 8
  %778 = getelementptr inbounds %28, %28* %777, i32 0, i32 3
  %779 = load i32, i32* %778, align 8
  %780 = load %28*, %28** %36, align 8
  %781 = getelementptr inbounds %28, %28* %780, i32 0, i32 2
  %782 = load i8*, i8** %781, align 8
  %783 = load %28*, %28** %36, align 8
  %784 = getelementptr inbounds %28, %28* %783, i32 0, i32 3
  %785 = load i32, i32* %784, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @898, i32 0, i32 0), i32 %773, i8* %776, i32 %779, i8* %782, i32 %785)
  %786 = load %28*, %28** %35, align 8
  %787 = load %28*, %28** %36, align 8
  %788 = load i32, i32* %3, align 4
  %789 = load i32, i32* %29, align 4
  %790 = call i32 @1460(%28* %786, %28* %787, i32 %788, i32 %789, i8** null)
  store i32 %790, i32* %5, align 4
  %791 = load i32, i32* %5, align 4
  %792 = icmp ne i32 %791, 0
  br i1 %792, label %794, label %793

793:                                              ; preds = %772
  store i32 4, i32* %15, align 4
  br label %854

794:                                              ; preds = %772
  %795 = load %24*, %24** %8, align 8
  call void @listRewind(%24* %795, %30* %40)
  br label %796

796:                                              ; preds = %820, %817, %794
  %797 = call %25* @listNext(%30* %40)
  store %25* %797, %25** %41, align 8
  %798 = icmp ne %25* %797, null
  br i1 %798, label %799, label %821

799:                                              ; preds = %796
  %800 = bitcast %28** %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %800) #10
  %801 = load %25*, %25** %41, align 8
  %802 = getelementptr inbounds %25, %25* %801, i32 0, i32 2
  %803 = load i8*, i8** %802, align 8
  %804 = bitcast i8* %803 to %28*
  store %28* %804, %28** %44, align 8
  %805 = load %28*, %28** %36, align 8
  %806 = load %28*, %28** %44, align 8
  %807 = icmp eq %28* %805, %806
  br i1 %807, label %808, label %809

808:                                              ; preds = %799
  store i32 25, i32* %15, align 4
  br label %817

809:                                              ; preds = %799
  %810 = load %28*, %28** %44, align 8
  %811 = load i32, i32* %3, align 4
  %812 = call i32 @1454(%28* %810, i32 %811)
  store i32 %812, i32* %5, align 4
  %813 = load i32, i32* %5, align 4
  %814 = icmp ne i32 %813, 0
  br i1 %814, label %816, label %815

815:                                              ; preds = %809
  store i32 4, i32* %15, align 4
  br label %817

816:                                              ; preds = %809
  store i32 0, i32* %15, align 4
  br label %817

817:                                              ; preds = %815, %816, %808
  %818 = bitcast %28** %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %818) #10
  %819 = load i32, i32* %15, align 4
  switch i32 %819, label %854 [
    i32 0, label %820
    i32 25, label %796
  ]

820:                                              ; preds = %817
  br label %796

821:                                              ; preds = %796
  br label %853

822:                                              ; preds = %769
  %823 = load i32, i32* %3, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @899, i32 0, i32 0), i32 %823)
  %824 = load %28*, %28** %35, align 8
  %825 = load i32, i32* %3, align 4
  %826 = call i32 @1454(%28* %824, i32 %825)
  store i32 %826, i32* %5, align 4
  %827 = load i32, i32* %5, align 4
  %828 = icmp ne i32 %827, 0
  br i1 %828, label %830, label %829

829:                                              ; preds = %822
  store i32 4, i32* %15, align 4
  br label %854

830:                                              ; preds = %822
  %831 = load %24*, %24** %8, align 8
  call void @listRewind(%24* %831, %30* %40)
  br label %832

832:                                              ; preds = %851, %830
  %833 = call %25* @listNext(%30* %40)
  store %25* %833, %25** %41, align 8
  %834 = icmp ne %25* %833, null
  br i1 %834, label %835, label %852

835:                                              ; preds = %832
  %836 = bitcast %28** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %836) #10
  %837 = load %25*, %25** %41, align 8
  %838 = getelementptr inbounds %25, %25* %837, i32 0, i32 2
  %839 = load i8*, i8** %838, align 8
  %840 = bitcast i8* %839 to %28*
  store %28* %840, %28** %45, align 8
  %841 = load %28*, %28** %45, align 8
  %842 = load i32, i32* %3, align 4
  %843 = call i32 @1454(%28* %841, i32 %842)
  store i32 %843, i32* %5, align 4
  %844 = load i32, i32* %5, align 4
  %845 = icmp ne i32 %844, 0
  br i1 %845, label %847, label %846

846:                                              ; preds = %835
  store i32 4, i32* %15, align 4
  br label %848

847:                                              ; preds = %835
  store i32 0, i32* %15, align 4
  br label %848

848:                                              ; preds = %846, %847
  %849 = bitcast %28** %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %849) #10
  %850 = load i32, i32* %15, align 4
  switch i32 %850, label %854 [
    i32 0, label %851
  ]

851:                                              ; preds = %848
  br label %832

852:                                              ; preds = %832
  br label %853

853:                                              ; preds = %852, %821
  store i32 0, i32* %15, align 4
  br label %854

854:                                              ; preds = %829, %793, %768, %853, %848, %817
  %855 = bitcast %25** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %855) #10
  %856 = bitcast %30* %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %856) #10
  %857 = bitcast i8** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %857) #10
  %858 = bitcast %28** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %858) #10
  %859 = bitcast %28** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %859) #10
  %860 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %860) #10
  %861 = load i32, i32* %15, align 4
  switch i32 %861, label %995 [
    i32 0, label %862
    i32 24, label %975
    i32 4, label %988
  ]

862:                                              ; preds = %854
  br label %985

863:                                              ; preds = %668, %663
  %864 = load %24*, %24** %8, align 8
  %865 = getelementptr inbounds %24, %24* %864, i32 0, i32 5
  %866 = load i64, i64* %865, align 8
  %867 = icmp eq i64 %866, 0
  br i1 %867, label %868, label %873

868:                                              ; preds = %863
  %869 = load %24*, %24** %7, align 8
  %870 = getelementptr inbounds %24, %24* %869, i32 0, i32 5
  %871 = load i64, i64* %870, align 8
  %872 = icmp eq i64 %871, 1
  br label %873

873:                                              ; preds = %868, %863
  %874 = phi i1 [ false, %863 ], [ %872, %868 ]
  %875 = zext i1 %874 to i32
  store i32 %875, i32* %46, align 4
  %876 = load i32, i32* %46, align 4
  %877 = icmp ne i32 %876, 0
  br i1 %877, label %878, label %931

878:                                              ; preds = %873
  %879 = bitcast %28** %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %879) #10
  %880 = load %24*, %24** %7, align 8
  %881 = getelementptr inbounds %24, %24* %880, i32 0, i32 0
  %882 = load %25*, %25** %881, align 8
  %883 = getelementptr inbounds %25, %25* %882, i32 0, i32 2
  %884 = load i8*, i8** %883, align 8
  %885 = bitcast i8* %884 to %28*
  store %28* %885, %28** %47, align 8
  %886 = load %28*, %28** %11, align 8
  %887 = icmp ne %28* %886, null
  br i1 %887, label %888, label %892

888:                                              ; preds = %878
  %889 = load %28*, %28** %11, align 8
  %890 = load %28*, %28** %47, align 8
  %891 = icmp ne %28* %889, %890
  br i1 %891, label %892, label %926

892:                                              ; preds = %888, %878
  %893 = bitcast %31** %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %893) #10
  %894 = load %28*, %28** %47, align 8
  %895 = getelementptr inbounds %28, %28* %894, i32 0, i32 0
  %896 = load %10*, %10** %895, align 8
  %897 = load i32, i32* %3, align 4
  %898 = call i8* (%10*, i8*, ...) @redisCommand(%10* %896, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @900, i32 0, i32 0), i32 %897, i32 10)
  %899 = bitcast i8* %898 to %31*
  store %31* %899, %31** %48, align 8
  %900 = load %28*, %28** %47, align 8
  %901 = load %31*, %31** %48, align 8
  %902 = call i32 @1426(%28* %900, %31* %901, i8** null)
  store i32 %902, i32* %5, align 4
  %903 = load %31*, %31** %48, align 8
  %904 = icmp ne %31* %903, null
  br i1 %904, label %905, label %917

905:                                              ; preds = %892
  %906 = load i32, i32* %5, align 4
  %907 = icmp ne i32 %906, 0
  br i1 %907, label %908, label %914

908:                                              ; preds = %905
  %909 = load %31*, %31** %48, align 8
  %910 = getelementptr inbounds %31, %31* %909, i32 0, i32 6
  %911 = load i64, i64* %910, align 8
  %912 = icmp eq i64 %911, 0
  %913 = zext i1 %912 to i32
  store i32 %913, i32* %46, align 4
  br label %914

914:                                              ; preds = %908, %905
  %915 = load %31*, %31** %48, align 8
  %916 = bitcast %31* %915 to i8*
  call void @freeReplyObject(i8* %916)
  br label %917

917:                                              ; preds = %914, %892
  %918 = load i32, i32* %5, align 4
  %919 = icmp ne i32 %918, 0
  br i1 %919, label %921, label %920

920:                                              ; preds = %917
  store i32 4, i32* %15, align 4
  br label %922

921:                                              ; preds = %917
  store i32 0, i32* %15, align 4
  br label %922

922:                                              ; preds = %920, %921
  %923 = bitcast %31** %48 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %923) #10
  %924 = load i32, i32* %15, align 4
  switch i32 %924, label %927 [
    i32 0, label %925
  ]

925:                                              ; preds = %922
  br label %926

926:                                              ; preds = %925, %888
  store i32 0, i32* %15, align 4
  br label %927

927:                                              ; preds = %926, %922
  %928 = bitcast %28** %47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %928) #10
  %929 = load i32, i32* %15, align 4
  switch i32 %929, label %995 [
    i32 0, label %930
    i32 4, label %988
  ]

930:                                              ; preds = %927
  br label %931

931:                                              ; preds = %930, %873
  %932 = load i32, i32* %46, align 4
  %933 = icmp ne i32 %932, 0
  br i1 %933, label %934, label %974

934:                                              ; preds = %931
  %935 = bitcast %28** %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %935) #10
  %936 = load %24*, %24** %7, align 8
  %937 = getelementptr inbounds %24, %24* %936, i32 0, i32 0
  %938 = load %25*, %25** %937, align 8
  %939 = getelementptr inbounds %25, %25* %938, i32 0, i32 2
  %940 = load i8*, i8** %939, align 8
  %941 = bitcast i8* %940 to %28*
  store %28* %941, %28** %49, align 8
  %942 = load i32, i32* %3, align 4
  %943 = load %28*, %28** %49, align 8
  %944 = getelementptr inbounds %28, %28* %943, i32 0, i32 2
  %945 = load i8*, i8** %944, align 8
  %946 = load %28*, %28** %49, align 8
  %947 = getelementptr inbounds %28, %28* %946, i32 0, i32 3
  %948 = load i32, i32* %947, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @901, i32 0, i32 0), i32 %942, i8* %945, i32 %948)
  %949 = bitcast %31** %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %949) #10
  %950 = load %28*, %28** %49, align 8
  %951 = getelementptr inbounds %28, %28* %950, i32 0, i32 0
  %952 = load %10*, %10** %951, align 8
  %953 = load i32, i32* %3, align 4
  %954 = call i8* (%10*, i8*, ...) @redisCommand(%10* %952, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @902, i32 0, i32 0), i32 %953, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @903, i32 0, i32 0))
  %955 = bitcast i8* %954 to %31*
  store %31* %955, %31** %50, align 8
  %956 = load %28*, %28** %49, align 8
  %957 = load %31*, %31** %50, align 8
  %958 = call i32 @1426(%28* %956, %31* %957, i8** null)
  store i32 %958, i32* %5, align 4
  %959 = load %31*, %31** %50, align 8
  %960 = icmp ne %31* %959, null
  br i1 %960, label %961, label %964

961:                                              ; preds = %934
  %962 = load %31*, %31** %50, align 8
  %963 = bitcast %31* %962 to i8*
  call void @freeReplyObject(i8* %963)
  br label %964

964:                                              ; preds = %961, %934
  %965 = load i32, i32* %5, align 4
  %966 = icmp ne i32 %965, 0
  br i1 %966, label %968, label %967

967:                                              ; preds = %964
  store i32 4, i32* %15, align 4
  br label %969

968:                                              ; preds = %964
  store i32 0, i32* %15, align 4
  br label %969

969:                                              ; preds = %967, %968
  %970 = bitcast %31** %50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %970) #10
  %971 = bitcast %28** %49 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %971) #10
  %972 = load i32, i32* %15, align 4
  switch i32 %972, label %995 [
    i32 0, label %973
    i32 4, label %988
  ]

973:                                              ; preds = %969
  br label %984

974:                                              ; preds = %931
  br label %975

975:                                              ; preds = %974, %854
  store i32 0, i32* %5, align 4
  %976 = load i8*, i8** %9, align 8
  %977 = load i8*, i8** %10, align 8
  %978 = load %28*, %28** %11, align 8
  %979 = getelementptr inbounds %28, %28* %978, i32 0, i32 2
  %980 = load i8*, i8** %979, align 8
  %981 = load %28*, %28** %11, align 8
  %982 = getelementptr inbounds %28, %28* %981, i32 0, i32 3
  %983 = load i32, i32* %982, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @904, i32 0, i32 0), i8* %976, i8* %977, i8* %980, i32 %983)
  br label %984

984:                                              ; preds = %975, %973
  br label %985

985:                                              ; preds = %984, %862
  br label %986

986:                                              ; preds = %985, %662
  br label %987

987:                                              ; preds = %986, %528
  br label %988

988:                                              ; preds = %987, %969, %927, %854, %658, %623, %513, %386, %152, %444, %433, %426, %413
  %989 = load %24*, %24** %6, align 8
  call void @listRelease(%24* %989)
  %990 = load %24*, %24** %7, align 8
  call void @listRelease(%24* %990)
  %991 = load %24*, %24** %8, align 8
  call void @listRelease(%24* %991)
  %992 = load i8*, i8** %9, align 8
  call void @sdsfree(i8* %992)
  %993 = load i8*, i8** %10, align 8
  call void @sdsfree(i8* %993)
  %994 = load i32, i32* %5, align 4
  store i32 %994, i32* %2, align 4
  store i32 1, i32* %15, align 4
  br label %995

995:                                              ; preds = %988, %969, %927, %854, %658, %623, %513, %386, %152
  %996 = bitcast %25** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %996) #10
  %997 = bitcast %30* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %997) #10
  %998 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %998) #10
  %999 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %999) #10
  %1000 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1000) #10
  %1001 = bitcast %24** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1001) #10
  %1002 = bitcast %24** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1002) #10
  %1003 = bitcast %24** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1003) #10
  %1004 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1004) #10
  %1005 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1005) #10
  %1006 = load i32, i32* %2, align 4
  ret i32 %1006

1007:                                             ; preds = %760
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1449(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %30, align 8
  %5 = alloca %25*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %28*, align 8
  store i8* %0, i8** %3, align 8
  %9 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %10 = icmp eq %24* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %65

12:                                               ; preds = %1
  %13 = bitcast %30* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #10
  %14 = bitcast %25** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  %15 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %15, %30* %4)
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  store i32 0, i32* %6, align 4
  %17 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  br label %18

18:                                               ; preds = %57, %12
  %19 = call %25* @listNext(%30* %4)
  store %25* %19, %25** %5, align 8
  %20 = icmp ne %25* %19, null
  br i1 %20, label %21, label %59

21:                                               ; preds = %18
  %22 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  %23 = load %25*, %25** %5, align 8
  %24 = getelementptr inbounds %25, %25* %23, i32 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i8* %25 to %28*
  store %28* %26, %28** %8, align 8
  store i32 0, i32* %7, align 4
  br label %27

27:                                               ; preds = %54, %21
  %28 = load i32, i32* %7, align 4
  %29 = icmp slt i32 %28, 16384
  br i1 %29, label %30, label %57

30:                                               ; preds = %27
  %31 = load %28*, %28** %8, align 8
  %32 = getelementptr inbounds %28, %28* %31, i32 0, i32 11
  %33 = load i32, i32* %7, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [16384 x i8], [16384 x i8]* %32, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %53

39:                                               ; preds = %30
  %40 = load i8*, i8** %3, align 8
  %41 = load i32, i32* %7, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = icmp ne i8 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %39
  %47 = load i8*, i8** %3, align 8
  %48 = load i32, i32* %7, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  store i8 1, i8* %50, align 1
  %51 = load i32, i32* %6, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %6, align 4
  br label %53

53:                                               ; preds = %46, %39, %30
  br label %54

54:                                               ; preds = %53
  %55 = load i32, i32* %7, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %7, align 4
  br label %27

57:                                               ; preds = %27
  %58 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #10
  br label %18

59:                                               ; preds = %18
  %60 = load i32, i32* %6, align 4
  store i32 %60, i32* %2, align 4
  %61 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #10
  %62 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %62) #10
  %63 = bitcast %25** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #10
  %64 = bitcast %30* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %64) #10
  br label %65

65:                                               ; preds = %59, %11
  %66 = load i32, i32* %2, align 4
  ret i32 %66
}

; Function Attrs: nounwind uwtable
define internal i32 @1450(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %24*, align 8
  %8 = alloca %24*, align 8
  %9 = alloca %24*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca %24*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %30, align 8
  %15 = alloca %25*, align 8
  %16 = alloca %28*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %31*, align 8
  %19 = alloca %33*, align 8
  %20 = alloca %7*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca %24*, align 8
  %23 = alloca %30, align 8
  %24 = alloca %25*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i32, align 4
  %27 = alloca %28*, align 8
  %28 = alloca %30, align 8
  %29 = alloca %25*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i32, align 4
  %32 = alloca %7*, align 8
  %33 = alloca %24*, align 8
  %34 = alloca %25*, align 8
  %35 = alloca %28*, align 8
  %36 = alloca %30, align 8
  %37 = alloca %25*, align 8
  %38 = alloca i8*, align 8
  %39 = alloca %7*, align 8
  %40 = alloca %24*, align 8
  %41 = alloca i32, align 4
  %42 = alloca %28*, align 8
  %43 = alloca %30, align 8
  %44 = alloca %25*, align 8
  %45 = alloca %28*, align 8
  %46 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %47 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #10
  %48 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %49 = and i32 %48, 1024
  store i32 %49, i32* %4, align 4
  %50 = load i32, i32* getelementptr inbounds (%23, %23* @772, i32 0, i32 2), align 8
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %1
  %53 = load i32, i32* %4, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = load i32, i32* getelementptr inbounds (%23, %23* @772, i32 0, i32 2), align 8
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([355 x i8], [355 x i8]* @938, i32 0, i32 0), i32 %56)
  call void @exit(i32 1) #14
  unreachable

57:                                               ; preds = %52, %1
  %58 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #10
  %59 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #10
  store i32 0, i32* %6, align 4
  %60 = bitcast %24** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #10
  store %24* null, %24** %7, align 8
  %61 = bitcast %24** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #10
  store %24* null, %24** %8, align 8
  %62 = bitcast %24** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #10
  store %24* null, %24** %9, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @939, i32 0, i32 0))
  store i32 0, i32* %5, align 4
  br label %63

63:                                               ; preds = %190, %57
  %64 = load i32, i32* %5, align 4
  %65 = icmp slt i32 %64, 16384
  br i1 %65, label %66, label %193

66:                                               ; preds = %63
  %67 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %67) #10
  %68 = load i8*, i8** %3, align 8
  %69 = load i32, i32* %5, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  store i32 %73, i32* %10, align 4
  %74 = load i32, i32* %10, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %185, label %76

76:                                               ; preds = %66
  %77 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #10
  %78 = load i32, i32* %5, align 4
  %79 = sext i32 %78 to i64
  %80 = call i8* @sdsfromlonglong(i64 %79)
  store i8* %80, i8** %11, align 8
  %81 = bitcast %24** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %81) #10
  %82 = call %24* @listCreate()
  store %24* %82, %24** %12, align 8
  %83 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %83) #10
  %84 = call i8* @sdsempty()
  store i8* %84, i8** %13, align 8
  %85 = bitcast %30* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %85) #10
  %86 = bitcast %25** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %86) #10
  %87 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %87, %30* %14)
  br label %88

88:                                               ; preds = %169, %166, %76
  %89 = call %25* @listNext(%30* %14)
  store %25* %89, %25** %15, align 8
  %90 = icmp ne %25* %89, null
  br i1 %90, label %91, label %170

91:                                               ; preds = %88
  %92 = bitcast %28** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %92) #10
  %93 = load %25*, %25** %15, align 8
  %94 = getelementptr inbounds %25, %25* %93, i32 0, i32 2
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %28*
  store %28* %96, %28** %16, align 8
  %97 = load %28*, %28** %16, align 8
  %98 = getelementptr inbounds %28, %28* %97, i32 0, i32 7
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 2
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %91
  %103 = load %28*, %28** %16, align 8
  %104 = getelementptr inbounds %28, %28* %103, i32 0, i32 9
  %105 = load i8*, i8** %104, align 8
  %106 = icmp ne i8* %105, null
  br i1 %106, label %107, label %108

107:                                              ; preds = %102, %91
  store i32 5, i32* %17, align 4
  br label %166

108:                                              ; preds = %102
  %109 = bitcast %31** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #10
  %110 = load %28*, %28** %16, align 8
  %111 = getelementptr inbounds %28, %28* %110, i32 0, i32 0
  %112 = load %10*, %10** %111, align 8
  %113 = load i32, i32* %5, align 4
  %114 = call i8* (%10*, i8*, ...) @redisCommand(%10* %112, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @900, i32 0, i32 0), i32 %113, i32 1)
  %115 = bitcast i8* %114 to %31*
  store %31* %115, %31** %18, align 8
  %116 = load %28*, %28** %16, align 8
  %117 = load %31*, %31** %18, align 8
  %118 = call i32 @1426(%28* %116, %31* %117, i8** null)
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %127, label %120

120:                                              ; preds = %108
  store i32 -1, i32* %6, align 4
  %121 = load %31*, %31** %18, align 8
  %122 = icmp ne %31* %121, null
  br i1 %122, label %123, label %126

123:                                              ; preds = %120
  %124 = load %31*, %31** %18, align 8
  %125 = bitcast %31* %124 to i8*
  call void @freeReplyObject(i8* %125)
  br label %126

126:                                              ; preds = %123, %120
  store i32 7, i32* %17, align 4
  br label %164

127:                                              ; preds = %108
  %128 = load %31*, %31** %18, align 8
  %129 = getelementptr inbounds %31, %31* %128, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, 2
  br i1 %131, label %132, label %133

132:                                              ; preds = %127
  br label %135

133:                                              ; preds = %127
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @909, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 4453, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @940, i32 0, i32 0)) #14
  unreachable

134:                                              ; No predecessors!
  br label %135

135:                                              ; preds = %134, %132
  %136 = load %31*, %31** %18, align 8
  %137 = getelementptr inbounds %31, %31* %136, i32 0, i32 6
  %138 = load i64, i64* %137, align 8
  %139 = icmp ugt i64 %138, 0
  br i1 %139, label %140, label %161

140:                                              ; preds = %135
  %141 = load %24*, %24** %12, align 8
  %142 = load %28*, %28** %16, align 8
  %143 = bitcast %28* %142 to i8*
  %144 = call %24* @listAddNodeTail(%24* %141, i8* %143)
  %145 = load %24*, %24** %12, align 8
  %146 = getelementptr inbounds %24, %24* %145, i32 0, i32 5
  %147 = load i64, i64* %146, align 8
  %148 = icmp ugt i64 %147, 1
  br i1 %148, label %149, label %152

149:                                              ; preds = %140
  %150 = load i8*, i8** %13, align 8
  %151 = call i8* @sdscat(i8* %150, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @941, i32 0, i32 0))
  store i8* %151, i8** %13, align 8
  br label %152

152:                                              ; preds = %149, %140
  %153 = load i8*, i8** %13, align 8
  %154 = load %28*, %28** %16, align 8
  %155 = getelementptr inbounds %28, %28* %154, i32 0, i32 2
  %156 = load i8*, i8** %155, align 8
  %157 = load %28*, %28** %16, align 8
  %158 = getelementptr inbounds %28, %28* %157, i32 0, i32 3
  %159 = load i32, i32* %158, align 8
  %160 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @856, i32 0, i32 0), i8* %156, i32 %159)
  store i8* %160, i8** %13, align 8
  br label %161

161:                                              ; preds = %152, %135
  %162 = load %31*, %31** %18, align 8
  %163 = bitcast %31* %162 to i8*
  call void @freeReplyObject(i8* %163)
  store i32 0, i32* %17, align 4
  br label %164

164:                                              ; preds = %126, %161
  %165 = bitcast %31** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #10
  br label %166

166:                                              ; preds = %164, %107
  %167 = bitcast %28** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %167) #10
  %168 = load i32, i32* %17, align 4
  switch i32 %168, label %177 [
    i32 0, label %169
    i32 5, label %88
  ]

169:                                              ; preds = %166
  br label %88

170:                                              ; preds = %88
  %171 = load i8*, i8** %13, align 8
  call void @sdsfree(i8* %171)
  %172 = load %4*, %4** @clusterManagerUncoveredSlots, align 8
  %173 = load i8*, i8** %11, align 8
  %174 = load %24*, %24** %12, align 8
  %175 = bitcast %24* %174 to i8*
  %176 = call i32 @dictAdd(%4* %172, i8* %173, i8* %175)
  store i32 0, i32* %17, align 4
  br label %177

177:                                              ; preds = %170, %166
  %178 = bitcast %25** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %178) #10
  %179 = bitcast %30* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %179) #10
  %180 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %180) #10
  %181 = bitcast %24** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %181) #10
  %182 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %182) #10
  %183 = load i32, i32* %17, align 4
  switch i32 %183, label %186 [
    i32 0, label %184
  ]

184:                                              ; preds = %177
  br label %185

185:                                              ; preds = %184, %66
  store i32 0, i32* %17, align 4
  br label %186

186:                                              ; preds = %185, %177
  %187 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %187) #10
  %188 = load i32, i32* %17, align 4
  switch i32 %188, label %557 [
    i32 0, label %189
    i32 7, label %540
  ]

189:                                              ; preds = %186
  br label %190

190:                                              ; preds = %189
  %191 = load i32, i32* %5, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %5, align 4
  br label %63

193:                                              ; preds = %63
  %194 = call %24* @listCreate()
  store %24* %194, %24** %7, align 8
  %195 = call %24* @listCreate()
  store %24* %195, %24** %8, align 8
  %196 = call %24* @listCreate()
  store %24* %196, %24** %9, align 8
  %197 = load %4*, %4** @clusterManagerUncoveredSlots, align 8
  %198 = call %33* @dictGetIterator(%4* %197)
  store %33* %198, %33** %19, align 8
  br label %199

199:                                              ; preds = %229, %193
  %200 = load %33*, %33** %19, align 8
  %201 = call %7* @dictNext(%33* %200)
  store %7* %201, %7** %20, align 8
  %202 = icmp ne %7* %201, null
  br i1 %202, label %203, label %232

203:                                              ; preds = %199
  %204 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %204) #10
  %205 = load %7*, %7** %20, align 8
  %206 = getelementptr inbounds %7, %7* %205, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  store i8* %207, i8** %21, align 8
  %208 = bitcast %24** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %208) #10
  %209 = load %7*, %7** %20, align 8
  %210 = getelementptr inbounds %7, %7* %209, i32 0, i32 1
  %211 = bitcast %8* %210 to i8**
  %212 = load i8*, i8** %211, align 8
  %213 = bitcast i8* %212 to %24*
  store %24* %213, %24** %22, align 8
  %214 = load %24*, %24** %22, align 8
  %215 = getelementptr inbounds %24, %24* %214, i32 0, i32 5
  %216 = load i64, i64* %215, align 8
  switch i64 %216, label %225 [
    i64 0, label %217
    i64 1, label %221
  ]

217:                                              ; preds = %203
  %218 = load %24*, %24** %7, align 8
  %219 = load i8*, i8** %21, align 8
  %220 = call %24* @listAddNodeTail(%24* %218, i8* %219)
  br label %229

221:                                              ; preds = %203
  %222 = load %24*, %24** %8, align 8
  %223 = load i8*, i8** %21, align 8
  %224 = call %24* @listAddNodeTail(%24* %222, i8* %223)
  br label %229

225:                                              ; preds = %203
  %226 = load %24*, %24** %9, align 8
  %227 = load i8*, i8** %21, align 8
  %228 = call %24* @listAddNodeTail(%24* %226, i8* %227)
  br label %229

229:                                              ; preds = %225, %221, %217
  %230 = bitcast %24** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %230) #10
  %231 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #10
  br label %199

232:                                              ; preds = %199
  %233 = load %33*, %33** %19, align 8
  call void @dictReleaseIterator(%33* %233)
  %234 = load %24*, %24** %7, align 8
  %235 = getelementptr inbounds %24, %24* %234, i32 0, i32 5
  %236 = load i64, i64* %235, align 8
  %237 = icmp ugt i64 %236, 0
  br i1 %237, label %238, label %293

238:                                              ; preds = %232
  %239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @942, i32 0, i32 0))
  %240 = load %24*, %24** %7, align 8
  call void @1469(%24* %240)
  %241 = call i32 @1419(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @943, i32 0, i32 0))
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %243, label %292

243:                                              ; preds = %238
  %244 = bitcast %30* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %244) #10
  %245 = bitcast %25** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %245) #10
  %246 = load %24*, %24** %7, align 8
  call void @listRewind(%24* %246, %30* %23)
  br label %247

247:                                              ; preds = %285, %243
  %248 = call %25* @listNext(%30* %23)
  store %25* %248, %25** %24, align 8
  %249 = icmp ne %25* %248, null
  br i1 %249, label %250, label %286

250:                                              ; preds = %247
  %251 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %251) #10
  %252 = load %25*, %25** %24, align 8
  %253 = getelementptr inbounds %25, %25* %252, i32 0, i32 2
  %254 = load i8*, i8** %253, align 8
  store i8* %254, i8** %25, align 8
  %255 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %255) #10
  %256 = load i8*, i8** %25, align 8
  %257 = call i32 @atoi(i8* %256) #12
  store i32 %257, i32* %26, align 4
  %258 = bitcast %28** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %258) #10
  %259 = call %28* @1470()
  store %28* %259, %28** %27, align 8
  %260 = load i8*, i8** %25, align 8
  %261 = load %28*, %28** %27, align 8
  %262 = getelementptr inbounds %28, %28* %261, i32 0, i32 2
  %263 = load i8*, i8** %262, align 8
  %264 = load %28*, %28** %27, align 8
  %265 = getelementptr inbounds %28, %28* %264, i32 0, i32 3
  %266 = load i32, i32* %265, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @944, i32 0, i32 0), i8* %260, i8* %263, i32 %266)
  %267 = load %28*, %28** %27, align 8
  %268 = load i32, i32* %26, align 4
  %269 = call i32 @1455(%28* %267, i32 %268, i32 0)
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %272, label %271

271:                                              ; preds = %250
  store i32 -1, i32* %6, align 4
  store i32 7, i32* %17, align 4
  br label %280

272:                                              ; preds = %250
  %273 = load %28*, %28** %27, align 8
  %274 = getelementptr inbounds %28, %28* %273, i32 0, i32 11
  %275 = load i32, i32* %26, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds [16384 x i8], [16384 x i8]* %274, i64 0, i64 %276
  store i8 1, i8* %277, align 1
  %278 = load i32, i32* %6, align 4
  %279 = add nsw i32 %278, 1
  store i32 %279, i32* %6, align 4
  store i32 0, i32* %17, align 4
  br label %280

280:                                              ; preds = %271, %272
  %281 = bitcast %28** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %281) #10
  %282 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #10
  %283 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %283) #10
  %284 = load i32, i32* %17, align 4
  switch i32 %284, label %287 [
    i32 0, label %285
  ]

285:                                              ; preds = %280
  br label %247

286:                                              ; preds = %247
  store i32 0, i32* %17, align 4
  br label %287

287:                                              ; preds = %286, %280
  %288 = bitcast %25** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %288) #10
  %289 = bitcast %30* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %289) #10
  %290 = load i32, i32* %17, align 4
  switch i32 %290, label %557 [
    i32 0, label %291
    i32 7, label %540
  ]

291:                                              ; preds = %287
  br label %292

292:                                              ; preds = %291, %238
  br label %293

293:                                              ; preds = %292, %232
  %294 = load %24*, %24** %8, align 8
  %295 = getelementptr inbounds %24, %24* %294, i32 0, i32 5
  %296 = load i64, i64* %295, align 8
  %297 = icmp ugt i64 %296, 0
  br i1 %297, label %298, label %386

298:                                              ; preds = %293
  %299 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @945, i32 0, i32 0))
  %300 = load %24*, %24** %8, align 8
  call void @1469(%24* %300)
  %301 = call i32 @1419(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @946, i32 0, i32 0))
  %302 = icmp ne i32 %301, 0
  br i1 %302, label %303, label %385

303:                                              ; preds = %298
  %304 = bitcast %30* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %304) #10
  %305 = bitcast %25** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %305) #10
  %306 = load %24*, %24** %8, align 8
  call void @listRewind(%24* %306, %30* %28)
  br label %307

307:                                              ; preds = %378, %303
  %308 = call %25* @listNext(%30* %28)
  store %25* %308, %25** %29, align 8
  %309 = icmp ne %25* %308, null
  br i1 %309, label %310, label %379

310:                                              ; preds = %307
  %311 = bitcast i8** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %311) #10
  %312 = load %25*, %25** %29, align 8
  %313 = getelementptr inbounds %25, %25* %312, i32 0, i32 2
  %314 = load i8*, i8** %313, align 8
  store i8* %314, i8** %30, align 8
  %315 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %315) #10
  %316 = load i8*, i8** %30, align 8
  %317 = call i32 @atoi(i8* %316) #12
  store i32 %317, i32* %31, align 4
  %318 = bitcast %7** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %318) #10
  %319 = load %4*, %4** @clusterManagerUncoveredSlots, align 8
  %320 = load i8*, i8** %30, align 8
  %321 = call %7* @dictFind(%4* %319, i8* %320)
  store %7* %321, %7** %32, align 8
  %322 = load %7*, %7** %32, align 8
  %323 = icmp ne %7* %322, null
  br i1 %323, label %324, label %325

324:                                              ; preds = %310
  br label %327

325:                                              ; preds = %310
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @947, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 4527, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @940, i32 0, i32 0)) #14
  unreachable

326:                                              ; No predecessors!
  br label %327

327:                                              ; preds = %326, %324
  %328 = bitcast %24** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %328) #10
  %329 = load %7*, %7** %32, align 8
  %330 = getelementptr inbounds %7, %7* %329, i32 0, i32 1
  %331 = bitcast %8* %330 to i8**
  %332 = load i8*, i8** %331, align 8
  %333 = bitcast i8* %332 to %24*
  store %24* %333, %24** %33, align 8
  %334 = bitcast %25** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %334) #10
  %335 = load %24*, %24** %33, align 8
  %336 = getelementptr inbounds %24, %24* %335, i32 0, i32 0
  %337 = load %25*, %25** %336, align 8
  store %25* %337, %25** %34, align 8
  %338 = load %25*, %25** %34, align 8
  %339 = icmp ne %25* %338, null
  br i1 %339, label %340, label %341

340:                                              ; preds = %327
  br label %343

341:                                              ; preds = %327
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @948, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 4530, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @940, i32 0, i32 0)) #14
  unreachable

342:                                              ; No predecessors!
  br label %343

343:                                              ; preds = %342, %340
  %344 = bitcast %28** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %344) #10
  %345 = load %25*, %25** %34, align 8
  %346 = getelementptr inbounds %25, %25* %345, i32 0, i32 2
  %347 = load i8*, i8** %346, align 8
  %348 = bitcast i8* %347 to %28*
  store %28* %348, %28** %35, align 8
  %349 = load i8*, i8** %30, align 8
  %350 = load %28*, %28** %35, align 8
  %351 = getelementptr inbounds %28, %28* %350, i32 0, i32 2
  %352 = load i8*, i8** %351, align 8
  %353 = load %28*, %28** %35, align 8
  %354 = getelementptr inbounds %28, %28* %353, i32 0, i32 3
  %355 = load i32, i32* %354, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @944, i32 0, i32 0), i8* %349, i8* %352, i32 %355)
  %356 = load %28*, %28** %35, align 8
  %357 = load i32, i32* %31, align 4
  %358 = call i32 @1455(%28* %356, i32 %357, i32 0)
  %359 = icmp ne i32 %358, 0
  br i1 %359, label %361, label %360

360:                                              ; preds = %343
  store i32 -1, i32* %6, align 4
  store i32 7, i32* %17, align 4
  br label %370

361:                                              ; preds = %343
  %362 = load %28*, %28** %35, align 8
  %363 = getelementptr inbounds %28, %28* %362, i32 0, i32 11
  %364 = load i8*, i8** %30, align 8
  %365 = call i32 @atoi(i8* %364) #12
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds [16384 x i8], [16384 x i8]* %363, i64 0, i64 %366
  store i8 1, i8* %367, align 1
  %368 = load i32, i32* %6, align 4
  %369 = add nsw i32 %368, 1
  store i32 %369, i32* %6, align 4
  store i32 0, i32* %17, align 4
  br label %370

370:                                              ; preds = %360, %361
  %371 = bitcast %28** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #10
  %372 = bitcast %25** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %372) #10
  %373 = bitcast %24** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %373) #10
  %374 = bitcast %7** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %374) #10
  %375 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %375) #10
  %376 = bitcast i8** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %376) #10
  %377 = load i32, i32* %17, align 4
  switch i32 %377, label %380 [
    i32 0, label %378
  ]

378:                                              ; preds = %370
  br label %307

379:                                              ; preds = %307
  store i32 0, i32* %17, align 4
  br label %380

380:                                              ; preds = %379, %370
  %381 = bitcast %25** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %381) #10
  %382 = bitcast %30* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %382) #10
  %383 = load i32, i32* %17, align 4
  switch i32 %383, label %557 [
    i32 0, label %384
    i32 7, label %540
  ]

384:                                              ; preds = %380
  br label %385

385:                                              ; preds = %384, %298
  br label %386

386:                                              ; preds = %385, %293
  %387 = load %24*, %24** %9, align 8
  %388 = getelementptr inbounds %24, %24* %387, i32 0, i32 5
  %389 = load i64, i64* %388, align 8
  %390 = icmp ugt i64 %389, 0
  br i1 %390, label %391, label %539

391:                                              ; preds = %386
  %392 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @949, i32 0, i32 0))
  %393 = load %24*, %24** %9, align 8
  call void @1469(%24* %393)
  %394 = call i32 @1419(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @950, i32 0, i32 0))
  %395 = icmp ne i32 %394, 0
  br i1 %395, label %396, label %538

396:                                              ; preds = %391
  %397 = bitcast %30* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %397) #10
  %398 = bitcast %25** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %398) #10
  %399 = load %24*, %24** %9, align 8
  call void @listRewind(%24* %399, %30* %36)
  br label %400

400:                                              ; preds = %531, %396
  %401 = call %25* @listNext(%30* %36)
  store %25* %401, %25** %37, align 8
  %402 = icmp ne %25* %401, null
  br i1 %402, label %403, label %532

403:                                              ; preds = %400
  %404 = bitcast i8** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %404) #10
  %405 = load %25*, %25** %37, align 8
  %406 = getelementptr inbounds %25, %25* %405, i32 0, i32 2
  %407 = load i8*, i8** %406, align 8
  store i8* %407, i8** %38, align 8
  %408 = bitcast %7** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %408) #10
  %409 = load %4*, %4** @clusterManagerUncoveredSlots, align 8
  %410 = load i8*, i8** %38, align 8
  %411 = call %7* @dictFind(%4* %409, i8* %410)
  store %7* %411, %7** %39, align 8
  %412 = load %7*, %7** %39, align 8
  %413 = icmp ne %7* %412, null
  br i1 %413, label %414, label %415

414:                                              ; preds = %403
  br label %417

415:                                              ; preds = %403
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @947, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 4558, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @940, i32 0, i32 0)) #14
  unreachable

416:                                              ; No predecessors!
  br label %417

417:                                              ; preds = %416, %414
  %418 = bitcast %24** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %418) #10
  %419 = load %7*, %7** %39, align 8
  %420 = getelementptr inbounds %7, %7* %419, i32 0, i32 1
  %421 = bitcast %8* %420 to i8**
  %422 = load i8*, i8** %421, align 8
  %423 = bitcast i8* %422 to %24*
  store %24* %423, %24** %40, align 8
  %424 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %424) #10
  %425 = load i8*, i8** %38, align 8
  %426 = call i32 @atoi(i8* %425) #12
  store i32 %426, i32* %41, align 4
  %427 = bitcast %28** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %427) #10
  %428 = load %24*, %24** %40, align 8
  %429 = load i32, i32* %41, align 4
  %430 = call %28* @1453(%24* %428, i32 %429, i8** null)
  store %28* %430, %28** %42, align 8
  %431 = load %28*, %28** %42, align 8
  %432 = icmp eq %28* %431, null
  br i1 %432, label %433, label %434

433:                                              ; preds = %417
  store i32 -1, i32* %6, align 4
  store i32 7, i32* %17, align 4
  br label %524

434:                                              ; preds = %417
  %435 = load i8*, i8** %38, align 8
  %436 = load %28*, %28** %42, align 8
  %437 = getelementptr inbounds %28, %28* %436, i32 0, i32 2
  %438 = load i8*, i8** %437, align 8
  %439 = load %28*, %28** %42, align 8
  %440 = getelementptr inbounds %28, %28* %439, i32 0, i32 3
  %441 = load i32, i32* %440, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @951, i32 0, i32 0), i8* %435, i8* %438, i32 %441)
  %442 = load %28*, %28** %42, align 8
  %443 = load i32, i32* %41, align 4
  %444 = call i32 @1455(%28* %442, i32 %443, i32 1)
  %445 = icmp ne i32 %444, 0
  br i1 %445, label %447, label %446

446:                                              ; preds = %434
  store i32 -1, i32* %6, align 4
  store i32 7, i32* %17, align 4
  br label %524

447:                                              ; preds = %434
  %448 = load %28*, %28** %42, align 8
  %449 = getelementptr inbounds %28, %28* %448, i32 0, i32 11
  %450 = load i8*, i8** %38, align 8
  %451 = call i32 @atoi(i8* %450) #12
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds [16384 x i8], [16384 x i8]* %449, i64 0, i64 %452
  store i8 1, i8* %453, align 1
  %454 = bitcast %30* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %454) #10
  %455 = bitcast %25** %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %455) #10
  %456 = load %24*, %24** %40, align 8
  call void @listRewind(%24* %456, %30* %43)
  br label %457

457:                                              ; preds = %517, %514, %447
  %458 = call %25* @listNext(%30* %43)
  store %25* %458, %25** %44, align 8
  %459 = icmp ne %25* %458, null
  br i1 %459, label %460, label %518

460:                                              ; preds = %457
  %461 = bitcast %28** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %461) #10
  %462 = load %25*, %25** %44, align 8
  %463 = getelementptr inbounds %25, %25* %462, i32 0, i32 2
  %464 = load i8*, i8** %463, align 8
  %465 = bitcast i8* %464 to %28*
  store %28* %465, %28** %45, align 8
  %466 = load %28*, %28** %45, align 8
  %467 = load %28*, %28** %42, align 8
  %468 = icmp eq %28* %466, %467
  br i1 %468, label %469, label %470

469:                                              ; preds = %460
  store i32 17, i32* %17, align 4
  br label %514

470:                                              ; preds = %460
  %471 = load %28*, %28** %45, align 8
  %472 = load %28*, %28** %42, align 8
  %473 = load i32, i32* %41, align 4
  %474 = call i32 @1459(%28* %471, %28* %472, i32 %473, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @896, i32 0, i32 0), i8** null)
  %475 = icmp ne i32 %474, 0
  br i1 %475, label %477, label %476

476:                                              ; preds = %470
  store i32 -1, i32* %6, align 4
  br label %477

477:                                              ; preds = %476, %470
  %478 = load i32, i32* %6, align 4
  %479 = icmp slt i32 %478, 0
  br i1 %479, label %480, label %481

480:                                              ; preds = %477
  store i32 7, i32* %17, align 4
  br label %514

481:                                              ; preds = %477
  %482 = load %28*, %28** %45, align 8
  %483 = load %28*, %28** %42, align 8
  %484 = load i32, i32* %41, align 4
  %485 = call i32 @1459(%28* %482, %28* %483, i32 %484, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @952, i32 0, i32 0), i8** null)
  %486 = icmp ne i32 %485, 0
  br i1 %486, label %488, label %487

487:                                              ; preds = %481
  store i32 -1, i32* %6, align 4
  br label %488

488:                                              ; preds = %487, %481
  %489 = load i32, i32* %6, align 4
  %490 = icmp slt i32 %489, 0
  br i1 %490, label %491, label %492

491:                                              ; preds = %488
  store i32 7, i32* %17, align 4
  br label %514

492:                                              ; preds = %488
  %493 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %493) #10
  store i32 130, i32* %46, align 4
  %494 = load %28*, %28** %45, align 8
  %495 = load %28*, %28** %42, align 8
  %496 = load i32, i32* %41, align 4
  %497 = load i32, i32* %46, align 4
  %498 = call i32 @1460(%28* %494, %28* %495, i32 %496, i32 %497, i8** null)
  %499 = icmp ne i32 %498, 0
  br i1 %499, label %501, label %500

500:                                              ; preds = %492
  store i32 -1, i32* %6, align 4
  store i32 7, i32* %17, align 4
  br label %512

501:                                              ; preds = %492
  %502 = load %28*, %28** %45, align 8
  %503 = load i32, i32* %41, align 4
  %504 = call i32 @1454(%28* %502, i32 %503)
  %505 = icmp ne i32 %504, 0
  br i1 %505, label %507, label %506

506:                                              ; preds = %501
  store i32 -1, i32* %6, align 4
  br label %507

507:                                              ; preds = %506, %501
  %508 = load i32, i32* %6, align 4
  %509 = icmp slt i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507
  store i32 7, i32* %17, align 4
  br label %512

511:                                              ; preds = %507
  store i32 0, i32* %17, align 4
  br label %512

512:                                              ; preds = %510, %500, %511
  %513 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %513) #10
  br label %514

514:                                              ; preds = %491, %480, %512, %469
  %515 = bitcast %28** %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %515) #10
  %516 = load i32, i32* %17, align 4
  switch i32 %516, label %521 [
    i32 0, label %517
    i32 17, label %457
  ]

517:                                              ; preds = %514
  br label %457

518:                                              ; preds = %457
  %519 = load i32, i32* %6, align 4
  %520 = add nsw i32 %519, 1
  store i32 %520, i32* %6, align 4
  store i32 0, i32* %17, align 4
  br label %521

521:                                              ; preds = %518, %514
  %522 = bitcast %25** %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %522) #10
  %523 = bitcast %30* %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %523) #10
  br label %524

524:                                              ; preds = %446, %433, %521
  %525 = bitcast %28** %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %525) #10
  %526 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %526) #10
  %527 = bitcast %24** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %527) #10
  %528 = bitcast %7** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %528) #10
  %529 = bitcast i8** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %529) #10
  %530 = load i32, i32* %17, align 4
  switch i32 %530, label %533 [
    i32 0, label %531
  ]

531:                                              ; preds = %524
  br label %400

532:                                              ; preds = %400
  store i32 0, i32* %17, align 4
  br label %533

533:                                              ; preds = %532, %524
  %534 = bitcast %25** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %534) #10
  %535 = bitcast %30* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %535) #10
  %536 = load i32, i32* %17, align 4
  switch i32 %536, label %557 [
    i32 0, label %537
    i32 7, label %540
  ]

537:                                              ; preds = %533
  br label %538

538:                                              ; preds = %537, %391
  br label %539

539:                                              ; preds = %538, %386
  br label %540

540:                                              ; preds = %539, %533, %380, %287, %186
  %541 = load %24*, %24** %7, align 8
  %542 = icmp ne %24* %541, null
  br i1 %542, label %543, label %545

543:                                              ; preds = %540
  %544 = load %24*, %24** %7, align 8
  call void @listRelease(%24* %544)
  br label %545

545:                                              ; preds = %543, %540
  %546 = load %24*, %24** %8, align 8
  %547 = icmp ne %24* %546, null
  br i1 %547, label %548, label %550

548:                                              ; preds = %545
  %549 = load %24*, %24** %8, align 8
  call void @listRelease(%24* %549)
  br label %550

550:                                              ; preds = %548, %545
  %551 = load %24*, %24** %9, align 8
  %552 = icmp ne %24* %551, null
  br i1 %552, label %553, label %555

553:                                              ; preds = %550
  %554 = load %24*, %24** %9, align 8
  call void @listRelease(%24* %554)
  br label %555

555:                                              ; preds = %553, %550
  %556 = load i32, i32* %6, align 4
  store i32 %556, i32* %2, align 4
  store i32 1, i32* %17, align 4
  br label %557

557:                                              ; preds = %555, %533, %380, %287, %186
  %558 = bitcast %24** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %558) #10
  %559 = bitcast %24** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %559) #10
  %560 = bitcast %24** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %560) #10
  %561 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %561) #10
  %562 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %562) #10
  %563 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %563) #10
  %564 = load i32, i32* %2, align 4
  ret i32 %564
}

; Function Attrs: nounwind uwtable
define internal i32 @1451(%28* %0, i32 %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %31*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = load %28*, %28** %3, align 8
  %10 = getelementptr inbounds %28, %28* %9, i32 0, i32 0
  %11 = load %10*, %10** %10, align 8
  %12 = load i32, i32* %4, align 4
  %13 = call i8* (%10*, i8*, ...) @redisCommand(%10* %11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @879, i32 0, i32 0), i32 %12)
  %14 = bitcast i8* %13 to %31*
  store %31* %14, %31** %5, align 8
  %15 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #10
  store i32 -1, i32* %6, align 4
  %16 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  %17 = load %28*, %28** %3, align 8
  %18 = load %31*, %31** %5, align 8
  %19 = call i32 @1426(%28* %17, %31* %18, i8** null)
  store i32 %19, i32* %7, align 4
  %20 = load i32, i32* %7, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %32

22:                                               ; preds = %2
  %23 = load %31*, %31** %5, align 8
  %24 = getelementptr inbounds %31, %31* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %27, label %32

27:                                               ; preds = %22
  %28 = load %31*, %31** %5, align 8
  %29 = getelementptr inbounds %31, %31* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %6, align 4
  br label %32

32:                                               ; preds = %27, %22, %2
  %33 = load %31*, %31** %5, align 8
  %34 = icmp ne %31* %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = load %31*, %31** %5, align 8
  %37 = bitcast %31* %36 to i8*
  call void @freeReplyObject(i8* %37)
  br label %38

38:                                               ; preds = %35, %32
  %39 = load i32, i32* %6, align 4
  %40 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %40) #10
  %41 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %41) #10
  %42 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #10
  ret i32 %39
}

; Function Attrs: nounwind uwtable
define internal i32 @1452(i32 %0, %24* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %24*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %28*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %30, align 8
  %10 = alloca %25*, align 8
  %11 = alloca %28*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store %24* %1, %24** %5, align 8
  %14 = load i32, i32* %4, align 4
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @953, i32 0, i32 0), i32 %14)
  %15 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #10
  store i32 0, i32* %6, align 4
  %16 = load %24*, %24** %5, align 8
  %17 = getelementptr inbounds %24, %24* %16, i32 0, i32 5
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %20, label %21

20:                                               ; preds = %2
  br label %23

21:                                               ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @954, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 4958, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @955, i32 0, i32 0)) #14
  unreachable

22:                                               ; No predecessors!
  br label %23

23:                                               ; preds = %22, %20
  %24 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #10
  %25 = load %24*, %24** %5, align 8
  %26 = load i32, i32* %4, align 4
  %27 = call %28* @1453(%24* %25, i32 %26, i8** null)
  store %28* %27, %28** %7, align 8
  %28 = load %28*, %28** %7, align 8
  %29 = icmp ne %28* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %23
  %31 = load %24*, %24** %5, align 8
  %32 = getelementptr inbounds %24, %24* %31, i32 0, i32 0
  %33 = load %25*, %25** %32, align 8
  %34 = getelementptr inbounds %25, %25* %33, i32 0, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %28*
  store %28* %36, %28** %7, align 8
  br label %37

37:                                               ; preds = %30, %23
  %38 = load i32, i32* %4, align 4
  %39 = load %28*, %28** %7, align 8
  %40 = getelementptr inbounds %28, %28* %39, i32 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = load %28*, %28** %7, align 8
  %43 = getelementptr inbounds %28, %28* %42, i32 0, i32 3
  %44 = load i32, i32* %43, align 8
  call void (i32, i8*, ...) @1410(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @956, i32 0, i32 0), i32 %38, i8* %41, i32 %44)
  %45 = load %28*, %28** %7, align 8
  %46 = load i32, i32* %4, align 4
  %47 = call i32 @1455(%28* %45, i32 %46, i32 0)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %37
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %125

50:                                               ; preds = %37
  %51 = bitcast %30* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %51) #10
  %52 = bitcast %25** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #10
  %53 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %53, %30* %9)
  br label %54

54:                                               ; preds = %119, %116, %50
  %55 = call %25* @listNext(%30* %9)
  store %25* %55, %25** %10, align 8
  %56 = icmp ne %25* %55, null
  br i1 %56, label %57, label %120

57:                                               ; preds = %54
  %58 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #10
  %59 = load %25*, %25** %10, align 8
  %60 = getelementptr inbounds %25, %25* %59, i32 0, i32 2
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast i8* %61 to %28*
  store %28* %62, %28** %11, align 8
  %63 = load %28*, %28** %11, align 8
  %64 = load %28*, %28** %7, align 8
  %65 = icmp eq %28* %63, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %57
  store i32 2, i32* %8, align 4
  br label %116

67:                                               ; preds = %57
  %68 = load %28*, %28** %11, align 8
  %69 = getelementptr inbounds %28, %28* %68, i32 0, i32 7
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 2
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %67
  store i32 2, i32* %8, align 4
  br label %116

74:                                               ; preds = %67
  %75 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %75) #10
  %76 = load %28*, %28** %11, align 8
  %77 = load i32, i32* %4, align 4
  %78 = call i32 @1451(%28* %76, i32 %77)
  store i32 %78, i32* %12, align 4
  %79 = load i32, i32* %12, align 4
  %80 = icmp sge i32 %79, 0
  %81 = zext i1 %80 to i32
  store i32 %81, i32* %6, align 4
  %82 = load i32, i32* %6, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %74
  store i32 3, i32* %8, align 4
  br label %114

85:                                               ; preds = %74
  %86 = load %28*, %28** %11, align 8
  %87 = load i32, i32* %4, align 4
  %88 = call i32 @1458(%28* %86, i32 %87, i32 1)
  %89 = load %28*, %28** %11, align 8
  %90 = load %28*, %28** %7, align 8
  %91 = load i32, i32* %4, align 4
  %92 = call i32 @1459(%28* %89, %28* %90, i32 %91, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @891, i32 0, i32 0), i8** null)
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %85
  store i32 0, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %114

95:                                               ; preds = %85
  %96 = load i32, i32* %12, align 4
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %113

98:                                               ; preds = %95
  %99 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %99) #10
  store i32 130, i32* %13, align 4
  %100 = load %28*, %28** %11, align 8
  %101 = load %28*, %28** %7, align 8
  %102 = load i32, i32* %4, align 4
  %103 = load i32, i32* %13, align 4
  %104 = call i32 @1460(%28* %100, %28* %101, i32 %102, i32 %103, i8** null)
  store i32 %104, i32* %6, align 4
  %105 = load i32, i32* %6, align 4
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %98
  store i32 3, i32* %8, align 4
  br label %109

108:                                              ; preds = %98
  store i32 0, i32* %8, align 4
  br label %109

109:                                              ; preds = %108, %107
  %110 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %110) #10
  %111 = load i32, i32* %8, align 4
  switch i32 %111, label %114 [
    i32 0, label %112
  ]

112:                                              ; preds = %109
  br label %113

113:                                              ; preds = %112, %95
  store i32 0, i32* %8, align 4
  br label %114

114:                                              ; preds = %113, %109, %94, %84
  %115 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %115) #10
  br label %116

116:                                              ; preds = %114, %73, %66
  %117 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %117) #10
  %118 = load i32, i32* %8, align 4
  switch i32 %118, label %122 [
    i32 0, label %119
    i32 2, label %54
    i32 3, label %120
  ]

119:                                              ; preds = %116
  br label %54

120:                                              ; preds = %116, %54
  %121 = load i32, i32* %6, align 4
  store i32 %121, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %122

122:                                              ; preds = %120, %116
  %123 = bitcast %25** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #10
  %124 = bitcast %30* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %124) #10
  br label %125

125:                                              ; preds = %122, %49
  %126 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #10
  %127 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %127) #10
  %128 = load i32, i32* %3, align 4
  ret i32 %128
}

; Function Attrs: nounwind uwtable
define internal %28* @1453(%24* %0, i32 %1, i8** %2) #0 {
  %4 = alloca %24*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca %28*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %30, align 8
  %10 = alloca %25*, align 8
  %11 = alloca %28*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %31*, align 8
  %14 = alloca i32, align 4
  store %24* %0, %24** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8** %2, i8*** %6, align 8
  %15 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  store %28* null, %28** %7, align 8
  %16 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  store i32 0, i32* %8, align 4
  %17 = bitcast %30* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %17) #10
  %18 = bitcast %25** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #10
  %19 = load %24*, %24** %4, align 8
  call void @listRewind(%24* %19, %30* %9)
  %20 = load i8**, i8*** %6, align 8
  %21 = icmp ne i8** %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %3
  %23 = load i8**, i8*** %6, align 8
  store i8* null, i8** %23, align 8
  br label %24

24:                                               ; preds = %22, %3
  br label %25

25:                                               ; preds = %109, %106, %24
  %26 = call %25* @listNext(%30* %9)
  store %25* %26, %25** %10, align 8
  %27 = icmp ne %25* %26, null
  br i1 %27, label %28, label %110

28:                                               ; preds = %25
  %29 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #10
  %30 = load %25*, %25** %10, align 8
  %31 = getelementptr inbounds %25, %25* %30, i32 0, i32 2
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast i8* %32 to %28*
  store %28* %33, %28** %11, align 8
  %34 = load %28*, %28** %11, align 8
  %35 = getelementptr inbounds %28, %28* %34, i32 0, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 2
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %28
  %40 = load %28*, %28** %11, align 8
  %41 = getelementptr inbounds %28, %28* %40, i32 0, i32 9
  %42 = load i8*, i8** %41, align 8
  %43 = icmp ne i8* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %39, %28
  store i32 2, i32* %12, align 4
  br label %106

45:                                               ; preds = %39
  %46 = bitcast %31** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #10
  %47 = load %28*, %28** %11, align 8
  %48 = getelementptr inbounds %28, %28* %47, i32 0, i32 0
  %49 = load %10*, %10** %48, align 8
  %50 = load i32, i32* %5, align 4
  %51 = call i8* (%10*, i8*, ...) @redisCommand(%10* %49, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @879, i32 0, i32 0), i32 %50)
  %52 = bitcast i8* %51 to %31*
  store %31* %52, %31** %13, align 8
  %53 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #10
  %54 = load %28*, %28** %11, align 8
  %55 = load %31*, %31** %13, align 8
  %56 = load i8**, i8*** %6, align 8
  %57 = call i32 @1426(%28* %54, %31* %55, i8** %56)
  store i32 %57, i32* %14, align 4
  %58 = load i32, i32* %14, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %77

60:                                               ; preds = %45
  %61 = load %31*, %31** %13, align 8
  %62 = getelementptr inbounds %31, %31* %61, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = load i32, i32* %8, align 4
  %65 = sext i32 %64 to i64
  %66 = icmp sgt i64 %63, %65
  br i1 %66, label %70, label %67

67:                                               ; preds = %60
  %68 = load %28*, %28** %7, align 8
  %69 = icmp eq %28* %68, null
  br i1 %69, label %70, label %76

70:                                               ; preds = %67, %60
  %71 = load %31*, %31** %13, align 8
  %72 = getelementptr inbounds %31, %31* %71, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i32
  store i32 %74, i32* %8, align 4
  %75 = load %28*, %28** %11, align 8
  store %28* %75, %28** %7, align 8
  br label %76

76:                                               ; preds = %70, %67
  br label %77

77:                                               ; preds = %76, %45
  %78 = load %31*, %31** %13, align 8
  %79 = icmp ne %31* %78, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = load %31*, %31** %13, align 8
  %82 = bitcast %31* %81 to i8*
  call void @freeReplyObject(i8* %82)
  br label %83

83:                                               ; preds = %80, %77
  %84 = load i32, i32* %14, align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %102, label %86

86:                                               ; preds = %83
  %87 = load i8**, i8*** %6, align 8
  %88 = icmp ne i8** %87, null
  br i1 %88, label %89, label %101

89:                                               ; preds = %86
  %90 = load i8**, i8*** %6, align 8
  %91 = load i8*, i8** %90, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %101

93:                                               ; preds = %89
  %94 = load %28*, %28** %11, align 8
  %95 = getelementptr inbounds %28, %28* %94, i32 0, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = load %28*, %28** %11, align 8
  %98 = getelementptr inbounds %28, %28* %97, i32 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = load i8**, i8*** %6, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %96, i32 %99, i8** %100)
  br label %101

101:                                              ; preds = %93, %89, %86
  store %28* null, %28** %7, align 8
  store i32 3, i32* %12, align 4
  br label %103

102:                                              ; preds = %83
  store i32 0, i32* %12, align 4
  br label %103

103:                                              ; preds = %102, %101
  %104 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %104) #10
  %105 = bitcast %31** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #10
  br label %106

106:                                              ; preds = %103, %44
  %107 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #10
  %108 = load i32, i32* %12, align 4
  switch i32 %108, label %116 [
    i32 0, label %109
    i32 2, label %25
    i32 3, label %110
  ]

109:                                              ; preds = %106
  br label %25

110:                                              ; preds = %106, %25
  %111 = load %28*, %28** %7, align 8
  store i32 1, i32* %12, align 4
  %112 = bitcast %25** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #10
  %113 = bitcast %30* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %113) #10
  %114 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %114) #10
  %115 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %115) #10
  ret %28* %111

116:                                              ; preds = %106
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1454(%28* %0, i32 %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %31*, align 8
  %6 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = load %28*, %28** %3, align 8
  %9 = getelementptr inbounds %28, %28* %8, i32 0, i32 0
  %10 = load %10*, %10** %9, align 8
  %11 = load i32, i32* %4, align 4
  %12 = call i8* (%10*, i8*, ...) @redisCommand(%10* %10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @902, i32 0, i32 0), i32 %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @903, i32 0, i32 0))
  %13 = bitcast i8* %12 to %31*
  store %31* %13, %31** %5, align 8
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #10
  %15 = load %28*, %28** %3, align 8
  %16 = load %31*, %31** %5, align 8
  %17 = call i32 @1426(%28* %15, %31* %16, i8** null)
  store i32 %17, i32* %6, align 4
  %18 = load %31*, %31** %5, align 8
  %19 = icmp ne %31* %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = load %31*, %31** %5, align 8
  %22 = bitcast %31* %21 to i8*
  call void @freeReplyObject(i8* %22)
  br label %23

23:                                               ; preds = %20, %2
  %24 = load i32, i32* %6, align 4
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %25) #10
  %26 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %26) #10
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define internal i32 @1455(%28* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %28*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %28* %0, %28** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  %11 = load %28*, %28** %5, align 8
  %12 = call i32 @1461(%28* %11)
  store i32 %12, i32* %8, align 4
  %13 = load i32, i32* %8, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %35

16:                                               ; preds = %3
  %17 = load %28*, %28** %5, align 8
  %18 = load i32, i32* %6, align 4
  %19 = call i32 @1458(%28* %17, i32 %18, i32 1)
  %20 = load %28*, %28** %5, align 8
  %21 = load i32, i32* %6, align 4
  %22 = call i32 @1462(%28* %20, i32 %21)
  %23 = load i32, i32* %7, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %16
  %26 = load %28*, %28** %5, align 8
  %27 = load i32, i32* %6, align 4
  %28 = call i32 @1454(%28* %26, i32 %27)
  br label %29

29:                                               ; preds = %25, %16
  %30 = load %28*, %28** %5, align 8
  %31 = call i32 @1456(%28* %30)
  %32 = load %28*, %28** %5, align 8
  %33 = call i32 @1463(%28* %32, i32 (%31*, %28*, i32)* @1464)
  store i32 %33, i32* %8, align 4
  %34 = load i32, i32* %8, align 4
  store i32 %34, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %35

35:                                               ; preds = %29, %15
  %36 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %36) #10
  %37 = load i32, i32* %4, align 4
  ret i32 %37
}

; Function Attrs: nounwind uwtable
define internal i32 @1456(%28* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca %31*, align 8
  %4 = alloca i32, align 4
  store %28* %0, %28** %2, align 8
  %5 = bitcast %31** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #10
  %6 = load %28*, %28** %2, align 8
  %7 = getelementptr inbounds %28, %28* %6, i32 0, i32 0
  %8 = load %10*, %10** %7, align 8
  %9 = call i8* (%10*, i8*, ...) @redisCommand(%10* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @107, i32 0, i32 0))
  %10 = bitcast i8* %9 to %31*
  store %31* %10, %31** %3, align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #10
  %12 = load %28*, %28** %2, align 8
  %13 = load %31*, %31** %3, align 8
  %14 = call i32 @1426(%28* %12, %31* %13, i8** null)
  store i32 %14, i32* %4, align 4
  %15 = load %31*, %31** %3, align 8
  %16 = icmp ne %31* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = load %31*, %31** %3, align 8
  %19 = bitcast %31* %18 to i8*
  call void @freeReplyObject(i8* %19)
  br label %20

20:                                               ; preds = %17, %1
  %21 = load i32, i32* %4, align 4
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #10
  %23 = bitcast %31** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal void @1457(%24* %0, %28* %1) #0 {
  %3 = alloca %24*, align 8
  %4 = alloca %28*, align 8
  %5 = alloca %30, align 8
  %6 = alloca %25*, align 8
  store %24* %0, %24** %3, align 8
  store %28* %1, %28** %4, align 8
  %7 = bitcast %30* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %7) #10
  %8 = bitcast %25** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = load %24*, %24** %3, align 8
  call void @listRewind(%24* %9, %30* %5)
  br label %10

10:                                               ; preds = %23, %2
  %11 = call %25* @listNext(%30* %5)
  store %25* %11, %25** %6, align 8
  %12 = icmp ne %25* %11, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %10
  %14 = load %28*, %28** %4, align 8
  %15 = load %25*, %25** %6, align 8
  %16 = getelementptr inbounds %25, %25* %15, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %28*
  %19 = icmp eq %28* %14, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = load %24*, %24** %3, align 8
  %22 = load %25*, %25** %6, align 8
  call void @listDelNode(%24* %21, %25* %22)
  br label %24

23:                                               ; preds = %13
  br label %10

24:                                               ; preds = %20, %10
  %25 = bitcast %25** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #10
  %26 = bitcast %30* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %26) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @1458(%28* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %28*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %31*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca %28*, align 8
  store %28* %0, %28** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %12 = bitcast %31** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = load %28*, %28** %4, align 8
  %14 = getelementptr inbounds %28, %28* %13, i32 0, i32 0
  %15 = load %10*, %10** %14, align 8
  %16 = load i32, i32* %5, align 4
  %17 = call i8* (%10*, i8*, ...) @redisCommand(%10* %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @906, i32 0, i32 0), i32 %16)
  %18 = bitcast i8* %17 to %31*
  store %31* %18, %31** %7, align 8
  %19 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #10
  store i8* null, i8** %8, align 8
  %20 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #10
  %21 = load %28*, %28** %4, align 8
  %22 = load %31*, %31** %7, align 8
  %23 = call i32 @1426(%28* %21, %31* %22, i8** %8)
  store i32 %23, i32* %9, align 4
  %24 = load i32, i32* %9, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %3
  %27 = load %31*, %31** %7, align 8
  %28 = icmp ne %31* %27, null
  br i1 %28, label %29, label %62

29:                                               ; preds = %26
  %30 = load %31*, %31** %7, align 8
  %31 = getelementptr inbounds %31, %31* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 6
  br i1 %33, label %34, label %62

34:                                               ; preds = %29
  %35 = load i32, i32* %6, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %62

37:                                               ; preds = %34
  %38 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #10
  store i8* null, i8** %10, align 8
  %39 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #10
  %40 = load %28*, %28** %4, align 8
  %41 = load i32, i32* %5, align 4
  %42 = call %28* @1465(%28* %40, i32 %41, i8** %10)
  store %28* %42, %28** %11, align 8
  %43 = load %28*, %28** %11, align 8
  %44 = icmp ne %28* %43, null
  br i1 %44, label %59, label %45

45:                                               ; preds = %37
  %46 = load i8*, i8** %10, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  store i32 1, i32* %9, align 4
  br label %58

49:                                               ; preds = %45
  %50 = load %28*, %28** %4, align 8
  %51 = getelementptr inbounds %28, %28* %50, i32 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = load %28*, %28** %4, align 8
  %54 = getelementptr inbounds %28, %28* %53, i32 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = load i8*, i8** %10, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %52, i32 %55, i8* %56)
  %57 = load i8*, i8** %10, align 8
  call void @zfree(i8* %57)
  br label %58

58:                                               ; preds = %49, %48
  br label %59

59:                                               ; preds = %58, %37
  %60 = bitcast %28** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #10
  %61 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #10
  br label %62

62:                                               ; preds = %59, %34, %29, %26, %3
  %63 = load i32, i32* %9, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %62
  %66 = load i8*, i8** %8, align 8
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %77

68:                                               ; preds = %65
  %69 = load %28*, %28** %4, align 8
  %70 = getelementptr inbounds %28, %28* %69, i32 0, i32 2
  %71 = load i8*, i8** %70, align 8
  %72 = load %28*, %28** %4, align 8
  %73 = getelementptr inbounds %28, %28* %72, i32 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = load i8*, i8** %8, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %71, i32 %74, i8* %75)
  %76 = load i8*, i8** %8, align 8
  call void @zfree(i8* %76)
  br label %77

77:                                               ; preds = %68, %65, %62
  %78 = load %31*, %31** %7, align 8
  %79 = icmp ne %31* %78, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = load %31*, %31** %7, align 8
  %82 = bitcast %31* %81 to i8*
  call void @freeReplyObject(i8* %82)
  br label %83

83:                                               ; preds = %80, %77
  %84 = load i32, i32* %9, align 4
  %85 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %85) #10
  %86 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #10
  %87 = bitcast %31** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #10
  ret i32 %84
}

; Function Attrs: nounwind uwtable
define internal i32 @1459(%28* %0, %28* %1, i32 %2, i8* %3, i8** %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %28*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8**, align 8
  %12 = alloca %31*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %28* %0, %28** %7, align 8
  store %28* %1, %28** %8, align 8
  store i32 %2, i32* %9, align 4
  store i8* %3, i8** %10, align 8
  store i8** %4, i8*** %11, align 8
  %15 = bitcast %31** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %16 = load %28*, %28** %7, align 8
  %17 = getelementptr inbounds %28, %28* %16, i32 0, i32 0
  %18 = load %10*, %10** %17, align 8
  %19 = load i32, i32* %9, align 4
  %20 = load i8*, i8** %10, align 8
  %21 = load %28*, %28** %8, align 8
  %22 = getelementptr inbounds %28, %28* %21, i32 0, i32 1
  %23 = load i8*, i8** %22, align 8
  %24 = call i8* (%10*, i8*, ...) @redisCommand(%10* %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @913, i32 0, i32 0), i32 %19, i8* %20, i8* %23)
  %25 = bitcast i8* %24 to %31*
  store %31* %25, %31** %12, align 8
  %26 = load i8**, i8*** %11, align 8
  %27 = icmp ne i8** %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %5
  %29 = load i8**, i8*** %11, align 8
  store i8* null, i8** %29, align 8
  br label %30

30:                                               ; preds = %28, %5
  %31 = load %31*, %31** %12, align 8
  %32 = icmp ne %31* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  store i32 0, i32* %6, align 4
  store i32 1, i32* %13, align 4
  br label %74

34:                                               ; preds = %30
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #10
  store i32 1, i32* %14, align 4
  %36 = load %31*, %31** %12, align 8
  %37 = getelementptr inbounds %31, %31* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 6
  br i1 %39, label %40, label %68

40:                                               ; preds = %34
  store i32 0, i32* %14, align 4
  %41 = load i8**, i8*** %11, align 8
  %42 = icmp ne i8** %41, null
  br i1 %42, label %43, label %57

43:                                               ; preds = %40
  %44 = load %31*, %31** %12, align 8
  %45 = getelementptr inbounds %31, %31* %44, i32 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, 1
  %48 = mul i64 %47, 1
  %49 = call i8* @zmalloc(i64 %48)
  %50 = load i8**, i8*** %11, align 8
  store i8* %49, i8** %50, align 8
  %51 = load i8**, i8*** %11, align 8
  %52 = load i8*, i8** %51, align 8
  %53 = load %31*, %31** %12, align 8
  %54 = getelementptr inbounds %31, %31* %53, i32 0, i32 4
  %55 = load i8*, i8** %54, align 8
  %56 = call i8* @strcpy(i8* %52, i8* %55) #10
  br label %67

57:                                               ; preds = %40
  %58 = load %28*, %28** %7, align 8
  %59 = getelementptr inbounds %28, %28* %58, i32 0, i32 2
  %60 = load i8*, i8** %59, align 8
  %61 = load %28*, %28** %7, align 8
  %62 = getelementptr inbounds %28, %28* %61, i32 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = load %31*, %31** %12, align 8
  %65 = getelementptr inbounds %31, %31* %64, i32 0, i32 4
  %66 = load i8*, i8** %65, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %60, i32 %63, i8* %66)
  br label %67

67:                                               ; preds = %57, %43
  br label %69

68:                                               ; preds = %34
  br label %69

69:                                               ; preds = %68, %67
  %70 = load %31*, %31** %12, align 8
  %71 = bitcast %31* %70 to i8*
  call void @freeReplyObject(i8* %71)
  %72 = load i32, i32* %14, align 4
  store i32 %72, i32* %6, align 4
  store i32 1, i32* %13, align 4
  %73 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %73) #10
  br label %74

74:                                               ; preds = %69, %33
  %75 = bitcast %31** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #10
  %76 = load i32, i32* %6, align 4
  ret i32 %76
}

; Function Attrs: nounwind uwtable
define internal i32 @1460(%28* %0, %28* %1, i32 %2, i32 %3, i8** %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %28*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %30, align 8
  %19 = alloca %25*, align 8
  %20 = alloca %28*, align 8
  %21 = alloca %31*, align 8
  store %28* %0, %28** %7, align 8
  store %28* %1, %28** %8, align 8
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i8** %4, i8*** %11, align 8
  %22 = load i32, i32* %10, align 4
  %23 = and i32 %22, 64
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %5
  %26 = load i32, i32* %9, align 4
  %27 = load %28*, %28** %7, align 8
  %28 = getelementptr inbounds %28, %28* %27, i32 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = load %28*, %28** %7, align 8
  %31 = getelementptr inbounds %28, %28* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = load %28*, %28** %8, align 8
  %34 = getelementptr inbounds %28, %28* %33, i32 0, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = load %28*, %28** %8, align 8
  %37 = getelementptr inbounds %28, %28* %36, i32 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @914, i32 0, i32 0), i32 %26, i8* %29, i32 %32, i8* %35, i32 %38)
  %40 = load %1*, %1** @stdout, align 8
  %41 = call i32 @fflush(%1* %40)
  br label %42

42:                                               ; preds = %25, %5
  %43 = load i8**, i8*** %11, align 8
  %44 = icmp ne i8** %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load i8**, i8*** %11, align 8
  store i8* null, i8** %46, align 8
  br label %47

47:                                               ; preds = %45, %42
  %48 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #10
  %49 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 12), align 8
  store i32 %49, i32* %12, align 4
  %50 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #10
  %51 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 11), align 4
  store i32 %51, i32* %13, align 4
  %52 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #10
  %53 = load i32, i32* %10, align 4
  %54 = and i32 %53, 128
  store i32 %54, i32* %14, align 4
  %55 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #10
  %56 = load i32, i32* %10, align 4
  %57 = and i32 %56, 2
  store i32 %57, i32* %15, align 4
  %58 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #10
  store i32 1, i32* %16, align 4
  %59 = load i32, i32* %15, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %47
  %62 = load %28*, %28** %8, align 8
  %63 = load %28*, %28** %7, align 8
  %64 = load i32, i32* %9, align 4
  %65 = load i8**, i8*** %11, align 8
  %66 = call i32 @1459(%28* %62, %28* %63, i32 %64, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @892, i32 0, i32 0), i8** %65)
  store i32 %66, i32* %16, align 4
  %67 = load i32, i32* %16, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %61
  store i32 0, i32* %6, align 4
  store i32 1, i32* %17, align 4
  br label %203

70:                                               ; preds = %61
  %71 = load %28*, %28** %7, align 8
  %72 = load %28*, %28** %8, align 8
  %73 = load i32, i32* %9, align 4
  %74 = load i8**, i8*** %11, align 8
  %75 = call i32 @1459(%28* %71, %28* %72, i32 %73, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @915, i32 0, i32 0), i8** %74)
  store i32 %75, i32* %16, align 4
  %76 = load i32, i32* %16, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %70
  store i32 0, i32* %6, align 4
  store i32 1, i32* %17, align 4
  br label %203

79:                                               ; preds = %70
  br label %80

80:                                               ; preds = %79, %47
  %81 = load %28*, %28** %7, align 8
  %82 = load %28*, %28** %8, align 8
  %83 = load i32, i32* %9, align 4
  %84 = load i32, i32* %13, align 4
  %85 = load i32, i32* %12, align 4
  %86 = load i32, i32* %14, align 4
  %87 = load i8**, i8*** %11, align 8
  %88 = call i32 @1466(%28* %81, %28* %82, i32 %83, i32 %84, i32 %85, i32 %86, i8** %87)
  store i32 %88, i32* %16, align 4
  %89 = load i32, i32* %10, align 4
  %90 = and i32 %89, 64
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %80
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  br label %94

94:                                               ; preds = %92, %80
  %95 = load i32, i32* %16, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  store i32 0, i32* %6, align 4
  store i32 1, i32* %17, align 4
  br label %203

98:                                               ; preds = %94
  %99 = load i32, i32* %15, align 4
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %187, label %101

101:                                              ; preds = %98
  %102 = bitcast %30* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %102) #10
  %103 = bitcast %25** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %103) #10
  %104 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %104, %30* %18)
  br label %105

105:                                              ; preds = %180, %177, %101
  %106 = call %25* @listNext(%30* %18)
  store %25* %106, %25** %19, align 8
  %107 = icmp ne %25* %106, null
  br i1 %107, label %108, label %181

108:                                              ; preds = %105
  %109 = bitcast %28** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #10
  %110 = load %25*, %25** %19, align 8
  %111 = getelementptr inbounds %25, %25* %110, i32 0, i32 2
  %112 = load i8*, i8** %111, align 8
  %113 = bitcast i8* %112 to %28*
  store %28* %113, %28** %20, align 8
  %114 = load %28*, %28** %20, align 8
  %115 = getelementptr inbounds %28, %28* %114, i32 0, i32 7
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 2
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %108
  store i32 2, i32* %17, align 4
  br label %177

120:                                              ; preds = %108
  %121 = bitcast %31** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %121) #10
  %122 = load %28*, %28** %20, align 8
  %123 = getelementptr inbounds %28, %28* %122, i32 0, i32 0
  %124 = load %10*, %10** %123, align 8
  %125 = load i32, i32* %9, align 4
  %126 = load %28*, %28** %8, align 8
  %127 = getelementptr inbounds %28, %28* %126, i32 0, i32 1
  %128 = load i8*, i8** %127, align 8
  %129 = call i8* (%10*, i8*, ...) @redisCommand(%10* %124, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @913, i32 0, i32 0), i32 %125, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @891, i32 0, i32 0), i8* %128)
  %130 = bitcast i8* %129 to %31*
  store %31* %130, %31** %21, align 8
  %131 = load %31*, %31** %21, align 8
  %132 = icmp ne %31* %131, null
  %133 = zext i1 %132 to i32
  store i32 %133, i32* %16, align 4
  %134 = load i32, i32* %16, align 4
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %137, label %136

136:                                              ; preds = %120
  store i32 0, i32* %6, align 4
  store i32 1, i32* %17, align 4
  br label %175

137:                                              ; preds = %120
  %138 = load %31*, %31** %21, align 8
  %139 = getelementptr inbounds %31, %31* %138, i32 0, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 6
  br i1 %141, label %142, label %168

142:                                              ; preds = %137
  store i32 0, i32* %16, align 4
  %143 = load i8**, i8*** %11, align 8
  %144 = icmp ne i8** %143, null
  br i1 %144, label %145, label %167

145:                                              ; preds = %142
  %146 = load %31*, %31** %21, align 8
  %147 = getelementptr inbounds %31, %31* %146, i32 0, i32 3
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, 1
  %150 = mul i64 %149, 1
  %151 = call i8* @zmalloc(i64 %150)
  %152 = load i8**, i8*** %11, align 8
  store i8* %151, i8** %152, align 8
  %153 = load i8**, i8*** %11, align 8
  %154 = load i8*, i8** %153, align 8
  %155 = load %31*, %31** %21, align 8
  %156 = getelementptr inbounds %31, %31* %155, i32 0, i32 4
  %157 = load i8*, i8** %156, align 8
  %158 = call i8* @strcpy(i8* %154, i8* %157) #10
  %159 = load %28*, %28** %20, align 8
  %160 = getelementptr inbounds %28, %28* %159, i32 0, i32 2
  %161 = load i8*, i8** %160, align 8
  %162 = load %28*, %28** %20, align 8
  %163 = getelementptr inbounds %28, %28* %162, i32 0, i32 3
  %164 = load i32, i32* %163, align 8
  %165 = load i8**, i8*** %11, align 8
  %166 = load i8*, i8** %165, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %161, i32 %164, i8* %166)
  br label %167

167:                                              ; preds = %145, %142
  br label %168

168:                                              ; preds = %167, %137
  %169 = load %31*, %31** %21, align 8
  %170 = bitcast %31* %169 to i8*
  call void @freeReplyObject(i8* %170)
  %171 = load i32, i32* %16, align 4
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %174, label %173

173:                                              ; preds = %168
  store i32 0, i32* %6, align 4
  store i32 1, i32* %17, align 4
  br label %175

174:                                              ; preds = %168
  store i32 0, i32* %17, align 4
  br label %175

175:                                              ; preds = %174, %173, %136
  %176 = bitcast %31** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %176) #10
  br label %177

177:                                              ; preds = %175, %119
  %178 = bitcast %28** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %178) #10
  %179 = load i32, i32* %17, align 4
  switch i32 %179, label %182 [
    i32 0, label %180
    i32 2, label %105
  ]

180:                                              ; preds = %177
  br label %105

181:                                              ; preds = %105
  store i32 0, i32* %17, align 4
  br label %182

182:                                              ; preds = %181, %177
  %183 = bitcast %25** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %183) #10
  %184 = bitcast %30* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %184) #10
  %185 = load i32, i32* %17, align 4
  switch i32 %185, label %203 [
    i32 0, label %186
  ]

186:                                              ; preds = %182
  br label %187

187:                                              ; preds = %186, %98
  %188 = load i32, i32* %10, align 4
  %189 = and i32 %188, 4
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %191, label %202

191:                                              ; preds = %187
  %192 = load %28*, %28** %7, align 8
  %193 = getelementptr inbounds %28, %28* %192, i32 0, i32 11
  %194 = load i32, i32* %9, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [16384 x i8], [16384 x i8]* %193, i64 0, i64 %195
  store i8 0, i8* %196, align 1
  %197 = load %28*, %28** %8, align 8
  %198 = getelementptr inbounds %28, %28* %197, i32 0, i32 11
  %199 = load i32, i32* %9, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [16384 x i8], [16384 x i8]* %198, i64 0, i64 %200
  store i8 1, i8* %201, align 1
  br label %202

202:                                              ; preds = %191, %187
  store i32 1, i32* %6, align 4
  store i32 1, i32* %17, align 4
  br label %203

203:                                              ; preds = %202, %182, %97, %78, %69
  %204 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #10
  %205 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %205) #10
  %206 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %206) #10
  %207 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %207) #10
  %208 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %208) #10
  %209 = load i32, i32* %6, align 4
  ret i32 %209
}

; Function Attrs: nounwind uwtable
define internal i32 @1461(%28* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca %31*, align 8
  %4 = alloca i32, align 4
  store %28* %0, %28** %2, align 8
  %5 = bitcast %31** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #10
  %6 = load %28*, %28** %2, align 8
  %7 = getelementptr inbounds %28, %28* %6, i32 0, i32 0
  %8 = load %10*, %10** %7, align 8
  %9 = call i8* (%10*, i8*, ...) @redisCommand(%10* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @382, i32 0, i32 0))
  %10 = bitcast i8* %9 to %31*
  store %31* %10, %31** %3, align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #10
  %12 = load %28*, %28** %2, align 8
  %13 = load %31*, %31** %3, align 8
  %14 = call i32 @1426(%28* %12, %31* %13, i8** null)
  store i32 %14, i32* %4, align 4
  %15 = load %31*, %31** %3, align 8
  %16 = icmp ne %31* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = load %31*, %31** %3, align 8
  %19 = bitcast %31* %18 to i8*
  call void @freeReplyObject(i8* %19)
  br label %20

20:                                               ; preds = %17, %1
  %21 = load i32, i32* %4, align 4
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #10
  %23 = bitcast %31** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @1462(%28* %0, i32 %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %31*, align 8
  %6 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = load %28*, %28** %3, align 8
  %9 = getelementptr inbounds %28, %28* %8, i32 0, i32 0
  %10 = load %10*, %10** %9, align 8
  %11 = load i32, i32* %4, align 4
  %12 = call i8* (%10*, i8*, ...) @redisCommand(%10* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @905, i32 0, i32 0), i32 %11)
  %13 = bitcast i8* %12 to %31*
  store %31* %13, %31** %5, align 8
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #10
  %15 = load %28*, %28** %3, align 8
  %16 = load %31*, %31** %5, align 8
  %17 = call i32 @1426(%28* %15, %31* %16, i8** null)
  store i32 %17, i32* %6, align 4
  %18 = load %31*, %31** %5, align 8
  %19 = icmp ne %31* %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = load %31*, %31** %5, align 8
  %22 = bitcast %31* %21 to i8*
  call void @freeReplyObject(i8* %22)
  br label %23

23:                                               ; preds = %20, %2
  %24 = load i32, i32* %6, align 4
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %25) #10
  %26 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %26) #10
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define internal i32 @1463(%28* %0, i32 (%31*, %28*, i32)* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca i32 (%31*, %28*, i32)*, align 8
  %5 = alloca %31*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %31*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store i32 (%31*, %28*, i32)* %1, i32 (%31*, %28*, i32)** %4, align 8
  %11 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = load %28*, %28** %3, align 8
  %13 = getelementptr inbounds %28, %28* %12, i32 0, i32 0
  %14 = load %10*, %10** %13, align 8
  %15 = call i8* (%10*, i8*, ...) @redisCommand(%10* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @204, i32 0, i32 0))
  %16 = bitcast i8* %15 to %31*
  store %31* %16, %31** %5, align 8
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  %18 = load %28*, %28** %3, align 8
  %19 = load %31*, %31** %5, align 8
  %20 = call i32 @1426(%28* %18, %31* %19, i8** null)
  store i32 %20, i32* %6, align 4
  %21 = load i32, i32* %6, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %92

23:                                               ; preds = %2
  %24 = load %31*, %31** %5, align 8
  %25 = getelementptr inbounds %31, %31* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 2
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  store i32 0, i32* %6, align 4
  br label %93

29:                                               ; preds = %23
  %30 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #10
  store i64 0, i64* %7, align 8
  br label %31

31:                                               ; preds = %87, %29
  %32 = load i64, i64* %7, align 8
  %33 = load %31*, %31** %5, align 8
  %34 = getelementptr inbounds %31, %31* %33, i32 0, i32 6
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %32, %35
  br i1 %36, label %37, label %90

37:                                               ; preds = %31
  %38 = bitcast %31** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #10
  %39 = load %31*, %31** %5, align 8
  %40 = getelementptr inbounds %31, %31* %39, i32 0, i32 7
  %41 = load %31**, %31*** %40, align 8
  %42 = load i64, i64* %7, align 8
  %43 = getelementptr inbounds %31*, %31** %41, i64 %42
  %44 = load %31*, %31** %43, align 8
  store %31* %44, %31** %8, align 8
  %45 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #10
  store i8* null, i8** %9, align 8
  %46 = load %28*, %28** %3, align 8
  %47 = load %31*, %31** %8, align 8
  %48 = call i32 @1426(%28* %46, %31* %47, i8** %9)
  store i32 %48, i32* %6, align 4
  %49 = load i32, i32* %6, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %37
  %52 = load i32 (%31*, %28*, i32)*, i32 (%31*, %28*, i32)** %4, align 8
  %53 = icmp ne i32 (%31*, %28*, i32)* %52, null
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = load i32 (%31*, %28*, i32)*, i32 (%31*, %28*, i32)** %4, align 8
  %56 = load %31*, %31** %8, align 8
  %57 = load %28*, %28** %3, align 8
  %58 = load i64, i64* %7, align 8
  %59 = trunc i64 %58 to i32
  %60 = call i32 %55(%31* %56, %28* %57, i32 %59)
  store i32 %60, i32* %6, align 4
  br label %61

61:                                               ; preds = %54, %51, %37
  %62 = load i8*, i8** %9, align 8
  %63 = icmp ne i8* %62, null
  br i1 %63, label %64, label %77

64:                                               ; preds = %61
  %65 = load i32, i32* %6, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %64
  %68 = load %28*, %28** %3, align 8
  %69 = getelementptr inbounds %28, %28* %68, i32 0, i32 2
  %70 = load i8*, i8** %69, align 8
  %71 = load %28*, %28** %3, align 8
  %72 = getelementptr inbounds %28, %28* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = load i8*, i8** %9, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %70, i32 %73, i8* %74)
  br label %75

75:                                               ; preds = %67, %64
  %76 = load i8*, i8** %9, align 8
  call void @zfree(i8* %76)
  br label %77

77:                                               ; preds = %75, %61
  %78 = load i32, i32* %6, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  store i32 3, i32* %10, align 4
  br label %82

81:                                               ; preds = %77
  store i32 0, i32* %10, align 4
  br label %82

82:                                               ; preds = %81, %80
  %83 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #10
  %84 = bitcast %31** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #10
  %85 = load i32, i32* %10, align 4
  switch i32 %85, label %103 [
    i32 0, label %86
    i32 3, label %90
  ]

86:                                               ; preds = %82
  br label %87

87:                                               ; preds = %86
  %88 = load i64, i64* %7, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %7, align 8
  br label %31

90:                                               ; preds = %82, %31
  %91 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #10
  br label %92

92:                                               ; preds = %90, %2
  br label %93

93:                                               ; preds = %92, %28
  %94 = load %31*, %31** %5, align 8
  %95 = icmp ne %31* %94, null
  br i1 %95, label %96, label %99

96:                                               ; preds = %93
  %97 = load %31*, %31** %5, align 8
  %98 = bitcast %31* %97 to i8*
  call void @freeReplyObject(i8* %98)
  br label %99

99:                                               ; preds = %96, %93
  %100 = load i32, i32* %6, align 4
  store i32 1, i32* %10, align 4
  %101 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %101) #10
  %102 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #10
  ret i32 %100

103:                                              ; preds = %82
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1464(%31* %0, %28* %1, i32 %2) #0 {
  %4 = alloca %31*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca i32, align 4
  store %31* %0, %31** %4, align 8
  store %28* %1, %28** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %31*, %31** %4, align 8
  %8 = load %28*, %28** %5, align 8
  %9 = load i32, i32* %6, align 4
  %10 = icmp ne i32 %9, 1
  %11 = zext i1 %10 to i32
  ret i32 %11
}

declare dso_local void @listDelNode(%24*, %25*) #2

; Function Attrs: nounwind uwtable
define internal %28* @1465(%28* %0, i32 %1, i8** %2) #0 {
  %4 = alloca %28*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca %28*, align 8
  %8 = alloca %31*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %31*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %31*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %30, align 8
  %19 = alloca %25*, align 8
  %20 = alloca %28*, align 8
  store %28* %0, %28** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8** %2, i8*** %6, align 8
  %21 = load i32, i32* %5, align 4
  %22 = icmp sge i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %3
  %24 = load i32, i32* %5, align 4
  %25 = icmp slt i32 %24, 16384
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  br label %29

27:                                               ; preds = %23, %3
  call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @907, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 3183, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @908, i32 0, i32 0)) #14
  unreachable

28:                                               ; No predecessors!
  br label %29

29:                                               ; preds = %28, %26
  %30 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #10
  store %28* null, %28** %7, align 8
  %31 = bitcast %31** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #10
  %32 = load %28*, %28** %4, align 8
  %33 = getelementptr inbounds %28, %28* %32, i32 0, i32 0
  %34 = load %10*, %10** %33, align 8
  %35 = call i8* (%10*, i8*, ...) @redisCommand(%10* %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @155, i32 0, i32 0))
  %36 = bitcast i8* %35 to %31*
  store %31* %36, %31** %8, align 8
  %37 = load %28*, %28** %4, align 8
  %38 = load %31*, %31** %8, align 8
  %39 = load i8**, i8*** %6, align 8
  %40 = call i32 @1426(%28* %37, %31* %38, i8** %39)
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %223

42:                                               ; preds = %29
  %43 = load %31*, %31** %8, align 8
  %44 = getelementptr inbounds %31, %31* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 2
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  br label %50

48:                                               ; preds = %42
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @909, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 3187, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @908, i32 0, i32 0)) #14
  unreachable

49:                                               ; No predecessors!
  br label %50

50:                                               ; preds = %49, %47
  %51 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #10
  store i64 0, i64* %9, align 8
  br label %52

52:                                               ; preds = %218, %50
  %53 = load i64, i64* %9, align 8
  %54 = load %31*, %31** %8, align 8
  %55 = getelementptr inbounds %31, %31* %54, i32 0, i32 6
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %53, %56
  br i1 %57, label %58, label %221

58:                                               ; preds = %52
  %59 = bitcast %31** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #10
  %60 = load %31*, %31** %8, align 8
  %61 = getelementptr inbounds %31, %31* %60, i32 0, i32 7
  %62 = load %31**, %31*** %61, align 8
  %63 = load i64, i64* %9, align 8
  %64 = getelementptr inbounds %31*, %31** %62, i64 %63
  %65 = load %31*, %31** %64, align 8
  store %31* %65, %31** %10, align 8
  %66 = load %31*, %31** %10, align 8
  %67 = getelementptr inbounds %31, %31* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 2
  br i1 %69, label %70, label %76

70:                                               ; preds = %58
  %71 = load %31*, %31** %10, align 8
  %72 = getelementptr inbounds %31, %31* %71, i32 0, i32 6
  %73 = load i64, i64* %72, align 8
  %74 = icmp uge i64 %73, 3
  br i1 %74, label %75, label %76

75:                                               ; preds = %70
  br label %78

76:                                               ; preds = %70, %58
  call void @__assert_fail(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @910, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 3191, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @908, i32 0, i32 0)) #14
  unreachable

77:                                               ; No predecessors!
  br label %78

78:                                               ; preds = %77, %75
  %79 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %79) #10
  %80 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %80) #10
  %81 = load %31*, %31** %10, align 8
  %82 = getelementptr inbounds %31, %31* %81, i32 0, i32 7
  %83 = load %31**, %31*** %82, align 8
  %84 = getelementptr inbounds %31*, %31** %83, i64 0
  %85 = load %31*, %31** %84, align 8
  %86 = getelementptr inbounds %31, %31* %85, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = trunc i64 %87 to i32
  store i32 %88, i32* %11, align 4
  %89 = load %31*, %31** %10, align 8
  %90 = getelementptr inbounds %31, %31* %89, i32 0, i32 7
  %91 = load %31**, %31*** %90, align 8
  %92 = getelementptr inbounds %31*, %31** %91, i64 1
  %93 = load %31*, %31** %92, align 8
  %94 = getelementptr inbounds %31, %31* %93, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %12, align 4
  %97 = load i32, i32* %5, align 4
  %98 = load i32, i32* %11, align 4
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %78
  %101 = load i32, i32* %5, align 4
  %102 = load i32, i32* %12, align 4
  %103 = icmp sgt i32 %101, %102
  br i1 %103, label %104, label %105

104:                                              ; preds = %100, %78
  store i32 4, i32* %13, align 4
  br label %212

105:                                              ; preds = %100
  %106 = bitcast %31** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %106) #10
  %107 = load %31*, %31** %10, align 8
  %108 = getelementptr inbounds %31, %31* %107, i32 0, i32 7
  %109 = load %31**, %31*** %108, align 8
  %110 = getelementptr inbounds %31*, %31** %109, i64 2
  %111 = load %31*, %31** %110, align 8
  store %31* %111, %31** %14, align 8
  %112 = load %31*, %31** %14, align 8
  %113 = getelementptr inbounds %31, %31* %112, i32 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 2
  br i1 %115, label %116, label %122

116:                                              ; preds = %105
  %117 = load %31*, %31** %14, align 8
  %118 = getelementptr inbounds %31, %31* %117, i32 0, i32 6
  %119 = load i64, i64* %118, align 8
  %120 = icmp uge i64 %119, 2
  br i1 %120, label %121, label %122

121:                                              ; preds = %116
  br label %124

122:                                              ; preds = %116, %105
  call void @__assert_fail(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @911, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 3197, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @908, i32 0, i32 0)) #14
  unreachable

123:                                              ; No predecessors!
  br label %124

124:                                              ; preds = %123, %121
  %125 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %125) #10
  store i8* null, i8** %15, align 8
  %126 = load %31*, %31** %14, align 8
  %127 = getelementptr inbounds %31, %31* %126, i32 0, i32 6
  %128 = load i64, i64* %127, align 8
  %129 = icmp uge i64 %128, 3
  br i1 %129, label %130, label %138

130:                                              ; preds = %124
  %131 = load %31*, %31** %14, align 8
  %132 = getelementptr inbounds %31, %31* %131, i32 0, i32 7
  %133 = load %31**, %31*** %132, align 8
  %134 = getelementptr inbounds %31*, %31** %133, i64 2
  %135 = load %31*, %31** %134, align 8
  %136 = getelementptr inbounds %31, %31* %135, i32 0, i32 4
  %137 = load i8*, i8** %136, align 8
  store i8* %137, i8** %15, align 8
  br label %138

138:                                              ; preds = %130, %124
  %139 = load i8*, i8** %15, align 8
  %140 = icmp ne i8* %139, null
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = load i8*, i8** %15, align 8
  %143 = call %28* @1446(i8* %142)
  store %28* %143, %28** %7, align 8
  br label %204

144:                                              ; preds = %138
  %145 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %145) #10
  %146 = load %31*, %31** %14, align 8
  %147 = getelementptr inbounds %31, %31* %146, i32 0, i32 7
  %148 = load %31**, %31*** %147, align 8
  %149 = getelementptr inbounds %31*, %31** %148, i64 0
  %150 = load %31*, %31** %149, align 8
  %151 = getelementptr inbounds %31, %31* %150, i32 0, i32 4
  %152 = load i8*, i8** %151, align 8
  store i8* %152, i8** %16, align 8
  %153 = load i8*, i8** %16, align 8
  %154 = icmp ne i8* %153, null
  br i1 %154, label %155, label %156

155:                                              ; preds = %144
  br label %158

156:                                              ; preds = %144
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @912, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 3205, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @908, i32 0, i32 0)) #14
  unreachable

157:                                              ; No predecessors!
  br label %158

158:                                              ; preds = %157, %155
  %159 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %159) #10
  %160 = load %31*, %31** %14, align 8
  %161 = getelementptr inbounds %31, %31* %160, i32 0, i32 7
  %162 = load %31**, %31*** %161, align 8
  %163 = getelementptr inbounds %31*, %31** %162, i64 1
  %164 = load %31*, %31** %163, align 8
  %165 = getelementptr inbounds %31, %31* %164, i32 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = trunc i64 %166 to i32
  store i32 %167, i32* %17, align 4
  %168 = bitcast %30* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %168) #10
  %169 = bitcast %25** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %169) #10
  %170 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %170, %30* %18)
  br label %171

171:                                              ; preds = %198, %158
  %172 = call %25* @listNext(%30* %18)
  store %25* %172, %25** %19, align 8
  %173 = icmp ne %25* %172, null
  br i1 %173, label %174, label %199

174:                                              ; preds = %171
  %175 = bitcast %28** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %175) #10
  %176 = load %25*, %25** %19, align 8
  %177 = getelementptr inbounds %25, %25* %176, i32 0, i32 2
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %28*
  store %28* %179, %28** %20, align 8
  %180 = load %28*, %28** %20, align 8
  %181 = getelementptr inbounds %28, %28* %180, i32 0, i32 2
  %182 = load i8*, i8** %181, align 8
  %183 = load i8*, i8** %16, align 8
  %184 = call i32 @strcmp(i8* %182, i8* %183) #12
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %194

186:                                              ; preds = %174
  %187 = load i32, i32* %17, align 4
  %188 = load %28*, %28** %20, align 8
  %189 = getelementptr inbounds %28, %28* %188, i32 0, i32 3
  %190 = load i32, i32* %189, align 8
  %191 = icmp eq i32 %187, %190
  br i1 %191, label %192, label %194

192:                                              ; preds = %186
  %193 = load %28*, %28** %20, align 8
  store %28* %193, %28** %7, align 8
  store i32 6, i32* %13, align 4
  br label %195

194:                                              ; preds = %186, %174
  store i32 0, i32* %13, align 4
  br label %195

195:                                              ; preds = %194, %192
  %196 = bitcast %28** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #10
  %197 = load i32, i32* %13, align 4
  switch i32 %197, label %233 [
    i32 0, label %198
    i32 6, label %199
  ]

198:                                              ; preds = %195
  br label %171

199:                                              ; preds = %195, %171
  %200 = bitcast %25** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #10
  %201 = bitcast %30* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %201) #10
  %202 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #10
  %203 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203) #10
  br label %204

204:                                              ; preds = %199, %141
  %205 = load %28*, %28** %7, align 8
  %206 = icmp ne %28* %205, null
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  store i32 2, i32* %13, align 4
  br label %209

208:                                              ; preds = %204
  store i32 0, i32* %13, align 4
  br label %209

209:                                              ; preds = %208, %207
  %210 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %210) #10
  %211 = bitcast %31** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %211) #10
  br label %212

212:                                              ; preds = %209, %104
  %213 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %213) #10
  %214 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %214) #10
  %215 = bitcast %31** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %215) #10
  %216 = load i32, i32* %13, align 4
  switch i32 %216, label %233 [
    i32 0, label %217
    i32 4, label %218
    i32 2, label %221
  ]

217:                                              ; preds = %212
  br label %218

218:                                              ; preds = %217, %212
  %219 = load i64, i64* %9, align 8
  %220 = add i64 %219, 1
  store i64 %220, i64* %9, align 8
  br label %52

221:                                              ; preds = %212, %52
  %222 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #10
  br label %223

223:                                              ; preds = %221, %29
  %224 = load %31*, %31** %8, align 8
  %225 = icmp ne %31* %224, null
  br i1 %225, label %226, label %229

226:                                              ; preds = %223
  %227 = load %31*, %31** %8, align 8
  %228 = bitcast %31* %227 to i8*
  call void @freeReplyObject(i8* %228)
  br label %229

229:                                              ; preds = %226, %223
  %230 = load %28*, %28** %7, align 8
  store i32 1, i32* %13, align 4
  %231 = bitcast %31** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #10
  %232 = bitcast %28** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %232) #10
  ret %28* %230

233:                                              ; preds = %212, %195
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1466(%28* %0, %28* %1, i32 %2, i32 %3, i32 %4, i32 %5, i8** %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %28*, align 8
  %10 = alloca %28*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8**, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca %31*, align 8
  %21 = alloca %31*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i64, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i8*, align 8
  %27 = alloca %28*, align 8
  %28 = alloca %24*, align 8
  %29 = alloca %30, align 8
  %30 = alloca %25*, align 8
  %31 = alloca i8*, align 8
  store %28* %0, %28** %9, align 8
  store %28* %1, %28** %10, align 8
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i8** %6, i8*** %15, align 8
  %32 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #10
  store i32 1, i32* %16, align 4
  %33 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #10
  %34 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %35 = and i32 %34, 1
  store i32 %35, i32* %17, align 4
  %36 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #10
  %37 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 3), align 8
  %38 = and i32 %37, 64
  store i32 %38, i32* %18, align 4
  br label %39

39:                                               ; preds = %347, %7
  br label %40

40:                                               ; preds = %39
  %41 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #10
  store i8* null, i8** %19, align 8
  %42 = bitcast %31** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #10
  store %31* null, %31** %20, align 8
  %43 = bitcast %31** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #10
  store %31* null, %31** %21, align 8
  %44 = load %28*, %28** %9, align 8
  %45 = getelementptr inbounds %28, %28* %44, i32 0, i32 0
  %46 = load %10*, %10** %45, align 8
  %47 = load i32, i32* %11, align 4
  %48 = load i32, i32* %13, align 4
  %49 = call i8* (%10*, i8*, ...) @redisCommand(%10* %46, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @900, i32 0, i32 0), i32 %47, i32 %48)
  %50 = bitcast i8* %49 to %31*
  store %31* %50, %31** %20, align 8
  %51 = load %31*, %31** %20, align 8
  %52 = icmp ne %31* %51, null
  %53 = zext i1 %52 to i32
  store i32 %53, i32* %16, align 4
  %54 = load i32, i32* %16, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %40
  store i32 0, i32* %8, align 4
  store i32 1, i32* %22, align 4
  br label %342

57:                                               ; preds = %40
  %58 = load %31*, %31** %20, align 8
  %59 = getelementptr inbounds %31, %31* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 6
  br i1 %61, label %62, label %88

62:                                               ; preds = %57
  store i32 0, i32* %16, align 4
  %63 = load i8**, i8*** %15, align 8
  %64 = icmp ne i8** %63, null
  br i1 %64, label %65, label %87

65:                                               ; preds = %62
  %66 = load %31*, %31** %20, align 8
  %67 = getelementptr inbounds %31, %31* %66, i32 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = mul i64 %69, 1
  %71 = call i8* @zmalloc(i64 %70)
  %72 = load i8**, i8*** %15, align 8
  store i8* %71, i8** %72, align 8
  %73 = load i8**, i8*** %15, align 8
  %74 = load i8*, i8** %73, align 8
  %75 = load %31*, %31** %20, align 8
  %76 = getelementptr inbounds %31, %31* %75, i32 0, i32 4
  %77 = load i8*, i8** %76, align 8
  %78 = call i8* @strcpy(i8* %74, i8* %77) #10
  %79 = load %28*, %28** %9, align 8
  %80 = getelementptr inbounds %28, %28* %79, i32 0, i32 2
  %81 = load i8*, i8** %80, align 8
  %82 = load %28*, %28** %9, align 8
  %83 = getelementptr inbounds %28, %28* %82, i32 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = load i8**, i8*** %15, align 8
  %86 = load i8*, i8** %85, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %81, i32 %84, i8* %86)
  br label %87

87:                                               ; preds = %65, %62
  br label %320

88:                                               ; preds = %57
  %89 = load %31*, %31** %20, align 8
  %90 = getelementptr inbounds %31, %31* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 2
  br i1 %92, label %93, label %94

93:                                               ; preds = %88
  br label %96

94:                                               ; preds = %88
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @909, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 3519, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @916, i32 0, i32 0)) #14
  unreachable

95:                                               ; No predecessors!
  br label %96

96:                                               ; preds = %95, %93
  %97 = load %31*, %31** %20, align 8
  %98 = getelementptr inbounds %31, %31* %97, i32 0, i32 6
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %23, align 8
  %100 = load i64, i64* %23, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %96
  %103 = load %31*, %31** %20, align 8
  %104 = bitcast %31* %103 to i8*
  call void @freeReplyObject(i8* %104)
  store i32 3, i32* %22, align 4
  br label %342

105:                                              ; preds = %96
  %106 = load i32, i32* %14, align 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %113

108:                                              ; preds = %105
  %109 = load i64, i64* %23, align 8
  %110 = add i64 %109, 1
  %111 = mul i64 %110, 1
  %112 = call i8* @zmalloc(i64 %111)
  store i8* %112, i8** %19, align 8
  br label %113

113:                                              ; preds = %108, %105
  %114 = load %28*, %28** %9, align 8
  %115 = load %28*, %28** %10, align 8
  %116 = load %31*, %31** %20, align 8
  %117 = load i32, i32* %12, align 4
  %118 = load i8*, i8** %19, align 8
  %119 = call %31* @1467(%28* %114, %28* %115, %31* %116, i32 0, i32 %117, i8* %118)
  store %31* %119, %31** %21, align 8
  %120 = load %31*, %31** %21, align 8
  %121 = icmp eq %31* %120, null
  br i1 %121, label %122, label %123

122:                                              ; preds = %113
  br label %320

123:                                              ; preds = %113
  %124 = load %31*, %31** %21, align 8
  %125 = getelementptr inbounds %31, %31* %124, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 6
  br i1 %127, label %128, label %311

128:                                              ; preds = %123
  %129 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %129) #10
  %130 = load %31*, %31** %21, align 8
  %131 = getelementptr inbounds %31, %31* %130, i32 0, i32 4
  %132 = load i8*, i8** %131, align 8
  %133 = call i8* @strstr(i8* %132, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @917, i32 0, i32 0)) #12
  %134 = icmp ne i8* %133, null
  %135 = zext i1 %134 to i32
  store i32 %135, i32* %24, align 4
  %136 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %136) #10
  store i32 0, i32* %25, align 4
  %137 = load i32, i32* %24, align 4
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %164, label %139

139:                                              ; preds = %128
  %140 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %140) #10
  store i8* null, i8** %26, align 8
  %141 = bitcast %28** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %141) #10
  %142 = load %28*, %28** %9, align 8
  %143 = load i32, i32* %11, align 4
  %144 = call %28* @1465(%28* %142, i32 %143, i8** %26)
  store %28* %144, %28** %27, align 8
  %145 = load %28*, %28** %27, align 8
  %146 = icmp ne %28* %145, null
  br i1 %146, label %161, label %147

147:                                              ; preds = %139
  %148 = load i8*, i8** %26, align 8
  %149 = icmp eq i8* %148, null
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  store i32 1, i32* %25, align 4
  br label %160

151:                                              ; preds = %147
  %152 = load %28*, %28** %9, align 8
  %153 = getelementptr inbounds %28, %28* %152, i32 0, i32 2
  %154 = load i8*, i8** %153, align 8
  %155 = load %28*, %28** %9, align 8
  %156 = getelementptr inbounds %28, %28* %155, i32 0, i32 3
  %157 = load i32, i32* %156, align 8
  %158 = load i8*, i8** %26, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %154, i32 %157, i8* %158)
  %159 = load i8*, i8** %26, align 8
  call void @zfree(i8* %159)
  br label %160

160:                                              ; preds = %151, %150
  br label %161

161:                                              ; preds = %160, %139
  %162 = bitcast %28** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %162) #10
  %163 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %163) #10
  br label %164

164:                                              ; preds = %161, %128
  %165 = load i32, i32* %24, align 4
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %170, label %167

167:                                              ; preds = %164
  %168 = load i32, i32* %25, align 4
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %170, label %269

170:                                              ; preds = %167, %164
  %171 = load i32, i32* %17, align 4
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %187

173:                                              ; preds = %170
  %174 = load i32, i32* %25, align 4
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %176, label %187

176:                                              ; preds = %173
  %177 = load %28*, %28** %10, align 8
  %178 = getelementptr inbounds %28, %28* %177, i32 0, i32 2
  %179 = load i8*, i8** %178, align 8
  %180 = load %28*, %28** %10, align 8
  %181 = getelementptr inbounds %28, %28* %180, i32 0, i32 3
  %182 = load i32, i32* %181, align 8
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @918, i32 0, i32 0), i8* %179, i32 %182)
  %183 = load %28*, %28** %9, align 8
  %184 = load %28*, %28** %10, align 8
  %185 = load i32, i32* %11, align 4
  %186 = call i32 @1459(%28* %183, %28* %184, i32 %185, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @891, i32 0, i32 0), i8** null)
  br label %187

187:                                              ; preds = %176, %173, %170
  %188 = load i32, i32* %24, align 4
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %190, label %250

190:                                              ; preds = %187
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @919, i32 0, i32 0))
  %191 = load i32, i32* %18, align 4
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %249, label %193

193:                                              ; preds = %190
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @920, i32 0, i32 0))
  %194 = bitcast %24** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %194) #10
  %195 = call %24* @listCreate()
  store %24* %195, %24** %28, align 8
  %196 = load %28*, %28** %9, align 8
  %197 = load %28*, %28** %10, align 8
  %198 = load %31*, %31** %20, align 8
  %199 = load %24*, %24** %28, align 8
  %200 = call i32 @1468(%28* %196, %28* %197, %31* %198, %24* %199)
  store i32 %200, i32* %16, align 4
  %201 = load i32, i32* %16, align 4
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %193
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @921, i32 0, i32 0))
  %204 = load %24*, %24** %28, align 8
  call void @listRelease(%24* %204)
  store i32 4, i32* %22, align 4
  br label %245

205:                                              ; preds = %193
  %206 = load %24*, %24** %28, align 8
  %207 = getelementptr inbounds %24, %24* %206, i32 0, i32 5
  %208 = load i64, i64* %207, align 8
  %209 = icmp ugt i64 %208, 0
  br i1 %209, label %210, label %243

210:                                              ; preds = %205
  store i32 0, i32* %16, align 4
  %211 = load %24*, %24** %28, align 8
  %212 = getelementptr inbounds %24, %24* %211, i32 0, i32 5
  %213 = load i64, i64* %212, align 8
  %214 = load %28*, %28** %9, align 8
  %215 = getelementptr inbounds %28, %28* %214, i32 0, i32 2
  %216 = load i8*, i8** %215, align 8
  %217 = load %28*, %28** %9, align 8
  %218 = getelementptr inbounds %28, %28* %217, i32 0, i32 3
  %219 = load i32, i32* %218, align 8
  %220 = load %28*, %28** %10, align 8
  %221 = getelementptr inbounds %28, %28* %220, i32 0, i32 2
  %222 = load i8*, i8** %221, align 8
  %223 = load %28*, %28** %10, align 8
  %224 = getelementptr inbounds %28, %28* %223, i32 0, i32 3
  %225 = load i32, i32* %224, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @922, i32 0, i32 0), i64 %213, i8* %216, i32 %219, i8* %222, i32 %225)
  %226 = bitcast %30* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %226) #10
  %227 = bitcast %25** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %227) #10
  %228 = load %24*, %24** %28, align 8
  call void @listRewind(%24* %228, %30* %29)
  br label %229

229:                                              ; preds = %232, %210
  %230 = call %25* @listNext(%30* %29)
  store %25* %230, %25** %30, align 8
  %231 = icmp ne %25* %230, null
  br i1 %231, label %232, label %239

232:                                              ; preds = %229
  %233 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %233) #10
  %234 = load %25*, %25** %30, align 8
  %235 = getelementptr inbounds %25, %25* %234, i32 0, i32 2
  %236 = load i8*, i8** %235, align 8
  store i8* %236, i8** %31, align 8
  %237 = load i8*, i8** %31, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @923, i32 0, i32 0), i8* %237)
  %238 = bitcast i8** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #10
  br label %229

239:                                              ; preds = %229
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @924, i32 0, i32 0))
  %240 = load %24*, %24** %28, align 8
  call void @listRelease(%24* %240)
  store i32 4, i32* %22, align 4
  %241 = bitcast %25** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #10
  %242 = bitcast %30* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %242) #10
  br label %245

243:                                              ; preds = %205
  %244 = load %24*, %24** %28, align 8
  call void @listRelease(%24* %244)
  store i32 0, i32* %22, align 4
  br label %245

245:                                              ; preds = %203, %243, %239
  %246 = bitcast %24** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %246) #10
  %247 = load i32, i32* %22, align 4
  switch i32 %247, label %306 [
    i32 0, label %248
  ]

248:                                              ; preds = %245
  br label %249

249:                                              ; preds = %248, %190
  call void (i32, i8*, ...) @1410(i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @925, i32 0, i32 0))
  br label %250

250:                                              ; preds = %249, %187
  %251 = load %31*, %31** %21, align 8
  %252 = bitcast %31* %251 to i8*
  call void @freeReplyObject(i8* %252)
  %253 = load %28*, %28** %9, align 8
  %254 = load %28*, %28** %10, align 8
  %255 = load %31*, %31** %20, align 8
  %256 = load i32, i32* %24, align 4
  %257 = load i32, i32* %12, align 4
  %258 = call %31* @1467(%28* %253, %28* %254, %31* %255, i32 %256, i32 %257, i8* null)
  store %31* %258, %31** %21, align 8
  %259 = load %31*, %31** %21, align 8
  %260 = icmp ne %31* %259, null
  br i1 %260, label %261, label %266

261:                                              ; preds = %250
  %262 = load %31*, %31** %21, align 8
  %263 = getelementptr inbounds %31, %31* %262, i32 0, i32 0
  %264 = load i32, i32* %263, align 8
  %265 = icmp ne i32 %264, 6
  br label %266

266:                                              ; preds = %261, %250
  %267 = phi i1 [ false, %250 ], [ %265, %261 ]
  %268 = zext i1 %267 to i32
  store i32 %268, i32* %16, align 4
  br label %270

269:                                              ; preds = %167
  store i32 0, i32* %16, align 4
  br label %270

270:                                              ; preds = %269, %266
  %271 = load i32, i32* %16, align 4
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %305, label %273

273:                                              ; preds = %270
  %274 = load %31*, %31** %21, align 8
  %275 = icmp ne %31* %274, null
  br i1 %275, label %276, label %304

276:                                              ; preds = %273
  %277 = load i8**, i8*** %15, align 8
  %278 = icmp ne i8** %277, null
  br i1 %278, label %279, label %293

279:                                              ; preds = %276
  %280 = load %31*, %31** %21, align 8
  %281 = getelementptr inbounds %31, %31* %280, i32 0, i32 3
  %282 = load i64, i64* %281, align 8
  %283 = add i64 %282, 1
  %284 = mul i64 %283, 1
  %285 = call i8* @zmalloc(i64 %284)
  %286 = load i8**, i8*** %15, align 8
  store i8* %285, i8** %286, align 8
  %287 = load i8**, i8*** %15, align 8
  %288 = load i8*, i8** %287, align 8
  %289 = load %31*, %31** %21, align 8
  %290 = getelementptr inbounds %31, %31* %289, i32 0, i32 4
  %291 = load i8*, i8** %290, align 8
  %292 = call i8* @strcpy(i8* %288, i8* %291) #10
  br label %293

293:                                              ; preds = %279, %276
  %294 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  %295 = load %28*, %28** %9, align 8
  %296 = getelementptr inbounds %28, %28* %295, i32 0, i32 2
  %297 = load i8*, i8** %296, align 8
  %298 = load %28*, %28** %9, align 8
  %299 = getelementptr inbounds %28, %28* %298, i32 0, i32 3
  %300 = load i32, i32* %299, align 8
  %301 = load %31*, %31** %21, align 8
  %302 = getelementptr inbounds %31, %31* %301, i32 0, i32 4
  %303 = load i8*, i8** %302, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %297, i32 %300, i8* %303)
  br label %304

304:                                              ; preds = %293, %273
  store i32 4, i32* %22, align 4
  br label %306

305:                                              ; preds = %270
  store i32 0, i32* %22, align 4
  br label %306

306:                                              ; preds = %304, %305, %245
  %307 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %307) #10
  %308 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %308) #10
  %309 = load i32, i32* %22, align 4
  switch i32 %309, label %342 [
    i32 0, label %310
    i32 4, label %320
  ]

310:                                              ; preds = %306
  br label %311

311:                                              ; preds = %310, %123
  %312 = load i32, i32* %14, align 4
  %313 = icmp ne i32 %312, 0
  br i1 %313, label %314, label %319

314:                                              ; preds = %311
  %315 = load i8*, i8** %19, align 8
  %316 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @854, i32 0, i32 0), i8* %315)
  %317 = load %1*, %1** @stdout, align 8
  %318 = call i32 @fflush(%1* %317)
  br label %319

319:                                              ; preds = %314, %311
  br label %320

320:                                              ; preds = %319, %306, %122, %87
  %321 = load %31*, %31** %20, align 8
  %322 = icmp ne %31* %321, null
  br i1 %322, label %323, label %326

323:                                              ; preds = %320
  %324 = load %31*, %31** %20, align 8
  %325 = bitcast %31* %324 to i8*
  call void @freeReplyObject(i8* %325)
  br label %326

326:                                              ; preds = %323, %320
  %327 = load %31*, %31** %21, align 8
  %328 = icmp ne %31* %327, null
  br i1 %328, label %329, label %332

329:                                              ; preds = %326
  %330 = load %31*, %31** %21, align 8
  %331 = bitcast %31* %330 to i8*
  call void @freeReplyObject(i8* %331)
  br label %332

332:                                              ; preds = %329, %326
  %333 = load i8*, i8** %19, align 8
  %334 = icmp ne i8* %333, null
  br i1 %334, label %335, label %337

335:                                              ; preds = %332
  %336 = load i8*, i8** %19, align 8
  call void @zfree(i8* %336)
  br label %337

337:                                              ; preds = %335, %332
  %338 = load i32, i32* %16, align 4
  %339 = icmp ne i32 %338, 0
  br i1 %339, label %341, label %340

340:                                              ; preds = %337
  store i32 3, i32* %22, align 4
  br label %342

341:                                              ; preds = %337
  store i32 0, i32* %22, align 4
  br label %342

342:                                              ; preds = %341, %340, %306, %102, %56
  %343 = bitcast %31** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %343) #10
  %344 = bitcast %31** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %344) #10
  %345 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %345) #10
  %346 = load i32, i32* %22, align 4
  switch i32 %346, label %350 [
    i32 0, label %347
    i32 3, label %348
  ]

347:                                              ; preds = %342
  br label %39

348:                                              ; preds = %342
  %349 = load i32, i32* %16, align 4
  store i32 %349, i32* %8, align 4
  store i32 1, i32* %22, align 4
  br label %350

350:                                              ; preds = %348, %342
  %351 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #10
  %352 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #10
  %353 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %353) #10
  %354 = load i32, i32* %8, align 4
  ret i32 %354
}

; Function Attrs: nounwind uwtable
define internal %31* @1467(%28* %0, %28* %1, %31* %2, i32 %3, i32 %4, i8* %5) #0 {
  %7 = alloca %28*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca %31*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca %31*, align 8
  %14 = alloca i8**, align 8
  %15 = alloca i64*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca [255 x i8], align 16
  %21 = alloca [255 x i8], align 16
  %22 = alloca %31*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i32, align 4
  store %28* %0, %28** %7, align 8
  store %28* %1, %28** %8, align 8
  store %31* %2, %31** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i8* %5, i8** %12, align 8
  %26 = bitcast %31** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #10
  store %31* null, %31** %13, align 8
  %27 = bitcast i8*** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #10
  store i8** null, i8*** %14, align 8
  %28 = bitcast i64** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #10
  store i64* null, i64** %15, align 8
  %29 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #10
  %30 = load i32, i32* %10, align 4
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i64
  %33 = select i1 %31, i32 8, i32 7
  store i32 %33, i32* %16, align 4
  %34 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %35 = icmp ne i8* %34, null
  br i1 %35, label %36, label %39

36:                                               ; preds = %6
  %37 = load i32, i32* %16, align 4
  %38 = add nsw i32 %37, 2
  store i32 %38, i32* %16, align 4
  br label %39

39:                                               ; preds = %36, %6
  %40 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = load i32, i32* %16, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %16, align 4
  br label %45

45:                                               ; preds = %42, %39
  %46 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #10
  %47 = load i32, i32* %16, align 4
  %48 = sext i32 %47 to i64
  %49 = load %31*, %31** %9, align 8
  %50 = getelementptr inbounds %31, %31* %49, i32 0, i32 6
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %48, %51
  store i64 %52, i64* %17, align 8
  %53 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #10
  %54 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #10
  store i64 6, i64* %19, align 8
  %55 = load i64, i64* %17, align 8
  %56 = mul i64 %55, 8
  %57 = call i8* @zcalloc(i64 %56)
  %58 = bitcast i8* %57 to i8**
  store i8** %58, i8*** %14, align 8
  %59 = load i64, i64* %17, align 8
  %60 = mul i64 %59, 8
  %61 = call i8* @zcalloc(i64 %60)
  %62 = bitcast i8* %61 to i64*
  store i64* %62, i64** %15, align 8
  %63 = bitcast [255 x i8]* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 255, i8* %63) #10
  %64 = bitcast [255 x i8]* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 255, i8* %64) #10
  %65 = getelementptr inbounds [255 x i8], [255 x i8]* %20, i32 0, i32 0
  %66 = load %28*, %28** %8, align 8
  %67 = getelementptr inbounds %28, %28* %66, i32 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %65, i64 10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @926, i32 0, i32 0), i32 %68) #10
  %70 = getelementptr inbounds [255 x i8], [255 x i8]* %21, i32 0, i32 0
  %71 = load i32, i32* %11, align 4
  %72 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %70, i64 10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @926, i32 0, i32 0), i32 %71) #10
  %73 = load i8**, i8*** %14, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @360, i32 0, i32 0), i8** %74, align 8
  %75 = load i64*, i64** %15, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 0
  store i64 7, i64* %76, align 8
  %77 = load %28*, %28** %8, align 8
  %78 = getelementptr inbounds %28, %28* %77, i32 0, i32 2
  %79 = load i8*, i8** %78, align 8
  %80 = load i8**, i8*** %14, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 1
  store i8* %79, i8** %81, align 8
  %82 = load %28*, %28** %8, align 8
  %83 = getelementptr inbounds %28, %28* %82, i32 0, i32 2
  %84 = load i8*, i8** %83, align 8
  %85 = call i64 @strlen(i8* %84) #12
  %86 = load i64*, i64** %15, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 1
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds [255 x i8], [255 x i8]* %20, i32 0, i32 0
  %89 = load i8**, i8*** %14, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 2
  store i8* %88, i8** %90, align 8
  %91 = getelementptr inbounds [255 x i8], [255 x i8]* %20, i32 0, i32 0
  %92 = call i64 @strlen(i8* %91) #12
  %93 = load i64*, i64** %15, align 8
  %94 = getelementptr inbounds i64, i64* %93, i64 2
  store i64 %92, i64* %94, align 8
  %95 = load i8**, i8*** %14, align 8
  %96 = getelementptr inbounds i8*, i8** %95, i64 3
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), i8** %96, align 8
  %97 = load i64*, i64** %15, align 8
  %98 = getelementptr inbounds i64, i64* %97, i64 3
  store i64 0, i64* %98, align 8
  %99 = load i8**, i8*** %14, align 8
  %100 = getelementptr inbounds i8*, i8** %99, i64 4
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @927, i32 0, i32 0), i8** %100, align 8
  %101 = load i64*, i64** %15, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 4
  store i64 1, i64* %102, align 8
  %103 = getelementptr inbounds [255 x i8], [255 x i8]* %21, i32 0, i32 0
  %104 = load i8**, i8*** %14, align 8
  %105 = getelementptr inbounds i8*, i8** %104, i64 5
  store i8* %103, i8** %105, align 8
  %106 = getelementptr inbounds [255 x i8], [255 x i8]* %21, i32 0, i32 0
  %107 = call i64 @strlen(i8* %106) #12
  %108 = load i64*, i64** %15, align 8
  %109 = getelementptr inbounds i64, i64* %108, i64 5
  store i64 %107, i64* %109, align 8
  %110 = load i32, i32* %10, align 4
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %112, label %121

112:                                              ; preds = %45
  %113 = load i8**, i8*** %14, align 8
  %114 = load i64, i64* %19, align 8
  %115 = getelementptr inbounds i8*, i8** %113, i64 %114
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @928, i32 0, i32 0), i8** %115, align 8
  %116 = load i64*, i64** %15, align 8
  %117 = load i64, i64* %19, align 8
  %118 = getelementptr inbounds i64, i64* %116, i64 %117
  store i64 7, i64* %118, align 8
  %119 = load i64, i64* %19, align 8
  %120 = add i64 %119, 1
  store i64 %120, i64* %19, align 8
  br label %121

121:                                              ; preds = %112, %45
  %122 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %123 = icmp ne i8* %122, null
  br i1 %123, label %124, label %179

124:                                              ; preds = %121
  %125 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  %126 = icmp ne i8* %125, null
  br i1 %126, label %127, label %158

127:                                              ; preds = %124
  %128 = load i8**, i8*** %14, align 8
  %129 = load i64, i64* %19, align 8
  %130 = getelementptr inbounds i8*, i8** %128, i64 %129
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @929, i32 0, i32 0), i8** %130, align 8
  %131 = load i64*, i64** %15, align 8
  %132 = load i64, i64* %19, align 8
  %133 = getelementptr inbounds i64, i64* %131, i64 %132
  store i64 5, i64* %133, align 8
  %134 = load i64, i64* %19, align 8
  %135 = add i64 %134, 1
  store i64 %135, i64* %19, align 8
  %136 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  %137 = load i8**, i8*** %14, align 8
  %138 = load i64, i64* %19, align 8
  %139 = getelementptr inbounds i8*, i8** %137, i64 %138
  store i8* %136, i8** %139, align 8
  %140 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  %141 = call i64 @strlen(i8* %140) #12
  %142 = load i64*, i64** %15, align 8
  %143 = load i64, i64* %19, align 8
  %144 = getelementptr inbounds i64, i64* %142, i64 %143
  store i64 %141, i64* %144, align 8
  %145 = load i64, i64* %19, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %19, align 8
  %147 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %148 = load i8**, i8*** %14, align 8
  %149 = load i64, i64* %19, align 8
  %150 = getelementptr inbounds i8*, i8** %148, i64 %149
  store i8* %147, i8** %150, align 8
  %151 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %152 = call i64 @strlen(i8* %151) #12
  %153 = load i64*, i64** %15, align 8
  %154 = load i64, i64* %19, align 8
  %155 = getelementptr inbounds i64, i64* %153, i64 %154
  store i64 %152, i64* %155, align 8
  %156 = load i64, i64* %19, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %19, align 8
  br label %178

158:                                              ; preds = %124
  %159 = load i8**, i8*** %14, align 8
  %160 = load i64, i64* %19, align 8
  %161 = getelementptr inbounds i8*, i8** %159, i64 %160
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i8** %161, align 8
  %162 = load i64*, i64** %15, align 8
  %163 = load i64, i64* %19, align 8
  %164 = getelementptr inbounds i64, i64* %162, i64 %163
  store i64 4, i64* %164, align 8
  %165 = load i64, i64* %19, align 8
  %166 = add i64 %165, 1
  store i64 %166, i64* %19, align 8
  %167 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %168 = load i8**, i8*** %14, align 8
  %169 = load i64, i64* %19, align 8
  %170 = getelementptr inbounds i8*, i8** %168, i64 %169
  store i8* %167, i8** %170, align 8
  %171 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %172 = call i64 @strlen(i8* %171) #12
  %173 = load i64*, i64** %15, align 8
  %174 = load i64, i64* %19, align 8
  %175 = getelementptr inbounds i64, i64* %173, i64 %174
  store i64 %172, i64* %175, align 8
  %176 = load i64, i64* %19, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %19, align 8
  br label %178

178:                                              ; preds = %158, %127
  br label %179

179:                                              ; preds = %178, %121
  %180 = load i8**, i8*** %14, align 8
  %181 = load i64, i64* %19, align 8
  %182 = getelementptr inbounds i8*, i8** %180, i64 %181
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @296, i32 0, i32 0), i8** %182, align 8
  %183 = load i64*, i64** %15, align 8
  %184 = load i64, i64* %19, align 8
  %185 = getelementptr inbounds i64, i64* %183, i64 %184
  store i64 4, i64* %185, align 8
  %186 = load i64, i64* %19, align 8
  %187 = add i64 %186, 1
  store i64 %187, i64* %19, align 8
  store i64 0, i64* %18, align 8
  br label %188

188:                                              ; preds = %239, %179
  %189 = load i64, i64* %18, align 8
  %190 = load %31*, %31** %9, align 8
  %191 = getelementptr inbounds %31, %31* %190, i32 0, i32 6
  %192 = load i64, i64* %191, align 8
  %193 = icmp ult i64 %189, %192
  br i1 %193, label %194, label %242

194:                                              ; preds = %188
  %195 = bitcast %31** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %195) #10
  %196 = load %31*, %31** %9, align 8
  %197 = getelementptr inbounds %31, %31* %196, i32 0, i32 7
  %198 = load %31**, %31*** %197, align 8
  %199 = load i64, i64* %18, align 8
  %200 = getelementptr inbounds %31*, %31** %198, i64 %199
  %201 = load %31*, %31** %200, align 8
  store %31* %201, %31** %22, align 8
  %202 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #10
  %203 = load i64, i64* %18, align 8
  %204 = load i64, i64* %19, align 8
  %205 = add i64 %203, %204
  store i64 %205, i64* %23, align 8
  %206 = load %31*, %31** %22, align 8
  %207 = getelementptr inbounds %31, %31* %206, i32 0, i32 0
  %208 = load i32, i32* %207, align 8
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %211

210:                                              ; preds = %194
  br label %213

211:                                              ; preds = %194
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @930, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 3471, i8* getelementptr inbounds ([121 x i8], [121 x i8]* @931, i32 0, i32 0)) #14
  unreachable

212:                                              ; No predecessors!
  br label %213

213:                                              ; preds = %212, %210
  %214 = load %31*, %31** %22, align 8
  %215 = getelementptr inbounds %31, %31* %214, i32 0, i32 4
  %216 = load i8*, i8** %215, align 8
  %217 = load %31*, %31** %22, align 8
  %218 = getelementptr inbounds %31, %31* %217, i32 0, i32 3
  %219 = load i64, i64* %218, align 8
  %220 = call i8* @sdsnewlen(i8* %216, i64 %219)
  %221 = load i8**, i8*** %14, align 8
  %222 = load i64, i64* %23, align 8
  %223 = getelementptr inbounds i8*, i8** %221, i64 %222
  store i8* %220, i8** %223, align 8
  %224 = load %31*, %31** %22, align 8
  %225 = getelementptr inbounds %31, %31* %224, i32 0, i32 3
  %226 = load i64, i64* %225, align 8
  %227 = load i64*, i64** %15, align 8
  %228 = load i64, i64* %23, align 8
  %229 = getelementptr inbounds i64, i64* %227, i64 %228
  store i64 %226, i64* %229, align 8
  %230 = load i8*, i8** %12, align 8
  %231 = icmp ne i8* %230, null
  br i1 %231, label %232, label %236

232:                                              ; preds = %213
  %233 = load i8*, i8** %12, align 8
  %234 = load i64, i64* %18, align 8
  %235 = getelementptr inbounds i8, i8* %233, i64 %234
  store i8 46, i8* %235, align 1
  br label %236

236:                                              ; preds = %232, %213
  %237 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %237) #10
  %238 = bitcast %31** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #10
  br label %239

239:                                              ; preds = %236
  %240 = load i64, i64* %18, align 8
  %241 = add i64 %240, 1
  store i64 %241, i64* %18, align 8
  br label %188

242:                                              ; preds = %188
  %243 = load i8*, i8** %12, align 8
  %244 = icmp ne i8* %243, null
  br i1 %244, label %245, label %251

245:                                              ; preds = %242
  %246 = load i8*, i8** %12, align 8
  %247 = load %31*, %31** %9, align 8
  %248 = getelementptr inbounds %31, %31* %247, i32 0, i32 6
  %249 = load i64, i64* %248, align 8
  %250 = getelementptr inbounds i8, i8* %246, i64 %249
  store i8 0, i8* %250, align 1
  br label %251

251:                                              ; preds = %245, %242
  %252 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %252) #10
  store i8* null, i8** %24, align 8
  %253 = load %28*, %28** %7, align 8
  %254 = getelementptr inbounds %28, %28* %253, i32 0, i32 0
  %255 = load %10*, %10** %254, align 8
  %256 = load i64, i64* %17, align 8
  %257 = trunc i64 %256 to i32
  %258 = load i8**, i8*** %14, align 8
  %259 = load i64*, i64** %15, align 8
  %260 = call i32 @redisAppendCommandArgv(%10* %255, i32 %257, i8** %258, i64* %259)
  %261 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %261) #10
  %262 = load %28*, %28** %7, align 8
  %263 = getelementptr inbounds %28, %28* %262, i32 0, i32 0
  %264 = load %10*, %10** %263, align 8
  %265 = call i32 @redisGetReply(%10* %264, i8** %24)
  %266 = icmp eq i32 %265, 0
  %267 = zext i1 %266 to i32
  store i32 %267, i32* %25, align 4
  store i64 0, i64* %18, align 8
  br label %268

268:                                              ; preds = %281, %251
  %269 = load i64, i64* %18, align 8
  %270 = load %31*, %31** %9, align 8
  %271 = getelementptr inbounds %31, %31* %270, i32 0, i32 6
  %272 = load i64, i64* %271, align 8
  %273 = icmp ult i64 %269, %272
  br i1 %273, label %274, label %284

274:                                              ; preds = %268
  %275 = load i8**, i8*** %14, align 8
  %276 = load i64, i64* %18, align 8
  %277 = load i64, i64* %19, align 8
  %278 = add i64 %276, %277
  %279 = getelementptr inbounds i8*, i8** %275, i64 %278
  %280 = load i8*, i8** %279, align 8
  call void @sdsfree(i8* %280)
  br label %281

281:                                              ; preds = %274
  %282 = load i64, i64* %18, align 8
  %283 = add i64 %282, 1
  store i64 %283, i64* %18, align 8
  br label %268

284:                                              ; preds = %268
  %285 = load i32, i32* %25, align 4
  %286 = icmp ne i32 %285, 0
  br i1 %286, label %288, label %287

287:                                              ; preds = %284
  br label %291

288:                                              ; preds = %284
  %289 = load i8*, i8** %24, align 8
  %290 = bitcast i8* %289 to %31*
  store %31* %290, %31** %13, align 8
  br label %291

291:                                              ; preds = %288, %287
  %292 = load i8**, i8*** %14, align 8
  %293 = bitcast i8** %292 to i8*
  call void @zfree(i8* %293)
  %294 = load i64*, i64** %15, align 8
  %295 = bitcast i64* %294 to i8*
  call void @zfree(i8* %295)
  %296 = load %31*, %31** %13, align 8
  %297 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %297) #10
  %298 = bitcast i8** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %298) #10
  %299 = bitcast [255 x i8]* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 255, i8* %299) #10
  %300 = bitcast [255 x i8]* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 255, i8* %300) #10
  %301 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %301) #10
  %302 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %302) #10
  %303 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %303) #10
  %304 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %304) #10
  %305 = bitcast i64** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305) #10
  %306 = bitcast i8*** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %306) #10
  %307 = bitcast %31** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %307) #10
  ret %31* %296
}

; Function Attrs: nounwind uwtable
define internal i32 @1468(%28* %0, %28* %1, %31* %2, %24* %3) #0 {
  %5 = alloca %28*, align 8
  %6 = alloca %28*, align 8
  %7 = alloca %31*, align 8
  %8 = alloca %24*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8**, align 8
  %12 = alloca i64*, align 8
  %13 = alloca %31*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca %31*, align 8
  %19 = alloca %31*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  store %28* %0, %28** %5, align 8
  store %28* %1, %28** %6, align 8
  store %31* %2, %31** %7, align 8
  store %24* %3, %24** %8, align 8
  %24 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #10
  %25 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #10
  %26 = load %31*, %31** %7, align 8
  %27 = getelementptr inbounds %31, %31* %26, i32 0, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 2
  store i64 %29, i64* %10, align 8
  %30 = bitcast i8*** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #10
  %31 = load i64, i64* %10, align 8
  %32 = mul i64 %31, 8
  %33 = call i8* @zcalloc(i64 %32)
  %34 = bitcast i8* %33 to i8**
  store i8** %34, i8*** %11, align 8
  %35 = bitcast i64** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #10
  %36 = load i64, i64* %10, align 8
  %37 = mul i64 %36, 8
  %38 = call i8* @zcalloc(i64 %37)
  %39 = bitcast i8* %38 to i64*
  store i64* %39, i64** %12, align 8
  %40 = load i8**, i8*** %11, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @934, i32 0, i32 0), i8** %41, align 8
  %42 = load i64*, i64** %12, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 0
  store i64 5, i64* %43, align 8
  %44 = load i8**, i8*** %11, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @935, i32 0, i32 0), i8** %45, align 8
  %46 = load i64*, i64** %12, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 1
  store i64 12, i64* %47, align 8
  store i64 0, i64* %9, align 8
  br label %48

48:                                               ; preds = %82, %4
  %49 = load i64, i64* %9, align 8
  %50 = load %31*, %31** %7, align 8
  %51 = getelementptr inbounds %31, %31* %50, i32 0, i32 6
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %49, %52
  br i1 %53, label %54, label %85

54:                                               ; preds = %48
  %55 = bitcast %31** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #10
  %56 = load %31*, %31** %7, align 8
  %57 = getelementptr inbounds %31, %31* %56, i32 0, i32 7
  %58 = load %31**, %31*** %57, align 8
  %59 = load i64, i64* %9, align 8
  %60 = getelementptr inbounds %31*, %31** %58, i64 %59
  %61 = load %31*, %31** %60, align 8
  store %31* %61, %31** %13, align 8
  %62 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #10
  %63 = load i64, i64* %9, align 8
  %64 = add i64 %63, 2
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %14, align 4
  %66 = load %31*, %31** %13, align 8
  %67 = getelementptr inbounds %31, %31* %66, i32 0, i32 4
  %68 = load i8*, i8** %67, align 8
  %69 = load i8**, i8*** %11, align 8
  %70 = load i32, i32* %14, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8*, i8** %69, i64 %71
  store i8* %68, i8** %72, align 8
  %73 = load %31*, %31** %13, align 8
  %74 = getelementptr inbounds %31, %31* %73, i32 0, i32 3
  %75 = load i64, i64* %74, align 8
  %76 = load i64*, i64** %12, align 8
  %77 = load i32, i32* %14, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i64, i64* %76, i64 %78
  store i64 %75, i64* %79, align 8
  %80 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %80) #10
  %81 = bitcast %31** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %81) #10
  br label %82

82:                                               ; preds = %54
  %83 = load i64, i64* %9, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %9, align 8
  br label %48

85:                                               ; preds = %48
  %86 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %86) #10
  store i32 0, i32* %15, align 4
  %87 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %87) #10
  store i8* null, i8** %16, align 8
  %88 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %88) #10
  store i8* null, i8** %17, align 8
  %89 = bitcast %31** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %89) #10
  store %31* null, %31** %18, align 8
  %90 = bitcast %31** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %90) #10
  store %31* null, %31** %19, align 8
  %91 = load %28*, %28** %5, align 8
  %92 = getelementptr inbounds %28, %28* %91, i32 0, i32 0
  %93 = load %10*, %10** %92, align 8
  %94 = load i64, i64* %10, align 8
  %95 = trunc i64 %94 to i32
  %96 = load i8**, i8*** %11, align 8
  %97 = load i64*, i64** %12, align 8
  %98 = call i32 @redisAppendCommandArgv(%10* %93, i32 %95, i8** %96, i64* %97)
  %99 = load %28*, %28** %5, align 8
  %100 = getelementptr inbounds %28, %28* %99, i32 0, i32 0
  %101 = load %10*, %10** %100, align 8
  %102 = call i32 @redisGetReply(%10* %101, i8** %16)
  %103 = icmp eq i32 %102, 0
  %104 = zext i1 %103 to i32
  store i32 %104, i32* %15, align 4
  %105 = load i32, i32* %15, align 4
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %85
  br label %260

108:                                              ; preds = %85
  %109 = load i8*, i8** %16, align 8
  %110 = bitcast i8* %109 to %31*
  store %31* %110, %31** %18, align 8
  %111 = load %28*, %28** %6, align 8
  %112 = getelementptr inbounds %28, %28* %111, i32 0, i32 0
  %113 = load %10*, %10** %112, align 8
  %114 = load i64, i64* %10, align 8
  %115 = trunc i64 %114 to i32
  %116 = load i8**, i8*** %11, align 8
  %117 = load i64*, i64** %12, align 8
  %118 = call i32 @redisAppendCommandArgv(%10* %113, i32 %115, i8** %116, i64* %117)
  %119 = load %28*, %28** %6, align 8
  %120 = getelementptr inbounds %28, %28* %119, i32 0, i32 0
  %121 = load %10*, %10** %120, align 8
  %122 = call i32 @redisGetReply(%10* %121, i8** %17)
  %123 = icmp eq i32 %122, 0
  %124 = zext i1 %123 to i32
  store i32 %124, i32* %15, align 4
  %125 = load i32, i32* %15, align 4
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %108
  br label %260

128:                                              ; preds = %108
  %129 = load i8*, i8** %17, align 8
  %130 = bitcast i8* %129 to %31*
  store %31* %130, %31** %19, align 8
  %131 = load %31*, %31** %18, align 8
  %132 = getelementptr inbounds %31, %31* %131, i32 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = icmp ne i32 %133, 6
  br i1 %134, label %135, label %140

135:                                              ; preds = %128
  %136 = load %31*, %31** %19, align 8
  %137 = getelementptr inbounds %31, %31* %136, i32 0, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = icmp ne i32 %138, 6
  br label %140

140:                                              ; preds = %135, %128
  %141 = phi i1 [ false, %128 ], [ %139, %135 ]
  %142 = zext i1 %141 to i32
  store i32 %142, i32* %15, align 4
  %143 = load %31*, %31** %18, align 8
  %144 = getelementptr inbounds %31, %31* %143, i32 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %145, 6
  br i1 %146, label %147, label %157

147:                                              ; preds = %140
  %148 = load %28*, %28** %5, align 8
  %149 = getelementptr inbounds %28, %28* %148, i32 0, i32 2
  %150 = load i8*, i8** %149, align 8
  %151 = load %28*, %28** %5, align 8
  %152 = getelementptr inbounds %28, %28* %151, i32 0, i32 3
  %153 = load i32, i32* %152, align 8
  %154 = load %31*, %31** %18, align 8
  %155 = getelementptr inbounds %31, %31* %154, i32 0, i32 4
  %156 = load i8*, i8** %155, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %150, i32 %153, i8* %156)
  store i32 0, i32* %15, align 4
  br label %157

157:                                              ; preds = %147, %140
  %158 = load %31*, %31** %19, align 8
  %159 = getelementptr inbounds %31, %31* %158, i32 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = icmp eq i32 %160, 6
  br i1 %161, label %162, label %172

162:                                              ; preds = %157
  %163 = load %28*, %28** %6, align 8
  %164 = getelementptr inbounds %28, %28* %163, i32 0, i32 2
  %165 = load i8*, i8** %164, align 8
  %166 = load %28*, %28** %6, align 8
  %167 = getelementptr inbounds %28, %28* %166, i32 0, i32 3
  %168 = load i32, i32* %167, align 8
  %169 = load %31*, %31** %19, align 8
  %170 = getelementptr inbounds %31, %31* %169, i32 0, i32 4
  %171 = load i8*, i8** %170, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %165, i32 %168, i8* %171)
  store i32 0, i32* %15, align 4
  br label %172

172:                                              ; preds = %162, %157
  %173 = load i32, i32* %15, align 4
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %176, label %175

175:                                              ; preds = %172
  br label %260

176:                                              ; preds = %172
  %177 = load %31*, %31** %7, align 8
  %178 = getelementptr inbounds %31, %31* %177, i32 0, i32 6
  %179 = load i64, i64* %178, align 8
  %180 = load %31*, %31** %18, align 8
  %181 = getelementptr inbounds %31, %31* %180, i32 0, i32 6
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %179, %182
  br i1 %183, label %184, label %193

184:                                              ; preds = %176
  %185 = load %31*, %31** %7, align 8
  %186 = getelementptr inbounds %31, %31* %185, i32 0, i32 6
  %187 = load i64, i64* %186, align 8
  %188 = load %31*, %31** %19, align 8
  %189 = getelementptr inbounds %31, %31* %188, i32 0, i32 6
  %190 = load i64, i64* %189, align 8
  %191 = icmp eq i64 %187, %190
  br i1 %191, label %192, label %193

192:                                              ; preds = %184
  br label %195

193:                                              ; preds = %184, %176
  call void @__assert_fail(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @936, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 3387, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @937, i32 0, i32 0)) #14
  unreachable

194:                                              ; No predecessors!
  br label %195

195:                                              ; preds = %194, %192
  store i64 0, i64* %9, align 8
  br label %196

196:                                              ; preds = %256, %195
  %197 = load i64, i64* %9, align 8
  %198 = load %31*, %31** %7, align 8
  %199 = getelementptr inbounds %31, %31* %198, i32 0, i32 6
  %200 = load i64, i64* %199, align 8
  %201 = icmp ult i64 %197, %200
  br i1 %201, label %202, label %259

202:                                              ; preds = %196
  %203 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %203) #10
  %204 = load %31*, %31** %7, align 8
  %205 = getelementptr inbounds %31, %31* %204, i32 0, i32 7
  %206 = load %31**, %31*** %205, align 8
  %207 = load i64, i64* %9, align 8
  %208 = getelementptr inbounds %31*, %31** %206, i64 %207
  %209 = load %31*, %31** %208, align 8
  %210 = getelementptr inbounds %31, %31* %209, i32 0, i32 4
  %211 = load i8*, i8** %210, align 8
  store i8* %211, i8** %20, align 8
  %212 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %212) #10
  %213 = load %31*, %31** %18, align 8
  %214 = getelementptr inbounds %31, %31* %213, i32 0, i32 7
  %215 = load %31**, %31*** %214, align 8
  %216 = load i64, i64* %9, align 8
  %217 = getelementptr inbounds %31*, %31** %215, i64 %216
  %218 = load %31*, %31** %217, align 8
  %219 = getelementptr inbounds %31, %31* %218, i32 0, i32 4
  %220 = load i8*, i8** %219, align 8
  store i8* %220, i8** %21, align 8
  %221 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %221) #10
  %222 = load %31*, %31** %19, align 8
  %223 = getelementptr inbounds %31, %31* %222, i32 0, i32 7
  %224 = load %31**, %31*** %223, align 8
  %225 = load i64, i64* %9, align 8
  %226 = getelementptr inbounds %31*, %31** %224, i64 %225
  %227 = load %31*, %31** %226, align 8
  %228 = getelementptr inbounds %31, %31* %227, i32 0, i32 4
  %229 = load i8*, i8** %228, align 8
  store i8* %229, i8** %22, align 8
  %230 = load i8*, i8** %21, align 8
  %231 = load i8*, i8** @932, align 8
  %232 = call i32 @strcmp(i8* %230, i8* %231) #12
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %239, label %234

234:                                              ; preds = %202
  %235 = load i8*, i8** %22, align 8
  %236 = load i8*, i8** @932, align 8
  %237 = call i32 @strcmp(i8* %235, i8* %236) #12
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %234, %202
  store i32 8, i32* %23, align 4
  br label %250

240:                                              ; preds = %234
  %241 = load i8*, i8** %21, align 8
  %242 = load i8*, i8** %22, align 8
  %243 = call i32 @strcmp(i8* %241, i8* %242) #12
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %245, label %249

245:                                              ; preds = %240
  %246 = load %24*, %24** %8, align 8
  %247 = load i8*, i8** %20, align 8
  %248 = call %24* @listAddNodeTail(%24* %246, i8* %247)
  br label %249

249:                                              ; preds = %245, %240
  store i32 0, i32* %23, align 4
  br label %250

250:                                              ; preds = %249, %239
  %251 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %251) #10
  %252 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %252) #10
  %253 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %253) #10
  %254 = load i32, i32* %23, align 4
  switch i32 %254, label %287 [
    i32 0, label %255
    i32 8, label %256
  ]

255:                                              ; preds = %250
  br label %256

256:                                              ; preds = %255, %250
  %257 = load i64, i64* %9, align 8
  %258 = add i64 %257, 1
  store i64 %258, i64* %9, align 8
  br label %196

259:                                              ; preds = %196
  br label %260

260:                                              ; preds = %259, %175, %127, %107
  %261 = load %31*, %31** %18, align 8
  %262 = icmp ne %31* %261, null
  br i1 %262, label %263, label %266

263:                                              ; preds = %260
  %264 = load %31*, %31** %18, align 8
  %265 = bitcast %31* %264 to i8*
  call void @freeReplyObject(i8* %265)
  br label %266

266:                                              ; preds = %263, %260
  %267 = load %31*, %31** %19, align 8
  %268 = icmp ne %31* %267, null
  br i1 %268, label %269, label %272

269:                                              ; preds = %266
  %270 = load %31*, %31** %19, align 8
  %271 = bitcast %31* %270 to i8*
  call void @freeReplyObject(i8* %271)
  br label %272

272:                                              ; preds = %269, %266
  %273 = load i8**, i8*** %11, align 8
  %274 = bitcast i8** %273 to i8*
  call void @zfree(i8* %274)
  %275 = load i64*, i64** %12, align 8
  %276 = bitcast i64* %275 to i8*
  call void @zfree(i8* %276)
  %277 = load i32, i32* %15, align 4
  store i32 1, i32* %23, align 4
  %278 = bitcast %31** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %278) #10
  %279 = bitcast %31** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %279) #10
  %280 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %280) #10
  %281 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %281) #10
  %282 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #10
  %283 = bitcast i64** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %283) #10
  %284 = bitcast i8*** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %284) #10
  %285 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285) #10
  %286 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %286) #10
  ret i32 %277

287:                                              ; preds = %250
  unreachable
}

declare dso_local i8* @sdsnewlen(i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal void @1469(%24* %0) #0 {
  %2 = alloca %24*, align 8
  %3 = alloca %28, align 8
  %4 = alloca %30, align 8
  %5 = alloca %25*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store %24* %0, %24** %2, align 8
  %8 = bitcast %28* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16520, i8* %8) #10
  %9 = bitcast %28* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16520, i1 false)
  %10 = bitcast %30* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #10
  %11 = bitcast %25** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  %12 = load %24*, %24** %2, align 8
  call void @listRewind(%24* %12, %30* %4)
  br label %13

13:                                               ; preds = %32, %1
  %14 = call %25* @listNext(%30* %4)
  store %25* %14, %25** %5, align 8
  %15 = icmp ne %25* %14, null
  br i1 %15, label %16, label %34

16:                                               ; preds = %13
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  %18 = load %25*, %25** %5, align 8
  %19 = getelementptr inbounds %25, %25* %18, i32 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @atoi(i8* %20) #12
  store i32 %21, i32* %6, align 4
  %22 = load i32, i32* %6, align 4
  %23 = icmp sge i32 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %16
  %25 = load i32, i32* %6, align 4
  %26 = icmp slt i32 %25, 16384
  br i1 %26, label %27, label %32

27:                                               ; preds = %24
  %28 = getelementptr inbounds %28, %28* %3, i32 0, i32 11
  %29 = load i32, i32* %6, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [16384 x i8], [16384 x i8]* %28, i64 0, i64 %30
  store i8 1, i8* %31, align 1
  br label %32

32:                                               ; preds = %27, %24, %16
  %33 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #10
  br label %13

34:                                               ; preds = %13
  %35 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #10
  %36 = call i8* @1437(%28* %3)
  store i8* %36, i8** %7, align 8
  %37 = load i8*, i8** %7, align 8
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @823, i32 0, i32 0), i8* %37)
  %39 = load i8*, i8** %7, align 8
  call void @sdsfree(i8* %39)
  %40 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #10
  %41 = bitcast %25** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #10
  %42 = bitcast %30* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %42) #10
  %43 = bitcast %28* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16520, i8* %43) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal %28* @1470() #0 {
  %1 = alloca %28*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %30, align 8
  %5 = alloca %25*, align 8
  %6 = alloca %28*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %28*, align 8
  %9 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  store i32 0, i32* %2, align 4
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  %11 = bitcast %30* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %11) #10
  %12 = bitcast %25** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %13, %30* %4)
  br label %14

14:                                               ; preds = %35, %32, %0
  %15 = call %25* @listNext(%30* %4)
  store %25* %15, %25** %5, align 8
  %16 = icmp ne %25* %15, null
  br i1 %16, label %17, label %36

17:                                               ; preds = %14
  %18 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #10
  %19 = load %25*, %25** %5, align 8
  %20 = getelementptr inbounds %25, %25* %19, i32 0, i32 2
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast i8* %21 to %28*
  store %28* %22, %28** %6, align 8
  %23 = load %28*, %28** %6, align 8
  %24 = getelementptr inbounds %28, %28* %23, i32 0, i32 7
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 2
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %17
  store i32 2, i32* %7, align 4
  br label %32

29:                                               ; preds = %17
  %30 = load i32, i32* %2, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %2, align 4
  store i32 0, i32* %7, align 4
  br label %32

32:                                               ; preds = %29, %28
  %33 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #10
  %34 = load i32, i32* %7, align 4
  switch i32 %34, label %76 [
    i32 0, label %35
    i32 2, label %14
  ]

35:                                               ; preds = %32
  br label %14

36:                                               ; preds = %14
  %37 = call i64 @time(i64* null) #10
  %38 = trunc i64 %37 to i32
  call void @srand(i32 %38) #10
  %39 = call i32 @rand() #10
  %40 = load i32, i32* %2, align 4
  %41 = srem i32 %39, %40
  store i32 %41, i32* %3, align 4
  %42 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %42, %30* %4)
  br label %43

43:                                               ; preds = %68, %65, %36
  %44 = call %25* @listNext(%30* %4)
  store %25* %44, %25** %5, align 8
  %45 = icmp ne %25* %44, null
  br i1 %45, label %46, label %69

46:                                               ; preds = %43
  %47 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #10
  %48 = load %25*, %25** %5, align 8
  %49 = getelementptr inbounds %25, %25* %48, i32 0, i32 2
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast i8* %50 to %28*
  store %28* %51, %28** %8, align 8
  %52 = load %28*, %28** %8, align 8
  %53 = getelementptr inbounds %28, %28* %52, i32 0, i32 7
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 2
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %46
  store i32 4, i32* %7, align 4
  br label %65

58:                                               ; preds = %46
  %59 = load i32, i32* %3, align 4
  %60 = add nsw i32 %59, -1
  store i32 %60, i32* %3, align 4
  %61 = icmp ne i32 %59, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = load %28*, %28** %8, align 8
  store %28* %63, %28** %1, align 8
  store i32 1, i32* %7, align 4
  br label %65

64:                                               ; preds = %58
  store i32 0, i32* %7, align 4
  br label %65

65:                                               ; preds = %64, %62, %57
  %66 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %66) #10
  %67 = load i32, i32* %7, align 4
  switch i32 %67, label %70 [
    i32 0, label %68
    i32 4, label %43
  ]

68:                                               ; preds = %65
  br label %43

69:                                               ; preds = %43
  store %28* null, %28** %1, align 8
  store i32 1, i32* %7, align 4
  br label %70

70:                                               ; preds = %69, %65
  %71 = bitcast %25** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %71) #10
  %72 = bitcast %30* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %72) #10
  %73 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %73) #10
  %74 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %74) #10
  %75 = load %28*, %28** %1, align 8
  ret %28* %75

76:                                               ; preds = %32
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @1471(i32 %0, i8** %1, i8** %2, i32* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i8** %1, i8*** %7, align 8
  store i8** %2, i8*** %8, align 8
  store i32* %3, i32** %9, align 8
  %14 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #10
  store i32 0, i32* %10, align 4
  %15 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  store i8* null, i8** %11, align 8
  %16 = load i32, i32* %6, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %32

18:                                               ; preds = %4
  %19 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #10
  %20 = load i8**, i8*** %7, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 0
  %22 = load i8*, i8** %21, align 8
  store i8* %22, i8** %12, align 8
  %23 = load i8*, i8** %12, align 8
  %24 = call i32 @1442(i8* %23, i8** %11, i32* %10, i32* null)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %18
  store i32 0, i32* %5, align 4
  store i32 1, i32* %13, align 4
  br label %28

27:                                               ; preds = %18
  store i32 0, i32* %13, align 4
  br label %28

28:                                               ; preds = %27, %26
  %29 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #10
  %30 = load i32, i32* %13, align 4
  switch i32 %30, label %53 [
    i32 0, label %31
  ]

31:                                               ; preds = %28
  br label %40

32:                                               ; preds = %4
  %33 = load i8**, i8*** %7, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 0
  %35 = load i8*, i8** %34, align 8
  store i8* %35, i8** %11, align 8
  %36 = load i8**, i8*** %7, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 1
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 @atoi(i8* %38) #12
  store i32 %39, i32* %10, align 4
  br label %40

40:                                               ; preds = %32, %31
  %41 = load i8*, i8** %11, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = load i32, i32* %10, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %43, %40
  store i32 0, i32* %5, align 4
  store i32 1, i32* %13, align 4
  br label %53

47:                                               ; preds = %43
  %48 = load i8*, i8** %11, align 8
  %49 = load i8**, i8*** %8, align 8
  store i8* %48, i8** %49, align 8
  %50 = load i32, i32* %10, align 4
  %51 = load i32*, i32** %9, align 8
  store i32 %50, i32* %51, align 4
  br label %52

52:                                               ; preds = %47
  store i32 1, i32* %5, align 4
  store i32 1, i32* %13, align 4
  br label %53

53:                                               ; preds = %52, %46, %28
  %54 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #10
  %55 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %55) #10
  %56 = load i32, i32* %5, align 4
  ret i32 %56
}

; Function Attrs: nounwind uwtable
define internal %28* @1472() #0 {
  %1 = alloca %28*, align 8
  %2 = alloca i32, align 4
  %3 = alloca %30, align 8
  %4 = alloca %25*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca i32, align 4
  %7 = bitcast %28** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  store %28* null, %28** %1, align 8
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #10
  store i32 0, i32* %2, align 4
  %9 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #10
  %10 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  %11 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %11, %30* %3)
  br label %12

12:                                               ; preds = %45, %42, %0
  %13 = call %25* @listNext(%30* %3)
  store %25* %13, %25** %4, align 8
  %14 = icmp ne %25* %13, null
  br i1 %14, label %15, label %46

15:                                               ; preds = %12
  %16 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #10
  %17 = load %25*, %25** %4, align 8
  %18 = getelementptr inbounds %25, %25* %17, i32 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast i8* %19 to %28*
  store %28* %20, %28** %5, align 8
  %21 = load %28*, %28** %5, align 8
  %22 = getelementptr inbounds %28, %28* %21, i32 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 2
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %15
  store i32 2, i32* %6, align 4
  br label %42

27:                                               ; preds = %15
  %28 = load %28*, %28** %1, align 8
  %29 = icmp eq %28* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = load %28*, %28** %5, align 8
  %32 = getelementptr inbounds %28, %28* %31, i32 0, i32 13
  %33 = load i32, i32* %32, align 8
  %34 = load i32, i32* %2, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %30, %27
  %37 = load %28*, %28** %5, align 8
  store %28* %37, %28** %1, align 8
  %38 = load %28*, %28** %5, align 8
  %39 = getelementptr inbounds %28, %28* %38, i32 0, i32 13
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %2, align 4
  br label %41

41:                                               ; preds = %36, %30
  store i32 0, i32* %6, align 4
  br label %42

42:                                               ; preds = %41, %26
  %43 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #10
  %44 = load i32, i32* %6, align 4
  switch i32 %44, label %52 [
    i32 0, label %45
    i32 2, label %12
  ]

45:                                               ; preds = %42
  br label %12

46:                                               ; preds = %12
  %47 = load %28*, %28** %1, align 8
  store i32 1, i32* %6, align 4
  %48 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #10
  %49 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %49) #10
  %50 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %50) #10
  %51 = bitcast %28** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #10
  ret %28* %47

52:                                               ; preds = %42
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1473() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %30, align 8
  %4 = alloca %25*, align 8
  %5 = alloca %28*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [9 x i8], align 1
  %10 = alloca %30, align 8
  %11 = alloca %25*, align 8
  %12 = alloca %28*, align 8
  %13 = alloca %31*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca float, align 4
  %16 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  store i32 0, i32* %1, align 4
  %17 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  store i32 0, i32* %2, align 4
  %18 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %18) #10
  %19 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #10
  %20 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %20, %30* %3)
  br label %21

21:                                               ; preds = %182, %179, %0
  %22 = call %25* @listNext(%30* %3)
  store %25* %22, %25** %4, align 8
  %23 = icmp ne %25* %22, null
  br i1 %23, label %24, label %183

24:                                               ; preds = %21
  %25 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #10
  %26 = load %25*, %25** %4, align 8
  %27 = getelementptr inbounds %25, %25* %26, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to %28*
  store %28* %29, %28** %5, align 8
  %30 = load %28*, %28** %5, align 8
  %31 = getelementptr inbounds %28, %28* %30, i32 0, i32 7
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %178, label %35

35:                                               ; preds = %24
  %36 = load %28*, %28** %5, align 8
  %37 = getelementptr inbounds %28, %28* %36, i32 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = icmp ne i8* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %35
  store i32 2, i32* %6, align 4
  br label %179

41:                                               ; preds = %35
  %42 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #10
  store i32 0, i32* %7, align 4
  %43 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #10
  store i32 -1, i32* %8, align 4
  %44 = bitcast [9 x i8]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 9, i8* %44) #10
  %45 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i32 0, i32 0
  %46 = load %28*, %28** %5, align 8
  %47 = getelementptr inbounds %28, %28* %46, i32 0, i32 1
  %48 = load i8*, i8** %47, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %48, i64 8, i1 false)
  %49 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i64 0, i64 8
  store i8 0, i8* %49, align 1
  %50 = bitcast %30* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %50) #10
  %51 = bitcast %25** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #10
  %52 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %52, %30* %10)
  br label %53

53:                                               ; preds = %93, %90, %41
  %54 = call %25* @listNext(%30* %10)
  store %25* %54, %25** %11, align 8
  %55 = icmp ne %25* %54, null
  br i1 %55, label %56, label %94

56:                                               ; preds = %53
  %57 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #10
  %58 = load %25*, %25** %11, align 8
  %59 = getelementptr inbounds %25, %25* %58, i32 0, i32 2
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast i8* %60 to %28*
  store %28* %61, %28** %12, align 8
  %62 = load %28*, %28** %12, align 8
  %63 = load %28*, %28** %5, align 8
  %64 = icmp eq %28* %62, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %56
  %66 = load %28*, %28** %12, align 8
  %67 = getelementptr inbounds %28, %28* %66, i32 0, i32 7
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 2
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %65, %56
  store i32 4, i32* %6, align 4
  br label %90

72:                                               ; preds = %65
  %73 = load %28*, %28** %12, align 8
  %74 = getelementptr inbounds %28, %28* %73, i32 0, i32 9
  %75 = load i8*, i8** %74, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = load %28*, %28** %12, align 8
  %79 = getelementptr inbounds %28, %28* %78, i32 0, i32 9
  %80 = load i8*, i8** %79, align 8
  %81 = load %28*, %28** %5, align 8
  %82 = getelementptr inbounds %28, %28* %81, i32 0, i32 1
  %83 = load i8*, i8** %82, align 8
  %84 = call i32 @strcmp(i8* %80, i8* %83) #12
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %77
  %87 = load i32, i32* %7, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %7, align 4
  br label %89

89:                                               ; preds = %86, %77, %72
  store i32 0, i32* %6, align 4
  br label %90

90:                                               ; preds = %89, %71
  %91 = bitcast %28** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #10
  %92 = load i32, i32* %6, align 4
  switch i32 %92, label %201 [
    i32 0, label %93
    i32 4, label %53
  ]

93:                                               ; preds = %90
  br label %53

94:                                               ; preds = %53
  %95 = bitcast %31** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %95) #10
  %96 = load %28*, %28** %5, align 8
  %97 = getelementptr inbounds %28, %28* %96, i32 0, i32 0
  %98 = load %10*, %10** %97, align 8
  %99 = call i8* (%10*, i8*, ...) @redisCommand(%10* %98, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @178, i32 0, i32 0))
  %100 = bitcast i8* %99 to %31*
  store %31* %100, %31** %13, align 8
  %101 = load %31*, %31** %13, align 8
  %102 = icmp ne %31* %101, null
  br i1 %102, label %103, label %113

103:                                              ; preds = %94
  %104 = load %31*, %31** %13, align 8
  %105 = getelementptr inbounds %31, %31* %104, i32 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 3
  br i1 %107, label %108, label %113

108:                                              ; preds = %103
  %109 = load %31*, %31** %13, align 8
  %110 = getelementptr inbounds %31, %31* %109, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = trunc i64 %111 to i32
  store i32 %112, i32* %8, align 4
  br label %113

113:                                              ; preds = %108, %103, %94
  %114 = load i32, i32* %8, align 4
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %116, label %144

116:                                              ; preds = %113
  %117 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %117) #10
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), i8** %14, align 8
  %118 = load %31*, %31** %13, align 8
  %119 = icmp ne %31* %118, null
  br i1 %119, label %120, label %129

120:                                              ; preds = %116
  %121 = load %31*, %31** %13, align 8
  %122 = getelementptr inbounds %31, %31* %121, i32 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = icmp eq i32 %123, 6
  br i1 %124, label %125, label %129

125:                                              ; preds = %120
  %126 = load %31*, %31** %13, align 8
  %127 = getelementptr inbounds %31, %31* %126, i32 0, i32 4
  %128 = load i8*, i8** %127, align 8
  store i8* %128, i8** %14, align 8
  br label %129

129:                                              ; preds = %125, %120, %116
  %130 = load %28*, %28** %5, align 8
  %131 = getelementptr inbounds %28, %28* %130, i32 0, i32 2
  %132 = load i8*, i8** %131, align 8
  %133 = load %28*, %28** %5, align 8
  %134 = getelementptr inbounds %28, %28* %133, i32 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = load i8*, i8** %14, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @774, i32 0, i32 0), i8* %132, i32 %135, i8* %136)
  %137 = load %31*, %31** %13, align 8
  %138 = icmp ne %31* %137, null
  br i1 %138, label %139, label %142

139:                                              ; preds = %129
  %140 = load %31*, %31** %13, align 8
  %141 = bitcast %31* %140 to i8*
  call void @freeReplyObject(i8* %141)
  br label %142

142:                                              ; preds = %139, %129
  store i32 1, i32* %6, align 4
  %143 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #10
  br label %169

144:                                              ; preds = %113
  %145 = load %31*, %31** %13, align 8
  %146 = icmp ne %31* %145, null
  br i1 %146, label %147, label %150

147:                                              ; preds = %144
  %148 = load %31*, %31** %13, align 8
  %149 = bitcast %31* %148 to i8*
  call void @freeReplyObject(i8* %149)
  br label %150

150:                                              ; preds = %147, %144
  %151 = load %28*, %28** %5, align 8
  %152 = getelementptr inbounds %28, %28* %151, i32 0, i32 2
  %153 = load i8*, i8** %152, align 8
  %154 = load %28*, %28** %5, align 8
  %155 = getelementptr inbounds %28, %28* %154, i32 0, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds [9 x i8], [9 x i8]* %9, i32 0, i32 0
  %158 = load i32, i32* %8, align 4
  %159 = load %28*, %28** %5, align 8
  %160 = getelementptr inbounds %28, %28* %159, i32 0, i32 12
  %161 = load i32, i32* %160, align 4
  %162 = load i32, i32* %7, align 4
  %163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @979, i32 0, i32 0), i8* %153, i32 %156, i8* %157, i32 %158, i32 %161, i32 %162)
  %164 = load i32, i32* %1, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %1, align 4
  %166 = load i32, i32* %8, align 4
  %167 = load i32, i32* %2, align 4
  %168 = add nsw i32 %167, %166
  store i32 %168, i32* %2, align 4
  store i32 0, i32* %6, align 4
  br label %169

169:                                              ; preds = %150, %142
  %170 = bitcast %31** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #10
  %171 = bitcast %25** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %171) #10
  %172 = bitcast %30* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %172) #10
  %173 = bitcast [9 x i8]* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 9, i8* %173) #10
  %174 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %174) #10
  %175 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %175) #10
  %176 = load i32, i32* %6, align 4
  switch i32 %176, label %179 [
    i32 0, label %177
  ]

177:                                              ; preds = %169
  br label %178

178:                                              ; preds = %177, %24
  store i32 0, i32* %6, align 4
  br label %179

179:                                              ; preds = %178, %169, %40
  %180 = bitcast %28** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %180) #10
  %181 = load i32, i32* %6, align 4
  switch i32 %181, label %194 [
    i32 0, label %182
    i32 2, label %21
  ]

182:                                              ; preds = %179
  br label %21

183:                                              ; preds = %21
  %184 = load i32, i32* %2, align 4
  %185 = load i32, i32* %1, align 4
  call void (i32, i8*, ...) @1410(i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @980, i32 0, i32 0), i32 %184, i32 %185)
  %186 = bitcast float* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %186) #10
  %187 = load i32, i32* %2, align 4
  %188 = sitofp i32 %187 to float
  %189 = fdiv float %188, 1.638400e+04
  store float %189, float* %15, align 4
  %190 = load float, float* %15, align 4
  %191 = fpext float %190 to double
  %192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @981, i32 0, i32 0), double %191)
  %193 = bitcast float* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #10
  store i32 0, i32* %6, align 4
  br label %194

194:                                              ; preds = %183, %179
  %195 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #10
  %196 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %196) #10
  %197 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #10
  %198 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #10
  %199 = load i32, i32* %6, align 4
  switch i32 %199, label %201 [
    i32 0, label %200
    i32 1, label %200
  ]

200:                                              ; preds = %194, %194
  ret void

201:                                              ; preds = %194, %90
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define available_externally dso_local i32 @getchar() #11 {
  %1 = load %1*, %1** @stdin, align 8
  %2 = call i32 @_IO_getc(%1* %1)
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define internal %28* @1474(i8* %0, %28* %1, i32* %2) #0 {
  %4 = alloca %28*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %28*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store %28* %1, %28** %6, align 8
  store i32* %2, i32** %7, align 8
  %11 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #10
  store %28* null, %28** %8, align 8
  %12 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  store i8* getelementptr inbounds ([73 x i8], [73 x i8]* @997, i32 0, i32 0), i8** %9, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = call %28* @1446(i8* %13)
  store %28* %14, %28** %8, align 8
  %15 = load i32*, i32** %7, align 8
  store i32 0, i32* %15, align 4
  %16 = load %28*, %28** %8, align 8
  %17 = icmp ne %28* %16, null
  br i1 %17, label %18, label %24

18:                                               ; preds = %3
  %19 = load %28*, %28** %8, align 8
  %20 = getelementptr inbounds %28, %28* %19, i32 0, i32 7
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %18, %3
  %25 = load i8*, i8** %9, align 8
  %26 = load i8*, i8** %5, align 8
  call void (i32, i8*, ...) @1410(i32 3, i8* %25, i8* %26)
  %27 = load i32*, i32** %7, align 8
  store i32 1, i32* %27, align 4
  store %28* null, %28** %4, align 8
  store i32 1, i32* %10, align 4
  br label %48

28:                                               ; preds = %18
  %29 = load %28*, %28** %8, align 8
  %30 = icmp ne %28* %29, null
  br i1 %30, label %31, label %45

31:                                               ; preds = %28
  %32 = load %28*, %28** %6, align 8
  %33 = icmp ne %28* %32, null
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = load %28*, %28** %8, align 8
  %36 = getelementptr inbounds %28, %28* %35, i32 0, i32 1
  %37 = load i8*, i8** %36, align 8
  %38 = load %28*, %28** %6, align 8
  %39 = getelementptr inbounds %28, %28* %38, i32 0, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 @strcmp(i8* %37, i8* %40) #12
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %34
  call void (i32, i8*, ...) @1410(i32 3, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @998, i32 0, i32 0))
  store %28* null, %28** %4, align 8
  store i32 1, i32* %10, align 4
  br label %48

44:                                               ; preds = %34
  br label %45

45:                                               ; preds = %44, %31, %28
  br label %46

46:                                               ; preds = %45
  %47 = load %28*, %28** %8, align 8
  store %28* %47, %28** %4, align 8
  store i32 1, i32* %10, align 4
  br label %48

48:                                               ; preds = %46, %43, %24
  %49 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #10
  %50 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #10
  %51 = load %28*, %28** %4, align 8
  ret %28* %51
}

; Function Attrs: nounwind uwtable
define internal %24* @1475(%24* %0, i32 %1) #0 {
  %3 = alloca %24*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %24*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %28**, align 8
  %11 = alloca %30, align 8
  %12 = alloca %25*, align 8
  %13 = alloca %28*, align 8
  %14 = alloca %28*, align 8
  %15 = alloca float, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %32*, align 8
  store %24* %0, %24** %3, align 8
  store i32 %1, i32* %4, align 4
  %21 = bitcast %24** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  %22 = call %24* @listCreate()
  store %24* %22, %24** %5, align 8
  %23 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #10
  %24 = load %24*, %24** %3, align 8
  %25 = getelementptr inbounds %24, %24* %24, i32 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %6, align 4
  %28 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #10
  store i32 0, i32* %7, align 4
  %29 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #10
  store i32 0, i32* %8, align 4
  %30 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #10
  %31 = bitcast %28*** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #10
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = mul i64 %33, 8
  %35 = call i8* @zmalloc(i64 %34)
  %36 = bitcast i8* %35 to %28**
  store %28** %36, %28*** %10, align 8
  %37 = bitcast %30* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %37) #10
  %38 = bitcast %25** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #10
  %39 = load %24*, %24** %3, align 8
  call void @listRewind(%24* %39, %30* %11)
  br label %40

40:                                               ; preds = %43, %2
  %41 = call %25* @listNext(%30* %11)
  store %25* %41, %25** %12, align 8
  %42 = icmp ne %25* %41, null
  br i1 %42, label %43, label %61

43:                                               ; preds = %40
  %44 = bitcast %28** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #10
  %45 = load %25*, %25** %12, align 8
  %46 = getelementptr inbounds %25, %25* %45, i32 0, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast i8* %47 to %28*
  store %28* %48, %28** %13, align 8
  %49 = load %28*, %28** %13, align 8
  %50 = getelementptr inbounds %28, %28* %49, i32 0, i32 12
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %8, align 4
  %53 = add nsw i32 %52, %51
  store i32 %53, i32* %8, align 4
  %54 = load %28*, %28** %13, align 8
  %55 = load %28**, %28*** %10, align 8
  %56 = load i32, i32* %7, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %7, align 4
  %58 = sext i32 %56 to i64
  %59 = getelementptr inbounds %28*, %28** %55, i64 %58
  store %28* %54, %28** %59, align 8
  %60 = bitcast %28** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #10
  br label %40

61:                                               ; preds = %40
  %62 = load %28**, %28*** %10, align 8
  %63 = bitcast %28** %62 to i8*
  %64 = load i32, i32* %6, align 4
  %65 = sext i32 %64 to i64
  call void @qsort(i8* %63, i64 %65, i64 8, i32 (i8*, i8*)* @clusterManagerSlotCountCompareDesc)
  store i32 0, i32* %7, align 4
  br label %66

66:                                               ; preds = %161, %61
  %67 = load i32, i32* %7, align 4
  %68 = load i32, i32* %6, align 4
  %69 = icmp slt i32 %67, %68
  br i1 %69, label %70, label %164

70:                                               ; preds = %66
  %71 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #10
  %72 = load %28**, %28*** %10, align 8
  %73 = load i32, i32* %7, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %28*, %28** %72, i64 %74
  %76 = load %28*, %28** %75, align 8
  store %28* %76, %28** %14, align 8
  %77 = bitcast float* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %77) #10
  %78 = load i32, i32* %4, align 4
  %79 = sitofp i32 %78 to float
  %80 = load i32, i32* %8, align 4
  %81 = sitofp i32 %80 to float
  %82 = fdiv float %79, %81
  %83 = load %28*, %28** %14, align 8
  %84 = getelementptr inbounds %28, %28* %83, i32 0, i32 12
  %85 = load i32, i32* %84, align 4
  %86 = sitofp i32 %85 to float
  %87 = fmul float %82, %86
  store float %87, float* %15, align 4
  %88 = load i32, i32* %7, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %95

90:                                               ; preds = %70
  %91 = load float, float* %15, align 4
  %92 = fpext float %91 to double
  %93 = call double @llvm.ceil.f64(double %92)
  %94 = fptrunc double %93 to float
  store float %94, float* %15, align 4
  br label %100

95:                                               ; preds = %70
  %96 = load float, float* %15, align 4
  %97 = fpext float %96 to double
  %98 = call double @llvm.floor.f64(double %97)
  %99 = fptrunc double %98 to float
  store float %99, float* %15, align 4
  br label %100

100:                                              ; preds = %95, %90
  %101 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %101) #10
  %102 = load float, float* %15, align 4
  %103 = fptosi float %102 to i32
  store i32 %103, i32* %16, align 4
  %104 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %104) #10
  store i32 0, i32* %17, align 4
  store i32 0, i32* %9, align 4
  br label %105

105:                                              ; preds = %153, %100
  %106 = load i32, i32* %9, align 4
  %107 = icmp slt i32 %106, 16384
  br i1 %107, label %108, label %156

108:                                              ; preds = %105
  %109 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %109) #10
  %110 = load %28*, %28** %14, align 8
  %111 = getelementptr inbounds %28, %28* %110, i32 0, i32 11
  %112 = load i32, i32* %9, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [16384 x i8], [16384 x i8]* %111, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  store i32 %116, i32* %18, align 4
  %117 = load i32, i32* %18, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %120, label %119

119:                                              ; preds = %108
  store i32 9, i32* %19, align 4
  br label %149

120:                                              ; preds = %108
  %121 = load i32, i32* %17, align 4
  %122 = load i32, i32* %16, align 4
  %123 = icmp sge i32 %121, %122
  br i1 %123, label %131, label %124

124:                                              ; preds = %120
  %125 = load %24*, %24** %5, align 8
  %126 = getelementptr inbounds %24, %24* %125, i32 0, i32 5
  %127 = load i64, i64* %126, align 8
  %128 = trunc i64 %127 to i32
  %129 = load i32, i32* %4, align 4
  %130 = icmp sge i32 %128, %129
  br i1 %130, label %131, label %132

131:                                              ; preds = %124, %120
  store i32 7, i32* %19, align 4
  br label %149

132:                                              ; preds = %124
  %133 = bitcast %32** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %133) #10
  %134 = call i8* @zmalloc(i64 16)
  %135 = bitcast i8* %134 to %32*
  store %32* %135, %32** %20, align 8
  %136 = load %28*, %28** %14, align 8
  %137 = load %32*, %32** %20, align 8
  %138 = getelementptr inbounds %32, %32* %137, i32 0, i32 0
  store %28* %136, %28** %138, align 8
  %139 = load i32, i32* %9, align 4
  %140 = load %32*, %32** %20, align 8
  %141 = getelementptr inbounds %32, %32* %140, i32 0, i32 1
  store i32 %139, i32* %141, align 8
  %142 = load %24*, %24** %5, align 8
  %143 = load %32*, %32** %20, align 8
  %144 = bitcast %32* %143 to i8*
  %145 = call %24* @listAddNodeTail(%24* %142, i8* %144)
  %146 = load i32, i32* %17, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %17, align 4
  %148 = bitcast %32** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #10
  store i32 0, i32* %19, align 4
  br label %149

149:                                              ; preds = %132, %131, %119
  %150 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %150) #10
  %151 = load i32, i32* %19, align 4
  switch i32 %151, label %176 [
    i32 0, label %152
    i32 9, label %153
    i32 7, label %156
  ]

152:                                              ; preds = %149
  br label %153

153:                                              ; preds = %152, %149
  %154 = load i32, i32* %9, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %9, align 4
  br label %105

156:                                              ; preds = %149, %105
  %157 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %157) #10
  %158 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %158) #10
  %159 = bitcast float* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %159) #10
  %160 = bitcast %28** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %160) #10
  br label %161

161:                                              ; preds = %156
  %162 = load i32, i32* %7, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %7, align 4
  br label %66

164:                                              ; preds = %66
  %165 = load %28**, %28*** %10, align 8
  %166 = bitcast %28** %165 to i8*
  call void @zfree(i8* %166)
  %167 = load %24*, %24** %5, align 8
  store i32 1, i32* %19, align 4
  %168 = bitcast %25** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %168) #10
  %169 = bitcast %30* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %169) #10
  %170 = bitcast %28*** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #10
  %171 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %171) #10
  %172 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %172) #10
  %173 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %173) #10
  %174 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %174) #10
  %175 = bitcast %24** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %175) #10
  ret %24* %167

176:                                              ; preds = %149
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1476(%24* %0) #0 {
  %2 = alloca %24*, align 8
  %3 = alloca %30, align 8
  %4 = alloca %25*, align 8
  %5 = alloca %32*, align 8
  %6 = alloca %28*, align 8
  store %24* %0, %24** %2, align 8
  %7 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %7) #10
  %8 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = load %24*, %24** %2, align 8
  call void @listRewind(%24* %9, %30* %3)
  br label %10

10:                                               ; preds = %13, %1
  %11 = call %25* @listNext(%30* %3)
  store %25* %11, %25** %4, align 8
  %12 = icmp ne %25* %11, null
  br i1 %12, label %13, label %32

13:                                               ; preds = %10
  %14 = bitcast %32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  %15 = load %25*, %25** %4, align 8
  %16 = getelementptr inbounds %25, %25* %15, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %32*
  store %32* %18, %32** %5, align 8
  %19 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #10
  %20 = load %32*, %32** %5, align 8
  %21 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %22 = load %28*, %28** %21, align 8
  store %28* %22, %28** %6, align 8
  %23 = load %32*, %32** %5, align 8
  %24 = getelementptr inbounds %32, %32* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = load %28*, %28** %6, align 8
  %27 = getelementptr inbounds %28, %28* %26, i32 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @999, i32 0, i32 0), i32 %25, i8* %28)
  %30 = bitcast %28** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #10
  %31 = bitcast %32** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #10
  br label %10

32:                                               ; preds = %10
  %33 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #10
  %34 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %34) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1477(%24* %0) #0 {
  %2 = alloca %24*, align 8
  %3 = alloca %30, align 8
  %4 = alloca %25*, align 8
  %5 = alloca %32*, align 8
  store %24* %0, %24** %2, align 8
  %6 = load %24*, %24** %2, align 8
  %7 = icmp ne %24* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %1
  %9 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #10
  %10 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  %11 = load %24*, %24** %2, align 8
  call void @listRewind(%24* %11, %30* %3)
  br label %12

12:                                               ; preds = %15, %8
  %13 = call %25* @listNext(%30* %3)
  store %25* %13, %25** %4, align 8
  %14 = icmp ne %25* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %12
  %16 = bitcast %32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #10
  %17 = load %25*, %25** %4, align 8
  %18 = getelementptr inbounds %25, %25* %17, i32 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast i8* %19 to %32*
  store %32* %20, %32** %5, align 8
  %21 = load %32*, %32** %5, align 8
  %22 = bitcast %32* %21 to i8*
  call void @zfree(i8* %22)
  %23 = bitcast %32** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  br label %12

24:                                               ; preds = %12
  %25 = load %24*, %24** %2, align 8
  call void @listRelease(%24* %25)
  %26 = bitcast %25** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %26) #10
  %27 = bitcast %30* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %27) #10
  br label %28

28:                                               ; preds = %24, %1
  ret void
}

declare dso_local i32 @_IO_getc(%1*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: inlinehint nounwind readonly uwtable
define available_externally dso_local double @atof(i8* nonnull %0) #8 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call double @strtod(i8* %3, i8** null) #10
  ret double %4
}

; Function Attrs: nounwind uwtable
define internal %28* @1478(i8* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %28*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %30, align 8
  %7 = alloca %25*, align 8
  %8 = alloca %28*, align 8
  %9 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %10 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %11 = icmp eq %24* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  store %28* null, %28** %2, align 8
  br label %61

13:                                               ; preds = %1
  %14 = bitcast %28** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  store %28* null, %28** %4, align 8
  %15 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %16 = call i8* @sdsempty()
  store i8* %16, i8** %5, align 8
  %17 = load i8*, i8** %5, align 8
  %18 = load i8*, i8** %3, align 8
  %19 = call i8* @sdscpy(i8* %17, i8* %18)
  store i8* %19, i8** %5, align 8
  %20 = load i8*, i8** %5, align 8
  call void @sdstolower(i8* %20)
  %21 = bitcast %30* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %21) #10
  %22 = bitcast %25** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  %23 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %23, %30* %6)
  br label %24

24:                                               ; preds = %53, %13
  %25 = call %25* @listNext(%30* %6)
  store %25* %25, %25** %7, align 8
  %26 = icmp ne %25* %25, null
  br i1 %26, label %27, label %54

27:                                               ; preds = %24
  %28 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #10
  %29 = load %25*, %25** %7, align 8
  %30 = getelementptr inbounds %25, %25* %29, i32 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast i8* %31 to %28*
  store %28* %32, %28** %8, align 8
  %33 = load %28*, %28** %8, align 8
  %34 = getelementptr inbounds %28, %28* %33, i32 0, i32 1
  %35 = load i8*, i8** %34, align 8
  %36 = icmp ne i8* %35, null
  br i1 %36, label %37, label %49

37:                                               ; preds = %27
  %38 = load %28*, %28** %8, align 8
  %39 = getelementptr inbounds %28, %28* %38, i32 0, i32 1
  %40 = load i8*, i8** %39, align 8
  %41 = load i8*, i8** %5, align 8
  %42 = call i8* @strstr(i8* %40, i8* %41) #12
  %43 = load %28*, %28** %8, align 8
  %44 = getelementptr inbounds %28, %28* %43, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %42, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %37
  %48 = load %28*, %28** %8, align 8
  store %28* %48, %28** %4, align 8
  store i32 3, i32* %9, align 4
  br label %50

49:                                               ; preds = %37, %27
  store i32 0, i32* %9, align 4
  br label %50

50:                                               ; preds = %49, %47
  %51 = bitcast %28** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #10
  %52 = load i32, i32* %9, align 4
  switch i32 %52, label %63 [
    i32 0, label %53
    i32 3, label %54
  ]

53:                                               ; preds = %50
  br label %24

54:                                               ; preds = %50, %24
  %55 = load i8*, i8** %5, align 8
  call void @sdsfree(i8* %55)
  %56 = load %28*, %28** %4, align 8
  store %28* %56, %28** %2, align 8
  store i32 1, i32* %9, align 4
  %57 = bitcast %25** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #10
  %58 = bitcast %30* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %58) #10
  %59 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #10
  %60 = bitcast %28** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #10
  br label %61

61:                                               ; preds = %54, %12
  %62 = load %28*, %28** %2, align 8
  ret %28* %62

63:                                               ; preds = %50
  unreachable
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #6

; Function Attrs: nounwind
declare dso_local double @strtod(i8*, i8**) #4

; Function Attrs: nounwind uwtable
define internal %31* @1479(%10* %0, i8* %1, ...) #0 {
  %3 = alloca %10*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %31*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [1 x %34], align 16
  %8 = alloca i8*, align 8
  store %10* %0, %10** %3, align 8
  store i8* %1, i8** %4, align 8
  %9 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #10
  store %31* null, %31** %5, align 8
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  store i32 0, i32* %6, align 4
  %11 = bitcast [1 x %34]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %11) #10
  %12 = load %10*, %10** %3, align 8
  %13 = getelementptr inbounds %10, %10* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  br label %19

17:                                               ; preds = %2
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1035, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 1393, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @1036, i32 0, i32 0)) #14
  unreachable

18:                                               ; No predecessors!
  br label %19

19:                                               ; preds = %18, %16
  br label %20

20:                                               ; preds = %96, %19
  %21 = load %31*, %31** %5, align 8
  %22 = icmp eq %31* %21, null
  br i1 %22, label %23, label %97

23:                                               ; preds = %20
  br label %24

24:                                               ; preds = %62, %23
  %25 = load %10*, %10** %3, align 8
  %26 = getelementptr inbounds %10, %10* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 3
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %64

30:                                               ; preds = %24
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1037, i32 0, i32 0))
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %6, align 4
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1038, i32 0, i32 0), i32 %33)
  %35 = load %1*, %1** @stdout, align 8
  %36 = call i32 @fflush(%1* %35)
  %37 = load %10*, %10** %3, align 8
  call void @redisFree(%10* %37)
  %38 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  %39 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  %40 = call %10* @redisConnect(i8* %38, i32 %39)
  store %10* %40, %10** %3, align 8
  %41 = load %10*, %10** %3, align 8
  %42 = getelementptr inbounds %10, %10* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %62, label %45

45:                                               ; preds = %30
  %46 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 3), align 8
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %62

48:                                               ; preds = %45
  %49 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #10
  store i8* null, i8** %8, align 8
  %50 = load %10*, %10** %3, align 8
  %51 = call i32 @1425(%10* %50, i8** %8)
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = load i8*, i8** %8, align 8
  %55 = icmp ne i8* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = load %1*, %1** @stderr, align 8
  %58 = load i8*, i8** %8, align 8
  %59 = call i32 (%1*, i8*, ...) @fprintf(%1* %57, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @788, i32 0, i32 0), i8* %58)
  call void @exit(i32 1) #14
  unreachable

60:                                               ; preds = %53, %48
  %61 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %61) #10
  br label %62

62:                                               ; preds = %60, %45, %30
  %63 = call i32 @usleep(i32 1000000)
  br label %24

64:                                               ; preds = %24
  %65 = getelementptr inbounds [1 x %34], [1 x %34]* %7, i32 0, i32 0
  %66 = bitcast %34* %65 to i8*
  call void @llvm.va_start(i8* %66)
  %67 = load %10*, %10** %3, align 8
  %68 = load i8*, i8** %4, align 8
  %69 = getelementptr inbounds [1 x %34], [1 x %34]* %7, i32 0, i32 0
  %70 = call i8* @redisvCommand(%10* %67, i8* %68, %34* %69)
  %71 = bitcast i8* %70 to %31*
  store %31* %71, %31** %5, align 8
  %72 = getelementptr inbounds [1 x %34], [1 x %34]* %7, i32 0, i32 0
  %73 = bitcast %34* %72 to i8*
  call void @llvm.va_end(i8* %73)
  %74 = load %10*, %10** %3, align 8
  %75 = getelementptr inbounds %10, %10* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %64
  %79 = load %10*, %10** %3, align 8
  %80 = getelementptr inbounds %10, %10* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 3
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %78
  %85 = load %1*, %1** @stderr, align 8
  %86 = load %10*, %10** %3, align 8
  %87 = getelementptr inbounds %10, %10* %86, i32 0, i32 2
  %88 = getelementptr inbounds [128 x i8], [128 x i8]* %87, i32 0, i32 0
  %89 = call i32 (%1*, i8*, ...) @fprintf(%1* %85, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1039, i32 0, i32 0), i8* %88)
  call void @exit(i32 1) #14
  unreachable

90:                                               ; preds = %78, %64
  %91 = load i32, i32* %6, align 4
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1037, i32 0, i32 0))
  br label %95

95:                                               ; preds = %93, %90
  br label %96

96:                                               ; preds = %95
  br label %20

97:                                               ; preds = %20
  %98 = load %10*, %10** %3, align 8
  store %10* %98, %10** @736, align 8
  %99 = load %31*, %31** %5, align 8
  %100 = bitcast [1 x %34]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %100) #10
  %101 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %101) #10
  %102 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #10
  ret %31* %99
}

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @1480(i8* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  store i32 0, i32* %6, align 4
  br label %11

11:                                               ; preds = %25, %2
  %12 = load i32, i32* %6, align 4
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %28

15:                                               ; preds = %11
  %16 = load i8*, i8** %4, align 8
  %17 = load i32, i32* %6, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 123
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  br label %28

24:                                               ; preds = %15
  br label %25

25:                                               ; preds = %24
  %26 = load i32, i32* %6, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %6, align 4
  br label %11

28:                                               ; preds = %23, %11
  %29 = load i32, i32* %6, align 4
  %30 = load i32, i32* %5, align 4
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = load i8*, i8** %4, align 8
  %34 = load i32, i32* %5, align 4
  %35 = call zeroext i16 @crc16(i8* %33, i32 %34)
  %36 = zext i16 %35 to i32
  %37 = and i32 %36, 16383
  store i32 %37, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %86

38:                                               ; preds = %28
  %39 = load i32, i32* %6, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %7, align 4
  br label %41

41:                                               ; preds = %55, %38
  %42 = load i32, i32* %7, align 4
  %43 = load i32, i32* %5, align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %45, label %58

45:                                               ; preds = %41
  %46 = load i8*, i8** %4, align 8
  %47 = load i32, i32* %7, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp eq i32 %51, 125
  br i1 %52, label %53, label %54

53:                                               ; preds = %45
  br label %58

54:                                               ; preds = %45
  br label %55

55:                                               ; preds = %54
  %56 = load i32, i32* %7, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %7, align 4
  br label %41

58:                                               ; preds = %53, %41
  %59 = load i32, i32* %7, align 4
  %60 = load i32, i32* %5, align 4
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = load i32, i32* %7, align 4
  %64 = load i32, i32* %6, align 4
  %65 = add nsw i32 %64, 1
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %67, label %73

67:                                               ; preds = %62, %58
  %68 = load i8*, i8** %4, align 8
  %69 = load i32, i32* %5, align 4
  %70 = call zeroext i16 @crc16(i8* %68, i32 %69)
  %71 = zext i16 %70 to i32
  %72 = and i32 %71, 16383
  store i32 %72, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %86

73:                                               ; preds = %62
  %74 = load i8*, i8** %4, align 8
  %75 = load i32, i32* %6, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  %79 = load i32, i32* %7, align 4
  %80 = load i32, i32* %6, align 4
  %81 = sub nsw i32 %79, %80
  %82 = sub nsw i32 %81, 1
  %83 = call zeroext i16 @crc16(i8* %78, i32 %82)
  %84 = zext i16 %83 to i32
  %85 = and i32 %84, 16383
  store i32 %85, i32* %3, align 4
  store i32 1, i32* %8, align 4
  br label %86

86:                                               ; preds = %73, %67, %32
  %87 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %87) #10
  %88 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %88) #10
  %89 = load i32, i32* %3, align 4
  ret i32 %89
}

declare dso_local i32 @usleep(i32) #2

declare dso_local i8* @redisvCommand(%10*, i8*, %34*) #2

declare dso_local zeroext i16 @crc16(i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i8* @1481(%31* %0) #0 {
  %2 = alloca %31*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store %31* %0, %31** %2, align 8
  %6 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %7 = call i8* @sdsempty()
  store i8* %7, i8** %3, align 8
  %8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #10
  %10 = load %31*, %31** %2, align 8
  %11 = getelementptr inbounds %31, %31* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %163 [
    i32 4, label %169
    i32 6, label %13
    i32 5, label %24
    i32 1, label %24
    i32 14, label %24
    i32 8, label %62
    i32 3, label %71
    i32 7, label %77
    i32 2, label %83
    i32 9, label %115
  ]

13:                                               ; preds = %1
  %14 = load i8*, i8** %3, align 8
  %15 = load %31*, %31** %2, align 8
  %16 = getelementptr inbounds %31, %31* %15, i32 0, i32 4
  %17 = load i8*, i8** %16, align 8
  %18 = load %31*, %31** %2, align 8
  %19 = getelementptr inbounds %31, %31* %18, i32 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = call i8* @sdscatlen(i8* %14, i8* %17, i64 %20)
  store i8* %21, i8** %3, align 8
  %22 = load i8*, i8** %3, align 8
  %23 = call i8* @sdscatlen(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0), i64 1)
  store i8* %23, i8** %3, align 8
  br label %169

24:                                               ; preds = %1, %1, %1
  %25 = load %31*, %31** %2, align 8
  %26 = getelementptr inbounds %31, %31* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 5
  br i1 %28, label %29, label %52

29:                                               ; preds = %24
  %30 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %52

32:                                               ; preds = %29
  %33 = load %31*, %31** %2, align 8
  %34 = getelementptr inbounds %31, %31* %33, i32 0, i32 4
  %35 = load i8*, i8** %34, align 8
  %36 = call i8* @strstr(i8* %35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1042, i32 0, i32 0)) #12
  %37 = load %31*, %31** %2, align 8
  %38 = getelementptr inbounds %31, %31* %37, i32 0, i32 4
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %36, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %32
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 48), align 4
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 47), align 8
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  call void @1482()
  br label %51

42:                                               ; preds = %32
  %43 = load i8*, i8** %3, align 8
  %44 = load %31*, %31** %2, align 8
  %45 = getelementptr inbounds %31, %31* %44, i32 0, i32 4
  %46 = load i8*, i8** %45, align 8
  %47 = load %31*, %31** %2, align 8
  %48 = getelementptr inbounds %31, %31* %47, i32 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = call i8* @sdsCatColorizedLdbReply(i8* %43, i8* %46, i64 %49)
  store i8* %50, i8** %3, align 8
  br label %51

51:                                               ; preds = %42, %41
  br label %61

52:                                               ; preds = %29, %24
  %53 = load i8*, i8** %3, align 8
  %54 = load %31*, %31** %2, align 8
  %55 = getelementptr inbounds %31, %31* %54, i32 0, i32 4
  %56 = load i8*, i8** %55, align 8
  %57 = load %31*, %31** %2, align 8
  %58 = getelementptr inbounds %31, %31* %57, i32 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = call i8* @sdscatlen(i8* %53, i8* %56, i64 %59)
  store i8* %60, i8** %3, align 8
  br label %61

61:                                               ; preds = %52, %51
  br label %169

62:                                               ; preds = %1
  %63 = load i8*, i8** %3, align 8
  %64 = load %31*, %31** %2, align 8
  %65 = getelementptr inbounds %31, %31* %64, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = icmp ne i64 %66, 0
  %68 = zext i1 %67 to i64
  %69 = select i1 %67, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1043, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1044, i32 0, i32 0)
  %70 = call i8* @sdscat(i8* %63, i8* %69)
  store i8* %70, i8** %3, align 8
  br label %169

71:                                               ; preds = %1
  %72 = load i8*, i8** %3, align 8
  %73 = load %31*, %31** %2, align 8
  %74 = getelementptr inbounds %31, %31* %73, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %72, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1045, i32 0, i32 0), i64 %75)
  store i8* %76, i8** %3, align 8
  br label %169

77:                                               ; preds = %1
  %78 = load i8*, i8** %3, align 8
  %79 = load %31*, %31** %2, align 8
  %80 = getelementptr inbounds %31, %31* %79, i32 0, i32 4
  %81 = load i8*, i8** %80, align 8
  %82 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %78, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @854, i32 0, i32 0), i8* %81)
  store i8* %82, i8** %3, align 8
  br label %169

83:                                               ; preds = %1
  store i64 0, i64* %5, align 8
  br label %84

84:                                               ; preds = %111, %83
  %85 = load i64, i64* %5, align 8
  %86 = load %31*, %31** %2, align 8
  %87 = getelementptr inbounds %31, %31* %86, i32 0, i32 6
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %85, %88
  br i1 %89, label %90, label %114

90:                                               ; preds = %84
  %91 = load i64, i64* %5, align 8
  %92 = icmp ugt i64 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %90
  %94 = load i8*, i8** %3, align 8
  %95 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 42), align 8
  %96 = call i8* @sdscat(i8* %94, i8* %95)
  store i8* %96, i8** %3, align 8
  br label %97

97:                                               ; preds = %93, %90
  %98 = load %31*, %31** %2, align 8
  %99 = getelementptr inbounds %31, %31* %98, i32 0, i32 7
  %100 = load %31**, %31*** %99, align 8
  %101 = load i64, i64* %5, align 8
  %102 = getelementptr inbounds %31*, %31** %100, i64 %101
  %103 = load %31*, %31** %102, align 8
  %104 = call i8* @1481(%31* %103)
  store i8* %104, i8** %4, align 8
  %105 = load i8*, i8** %3, align 8
  %106 = load i8*, i8** %4, align 8
  %107 = load i8*, i8** %4, align 8
  %108 = call i64 @1432(i8* %107)
  %109 = call i8* @sdscatlen(i8* %105, i8* %106, i64 %108)
  store i8* %109, i8** %3, align 8
  %110 = load i8*, i8** %4, align 8
  call void @sdsfree(i8* %110)
  br label %111

111:                                              ; preds = %97
  %112 = load i64, i64* %5, align 8
  %113 = add i64 %112, 1
  store i64 %113, i64* %5, align 8
  br label %84

114:                                              ; preds = %84
  br label %169

115:                                              ; preds = %1
  store i64 0, i64* %5, align 8
  br label %116

116:                                              ; preds = %159, %115
  %117 = load i64, i64* %5, align 8
  %118 = load %31*, %31** %2, align 8
  %119 = getelementptr inbounds %31, %31* %118, i32 0, i32 6
  %120 = load i64, i64* %119, align 8
  %121 = icmp ult i64 %117, %120
  br i1 %121, label %122, label %162

122:                                              ; preds = %116
  %123 = load i64, i64* %5, align 8
  %124 = icmp ugt i64 %123, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %122
  %126 = load i8*, i8** %3, align 8
  %127 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 42), align 8
  %128 = call i8* @sdscat(i8* %126, i8* %127)
  store i8* %128, i8** %3, align 8
  br label %129

129:                                              ; preds = %125, %122
  %130 = load %31*, %31** %2, align 8
  %131 = getelementptr inbounds %31, %31* %130, i32 0, i32 7
  %132 = load %31**, %31*** %131, align 8
  %133 = load i64, i64* %5, align 8
  %134 = getelementptr inbounds %31*, %31** %132, i64 %133
  %135 = load %31*, %31** %134, align 8
  %136 = call i8* @1481(%31* %135)
  store i8* %136, i8** %4, align 8
  %137 = load i8*, i8** %3, align 8
  %138 = load i8*, i8** %4, align 8
  %139 = load i8*, i8** %4, align 8
  %140 = call i64 @1432(i8* %139)
  %141 = call i8* @sdscatlen(i8* %137, i8* %138, i64 %140)
  store i8* %141, i8** %3, align 8
  %142 = load i8*, i8** %4, align 8
  call void @sdsfree(i8* %142)
  %143 = load i8*, i8** %3, align 8
  %144 = call i8* @sdscatlen(i8* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @829, i32 0, i32 0), i64 1)
  store i8* %144, i8** %3, align 8
  %145 = load %31*, %31** %2, align 8
  %146 = getelementptr inbounds %31, %31* %145, i32 0, i32 7
  %147 = load %31**, %31*** %146, align 8
  %148 = load i64, i64* %5, align 8
  %149 = add i64 %148, 1
  %150 = getelementptr inbounds %31*, %31** %147, i64 %149
  %151 = load %31*, %31** %150, align 8
  %152 = call i8* @1481(%31* %151)
  store i8* %152, i8** %4, align 8
  %153 = load i8*, i8** %3, align 8
  %154 = load i8*, i8** %4, align 8
  %155 = load i8*, i8** %4, align 8
  %156 = call i64 @1432(i8* %155)
  %157 = call i8* @sdscatlen(i8* %153, i8* %154, i64 %156)
  store i8* %157, i8** %3, align 8
  %158 = load i8*, i8** %4, align 8
  call void @sdsfree(i8* %158)
  br label %159

159:                                              ; preds = %129
  %160 = load i64, i64* %5, align 8
  %161 = add i64 %160, 2
  store i64 %161, i64* %5, align 8
  br label %116

162:                                              ; preds = %116
  br label %169

163:                                              ; preds = %1
  %164 = load %1*, %1** @stderr, align 8
  %165 = load %31*, %31** %2, align 8
  %166 = getelementptr inbounds %31, %31* %165, i32 0, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = call i32 (%1*, i8*, ...) @fprintf(%1* %164, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1046, i32 0, i32 0), i32 %167)
  call void @exit(i32 1) #14
  unreachable

169:                                              ; preds = %162, %114, %77, %71, %62, %61, %13, %1
  %170 = load i8*, i8** %3, align 8
  %171 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %171) #10
  %172 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %172) #10
  %173 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %173) #10
  ret i8* %170
}

; Function Attrs: nounwind uwtable
define internal void @1482() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca [256 x i8], align 16
  %3 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %0
  br label %41

6:                                                ; preds = %0
  %7 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = call i8* @sdsempty()
  store i8* %8, i8** %1, align 8
  %9 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 2), align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %6
  %12 = load i8*, i8** %1, align 8
  %13 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 2), align 8
  %14 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1047, i32 0, i32 0), i8* %13)
  store i8* %14, i8** %1, align 8
  br label %27

15:                                               ; preds = %6
  %16 = bitcast [256 x i8]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %16) #10
  %17 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %18 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  %19 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  %20 = call i32 @anetFormatAddr(i8* %17, i64 256, i8* %18, i32 %19)
  %21 = load i8*, i8** %1, align 8
  %22 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %24 = call i64 @strlen(i8* %23) #12
  %25 = call i8* @sdscatlen(i8* %21, i8* %22, i64 %24)
  store i8* %25, i8** %1, align 8
  %26 = bitcast [256 x i8]* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %26) #10
  br label %27

27:                                               ; preds = %15, %11
  %28 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 11), align 8
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  %31 = load i8*, i8** %1, align 8
  %32 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 11), align 8
  %33 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1048, i32 0, i32 0), i32 %32)
  store i8* %33, i8** %1, align 8
  br label %34

34:                                               ; preds = %30, %27
  %35 = load i8*, i8** %1, align 8
  %36 = call i8* @sdscatlen(i8* %35, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1049, i32 0, i32 0), i64 2)
  store i8* %36, i8** %1, align 8
  %37 = load i8*, i8** %1, align 8
  %38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds (%21, %21* @765, i32 0, i32 43, i32 0), i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @854, i32 0, i32 0), i8* %37) #10
  %39 = load i8*, i8** %1, align 8
  call void @sdsfree(i8* %39)
  %40 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #10
  br label %41

41:                                               ; preds = %34, %5
  ret void
}

declare dso_local i32 @anetFormatAddr(i8*, i64, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i8* @1483(%28* %0, i64 %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  store %28* %0, %28** %3, align 8
  store i64 %1, i64* %4, align 8
  %18 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #10
  %19 = call i8* @sdsempty()
  store i8* %19, i8** %5, align 8
  %20 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #10
  %21 = call i8* @sdsempty()
  store i8* %21, i8** %6, align 8
  %22 = load %28*, %28** %3, align 8
  %23 = getelementptr inbounds %28, %28* %22, i32 0, i32 9
  %24 = load i8*, i8** %23, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %32

26:                                               ; preds = %2
  %27 = load i8*, i8** %6, align 8
  %28 = load %28*, %28** %3, align 8
  %29 = getelementptr inbounds %28, %28* %28, i32 0, i32 9
  %30 = load i8*, i8** %29, align 8
  %31 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1062, i32 0, i32 0), i8* %30)
  store i8* %31, i8** %6, align 8
  br label %35

32:                                               ; preds = %2
  %33 = load i8*, i8** %6, align 8
  %34 = call i8* @sdscat(i8* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1063, i32 0, i32 0))
  store i8* %34, i8** %6, align 8
  br label %35

35:                                               ; preds = %32, %26
  %36 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #10
  %37 = load %28*, %28** %3, align 8
  %38 = call i8* @1437(%28* %37)
  store i8* %38, i8** %7, align 8
  %39 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #10
  %40 = load %28*, %28** %3, align 8
  %41 = call i8* @1438(%28* %40)
  store i8* %41, i8** %8, align 8
  %42 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #10
  %43 = load i8*, i8** %7, align 8
  store i8* %43, i8** %9, align 8
  br label %44

44:                                               ; preds = %48, %35
  %45 = load i8*, i8** %9, align 8
  %46 = call i8* @strchr(i8* %45, i32 45) #12
  store i8* %46, i8** %9, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = load i8*, i8** %9, align 8
  %50 = getelementptr inbounds i8, i8* %49, i32 1
  store i8* %50, i8** %9, align 8
  store i8 44, i8* %49, align 1
  br label %44

51:                                               ; preds = %44
  %52 = load i8*, i8** %5, align 8
  %53 = load %28*, %28** %3, align 8
  %54 = getelementptr inbounds %28, %28* %53, i32 0, i32 1
  %55 = load i8*, i8** %54, align 8
  %56 = load %28*, %28** %3, align 8
  %57 = getelementptr inbounds %28, %28* %56, i32 0, i32 2
  %58 = load i8*, i8** %57, align 8
  %59 = load %28*, %28** %3, align 8
  %60 = getelementptr inbounds %28, %28* %59, i32 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = load i8*, i8** %6, align 8
  %63 = load i8*, i8** %7, align 8
  %64 = load %28*, %28** %3, align 8
  %65 = getelementptr inbounds %28, %28* %64, i32 0, i32 12
  %66 = load i32, i32* %65, align 4
  %67 = load i8*, i8** %8, align 8
  %68 = load %28*, %28** %3, align 8
  %69 = getelementptr inbounds %28, %28* %68, i32 0, i32 4
  %70 = load i64, i64* %69, align 8
  %71 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %52, i8* getelementptr inbounds ([164 x i8], [164 x i8]* @1064, i32 0, i32 0), i8* %55, i8* %58, i32 %61, i8* %62, i8* %63, i32 %66, i8* %67, i64 %70)
  store i8* %71, i8** %5, align 8
  %72 = load i64, i64* %4, align 8
  %73 = icmp ugt i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %51
  %75 = load i8*, i8** %5, align 8
  %76 = load i64, i64* %4, align 8
  %77 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %75, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1065, i32 0, i32 0), i64 %76)
  store i8* %77, i8** %5, align 8
  br label %78

78:                                               ; preds = %74, %51
  %79 = load %28*, %28** %3, align 8
  %80 = getelementptr inbounds %28, %28* %79, i32 0, i32 17
  %81 = load i32, i32* %80, align 8
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %151

83:                                               ; preds = %78
  %84 = load %28*, %28** %3, align 8
  %85 = getelementptr inbounds %28, %28* %84, i32 0, i32 15
  %86 = load i8**, i8*** %85, align 8
  %87 = icmp ne i8** %86, null
  br i1 %87, label %88, label %151

88:                                               ; preds = %83
  %89 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %89) #10
  store i32 0, i32* %10, align 4
  %90 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %90) #10
  %91 = call i8* @sdsempty()
  store i8* %91, i8** %11, align 8
  br label %92

92:                                               ; preds = %136, %88
  %93 = load i32, i32* %10, align 4
  %94 = load %28*, %28** %3, align 8
  %95 = getelementptr inbounds %28, %28* %94, i32 0, i32 17
  %96 = load i32, i32* %95, align 8
  %97 = icmp slt i32 %93, %96
  br i1 %97, label %98, label %139

98:                                               ; preds = %92
  %99 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %99) #10
  %100 = load %28*, %28** %3, align 8
  %101 = getelementptr inbounds %28, %28* %100, i32 0, i32 15
  %102 = load i8**, i8*** %101, align 8
  %103 = load i32, i32* %10, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8*, i8** %102, i64 %104
  %106 = load i8*, i8** %105, align 8
  store i8* %106, i8** %12, align 8
  %107 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %107) #10
  %108 = load %28*, %28** %3, align 8
  %109 = getelementptr inbounds %28, %28* %108, i32 0, i32 15
  %110 = load i8**, i8*** %109, align 8
  %111 = load i32, i32* %10, align 4
  %112 = add nsw i32 %111, 1
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8*, i8** %110, i64 %113
  %115 = load i8*, i8** %114, align 8
  store i8* %115, i8** %13, align 8
  %116 = load i8*, i8** %12, align 8
  %117 = icmp ne i8* %116, null
  br i1 %117, label %118, label %133

118:                                              ; preds = %98
  %119 = load i8*, i8** %13, align 8
  %120 = icmp ne i8* %119, null
  br i1 %120, label %121, label %133

121:                                              ; preds = %118
  %122 = load i8*, i8** %11, align 8
  %123 = call i64 @1432(i8* %122)
  %124 = icmp ugt i64 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %121
  %126 = load i8*, i8** %11, align 8
  %127 = call i8* @sdscat(i8* %126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @836, i32 0, i32 0))
  store i8* %127, i8** %11, align 8
  br label %128

128:                                              ; preds = %125, %121
  %129 = load i8*, i8** %11, align 8
  %130 = load i8*, i8** %12, align 8
  %131 = load i8*, i8** %13, align 8
  %132 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %129, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1066, i32 0, i32 0), i8* %130, i8* %131)
  store i8* %132, i8** %11, align 8
  br label %133

133:                                              ; preds = %128, %118, %98
  %134 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %134) #10
  %135 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %135) #10
  br label %136

136:                                              ; preds = %133
  %137 = load i32, i32* %10, align 4
  %138 = add nsw i32 %137, 2
  store i32 %138, i32* %10, align 4
  br label %92

139:                                              ; preds = %92
  %140 = load i8*, i8** %11, align 8
  %141 = call i64 @1432(i8* %140)
  %142 = icmp ugt i64 %141, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %139
  %144 = load i8*, i8** %5, align 8
  %145 = load i8*, i8** %11, align 8
  %146 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %144, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1067, i32 0, i32 0), i8* %145)
  store i8* %146, i8** %5, align 8
  br label %147

147:                                              ; preds = %143, %139
  %148 = load i8*, i8** %11, align 8
  call void @sdsfree(i8* %148)
  %149 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #10
  %150 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %150) #10
  br label %151

151:                                              ; preds = %147, %83, %78
  %152 = load %28*, %28** %3, align 8
  %153 = getelementptr inbounds %28, %28* %152, i32 0, i32 18
  %154 = load i32, i32* %153, align 4
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %224

156:                                              ; preds = %151
  %157 = load %28*, %28** %3, align 8
  %158 = getelementptr inbounds %28, %28* %157, i32 0, i32 16
  %159 = load i8**, i8*** %158, align 8
  %160 = icmp ne i8** %159, null
  br i1 %160, label %161, label %224

161:                                              ; preds = %156
  %162 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %162) #10
  store i32 0, i32* %14, align 4
  %163 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %163) #10
  %164 = call i8* @sdsempty()
  store i8* %164, i8** %15, align 8
  br label %165

165:                                              ; preds = %209, %161
  %166 = load i32, i32* %14, align 4
  %167 = load %28*, %28** %3, align 8
  %168 = getelementptr inbounds %28, %28* %167, i32 0, i32 18
  %169 = load i32, i32* %168, align 4
  %170 = icmp slt i32 %166, %169
  br i1 %170, label %171, label %212

171:                                              ; preds = %165
  %172 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %172) #10
  %173 = load %28*, %28** %3, align 8
  %174 = getelementptr inbounds %28, %28* %173, i32 0, i32 16
  %175 = load i8**, i8*** %174, align 8
  %176 = load i32, i32* %14, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8*, i8** %175, i64 %177
  %179 = load i8*, i8** %178, align 8
  store i8* %179, i8** %16, align 8
  %180 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %180) #10
  %181 = load %28*, %28** %3, align 8
  %182 = getelementptr inbounds %28, %28* %181, i32 0, i32 16
  %183 = load i8**, i8*** %182, align 8
  %184 = load i32, i32* %14, align 4
  %185 = add nsw i32 %184, 1
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8*, i8** %183, i64 %186
  %188 = load i8*, i8** %187, align 8
  store i8* %188, i8** %17, align 8
  %189 = load i8*, i8** %16, align 8
  %190 = icmp ne i8* %189, null
  br i1 %190, label %191, label %206

191:                                              ; preds = %171
  %192 = load i8*, i8** %17, align 8
  %193 = icmp ne i8* %192, null
  br i1 %193, label %194, label %206

194:                                              ; preds = %191
  %195 = load i8*, i8** %15, align 8
  %196 = call i64 @1432(i8* %195)
  %197 = icmp ugt i64 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %194
  %199 = load i8*, i8** %15, align 8
  %200 = call i8* @sdscat(i8* %199, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @836, i32 0, i32 0))
  store i8* %200, i8** %15, align 8
  br label %201

201:                                              ; preds = %198, %194
  %202 = load i8*, i8** %15, align 8
  %203 = load i8*, i8** %16, align 8
  %204 = load i8*, i8** %17, align 8
  %205 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %202, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1066, i32 0, i32 0), i8* %203, i8* %204)
  store i8* %205, i8** %15, align 8
  br label %206

206:                                              ; preds = %201, %191, %171
  %207 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %207) #10
  %208 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %208) #10
  br label %209

209:                                              ; preds = %206
  %210 = load i32, i32* %14, align 4
  %211 = add nsw i32 %210, 2
  store i32 %211, i32* %14, align 4
  br label %165

212:                                              ; preds = %165
  %213 = load i8*, i8** %15, align 8
  %214 = call i64 @1432(i8* %213)
  %215 = icmp ugt i64 %214, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %212
  %217 = load i8*, i8** %5, align 8
  %218 = load i8*, i8** %15, align 8
  %219 = call i8* (i8*, i8*, ...) @sdscatfmt(i8* %217, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1068, i32 0, i32 0), i8* %218)
  store i8* %219, i8** %5, align 8
  br label %220

220:                                              ; preds = %216, %212
  %221 = load i8*, i8** %15, align 8
  call void @sdsfree(i8* %221)
  %222 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #10
  %223 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %223) #10
  br label %224

224:                                              ; preds = %220, %156, %151
  %225 = load i8*, i8** %5, align 8
  %226 = call i8* @sdscat(i8* %225, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1069, i32 0, i32 0))
  store i8* %226, i8** %5, align 8
  %227 = load i8*, i8** %6, align 8
  call void @sdsfree(i8* %227)
  %228 = load i8*, i8** %7, align 8
  call void @sdsfree(i8* %228)
  %229 = load i8*, i8** %8, align 8
  call void @sdsfree(i8* %229)
  %230 = load i8*, i8** %5, align 8
  %231 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #10
  %232 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %232) #10
  %233 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %233) #10
  %234 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %234) #10
  %235 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %235) #10
  ret i8* %230
}

declare dso_local i32 @fputs(i8*, %1*) #2

; Function Attrs: nounwind uwtable
define internal void @1484() #0 {
  %1 = alloca i8*, align 8
  %2 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #10
  %3 = call i8* @1487()
  store i8* %3, i8** %1, align 8
  %4 = load %1*, %1** @stderr, align 8
  %5 = load i8*, i8** %1, align 8
  %6 = call i32 (%1*, i8*, ...) @fprintf(%1* %4, i8* getelementptr inbounds ([2210 x i8], [2210 x i8]* @1143, i32 0, i32 0), i8* %5)
  %7 = load %1*, %1** @stderr, align 8
  %8 = call i32 (%1*, i8*, ...) @fprintf(%1* %7, i8* getelementptr inbounds ([814 x i8], [814 x i8]* @1144, i32 0, i32 0), i32 30)
  %9 = load %1*, %1** @stderr, align 8
  %10 = call i32 (%1*, i8*, ...) @fprintf(%1* %9, i8* getelementptr inbounds ([1440 x i8], [1440 x i8]* @1145, i32 0, i32 0))
  %11 = load %1*, %1** @stderr, align 8
  %12 = call i32 (%1*, i8*, ...) @fprintf(%1* %11, i8* getelementptr inbounds ([590 x i8], [590 x i8]* @1146, i32 0, i32 0))
  %13 = load i8*, i8** %1, align 8
  call void @sdsfree(i8* %13)
  call void @exit(i32 1) #14
  unreachable

14:                                               ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1485(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %12 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1147, i32 0, i32 0), i8** %3, align 8
  %13 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = load i8*, i8** %2, align 8
  store i8* %14, i8** %4, align 8
  %15 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %16 = load i8*, i8** %2, align 8
  %17 = load i8*, i8** %2, align 8
  %18 = call i64 @strlen(i8* %17) #12
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  store i8* %19, i8** %5, align 8
  %20 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #10
  %21 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  %22 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  %23 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #10
  %24 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #10
  %25 = load i8*, i8** %3, align 8
  %26 = load i8*, i8** %4, align 8
  %27 = load i8*, i8** %3, align 8
  %28 = call i64 @strlen(i8* %27) #12
  %29 = call i32 @strncasecmp(i8* %25, i8* %26, i64 %28) #12
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %1
  %32 = load %1*, %1** @stderr, align 8
  %33 = call i32 (%1*, i8*, ...) @fprintf(%1* %32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1148, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

34:                                               ; preds = %1
  %35 = load i8*, i8** %3, align 8
  %36 = call i64 @strlen(i8* %35) #12
  %37 = load i8*, i8** %4, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  store i8* %38, i8** %4, align 8
  %39 = load i8*, i8** %4, align 8
  %40 = load i8*, i8** %5, align 8
  %41 = icmp eq i8* %39, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  store i32 1, i32* %11, align 4
  br label %125

43:                                               ; preds = %34
  %44 = load i8*, i8** %4, align 8
  %45 = call i8* @strchr(i8* %44, i32 64) #12
  store i8* %45, i8** %6, align 8
  %46 = icmp ne i8* %45, null
  br i1 %46, label %47, label %68

47:                                               ; preds = %43
  %48 = load i8*, i8** %4, align 8
  %49 = call i8* @strchr(i8* %48, i32 58) #12
  store i8* %49, i8** %7, align 8
  %50 = icmp ne i8* %49, null
  br i1 %50, label %51, label %58

51:                                               ; preds = %47
  %52 = load i8*, i8** %7, align 8
  %53 = load i8*, i8** %6, align 8
  %54 = icmp ult i8* %52, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = load i8*, i8** %7, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 1
  store i8* %57, i8** %4, align 8
  br label %58

58:                                               ; preds = %55, %51, %47
  %59 = load i8*, i8** %4, align 8
  %60 = load i8*, i8** %6, align 8
  %61 = load i8*, i8** %4, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = ptrtoint i8* %61 to i64
  %64 = sub i64 %62, %63
  %65 = call i8* @1488(i8* %59, i64 %64)
  store i8* %65, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %66 = load i8*, i8** %6, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 1
  store i8* %67, i8** %4, align 8
  br label %68

68:                                               ; preds = %58, %43
  %69 = load i8*, i8** %4, align 8
  %70 = load i8*, i8** %5, align 8
  %71 = icmp eq i8* %69, %70
  br i1 %71, label %72, label %73

72:                                               ; preds = %68
  store i32 1, i32* %11, align 4
  br label %125

73:                                               ; preds = %68
  %74 = load i8*, i8** %4, align 8
  %75 = call i8* @strchr(i8* %74, i32 47) #12
  store i8* %75, i8** %10, align 8
  %76 = load i8*, i8** %4, align 8
  %77 = load i8, i8* %76, align 1
  %78 = sext i8 %77 to i32
  %79 = icmp ne i32 %78, 47
  br i1 %79, label %80, label %108

80:                                               ; preds = %73
  %81 = load i8*, i8** %10, align 8
  %82 = icmp ne i8* %81, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %80
  %84 = load i8*, i8** %10, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 -1
  br label %88

86:                                               ; preds = %80
  %87 = load i8*, i8** %5, align 8
  br label %88

88:                                               ; preds = %86, %83
  %89 = phi i8* [ %85, %83 ], [ %87, %86 ]
  store i8* %89, i8** %9, align 8
  %90 = load i8*, i8** %4, align 8
  %91 = call i8* @strchr(i8* %90, i32 58) #12
  store i8* %91, i8** %8, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %99

93:                                               ; preds = %88
  %94 = load i8*, i8** %8, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 1
  %96 = call i32 @atoi(i8* %95) #12
  store i32 %96, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  %97 = load i8*, i8** %8, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 -1
  store i8* %98, i8** %9, align 8
  br label %99

99:                                               ; preds = %93, %88
  %100 = load i8*, i8** %4, align 8
  %101 = load i8*, i8** %9, align 8
  %102 = load i8*, i8** %4, align 8
  %103 = ptrtoint i8* %101 to i64
  %104 = ptrtoint i8* %102 to i64
  %105 = sub i64 %103, %104
  %106 = add nsw i64 %105, 1
  %107 = call i8* @sdsnewlen(i8* %100, i64 %106)
  store i8* %107, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  br label %108

108:                                              ; preds = %99, %73
  %109 = load i8*, i8** %10, align 8
  %110 = icmp ne i8* %109, null
  br i1 %110, label %111, label %114

111:                                              ; preds = %108
  %112 = load i8*, i8** %10, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 1
  br label %116

114:                                              ; preds = %108
  %115 = load i8*, i8** %5, align 8
  br label %116

116:                                              ; preds = %114, %111
  %117 = phi i8* [ %113, %111 ], [ %115, %114 ]
  store i8* %117, i8** %4, align 8
  %118 = load i8*, i8** %4, align 8
  %119 = load i8*, i8** %5, align 8
  %120 = icmp eq i8* %118, %119
  br i1 %120, label %121, label %122

121:                                              ; preds = %116
  store i32 1, i32* %11, align 4
  br label %125

122:                                              ; preds = %116
  %123 = load i8*, i8** %4, align 8
  %124 = call i32 @atoi(i8* %123) #12
  store i32 %124, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 11), align 8
  store i32 0, i32* %11, align 4
  br label %125

125:                                              ; preds = %122, %121, %72, %42
  %126 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #10
  %127 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #10
  %128 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %128) #10
  %129 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %129) #10
  %130 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #10
  %131 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #10
  %132 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #10
  %133 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #10
  %134 = load i32, i32* %11, align 4
  switch i32 %134, label %136 [
    i32 0, label %135
    i32 1, label %135
  ]

135:                                              ; preds = %125, %125
  ret void

136:                                              ; preds = %125
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1486(i8* %0, i32 %1, i8** %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca %22*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8** %2, i8*** %6, align 8
  %8 = bitcast %22** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  store %22* getelementptr inbounds (%21, %21* @765, i32 0, i32 51), %22** %7, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = load %22*, %22** %7, align 8
  %11 = getelementptr inbounds %22, %22* %10, i32 0, i32 0
  store i8* %9, i8** %11, align 8
  %12 = load i32, i32* %5, align 4
  %13 = load %22*, %22** %7, align 8
  %14 = getelementptr inbounds %22, %22* %13, i32 0, i32 1
  store i32 %12, i32* %14, align 8
  %15 = load i32, i32* %5, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = load i8**, i8*** %6, align 8
  br label %20

19:                                               ; preds = %3
  br label %20

20:                                               ; preds = %19, %17
  %21 = phi i8** [ %18, %17 ], [ null, %19 ]
  %22 = load %22*, %22** %7, align 8
  %23 = getelementptr inbounds %22, %22* %22, i32 0, i32 2
  store i8** %21, i8*** %23, align 8
  %24 = call i32 @isColorTerm()
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = load %22*, %22** %7, align 8
  %28 = getelementptr inbounds %22, %22* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = or i32 %29, 256
  store i32 %30, i32* %28, align 8
  br label %31

31:                                               ; preds = %26, %20
  %32 = bitcast %22** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @1487() #0 {
  %1 = alloca i8*, align 8
  %2 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #10
  %3 = call i8* @sdsempty()
  %4 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @854, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1151, i32 0, i32 0))
  store i8* %4, i8** %1, align 8
  %5 = call i8* @redisGitSHA1()
  %6 = call i64 @strtoll(i8* %5, i8** null, i32 16) #10
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %0
  %9 = load i8*, i8** %1, align 8
  %10 = call i8* @redisGitSHA1()
  %11 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1152, i32 0, i32 0), i8* %10)
  store i8* %11, i8** %1, align 8
  %12 = call i8* @redisGitDirty()
  %13 = call i64 @strtoll(i8* %12, i8** null, i32 10) #10
  %14 = icmp ne i64 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %8
  %16 = load i8*, i8** %1, align 8
  %17 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1153, i32 0, i32 0))
  store i8* %17, i8** %1, align 8
  br label %18

18:                                               ; preds = %15, %8
  %19 = load i8*, i8** %1, align 8
  %20 = call i8* @sdscat(i8* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1154, i32 0, i32 0))
  store i8* %20, i8** %1, align 8
  br label %21

21:                                               ; preds = %18, %0
  %22 = load i8*, i8** %1, align 8
  %23 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #10
  ret i8* %22
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #5

; Function Attrs: nounwind uwtable
define internal i8* @1488(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %15 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %16 = load i8*, i8** %3, align 8
  %17 = load i64, i64* %4, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  store i8* %18, i8** %5, align 8
  %19 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #10
  %20 = call i8* @sdsempty()
  store i8* %20, i8** %6, align 8
  %21 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #10
  %22 = load i8*, i8** %3, align 8
  store i8* %22, i8** %7, align 8
  br label %23

23:                                               ; preds = %166, %2
  %24 = load i8*, i8** %7, align 8
  %25 = load i8*, i8** %5, align 8
  %26 = icmp ult i8* %24, %25
  br i1 %26, label %27, label %167

27:                                               ; preds = %23
  %28 = load i8*, i8** %7, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 37
  br i1 %31, label %32, label %161

32:                                               ; preds = %27
  %33 = load i8*, i8** %5, align 8
  %34 = load i8*, i8** %7, align 8
  %35 = ptrtoint i8* %33 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  %38 = icmp slt i64 %37, 2
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = load %1*, %1** @stderr, align 8
  %41 = call i32 (%1*, i8*, ...) @fprintf(%1* %40, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @1149, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

42:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %8) #10
  %43 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #10
  %44 = call i32** @__ctype_tolower_loc() #13
  %45 = load i32*, i32** %44, align 8
  %46 = load i8*, i8** %7, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %7, align 8
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %45, i64 %50
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %9, align 4
  %53 = load i32, i32* %9, align 4
  store i32 %53, i32* %10, align 4
  %54 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %54) #10
  %55 = load i32, i32* %10, align 4
  %56 = trunc i32 %55 to i8
  store i8 %56, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #10
  %57 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #10
  %58 = call i32** @__ctype_tolower_loc() #13
  %59 = load i32*, i32** %58, align 8
  %60 = load i8*, i8** %7, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %7, align 8
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %59, i64 %64
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %12, align 4
  %67 = load i32, i32* %12, align 4
  store i32 %67, i32* %13, align 4
  %68 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %68) #10
  %69 = load i32, i32* %13, align 4
  %70 = trunc i32 %69 to i8
  store i8 %70, i8* %11, align 1
  %71 = call i16** @__ctype_b_loc() #13
  %72 = load i16*, i16** %71, align 8
  %73 = load i8, i8* %8, align 1
  %74 = sext i8 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %72, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = and i32 %78, 2048
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %42
  %82 = load i8, i8* %8, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp sge i32 %83, 97
  br i1 %84, label %85, label %108

85:                                               ; preds = %81
  %86 = load i8, i8* %8, align 1
  %87 = sext i8 %86 to i32
  %88 = icmp sle i32 %87, 102
  br i1 %88, label %89, label %108

89:                                               ; preds = %85, %42
  %90 = call i16** @__ctype_b_loc() #13
  %91 = load i16*, i16** %90, align 8
  %92 = load i8, i8* %11, align 1
  %93 = sext i8 %92 to i32
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i16, i16* %91, i64 %94
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  %98 = and i32 %97, 2048
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %89
  %101 = load i8, i8* %11, align 1
  %102 = sext i8 %101 to i32
  %103 = icmp sge i32 %102, 97
  br i1 %103, label %104, label %108

104:                                              ; preds = %100
  %105 = load i8, i8* %11, align 1
  %106 = sext i8 %105 to i32
  %107 = icmp sle i32 %106, 102
  br i1 %107, label %111, label %108

108:                                              ; preds = %104, %100, %85, %81
  %109 = load %1*, %1** @stderr, align 8
  %110 = call i32 (%1*, i8*, ...) @fprintf(%1* %109, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @1150, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

111:                                              ; preds = %104, %89
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14) #10
  %112 = call i16** @__ctype_b_loc() #13
  %113 = load i16*, i16** %112, align 8
  %114 = load i8, i8* %8, align 1
  %115 = sext i8 %114 to i32
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i16, i16* %113, i64 %116
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i32
  %120 = and i32 %119, 2048
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %126

122:                                              ; preds = %111
  %123 = load i8, i8* %8, align 1
  %124 = sext i8 %123 to i32
  %125 = sub nsw i32 %124, 48
  br label %131

126:                                              ; preds = %111
  %127 = load i8, i8* %8, align 1
  %128 = sext i8 %127 to i32
  %129 = sub nsw i32 %128, 97
  %130 = add nsw i32 %129, 10
  br label %131

131:                                              ; preds = %126, %122
  %132 = phi i32 [ %125, %122 ], [ %130, %126 ]
  %133 = shl i32 %132, 4
  %134 = call i16** @__ctype_b_loc() #13
  %135 = load i16*, i16** %134, align 8
  %136 = load i8, i8* %11, align 1
  %137 = sext i8 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i16, i16* %135, i64 %138
  %140 = load i16, i16* %139, align 2
  %141 = zext i16 %140 to i32
  %142 = and i32 %141, 2048
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %144, label %148

144:                                              ; preds = %131
  %145 = load i8, i8* %11, align 1
  %146 = sext i8 %145 to i32
  %147 = sub nsw i32 %146, 48
  br label %153

148:                                              ; preds = %131
  %149 = load i8, i8* %11, align 1
  %150 = sext i8 %149 to i32
  %151 = sub nsw i32 %150, 97
  %152 = add nsw i32 %151, 10
  br label %153

153:                                              ; preds = %148, %144
  %154 = phi i32 [ %147, %144 ], [ %152, %148 ]
  %155 = add nsw i32 %133, %154
  %156 = trunc i32 %155 to i8
  store i8 %156, i8* %14, align 1
  %157 = load i8*, i8** %6, align 8
  %158 = call i8* @sdscatlen(i8* %157, i8* %14, i64 1)
  store i8* %158, i8** %6, align 8
  %159 = load i8*, i8** %7, align 8
  %160 = getelementptr inbounds i8, i8* %159, i32 1
  store i8* %160, i8** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %8) #10
  br label %166

161:                                              ; preds = %27
  %162 = load i8*, i8** %6, align 8
  %163 = load i8*, i8** %7, align 8
  %164 = getelementptr inbounds i8, i8* %163, i32 1
  store i8* %164, i8** %7, align 8
  %165 = call i8* @sdscatlen(i8* %162, i8* %163, i64 1)
  store i8* %165, i8** %6, align 8
  br label %166

166:                                              ; preds = %161, %153
  br label %23

167:                                              ; preds = %23
  %168 = load i8*, i8** %6, align 8
  %169 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %169) #10
  %170 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %170) #10
  %171 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %171) #10
  ret i8* %168
}

; Function Attrs: nounwind readnone
declare dso_local i32** @__ctype_tolower_loc() #6

declare dso_local i8* @redisGitSHA1() #2

declare dso_local i8* @redisGitDirty() #2

; Function Attrs: nounwind uwtable
define internal void @1489() #0 {
  %1 = alloca i8*, align 8
  %2 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #10
  %3 = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1155, i32 0, i32 0)) #10
  store i8* %3, i8** %1, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %0
  %7 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  %10 = load i8*, i8** %1, align 8
  store i8* %10, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  br label %11

11:                                               ; preds = %9, %6, %0
  %12 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @1490() #0 {
  %1 = alloca i8*, align 8
  call void @linenoiseMaskModeEnable()
  %2 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #10
  %3 = call i8* @linenoise(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1156, i32 0, i32 0))
  store i8* %3, i8** %1, align 8
  call void @linenoiseMaskModeDisable()
  %4 = load i8*, i8** %1, align 8
  %5 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #10
  ret i8* %4
}

declare dso_local void @linenoiseMaskModeEnable() #2

declare dso_local i8* @linenoise(i8*) #2

declare dso_local void @linenoiseMaskModeDisable() #2

; Function Attrs: nounwind uwtable
define internal void @1491() #0 {
  %1 = alloca %30, align 8
  %2 = alloca %25*, align 8
  %3 = alloca %28*, align 8
  %4 = alloca i8*, align 8
  %5 = bitcast %30* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %5) #10
  %6 = bitcast %25** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %7 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  %8 = icmp ne %24* %7, null
  br i1 %8, label %9, label %24

9:                                                ; preds = %0
  %10 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRewind(%24* %10, %30* %1)
  br label %11

11:                                               ; preds = %14, %9
  %12 = call %25* @listNext(%30* %1)
  store %25* %12, %25** %2, align 8
  %13 = icmp ne %25* %12, null
  br i1 %13, label %14, label %22

14:                                               ; preds = %11
  %15 = bitcast %28** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %16 = load %25*, %25** %2, align 8
  %17 = getelementptr inbounds %25, %25* %16, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast i8* %18 to %28*
  store %28* %19, %28** %3, align 8
  %20 = load %28*, %28** %3, align 8
  call void @1406(%28* %20)
  %21 = bitcast %28** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #10
  br label %11

22:                                               ; preds = %11
  %23 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  call void @listRelease(%24* %23)
  store %24* null, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 0), align 8
  br label %24

24:                                               ; preds = %22, %0
  %25 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  %26 = icmp ne %24* %25, null
  br i1 %26, label %27, label %41

27:                                               ; preds = %24
  %28 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  call void @listRewind(%24* %28, %30* %1)
  br label %29

29:                                               ; preds = %32, %27
  %30 = call %25* @listNext(%30* %1)
  store %25* %30, %25** %2, align 8
  %31 = icmp ne %25* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %29
  %33 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #10
  %34 = load %25*, %25** %2, align 8
  %35 = getelementptr inbounds %25, %25* %34, i32 0, i32 2
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** %4, align 8
  %37 = load i8*, i8** %4, align 8
  call void @sdsfree(i8* %37)
  %38 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #10
  br label %29

39:                                               ; preds = %29
  %40 = load %24*, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  call void @listRelease(%24* %40)
  store %24* null, %24** getelementptr inbounds (%23, %23* @772, i32 0, i32 1), align 8
  br label %41

41:                                               ; preds = %39, %24
  %42 = load %4*, %4** @clusterManagerUncoveredSlots, align 8
  %43 = icmp ne %4* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = load %4*, %4** @clusterManagerUncoveredSlots, align 8
  call void @dictRelease(%4* %45)
  br label %46

46:                                               ; preds = %44, %41
  %47 = bitcast %25** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #10
  %48 = bitcast %30* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %48) #10
  ret void
}

declare dso_local %10* @redisConnectUnix(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @1492() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %31*, align 8
  %3 = alloca i32, align 4
  %4 = bitcast %31** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %5 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %0
  store i32 0, i32* %1, align 4
  store i32 1, i32* %3, align 4
  br label %37

8:                                                ; preds = %0
  %9 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = load %10*, %10** @736, align 8
  %13 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %14 = call i8* (%10*, i8*, ...) @redisCommand(%10* %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @791, i32 0, i32 0), i8* %13)
  %15 = bitcast i8* %14 to %31*
  store %31* %15, %31** %2, align 8
  br label %22

16:                                               ; preds = %8
  %17 = load %10*, %10** @736, align 8
  %18 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 40), align 8
  %19 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 38), align 8
  %20 = call i8* (%10*, i8*, ...) @redisCommand(%10* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @792, i32 0, i32 0), i8* %18, i8* %19)
  %21 = bitcast i8* %20 to %31*
  store %31* %21, %31** %2, align 8
  br label %22

22:                                               ; preds = %16, %11
  %23 = load %31*, %31** %2, align 8
  %24 = icmp ne %31* %23, null
  br i1 %24, label %25, label %36

25:                                               ; preds = %22
  %26 = load %31*, %31** %2, align 8
  %27 = getelementptr inbounds %31, %31* %26, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = load %1*, %1** @stderr, align 8
  %32 = call i32 (%1*, i8*, ...) @fprintf(%1* %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @1161, i32 0, i32 0))
  br label %33

33:                                               ; preds = %30, %25
  %34 = load %31*, %31** %2, align 8
  %35 = bitcast %31* %34 to i8*
  call void @freeReplyObject(i8* %35)
  store i32 0, i32* %1, align 4
  store i32 1, i32* %3, align 4
  br label %37

36:                                               ; preds = %22
  store i32 -1, i32* %1, align 4
  store i32 1, i32* %3, align 4
  br label %37

37:                                               ; preds = %36, %33, %7
  %38 = bitcast %31** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #10
  %39 = load i32, i32* %1, align 4
  ret i32 %39
}

; Function Attrs: nounwind uwtable
define internal i32 @1493() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %31*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast %31** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #10
  %6 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 11), align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %0
  store i32 0, i32* %1, align 4
  store i32 1, i32* %3, align 4
  br label %29

9:                                                ; preds = %0
  %10 = load %10*, %10** @736, align 8
  %11 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 11), align 8
  %12 = call i8* (%10*, i8*, ...) @redisCommand(%10* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1162, i32 0, i32 0), i32 %11)
  %13 = bitcast i8* %12 to %31*
  store %31* %13, %31** %2, align 8
  %14 = load %31*, %31** %2, align 8
  %15 = icmp ne %31* %14, null
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #10
  store i32 0, i32* %4, align 4
  %18 = load %31*, %31** %2, align 8
  %19 = getelementptr inbounds %31, %31* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 6
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i32 -1, i32* %4, align 4
  br label %23

23:                                               ; preds = %22, %16
  %24 = load %31*, %31** %2, align 8
  %25 = bitcast %31* %24 to i8*
  call void @freeReplyObject(i8* %25)
  %26 = load i32, i32* %4, align 4
  store i32 %26, i32* %1, align 4
  store i32 1, i32* %3, align 4
  %27 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %27) #10
  br label %29

28:                                               ; preds = %9
  store i32 -1, i32* %1, align 4
  store i32 1, i32* %3, align 4
  br label %29

29:                                               ; preds = %28, %23, %8
  %30 = bitcast %31** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #10
  %31 = load i32, i32* %1, align 4
  ret i32 %31
}

; Function Attrs: nounwind uwtable
define internal i32 @1494() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %31*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast %31** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #10
  %6 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 53), align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %0
  store i32 0, i32* %1, align 4
  store i32 1, i32* %3, align 4
  br label %28

9:                                                ; preds = %0
  %10 = load %10*, %10** @736, align 8
  %11 = call i8* (%10*, i8*, ...) @redisCommand(%10* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1163, i32 0, i32 0))
  %12 = bitcast i8* %11 to %31*
  store %31* %12, %31** %2, align 8
  %13 = load %31*, %31** %2, align 8
  %14 = icmp ne %31* %13, null
  br i1 %14, label %15, label %27

15:                                               ; preds = %9
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #10
  store i32 0, i32* %4, align 4
  %17 = load %31*, %31** %2, align 8
  %18 = getelementptr inbounds %31, %31* %17, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 6
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 -1, i32* %4, align 4
  br label %22

22:                                               ; preds = %21, %15
  %23 = load %31*, %31** %2, align 8
  %24 = bitcast %31* %23 to i8*
  call void @freeReplyObject(i8* %24)
  %25 = load i32, i32* %4, align 4
  store i32 %25, i32* %1, align 4
  store i32 1, i32* %3, align 4
  %26 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #10
  br label %28

27:                                               ; preds = %9
  store i32 -1, i32* %1, align 4
  store i32 1, i32* %3, align 4
  br label %28

28:                                               ; preds = %27, %22, %8
  %29 = bitcast %31** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #10
  %30 = load i32, i32* %1, align 4
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal i64 @1495() #0 {
  %1 = call i64 @1497()
  %2 = sdiv i64 %1, 1000
  ret i64 %2
}

; Function Attrs: nounwind uwtable
define internal void @1496(i64 %0, i64 %1, double %2, i64 %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca double, align 8
  %8 = alloca i64, align 8
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %6, align 8
  store double %2, double* %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %4
  %12 = load i64, i64* %5, align 8
  %13 = load i64, i64* %6, align 8
  %14 = load double, double* %7, align 8
  %15 = load i64, i64* %8, align 8
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @1166, i32 0, i32 0), i64 %12, i64 %13, double %14, i64 %15)
  %17 = load %1*, %1** @stdout, align 8
  %18 = call i32 @fflush(%1* %17)
  br label %39

19:                                               ; preds = %4
  %20 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %28

22:                                               ; preds = %19
  %23 = load i64, i64* %5, align 8
  %24 = load i64, i64* %6, align 8
  %25 = load double, double* %7, align 8
  %26 = load i64, i64* %8, align 8
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1167, i32 0, i32 0), i64 %23, i64 %24, double %25, i64 %26)
  br label %38

28:                                               ; preds = %19
  %29 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %28
  %32 = load i64, i64* %5, align 8
  %33 = load i64, i64* %6, align 8
  %34 = load double, double* %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1168, i32 0, i32 0), i64 %32, i64 %33, double %34, i64 %35)
  br label %37

37:                                               ; preds = %31, %28
  br label %38

38:                                               ; preds = %37, %22
  br label %39

39:                                               ; preds = %38, %11
  ret void
}

; Function Attrs: nounwind uwtable
define internal i64 @1497() #0 {
  %1 = alloca %16, align 8
  %2 = alloca i64, align 8
  %3 = bitcast %16* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %3) #10
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %5 = call i32 @gettimeofday(%16* %1, %40* null) #10
  %6 = getelementptr inbounds %16, %16* %1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = mul nsw i64 %7, 1000000
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %16, %16* %1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %2, align 8
  %12 = add nsw i64 %11, %10
  store i64 %12, i64* %2, align 8
  %13 = load i64, i64* %2, align 8
  %14 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #10
  %15 = bitcast %16* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %15) #10
  ret i64 %13
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%16*, %40*) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind uwtable
define internal i32 @1498(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %31*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %12 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  store i8* null, i8** %6, align 8
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #10
  store i32 1, i32* %7, align 4
  %16 = load %10*, %10** @736, align 8
  %17 = call i32 @redisGetReply(%10* %16, i8** %4)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %49

19:                                               ; preds = %1
  %20 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 13), align 8
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = load %10*, %10** @736, align 8
  call void @redisFree(%10* %23)
  store %10* null, %10** @736, align 8
  store i32 0, i32* %2, align 4
  store i32 1, i32* %8, align 4
  br label %156

24:                                               ; preds = %19
  %25 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 12), align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %48

27:                                               ; preds = %24
  %28 = load %10*, %10** @736, align 8
  %29 = getelementptr inbounds %10, %10* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %41

32:                                               ; preds = %27
  %33 = call i32* @__errno_location() #13
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 104
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = call i32* @__errno_location() #13
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 32
  br i1 %39, label %40, label %41

40:                                               ; preds = %36, %32
  store i32 -1, i32* %2, align 4
  store i32 1, i32* %8, align 4
  br label %156

41:                                               ; preds = %36, %27
  %42 = load %10*, %10** @736, align 8
  %43 = getelementptr inbounds %10, %10* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 3
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  store i32 -1, i32* %2, align 4
  store i32 1, i32* %8, align 4
  br label %156

47:                                               ; preds = %41
  br label %48

48:                                               ; preds = %47, %24
  call void @1499()
  call void @exit(i32 1) #14
  unreachable

49:                                               ; preds = %1
  %50 = load i8*, i8** %4, align 8
  %51 = bitcast i8* %50 to %31*
  store %31* %51, %31** %5, align 8
  %52 = load %31*, %31** %5, align 8
  %53 = getelementptr inbounds %31, %31* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 49), align 8
  %55 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 21), align 8
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %112

57:                                               ; preds = %49
  %58 = load %31*, %31** %5, align 8
  %59 = getelementptr inbounds %31, %31* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 6
  br i1 %61, label %62, label %112

62:                                               ; preds = %57
  %63 = load %31*, %31** %5, align 8
  %64 = getelementptr inbounds %31, %31* %63, i32 0, i32 4
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @strncmp(i8* %65, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1179, i32 0, i32 0), i64 5) #12
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = load %31*, %31** %5, align 8
  %70 = getelementptr inbounds %31, %31* %69, i32 0, i32 4
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1180, i32 0, i32 0)) #12
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %112, label %74

74:                                               ; preds = %68, %62
  %75 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #10
  %76 = load %31*, %31** %5, align 8
  %77 = getelementptr inbounds %31, %31* %76, i32 0, i32 4
  %78 = load i8*, i8** %77, align 8
  store i8* %78, i8** %9, align 8
  %79 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %79) #10
  %80 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %80) #10
  store i32 0, i32* %7, align 4
  %81 = load i8*, i8** %9, align 8
  %82 = call i8* @strchr(i8* %81, i32 32) #12
  store i8* %82, i8** %10, align 8
  %83 = load i8*, i8** %10, align 8
  %84 = getelementptr inbounds i8, i8* %83, i64 1
  %85 = call i8* @strchr(i8* %84, i32 32) #12
  store i8* %85, i8** %9, align 8
  %86 = load i8*, i8** %9, align 8
  store i8 0, i8* %86, align 1
  %87 = load i8*, i8** %10, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  %89 = call i32 @atoi(i8* %88) #12
  store i32 %89, i32* %11, align 4
  %90 = load i8*, i8** %9, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 1
  %92 = call i8* @strrchr(i8* %91, i32 58) #12
  store i8* %92, i8** %10, align 8
  %93 = load i8*, i8** %10, align 8
  store i8 0, i8* %93, align 1
  %94 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  call void @sdsfree(i8* %94)
  %95 = load i8*, i8** %9, align 8
  %96 = getelementptr inbounds i8, i8* %95, i64 1
  %97 = call i8* @sdsnew(i8* %96)
  store i8* %97, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  %98 = load i8*, i8** %10, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  %100 = call i32 @atoi(i8* %99) #12
  store i32 %100, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  %101 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 12), align 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %108

103:                                              ; preds = %74
  %104 = load i32, i32* %11, align 4
  %105 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 0), align 8
  %106 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 1), align 8
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @1181, i32 0, i32 0), i32 %104, i8* %105, i32 %106)
  br label %108

108:                                              ; preds = %103, %74
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 22), align 4
  call void @1482()
  %109 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %109) #10
  %110 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110) #10
  %111 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #10
  br label %112

112:                                              ; preds = %108, %68, %57, %49
  %113 = load i32, i32* %7, align 4
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %153

115:                                              ; preds = %112
  %116 = load i32, i32* %3, align 4
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %115
  %119 = load %31*, %31** %5, align 8
  %120 = call i8* @1481(%31* %119)
  store i8* %120, i8** %6, align 8
  br label %146

121:                                              ; preds = %115
  %122 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %124, label %129

124:                                              ; preds = %121
  %125 = load %31*, %31** %5, align 8
  %126 = call i8* @1481(%31* %125)
  store i8* %126, i8** %6, align 8
  %127 = load i8*, i8** %6, align 8
  %128 = call i8* @sdscat(i8* %127, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  store i8* %128, i8** %6, align 8
  br label %145

129:                                              ; preds = %121
  %130 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %129
  %133 = load %31*, %31** %5, align 8
  %134 = call i8* @1500(%31* %133, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0))
  store i8* %134, i8** %6, align 8
  br label %144

135:                                              ; preds = %129
  %136 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %137 = icmp eq i32 %136, 2
  br i1 %137, label %138, label %143

138:                                              ; preds = %135
  %139 = load %31*, %31** %5, align 8
  %140 = call i8* @1501(%31* %139)
  store i8* %140, i8** %6, align 8
  %141 = load i8*, i8** %6, align 8
  %142 = call i8* @sdscat(i8* %141, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  store i8* %142, i8** %6, align 8
  br label %143

143:                                              ; preds = %138, %135
  br label %144

144:                                              ; preds = %143, %132
  br label %145

145:                                              ; preds = %144, %124
  br label %146

146:                                              ; preds = %145, %118
  %147 = load i8*, i8** %6, align 8
  %148 = load i8*, i8** %6, align 8
  %149 = call i64 @1432(i8* %148)
  %150 = load %1*, %1** @stdout, align 8
  %151 = call i64 @fwrite(i8* %147, i64 %149, i64 1, %1* %150)
  %152 = load i8*, i8** %6, align 8
  call void @sdsfree(i8* %152)
  br label %153

153:                                              ; preds = %146, %112
  %154 = load %31*, %31** %5, align 8
  %155 = bitcast %31* %154 to i8*
  call void @freeReplyObject(i8* %155)
  store i32 0, i32* %2, align 4
  store i32 1, i32* %8, align 4
  br label %156

156:                                              ; preds = %153, %46, %40, %22
  %157 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %157) #10
  %158 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %158) #10
  %159 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %159) #10
  %160 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %160) #10
  %161 = load i32, i32* %2, align 4
  ret i32 %161
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #6

; Function Attrs: nounwind uwtable
define internal void @1499() #0 {
  %1 = load %10*, %10** @736, align 8
  %2 = icmp eq %10* %1, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %0
  br label %10

4:                                                ; preds = %0
  %5 = load %1*, %1** @stderr, align 8
  %6 = load %10*, %10** @736, align 8
  %7 = getelementptr inbounds %10, %10* %6, i32 0, i32 2
  %8 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i32 0, i32 0
  %9 = call i32 (%1*, i8*, ...) @fprintf(%1* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1039, i32 0, i32 0), i8* %8)
  br label %10

10:                                               ; preds = %4, %3
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @1500(%31* %0, i8* %1) #0 {
  %3 = alloca %31*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [16 x i8], align 16
  %9 = alloca [16 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  store %31* %0, %31** %3, align 8
  store i8* %1, i8** %4, align 8
  %14 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  %15 = call i8* @sdsempty()
  store i8* %15, i8** %5, align 8
  %16 = load %31*, %31** %3, align 8
  %17 = getelementptr inbounds %31, %31* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %266 [
    i32 6, label %19
    i32 5, label %25
    i32 3, label %33
    i32 7, label %39
    i32 1, label %45
    i32 14, label %45
    i32 4, label %73
    i32 8, label %76
    i32 2, label %85
    i32 9, label %85
    i32 10, label %85
  ]

19:                                               ; preds = %2
  %20 = load i8*, i8** %5, align 8
  %21 = load %31*, %31** %3, align 8
  %22 = getelementptr inbounds %31, %31* %21, i32 0, i32 4
  %23 = load i8*, i8** %22, align 8
  %24 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1182, i32 0, i32 0), i8* %23)
  store i8* %24, i8** %5, align 8
  br label %272

25:                                               ; preds = %2
  %26 = load i8*, i8** %5, align 8
  %27 = load %31*, %31** %3, align 8
  %28 = getelementptr inbounds %31, %31* %27, i32 0, i32 4
  %29 = load i8*, i8** %28, align 8
  %30 = call i8* @sdscat(i8* %26, i8* %29)
  store i8* %30, i8** %5, align 8
  %31 = load i8*, i8** %5, align 8
  %32 = call i8* @sdscat(i8* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  store i8* %32, i8** %5, align 8
  br label %272

33:                                               ; preds = %2
  %34 = load i8*, i8** %5, align 8
  %35 = load %31*, %31** %3, align 8
  %36 = getelementptr inbounds %31, %31* %35, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1183, i32 0, i32 0), i64 %37)
  store i8* %38, i8** %5, align 8
  br label %272

39:                                               ; preds = %2
  %40 = load i8*, i8** %5, align 8
  %41 = load %31*, %31** %3, align 8
  %42 = getelementptr inbounds %31, %31* %41, i32 0, i32 4
  %43 = load i8*, i8** %42, align 8
  %44 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1184, i32 0, i32 0), i8* %43)
  store i8* %44, i8** %5, align 8
  br label %272

45:                                               ; preds = %2, %2
  %46 = load %31*, %31** %3, align 8
  %47 = getelementptr inbounds %31, %31* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %61

50:                                               ; preds = %45
  %51 = load i8*, i8** %5, align 8
  %52 = load %31*, %31** %3, align 8
  %53 = getelementptr inbounds %31, %31* %52, i32 0, i32 4
  %54 = load i8*, i8** %53, align 8
  %55 = load %31*, %31** %3, align 8
  %56 = getelementptr inbounds %31, %31* %55, i32 0, i32 3
  %57 = load i64, i64* %56, align 8
  %58 = call i8* @sdscatrepr(i8* %51, i8* %54, i64 %57)
  store i8* %58, i8** %5, align 8
  %59 = load i8*, i8** %5, align 8
  %60 = call i8* @sdscat(i8* %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  store i8* %60, i8** %5, align 8
  br label %72

61:                                               ; preds = %45
  %62 = load i8*, i8** %5, align 8
  %63 = load %31*, %31** %3, align 8
  %64 = getelementptr inbounds %31, %31* %63, i32 0, i32 4
  %65 = load i8*, i8** %64, align 8
  %66 = load %31*, %31** %3, align 8
  %67 = getelementptr inbounds %31, %31* %66, i32 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = call i8* @sdscatlen(i8* %62, i8* %65, i64 %68)
  store i8* %69, i8** %5, align 8
  %70 = load i8*, i8** %5, align 8
  %71 = call i8* @sdscat(i8* %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @768, i32 0, i32 0))
  store i8* %71, i8** %5, align 8
  br label %72

72:                                               ; preds = %61, %50
  br label %272

73:                                               ; preds = %2
  %74 = load i8*, i8** %5, align 8
  %75 = call i8* @sdscat(i8* %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1185, i32 0, i32 0))
  store i8* %75, i8** %5, align 8
  br label %272

76:                                               ; preds = %2
  %77 = load i8*, i8** %5, align 8
  %78 = load %31*, %31** %3, align 8
  %79 = getelementptr inbounds %31, %31* %78, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = icmp ne i64 %80, 0
  %82 = zext i1 %81 to i64
  %83 = select i1 %81, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1186, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1187, i32 0, i32 0)
  %84 = call i8* @sdscat(i8* %77, i8* %83)
  store i8* %84, i8** %5, align 8
  br label %272

85:                                               ; preds = %2, %2, %2
  %86 = load %31*, %31** %3, align 8
  %87 = getelementptr inbounds %31, %31* %86, i32 0, i32 6
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %120

90:                                               ; preds = %85
  %91 = load %31*, %31** %3, align 8
  %92 = getelementptr inbounds %31, %31* %91, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = load i8*, i8** %5, align 8
  %97 = call i8* @sdscat(i8* %96, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1188, i32 0, i32 0))
  store i8* %97, i8** %5, align 8
  br label %119

98:                                               ; preds = %90
  %99 = load %31*, %31** %3, align 8
  %100 = getelementptr inbounds %31, %31* %99, i32 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 9
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = load i8*, i8** %5, align 8
  %105 = call i8* @sdscat(i8* %104, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1189, i32 0, i32 0))
  store i8* %105, i8** %5, align 8
  br label %118

106:                                              ; preds = %98
  %107 = load %31*, %31** %3, align 8
  %108 = getelementptr inbounds %31, %31* %107, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 10
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = load i8*, i8** %5, align 8
  %113 = call i8* @sdscat(i8* %112, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1190, i32 0, i32 0))
  store i8* %113, i8** %5, align 8
  br label %117

114:                                              ; preds = %106
  %115 = load i8*, i8** %5, align 8
  %116 = call i8* @sdscat(i8* %115, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1191, i32 0, i32 0))
  store i8* %116, i8** %5, align 8
  br label %117

117:                                              ; preds = %114, %111
  br label %118

118:                                              ; preds = %117, %103
  br label %119

119:                                              ; preds = %118, %95
  br label %265

120:                                              ; preds = %85
  %121 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %121) #10
  %122 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %122) #10
  store i32 0, i32* %7, align 4
  %123 = bitcast [16 x i8]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %123) #10
  %124 = bitcast [16 x i8]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %124) #10
  %125 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %125) #10
  %126 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %126) #10
  %127 = load %31*, %31** %3, align 8
  %128 = getelementptr inbounds %31, %31* %127, i32 0, i32 6
  %129 = load i64, i64* %128, align 8
  %130 = trunc i64 %129 to i32
  store i32 %130, i32* %6, align 4
  %131 = load %31*, %31** %3, align 8
  %132 = getelementptr inbounds %31, %31* %131, i32 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 9
  br i1 %134, label %135, label %138

135:                                              ; preds = %120
  %136 = load i32, i32* %6, align 4
  %137 = udiv i32 %136, 2
  store i32 %137, i32* %6, align 4
  br label %138

138:                                              ; preds = %135, %120
  br label %139

139:                                              ; preds = %144, %138
  %140 = load i32, i32* %7, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %7, align 4
  %142 = load i32, i32* %6, align 4
  %143 = udiv i32 %142, 10
  store i32 %143, i32* %6, align 4
  br label %144

144:                                              ; preds = %139
  %145 = load i32, i32* %6, align 4
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %139, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0
  %149 = load i32, i32* %7, align 4
  %150 = add i32 %149, 2
  %151 = zext i32 %150 to i64
  call void @llvm.memset.p0i8.i64(i8* align 16 %148, i8 32, i64 %151, i1 false)
  %152 = load i32, i32* %7, align 4
  %153 = add i32 %152, 2
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i64 0, i64 %154
  store i8 0, i8* %155, align 1
  %156 = load i8*, i8** %4, align 8
  %157 = call i8* @sdsnew(i8* %156)
  %158 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0
  %159 = call i8* @sdscat(i8* %157, i8* %158)
  store i8* %159, i8** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %12) #10
  %160 = load %31*, %31** %3, align 8
  %161 = getelementptr inbounds %31, %31* %160, i32 0, i32 0
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 10
  br i1 %163, label %164, label %165

164:                                              ; preds = %147
  store i8 126, i8* %12, align 1
  br label %173

165:                                              ; preds = %147
  %166 = load %31*, %31** %3, align 8
  %167 = getelementptr inbounds %31, %31* %166, i32 0, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = icmp eq i32 %168, 9
  br i1 %169, label %170, label %171

170:                                              ; preds = %165
  store i8 35, i8* %12, align 1
  br label %172

171:                                              ; preds = %165
  store i8 41, i8* %12, align 1
  br label %172

172:                                              ; preds = %171, %170
  br label %173

173:                                              ; preds = %172, %164
  %174 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  %175 = load i32, i32* %7, align 4
  %176 = load i8, i8* %12, align 1
  %177 = sext i8 %176 to i32
  %178 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %174, i64 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1192, i32 0, i32 0), i32 %175, i32 %177) #10
  store i32 0, i32* %6, align 4
  br label %179

179:                                              ; preds = %254, %173
  %180 = load i32, i32* %6, align 4
  %181 = zext i32 %180 to i64
  %182 = load %31*, %31** %3, align 8
  %183 = getelementptr inbounds %31, %31* %182, i32 0, i32 6
  %184 = load i64, i64* %183, align 8
  %185 = icmp ult i64 %181, %184
  br i1 %185, label %186, label %257

186:                                              ; preds = %179
  %187 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %187) #10
  %188 = load %31*, %31** %3, align 8
  %189 = getelementptr inbounds %31, %31* %188, i32 0, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = icmp eq i32 %190, 9
  br i1 %191, label %192, label %195

192:                                              ; preds = %186
  %193 = load i32, i32* %6, align 4
  %194 = udiv i32 %193, 2
  br label %197

195:                                              ; preds = %186
  %196 = load i32, i32* %6, align 4
  br label %197

197:                                              ; preds = %195, %192
  %198 = phi i32 [ %194, %192 ], [ %196, %195 ]
  store i32 %198, i32* %13, align 4
  %199 = load i32, i32* %13, align 4
  %200 = add i32 %199, 1
  store i32 %200, i32* %13, align 4
  %201 = load i8*, i8** %5, align 8
  %202 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  %203 = load i32, i32* %6, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %197
  br label %208

206:                                              ; preds = %197
  %207 = load i8*, i8** %4, align 8
  br label %208

208:                                              ; preds = %206, %205
  %209 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @691, i32 0, i32 0), %205 ], [ %207, %206 ]
  %210 = load i32, i32* %13, align 4
  %211 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %201, i8* %202, i8* %209, i32 %210)
  store i8* %211, i8** %5, align 8
  %212 = load %31*, %31** %3, align 8
  %213 = getelementptr inbounds %31, %31* %212, i32 0, i32 7
  %214 = load %31**, %31*** %213, align 8
  %215 = load i32, i32* %6, align 4
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds %31*, %31** %214, i64 %216
  %218 = load %31*, %31** %217, align 8
  %219 = load i8*, i8** %10, align 8
  %220 = call i8* @1500(%31* %218, i8* %219)
  store i8* %220, i8** %11, align 8
  %221 = load i8*, i8** %5, align 8
  %222 = load i8*, i8** %11, align 8
  %223 = load i8*, i8** %11, align 8
  %224 = call i64 @1432(i8* %223)
  %225 = call i8* @sdscatlen(i8* %221, i8* %222, i64 %224)
  store i8* %225, i8** %5, align 8
  %226 = load i8*, i8** %11, align 8
  call void @sdsfree(i8* %226)
  %227 = load %31*, %31** %3, align 8
  %228 = getelementptr inbounds %31, %31* %227, i32 0, i32 0
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %229, 9
  br i1 %230, label %231, label %252

231:                                              ; preds = %208
  %232 = load i32, i32* %6, align 4
  %233 = add i32 %232, 1
  store i32 %233, i32* %6, align 4
  %234 = load i8*, i8** %5, align 8
  call void @sdsrange(i8* %234, i32 0, i32 -2)
  %235 = load i8*, i8** %5, align 8
  %236 = call i8* @sdscat(i8* %235, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1193, i32 0, i32 0))
  store i8* %236, i8** %5, align 8
  %237 = load %31*, %31** %3, align 8
  %238 = getelementptr inbounds %31, %31* %237, i32 0, i32 7
  %239 = load %31**, %31*** %238, align 8
  %240 = load i32, i32* %6, align 4
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds %31*, %31** %239, i64 %241
  %243 = load %31*, %31** %242, align 8
  %244 = load i8*, i8** %10, align 8
  %245 = call i8* @1500(%31* %243, i8* %244)
  store i8* %245, i8** %11, align 8
  %246 = load i8*, i8** %5, align 8
  %247 = load i8*, i8** %11, align 8
  %248 = load i8*, i8** %11, align 8
  %249 = call i64 @1432(i8* %248)
  %250 = call i8* @sdscatlen(i8* %246, i8* %247, i64 %249)
  store i8* %250, i8** %5, align 8
  %251 = load i8*, i8** %11, align 8
  call void @sdsfree(i8* %251)
  br label %252

252:                                              ; preds = %231, %208
  %253 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %253) #10
  br label %254

254:                                              ; preds = %252
  %255 = load i32, i32* %6, align 4
  %256 = add i32 %255, 1
  store i32 %256, i32* %6, align 4
  br label %179

257:                                              ; preds = %179
  %258 = load i8*, i8** %10, align 8
  call void @sdsfree(i8* %258)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %12) #10
  %259 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #10
  %260 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #10
  %261 = bitcast [16 x i8]* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %261) #10
  %262 = bitcast [16 x i8]* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %262) #10
  %263 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #10
  %264 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %264) #10
  br label %265

265:                                              ; preds = %257, %119
  br label %272

266:                                              ; preds = %2
  %267 = load %1*, %1** @stderr, align 8
  %268 = load %31*, %31** %3, align 8
  %269 = getelementptr inbounds %31, %31* %268, i32 0, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = call i32 (%1*, i8*, ...) @fprintf(%1* %267, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1046, i32 0, i32 0), i32 %270)
  call void @exit(i32 1) #14
  unreachable

272:                                              ; preds = %265, %76, %73, %72, %39, %33, %25, %19
  %273 = load i8*, i8** %5, align 8
  %274 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #10
  ret i8* %273
}

; Function Attrs: nounwind uwtable
define internal i8* @1501(%31* %0) #0 {
  %2 = alloca %31*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store %31* %0, %31** %2, align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #10
  %7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = call i8* @sdsempty()
  store i8* %8, i8** %4, align 8
  %9 = load %31*, %31** %2, align 8
  %10 = getelementptr inbounds %31, %31* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %106 [
    i32 6, label %12
    i32 5, label %24
    i32 3, label %33
    i32 7, label %39
    i32 1, label %45
    i32 14, label %45
    i32 4, label %54
    i32 8, label %57
    i32 2, label %66
    i32 9, label %66
  ]

12:                                               ; preds = %1
  %13 = load i8*, i8** %4, align 8
  %14 = call i8* @sdscat(i8* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1194, i32 0, i32 0))
  store i8* %14, i8** %4, align 8
  %15 = load i8*, i8** %4, align 8
  %16 = load %31*, %31** %2, align 8
  %17 = getelementptr inbounds %31, %31* %16, i32 0, i32 4
  %18 = load i8*, i8** %17, align 8
  %19 = load %31*, %31** %2, align 8
  %20 = getelementptr inbounds %31, %31* %19, i32 0, i32 4
  %21 = load i8*, i8** %20, align 8
  %22 = call i64 @strlen(i8* %21) #12
  %23 = call i8* @sdscatrepr(i8* %15, i8* %18, i64 %22)
  store i8* %23, i8** %4, align 8
  br label %112

24:                                               ; preds = %1
  %25 = load i8*, i8** %4, align 8
  %26 = load %31*, %31** %2, align 8
  %27 = getelementptr inbounds %31, %31* %26, i32 0, i32 4
  %28 = load i8*, i8** %27, align 8
  %29 = load %31*, %31** %2, align 8
  %30 = getelementptr inbounds %31, %31* %29, i32 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = call i8* @sdscatrepr(i8* %25, i8* %28, i64 %31)
  store i8* %32, i8** %4, align 8
  br label %112

33:                                               ; preds = %1
  %34 = load i8*, i8** %4, align 8
  %35 = load %31*, %31** %2, align 8
  %36 = getelementptr inbounds %31, %31* %35, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1045, i32 0, i32 0), i64 %37)
  store i8* %38, i8** %4, align 8
  br label %112

39:                                               ; preds = %1
  %40 = load i8*, i8** %4, align 8
  %41 = load %31*, %31** %2, align 8
  %42 = getelementptr inbounds %31, %31* %41, i32 0, i32 4
  %43 = load i8*, i8** %42, align 8
  %44 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @854, i32 0, i32 0), i8* %43)
  store i8* %44, i8** %4, align 8
  br label %112

45:                                               ; preds = %1, %1
  %46 = load i8*, i8** %4, align 8
  %47 = load %31*, %31** %2, align 8
  %48 = getelementptr inbounds %31, %31* %47, i32 0, i32 4
  %49 = load i8*, i8** %48, align 8
  %50 = load %31*, %31** %2, align 8
  %51 = getelementptr inbounds %31, %31* %50, i32 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = call i8* @sdscatrepr(i8* %46, i8* %49, i64 %52)
  store i8* %53, i8** %4, align 8
  br label %112

54:                                               ; preds = %1
  %55 = load i8*, i8** %4, align 8
  %56 = call i8* @sdscat(i8* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1195, i32 0, i32 0))
  store i8* %56, i8** %4, align 8
  br label %112

57:                                               ; preds = %1
  %58 = load i8*, i8** %4, align 8
  %59 = load %31*, %31** %2, align 8
  %60 = getelementptr inbounds %31, %31* %59, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = icmp ne i64 %61, 0
  %63 = zext i1 %62 to i64
  %64 = select i1 %62, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1196, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1197, i32 0, i32 0)
  %65 = call i8* @sdscat(i8* %58, i8* %64)
  store i8* %65, i8** %4, align 8
  br label %112

66:                                               ; preds = %1, %1
  store i32 0, i32* %3, align 4
  br label %67

67:                                               ; preds = %102, %66
  %68 = load i32, i32* %3, align 4
  %69 = zext i32 %68 to i64
  %70 = load %31*, %31** %2, align 8
  %71 = getelementptr inbounds %31, %31* %70, i32 0, i32 6
  %72 = load i64, i64* %71, align 8
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %74, label %105

74:                                               ; preds = %67
  %75 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #10
  %76 = load %31*, %31** %2, align 8
  %77 = getelementptr inbounds %31, %31* %76, i32 0, i32 7
  %78 = load %31**, %31*** %77, align 8
  %79 = load i32, i32* %3, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %31*, %31** %78, i64 %80
  %82 = load %31*, %31** %81, align 8
  %83 = call i8* @1501(%31* %82)
  store i8* %83, i8** %5, align 8
  %84 = load i8*, i8** %4, align 8
  %85 = load i8*, i8** %5, align 8
  %86 = load i8*, i8** %5, align 8
  %87 = call i64 @1432(i8* %86)
  %88 = call i8* @sdscatlen(i8* %84, i8* %85, i64 %87)
  store i8* %88, i8** %4, align 8
  %89 = load i32, i32* %3, align 4
  %90 = zext i32 %89 to i64
  %91 = load %31*, %31** %2, align 8
  %92 = getelementptr inbounds %31, %31* %91, i32 0, i32 6
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %93, 1
  %95 = icmp ne i64 %90, %94
  br i1 %95, label %96, label %99

96:                                               ; preds = %74
  %97 = load i8*, i8** %4, align 8
  %98 = call i8* @sdscat(i8* %97, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @836, i32 0, i32 0))
  store i8* %98, i8** %4, align 8
  br label %99

99:                                               ; preds = %96, %74
  %100 = load i8*, i8** %5, align 8
  call void @sdsfree(i8* %100)
  %101 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #10
  br label %102

102:                                              ; preds = %99
  %103 = load i32, i32* %3, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %3, align 4
  br label %67

105:                                              ; preds = %67
  br label %112

106:                                              ; preds = %1
  %107 = load %1*, %1** @stderr, align 8
  %108 = load %31*, %31** %2, align 8
  %109 = getelementptr inbounds %31, %31* %108, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = call i32 (%1*, i8*, ...) @fprintf(%1* %107, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1046, i32 0, i32 0), i32 %110)
  call void @exit(i32 1) #14
  unreachable

112:                                              ; preds = %105, %57, %54, %45, %39, %33, %24, %12
  %113 = load i8*, i8** %4, align 8
  %114 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #10
  %115 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %115) #10
  ret i8* %113
}

declare dso_local i64 @fwrite(i8*, i64, i64, %1*) #2

declare dso_local i8* @sdscatrepr(i8*, i8*, i64) #2

declare dso_local void @sdsrange(i8*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i8* @1502(%28* %0) #0 {
  %2 = alloca %28*, align 8
  %3 = alloca i8*, align 8
  store %28* %0, %28** %2, align 8
  %4 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 14), align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  br label %9

7:                                                ; preds = %1
  call void @__assert_fail(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1212, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 2489, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @1213, i32 0, i32 0)) #14
  unreachable

8:                                                ; No predecessors!
  br label %9

9:                                                ; preds = %8, %6
  %10 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  %11 = load i8*, i8** getelementptr inbounds (%21, %21* @765, i32 0, i32 51, i32 14), align 8
  %12 = call i8* @sdsnew(i8* %11)
  store i8* %12, i8** %3, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = load i8*, i8** %3, align 8
  %15 = call i64 @1432(i8* %14)
  %16 = sub i64 %15, 1
  %17 = getelementptr inbounds i8, i8* %13, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %19, 47
  br i1 %20, label %21, label %24

21:                                               ; preds = %9
  %22 = load i8*, i8** %3, align 8
  %23 = call i8* @sdscat(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1054, i32 0, i32 0))
  store i8* %23, i8** %3, align 8
  br label %24

24:                                               ; preds = %21, %9
  %25 = load i8*, i8** %3, align 8
  %26 = load %28*, %28** %2, align 8
  %27 = getelementptr inbounds %28, %28* %26, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = load %28*, %28** %2, align 8
  %30 = getelementptr inbounds %28, %28* %29, i32 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = load %28*, %28** %2, align 8
  %33 = getelementptr inbounds %28, %28* %32, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %25, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @1214, i32 0, i32 0), i8* %28, i32 %31, i8* %34)
  store i8* %35, i8** %3, align 8
  %36 = load i8*, i8** %3, align 8
  %37 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #10
  ret i8* %36
}

declare dso_local i32 @open64(i8*, i32, ...) #2

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @ftruncate64(i32, i64) #4

declare dso_local i32 @close(i32) #2

declare dso_local i32 @fsync(i32) #2

declare dso_local %13* @redisReaderCreate() #2

declare dso_local i32 @anetNonBlock(i8*, i32) #2

declare dso_local i32 @aeWait(i32, i32, i64) #2

declare dso_local i32 @redisReaderFeed(%13*, i8*, i64) #2

declare dso_local i32 @redisReaderGetReply(%13*, i8**) #2

declare dso_local void @redisReaderFree(%13*) #2

; Function Attrs: nounwind uwtable
define internal %20* @1503(%4* %0, i8* %1, %20* %2) #0 {
  %4 = alloca %4*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %20*, align 8
  %7 = alloca %20*, align 8
  store %4* %0, %4** %4, align 8
  store i8* %1, i8** %5, align 8
  store %20* %2, %20** %6, align 8
  %8 = bitcast %20** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #10
  %9 = call i8* @zmalloc(i64 56)
  %10 = bitcast i8* %9 to %20*
  store %20* %10, %20** %7, align 8
  %11 = load %20*, %20** %7, align 8
  %12 = load %20*, %20** %6, align 8
  %13 = bitcast %20* %11 to i8*
  %14 = bitcast %20* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 56, i1 false)
  %15 = load i8*, i8** %5, align 8
  %16 = call i8* @sdsnew(i8* %15)
  %17 = load %20*, %20** %7, align 8
  %18 = getelementptr inbounds %20, %20* %17, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = load %4*, %4** %4, align 8
  %20 = load %20*, %20** %7, align 8
  %21 = getelementptr inbounds %20, %20* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = load %20*, %20** %7, align 8
  %24 = bitcast %20* %23 to i8*
  %25 = call i32 @dictAdd(%4* %19, i8* %22, i8* %24)
  %26 = load %20*, %20** %7, align 8
  %27 = bitcast %20** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #10
  ret %20* %26
}

; Function Attrs: nounwind uwtable
define internal i32 @1504() #0 {
  %1 = alloca %31*, align 8
  %2 = alloca i32, align 4
  %3 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #10
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #10
  %5 = load %10*, %10** @736, align 8
  %6 = call i8* (%10*, i8*, ...) @redisCommand(%10* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @178, i32 0, i32 0))
  %7 = bitcast i8* %6 to %31*
  store %31* %7, %31** %1, align 8
  %8 = load %31*, %31** %1, align 8
  %9 = icmp eq %31* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %0
  %11 = load %31*, %31** %1, align 8
  %12 = getelementptr inbounds %31, %31* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, 3
  br i1 %14, label %15, label %18

15:                                               ; preds = %10, %0
  %16 = load %1*, %1** @stderr, align 8
  %17 = call i32 (%1*, i8*, ...) @fprintf(%1* %16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1238, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

18:                                               ; preds = %10
  %19 = load %31*, %31** %1, align 8
  %20 = getelementptr inbounds %31, %31* %19, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %2, align 4
  %23 = load %31*, %31** %1, align 8
  %24 = bitcast %31* %23 to i8*
  call void @freeReplyObject(i8* %24)
  %25 = load i32, i32* %2, align 4
  %26 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #10
  %27 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #10
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal %31* @1505(i64* %0) #0 {
  %2 = alloca i64*, align 8
  %3 = alloca %31*, align 8
  store i64* %0, i64** %2, align 8
  %4 = bitcast %31** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #10
  %5 = load %10*, %10** @736, align 8
  %6 = load i64*, i64** %2, align 8
  %7 = load i64, i64* %6, align 8
  %8 = call i8* (%10*, i8*, ...) @redisCommand(%10* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1239, i32 0, i32 0), i64 %7)
  %9 = bitcast i8* %8 to %31*
  store %31* %9, %31** %3, align 8
  %10 = load %31*, %31** %3, align 8
  %11 = icmp eq %31* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = load %1*, %1** @stderr, align 8
  %14 = call i32 (%1*, i8*, ...) @fprintf(%1* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @738, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

15:                                               ; preds = %1
  %16 = load %31*, %31** %3, align 8
  %17 = getelementptr inbounds %31, %31* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 6
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = load %1*, %1** @stderr, align 8
  %22 = load %31*, %31** %3, align 8
  %23 = getelementptr inbounds %31, %31* %22, i32 0, i32 4
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 (%1*, i8*, ...) @fprintf(%1* %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @1240, i32 0, i32 0), i8* %24)
  call void @exit(i32 1) #14
  unreachable

26:                                               ; preds = %15
  %27 = load %31*, %31** %3, align 8
  %28 = getelementptr inbounds %31, %31* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 2
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = load %1*, %1** @stderr, align 8
  %33 = call i32 (%1*, i8*, ...) @fprintf(%1* %32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @1241, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

34:                                               ; preds = %26
  %35 = load %31*, %31** %3, align 8
  %36 = getelementptr inbounds %31, %31* %35, i32 0, i32 6
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 2
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = load %1*, %1** @stderr, align 8
  %41 = call i32 (%1*, i8*, ...) @fprintf(%1* %40, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @1242, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

42:                                               ; preds = %34
  br label %43

43:                                               ; preds = %42
  br label %44

44:                                               ; preds = %43
  br label %45

45:                                               ; preds = %44
  %46 = load %31*, %31** %3, align 8
  %47 = getelementptr inbounds %31, %31* %46, i32 0, i32 7
  %48 = load %31**, %31*** %47, align 8
  %49 = getelementptr inbounds %31*, %31** %48, i64 0
  %50 = load %31*, %31** %49, align 8
  %51 = getelementptr inbounds %31, %31* %50, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %55

54:                                               ; preds = %45
  br label %57

55:                                               ; preds = %45
  call void @__assert_fail(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @1243, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 7159, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @1244, i32 0, i32 0)) #14
  unreachable

56:                                               ; No predecessors!
  br label %57

57:                                               ; preds = %56, %54
  %58 = load %31*, %31** %3, align 8
  %59 = getelementptr inbounds %31, %31* %58, i32 0, i32 7
  %60 = load %31**, %31*** %59, align 8
  %61 = getelementptr inbounds %31*, %31** %60, i64 1
  %62 = load %31*, %31** %61, align 8
  %63 = getelementptr inbounds %31, %31* %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 2
  br i1 %65, label %66, label %67

66:                                               ; preds = %57
  br label %69

67:                                               ; preds = %57
  call void @__assert_fail(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @1245, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 7160, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @1244, i32 0, i32 0)) #14
  unreachable

68:                                               ; No predecessors!
  br label %69

69:                                               ; preds = %68, %66
  %70 = load %31*, %31** %3, align 8
  %71 = getelementptr inbounds %31, %31* %70, i32 0, i32 7
  %72 = load %31**, %31*** %71, align 8
  %73 = getelementptr inbounds %31*, %31** %72, i64 0
  %74 = load %31*, %31** %73, align 8
  %75 = getelementptr inbounds %31, %31* %74, i32 0, i32 4
  %76 = load i8*, i8** %75, align 8
  %77 = call i64 @strtoull(i8* %76, i8** null, i32 10) #10
  %78 = load i64*, i64** %2, align 8
  store i64 %77, i64* %78, align 8
  %79 = load %31*, %31** %3, align 8
  %80 = bitcast %31** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %80) #10
  ret %31* %79
}

; Function Attrs: nounwind uwtable
define internal void @1506(%4* %0, %31* %1, %20** %2) #0 {
  %4 = alloca %4*, align 8
  %5 = alloca %31*, align 8
  %6 = alloca %20**, align 8
  %7 = alloca %31*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca %7*, align 8
  %11 = alloca %20*, align 8
  store %4* %0, %4** %4, align 8
  store %31* %1, %31** %5, align 8
  store %20** %2, %20*** %6, align 8
  %12 = bitcast %31** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #10
  %13 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #10
  store i32 0, i32* %8, align 4
  br label %14

14:                                               ; preds = %33, %3
  %15 = load i32, i32* %8, align 4
  %16 = zext i32 %15 to i64
  %17 = load %31*, %31** %5, align 8
  %18 = getelementptr inbounds %31, %31* %17, i32 0, i32 6
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %16, %19
  br i1 %20, label %21, label %36

21:                                               ; preds = %14
  %22 = load %10*, %10** @736, align 8
  %23 = load %31*, %31** %5, align 8
  %24 = getelementptr inbounds %31, %31* %23, i32 0, i32 7
  %25 = load %31**, %31*** %24, align 8
  %26 = load i32, i32* %8, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %31*, %31** %25, i64 %27
  %29 = load %31*, %31** %28, align 8
  %30 = getelementptr inbounds %31, %31* %29, i32 0, i32 4
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 (%10*, i8*, ...) @redisAppendCommand(%10* %22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1246, i32 0, i32 0), i8* %31)
  br label %33

33:                                               ; preds = %21
  %34 = load i32, i32* %8, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %8, align 4
  br label %14

36:                                               ; preds = %14
  store i32 0, i32* %8, align 4
  br label %37

37:                                               ; preds = %144, %36
  %38 = load i32, i32* %8, align 4
  %39 = zext i32 %38 to i64
  %40 = load %31*, %31** %5, align 8
  %41 = getelementptr inbounds %31, %31* %40, i32 0, i32 6
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %39, %42
  br i1 %43, label %44, label %147

44:                                               ; preds = %37
  %45 = load %10*, %10** @736, align 8
  %46 = bitcast %31** %7 to i8**
  %47 = call i32 @redisGetReply(%10* %45, i8** %46)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %67

49:                                               ; preds = %44
  %50 = load %1*, %1** @stderr, align 8
  %51 = load %31*, %31** %5, align 8
  %52 = getelementptr inbounds %31, %31* %51, i32 0, i32 7
  %53 = load %31**, %31*** %52, align 8
  %54 = load i32, i32* %8, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %31*, %31** %53, i64 %55
  %57 = load %31*, %31** %56, align 8
  %58 = getelementptr inbounds %31, %31* %57, i32 0, i32 4
  %59 = load i8*, i8** %58, align 8
  %60 = load %10*, %10** @736, align 8
  %61 = getelementptr inbounds %10, %10* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = load %10*, %10** @736, align 8
  %64 = getelementptr inbounds %10, %10* %63, i32 0, i32 2
  %65 = getelementptr inbounds [128 x i8], [128 x i8]* %64, i32 0, i32 0
  %66 = call i32 (%1*, i8*, ...) @fprintf(%1* %50, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1247, i32 0, i32 0), i8* %59, i32 %62, i8* %65)
  call void @exit(i32 1) #14
  unreachable

67:                                               ; preds = %44
  %68 = load %31*, %31** %7, align 8
  %69 = getelementptr inbounds %31, %31* %68, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp ne i32 %70, 5
  br i1 %71, label %72, label %99

72:                                               ; preds = %67
  %73 = load %31*, %31** %7, align 8
  %74 = getelementptr inbounds %31, %31* %73, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 6
  br i1 %76, label %77, label %83

77:                                               ; preds = %72
  %78 = load %1*, %1** @stderr, align 8
  %79 = load %31*, %31** %7, align 8
  %80 = getelementptr inbounds %31, %31* %79, i32 0, i32 4
  %81 = load i8*, i8** %80, align 8
  %82 = call i32 (%1*, i8*, ...) @fprintf(%1* %78, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1248, i32 0, i32 0), i8* %81)
  br label %98

83:                                               ; preds = %72
  %84 = load %1*, %1** @stderr, align 8
  %85 = load %31*, %31** %7, align 8
  %86 = getelementptr inbounds %31, %31* %85, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = load %31*, %31** %5, align 8
  %89 = getelementptr inbounds %31, %31* %88, i32 0, i32 7
  %90 = load %31**, %31*** %89, align 8
  %91 = load i32, i32* %8, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %31*, %31** %90, i64 %92
  %94 = load %31*, %31** %93, align 8
  %95 = getelementptr inbounds %31, %31* %94, i32 0, i32 4
  %96 = load i8*, i8** %95, align 8
  %97 = call i32 (%1*, i8*, ...) @fprintf(%1* %84, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @1249, i32 0, i32 0), i32 %87, i8* %96)
  br label %98

98:                                               ; preds = %83, %77
  call void @exit(i32 1) #14
  unreachable

99:                                               ; preds = %67
  br label %100

100:                                              ; preds = %99
  %101 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %101) #10
  %102 = load %31*, %31** %7, align 8
  %103 = getelementptr inbounds %31, %31* %102, i32 0, i32 4
  %104 = load i8*, i8** %103, align 8
  %105 = call i8* @sdsnew(i8* %104)
  store i8* %105, i8** %9, align 8
  %106 = bitcast %7** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %106) #10
  %107 = load %4*, %4** %4, align 8
  %108 = load i8*, i8** %9, align 8
  %109 = call %7* @dictFind(%4* %107, i8* %108)
  store %7* %109, %7** %10, align 8
  %110 = load i8*, i8** %9, align 8
  call void @sdsfree(i8* %110)
  %111 = bitcast %20** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %111) #10
  store %20* null, %20** %11, align 8
  %112 = load %7*, %7** %10, align 8
  %113 = icmp ne %7* %112, null
  br i1 %113, label %114, label %120

114:                                              ; preds = %100
  %115 = load %7*, %7** %10, align 8
  %116 = getelementptr inbounds %7, %7* %115, i32 0, i32 1
  %117 = bitcast %8* %116 to i8**
  %118 = load i8*, i8** %117, align 8
  %119 = bitcast i8* %118 to %20*
  store %20* %119, %20** %11, align 8
  br label %133

120:                                              ; preds = %100
  %121 = load %31*, %31** %7, align 8
  %122 = getelementptr inbounds %31, %31* %121, i32 0, i32 4
  %123 = load i8*, i8** %122, align 8
  %124 = call i32 @strcmp(i8* %123, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1250, i32 0, i32 0)) #12
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = load %4*, %4** %4, align 8
  %128 = load %31*, %31** %7, align 8
  %129 = getelementptr inbounds %31, %31* %128, i32 0, i32 4
  %130 = load i8*, i8** %129, align 8
  %131 = call %20* @1503(%4* %127, i8* %130, %20* @type_other)
  store %20* %131, %20** %11, align 8
  br label %132

132:                                              ; preds = %126, %120
  br label %133

133:                                              ; preds = %132, %114
  %134 = load %20*, %20** %11, align 8
  %135 = load %20**, %20*** %6, align 8
  %136 = load i32, i32* %8, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %20*, %20** %135, i64 %137
  store %20* %134, %20** %138, align 8
  %139 = load %31*, %31** %7, align 8
  %140 = bitcast %31* %139 to i8*
  call void @freeReplyObject(i8* %140)
  %141 = bitcast %20** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %141) #10
  %142 = bitcast %7** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %142) #10
  %143 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %143) #10
  br label %144

144:                                              ; preds = %133
  %145 = load i32, i32* %8, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %8, align 4
  br label %37

147:                                              ; preds = %37
  %148 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %148) #10
  %149 = bitcast %31** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %149) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1507(%31* %0, %20** %1, i64* %2, i32 %3, i32 %4) #0 {
  %6 = alloca %31*, align 8
  %7 = alloca %20**, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %31*, align 8
  %12 = alloca i32, align 4
  store %31* %0, %31** %6, align 8
  store %20** %1, %20*** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %13 = bitcast %31** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #10
  store i32 0, i32* %12, align 4
  br label %15

15:                                               ; preds = %94, %5
  %16 = load i32, i32* %12, align 4
  %17 = zext i32 %16 to i64
  %18 = load %31*, %31** %6, align 8
  %19 = getelementptr inbounds %31, %31* %18, i32 0, i32 6
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %17, %20
  br i1 %21, label %22, label %97

22:                                               ; preds = %15
  %23 = load %20**, %20*** %7, align 8
  %24 = load i32, i32* %12, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %20*, %20** %23, i64 %25
  %27 = load %20*, %20** %26, align 8
  %28 = icmp ne %20* %27, null
  br i1 %28, label %29, label %41

29:                                               ; preds = %22
  %30 = load %20**, %20*** %7, align 8
  %31 = load i32, i32* %12, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %20*, %20** %30, i64 %32
  %34 = load %20*, %20** %33, align 8
  %35 = getelementptr inbounds %20, %20* %34, i32 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = icmp ne i8* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %29
  %39 = load i32, i32* %9, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38, %22
  br label %94

42:                                               ; preds = %38, %29
  %43 = load i32, i32* %9, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %64, label %45

45:                                               ; preds = %42
  %46 = load %10*, %10** @736, align 8
  %47 = load %20**, %20*** %7, align 8
  %48 = load i32, i32* %12, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %20*, %20** %47, i64 %49
  %51 = load %20*, %20** %50, align 8
  %52 = getelementptr inbounds %20, %20* %51, i32 0, i32 1
  %53 = load i8*, i8** %52, align 8
  %54 = load %31*, %31** %6, align 8
  %55 = getelementptr inbounds %31, %31* %54, i32 0, i32 7
  %56 = load %31**, %31*** %55, align 8
  %57 = load i32, i32* %12, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %31*, %31** %56, i64 %58
  %60 = load %31*, %31** %59, align 8
  %61 = getelementptr inbounds %31, %31* %60, i32 0, i32 4
  %62 = load i8*, i8** %61, align 8
  %63 = call i32 (%10*, i8*, ...) @redisAppendCommand(%10* %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1251, i32 0, i32 0), i8* %53, i8* %62)
  br label %93

64:                                               ; preds = %42
  %65 = load i32, i32* %10, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %64
  %68 = load %10*, %10** @736, align 8
  %69 = load %31*, %31** %6, align 8
  %70 = getelementptr inbounds %31, %31* %69, i32 0, i32 7
  %71 = load %31**, %31*** %70, align 8
  %72 = load i32, i32* %12, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %31*, %31** %71, i64 %73
  %75 = load %31*, %31** %74, align 8
  %76 = getelementptr inbounds %31, %31* %75, i32 0, i32 4
  %77 = load i8*, i8** %76, align 8
  %78 = call i32 (%10*, i8*, ...) @redisAppendCommand(%10* %68, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1252, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1253, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1254, i32 0, i32 0), i8* %77)
  br label %92

79:                                               ; preds = %64
  %80 = load %10*, %10** @736, align 8
  %81 = load %31*, %31** %6, align 8
  %82 = getelementptr inbounds %31, %31* %81, i32 0, i32 7
  %83 = load %31**, %31*** %82, align 8
  %84 = load i32, i32* %12, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %31*, %31** %83, i64 %85
  %87 = load %31*, %31** %86, align 8
  %88 = getelementptr inbounds %31, %31* %87, i32 0, i32 4
  %89 = load i8*, i8** %88, align 8
  %90 = load i32, i32* %10, align 4
  %91 = call i32 (%10*, i8*, ...) @redisAppendCommand(%10* %80, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @1255, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1253, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1254, i32 0, i32 0), i8* %89, i32 %90)
  br label %92

92:                                               ; preds = %79, %67
  br label %93

93:                                               ; preds = %92, %45
  br label %94

94:                                               ; preds = %93, %41
  %95 = load i32, i32* %12, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %12, align 4
  br label %15

97:                                               ; preds = %15
  store i32 0, i32* %12, align 4
  br label %98

98:                                               ; preds = %198, %97
  %99 = load i32, i32* %12, align 4
  %100 = zext i32 %99 to i64
  %101 = load %31*, %31** %6, align 8
  %102 = getelementptr inbounds %31, %31* %101, i32 0, i32 6
  %103 = load i64, i64* %102, align 8
  %104 = icmp ult i64 %100, %103
  br i1 %104, label %105, label %201

105:                                              ; preds = %98
  %106 = load %20**, %20*** %7, align 8
  %107 = load i32, i32* %12, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %20*, %20** %106, i64 %108
  %110 = load %20*, %20** %109, align 8
  %111 = icmp ne %20* %110, null
  br i1 %111, label %112, label %124

112:                                              ; preds = %105
  %113 = load %20**, %20*** %7, align 8
  %114 = load i32, i32* %12, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %20*, %20** %113, i64 %115
  %117 = load %20*, %20** %116, align 8
  %118 = getelementptr inbounds %20, %20* %117, i32 0, i32 1
  %119 = load i8*, i8** %118, align 8
  %120 = icmp ne i8* %119, null
  br i1 %120, label %129, label %121

121:                                              ; preds = %112
  %122 = load i32, i32* %9, align 4
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %121, %105
  %125 = load i64*, i64** %8, align 8
  %126 = load i32, i32* %12, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i64, i64* %125, i64 %127
  store i64 0, i64* %128, align 8
  br label %198

129:                                              ; preds = %121, %112
  %130 = load %10*, %10** @736, align 8
  %131 = bitcast %31** %11 to i8**
  %132 = call i32 @redisGetReply(%10* %130, i8** %131)
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %134, label %152

134:                                              ; preds = %129
  %135 = load %1*, %1** @stderr, align 8
  %136 = load %31*, %31** %6, align 8
  %137 = getelementptr inbounds %31, %31* %136, i32 0, i32 7
  %138 = load %31**, %31*** %137, align 8
  %139 = load i32, i32* %12, align 4
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %31*, %31** %138, i64 %140
  %142 = load %31*, %31** %141, align 8
  %143 = getelementptr inbounds %31, %31* %142, i32 0, i32 4
  %144 = load i8*, i8** %143, align 8
  %145 = load %10*, %10** @736, align 8
  %146 = getelementptr inbounds %10, %10* %145, i32 0, i32 1
  %147 = load i32, i32* %146, align 8
  %148 = load %10*, %10** @736, align 8
  %149 = getelementptr inbounds %10, %10* %148, i32 0, i32 2
  %150 = getelementptr inbounds [128 x i8], [128 x i8]* %149, i32 0, i32 0
  %151 = call i32 (%1*, i8*, ...) @fprintf(%1* %135, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1256, i32 0, i32 0), i8* %144, i32 %147, i8* %150)
  call void @exit(i32 1) #14
  unreachable

152:                                              ; preds = %129
  %153 = load %31*, %31** %11, align 8
  %154 = getelementptr inbounds %31, %31* %153, i32 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = icmp ne i32 %155, 3
  br i1 %156, label %157, label %186

157:                                              ; preds = %152
  %158 = load %1*, %1** @stderr, align 8
  %159 = load i32, i32* %9, align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %169, label %161

161:                                              ; preds = %157
  %162 = load %20**, %20*** %7, align 8
  %163 = load i32, i32* %12, align 4
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds %20*, %20** %162, i64 %164
  %166 = load %20*, %20** %165, align 8
  %167 = getelementptr inbounds %20, %20* %166, i32 0, i32 1
  %168 = load i8*, i8** %167, align 8
  br label %170

169:                                              ; preds = %157
  br label %170

170:                                              ; preds = %169, %161
  %171 = phi i8* [ %168, %161 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @355, i32 0, i32 0), %169 ]
  %172 = load %31*, %31** %6, align 8
  %173 = getelementptr inbounds %31, %31* %172, i32 0, i32 7
  %174 = load %31**, %31*** %173, align 8
  %175 = load i32, i32* %12, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %31*, %31** %174, i64 %176
  %178 = load %31*, %31** %177, align 8
  %179 = getelementptr inbounds %31, %31* %178, i32 0, i32 4
  %180 = load i8*, i8** %179, align 8
  %181 = call i32 (%1*, i8*, ...) @fprintf(%1* %158, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @1257, i32 0, i32 0), i8* %171, i8* %180)
  %182 = load i64*, i64** %8, align 8
  %183 = load i32, i32* %12, align 4
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds i64, i64* %182, i64 %184
  store i64 0, i64* %185, align 8
  br label %194

186:                                              ; preds = %152
  %187 = load %31*, %31** %11, align 8
  %188 = getelementptr inbounds %31, %31* %187, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = load i64*, i64** %8, align 8
  %191 = load i32, i32* %12, align 4
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds i64, i64* %190, i64 %192
  store i64 %189, i64* %193, align 8
  br label %194

194:                                              ; preds = %186, %170
  br label %195

195:                                              ; preds = %194
  %196 = load %31*, %31** %11, align 8
  %197 = bitcast %31* %196 to i8*
  call void @freeReplyObject(i8* %197)
  br label %198

198:                                              ; preds = %195, %124
  %199 = load i32, i32* %12, align 4
  %200 = add i32 %199, 1
  store i32 %200, i32* %12, align 4
  br label %98

201:                                              ; preds = %98
  %202 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #10
  %203 = bitcast %31** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203) #10
  ret void
}

declare dso_local i32 @redisAppendCommand(%10*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal void @1508(%31* %0, i64* %1) #0 {
  %3 = alloca %31*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca %31*, align 8
  %6 = alloca i32, align 4
  store %31* %0, %31** %3, align 8
  store i64* %1, i64** %4, align 8
  %7 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #10
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #10
  store i32 0, i32* %6, align 4
  br label %9

9:                                                ; preds = %28, %2
  %10 = load i32, i32* %6, align 4
  %11 = zext i32 %10 to i64
  %12 = load %31*, %31** %3, align 8
  %13 = getelementptr inbounds %31, %31* %12, i32 0, i32 6
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %11, %14
  br i1 %15, label %16, label %31

16:                                               ; preds = %9
  %17 = load %10*, %10** @736, align 8
  %18 = load %31*, %31** %3, align 8
  %19 = getelementptr inbounds %31, %31* %18, i32 0, i32 7
  %20 = load %31**, %31*** %19, align 8
  %21 = load i32, i32* %6, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %31*, %31** %20, i64 %22
  %24 = load %31*, %31** %23, align 8
  %25 = getelementptr inbounds %31, %31* %24, i32 0, i32 4
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 (%10*, i8*, ...) @redisAppendCommand(%10* %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1261, i32 0, i32 0), i8* %26)
  br label %28

28:                                               ; preds = %16
  %29 = load i32, i32* %6, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %6, align 4
  br label %9

31:                                               ; preds = %9
  store i32 0, i32* %6, align 4
  br label %32

32:                                               ; preds = %107, %31
  %33 = load i32, i32* %6, align 4
  %34 = zext i32 %33 to i64
  %35 = load %31*, %31** %3, align 8
  %36 = getelementptr inbounds %31, %31* %35, i32 0, i32 6
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %34, %37
  br i1 %38, label %39, label %110

39:                                               ; preds = %32
  %40 = load %10*, %10** @736, align 8
  %41 = bitcast %31** %5 to i8**
  %42 = call i32 @redisGetReply(%10* %40, i8** %41)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %62

44:                                               ; preds = %39
  %45 = load %1*, %1** @stderr, align 8
  %46 = load %31*, %31** %3, align 8
  %47 = getelementptr inbounds %31, %31* %46, i32 0, i32 7
  %48 = load %31**, %31*** %47, align 8
  %49 = load i32, i32* %6, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %31*, %31** %48, i64 %50
  %52 = load %31*, %31** %51, align 8
  %53 = getelementptr inbounds %31, %31* %52, i32 0, i32 4
  %54 = load i8*, i8** %53, align 8
  %55 = load %10*, %10** @736, align 8
  %56 = getelementptr inbounds %10, %10* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = load %10*, %10** @736, align 8
  %59 = getelementptr inbounds %10, %10* %58, i32 0, i32 2
  %60 = getelementptr inbounds [128 x i8], [128 x i8]* %59, i32 0, i32 0
  %61 = call i32 (%1*, i8*, ...) @fprintf(%1* %45, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @1262, i32 0, i32 0), i8* %54, i32 %57, i8* %60)
  call void @exit(i32 1) #14
  unreachable

62:                                               ; preds = %39
  %63 = load %31*, %31** %5, align 8
  %64 = getelementptr inbounds %31, %31* %63, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp ne i32 %65, 3
  br i1 %66, label %67, label %95

67:                                               ; preds = %62
  %68 = load %31*, %31** %5, align 8
  %69 = getelementptr inbounds %31, %31* %68, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 6
  br i1 %71, label %72, label %78

72:                                               ; preds = %67
  %73 = load %1*, %1** @stderr, align 8
  %74 = load %31*, %31** %5, align 8
  %75 = getelementptr inbounds %31, %31* %74, i32 0, i32 4
  %76 = load i8*, i8** %75, align 8
  %77 = call i32 (%1*, i8*, ...) @fprintf(%1* %73, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1039, i32 0, i32 0), i8* %76)
  call void @exit(i32 1) #14
  unreachable

78:                                               ; preds = %67
  %79 = load %1*, %1** @stderr, align 8
  %80 = load %31*, %31** %3, align 8
  %81 = getelementptr inbounds %31, %31* %80, i32 0, i32 7
  %82 = load %31**, %31*** %81, align 8
  %83 = load i32, i32* %6, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %31*, %31** %82, i64 %84
  %86 = load %31*, %31** %85, align 8
  %87 = getelementptr inbounds %31, %31* %86, i32 0, i32 4
  %88 = load i8*, i8** %87, align 8
  %89 = call i32 (%1*, i8*, ...) @fprintf(%1* %79, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @1263, i32 0, i32 0), i8* %88)
  %90 = load i64*, i64** %4, align 8
  %91 = load i32, i32* %6, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i64, i64* %90, i64 %92
  store i64 0, i64* %93, align 8
  br label %94

94:                                               ; preds = %78
  br label %103

95:                                               ; preds = %62
  %96 = load %31*, %31** %5, align 8
  %97 = getelementptr inbounds %31, %31* %96, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = load i64*, i64** %4, align 8
  %100 = load i32, i32* %6, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i64, i64* %99, i64 %101
  store i64 %98, i64* %102, align 8
  br label %103

103:                                              ; preds = %95, %94
  br label %104

104:                                              ; preds = %103
  %105 = load %31*, %31** %5, align 8
  %106 = bitcast %31* %105 to i8*
  call void @freeReplyObject(i8* %106)
  br label %107

107:                                              ; preds = %104
  %108 = load i32, i32* %6, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %6, align 4
  br label %32

110:                                              ; preds = %32
  %111 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %111) #10
  %112 = bitcast %31** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #10
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @getpid() #4

; Function Attrs: nounwind uwtable
define internal void @1509(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  store volatile i32 1, i32* @1292, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1510() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %27, align 8
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #10
  store i32 256, i32* %1, align 4
  %8 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #10
  store i32 15, i32* %2, align 4
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #10
  %10 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #10
  store i32 0, i32* %5, align 4
  %12 = bitcast %27* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %12) #10
  %13 = load i32, i32* %1, align 4
  %14 = load i32, i32* %2, align 4
  %15 = add nsw i32 %13, %14
  store i32 %15, i32* %4, align 4
  store i32 %15, i32* @1312, align 4
  %16 = load i32, i32* %4, align 4
  %17 = sext i32 %16 to i64
  %18 = mul i64 32, %17
  %19 = call i8* @zmalloc(i64 %18)
  %20 = bitcast i8* %19 to %27*
  store %27* %20, %27** @1313, align 8
  store i32 0, i32* %3, align 4
  br label %21

21:                                               ; preds = %53, %0
  %22 = load i32, i32* %3, align 4
  %23 = load i32, i32* %2, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %56

25:                                               ; preds = %21
  %26 = getelementptr inbounds %27, %27* %6, i32 0, i32 1
  store i32 1, i32* %26, align 4
  %27 = call i8* @zmalloc(i64 8)
  %28 = bitcast i8* %27 to i8**
  %29 = getelementptr inbounds %27, %27* %6, i32 0, i32 2
  store i8** %28, i8*** %29, align 8
  %30 = call i8* @sdsempty()
  %31 = load i32, i32* %3, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [15 x i8*], [15 x i8*]* @1315, i64 0, i64 %32
  %34 = load i8*, i8** %33, align 8
  %35 = call i8* (i8*, i8*, ...) @sdscatprintf(i8* %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1314, i32 0, i32 0), i8* %34)
  %36 = getelementptr inbounds %27, %27* %6, i32 0, i32 2
  %37 = load i8**, i8*** %36, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 0
  store i8* %35, i8** %38, align 8
  %39 = getelementptr inbounds %27, %27* %6, i32 0, i32 2
  %40 = load i8**, i8*** %39, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %27, %27* %6, i32 0, i32 3
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds %27, %27* %6, i32 0, i32 0
  store i32 2, i32* %44, align 8
  %45 = getelementptr inbounds %27, %27* %6, i32 0, i32 4
  store %0* null, %0** %45, align 8
  %46 = load %27*, %27** @1313, align 8
  %47 = load i32, i32* %5, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %5, align 4
  %49 = sext i32 %47 to i64
  %50 = getelementptr inbounds %27, %27* %46, i64 %49
  %51 = bitcast %27* %50 to i8*
  %52 = bitcast %27* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 32, i1 false)
  br label %53

53:                                               ; preds = %25
  %54 = load i32, i32* %3, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %3, align 4
  br label %21

56:                                               ; preds = %21
  store i32 0, i32* %3, align 4
  br label %57

57:                                               ; preds = %89, %56
  %58 = load i32, i32* %3, align 4
  %59 = load i32, i32* %1, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %92

61:                                               ; preds = %57
  %62 = load i32, i32* %3, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [256 x %0], [256 x %0]* @commandHelp, i64 0, i64 %63
  %65 = getelementptr inbounds %0, %0* %64, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %27, %27* %6, i32 0, i32 1
  %68 = call i8** @sdssplitargs(i8* %66, i32* %67)
  %69 = getelementptr inbounds %27, %27* %6, i32 0, i32 2
  store i8** %68, i8*** %69, align 8
  %70 = load i32, i32* %3, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [256 x %0], [256 x %0]* @commandHelp, i64 0, i64 %71
  %73 = getelementptr inbounds %0, %0* %72, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = call i8* @sdsnew(i8* %74)
  %76 = getelementptr inbounds %27, %27* %6, i32 0, i32 3
  store i8* %75, i8** %76, align 8
  %77 = getelementptr inbounds %27, %27* %6, i32 0, i32 0
  store i32 1, i32* %77, align 8
  %78 = load i32, i32* %3, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [256 x %0], [256 x %0]* @commandHelp, i64 0, i64 %79
  %81 = getelementptr inbounds %27, %27* %6, i32 0, i32 4
  store %0* %80, %0** %81, align 8
  %82 = load %27*, %27** @1313, align 8
  %83 = load i32, i32* %5, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %5, align 4
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds %27, %27* %82, i64 %85
  %87 = bitcast %27* %86 to i8*
  %88 = bitcast %27* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 32, i1 false)
  br label %89

89:                                               ; preds = %61
  %90 = load i32, i32* %3, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %3, align 4
  br label %57

92:                                               ; preds = %57
  %93 = bitcast %27* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %93) #10
  %94 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %94) #10
  %95 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %95) #10
  %96 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %96) #10
  %97 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %97) #10
  %98 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %98) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1511() #0 {
  %1 = alloca %31*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca %31*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %27*, align 8
  %8 = alloca %27*, align 8
  %9 = alloca %0*, align 8
  %10 = alloca i32, align 4
  %11 = call i32 @1388(i32 2)
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %14

13:                                               ; preds = %0
  br label %267

14:                                               ; preds = %0
  %15 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #10
  %16 = load %10*, %10** @736, align 8
  %17 = call i8* (%10*, i8*, ...) @redisCommand(%10* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @157, i32 0, i32 0))
  %18 = bitcast i8* %17 to %31*
  store %31* %18, %31** %1, align 8
  %19 = load %31*, %31** %1, align 8
  %20 = icmp eq %31* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %14
  %22 = load %31*, %31** %1, align 8
  %23 = getelementptr inbounds %31, %31* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 2
  br i1 %25, label %26, label %27

26:                                               ; preds = %21, %14
  store i32 1, i32* %2, align 4
  br label %264

27:                                               ; preds = %21
  %28 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #10
  store i64 0, i64* %3, align 8
  br label %29

29:                                               ; preds = %255, %27
  %30 = load i64, i64* %3, align 8
  %31 = load %31*, %31** %1, align 8
  %32 = getelementptr inbounds %31, %31* %31, i32 0, i32 6
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %30, %33
  br i1 %34, label %36, label %35

35:                                               ; preds = %29
  store i32 2, i32* %2, align 4
  br label %258

36:                                               ; preds = %29
  %37 = bitcast %31** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #10
  %38 = load %31*, %31** %1, align 8
  %39 = getelementptr inbounds %31, %31* %38, i32 0, i32 7
  %40 = load %31**, %31*** %39, align 8
  %41 = load i64, i64* %3, align 8
  %42 = getelementptr inbounds %31*, %31** %40, i64 %41
  %43 = load %31*, %31** %42, align 8
  store %31* %43, %31** %4, align 8
  %44 = load %31*, %31** %4, align 8
  %45 = getelementptr inbounds %31, %31* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp ne i32 %46, 2
  br i1 %47, label %80, label %48

48:                                               ; preds = %36
  %49 = load %31*, %31** %4, align 8
  %50 = getelementptr inbounds %31, %31* %49, i32 0, i32 6
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, 4
  br i1 %52, label %80, label %53

53:                                               ; preds = %48
  %54 = load %31*, %31** %4, align 8
  %55 = getelementptr inbounds %31, %31* %54, i32 0, i32 7
  %56 = load %31**, %31*** %55, align 8
  %57 = getelementptr inbounds %31*, %31** %56, i64 0
  %58 = load %31*, %31** %57, align 8
  %59 = getelementptr inbounds %31, %31* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp ne i32 %60, 1
  br i1 %61, label %80, label %62

62:                                               ; preds = %53
  %63 = load %31*, %31** %4, align 8
  %64 = getelementptr inbounds %31, %31* %63, i32 0, i32 7
  %65 = load %31**, %31*** %64, align 8
  %66 = getelementptr inbounds %31*, %31** %65, i64 1
  %67 = load %31*, %31** %66, align 8
  %68 = getelementptr inbounds %31, %31* %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp ne i32 %69, 3
  br i1 %70, label %80, label %71

71:                                               ; preds = %62
  %72 = load %31*, %31** %4, align 8
  %73 = getelementptr inbounds %31, %31* %72, i32 0, i32 7
  %74 = load %31**, %31*** %73, align 8
  %75 = getelementptr inbounds %31*, %31** %74, i64 3
  %76 = load %31*, %31** %75, align 8
  %77 = getelementptr inbounds %31, %31* %76, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = icmp ne i32 %78, 3
  br i1 %79, label %80, label %81

80:                                               ; preds = %71, %62, %53, %48, %36
  store i32 1, i32* %2, align 4
  br label %251

81:                                               ; preds = %71
  %82 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82) #10
  %83 = load %31*, %31** %4, align 8
  %84 = getelementptr inbounds %31, %31* %83, i32 0, i32 7
  %85 = load %31**, %31*** %84, align 8
  %86 = getelementptr inbounds %31*, %31** %85, i64 0
  %87 = load %31*, %31** %86, align 8
  %88 = getelementptr inbounds %31, %31* %87, i32 0, i32 4
  %89 = load i8*, i8** %88, align 8
  store i8* %89, i8** %5, align 8
  %90 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %90) #10
  store i32 0, i32* %6, align 4
  br label %91

91:                                               ; preds = %115, %81
  %92 = load i32, i32* %6, align 4
  %93 = load i32, i32* @1312, align 4
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %95, label %118

95:                                               ; preds = %91
  %96 = bitcast %27** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %96) #10
  %97 = load %27*, %27** @1313, align 8
  %98 = load i32, i32* %6, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %27, %27* %97, i64 %99
  store %27* %100, %27** %7, align 8
  %101 = load %27*, %27** %7, align 8
  %102 = getelementptr inbounds %27, %27* %101, i32 0, i32 2
  %103 = load i8**, i8*** %102, align 8
  %104 = getelementptr inbounds i8*, i8** %103, i64 0
  %105 = load i8*, i8** %104, align 8
  %106 = load i8*, i8** %5, align 8
  %107 = call i32 @strcasecmp(i8* %105, i8* %106) #12
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %95
  store i32 5, i32* %2, align 4
  br label %111

110:                                              ; preds = %95
  store i32 0, i32* %2, align 4
  br label %111

111:                                              ; preds = %110, %109
  %112 = bitcast %27** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #10
  %113 = load i32, i32* %2, align 4
  switch i32 %113, label %268 [
    i32 0, label %114
    i32 5, label %118
  ]

114:                                              ; preds = %111
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %6, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %6, align 4
  br label %91

118:                                              ; preds = %111, %91
  %119 = load i32, i32* %6, align 4
  %120 = load i32, i32* @1312, align 4
  %121 = icmp ne i32 %119, %120
  br i1 %121, label %122, label %123

122:                                              ; preds = %118
  store i32 4, i32* %2, align 4
  br label %248

123:                                              ; preds = %118
  %124 = load i32, i32* @1312, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* @1312, align 4
  %126 = load %27*, %27** @1313, align 8
  %127 = bitcast %27* %126 to i8*
  %128 = load i32, i32* @1312, align 4
  %129 = sext i32 %128 to i64
  %130 = mul i64 32, %129
  %131 = call i8* @zrealloc(i8* %127, i64 %130)
  %132 = bitcast i8* %131 to %27*
  store %27* %132, %27** @1313, align 8
  %133 = bitcast %27** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %133) #10
  %134 = load %27*, %27** @1313, align 8
  %135 = load i32, i32* @1312, align 4
  %136 = sub nsw i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds %27, %27* %134, i64 %137
  store %27* %138, %27** %8, align 8
  %139 = load %27*, %27** %8, align 8
  %140 = getelementptr inbounds %27, %27* %139, i32 0, i32 1
  store i32 1, i32* %140, align 4
  %141 = call i8* @zmalloc(i64 8)
  %142 = bitcast i8* %141 to i8**
  %143 = load %27*, %27** %8, align 8
  %144 = getelementptr inbounds %27, %27* %143, i32 0, i32 2
  store i8** %142, i8*** %144, align 8
  %145 = load i8*, i8** %5, align 8
  %146 = call i8* @sdsnew(i8* %145)
  %147 = load %27*, %27** %8, align 8
  %148 = getelementptr inbounds %27, %27* %147, i32 0, i32 2
  %149 = load i8**, i8*** %148, align 8
  %150 = getelementptr inbounds i8*, i8** %149, i64 0
  store i8* %146, i8** %150, align 8
  %151 = load %27*, %27** %8, align 8
  %152 = getelementptr inbounds %27, %27* %151, i32 0, i32 2
  %153 = load i8**, i8*** %152, align 8
  %154 = getelementptr inbounds i8*, i8** %153, i64 0
  %155 = load i8*, i8** %154, align 8
  %156 = load %27*, %27** %8, align 8
  %157 = getelementptr inbounds %27, %27* %156, i32 0, i32 3
  store i8* %155, i8** %157, align 8
  %158 = load %27*, %27** %8, align 8
  %159 = getelementptr inbounds %27, %27* %158, i32 0, i32 0
  store i32 1, i32* %159, align 8
  %160 = load %27*, %27** %8, align 8
  %161 = getelementptr inbounds %27, %27* %160, i32 0, i32 2
  %162 = load i8**, i8*** %161, align 8
  %163 = getelementptr inbounds i8*, i8** %162, i64 0
  %164 = load i8*, i8** %163, align 8
  call void @sdstoupper(i8* %164)
  %165 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %165) #10
  %166 = call i8* @zmalloc(i64 40)
  %167 = bitcast i8* %166 to %0*
  store %0* %167, %0** %9, align 8
  %168 = load %27*, %27** %8, align 8
  %169 = getelementptr inbounds %27, %27* %168, i32 0, i32 2
  %170 = load i8**, i8*** %169, align 8
  %171 = getelementptr inbounds i8*, i8** %170, i64 0
  %172 = load i8*, i8** %171, align 8
  %173 = load %0*, %0** %9, align 8
  %174 = getelementptr inbounds %0, %0* %173, i32 0, i32 0
  store i8* %172, i8** %174, align 8
  %175 = call i8* @sdsempty()
  %176 = load %0*, %0** %9, align 8
  %177 = getelementptr inbounds %0, %0* %176, i32 0, i32 1
  store i8* %175, i8** %177, align 8
  %178 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %178) #10
  %179 = load %31*, %31** %4, align 8
  %180 = getelementptr inbounds %31, %31* %179, i32 0, i32 7
  %181 = load %31**, %31*** %180, align 8
  %182 = getelementptr inbounds %31*, %31** %181, i64 1
  %183 = load %31*, %31** %182, align 8
  %184 = getelementptr inbounds %31, %31* %183, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = call i64 @llabs(i64 %185) #13
  %187 = trunc i64 %186 to i32
  store i32 %187, i32* %10, align 4
  %188 = load i32, i32* %10, align 4
  %189 = add nsw i32 %188, -1
  store i32 %189, i32* %10, align 4
  %190 = load %31*, %31** %4, align 8
  %191 = getelementptr inbounds %31, %31* %190, i32 0, i32 7
  %192 = load %31**, %31*** %191, align 8
  %193 = getelementptr inbounds %31*, %31** %192, i64 3
  %194 = load %31*, %31** %193, align 8
  %195 = getelementptr inbounds %31, %31* %194, i32 0, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = icmp eq i64 %196, 1
  br i1 %197, label %198, label %207

198:                                              ; preds = %123
  %199 = load %0*, %0** %9, align 8
  %200 = getelementptr inbounds %0, %0* %199, i32 0, i32 1
  %201 = load i8*, i8** %200, align 8
  %202 = call i8* @sdscat(i8* %201, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1326, i32 0, i32 0))
  %203 = load %0*, %0** %9, align 8
  %204 = getelementptr inbounds %0, %0* %203, i32 0, i32 1
  store i8* %202, i8** %204, align 8
  %205 = load i32, i32* %10, align 4
  %206 = add nsw i32 %205, -1
  store i32 %206, i32* %10, align 4
  br label %207

207:                                              ; preds = %198, %123
  br label %208

208:                                              ; preds = %212, %207
  %209 = load i32, i32* %10, align 4
  %210 = add nsw i32 %209, -1
  store i32 %210, i32* %10, align 4
  %211 = icmp sgt i32 %209, 0
  br i1 %211, label %212, label %219

212:                                              ; preds = %208
  %213 = load %0*, %0** %9, align 8
  %214 = getelementptr inbounds %0, %0* %213, i32 0, i32 1
  %215 = load i8*, i8** %214, align 8
  %216 = call i8* @sdscat(i8* %215, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1327, i32 0, i32 0))
  %217 = load %0*, %0** %9, align 8
  %218 = getelementptr inbounds %0, %0* %217, i32 0, i32 1
  store i8* %216, i8** %218, align 8
  br label %208

219:                                              ; preds = %208
  %220 = load %31*, %31** %4, align 8
  %221 = getelementptr inbounds %31, %31* %220, i32 0, i32 7
  %222 = load %31**, %31*** %221, align 8
  %223 = getelementptr inbounds %31*, %31** %222, i64 1
  %224 = load %31*, %31** %223, align 8
  %225 = getelementptr inbounds %31, %31* %224, i32 0, i32 1
  %226 = load i64, i64* %225, align 8
  %227 = icmp slt i64 %226, 0
  br i1 %227, label %228, label %235

228:                                              ; preds = %219
  %229 = load %0*, %0** %9, align 8
  %230 = getelementptr inbounds %0, %0* %229, i32 0, i32 1
  %231 = load i8*, i8** %230, align 8
  %232 = call i8* @sdscat(i8* %231, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @1328, i32 0, i32 0))
  %233 = load %0*, %0** %9, align 8
  %234 = getelementptr inbounds %0, %0* %233, i32 0, i32 1
  store i8* %232, i8** %234, align 8
  br label %235

235:                                              ; preds = %228, %219
  %236 = load %0*, %0** %9, align 8
  %237 = getelementptr inbounds %0, %0* %236, i32 0, i32 2
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1329, i32 0, i32 0), i8** %237, align 8
  %238 = load %0*, %0** %9, align 8
  %239 = getelementptr inbounds %0, %0* %238, i32 0, i32 3
  store i32 0, i32* %239, align 8
  %240 = load %0*, %0** %9, align 8
  %241 = getelementptr inbounds %0, %0* %240, i32 0, i32 4
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1330, i32 0, i32 0), i8** %241, align 8
  %242 = load %0*, %0** %9, align 8
  %243 = load %27*, %27** %8, align 8
  %244 = getelementptr inbounds %27, %27* %243, i32 0, i32 4
  store %0* %242, %0** %244, align 8
  %245 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %245) #10
  %246 = bitcast %0** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %246) #10
  %247 = bitcast %27** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #10
  store i32 0, i32* %2, align 4
  br label %248

248:                                              ; preds = %235, %122
  %249 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %249) #10
  %250 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %250) #10
  br label %251

251:                                              ; preds = %248, %80
  %252 = bitcast %31** %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %252) #10
  %253 = load i32, i32* %2, align 4
  switch i32 %253, label %258 [
    i32 0, label %254
    i32 4, label %255
  ]

254:                                              ; preds = %251
  br label %255

255:                                              ; preds = %254, %251
  %256 = load i64, i64* %3, align 8
  %257 = add i64 %256, 1
  store i64 %257, i64* %3, align 8
  br label %29

258:                                              ; preds = %251, %35
  %259 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #10
  %260 = load i32, i32* %2, align 4
  switch i32 %260, label %264 [
    i32 2, label %261
  ]

261:                                              ; preds = %258
  %262 = load %31*, %31** %1, align 8
  %263 = bitcast %31* %262 to i8*
  call void @freeReplyObject(i8* %263)
  store i32 0, i32* %2, align 4
  br label %264

264:                                              ; preds = %261, %258, %26
  %265 = bitcast %31** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %265) #10
  %266 = load i32, i32* %2, align 4
  switch i32 %266, label %268 [
    i32 0, label %267
    i32 1, label %267
  ]

267:                                              ; preds = %13, %264, %264
  ret void

268:                                              ; preds = %264, %111
  unreachable
}

declare dso_local void @linenoiseSetMultiLine(i32) #2

declare dso_local void @linenoiseSetCompletionCallback(void (i8*, %41*)*) #2

; Function Attrs: nounwind uwtable
define internal void @1512(i8* %0, %41* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %41*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store %41* %1, %41** %4, align 8
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #10
  store i64 0, i64* %5, align 8
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #10
  %12 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  %13 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #10
  %15 = load i8*, i8** %3, align 8
  %16 = call i32 @strncasecmp(i8* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1331, i32 0, i32 0), i64 5) #12
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %37

18:                                               ; preds = %2
  store i64 5, i64* %5, align 8
  br label %19

19:                                               ; preds = %33, %18
  %20 = call i16** @__ctype_b_loc() #13
  %21 = load i16*, i16** %20, align 8
  %22 = load i8*, i8** %3, align 8
  %23 = load i64, i64* %5, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i16, i16* %21, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = and i32 %30, 8192
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %19
  %34 = load i64, i64* %5, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %5, align 8
  br label %19

36:                                               ; preds = %19
  store i32 3, i32* %6, align 4
  br label %38

37:                                               ; preds = %2
  store i32 1, i32* %6, align 4
  br label %38

38:                                               ; preds = %37, %36
  store i32 0, i32* %7, align 4
  br label %39

39:                                               ; preds = %87, %38
  %40 = load i32, i32* %7, align 4
  %41 = load i32, i32* @1312, align 4
  %42 = icmp slt i32 %40, %41
  br i1 %42, label %43, label %90

43:                                               ; preds = %39
  %44 = load %27*, %27** @1313, align 8
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %27, %27* %44, i64 %46
  %48 = getelementptr inbounds %27, %27* %47, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = load i32, i32* %6, align 4
  %51 = and i32 %49, %50
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %43
  br label %87

54:                                               ; preds = %43
  %55 = load i8*, i8** %3, align 8
  %56 = load i64, i64* %5, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = call i64 @strlen(i8* %57) #12
  store i64 %58, i64* %8, align 8
  %59 = load i8*, i8** %3, align 8
  %60 = load i64, i64* %5, align 8
  %61 = getelementptr inbounds i8, i8* %59, i64 %60
  %62 = load %27*, %27** @1313, align 8
  %63 = load i32, i32* %7, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %27, %27* %62, i64 %64
  %66 = getelementptr inbounds %27, %27* %65, i32 0, i32 3
  %67 = load i8*, i8** %66, align 8
  %68 = load i64, i64* %8, align 8
  %69 = call i32 @strncasecmp(i8* %61, i8* %67, i64 %68) #12
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %86

71:                                               ; preds = %54
  %72 = load i8*, i8** %3, align 8
  %73 = load i64, i64* %5, align 8
  %74 = call i8* @sdsnewlen(i8* %72, i64 %73)
  store i8* %74, i8** %9, align 8
  %75 = load i8*, i8** %9, align 8
  %76 = load %27*, %27** @1313, align 8
  %77 = load i32, i32* %7, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %27, %27* %76, i64 %78
  %80 = getelementptr inbounds %27, %27* %79, i32 0, i32 3
  %81 = load i8*, i8** %80, align 8
  %82 = call i8* @sdscat(i8* %75, i8* %81)
  store i8* %82, i8** %9, align 8
  %83 = load %41*, %41** %4, align 8
  %84 = load i8*, i8** %9, align 8
  call void @linenoiseAddCompletion(%41* %83, i8* %84)
  %85 = load i8*, i8** %9, align 8
  call void @sdsfree(i8* %85)
  br label %86

86:                                               ; preds = %71, %54
  br label %87

87:                                               ; preds = %86, %53
  %88 = load i32, i32* %7, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %7, align 4
  br label %39

90:                                               ; preds = %39
  %91 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #10
  %92 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #10
  %93 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %93) #10
  %94 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %94) #10
  %95 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #10
  ret void
}

declare dso_local void @linenoiseSetHintsCallback(i8* (i8*, i32*, i32*)*) #2

; Function Attrs: nounwind uwtable
define internal i8* @1513(i8* %0, i32* %1, i32* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8**, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %17 = load i32, i32* getelementptr inbounds (%3, %3* @688, i32 0, i32 0), align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  br label %168

20:                                               ; preds = %3
  %21 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #10
  %22 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #10
  %23 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #10
  %24 = load i8*, i8** %5, align 8
  %25 = call i64 @strlen(i8* %24) #12
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %10, align 4
  %27 = bitcast i8*** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #10
  %28 = load i8*, i8** %5, align 8
  %29 = call i8** @sdssplitargs(i8* %28, i32* %9)
  store i8** %29, i8*** %11, align 8
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #10
  %31 = load i32, i32* %10, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %20
  %34 = call i16** @__ctype_b_loc() #13
  %35 = load i16*, i16** %34, align 8
  %36 = load i8*, i8** %5, align 8
  %37 = load i32, i32* %10, align 4
  %38 = sub nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %35, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 8192
  %48 = icmp ne i32 %47, 0
  br label %49

49:                                               ; preds = %33, %20
  %50 = phi i1 [ false, %20 ], [ %48, %33 ]
  %51 = zext i1 %50 to i32
  store i32 %51, i32* %12, align 4
  %52 = load i32, i32* %9, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = load i8**, i8*** %11, align 8
  %56 = load i32, i32* %9, align 4
  call void @sdsfreesplitres(i8** %55, i32 %56)
  store i8* null, i8** %4, align 8
  store i32 1, i32* %13, align 4
  br label %162

57:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  br label %58

58:                                               ; preds = %156, %57
  %59 = load i32, i32* %8, align 4
  %60 = load i32, i32* @1312, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %159

62:                                               ; preds = %58
  %63 = load %27*, %27** @1313, align 8
  %64 = load i32, i32* %8, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %27, %27* %63, i64 %65
  %67 = getelementptr inbounds %27, %27* %66, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 1
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %62
  br label %156

72:                                               ; preds = %62
  %73 = load i8**, i8*** %11, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 0
  %75 = load i8*, i8** %74, align 8
  %76 = load %27*, %27** @1313, align 8
  %77 = load i32, i32* %8, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %27, %27* %76, i64 %78
  %80 = getelementptr inbounds %27, %27* %79, i32 0, i32 3
  %81 = load i8*, i8** %80, align 8
  %82 = call i32 @strcasecmp(i8* %75, i8* %81) #12
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %72
  %85 = load i8*, i8** %5, align 8
  %86 = load %27*, %27** @1313, align 8
  %87 = load i32, i32* %8, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %27, %27* %86, i64 %88
  %90 = getelementptr inbounds %27, %27* %89, i32 0, i32 3
  %91 = load i8*, i8** %90, align 8
  %92 = call i32 @strcasecmp(i8* %85, i8* %91) #12
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %155

94:                                               ; preds = %84, %72
  %95 = load i32*, i32** %6, align 8
  store i32 90, i32* %95, align 4
  %96 = load i32*, i32** %7, align 8
  store i32 0, i32* %96, align 4
  %97 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %97) #10
  %98 = load %27*, %27** @1313, align 8
  %99 = load i32, i32* %8, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %27, %27* %98, i64 %100
  %102 = getelementptr inbounds %27, %27* %101, i32 0, i32 4
  %103 = load %0*, %0** %102, align 8
  %104 = getelementptr inbounds %0, %0* %103, i32 0, i32 1
  %105 = load i8*, i8** %104, align 8
  %106 = call i8* @sdsnew(i8* %105)
  store i8* %106, i8** %14, align 8
  %107 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %107) #10
  %108 = load i32, i32* %9, align 4
  %109 = sub nsw i32 %108, 1
  store i32 %109, i32* %15, align 4
  br label %110

110:                                              ; preds = %135, %94
  %111 = load i32, i32* %15, align 4
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %117

113:                                              ; preds = %110
  %114 = load i8*, i8** %14, align 8
  %115 = call i64 @1432(i8* %114)
  %116 = icmp ne i64 %115, 0
  br label %117

117:                                              ; preds = %113, %110
  %118 = phi i1 [ false, %110 ], [ %116, %113 ]
  br i1 %118, label %119, label %137

119:                                              ; preds = %117
  %120 = load i8*, i8** %14, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 0
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %123, 91
  br i1 %124, label %125, label %126

125:                                              ; preds = %119
  br label %137

126:                                              ; preds = %119
  %127 = load i8*, i8** %14, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 0
  %129 = load i8, i8* %128, align 1
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %130, 32
  br i1 %131, label %132, label %135

132:                                              ; preds = %126
  %133 = load i32, i32* %15, align 4
  %134 = add nsw i32 %133, -1
  store i32 %134, i32* %15, align 4
  br label %135

135:                                              ; preds = %132, %126
  %136 = load i8*, i8** %14, align 8
  call void @sdsrange(i8* %136, i32 1, i32 -1)
  br label %110

137:                                              ; preds = %125, %117
  %138 = load i32, i32* %12, align 4
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %137
  %141 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %141) #10
  %142 = call i8* @sdsnewlen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @829, i32 0, i32 0), i64 1)
  store i8* %142, i8** %16, align 8
  %143 = load i8*, i8** %16, align 8
  %144 = load i8*, i8** %14, align 8
  %145 = call i8* @sdscatsds(i8* %143, i8* %144)
  store i8* %145, i8** %16, align 8
  %146 = load i8*, i8** %14, align 8
  call void @sdsfree(i8* %146)
  %147 = load i8*, i8** %16, align 8
  store i8* %147, i8** %14, align 8
  %148 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %148) #10
  br label %149

149:                                              ; preds = %140, %137
  %150 = load i8**, i8*** %11, align 8
  %151 = load i32, i32* %9, align 4
  call void @sdsfreesplitres(i8** %150, i32 %151)
  %152 = load i8*, i8** %14, align 8
  store i8* %152, i8** %4, align 8
  store i32 1, i32* %13, align 4
  %153 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %153) #10
  %154 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %154) #10
  br label %162

155:                                              ; preds = %84
  br label %156

156:                                              ; preds = %155, %71
  %157 = load i32, i32* %8, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %8, align 4
  br label %58

159:                                              ; preds = %58
  %160 = load i8**, i8*** %11, align 8
  %161 = load i32, i32* %9, align 4
  call void @sdsfreesplitres(i8** %160, i32 %161)
  store i8* null, i8** %4, align 8
  store i32 1, i32* %13, align 4
  br label %162

162:                                              ; preds = %159, %149, %54
  %163 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %163) #10
  %164 = bitcast i8*** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %164) #10
  %165 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %165) #10
  %166 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %166) #10
  %167 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %167) #10
  br label %168

168:                                              ; preds = %162, %19
  %169 = load i8*, i8** %4, align 8
  ret i8* %169
}

declare dso_local void @linenoiseSetFreeHintsCallback(void (i8*)*) #2

; Function Attrs: nounwind uwtable
define internal void @1514(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  call void @sdsfree(i8* %3)
  ret void
}

declare dso_local i32 @linenoiseHistoryLoad(i8*) #2

; Function Attrs: nounwind uwtable
define internal i8** @1515(i8* %0, i32* %1) #0 {
  %3 = alloca i8**, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32* %1, i32** %5, align 8
  %9 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %60

11:                                               ; preds = %2
  %12 = load i8*, i8** %4, align 8
  %13 = call i8* @strstr(i8* %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1332, i32 0, i32 0)) #12
  %14 = load i8*, i8** %4, align 8
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = load i8*, i8** %4, align 8
  %18 = call i8* @strstr(i8* %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1333, i32 0, i32 0)) #12
  %19 = load i8*, i8** %4, align 8
  %20 = icmp eq i8* %18, %19
  br i1 %20, label %21, label %60

21:                                               ; preds = %16, %11
  %22 = bitcast i8*** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #10
  %23 = call i8* @sds_malloc(i64 16)
  %24 = bitcast i8* %23 to i8**
  store i8** %24, i8*** %6, align 8
  %25 = load i32*, i32** %5, align 8
  store i32 2, i32* %25, align 4
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #10
  %27 = load i8*, i8** %4, align 8
  %28 = call i64 @strlen(i8* %27) #12
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %7, align 4
  %30 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #10
  %31 = load i8*, i8** %4, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 32
  %36 = zext i1 %35 to i64
  %37 = select i1 %35, i32 2, i32 5
  store i32 %37, i32* %8, align 4
  %38 = load i8*, i8** %4, align 8
  %39 = load i32, i32* %8, align 4
  %40 = sub nsw i32 %39, 1
  %41 = sext i32 %40 to i64
  %42 = call i8* @sdsnewlen(i8* %38, i64 %41)
  %43 = load i8**, i8*** %6, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 0
  store i8* %42, i8** %44, align 8
  %45 = load i8*, i8** %4, align 8
  %46 = load i32, i32* %8, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %45, i64 %47
  %49 = load i32, i32* %7, align 4
  %50 = load i32, i32* %8, align 4
  %51 = sub nsw i32 %49, %50
  %52 = sext i32 %51 to i64
  %53 = call i8* @sdsnewlen(i8* %48, i64 %52)
  %54 = load i8**, i8*** %6, align 8
  %55 = getelementptr inbounds i8*, i8** %54, i64 1
  store i8* %53, i8** %55, align 8
  %56 = load i8**, i8*** %6, align 8
  store i8** %56, i8*** %3, align 8
  %57 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %57) #10
  %58 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %58) #10
  %59 = bitcast i8*** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #10
  br label %64

60:                                               ; preds = %16, %2
  %61 = load i8*, i8** %4, align 8
  %62 = load i32*, i32** %5, align 8
  %63 = call i8** @sdssplitargs(i8* %61, i32* %62)
  store i8** %63, i8*** %3, align 8
  br label %64

64:                                               ; preds = %60, %21
  %65 = load i8**, i8*** %3, align 8
  ret i8** %65
}

declare dso_local void @linenoiseFree(i8*) #2

declare dso_local i32 @linenoiseHistoryAdd(i8*) #2

declare dso_local i32 @linenoiseHistorySave(i8*) #2

declare dso_local void @linenoiseClearScreen() #2

; Function Attrs: nounwind uwtable
define internal i32 @1516(i32 %0, i8** %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i64 %2, i64* %7, align 8
  br label %8

8:                                                ; preds = %3, %32
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 22), align 4
  %9 = load i32, i32* %5, align 4
  %10 = load i8**, i8*** %6, align 8
  %11 = load i64, i64* %7, align 8
  %12 = call i32 @1517(i32 %9, i8** %10, i64 %11)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %8
  %15 = call i32 @1388(i32 1)
  %16 = load i32, i32* %5, align 4
  %17 = load i8**, i8*** %6, align 8
  %18 = load i64, i64* %7, align 8
  %19 = call i32 @1517(i32 %16, i8** %17, i64 %18)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %14
  call void @1499()
  store i32 -1, i32* %4, align 4
  br label %34

22:                                               ; preds = %14
  br label %23

23:                                               ; preds = %22, %8
  %24 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 21), align 8
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 22), align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = call i32 @1388(i32 1)
  br label %32

31:                                               ; preds = %26, %23
  br label %33

32:                                               ; preds = %29
  br label %8

33:                                               ; preds = %31
  store i32 0, i32* %4, align 4
  br label %34

34:                                               ; preds = %33, %21
  %35 = load i32, i32* %4, align 4
  ret i32 %35
}

declare dso_local void @sdstoupper(i8*) #2

; Function Attrs: nounwind readnone
declare dso_local i64 @llabs(i64) #6

declare dso_local void @linenoiseAddCompletion(%41*, i8*) #2

declare dso_local i8* @sdscatsds(i8*, i8*) #2

declare dso_local i8* @sds_malloc(i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @1517(i32 %0, i8** %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i64 %2, i64* %7, align 8
  %13 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #10
  %14 = load i8**, i8*** %6, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 0
  %16 = load i8*, i8** %15, align 8
  store i8* %16, i8** %8, align 8
  %17 = bitcast i64** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10
  %18 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #10
  %19 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #10
  %20 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %3
  %23 = load i8*, i8** %8, align 8
  %24 = call i32 @strcasecmp(i8* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @723, i32 0, i32 0)) #12
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = load i8*, i8** %8, align 8
  %28 = call i32 @strcasecmp(i8* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @759, i32 0, i32 0)) #12
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %26, %22
  %31 = load i32, i32* %5, align 4
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* %5, align 4
  %33 = load i8**, i8*** %6, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i32 1
  store i8** %34, i8*** %6, align 8
  call void @1518(i32 %32, i8** %34)
  store i32 0, i32* %4, align 4
  store i32 1, i32* %12, align 4
  br label %357

35:                                               ; preds = %26, %3
  %36 = load %10*, %10** @736, align 8
  %37 = icmp eq %10* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %12, align 4
  br label %357

39:                                               ; preds = %35
  store i32 0, i32* %11, align 4
  %40 = load i8*, i8** %8, align 8
  %41 = call i32 @strcasecmp(i8* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @703, i32 0, i32 0)) #12
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %163

43:                                               ; preds = %39
  %44 = load i8*, i8** %8, align 8
  %45 = call i32 @strcasecmp(i8* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1334, i32 0, i32 0)) #12
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %163

47:                                               ; preds = %43
  %48 = load i32, i32* %5, align 4
  %49 = icmp sge i32 %48, 2
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = load i8*, i8** %8, align 8
  %52 = call i32 @strcasecmp(i8* %51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1335, i32 0, i32 0)) #12
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = load i8**, i8*** %6, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 1
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 @strcasecmp(i8* %57, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1336, i32 0, i32 0)) #12
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %163

60:                                               ; preds = %54, %50, %47
  %61 = load i32, i32* %5, align 4
  %62 = icmp sge i32 %61, 2
  br i1 %62, label %63, label %73

63:                                               ; preds = %60
  %64 = load i8*, i8** %8, align 8
  %65 = call i32 @strcasecmp(i8* %64, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1335, i32 0, i32 0)) #12
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = load i8**, i8*** %6, align 8
  %69 = getelementptr inbounds i8*, i8** %68, i64 1
  %70 = load i8*, i8** %69, align 8
  %71 = call i32 @strcasecmp(i8* %70, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1337, i32 0, i32 0)) #12
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %163

73:                                               ; preds = %67, %63, %60
  %74 = load i32, i32* %5, align 4
  %75 = icmp sge i32 %74, 2
  br i1 %75, label %76, label %92

76:                                               ; preds = %73
  %77 = load i8*, i8** %8, align 8
  %78 = call i32 @strcasecmp(i8* %77, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1338, i32 0, i32 0)) #12
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %92, label %80

80:                                               ; preds = %76
  %81 = load i8**, i8*** %6, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i64 1
  %83 = load i8*, i8** %82, align 8
  %84 = call i32 @strcasecmp(i8* %83, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1339, i32 0, i32 0)) #12
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %163

86:                                               ; preds = %80
  %87 = load i8**, i8*** %6, align 8
  %88 = getelementptr inbounds i8*, i8** %87, i64 1
  %89 = load i8*, i8** %88, align 8
  %90 = call i32 @strcasecmp(i8* %89, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1340, i32 0, i32 0)) #12
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %163

92:                                               ; preds = %86, %76, %73
  %93 = load i32, i32* %5, align 4
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %95, label %111

95:                                               ; preds = %92
  %96 = load i8*, i8** %8, align 8
  %97 = call i32 @strcasecmp(i8* %96, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1324, i32 0, i32 0)) #12
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %95
  %100 = load i8**, i8*** %6, align 8
  %101 = getelementptr inbounds i8*, i8** %100, i64 1
  %102 = load i8*, i8** %101, align 8
  %103 = call i32 @strcasecmp(i8* %102, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1341, i32 0, i32 0)) #12
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %163

105:                                              ; preds = %99
  %106 = load i8**, i8*** %6, align 8
  %107 = getelementptr inbounds i8*, i8** %106, i64 1
  %108 = load i8*, i8** %107, align 8
  %109 = call i32 @strcasecmp(i8* %108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @703, i32 0, i32 0)) #12
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %163

111:                                              ; preds = %105, %95, %92
  %112 = load i32, i32* %5, align 4
  %113 = icmp sge i32 %112, 2
  br i1 %113, label %114, label %124

114:                                              ; preds = %111
  %115 = load i8*, i8** %8, align 8
  %116 = call i32 @strcasecmp(i8* %115, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1342, i32 0, i32 0)) #12
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %114
  %119 = load i8**, i8*** %6, align 8
  %120 = getelementptr inbounds i8*, i8** %119, i64 1
  %121 = load i8*, i8** %120, align 8
  %122 = call i32 @strcasecmp(i8* %121, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @749, i32 0, i32 0)) #12
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %163

124:                                              ; preds = %118, %114, %111
  %125 = load i32, i32* %5, align 4
  %126 = icmp eq i32 %125, 3
  br i1 %126, label %127, label %137

127:                                              ; preds = %124
  %128 = load i8*, i8** %8, align 8
  %129 = call i32 @strcasecmp(i8* %128, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1343, i32 0, i32 0)) #12
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %137, label %131

131:                                              ; preds = %127
  %132 = load i8**, i8*** %6, align 8
  %133 = getelementptr inbounds i8*, i8** %132, i64 1
  %134 = load i8*, i8** %133, align 8
  %135 = call i32 @strcasecmp(i8* %134, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1344, i32 0, i32 0)) #12
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %137, label %163

137:                                              ; preds = %131, %127, %124
  %138 = load i32, i32* %5, align 4
  %139 = icmp eq i32 %138, 2
  br i1 %139, label %140, label %150

140:                                              ; preds = %137
  %141 = load i8*, i8** %8, align 8
  %142 = call i32 @strcasecmp(i8* %141, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1343, i32 0, i32 0)) #12
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %150, label %144

144:                                              ; preds = %140
  %145 = load i8**, i8*** %6, align 8
  %146 = getelementptr inbounds i8*, i8** %145, i64 1
  %147 = load i8*, i8** %146, align 8
  %148 = call i32 @strcasecmp(i8* %147, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1340, i32 0, i32 0)) #12
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %163

150:                                              ; preds = %144, %140, %137
  %151 = load i32, i32* %5, align 4
  %152 = icmp sge i32 %151, 2
  br i1 %152, label %153, label %164

153:                                              ; preds = %150
  %154 = load i8*, i8** %8, align 8
  %155 = call i32 @strcasecmp(i8* %154, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1345, i32 0, i32 0)) #12
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %164, label %157

157:                                              ; preds = %153
  %158 = load i8**, i8*** %6, align 8
  %159 = getelementptr inbounds i8*, i8** %158, i64 1
  %160 = load i8*, i8** %159, align 8
  %161 = call i32 @strcasecmp(i8* %160, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @703, i32 0, i32 0)) #12
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %164, label %163

163:                                              ; preds = %157, %144, %131, %118, %105, %99, %86, %80, %67, %54, %43, %39
  store i32 1, i32* %11, align 4
  br label %164

164:                                              ; preds = %163, %157, %153, %150
  %165 = load i8*, i8** %8, align 8
  %166 = call i32 @strcasecmp(i8* %165, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1346, i32 0, i32 0)) #12
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %169, label %168

168:                                              ; preds = %164
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 13), align 8
  br label %169

169:                                              ; preds = %168, %164
  %170 = load i8*, i8** %8, align 8
  %171 = call i32 @strcasecmp(i8* %170, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1347, i32 0, i32 0)) #12
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %174, label %173

173:                                              ; preds = %169
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 14), align 4
  br label %174

174:                                              ; preds = %173, %169
  %175 = load i8*, i8** %8, align 8
  %176 = call i32 @strcasecmp(i8* %175, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1348, i32 0, i32 0)) #12
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %174
  %179 = load i8*, i8** %8, align 8
  %180 = call i32 @strcasecmp(i8* %179, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1349, i32 0, i32 0)) #12
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %183, label %182

182:                                              ; preds = %178, %174
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 15), align 8
  br label %183

183:                                              ; preds = %182, %178
  %184 = load i8*, i8** %8, align 8
  %185 = call i32 @strcasecmp(i8* %184, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1350, i32 0, i32 0)) #12
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %183
  %188 = load i8*, i8** %8, align 8
  %189 = call i32 @strcasecmp(i8* %188, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1351, i32 0, i32 0)) #12
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %192, label %191

191:                                              ; preds = %187, %183
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 23), align 8
  br label %192

192:                                              ; preds = %191, %187
  %193 = load i32, i32* %5, align 4
  %194 = icmp eq i32 %193, 3
  br i1 %194, label %195, label %222

195:                                              ; preds = %192
  %196 = load i8**, i8*** %6, align 8
  %197 = getelementptr inbounds i8*, i8** %196, i64 0
  %198 = load i8*, i8** %197, align 8
  %199 = call i32 @strcasecmp(i8* %198, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @478, i32 0, i32 0)) #12
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %222, label %201

201:                                              ; preds = %195
  %202 = load i8**, i8*** %6, align 8
  %203 = getelementptr inbounds i8*, i8** %202, i64 1
  %204 = load i8*, i8** %203, align 8
  %205 = call i32 @strcasecmp(i8* %204, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1335, i32 0, i32 0)) #12
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %222, label %207

207:                                              ; preds = %201
  %208 = load i8**, i8*** %6, align 8
  %209 = getelementptr inbounds i8*, i8** %208, i64 2
  %210 = load i8*, i8** %209, align 8
  %211 = call i32 @strcasecmp(i8* %210, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @842, i32 0, i32 0)) #12
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %213, label %219

213:                                              ; preds = %207
  %214 = load i8**, i8*** %6, align 8
  %215 = getelementptr inbounds i8*, i8** %214, i64 2
  %216 = load i8*, i8** %215, align 8
  %217 = call i32 @strcasecmp(i8* %216, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1350, i32 0, i32 0)) #12
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %220, label %219

219:                                              ; preds = %213, %207
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 48), align 4
  br label %221

220:                                              ; preds = %213
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 48), align 4
  br label %221

221:                                              ; preds = %220, %219
  br label %222

222:                                              ; preds = %221, %201, %195, %192
  %223 = load i8*, i8** %8, align 8
  %224 = call i32 @strcasecmp(i8* %223, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1352, i32 0, i32 0)) #12
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %230, label %226

226:                                              ; preds = %222
  %227 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 48), align 4
  %228 = icmp ne i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 45), align 8
  store i32 1, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  br label %230

230:                                              ; preds = %229, %226, %222
  %231 = load i32, i32* %5, align 4
  %232 = sext i32 %231 to i64
  %233 = mul i64 %232, 8
  %234 = call i8* @zmalloc(i64 %233)
  %235 = bitcast i8* %234 to i64*
  store i64* %235, i64** %9, align 8
  store i32 0, i32* %10, align 4
  br label %236

236:                                              ; preds = %251, %230
  %237 = load i32, i32* %10, align 4
  %238 = load i32, i32* %5, align 4
  %239 = icmp slt i32 %237, %238
  br i1 %239, label %240, label %254

240:                                              ; preds = %236
  %241 = load i8**, i8*** %6, align 8
  %242 = load i32, i32* %10, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds i8*, i8** %241, i64 %243
  %245 = load i8*, i8** %244, align 8
  %246 = call i64 @1432(i8* %245)
  %247 = load i64*, i64** %9, align 8
  %248 = load i32, i32* %10, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i64, i64* %247, i64 %249
  store i64 %246, i64* %250, align 8
  br label %251

251:                                              ; preds = %240
  %252 = load i32, i32* %10, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %10, align 4
  br label %236

254:                                              ; preds = %236
  br label %255

255:                                              ; preds = %351, %254
  %256 = load i64, i64* %7, align 8
  %257 = icmp slt i64 %256, 0
  br i1 %257, label %262, label %258

258:                                              ; preds = %255
  %259 = load i64, i64* %7, align 8
  %260 = add nsw i64 %259, -1
  store i64 %260, i64* %7, align 8
  %261 = icmp sgt i64 %259, 0
  br label %262

262:                                              ; preds = %258, %255
  %263 = phi i1 [ true, %255 ], [ %261, %258 ]
  br i1 %263, label %264, label %354

264:                                              ; preds = %262
  %265 = load %10*, %10** @736, align 8
  %266 = load i32, i32* %5, align 4
  %267 = load i8**, i8*** %6, align 8
  %268 = load i64*, i64** %9, align 8
  %269 = call i32 @redisAppendCommandArgv(%10* %265, i32 %266, i8** %267, i64* %268)
  br label %270

270:                                              ; preds = %278, %264
  %271 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 14), align 4
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %273, label %281

273:                                              ; preds = %270
  %274 = load i32, i32* %11, align 4
  %275 = call i32 @1498(i32 %274)
  %276 = icmp ne i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %273
  call void @exit(i32 1) #14
  unreachable

278:                                              ; preds = %273
  %279 = load %1*, %1** @stdout, align 8
  %280 = call i32 @fflush(%1* %279)
  br label %270

281:                                              ; preds = %270
  %282 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 15), align 8
  %283 = icmp ne i32 %282, 0
  br i1 %283, label %284, label %297

284:                                              ; preds = %281
  %285 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 41), align 8
  %286 = icmp ne i32 %285, 1
  br i1 %286, label %287, label %289

287:                                              ; preds = %284
  %288 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @1353, i32 0, i32 0))
  br label %289

289:                                              ; preds = %287, %284
  br label %290

290:                                              ; preds = %296, %289
  br label %291

291:                                              ; preds = %290
  %292 = load i32, i32* %11, align 4
  %293 = call i32 @1498(i32 %292)
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %291
  call void @exit(i32 1) #14
  unreachable

296:                                              ; preds = %291
  br label %290

297:                                              ; preds = %281
  %298 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 23), align 8
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %300, label %304

300:                                              ; preds = %297
  %301 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @1354, i32 0, i32 0))
  call void @1391()
  store i32 0, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 23), align 8
  %302 = load i64*, i64** %9, align 8
  %303 = bitcast i64* %302 to i8*
  call void @zfree(i8* %303)
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %12, align 4
  br label %357

304:                                              ; preds = %297
  %305 = load i32, i32* %11, align 4
  %306 = call i32 @1498(i32 %305)
  %307 = icmp ne i32 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %304
  %309 = load i64*, i64** %9, align 8
  %310 = bitcast i64* %309 to i8*
  call void @zfree(i8* %310)
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %12, align 4
  br label %357

311:                                              ; preds = %304
  %312 = load i8*, i8** %8, align 8
  %313 = call i32 @strcasecmp(i8* %312, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1355, i32 0, i32 0)) #12
  %314 = icmp ne i32 %313, 0
  br i1 %314, label %326, label %315

315:                                              ; preds = %311
  %316 = load i32, i32* %5, align 4
  %317 = icmp eq i32 %316, 2
  br i1 %317, label %318, label %326

318:                                              ; preds = %315
  %319 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 49), align 8
  %320 = icmp ne i32 %319, 6
  br i1 %320, label %321, label %326

321:                                              ; preds = %318
  %322 = load i8**, i8*** %6, align 8
  %323 = getelementptr inbounds i8*, i8** %322, i64 1
  %324 = load i8*, i8** %323, align 8
  %325 = call i32 @atoi(i8* %324) #12
  store i32 %325, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 11), align 8
  call void @1482()
  br label %339

326:                                              ; preds = %318, %315, %311
  %327 = load i8*, i8** %8, align 8
  %328 = call i32 @strcasecmp(i8* %327, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1299, i32 0, i32 0)) #12
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %338, label %330

330:                                              ; preds = %326
  %331 = load i32, i32* %5, align 4
  %332 = icmp eq i32 %331, 2
  br i1 %332, label %336, label %333

333:                                              ; preds = %330
  %334 = load i32, i32* %5, align 4
  %335 = icmp eq i32 %334, 3
  br i1 %335, label %336, label %338

336:                                              ; preds = %333, %330
  %337 = call i32 @1493()
  br label %338

338:                                              ; preds = %336, %333, %326
  br label %339

339:                                              ; preds = %338, %321
  br label %340

340:                                              ; preds = %339
  %341 = load i32, i32* getelementptr inbounds (%21, %21* @765, i32 0, i32 22), align 4
  %342 = icmp ne i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  br label %354

344:                                              ; preds = %340
  %345 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %346 = icmp ne i64 %345, 0
  br i1 %346, label %347, label %351

347:                                              ; preds = %344
  %348 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 10), align 8
  %349 = trunc i64 %348 to i32
  %350 = call i32 @usleep(i32 %349)
  br label %351

351:                                              ; preds = %347, %344
  %352 = load %1*, %1** @stdout, align 8
  %353 = call i32 @fflush(%1* %352)
  br label %255

354:                                              ; preds = %343, %262
  %355 = load i64*, i64** %9, align 8
  %356 = bitcast i64* %355 to i8*
  call void @zfree(i8* %356)
  store i32 0, i32* %4, align 4
  store i32 1, i32* %12, align 4
  br label %357

357:                                              ; preds = %354, %308, %300, %38, %30
  %358 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %358) #10
  %359 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %359) #10
  %360 = bitcast i64** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %360) #10
  %361 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %361) #10
  %362 = load i32, i32* %4, align 4
  ret i32 %362
}

; Function Attrs: nounwind uwtable
define internal void @1518(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %27*, align 8
  %10 = alloca %0*, align 8
  %11 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #10
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #10
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #10
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #10
  store i32 -1, i32* %8, align 4
  %16 = bitcast %27** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #10
  %17 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #10
  %18 = load i32, i32* %3, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %2
  call void @1519()
  store i32 1, i32* %11, align 4
  br label %137

21:                                               ; preds = %2
  %22 = load i32, i32* %3, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %55

24:                                               ; preds = %21
  %25 = load i8**, i8*** %4, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 64
  br i1 %31, label %32, label %55

32:                                               ; preds = %24
  store i32 15, i32* %7, align 4
  store i32 0, i32* %5, align 4
  br label %33

33:                                               ; preds = %51, %32
  %34 = load i32, i32* %5, align 4
  %35 = load i32, i32* %7, align 4
  %36 = icmp slt i32 %34, %35
  br i1 %36, label %37, label %54

37:                                               ; preds = %33
  %38 = load i8**, i8*** %4, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 1
  %42 = load i32, i32* %5, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [15 x i8*], [15 x i8*]* @1315, i64 0, i64 %43
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 @strcasecmp(i8* %41, i8* %45) #12
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %37
  %49 = load i32, i32* %5, align 4
  store i32 %49, i32* %8, align 4
  br label %54

50:                                               ; preds = %37
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %5, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %5, align 4
  br label %33

54:                                               ; preds = %48, %33
  br label %55

55:                                               ; preds = %54, %24, %21
  br label %56

56:                                               ; preds = %55
  %57 = load i32, i32* %3, align 4
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  br label %62

60:                                               ; preds = %56
  call void @__assert_fail(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1356, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @814, i32 0, i32 0), i32 631, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @1357, i32 0, i32 0)) #14
  unreachable

61:                                               ; No predecessors!
  br label %62

62:                                               ; preds = %61, %59
  store i32 0, i32* %5, align 4
  br label %63

63:                                               ; preds = %132, %62
  %64 = load i32, i32* %5, align 4
  %65 = load i32, i32* @1312, align 4
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %67, label %135

67:                                               ; preds = %63
  %68 = load %27*, %27** @1313, align 8
  %69 = load i32, i32* %5, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %27, %27* %68, i64 %70
  store %27* %71, %27** %9, align 8
  %72 = load %27*, %27** %9, align 8
  %73 = getelementptr inbounds %27, %27* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = icmp ne i32 %74, 1
  br i1 %75, label %76, label %77

76:                                               ; preds = %67
  br label %132

77:                                               ; preds = %67
  %78 = load %27*, %27** %9, align 8
  %79 = getelementptr inbounds %27, %27* %78, i32 0, i32 4
  %80 = load %0*, %0** %79, align 8
  store %0* %80, %0** %10, align 8
  %81 = load i32, i32* %8, align 4
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %83, label %122

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = load %27*, %27** %9, align 8
  %86 = getelementptr inbounds %27, %27* %85, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %84, %87
  br i1 %88, label %89, label %121

89:                                               ; preds = %83
  store i32 0, i32* %6, align 4
  br label %90

90:                                               ; preds = %111, %89
  %91 = load i32, i32* %6, align 4
  %92 = load i32, i32* %3, align 4
  %93 = icmp slt i32 %91, %92
  br i1 %93, label %94, label %114

94:                                               ; preds = %90
  %95 = load i8**, i8*** %4, align 8
  %96 = load i32, i32* %6, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8*, i8** %95, i64 %97
  %99 = load i8*, i8** %98, align 8
  %100 = load %27*, %27** %9, align 8
  %101 = getelementptr inbounds %27, %27* %100, i32 0, i32 2
  %102 = load i8**, i8*** %101, align 8
  %103 = load i32, i32* %6, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8*, i8** %102, i64 %104
  %106 = load i8*, i8** %105, align 8
  %107 = call i32 @strcasecmp(i8* %99, i8* %106) #12
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %94
  br label %114

110:                                              ; preds = %94
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %6, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %6, align 4
  br label %90

114:                                              ; preds = %109, %90
  %115 = load i32, i32* %6, align 4
  %116 = load i32, i32* %3, align 4
  %117 = icmp eq i32 %115, %116
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = load %0*, %0** %10, align 8
  call void @1520(%0* %119, i32 1)
  br label %120

120:                                              ; preds = %118, %114
  br label %121

121:                                              ; preds = %120, %83
  br label %131

122:                                              ; preds = %77
  %123 = load i32, i32* %8, align 4
  %124 = load %0*, %0** %10, align 8
  %125 = getelementptr inbounds %0, %0* %124, i32 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %123, %126
  br i1 %127, label %128, label %130

128:                                              ; preds = %122
  %129 = load %0*, %0** %10, align 8
  call void @1520(%0* %129, i32 0)
  br label %130

130:                                              ; preds = %128, %122
  br label %131

131:                                              ; preds = %130, %121
  br label %132

132:                                              ; preds = %131, %76
  %133 = load i32, i32* %5, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %5, align 4
  br label %63

135:                                              ; preds = %63
  %136 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1358, i32 0, i32 0))
  store i32 0, i32* %11, align 4
  br label %137

137:                                              ; preds = %135, %20
  %138 = bitcast %0** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #10
  %139 = bitcast %27** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %139) #10
  %140 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %140) #10
  %141 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %141) #10
  %142 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %142) #10
  %143 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %143) #10
  %144 = load i32, i32* %11, align 4
  switch i32 %144, label %146 [
    i32 0, label %145
    i32 1, label %145
  ]

145:                                              ; preds = %137, %137
  ret void

146:                                              ; preds = %137
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @1519() #0 {
  %1 = alloca i8*, align 8
  %2 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #10
  %3 = call i8* @1487()
  store i8* %3, i8** %1, align 8
  %4 = load i8*, i8** %1, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([385 x i8], [385 x i8]* @1359, i32 0, i32 0), i8* %4)
  %6 = load i8*, i8** %1, align 8
  call void @sdsfree(i8* %6)
  %7 = bitcast i8** %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @1520(%0* %0, i32 %1) #0 {
  %3 = alloca %0*, align 8
  %4 = alloca i32, align 4
  store %0* %0, %0** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %0*, %0** %3, align 8
  %6 = getelementptr inbounds %0, %0* %5, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = load %0*, %0** %3, align 8
  %9 = getelementptr inbounds %0, %0* %8, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @1360, i32 0, i32 0), i8* %7, i8* %10)
  %12 = load %0*, %0** %3, align 8
  %13 = getelementptr inbounds %0, %0* %12, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @1361, i32 0, i32 0), i8* %14)
  %16 = load %0*, %0** %3, align 8
  %17 = getelementptr inbounds %0, %0* %16, i32 0, i32 4
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @1362, i32 0, i32 0), i8* %18)
  %20 = load i32, i32* %4, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %2
  %23 = load %0*, %0** %3, align 8
  %24 = getelementptr inbounds %0, %0* %23, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [15 x i8*], [15 x i8*]* @1315, i64 0, i64 %26
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @1363, i32 0, i32 0), i8* %28)
  br label %30

30:                                               ; preds = %22, %2
  ret void
}

declare dso_local i64 @fread(i8*, i64, i64, %1*) #2

; Function Attrs: nounwind uwtable
define internal i32 @1521(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = load i8**, i8*** %4, align 8
  %7 = load i64, i64* getelementptr inbounds (%21, %21* @765, i32 0, i32 9), align 8
  %8 = call i32 @1516(i32 %5, i8** %6, i64 %7)
  ret i32 %8
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #4

; Function Attrs: nounwind uwtable
define internal i8* @1522() #0 {
  %1 = alloca [1024 x i8], align 16
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast [1024 x i8]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* %5) #10
  %6 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #10
  %7 = call i8* @sdsempty()
  store i8* %7, i8** %2, align 8
  br label %8

8:                                                ; preds = %33, %0
  br label %9

9:                                                ; preds = %8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #10
  %11 = load %1*, %1** @stdin, align 8
  %12 = call i32 @fileno(%1* %11) #10
  %13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %1, i32 0, i32 0
  %14 = call i64 @read(i32 %12, i8* %13, i64 1024)
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %3, align 4
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %9
  store i32 3, i32* %4, align 4
  br label %30

19:                                               ; preds = %9
  %20 = load i32, i32* %3, align 4
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @perror(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @1370, i32 0, i32 0))
  call void @exit(i32 1) #14
  unreachable

23:                                               ; preds = %19
  br label %24

24:                                               ; preds = %23
  %25 = load i8*, i8** %2, align 8
  %26 = getelementptr inbounds [1024 x i8], [1024 x i8]* %1, i32 0, i32 0
  %27 = load i32, i32* %3, align 4
  %28 = sext i32 %27 to i64
  %29 = call i8* @sdscatlen(i8* %25, i8* %26, i64 %28)
  store i8* %29, i8** %2, align 8
  store i32 0, i32* %4, align 4
  br label %30

30:                                               ; preds = %24, %18
  %31 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %31) #10
  %32 = load i32, i32* %4, align 4
  switch i32 %32, label %38 [
    i32 0, label %33
    i32 3, label %34
  ]

33:                                               ; preds = %30
  br label %8

34:                                               ; preds = %30
  %35 = load i8*, i8** %2, align 8
  store i32 1, i32* %4, align 4
  %36 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #10
  %37 = bitcast [1024 x i8]* %1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* %37) #10
  ret i8* %35

38:                                               ; preds = %30
  unreachable
}

declare dso_local void @perror(i8*) #2

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nounwind willreturn writeonly }
attributes #10 = { nounwind }
attributes #11 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readonly }
attributes #13 = { nounwind readnone }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 2, !"Dwarf Version", i32 4}
!1 = !{i32 2, !"Debug Info Version", i32 3}
!2 = !{i32 1, !"wchar_size", i32 4}
!3 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
