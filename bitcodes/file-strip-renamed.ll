; ModuleID = 'file-strip-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/ext/standard/file.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { i32, i64, i64, i64, i8*, i8*, i8*, %1*, %10*, %10*, %10*, i32, %14, i8*, i64 }
%1 = type { %2*, %3, %7* }
%2 = type { void (%1*, i32, i32, i8*, i32, i64, i64, i8*)*, void (%2*)*, %3, i32, i64, i64 }
%3 = type { %4, %5, %6 }
%4 = type { i64 }
%5 = type { i32 }
%6 = type { i32 }
%7 = type { %8, i32, i32, i8* }
%8 = type { i32, %9 }
%9 = type { i32 }
%10 = type { %8, %11, i32, %12*, i32, i32, i32, i32, i64, void (%3*)* }
%11 = type { i32 }
%12 = type { %3, i64, %13* }
%13 = type { %8, i64, i64, [1 x i8] }
%14 = type { i8*, i8**, i32, i32, i8** }
%15 = type { i8*, i32 (%16*, %13*, i8*, i8*, i8*, i32)*, i8*, i8*, i8*, i8*, void (%16*, i32)*, i32, i32, i32 }
%16 = type { %13*, i32 (%16*, %13*, i8*, i8*, i8*, i32)*, i8*, i8*, i8*, %13*, %13*, void (%16*, i32)*, i32, i32, i32, i32 }
%17 = type { %10*, %10, %3, i8*, %13*, i8, i8*, [256 x i8], i64, [40 x i8], %18, %29, %18, %29, %30*, %3, i64, i64, i64, i64, i8*, i8*, %32, %32, [625 x i32], i32*, i32, i8, i64, i8*, %35*, i32, %47, %49, %51, %10, %51, %10, i8*, i64, %10*, i32 }
%18 = type { i64, %3, %3*, %3*, %19*, i8, i32 }
%19 = type { %8, i32, %35*, %20*, %10*, [1 x %3] }
%20 = type { i32, void (%19*)*, void (%19*)*, %19* (%3*)*, %3* (%3*, %3*, i32, i8**, %3*)*, void (%3*, %3*, %3*, i8**)*, %3* (%3*, %3*, i32, %3*)*, void (%3*, %3*, %3*)*, %3* (%3*, %3*, i32, i8**)*, %3* (%3*, %3*)*, void (%3*, %3*)*, i32 (%3*, %3*, i32, i8**)*, void (%3*, %3*, i8**)*, i32 (%3*, %3*, i32)*, void (%3*, %3*)*, %10* (%3*)*, %21* (%19**, %13*, %3*)*, i32 (%13*, %19*, %28*, %3*)*, %21* (%19*)*, %13* (%19*)*, i32 (%3*, %3*)*, i32 (%3*, %3*, i32)*, i32 (%3*, i64*)*, %10* (%3*, i32*)*, i32 (%3*, %35**, %21**, %19**)*, %10* (%3*, %3**, i32*)*, i32 (i8, %3*, %3*, %3*)*, i32 (%3*, %3*, %3*)* }
%21 = type { %22 }
%22 = type { i8, [3 x i8], i32, %13*, %35*, %21*, i32, i32, %23*, i32*, i32, %24*, i32, i32, %13**, i32, i32, %26*, %27*, %10*, %13*, i32, i32, %13*, i32, i32, %3*, i32, i8**, [6 x i8*] }
%23 = type { %13*, i64, i8, i8 }
%24 = type { i8*, %25, %25, %25, i32, i32, i8, i8, i8, i8 }
%25 = type { i32 }
%26 = type { i32, i32, i32 }
%27 = type { i32, i32, i32, i32 }
%28 = type { %24*, %28*, %3*, %21*, %3, %28*, %10*, i8**, %3* }
%29 = type { i8, %21*, %35*, %35*, %19* }
%30 = type { %31*, %31*, i64, i64, void (i8*)*, i8, %31* }
%31 = type { %31*, %31*, [1 x i8] }
%32 = type { %33 }
%33 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %34, %34, %34, [3 x i64] }
%34 = type { i64, i64 }
%35 = type { i8, %13*, %35*, i32, i32, i32, i32, %3*, %3*, %3*, %10, %10, %10, %21*, %21*, %21*, %21*, %21*, %21*, %21*, %21*, %21*, %21*, %21*, %21*, %21*, %36, %19* (%35*)*, %38* (%35*, %3*, i32)*, i32 (%35*, %35*)*, %21* (%35*, %13*)*, i32 (%3*, i8**, i64*, %39*)*, i32 (%3*, %35*, i8*, i64, %40*)*, i32, i32, %35**, %35**, %41**, %43**, %45 }
%36 = type { %37*, %21*, %21*, %21*, %21*, %21*, %21* }
%37 = type { void (%38*)*, i32 (%38*)*, %3* (%38*)*, void (%38*, %3*)*, void (%38*)*, void (%38*)*, void (%38*)* }
%38 = type { %19, %3, %37*, i64 }
%39 = type opaque
%40 = type opaque
%41 = type { %42*, %13*, i32 }
%42 = type { %13*, %35*, %13* }
%43 = type { %42*, %44* }
%44 = type { %35* }
%45 = type { %46 }
%46 = type { %13*, i32, i32, %13* }
%47 = type { %48*, i32 }
%48 = type opaque
%49 = type { %50*, i32 }
%50 = type opaque
%51 = type { %52, %52, %52, %52, %52, %52, %52, i32, i8*, i32, i32, %52, i32, i32, %10* }
%52 = type { %13*, i64 }
%53 = type { %54*, i8*, %55, %55, %60*, i8*, %3, i8, i8, [16 x i8], i32, %7*, %62*, i8*, %7*, i64, i8*, i64, i64, i64, i64, %53* }
%54 = type { i64 (%53*, i8*, i64)*, i64 (%53*, i8*, i64)*, i32 (%53*, i32)*, i32 (%53*)*, i8*, i32 (%53*, i64, i32, i64*)*, i32 (%53*, i32, i8**)*, i32 (%53*, %32*)*, i32 (%53*, i32, i32, i8*)* }
%55 = type { %56*, %56*, %53* }
%56 = type { %57*, %3, %56*, %56*, i32, %55*, %58, %7* }
%57 = type { i32 (%53*, %56*, %58*, %58*, i64*, i32)*, void (%56*)*, i8* }
%58 = type { %59*, %59* }
%59 = type { %59*, %59*, %58*, i8*, i64, i8, i8, i32 }
%60 = type { %61*, i8*, i32 }
%61 = type { %53* (%60*, i8*, i8*, i32, %13**, %1*)*, i32 (%60*, %53*)*, i32 (%60*, %53*, %32*)*, i32 (%60*, i8*, i32, %32*, %1*)*, %53* (%60*, i8*, i8*, i32, %13**, %1*)*, i8*, i32 (%60*, i8*, i32, %1*)*, i32 (%60*, i8*, i8*, i32, %1*)*, i32 (%60*, i8*, i32, i32, %1*)*, i32 (%60*, i8*, i32, %1*)*, i32 (%60*, i8*, i32, i8*, %1*)* }
%62 = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %63*, %62*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%63 = type { %63*, %62*, i32 }
%64 = type { %8, %3 }
%65 = type { i8, i8, i8, i8 }
%66 = type { %53*, i32, i32, i8*, i8*, i32, i32 }
%67 = type { i8, i8, i16 }
%68 = type { %8 }

@0 = internal global i32 -1, align 4
@1 = private unnamed_addr constant [15 x i8] c"stream-context\00", align 1
@file_globals = common dso_local global %0 zeroinitializer, align 8
@2 = internal constant [5 x %15] [%15 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @139, i32 0, i32 0), i32 (%16*, %13*, i8*, i8*, i8*, i32)* @OnUpdateString, i8* inttoptr (i64 32 to i8*), i8* bitcast (%0* @file_globals to i8*), i8* null, i8* null, void (%16*, i32)* null, i32 7, i32 10, i32 7 }, %15 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @140, i32 0, i32 0), i32 (%16*, %13*, i8*, i8*, i8*, i32)* @OnUpdateString, i8* inttoptr (i64 40 to i8*), i8* bitcast (%0* @file_globals to i8*), i8* null, i8* null, void (%16*, i32)* null, i32 7, i32 4, i32 7 }, %15 { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @141, i32 0, i32 0), i32 (%16*, %13*, i8*, i8*, i8*, i32)* @OnUpdateLong, i8* inttoptr (i64 24 to i8*), i8* bitcast (%0* @file_globals to i8*), i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @142, i32 0, i32 0), void (%16*, i32)* null, i32 7, i32 22, i32 2 }, %15 { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @143, i32 0, i32 0), i32 (%16*, %13*, i8*, i8*, i8*, i32)* @OnUpdateBool, i8* inttoptr (i64 16 to i8*), i8* bitcast (%0* @file_globals to i8*), i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @144, i32 0, i32 0), void (%16*, i32)* null, i32 7, i32 24, i32 1 }, %15 zeroinitializer], align 16
@3 = private unnamed_addr constant [9 x i8] c"SEEK_SET\00", align 1
@4 = private unnamed_addr constant [9 x i8] c"SEEK_CUR\00", align 1
@5 = private unnamed_addr constant [9 x i8] c"SEEK_END\00", align 1
@6 = private unnamed_addr constant [8 x i8] c"LOCK_SH\00", align 1
@7 = private unnamed_addr constant [8 x i8] c"LOCK_EX\00", align 1
@8 = private unnamed_addr constant [8 x i8] c"LOCK_UN\00", align 1
@9 = private unnamed_addr constant [8 x i8] c"LOCK_NB\00", align 1
@10 = private unnamed_addr constant [22 x i8] c"STREAM_NOTIFY_CONNECT\00", align 1
@11 = private unnamed_addr constant [28 x i8] c"STREAM_NOTIFY_AUTH_REQUIRED\00", align 1
@12 = private unnamed_addr constant [26 x i8] c"STREAM_NOTIFY_AUTH_RESULT\00", align 1
@13 = private unnamed_addr constant [27 x i8] c"STREAM_NOTIFY_MIME_TYPE_IS\00", align 1
@14 = private unnamed_addr constant [27 x i8] c"STREAM_NOTIFY_FILE_SIZE_IS\00", align 1
@15 = private unnamed_addr constant [25 x i8] c"STREAM_NOTIFY_REDIRECTED\00", align 1
@16 = private unnamed_addr constant [23 x i8] c"STREAM_NOTIFY_PROGRESS\00", align 1
@17 = private unnamed_addr constant [22 x i8] c"STREAM_NOTIFY_FAILURE\00", align 1
@18 = private unnamed_addr constant [24 x i8] c"STREAM_NOTIFY_COMPLETED\00", align 1
@19 = private unnamed_addr constant [22 x i8] c"STREAM_NOTIFY_RESOLVE\00", align 1
@20 = private unnamed_addr constant [28 x i8] c"STREAM_NOTIFY_SEVERITY_INFO\00", align 1
@21 = private unnamed_addr constant [28 x i8] c"STREAM_NOTIFY_SEVERITY_WARN\00", align 1
@22 = private unnamed_addr constant [27 x i8] c"STREAM_NOTIFY_SEVERITY_ERR\00", align 1
@23 = private unnamed_addr constant [19 x i8] c"STREAM_FILTER_READ\00", align 1
@24 = private unnamed_addr constant [20 x i8] c"STREAM_FILTER_WRITE\00", align 1
@25 = private unnamed_addr constant [18 x i8] c"STREAM_FILTER_ALL\00", align 1
@26 = private unnamed_addr constant [25 x i8] c"STREAM_CLIENT_PERSISTENT\00", align 1
@27 = private unnamed_addr constant [28 x i8] c"STREAM_CLIENT_ASYNC_CONNECT\00", align 1
@28 = private unnamed_addr constant [22 x i8] c"STREAM_CLIENT_CONNECT\00", align 1
@29 = private unnamed_addr constant [32 x i8] c"STREAM_CRYPTO_METHOD_ANY_CLIENT\00", align 1
@30 = private unnamed_addr constant [34 x i8] c"STREAM_CRYPTO_METHOD_SSLv2_CLIENT\00", align 1
@31 = private unnamed_addr constant [34 x i8] c"STREAM_CRYPTO_METHOD_SSLv3_CLIENT\00", align 1
@32 = private unnamed_addr constant [35 x i8] c"STREAM_CRYPTO_METHOD_SSLv23_CLIENT\00", align 1
@33 = private unnamed_addr constant [32 x i8] c"STREAM_CRYPTO_METHOD_TLS_CLIENT\00", align 1
@34 = private unnamed_addr constant [36 x i8] c"STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT\00", align 1
@35 = private unnamed_addr constant [36 x i8] c"STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT\00", align 1
@36 = private unnamed_addr constant [36 x i8] c"STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT\00", align 1
@37 = private unnamed_addr constant [32 x i8] c"STREAM_CRYPTO_METHOD_ANY_SERVER\00", align 1
@38 = private unnamed_addr constant [34 x i8] c"STREAM_CRYPTO_METHOD_SSLv2_SERVER\00", align 1
@39 = private unnamed_addr constant [34 x i8] c"STREAM_CRYPTO_METHOD_SSLv3_SERVER\00", align 1
@40 = private unnamed_addr constant [35 x i8] c"STREAM_CRYPTO_METHOD_SSLv23_SERVER\00", align 1
@41 = private unnamed_addr constant [32 x i8] c"STREAM_CRYPTO_METHOD_TLS_SERVER\00", align 1
@42 = private unnamed_addr constant [36 x i8] c"STREAM_CRYPTO_METHOD_TLSv1_0_SERVER\00", align 1
@43 = private unnamed_addr constant [36 x i8] c"STREAM_CRYPTO_METHOD_TLSv1_1_SERVER\00", align 1
@44 = private unnamed_addr constant [36 x i8] c"STREAM_CRYPTO_METHOD_TLSv1_2_SERVER\00", align 1
@45 = private unnamed_addr constant [15 x i8] c"STREAM_SHUT_RD\00", align 1
@46 = private unnamed_addr constant [15 x i8] c"STREAM_SHUT_WR\00", align 1
@47 = private unnamed_addr constant [17 x i8] c"STREAM_SHUT_RDWR\00", align 1
@48 = private unnamed_addr constant [15 x i8] c"STREAM_PF_INET\00", align 1
@49 = private unnamed_addr constant [16 x i8] c"STREAM_PF_INET6\00", align 1
@50 = private unnamed_addr constant [15 x i8] c"STREAM_PF_UNIX\00", align 1
@51 = private unnamed_addr constant [18 x i8] c"STREAM_IPPROTO_IP\00", align 1
@52 = private unnamed_addr constant [19 x i8] c"STREAM_IPPROTO_TCP\00", align 1
@53 = private unnamed_addr constant [19 x i8] c"STREAM_IPPROTO_UDP\00", align 1
@54 = private unnamed_addr constant [20 x i8] c"STREAM_IPPROTO_ICMP\00", align 1
@55 = private unnamed_addr constant [19 x i8] c"STREAM_IPPROTO_RAW\00", align 1
@56 = private unnamed_addr constant [19 x i8] c"STREAM_SOCK_STREAM\00", align 1
@57 = private unnamed_addr constant [18 x i8] c"STREAM_SOCK_DGRAM\00", align 1
@58 = private unnamed_addr constant [16 x i8] c"STREAM_SOCK_RAW\00", align 1
@59 = private unnamed_addr constant [22 x i8] c"STREAM_SOCK_SEQPACKET\00", align 1
@60 = private unnamed_addr constant [16 x i8] c"STREAM_SOCK_RDM\00", align 1
@61 = private unnamed_addr constant [12 x i8] c"STREAM_PEEK\00", align 1
@62 = private unnamed_addr constant [11 x i8] c"STREAM_OOB\00", align 1
@63 = private unnamed_addr constant [19 x i8] c"STREAM_SERVER_BIND\00", align 1
@64 = private unnamed_addr constant [21 x i8] c"STREAM_SERVER_LISTEN\00", align 1
@65 = private unnamed_addr constant [22 x i8] c"FILE_USE_INCLUDE_PATH\00", align 1
@66 = private unnamed_addr constant [22 x i8] c"FILE_IGNORE_NEW_LINES\00", align 1
@67 = private unnamed_addr constant [22 x i8] c"FILE_SKIP_EMPTY_LINES\00", align 1
@68 = private unnamed_addr constant [12 x i8] c"FILE_APPEND\00", align 1
@69 = private unnamed_addr constant [24 x i8] c"FILE_NO_DEFAULT_CONTEXT\00", align 1
@70 = private unnamed_addr constant [10 x i8] c"FILE_TEXT\00", align 1
@71 = private unnamed_addr constant [12 x i8] c"FILE_BINARY\00", align 1
@72 = private unnamed_addr constant [13 x i8] c"FNM_NOESCAPE\00", align 1
@73 = private unnamed_addr constant [13 x i8] c"FNM_PATHNAME\00", align 1
@74 = private unnamed_addr constant [11 x i8] c"FNM_PERIOD\00", align 1
@75 = private unnamed_addr constant [13 x i8] c"FNM_CASEFOLD\00", align 1
@76 = private unnamed_addr constant [7 x i8] c"stream\00", align 1
@77 = private unnamed_addr constant [27 x i8] c"Illegal operation argument\00", align 1
@78 = internal global [3 x i32] [i32 1, i32 2, i32 8], align 4
@79 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@80 = private unnamed_addr constant [5 x i8] c"meta\00", align 1
@81 = private unnamed_addr constant [5 x i8] c"head\00", align 1
@82 = private unnamed_addr constant [13 x i8] c".\\+*?[^]$() \00", align 1
@83 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@84 = private unnamed_addr constant [8 x i8] c"content\00", align 1
@85 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@86 = private unnamed_addr constant [45 x i8] c"length must be greater than or equal to zero\00", align 1
@87 = private unnamed_addr constant [15 x i8] c"Stream-Context\00", align 1
@88 = private unnamed_addr constant [45 x i8] c"Failed to seek to position %ld in the stream\00", align 1
@89 = private unnamed_addr constant [38 x i8] c"maxlen truncated from %ld to %d bytes\00", align 1
@zend_empty_string = external dso_local global %13*, align 8
@90 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@91 = private unnamed_addr constant [4 x i8] c"://\00", align 1
@92 = private unnamed_addr constant [8 x i8] c"file://\00", align 1
@93 = private unnamed_addr constant [50 x i8] c"Exclusive locks may only be set for regular files\00", align 1
@94 = private unnamed_addr constant [50 x i8] c"Exclusive locks are not supported for this stream\00", align 1
@95 = private unnamed_addr constant [40 x i8] c"content truncated from %zu to %ld bytes\00", align 1
@96 = private unnamed_addr constant [63 x i8] c"Only %ld of %zd bytes written, possibly out of free disk space\00", align 1
@97 = private unnamed_addr constant [32 x i8] c"Failed to write %zd bytes to %s\00", align 1
@98 = private unnamed_addr constant [28 x i8] c"'%ld' flag is not supported\00", align 1
@99 = private unnamed_addr constant [34 x i8] c"%d is not a valid stream resource\00", align 1
@100 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@101 = private unnamed_addr constant [40 x i8] c"Length parameter must be greater than 0\00", align 1
@102 = private unnamed_addr constant [12 x i8] c"File-Handle\00", align 1
@basic_globals = external dso_local global %17, align 8
@103 = private unnamed_addr constant [32 x i8] c"Unable to locate stream wrapper\00", align 1
@104 = private unnamed_addr constant [37 x i8] c"%s wrapper does not support renaming\00", align 1
@105 = private unnamed_addr constant [7 x i8] c"Source\00", align 1
@106 = private unnamed_addr constant [42 x i8] c"Cannot rename a file across wrapper types\00", align 1
@107 = private unnamed_addr constant [28 x i8] c"%s does not allow unlinking\00", align 1
@108 = private unnamed_addr constant [8 x i8] c"Wrapper\00", align 1
@109 = private unnamed_addr constant [31 x i8] c"Negative size is not supported\00", align 1
@110 = private unnamed_addr constant [28 x i8] c"Can't truncate this stream!\00", align 1
@111 = private unnamed_addr constant [4 x i8] c"dev\00", align 1
@112 = private unnamed_addr constant [4 x i8] c"ino\00", align 1
@113 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@114 = private unnamed_addr constant [6 x i8] c"nlink\00", align 1
@115 = private unnamed_addr constant [4 x i8] c"uid\00", align 1
@116 = private unnamed_addr constant [4 x i8] c"gid\00", align 1
@117 = private unnamed_addr constant [5 x i8] c"rdev\00", align 1
@118 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@119 = private unnamed_addr constant [6 x i8] c"atime\00", align 1
@120 = private unnamed_addr constant [6 x i8] c"mtime\00", align 1
@121 = private unnamed_addr constant [6 x i8] c"ctime\00", align 1
@122 = private unnamed_addr constant [8 x i8] c"blksize\00", align 1
@123 = private unnamed_addr constant [7 x i8] c"blocks\00", align 1
@124 = private unnamed_addr constant [13 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @111, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @113, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @114, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @115, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @116, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @117, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @118, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @119, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @120, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @121, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @122, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @123, i32 0, i32 0)], align 16
@125 = private unnamed_addr constant [60 x i8] c"The first argument to copy() function cannot be a directory\00", align 1
@126 = private unnamed_addr constant [61 x i8] c"The second argument to copy() function cannot be a directory\00", align 1
@127 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@128 = private unnamed_addr constant [30 x i8] c"delimiter must be a character\00", align 1
@129 = private unnamed_addr constant [37 x i8] c"delimiter must be a single character\00", align 1
@130 = private unnamed_addr constant [30 x i8] c"enclosure must be a character\00", align 1
@131 = private unnamed_addr constant [37 x i8] c"enclosure must be a single character\00", align 1
@132 = private unnamed_addr constant [27 x i8] c"escape must be a character\00", align 1
@133 = private unnamed_addr constant [34 x i8] c"escape must be a single character\00", align 1
@134 = private unnamed_addr constant [25 x i8] c"escape must be character\00", align 1
@135 = private unnamed_addr constant [37 x i8] c"Length parameter may not be negative\00", align 1
@136 = private unnamed_addr constant [5 x i8] c"-_.:\00", align 1
@137 = private unnamed_addr constant [61 x i8] c"Filename exceeds the maximum allowed length of %d characters\00", align 1
@138 = private unnamed_addr constant [60 x i8] c"Pattern exceeds the maximum allowed length of %d characters\00", align 1
@139 = private unnamed_addr constant [11 x i8] c"user_agent\00", align 1
@140 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@141 = private unnamed_addr constant [23 x i8] c"default_socket_timeout\00", align 1
@142 = private unnamed_addr constant [3 x i8] c"60\00", align 1
@143 = private unnamed_addr constant [25 x i8] c"auto_detect_line_endings\00", align 1
@144 = private unnamed_addr constant [2 x i8] c"0\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @php_le_stream_context() #0 {
  %1 = load i32, i32* @0, align 4
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define hidden i32 @zm_startup_file(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = call i32 @zend_register_list_destructors_ex(void (%7*)* @145, void (%7*)* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1, i32 0, i32 0), i32 %5)
  store i32 %6, i32* @0, align 4
  call void @146(%0* @file_globals)
  %7 = load i32, i32* %4, align 4
  %8 = call i32 @zend_register_ini_entries(%15* getelementptr inbounds ([5 x %15], [5 x %15]* @2, i32 0, i32 0), i32 %7)
  %9 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @3, i32 0, i32 0), i64 8, i64 0, i32 3, i32 %9)
  %10 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @4, i32 0, i32 0), i64 8, i64 1, i32 3, i32 %10)
  %11 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @5, i32 0, i32 0), i64 8, i64 2, i32 3, i32 %11)
  %12 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @6, i32 0, i32 0), i64 7, i64 1, i32 3, i32 %12)
  %13 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @7, i32 0, i32 0), i64 7, i64 2, i32 3, i32 %13)
  %14 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @8, i32 0, i32 0), i64 7, i64 3, i32 3, i32 %14)
  %15 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @9, i32 0, i32 0), i64 7, i64 4, i32 3, i32 %15)
  %16 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @10, i32 0, i32 0), i64 21, i64 2, i32 3, i32 %16)
  %17 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @11, i32 0, i32 0), i64 27, i64 3, i32 3, i32 %17)
  %18 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @12, i32 0, i32 0), i64 25, i64 10, i32 3, i32 %18)
  %19 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @13, i32 0, i32 0), i64 26, i64 4, i32 3, i32 %19)
  %20 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @14, i32 0, i32 0), i64 26, i64 5, i32 3, i32 %20)
  %21 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @15, i32 0, i32 0), i64 24, i64 6, i32 3, i32 %21)
  %22 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @16, i32 0, i32 0), i64 22, i64 7, i32 3, i32 %22)
  %23 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @17, i32 0, i32 0), i64 21, i64 9, i32 3, i32 %23)
  %24 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @18, i32 0, i32 0), i64 23, i64 8, i32 3, i32 %24)
  %25 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @19, i32 0, i32 0), i64 21, i64 1, i32 3, i32 %25)
  %26 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @20, i32 0, i32 0), i64 27, i64 0, i32 3, i32 %26)
  %27 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @21, i32 0, i32 0), i64 27, i64 1, i32 3, i32 %27)
  %28 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @22, i32 0, i32 0), i64 26, i64 2, i32 3, i32 %28)
  %29 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @23, i32 0, i32 0), i64 18, i64 1, i32 3, i32 %29)
  %30 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @24, i32 0, i32 0), i64 19, i64 2, i32 3, i32 %30)
  %31 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @25, i32 0, i32 0), i64 17, i64 3, i32 3, i32 %31)
  %32 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @26, i32 0, i32 0), i64 24, i64 1, i32 3, i32 %32)
  %33 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @27, i32 0, i32 0), i64 27, i64 2, i32 3, i32 %33)
  %34 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @28, i32 0, i32 0), i64 21, i64 4, i32 3, i32 %34)
  %35 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @29, i32 0, i32 0), i64 31, i64 63, i32 3, i32 %35)
  %36 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @30, i32 0, i32 0), i64 33, i64 3, i32 3, i32 %36)
  %37 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @31, i32 0, i32 0), i64 33, i64 5, i32 3, i32 %37)
  %38 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @32, i32 0, i32 0), i64 34, i64 57, i32 3, i32 %38)
  %39 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @33, i32 0, i32 0), i64 31, i64 57, i32 3, i32 %39)
  %40 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @34, i32 0, i32 0), i64 35, i64 9, i32 3, i32 %40)
  %41 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @35, i32 0, i32 0), i64 35, i64 17, i32 3, i32 %41)
  %42 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @36, i32 0, i32 0), i64 35, i64 33, i32 3, i32 %42)
  %43 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @37, i32 0, i32 0), i64 31, i64 62, i32 3, i32 %43)
  %44 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @38, i32 0, i32 0), i64 33, i64 2, i32 3, i32 %44)
  %45 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @39, i32 0, i32 0), i64 33, i64 4, i32 3, i32 %45)
  %46 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @40, i32 0, i32 0), i64 34, i64 56, i32 3, i32 %46)
  %47 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @41, i32 0, i32 0), i64 31, i64 56, i32 3, i32 %47)
  %48 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @42, i32 0, i32 0), i64 35, i64 8, i32 3, i32 %48)
  %49 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @43, i32 0, i32 0), i64 35, i64 16, i32 3, i32 %49)
  %50 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @44, i32 0, i32 0), i64 35, i64 32, i32 3, i32 %50)
  %51 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @45, i32 0, i32 0), i64 14, i64 0, i32 3, i32 %51)
  %52 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @46, i32 0, i32 0), i64 14, i64 1, i32 3, i32 %52)
  %53 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @47, i32 0, i32 0), i64 16, i64 2, i32 3, i32 %53)
  %54 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @48, i32 0, i32 0), i64 14, i64 2, i32 3, i32 %54)
  %55 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @49, i32 0, i32 0), i64 15, i64 10, i32 3, i32 %55)
  %56 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @50, i32 0, i32 0), i64 14, i64 1, i32 3, i32 %56)
  %57 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @51, i32 0, i32 0), i64 17, i64 0, i32 3, i32 %57)
  %58 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @52, i32 0, i32 0), i64 18, i64 6, i32 3, i32 %58)
  %59 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @53, i32 0, i32 0), i64 18, i64 17, i32 3, i32 %59)
  %60 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @54, i32 0, i32 0), i64 19, i64 1, i32 3, i32 %60)
  %61 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @55, i32 0, i32 0), i64 18, i64 255, i32 3, i32 %61)
  %62 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @56, i32 0, i32 0), i64 18, i64 1, i32 3, i32 %62)
  %63 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @57, i32 0, i32 0), i64 17, i64 2, i32 3, i32 %63)
  %64 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @58, i32 0, i32 0), i64 15, i64 3, i32 3, i32 %64)
  %65 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @59, i32 0, i32 0), i64 21, i64 5, i32 3, i32 %65)
  %66 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @60, i32 0, i32 0), i64 15, i64 4, i32 3, i32 %66)
  %67 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @61, i32 0, i32 0), i64 11, i64 2, i32 3, i32 %67)
  %68 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @62, i32 0, i32 0), i64 10, i64 1, i32 3, i32 %68)
  %69 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @63, i32 0, i32 0), i64 18, i64 4, i32 3, i32 %69)
  %70 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @64, i32 0, i32 0), i64 20, i64 8, i32 3, i32 %70)
  %71 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @65, i32 0, i32 0), i64 21, i64 1, i32 3, i32 %71)
  %72 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @66, i32 0, i32 0), i64 21, i64 2, i32 3, i32 %72)
  %73 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @67, i32 0, i32 0), i64 21, i64 4, i32 3, i32 %73)
  %74 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @68, i32 0, i32 0), i64 11, i64 8, i32 3, i32 %74)
  %75 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @69, i32 0, i32 0), i64 23, i64 16, i32 3, i32 %75)
  %76 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @70, i32 0, i32 0), i64 9, i64 0, i32 3, i32 %76)
  %77 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @71, i32 0, i32 0), i64 11, i64 0, i32 3, i32 %77)
  %78 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @72, i32 0, i32 0), i64 12, i64 2, i32 3, i32 %78)
  %79 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @73, i32 0, i32 0), i64 12, i64 1, i32 3, i32 %79)
  %80 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @74, i32 0, i32 0), i64 10, i64 4, i32 3, i32 %80)
  %81 = load i32, i32* %4, align 4
  call void @zend_register_long_constant(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @75, i32 0, i32 0), i64 12, i64 16, i32 3, i32 %81)
  ret i32 0
}

declare dso_local i32 @zend_register_list_destructors_ex(void (%7*)*, void (%7*)*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @145(%7* %0) #0 {
  %2 = alloca %7*, align 8
  %3 = alloca %1*, align 8
  store %7* %0, %7** %2, align 8
  %4 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #11
  %5 = load %7*, %7** %2, align 8
  %6 = getelementptr inbounds %7, %7* %5, i32 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast i8* %7 to %1*
  store %1* %8, %1** %3, align 8
  %9 = load %1*, %1** %3, align 8
  %10 = getelementptr inbounds %1, %1* %9, i32 0, i32 1
  %11 = call zeroext i8 @150(%3* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %1
  %15 = load %1*, %1** %3, align 8
  %16 = getelementptr inbounds %1, %1* %15, i32 0, i32 1
  call void @_zval_ptr_dtor(%3* %16)
  br label %17

17:                                               ; preds = %14
  %18 = load %1*, %1** %3, align 8
  %19 = getelementptr inbounds %1, %1* %18, i32 0, i32 1
  %20 = getelementptr inbounds %3, %3* %19, i32 0, i32 1
  %21 = bitcast %5* %20 to i32*
  store i32 0, i32* %21, align 8
  br label %22

22:                                               ; preds = %17
  br label %23

23:                                               ; preds = %22
  br label %24

24:                                               ; preds = %23, %1
  %25 = load %1*, %1** %3, align 8
  call void @php_stream_context_free(%1* %25)
  %26 = bitcast %1** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %26) #11
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @146(%0* %0) #0 {
  %2 = alloca %0*, align 8
  store %0* %0, %0** %2, align 8
  %3 = load %0*, %0** %2, align 8
  %4 = bitcast %0* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 144, i1 false)
  %5 = load %0*, %0** %2, align 8
  %6 = getelementptr inbounds %0, %0* %5, i32 0, i32 1
  store i64 8192, i64* %6, align 8
  ret void
}

declare dso_local i32 @zend_register_ini_entries(%15*, i32) #1

declare dso_local void @zend_register_long_constant(i8*, i64, i64, i32, i32) #1

; Function Attrs: nounwind uwtable
define hidden i32 @zm_shutdown_file(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  call void @147(%0* @file_globals)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal void @147(%0* %0) #0 {
  %2 = alloca %0*, align 8
  store %0* %0, %0** %2, align 8
  %3 = load %0*, %0** %2, align 8
  %4 = getelementptr inbounds %0, %0* %3, i32 0, i32 13
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = load %0*, %0** %2, align 8
  %9 = getelementptr inbounds %0, %0* %8, i32 0, i32 13
  %10 = load i8*, i8** %9, align 8
  call void @free(i8* %10) #11
  br label %11

11:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_flock(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca %3*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %53*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %3*, align 8
  %16 = alloca %3*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %3*, align 8
  %24 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %25 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  %26 = bitcast %3** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #11
  store %3* null, %3** %6, align 8
  %27 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #11
  %28 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  %29 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #11
  store i64 0, i64* %9, align 8
  br label %30

30:                                               ; preds = %2
  %31 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #11
  store i32 0, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  store i32 2, i32* %11, align 4
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #11
  store i32 3, i32* %12, align 4
  %34 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #11
  %35 = load %28*, %28** %3, align 8
  %36 = getelementptr inbounds %28, %28* %35, i32 0, i32 4
  %37 = getelementptr inbounds %3, %3* %36, i32 0, i32 2
  %38 = bitcast %6* %37 to i32*
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %13, align 4
  %40 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #11
  %41 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  %42 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #11
  store %3* null, %3** %16, align 8
  %43 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  store i32 0, i32* %17, align 4
  %44 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #11
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #11
  store i8 0, i8* %20, align 1
  %45 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #11
  store i32 0, i32* %21, align 4
  %46 = load i32, i32* %14, align 4
  %47 = load %3*, %3** %15, align 8
  %48 = load %3*, %3** %16, align 8
  %49 = load i32, i32* %17, align 4
  %50 = load i8*, i8** %18, align 8
  %51 = load i8, i8* %19, align 1
  %52 = load i8, i8* %20, align 1
  br label %53

53:                                               ; preds = %30
  %54 = load i32, i32* %13, align 4
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 0)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %82, label %63

63:                                               ; preds = %53
  %64 = load i32, i32* %13, align 4
  %65 = load i32, i32* %12, align 4
  %66 = icmp sgt i32 %64, %65
  %67 = xor i1 %66, true
  %68 = xor i1 %67, true
  %69 = zext i1 %68 to i32
  %70 = sext i32 %69 to i64
  %71 = call i64 @llvm.expect.i64(i64 %70, i64 0)
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %86

73:                                               ; preds = %63
  %74 = load i32, i32* %12, align 4
  %75 = icmp sge i32 %74, 0
  %76 = xor i1 %75, true
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = call i64 @llvm.expect.i64(i64 %79, i64 1)
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %73, %53
  %83 = load i32, i32* %13, align 4
  %84 = load i32, i32* %11, align 4
  %85 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %83, i32 %84, i32 %85)
  store i32 1, i32* %21, align 4
  br label %310

86:                                               ; preds = %73, %63
  store i32 0, i32* %14, align 4
  %87 = load %28*, %28** %3, align 8
  %88 = bitcast %28* %87 to %3*
  %89 = getelementptr inbounds %3, %3* %88, i64 4
  store %3* %89, %3** %15, align 8
  %90 = load i32, i32* %14, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %14, align 4
  br label %92

92:                                               ; preds = %86
  %93 = load i32, i32* %14, align 4
  %94 = load i32, i32* %11, align 4
  %95 = icmp sle i32 %93, %94
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = load i8, i8* %20, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %98, 1
  br label %100

100:                                              ; preds = %96, %92
  %101 = phi i1 [ true, %92 ], [ %99, %96 ]
  %102 = xor i1 %101, true
  %103 = zext i1 %102 to i32
  %104 = sext i32 %103 to i64
  %105 = call i64 @llvm.expect.i64(i64 %104, i64 0)
  %106 = icmp ne i64 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %100
  unreachable

108:                                              ; preds = %100
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %14, align 4
  %113 = load i32, i32* %11, align 4
  %114 = icmp sgt i32 %112, %113
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = load i8, i8* %20, align 1
  %117 = zext i8 %116 to i32
  %118 = icmp eq i32 %117, 0
  br label %119

119:                                              ; preds = %115, %111
  %120 = phi i1 [ true, %111 ], [ %118, %115 ]
  %121 = xor i1 %120, true
  %122 = zext i1 %121 to i32
  %123 = sext i32 %122 to i64
  %124 = call i64 @llvm.expect.i64(i64 %123, i64 0)
  %125 = icmp ne i64 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %119
  unreachable

127:                                              ; preds = %119
  br label %128

128:                                              ; preds = %127
  br label %129

129:                                              ; preds = %128
  %130 = load i8, i8* %20, align 1
  %131 = icmp ne i8 %130, 0
  br i1 %131, label %132, label %144

132:                                              ; preds = %129
  %133 = load i32, i32* %14, align 4
  %134 = load i32, i32* %13, align 4
  %135 = icmp sgt i32 %133, %134
  %136 = xor i1 %135, true
  %137 = xor i1 %136, true
  %138 = zext i1 %137 to i32
  %139 = sext i32 %138 to i64
  %140 = call i64 @llvm.expect.i64(i64 %139, i64 0)
  %141 = icmp ne i64 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %132
  br label %310

143:                                              ; preds = %132
  br label %144

144:                                              ; preds = %143, %129
  %145 = load %3*, %3** %15, align 8
  %146 = getelementptr inbounds %3, %3* %145, i32 1
  store %3* %146, %3** %15, align 8
  %147 = load %3*, %3** %15, align 8
  store %3* %147, %3** %16, align 8
  %148 = load %3*, %3** %16, align 8
  %149 = call i32 @148(%3* %148, %3** %5, i32 0)
  %150 = icmp ne i32 %149, 0
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = xor i1 %152, true
  %154 = zext i1 %153 to i32
  %155 = sext i32 %154 to i64
  %156 = call i64 @llvm.expect.i64(i64 %155, i64 0)
  %157 = icmp ne i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %144
  store i32 5, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %310

159:                                              ; preds = %144
  %160 = load i32, i32* %14, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %14, align 4
  br label %162

162:                                              ; preds = %159
  %163 = load i32, i32* %14, align 4
  %164 = load i32, i32* %11, align 4
  %165 = icmp sle i32 %163, %164
  br i1 %165, label %170, label %166

166:                                              ; preds = %162
  %167 = load i8, i8* %20, align 1
  %168 = zext i8 %167 to i32
  %169 = icmp eq i32 %168, 1
  br label %170

170:                                              ; preds = %166, %162
  %171 = phi i1 [ true, %162 ], [ %169, %166 ]
  %172 = xor i1 %171, true
  %173 = zext i1 %172 to i32
  %174 = sext i32 %173 to i64
  %175 = call i64 @llvm.expect.i64(i64 %174, i64 0)
  %176 = icmp ne i64 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %170
  unreachable

178:                                              ; preds = %170
  br label %179

179:                                              ; preds = %178
  br label %180

180:                                              ; preds = %179
  br label %181

181:                                              ; preds = %180
  %182 = load i32, i32* %14, align 4
  %183 = load i32, i32* %11, align 4
  %184 = icmp sgt i32 %182, %183
  br i1 %184, label %189, label %185

185:                                              ; preds = %181
  %186 = load i8, i8* %20, align 1
  %187 = zext i8 %186 to i32
  %188 = icmp eq i32 %187, 0
  br label %189

189:                                              ; preds = %185, %181
  %190 = phi i1 [ true, %181 ], [ %188, %185 ]
  %191 = xor i1 %190, true
  %192 = zext i1 %191 to i32
  %193 = sext i32 %192 to i64
  %194 = call i64 @llvm.expect.i64(i64 %193, i64 0)
  %195 = icmp ne i64 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %189
  unreachable

197:                                              ; preds = %189
  br label %198

198:                                              ; preds = %197
  br label %199

199:                                              ; preds = %198
  %200 = load i8, i8* %20, align 1
  %201 = icmp ne i8 %200, 0
  br i1 %201, label %202, label %214

202:                                              ; preds = %199
  %203 = load i32, i32* %14, align 4
  %204 = load i32, i32* %13, align 4
  %205 = icmp sgt i32 %203, %204
  %206 = xor i1 %205, true
  %207 = xor i1 %206, true
  %208 = zext i1 %207 to i32
  %209 = sext i32 %208 to i64
  %210 = call i64 @llvm.expect.i64(i64 %209, i64 0)
  %211 = icmp ne i64 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %202
  br label %310

213:                                              ; preds = %202
  br label %214

214:                                              ; preds = %213, %199
  %215 = load %3*, %3** %15, align 8
  %216 = getelementptr inbounds %3, %3* %215, i32 1
  store %3* %216, %3** %15, align 8
  %217 = load %3*, %3** %15, align 8
  store %3* %217, %3** %16, align 8
  %218 = load %3*, %3** %16, align 8
  %219 = call i32 @149(%3* %218, i64* %9, i8* %19, i32 0, i32 0)
  %220 = icmp ne i32 %219, 0
  %221 = xor i1 %220, true
  %222 = xor i1 %221, true
  %223 = xor i1 %222, true
  %224 = zext i1 %223 to i32
  %225 = sext i32 %224 to i64
  %226 = call i64 @llvm.expect.i64(i64 %225, i64 0)
  %227 = icmp ne i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %214
  store i32 0, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %310

229:                                              ; preds = %214
  store i8 1, i8* %20, align 1
  %230 = load i32, i32* %14, align 4
  %231 = add nsw i32 %230, 1
  store i32 %231, i32* %14, align 4
  br label %232

232:                                              ; preds = %229
  %233 = load i32, i32* %14, align 4
  %234 = load i32, i32* %11, align 4
  %235 = icmp sle i32 %233, %234
  br i1 %235, label %240, label %236

236:                                              ; preds = %232
  %237 = load i8, i8* %20, align 1
  %238 = zext i8 %237 to i32
  %239 = icmp eq i32 %238, 1
  br label %240

240:                                              ; preds = %236, %232
  %241 = phi i1 [ true, %232 ], [ %239, %236 ]
  %242 = xor i1 %241, true
  %243 = zext i1 %242 to i32
  %244 = sext i32 %243 to i64
  %245 = call i64 @llvm.expect.i64(i64 %244, i64 0)
  %246 = icmp ne i64 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %240
  unreachable

248:                                              ; preds = %240
  br label %249

249:                                              ; preds = %248
  br label %250

250:                                              ; preds = %249
  br label %251

251:                                              ; preds = %250
  %252 = load i32, i32* %14, align 4
  %253 = load i32, i32* %11, align 4
  %254 = icmp sgt i32 %252, %253
  br i1 %254, label %259, label %255

255:                                              ; preds = %251
  %256 = load i8, i8* %20, align 1
  %257 = zext i8 %256 to i32
  %258 = icmp eq i32 %257, 0
  br label %259

259:                                              ; preds = %255, %251
  %260 = phi i1 [ true, %251 ], [ %258, %255 ]
  %261 = xor i1 %260, true
  %262 = zext i1 %261 to i32
  %263 = sext i32 %262 to i64
  %264 = call i64 @llvm.expect.i64(i64 %263, i64 0)
  %265 = icmp ne i64 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %259
  unreachable

267:                                              ; preds = %259
  br label %268

268:                                              ; preds = %267
  br label %269

269:                                              ; preds = %268
  %270 = load i8, i8* %20, align 1
  %271 = icmp ne i8 %270, 0
  br i1 %271, label %272, label %284

272:                                              ; preds = %269
  %273 = load i32, i32* %14, align 4
  %274 = load i32, i32* %13, align 4
  %275 = icmp sgt i32 %273, %274
  %276 = xor i1 %275, true
  %277 = xor i1 %276, true
  %278 = zext i1 %277 to i32
  %279 = sext i32 %278 to i64
  %280 = call i64 @llvm.expect.i64(i64 %279, i64 0)
  %281 = icmp ne i64 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %272
  br label %310

283:                                              ; preds = %272
  br label %284

284:                                              ; preds = %283, %269
  %285 = load %3*, %3** %15, align 8
  %286 = getelementptr inbounds %3, %3* %285, i32 1
  store %3* %286, %3** %15, align 8
  %287 = load %3*, %3** %15, align 8
  store %3* %287, %3** %16, align 8
  br label %288

288:                                              ; preds = %284
  %289 = load %3*, %3** %16, align 8
  %290 = call zeroext i8 @150(%3* %289)
  %291 = zext i8 %290 to i32
  %292 = icmp eq i32 %291, 10
  %293 = xor i1 %292, true
  %294 = xor i1 %293, true
  %295 = zext i1 %294 to i32
  %296 = sext i32 %295 to i64
  %297 = call i64 @llvm.expect.i64(i64 %296, i64 0)
  %298 = icmp ne i64 %297, 0
  br i1 %298, label %299, label %305

299:                                              ; preds = %288
  %300 = load %3*, %3** %16, align 8
  %301 = getelementptr inbounds %3, %3* %300, i32 0, i32 0
  %302 = bitcast %4* %301 to %64**
  %303 = load %64*, %64** %302, align 8
  %304 = getelementptr inbounds %64, %64* %303, i32 0, i32 1
  store %3* %304, %3** %16, align 8
  br label %305

305:                                              ; preds = %299, %288
  br label %306

306:                                              ; preds = %305
  br label %307

307:                                              ; preds = %306
  %308 = load %3*, %3** %16, align 8
  call void @151(%3* %308, %3** %6, i32 0)
  br label %309

309:                                              ; preds = %307
  br label %310

310:                                              ; preds = %309, %282, %228, %212, %158, %142, %82
  %311 = load i32, i32* %21, align 4
  %312 = icmp ne i32 %311, 0
  %313 = xor i1 %312, true
  %314 = xor i1 %313, true
  %315 = zext i1 %314 to i32
  %316 = sext i32 %315 to i64
  %317 = call i64 @llvm.expect.i64(i64 %316, i64 0)
  %318 = icmp ne i64 %317, 0
  br i1 %318, label %319, label %342

319:                                              ; preds = %310
  %320 = load i32, i32* %21, align 4
  %321 = icmp eq i32 %320, 2
  br i1 %321, label %322, label %325

322:                                              ; preds = %319
  %323 = load i32, i32* %14, align 4
  %324 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %323, i8* %324)
  br label %341

325:                                              ; preds = %319
  %326 = load i32, i32* %21, align 4
  %327 = icmp eq i32 %326, 3
  br i1 %327, label %328, label %332

328:                                              ; preds = %325
  %329 = load i32, i32* %14, align 4
  %330 = load i8*, i8** %18, align 8
  %331 = load %3*, %3** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %329, i8* %330, %3* %331)
  br label %340

332:                                              ; preds = %325
  %333 = load i32, i32* %21, align 4
  %334 = icmp eq i32 %333, 4
  br i1 %334, label %335, label %339

335:                                              ; preds = %332
  %336 = load i32, i32* %14, align 4
  %337 = load i32, i32* %17, align 4
  %338 = load %3*, %3** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %336, i32 %337, %3* %338)
  br label %339

339:                                              ; preds = %335, %332
  br label %340

340:                                              ; preds = %339, %328
  br label %341

341:                                              ; preds = %340, %322
  store i32 1, i32* %22, align 4
  br label %343

342:                                              ; preds = %310
  store i32 0, i32* %22, align 4
  br label %343

343:                                              ; preds = %342, %341
  %344 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #11
  %345 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %345) #11
  %346 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %346) #11
  %347 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %347) #11
  %348 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %348) #11
  %349 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %349) #11
  %350 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %350) #11
  %351 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #11
  %352 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #11
  %353 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %353) #11
  %354 = load i32, i32* %22, align 4
  switch i32 %354, label %471 [
    i32 0, label %355
  ]

355:                                              ; preds = %343
  br label %356

356:                                              ; preds = %355
  br label %357

357:                                              ; preds = %356
  br label %358

358:                                              ; preds = %357
  %359 = load %3*, %3** %5, align 8
  %360 = call zeroext i8 @150(%3* %359)
  %361 = zext i8 %360 to i32
  %362 = icmp eq i32 %361, 9
  %363 = xor i1 %362, true
  %364 = zext i1 %363 to i32
  %365 = sext i32 %364 to i64
  %366 = call i64 @llvm.expect.i64(i64 %365, i64 0)
  %367 = icmp ne i64 %366, 0
  br i1 %367, label %368, label %369

368:                                              ; preds = %358
  unreachable

369:                                              ; preds = %358
  br label %370

370:                                              ; preds = %369
  br label %371

371:                                              ; preds = %370
  br label %372

372:                                              ; preds = %371
  %373 = load %3*, %3** %5, align 8
  %374 = getelementptr inbounds %3, %3* %373, i32 0, i32 0
  %375 = bitcast %4* %374 to %7**
  %376 = load %7*, %7** %375, align 8
  %377 = call i32 @php_file_le_stream()
  %378 = call i32 @php_file_le_pstream()
  %379 = call i8* @zend_fetch_resource2(%7* %376, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %377, i32 %378)
  %380 = bitcast i8* %379 to %53*
  store %53* %380, %53** %8, align 8
  %381 = icmp eq %53* %380, null
  br i1 %381, label %382, label %389

382:                                              ; preds = %372
  br label %383

383:                                              ; preds = %382
  %384 = load %3*, %3** %4, align 8
  %385 = getelementptr inbounds %3, %3* %384, i32 0, i32 1
  %386 = bitcast %5* %385 to i32*
  store i32 2, i32* %386, align 8
  br label %387

387:                                              ; preds = %383
  br label %388

388:                                              ; preds = %387
  store i32 1, i32* %22, align 4
  br label %471

389:                                              ; preds = %372
  br label %390

390:                                              ; preds = %389
  br label %391

391:                                              ; preds = %390
  %392 = load i64, i64* %9, align 8
  %393 = and i64 %392, 3
  %394 = trunc i64 %393 to i32
  store i32 %394, i32* %7, align 4
  %395 = load i32, i32* %7, align 4
  %396 = icmp slt i32 %395, 1
  br i1 %396, label %400, label %397

397:                                              ; preds = %391
  %398 = load i32, i32* %7, align 4
  %399 = icmp sgt i32 %398, 3
  br i1 %399, label %400, label %407

400:                                              ; preds = %397, %391
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @77, i32 0, i32 0))
  br label %401

401:                                              ; preds = %400
  %402 = load %3*, %3** %4, align 8
  %403 = getelementptr inbounds %3, %3* %402, i32 0, i32 1
  %404 = bitcast %5* %403 to i32*
  store i32 2, i32* %404, align 8
  br label %405

405:                                              ; preds = %401
  br label %406

406:                                              ; preds = %405
  store i32 1, i32* %22, align 4
  br label %471

407:                                              ; preds = %397
  %408 = load %3*, %3** %6, align 8
  %409 = icmp ne %3* %408, null
  br i1 %409, label %410, label %421

410:                                              ; preds = %407
  %411 = load %3*, %3** %6, align 8
  call void @_zval_ptr_dtor(%3* %411)
  %412 = bitcast %3** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %412) #11
  %413 = load %3*, %3** %6, align 8
  store %3* %413, %3** %23, align 8
  %414 = load %3*, %3** %23, align 8
  %415 = getelementptr inbounds %3, %3* %414, i32 0, i32 0
  %416 = bitcast %4* %415 to i64*
  store i64 0, i64* %416, align 8
  %417 = load %3*, %3** %23, align 8
  %418 = getelementptr inbounds %3, %3* %417, i32 0, i32 1
  %419 = bitcast %5* %418 to i32*
  store i32 4, i32* %419, align 8
  %420 = bitcast %3** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %420) #11
  br label %421

421:                                              ; preds = %410, %407
  %422 = load i32, i32* %7, align 4
  %423 = sub nsw i32 %422, 1
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds [3 x i32], [3 x i32]* @78, i64 0, i64 %424
  %426 = load i32, i32* %425, align 4
  %427 = load i64, i64* %9, align 8
  %428 = and i64 %427, 4
  %429 = icmp ne i64 %428, 0
  %430 = zext i1 %429 to i64
  %431 = select i1 %429, i32 4, i32 0
  %432 = or i32 %426, %431
  store i32 %432, i32* %7, align 4
  %433 = load %53*, %53** %8, align 8
  %434 = load i32, i32* %7, align 4
  %435 = call i32 @_php_stream_set_option(%53* %433, i32 6, i32 %434, i8* null)
  %436 = icmp ne i32 %435, 0
  br i1 %436, label %437, label %464

437:                                              ; preds = %421
  %438 = load i64, i64* %9, align 8
  %439 = icmp ne i64 %438, 0
  br i1 %439, label %440, label %457

440:                                              ; preds = %437
  %441 = call i32* @__errno_location() #12
  %442 = load i32, i32* %441, align 4
  %443 = icmp eq i32 %442, 11
  br i1 %443, label %444, label %457

444:                                              ; preds = %440
  %445 = load %3*, %3** %6, align 8
  %446 = icmp ne %3* %445, null
  br i1 %446, label %447, label %457

447:                                              ; preds = %444
  %448 = bitcast %3** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %448) #11
  %449 = load %3*, %3** %6, align 8
  store %3* %449, %3** %24, align 8
  %450 = load %3*, %3** %24, align 8
  %451 = getelementptr inbounds %3, %3* %450, i32 0, i32 0
  %452 = bitcast %4* %451 to i64*
  store i64 1, i64* %452, align 8
  %453 = load %3*, %3** %24, align 8
  %454 = getelementptr inbounds %3, %3* %453, i32 0, i32 1
  %455 = bitcast %5* %454 to i32*
  store i32 4, i32* %455, align 8
  %456 = bitcast %3** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %456) #11
  br label %457

457:                                              ; preds = %447, %444, %440, %437
  br label %458

458:                                              ; preds = %457
  %459 = load %3*, %3** %4, align 8
  %460 = getelementptr inbounds %3, %3* %459, i32 0, i32 1
  %461 = bitcast %5* %460 to i32*
  store i32 2, i32* %461, align 8
  br label %462

462:                                              ; preds = %458
  br label %463

463:                                              ; preds = %462
  store i32 1, i32* %22, align 4
  br label %471

464:                                              ; preds = %421
  br label %465

465:                                              ; preds = %464
  %466 = load %3*, %3** %4, align 8
  %467 = getelementptr inbounds %3, %3* %466, i32 0, i32 1
  %468 = bitcast %5* %467 to i32*
  store i32 3, i32* %468, align 8
  br label %469

469:                                              ; preds = %465
  br label %470

470:                                              ; preds = %469
  store i32 1, i32* %22, align 4
  br label %471

471:                                              ; preds = %470, %463, %406, %388, %343
  %472 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %472) #11
  %473 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %473) #11
  %474 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %474) #11
  %475 = bitcast %3** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %475) #11
  %476 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %476) #11
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind readnone willreturn
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local void @zend_wrong_parameters_count_error(i8 zeroext, i32, i32, i32) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @148(%3* %0, %3** %1, i32 %2) #4 {
  %4 = alloca i32, align 4
  %5 = alloca %3*, align 8
  %6 = alloca %3**, align 8
  %7 = alloca i32, align 4
  store %3* %0, %3** %5, align 8
  store %3** %1, %3*** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %3*, %3** %5, align 8
  %9 = call zeroext i8 @150(%3* %8)
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 9
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = call i64 @llvm.expect.i64(i64 %15, i64 1)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %3
  %19 = load %3*, %3** %5, align 8
  %20 = load %3**, %3*** %6, align 8
  store %3* %19, %3** %20, align 8
  br label %39

21:                                               ; preds = %3
  %22 = load i32, i32* %7, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = load %3*, %3** %5, align 8
  %26 = call zeroext i8 @150(%3* %25)
  %27 = zext i8 %26 to i32
  %28 = icmp eq i32 %27, 1
  %29 = xor i1 %28, true
  %30 = xor i1 %29, true
  %31 = zext i1 %30 to i32
  %32 = sext i32 %31 to i64
  %33 = call i64 @llvm.expect.i64(i64 %32, i64 1)
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %24
  %36 = load %3**, %3*** %6, align 8
  store %3* null, %3** %36, align 8
  br label %38

37:                                               ; preds = %24, %21
  store i32 0, i32* %4, align 4
  br label %40

38:                                               ; preds = %35
  br label %39

39:                                               ; preds = %38, %18
  store i32 1, i32* %4, align 4
  br label %40

40:                                               ; preds = %39, %37
  %41 = load i32, i32* %4, align 4
  ret i32 %41
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @149(%3* %0, i64* %1, i8* %2, i32 %3, i32 %4) #4 {
  %6 = alloca i32, align 4
  %7 = alloca %3*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %3* %0, %3** %7, align 8
  store i64* %1, i64** %8, align 8
  store i8* %2, i8** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %12 = load i32, i32* %10, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = load i8*, i8** %9, align 8
  store i8 0, i8* %15, align 1
  br label %16

16:                                               ; preds = %14, %5
  %17 = load %3*, %3** %7, align 8
  %18 = call zeroext i8 @150(%3* %17)
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 4
  %21 = xor i1 %20, true
  %22 = xor i1 %21, true
  %23 = zext i1 %22 to i32
  %24 = sext i32 %23 to i64
  %25 = call i64 @llvm.expect.i64(i64 %24, i64 1)
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %16
  %28 = load %3*, %3** %7, align 8
  %29 = getelementptr inbounds %3, %3* %28, i32 0, i32 0
  %30 = bitcast %4* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = load i64*, i64** %8, align 8
  store i64 %31, i64* %32, align 8
  br label %56

33:                                               ; preds = %16
  %34 = load i32, i32* %10, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %33
  %37 = load %3*, %3** %7, align 8
  %38 = call zeroext i8 @150(%3* %37)
  %39 = zext i8 %38 to i32
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = load i8*, i8** %9, align 8
  store i8 1, i8* %42, align 1
  %43 = load i64*, i64** %8, align 8
  store i64 0, i64* %43, align 8
  br label %55

44:                                               ; preds = %36, %33
  %45 = load i32, i32* %11, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = load %3*, %3** %7, align 8
  %49 = load i64*, i64** %8, align 8
  %50 = call i32 @zend_parse_arg_long_cap_slow(%3* %48, i64* %49)
  store i32 %50, i32* %6, align 4
  br label %57

51:                                               ; preds = %44
  %52 = load %3*, %3** %7, align 8
  %53 = load i64*, i64** %8, align 8
  %54 = call i32 @zend_parse_arg_long_slow(%3* %52, i64* %53)
  store i32 %54, i32* %6, align 4
  br label %57

55:                                               ; preds = %41
  br label %56

56:                                               ; preds = %55, %27
  store i32 1, i32* %6, align 4
  br label %57

57:                                               ; preds = %56, %51, %47
  %58 = load i32, i32* %6, align 4
  ret i32 %58
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i8 @150(%3* %0) #4 {
  %2 = alloca %3*, align 8
  store %3* %0, %3** %2, align 8
  %3 = load %3*, %3** %2, align 8
  %4 = getelementptr inbounds %3, %3* %3, i32 0, i32 1
  %5 = bitcast %5* %4 to %65*
  %6 = getelementptr inbounds %65, %65* %5, i32 0, i32 0
  %7 = load i8, i8* %6, align 8
  ret i8 %7
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @151(%3* %0, %3** %1, i32 %2) #4 {
  %4 = alloca %3*, align 8
  %5 = alloca %3**, align 8
  %6 = alloca i32, align 4
  store %3* %0, %3** %4, align 8
  store %3** %1, %3*** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %3
  %10 = load %3*, %3** %4, align 8
  %11 = call zeroext i8 @150(%3* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 1
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = call i64 @llvm.expect.i64(i64 %17, i64 0)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %9
  br label %23

21:                                               ; preds = %9, %3
  %22 = load %3*, %3** %4, align 8
  br label %23

23:                                               ; preds = %21, %20
  %24 = phi %3* [ null, %20 ], [ %22, %21 ]
  %25 = load %3**, %3*** %5, align 8
  store %3* %24, %3** %25, align 8
  ret void
}

declare dso_local void @zend_wrong_callback_error(i8 zeroext, i32, i32, i8*) #1

declare dso_local void @zend_wrong_parameter_class_error(i8 zeroext, i32, i8*, %3*) #1

declare dso_local void @zend_wrong_parameter_type_error(i8 zeroext, i32, i32, %3*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dso_local i8* @zend_fetch_resource2(%7*, i8*, i32, i32) #1

declare dso_local i32 @php_file_le_stream() #1

declare dso_local i32 @php_file_le_pstream() #1

declare dso_local void @php_error_docref0(i8*, i32, i8*, ...) #1

declare dso_local void @_zval_ptr_dtor(%3*) #1

declare dso_local i32 @_php_stream_set_option(%53*, i32, i32, i8*) #1

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #5

; Function Attrs: nounwind uwtable
define hidden void @zif_get_meta_tags(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %66, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %3*, align 8
  %27 = alloca %3*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i8*, align 8
  %30 = alloca i8, align 1
  %31 = alloca i8, align 1
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %34 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  %35 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #11
  store i8 0, i8* %7, align 1
  %36 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  store i32 0, i32* %8, align 4
  %37 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 0, i32* %9, align 4
  %38 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  store i32 0, i32* %10, align 4
  %39 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #11
  store i32 0, i32* %11, align 4
  %40 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #11
  store i32 0, i32* %12, align 4
  %41 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #11
  store i32 0, i32* %13, align 4
  %42 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  store i32 0, i32* %14, align 4
  %43 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #11
  store i8* null, i8** %15, align 8
  %44 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #11
  store i8* null, i8** %16, align 8
  %45 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #11
  store i8* null, i8** %17, align 8
  %46 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #11
  %47 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  %48 = bitcast %66* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %48) #11
  %49 = bitcast %66* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 40, i1 false)
  br label %50

50:                                               ; preds = %2
  %51 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #11
  store i32 0, i32* %21, align 4
  %52 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #11
  store i32 1, i32* %22, align 4
  %53 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #11
  store i32 2, i32* %23, align 4
  %54 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #11
  %55 = load %28*, %28** %3, align 8
  %56 = getelementptr inbounds %28, %28* %55, i32 0, i32 4
  %57 = getelementptr inbounds %3, %3* %56, i32 0, i32 2
  %58 = bitcast %6* %57 to i32*
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %24, align 4
  %60 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #11
  %61 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #11
  %62 = bitcast %3** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #11
  store %3* null, %3** %27, align 8
  %63 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %63) #11
  store i32 0, i32* %28, align 4
  %64 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %64) #11
  store i8* null, i8** %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %30) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %31) #11
  store i8 0, i8* %31, align 1
  %65 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %65) #11
  store i32 0, i32* %32, align 4
  %66 = load i32, i32* %25, align 4
  %67 = load %3*, %3** %26, align 8
  %68 = load %3*, %3** %27, align 8
  %69 = load i32, i32* %28, align 4
  %70 = load i8*, i8** %29, align 8
  %71 = load i8, i8* %30, align 1
  %72 = load i8, i8* %31, align 1
  br label %73

73:                                               ; preds = %50
  %74 = load i32, i32* %24, align 4
  %75 = load i32, i32* %22, align 4
  %76 = icmp slt i32 %74, %75
  %77 = xor i1 %76, true
  %78 = xor i1 %77, true
  %79 = zext i1 %78 to i32
  %80 = sext i32 %79 to i64
  %81 = call i64 @llvm.expect.i64(i64 %80, i64 0)
  %82 = icmp ne i64 %81, 0
  br i1 %82, label %102, label %83

83:                                               ; preds = %73
  %84 = load i32, i32* %24, align 4
  %85 = load i32, i32* %23, align 4
  %86 = icmp sgt i32 %84, %85
  %87 = xor i1 %86, true
  %88 = xor i1 %87, true
  %89 = zext i1 %88 to i32
  %90 = sext i32 %89 to i64
  %91 = call i64 @llvm.expect.i64(i64 %90, i64 0)
  %92 = icmp ne i64 %91, 0
  br i1 %92, label %93, label %106

93:                                               ; preds = %83
  %94 = load i32, i32* %23, align 4
  %95 = icmp sge i32 %94, 0
  %96 = xor i1 %95, true
  %97 = xor i1 %96, true
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = call i64 @llvm.expect.i64(i64 %99, i64 1)
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %93, %73
  %103 = load i32, i32* %24, align 4
  %104 = load i32, i32* %22, align 4
  %105 = load i32, i32* %23, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %103, i32 %104, i32 %105)
  store i32 1, i32* %32, align 4
  br label %251

106:                                              ; preds = %93, %83
  store i32 0, i32* %25, align 4
  %107 = load %28*, %28** %3, align 8
  %108 = bitcast %28* %107 to %3*
  %109 = getelementptr inbounds %3, %3* %108, i64 4
  store %3* %109, %3** %26, align 8
  %110 = load i32, i32* %25, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %25, align 4
  br label %112

112:                                              ; preds = %106
  %113 = load i32, i32* %25, align 4
  %114 = load i32, i32* %22, align 4
  %115 = icmp sle i32 %113, %114
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load i8, i8* %31, align 1
  %118 = zext i8 %117 to i32
  %119 = icmp eq i32 %118, 1
  br label %120

120:                                              ; preds = %116, %112
  %121 = phi i1 [ true, %112 ], [ %119, %116 ]
  %122 = xor i1 %121, true
  %123 = zext i1 %122 to i32
  %124 = sext i32 %123 to i64
  %125 = call i64 @llvm.expect.i64(i64 %124, i64 0)
  %126 = icmp ne i64 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %120
  unreachable

128:                                              ; preds = %120
  br label %129

129:                                              ; preds = %128
  br label %130

130:                                              ; preds = %129
  br label %131

131:                                              ; preds = %130
  %132 = load i32, i32* %25, align 4
  %133 = load i32, i32* %22, align 4
  %134 = icmp sgt i32 %132, %133
  br i1 %134, label %139, label %135

135:                                              ; preds = %131
  %136 = load i8, i8* %31, align 1
  %137 = zext i8 %136 to i32
  %138 = icmp eq i32 %137, 0
  br label %139

139:                                              ; preds = %135, %131
  %140 = phi i1 [ true, %131 ], [ %138, %135 ]
  %141 = xor i1 %140, true
  %142 = zext i1 %141 to i32
  %143 = sext i32 %142 to i64
  %144 = call i64 @llvm.expect.i64(i64 %143, i64 0)
  %145 = icmp ne i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %139
  unreachable

147:                                              ; preds = %139
  br label %148

148:                                              ; preds = %147
  br label %149

149:                                              ; preds = %148
  %150 = load i8, i8* %31, align 1
  %151 = icmp ne i8 %150, 0
  br i1 %151, label %152, label %164

152:                                              ; preds = %149
  %153 = load i32, i32* %25, align 4
  %154 = load i32, i32* %24, align 4
  %155 = icmp sgt i32 %153, %154
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %152
  br label %251

163:                                              ; preds = %152
  br label %164

164:                                              ; preds = %163, %149
  %165 = load %3*, %3** %26, align 8
  %166 = getelementptr inbounds %3, %3* %165, i32 1
  store %3* %166, %3** %26, align 8
  %167 = load %3*, %3** %26, align 8
  store %3* %167, %3** %27, align 8
  %168 = load %3*, %3** %27, align 8
  %169 = call i32 @152(%3* %168, i8** %5, i64* %6, i32 0)
  %170 = icmp ne i32 %169, 0
  %171 = xor i1 %170, true
  %172 = xor i1 %171, true
  %173 = xor i1 %172, true
  %174 = zext i1 %173 to i32
  %175 = sext i32 %174 to i64
  %176 = call i64 @llvm.expect.i64(i64 %175, i64 0)
  %177 = icmp ne i64 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %164
  store i32 6, i32* %28, align 4
  store i32 4, i32* %32, align 4
  br label %251

179:                                              ; preds = %164
  store i8 1, i8* %31, align 1
  %180 = load i32, i32* %25, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %25, align 4
  br label %182

182:                                              ; preds = %179
  %183 = load i32, i32* %25, align 4
  %184 = load i32, i32* %22, align 4
  %185 = icmp sle i32 %183, %184
  br i1 %185, label %190, label %186

186:                                              ; preds = %182
  %187 = load i8, i8* %31, align 1
  %188 = zext i8 %187 to i32
  %189 = icmp eq i32 %188, 1
  br label %190

190:                                              ; preds = %186, %182
  %191 = phi i1 [ true, %182 ], [ %189, %186 ]
  %192 = xor i1 %191, true
  %193 = zext i1 %192 to i32
  %194 = sext i32 %193 to i64
  %195 = call i64 @llvm.expect.i64(i64 %194, i64 0)
  %196 = icmp ne i64 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %190
  unreachable

198:                                              ; preds = %190
  br label %199

199:                                              ; preds = %198
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  %202 = load i32, i32* %25, align 4
  %203 = load i32, i32* %22, align 4
  %204 = icmp sgt i32 %202, %203
  br i1 %204, label %209, label %205

205:                                              ; preds = %201
  %206 = load i8, i8* %31, align 1
  %207 = zext i8 %206 to i32
  %208 = icmp eq i32 %207, 0
  br label %209

209:                                              ; preds = %205, %201
  %210 = phi i1 [ true, %201 ], [ %208, %205 ]
  %211 = xor i1 %210, true
  %212 = zext i1 %211 to i32
  %213 = sext i32 %212 to i64
  %214 = call i64 @llvm.expect.i64(i64 %213, i64 0)
  %215 = icmp ne i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %209
  unreachable

217:                                              ; preds = %209
  br label %218

218:                                              ; preds = %217
  br label %219

219:                                              ; preds = %218
  %220 = load i8, i8* %31, align 1
  %221 = icmp ne i8 %220, 0
  br i1 %221, label %222, label %234

222:                                              ; preds = %219
  %223 = load i32, i32* %25, align 4
  %224 = load i32, i32* %24, align 4
  %225 = icmp sgt i32 %223, %224
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = zext i1 %227 to i32
  %229 = sext i32 %228 to i64
  %230 = call i64 @llvm.expect.i64(i64 %229, i64 0)
  %231 = icmp ne i64 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %222
  br label %251

233:                                              ; preds = %222
  br label %234

234:                                              ; preds = %233, %219
  %235 = load %3*, %3** %26, align 8
  %236 = getelementptr inbounds %3, %3* %235, i32 1
  store %3* %236, %3** %26, align 8
  %237 = load %3*, %3** %26, align 8
  store %3* %237, %3** %27, align 8
  %238 = load %3*, %3** %27, align 8
  %239 = call i32 @153(%3* %238, i8* %7, i8* %30, i32 0)
  %240 = icmp ne i32 %239, 0
  %241 = xor i1 %240, true
  %242 = xor i1 %241, true
  %243 = xor i1 %242, true
  %244 = zext i1 %243 to i32
  %245 = sext i32 %244 to i64
  %246 = call i64 @llvm.expect.i64(i64 %245, i64 0)
  %247 = icmp ne i64 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %234
  store i32 1, i32* %28, align 4
  store i32 4, i32* %32, align 4
  br label %251

249:                                              ; preds = %234
  br label %250

250:                                              ; preds = %249
  br label %251

251:                                              ; preds = %250, %248, %232, %178, %162, %102
  %252 = load i32, i32* %32, align 4
  %253 = icmp ne i32 %252, 0
  %254 = xor i1 %253, true
  %255 = xor i1 %254, true
  %256 = zext i1 %255 to i32
  %257 = sext i32 %256 to i64
  %258 = call i64 @llvm.expect.i64(i64 %257, i64 0)
  %259 = icmp ne i64 %258, 0
  br i1 %259, label %260, label %283

260:                                              ; preds = %251
  %261 = load i32, i32* %32, align 4
  %262 = icmp eq i32 %261, 2
  br i1 %262, label %263, label %266

263:                                              ; preds = %260
  %264 = load i32, i32* %25, align 4
  %265 = load i8*, i8** %29, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %264, i8* %265)
  br label %282

266:                                              ; preds = %260
  %267 = load i32, i32* %32, align 4
  %268 = icmp eq i32 %267, 3
  br i1 %268, label %269, label %273

269:                                              ; preds = %266
  %270 = load i32, i32* %25, align 4
  %271 = load i8*, i8** %29, align 8
  %272 = load %3*, %3** %27, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %270, i8* %271, %3* %272)
  br label %281

273:                                              ; preds = %266
  %274 = load i32, i32* %32, align 4
  %275 = icmp eq i32 %274, 4
  br i1 %275, label %276, label %280

276:                                              ; preds = %273
  %277 = load i32, i32* %25, align 4
  %278 = load i32, i32* %28, align 4
  %279 = load %3*, %3** %27, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %277, i32 %278, %3* %279)
  br label %280

280:                                              ; preds = %276, %273
  br label %281

281:                                              ; preds = %280, %269
  br label %282

282:                                              ; preds = %281, %263
  store i32 1, i32* %33, align 4
  br label %284

283:                                              ; preds = %251
  store i32 0, i32* %33, align 4
  br label %284

284:                                              ; preds = %283, %282
  %285 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %285) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %31) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %30) #11
  %286 = bitcast i8** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %286) #11
  %287 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %287) #11
  %288 = bitcast %3** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %288) #11
  %289 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %289) #11
  %290 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %290) #11
  %291 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %291) #11
  %292 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %292) #11
  %293 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %293) #11
  %294 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %294) #11
  %295 = load i32, i32* %33, align 4
  switch i32 %295, label %577 [
    i32 0, label %296
  ]

296:                                              ; preds = %284
  br label %297

297:                                              ; preds = %296
  br label %298

298:                                              ; preds = %297
  %299 = load i8*, i8** %5, align 8
  %300 = load i8, i8* %7, align 1
  %301 = zext i8 %300 to i32
  %302 = icmp ne i32 %301, 0
  %303 = zext i1 %302 to i64
  %304 = select i1 %302, i32 1, i32 0
  %305 = or i32 %304, 8
  %306 = call %53* @_php_stream_open_wrapper_ex(i8* %299, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @79, i32 0, i32 0), i32 %305, %13** null, %1* null)
  %307 = getelementptr inbounds %66, %66* %20, i32 0, i32 0
  store %53* %306, %53** %307, align 8
  %308 = getelementptr inbounds %66, %66* %20, i32 0, i32 0
  %309 = load %53*, %53** %308, align 8
  %310 = icmp ne %53* %309, null
  br i1 %310, label %318, label %311

311:                                              ; preds = %298
  br label %312

312:                                              ; preds = %311
  %313 = load %3*, %3** %4, align 8
  %314 = getelementptr inbounds %3, %3* %313, i32 0, i32 1
  %315 = bitcast %5* %314 to i32*
  store i32 2, i32* %315, align 8
  br label %316

316:                                              ; preds = %312
  br label %317

317:                                              ; preds = %316
  store i32 1, i32* %33, align 4
  br label %577

318:                                              ; preds = %298
  %319 = load %3*, %3** %4, align 8
  %320 = call i32 @_array_init(%3* %319, i32 0)
  store i32 0, i32* %19, align 4
  br label %321

321:                                              ; preds = %561, %318
  %322 = load i32, i32* %9, align 4
  %323 = icmp ne i32 %322, 0
  br i1 %323, label %327, label %324

324:                                              ; preds = %321
  %325 = call i32 @php_next_meta_token(%66* %20)
  store i32 %325, i32* %18, align 4
  %326 = icmp ne i32 %325, 0
  br label %327

327:                                              ; preds = %324, %321
  %328 = phi i1 [ false, %321 ], [ %326, %324 ]
  br i1 %328, label %329, label %563

329:                                              ; preds = %327
  %330 = load i32, i32* %18, align 4
  %331 = icmp eq i32 %330, 6
  br i1 %331, label %332, label %438

332:                                              ; preds = %329
  %333 = load i32, i32* %19, align 4
  %334 = icmp eq i32 %333, 1
  br i1 %334, label %335, label %343

335:                                              ; preds = %332
  %336 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %337 = load i8*, i8** %336, align 8
  %338 = call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @80, i32 0, i32 0), i8* %337) #13
  %339 = icmp ne i32 %338, 0
  %340 = xor i1 %339, true
  %341 = zext i1 %340 to i32
  %342 = getelementptr inbounds %66, %66* %20, i32 0, i32 6
  store i32 %341, i32* %342, align 4
  br label %437

343:                                              ; preds = %332
  %344 = load i32, i32* %19, align 4
  %345 = icmp eq i32 %344, 3
  br i1 %345, label %346, label %356

346:                                              ; preds = %343
  %347 = load i32, i32* %8, align 4
  %348 = icmp ne i32 %347, 0
  br i1 %348, label %349, label %356

349:                                              ; preds = %346
  %350 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %351 = load i8*, i8** %350, align 8
  %352 = call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @81, i32 0, i32 0), i8* %351) #13
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %349
  store i32 1, i32* %9, align 4
  br label %355

355:                                              ; preds = %354, %349
  br label %436

356:                                              ; preds = %346, %343
  %357 = load i32, i32* %19, align 4
  %358 = icmp eq i32 %357, 4
  br i1 %358, label %359, label %416

359:                                              ; preds = %356
  %360 = load i32, i32* %10, align 4
  %361 = icmp ne i32 %360, 0
  br i1 %361, label %362, label %416

362:                                              ; preds = %359
  %363 = load i32, i32* %13, align 4
  %364 = icmp ne i32 %363, 0
  br i1 %364, label %365, label %399

365:                                              ; preds = %362
  %366 = load i8*, i8** %15, align 8
  %367 = icmp ne i8* %366, null
  br i1 %367, label %368, label %370

368:                                              ; preds = %365
  %369 = load i8*, i8** %15, align 8
  call void @_efree(i8* %369)
  br label %370

370:                                              ; preds = %368, %365
  %371 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %372 = load i8*, i8** %371, align 8
  %373 = getelementptr inbounds %66, %66* %20, i32 0, i32 5
  %374 = load i32, i32* %373, align 8
  %375 = sext i32 %374 to i64
  %376 = call noalias i8* @_estrndup(i8* %372, i64 %375)
  store i8* %376, i8** %15, align 8
  store i8* %376, i8** %17, align 8
  br label %377

377:                                              ; preds = %395, %370
  %378 = load i8*, i8** %17, align 8
  %379 = icmp ne i8* %378, null
  br i1 %379, label %380, label %385

380:                                              ; preds = %377
  %381 = load i8*, i8** %17, align 8
  %382 = load i8, i8* %381, align 1
  %383 = sext i8 %382 to i32
  %384 = icmp ne i32 %383, 0
  br label %385

385:                                              ; preds = %380, %377
  %386 = phi i1 [ false, %377 ], [ %384, %380 ]
  br i1 %386, label %387, label %398

387:                                              ; preds = %385
  %388 = load i8*, i8** %17, align 8
  %389 = load i8, i8* %388, align 1
  %390 = sext i8 %389 to i32
  %391 = call i8* @strchr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @82, i32 0, i32 0), i32 %390) #13
  %392 = icmp ne i8* %391, null
  br i1 %392, label %393, label %395

393:                                              ; preds = %387
  %394 = load i8*, i8** %17, align 8
  store i8 95, i8* %394, align 1
  br label %395

395:                                              ; preds = %393, %387
  %396 = load i8*, i8** %17, align 8
  %397 = getelementptr inbounds i8, i8* %396, i32 1
  store i8* %397, i8** %17, align 8
  br label %377

398:                                              ; preds = %385
  store i32 1, i32* %11, align 4
  br label %415

399:                                              ; preds = %362
  %400 = load i32, i32* %14, align 4
  %401 = icmp ne i32 %400, 0
  br i1 %401, label %402, label %414

402:                                              ; preds = %399
  %403 = load i8*, i8** %16, align 8
  %404 = icmp ne i8* %403, null
  br i1 %404, label %405, label %407

405:                                              ; preds = %402
  %406 = load i8*, i8** %16, align 8
  call void @_efree(i8* %406)
  br label %407

407:                                              ; preds = %405, %402
  %408 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %409 = load i8*, i8** %408, align 8
  %410 = getelementptr inbounds %66, %66* %20, i32 0, i32 5
  %411 = load i32, i32* %410, align 8
  %412 = sext i32 %411 to i64
  %413 = call noalias i8* @_estrndup(i8* %409, i64 %412)
  store i8* %413, i8** %16, align 8
  store i32 1, i32* %12, align 4
  br label %414

414:                                              ; preds = %407, %399
  br label %415

415:                                              ; preds = %414, %398
  store i32 0, i32* %10, align 4
  br label %435

416:                                              ; preds = %359, %356
  %417 = getelementptr inbounds %66, %66* %20, i32 0, i32 6
  %418 = load i32, i32* %417, align 4
  %419 = icmp ne i32 %418, 0
  br i1 %419, label %420, label %434

420:                                              ; preds = %416
  %421 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %422 = load i8*, i8** %421, align 8
  %423 = call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @83, i32 0, i32 0), i8* %422) #13
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %420
  store i32 1, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i32 1, i32* %10, align 4
  br label %433

426:                                              ; preds = %420
  %427 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %428 = load i8*, i8** %427, align 8
  %429 = call i32 @strcasecmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @84, i32 0, i32 0), i8* %428) #13
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %426
  store i32 0, i32* %13, align 4
  store i32 1, i32* %14, align 4
  store i32 1, i32* %10, align 4
  br label %432

432:                                              ; preds = %431, %426
  br label %433

433:                                              ; preds = %432, %425
  br label %434

434:                                              ; preds = %433, %416
  br label %435

435:                                              ; preds = %434, %415
  br label %436

436:                                              ; preds = %435, %355
  br label %437

437:                                              ; preds = %436, %335
  br label %553

438:                                              ; preds = %329
  %439 = load i32, i32* %18, align 4
  %440 = icmp eq i32 %439, 7
  br i1 %440, label %441, label %501

441:                                              ; preds = %438
  %442 = load i32, i32* %19, align 4
  %443 = icmp eq i32 %442, 4
  br i1 %443, label %444, label %501

444:                                              ; preds = %441
  %445 = load i32, i32* %10, align 4
  %446 = icmp ne i32 %445, 0
  br i1 %446, label %447, label %501

447:                                              ; preds = %444
  %448 = load i32, i32* %13, align 4
  %449 = icmp ne i32 %448, 0
  br i1 %449, label %450, label %484

450:                                              ; preds = %447
  %451 = load i8*, i8** %15, align 8
  %452 = icmp ne i8* %451, null
  br i1 %452, label %453, label %455

453:                                              ; preds = %450
  %454 = load i8*, i8** %15, align 8
  call void @_efree(i8* %454)
  br label %455

455:                                              ; preds = %453, %450
  %456 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %457 = load i8*, i8** %456, align 8
  %458 = getelementptr inbounds %66, %66* %20, i32 0, i32 5
  %459 = load i32, i32* %458, align 8
  %460 = sext i32 %459 to i64
  %461 = call noalias i8* @_estrndup(i8* %457, i64 %460)
  store i8* %461, i8** %15, align 8
  store i8* %461, i8** %17, align 8
  br label %462

462:                                              ; preds = %480, %455
  %463 = load i8*, i8** %17, align 8
  %464 = icmp ne i8* %463, null
  br i1 %464, label %465, label %470

465:                                              ; preds = %462
  %466 = load i8*, i8** %17, align 8
  %467 = load i8, i8* %466, align 1
  %468 = sext i8 %467 to i32
  %469 = icmp ne i32 %468, 0
  br label %470

470:                                              ; preds = %465, %462
  %471 = phi i1 [ false, %462 ], [ %469, %465 ]
  br i1 %471, label %472, label %483

472:                                              ; preds = %470
  %473 = load i8*, i8** %17, align 8
  %474 = load i8, i8* %473, align 1
  %475 = sext i8 %474 to i32
  %476 = call i8* @strchr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @82, i32 0, i32 0), i32 %475) #13
  %477 = icmp ne i8* %476, null
  br i1 %477, label %478, label %480

478:                                              ; preds = %472
  %479 = load i8*, i8** %17, align 8
  store i8 95, i8* %479, align 1
  br label %480

480:                                              ; preds = %478, %472
  %481 = load i8*, i8** %17, align 8
  %482 = getelementptr inbounds i8, i8* %481, i32 1
  store i8* %482, i8** %17, align 8
  br label %462

483:                                              ; preds = %470
  store i32 1, i32* %11, align 4
  br label %500

484:                                              ; preds = %447
  %485 = load i32, i32* %14, align 4
  %486 = icmp ne i32 %485, 0
  br i1 %486, label %487, label %499

487:                                              ; preds = %484
  %488 = load i8*, i8** %16, align 8
  %489 = icmp ne i8* %488, null
  br i1 %489, label %490, label %492

490:                                              ; preds = %487
  %491 = load i8*, i8** %16, align 8
  call void @_efree(i8* %491)
  br label %492

492:                                              ; preds = %490, %487
  %493 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %494 = load i8*, i8** %493, align 8
  %495 = getelementptr inbounds %66, %66* %20, i32 0, i32 5
  %496 = load i32, i32* %495, align 8
  %497 = sext i32 %496 to i64
  %498 = call noalias i8* @_estrndup(i8* %494, i64 %497)
  store i8* %498, i8** %16, align 8
  store i32 1, i32* %12, align 4
  br label %499

499:                                              ; preds = %492, %484
  br label %500

500:                                              ; preds = %499, %483
  store i32 0, i32* %10, align 4
  br label %552

501:                                              ; preds = %444, %441, %438
  %502 = load i32, i32* %18, align 4
  %503 = icmp eq i32 %502, 1
  br i1 %503, label %504, label %509

504:                                              ; preds = %501
  %505 = load i32, i32* %10, align 4
  %506 = icmp ne i32 %505, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %504
  store i32 0, i32* %10, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %12, align 4
  br label %508

508:                                              ; preds = %507, %504
  store i32 1, i32* %8, align 4
  br label %551

509:                                              ; preds = %501
  %510 = load i32, i32* %18, align 4
  %511 = icmp eq i32 %510, 2
  br i1 %511, label %512, label %550

512:                                              ; preds = %509
  %513 = load i32, i32* %11, align 4
  %514 = icmp ne i32 %513, 0
  br i1 %514, label %515, label %542

515:                                              ; preds = %512
  %516 = load i8*, i8** %15, align 8
  %517 = load i8*, i8** %15, align 8
  %518 = call i64 @strlen(i8* %517) #13
  %519 = call i8* @php_strtolower(i8* %516, i64 %518)
  %520 = load i32, i32* %12, align 4
  %521 = icmp ne i32 %520, 0
  br i1 %521, label %522, label %529

522:                                              ; preds = %515
  %523 = load %3*, %3** %4, align 8
  %524 = load i8*, i8** %15, align 8
  %525 = load i8*, i8** %15, align 8
  %526 = call i64 @strlen(i8* %525) #13
  %527 = load i8*, i8** %16, align 8
  %528 = call i32 @add_assoc_string_ex(%3* %523, i8* %524, i64 %526, i8* %527)
  br label %535

529:                                              ; preds = %515
  %530 = load %3*, %3** %4, align 8
  %531 = load i8*, i8** %15, align 8
  %532 = load i8*, i8** %15, align 8
  %533 = call i64 @strlen(i8* %532) #13
  %534 = call i32 @add_assoc_string_ex(%3* %530, i8* %531, i64 %533, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @85, i32 0, i32 0))
  br label %535

535:                                              ; preds = %529, %522
  %536 = load i8*, i8** %15, align 8
  call void @_efree(i8* %536)
  %537 = load i8*, i8** %16, align 8
  %538 = icmp ne i8* %537, null
  br i1 %538, label %539, label %541

539:                                              ; preds = %535
  %540 = load i8*, i8** %16, align 8
  call void @_efree(i8* %540)
  br label %541

541:                                              ; preds = %539, %535
  br label %548

542:                                              ; preds = %512
  %543 = load i32, i32* %12, align 4
  %544 = icmp ne i32 %543, 0
  br i1 %544, label %545, label %547

545:                                              ; preds = %542
  %546 = load i8*, i8** %16, align 8
  call void @_efree(i8* %546)
  br label %547

547:                                              ; preds = %545, %542
  br label %548

548:                                              ; preds = %547, %541
  store i8* null, i8** %16, align 8
  store i8* null, i8** %15, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %12, align 4
  %549 = getelementptr inbounds %66, %66* %20, i32 0, i32 6
  store i32 0, i32* %549, align 4
  br label %550

550:                                              ; preds = %548, %509
  br label %551

551:                                              ; preds = %550, %508
  br label %552

552:                                              ; preds = %551, %500
  br label %553

553:                                              ; preds = %552, %437
  %554 = load i32, i32* %18, align 4
  store i32 %554, i32* %19, align 4
  %555 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %556 = load i8*, i8** %555, align 8
  %557 = icmp ne i8* %556, null
  br i1 %557, label %558, label %561

558:                                              ; preds = %553
  %559 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  %560 = load i8*, i8** %559, align 8
  call void @_efree(i8* %560)
  br label %561

561:                                              ; preds = %558, %553
  %562 = getelementptr inbounds %66, %66* %20, i32 0, i32 4
  store i8* null, i8** %562, align 8
  br label %321

563:                                              ; preds = %327
  %564 = load i8*, i8** %16, align 8
  %565 = icmp ne i8* %564, null
  br i1 %565, label %566, label %568

566:                                              ; preds = %563
  %567 = load i8*, i8** %16, align 8
  call void @_efree(i8* %567)
  br label %568

568:                                              ; preds = %566, %563
  %569 = load i8*, i8** %15, align 8
  %570 = icmp ne i8* %569, null
  br i1 %570, label %571, label %573

571:                                              ; preds = %568
  %572 = load i8*, i8** %15, align 8
  call void @_efree(i8* %572)
  br label %573

573:                                              ; preds = %571, %568
  %574 = getelementptr inbounds %66, %66* %20, i32 0, i32 0
  %575 = load %53*, %53** %574, align 8
  %576 = call i32 @_php_stream_free(%53* %575, i32 3)
  store i32 0, i32* %33, align 4
  br label %577

577:                                              ; preds = %573, %317, %284
  %578 = bitcast %66* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %578) #11
  %579 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %579) #11
  %580 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %580) #11
  %581 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %581) #11
  %582 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %582) #11
  %583 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %583) #11
  %584 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %584) #11
  %585 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %585) #11
  %586 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %586) #11
  %587 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %587) #11
  %588 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %588) #11
  %589 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %589) #11
  %590 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %590) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #11
  %591 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %591) #11
  %592 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %592) #11
  %593 = load i32, i32* %33, align 4
  switch i32 %593, label %595 [
    i32 0, label %594
    i32 1, label %594
  ]

594:                                              ; preds = %577, %577
  ret void

595:                                              ; preds = %577
  unreachable
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @152(%3* %0, i8** %1, i64* %2, i32 %3) #4 {
  %5 = alloca i32, align 4
  %6 = alloca %3*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %13*, align 8
  %11 = alloca i32, align 4
  store %3* %0, %3** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  %12 = bitcast %13** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #11
  %13 = load %3*, %3** %6, align 8
  %14 = load i32, i32* %9, align 4
  %15 = call i32 @171(%3* %13, %13** %10, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

18:                                               ; preds = %4
  %19 = load i32, i32* %9, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = load %13*, %13** %10, align 8
  %23 = icmp ne %13* %22, null
  %24 = xor i1 %23, true
  %25 = xor i1 %24, true
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = call i64 @llvm.expect.i64(i64 %28, i64 0)
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %21
  %32 = load i8**, i8*** %7, align 8
  store i8* null, i8** %32, align 8
  %33 = load i64*, i64** %8, align 8
  store i64 0, i64* %33, align 8
  br label %43

34:                                               ; preds = %21, %18
  %35 = load %13*, %13** %10, align 8
  %36 = getelementptr inbounds %13, %13* %35, i32 0, i32 3
  %37 = getelementptr inbounds [1 x i8], [1 x i8]* %36, i32 0, i32 0
  %38 = load i8**, i8*** %7, align 8
  store i8* %37, i8** %38, align 8
  %39 = load %13*, %13** %10, align 8
  %40 = getelementptr inbounds %13, %13* %39, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = load i64*, i64** %8, align 8
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %34, %31
  store i32 1, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

44:                                               ; preds = %43, %17
  %45 = bitcast %13** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #11
  %46 = load i32, i32* %5, align 4
  ret i32 %46
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @153(%3* %0, i8* %1, i8* %2, i32 %3) #4 {
  %5 = alloca i32, align 4
  %6 = alloca %3*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %3* %0, %3** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = load i8*, i8** %8, align 8
  store i8 0, i8* %13, align 1
  br label %14

14:                                               ; preds = %12, %4
  %15 = load %3*, %3** %6, align 8
  %16 = call zeroext i8 @150(%3* %15)
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, 3
  %19 = xor i1 %18, true
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = call i64 @llvm.expect.i64(i64 %22, i64 1)
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %14
  %26 = load i8*, i8** %7, align 8
  store i8 1, i8* %26, align 1
  br label %57

27:                                               ; preds = %14
  %28 = load %3*, %3** %6, align 8
  %29 = call zeroext i8 @150(%3* %28)
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 2
  %32 = xor i1 %31, true
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = sext i32 %34 to i64
  %36 = call i64 @llvm.expect.i64(i64 %35, i64 1)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %27
  %39 = load i8*, i8** %7, align 8
  store i8 0, i8* %39, align 1
  br label %56

40:                                               ; preds = %27
  %41 = load i32, i32* %9, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %40
  %44 = load %3*, %3** %6, align 8
  %45 = call zeroext i8 @150(%3* %44)
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = load i8*, i8** %8, align 8
  store i8 1, i8* %49, align 1
  %50 = load i8*, i8** %7, align 8
  store i8 0, i8* %50, align 1
  br label %55

51:                                               ; preds = %43, %40
  %52 = load %3*, %3** %6, align 8
  %53 = load i8*, i8** %7, align 8
  %54 = call i32 @zend_parse_arg_bool_slow(%3* %52, i8* %53)
  store i32 %54, i32* %5, align 4
  br label %58

55:                                               ; preds = %48
  br label %56

56:                                               ; preds = %55, %38
  br label %57

57:                                               ; preds = %56, %25
  store i32 1, i32* %5, align 4
  br label %58

58:                                               ; preds = %57, %51
  %59 = load i32, i32* %5, align 4
  ret i32 %59
}

declare dso_local %53* @_php_stream_open_wrapper_ex(i8*, i8*, i32, %13**, %1*) #1

declare dso_local i32 @_array_init(%3*, i32) #1

; Function Attrs: nounwind uwtable
define hidden i32 @php_next_meta_token(%66* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %66*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca [8193 x i8], align 16
  %7 = alloca i32, align 4
  store %66* %0, %66** %3, align 8
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #11
  store i32 0, i32* %4, align 4
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #11
  %10 = bitcast [8193 x i8]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8193, i8* %10) #11
  %11 = getelementptr inbounds [8193 x i8], [8193 x i8]* %6, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %11, i8 0, i64 8193, i1 false)
  br label %12

12:                                               ; preds = %242, %1
  %13 = load %66*, %66** %3, align 8
  %14 = getelementptr inbounds %66, %66* %13, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %12
  %18 = load %66*, %66** %3, align 8
  %19 = getelementptr inbounds %66, %66* %18, i32 0, i32 0
  %20 = load %53*, %53** %19, align 8
  %21 = call i32 @_php_stream_eof(%53* %20)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = load %66*, %66** %3, align 8
  %25 = getelementptr inbounds %66, %66* %24, i32 0, i32 0
  %26 = load %53*, %53** %25, align 8
  %27 = call i32 @_php_stream_getc(%53* %26)
  store i32 %27, i32* %4, align 4
  %28 = icmp ne i32 %27, 0
  br label %29

29:                                               ; preds = %23, %17
  %30 = phi i1 [ false, %17 ], [ %28, %23 ]
  br label %31

31:                                               ; preds = %29, %12
  %32 = phi i1 [ true, %12 ], [ %30, %29 ]
  br i1 %32, label %33, label %243

33:                                               ; preds = %31
  %34 = load %66*, %66** %3, align 8
  %35 = getelementptr inbounds %66, %66* %34, i32 0, i32 0
  %36 = load %53*, %53** %35, align 8
  %37 = call i32 @_php_stream_eof(%53* %36)
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  br label %243

40:                                               ; preds = %33
  %41 = load %66*, %66** %3, align 8
  %42 = getelementptr inbounds %66, %66* %41, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = load %66*, %66** %3, align 8
  %47 = getelementptr inbounds %66, %66* %46, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %4, align 4
  %49 = load %66*, %66** %3, align 8
  %50 = getelementptr inbounds %66, %66* %49, i32 0, i32 1
  store i32 0, i32* %50, align 8
  br label %51

51:                                               ; preds = %45, %40
  %52 = load i32, i32* %4, align 4
  switch i32 %52, label %138 [
    i32 60, label %53
    i32 62, label %54
    i32 61, label %55
    i32 47, label %56
    i32 39, label %57
    i32 34, label %57
    i32 10, label %136
    i32 13, label %136
    i32 9, label %136
    i32 32, label %137
  ]

53:                                               ; preds = %51
  store i32 1, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %244

54:                                               ; preds = %51
  store i32 2, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %244

55:                                               ; preds = %51
  store i32 4, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %244

56:                                               ; preds = %51
  store i32 3, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %244

57:                                               ; preds = %51, %51
  %58 = load i32, i32* %4, align 4
  store i32 %58, i32* %5, align 4
  %59 = load %66*, %66** %3, align 8
  %60 = getelementptr inbounds %66, %66* %59, i32 0, i32 5
  store i32 0, i32* %60, align 8
  br label %61

61:                                               ; preds = %99, %57
  %62 = load %66*, %66** %3, align 8
  %63 = getelementptr inbounds %66, %66* %62, i32 0, i32 0
  %64 = load %53*, %53** %63, align 8
  %65 = call i32 @_php_stream_eof(%53* %64)
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %83, label %67

67:                                               ; preds = %61
  %68 = load %66*, %66** %3, align 8
  %69 = getelementptr inbounds %66, %66* %68, i32 0, i32 0
  %70 = load %53*, %53** %69, align 8
  %71 = call i32 @_php_stream_getc(%53* %70)
  store i32 %71, i32* %4, align 4
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %67
  %74 = load i32, i32* %4, align 4
  %75 = load i32, i32* %5, align 4
  %76 = icmp ne i32 %74, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = load i32, i32* %4, align 4
  %79 = icmp ne i32 %78, 60
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = load i32, i32* %4, align 4
  %82 = icmp ne i32 %81, 62
  br label %83

83:                                               ; preds = %80, %77, %73, %67, %61
  %84 = phi i1 [ false, %77 ], [ false, %73 ], [ false, %67 ], [ false, %61 ], [ %82, %80 ]
  br i1 %84, label %85, label %100

85:                                               ; preds = %83
  %86 = load i32, i32* %4, align 4
  %87 = trunc i32 %86 to i8
  %88 = load %66*, %66** %3, align 8
  %89 = getelementptr inbounds %66, %66* %88, i32 0, i32 5
  %90 = load i32, i32* %89, align 8
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %89, align 8
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds [8193 x i8], [8193 x i8]* %6, i64 0, i64 %92
  store i8 %87, i8* %93, align 1
  %94 = load %66*, %66** %3, align 8
  %95 = getelementptr inbounds %66, %66* %94, i32 0, i32 5
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 8192
  br i1 %97, label %98, label %99

98:                                               ; preds = %85
  br label %100

99:                                               ; preds = %85
  br label %61

100:                                              ; preds = %98, %83
  %101 = load i32, i32* %4, align 4
  %102 = icmp eq i32 %101, 60
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = load i32, i32* %4, align 4
  %105 = icmp eq i32 %104, 62
  br i1 %105, label %106, label %112

106:                                              ; preds = %103, %100
  %107 = load %66*, %66** %3, align 8
  %108 = getelementptr inbounds %66, %66* %107, i32 0, i32 1
  store i32 1, i32* %108, align 8
  %109 = load i32, i32* %4, align 4
  %110 = load %66*, %66** %3, align 8
  %111 = getelementptr inbounds %66, %66* %110, i32 0, i32 2
  store i32 %109, i32* %111, align 4
  br label %112

112:                                              ; preds = %106, %103
  %113 = load %66*, %66** %3, align 8
  %114 = getelementptr inbounds %66, %66* %113, i32 0, i32 6
  %115 = load i32, i32* %114, align 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %135

117:                                              ; preds = %112
  %118 = load %66*, %66** %3, align 8
  %119 = getelementptr inbounds %66, %66* %118, i32 0, i32 5
  %120 = load i32, i32* %119, align 8
  %121 = add nsw i32 %120, 1
  %122 = sext i32 %121 to i64
  %123 = call noalias i8* @_emalloc(i64 %122) #14
  %124 = load %66*, %66** %3, align 8
  %125 = getelementptr inbounds %66, %66* %124, i32 0, i32 4
  store i8* %123, i8** %125, align 8
  %126 = load %66*, %66** %3, align 8
  %127 = getelementptr inbounds %66, %66* %126, i32 0, i32 4
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds [8193 x i8], [8193 x i8]* %6, i32 0, i32 0
  %130 = load %66*, %66** %3, align 8
  %131 = getelementptr inbounds %66, %66* %130, i32 0, i32 5
  %132 = load i32, i32* %131, align 8
  %133 = add nsw i32 %132, 1
  %134 = sext i32 %133 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %128, i8* align 16 %129, i64 %134, i1 false)
  br label %135

135:                                              ; preds = %117, %112
  store i32 7, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %244

136:                                              ; preds = %51, %51, %51
  br label %242

137:                                              ; preds = %51
  store i32 5, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %244

138:                                              ; preds = %51
  %139 = call i16** @__ctype_b_loc() #12
  %140 = load i16*, i16** %139, align 8
  %141 = load i32, i32* %4, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i16, i16* %140, i64 %142
  %144 = load i16, i16* %143, align 2
  %145 = zext i16 %144 to i32
  %146 = and i32 %145, 8
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %148, label %241

148:                                              ; preds = %138
  %149 = load %66*, %66** %3, align 8
  %150 = getelementptr inbounds %66, %66* %149, i32 0, i32 5
  store i32 0, i32* %150, align 8
  %151 = load i32, i32* %4, align 4
  %152 = trunc i32 %151 to i8
  %153 = load %66*, %66** %3, align 8
  %154 = getelementptr inbounds %66, %66* %153, i32 0, i32 5
  %155 = load i32, i32* %154, align 8
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %154, align 8
  %157 = sext i32 %155 to i64
  %158 = getelementptr inbounds [8193 x i8], [8193 x i8]* %6, i64 0, i64 %157
  store i8 %152, i8* %158, align 1
  br label %159

159:                                              ; preds = %203, %148
  %160 = load %66*, %66** %3, align 8
  %161 = getelementptr inbounds %66, %66* %160, i32 0, i32 0
  %162 = load %53*, %53** %161, align 8
  %163 = call i32 @_php_stream_eof(%53* %162)
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %187, label %165

165:                                              ; preds = %159
  %166 = load %66*, %66** %3, align 8
  %167 = getelementptr inbounds %66, %66* %166, i32 0, i32 0
  %168 = load %53*, %53** %167, align 8
  %169 = call i32 @_php_stream_getc(%53* %168)
  store i32 %169, i32* %4, align 4
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %171, label %187

171:                                              ; preds = %165
  %172 = call i16** @__ctype_b_loc() #12
  %173 = load i16*, i16** %172, align 8
  %174 = load i32, i32* %4, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i16, i16* %173, i64 %175
  %177 = load i16, i16* %176, align 2
  %178 = zext i16 %177 to i32
  %179 = and i32 %178, 8
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %185, label %181

181:                                              ; preds = %171
  %182 = load i32, i32* %4, align 4
  %183 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @136, i32 0, i32 0), i32 %182) #13
  %184 = icmp ne i8* %183, null
  br label %185

185:                                              ; preds = %181, %171
  %186 = phi i1 [ true, %171 ], [ %184, %181 ]
  br label %187

187:                                              ; preds = %185, %165, %159
  %188 = phi i1 [ false, %165 ], [ false, %159 ], [ %186, %185 ]
  br i1 %188, label %189, label %204

189:                                              ; preds = %187
  %190 = load i32, i32* %4, align 4
  %191 = trunc i32 %190 to i8
  %192 = load %66*, %66** %3, align 8
  %193 = getelementptr inbounds %66, %66* %192, i32 0, i32 5
  %194 = load i32, i32* %193, align 8
  %195 = add nsw i32 %194, 1
  store i32 %195, i32* %193, align 8
  %196 = sext i32 %194 to i64
  %197 = getelementptr inbounds [8193 x i8], [8193 x i8]* %6, i64 0, i64 %196
  store i8 %191, i8* %197, align 1
  %198 = load %66*, %66** %3, align 8
  %199 = getelementptr inbounds %66, %66* %198, i32 0, i32 5
  %200 = load i32, i32* %199, align 8
  %201 = icmp eq i32 %200, 8192
  br i1 %201, label %202, label %203

202:                                              ; preds = %189
  br label %204

203:                                              ; preds = %189
  br label %159

204:                                              ; preds = %202, %187
  %205 = call i16** @__ctype_b_loc() #12
  %206 = load i16*, i16** %205, align 8
  %207 = load i32, i32* %4, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i16, i16* %206, i64 %208
  %210 = load i16, i16* %209, align 2
  %211 = zext i16 %210 to i32
  %212 = and i32 %211, 1024
  %213 = icmp ne i32 %212, 0
  br i1 %213, label %223, label %214

214:                                              ; preds = %204
  %215 = load i32, i32* %4, align 4
  %216 = icmp ne i32 %215, 45
  br i1 %216, label %217, label %223

217:                                              ; preds = %214
  %218 = load %66*, %66** %3, align 8
  %219 = getelementptr inbounds %66, %66* %218, i32 0, i32 1
  store i32 1, i32* %219, align 8
  %220 = load i32, i32* %4, align 4
  %221 = load %66*, %66** %3, align 8
  %222 = getelementptr inbounds %66, %66* %221, i32 0, i32 2
  store i32 %220, i32* %222, align 4
  br label %223

223:                                              ; preds = %217, %214, %204
  %224 = load %66*, %66** %3, align 8
  %225 = getelementptr inbounds %66, %66* %224, i32 0, i32 5
  %226 = load i32, i32* %225, align 8
  %227 = add nsw i32 %226, 1
  %228 = sext i32 %227 to i64
  %229 = call noalias i8* @_emalloc(i64 %228) #14
  %230 = load %66*, %66** %3, align 8
  %231 = getelementptr inbounds %66, %66* %230, i32 0, i32 4
  store i8* %229, i8** %231, align 8
  %232 = load %66*, %66** %3, align 8
  %233 = getelementptr inbounds %66, %66* %232, i32 0, i32 4
  %234 = load i8*, i8** %233, align 8
  %235 = getelementptr inbounds [8193 x i8], [8193 x i8]* %6, i32 0, i32 0
  %236 = load %66*, %66** %3, align 8
  %237 = getelementptr inbounds %66, %66* %236, i32 0, i32 5
  %238 = load i32, i32* %237, align 8
  %239 = add nsw i32 %238, 1
  %240 = sext i32 %239 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %234, i8* align 16 %235, i64 %240, i1 false)
  store i32 6, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %244

241:                                              ; preds = %138
  store i32 8, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %244

242:                                              ; preds = %136
  br label %12

243:                                              ; preds = %39, %31
  store i32 0, i32* %2, align 4
  store i32 1, i32* %7, align 4
  br label %244

244:                                              ; preds = %243, %241, %223, %137, %135, %56, %55, %54, %53
  %245 = bitcast [8193 x i8]* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8193, i8* %245) #11
  %246 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %246) #11
  %247 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %247) #11
  %248 = load i32, i32* %2, align 4
  ret i32 %248
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) #7

declare dso_local void @_efree(i8*) #1

declare dso_local noalias i8* @_estrndup(i8*, i64) #1

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

declare dso_local i8* @php_strtolower(i8*, i64) #1

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

declare dso_local i32 @add_assoc_string_ex(%3*, i8*, i64, i8*) #1

declare dso_local i32 @_php_stream_free(%53*, i32) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_file_get_contents(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca %53*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %3*, align 8
  %12 = alloca %1*, align 8
  %13 = alloca %13*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %3*, align 8
  %20 = alloca %3*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %3*, align 8
  %28 = alloca %13*, align 8
  %29 = alloca %3*, align 8
  %30 = alloca %13*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %31 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  %32 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #11
  store i8 0, i8* %7, align 1
  %33 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  %34 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  store i64 0, i64* %9, align 8
  %35 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  store i64 -1, i64* %10, align 8
  %36 = bitcast %3** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  store %3* null, %3** %11, align 8
  %37 = bitcast %1** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  store %1* null, %1** %12, align 8
  %38 = bitcast %13** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  br label %39

39:                                               ; preds = %2
  %40 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #11
  store i32 0, i32* %14, align 4
  %41 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #11
  store i32 1, i32* %15, align 4
  %42 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  store i32 5, i32* %16, align 4
  %43 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  %44 = load %28*, %28** %3, align 8
  %45 = getelementptr inbounds %28, %28* %44, i32 0, i32 4
  %46 = getelementptr inbounds %3, %3* %45, i32 0, i32 2
  %47 = bitcast %6* %46 to i32*
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %17, align 4
  %49 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #11
  %50 = bitcast %3** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #11
  %51 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #11
  store %3* null, %3** %20, align 8
  %52 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #11
  store i32 0, i32* %21, align 4
  %53 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #11
  store i8* null, i8** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #11
  store i8 0, i8* %24, align 1
  %54 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #11
  store i32 0, i32* %25, align 4
  %55 = load i32, i32* %18, align 4
  %56 = load %3*, %3** %19, align 8
  %57 = load %3*, %3** %20, align 8
  %58 = load i32, i32* %21, align 4
  %59 = load i8*, i8** %22, align 8
  %60 = load i8, i8* %23, align 1
  %61 = load i8, i8* %24, align 1
  br label %62

62:                                               ; preds = %39
  %63 = load i32, i32* %17, align 4
  %64 = load i32, i32* %15, align 4
  %65 = icmp slt i32 %63, %64
  %66 = xor i1 %65, true
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0)
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %91, label %72

72:                                               ; preds = %62
  %73 = load i32, i32* %17, align 4
  %74 = load i32, i32* %16, align 4
  %75 = icmp sgt i32 %73, %74
  %76 = xor i1 %75, true
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = call i64 @llvm.expect.i64(i64 %79, i64 0)
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %82, label %95

82:                                               ; preds = %72
  %83 = load i32, i32* %16, align 4
  %84 = icmp sge i32 %83, 0
  %85 = xor i1 %84, true
  %86 = xor i1 %85, true
  %87 = zext i1 %86 to i32
  %88 = sext i32 %87 to i64
  %89 = call i64 @llvm.expect.i64(i64 %88, i64 1)
  %90 = icmp ne i64 %89, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %82, %62
  %92 = load i32, i32* %17, align 4
  %93 = load i32, i32* %15, align 4
  %94 = load i32, i32* %16, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %92, i32 %93, i32 %94)
  store i32 1, i32* %25, align 4
  br label %450

95:                                               ; preds = %82, %72
  store i32 0, i32* %18, align 4
  %96 = load %28*, %28** %3, align 8
  %97 = bitcast %28* %96 to %3*
  %98 = getelementptr inbounds %3, %3* %97, i64 4
  store %3* %98, %3** %19, align 8
  %99 = load i32, i32* %18, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %18, align 4
  br label %101

101:                                              ; preds = %95
  %102 = load i32, i32* %18, align 4
  %103 = load i32, i32* %15, align 4
  %104 = icmp sle i32 %102, %103
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = load i8, i8* %24, align 1
  %107 = zext i8 %106 to i32
  %108 = icmp eq i32 %107, 1
  br label %109

109:                                              ; preds = %105, %101
  %110 = phi i1 [ true, %101 ], [ %108, %105 ]
  %111 = xor i1 %110, true
  %112 = zext i1 %111 to i32
  %113 = sext i32 %112 to i64
  %114 = call i64 @llvm.expect.i64(i64 %113, i64 0)
  %115 = icmp ne i64 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %109
  unreachable

117:                                              ; preds = %109
  br label %118

118:                                              ; preds = %117
  br label %119

119:                                              ; preds = %118
  br label %120

120:                                              ; preds = %119
  %121 = load i32, i32* %18, align 4
  %122 = load i32, i32* %15, align 4
  %123 = icmp sgt i32 %121, %122
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = load i8, i8* %24, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp eq i32 %126, 0
  br label %128

128:                                              ; preds = %124, %120
  %129 = phi i1 [ true, %120 ], [ %127, %124 ]
  %130 = xor i1 %129, true
  %131 = zext i1 %130 to i32
  %132 = sext i32 %131 to i64
  %133 = call i64 @llvm.expect.i64(i64 %132, i64 0)
  %134 = icmp ne i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %128
  unreachable

136:                                              ; preds = %128
  br label %137

137:                                              ; preds = %136
  br label %138

138:                                              ; preds = %137
  %139 = load i8, i8* %24, align 1
  %140 = icmp ne i8 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %138
  %142 = load i32, i32* %18, align 4
  %143 = load i32, i32* %17, align 4
  %144 = icmp sgt i32 %142, %143
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = zext i1 %146 to i32
  %148 = sext i32 %147 to i64
  %149 = call i64 @llvm.expect.i64(i64 %148, i64 0)
  %150 = icmp ne i64 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %141
  br label %450

152:                                              ; preds = %141
  br label %153

153:                                              ; preds = %152, %138
  %154 = load %3*, %3** %19, align 8
  %155 = getelementptr inbounds %3, %3* %154, i32 1
  store %3* %155, %3** %19, align 8
  %156 = load %3*, %3** %19, align 8
  store %3* %156, %3** %20, align 8
  %157 = load %3*, %3** %20, align 8
  %158 = call i32 @152(%3* %157, i8** %5, i64* %6, i32 0)
  %159 = icmp ne i32 %158, 0
  %160 = xor i1 %159, true
  %161 = xor i1 %160, true
  %162 = xor i1 %161, true
  %163 = zext i1 %162 to i32
  %164 = sext i32 %163 to i64
  %165 = call i64 @llvm.expect.i64(i64 %164, i64 0)
  %166 = icmp ne i64 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %153
  store i32 6, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %450

168:                                              ; preds = %153
  store i8 1, i8* %24, align 1
  %169 = load i32, i32* %18, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %18, align 4
  br label %171

171:                                              ; preds = %168
  %172 = load i32, i32* %18, align 4
  %173 = load i32, i32* %15, align 4
  %174 = icmp sle i32 %172, %173
  br i1 %174, label %179, label %175

175:                                              ; preds = %171
  %176 = load i8, i8* %24, align 1
  %177 = zext i8 %176 to i32
  %178 = icmp eq i32 %177, 1
  br label %179

179:                                              ; preds = %175, %171
  %180 = phi i1 [ true, %171 ], [ %178, %175 ]
  %181 = xor i1 %180, true
  %182 = zext i1 %181 to i32
  %183 = sext i32 %182 to i64
  %184 = call i64 @llvm.expect.i64(i64 %183, i64 0)
  %185 = icmp ne i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %179
  unreachable

187:                                              ; preds = %179
  br label %188

188:                                              ; preds = %187
  br label %189

189:                                              ; preds = %188
  br label %190

190:                                              ; preds = %189
  %191 = load i32, i32* %18, align 4
  %192 = load i32, i32* %15, align 4
  %193 = icmp sgt i32 %191, %192
  br i1 %193, label %198, label %194

194:                                              ; preds = %190
  %195 = load i8, i8* %24, align 1
  %196 = zext i8 %195 to i32
  %197 = icmp eq i32 %196, 0
  br label %198

198:                                              ; preds = %194, %190
  %199 = phi i1 [ true, %190 ], [ %197, %194 ]
  %200 = xor i1 %199, true
  %201 = zext i1 %200 to i32
  %202 = sext i32 %201 to i64
  %203 = call i64 @llvm.expect.i64(i64 %202, i64 0)
  %204 = icmp ne i64 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %198
  unreachable

206:                                              ; preds = %198
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  %209 = load i8, i8* %24, align 1
  %210 = icmp ne i8 %209, 0
  br i1 %210, label %211, label %223

211:                                              ; preds = %208
  %212 = load i32, i32* %18, align 4
  %213 = load i32, i32* %17, align 4
  %214 = icmp sgt i32 %212, %213
  %215 = xor i1 %214, true
  %216 = xor i1 %215, true
  %217 = zext i1 %216 to i32
  %218 = sext i32 %217 to i64
  %219 = call i64 @llvm.expect.i64(i64 %218, i64 0)
  %220 = icmp ne i64 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %211
  br label %450

222:                                              ; preds = %211
  br label %223

223:                                              ; preds = %222, %208
  %224 = load %3*, %3** %19, align 8
  %225 = getelementptr inbounds %3, %3* %224, i32 1
  store %3* %225, %3** %19, align 8
  %226 = load %3*, %3** %19, align 8
  store %3* %226, %3** %20, align 8
  %227 = load %3*, %3** %20, align 8
  %228 = call i32 @153(%3* %227, i8* %7, i8* %23, i32 0)
  %229 = icmp ne i32 %228, 0
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = xor i1 %231, true
  %233 = zext i1 %232 to i32
  %234 = sext i32 %233 to i64
  %235 = call i64 @llvm.expect.i64(i64 %234, i64 0)
  %236 = icmp ne i64 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %223
  store i32 1, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %450

238:                                              ; preds = %223
  %239 = load i32, i32* %18, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %18, align 4
  br label %241

241:                                              ; preds = %238
  %242 = load i32, i32* %18, align 4
  %243 = load i32, i32* %15, align 4
  %244 = icmp sle i32 %242, %243
  br i1 %244, label %249, label %245

245:                                              ; preds = %241
  %246 = load i8, i8* %24, align 1
  %247 = zext i8 %246 to i32
  %248 = icmp eq i32 %247, 1
  br label %249

249:                                              ; preds = %245, %241
  %250 = phi i1 [ true, %241 ], [ %248, %245 ]
  %251 = xor i1 %250, true
  %252 = zext i1 %251 to i32
  %253 = sext i32 %252 to i64
  %254 = call i64 @llvm.expect.i64(i64 %253, i64 0)
  %255 = icmp ne i64 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %249
  unreachable

257:                                              ; preds = %249
  br label %258

258:                                              ; preds = %257
  br label %259

259:                                              ; preds = %258
  br label %260

260:                                              ; preds = %259
  %261 = load i32, i32* %18, align 4
  %262 = load i32, i32* %15, align 4
  %263 = icmp sgt i32 %261, %262
  br i1 %263, label %268, label %264

264:                                              ; preds = %260
  %265 = load i8, i8* %24, align 1
  %266 = zext i8 %265 to i32
  %267 = icmp eq i32 %266, 0
  br label %268

268:                                              ; preds = %264, %260
  %269 = phi i1 [ true, %260 ], [ %267, %264 ]
  %270 = xor i1 %269, true
  %271 = zext i1 %270 to i32
  %272 = sext i32 %271 to i64
  %273 = call i64 @llvm.expect.i64(i64 %272, i64 0)
  %274 = icmp ne i64 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %268
  unreachable

276:                                              ; preds = %268
  br label %277

277:                                              ; preds = %276
  br label %278

278:                                              ; preds = %277
  %279 = load i8, i8* %24, align 1
  %280 = icmp ne i8 %279, 0
  br i1 %280, label %281, label %293

281:                                              ; preds = %278
  %282 = load i32, i32* %18, align 4
  %283 = load i32, i32* %17, align 4
  %284 = icmp sgt i32 %282, %283
  %285 = xor i1 %284, true
  %286 = xor i1 %285, true
  %287 = zext i1 %286 to i32
  %288 = sext i32 %287 to i64
  %289 = call i64 @llvm.expect.i64(i64 %288, i64 0)
  %290 = icmp ne i64 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %281
  br label %450

292:                                              ; preds = %281
  br label %293

293:                                              ; preds = %292, %278
  %294 = load %3*, %3** %19, align 8
  %295 = getelementptr inbounds %3, %3* %294, i32 1
  store %3* %295, %3** %19, align 8
  %296 = load %3*, %3** %19, align 8
  store %3* %296, %3** %20, align 8
  %297 = load %3*, %3** %20, align 8
  %298 = call i32 @148(%3* %297, %3** %11, i32 1)
  %299 = icmp ne i32 %298, 0
  %300 = xor i1 %299, true
  %301 = xor i1 %300, true
  %302 = xor i1 %301, true
  %303 = zext i1 %302 to i32
  %304 = sext i32 %303 to i64
  %305 = call i64 @llvm.expect.i64(i64 %304, i64 0)
  %306 = icmp ne i64 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %293
  store i32 5, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %450

308:                                              ; preds = %293
  %309 = load i32, i32* %18, align 4
  %310 = add nsw i32 %309, 1
  store i32 %310, i32* %18, align 4
  br label %311

311:                                              ; preds = %308
  %312 = load i32, i32* %18, align 4
  %313 = load i32, i32* %15, align 4
  %314 = icmp sle i32 %312, %313
  br i1 %314, label %319, label %315

315:                                              ; preds = %311
  %316 = load i8, i8* %24, align 1
  %317 = zext i8 %316 to i32
  %318 = icmp eq i32 %317, 1
  br label %319

319:                                              ; preds = %315, %311
  %320 = phi i1 [ true, %311 ], [ %318, %315 ]
  %321 = xor i1 %320, true
  %322 = zext i1 %321 to i32
  %323 = sext i32 %322 to i64
  %324 = call i64 @llvm.expect.i64(i64 %323, i64 0)
  %325 = icmp ne i64 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %319
  unreachable

327:                                              ; preds = %319
  br label %328

328:                                              ; preds = %327
  br label %329

329:                                              ; preds = %328
  br label %330

330:                                              ; preds = %329
  %331 = load i32, i32* %18, align 4
  %332 = load i32, i32* %15, align 4
  %333 = icmp sgt i32 %331, %332
  br i1 %333, label %338, label %334

334:                                              ; preds = %330
  %335 = load i8, i8* %24, align 1
  %336 = zext i8 %335 to i32
  %337 = icmp eq i32 %336, 0
  br label %338

338:                                              ; preds = %334, %330
  %339 = phi i1 [ true, %330 ], [ %337, %334 ]
  %340 = xor i1 %339, true
  %341 = zext i1 %340 to i32
  %342 = sext i32 %341 to i64
  %343 = call i64 @llvm.expect.i64(i64 %342, i64 0)
  %344 = icmp ne i64 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %338
  unreachable

346:                                              ; preds = %338
  br label %347

347:                                              ; preds = %346
  br label %348

348:                                              ; preds = %347
  %349 = load i8, i8* %24, align 1
  %350 = icmp ne i8 %349, 0
  br i1 %350, label %351, label %363

351:                                              ; preds = %348
  %352 = load i32, i32* %18, align 4
  %353 = load i32, i32* %17, align 4
  %354 = icmp sgt i32 %352, %353
  %355 = xor i1 %354, true
  %356 = xor i1 %355, true
  %357 = zext i1 %356 to i32
  %358 = sext i32 %357 to i64
  %359 = call i64 @llvm.expect.i64(i64 %358, i64 0)
  %360 = icmp ne i64 %359, 0
  br i1 %360, label %361, label %362

361:                                              ; preds = %351
  br label %450

362:                                              ; preds = %351
  br label %363

363:                                              ; preds = %362, %348
  %364 = load %3*, %3** %19, align 8
  %365 = getelementptr inbounds %3, %3* %364, i32 1
  store %3* %365, %3** %19, align 8
  %366 = load %3*, %3** %19, align 8
  store %3* %366, %3** %20, align 8
  %367 = load %3*, %3** %20, align 8
  %368 = call i32 @149(%3* %367, i64* %9, i8* %23, i32 0, i32 0)
  %369 = icmp ne i32 %368, 0
  %370 = xor i1 %369, true
  %371 = xor i1 %370, true
  %372 = xor i1 %371, true
  %373 = zext i1 %372 to i32
  %374 = sext i32 %373 to i64
  %375 = call i64 @llvm.expect.i64(i64 %374, i64 0)
  %376 = icmp ne i64 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %363
  store i32 0, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %450

378:                                              ; preds = %363
  %379 = load i32, i32* %18, align 4
  %380 = add nsw i32 %379, 1
  store i32 %380, i32* %18, align 4
  br label %381

381:                                              ; preds = %378
  %382 = load i32, i32* %18, align 4
  %383 = load i32, i32* %15, align 4
  %384 = icmp sle i32 %382, %383
  br i1 %384, label %389, label %385

385:                                              ; preds = %381
  %386 = load i8, i8* %24, align 1
  %387 = zext i8 %386 to i32
  %388 = icmp eq i32 %387, 1
  br label %389

389:                                              ; preds = %385, %381
  %390 = phi i1 [ true, %381 ], [ %388, %385 ]
  %391 = xor i1 %390, true
  %392 = zext i1 %391 to i32
  %393 = sext i32 %392 to i64
  %394 = call i64 @llvm.expect.i64(i64 %393, i64 0)
  %395 = icmp ne i64 %394, 0
  br i1 %395, label %396, label %397

396:                                              ; preds = %389
  unreachable

397:                                              ; preds = %389
  br label %398

398:                                              ; preds = %397
  br label %399

399:                                              ; preds = %398
  br label %400

400:                                              ; preds = %399
  %401 = load i32, i32* %18, align 4
  %402 = load i32, i32* %15, align 4
  %403 = icmp sgt i32 %401, %402
  br i1 %403, label %408, label %404

404:                                              ; preds = %400
  %405 = load i8, i8* %24, align 1
  %406 = zext i8 %405 to i32
  %407 = icmp eq i32 %406, 0
  br label %408

408:                                              ; preds = %404, %400
  %409 = phi i1 [ true, %400 ], [ %407, %404 ]
  %410 = xor i1 %409, true
  %411 = zext i1 %410 to i32
  %412 = sext i32 %411 to i64
  %413 = call i64 @llvm.expect.i64(i64 %412, i64 0)
  %414 = icmp ne i64 %413, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %408
  unreachable

416:                                              ; preds = %408
  br label %417

417:                                              ; preds = %416
  br label %418

418:                                              ; preds = %417
  %419 = load i8, i8* %24, align 1
  %420 = icmp ne i8 %419, 0
  br i1 %420, label %421, label %433

421:                                              ; preds = %418
  %422 = load i32, i32* %18, align 4
  %423 = load i32, i32* %17, align 4
  %424 = icmp sgt i32 %422, %423
  %425 = xor i1 %424, true
  %426 = xor i1 %425, true
  %427 = zext i1 %426 to i32
  %428 = sext i32 %427 to i64
  %429 = call i64 @llvm.expect.i64(i64 %428, i64 0)
  %430 = icmp ne i64 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %421
  br label %450

432:                                              ; preds = %421
  br label %433

433:                                              ; preds = %432, %418
  %434 = load %3*, %3** %19, align 8
  %435 = getelementptr inbounds %3, %3* %434, i32 1
  store %3* %435, %3** %19, align 8
  %436 = load %3*, %3** %19, align 8
  store %3* %436, %3** %20, align 8
  %437 = load %3*, %3** %20, align 8
  %438 = call i32 @149(%3* %437, i64* %10, i8* %23, i32 0, i32 0)
  %439 = icmp ne i32 %438, 0
  %440 = xor i1 %439, true
  %441 = xor i1 %440, true
  %442 = xor i1 %441, true
  %443 = zext i1 %442 to i32
  %444 = sext i32 %443 to i64
  %445 = call i64 @llvm.expect.i64(i64 %444, i64 0)
  %446 = icmp ne i64 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %433
  store i32 0, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %450

448:                                              ; preds = %433
  br label %449

449:                                              ; preds = %448
  br label %450

450:                                              ; preds = %449, %447, %431, %377, %361, %307, %291, %237, %221, %167, %151, %91
  %451 = load i32, i32* %25, align 4
  %452 = icmp ne i32 %451, 0
  %453 = xor i1 %452, true
  %454 = xor i1 %453, true
  %455 = zext i1 %454 to i32
  %456 = sext i32 %455 to i64
  %457 = call i64 @llvm.expect.i64(i64 %456, i64 0)
  %458 = icmp ne i64 %457, 0
  br i1 %458, label %459, label %482

459:                                              ; preds = %450
  %460 = load i32, i32* %25, align 4
  %461 = icmp eq i32 %460, 2
  br i1 %461, label %462, label %465

462:                                              ; preds = %459
  %463 = load i32, i32* %18, align 4
  %464 = load i8*, i8** %22, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %463, i8* %464)
  br label %481

465:                                              ; preds = %459
  %466 = load i32, i32* %25, align 4
  %467 = icmp eq i32 %466, 3
  br i1 %467, label %468, label %472

468:                                              ; preds = %465
  %469 = load i32, i32* %18, align 4
  %470 = load i8*, i8** %22, align 8
  %471 = load %3*, %3** %20, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %469, i8* %470, %3* %471)
  br label %480

472:                                              ; preds = %465
  %473 = load i32, i32* %25, align 4
  %474 = icmp eq i32 %473, 4
  br i1 %474, label %475, label %479

475:                                              ; preds = %472
  %476 = load i32, i32* %18, align 4
  %477 = load i32, i32* %21, align 4
  %478 = load %3*, %3** %20, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %476, i32 %477, %3* %478)
  br label %479

479:                                              ; preds = %475, %472
  br label %480

480:                                              ; preds = %479, %468
  br label %481

481:                                              ; preds = %480, %462
  store i32 1, i32* %26, align 4
  br label %483

482:                                              ; preds = %450
  store i32 0, i32* %26, align 4
  br label %483

483:                                              ; preds = %482, %481
  %484 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %484) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #11
  %485 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %485) #11
  %486 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %486) #11
  %487 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %487) #11
  %488 = bitcast %3** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %488) #11
  %489 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %489) #11
  %490 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %490) #11
  %491 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %491) #11
  %492 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %492) #11
  %493 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %493) #11
  %494 = load i32, i32* %26, align 4
  switch i32 %494, label %635 [
    i32 0, label %495
  ]

495:                                              ; preds = %483
  br label %496

496:                                              ; preds = %495
  br label %497

497:                                              ; preds = %496
  %498 = load %28*, %28** %3, align 8
  %499 = getelementptr inbounds %28, %28* %498, i32 0, i32 4
  %500 = getelementptr inbounds %3, %3* %499, i32 0, i32 2
  %501 = bitcast %6* %500 to i32*
  %502 = load i32, i32* %501, align 4
  %503 = icmp eq i32 %502, 5
  br i1 %503, label %504, label %514

504:                                              ; preds = %497
  %505 = load i64, i64* %10, align 8
  %506 = icmp slt i64 %505, 0
  br i1 %506, label %507, label %514

507:                                              ; preds = %504
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @86, i32 0, i32 0))
  br label %508

508:                                              ; preds = %507
  %509 = load %3*, %3** %4, align 8
  %510 = getelementptr inbounds %3, %3* %509, i32 0, i32 1
  %511 = bitcast %5* %510 to i32*
  store i32 2, i32* %511, align 8
  br label %512

512:                                              ; preds = %508
  br label %513

513:                                              ; preds = %512
  store i32 1, i32* %26, align 4
  br label %635

514:                                              ; preds = %504, %497
  %515 = load %3*, %3** %11, align 8
  %516 = icmp ne %3* %515, null
  br i1 %516, label %517, label %521

517:                                              ; preds = %514
  %518 = load %3*, %3** %11, align 8
  %519 = call i32 @php_le_stream_context()
  %520 = call i8* @zend_fetch_resource_ex(%3* %518, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %519)
  br label %531

521:                                              ; preds = %514
  %522 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %523 = icmp ne %1* %522, null
  br i1 %523, label %524, label %526

524:                                              ; preds = %521
  %525 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %528

526:                                              ; preds = %521
  %527 = call %1* @php_stream_context_alloc()
  store %1* %527, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %528

528:                                              ; preds = %526, %524
  %529 = phi %1* [ %525, %524 ], [ %527, %526 ]
  %530 = bitcast %1* %529 to i8*
  br label %531

531:                                              ; preds = %528, %517
  %532 = phi i8* [ %520, %517 ], [ %530, %528 ]
  %533 = bitcast i8* %532 to %1*
  store %1* %533, %1** %12, align 8
  %534 = load i8*, i8** %5, align 8
  %535 = load i8, i8* %7, align 1
  %536 = zext i8 %535 to i32
  %537 = icmp ne i32 %536, 0
  %538 = zext i1 %537 to i64
  %539 = select i1 %537, i32 1, i32 0
  %540 = or i32 %539, 8
  %541 = load %1*, %1** %12, align 8
  %542 = call %53* @_php_stream_open_wrapper_ex(i8* %534, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @79, i32 0, i32 0), i32 %540, %13** null, %1* %541)
  store %53* %542, %53** %8, align 8
  %543 = load %53*, %53** %8, align 8
  %544 = icmp ne %53* %543, null
  br i1 %544, label %552, label %545

545:                                              ; preds = %531
  br label %546

546:                                              ; preds = %545
  %547 = load %3*, %3** %4, align 8
  %548 = getelementptr inbounds %3, %3* %547, i32 0, i32 1
  %549 = bitcast %5* %548 to i32*
  store i32 2, i32* %549, align 8
  br label %550

550:                                              ; preds = %546
  br label %551

551:                                              ; preds = %550
  store i32 1, i32* %26, align 4
  br label %635

552:                                              ; preds = %531
  %553 = load i64, i64* %9, align 8
  %554 = icmp ne i64 %553, 0
  br i1 %554, label %555, label %574

555:                                              ; preds = %552
  %556 = load %53*, %53** %8, align 8
  %557 = load i64, i64* %9, align 8
  %558 = load i64, i64* %9, align 8
  %559 = icmp sgt i64 %558, 0
  %560 = zext i1 %559 to i64
  %561 = select i1 %559, i32 0, i32 2
  %562 = call i32 @_php_stream_seek(%53* %556, i64 %557, i32 %561)
  %563 = icmp slt i32 %562, 0
  br i1 %563, label %564, label %574

564:                                              ; preds = %555
  %565 = load i64, i64* %9, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @88, i32 0, i32 0), i64 %565)
  %566 = load %53*, %53** %8, align 8
  %567 = call i32 @_php_stream_free(%53* %566, i32 3)
  br label %568

568:                                              ; preds = %564
  %569 = load %3*, %3** %4, align 8
  %570 = getelementptr inbounds %3, %3* %569, i32 0, i32 1
  %571 = bitcast %5* %570 to i32*
  store i32 2, i32* %571, align 8
  br label %572

572:                                              ; preds = %568
  br label %573

573:                                              ; preds = %572
  store i32 1, i32* %26, align 4
  br label %635

574:                                              ; preds = %555, %552
  %575 = load i64, i64* %10, align 8
  %576 = icmp sgt i64 %575, 2147483647
  br i1 %576, label %577, label %579

577:                                              ; preds = %574
  %578 = load i64, i64* %10, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @89, i32 0, i32 0), i64 %578, i32 2147483647)
  store i64 2147483647, i64* %10, align 8
  br label %579

579:                                              ; preds = %577, %574
  %580 = load %53*, %53** %8, align 8
  %581 = load i64, i64* %10, align 8
  %582 = call %13* @_php_stream_copy_to_mem(%53* %580, i64 %581, i32 0)
  store %13* %582, %13** %13, align 8
  %583 = icmp ne %13* %582, null
  br i1 %583, label %584, label %612

584:                                              ; preds = %579
  br label %585

585:                                              ; preds = %584
  %586 = bitcast %3** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %586) #11
  %587 = load %3*, %3** %4, align 8
  store %3* %587, %3** %27, align 8
  %588 = bitcast %13** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %588) #11
  %589 = load %13*, %13** %13, align 8
  store %13* %589, %13** %28, align 8
  %590 = load %13*, %13** %28, align 8
  %591 = load %3*, %3** %27, align 8
  %592 = getelementptr inbounds %3, %3* %591, i32 0, i32 0
  %593 = bitcast %4* %592 to %13**
  store %13* %590, %13** %593, align 8
  %594 = load %13*, %13** %28, align 8
  %595 = getelementptr inbounds %13, %13* %594, i32 0, i32 0
  %596 = getelementptr inbounds %8, %8* %595, i32 0, i32 1
  %597 = bitcast %9* %596 to %67*
  %598 = getelementptr inbounds %67, %67* %597, i32 0, i32 1
  %599 = load i8, i8* %598, align 1
  %600 = zext i8 %599 to i32
  %601 = and i32 %600, 2
  %602 = icmp ne i32 %601, 0
  %603 = zext i1 %602 to i64
  %604 = select i1 %602, i32 6, i32 5126
  %605 = load %3*, %3** %27, align 8
  %606 = getelementptr inbounds %3, %3* %605, i32 0, i32 1
  %607 = bitcast %5* %606 to i32*
  store i32 %604, i32* %607, align 8
  %608 = bitcast %13** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %608) #11
  %609 = bitcast %3** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %609) #11
  br label %610

610:                                              ; preds = %585
  br label %611

611:                                              ; preds = %610
  br label %632

612:                                              ; preds = %579
  br label %613

613:                                              ; preds = %612
  br label %614

614:                                              ; preds = %613
  %615 = bitcast %3** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %615) #11
  %616 = load %3*, %3** %4, align 8
  store %3* %616, %3** %29, align 8
  %617 = bitcast %13** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %617) #11
  %618 = load %13*, %13** @zend_empty_string, align 8
  store %13* %618, %13** %30, align 8
  %619 = load %13*, %13** %30, align 8
  %620 = load %3*, %3** %29, align 8
  %621 = getelementptr inbounds %3, %3* %620, i32 0, i32 0
  %622 = bitcast %4* %621 to %13**
  store %13* %619, %13** %622, align 8
  %623 = load %3*, %3** %29, align 8
  %624 = getelementptr inbounds %3, %3* %623, i32 0, i32 1
  %625 = bitcast %5* %624 to i32*
  store i32 6, i32* %625, align 8
  %626 = bitcast %13** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %626) #11
  %627 = bitcast %3** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %627) #11
  br label %628

628:                                              ; preds = %614
  br label %629

629:                                              ; preds = %628
  br label %630

630:                                              ; preds = %629
  br label %631

631:                                              ; preds = %630
  br label %632

632:                                              ; preds = %631, %611
  %633 = load %53*, %53** %8, align 8
  %634 = call i32 @_php_stream_free(%53* %633, i32 3)
  store i32 0, i32* %26, align 4
  br label %635

635:                                              ; preds = %632, %573, %551, %513, %483
  %636 = bitcast %13** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %636) #11
  %637 = bitcast %1** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %637) #11
  %638 = bitcast %3** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %638) #11
  %639 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %639) #11
  %640 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %640) #11
  %641 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %641) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #11
  %642 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %642) #11
  %643 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %643) #11
  %644 = load i32, i32* %26, align 4
  switch i32 %644, label %646 [
    i32 0, label %645
    i32 1, label %645
  ]

645:                                              ; preds = %635, %635
  ret void

646:                                              ; preds = %635
  unreachable
}

declare dso_local i8* @zend_fetch_resource_ex(%3*, i8*, i32) #1

declare dso_local %1* @php_stream_context_alloc() #1

declare dso_local i32 @_php_stream_seek(%53*, i64, i32) #1

declare dso_local %13* @_php_stream_copy_to_mem(%53*, i64, i32) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_file_put_contents(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %53*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %3*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %3*, align 8
  %12 = alloca %1*, align 8
  %13 = alloca %53*, align 8
  %14 = alloca [3 x i8], align 1
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %3*, align 8
  %21 = alloca %3*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca %3*, align 8
  %31 = alloca %10*, align 8
  %32 = alloca %12*, align 8
  %33 = alloca %12*, align 8
  %34 = alloca %3*, align 8
  %35 = alloca %13*, align 8
  %36 = alloca %3, align 8
  %37 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %38 = bitcast %53** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  %39 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  %40 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  %41 = bitcast %3** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  %42 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #11
  store i64 0, i64* %9, align 8
  %43 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #11
  store i64 0, i64* %10, align 8
  %44 = bitcast %3** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #11
  store %3* null, %3** %11, align 8
  %45 = bitcast %1** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #11
  store %1* null, %1** %12, align 8
  %46 = bitcast %53** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #11
  store %53* null, %53** %13, align 8
  %47 = bitcast [3 x i8]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3, i8* %47) #11
  %48 = bitcast [3 x i8]* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @90, i32 0, i32 0), i64 3, i1 false)
  br label %49

49:                                               ; preds = %2
  %50 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #11
  store i32 0, i32* %15, align 4
  %51 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #11
  store i32 2, i32* %16, align 4
  %52 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #11
  store i32 4, i32* %17, align 4
  %53 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #11
  %54 = load %28*, %28** %3, align 8
  %55 = getelementptr inbounds %28, %28* %54, i32 0, i32 4
  %56 = getelementptr inbounds %3, %3* %55, i32 0, i32 2
  %57 = bitcast %6* %56 to i32*
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %18, align 4
  %59 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #11
  %60 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #11
  %61 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %61) #11
  store %3* null, %3** %21, align 8
  %62 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #11
  store i32 0, i32* %22, align 4
  %63 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #11
  store i8* null, i8** %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %25) #11
  store i8 0, i8* %25, align 1
  %64 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %64) #11
  store i32 0, i32* %26, align 4
  %65 = load i32, i32* %19, align 4
  %66 = load %3*, %3** %20, align 8
  %67 = load %3*, %3** %21, align 8
  %68 = load i32, i32* %22, align 4
  %69 = load i8*, i8** %23, align 8
  %70 = load i8, i8* %24, align 1
  %71 = load i8, i8* %25, align 1
  br label %72

72:                                               ; preds = %49
  %73 = load i32, i32* %18, align 4
  %74 = load i32, i32* %16, align 4
  %75 = icmp slt i32 %73, %74
  %76 = xor i1 %75, true
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = call i64 @llvm.expect.i64(i64 %79, i64 0)
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %101, label %82

82:                                               ; preds = %72
  %83 = load i32, i32* %18, align 4
  %84 = load i32, i32* %17, align 4
  %85 = icmp sgt i32 %83, %84
  %86 = xor i1 %85, true
  %87 = xor i1 %86, true
  %88 = zext i1 %87 to i32
  %89 = sext i32 %88 to i64
  %90 = call i64 @llvm.expect.i64(i64 %89, i64 0)
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %92, label %105

92:                                               ; preds = %82
  %93 = load i32, i32* %17, align 4
  %94 = icmp sge i32 %93, 0
  %95 = xor i1 %94, true
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 1)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %92, %72
  %102 = load i32, i32* %18, align 4
  %103 = load i32, i32* %16, align 4
  %104 = load i32, i32* %17, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %102, i32 %103, i32 %104)
  store i32 1, i32* %26, align 4
  br label %379

105:                                              ; preds = %92, %82
  store i32 0, i32* %19, align 4
  %106 = load %28*, %28** %3, align 8
  %107 = bitcast %28* %106 to %3*
  %108 = getelementptr inbounds %3, %3* %107, i64 4
  store %3* %108, %3** %20, align 8
  %109 = load i32, i32* %19, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %19, align 4
  br label %111

111:                                              ; preds = %105
  %112 = load i32, i32* %19, align 4
  %113 = load i32, i32* %16, align 4
  %114 = icmp sle i32 %112, %113
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = load i8, i8* %25, align 1
  %117 = zext i8 %116 to i32
  %118 = icmp eq i32 %117, 1
  br label %119

119:                                              ; preds = %115, %111
  %120 = phi i1 [ true, %111 ], [ %118, %115 ]
  %121 = xor i1 %120, true
  %122 = zext i1 %121 to i32
  %123 = sext i32 %122 to i64
  %124 = call i64 @llvm.expect.i64(i64 %123, i64 0)
  %125 = icmp ne i64 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %119
  unreachable

127:                                              ; preds = %119
  br label %128

128:                                              ; preds = %127
  br label %129

129:                                              ; preds = %128
  br label %130

130:                                              ; preds = %129
  %131 = load i32, i32* %19, align 4
  %132 = load i32, i32* %16, align 4
  %133 = icmp sgt i32 %131, %132
  br i1 %133, label %138, label %134

134:                                              ; preds = %130
  %135 = load i8, i8* %25, align 1
  %136 = zext i8 %135 to i32
  %137 = icmp eq i32 %136, 0
  br label %138

138:                                              ; preds = %134, %130
  %139 = phi i1 [ true, %130 ], [ %137, %134 ]
  %140 = xor i1 %139, true
  %141 = zext i1 %140 to i32
  %142 = sext i32 %141 to i64
  %143 = call i64 @llvm.expect.i64(i64 %142, i64 0)
  %144 = icmp ne i64 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %138
  unreachable

146:                                              ; preds = %138
  br label %147

147:                                              ; preds = %146
  br label %148

148:                                              ; preds = %147
  %149 = load i8, i8* %25, align 1
  %150 = icmp ne i8 %149, 0
  br i1 %150, label %151, label %163

151:                                              ; preds = %148
  %152 = load i32, i32* %19, align 4
  %153 = load i32, i32* %18, align 4
  %154 = icmp sgt i32 %152, %153
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = zext i1 %156 to i32
  %158 = sext i32 %157 to i64
  %159 = call i64 @llvm.expect.i64(i64 %158, i64 0)
  %160 = icmp ne i64 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %151
  br label %379

162:                                              ; preds = %151
  br label %163

163:                                              ; preds = %162, %148
  %164 = load %3*, %3** %20, align 8
  %165 = getelementptr inbounds %3, %3* %164, i32 1
  store %3* %165, %3** %20, align 8
  %166 = load %3*, %3** %20, align 8
  store %3* %166, %3** %21, align 8
  %167 = load %3*, %3** %21, align 8
  %168 = call i32 @152(%3* %167, i8** %6, i64* %7, i32 0)
  %169 = icmp ne i32 %168, 0
  %170 = xor i1 %169, true
  %171 = xor i1 %170, true
  %172 = xor i1 %171, true
  %173 = zext i1 %172 to i32
  %174 = sext i32 %173 to i64
  %175 = call i64 @llvm.expect.i64(i64 %174, i64 0)
  %176 = icmp ne i64 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %163
  store i32 6, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %379

178:                                              ; preds = %163
  %179 = load i32, i32* %19, align 4
  %180 = add nsw i32 %179, 1
  store i32 %180, i32* %19, align 4
  br label %181

181:                                              ; preds = %178
  %182 = load i32, i32* %19, align 4
  %183 = load i32, i32* %16, align 4
  %184 = icmp sle i32 %182, %183
  br i1 %184, label %189, label %185

185:                                              ; preds = %181
  %186 = load i8, i8* %25, align 1
  %187 = zext i8 %186 to i32
  %188 = icmp eq i32 %187, 1
  br label %189

189:                                              ; preds = %185, %181
  %190 = phi i1 [ true, %181 ], [ %188, %185 ]
  %191 = xor i1 %190, true
  %192 = zext i1 %191 to i32
  %193 = sext i32 %192 to i64
  %194 = call i64 @llvm.expect.i64(i64 %193, i64 0)
  %195 = icmp ne i64 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %189
  unreachable

197:                                              ; preds = %189
  br label %198

198:                                              ; preds = %197
  br label %199

199:                                              ; preds = %198
  br label %200

200:                                              ; preds = %199
  %201 = load i32, i32* %19, align 4
  %202 = load i32, i32* %16, align 4
  %203 = icmp sgt i32 %201, %202
  br i1 %203, label %208, label %204

204:                                              ; preds = %200
  %205 = load i8, i8* %25, align 1
  %206 = zext i8 %205 to i32
  %207 = icmp eq i32 %206, 0
  br label %208

208:                                              ; preds = %204, %200
  %209 = phi i1 [ true, %200 ], [ %207, %204 ]
  %210 = xor i1 %209, true
  %211 = zext i1 %210 to i32
  %212 = sext i32 %211 to i64
  %213 = call i64 @llvm.expect.i64(i64 %212, i64 0)
  %214 = icmp ne i64 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %208
  unreachable

216:                                              ; preds = %208
  br label %217

217:                                              ; preds = %216
  br label %218

218:                                              ; preds = %217
  %219 = load i8, i8* %25, align 1
  %220 = icmp ne i8 %219, 0
  br i1 %220, label %221, label %233

221:                                              ; preds = %218
  %222 = load i32, i32* %19, align 4
  %223 = load i32, i32* %18, align 4
  %224 = icmp sgt i32 %222, %223
  %225 = xor i1 %224, true
  %226 = xor i1 %225, true
  %227 = zext i1 %226 to i32
  %228 = sext i32 %227 to i64
  %229 = call i64 @llvm.expect.i64(i64 %228, i64 0)
  %230 = icmp ne i64 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %221
  br label %379

232:                                              ; preds = %221
  br label %233

233:                                              ; preds = %232, %218
  %234 = load %3*, %3** %20, align 8
  %235 = getelementptr inbounds %3, %3* %234, i32 1
  store %3* %235, %3** %20, align 8
  %236 = load %3*, %3** %20, align 8
  store %3* %236, %3** %21, align 8
  %237 = load %3*, %3** %21, align 8
  call void @151(%3* %237, %3** %8, i32 0)
  store i8 1, i8* %25, align 1
  %238 = load i32, i32* %19, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %19, align 4
  br label %240

240:                                              ; preds = %233
  %241 = load i32, i32* %19, align 4
  %242 = load i32, i32* %16, align 4
  %243 = icmp sle i32 %241, %242
  br i1 %243, label %248, label %244

244:                                              ; preds = %240
  %245 = load i8, i8* %25, align 1
  %246 = zext i8 %245 to i32
  %247 = icmp eq i32 %246, 1
  br label %248

248:                                              ; preds = %244, %240
  %249 = phi i1 [ true, %240 ], [ %247, %244 ]
  %250 = xor i1 %249, true
  %251 = zext i1 %250 to i32
  %252 = sext i32 %251 to i64
  %253 = call i64 @llvm.expect.i64(i64 %252, i64 0)
  %254 = icmp ne i64 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %248
  unreachable

256:                                              ; preds = %248
  br label %257

257:                                              ; preds = %256
  br label %258

258:                                              ; preds = %257
  br label %259

259:                                              ; preds = %258
  %260 = load i32, i32* %19, align 4
  %261 = load i32, i32* %16, align 4
  %262 = icmp sgt i32 %260, %261
  br i1 %262, label %267, label %263

263:                                              ; preds = %259
  %264 = load i8, i8* %25, align 1
  %265 = zext i8 %264 to i32
  %266 = icmp eq i32 %265, 0
  br label %267

267:                                              ; preds = %263, %259
  %268 = phi i1 [ true, %259 ], [ %266, %263 ]
  %269 = xor i1 %268, true
  %270 = zext i1 %269 to i32
  %271 = sext i32 %270 to i64
  %272 = call i64 @llvm.expect.i64(i64 %271, i64 0)
  %273 = icmp ne i64 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %267
  unreachable

275:                                              ; preds = %267
  br label %276

276:                                              ; preds = %275
  br label %277

277:                                              ; preds = %276
  %278 = load i8, i8* %25, align 1
  %279 = icmp ne i8 %278, 0
  br i1 %279, label %280, label %292

280:                                              ; preds = %277
  %281 = load i32, i32* %19, align 4
  %282 = load i32, i32* %18, align 4
  %283 = icmp sgt i32 %281, %282
  %284 = xor i1 %283, true
  %285 = xor i1 %284, true
  %286 = zext i1 %285 to i32
  %287 = sext i32 %286 to i64
  %288 = call i64 @llvm.expect.i64(i64 %287, i64 0)
  %289 = icmp ne i64 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %280
  br label %379

291:                                              ; preds = %280
  br label %292

292:                                              ; preds = %291, %277
  %293 = load %3*, %3** %20, align 8
  %294 = getelementptr inbounds %3, %3* %293, i32 1
  store %3* %294, %3** %20, align 8
  %295 = load %3*, %3** %20, align 8
  store %3* %295, %3** %21, align 8
  %296 = load %3*, %3** %21, align 8
  %297 = call i32 @149(%3* %296, i64* %10, i8* %24, i32 0, i32 0)
  %298 = icmp ne i32 %297, 0
  %299 = xor i1 %298, true
  %300 = xor i1 %299, true
  %301 = xor i1 %300, true
  %302 = zext i1 %301 to i32
  %303 = sext i32 %302 to i64
  %304 = call i64 @llvm.expect.i64(i64 %303, i64 0)
  %305 = icmp ne i64 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %292
  store i32 0, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %379

307:                                              ; preds = %292
  %308 = load i32, i32* %19, align 4
  %309 = add nsw i32 %308, 1
  store i32 %309, i32* %19, align 4
  br label %310

310:                                              ; preds = %307
  %311 = load i32, i32* %19, align 4
  %312 = load i32, i32* %16, align 4
  %313 = icmp sle i32 %311, %312
  br i1 %313, label %318, label %314

314:                                              ; preds = %310
  %315 = load i8, i8* %25, align 1
  %316 = zext i8 %315 to i32
  %317 = icmp eq i32 %316, 1
  br label %318

318:                                              ; preds = %314, %310
  %319 = phi i1 [ true, %310 ], [ %317, %314 ]
  %320 = xor i1 %319, true
  %321 = zext i1 %320 to i32
  %322 = sext i32 %321 to i64
  %323 = call i64 @llvm.expect.i64(i64 %322, i64 0)
  %324 = icmp ne i64 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %318
  unreachable

326:                                              ; preds = %318
  br label %327

327:                                              ; preds = %326
  br label %328

328:                                              ; preds = %327
  br label %329

329:                                              ; preds = %328
  %330 = load i32, i32* %19, align 4
  %331 = load i32, i32* %16, align 4
  %332 = icmp sgt i32 %330, %331
  br i1 %332, label %337, label %333

333:                                              ; preds = %329
  %334 = load i8, i8* %25, align 1
  %335 = zext i8 %334 to i32
  %336 = icmp eq i32 %335, 0
  br label %337

337:                                              ; preds = %333, %329
  %338 = phi i1 [ true, %329 ], [ %336, %333 ]
  %339 = xor i1 %338, true
  %340 = zext i1 %339 to i32
  %341 = sext i32 %340 to i64
  %342 = call i64 @llvm.expect.i64(i64 %341, i64 0)
  %343 = icmp ne i64 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %337
  unreachable

345:                                              ; preds = %337
  br label %346

346:                                              ; preds = %345
  br label %347

347:                                              ; preds = %346
  %348 = load i8, i8* %25, align 1
  %349 = icmp ne i8 %348, 0
  br i1 %349, label %350, label %362

350:                                              ; preds = %347
  %351 = load i32, i32* %19, align 4
  %352 = load i32, i32* %18, align 4
  %353 = icmp sgt i32 %351, %352
  %354 = xor i1 %353, true
  %355 = xor i1 %354, true
  %356 = zext i1 %355 to i32
  %357 = sext i32 %356 to i64
  %358 = call i64 @llvm.expect.i64(i64 %357, i64 0)
  %359 = icmp ne i64 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %350
  br label %379

361:                                              ; preds = %350
  br label %362

362:                                              ; preds = %361, %347
  %363 = load %3*, %3** %20, align 8
  %364 = getelementptr inbounds %3, %3* %363, i32 1
  store %3* %364, %3** %20, align 8
  %365 = load %3*, %3** %20, align 8
  store %3* %365, %3** %21, align 8
  %366 = load %3*, %3** %21, align 8
  %367 = call i32 @148(%3* %366, %3** %11, i32 1)
  %368 = icmp ne i32 %367, 0
  %369 = xor i1 %368, true
  %370 = xor i1 %369, true
  %371 = xor i1 %370, true
  %372 = zext i1 %371 to i32
  %373 = sext i32 %372 to i64
  %374 = call i64 @llvm.expect.i64(i64 %373, i64 0)
  %375 = icmp ne i64 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %362
  store i32 5, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %379

377:                                              ; preds = %362
  br label %378

378:                                              ; preds = %377
  br label %379

379:                                              ; preds = %378, %376, %360, %306, %290, %231, %177, %161, %101
  %380 = load i32, i32* %26, align 4
  %381 = icmp ne i32 %380, 0
  %382 = xor i1 %381, true
  %383 = xor i1 %382, true
  %384 = zext i1 %383 to i32
  %385 = sext i32 %384 to i64
  %386 = call i64 @llvm.expect.i64(i64 %385, i64 0)
  %387 = icmp ne i64 %386, 0
  br i1 %387, label %388, label %411

388:                                              ; preds = %379
  %389 = load i32, i32* %26, align 4
  %390 = icmp eq i32 %389, 2
  br i1 %390, label %391, label %394

391:                                              ; preds = %388
  %392 = load i32, i32* %19, align 4
  %393 = load i8*, i8** %23, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %392, i8* %393)
  br label %410

394:                                              ; preds = %388
  %395 = load i32, i32* %26, align 4
  %396 = icmp eq i32 %395, 3
  br i1 %396, label %397, label %401

397:                                              ; preds = %394
  %398 = load i32, i32* %19, align 4
  %399 = load i8*, i8** %23, align 8
  %400 = load %3*, %3** %21, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %398, i8* %399, %3* %400)
  br label %409

401:                                              ; preds = %394
  %402 = load i32, i32* %26, align 4
  %403 = icmp eq i32 %402, 4
  br i1 %403, label %404, label %408

404:                                              ; preds = %401
  %405 = load i32, i32* %19, align 4
  %406 = load i32, i32* %22, align 4
  %407 = load %3*, %3** %21, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %405, i32 %406, %3* %407)
  br label %408

408:                                              ; preds = %404, %401
  br label %409

409:                                              ; preds = %408, %397
  br label %410

410:                                              ; preds = %409, %391
  store i32 1, i32* %27, align 4
  br label %412

411:                                              ; preds = %379
  store i32 0, i32* %27, align 4
  br label %412

412:                                              ; preds = %411, %410
  %413 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %413) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %25) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #11
  %414 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %414) #11
  %415 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %415) #11
  %416 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %416) #11
  %417 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %417) #11
  %418 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %418) #11
  %419 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %419) #11
  %420 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %420) #11
  %421 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %421) #11
  %422 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %422) #11
  %423 = load i32, i32* %27, align 4
  switch i32 %423, label %811 [
    i32 0, label %424
  ]

424:                                              ; preds = %412
  br label %425

425:                                              ; preds = %424
  br label %426

426:                                              ; preds = %425
  %427 = load %3*, %3** %8, align 8
  %428 = call zeroext i8 @150(%3* %427)
  %429 = zext i8 %428 to i32
  %430 = icmp eq i32 %429, 9
  br i1 %430, label %431, label %449

431:                                              ; preds = %426
  br label %432

432:                                              ; preds = %431
  %433 = load %3*, %3** %8, align 8
  %434 = call i32 @php_file_le_stream()
  %435 = call i32 @php_file_le_pstream()
  %436 = call i8* @zend_fetch_resource2_ex(%3* %433, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %434, i32 %435)
  %437 = bitcast i8* %436 to %53*
  store %53* %437, %53** %13, align 8
  %438 = icmp eq %53* %437, null
  br i1 %438, label %439, label %446

439:                                              ; preds = %432
  br label %440

440:                                              ; preds = %439
  %441 = load %3*, %3** %4, align 8
  %442 = getelementptr inbounds %3, %3* %441, i32 0, i32 1
  %443 = bitcast %5* %442 to i32*
  store i32 2, i32* %443, align 8
  br label %444

444:                                              ; preds = %440
  br label %445

445:                                              ; preds = %444
  store i32 1, i32* %27, align 4
  br label %811

446:                                              ; preds = %432
  br label %447

447:                                              ; preds = %446
  br label %448

448:                                              ; preds = %447
  br label %449

449:                                              ; preds = %448, %426
  %450 = load %3*, %3** %11, align 8
  %451 = icmp ne %3* %450, null
  br i1 %451, label %452, label %456

452:                                              ; preds = %449
  %453 = load %3*, %3** %11, align 8
  %454 = call i32 @php_le_stream_context()
  %455 = call i8* @zend_fetch_resource_ex(%3* %453, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %454)
  br label %473

456:                                              ; preds = %449
  %457 = load i64, i64* %10, align 8
  %458 = and i64 %457, 16
  %459 = icmp ne i64 %458, 0
  br i1 %459, label %460, label %461

460:                                              ; preds = %456
  br label %470

461:                                              ; preds = %456
  %462 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %463 = icmp ne %1* %462, null
  br i1 %463, label %464, label %466

464:                                              ; preds = %461
  %465 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %468

466:                                              ; preds = %461
  %467 = call %1* @php_stream_context_alloc()
  store %1* %467, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %468

468:                                              ; preds = %466, %464
  %469 = phi %1* [ %465, %464 ], [ %467, %466 ]
  br label %470

470:                                              ; preds = %468, %460
  %471 = phi %1* [ null, %460 ], [ %469, %468 ]
  %472 = bitcast %1* %471 to i8*
  br label %473

473:                                              ; preds = %470, %452
  %474 = phi i8* [ %455, %452 ], [ %472, %470 ]
  %475 = bitcast i8* %474 to %1*
  store %1* %475, %1** %12, align 8
  %476 = load i64, i64* %10, align 8
  %477 = and i64 %476, 8
  %478 = icmp ne i64 %477, 0
  br i1 %478, label %479, label %481

479:                                              ; preds = %473
  %480 = getelementptr inbounds [3 x i8], [3 x i8]* %14, i64 0, i64 0
  store i8 97, i8* %480, align 1
  br label %507

481:                                              ; preds = %473
  %482 = load i64, i64* %10, align 8
  %483 = and i64 %482, 2
  %484 = icmp ne i64 %483, 0
  br i1 %484, label %485, label %506

485:                                              ; preds = %481
  %486 = load i8*, i8** %6, align 8
  %487 = load i8*, i8** %6, align 8
  %488 = load i64, i64* %7, align 8
  %489 = getelementptr inbounds i8, i8* %487, i64 %488
  %490 = call i8* @154(i8* %486, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @91, i32 0, i32 0), i64 3, i8* %489)
  %491 = icmp ne i8* %490, null
  br i1 %491, label %492, label %504

492:                                              ; preds = %485
  %493 = load i8*, i8** %6, align 8
  %494 = call i32 @strncasecmp(i8* %493, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @92, i32 0, i32 0), i64 7) #13
  %495 = icmp ne i32 %494, 0
  br i1 %495, label %496, label %503

496:                                              ; preds = %492
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @93, i32 0, i32 0))
  br label %497

497:                                              ; preds = %496
  %498 = load %3*, %3** %4, align 8
  %499 = getelementptr inbounds %3, %3* %498, i32 0, i32 1
  %500 = bitcast %5* %499 to i32*
  store i32 2, i32* %500, align 8
  br label %501

501:                                              ; preds = %497
  br label %502

502:                                              ; preds = %501
  store i32 1, i32* %27, align 4
  br label %811

503:                                              ; preds = %492
  br label %504

504:                                              ; preds = %503, %485
  %505 = getelementptr inbounds [3 x i8], [3 x i8]* %14, i64 0, i64 0
  store i8 99, i8* %505, align 1
  br label %506

506:                                              ; preds = %504, %481
  br label %507

507:                                              ; preds = %506, %479
  %508 = getelementptr inbounds [3 x i8], [3 x i8]* %14, i64 0, i64 2
  store i8 0, i8* %508, align 1
  %509 = load i8*, i8** %6, align 8
  %510 = getelementptr inbounds [3 x i8], [3 x i8]* %14, i32 0, i32 0
  %511 = load i64, i64* %10, align 8
  %512 = and i64 %511, 1
  %513 = icmp ne i64 %512, 0
  %514 = zext i1 %513 to i64
  %515 = select i1 %513, i32 1, i32 0
  %516 = or i32 %515, 8
  %517 = load %1*, %1** %12, align 8
  %518 = call %53* @_php_stream_open_wrapper_ex(i8* %509, i8* %510, i32 %516, %13** null, %1* %517)
  store %53* %518, %53** %5, align 8
  %519 = load %53*, %53** %5, align 8
  %520 = icmp eq %53* %519, null
  br i1 %520, label %521, label %528

521:                                              ; preds = %507
  br label %522

522:                                              ; preds = %521
  %523 = load %3*, %3** %4, align 8
  %524 = getelementptr inbounds %3, %3* %523, i32 0, i32 1
  %525 = bitcast %5* %524 to i32*
  store i32 2, i32* %525, align 8
  br label %526

526:                                              ; preds = %522
  br label %527

527:                                              ; preds = %526
  store i32 1, i32* %27, align 4
  br label %811

528:                                              ; preds = %507
  %529 = load i64, i64* %10, align 8
  %530 = and i64 %529, 2
  %531 = icmp ne i64 %530, 0
  br i1 %531, label %532, label %553

532:                                              ; preds = %528
  %533 = load %53*, %53** %5, align 8
  %534 = call i32 @_php_stream_set_option(%53* %533, i32 6, i32 0, i8* inttoptr (i64 1 to i8*))
  %535 = icmp ne i32 %534, 0
  %536 = xor i1 %535, true
  %537 = zext i1 %536 to i32
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %540

539:                                              ; preds = %532
  br i1 true, label %544, label %553

540:                                              ; preds = %532
  %541 = load %53*, %53** %5, align 8
  %542 = call i32 @_php_stream_set_option(%53* %541, i32 6, i32 2, i8* null)
  %543 = icmp ne i32 %542, 0
  br i1 %543, label %544, label %553

544:                                              ; preds = %540, %539
  %545 = load %53*, %53** %5, align 8
  %546 = call i32 @_php_stream_free(%53* %545, i32 3)
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @94, i32 0, i32 0))
  br label %547

547:                                              ; preds = %544
  %548 = load %3*, %3** %4, align 8
  %549 = getelementptr inbounds %3, %3* %548, i32 0, i32 1
  %550 = bitcast %5* %549 to i32*
  store i32 2, i32* %550, align 8
  br label %551

551:                                              ; preds = %547
  br label %552

552:                                              ; preds = %551
  store i32 1, i32* %27, align 4
  br label %811

553:                                              ; preds = %540, %539, %528
  %554 = getelementptr inbounds [3 x i8], [3 x i8]* %14, i64 0, i64 0
  %555 = load i8, i8* %554, align 1
  %556 = sext i8 %555 to i32
  %557 = icmp eq i32 %556, 99
  br i1 %557, label %558, label %561

558:                                              ; preds = %553
  %559 = load %53*, %53** %5, align 8
  %560 = call i32 @_php_stream_truncate_set_size(%53* %559, i64 0)
  br label %561

561:                                              ; preds = %558, %553
  %562 = load %3*, %3** %8, align 8
  %563 = call zeroext i8 @150(%3* %562)
  %564 = zext i8 %563 to i32
  switch i32 %564, label %787 [
    i32 9, label %565
    i32 1, label %581
    i32 4, label %581
    i32 5, label %581
    i32 2, label %581
    i32 3, label %581
    i32 6, label %595
    i32 7, label %636
    i32 8, label %740
  ]

565:                                              ; preds = %561
  %566 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %566) #11
  %567 = load %53*, %53** %13, align 8
  %568 = load %53*, %53** %5, align 8
  %569 = call i32 @_php_stream_copy_to_stream_ex(%53* %567, %53* %568, i64 -1, i64* %28)
  %570 = icmp ne i32 %569, 0
  br i1 %570, label %571, label %572

571:                                              ; preds = %565
  store i64 -1, i64* %9, align 8
  br label %579

572:                                              ; preds = %565
  %573 = load i64, i64* %28, align 8
  %574 = icmp ugt i64 %573, 9223372036854775807
  br i1 %574, label %575, label %577

575:                                              ; preds = %572
  %576 = load i64, i64* %28, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @95, i32 0, i32 0), i64 %576, i64 9223372036854775807)
  store i64 9223372036854775807, i64* %28, align 8
  br label %577

577:                                              ; preds = %575, %572
  %578 = load i64, i64* %28, align 8
  store i64 %578, i64* %9, align 8
  br label %579

579:                                              ; preds = %577, %571
  store i32 32, i32* %27, align 4
  %580 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %580) #11
  br label %788

581:                                              ; preds = %561, %561, %561, %561, %561
  %582 = load %3*, %3** %8, align 8
  %583 = call zeroext i8 @150(%3* %582)
  %584 = zext i8 %583 to i32
  %585 = icmp ne i32 %584, 6
  br i1 %585, label %586, label %594

586:                                              ; preds = %581
  %587 = load %3*, %3** %8, align 8
  %588 = call zeroext i8 @150(%3* %587)
  %589 = zext i8 %588 to i32
  %590 = icmp ne i32 %589, 6
  br i1 %590, label %591, label %593

591:                                              ; preds = %586
  %592 = load %3*, %3** %8, align 8
  call void @_convert_to_string(%3* %592)
  br label %593

593:                                              ; preds = %591, %586
  br label %594

594:                                              ; preds = %593, %581
  br label %595

595:                                              ; preds = %561, %594
  %596 = load %3*, %3** %8, align 8
  %597 = getelementptr inbounds %3, %3* %596, i32 0, i32 0
  %598 = bitcast %4* %597 to %13**
  %599 = load %13*, %13** %598, align 8
  %600 = getelementptr inbounds %13, %13* %599, i32 0, i32 2
  %601 = load i64, i64* %600, align 8
  %602 = icmp ne i64 %601, 0
  br i1 %602, label %603, label %635

603:                                              ; preds = %595
  %604 = load %53*, %53** %5, align 8
  %605 = load %3*, %3** %8, align 8
  %606 = getelementptr inbounds %3, %3* %605, i32 0, i32 0
  %607 = bitcast %4* %606 to %13**
  %608 = load %13*, %13** %607, align 8
  %609 = getelementptr inbounds %13, %13* %608, i32 0, i32 3
  %610 = getelementptr inbounds [1 x i8], [1 x i8]* %609, i32 0, i32 0
  %611 = load %3*, %3** %8, align 8
  %612 = getelementptr inbounds %3, %3* %611, i32 0, i32 0
  %613 = bitcast %4* %612 to %13**
  %614 = load %13*, %13** %613, align 8
  %615 = getelementptr inbounds %13, %13* %614, i32 0, i32 2
  %616 = load i64, i64* %615, align 8
  %617 = call i64 @_php_stream_write(%53* %604, i8* %610, i64 %616)
  store i64 %617, i64* %9, align 8
  %618 = load i64, i64* %9, align 8
  %619 = load %3*, %3** %8, align 8
  %620 = getelementptr inbounds %3, %3* %619, i32 0, i32 0
  %621 = bitcast %4* %620 to %13**
  %622 = load %13*, %13** %621, align 8
  %623 = getelementptr inbounds %13, %13* %622, i32 0, i32 2
  %624 = load i64, i64* %623, align 8
  %625 = icmp ne i64 %618, %624
  br i1 %625, label %626, label %634

626:                                              ; preds = %603
  %627 = load i64, i64* %9, align 8
  %628 = load %3*, %3** %8, align 8
  %629 = getelementptr inbounds %3, %3* %628, i32 0, i32 0
  %630 = bitcast %4* %629 to %13**
  %631 = load %13*, %13** %630, align 8
  %632 = getelementptr inbounds %13, %13* %631, i32 0, i32 2
  %633 = load i64, i64* %632, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @96, i32 0, i32 0), i64 %627, i64 %633)
  store i64 -1, i64* %9, align 8
  br label %634

634:                                              ; preds = %626, %603
  br label %635

635:                                              ; preds = %634, %595
  br label %788

636:                                              ; preds = %561
  %637 = load %3*, %3** %8, align 8
  %638 = getelementptr inbounds %3, %3* %637, i32 0, i32 0
  %639 = bitcast %4* %638 to %10**
  %640 = load %10*, %10** %639, align 8
  %641 = getelementptr inbounds %10, %10* %640, i32 0, i32 5
  %642 = load i32, i32* %641, align 4
  %643 = icmp ne i32 %642, 0
  br i1 %643, label %644, label %739

644:                                              ; preds = %636
  %645 = bitcast i64* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %645) #11
  %646 = bitcast %3** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %646) #11
  br label %647

647:                                              ; preds = %644
  %648 = bitcast %10** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %648) #11
  %649 = load %3*, %3** %8, align 8
  %650 = getelementptr inbounds %3, %3* %649, i32 0, i32 0
  %651 = bitcast %4* %650 to %10**
  %652 = load %10*, %10** %651, align 8
  store %10* %652, %10** %31, align 8
  %653 = bitcast %12** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %653) #11
  %654 = load %10*, %10** %31, align 8
  %655 = getelementptr inbounds %10, %10* %654, i32 0, i32 3
  %656 = load %12*, %12** %655, align 8
  store %12* %656, %12** %32, align 8
  %657 = bitcast %12** %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %657) #11
  %658 = load %12*, %12** %32, align 8
  %659 = load %10*, %10** %31, align 8
  %660 = getelementptr inbounds %10, %10* %659, i32 0, i32 4
  %661 = load i32, i32* %660, align 8
  %662 = zext i32 %661 to i64
  %663 = getelementptr inbounds %12, %12* %658, i64 %662
  store %12* %663, %12** %33, align 8
  br label %664

664:                                              ; preds = %728, %647
  %665 = load %12*, %12** %32, align 8
  %666 = load %12*, %12** %33, align 8
  %667 = icmp ne %12* %665, %666
  br i1 %667, label %668, label %731

668:                                              ; preds = %664
  %669 = bitcast %3** %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %669) #11
  %670 = load %12*, %12** %32, align 8
  %671 = getelementptr inbounds %12, %12* %670, i32 0, i32 0
  store %3* %671, %3** %34, align 8
  %672 = load %3*, %3** %34, align 8
  %673 = call zeroext i8 @150(%3* %672)
  %674 = zext i8 %673 to i32
  %675 = icmp eq i32 %674, 0
  %676 = xor i1 %675, true
  %677 = xor i1 %676, true
  %678 = zext i1 %677 to i32
  %679 = sext i32 %678 to i64
  %680 = call i64 @llvm.expect.i64(i64 %679, i64 0)
  %681 = icmp ne i64 %680, 0
  br i1 %681, label %682, label %683

682:                                              ; preds = %668
  store i32 37, i32* %27, align 4
  br label %724

683:                                              ; preds = %668
  %684 = load %3*, %3** %34, align 8
  store %3* %684, %3** %30, align 8
  %685 = bitcast %13** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %685) #11
  %686 = load %3*, %3** %30, align 8
  %687 = call %13* @155(%3* %686)
  store %13* %687, %13** %35, align 8
  %688 = load %13*, %13** %35, align 8
  %689 = getelementptr inbounds %13, %13* %688, i32 0, i32 2
  %690 = load i64, i64* %689, align 8
  %691 = icmp ne i64 %690, 0
  br i1 %691, label %692, label %718

692:                                              ; preds = %683
  %693 = load %13*, %13** %35, align 8
  %694 = getelementptr inbounds %13, %13* %693, i32 0, i32 2
  %695 = load i64, i64* %694, align 8
  %696 = load i64, i64* %9, align 8
  %697 = add i64 %696, %695
  store i64 %697, i64* %9, align 8
  %698 = load %53*, %53** %5, align 8
  %699 = load %13*, %13** %35, align 8
  %700 = getelementptr inbounds %13, %13* %699, i32 0, i32 3
  %701 = getelementptr inbounds [1 x i8], [1 x i8]* %700, i32 0, i32 0
  %702 = load %13*, %13** %35, align 8
  %703 = getelementptr inbounds %13, %13* %702, i32 0, i32 2
  %704 = load i64, i64* %703, align 8
  %705 = call i64 @_php_stream_write(%53* %698, i8* %701, i64 %704)
  store i64 %705, i64* %29, align 8
  %706 = load i64, i64* %29, align 8
  %707 = load %13*, %13** %35, align 8
  %708 = getelementptr inbounds %13, %13* %707, i32 0, i32 2
  %709 = load i64, i64* %708, align 8
  %710 = icmp ne i64 %706, %709
  br i1 %710, label %711, label %717

711:                                              ; preds = %692
  %712 = load %13*, %13** %35, align 8
  %713 = getelementptr inbounds %13, %13* %712, i32 0, i32 2
  %714 = load i64, i64* %713, align 8
  %715 = load i8*, i8** %6, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @97, i32 0, i32 0), i64 %714, i8* %715)
  %716 = load %13*, %13** %35, align 8
  call void @156(%13* %716)
  store i64 -1, i64* %9, align 8
  store i32 35, i32* %27, align 4
  br label %720

717:                                              ; preds = %692
  br label %718

718:                                              ; preds = %717, %683
  %719 = load %13*, %13** %35, align 8
  call void @156(%13* %719)
  store i32 0, i32* %27, align 4
  br label %720

720:                                              ; preds = %718, %711
  %721 = bitcast %13** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %721) #11
  %722 = load i32, i32* %27, align 4
  switch i32 %722, label %724 [
    i32 0, label %723
  ]

723:                                              ; preds = %720
  store i32 0, i32* %27, align 4
  br label %724

724:                                              ; preds = %723, %720, %682
  %725 = bitcast %3** %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %725) #11
  %726 = load i32, i32* %27, align 4
  switch i32 %726, label %822 [
    i32 0, label %727
    i32 37, label %728
    i32 35, label %731
  ]

727:                                              ; preds = %724
  br label %728

728:                                              ; preds = %727, %724
  %729 = load %12*, %12** %32, align 8
  %730 = getelementptr inbounds %12, %12* %729, i32 1
  store %12* %730, %12** %32, align 8
  br label %664

731:                                              ; preds = %724, %664
  %732 = bitcast %12** %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %732) #11
  %733 = bitcast %12** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %733) #11
  %734 = bitcast %10** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %734) #11
  br label %735

735:                                              ; preds = %731
  br label %736

736:                                              ; preds = %735
  %737 = bitcast %3** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %737) #11
  %738 = bitcast i64* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %738) #11
  br label %739

739:                                              ; preds = %736, %636
  br label %788

740:                                              ; preds = %561
  %741 = load %3*, %3** %8, align 8
  %742 = getelementptr inbounds %3, %3* %741, i32 0, i32 0
  %743 = bitcast %4* %742 to %19**
  %744 = load %19*, %19** %743, align 8
  %745 = getelementptr inbounds %19, %19* %744, i32 0, i32 3
  %746 = load %20*, %20** %745, align 8
  %747 = icmp ne %20* %746, null
  br i1 %747, label %748, label %786

748:                                              ; preds = %740
  %749 = bitcast %3* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %749) #11
  %750 = load %3*, %3** %8, align 8
  %751 = call i32 @zend_std_cast_object_tostring(%3* %750, %3* %36, i32 6)
  %752 = icmp eq i32 %751, 0
  br i1 %752, label %753, label %781

753:                                              ; preds = %748
  %754 = load %53*, %53** %5, align 8
  %755 = getelementptr inbounds %3, %3* %36, i32 0, i32 0
  %756 = bitcast %4* %755 to %13**
  %757 = load %13*, %13** %756, align 8
  %758 = getelementptr inbounds %13, %13* %757, i32 0, i32 3
  %759 = getelementptr inbounds [1 x i8], [1 x i8]* %758, i32 0, i32 0
  %760 = getelementptr inbounds %3, %3* %36, i32 0, i32 0
  %761 = bitcast %4* %760 to %13**
  %762 = load %13*, %13** %761, align 8
  %763 = getelementptr inbounds %13, %13* %762, i32 0, i32 2
  %764 = load i64, i64* %763, align 8
  %765 = call i64 @_php_stream_write(%53* %754, i8* %759, i64 %764)
  store i64 %765, i64* %9, align 8
  %766 = load i64, i64* %9, align 8
  %767 = getelementptr inbounds %3, %3* %36, i32 0, i32 0
  %768 = bitcast %4* %767 to %13**
  %769 = load %13*, %13** %768, align 8
  %770 = getelementptr inbounds %13, %13* %769, i32 0, i32 2
  %771 = load i64, i64* %770, align 8
  %772 = icmp ne i64 %766, %771
  br i1 %772, label %773, label %780

773:                                              ; preds = %753
  %774 = load i64, i64* %9, align 8
  %775 = getelementptr inbounds %3, %3* %36, i32 0, i32 0
  %776 = bitcast %4* %775 to %13**
  %777 = load %13*, %13** %776, align 8
  %778 = getelementptr inbounds %13, %13* %777, i32 0, i32 2
  %779 = load i64, i64* %778, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @96, i32 0, i32 0), i64 %774, i64 %779)
  store i64 -1, i64* %9, align 8
  br label %780

780:                                              ; preds = %773, %753
  call void @157(%3* %36)
  store i32 32, i32* %27, align 4
  br label %782

781:                                              ; preds = %748
  store i32 0, i32* %27, align 4
  br label %782

782:                                              ; preds = %781, %780
  %783 = bitcast %3* %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %783) #11
  %784 = load i32, i32* %27, align 4
  switch i32 %784, label %822 [
    i32 0, label %785
    i32 32, label %788
  ]

785:                                              ; preds = %782
  br label %786

786:                                              ; preds = %785, %740
  br label %787

787:                                              ; preds = %561, %786
  store i64 -1, i64* %9, align 8
  br label %788

788:                                              ; preds = %787, %782, %739, %635, %579
  %789 = load %53*, %53** %5, align 8
  %790 = call i32 @_php_stream_free(%53* %789, i32 3)
  %791 = load i64, i64* %9, align 8
  %792 = icmp eq i64 %791, -1
  br i1 %792, label %793, label %800

793:                                              ; preds = %788
  br label %794

794:                                              ; preds = %793
  %795 = load %3*, %3** %4, align 8
  %796 = getelementptr inbounds %3, %3* %795, i32 0, i32 1
  %797 = bitcast %5* %796 to i32*
  store i32 2, i32* %797, align 8
  br label %798

798:                                              ; preds = %794
  br label %799

799:                                              ; preds = %798
  store i32 1, i32* %27, align 4
  br label %811

800:                                              ; preds = %788
  %801 = bitcast %3** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %801) #11
  %802 = load %3*, %3** %4, align 8
  store %3* %802, %3** %37, align 8
  %803 = load i64, i64* %9, align 8
  %804 = load %3*, %3** %37, align 8
  %805 = getelementptr inbounds %3, %3* %804, i32 0, i32 0
  %806 = bitcast %4* %805 to i64*
  store i64 %803, i64* %806, align 8
  %807 = load %3*, %3** %37, align 8
  %808 = getelementptr inbounds %3, %3* %807, i32 0, i32 1
  %809 = bitcast %5* %808 to i32*
  store i32 4, i32* %809, align 8
  %810 = bitcast %3** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %810) #11
  store i32 1, i32* %27, align 4
  br label %811

811:                                              ; preds = %800, %799, %552, %527, %502, %445, %412
  %812 = bitcast [3 x i8]* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 3, i8* %812) #11
  %813 = bitcast %53** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %813) #11
  %814 = bitcast %1** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %814) #11
  %815 = bitcast %3** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %815) #11
  %816 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %816) #11
  %817 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %817) #11
  %818 = bitcast %3** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %818) #11
  %819 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %819) #11
  %820 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %820) #11
  %821 = bitcast %53** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %821) #11
  ret void

822:                                              ; preds = %782, %724
  unreachable
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i8* @zend_fetch_resource2_ex(%3*, i8*, i32, i32) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @154(i8* %0, i8* %1, i64 %2, i8* %3) #4 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i8* %3, i8** %9, align 8
  %15 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #11
  %16 = load i8*, i8** %6, align 8
  store i8* %16, i8** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #11
  %17 = load i8*, i8** %7, align 8
  %18 = load i64, i64* %8, align 8
  %19 = sub i64 %18, 1
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i8, i8* %20, align 1
  store i8 %21, i8* %11, align 1
  %22 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #11
  %23 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  %24 = load i64, i64* %8, align 8
  %25 = icmp eq i64 %24, 1
  br i1 %25, label %26, label %37

26:                                               ; preds = %4
  %27 = load i8*, i8** %10, align 8
  %28 = load i8*, i8** %7, align 8
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = load i8*, i8** %9, align 8
  %32 = load i8*, i8** %10, align 8
  %33 = ptrtoint i8* %31 to i64
  %34 = ptrtoint i8* %32 to i64
  %35 = sub i64 %33, %34
  %36 = call i8* @memchr(i8* %27, i32 %30, i64 %35) #13
  store i8* %36, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

37:                                               ; preds = %4
  %38 = load i8*, i8** %9, align 8
  %39 = load i8*, i8** %6, align 8
  %40 = ptrtoint i8* %38 to i64
  %41 = ptrtoint i8* %39 to i64
  %42 = sub i64 %40, %41
  store i64 %42, i64* %12, align 8
  %43 = load i64, i64* %12, align 8
  %44 = icmp sgt i64 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %37
  %46 = load i64, i64* %12, align 8
  br label %48

47:                                               ; preds = %37
  br label %48

48:                                               ; preds = %47, %45
  %49 = phi i64 [ %46, %45 ], [ 0, %47 ]
  store i64 %49, i64* %13, align 8
  %50 = load i64, i64* %8, align 8
  %51 = load i64, i64* %13, align 8
  %52 = icmp ugt i64 %50, %51
  br i1 %52, label %53, label %54

53:                                               ; preds = %48
  store i8* null, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

54:                                               ; preds = %48
  %55 = load i64, i64* %13, align 8
  %56 = icmp ult i64 %55, 1024
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i64, i64* %8, align 8
  %59 = icmp ult i64 %58, 9
  br label %60

60:                                               ; preds = %57, %54
  %61 = phi i1 [ true, %54 ], [ %59, %57 ]
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 1)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %118

68:                                               ; preds = %60
  %69 = load i64, i64* %8, align 8
  %70 = load i8*, i8** %9, align 8
  %71 = sub i64 0, %69
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  store i8* %72, i8** %9, align 8
  br label %73

73:                                               ; preds = %114, %68
  %74 = load i8*, i8** %10, align 8
  %75 = load i8*, i8** %9, align 8
  %76 = icmp ule i8* %74, %75
  br i1 %76, label %77, label %117

77:                                               ; preds = %73
  %78 = load i8*, i8** %10, align 8
  %79 = load i8*, i8** %7, align 8
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = load i8*, i8** %9, align 8
  %83 = load i8*, i8** %10, align 8
  %84 = ptrtoint i8* %82 to i64
  %85 = ptrtoint i8* %83 to i64
  %86 = sub i64 %84, %85
  %87 = add nsw i64 %86, 1
  %88 = call i8* @memchr(i8* %78, i32 %81, i64 %87) #13
  store i8* %88, i8** %10, align 8
  %89 = icmp ne i8* %88, null
  br i1 %89, label %90, label %110

90:                                               ; preds = %77
  %91 = load i8, i8* %11, align 1
  %92 = sext i8 %91 to i32
  %93 = load i8*, i8** %10, align 8
  %94 = load i64, i64* %8, align 8
  %95 = sub i64 %94, 1
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = sext i8 %97 to i32
  %99 = icmp eq i32 %92, %98
  br i1 %99, label %100, label %110

100:                                              ; preds = %90
  %101 = load i8*, i8** %7, align 8
  %102 = load i8*, i8** %10, align 8
  %103 = load i64, i64* %8, align 8
  %104 = sub i64 %103, 1
  %105 = call i32 @memcmp(i8* %101, i8* %102, i64 %104) #13
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %100
  %108 = load i8*, i8** %10, align 8
  store i8* %108, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

109:                                              ; preds = %100
  br label %110

110:                                              ; preds = %109, %90, %77
  %111 = load i8*, i8** %10, align 8
  %112 = icmp eq i8* %111, null
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  store i8* null, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

114:                                              ; preds = %110
  %115 = load i8*, i8** %10, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %10, align 8
  br label %73

117:                                              ; preds = %73
  store i8* null, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

118:                                              ; preds = %60
  %119 = load i8*, i8** %6, align 8
  %120 = load i8*, i8** %7, align 8
  %121 = load i64, i64* %8, align 8
  %122 = load i8*, i8** %9, align 8
  %123 = call i8* @zend_memnstr_ex(i8* %119, i8* %120, i64 %121, i8* %122)
  store i8* %123, i8** %5, align 8
  store i32 1, i32* %14, align 4
  br label %124

124:                                              ; preds = %118, %117, %113, %107, %53, %26
  %125 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #11
  %126 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %126) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #11
  %127 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #11
  %128 = load i8*, i8** %5, align 8
  ret i8* %128
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #7

declare dso_local i32 @_php_stream_truncate_set_size(%53*, i64) #1

declare dso_local i32 @_php_stream_copy_to_stream_ex(%53*, %53*, i64, i64*) #1

declare dso_local void @_convert_to_string(%3*) #1

declare dso_local i64 @_php_stream_write(%53*, i8*, i64) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal %13* @155(%3* %0) #4 {
  %2 = alloca %3*, align 8
  store %3* %0, %3** %2, align 8
  %3 = load %3*, %3** %2, align 8
  %4 = call zeroext i8 @150(%3* %3)
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load %3*, %3** %2, align 8
  %9 = getelementptr inbounds %3, %3* %8, i32 0, i32 0
  %10 = bitcast %4* %9 to %13**
  %11 = load %13*, %13** %10, align 8
  %12 = call %13* @173(%13* %11)
  br label %16

13:                                               ; preds = %1
  %14 = load %3*, %3** %2, align 8
  %15 = call %13* @_zval_get_string_func(%3* %14)
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %13* [ %12, %7 ], [ %15, %13 ]
  ret %13* %17
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @156(%13* %0) #4 {
  %2 = alloca %13*, align 8
  store %13* %0, %13** %2, align 8
  %3 = load %13*, %13** %2, align 8
  %4 = getelementptr inbounds %13, %13* %3, i32 0, i32 0
  %5 = getelementptr inbounds %8, %8* %4, i32 0, i32 1
  %6 = bitcast %9* %5 to %67*
  %7 = getelementptr inbounds %67, %67* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %1
  %13 = load %13*, %13** %2, align 8
  %14 = getelementptr inbounds %13, %13* %13, i32 0, i32 0
  %15 = getelementptr inbounds %8, %8* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %12
  %20 = load %13*, %13** %2, align 8
  %21 = getelementptr inbounds %13, %13* %20, i32 0, i32 0
  %22 = getelementptr inbounds %8, %8* %21, i32 0, i32 1
  %23 = bitcast %9* %22 to %67*
  %24 = getelementptr inbounds %67, %67* %23, i32 0, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %26, 1
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load %13*, %13** %2, align 8
  %31 = bitcast %13* %30 to i8*
  call void @free(i8* %31) #11
  br label %35

32:                                               ; preds = %19
  %33 = load %13*, %13** %2, align 8
  %34 = bitcast %13* %33 to i8*
  call void @_efree(i8* %34)
  br label %35

35:                                               ; preds = %32, %29
  br label %36

36:                                               ; preds = %35, %12
  br label %37

37:                                               ; preds = %36, %1
  ret void
}

declare dso_local i32 @zend_std_cast_object_tostring(%3*, %3*, i32) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal void @157(%3* %0) #4 {
  %2 = alloca %3*, align 8
  store %3* %0, %3** %2, align 8
  %3 = load %3*, %3** %2, align 8
  %4 = getelementptr inbounds %3, %3* %3, i32 0, i32 1
  %5 = bitcast %5* %4 to %65*
  %6 = getelementptr inbounds %65, %65* %5, i32 0, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %1
  %12 = load %3*, %3** %2, align 8
  %13 = call i32 @174(%3* %12)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = load %3*, %3** %2, align 8
  %17 = getelementptr inbounds %3, %3* %16, i32 0, i32 0
  %18 = bitcast %4* %17 to %68**
  %19 = load %68*, %68** %18, align 8
  call void @_zval_dtor_func(%68* %19)
  br label %20

20:                                               ; preds = %15, %11, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_file(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca %53*, align 8
  %17 = alloca %3*, align 8
  %18 = alloca %1*, align 8
  %19 = alloca %13*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %3*, align 8
  %26 = alloca %3*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %34 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  %35 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  %36 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  %37 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  %38 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  %39 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #11
  store i32 0, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %11) #11
  store i8 10, i8* %11, align 1
  %40 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  store i64 0, i64* %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #11
  %41 = bitcast %53** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  %42 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #11
  store %3* null, %3** %17, align 8
  %43 = bitcast %1** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #11
  store %1* null, %1** %18, align 8
  %44 = bitcast %13** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #11
  br label %45

45:                                               ; preds = %2
  %46 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #11
  store i32 0, i32* %20, align 4
  %47 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  store i32 1, i32* %21, align 4
  %48 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #11
  store i32 3, i32* %22, align 4
  %49 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #11
  %50 = load %28*, %28** %3, align 8
  %51 = getelementptr inbounds %28, %28* %50, i32 0, i32 4
  %52 = getelementptr inbounds %3, %3* %51, i32 0, i32 2
  %53 = bitcast %6* %52 to i32*
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %23, align 4
  %55 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #11
  %56 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #11
  %57 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #11
  store %3* null, %3** %26, align 8
  %58 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #11
  store i32 0, i32* %27, align 4
  %59 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #11
  store i8* null, i8** %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %29) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %30) #11
  store i8 0, i8* %30, align 1
  %60 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #11
  store i32 0, i32* %31, align 4
  %61 = load i32, i32* %24, align 4
  %62 = load %3*, %3** %25, align 8
  %63 = load %3*, %3** %26, align 8
  %64 = load i32, i32* %27, align 4
  %65 = load i8*, i8** %28, align 8
  %66 = load i8, i8* %29, align 1
  %67 = load i8, i8* %30, align 1
  br label %68

68:                                               ; preds = %45
  %69 = load i32, i32* %23, align 4
  %70 = load i32, i32* %21, align 4
  %71 = icmp slt i32 %69, %70
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 0)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %97, label %78

78:                                               ; preds = %68
  %79 = load i32, i32* %23, align 4
  %80 = load i32, i32* %22, align 4
  %81 = icmp sgt i32 %79, %80
  %82 = xor i1 %81, true
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = call i64 @llvm.expect.i64(i64 %85, i64 0)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %101

88:                                               ; preds = %78
  %89 = load i32, i32* %22, align 4
  %90 = icmp sge i32 %89, 0
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  %93 = zext i1 %92 to i32
  %94 = sext i32 %93 to i64
  %95 = call i64 @llvm.expect.i64(i64 %94, i64 1)
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %88, %68
  %98 = load i32, i32* %23, align 4
  %99 = load i32, i32* %21, align 4
  %100 = load i32, i32* %22, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %98, i32 %99, i32 %100)
  store i32 1, i32* %31, align 4
  br label %316

101:                                              ; preds = %88, %78
  store i32 0, i32* %24, align 4
  %102 = load %28*, %28** %3, align 8
  %103 = bitcast %28* %102 to %3*
  %104 = getelementptr inbounds %3, %3* %103, i64 4
  store %3* %104, %3** %25, align 8
  %105 = load i32, i32* %24, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %24, align 4
  br label %107

107:                                              ; preds = %101
  %108 = load i32, i32* %24, align 4
  %109 = load i32, i32* %21, align 4
  %110 = icmp sle i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %30, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 1
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  %127 = load i32, i32* %24, align 4
  %128 = load i32, i32* %21, align 4
  %129 = icmp sgt i32 %127, %128
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = load i8, i8* %30, align 1
  %132 = zext i8 %131 to i32
  %133 = icmp eq i32 %132, 0
  br label %134

134:                                              ; preds = %130, %126
  %135 = phi i1 [ true, %126 ], [ %133, %130 ]
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %134
  unreachable

142:                                              ; preds = %134
  br label %143

143:                                              ; preds = %142
  br label %144

144:                                              ; preds = %143
  %145 = load i8, i8* %30, align 1
  %146 = icmp ne i8 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %144
  %148 = load i32, i32* %24, align 4
  %149 = load i32, i32* %23, align 4
  %150 = icmp sgt i32 %148, %149
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %147
  br label %316

158:                                              ; preds = %147
  br label %159

159:                                              ; preds = %158, %144
  %160 = load %3*, %3** %25, align 8
  %161 = getelementptr inbounds %3, %3* %160, i32 1
  store %3* %161, %3** %25, align 8
  %162 = load %3*, %3** %25, align 8
  store %3* %162, %3** %26, align 8
  %163 = load %3*, %3** %26, align 8
  %164 = call i32 @152(%3* %163, i8** %5, i64* %6, i32 0)
  %165 = icmp ne i32 %164, 0
  %166 = xor i1 %165, true
  %167 = xor i1 %166, true
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %159
  store i32 6, i32* %27, align 4
  store i32 4, i32* %31, align 4
  br label %316

174:                                              ; preds = %159
  store i8 1, i8* %30, align 1
  %175 = load i32, i32* %24, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %24, align 4
  br label %177

177:                                              ; preds = %174
  %178 = load i32, i32* %24, align 4
  %179 = load i32, i32* %21, align 4
  %180 = icmp sle i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %30, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 1
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  br label %196

196:                                              ; preds = %195
  %197 = load i32, i32* %24, align 4
  %198 = load i32, i32* %21, align 4
  %199 = icmp sgt i32 %197, %198
  br i1 %199, label %204, label %200

200:                                              ; preds = %196
  %201 = load i8, i8* %30, align 1
  %202 = zext i8 %201 to i32
  %203 = icmp eq i32 %202, 0
  br label %204

204:                                              ; preds = %200, %196
  %205 = phi i1 [ true, %196 ], [ %203, %200 ]
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %204
  unreachable

212:                                              ; preds = %204
  br label %213

213:                                              ; preds = %212
  br label %214

214:                                              ; preds = %213
  %215 = load i8, i8* %30, align 1
  %216 = icmp ne i8 %215, 0
  br i1 %216, label %217, label %229

217:                                              ; preds = %214
  %218 = load i32, i32* %24, align 4
  %219 = load i32, i32* %23, align 4
  %220 = icmp sgt i32 %218, %219
  %221 = xor i1 %220, true
  %222 = xor i1 %221, true
  %223 = zext i1 %222 to i32
  %224 = sext i32 %223 to i64
  %225 = call i64 @llvm.expect.i64(i64 %224, i64 0)
  %226 = icmp ne i64 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %217
  br label %316

228:                                              ; preds = %217
  br label %229

229:                                              ; preds = %228, %214
  %230 = load %3*, %3** %25, align 8
  %231 = getelementptr inbounds %3, %3* %230, i32 1
  store %3* %231, %3** %25, align 8
  %232 = load %3*, %3** %25, align 8
  store %3* %232, %3** %26, align 8
  %233 = load %3*, %3** %26, align 8
  %234 = call i32 @149(%3* %233, i64* %12, i8* %29, i32 0, i32 0)
  %235 = icmp ne i32 %234, 0
  %236 = xor i1 %235, true
  %237 = xor i1 %236, true
  %238 = xor i1 %237, true
  %239 = zext i1 %238 to i32
  %240 = sext i32 %239 to i64
  %241 = call i64 @llvm.expect.i64(i64 %240, i64 0)
  %242 = icmp ne i64 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %229
  store i32 0, i32* %27, align 4
  store i32 4, i32* %31, align 4
  br label %316

244:                                              ; preds = %229
  %245 = load i32, i32* %24, align 4
  %246 = add nsw i32 %245, 1
  store i32 %246, i32* %24, align 4
  br label %247

247:                                              ; preds = %244
  %248 = load i32, i32* %24, align 4
  %249 = load i32, i32* %21, align 4
  %250 = icmp sle i32 %248, %249
  br i1 %250, label %255, label %251

251:                                              ; preds = %247
  %252 = load i8, i8* %30, align 1
  %253 = zext i8 %252 to i32
  %254 = icmp eq i32 %253, 1
  br label %255

255:                                              ; preds = %251, %247
  %256 = phi i1 [ true, %247 ], [ %254, %251 ]
  %257 = xor i1 %256, true
  %258 = zext i1 %257 to i32
  %259 = sext i32 %258 to i64
  %260 = call i64 @llvm.expect.i64(i64 %259, i64 0)
  %261 = icmp ne i64 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %255
  unreachable

263:                                              ; preds = %255
  br label %264

264:                                              ; preds = %263
  br label %265

265:                                              ; preds = %264
  br label %266

266:                                              ; preds = %265
  %267 = load i32, i32* %24, align 4
  %268 = load i32, i32* %21, align 4
  %269 = icmp sgt i32 %267, %268
  br i1 %269, label %274, label %270

270:                                              ; preds = %266
  %271 = load i8, i8* %30, align 1
  %272 = zext i8 %271 to i32
  %273 = icmp eq i32 %272, 0
  br label %274

274:                                              ; preds = %270, %266
  %275 = phi i1 [ true, %266 ], [ %273, %270 ]
  %276 = xor i1 %275, true
  %277 = zext i1 %276 to i32
  %278 = sext i32 %277 to i64
  %279 = call i64 @llvm.expect.i64(i64 %278, i64 0)
  %280 = icmp ne i64 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %274
  unreachable

282:                                              ; preds = %274
  br label %283

283:                                              ; preds = %282
  br label %284

284:                                              ; preds = %283
  %285 = load i8, i8* %30, align 1
  %286 = icmp ne i8 %285, 0
  br i1 %286, label %287, label %299

287:                                              ; preds = %284
  %288 = load i32, i32* %24, align 4
  %289 = load i32, i32* %23, align 4
  %290 = icmp sgt i32 %288, %289
  %291 = xor i1 %290, true
  %292 = xor i1 %291, true
  %293 = zext i1 %292 to i32
  %294 = sext i32 %293 to i64
  %295 = call i64 @llvm.expect.i64(i64 %294, i64 0)
  %296 = icmp ne i64 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %287
  br label %316

298:                                              ; preds = %287
  br label %299

299:                                              ; preds = %298, %284
  %300 = load %3*, %3** %25, align 8
  %301 = getelementptr inbounds %3, %3* %300, i32 1
  store %3* %301, %3** %25, align 8
  %302 = load %3*, %3** %25, align 8
  store %3* %302, %3** %26, align 8
  %303 = load %3*, %3** %26, align 8
  %304 = call i32 @148(%3* %303, %3** %17, i32 1)
  %305 = icmp ne i32 %304, 0
  %306 = xor i1 %305, true
  %307 = xor i1 %306, true
  %308 = xor i1 %307, true
  %309 = zext i1 %308 to i32
  %310 = sext i32 %309 to i64
  %311 = call i64 @llvm.expect.i64(i64 %310, i64 0)
  %312 = icmp ne i64 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %299
  store i32 5, i32* %27, align 4
  store i32 4, i32* %31, align 4
  br label %316

314:                                              ; preds = %299
  br label %315

315:                                              ; preds = %314
  br label %316

316:                                              ; preds = %315, %313, %297, %243, %227, %173, %157, %97
  %317 = load i32, i32* %31, align 4
  %318 = icmp ne i32 %317, 0
  %319 = xor i1 %318, true
  %320 = xor i1 %319, true
  %321 = zext i1 %320 to i32
  %322 = sext i32 %321 to i64
  %323 = call i64 @llvm.expect.i64(i64 %322, i64 0)
  %324 = icmp ne i64 %323, 0
  br i1 %324, label %325, label %348

325:                                              ; preds = %316
  %326 = load i32, i32* %31, align 4
  %327 = icmp eq i32 %326, 2
  br i1 %327, label %328, label %331

328:                                              ; preds = %325
  %329 = load i32, i32* %24, align 4
  %330 = load i8*, i8** %28, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %329, i8* %330)
  br label %347

331:                                              ; preds = %325
  %332 = load i32, i32* %31, align 4
  %333 = icmp eq i32 %332, 3
  br i1 %333, label %334, label %338

334:                                              ; preds = %331
  %335 = load i32, i32* %24, align 4
  %336 = load i8*, i8** %28, align 8
  %337 = load %3*, %3** %26, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %335, i8* %336, %3* %337)
  br label %346

338:                                              ; preds = %331
  %339 = load i32, i32* %31, align 4
  %340 = icmp eq i32 %339, 4
  br i1 %340, label %341, label %345

341:                                              ; preds = %338
  %342 = load i32, i32* %24, align 4
  %343 = load i32, i32* %27, align 4
  %344 = load %3*, %3** %26, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %342, i32 %343, %3* %344)
  br label %345

345:                                              ; preds = %341, %338
  br label %346

346:                                              ; preds = %345, %334
  br label %347

347:                                              ; preds = %346, %328
  store i32 1, i32* %32, align 4
  br label %349

348:                                              ; preds = %316
  store i32 0, i32* %32, align 4
  br label %349

349:                                              ; preds = %348, %347
  %350 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %350) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %30) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %29) #11
  %351 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %351) #11
  %352 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #11
  %353 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %353) #11
  %354 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %354) #11
  %355 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %355) #11
  %356 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %356) #11
  %357 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %357) #11
  %358 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %358) #11
  %359 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %359) #11
  %360 = load i32, i32* %32, align 4
  switch i32 %360, label %582 [
    i32 0, label %361
  ]

361:                                              ; preds = %349
  br label %362

362:                                              ; preds = %361
  br label %363

363:                                              ; preds = %362
  %364 = load i64, i64* %12, align 8
  %365 = icmp slt i64 %364, 0
  br i1 %365, label %369, label %366

366:                                              ; preds = %363
  %367 = load i64, i64* %12, align 8
  %368 = icmp sgt i64 %367, 23
  br i1 %368, label %369, label %377

369:                                              ; preds = %366, %363
  %370 = load i64, i64* %12, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @98, i32 0, i32 0), i64 %370)
  br label %371

371:                                              ; preds = %369
  %372 = load %3*, %3** %4, align 8
  %373 = getelementptr inbounds %3, %3* %372, i32 0, i32 1
  %374 = bitcast %5* %373 to i32*
  store i32 2, i32* %374, align 8
  br label %375

375:                                              ; preds = %371
  br label %376

376:                                              ; preds = %375
  store i32 1, i32* %32, align 4
  br label %582

377:                                              ; preds = %366
  %378 = load i64, i64* %12, align 8
  %379 = and i64 %378, 1
  %380 = trunc i64 %379 to i8
  store i8 %380, i8* %13, align 1
  %381 = load i64, i64* %12, align 8
  %382 = and i64 %381, 2
  %383 = icmp ne i64 %382, 0
  %384 = xor i1 %383, true
  %385 = zext i1 %384 to i32
  %386 = trunc i32 %385 to i8
  store i8 %386, i8* %14, align 1
  %387 = load i64, i64* %12, align 8
  %388 = and i64 %387, 4
  %389 = trunc i64 %388 to i8
  store i8 %389, i8* %15, align 1
  %390 = load %3*, %3** %17, align 8
  %391 = icmp ne %3* %390, null
  br i1 %391, label %392, label %396

392:                                              ; preds = %377
  %393 = load %3*, %3** %17, align 8
  %394 = call i32 @php_le_stream_context()
  %395 = call i8* @zend_fetch_resource_ex(%3* %393, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %394)
  br label %413

396:                                              ; preds = %377
  %397 = load i64, i64* %12, align 8
  %398 = and i64 %397, 16
  %399 = icmp ne i64 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %396
  br label %410

401:                                              ; preds = %396
  %402 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %403 = icmp ne %1* %402, null
  br i1 %403, label %404, label %406

404:                                              ; preds = %401
  %405 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %408

406:                                              ; preds = %401
  %407 = call %1* @php_stream_context_alloc()
  store %1* %407, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %408

408:                                              ; preds = %406, %404
  %409 = phi %1* [ %405, %404 ], [ %407, %406 ]
  br label %410

410:                                              ; preds = %408, %400
  %411 = phi %1* [ null, %400 ], [ %409, %408 ]
  %412 = bitcast %1* %411 to i8*
  br label %413

413:                                              ; preds = %410, %392
  %414 = phi i8* [ %395, %392 ], [ %412, %410 ]
  %415 = bitcast i8* %414 to %1*
  store %1* %415, %1** %18, align 8
  %416 = load i8*, i8** %5, align 8
  %417 = load i8, i8* %13, align 1
  %418 = zext i8 %417 to i32
  %419 = icmp ne i32 %418, 0
  %420 = zext i1 %419 to i64
  %421 = select i1 %419, i32 1, i32 0
  %422 = or i32 %421, 8
  %423 = load %1*, %1** %18, align 8
  %424 = call %53* @_php_stream_open_wrapper_ex(i8* %416, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @79, i32 0, i32 0), i32 %422, %13** null, %1* %423)
  store %53* %424, %53** %16, align 8
  %425 = load %53*, %53** %16, align 8
  %426 = icmp ne %53* %425, null
  br i1 %426, label %434, label %427

427:                                              ; preds = %413
  br label %428

428:                                              ; preds = %427
  %429 = load %3*, %3** %4, align 8
  %430 = getelementptr inbounds %3, %3* %429, i32 0, i32 1
  %431 = bitcast %5* %430 to i32*
  store i32 2, i32* %431, align 8
  br label %432

432:                                              ; preds = %428
  br label %433

433:                                              ; preds = %432
  store i32 1, i32* %32, align 4
  br label %582

434:                                              ; preds = %413
  %435 = load %3*, %3** %4, align 8
  %436 = call i32 @_array_init(%3* %435, i32 0)
  %437 = load %53*, %53** %16, align 8
  %438 = call %13* @_php_stream_copy_to_mem(%53* %437, i64 -1, i32 0)
  store %13* %438, %13** %19, align 8
  %439 = icmp ne %13* %438, null
  br i1 %439, label %440, label %574

440:                                              ; preds = %434
  %441 = load %13*, %13** %19, align 8
  %442 = getelementptr inbounds %13, %13* %441, i32 0, i32 3
  %443 = getelementptr inbounds [1 x i8], [1 x i8]* %442, i32 0, i32 0
  store i8* %443, i8** %8, align 8
  %444 = load %13*, %13** %19, align 8
  %445 = getelementptr inbounds %13, %13* %444, i32 0, i32 3
  %446 = getelementptr inbounds [1 x i8], [1 x i8]* %445, i32 0, i32 0
  %447 = load %13*, %13** %19, align 8
  %448 = getelementptr inbounds %13, %13* %447, i32 0, i32 2
  %449 = load i64, i64* %448, align 8
  %450 = getelementptr inbounds i8, i8* %446, i64 %449
  store i8* %450, i8** %9, align 8
  %451 = load %53*, %53** %16, align 8
  %452 = load %13*, %13** %19, align 8
  %453 = call i8* @php_stream_locate_eol(%53* %451, %13* %452)
  store i8* %453, i8** %7, align 8
  %454 = icmp ne i8* %453, null
  br i1 %454, label %457, label %455

455:                                              ; preds = %440
  %456 = load i8*, i8** %9, align 8
  store i8* %456, i8** %7, align 8
  br label %471

457:                                              ; preds = %440
  %458 = load %53*, %53** %16, align 8
  %459 = getelementptr inbounds %53, %53* %458, i32 0, i32 10
  %460 = load i32, i32* %459, align 4
  %461 = and i32 %460, 8
  %462 = icmp ne i32 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %457
  store i8 13, i8* %11, align 1
  br label %464

464:                                              ; preds = %463, %457
  %465 = load i8, i8* %14, align 1
  %466 = icmp ne i8 %465, 0
  br i1 %466, label %467, label %496

467:                                              ; preds = %464
  br label %468

468:                                              ; preds = %484, %467
  %469 = load i8*, i8** %7, align 8
  %470 = getelementptr inbounds i8, i8* %469, i32 1
  store i8* %470, i8** %7, align 8
  br label %471

471:                                              ; preds = %571, %468, %455
  %472 = load %3*, %3** %4, align 8
  %473 = load i32, i32* %10, align 4
  %474 = add nsw i32 %473, 1
  store i32 %474, i32* %10, align 4
  %475 = sext i32 %473 to i64
  %476 = load i8*, i8** %8, align 8
  %477 = load i8*, i8** %7, align 8
  %478 = load i8*, i8** %8, align 8
  %479 = ptrtoint i8* %477 to i64
  %480 = ptrtoint i8* %478 to i64
  %481 = sub i64 %479, %480
  %482 = call i32 @add_index_stringl(%3* %472, i64 %475, i8* %476, i64 %481)
  %483 = load i8*, i8** %7, align 8
  store i8* %483, i8** %8, align 8
  br label %484

484:                                              ; preds = %471
  %485 = load i8*, i8** %7, align 8
  %486 = load i8, i8* %11, align 1
  %487 = sext i8 %486 to i32
  %488 = load i8*, i8** %9, align 8
  %489 = load i8*, i8** %7, align 8
  %490 = ptrtoint i8* %488 to i64
  %491 = ptrtoint i8* %489 to i64
  %492 = sub i64 %490, %491
  %493 = call i8* @memchr(i8* %485, i32 %487, i64 %492) #13
  store i8* %493, i8** %7, align 8
  %494 = icmp ne i8* %493, null
  br i1 %494, label %468, label %495

495:                                              ; preds = %484
  br label %567

496:                                              ; preds = %464
  br label %497

497:                                              ; preds = %555, %496
  %498 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %498) #11
  store i32 0, i32* %33, align 4
  %499 = load i8*, i8** %7, align 8
  %500 = load %13*, %13** %19, align 8
  %501 = getelementptr inbounds %13, %13* %500, i32 0, i32 3
  %502 = getelementptr inbounds [1 x i8], [1 x i8]* %501, i32 0, i32 0
  %503 = icmp ne i8* %499, %502
  br i1 %503, label %504, label %517

504:                                              ; preds = %497
  %505 = load i8, i8* %11, align 1
  %506 = sext i8 %505 to i32
  %507 = icmp eq i32 %506, 10
  br i1 %507, label %508, label %517

508:                                              ; preds = %504
  %509 = load i8*, i8** %7, align 8
  %510 = getelementptr inbounds i8, i8* %509, i64 -1
  %511 = load i8, i8* %510, align 1
  %512 = sext i8 %511 to i32
  %513 = icmp eq i32 %512, 13
  br i1 %513, label %514, label %517

514:                                              ; preds = %508
  %515 = load i32, i32* %33, align 4
  %516 = add nsw i32 %515, 1
  store i32 %516, i32* %33, align 4
  br label %517

517:                                              ; preds = %514, %508, %504, %497
  %518 = load i8, i8* %15, align 1
  %519 = zext i8 %518 to i32
  %520 = icmp ne i32 %519, 0
  br i1 %520, label %521, label %534

521:                                              ; preds = %517
  %522 = load i8*, i8** %7, align 8
  %523 = load i8*, i8** %8, align 8
  %524 = ptrtoint i8* %522 to i64
  %525 = ptrtoint i8* %523 to i64
  %526 = sub i64 %524, %525
  %527 = load i32, i32* %33, align 4
  %528 = sext i32 %527 to i64
  %529 = sub nsw i64 %526, %528
  %530 = icmp ne i64 %529, 0
  br i1 %530, label %534, label %531

531:                                              ; preds = %521
  %532 = load i8*, i8** %7, align 8
  %533 = getelementptr inbounds i8, i8* %532, i32 1
  store i8* %533, i8** %7, align 8
  store i8* %533, i8** %8, align 8
  store i32 26, i32* %32, align 4
  br label %551

534:                                              ; preds = %521, %517
  %535 = load %3*, %3** %4, align 8
  %536 = load i32, i32* %10, align 4
  %537 = add nsw i32 %536, 1
  store i32 %537, i32* %10, align 4
  %538 = sext i32 %536 to i64
  %539 = load i8*, i8** %8, align 8
  %540 = load i8*, i8** %7, align 8
  %541 = load i8*, i8** %8, align 8
  %542 = ptrtoint i8* %540 to i64
  %543 = ptrtoint i8* %541 to i64
  %544 = sub i64 %542, %543
  %545 = load i32, i32* %33, align 4
  %546 = sext i32 %545 to i64
  %547 = sub nsw i64 %544, %546
  %548 = call i32 @add_index_stringl(%3* %535, i64 %538, i8* %539, i64 %547)
  %549 = load i8*, i8** %7, align 8
  %550 = getelementptr inbounds i8, i8* %549, i32 1
  store i8* %550, i8** %7, align 8
  store i8* %550, i8** %8, align 8
  store i32 0, i32* %32, align 4
  br label %551

551:                                              ; preds = %534, %531
  %552 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %552) #11
  %553 = load i32, i32* %32, align 4
  switch i32 %553, label %596 [
    i32 0, label %554
    i32 26, label %555
  ]

554:                                              ; preds = %551
  br label %555

555:                                              ; preds = %554, %551
  %556 = load i8*, i8** %7, align 8
  %557 = load i8, i8* %11, align 1
  %558 = sext i8 %557 to i32
  %559 = load i8*, i8** %9, align 8
  %560 = load i8*, i8** %7, align 8
  %561 = ptrtoint i8* %559 to i64
  %562 = ptrtoint i8* %560 to i64
  %563 = sub i64 %561, %562
  %564 = call i8* @memchr(i8* %556, i32 %558, i64 %563) #13
  store i8* %564, i8** %7, align 8
  %565 = icmp ne i8* %564, null
  br i1 %565, label %497, label %566

566:                                              ; preds = %555
  br label %567

567:                                              ; preds = %566, %495
  %568 = load i8*, i8** %8, align 8
  %569 = load i8*, i8** %9, align 8
  %570 = icmp ne i8* %568, %569
  br i1 %570, label %571, label %573

571:                                              ; preds = %567
  %572 = load i8*, i8** %9, align 8
  store i8* %572, i8** %7, align 8
  br label %471

573:                                              ; preds = %567
  br label %574

574:                                              ; preds = %573, %434
  %575 = load %13*, %13** %19, align 8
  %576 = icmp ne %13* %575, null
  br i1 %576, label %577, label %579

577:                                              ; preds = %574
  %578 = load %13*, %13** %19, align 8
  call void @158(%13* %578)
  br label %579

579:                                              ; preds = %577, %574
  %580 = load %53*, %53** %16, align 8
  %581 = call i32 @_php_stream_free(%53* %580, i32 3)
  store i32 0, i32* %32, align 4
  br label %582

582:                                              ; preds = %579, %433, %376, %349
  %583 = bitcast %13** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %583) #11
  %584 = bitcast %1** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %584) #11
  %585 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %585) #11
  %586 = bitcast %53** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %586) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #11
  %587 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %587) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #11
  %588 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %588) #11
  %589 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %589) #11
  %590 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %590) #11
  %591 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %591) #11
  %592 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %592) #11
  %593 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %593) #11
  %594 = load i32, i32* %32, align 4
  switch i32 %594, label %596 [
    i32 0, label %595
    i32 1, label %595
  ]

595:                                              ; preds = %582, %582
  ret void

596:                                              ; preds = %582, %551
  unreachable
}

declare dso_local i8* @php_stream_locate_eol(%53*, %13*) #1

declare dso_local i32 @add_index_stringl(%3*, i64, i8*, i64) #1

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8*, i32, i64) #7

; Function Attrs: alwaysinline nounwind uwtable
define internal void @158(%13* %0) #4 {
  %2 = alloca %13*, align 8
  store %13* %0, %13** %2, align 8
  %3 = load %13*, %13** %2, align 8
  %4 = getelementptr inbounds %13, %13* %3, i32 0, i32 0
  %5 = getelementptr inbounds %8, %8* %4, i32 0, i32 1
  %6 = bitcast %9* %5 to %67*
  %7 = getelementptr inbounds %67, %67* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %43, label %12

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12
  %14 = load %13*, %13** %2, align 8
  %15 = getelementptr inbounds %13, %13* %14, i32 0, i32 0
  %16 = getelementptr inbounds %8, %8* %15, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp ule i32 %17, 1
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = call i64 @llvm.expect.i64(i64 %21, i64 0)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %13
  unreachable

25:                                               ; preds = %13
  br label %26

26:                                               ; preds = %25
  %27 = load %13*, %13** %2, align 8
  %28 = getelementptr inbounds %13, %13* %27, i32 0, i32 0
  %29 = getelementptr inbounds %8, %8* %28, i32 0, i32 1
  %30 = bitcast %9* %29 to %67*
  %31 = getelementptr inbounds %67, %67* %30, i32 0, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = and i32 %33, 1
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %26
  %37 = load %13*, %13** %2, align 8
  %38 = bitcast %13* %37 to i8*
  call void @free(i8* %38) #11
  br label %42

39:                                               ; preds = %26
  %40 = load %13*, %13** %2, align 8
  %41 = bitcast %13* %40 to i8*
  call void @_efree(i8* %41)
  br label %42

42:                                               ; preds = %39, %36
  br label %43

43:                                               ; preds = %42, %1
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_tempnam(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %13*, align 8
  %10 = alloca i32, align 4
  %11 = alloca %13*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %3*, align 8
  %18 = alloca %3*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %3*, align 8
  %26 = alloca %13*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %27 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  %28 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  %29 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #11
  %30 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #11
  %31 = bitcast %13** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  %32 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  %33 = bitcast %13** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  br label %34

34:                                               ; preds = %2
  %35 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  store i32 0, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  store i32 2, i32* %13, align 4
  %37 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 2, i32* %14, align 4
  %38 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  %39 = load %28*, %28** %3, align 8
  %40 = getelementptr inbounds %28, %28* %39, i32 0, i32 4
  %41 = getelementptr inbounds %3, %3* %40, i32 0, i32 2
  %42 = bitcast %6* %41 to i32*
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %15, align 4
  %44 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  %45 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #11
  %46 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #11
  store %3* null, %3** %18, align 8
  %47 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  store i32 0, i32* %19, align 4
  %48 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #11
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #11
  store i8 0, i8* %22, align 1
  %49 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #11
  store i32 0, i32* %23, align 4
  %50 = load i32, i32* %16, align 4
  %51 = load %3*, %3** %17, align 8
  %52 = load %3*, %3** %18, align 8
  %53 = load i32, i32* %19, align 4
  %54 = load i8*, i8** %20, align 8
  %55 = load i8, i8* %21, align 1
  %56 = load i8, i8* %22, align 1
  br label %57

57:                                               ; preds = %34
  %58 = load i32, i32* %15, align 4
  %59 = load i32, i32* %13, align 4
  %60 = icmp slt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %57
  %68 = load i32, i32* %15, align 4
  %69 = load i32, i32* %14, align 4
  %70 = icmp sgt i32 %68, %69
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 0)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %90

77:                                               ; preds = %67
  %78 = load i32, i32* %14, align 4
  %79 = icmp sge i32 %78, 0
  %80 = xor i1 %79, true
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = call i64 @llvm.expect.i64(i64 %83, i64 1)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %77, %57
  %87 = load i32, i32* %15, align 4
  %88 = load i32, i32* %13, align 4
  %89 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %87, i32 %88, i32 %89)
  store i32 1, i32* %23, align 4
  br label %235

90:                                               ; preds = %77, %67
  store i32 0, i32* %16, align 4
  %91 = load %28*, %28** %3, align 8
  %92 = bitcast %28* %91 to %3*
  %93 = getelementptr inbounds %3, %3* %92, i64 4
  store %3* %93, %3** %17, align 8
  %94 = load i32, i32* %16, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %16, align 4
  br label %96

96:                                               ; preds = %90
  %97 = load i32, i32* %16, align 4
  %98 = load i32, i32* %13, align 4
  %99 = icmp sle i32 %97, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = load i8, i8* %22, align 1
  %102 = zext i8 %101 to i32
  %103 = icmp eq i32 %102, 1
  br label %104

104:                                              ; preds = %100, %96
  %105 = phi i1 [ true, %96 ], [ %103, %100 ]
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.expect.i64(i64 %108, i64 0)
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %104
  unreachable

112:                                              ; preds = %104
  br label %113

113:                                              ; preds = %112
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %16, align 4
  %117 = load i32, i32* %13, align 4
  %118 = icmp sgt i32 %116, %117
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = load i8, i8* %22, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp eq i32 %121, 0
  br label %123

123:                                              ; preds = %119, %115
  %124 = phi i1 [ true, %115 ], [ %122, %119 ]
  %125 = xor i1 %124, true
  %126 = zext i1 %125 to i32
  %127 = sext i32 %126 to i64
  %128 = call i64 @llvm.expect.i64(i64 %127, i64 0)
  %129 = icmp ne i64 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %123
  unreachable

131:                                              ; preds = %123
  br label %132

132:                                              ; preds = %131
  br label %133

133:                                              ; preds = %132
  %134 = load i8, i8* %22, align 1
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %133
  %137 = load i32, i32* %16, align 4
  %138 = load i32, i32* %15, align 4
  %139 = icmp sgt i32 %137, %138
  %140 = xor i1 %139, true
  %141 = xor i1 %140, true
  %142 = zext i1 %141 to i32
  %143 = sext i32 %142 to i64
  %144 = call i64 @llvm.expect.i64(i64 %143, i64 0)
  %145 = icmp ne i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %136
  br label %235

147:                                              ; preds = %136
  br label %148

148:                                              ; preds = %147, %133
  %149 = load %3*, %3** %17, align 8
  %150 = getelementptr inbounds %3, %3* %149, i32 1
  store %3* %150, %3** %17, align 8
  %151 = load %3*, %3** %17, align 8
  store %3* %151, %3** %18, align 8
  %152 = load %3*, %3** %18, align 8
  %153 = call i32 @152(%3* %152, i8** %5, i64* %7, i32 0)
  %154 = icmp ne i32 %153, 0
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %148
  store i32 6, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %235

163:                                              ; preds = %148
  %164 = load i32, i32* %16, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %16, align 4
  br label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %16, align 4
  %168 = load i32, i32* %13, align 4
  %169 = icmp sle i32 %167, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = load i8, i8* %22, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 1
  br label %174

174:                                              ; preds = %170, %166
  %175 = phi i1 [ true, %166 ], [ %173, %170 ]
  %176 = xor i1 %175, true
  %177 = zext i1 %176 to i32
  %178 = sext i32 %177 to i64
  %179 = call i64 @llvm.expect.i64(i64 %178, i64 0)
  %180 = icmp ne i64 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %174
  unreachable

182:                                              ; preds = %174
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  %186 = load i32, i32* %16, align 4
  %187 = load i32, i32* %13, align 4
  %188 = icmp sgt i32 %186, %187
  br i1 %188, label %193, label %189

189:                                              ; preds = %185
  %190 = load i8, i8* %22, align 1
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %191, 0
  br label %193

193:                                              ; preds = %189, %185
  %194 = phi i1 [ true, %185 ], [ %192, %189 ]
  %195 = xor i1 %194, true
  %196 = zext i1 %195 to i32
  %197 = sext i32 %196 to i64
  %198 = call i64 @llvm.expect.i64(i64 %197, i64 0)
  %199 = icmp ne i64 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %193
  unreachable

201:                                              ; preds = %193
  br label %202

202:                                              ; preds = %201
  br label %203

203:                                              ; preds = %202
  %204 = load i8, i8* %22, align 1
  %205 = icmp ne i8 %204, 0
  br i1 %205, label %206, label %218

206:                                              ; preds = %203
  %207 = load i32, i32* %16, align 4
  %208 = load i32, i32* %15, align 4
  %209 = icmp sgt i32 %207, %208
  %210 = xor i1 %209, true
  %211 = xor i1 %210, true
  %212 = zext i1 %211 to i32
  %213 = sext i32 %212 to i64
  %214 = call i64 @llvm.expect.i64(i64 %213, i64 0)
  %215 = icmp ne i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %206
  br label %235

217:                                              ; preds = %206
  br label %218

218:                                              ; preds = %217, %203
  %219 = load %3*, %3** %17, align 8
  %220 = getelementptr inbounds %3, %3* %219, i32 1
  store %3* %220, %3** %17, align 8
  %221 = load %3*, %3** %17, align 8
  store %3* %221, %3** %18, align 8
  %222 = load %3*, %3** %18, align 8
  %223 = call i32 @152(%3* %222, i8** %6, i64* %8, i32 0)
  %224 = icmp ne i32 %223, 0
  %225 = xor i1 %224, true
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = zext i1 %227 to i32
  %229 = sext i32 %228 to i64
  %230 = call i64 @llvm.expect.i64(i64 %229, i64 0)
  %231 = icmp ne i64 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %218
  store i32 6, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %235

233:                                              ; preds = %218
  br label %234

234:                                              ; preds = %233
  br label %235

235:                                              ; preds = %234, %232, %216, %162, %146, %86
  %236 = load i32, i32* %23, align 4
  %237 = icmp ne i32 %236, 0
  %238 = xor i1 %237, true
  %239 = xor i1 %238, true
  %240 = zext i1 %239 to i32
  %241 = sext i32 %240 to i64
  %242 = call i64 @llvm.expect.i64(i64 %241, i64 0)
  %243 = icmp ne i64 %242, 0
  br i1 %243, label %244, label %267

244:                                              ; preds = %235
  %245 = load i32, i32* %23, align 4
  %246 = icmp eq i32 %245, 2
  br i1 %246, label %247, label %250

247:                                              ; preds = %244
  %248 = load i32, i32* %16, align 4
  %249 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %248, i8* %249)
  br label %266

250:                                              ; preds = %244
  %251 = load i32, i32* %23, align 4
  %252 = icmp eq i32 %251, 3
  br i1 %252, label %253, label %257

253:                                              ; preds = %250
  %254 = load i32, i32* %16, align 4
  %255 = load i8*, i8** %20, align 8
  %256 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %254, i8* %255, %3* %256)
  br label %265

257:                                              ; preds = %250
  %258 = load i32, i32* %23, align 4
  %259 = icmp eq i32 %258, 4
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = load i32, i32* %16, align 4
  %262 = load i32, i32* %19, align 4
  %263 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %261, i32 %262, %3* %263)
  br label %264

264:                                              ; preds = %260, %257
  br label %265

265:                                              ; preds = %264, %253
  br label %266

266:                                              ; preds = %265, %247
  store i32 1, i32* %24, align 4
  br label %268

267:                                              ; preds = %235
  store i32 0, i32* %24, align 4
  br label %268

268:                                              ; preds = %267, %266
  %269 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #11
  %270 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #11
  %271 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #11
  %272 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #11
  %273 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #11
  %274 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #11
  %275 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #11
  %276 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #11
  %277 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #11
  %278 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #11
  %279 = load i32, i32* %24, align 4
  switch i32 %279, label %350 [
    i32 0, label %280
  ]

280:                                              ; preds = %268
  br label %281

281:                                              ; preds = %280
  br label %282

282:                                              ; preds = %281
  %283 = load i8*, i8** %5, align 8
  %284 = call i32 @php_check_open_basedir(i8* %283)
  %285 = icmp ne i32 %284, 0
  br i1 %285, label %286, label %293

286:                                              ; preds = %282
  br label %287

287:                                              ; preds = %286
  %288 = load %3*, %3** %4, align 8
  %289 = getelementptr inbounds %3, %3* %288, i32 0, i32 1
  %290 = bitcast %5* %289 to i32*
  store i32 2, i32* %290, align 8
  br label %291

291:                                              ; preds = %287
  br label %292

292:                                              ; preds = %291
  store i32 1, i32* %24, align 4
  br label %350

293:                                              ; preds = %282
  %294 = load i8*, i8** %6, align 8
  %295 = load i64, i64* %8, align 8
  %296 = call %13* @php_basename(i8* %294, i64 %295, i8* null, i64 0)
  store %13* %296, %13** %11, align 8
  %297 = load %13*, %13** %11, align 8
  %298 = getelementptr inbounds %13, %13* %297, i32 0, i32 2
  %299 = load i64, i64* %298, align 8
  %300 = icmp ugt i64 %299, 64
  br i1 %300, label %301, label %305

301:                                              ; preds = %293
  %302 = load %13*, %13** %11, align 8
  %303 = getelementptr inbounds %13, %13* %302, i32 0, i32 3
  %304 = getelementptr inbounds [1 x i8], [1 x i8]* %303, i64 0, i64 63
  store i8 0, i8* %304, align 1
  br label %305

305:                                              ; preds = %301, %293
  br label %306

306:                                              ; preds = %305
  %307 = load %3*, %3** %4, align 8
  %308 = getelementptr inbounds %3, %3* %307, i32 0, i32 1
  %309 = bitcast %5* %308 to i32*
  store i32 2, i32* %309, align 8
  br label %310

310:                                              ; preds = %306
  br label %311

311:                                              ; preds = %310
  %312 = load i8*, i8** %5, align 8
  %313 = load %13*, %13** %11, align 8
  %314 = getelementptr inbounds %13, %13* %313, i32 0, i32 3
  %315 = getelementptr inbounds [1 x i8], [1 x i8]* %314, i32 0, i32 0
  %316 = call i32 @php_open_temporary_fd_ex(i8* %312, i8* %315, %13** %9, i32 1)
  store i32 %316, i32* %10, align 4
  %317 = icmp sge i32 %316, 0
  br i1 %317, label %318, label %348

318:                                              ; preds = %311
  %319 = load i32, i32* %10, align 4
  %320 = call i32 @close(i32 %319)
  br label %321

321:                                              ; preds = %318
  %322 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %322) #11
  %323 = load %3*, %3** %4, align 8
  store %3* %323, %3** %25, align 8
  %324 = bitcast %13** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %324) #11
  %325 = load %13*, %13** %9, align 8
  store %13* %325, %13** %26, align 8
  %326 = load %13*, %13** %26, align 8
  %327 = load %3*, %3** %25, align 8
  %328 = getelementptr inbounds %3, %3* %327, i32 0, i32 0
  %329 = bitcast %4* %328 to %13**
  store %13* %326, %13** %329, align 8
  %330 = load %13*, %13** %26, align 8
  %331 = getelementptr inbounds %13, %13* %330, i32 0, i32 0
  %332 = getelementptr inbounds %8, %8* %331, i32 0, i32 1
  %333 = bitcast %9* %332 to %67*
  %334 = getelementptr inbounds %67, %67* %333, i32 0, i32 1
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = and i32 %336, 2
  %338 = icmp ne i32 %337, 0
  %339 = zext i1 %338 to i64
  %340 = select i1 %338, i32 6, i32 5126
  %341 = load %3*, %3** %25, align 8
  %342 = getelementptr inbounds %3, %3* %341, i32 0, i32 1
  %343 = bitcast %5* %342 to i32*
  store i32 %340, i32* %343, align 8
  %344 = bitcast %13** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %344) #11
  %345 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %345) #11
  br label %346

346:                                              ; preds = %321
  br label %347

347:                                              ; preds = %346
  br label %348

348:                                              ; preds = %347, %311
  %349 = load %13*, %13** %11, align 8
  call void @156(%13* %349)
  store i32 0, i32* %24, align 4
  br label %350

350:                                              ; preds = %348, %292, %268
  %351 = bitcast %13** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %351) #11
  %352 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #11
  %353 = bitcast %13** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %353) #11
  %354 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %354) #11
  %355 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %355) #11
  %356 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %356) #11
  %357 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %357) #11
  %358 = load i32, i32* %24, align 4
  switch i32 %358, label %360 [
    i32 0, label %359
    i32 1, label %359
  ]

359:                                              ; preds = %350, %350
  ret void

360:                                              ; preds = %350
  unreachable
}

declare dso_local i32 @php_check_open_basedir(i8*) #1

declare dso_local %13* @php_basename(i8*, i64, i8*, i64) #1

declare dso_local i32 @php_open_temporary_fd_ex(i8*, i8*, %13**, i32) #1

declare dso_local i32 @close(i32) #1

; Function Attrs: nounwind uwtable
define hidden void @php_if_tmpfile(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %53*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %8 = bitcast %53** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #11
  %9 = load %28*, %28** %3, align 8
  %10 = getelementptr inbounds %28, %28* %9, i32 0, i32 4
  %11 = getelementptr inbounds %3, %3* %10, i32 0, i32 2
  %12 = bitcast %6* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = xor i1 %14, true
  %16 = xor i1 %15, true
  %17 = zext i1 %16 to i32
  %18 = sext i32 %17 to i64
  %19 = call i64 @llvm.expect.i64(i64 %18, i64 1)
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  br label %29

22:                                               ; preds = %2
  %23 = load %28*, %28** %3, align 8
  %24 = getelementptr inbounds %28, %28* %23, i32 0, i32 4
  %25 = getelementptr inbounds %3, %3* %24, i32 0, i32 2
  %26 = bitcast %6* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %27, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @85, i32 0, i32 0))
  br label %29

29:                                               ; preds = %22, %21
  %30 = phi i32 [ 0, %21 ], [ %28, %22 ]
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  store i32 1, i32* %6, align 4
  br label %66

33:                                               ; preds = %29
  %34 = call %53* @_php_stream_fopen_tmpfile(i32 0)
  store %53* %34, %53** %5, align 8
  %35 = load %53*, %53** %5, align 8
  %36 = icmp ne %53* %35, null
  br i1 %36, label %37, label %58

37:                                               ; preds = %33
  br label %38

38:                                               ; preds = %37
  %39 = bitcast %3** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  %40 = load %3*, %3** %4, align 8
  store %3* %40, %3** %7, align 8
  %41 = load %53*, %53** %5, align 8
  %42 = getelementptr inbounds %53, %53* %41, i32 0, i32 11
  %43 = load %7*, %7** %42, align 8
  %44 = load %3*, %3** %7, align 8
  %45 = getelementptr inbounds %3, %3* %44, i32 0, i32 0
  %46 = bitcast %4* %45 to %7**
  store %7* %43, %7** %46, align 8
  %47 = load %3*, %3** %7, align 8
  %48 = getelementptr inbounds %3, %3* %47, i32 0, i32 1
  %49 = bitcast %5* %48 to i32*
  store i32 1033, i32* %49, align 8
  %50 = bitcast %3** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #11
  br label %51

51:                                               ; preds = %38
  br label %52

52:                                               ; preds = %51
  %53 = load %53*, %53** %5, align 8
  %54 = getelementptr inbounds %53, %53* %53, i32 0, i32 7
  %55 = load i8, i8* %54, align 8
  %56 = and i8 %55, -17
  %57 = or i8 %56, 16
  store i8 %57, i8* %54, align 8
  br label %65

58:                                               ; preds = %33
  br label %59

59:                                               ; preds = %58
  %60 = load %3*, %3** %4, align 8
  %61 = getelementptr inbounds %3, %3* %60, i32 0, i32 1
  %62 = bitcast %5* %61 to i32*
  store i32 2, i32* %62, align 8
  br label %63

63:                                               ; preds = %59
  br label %64

64:                                               ; preds = %63
  store i32 1, i32* %6, align 4
  br label %66

65:                                               ; preds = %52
  store i32 0, i32* %6, align 4
  br label %66

66:                                               ; preds = %65, %64, %32
  %67 = bitcast %53** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %67) #11
  %68 = load i32, i32* %6, align 4
  switch i32 %68, label %70 [
    i32 0, label %69
    i32 1, label %69
  ]

69:                                               ; preds = %66, %66
  ret void

70:                                               ; preds = %66
  unreachable
}

declare dso_local i32 @zend_parse_parameters(i32, i8*, ...) #1

declare dso_local %53* @_php_stream_fopen_tmpfile(i32) #1

; Function Attrs: nounwind uwtable
define hidden void @php_if_fopen(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca %3*, align 8
  %11 = alloca %53*, align 8
  %12 = alloca %1*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %3*, align 8
  %19 = alloca %3*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %27 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  %28 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  %29 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #11
  %30 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %9) #11
  store i8 0, i8* %9, align 1
  %31 = bitcast %3** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  store %3* null, %3** %10, align 8
  %32 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #11
  %33 = bitcast %1** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  store %1* null, %1** %12, align 8
  br label %34

34:                                               ; preds = %2
  %35 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  store i32 0, i32* %13, align 4
  %36 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  store i32 2, i32* %14, align 4
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 4, i32* %15, align 4
  %38 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  %39 = load %28*, %28** %3, align 8
  %40 = getelementptr inbounds %28, %28* %39, i32 0, i32 4
  %41 = getelementptr inbounds %3, %3* %40, i32 0, i32 2
  %42 = bitcast %6* %41 to i32*
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %16, align 4
  %44 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  %45 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #11
  %46 = bitcast %3** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #11
  store %3* null, %3** %19, align 8
  %47 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  store i32 0, i32* %20, align 4
  %48 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #11
  store i8* null, i8** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #11
  store i8 0, i8* %23, align 1
  %49 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #11
  store i32 0, i32* %24, align 4
  %50 = load i32, i32* %17, align 4
  %51 = load %3*, %3** %18, align 8
  %52 = load %3*, %3** %19, align 8
  %53 = load i32, i32* %20, align 4
  %54 = load i8*, i8** %21, align 8
  %55 = load i8, i8* %22, align 1
  %56 = load i8, i8* %23, align 1
  br label %57

57:                                               ; preds = %34
  %58 = load i32, i32* %16, align 4
  %59 = load i32, i32* %14, align 4
  %60 = icmp slt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %57
  %68 = load i32, i32* %16, align 4
  %69 = load i32, i32* %15, align 4
  %70 = icmp sgt i32 %68, %69
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 0)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %90

77:                                               ; preds = %67
  %78 = load i32, i32* %15, align 4
  %79 = icmp sge i32 %78, 0
  %80 = xor i1 %79, true
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = call i64 @llvm.expect.i64(i64 %83, i64 1)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %77, %57
  %87 = load i32, i32* %16, align 4
  %88 = load i32, i32* %14, align 4
  %89 = load i32, i32* %15, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %87, i32 %88, i32 %89)
  store i32 1, i32* %24, align 4
  br label %375

90:                                               ; preds = %77, %67
  store i32 0, i32* %17, align 4
  %91 = load %28*, %28** %3, align 8
  %92 = bitcast %28* %91 to %3*
  %93 = getelementptr inbounds %3, %3* %92, i64 4
  store %3* %93, %3** %18, align 8
  %94 = load i32, i32* %17, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %17, align 4
  br label %96

96:                                               ; preds = %90
  %97 = load i32, i32* %17, align 4
  %98 = load i32, i32* %14, align 4
  %99 = icmp sle i32 %97, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = load i8, i8* %23, align 1
  %102 = zext i8 %101 to i32
  %103 = icmp eq i32 %102, 1
  br label %104

104:                                              ; preds = %100, %96
  %105 = phi i1 [ true, %96 ], [ %103, %100 ]
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.expect.i64(i64 %108, i64 0)
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %104
  unreachable

112:                                              ; preds = %104
  br label %113

113:                                              ; preds = %112
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %17, align 4
  %117 = load i32, i32* %14, align 4
  %118 = icmp sgt i32 %116, %117
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = load i8, i8* %23, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp eq i32 %121, 0
  br label %123

123:                                              ; preds = %119, %115
  %124 = phi i1 [ true, %115 ], [ %122, %119 ]
  %125 = xor i1 %124, true
  %126 = zext i1 %125 to i32
  %127 = sext i32 %126 to i64
  %128 = call i64 @llvm.expect.i64(i64 %127, i64 0)
  %129 = icmp ne i64 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %123
  unreachable

131:                                              ; preds = %123
  br label %132

132:                                              ; preds = %131
  br label %133

133:                                              ; preds = %132
  %134 = load i8, i8* %23, align 1
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %133
  %137 = load i32, i32* %17, align 4
  %138 = load i32, i32* %16, align 4
  %139 = icmp sgt i32 %137, %138
  %140 = xor i1 %139, true
  %141 = xor i1 %140, true
  %142 = zext i1 %141 to i32
  %143 = sext i32 %142 to i64
  %144 = call i64 @llvm.expect.i64(i64 %143, i64 0)
  %145 = icmp ne i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %136
  br label %375

147:                                              ; preds = %136
  br label %148

148:                                              ; preds = %147, %133
  %149 = load %3*, %3** %18, align 8
  %150 = getelementptr inbounds %3, %3* %149, i32 1
  store %3* %150, %3** %18, align 8
  %151 = load %3*, %3** %18, align 8
  store %3* %151, %3** %19, align 8
  %152 = load %3*, %3** %19, align 8
  %153 = call i32 @152(%3* %152, i8** %5, i64* %7, i32 0)
  %154 = icmp ne i32 %153, 0
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %148
  store i32 6, i32* %20, align 4
  store i32 4, i32* %24, align 4
  br label %375

163:                                              ; preds = %148
  %164 = load i32, i32* %17, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %17, align 4
  br label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %17, align 4
  %168 = load i32, i32* %14, align 4
  %169 = icmp sle i32 %167, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = load i8, i8* %23, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 1
  br label %174

174:                                              ; preds = %170, %166
  %175 = phi i1 [ true, %166 ], [ %173, %170 ]
  %176 = xor i1 %175, true
  %177 = zext i1 %176 to i32
  %178 = sext i32 %177 to i64
  %179 = call i64 @llvm.expect.i64(i64 %178, i64 0)
  %180 = icmp ne i64 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %174
  unreachable

182:                                              ; preds = %174
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  %186 = load i32, i32* %17, align 4
  %187 = load i32, i32* %14, align 4
  %188 = icmp sgt i32 %186, %187
  br i1 %188, label %193, label %189

189:                                              ; preds = %185
  %190 = load i8, i8* %23, align 1
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %191, 0
  br label %193

193:                                              ; preds = %189, %185
  %194 = phi i1 [ true, %185 ], [ %192, %189 ]
  %195 = xor i1 %194, true
  %196 = zext i1 %195 to i32
  %197 = sext i32 %196 to i64
  %198 = call i64 @llvm.expect.i64(i64 %197, i64 0)
  %199 = icmp ne i64 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %193
  unreachable

201:                                              ; preds = %193
  br label %202

202:                                              ; preds = %201
  br label %203

203:                                              ; preds = %202
  %204 = load i8, i8* %23, align 1
  %205 = icmp ne i8 %204, 0
  br i1 %205, label %206, label %218

206:                                              ; preds = %203
  %207 = load i32, i32* %17, align 4
  %208 = load i32, i32* %16, align 4
  %209 = icmp sgt i32 %207, %208
  %210 = xor i1 %209, true
  %211 = xor i1 %210, true
  %212 = zext i1 %211 to i32
  %213 = sext i32 %212 to i64
  %214 = call i64 @llvm.expect.i64(i64 %213, i64 0)
  %215 = icmp ne i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %206
  br label %375

217:                                              ; preds = %206
  br label %218

218:                                              ; preds = %217, %203
  %219 = load %3*, %3** %18, align 8
  %220 = getelementptr inbounds %3, %3* %219, i32 1
  store %3* %220, %3** %18, align 8
  %221 = load %3*, %3** %18, align 8
  store %3* %221, %3** %19, align 8
  %222 = load %3*, %3** %19, align 8
  %223 = call i32 @159(%3* %222, i8** %6, i64* %8, i32 0)
  %224 = icmp ne i32 %223, 0
  %225 = xor i1 %224, true
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = zext i1 %227 to i32
  %229 = sext i32 %228 to i64
  %230 = call i64 @llvm.expect.i64(i64 %229, i64 0)
  %231 = icmp ne i64 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %218
  store i32 2, i32* %20, align 4
  store i32 4, i32* %24, align 4
  br label %375

233:                                              ; preds = %218
  store i8 1, i8* %23, align 1
  %234 = load i32, i32* %17, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %17, align 4
  br label %236

236:                                              ; preds = %233
  %237 = load i32, i32* %17, align 4
  %238 = load i32, i32* %14, align 4
  %239 = icmp sle i32 %237, %238
  br i1 %239, label %244, label %240

240:                                              ; preds = %236
  %241 = load i8, i8* %23, align 1
  %242 = zext i8 %241 to i32
  %243 = icmp eq i32 %242, 1
  br label %244

244:                                              ; preds = %240, %236
  %245 = phi i1 [ true, %236 ], [ %243, %240 ]
  %246 = xor i1 %245, true
  %247 = zext i1 %246 to i32
  %248 = sext i32 %247 to i64
  %249 = call i64 @llvm.expect.i64(i64 %248, i64 0)
  %250 = icmp ne i64 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %244
  unreachable

252:                                              ; preds = %244
  br label %253

253:                                              ; preds = %252
  br label %254

254:                                              ; preds = %253
  br label %255

255:                                              ; preds = %254
  %256 = load i32, i32* %17, align 4
  %257 = load i32, i32* %14, align 4
  %258 = icmp sgt i32 %256, %257
  br i1 %258, label %263, label %259

259:                                              ; preds = %255
  %260 = load i8, i8* %23, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i32 %261, 0
  br label %263

263:                                              ; preds = %259, %255
  %264 = phi i1 [ true, %255 ], [ %262, %259 ]
  %265 = xor i1 %264, true
  %266 = zext i1 %265 to i32
  %267 = sext i32 %266 to i64
  %268 = call i64 @llvm.expect.i64(i64 %267, i64 0)
  %269 = icmp ne i64 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %263
  unreachable

271:                                              ; preds = %263
  br label %272

272:                                              ; preds = %271
  br label %273

273:                                              ; preds = %272
  %274 = load i8, i8* %23, align 1
  %275 = icmp ne i8 %274, 0
  br i1 %275, label %276, label %288

276:                                              ; preds = %273
  %277 = load i32, i32* %17, align 4
  %278 = load i32, i32* %16, align 4
  %279 = icmp sgt i32 %277, %278
  %280 = xor i1 %279, true
  %281 = xor i1 %280, true
  %282 = zext i1 %281 to i32
  %283 = sext i32 %282 to i64
  %284 = call i64 @llvm.expect.i64(i64 %283, i64 0)
  %285 = icmp ne i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %276
  br label %375

287:                                              ; preds = %276
  br label %288

288:                                              ; preds = %287, %273
  %289 = load %3*, %3** %18, align 8
  %290 = getelementptr inbounds %3, %3* %289, i32 1
  store %3* %290, %3** %18, align 8
  %291 = load %3*, %3** %18, align 8
  store %3* %291, %3** %19, align 8
  %292 = load %3*, %3** %19, align 8
  %293 = call i32 @153(%3* %292, i8* %9, i8* %22, i32 0)
  %294 = icmp ne i32 %293, 0
  %295 = xor i1 %294, true
  %296 = xor i1 %295, true
  %297 = xor i1 %296, true
  %298 = zext i1 %297 to i32
  %299 = sext i32 %298 to i64
  %300 = call i64 @llvm.expect.i64(i64 %299, i64 0)
  %301 = icmp ne i64 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %288
  store i32 1, i32* %20, align 4
  store i32 4, i32* %24, align 4
  br label %375

303:                                              ; preds = %288
  %304 = load i32, i32* %17, align 4
  %305 = add nsw i32 %304, 1
  store i32 %305, i32* %17, align 4
  br label %306

306:                                              ; preds = %303
  %307 = load i32, i32* %17, align 4
  %308 = load i32, i32* %14, align 4
  %309 = icmp sle i32 %307, %308
  br i1 %309, label %314, label %310

310:                                              ; preds = %306
  %311 = load i8, i8* %23, align 1
  %312 = zext i8 %311 to i32
  %313 = icmp eq i32 %312, 1
  br label %314

314:                                              ; preds = %310, %306
  %315 = phi i1 [ true, %306 ], [ %313, %310 ]
  %316 = xor i1 %315, true
  %317 = zext i1 %316 to i32
  %318 = sext i32 %317 to i64
  %319 = call i64 @llvm.expect.i64(i64 %318, i64 0)
  %320 = icmp ne i64 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %314
  unreachable

322:                                              ; preds = %314
  br label %323

323:                                              ; preds = %322
  br label %324

324:                                              ; preds = %323
  br label %325

325:                                              ; preds = %324
  %326 = load i32, i32* %17, align 4
  %327 = load i32, i32* %14, align 4
  %328 = icmp sgt i32 %326, %327
  br i1 %328, label %333, label %329

329:                                              ; preds = %325
  %330 = load i8, i8* %23, align 1
  %331 = zext i8 %330 to i32
  %332 = icmp eq i32 %331, 0
  br label %333

333:                                              ; preds = %329, %325
  %334 = phi i1 [ true, %325 ], [ %332, %329 ]
  %335 = xor i1 %334, true
  %336 = zext i1 %335 to i32
  %337 = sext i32 %336 to i64
  %338 = call i64 @llvm.expect.i64(i64 %337, i64 0)
  %339 = icmp ne i64 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %333
  unreachable

341:                                              ; preds = %333
  br label %342

342:                                              ; preds = %341
  br label %343

343:                                              ; preds = %342
  %344 = load i8, i8* %23, align 1
  %345 = icmp ne i8 %344, 0
  br i1 %345, label %346, label %358

346:                                              ; preds = %343
  %347 = load i32, i32* %17, align 4
  %348 = load i32, i32* %16, align 4
  %349 = icmp sgt i32 %347, %348
  %350 = xor i1 %349, true
  %351 = xor i1 %350, true
  %352 = zext i1 %351 to i32
  %353 = sext i32 %352 to i64
  %354 = call i64 @llvm.expect.i64(i64 %353, i64 0)
  %355 = icmp ne i64 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %346
  br label %375

357:                                              ; preds = %346
  br label %358

358:                                              ; preds = %357, %343
  %359 = load %3*, %3** %18, align 8
  %360 = getelementptr inbounds %3, %3* %359, i32 1
  store %3* %360, %3** %18, align 8
  %361 = load %3*, %3** %18, align 8
  store %3* %361, %3** %19, align 8
  %362 = load %3*, %3** %19, align 8
  %363 = call i32 @148(%3* %362, %3** %10, i32 0)
  %364 = icmp ne i32 %363, 0
  %365 = xor i1 %364, true
  %366 = xor i1 %365, true
  %367 = xor i1 %366, true
  %368 = zext i1 %367 to i32
  %369 = sext i32 %368 to i64
  %370 = call i64 @llvm.expect.i64(i64 %369, i64 0)
  %371 = icmp ne i64 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %358
  store i32 5, i32* %20, align 4
  store i32 4, i32* %24, align 4
  br label %375

373:                                              ; preds = %358
  br label %374

374:                                              ; preds = %373
  br label %375

375:                                              ; preds = %374, %372, %356, %302, %286, %232, %216, %162, %146, %86
  %376 = load i32, i32* %24, align 4
  %377 = icmp ne i32 %376, 0
  %378 = xor i1 %377, true
  %379 = xor i1 %378, true
  %380 = zext i1 %379 to i32
  %381 = sext i32 %380 to i64
  %382 = call i64 @llvm.expect.i64(i64 %381, i64 0)
  %383 = icmp ne i64 %382, 0
  br i1 %383, label %384, label %413

384:                                              ; preds = %375
  %385 = load i32, i32* %24, align 4
  %386 = icmp eq i32 %385, 2
  br i1 %386, label %387, label %390

387:                                              ; preds = %384
  %388 = load i32, i32* %17, align 4
  %389 = load i8*, i8** %21, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %388, i8* %389)
  br label %406

390:                                              ; preds = %384
  %391 = load i32, i32* %24, align 4
  %392 = icmp eq i32 %391, 3
  br i1 %392, label %393, label %397

393:                                              ; preds = %390
  %394 = load i32, i32* %17, align 4
  %395 = load i8*, i8** %21, align 8
  %396 = load %3*, %3** %19, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %394, i8* %395, %3* %396)
  br label %405

397:                                              ; preds = %390
  %398 = load i32, i32* %24, align 4
  %399 = icmp eq i32 %398, 4
  br i1 %399, label %400, label %404

400:                                              ; preds = %397
  %401 = load i32, i32* %17, align 4
  %402 = load i32, i32* %20, align 4
  %403 = load %3*, %3** %19, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %401, i32 %402, %3* %403)
  br label %404

404:                                              ; preds = %400, %397
  br label %405

405:                                              ; preds = %404, %393
  br label %406

406:                                              ; preds = %405, %387
  br label %407

407:                                              ; preds = %406
  %408 = load %3*, %3** %4, align 8
  %409 = getelementptr inbounds %3, %3* %408, i32 0, i32 1
  %410 = bitcast %5* %409 to i32*
  store i32 2, i32* %410, align 8
  br label %411

411:                                              ; preds = %407
  br label %412

412:                                              ; preds = %411
  store i32 1, i32* %25, align 4
  br label %414

413:                                              ; preds = %375
  store i32 0, i32* %25, align 4
  br label %414

414:                                              ; preds = %413, %412
  %415 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %415) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #11
  %416 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %416) #11
  %417 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %417) #11
  %418 = bitcast %3** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %418) #11
  %419 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %419) #11
  %420 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %420) #11
  %421 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %421) #11
  %422 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %422) #11
  %423 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %423) #11
  %424 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %424) #11
  %425 = load i32, i32* %25, align 4
  switch i32 %425, label %488 [
    i32 0, label %426
  ]

426:                                              ; preds = %414
  br label %427

427:                                              ; preds = %426
  br label %428

428:                                              ; preds = %427
  %429 = load %3*, %3** %10, align 8
  %430 = icmp ne %3* %429, null
  br i1 %430, label %431, label %435

431:                                              ; preds = %428
  %432 = load %3*, %3** %10, align 8
  %433 = call i32 @php_le_stream_context()
  %434 = call i8* @zend_fetch_resource_ex(%3* %432, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %433)
  br label %445

435:                                              ; preds = %428
  %436 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %437 = icmp ne %1* %436, null
  br i1 %437, label %438, label %440

438:                                              ; preds = %435
  %439 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %442

440:                                              ; preds = %435
  %441 = call %1* @php_stream_context_alloc()
  store %1* %441, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %442

442:                                              ; preds = %440, %438
  %443 = phi %1* [ %439, %438 ], [ %441, %440 ]
  %444 = bitcast %1* %443 to i8*
  br label %445

445:                                              ; preds = %442, %431
  %446 = phi i8* [ %434, %431 ], [ %444, %442 ]
  %447 = bitcast i8* %446 to %1*
  store %1* %447, %1** %12, align 8
  %448 = load i8*, i8** %5, align 8
  %449 = load i8*, i8** %6, align 8
  %450 = load i8, i8* %9, align 1
  %451 = zext i8 %450 to i32
  %452 = icmp ne i32 %451, 0
  %453 = zext i1 %452 to i64
  %454 = select i1 %452, i32 1, i32 0
  %455 = or i32 %454, 8
  %456 = load %1*, %1** %12, align 8
  %457 = call %53* @_php_stream_open_wrapper_ex(i8* %448, i8* %449, i32 %455, %13** null, %1* %456)
  store %53* %457, %53** %11, align 8
  %458 = load %53*, %53** %11, align 8
  %459 = icmp eq %53* %458, null
  br i1 %459, label %460, label %467

460:                                              ; preds = %445
  br label %461

461:                                              ; preds = %460
  %462 = load %3*, %3** %4, align 8
  %463 = getelementptr inbounds %3, %3* %462, i32 0, i32 1
  %464 = bitcast %5* %463 to i32*
  store i32 2, i32* %464, align 8
  br label %465

465:                                              ; preds = %461
  br label %466

466:                                              ; preds = %465
  store i32 1, i32* %25, align 4
  br label %488

467:                                              ; preds = %445
  br label %468

468:                                              ; preds = %467
  %469 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %469) #11
  %470 = load %3*, %3** %4, align 8
  store %3* %470, %3** %26, align 8
  %471 = load %53*, %53** %11, align 8
  %472 = getelementptr inbounds %53, %53* %471, i32 0, i32 11
  %473 = load %7*, %7** %472, align 8
  %474 = load %3*, %3** %26, align 8
  %475 = getelementptr inbounds %3, %3* %474, i32 0, i32 0
  %476 = bitcast %4* %475 to %7**
  store %7* %473, %7** %476, align 8
  %477 = load %3*, %3** %26, align 8
  %478 = getelementptr inbounds %3, %3* %477, i32 0, i32 1
  %479 = bitcast %5* %478 to i32*
  store i32 1033, i32* %479, align 8
  %480 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %480) #11
  br label %481

481:                                              ; preds = %468
  br label %482

482:                                              ; preds = %481
  %483 = load %53*, %53** %11, align 8
  %484 = getelementptr inbounds %53, %53* %483, i32 0, i32 7
  %485 = load i8, i8* %484, align 8
  %486 = and i8 %485, -17
  %487 = or i8 %486, 16
  store i8 %487, i8* %484, align 8
  store i32 0, i32* %25, align 4
  br label %488

488:                                              ; preds = %482, %466, %414
  %489 = bitcast %1** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %489) #11
  %490 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %490) #11
  %491 = bitcast %3** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %491) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #11
  %492 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %492) #11
  %493 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %493) #11
  %494 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %494) #11
  %495 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %495) #11
  %496 = load i32, i32* %25, align 4
  switch i32 %496, label %498 [
    i32 0, label %497
    i32 1, label %497
  ]

497:                                              ; preds = %488, %488
  ret void

498:                                              ; preds = %488
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @159(%3* %0, i8** %1, i64* %2, i32 %3) #4 {
  %5 = alloca i32, align 4
  %6 = alloca %3*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %13*, align 8
  %11 = alloca i32, align 4
  store %3* %0, %3** %6, align 8
  store i8** %1, i8*** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32 %3, i32* %9, align 4
  %12 = bitcast %13** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #11
  %13 = load %3*, %3** %6, align 8
  %14 = load i32, i32* %9, align 4
  %15 = call i32 @172(%3* %13, %13** %10, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  store i32 0, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

18:                                               ; preds = %4
  %19 = load i32, i32* %9, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = load %13*, %13** %10, align 8
  %23 = icmp ne %13* %22, null
  %24 = xor i1 %23, true
  %25 = xor i1 %24, true
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = call i64 @llvm.expect.i64(i64 %28, i64 0)
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %21
  %32 = load i8**, i8*** %7, align 8
  store i8* null, i8** %32, align 8
  %33 = load i64*, i64** %8, align 8
  store i64 0, i64* %33, align 8
  br label %43

34:                                               ; preds = %21, %18
  %35 = load %13*, %13** %10, align 8
  %36 = getelementptr inbounds %13, %13* %35, i32 0, i32 3
  %37 = getelementptr inbounds [1 x i8], [1 x i8]* %36, i32 0, i32 0
  %38 = load i8**, i8*** %7, align 8
  store i8* %37, i8** %38, align 8
  %39 = load %13*, %13** %10, align 8
  %40 = getelementptr inbounds %13, %13* %39, i32 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = load i64*, i64** %8, align 8
  store i64 %41, i64* %42, align 8
  br label %43

43:                                               ; preds = %34, %31
  store i32 1, i32* %5, align 4
  store i32 1, i32* %11, align 4
  br label %44

44:                                               ; preds = %43, %17
  %45 = bitcast %13** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #11
  %46 = load i32, i32* %5, align 4
  ret i32 %46
}

; Function Attrs: nounwind uwtable
define dso_local void @zif_fclose(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca %53*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %3*, align 8
  %13 = alloca %3*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %20 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #11
  %21 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #11
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #11
  store i32 0, i32* %7, align 4
  %24 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #11
  store i32 1, i32* %8, align 4
  %25 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #11
  store i32 1, i32* %9, align 4
  %26 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  %27 = load %28*, %28** %3, align 8
  %28 = getelementptr inbounds %28, %28* %27, i32 0, i32 4
  %29 = getelementptr inbounds %3, %3* %28, i32 0, i32 2
  %30 = bitcast %6* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  %33 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  %34 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  store %3* null, %3** %13, align 8
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  store i32 0, i32* %14, align 4
  %36 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  store i8 0, i8* %17, align 1
  %37 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 0, i32* %18, align 4
  %38 = load i32, i32* %11, align 4
  %39 = load %3*, %3** %12, align 8
  %40 = load %3*, %3** %13, align 8
  %41 = load i32, i32* %14, align 4
  %42 = load i8*, i8** %15, align 8
  %43 = load i8, i8* %16, align 1
  %44 = load i8, i8* %17, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %10, align 4
  %47 = load i32, i32* %8, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %10, align 4
  %57 = load i32, i32* %9, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %9, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %10, align 4
  %76 = load i32, i32* %8, align 4
  %77 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %18, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %11, align 4
  %79 = load %28*, %28** %3, align 8
  %80 = bitcast %28* %79 to %3*
  %81 = getelementptr inbounds %3, %3* %80, i64 4
  store %3* %81, %3** %12, align 8
  %82 = load i32, i32* %11, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %11, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %11, align 4
  %86 = load i32, i32* %8, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %17, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %11, align 4
  %105 = load i32, i32* %8, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %17, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %17, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %11, align 4
  %126 = load i32, i32* %10, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %3*, %3** %12, align 8
  %138 = getelementptr inbounds %3, %3* %137, i32 1
  store %3* %138, %3** %12, align 8
  %139 = load %3*, %3** %12, align 8
  store %3* %139, %3** %13, align 8
  %140 = load %3*, %3** %13, align 8
  %141 = call i32 @148(%3* %140, %3** %5, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 5, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %18, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %191

162:                                              ; preds = %153
  %163 = load i32, i32* %18, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %11, align 4
  %167 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %18, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %11, align 4
  %173 = load i8*, i8** %15, align 8
  %174 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %3* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %18, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %11, align 4
  %180 = load i32, i32* %14, align 4
  %181 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %3* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  br label %185

185:                                              ; preds = %184
  %186 = load %3*, %3** %4, align 8
  %187 = getelementptr inbounds %3, %3* %186, i32 0, i32 1
  %188 = bitcast %5* %187 to i32*
  store i32 2, i32* %188, align 8
  br label %189

189:                                              ; preds = %185
  br label %190

190:                                              ; preds = %189
  store i32 1, i32* %19, align 4
  br label %192

191:                                              ; preds = %153
  store i32 0, i32* %19, align 4
  br label %192

192:                                              ; preds = %191, %190
  %193 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #11
  %194 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #11
  %195 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #11
  %196 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #11
  %197 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #11
  %198 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #11
  %199 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #11
  %200 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #11
  %201 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #11
  %202 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #11
  %203 = load i32, i32* %19, align 4
  switch i32 %203, label %276 [
    i32 0, label %204
  ]

204:                                              ; preds = %192
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  br label %207

207:                                              ; preds = %206
  %208 = load %3*, %3** %5, align 8
  %209 = call zeroext i8 @150(%3* %208)
  %210 = zext i8 %209 to i32
  %211 = icmp eq i32 %210, 9
  %212 = xor i1 %211, true
  %213 = zext i1 %212 to i32
  %214 = sext i32 %213 to i64
  %215 = call i64 @llvm.expect.i64(i64 %214, i64 0)
  %216 = icmp ne i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %207
  unreachable

218:                                              ; preds = %207
  br label %219

219:                                              ; preds = %218
  br label %220

220:                                              ; preds = %219
  br label %221

221:                                              ; preds = %220
  %222 = load %3*, %3** %5, align 8
  %223 = getelementptr inbounds %3, %3* %222, i32 0, i32 0
  %224 = bitcast %4* %223 to %7**
  %225 = load %7*, %7** %224, align 8
  %226 = call i32 @php_file_le_stream()
  %227 = call i32 @php_file_le_pstream()
  %228 = call i8* @zend_fetch_resource2(%7* %225, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %226, i32 %227)
  %229 = bitcast i8* %228 to %53*
  store %53* %229, %53** %6, align 8
  %230 = icmp eq %53* %229, null
  br i1 %230, label %231, label %238

231:                                              ; preds = %221
  br label %232

232:                                              ; preds = %231
  %233 = load %3*, %3** %4, align 8
  %234 = getelementptr inbounds %3, %3* %233, i32 0, i32 1
  %235 = bitcast %5* %234 to i32*
  store i32 2, i32* %235, align 8
  br label %236

236:                                              ; preds = %232
  br label %237

237:                                              ; preds = %236
  store i32 1, i32* %19, align 4
  br label %276

238:                                              ; preds = %221
  br label %239

239:                                              ; preds = %238
  br label %240

240:                                              ; preds = %239
  %241 = load %53*, %53** %6, align 8
  %242 = getelementptr inbounds %53, %53* %241, i32 0, i32 10
  %243 = load i32, i32* %242, align 4
  %244 = and i32 %243, 128
  %245 = icmp ne i32 %244, 0
  br i1 %245, label %246, label %258

246:                                              ; preds = %240
  %247 = load %53*, %53** %6, align 8
  %248 = getelementptr inbounds %53, %53* %247, i32 0, i32 11
  %249 = load %7*, %7** %248, align 8
  %250 = getelementptr inbounds %7, %7* %249, i32 0, i32 1
  %251 = load i32, i32* %250, align 8
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @99, i32 0, i32 0), i32 %251)
  br label %252

252:                                              ; preds = %246
  %253 = load %3*, %3** %4, align 8
  %254 = getelementptr inbounds %3, %3* %253, i32 0, i32 1
  %255 = bitcast %5* %254 to i32*
  store i32 2, i32* %255, align 8
  br label %256

256:                                              ; preds = %252
  br label %257

257:                                              ; preds = %256
  store i32 1, i32* %19, align 4
  br label %276

258:                                              ; preds = %240
  %259 = load %53*, %53** %6, align 8
  %260 = load %53*, %53** %6, align 8
  %261 = getelementptr inbounds %53, %53* %260, i32 0, i32 7
  %262 = load i8, i8* %261, align 8
  %263 = and i8 %262, 1
  %264 = zext i8 %263 to i32
  %265 = icmp ne i32 %264, 0
  %266 = zext i1 %265 to i64
  %267 = select i1 %265, i32 19, i32 3
  %268 = or i32 64, %267
  %269 = call i32 @_php_stream_free(%53* %259, i32 %268)
  br label %270

270:                                              ; preds = %258
  %271 = load %3*, %3** %4, align 8
  %272 = getelementptr inbounds %3, %3* %271, i32 0, i32 1
  %273 = bitcast %5* %272 to i32*
  store i32 3, i32* %273, align 8
  br label %274

274:                                              ; preds = %270
  br label %275

275:                                              ; preds = %274
  store i32 1, i32* %19, align 4
  br label %276

276:                                              ; preds = %275, %257, %237, %192
  %277 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %277) #11
  %278 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %278) #11
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_popen(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %62*, align 8
  %10 = alloca %53*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %3*, align 8
  %18 = alloca %3*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %27 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  %28 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  %29 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #11
  %30 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #11
  %31 = bitcast %62** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  %32 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #11
  %33 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  br label %34

34:                                               ; preds = %2
  %35 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  store i32 0, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  store i32 2, i32* %13, align 4
  %37 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 2, i32* %14, align 4
  %38 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  %39 = load %28*, %28** %3, align 8
  %40 = getelementptr inbounds %28, %28* %39, i32 0, i32 4
  %41 = getelementptr inbounds %3, %3* %40, i32 0, i32 2
  %42 = bitcast %6* %41 to i32*
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %15, align 4
  %44 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  %45 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #11
  %46 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #11
  store %3* null, %3** %18, align 8
  %47 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  store i32 0, i32* %19, align 4
  %48 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #11
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #11
  store i8 0, i8* %22, align 1
  %49 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #11
  store i32 0, i32* %23, align 4
  %50 = load i32, i32* %16, align 4
  %51 = load %3*, %3** %17, align 8
  %52 = load %3*, %3** %18, align 8
  %53 = load i32, i32* %19, align 4
  %54 = load i8*, i8** %20, align 8
  %55 = load i8, i8* %21, align 1
  %56 = load i8, i8* %22, align 1
  br label %57

57:                                               ; preds = %34
  %58 = load i32, i32* %15, align 4
  %59 = load i32, i32* %13, align 4
  %60 = icmp slt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %57
  %68 = load i32, i32* %15, align 4
  %69 = load i32, i32* %14, align 4
  %70 = icmp sgt i32 %68, %69
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 0)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %90

77:                                               ; preds = %67
  %78 = load i32, i32* %14, align 4
  %79 = icmp sge i32 %78, 0
  %80 = xor i1 %79, true
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = call i64 @llvm.expect.i64(i64 %83, i64 1)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %77, %57
  %87 = load i32, i32* %15, align 4
  %88 = load i32, i32* %13, align 4
  %89 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %87, i32 %88, i32 %89)
  store i32 1, i32* %23, align 4
  br label %235

90:                                               ; preds = %77, %67
  store i32 0, i32* %16, align 4
  %91 = load %28*, %28** %3, align 8
  %92 = bitcast %28* %91 to %3*
  %93 = getelementptr inbounds %3, %3* %92, i64 4
  store %3* %93, %3** %17, align 8
  %94 = load i32, i32* %16, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %16, align 4
  br label %96

96:                                               ; preds = %90
  %97 = load i32, i32* %16, align 4
  %98 = load i32, i32* %13, align 4
  %99 = icmp sle i32 %97, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = load i8, i8* %22, align 1
  %102 = zext i8 %101 to i32
  %103 = icmp eq i32 %102, 1
  br label %104

104:                                              ; preds = %100, %96
  %105 = phi i1 [ true, %96 ], [ %103, %100 ]
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.expect.i64(i64 %108, i64 0)
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %104
  unreachable

112:                                              ; preds = %104
  br label %113

113:                                              ; preds = %112
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %16, align 4
  %117 = load i32, i32* %13, align 4
  %118 = icmp sgt i32 %116, %117
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = load i8, i8* %22, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp eq i32 %121, 0
  br label %123

123:                                              ; preds = %119, %115
  %124 = phi i1 [ true, %115 ], [ %122, %119 ]
  %125 = xor i1 %124, true
  %126 = zext i1 %125 to i32
  %127 = sext i32 %126 to i64
  %128 = call i64 @llvm.expect.i64(i64 %127, i64 0)
  %129 = icmp ne i64 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %123
  unreachable

131:                                              ; preds = %123
  br label %132

132:                                              ; preds = %131
  br label %133

133:                                              ; preds = %132
  %134 = load i8, i8* %22, align 1
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %133
  %137 = load i32, i32* %16, align 4
  %138 = load i32, i32* %15, align 4
  %139 = icmp sgt i32 %137, %138
  %140 = xor i1 %139, true
  %141 = xor i1 %140, true
  %142 = zext i1 %141 to i32
  %143 = sext i32 %142 to i64
  %144 = call i64 @llvm.expect.i64(i64 %143, i64 0)
  %145 = icmp ne i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %136
  br label %235

147:                                              ; preds = %136
  br label %148

148:                                              ; preds = %147, %133
  %149 = load %3*, %3** %17, align 8
  %150 = getelementptr inbounds %3, %3* %149, i32 1
  store %3* %150, %3** %17, align 8
  %151 = load %3*, %3** %17, align 8
  store %3* %151, %3** %18, align 8
  %152 = load %3*, %3** %18, align 8
  %153 = call i32 @152(%3* %152, i8** %5, i64* %7, i32 0)
  %154 = icmp ne i32 %153, 0
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %148
  store i32 6, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %235

163:                                              ; preds = %148
  %164 = load i32, i32* %16, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %16, align 4
  br label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %16, align 4
  %168 = load i32, i32* %13, align 4
  %169 = icmp sle i32 %167, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = load i8, i8* %22, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 1
  br label %174

174:                                              ; preds = %170, %166
  %175 = phi i1 [ true, %166 ], [ %173, %170 ]
  %176 = xor i1 %175, true
  %177 = zext i1 %176 to i32
  %178 = sext i32 %177 to i64
  %179 = call i64 @llvm.expect.i64(i64 %178, i64 0)
  %180 = icmp ne i64 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %174
  unreachable

182:                                              ; preds = %174
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  %186 = load i32, i32* %16, align 4
  %187 = load i32, i32* %13, align 4
  %188 = icmp sgt i32 %186, %187
  br i1 %188, label %193, label %189

189:                                              ; preds = %185
  %190 = load i8, i8* %22, align 1
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %191, 0
  br label %193

193:                                              ; preds = %189, %185
  %194 = phi i1 [ true, %185 ], [ %192, %189 ]
  %195 = xor i1 %194, true
  %196 = zext i1 %195 to i32
  %197 = sext i32 %196 to i64
  %198 = call i64 @llvm.expect.i64(i64 %197, i64 0)
  %199 = icmp ne i64 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %193
  unreachable

201:                                              ; preds = %193
  br label %202

202:                                              ; preds = %201
  br label %203

203:                                              ; preds = %202
  %204 = load i8, i8* %22, align 1
  %205 = icmp ne i8 %204, 0
  br i1 %205, label %206, label %218

206:                                              ; preds = %203
  %207 = load i32, i32* %16, align 4
  %208 = load i32, i32* %15, align 4
  %209 = icmp sgt i32 %207, %208
  %210 = xor i1 %209, true
  %211 = xor i1 %210, true
  %212 = zext i1 %211 to i32
  %213 = sext i32 %212 to i64
  %214 = call i64 @llvm.expect.i64(i64 %213, i64 0)
  %215 = icmp ne i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %206
  br label %235

217:                                              ; preds = %206
  br label %218

218:                                              ; preds = %217, %203
  %219 = load %3*, %3** %17, align 8
  %220 = getelementptr inbounds %3, %3* %219, i32 1
  store %3* %220, %3** %17, align 8
  %221 = load %3*, %3** %17, align 8
  store %3* %221, %3** %18, align 8
  %222 = load %3*, %3** %18, align 8
  %223 = call i32 @159(%3* %222, i8** %6, i64* %8, i32 0)
  %224 = icmp ne i32 %223, 0
  %225 = xor i1 %224, true
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = zext i1 %227 to i32
  %229 = sext i32 %228 to i64
  %230 = call i64 @llvm.expect.i64(i64 %229, i64 0)
  %231 = icmp ne i64 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %218
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %235

233:                                              ; preds = %218
  br label %234

234:                                              ; preds = %233
  br label %235

235:                                              ; preds = %234, %232, %216, %162, %146, %86
  %236 = load i32, i32* %23, align 4
  %237 = icmp ne i32 %236, 0
  %238 = xor i1 %237, true
  %239 = xor i1 %238, true
  %240 = zext i1 %239 to i32
  %241 = sext i32 %240 to i64
  %242 = call i64 @llvm.expect.i64(i64 %241, i64 0)
  %243 = icmp ne i64 %242, 0
  br i1 %243, label %244, label %267

244:                                              ; preds = %235
  %245 = load i32, i32* %23, align 4
  %246 = icmp eq i32 %245, 2
  br i1 %246, label %247, label %250

247:                                              ; preds = %244
  %248 = load i32, i32* %16, align 4
  %249 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %248, i8* %249)
  br label %266

250:                                              ; preds = %244
  %251 = load i32, i32* %23, align 4
  %252 = icmp eq i32 %251, 3
  br i1 %252, label %253, label %257

253:                                              ; preds = %250
  %254 = load i32, i32* %16, align 4
  %255 = load i8*, i8** %20, align 8
  %256 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %254, i8* %255, %3* %256)
  br label %265

257:                                              ; preds = %250
  %258 = load i32, i32* %23, align 4
  %259 = icmp eq i32 %258, 4
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = load i32, i32* %16, align 4
  %262 = load i32, i32* %19, align 4
  %263 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %261, i32 %262, %3* %263)
  br label %264

264:                                              ; preds = %260, %257
  br label %265

265:                                              ; preds = %264, %253
  br label %266

266:                                              ; preds = %265, %247
  store i32 1, i32* %24, align 4
  br label %268

267:                                              ; preds = %235
  store i32 0, i32* %24, align 4
  br label %268

268:                                              ; preds = %267, %266
  %269 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #11
  %270 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #11
  %271 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #11
  %272 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #11
  %273 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #11
  %274 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #11
  %275 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #11
  %276 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #11
  %277 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #11
  %278 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #11
  %279 = load i32, i32* %24, align 4
  switch i32 %279, label %364 [
    i32 0, label %280
  ]

280:                                              ; preds = %268
  br label %281

281:                                              ; preds = %280
  br label %282

282:                                              ; preds = %281
  %283 = load i8*, i8** %6, align 8
  %284 = load i64, i64* %8, align 8
  %285 = call noalias i8* @_estrndup(i8* %283, i64 %284)
  store i8* %285, i8** %11, align 8
  %286 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %286) #11
  %287 = load i8*, i8** %11, align 8
  %288 = load i64, i64* %8, align 8
  %289 = call i8* @memchr(i8* %287, i32 98, i64 %288) #13
  store i8* %289, i8** %25, align 8
  %290 = load i8*, i8** %25, align 8
  %291 = icmp ne i8* %290, null
  br i1 %291, label %292, label %303

292:                                              ; preds = %282
  %293 = load i8*, i8** %25, align 8
  %294 = load i8*, i8** %25, align 8
  %295 = getelementptr inbounds i8, i8* %294, i64 1
  %296 = load i64, i64* %8, align 8
  %297 = load i8*, i8** %25, align 8
  %298 = load i8*, i8** %11, align 8
  %299 = ptrtoint i8* %297 to i64
  %300 = ptrtoint i8* %298 to i64
  %301 = sub i64 %299, %300
  %302 = sub i64 %296, %301
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %293, i8* align 1 %295, i64 %302, i1 false)
  br label %303

303:                                              ; preds = %292, %282
  %304 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %304) #11
  %305 = load i8*, i8** %5, align 8
  %306 = load i8*, i8** %11, align 8
  %307 = call %62* @popen(i8* %305, i8* %306)
  store %62* %307, %62** %9, align 8
  %308 = load %62*, %62** %9, align 8
  %309 = icmp ne %62* %308, null
  br i1 %309, label %323, label %310

310:                                              ; preds = %303
  %311 = load i8*, i8** %5, align 8
  %312 = load i8*, i8** %11, align 8
  %313 = call i32* @__errno_location() #12
  %314 = load i32, i32* %313, align 4
  %315 = call i8* @strerror(i32 %314) #11
  call void (i8*, i8*, i8*, i32, i8*, ...) @php_error_docref2(i8* null, i8* %311, i8* %312, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @100, i32 0, i32 0), i8* %315)
  %316 = load i8*, i8** %11, align 8
  call void @_efree(i8* %316)
  br label %317

317:                                              ; preds = %310
  %318 = load %3*, %3** %4, align 8
  %319 = getelementptr inbounds %3, %3* %318, i32 0, i32 1
  %320 = bitcast %5* %319 to i32*
  store i32 2, i32* %320, align 8
  br label %321

321:                                              ; preds = %317
  br label %322

322:                                              ; preds = %321
  store i32 1, i32* %24, align 4
  br label %364

323:                                              ; preds = %303
  %324 = load %62*, %62** %9, align 8
  %325 = load i8*, i8** %6, align 8
  %326 = call %53* @_php_stream_fopen_from_pipe(%62* %324, i8* %325)
  store %53* %326, %53** %10, align 8
  %327 = load %53*, %53** %10, align 8
  %328 = icmp eq %53* %327, null
  br i1 %328, label %329, label %341

329:                                              ; preds = %323
  %330 = load i8*, i8** %5, align 8
  %331 = load i8*, i8** %6, align 8
  %332 = call i32* @__errno_location() #12
  %333 = load i32, i32* %332, align 4
  %334 = call i8* @strerror(i32 %333) #11
  call void (i8*, i8*, i8*, i32, i8*, ...) @php_error_docref2(i8* null, i8* %330, i8* %331, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @100, i32 0, i32 0), i8* %334)
  br label %335

335:                                              ; preds = %329
  %336 = load %3*, %3** %4, align 8
  %337 = getelementptr inbounds %3, %3* %336, i32 0, i32 1
  %338 = bitcast %5* %337 to i32*
  store i32 2, i32* %338, align 8
  br label %339

339:                                              ; preds = %335
  br label %340

340:                                              ; preds = %339
  br label %362

341:                                              ; preds = %323
  br label %342

342:                                              ; preds = %341
  %343 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %343) #11
  %344 = load %3*, %3** %4, align 8
  store %3* %344, %3** %26, align 8
  %345 = load %53*, %53** %10, align 8
  %346 = getelementptr inbounds %53, %53* %345, i32 0, i32 11
  %347 = load %7*, %7** %346, align 8
  %348 = load %3*, %3** %26, align 8
  %349 = getelementptr inbounds %3, %3* %348, i32 0, i32 0
  %350 = bitcast %4* %349 to %7**
  store %7* %347, %7** %350, align 8
  %351 = load %3*, %3** %26, align 8
  %352 = getelementptr inbounds %3, %3* %351, i32 0, i32 1
  %353 = bitcast %5* %352 to i32*
  store i32 1033, i32* %353, align 8
  %354 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %354) #11
  br label %355

355:                                              ; preds = %342
  br label %356

356:                                              ; preds = %355
  %357 = load %53*, %53** %10, align 8
  %358 = getelementptr inbounds %53, %53* %357, i32 0, i32 7
  %359 = load i8, i8* %358, align 8
  %360 = and i8 %359, -17
  %361 = or i8 %360, 16
  store i8 %361, i8* %358, align 8
  br label %362

362:                                              ; preds = %356, %340
  %363 = load i8*, i8** %11, align 8
  call void @_efree(i8* %363)
  store i32 0, i32* %24, align 4
  br label %364

364:                                              ; preds = %362, %322, %268
  %365 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %365) #11
  %366 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %366) #11
  %367 = bitcast %62** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %367) #11
  %368 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %368) #11
  %369 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %369) #11
  %370 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370) #11
  %371 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #11
  %372 = load i32, i32* %24, align 4
  switch i32 %372, label %374 [
    i32 0, label %373
    i32 1, label %373
  ]

373:                                              ; preds = %364, %364
  ret void

374:                                              ; preds = %364
  unreachable
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare dso_local %62* @popen(i8*, i8*) #1

declare dso_local void @php_error_docref2(i8*, i8*, i8*, i32, i8*, ...) #1

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #8

declare dso_local %53* @_php_stream_fopen_from_pipe(%62*, i8*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_pclose(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca %53*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %3*, align 8
  %13 = alloca %3*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %21 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #11
  %22 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #11
  br label %23

23:                                               ; preds = %2
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #11
  store i32 0, i32* %7, align 4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #11
  store i32 1, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #11
  %28 = load %28*, %28** %3, align 8
  %29 = getelementptr inbounds %28, %28* %28, i32 0, i32 4
  %30 = getelementptr inbounds %3, %3* %29, i32 0, i32 2
  %31 = bitcast %6* %30 to i32*
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %10, align 4
  %33 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #11
  %34 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  %35 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  store %3* null, %3** %13, align 8
  %36 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  store i32 0, i32* %14, align 4
  %37 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  store i8 0, i8* %17, align 1
  %38 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  store i32 0, i32* %18, align 4
  %39 = load i32, i32* %11, align 4
  %40 = load %3*, %3** %12, align 8
  %41 = load %3*, %3** %13, align 8
  %42 = load i32, i32* %14, align 4
  %43 = load i8*, i8** %15, align 8
  %44 = load i8, i8* %16, align 1
  %45 = load i8, i8* %17, align 1
  br label %46

46:                                               ; preds = %23
  %47 = load i32, i32* %10, align 4
  %48 = load i32, i32* %8, align 4
  %49 = icmp slt i32 %47, %48
  %50 = xor i1 %49, true
  %51 = xor i1 %50, true
  %52 = zext i1 %51 to i32
  %53 = sext i32 %52 to i64
  %54 = call i64 @llvm.expect.i64(i64 %53, i64 0)
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %75, label %56

56:                                               ; preds = %46
  %57 = load i32, i32* %10, align 4
  %58 = load i32, i32* %9, align 4
  %59 = icmp sgt i32 %57, %58
  %60 = xor i1 %59, true
  %61 = xor i1 %60, true
  %62 = zext i1 %61 to i32
  %63 = sext i32 %62 to i64
  %64 = call i64 @llvm.expect.i64(i64 %63, i64 0)
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %66, label %79

66:                                               ; preds = %56
  %67 = load i32, i32* %9, align 4
  %68 = icmp sge i32 %67, 0
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 1)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %66, %46
  %76 = load i32, i32* %10, align 4
  %77 = load i32, i32* %8, align 4
  %78 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %76, i32 %77, i32 %78)
  store i32 1, i32* %18, align 4
  br label %154

79:                                               ; preds = %66, %56
  store i32 0, i32* %11, align 4
  %80 = load %28*, %28** %3, align 8
  %81 = bitcast %28* %80 to %3*
  %82 = getelementptr inbounds %3, %3* %81, i64 4
  store %3* %82, %3** %12, align 8
  %83 = load i32, i32* %11, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %11, align 4
  br label %85

85:                                               ; preds = %79
  %86 = load i32, i32* %11, align 4
  %87 = load i32, i32* %8, align 4
  %88 = icmp sle i32 %86, %87
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = load i8, i8* %17, align 1
  %91 = zext i8 %90 to i32
  %92 = icmp eq i32 %91, 1
  br label %93

93:                                               ; preds = %89, %85
  %94 = phi i1 [ true, %85 ], [ %92, %89 ]
  %95 = xor i1 %94, true
  %96 = zext i1 %95 to i32
  %97 = sext i32 %96 to i64
  %98 = call i64 @llvm.expect.i64(i64 %97, i64 0)
  %99 = icmp ne i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %93
  unreachable

101:                                              ; preds = %93
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  %105 = load i32, i32* %11, align 4
  %106 = load i32, i32* %8, align 4
  %107 = icmp sgt i32 %105, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %104
  %109 = load i8, i8* %17, align 1
  %110 = zext i8 %109 to i32
  %111 = icmp eq i32 %110, 0
  br label %112

112:                                              ; preds = %108, %104
  %113 = phi i1 [ true, %104 ], [ %111, %108 ]
  %114 = xor i1 %113, true
  %115 = zext i1 %114 to i32
  %116 = sext i32 %115 to i64
  %117 = call i64 @llvm.expect.i64(i64 %116, i64 0)
  %118 = icmp ne i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %112
  unreachable

120:                                              ; preds = %112
  br label %121

121:                                              ; preds = %120
  br label %122

122:                                              ; preds = %121
  %123 = load i8, i8* %17, align 1
  %124 = icmp ne i8 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %122
  %126 = load i32, i32* %11, align 4
  %127 = load i32, i32* %10, align 4
  %128 = icmp sgt i32 %126, %127
  %129 = xor i1 %128, true
  %130 = xor i1 %129, true
  %131 = zext i1 %130 to i32
  %132 = sext i32 %131 to i64
  %133 = call i64 @llvm.expect.i64(i64 %132, i64 0)
  %134 = icmp ne i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %125
  br label %154

136:                                              ; preds = %125
  br label %137

137:                                              ; preds = %136, %122
  %138 = load %3*, %3** %12, align 8
  %139 = getelementptr inbounds %3, %3* %138, i32 1
  store %3* %139, %3** %12, align 8
  %140 = load %3*, %3** %12, align 8
  store %3* %140, %3** %13, align 8
  %141 = load %3*, %3** %13, align 8
  %142 = call i32 @148(%3* %141, %3** %5, i32 0)
  %143 = icmp ne i32 %142, 0
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = zext i1 %146 to i32
  %148 = sext i32 %147 to i64
  %149 = call i64 @llvm.expect.i64(i64 %148, i64 0)
  %150 = icmp ne i64 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %137
  store i32 5, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %154

152:                                              ; preds = %137
  br label %153

153:                                              ; preds = %152
  br label %154

154:                                              ; preds = %153, %151, %135, %75
  %155 = load i32, i32* %18, align 4
  %156 = icmp ne i32 %155, 0
  %157 = xor i1 %156, true
  %158 = xor i1 %157, true
  %159 = zext i1 %158 to i32
  %160 = sext i32 %159 to i64
  %161 = call i64 @llvm.expect.i64(i64 %160, i64 0)
  %162 = icmp ne i64 %161, 0
  br i1 %162, label %163, label %192

163:                                              ; preds = %154
  %164 = load i32, i32* %18, align 4
  %165 = icmp eq i32 %164, 2
  br i1 %165, label %166, label %169

166:                                              ; preds = %163
  %167 = load i32, i32* %11, align 4
  %168 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %167, i8* %168)
  br label %185

169:                                              ; preds = %163
  %170 = load i32, i32* %18, align 4
  %171 = icmp eq i32 %170, 3
  br i1 %171, label %172, label %176

172:                                              ; preds = %169
  %173 = load i32, i32* %11, align 4
  %174 = load i8*, i8** %15, align 8
  %175 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %173, i8* %174, %3* %175)
  br label %184

176:                                              ; preds = %169
  %177 = load i32, i32* %18, align 4
  %178 = icmp eq i32 %177, 4
  br i1 %178, label %179, label %183

179:                                              ; preds = %176
  %180 = load i32, i32* %11, align 4
  %181 = load i32, i32* %14, align 4
  %182 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %180, i32 %181, %3* %182)
  br label %183

183:                                              ; preds = %179, %176
  br label %184

184:                                              ; preds = %183, %172
  br label %185

185:                                              ; preds = %184, %166
  br label %186

186:                                              ; preds = %185
  %187 = load %3*, %3** %4, align 8
  %188 = getelementptr inbounds %3, %3* %187, i32 0, i32 1
  %189 = bitcast %5* %188 to i32*
  store i32 2, i32* %189, align 8
  br label %190

190:                                              ; preds = %186
  br label %191

191:                                              ; preds = %190
  store i32 1, i32* %19, align 4
  br label %193

192:                                              ; preds = %154
  store i32 0, i32* %19, align 4
  br label %193

193:                                              ; preds = %192, %191
  %194 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #11
  %195 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #11
  %196 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #11
  %197 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #11
  %198 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #11
  %199 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #11
  %200 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #11
  %201 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #11
  %202 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #11
  %203 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #11
  %204 = load i32, i32* %19, align 4
  switch i32 %204, label %257 [
    i32 0, label %205
  ]

205:                                              ; preds = %193
  br label %206

206:                                              ; preds = %205
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  %209 = load %3*, %3** %5, align 8
  %210 = call zeroext i8 @150(%3* %209)
  %211 = zext i8 %210 to i32
  %212 = icmp eq i32 %211, 9
  %213 = xor i1 %212, true
  %214 = zext i1 %213 to i32
  %215 = sext i32 %214 to i64
  %216 = call i64 @llvm.expect.i64(i64 %215, i64 0)
  %217 = icmp ne i64 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %208
  unreachable

219:                                              ; preds = %208
  br label %220

220:                                              ; preds = %219
  br label %221

221:                                              ; preds = %220
  br label %222

222:                                              ; preds = %221
  %223 = load %3*, %3** %5, align 8
  %224 = getelementptr inbounds %3, %3* %223, i32 0, i32 0
  %225 = bitcast %4* %224 to %7**
  %226 = load %7*, %7** %225, align 8
  %227 = call i32 @php_file_le_stream()
  %228 = call i32 @php_file_le_pstream()
  %229 = call i8* @zend_fetch_resource2(%7* %226, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %227, i32 %228)
  %230 = bitcast i8* %229 to %53*
  store %53* %230, %53** %6, align 8
  %231 = icmp eq %53* %230, null
  br i1 %231, label %232, label %239

232:                                              ; preds = %222
  br label %233

233:                                              ; preds = %232
  %234 = load %3*, %3** %4, align 8
  %235 = getelementptr inbounds %3, %3* %234, i32 0, i32 1
  %236 = bitcast %5* %235 to i32*
  store i32 2, i32* %236, align 8
  br label %237

237:                                              ; preds = %233
  br label %238

238:                                              ; preds = %237
  store i32 1, i32* %19, align 4
  br label %257

239:                                              ; preds = %222
  br label %240

240:                                              ; preds = %239
  br label %241

241:                                              ; preds = %240
  store i32 1, i32* getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 11), align 8
  %242 = load %53*, %53** %6, align 8
  %243 = getelementptr inbounds %53, %53* %242, i32 0, i32 11
  %244 = load %7*, %7** %243, align 8
  %245 = call i32 @zend_list_close(%7* %244)
  store i32 0, i32* getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 11), align 8
  %246 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %246) #11
  %247 = load %3*, %3** %4, align 8
  store %3* %247, %3** %20, align 8
  %248 = load i32, i32* getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 0), align 8
  %249 = sext i32 %248 to i64
  %250 = load %3*, %3** %20, align 8
  %251 = getelementptr inbounds %3, %3* %250, i32 0, i32 0
  %252 = bitcast %4* %251 to i64*
  store i64 %249, i64* %252, align 8
  %253 = load %3*, %3** %20, align 8
  %254 = getelementptr inbounds %3, %3* %253, i32 0, i32 1
  %255 = bitcast %5* %254 to i32*
  store i32 4, i32* %255, align 8
  %256 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %256) #11
  store i32 1, i32* %19, align 4
  br label %257

257:                                              ; preds = %241, %238, %193
  %258 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %258) #11
  %259 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #11
  ret void
}

declare dso_local i32 @zend_list_close(%7*) #1

; Function Attrs: nounwind uwtable
define dso_local void @zif_feof(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca %53*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %3*, align 8
  %13 = alloca %3*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %20 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #11
  %21 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #11
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #11
  store i32 0, i32* %7, align 4
  %24 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #11
  store i32 1, i32* %8, align 4
  %25 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #11
  store i32 1, i32* %9, align 4
  %26 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  %27 = load %28*, %28** %3, align 8
  %28 = getelementptr inbounds %28, %28* %27, i32 0, i32 4
  %29 = getelementptr inbounds %3, %3* %28, i32 0, i32 2
  %30 = bitcast %6* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  %33 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  %34 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  store %3* null, %3** %13, align 8
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  store i32 0, i32* %14, align 4
  %36 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  store i8 0, i8* %17, align 1
  %37 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 0, i32* %18, align 4
  %38 = load i32, i32* %11, align 4
  %39 = load %3*, %3** %12, align 8
  %40 = load %3*, %3** %13, align 8
  %41 = load i32, i32* %14, align 4
  %42 = load i8*, i8** %15, align 8
  %43 = load i8, i8* %16, align 1
  %44 = load i8, i8* %17, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %10, align 4
  %47 = load i32, i32* %8, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %10, align 4
  %57 = load i32, i32* %9, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %9, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %10, align 4
  %76 = load i32, i32* %8, align 4
  %77 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %18, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %11, align 4
  %79 = load %28*, %28** %3, align 8
  %80 = bitcast %28* %79 to %3*
  %81 = getelementptr inbounds %3, %3* %80, i64 4
  store %3* %81, %3** %12, align 8
  %82 = load i32, i32* %11, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %11, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %11, align 4
  %86 = load i32, i32* %8, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %17, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %11, align 4
  %105 = load i32, i32* %8, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %17, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %17, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %11, align 4
  %126 = load i32, i32* %10, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %3*, %3** %12, align 8
  %138 = getelementptr inbounds %3, %3* %137, i32 1
  store %3* %138, %3** %12, align 8
  %139 = load %3*, %3** %12, align 8
  store %3* %139, %3** %13, align 8
  %140 = load %3*, %3** %13, align 8
  %141 = call i32 @148(%3* %140, %3** %5, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 5, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %18, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %191

162:                                              ; preds = %153
  %163 = load i32, i32* %18, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %11, align 4
  %167 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %18, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %11, align 4
  %173 = load i8*, i8** %15, align 8
  %174 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %3* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %18, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %11, align 4
  %180 = load i32, i32* %14, align 4
  %181 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %3* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  br label %185

185:                                              ; preds = %184
  %186 = load %3*, %3** %4, align 8
  %187 = getelementptr inbounds %3, %3* %186, i32 0, i32 1
  %188 = bitcast %5* %187 to i32*
  store i32 2, i32* %188, align 8
  br label %189

189:                                              ; preds = %185
  br label %190

190:                                              ; preds = %189
  store i32 1, i32* %19, align 4
  br label %192

191:                                              ; preds = %153
  store i32 0, i32* %19, align 4
  br label %192

192:                                              ; preds = %191, %190
  %193 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #11
  %194 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #11
  %195 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #11
  %196 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #11
  %197 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #11
  %198 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #11
  %199 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #11
  %200 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #11
  %201 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #11
  %202 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #11
  %203 = load i32, i32* %19, align 4
  switch i32 %203, label %258 [
    i32 0, label %204
  ]

204:                                              ; preds = %192
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  br label %207

207:                                              ; preds = %206
  %208 = load %3*, %3** %5, align 8
  %209 = call zeroext i8 @150(%3* %208)
  %210 = zext i8 %209 to i32
  %211 = icmp eq i32 %210, 9
  %212 = xor i1 %211, true
  %213 = zext i1 %212 to i32
  %214 = sext i32 %213 to i64
  %215 = call i64 @llvm.expect.i64(i64 %214, i64 0)
  %216 = icmp ne i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %207
  unreachable

218:                                              ; preds = %207
  br label %219

219:                                              ; preds = %218
  br label %220

220:                                              ; preds = %219
  br label %221

221:                                              ; preds = %220
  %222 = load %3*, %3** %5, align 8
  %223 = getelementptr inbounds %3, %3* %222, i32 0, i32 0
  %224 = bitcast %4* %223 to %7**
  %225 = load %7*, %7** %224, align 8
  %226 = call i32 @php_file_le_stream()
  %227 = call i32 @php_file_le_pstream()
  %228 = call i8* @zend_fetch_resource2(%7* %225, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %226, i32 %227)
  %229 = bitcast i8* %228 to %53*
  store %53* %229, %53** %6, align 8
  %230 = icmp eq %53* %229, null
  br i1 %230, label %231, label %238

231:                                              ; preds = %221
  br label %232

232:                                              ; preds = %231
  %233 = load %3*, %3** %4, align 8
  %234 = getelementptr inbounds %3, %3* %233, i32 0, i32 1
  %235 = bitcast %5* %234 to i32*
  store i32 2, i32* %235, align 8
  br label %236

236:                                              ; preds = %232
  br label %237

237:                                              ; preds = %236
  store i32 1, i32* %19, align 4
  br label %258

238:                                              ; preds = %221
  br label %239

239:                                              ; preds = %238
  br label %240

240:                                              ; preds = %239
  %241 = load %53*, %53** %6, align 8
  %242 = call i32 @_php_stream_eof(%53* %241)
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %244, label %251

244:                                              ; preds = %240
  br label %245

245:                                              ; preds = %244
  %246 = load %3*, %3** %4, align 8
  %247 = getelementptr inbounds %3, %3* %246, i32 0, i32 1
  %248 = bitcast %5* %247 to i32*
  store i32 3, i32* %248, align 8
  br label %249

249:                                              ; preds = %245
  br label %250

250:                                              ; preds = %249
  store i32 1, i32* %19, align 4
  br label %258

251:                                              ; preds = %240
  br label %252

252:                                              ; preds = %251
  %253 = load %3*, %3** %4, align 8
  %254 = getelementptr inbounds %3, %3* %253, i32 0, i32 1
  %255 = bitcast %5* %254 to i32*
  store i32 2, i32* %255, align 8
  br label %256

256:                                              ; preds = %252
  br label %257

257:                                              ; preds = %256
  store i32 1, i32* %19, align 4
  br label %258

258:                                              ; preds = %257, %250, %237, %192
  %259 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #11
  %260 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #11
  ret void
}

declare dso_local i32 @_php_stream_eof(%53*) #1

; Function Attrs: nounwind uwtable
define dso_local void @zif_fgets(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %13*, align 8
  %11 = alloca %53*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %3*, align 8
  %18 = alloca %3*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %3*, align 8
  %26 = alloca %13*, align 8
  %27 = alloca %3*, align 8
  %28 = alloca %13*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %29 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #11
  %30 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #11
  store i64 1024, i64* %6, align 8
  %31 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  store i8* null, i8** %7, align 8
  %32 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  %33 = load %28*, %28** %3, align 8
  %34 = getelementptr inbounds %28, %28* %33, i32 0, i32 4
  %35 = getelementptr inbounds %3, %3* %34, i32 0, i32 2
  %36 = bitcast %6* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %8, align 4
  %38 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  store i64 0, i64* %9, align 8
  %39 = bitcast %13** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  %40 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  br label %41

41:                                               ; preds = %2
  %42 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  store i32 0, i32* %12, align 4
  %43 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  store i32 1, i32* %13, align 4
  %44 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  store i32 2, i32* %14, align 4
  %45 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #11
  %46 = load %28*, %28** %3, align 8
  %47 = getelementptr inbounds %28, %28* %46, i32 0, i32 4
  %48 = getelementptr inbounds %3, %3* %47, i32 0, i32 2
  %49 = bitcast %6* %48 to i32*
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %15, align 4
  %51 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #11
  %52 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #11
  %53 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #11
  store %3* null, %3** %18, align 8
  %54 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #11
  store i32 0, i32* %19, align 4
  %55 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #11
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #11
  store i8 0, i8* %22, align 1
  %56 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %56) #11
  store i32 0, i32* %23, align 4
  %57 = load i32, i32* %16, align 4
  %58 = load %3*, %3** %17, align 8
  %59 = load %3*, %3** %18, align 8
  %60 = load i32, i32* %19, align 4
  %61 = load i8*, i8** %20, align 8
  %62 = load i8, i8* %21, align 1
  %63 = load i8, i8* %22, align 1
  br label %64

64:                                               ; preds = %41
  %65 = load i32, i32* %15, align 4
  %66 = load i32, i32* %13, align 4
  %67 = icmp slt i32 %65, %66
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 0)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %93, label %74

74:                                               ; preds = %64
  %75 = load i32, i32* %15, align 4
  %76 = load i32, i32* %14, align 4
  %77 = icmp sgt i32 %75, %76
  %78 = xor i1 %77, true
  %79 = xor i1 %78, true
  %80 = zext i1 %79 to i32
  %81 = sext i32 %80 to i64
  %82 = call i64 @llvm.expect.i64(i64 %81, i64 0)
  %83 = icmp ne i64 %82, 0
  br i1 %83, label %84, label %97

84:                                               ; preds = %74
  %85 = load i32, i32* %14, align 4
  %86 = icmp sge i32 %85, 0
  %87 = xor i1 %86, true
  %88 = xor i1 %87, true
  %89 = zext i1 %88 to i32
  %90 = sext i32 %89 to i64
  %91 = call i64 @llvm.expect.i64(i64 %90, i64 1)
  %92 = icmp ne i64 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %84, %64
  %94 = load i32, i32* %15, align 4
  %95 = load i32, i32* %13, align 4
  %96 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %94, i32 %95, i32 %96)
  store i32 1, i32* %23, align 4
  br label %242

97:                                               ; preds = %84, %74
  store i32 0, i32* %16, align 4
  %98 = load %28*, %28** %3, align 8
  %99 = bitcast %28* %98 to %3*
  %100 = getelementptr inbounds %3, %3* %99, i64 4
  store %3* %100, %3** %17, align 8
  %101 = load i32, i32* %16, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %16, align 4
  br label %103

103:                                              ; preds = %97
  %104 = load i32, i32* %16, align 4
  %105 = load i32, i32* %13, align 4
  %106 = icmp sle i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %22, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 1
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  br label %122

122:                                              ; preds = %121
  %123 = load i32, i32* %16, align 4
  %124 = load i32, i32* %13, align 4
  %125 = icmp sgt i32 %123, %124
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = load i8, i8* %22, align 1
  %128 = zext i8 %127 to i32
  %129 = icmp eq i32 %128, 0
  br label %130

130:                                              ; preds = %126, %122
  %131 = phi i1 [ true, %122 ], [ %129, %126 ]
  %132 = xor i1 %131, true
  %133 = zext i1 %132 to i32
  %134 = sext i32 %133 to i64
  %135 = call i64 @llvm.expect.i64(i64 %134, i64 0)
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %130
  unreachable

138:                                              ; preds = %130
  br label %139

139:                                              ; preds = %138
  br label %140

140:                                              ; preds = %139
  %141 = load i8, i8* %22, align 1
  %142 = icmp ne i8 %141, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %140
  %144 = load i32, i32* %16, align 4
  %145 = load i32, i32* %15, align 4
  %146 = icmp sgt i32 %144, %145
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 0)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %143
  br label %242

154:                                              ; preds = %143
  br label %155

155:                                              ; preds = %154, %140
  %156 = load %3*, %3** %17, align 8
  %157 = getelementptr inbounds %3, %3* %156, i32 1
  store %3* %157, %3** %17, align 8
  %158 = load %3*, %3** %17, align 8
  store %3* %158, %3** %18, align 8
  %159 = load %3*, %3** %18, align 8
  %160 = call i32 @148(%3* %159, %3** %5, i32 0)
  %161 = icmp ne i32 %160, 0
  %162 = xor i1 %161, true
  %163 = xor i1 %162, true
  %164 = xor i1 %163, true
  %165 = zext i1 %164 to i32
  %166 = sext i32 %165 to i64
  %167 = call i64 @llvm.expect.i64(i64 %166, i64 0)
  %168 = icmp ne i64 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %155
  store i32 5, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %242

170:                                              ; preds = %155
  store i8 1, i8* %22, align 1
  %171 = load i32, i32* %16, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %16, align 4
  br label %173

173:                                              ; preds = %170
  %174 = load i32, i32* %16, align 4
  %175 = load i32, i32* %13, align 4
  %176 = icmp sle i32 %174, %175
  br i1 %176, label %181, label %177

177:                                              ; preds = %173
  %178 = load i8, i8* %22, align 1
  %179 = zext i8 %178 to i32
  %180 = icmp eq i32 %179, 1
  br label %181

181:                                              ; preds = %177, %173
  %182 = phi i1 [ true, %173 ], [ %180, %177 ]
  %183 = xor i1 %182, true
  %184 = zext i1 %183 to i32
  %185 = sext i32 %184 to i64
  %186 = call i64 @llvm.expect.i64(i64 %185, i64 0)
  %187 = icmp ne i64 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %181
  unreachable

189:                                              ; preds = %181
  br label %190

190:                                              ; preds = %189
  br label %191

191:                                              ; preds = %190
  br label %192

192:                                              ; preds = %191
  %193 = load i32, i32* %16, align 4
  %194 = load i32, i32* %13, align 4
  %195 = icmp sgt i32 %193, %194
  br i1 %195, label %200, label %196

196:                                              ; preds = %192
  %197 = load i8, i8* %22, align 1
  %198 = zext i8 %197 to i32
  %199 = icmp eq i32 %198, 0
  br label %200

200:                                              ; preds = %196, %192
  %201 = phi i1 [ true, %192 ], [ %199, %196 ]
  %202 = xor i1 %201, true
  %203 = zext i1 %202 to i32
  %204 = sext i32 %203 to i64
  %205 = call i64 @llvm.expect.i64(i64 %204, i64 0)
  %206 = icmp ne i64 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %200
  unreachable

208:                                              ; preds = %200
  br label %209

209:                                              ; preds = %208
  br label %210

210:                                              ; preds = %209
  %211 = load i8, i8* %22, align 1
  %212 = icmp ne i8 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %210
  %214 = load i32, i32* %16, align 4
  %215 = load i32, i32* %15, align 4
  %216 = icmp sgt i32 %214, %215
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = zext i1 %218 to i32
  %220 = sext i32 %219 to i64
  %221 = call i64 @llvm.expect.i64(i64 %220, i64 0)
  %222 = icmp ne i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %213
  br label %242

224:                                              ; preds = %213
  br label %225

225:                                              ; preds = %224, %210
  %226 = load %3*, %3** %17, align 8
  %227 = getelementptr inbounds %3, %3* %226, i32 1
  store %3* %227, %3** %17, align 8
  %228 = load %3*, %3** %17, align 8
  store %3* %228, %3** %18, align 8
  %229 = load %3*, %3** %18, align 8
  %230 = call i32 @149(%3* %229, i64* %6, i8* %21, i32 0, i32 0)
  %231 = icmp ne i32 %230, 0
  %232 = xor i1 %231, true
  %233 = xor i1 %232, true
  %234 = xor i1 %233, true
  %235 = zext i1 %234 to i32
  %236 = sext i32 %235 to i64
  %237 = call i64 @llvm.expect.i64(i64 %236, i64 0)
  %238 = icmp ne i64 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %225
  store i32 0, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %242

240:                                              ; preds = %225
  br label %241

241:                                              ; preds = %240
  br label %242

242:                                              ; preds = %241, %239, %223, %169, %153, %93
  %243 = load i32, i32* %23, align 4
  %244 = icmp ne i32 %243, 0
  %245 = xor i1 %244, true
  %246 = xor i1 %245, true
  %247 = zext i1 %246 to i32
  %248 = sext i32 %247 to i64
  %249 = call i64 @llvm.expect.i64(i64 %248, i64 0)
  %250 = icmp ne i64 %249, 0
  br i1 %250, label %251, label %280

251:                                              ; preds = %242
  %252 = load i32, i32* %23, align 4
  %253 = icmp eq i32 %252, 2
  br i1 %253, label %254, label %257

254:                                              ; preds = %251
  %255 = load i32, i32* %16, align 4
  %256 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %255, i8* %256)
  br label %273

257:                                              ; preds = %251
  %258 = load i32, i32* %23, align 4
  %259 = icmp eq i32 %258, 3
  br i1 %259, label %260, label %264

260:                                              ; preds = %257
  %261 = load i32, i32* %16, align 4
  %262 = load i8*, i8** %20, align 8
  %263 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %261, i8* %262, %3* %263)
  br label %272

264:                                              ; preds = %257
  %265 = load i32, i32* %23, align 4
  %266 = icmp eq i32 %265, 4
  br i1 %266, label %267, label %271

267:                                              ; preds = %264
  %268 = load i32, i32* %16, align 4
  %269 = load i32, i32* %19, align 4
  %270 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %268, i32 %269, %3* %270)
  br label %271

271:                                              ; preds = %267, %264
  br label %272

272:                                              ; preds = %271, %260
  br label %273

273:                                              ; preds = %272, %254
  br label %274

274:                                              ; preds = %273
  %275 = load %3*, %3** %4, align 8
  %276 = getelementptr inbounds %3, %3* %275, i32 0, i32 1
  %277 = bitcast %5* %276 to i32*
  store i32 2, i32* %277, align 8
  br label %278

278:                                              ; preds = %274
  br label %279

279:                                              ; preds = %278
  store i32 1, i32* %24, align 4
  br label %281

280:                                              ; preds = %242
  store i32 0, i32* %24, align 4
  br label %281

281:                                              ; preds = %280, %279
  %282 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #11
  %283 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %283) #11
  %284 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %284) #11
  %285 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285) #11
  %286 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %286) #11
  %287 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %287) #11
  %288 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %288) #11
  %289 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %289) #11
  %290 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %290) #11
  %291 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %291) #11
  %292 = load i32, i32* %24, align 4
  switch i32 %292, label %430 [
    i32 0, label %293
  ]

293:                                              ; preds = %281
  br label %294

294:                                              ; preds = %293
  br label %295

295:                                              ; preds = %294
  br label %296

296:                                              ; preds = %295
  %297 = load %3*, %3** %5, align 8
  %298 = call zeroext i8 @150(%3* %297)
  %299 = zext i8 %298 to i32
  %300 = icmp eq i32 %299, 9
  %301 = xor i1 %300, true
  %302 = zext i1 %301 to i32
  %303 = sext i32 %302 to i64
  %304 = call i64 @llvm.expect.i64(i64 %303, i64 0)
  %305 = icmp ne i64 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %296
  unreachable

307:                                              ; preds = %296
  br label %308

308:                                              ; preds = %307
  br label %309

309:                                              ; preds = %308
  br label %310

310:                                              ; preds = %309
  %311 = load %3*, %3** %5, align 8
  %312 = getelementptr inbounds %3, %3* %311, i32 0, i32 0
  %313 = bitcast %4* %312 to %7**
  %314 = load %7*, %7** %313, align 8
  %315 = call i32 @php_file_le_stream()
  %316 = call i32 @php_file_le_pstream()
  %317 = call i8* @zend_fetch_resource2(%7* %314, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %315, i32 %316)
  %318 = bitcast i8* %317 to %53*
  store %53* %318, %53** %11, align 8
  %319 = icmp eq %53* %318, null
  br i1 %319, label %320, label %327

320:                                              ; preds = %310
  br label %321

321:                                              ; preds = %320
  %322 = load %3*, %3** %4, align 8
  %323 = getelementptr inbounds %3, %3* %322, i32 0, i32 1
  %324 = bitcast %5* %323 to i32*
  store i32 2, i32* %324, align 8
  br label %325

325:                                              ; preds = %321
  br label %326

326:                                              ; preds = %325
  store i32 1, i32* %24, align 4
  br label %430

327:                                              ; preds = %310
  br label %328

328:                                              ; preds = %327
  br label %329

329:                                              ; preds = %328
  %330 = load i32, i32* %8, align 4
  %331 = icmp eq i32 %330, 1
  br i1 %331, label %332, label %367

332:                                              ; preds = %329
  %333 = load %53*, %53** %11, align 8
  %334 = call i8* @_php_stream_get_line(%53* %333, i8* null, i64 0, i64* %9)
  store i8* %334, i8** %7, align 8
  %335 = load i8*, i8** %7, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %337, label %344

337:                                              ; preds = %332
  br label %338

338:                                              ; preds = %337
  %339 = load %3*, %3** %4, align 8
  %340 = getelementptr inbounds %3, %3* %339, i32 0, i32 1
  %341 = bitcast %5* %340 to i32*
  store i32 2, i32* %341, align 8
  br label %342

342:                                              ; preds = %338
  br label %343

343:                                              ; preds = %342
  store i32 1, i32* %24, align 4
  br label %430

344:                                              ; preds = %332
  br label %345

345:                                              ; preds = %344
  br label %346

346:                                              ; preds = %345
  %347 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %347) #11
  %348 = load %3*, %3** %4, align 8
  store %3* %348, %3** %25, align 8
  %349 = bitcast %13** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %349) #11
  %350 = load i8*, i8** %7, align 8
  %351 = load i64, i64* %9, align 8
  %352 = call %13* @160(i8* %350, i64 %351, i32 0)
  store %13* %352, %13** %26, align 8
  %353 = load %13*, %13** %26, align 8
  %354 = load %3*, %3** %25, align 8
  %355 = getelementptr inbounds %3, %3* %354, i32 0, i32 0
  %356 = bitcast %4* %355 to %13**
  store %13* %353, %13** %356, align 8
  %357 = load %3*, %3** %25, align 8
  %358 = getelementptr inbounds %3, %3* %357, i32 0, i32 1
  %359 = bitcast %5* %358 to i32*
  store i32 5126, i32* %359, align 8
  %360 = bitcast %13** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %360) #11
  %361 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %361) #11
  br label %362

362:                                              ; preds = %346
  br label %363

363:                                              ; preds = %362
  br label %364

364:                                              ; preds = %363
  br label %365

365:                                              ; preds = %364
  %366 = load i8*, i8** %7, align 8
  call void @_efree(i8* %366)
  br label %429

367:                                              ; preds = %329
  %368 = load i32, i32* %8, align 4
  %369 = icmp sgt i32 %368, 1
  br i1 %369, label %370, label %428

370:                                              ; preds = %367
  %371 = load i64, i64* %6, align 8
  %372 = icmp sle i64 %371, 0
  br i1 %372, label %373, label %380

373:                                              ; preds = %370
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @101, i32 0, i32 0))
  br label %374

374:                                              ; preds = %373
  %375 = load %3*, %3** %4, align 8
  %376 = getelementptr inbounds %3, %3* %375, i32 0, i32 1
  %377 = bitcast %5* %376 to i32*
  store i32 2, i32* %377, align 8
  br label %378

378:                                              ; preds = %374
  br label %379

379:                                              ; preds = %378
  store i32 1, i32* %24, align 4
  br label %430

380:                                              ; preds = %370
  %381 = load i64, i64* %6, align 8
  %382 = call %13* @161(i64 %381, i32 0)
  store %13* %382, %13** %10, align 8
  %383 = load %53*, %53** %11, align 8
  %384 = load %13*, %13** %10, align 8
  %385 = getelementptr inbounds %13, %13* %384, i32 0, i32 3
  %386 = getelementptr inbounds [1 x i8], [1 x i8]* %385, i32 0, i32 0
  %387 = load i64, i64* %6, align 8
  %388 = call i8* @_php_stream_get_line(%53* %383, i8* %386, i64 %387, i64* %9)
  %389 = icmp eq i8* %388, null
  br i1 %389, label %390, label %398

390:                                              ; preds = %380
  %391 = load %13*, %13** %10, align 8
  call void @158(%13* %391)
  br label %392

392:                                              ; preds = %390
  %393 = load %3*, %3** %4, align 8
  %394 = getelementptr inbounds %3, %3* %393, i32 0, i32 1
  %395 = bitcast %5* %394 to i32*
  store i32 2, i32* %395, align 8
  br label %396

396:                                              ; preds = %392
  br label %397

397:                                              ; preds = %396
  store i32 1, i32* %24, align 4
  br label %430

398:                                              ; preds = %380
  %399 = load i64, i64* %9, align 8
  %400 = load i64, i64* %6, align 8
  %401 = udiv i64 %400, 2
  %402 = icmp ult i64 %399, %401
  br i1 %402, label %403, label %407

403:                                              ; preds = %398
  %404 = load %13*, %13** %10, align 8
  %405 = load i64, i64* %9, align 8
  %406 = call %13* @162(%13* %404, i64 %405, i32 0)
  store %13* %406, %13** %10, align 8
  br label %411

407:                                              ; preds = %398
  %408 = load i64, i64* %9, align 8
  %409 = load %13*, %13** %10, align 8
  %410 = getelementptr inbounds %13, %13* %409, i32 0, i32 2
  store i64 %408, i64* %410, align 8
  br label %411

411:                                              ; preds = %407, %403
  br label %412

412:                                              ; preds = %411
  %413 = bitcast %3** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %413) #11
  %414 = load %3*, %3** %4, align 8
  store %3* %414, %3** %27, align 8
  %415 = bitcast %13** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %415) #11
  %416 = load %13*, %13** %10, align 8
  store %13* %416, %13** %28, align 8
  %417 = load %13*, %13** %28, align 8
  %418 = load %3*, %3** %27, align 8
  %419 = getelementptr inbounds %3, %3* %418, i32 0, i32 0
  %420 = bitcast %4* %419 to %13**
  store %13* %417, %13** %420, align 8
  %421 = load %3*, %3** %27, align 8
  %422 = getelementptr inbounds %3, %3* %421, i32 0, i32 1
  %423 = bitcast %5* %422 to i32*
  store i32 5126, i32* %423, align 8
  %424 = bitcast %13** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %424) #11
  %425 = bitcast %3** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %425) #11
  br label %426

426:                                              ; preds = %412
  br label %427

427:                                              ; preds = %426
  store i32 1, i32* %24, align 4
  br label %430

428:                                              ; preds = %367
  br label %429

429:                                              ; preds = %428, %365
  store i32 0, i32* %24, align 4
  br label %430

430:                                              ; preds = %429, %427, %397, %379, %343, %326, %281
  %431 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %431) #11
  %432 = bitcast %13** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %432) #11
  %433 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %433) #11
  %434 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %434) #11
  %435 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %435) #11
  %436 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %436) #11
  %437 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %437) #11
  %438 = load i32, i32* %24, align 4
  switch i32 %438, label %440 [
    i32 0, label %439
    i32 1, label %439
  ]

439:                                              ; preds = %430, %430
  ret void

440:                                              ; preds = %430
  unreachable
}

declare dso_local i8* @_php_stream_get_line(%53*, i8*, i64, i64*) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal %13* @160(i8* %0, i64 %1, i32 %2) #4 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %13*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 %2, i32* %6, align 4
  %8 = bitcast %13** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #11
  %9 = load i64, i64* %5, align 8
  %10 = load i32, i32* %6, align 4
  %11 = call %13* @161(i64 %9, i32 %10)
  store %13* %11, %13** %7, align 8
  %12 = load %13*, %13** %7, align 8
  %13 = getelementptr inbounds %13, %13* %12, i32 0, i32 3
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i32 0, i32 0
  %15 = load i8*, i8** %4, align 8
  %16 = load i64, i64* %5, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 %15, i64 %16, i1 false)
  %17 = load %13*, %13** %7, align 8
  %18 = getelementptr inbounds %13, %13* %17, i32 0, i32 3
  %19 = load i64, i64* %5, align 8
  %20 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i64 0, i64 %19
  store i8 0, i8* %20, align 1
  %21 = load %13*, %13** %7, align 8
  %22 = bitcast %13** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #11
  ret %13* %21
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %13* @161(i64 %0, i32 %1) #4 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %13*, align 8
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = bitcast %13** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #11
  %7 = load i32, i32* %4, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = load i64, i64* %3, align 8
  %11 = add i64 ptrtoint (i8* getelementptr inbounds (%13, %13* null, i32 0, i32 3, i32 0) to i64), %10
  %12 = add i64 %11, 1
  %13 = add i64 %12, 8
  %14 = sub i64 %13, 1
  %15 = and i64 %14, -8
  %16 = call noalias i8* @__zend_malloc(i64 %15) #14
  br label %25

17:                                               ; preds = %2
  %18 = load i64, i64* %3, align 8
  %19 = add i64 ptrtoint (i8* getelementptr inbounds (%13, %13* null, i32 0, i32 3, i32 0) to i64), %18
  %20 = add i64 %19, 1
  %21 = add i64 %20, 8
  %22 = sub i64 %21, 1
  %23 = and i64 %22, -8
  %24 = call noalias i8* @_emalloc(i64 %23) #14
  br label %25

25:                                               ; preds = %17, %9
  %26 = phi i8* [ %16, %9 ], [ %24, %17 ]
  %27 = bitcast i8* %26 to %13*
  store %13* %27, %13** %5, align 8
  %28 = load %13*, %13** %5, align 8
  %29 = getelementptr inbounds %13, %13* %28, i32 0, i32 0
  %30 = getelementptr inbounds %8, %8* %29, i32 0, i32 0
  store i32 1, i32* %30, align 8
  %31 = load i32, i32* %4, align 4
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i32 1, i32 0
  %35 = shl i32 %34, 8
  %36 = or i32 6, %35
  %37 = load %13*, %13** %5, align 8
  %38 = getelementptr inbounds %13, %13* %37, i32 0, i32 0
  %39 = getelementptr inbounds %8, %8* %38, i32 0, i32 1
  %40 = bitcast %9* %39 to i32*
  store i32 %36, i32* %40, align 4
  %41 = load %13*, %13** %5, align 8
  call void @175(%13* %41)
  %42 = load i64, i64* %3, align 8
  %43 = load %13*, %13** %5, align 8
  %44 = getelementptr inbounds %13, %13* %43, i32 0, i32 2
  store i64 %42, i64* %44, align 8
  %45 = load %13*, %13** %5, align 8
  %46 = bitcast %13** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #11
  ret %13* %45
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %13* @162(%13* %0, i64 %1, i32 %2) #4 {
  %4 = alloca %13*, align 8
  %5 = alloca %13*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca %13*, align 8
  %9 = alloca i32, align 4
  store %13* %0, %13** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = bitcast %13** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #11
  br label %11

11:                                               ; preds = %3
  %12 = load i64, i64* %6, align 8
  %13 = load %13*, %13** %5, align 8
  %14 = getelementptr inbounds %13, %13* %13, i32 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp ule i64 %12, %15
  %17 = xor i1 %16, true
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = call i64 @llvm.expect.i64(i64 %19, i64 0)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  unreachable

23:                                               ; preds = %11
  br label %24

24:                                               ; preds = %23
  br label %25

25:                                               ; preds = %24
  %26 = load %13*, %13** %5, align 8
  %27 = getelementptr inbounds %13, %13* %26, i32 0, i32 0
  %28 = getelementptr inbounds %8, %8* %27, i32 0, i32 1
  %29 = bitcast %9* %28 to %67*
  %30 = getelementptr inbounds %67, %67* %29, i32 0, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = and i32 %32, 2
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %85, label %35

35:                                               ; preds = %25
  %36 = load %13*, %13** %5, align 8
  %37 = getelementptr inbounds %13, %13* %36, i32 0, i32 0
  %38 = getelementptr inbounds %8, %8* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  %41 = xor i1 %40, true
  %42 = xor i1 %41, true
  %43 = zext i1 %42 to i32
  %44 = sext i32 %43 to i64
  %45 = call i64 @llvm.expect.i64(i64 %44, i64 1)
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %78

47:                                               ; preds = %35
  %48 = load i32, i32* %7, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = load %13*, %13** %5, align 8
  %52 = bitcast %13* %51 to i8*
  %53 = load i64, i64* %6, align 8
  %54 = add i64 ptrtoint (i8* getelementptr inbounds (%13, %13* null, i32 0, i32 3, i32 0) to i64), %53
  %55 = add i64 %54, 1
  %56 = add i64 %55, 8
  %57 = sub i64 %56, 1
  %58 = and i64 %57, -8
  %59 = call i8* @__zend_realloc(i8* %52, i64 %58) #15
  br label %70

60:                                               ; preds = %47
  %61 = load %13*, %13** %5, align 8
  %62 = bitcast %13* %61 to i8*
  %63 = load i64, i64* %6, align 8
  %64 = add i64 ptrtoint (i8* getelementptr inbounds (%13, %13* null, i32 0, i32 3, i32 0) to i64), %63
  %65 = add i64 %64, 1
  %66 = add i64 %65, 8
  %67 = sub i64 %66, 1
  %68 = and i64 %67, -8
  %69 = call i8* @_erealloc(i8* %62, i64 %68) #15
  br label %70

70:                                               ; preds = %60, %50
  %71 = phi i8* [ %59, %50 ], [ %69, %60 ]
  %72 = bitcast i8* %71 to %13*
  store %13* %72, %13** %8, align 8
  %73 = load i64, i64* %6, align 8
  %74 = load %13*, %13** %8, align 8
  %75 = getelementptr inbounds %13, %13* %74, i32 0, i32 2
  store i64 %73, i64* %75, align 8
  %76 = load %13*, %13** %8, align 8
  call void @175(%13* %76)
  %77 = load %13*, %13** %8, align 8
  store %13* %77, %13** %4, align 8
  store i32 1, i32* %9, align 4
  br label %98

78:                                               ; preds = %35
  %79 = load %13*, %13** %5, align 8
  %80 = getelementptr inbounds %13, %13* %79, i32 0, i32 0
  %81 = getelementptr inbounds %8, %8* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 8
  br label %84

84:                                               ; preds = %78
  br label %85

85:                                               ; preds = %84, %25
  %86 = load i64, i64* %6, align 8
  %87 = load i32, i32* %7, align 4
  %88 = call %13* @161(i64 %86, i32 %87)
  store %13* %88, %13** %8, align 8
  %89 = load %13*, %13** %8, align 8
  %90 = getelementptr inbounds %13, %13* %89, i32 0, i32 3
  %91 = getelementptr inbounds [1 x i8], [1 x i8]* %90, i32 0, i32 0
  %92 = load %13*, %13** %5, align 8
  %93 = getelementptr inbounds %13, %13* %92, i32 0, i32 3
  %94 = getelementptr inbounds [1 x i8], [1 x i8]* %93, i32 0, i32 0
  %95 = load i64, i64* %6, align 8
  %96 = add i64 %95, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %94, i64 %96, i1 false)
  %97 = load %13*, %13** %8, align 8
  store %13* %97, %13** %4, align 8
  store i32 1, i32* %9, align 4
  br label %98

98:                                               ; preds = %85, %70
  %99 = bitcast %13** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #11
  %100 = load %13*, %13** %4, align 8
  ret %13* %100
}

; Function Attrs: nounwind uwtable
define dso_local void @zif_fgetc(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca [2 x i8], align 1
  %7 = alloca i32, align 4
  %8 = alloca %53*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %3*, align 8
  %15 = alloca %3*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %3*, align 8
  %23 = alloca %13*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %24 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  %25 = bitcast [2 x i8]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %25) #11
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  %27 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  store i32 0, i32* %9, align 4
  %30 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #11
  store i32 1, i32* %10, align 4
  %31 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #11
  store i32 1, i32* %11, align 4
  %32 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  %33 = load %28*, %28** %3, align 8
  %34 = getelementptr inbounds %28, %28* %33, i32 0, i32 4
  %35 = getelementptr inbounds %3, %3* %34, i32 0, i32 2
  %36 = bitcast %6* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %12, align 4
  %38 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  %39 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  %40 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  store %3* null, %3** %15, align 8
  %41 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #11
  store i32 0, i32* %16, align 4
  %42 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #11
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #11
  store i8 0, i8* %19, align 1
  %43 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  store i32 0, i32* %20, align 4
  %44 = load i32, i32* %13, align 4
  %45 = load %3*, %3** %14, align 8
  %46 = load %3*, %3** %15, align 8
  %47 = load i32, i32* %16, align 4
  %48 = load i8*, i8** %17, align 8
  %49 = load i8, i8* %18, align 1
  %50 = load i8, i8* %19, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %12, align 4
  %53 = load i32, i32* %10, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %12, align 4
  %63 = load i32, i32* %11, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %11, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %12, align 4
  %82 = load i32, i32* %10, align 4
  %83 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %20, align 4
  br label %159

84:                                               ; preds = %71, %61
  store i32 0, i32* %13, align 4
  %85 = load %28*, %28** %3, align 8
  %86 = bitcast %28* %85 to %3*
  %87 = getelementptr inbounds %3, %3* %86, i64 4
  store %3* %87, %3** %14, align 8
  %88 = load i32, i32* %13, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %13, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %13, align 4
  %92 = load i32, i32* %10, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %19, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %13, align 4
  %111 = load i32, i32* %10, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %19, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %19, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %13, align 4
  %132 = load i32, i32* %12, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %159

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %3*, %3** %14, align 8
  %144 = getelementptr inbounds %3, %3* %143, i32 1
  store %3* %144, %3** %14, align 8
  %145 = load %3*, %3** %14, align 8
  store %3* %145, %3** %15, align 8
  %146 = load %3*, %3** %15, align 8
  %147 = call i32 @148(%3* %146, %3** %5, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 5, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %159

157:                                              ; preds = %142
  br label %158

158:                                              ; preds = %157
  br label %159

159:                                              ; preds = %158, %156, %140, %80
  %160 = load i32, i32* %20, align 4
  %161 = icmp ne i32 %160, 0
  %162 = xor i1 %161, true
  %163 = xor i1 %162, true
  %164 = zext i1 %163 to i32
  %165 = sext i32 %164 to i64
  %166 = call i64 @llvm.expect.i64(i64 %165, i64 0)
  %167 = icmp ne i64 %166, 0
  br i1 %167, label %168, label %197

168:                                              ; preds = %159
  %169 = load i32, i32* %20, align 4
  %170 = icmp eq i32 %169, 2
  br i1 %170, label %171, label %174

171:                                              ; preds = %168
  %172 = load i32, i32* %13, align 4
  %173 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %172, i8* %173)
  br label %190

174:                                              ; preds = %168
  %175 = load i32, i32* %20, align 4
  %176 = icmp eq i32 %175, 3
  br i1 %176, label %177, label %181

177:                                              ; preds = %174
  %178 = load i32, i32* %13, align 4
  %179 = load i8*, i8** %17, align 8
  %180 = load %3*, %3** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %178, i8* %179, %3* %180)
  br label %189

181:                                              ; preds = %174
  %182 = load i32, i32* %20, align 4
  %183 = icmp eq i32 %182, 4
  br i1 %183, label %184, label %188

184:                                              ; preds = %181
  %185 = load i32, i32* %13, align 4
  %186 = load i32, i32* %16, align 4
  %187 = load %3*, %3** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %185, i32 %186, %3* %187)
  br label %188

188:                                              ; preds = %184, %181
  br label %189

189:                                              ; preds = %188, %177
  br label %190

190:                                              ; preds = %189, %171
  br label %191

191:                                              ; preds = %190
  %192 = load %3*, %3** %4, align 8
  %193 = getelementptr inbounds %3, %3* %192, i32 0, i32 1
  %194 = bitcast %5* %193 to i32*
  store i32 2, i32* %194, align 8
  br label %195

195:                                              ; preds = %191
  br label %196

196:                                              ; preds = %195
  store i32 1, i32* %21, align 4
  br label %198

197:                                              ; preds = %159
  store i32 0, i32* %21, align 4
  br label %198

198:                                              ; preds = %197, %196
  %199 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #11
  %200 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #11
  %201 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #11
  %202 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %202) #11
  %203 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203) #11
  %204 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #11
  %205 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %205) #11
  %206 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %206) #11
  %207 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %207) #11
  %208 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %208) #11
  %209 = load i32, i32* %21, align 4
  switch i32 %209, label %284 [
    i32 0, label %210
  ]

210:                                              ; preds = %198
  br label %211

211:                                              ; preds = %210
  br label %212

212:                                              ; preds = %211
  br label %213

213:                                              ; preds = %212
  %214 = load %3*, %3** %5, align 8
  %215 = call zeroext i8 @150(%3* %214)
  %216 = zext i8 %215 to i32
  %217 = icmp eq i32 %216, 9
  %218 = xor i1 %217, true
  %219 = zext i1 %218 to i32
  %220 = sext i32 %219 to i64
  %221 = call i64 @llvm.expect.i64(i64 %220, i64 0)
  %222 = icmp ne i64 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %213
  unreachable

224:                                              ; preds = %213
  br label %225

225:                                              ; preds = %224
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226
  %228 = load %3*, %3** %5, align 8
  %229 = getelementptr inbounds %3, %3* %228, i32 0, i32 0
  %230 = bitcast %4* %229 to %7**
  %231 = load %7*, %7** %230, align 8
  %232 = call i32 @php_file_le_stream()
  %233 = call i32 @php_file_le_pstream()
  %234 = call i8* @zend_fetch_resource2(%7* %231, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %232, i32 %233)
  %235 = bitcast i8* %234 to %53*
  store %53* %235, %53** %8, align 8
  %236 = icmp eq %53* %235, null
  br i1 %236, label %237, label %244

237:                                              ; preds = %227
  br label %238

238:                                              ; preds = %237
  %239 = load %3*, %3** %4, align 8
  %240 = getelementptr inbounds %3, %3* %239, i32 0, i32 1
  %241 = bitcast %5* %240 to i32*
  store i32 2, i32* %241, align 8
  br label %242

242:                                              ; preds = %238
  br label %243

243:                                              ; preds = %242
  store i32 1, i32* %21, align 4
  br label %284

244:                                              ; preds = %227
  br label %245

245:                                              ; preds = %244
  br label %246

246:                                              ; preds = %245
  %247 = load %53*, %53** %8, align 8
  %248 = call i32 @_php_stream_getc(%53* %247)
  store i32 %248, i32* %7, align 4
  %249 = load i32, i32* %7, align 4
  %250 = icmp eq i32 %249, -1
  br i1 %250, label %251, label %258

251:                                              ; preds = %246
  br label %252

252:                                              ; preds = %251
  %253 = load %3*, %3** %4, align 8
  %254 = getelementptr inbounds %3, %3* %253, i32 0, i32 1
  %255 = bitcast %5* %254 to i32*
  store i32 2, i32* %255, align 8
  br label %256

256:                                              ; preds = %252
  br label %257

257:                                              ; preds = %256
  br label %283

258:                                              ; preds = %246
  %259 = load i32, i32* %7, align 4
  %260 = trunc i32 %259 to i8
  %261 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 0
  store i8 %260, i8* %261, align 1
  %262 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 1
  store i8 0, i8* %262, align 1
  br label %263

263:                                              ; preds = %258
  br label %264

264:                                              ; preds = %263
  %265 = bitcast %3** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %265) #11
  %266 = load %3*, %3** %4, align 8
  store %3* %266, %3** %22, align 8
  %267 = bitcast %13** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %267) #11
  %268 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i32 0, i32 0
  %269 = call %13* @160(i8* %268, i64 1, i32 0)
  store %13* %269, %13** %23, align 8
  %270 = load %13*, %13** %23, align 8
  %271 = load %3*, %3** %22, align 8
  %272 = getelementptr inbounds %3, %3* %271, i32 0, i32 0
  %273 = bitcast %4* %272 to %13**
  store %13* %270, %13** %273, align 8
  %274 = load %3*, %3** %22, align 8
  %275 = getelementptr inbounds %3, %3* %274, i32 0, i32 1
  %276 = bitcast %5* %275 to i32*
  store i32 5126, i32* %276, align 8
  %277 = bitcast %13** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %277) #11
  %278 = bitcast %3** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %278) #11
  br label %279

279:                                              ; preds = %264
  br label %280

280:                                              ; preds = %279
  br label %281

281:                                              ; preds = %280
  br label %282

282:                                              ; preds = %281
  store i32 1, i32* %21, align 4
  br label %284

283:                                              ; preds = %257
  store i32 0, i32* %21, align 4
  br label %284

284:                                              ; preds = %283, %282, %243, %198
  %285 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285) #11
  %286 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %286) #11
  %287 = bitcast [2 x i8]* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %287) #11
  %288 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %288) #11
  %289 = load i32, i32* %21, align 4
  switch i32 %289, label %291 [
    i32 0, label %290
    i32 1, label %290
  ]

290:                                              ; preds = %284, %284
  ret void

291:                                              ; preds = %284
  unreachable
}

declare dso_local i32 @_php_stream_getc(%53*) #1

; Function Attrs: nounwind uwtable
define dso_local void @zif_fgetss(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca %53*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %3*, align 8
  %21 = alloca %3*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %3*, align 8
  %29 = alloca %13*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %30 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #11
  %31 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  store i64 0, i64* %6, align 8
  %32 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #11
  store i64 0, i64* %7, align 8
  %33 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  %34 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  %35 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  store i8* null, i8** %10, align 8
  %36 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  %37 = bitcast %53** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  %38 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  store i8* null, i8** %13, align 8
  %39 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  store i64 0, i64* %14, align 8
  br label %40

40:                                               ; preds = %2
  %41 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #11
  store i32 0, i32* %15, align 4
  %42 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  store i32 1, i32* %16, align 4
  %43 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  store i32 3, i32* %17, align 4
  %44 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  %45 = load %28*, %28** %3, align 8
  %46 = getelementptr inbounds %28, %28* %45, i32 0, i32 4
  %47 = getelementptr inbounds %3, %3* %46, i32 0, i32 2
  %48 = bitcast %6* %47 to i32*
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %18, align 4
  %50 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #11
  %51 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #11
  %52 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #11
  store %3* null, %3** %21, align 8
  %53 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #11
  store i32 0, i32* %22, align 4
  %54 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #11
  store i8* null, i8** %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %25) #11
  store i8 0, i8* %25, align 1
  %55 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #11
  store i32 0, i32* %26, align 4
  %56 = load i32, i32* %19, align 4
  %57 = load %3*, %3** %20, align 8
  %58 = load %3*, %3** %21, align 8
  %59 = load i32, i32* %22, align 4
  %60 = load i8*, i8** %23, align 8
  %61 = load i8, i8* %24, align 1
  %62 = load i8, i8* %25, align 1
  br label %63

63:                                               ; preds = %40
  %64 = load i32, i32* %18, align 4
  %65 = load i32, i32* %16, align 4
  %66 = icmp slt i32 %64, %65
  %67 = xor i1 %66, true
  %68 = xor i1 %67, true
  %69 = zext i1 %68 to i32
  %70 = sext i32 %69 to i64
  %71 = call i64 @llvm.expect.i64(i64 %70, i64 0)
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %92, label %73

73:                                               ; preds = %63
  %74 = load i32, i32* %18, align 4
  %75 = load i32, i32* %17, align 4
  %76 = icmp sgt i32 %74, %75
  %77 = xor i1 %76, true
  %78 = xor i1 %77, true
  %79 = zext i1 %78 to i32
  %80 = sext i32 %79 to i64
  %81 = call i64 @llvm.expect.i64(i64 %80, i64 0)
  %82 = icmp ne i64 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %73
  %84 = load i32, i32* %17, align 4
  %85 = icmp sge i32 %84, 0
  %86 = xor i1 %85, true
  %87 = xor i1 %86, true
  %88 = zext i1 %87 to i32
  %89 = sext i32 %88 to i64
  %90 = call i64 @llvm.expect.i64(i64 %89, i64 1)
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %83, %63
  %93 = load i32, i32* %18, align 4
  %94 = load i32, i32* %16, align 4
  %95 = load i32, i32* %17, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %93, i32 %94, i32 %95)
  store i32 1, i32* %26, align 4
  br label %311

96:                                               ; preds = %83, %73
  store i32 0, i32* %19, align 4
  %97 = load %28*, %28** %3, align 8
  %98 = bitcast %28* %97 to %3*
  %99 = getelementptr inbounds %3, %3* %98, i64 4
  store %3* %99, %3** %20, align 8
  %100 = load i32, i32* %19, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %19, align 4
  br label %102

102:                                              ; preds = %96
  %103 = load i32, i32* %19, align 4
  %104 = load i32, i32* %16, align 4
  %105 = icmp sle i32 %103, %104
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = load i8, i8* %25, align 1
  %108 = zext i8 %107 to i32
  %109 = icmp eq i32 %108, 1
  br label %110

110:                                              ; preds = %106, %102
  %111 = phi i1 [ true, %102 ], [ %109, %106 ]
  %112 = xor i1 %111, true
  %113 = zext i1 %112 to i32
  %114 = sext i32 %113 to i64
  %115 = call i64 @llvm.expect.i64(i64 %114, i64 0)
  %116 = icmp ne i64 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %110
  unreachable

118:                                              ; preds = %110
  br label %119

119:                                              ; preds = %118
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i32, i32* %19, align 4
  %123 = load i32, i32* %16, align 4
  %124 = icmp sgt i32 %122, %123
  br i1 %124, label %129, label %125

125:                                              ; preds = %121
  %126 = load i8, i8* %25, align 1
  %127 = zext i8 %126 to i32
  %128 = icmp eq i32 %127, 0
  br label %129

129:                                              ; preds = %125, %121
  %130 = phi i1 [ true, %121 ], [ %128, %125 ]
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %129
  unreachable

137:                                              ; preds = %129
  br label %138

138:                                              ; preds = %137
  br label %139

139:                                              ; preds = %138
  %140 = load i8, i8* %25, align 1
  %141 = icmp ne i8 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %139
  %143 = load i32, i32* %19, align 4
  %144 = load i32, i32* %18, align 4
  %145 = icmp sgt i32 %143, %144
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %142
  br label %311

153:                                              ; preds = %142
  br label %154

154:                                              ; preds = %153, %139
  %155 = load %3*, %3** %20, align 8
  %156 = getelementptr inbounds %3, %3* %155, i32 1
  store %3* %156, %3** %20, align 8
  %157 = load %3*, %3** %20, align 8
  store %3* %157, %3** %21, align 8
  %158 = load %3*, %3** %21, align 8
  %159 = call i32 @148(%3* %158, %3** %5, i32 0)
  %160 = icmp ne i32 %159, 0
  %161 = xor i1 %160, true
  %162 = xor i1 %161, true
  %163 = xor i1 %162, true
  %164 = zext i1 %163 to i32
  %165 = sext i32 %164 to i64
  %166 = call i64 @llvm.expect.i64(i64 %165, i64 0)
  %167 = icmp ne i64 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %154
  store i32 5, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %311

169:                                              ; preds = %154
  store i8 1, i8* %25, align 1
  %170 = load i32, i32* %19, align 4
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %19, align 4
  br label %172

172:                                              ; preds = %169
  %173 = load i32, i32* %19, align 4
  %174 = load i32, i32* %16, align 4
  %175 = icmp sle i32 %173, %174
  br i1 %175, label %180, label %176

176:                                              ; preds = %172
  %177 = load i8, i8* %25, align 1
  %178 = zext i8 %177 to i32
  %179 = icmp eq i32 %178, 1
  br label %180

180:                                              ; preds = %176, %172
  %181 = phi i1 [ true, %172 ], [ %179, %176 ]
  %182 = xor i1 %181, true
  %183 = zext i1 %182 to i32
  %184 = sext i32 %183 to i64
  %185 = call i64 @llvm.expect.i64(i64 %184, i64 0)
  %186 = icmp ne i64 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %180
  unreachable

188:                                              ; preds = %180
  br label %189

189:                                              ; preds = %188
  br label %190

190:                                              ; preds = %189
  br label %191

191:                                              ; preds = %190
  %192 = load i32, i32* %19, align 4
  %193 = load i32, i32* %16, align 4
  %194 = icmp sgt i32 %192, %193
  br i1 %194, label %199, label %195

195:                                              ; preds = %191
  %196 = load i8, i8* %25, align 1
  %197 = zext i8 %196 to i32
  %198 = icmp eq i32 %197, 0
  br label %199

199:                                              ; preds = %195, %191
  %200 = phi i1 [ true, %191 ], [ %198, %195 ]
  %201 = xor i1 %200, true
  %202 = zext i1 %201 to i32
  %203 = sext i32 %202 to i64
  %204 = call i64 @llvm.expect.i64(i64 %203, i64 0)
  %205 = icmp ne i64 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %199
  unreachable

207:                                              ; preds = %199
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = load i8, i8* %25, align 1
  %211 = icmp ne i8 %210, 0
  br i1 %211, label %212, label %224

212:                                              ; preds = %209
  %213 = load i32, i32* %19, align 4
  %214 = load i32, i32* %18, align 4
  %215 = icmp sgt i32 %213, %214
  %216 = xor i1 %215, true
  %217 = xor i1 %216, true
  %218 = zext i1 %217 to i32
  %219 = sext i32 %218 to i64
  %220 = call i64 @llvm.expect.i64(i64 %219, i64 0)
  %221 = icmp ne i64 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %212
  br label %311

223:                                              ; preds = %212
  br label %224

224:                                              ; preds = %223, %209
  %225 = load %3*, %3** %20, align 8
  %226 = getelementptr inbounds %3, %3* %225, i32 1
  store %3* %226, %3** %20, align 8
  %227 = load %3*, %3** %20, align 8
  store %3* %227, %3** %21, align 8
  %228 = load %3*, %3** %21, align 8
  %229 = call i32 @149(%3* %228, i64* %6, i8* %24, i32 0, i32 0)
  %230 = icmp ne i32 %229, 0
  %231 = xor i1 %230, true
  %232 = xor i1 %231, true
  %233 = xor i1 %232, true
  %234 = zext i1 %233 to i32
  %235 = sext i32 %234 to i64
  %236 = call i64 @llvm.expect.i64(i64 %235, i64 0)
  %237 = icmp ne i64 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %224
  store i32 0, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %311

239:                                              ; preds = %224
  %240 = load i32, i32* %19, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %19, align 4
  br label %242

242:                                              ; preds = %239
  %243 = load i32, i32* %19, align 4
  %244 = load i32, i32* %16, align 4
  %245 = icmp sle i32 %243, %244
  br i1 %245, label %250, label %246

246:                                              ; preds = %242
  %247 = load i8, i8* %25, align 1
  %248 = zext i8 %247 to i32
  %249 = icmp eq i32 %248, 1
  br label %250

250:                                              ; preds = %246, %242
  %251 = phi i1 [ true, %242 ], [ %249, %246 ]
  %252 = xor i1 %251, true
  %253 = zext i1 %252 to i32
  %254 = sext i32 %253 to i64
  %255 = call i64 @llvm.expect.i64(i64 %254, i64 0)
  %256 = icmp ne i64 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %250
  unreachable

258:                                              ; preds = %250
  br label %259

259:                                              ; preds = %258
  br label %260

260:                                              ; preds = %259
  br label %261

261:                                              ; preds = %260
  %262 = load i32, i32* %19, align 4
  %263 = load i32, i32* %16, align 4
  %264 = icmp sgt i32 %262, %263
  br i1 %264, label %269, label %265

265:                                              ; preds = %261
  %266 = load i8, i8* %25, align 1
  %267 = zext i8 %266 to i32
  %268 = icmp eq i32 %267, 0
  br label %269

269:                                              ; preds = %265, %261
  %270 = phi i1 [ true, %261 ], [ %268, %265 ]
  %271 = xor i1 %270, true
  %272 = zext i1 %271 to i32
  %273 = sext i32 %272 to i64
  %274 = call i64 @llvm.expect.i64(i64 %273, i64 0)
  %275 = icmp ne i64 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %269
  unreachable

277:                                              ; preds = %269
  br label %278

278:                                              ; preds = %277
  br label %279

279:                                              ; preds = %278
  %280 = load i8, i8* %25, align 1
  %281 = icmp ne i8 %280, 0
  br i1 %281, label %282, label %294

282:                                              ; preds = %279
  %283 = load i32, i32* %19, align 4
  %284 = load i32, i32* %18, align 4
  %285 = icmp sgt i32 %283, %284
  %286 = xor i1 %285, true
  %287 = xor i1 %286, true
  %288 = zext i1 %287 to i32
  %289 = sext i32 %288 to i64
  %290 = call i64 @llvm.expect.i64(i64 %289, i64 0)
  %291 = icmp ne i64 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %282
  br label %311

293:                                              ; preds = %282
  br label %294

294:                                              ; preds = %293, %279
  %295 = load %3*, %3** %20, align 8
  %296 = getelementptr inbounds %3, %3* %295, i32 1
  store %3* %296, %3** %20, align 8
  %297 = load %3*, %3** %20, align 8
  store %3* %297, %3** %21, align 8
  %298 = load %3*, %3** %21, align 8
  %299 = call i32 @159(%3* %298, i8** %13, i64* %14, i32 0)
  %300 = icmp ne i32 %299, 0
  %301 = xor i1 %300, true
  %302 = xor i1 %301, true
  %303 = xor i1 %302, true
  %304 = zext i1 %303 to i32
  %305 = sext i32 %304 to i64
  %306 = call i64 @llvm.expect.i64(i64 %305, i64 0)
  %307 = icmp ne i64 %306, 0
  br i1 %307, label %308, label %309

308:                                              ; preds = %294
  store i32 2, i32* %22, align 4
  store i32 4, i32* %26, align 4
  br label %311

309:                                              ; preds = %294
  br label %310

310:                                              ; preds = %309
  br label %311

311:                                              ; preds = %310, %308, %292, %238, %222, %168, %152, %92
  %312 = load i32, i32* %26, align 4
  %313 = icmp ne i32 %312, 0
  %314 = xor i1 %313, true
  %315 = xor i1 %314, true
  %316 = zext i1 %315 to i32
  %317 = sext i32 %316 to i64
  %318 = call i64 @llvm.expect.i64(i64 %317, i64 0)
  %319 = icmp ne i64 %318, 0
  br i1 %319, label %320, label %349

320:                                              ; preds = %311
  %321 = load i32, i32* %26, align 4
  %322 = icmp eq i32 %321, 2
  br i1 %322, label %323, label %326

323:                                              ; preds = %320
  %324 = load i32, i32* %19, align 4
  %325 = load i8*, i8** %23, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %324, i8* %325)
  br label %342

326:                                              ; preds = %320
  %327 = load i32, i32* %26, align 4
  %328 = icmp eq i32 %327, 3
  br i1 %328, label %329, label %333

329:                                              ; preds = %326
  %330 = load i32, i32* %19, align 4
  %331 = load i8*, i8** %23, align 8
  %332 = load %3*, %3** %21, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %330, i8* %331, %3* %332)
  br label %341

333:                                              ; preds = %326
  %334 = load i32, i32* %26, align 4
  %335 = icmp eq i32 %334, 4
  br i1 %335, label %336, label %340

336:                                              ; preds = %333
  %337 = load i32, i32* %19, align 4
  %338 = load i32, i32* %22, align 4
  %339 = load %3*, %3** %21, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %337, i32 %338, %3* %339)
  br label %340

340:                                              ; preds = %336, %333
  br label %341

341:                                              ; preds = %340, %329
  br label %342

342:                                              ; preds = %341, %323
  br label %343

343:                                              ; preds = %342
  %344 = load %3*, %3** %4, align 8
  %345 = getelementptr inbounds %3, %3* %344, i32 0, i32 1
  %346 = bitcast %5* %345 to i32*
  store i32 2, i32* %346, align 8
  br label %347

347:                                              ; preds = %343
  br label %348

348:                                              ; preds = %347
  store i32 1, i32* %27, align 4
  br label %350

349:                                              ; preds = %311
  store i32 0, i32* %27, align 4
  br label %350

350:                                              ; preds = %349, %348
  %351 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %25) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #11
  %352 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %352) #11
  %353 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %353) #11
  %354 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %354) #11
  %355 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %355) #11
  %356 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %356) #11
  %357 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %357) #11
  %358 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %358) #11
  %359 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %359) #11
  %360 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %360) #11
  %361 = load i32, i32* %27, align 4
  switch i32 %361, label %471 [
    i32 0, label %362
  ]

362:                                              ; preds = %350
  br label %363

363:                                              ; preds = %362
  br label %364

364:                                              ; preds = %363
  br label %365

365:                                              ; preds = %364
  %366 = load %3*, %3** %5, align 8
  %367 = call zeroext i8 @150(%3* %366)
  %368 = zext i8 %367 to i32
  %369 = icmp eq i32 %368, 9
  %370 = xor i1 %369, true
  %371 = zext i1 %370 to i32
  %372 = sext i32 %371 to i64
  %373 = call i64 @llvm.expect.i64(i64 %372, i64 0)
  %374 = icmp ne i64 %373, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %365
  unreachable

376:                                              ; preds = %365
  br label %377

377:                                              ; preds = %376
  br label %378

378:                                              ; preds = %377
  br label %379

379:                                              ; preds = %378
  %380 = load %3*, %3** %5, align 8
  %381 = getelementptr inbounds %3, %3* %380, i32 0, i32 0
  %382 = bitcast %4* %381 to %7**
  %383 = load %7*, %7** %382, align 8
  %384 = call i32 @php_file_le_stream()
  %385 = call i32 @php_file_le_pstream()
  %386 = call i8* @zend_fetch_resource2(%7* %383, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %384, i32 %385)
  %387 = bitcast i8* %386 to %53*
  store %53* %387, %53** %12, align 8
  %388 = icmp eq %53* %387, null
  br i1 %388, label %389, label %396

389:                                              ; preds = %379
  br label %390

390:                                              ; preds = %389
  %391 = load %3*, %3** %4, align 8
  %392 = getelementptr inbounds %3, %3* %391, i32 0, i32 1
  %393 = bitcast %5* %392 to i32*
  store i32 2, i32* %393, align 8
  br label %394

394:                                              ; preds = %390
  br label %395

395:                                              ; preds = %394
  store i32 1, i32* %27, align 4
  br label %471

396:                                              ; preds = %379
  br label %397

397:                                              ; preds = %396
  br label %398

398:                                              ; preds = %397
  %399 = load %28*, %28** %3, align 8
  %400 = getelementptr inbounds %28, %28* %399, i32 0, i32 4
  %401 = getelementptr inbounds %3, %3* %400, i32 0, i32 2
  %402 = bitcast %6* %401 to i32*
  %403 = load i32, i32* %402, align 4
  %404 = icmp uge i32 %403, 2
  br i1 %404, label %405, label %423

405:                                              ; preds = %398
  %406 = load i64, i64* %6, align 8
  %407 = icmp sle i64 %406, 0
  br i1 %407, label %408, label %415

408:                                              ; preds = %405
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @101, i32 0, i32 0))
  br label %409

409:                                              ; preds = %408
  %410 = load %3*, %3** %4, align 8
  %411 = getelementptr inbounds %3, %3* %410, i32 0, i32 1
  %412 = bitcast %5* %411 to i32*
  store i32 2, i32* %412, align 8
  br label %413

413:                                              ; preds = %409
  br label %414

414:                                              ; preds = %413
  store i32 1, i32* %27, align 4
  br label %471

415:                                              ; preds = %405
  %416 = load i64, i64* %6, align 8
  store i64 %416, i64* %7, align 8
  %417 = load i64, i64* %7, align 8
  %418 = add i64 %417, 1
  %419 = call noalias i8* @_safe_emalloc(i64 1, i64 %418, i64 0)
  store i8* %419, i8** %10, align 8
  %420 = load i8*, i8** %10, align 8
  %421 = load i64, i64* %7, align 8
  %422 = add i64 %421, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %420, i8 0, i64 %422, i1 false)
  br label %423

423:                                              ; preds = %415, %398
  %424 = load %53*, %53** %12, align 8
  %425 = load i8*, i8** %10, align 8
  %426 = load i64, i64* %7, align 8
  %427 = call i8* @_php_stream_get_line(%53* %424, i8* %425, i64 %426, i64* %8)
  store i8* %427, i8** %11, align 8
  %428 = icmp eq i8* %427, null
  br i1 %428, label %429, label %441

429:                                              ; preds = %423
  %430 = load i8*, i8** %10, align 8
  %431 = icmp ne i8* %430, null
  br i1 %431, label %432, label %434

432:                                              ; preds = %429
  %433 = load i8*, i8** %10, align 8
  call void @_efree(i8* %433)
  br label %434

434:                                              ; preds = %432, %429
  br label %435

435:                                              ; preds = %434
  %436 = load %3*, %3** %4, align 8
  %437 = getelementptr inbounds %3, %3* %436, i32 0, i32 1
  %438 = bitcast %5* %437 to i32*
  store i32 2, i32* %438, align 8
  br label %439

439:                                              ; preds = %435
  br label %440

440:                                              ; preds = %439
  store i32 1, i32* %27, align 4
  br label %471

441:                                              ; preds = %423
  %442 = load i8*, i8** %11, align 8
  %443 = load i64, i64* %8, align 8
  %444 = load %53*, %53** %12, align 8
  %445 = getelementptr inbounds %53, %53* %444, i32 0, i32 8
  %446 = load i8*, i8** %13, align 8
  %447 = load i64, i64* %14, align 8
  %448 = call i64 @php_strip_tags(i8* %442, i64 %443, i8* %445, i8* %446, i64 %447)
  store i64 %448, i64* %9, align 8
  br label %449

449:                                              ; preds = %441
  br label %450

450:                                              ; preds = %449
  %451 = bitcast %3** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %451) #11
  %452 = load %3*, %3** %4, align 8
  store %3* %452, %3** %28, align 8
  %453 = bitcast %13** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %453) #11
  %454 = load i8*, i8** %11, align 8
  %455 = load i64, i64* %9, align 8
  %456 = call %13* @160(i8* %454, i64 %455, i32 0)
  store %13* %456, %13** %29, align 8
  %457 = load %13*, %13** %29, align 8
  %458 = load %3*, %3** %28, align 8
  %459 = getelementptr inbounds %3, %3* %458, i32 0, i32 0
  %460 = bitcast %4* %459 to %13**
  store %13* %457, %13** %460, align 8
  %461 = load %3*, %3** %28, align 8
  %462 = getelementptr inbounds %3, %3* %461, i32 0, i32 1
  %463 = bitcast %5* %462 to i32*
  store i32 5126, i32* %463, align 8
  %464 = bitcast %13** %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %464) #11
  %465 = bitcast %3** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %465) #11
  br label %466

466:                                              ; preds = %450
  br label %467

467:                                              ; preds = %466
  br label %468

468:                                              ; preds = %467
  br label %469

469:                                              ; preds = %468
  %470 = load i8*, i8** %11, align 8
  call void @_efree(i8* %470)
  store i32 0, i32* %27, align 4
  br label %471

471:                                              ; preds = %469, %440, %414, %395, %350
  %472 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %472) #11
  %473 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %473) #11
  %474 = bitcast %53** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %474) #11
  %475 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %475) #11
  %476 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %476) #11
  %477 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %477) #11
  %478 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %478) #11
  %479 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %479) #11
  %480 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %480) #11
  %481 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %481) #11
  %482 = load i32, i32* %27, align 4
  switch i32 %482, label %484 [
    i32 0, label %483
    i32 1, label %483
  ]

483:                                              ; preds = %471, %471
  ret void

484:                                              ; preds = %471
  unreachable
}

declare dso_local noalias i8* @_safe_emalloc(i64, i64, i64) #1

declare dso_local i64 @php_strip_tags(i8*, i64, i8*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_fscanf(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca %3*, align 8
  %9 = alloca %3*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %3*, align 8
  %20 = alloca %3*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %28 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #11
  %29 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  store i32 0, i32* %6, align 4
  %30 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #11
  %31 = bitcast %3** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  store %3* null, %3** %8, align 8
  %32 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #11
  %33 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  %34 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  %35 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  %36 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  br label %37

37:                                               ; preds = %2
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  store i32 0, i32* %14, align 4
  %39 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #11
  store i32 2, i32* %15, align 4
  %40 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #11
  store i32 -1, i32* %16, align 4
  %41 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #11
  %42 = load %28*, %28** %3, align 8
  %43 = getelementptr inbounds %28, %28* %42, i32 0, i32 4
  %44 = getelementptr inbounds %3, %3* %43, i32 0, i32 2
  %45 = bitcast %6* %44 to i32*
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %17, align 4
  %47 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  %48 = bitcast %3** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #11
  %49 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #11
  store %3* null, %3** %20, align 8
  %50 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %50) #11
  store i32 0, i32* %21, align 4
  %51 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #11
  store i8* null, i8** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %24) #11
  store i8 0, i8* %24, align 1
  %52 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #11
  store i32 0, i32* %25, align 4
  %53 = load i32, i32* %18, align 4
  %54 = load %3*, %3** %19, align 8
  %55 = load %3*, %3** %20, align 8
  %56 = load i32, i32* %21, align 4
  %57 = load i8*, i8** %22, align 8
  %58 = load i8, i8* %23, align 1
  %59 = load i8, i8* %24, align 1
  br label %60

60:                                               ; preds = %37
  %61 = load i32, i32* %17, align 4
  %62 = load i32, i32* %15, align 4
  %63 = icmp slt i32 %61, %62
  %64 = xor i1 %63, true
  %65 = xor i1 %64, true
  %66 = zext i1 %65 to i32
  %67 = sext i32 %66 to i64
  %68 = call i64 @llvm.expect.i64(i64 %67, i64 0)
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %89, label %70

70:                                               ; preds = %60
  %71 = load i32, i32* %17, align 4
  %72 = load i32, i32* %16, align 4
  %73 = icmp sgt i32 %71, %72
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 0)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %93

80:                                               ; preds = %70
  %81 = load i32, i32* %16, align 4
  %82 = icmp sge i32 %81, 0
  %83 = xor i1 %82, true
  %84 = xor i1 %83, true
  %85 = zext i1 %84 to i32
  %86 = sext i32 %85 to i64
  %87 = call i64 @llvm.expect.i64(i64 %86, i64 1)
  %88 = icmp ne i64 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %80, %60
  %90 = load i32, i32* %17, align 4
  %91 = load i32, i32* %15, align 4
  %92 = load i32, i32* %16, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %90, i32 %91, i32 %92)
  store i32 1, i32* %25, align 4
  br label %268

93:                                               ; preds = %80, %70
  store i32 0, i32* %18, align 4
  %94 = load %28*, %28** %3, align 8
  %95 = bitcast %28* %94 to %3*
  %96 = getelementptr inbounds %3, %3* %95, i64 4
  store %3* %96, %3** %19, align 8
  %97 = load i32, i32* %18, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %18, align 4
  br label %99

99:                                               ; preds = %93
  %100 = load i32, i32* %18, align 4
  %101 = load i32, i32* %15, align 4
  %102 = icmp sle i32 %100, %101
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  %104 = load i8, i8* %24, align 1
  %105 = zext i8 %104 to i32
  %106 = icmp eq i32 %105, 1
  br label %107

107:                                              ; preds = %103, %99
  %108 = phi i1 [ true, %99 ], [ %106, %103 ]
  %109 = xor i1 %108, true
  %110 = zext i1 %109 to i32
  %111 = sext i32 %110 to i64
  %112 = call i64 @llvm.expect.i64(i64 %111, i64 0)
  %113 = icmp ne i64 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %107
  unreachable

115:                                              ; preds = %107
  br label %116

116:                                              ; preds = %115
  br label %117

117:                                              ; preds = %116
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %18, align 4
  %120 = load i32, i32* %15, align 4
  %121 = icmp sgt i32 %119, %120
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = load i8, i8* %24, align 1
  %124 = zext i8 %123 to i32
  %125 = icmp eq i32 %124, 0
  br label %126

126:                                              ; preds = %122, %118
  %127 = phi i1 [ true, %118 ], [ %125, %122 ]
  %128 = xor i1 %127, true
  %129 = zext i1 %128 to i32
  %130 = sext i32 %129 to i64
  %131 = call i64 @llvm.expect.i64(i64 %130, i64 0)
  %132 = icmp ne i64 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %126
  unreachable

134:                                              ; preds = %126
  br label %135

135:                                              ; preds = %134
  br label %136

136:                                              ; preds = %135
  %137 = load i8, i8* %24, align 1
  %138 = icmp ne i8 %137, 0
  br i1 %138, label %139, label %151

139:                                              ; preds = %136
  %140 = load i32, i32* %18, align 4
  %141 = load i32, i32* %17, align 4
  %142 = icmp sgt i32 %140, %141
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = zext i1 %144 to i32
  %146 = sext i32 %145 to i64
  %147 = call i64 @llvm.expect.i64(i64 %146, i64 0)
  %148 = icmp ne i64 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %139
  br label %268

150:                                              ; preds = %139
  br label %151

151:                                              ; preds = %150, %136
  %152 = load %3*, %3** %19, align 8
  %153 = getelementptr inbounds %3, %3* %152, i32 1
  store %3* %153, %3** %19, align 8
  %154 = load %3*, %3** %19, align 8
  store %3* %154, %3** %20, align 8
  %155 = load %3*, %3** %20, align 8
  %156 = call i32 @148(%3* %155, %3** %9, i32 0)
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = xor i1 %159, true
  %161 = zext i1 %160 to i32
  %162 = sext i32 %161 to i64
  %163 = call i64 @llvm.expect.i64(i64 %162, i64 0)
  %164 = icmp ne i64 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %151
  store i32 5, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %268

166:                                              ; preds = %151
  %167 = load i32, i32* %18, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %18, align 4
  br label %169

169:                                              ; preds = %166
  %170 = load i32, i32* %18, align 4
  %171 = load i32, i32* %15, align 4
  %172 = icmp sle i32 %170, %171
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = load i8, i8* %24, align 1
  %175 = zext i8 %174 to i32
  %176 = icmp eq i32 %175, 1
  br label %177

177:                                              ; preds = %173, %169
  %178 = phi i1 [ true, %169 ], [ %176, %173 ]
  %179 = xor i1 %178, true
  %180 = zext i1 %179 to i32
  %181 = sext i32 %180 to i64
  %182 = call i64 @llvm.expect.i64(i64 %181, i64 0)
  %183 = icmp ne i64 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %177
  unreachable

185:                                              ; preds = %177
  br label %186

186:                                              ; preds = %185
  br label %187

187:                                              ; preds = %186
  br label %188

188:                                              ; preds = %187
  %189 = load i32, i32* %18, align 4
  %190 = load i32, i32* %15, align 4
  %191 = icmp sgt i32 %189, %190
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = load i8, i8* %24, align 1
  %194 = zext i8 %193 to i32
  %195 = icmp eq i32 %194, 0
  br label %196

196:                                              ; preds = %192, %188
  %197 = phi i1 [ true, %188 ], [ %195, %192 ]
  %198 = xor i1 %197, true
  %199 = zext i1 %198 to i32
  %200 = sext i32 %199 to i64
  %201 = call i64 @llvm.expect.i64(i64 %200, i64 0)
  %202 = icmp ne i64 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %196
  unreachable

204:                                              ; preds = %196
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  %207 = load i8, i8* %24, align 1
  %208 = icmp ne i8 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %206
  %210 = load i32, i32* %18, align 4
  %211 = load i32, i32* %17, align 4
  %212 = icmp sgt i32 %210, %211
  %213 = xor i1 %212, true
  %214 = xor i1 %213, true
  %215 = zext i1 %214 to i32
  %216 = sext i32 %215 to i64
  %217 = call i64 @llvm.expect.i64(i64 %216, i64 0)
  %218 = icmp ne i64 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %209
  br label %268

220:                                              ; preds = %209
  br label %221

221:                                              ; preds = %220, %206
  %222 = load %3*, %3** %19, align 8
  %223 = getelementptr inbounds %3, %3* %222, i32 1
  store %3* %223, %3** %19, align 8
  %224 = load %3*, %3** %19, align 8
  store %3* %224, %3** %20, align 8
  %225 = load %3*, %3** %20, align 8
  %226 = call i32 @159(%3* %225, i8** %11, i64* %7, i32 0)
  %227 = icmp ne i32 %226, 0
  %228 = xor i1 %227, true
  %229 = xor i1 %228, true
  %230 = xor i1 %229, true
  %231 = zext i1 %230 to i32
  %232 = sext i32 %231 to i64
  %233 = call i64 @llvm.expect.i64(i64 %232, i64 0)
  %234 = icmp ne i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %221
  store i32 2, i32* %21, align 4
  store i32 4, i32* %25, align 4
  br label %268

236:                                              ; preds = %221
  br label %237

237:                                              ; preds = %236
  %238 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %238) #11
  %239 = load i32, i32* %17, align 4
  %240 = load i32, i32* %18, align 4
  %241 = sub nsw i32 %239, %240
  %242 = sub nsw i32 %241, 0
  store i32 %242, i32* %26, align 4
  %243 = load i32, i32* %26, align 4
  %244 = icmp sgt i32 %243, 0
  %245 = xor i1 %244, true
  %246 = xor i1 %245, true
  %247 = zext i1 %246 to i32
  %248 = sext i32 %247 to i64
  %249 = call i64 @llvm.expect.i64(i64 %248, i64 1)
  %250 = icmp ne i64 %249, 0
  br i1 %250, label %251, label %262

251:                                              ; preds = %237
  %252 = load %3*, %3** %19, align 8
  %253 = getelementptr inbounds %3, %3* %252, i64 1
  store %3* %253, %3** %8, align 8
  %254 = load i32, i32* %26, align 4
  store i32 %254, i32* %6, align 4
  %255 = load i32, i32* %26, align 4
  %256 = load i32, i32* %18, align 4
  %257 = add nsw i32 %256, %255
  store i32 %257, i32* %18, align 4
  %258 = load i32, i32* %26, align 4
  %259 = load %3*, %3** %19, align 8
  %260 = sext i32 %258 to i64
  %261 = getelementptr inbounds %3, %3* %259, i64 %260
  store %3* %261, %3** %19, align 8
  br label %263

262:                                              ; preds = %237
  store %3* null, %3** %8, align 8
  store i32 0, i32* %6, align 4
  br label %263

263:                                              ; preds = %262, %251
  %264 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %264) #11
  br label %265

265:                                              ; preds = %263
  br label %266

266:                                              ; preds = %265
  br label %267

267:                                              ; preds = %266
  br label %268

268:                                              ; preds = %267, %235, %219, %165, %149, %89
  %269 = load i32, i32* %25, align 4
  %270 = icmp ne i32 %269, 0
  %271 = xor i1 %270, true
  %272 = xor i1 %271, true
  %273 = zext i1 %272 to i32
  %274 = sext i32 %273 to i64
  %275 = call i64 @llvm.expect.i64(i64 %274, i64 0)
  %276 = icmp ne i64 %275, 0
  br i1 %276, label %277, label %300

277:                                              ; preds = %268
  %278 = load i32, i32* %25, align 4
  %279 = icmp eq i32 %278, 2
  br i1 %279, label %280, label %283

280:                                              ; preds = %277
  %281 = load i32, i32* %18, align 4
  %282 = load i8*, i8** %22, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %281, i8* %282)
  br label %299

283:                                              ; preds = %277
  %284 = load i32, i32* %25, align 4
  %285 = icmp eq i32 %284, 3
  br i1 %285, label %286, label %290

286:                                              ; preds = %283
  %287 = load i32, i32* %18, align 4
  %288 = load i8*, i8** %22, align 8
  %289 = load %3*, %3** %20, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %287, i8* %288, %3* %289)
  br label %298

290:                                              ; preds = %283
  %291 = load i32, i32* %25, align 4
  %292 = icmp eq i32 %291, 4
  br i1 %292, label %293, label %297

293:                                              ; preds = %290
  %294 = load i32, i32* %18, align 4
  %295 = load i32, i32* %21, align 4
  %296 = load %3*, %3** %20, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %294, i32 %295, %3* %296)
  br label %297

297:                                              ; preds = %293, %290
  br label %298

298:                                              ; preds = %297, %286
  br label %299

299:                                              ; preds = %298, %280
  store i32 1, i32* %27, align 4
  br label %301

300:                                              ; preds = %268
  store i32 0, i32* %27, align 4
  br label %301

301:                                              ; preds = %300, %299
  %302 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %302) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %24) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #11
  %303 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %303) #11
  %304 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %304) #11
  %305 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %305) #11
  %306 = bitcast %3** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %306) #11
  %307 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %307) #11
  %308 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %308) #11
  %309 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %309) #11
  %310 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %310) #11
  %311 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %311) #11
  %312 = load i32, i32* %27, align 4
  switch i32 %312, label %357 [
    i32 0, label %313
  ]

313:                                              ; preds = %301
  br label %314

314:                                              ; preds = %313
  br label %315

315:                                              ; preds = %314
  %316 = load %3*, %3** %9, align 8
  %317 = getelementptr inbounds %3, %3* %316, i32 0, i32 0
  %318 = bitcast %4* %317 to %7**
  %319 = load %7*, %7** %318, align 8
  %320 = call i32 @php_file_le_stream()
  %321 = call i32 @php_file_le_pstream()
  %322 = call i8* @zend_fetch_resource2(%7* %319, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @102, i32 0, i32 0), i32 %320, i32 %321)
  store i8* %322, i8** %13, align 8
  %323 = load i8*, i8** %13, align 8
  %324 = icmp ne i8* %323, null
  br i1 %324, label %332, label %325

325:                                              ; preds = %315
  br label %326

326:                                              ; preds = %325
  %327 = load %3*, %3** %4, align 8
  %328 = getelementptr inbounds %3, %3* %327, i32 0, i32 1
  %329 = bitcast %5* %328 to i32*
  store i32 2, i32* %329, align 8
  br label %330

330:                                              ; preds = %326
  br label %331

331:                                              ; preds = %330
  store i32 1, i32* %27, align 4
  br label %357

332:                                              ; preds = %315
  %333 = load i8*, i8** %13, align 8
  %334 = bitcast i8* %333 to %53*
  %335 = call i8* @_php_stream_get_line(%53* %334, i8* null, i64 0, i64* %12)
  store i8* %335, i8** %10, align 8
  %336 = load i8*, i8** %10, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %338, label %345

338:                                              ; preds = %332
  br label %339

339:                                              ; preds = %338
  %340 = load %3*, %3** %4, align 8
  %341 = getelementptr inbounds %3, %3* %340, i32 0, i32 1
  %342 = bitcast %5* %341 to i32*
  store i32 2, i32* %342, align 8
  br label %343

343:                                              ; preds = %339
  br label %344

344:                                              ; preds = %343
  store i32 1, i32* %27, align 4
  br label %357

345:                                              ; preds = %332
  %346 = load i8*, i8** %10, align 8
  %347 = load i8*, i8** %11, align 8
  %348 = load i32, i32* %6, align 4
  %349 = load %3*, %3** %8, align 8
  %350 = load %3*, %3** %4, align 8
  %351 = call i32 @php_sscanf_internal(i8* %346, i8* %347, i32 %348, %3* %349, i32 0, %3* %350)
  store i32 %351, i32* %5, align 4
  %352 = load i8*, i8** %10, align 8
  call void @_efree(i8* %352)
  %353 = load i32, i32* %5, align 4
  %354 = icmp eq i32 -4, %353
  br i1 %354, label %355, label %356

355:                                              ; preds = %345
  call void @zend_wrong_param_count()
  store i32 1, i32* %27, align 4
  br label %357

356:                                              ; preds = %345
  store i32 0, i32* %27, align 4
  br label %357

357:                                              ; preds = %356, %355, %344, %331, %301
  %358 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %358) #11
  %359 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %359) #11
  %360 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %360) #11
  %361 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %361) #11
  %362 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %362) #11
  %363 = bitcast %3** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %363) #11
  %364 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %364) #11
  %365 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %365) #11
  %366 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %366) #11
  %367 = load i32, i32* %27, align 4
  switch i32 %367, label %369 [
    i32 0, label %368
    i32 1, label %368
  ]

368:                                              ; preds = %357, %357
  ret void

369:                                              ; preds = %357
  unreachable
}

declare dso_local i32 @php_sscanf_internal(i8*, i8*, i32, %3*, i32, %3*) #1

declare dso_local void @zend_wrong_param_count() #1

; Function Attrs: nounwind uwtable
define dso_local void @zif_fwrite(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %53*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %3*, align 8
  %18 = alloca %3*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %3*, align 8
  %26 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %27 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  %28 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  %29 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #11
  %30 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #11
  %31 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  %32 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #11
  store i64 0, i64* %10, align 8
  %33 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  br label %34

34:                                               ; preds = %2
  %35 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  store i32 0, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  store i32 2, i32* %13, align 4
  %37 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 3, i32* %14, align 4
  %38 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  %39 = load %28*, %28** %3, align 8
  %40 = getelementptr inbounds %28, %28* %39, i32 0, i32 4
  %41 = getelementptr inbounds %3, %3* %40, i32 0, i32 2
  %42 = bitcast %6* %41 to i32*
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %15, align 4
  %44 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  %45 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #11
  %46 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #11
  store %3* null, %3** %18, align 8
  %47 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  store i32 0, i32* %19, align 4
  %48 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #11
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #11
  store i8 0, i8* %22, align 1
  %49 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #11
  store i32 0, i32* %23, align 4
  %50 = load i32, i32* %16, align 4
  %51 = load %3*, %3** %17, align 8
  %52 = load %3*, %3** %18, align 8
  %53 = load i32, i32* %19, align 4
  %54 = load i8*, i8** %20, align 8
  %55 = load i8, i8* %21, align 1
  %56 = load i8, i8* %22, align 1
  br label %57

57:                                               ; preds = %34
  %58 = load i32, i32* %15, align 4
  %59 = load i32, i32* %13, align 4
  %60 = icmp slt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %57
  %68 = load i32, i32* %15, align 4
  %69 = load i32, i32* %14, align 4
  %70 = icmp sgt i32 %68, %69
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 0)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %90

77:                                               ; preds = %67
  %78 = load i32, i32* %14, align 4
  %79 = icmp sge i32 %78, 0
  %80 = xor i1 %79, true
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = sext i32 %82 to i64
  %84 = call i64 @llvm.expect.i64(i64 %83, i64 1)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %77, %57
  %87 = load i32, i32* %15, align 4
  %88 = load i32, i32* %13, align 4
  %89 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %87, i32 %88, i32 %89)
  store i32 1, i32* %23, align 4
  br label %305

90:                                               ; preds = %77, %67
  store i32 0, i32* %16, align 4
  %91 = load %28*, %28** %3, align 8
  %92 = bitcast %28* %91 to %3*
  %93 = getelementptr inbounds %3, %3* %92, i64 4
  store %3* %93, %3** %17, align 8
  %94 = load i32, i32* %16, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %16, align 4
  br label %96

96:                                               ; preds = %90
  %97 = load i32, i32* %16, align 4
  %98 = load i32, i32* %13, align 4
  %99 = icmp sle i32 %97, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %96
  %101 = load i8, i8* %22, align 1
  %102 = zext i8 %101 to i32
  %103 = icmp eq i32 %102, 1
  br label %104

104:                                              ; preds = %100, %96
  %105 = phi i1 [ true, %96 ], [ %103, %100 ]
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.expect.i64(i64 %108, i64 0)
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %104
  unreachable

112:                                              ; preds = %104
  br label %113

113:                                              ; preds = %112
  br label %114

114:                                              ; preds = %113
  br label %115

115:                                              ; preds = %114
  %116 = load i32, i32* %16, align 4
  %117 = load i32, i32* %13, align 4
  %118 = icmp sgt i32 %116, %117
  br i1 %118, label %123, label %119

119:                                              ; preds = %115
  %120 = load i8, i8* %22, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp eq i32 %121, 0
  br label %123

123:                                              ; preds = %119, %115
  %124 = phi i1 [ true, %115 ], [ %122, %119 ]
  %125 = xor i1 %124, true
  %126 = zext i1 %125 to i32
  %127 = sext i32 %126 to i64
  %128 = call i64 @llvm.expect.i64(i64 %127, i64 0)
  %129 = icmp ne i64 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %123
  unreachable

131:                                              ; preds = %123
  br label %132

132:                                              ; preds = %131
  br label %133

133:                                              ; preds = %132
  %134 = load i8, i8* %22, align 1
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %133
  %137 = load i32, i32* %16, align 4
  %138 = load i32, i32* %15, align 4
  %139 = icmp sgt i32 %137, %138
  %140 = xor i1 %139, true
  %141 = xor i1 %140, true
  %142 = zext i1 %141 to i32
  %143 = sext i32 %142 to i64
  %144 = call i64 @llvm.expect.i64(i64 %143, i64 0)
  %145 = icmp ne i64 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %136
  br label %305

147:                                              ; preds = %136
  br label %148

148:                                              ; preds = %147, %133
  %149 = load %3*, %3** %17, align 8
  %150 = getelementptr inbounds %3, %3* %149, i32 1
  store %3* %150, %3** %17, align 8
  %151 = load %3*, %3** %17, align 8
  store %3* %151, %3** %18, align 8
  %152 = load %3*, %3** %18, align 8
  %153 = call i32 @148(%3* %152, %3** %5, i32 0)
  %154 = icmp ne i32 %153, 0
  %155 = xor i1 %154, true
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %148
  store i32 5, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %305

163:                                              ; preds = %148
  %164 = load i32, i32* %16, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %16, align 4
  br label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %16, align 4
  %168 = load i32, i32* %13, align 4
  %169 = icmp sle i32 %167, %168
  br i1 %169, label %174, label %170

170:                                              ; preds = %166
  %171 = load i8, i8* %22, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp eq i32 %172, 1
  br label %174

174:                                              ; preds = %170, %166
  %175 = phi i1 [ true, %166 ], [ %173, %170 ]
  %176 = xor i1 %175, true
  %177 = zext i1 %176 to i32
  %178 = sext i32 %177 to i64
  %179 = call i64 @llvm.expect.i64(i64 %178, i64 0)
  %180 = icmp ne i64 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %174
  unreachable

182:                                              ; preds = %174
  br label %183

183:                                              ; preds = %182
  br label %184

184:                                              ; preds = %183
  br label %185

185:                                              ; preds = %184
  %186 = load i32, i32* %16, align 4
  %187 = load i32, i32* %13, align 4
  %188 = icmp sgt i32 %186, %187
  br i1 %188, label %193, label %189

189:                                              ; preds = %185
  %190 = load i8, i8* %22, align 1
  %191 = zext i8 %190 to i32
  %192 = icmp eq i32 %191, 0
  br label %193

193:                                              ; preds = %189, %185
  %194 = phi i1 [ true, %185 ], [ %192, %189 ]
  %195 = xor i1 %194, true
  %196 = zext i1 %195 to i32
  %197 = sext i32 %196 to i64
  %198 = call i64 @llvm.expect.i64(i64 %197, i64 0)
  %199 = icmp ne i64 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %193
  unreachable

201:                                              ; preds = %193
  br label %202

202:                                              ; preds = %201
  br label %203

203:                                              ; preds = %202
  %204 = load i8, i8* %22, align 1
  %205 = icmp ne i8 %204, 0
  br i1 %205, label %206, label %218

206:                                              ; preds = %203
  %207 = load i32, i32* %16, align 4
  %208 = load i32, i32* %15, align 4
  %209 = icmp sgt i32 %207, %208
  %210 = xor i1 %209, true
  %211 = xor i1 %210, true
  %212 = zext i1 %211 to i32
  %213 = sext i32 %212 to i64
  %214 = call i64 @llvm.expect.i64(i64 %213, i64 0)
  %215 = icmp ne i64 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %206
  br label %305

217:                                              ; preds = %206
  br label %218

218:                                              ; preds = %217, %203
  %219 = load %3*, %3** %17, align 8
  %220 = getelementptr inbounds %3, %3* %219, i32 1
  store %3* %220, %3** %17, align 8
  %221 = load %3*, %3** %17, align 8
  store %3* %221, %3** %18, align 8
  %222 = load %3*, %3** %18, align 8
  %223 = call i32 @159(%3* %222, i8** %6, i64* %7, i32 0)
  %224 = icmp ne i32 %223, 0
  %225 = xor i1 %224, true
  %226 = xor i1 %225, true
  %227 = xor i1 %226, true
  %228 = zext i1 %227 to i32
  %229 = sext i32 %228 to i64
  %230 = call i64 @llvm.expect.i64(i64 %229, i64 0)
  %231 = icmp ne i64 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %218
  store i32 2, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %305

233:                                              ; preds = %218
  store i8 1, i8* %22, align 1
  %234 = load i32, i32* %16, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %16, align 4
  br label %236

236:                                              ; preds = %233
  %237 = load i32, i32* %16, align 4
  %238 = load i32, i32* %13, align 4
  %239 = icmp sle i32 %237, %238
  br i1 %239, label %244, label %240

240:                                              ; preds = %236
  %241 = load i8, i8* %22, align 1
  %242 = zext i8 %241 to i32
  %243 = icmp eq i32 %242, 1
  br label %244

244:                                              ; preds = %240, %236
  %245 = phi i1 [ true, %236 ], [ %243, %240 ]
  %246 = xor i1 %245, true
  %247 = zext i1 %246 to i32
  %248 = sext i32 %247 to i64
  %249 = call i64 @llvm.expect.i64(i64 %248, i64 0)
  %250 = icmp ne i64 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %244
  unreachable

252:                                              ; preds = %244
  br label %253

253:                                              ; preds = %252
  br label %254

254:                                              ; preds = %253
  br label %255

255:                                              ; preds = %254
  %256 = load i32, i32* %16, align 4
  %257 = load i32, i32* %13, align 4
  %258 = icmp sgt i32 %256, %257
  br i1 %258, label %263, label %259

259:                                              ; preds = %255
  %260 = load i8, i8* %22, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i32 %261, 0
  br label %263

263:                                              ; preds = %259, %255
  %264 = phi i1 [ true, %255 ], [ %262, %259 ]
  %265 = xor i1 %264, true
  %266 = zext i1 %265 to i32
  %267 = sext i32 %266 to i64
  %268 = call i64 @llvm.expect.i64(i64 %267, i64 0)
  %269 = icmp ne i64 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %263
  unreachable

271:                                              ; preds = %263
  br label %272

272:                                              ; preds = %271
  br label %273

273:                                              ; preds = %272
  %274 = load i8, i8* %22, align 1
  %275 = icmp ne i8 %274, 0
  br i1 %275, label %276, label %288

276:                                              ; preds = %273
  %277 = load i32, i32* %16, align 4
  %278 = load i32, i32* %15, align 4
  %279 = icmp sgt i32 %277, %278
  %280 = xor i1 %279, true
  %281 = xor i1 %280, true
  %282 = zext i1 %281 to i32
  %283 = sext i32 %282 to i64
  %284 = call i64 @llvm.expect.i64(i64 %283, i64 0)
  %285 = icmp ne i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %276
  br label %305

287:                                              ; preds = %276
  br label %288

288:                                              ; preds = %287, %273
  %289 = load %3*, %3** %17, align 8
  %290 = getelementptr inbounds %3, %3* %289, i32 1
  store %3* %290, %3** %17, align 8
  %291 = load %3*, %3** %17, align 8
  store %3* %291, %3** %18, align 8
  %292 = load %3*, %3** %18, align 8
  %293 = call i32 @149(%3* %292, i64* %10, i8* %21, i32 0, i32 0)
  %294 = icmp ne i32 %293, 0
  %295 = xor i1 %294, true
  %296 = xor i1 %295, true
  %297 = xor i1 %296, true
  %298 = zext i1 %297 to i32
  %299 = sext i32 %298 to i64
  %300 = call i64 @llvm.expect.i64(i64 %299, i64 0)
  %301 = icmp ne i64 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %288
  store i32 0, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %305

303:                                              ; preds = %288
  br label %304

304:                                              ; preds = %303
  br label %305

305:                                              ; preds = %304, %302, %286, %232, %216, %162, %146, %86
  %306 = load i32, i32* %23, align 4
  %307 = icmp ne i32 %306, 0
  %308 = xor i1 %307, true
  %309 = xor i1 %308, true
  %310 = zext i1 %309 to i32
  %311 = sext i32 %310 to i64
  %312 = call i64 @llvm.expect.i64(i64 %311, i64 0)
  %313 = icmp ne i64 %312, 0
  br i1 %313, label %314, label %343

314:                                              ; preds = %305
  %315 = load i32, i32* %23, align 4
  %316 = icmp eq i32 %315, 2
  br i1 %316, label %317, label %320

317:                                              ; preds = %314
  %318 = load i32, i32* %16, align 4
  %319 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %318, i8* %319)
  br label %336

320:                                              ; preds = %314
  %321 = load i32, i32* %23, align 4
  %322 = icmp eq i32 %321, 3
  br i1 %322, label %323, label %327

323:                                              ; preds = %320
  %324 = load i32, i32* %16, align 4
  %325 = load i8*, i8** %20, align 8
  %326 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %324, i8* %325, %3* %326)
  br label %335

327:                                              ; preds = %320
  %328 = load i32, i32* %23, align 4
  %329 = icmp eq i32 %328, 4
  br i1 %329, label %330, label %334

330:                                              ; preds = %327
  %331 = load i32, i32* %16, align 4
  %332 = load i32, i32* %19, align 4
  %333 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %331, i32 %332, %3* %333)
  br label %334

334:                                              ; preds = %330, %327
  br label %335

335:                                              ; preds = %334, %323
  br label %336

336:                                              ; preds = %335, %317
  br label %337

337:                                              ; preds = %336
  %338 = load %3*, %3** %4, align 8
  %339 = getelementptr inbounds %3, %3* %338, i32 0, i32 1
  %340 = bitcast %5* %339 to i32*
  store i32 2, i32* %340, align 8
  br label %341

341:                                              ; preds = %337
  br label %342

342:                                              ; preds = %341
  store i32 1, i32* %24, align 4
  br label %344

343:                                              ; preds = %305
  store i32 0, i32* %24, align 4
  br label %344

344:                                              ; preds = %343, %342
  %345 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #11
  %346 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %346) #11
  %347 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %347) #11
  %348 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %348) #11
  %349 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %349) #11
  %350 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %350) #11
  %351 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #11
  %352 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #11
  %353 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %353) #11
  %354 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %354) #11
  %355 = load i32, i32* %24, align 4
  switch i32 %355, label %444 [
    i32 0, label %356
  ]

356:                                              ; preds = %344
  br label %357

357:                                              ; preds = %356
  br label %358

358:                                              ; preds = %357
  %359 = load %28*, %28** %3, align 8
  %360 = getelementptr inbounds %28, %28* %359, i32 0, i32 4
  %361 = getelementptr inbounds %3, %3* %360, i32 0, i32 2
  %362 = bitcast %6* %361 to i32*
  %363 = load i32, i32* %362, align 4
  %364 = icmp eq i32 %363, 2
  br i1 %364, label %365, label %367

365:                                              ; preds = %358
  %366 = load i64, i64* %7, align 8
  store i64 %366, i64* %9, align 8
  br label %382

367:                                              ; preds = %358
  %368 = load i64, i64* %10, align 8
  %369 = icmp sle i64 %368, 0
  br i1 %369, label %370, label %371

370:                                              ; preds = %367
  store i64 0, i64* %9, align 8
  br label %381

371:                                              ; preds = %367
  %372 = load i64, i64* %10, align 8
  %373 = load i64, i64* %7, align 8
  %374 = icmp ult i64 %372, %373
  br i1 %374, label %375, label %377

375:                                              ; preds = %371
  %376 = load i64, i64* %10, align 8
  br label %379

377:                                              ; preds = %371
  %378 = load i64, i64* %7, align 8
  br label %379

379:                                              ; preds = %377, %375
  %380 = phi i64 [ %376, %375 ], [ %378, %377 ]
  store i64 %380, i64* %9, align 8
  br label %381

381:                                              ; preds = %379, %370
  br label %382

382:                                              ; preds = %381, %365
  %383 = load i64, i64* %9, align 8
  %384 = icmp ne i64 %383, 0
  br i1 %384, label %395, label %385

385:                                              ; preds = %382
  %386 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %386) #11
  %387 = load %3*, %3** %4, align 8
  store %3* %387, %3** %25, align 8
  %388 = load %3*, %3** %25, align 8
  %389 = getelementptr inbounds %3, %3* %388, i32 0, i32 0
  %390 = bitcast %4* %389 to i64*
  store i64 0, i64* %390, align 8
  %391 = load %3*, %3** %25, align 8
  %392 = getelementptr inbounds %3, %3* %391, i32 0, i32 1
  %393 = bitcast %5* %392 to i32*
  store i32 4, i32* %393, align 8
  %394 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %394) #11
  store i32 1, i32* %24, align 4
  br label %444

395:                                              ; preds = %382
  br label %396

396:                                              ; preds = %395
  %397 = load %3*, %3** %5, align 8
  %398 = call zeroext i8 @150(%3* %397)
  %399 = zext i8 %398 to i32
  %400 = icmp eq i32 %399, 9
  %401 = xor i1 %400, true
  %402 = zext i1 %401 to i32
  %403 = sext i32 %402 to i64
  %404 = call i64 @llvm.expect.i64(i64 %403, i64 0)
  %405 = icmp ne i64 %404, 0
  br i1 %405, label %406, label %407

406:                                              ; preds = %396
  unreachable

407:                                              ; preds = %396
  br label %408

408:                                              ; preds = %407
  br label %409

409:                                              ; preds = %408
  br label %410

410:                                              ; preds = %409
  %411 = load %3*, %3** %5, align 8
  %412 = getelementptr inbounds %3, %3* %411, i32 0, i32 0
  %413 = bitcast %4* %412 to %7**
  %414 = load %7*, %7** %413, align 8
  %415 = call i32 @php_file_le_stream()
  %416 = call i32 @php_file_le_pstream()
  %417 = call i8* @zend_fetch_resource2(%7* %414, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %415, i32 %416)
  %418 = bitcast i8* %417 to %53*
  store %53* %418, %53** %11, align 8
  %419 = icmp eq %53* %418, null
  br i1 %419, label %420, label %427

420:                                              ; preds = %410
  br label %421

421:                                              ; preds = %420
  %422 = load %3*, %3** %4, align 8
  %423 = getelementptr inbounds %3, %3* %422, i32 0, i32 1
  %424 = bitcast %5* %423 to i32*
  store i32 2, i32* %424, align 8
  br label %425

425:                                              ; preds = %421
  br label %426

426:                                              ; preds = %425
  store i32 1, i32* %24, align 4
  br label %444

427:                                              ; preds = %410
  br label %428

428:                                              ; preds = %427
  br label %429

429:                                              ; preds = %428
  %430 = load %53*, %53** %11, align 8
  %431 = load i8*, i8** %6, align 8
  %432 = load i64, i64* %9, align 8
  %433 = call i64 @_php_stream_write(%53* %430, i8* %431, i64 %432)
  store i64 %433, i64* %8, align 8
  %434 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %434) #11
  %435 = load %3*, %3** %4, align 8
  store %3* %435, %3** %26, align 8
  %436 = load i64, i64* %8, align 8
  %437 = load %3*, %3** %26, align 8
  %438 = getelementptr inbounds %3, %3* %437, i32 0, i32 0
  %439 = bitcast %4* %438 to i64*
  store i64 %436, i64* %439, align 8
  %440 = load %3*, %3** %26, align 8
  %441 = getelementptr inbounds %3, %3* %440, i32 0, i32 1
  %442 = bitcast %5* %441 to i32*
  store i32 4, i32* %442, align 8
  %443 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %443) #11
  store i32 1, i32* %24, align 4
  br label %444

444:                                              ; preds = %429, %426, %385, %344
  %445 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %445) #11
  %446 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %446) #11
  %447 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %447) #11
  %448 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %448) #11
  %449 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %449) #11
  %450 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %450) #11
  %451 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %451) #11
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zif_fflush(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %53*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %3*, align 8
  %14 = alloca %3*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %21 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #11
  %22 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #11
  %23 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #11
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  store i32 1, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #11
  store i32 1, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #11
  %29 = load %28*, %28** %3, align 8
  %30 = getelementptr inbounds %28, %28* %29, i32 0, i32 4
  %31 = getelementptr inbounds %3, %3* %30, i32 0, i32 2
  %32 = bitcast %6* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #11
  %35 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  %36 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  store %3* null, %3** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #11
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #11
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %3*, %3** %13, align 8
  %42 = load %3*, %3** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %155

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %28*, %28** %3, align 8
  %82 = bitcast %28* %81 to %3*
  %83 = getelementptr inbounds %3, %3* %82, i64 4
  store %3* %83, %3** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %155

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %3*, %3** %13, align 8
  %140 = getelementptr inbounds %3, %3* %139, i32 1
  store %3* %140, %3** %13, align 8
  %141 = load %3*, %3** %13, align 8
  store %3* %141, %3** %14, align 8
  %142 = load %3*, %3** %14, align 8
  %143 = call i32 @148(%3* %142, %3** %5, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 5, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %155

153:                                              ; preds = %138
  br label %154

154:                                              ; preds = %153
  br label %155

155:                                              ; preds = %154, %152, %136, %76
  %156 = load i32, i32* %19, align 4
  %157 = icmp ne i32 %156, 0
  %158 = xor i1 %157, true
  %159 = xor i1 %158, true
  %160 = zext i1 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = call i64 @llvm.expect.i64(i64 %161, i64 0)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %193

164:                                              ; preds = %155
  %165 = load i32, i32* %19, align 4
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i32, i32* %12, align 4
  %169 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %168, i8* %169)
  br label %186

170:                                              ; preds = %164
  %171 = load i32, i32* %19, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = load i32, i32* %12, align 4
  %175 = load i8*, i8** %16, align 8
  %176 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %174, i8* %175, %3* %176)
  br label %185

177:                                              ; preds = %170
  %178 = load i32, i32* %19, align 4
  %179 = icmp eq i32 %178, 4
  br i1 %179, label %180, label %184

180:                                              ; preds = %177
  %181 = load i32, i32* %12, align 4
  %182 = load i32, i32* %15, align 4
  %183 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %181, i32 %182, %3* %183)
  br label %184

184:                                              ; preds = %180, %177
  br label %185

185:                                              ; preds = %184, %173
  br label %186

186:                                              ; preds = %185, %167
  br label %187

187:                                              ; preds = %186
  %188 = load %3*, %3** %4, align 8
  %189 = getelementptr inbounds %3, %3* %188, i32 0, i32 1
  %190 = bitcast %5* %189 to i32*
  store i32 2, i32* %190, align 8
  br label %191

191:                                              ; preds = %187
  br label %192

192:                                              ; preds = %191
  store i32 1, i32* %20, align 4
  br label %194

193:                                              ; preds = %155
  store i32 0, i32* %20, align 4
  br label %194

194:                                              ; preds = %193, %192
  %195 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  %196 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #11
  %197 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #11
  %198 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %198) #11
  %199 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #11
  %200 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #11
  %201 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #11
  %202 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #11
  %203 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #11
  %204 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #11
  %205 = load i32, i32* %20, align 4
  switch i32 %205, label %261 [
    i32 0, label %206
  ]

206:                                              ; preds = %194
  br label %207

207:                                              ; preds = %206
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  %210 = load %3*, %3** %5, align 8
  %211 = call zeroext i8 @150(%3* %210)
  %212 = zext i8 %211 to i32
  %213 = icmp eq i32 %212, 9
  %214 = xor i1 %213, true
  %215 = zext i1 %214 to i32
  %216 = sext i32 %215 to i64
  %217 = call i64 @llvm.expect.i64(i64 %216, i64 0)
  %218 = icmp ne i64 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %209
  unreachable

220:                                              ; preds = %209
  br label %221

221:                                              ; preds = %220
  br label %222

222:                                              ; preds = %221
  br label %223

223:                                              ; preds = %222
  %224 = load %3*, %3** %5, align 8
  %225 = getelementptr inbounds %3, %3* %224, i32 0, i32 0
  %226 = bitcast %4* %225 to %7**
  %227 = load %7*, %7** %226, align 8
  %228 = call i32 @php_file_le_stream()
  %229 = call i32 @php_file_le_pstream()
  %230 = call i8* @zend_fetch_resource2(%7* %227, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %228, i32 %229)
  %231 = bitcast i8* %230 to %53*
  store %53* %231, %53** %7, align 8
  %232 = icmp eq %53* %231, null
  br i1 %232, label %233, label %240

233:                                              ; preds = %223
  br label %234

234:                                              ; preds = %233
  %235 = load %3*, %3** %4, align 8
  %236 = getelementptr inbounds %3, %3* %235, i32 0, i32 1
  %237 = bitcast %5* %236 to i32*
  store i32 2, i32* %237, align 8
  br label %238

238:                                              ; preds = %234
  br label %239

239:                                              ; preds = %238
  store i32 1, i32* %20, align 4
  br label %261

240:                                              ; preds = %223
  br label %241

241:                                              ; preds = %240
  br label %242

242:                                              ; preds = %241
  %243 = load %53*, %53** %7, align 8
  %244 = call i32 @_php_stream_flush(%53* %243, i32 0)
  store i32 %244, i32* %6, align 4
  %245 = load i32, i32* %6, align 4
  %246 = icmp ne i32 %245, 0
  br i1 %246, label %247, label %254

247:                                              ; preds = %242
  br label %248

248:                                              ; preds = %247
  %249 = load %3*, %3** %4, align 8
  %250 = getelementptr inbounds %3, %3* %249, i32 0, i32 1
  %251 = bitcast %5* %250 to i32*
  store i32 2, i32* %251, align 8
  br label %252

252:                                              ; preds = %248
  br label %253

253:                                              ; preds = %252
  store i32 1, i32* %20, align 4
  br label %261

254:                                              ; preds = %242
  br label %255

255:                                              ; preds = %254
  %256 = load %3*, %3** %4, align 8
  %257 = getelementptr inbounds %3, %3* %256, i32 0, i32 1
  %258 = bitcast %5* %257 to i32*
  store i32 3, i32* %258, align 8
  br label %259

259:                                              ; preds = %255
  br label %260

260:                                              ; preds = %259
  store i32 1, i32* %20, align 4
  br label %261

261:                                              ; preds = %260, %253, %239, %194
  %262 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #11
  %263 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %263) #11
  %264 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #11
  ret void
}

declare dso_local i32 @_php_stream_flush(%53*, i32) #1

; Function Attrs: nounwind uwtable
define dso_local void @zif_rewind(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca %53*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %3*, align 8
  %13 = alloca %3*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %20 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #11
  %21 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #11
  br label %22

22:                                               ; preds = %2
  %23 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #11
  store i32 0, i32* %7, align 4
  %24 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #11
  store i32 1, i32* %8, align 4
  %25 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #11
  store i32 1, i32* %9, align 4
  %26 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  %27 = load %28*, %28** %3, align 8
  %28 = getelementptr inbounds %28, %28* %27, i32 0, i32 4
  %29 = getelementptr inbounds %3, %3* %28, i32 0, i32 2
  %30 = bitcast %6* %29 to i32*
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %10, align 4
  %32 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  %33 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  %34 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  store %3* null, %3** %13, align 8
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  store i32 0, i32* %14, align 4
  %36 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  store i8 0, i8* %17, align 1
  %37 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 0, i32* %18, align 4
  %38 = load i32, i32* %11, align 4
  %39 = load %3*, %3** %12, align 8
  %40 = load %3*, %3** %13, align 8
  %41 = load i32, i32* %14, align 4
  %42 = load i8*, i8** %15, align 8
  %43 = load i8, i8* %16, align 1
  %44 = load i8, i8* %17, align 1
  br label %45

45:                                               ; preds = %22
  %46 = load i32, i32* %10, align 4
  %47 = load i32, i32* %8, align 4
  %48 = icmp slt i32 %46, %47
  %49 = xor i1 %48, true
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = sext i32 %51 to i64
  %53 = call i64 @llvm.expect.i64(i64 %52, i64 0)
  %54 = icmp ne i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %45
  %56 = load i32, i32* %10, align 4
  %57 = load i32, i32* %9, align 4
  %58 = icmp sgt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %78

65:                                               ; preds = %55
  %66 = load i32, i32* %9, align 4
  %67 = icmp sge i32 %66, 0
  %68 = xor i1 %67, true
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = sext i32 %70 to i64
  %72 = call i64 @llvm.expect.i64(i64 %71, i64 1)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %65, %45
  %75 = load i32, i32* %10, align 4
  %76 = load i32, i32* %8, align 4
  %77 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %75, i32 %76, i32 %77)
  store i32 1, i32* %18, align 4
  br label %153

78:                                               ; preds = %65, %55
  store i32 0, i32* %11, align 4
  %79 = load %28*, %28** %3, align 8
  %80 = bitcast %28* %79 to %3*
  %81 = getelementptr inbounds %3, %3* %80, i64 4
  store %3* %81, %3** %12, align 8
  %82 = load i32, i32* %11, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %11, align 4
  br label %84

84:                                               ; preds = %78
  %85 = load i32, i32* %11, align 4
  %86 = load i32, i32* %8, align 4
  %87 = icmp sle i32 %85, %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = load i8, i8* %17, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp eq i32 %90, 1
  br label %92

92:                                               ; preds = %88, %84
  %93 = phi i1 [ true, %84 ], [ %91, %88 ]
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %92
  unreachable

100:                                              ; preds = %92
  br label %101

101:                                              ; preds = %100
  br label %102

102:                                              ; preds = %101
  br label %103

103:                                              ; preds = %102
  %104 = load i32, i32* %11, align 4
  %105 = load i32, i32* %8, align 4
  %106 = icmp sgt i32 %104, %105
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8, i8* %17, align 1
  %109 = zext i8 %108 to i32
  %110 = icmp eq i32 %109, 0
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i1 [ true, %103 ], [ %110, %107 ]
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 0)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %111
  unreachable

119:                                              ; preds = %111
  br label %120

120:                                              ; preds = %119
  br label %121

121:                                              ; preds = %120
  %122 = load i8, i8* %17, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %121
  %125 = load i32, i32* %11, align 4
  %126 = load i32, i32* %10, align 4
  %127 = icmp sgt i32 %125, %126
  %128 = xor i1 %127, true
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = sext i32 %130 to i64
  %132 = call i64 @llvm.expect.i64(i64 %131, i64 0)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  br label %153

135:                                              ; preds = %124
  br label %136

136:                                              ; preds = %135, %121
  %137 = load %3*, %3** %12, align 8
  %138 = getelementptr inbounds %3, %3* %137, i32 1
  store %3* %138, %3** %12, align 8
  %139 = load %3*, %3** %12, align 8
  store %3* %139, %3** %13, align 8
  %140 = load %3*, %3** %13, align 8
  %141 = call i32 @148(%3* %140, %3** %5, i32 0)
  %142 = icmp ne i32 %141, 0
  %143 = xor i1 %142, true
  %144 = xor i1 %143, true
  %145 = xor i1 %144, true
  %146 = zext i1 %145 to i32
  %147 = sext i32 %146 to i64
  %148 = call i64 @llvm.expect.i64(i64 %147, i64 0)
  %149 = icmp ne i64 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %136
  store i32 5, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %153

151:                                              ; preds = %136
  br label %152

152:                                              ; preds = %151
  br label %153

153:                                              ; preds = %152, %150, %134, %74
  %154 = load i32, i32* %18, align 4
  %155 = icmp ne i32 %154, 0
  %156 = xor i1 %155, true
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %191

162:                                              ; preds = %153
  %163 = load i32, i32* %18, align 4
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load i32, i32* %11, align 4
  %167 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %166, i8* %167)
  br label %184

168:                                              ; preds = %162
  %169 = load i32, i32* %18, align 4
  %170 = icmp eq i32 %169, 3
  br i1 %170, label %171, label %175

171:                                              ; preds = %168
  %172 = load i32, i32* %11, align 4
  %173 = load i8*, i8** %15, align 8
  %174 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %172, i8* %173, %3* %174)
  br label %183

175:                                              ; preds = %168
  %176 = load i32, i32* %18, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %11, align 4
  %180 = load i32, i32* %14, align 4
  %181 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %179, i32 %180, %3* %181)
  br label %182

182:                                              ; preds = %178, %175
  br label %183

183:                                              ; preds = %182, %171
  br label %184

184:                                              ; preds = %183, %165
  br label %185

185:                                              ; preds = %184
  %186 = load %3*, %3** %4, align 8
  %187 = getelementptr inbounds %3, %3* %186, i32 0, i32 1
  %188 = bitcast %5* %187 to i32*
  store i32 2, i32* %188, align 8
  br label %189

189:                                              ; preds = %185
  br label %190

190:                                              ; preds = %189
  store i32 1, i32* %19, align 4
  br label %192

191:                                              ; preds = %153
  store i32 0, i32* %19, align 4
  br label %192

192:                                              ; preds = %191, %190
  %193 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #11
  %194 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #11
  %195 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %195) #11
  %196 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #11
  %197 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #11
  %198 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #11
  %199 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #11
  %200 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #11
  %201 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #11
  %202 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #11
  %203 = load i32, i32* %19, align 4
  switch i32 %203, label %258 [
    i32 0, label %204
  ]

204:                                              ; preds = %192
  br label %205

205:                                              ; preds = %204
  br label %206

206:                                              ; preds = %205
  br label %207

207:                                              ; preds = %206
  %208 = load %3*, %3** %5, align 8
  %209 = call zeroext i8 @150(%3* %208)
  %210 = zext i8 %209 to i32
  %211 = icmp eq i32 %210, 9
  %212 = xor i1 %211, true
  %213 = zext i1 %212 to i32
  %214 = sext i32 %213 to i64
  %215 = call i64 @llvm.expect.i64(i64 %214, i64 0)
  %216 = icmp ne i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %207
  unreachable

218:                                              ; preds = %207
  br label %219

219:                                              ; preds = %218
  br label %220

220:                                              ; preds = %219
  br label %221

221:                                              ; preds = %220
  %222 = load %3*, %3** %5, align 8
  %223 = getelementptr inbounds %3, %3* %222, i32 0, i32 0
  %224 = bitcast %4* %223 to %7**
  %225 = load %7*, %7** %224, align 8
  %226 = call i32 @php_file_le_stream()
  %227 = call i32 @php_file_le_pstream()
  %228 = call i8* @zend_fetch_resource2(%7* %225, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %226, i32 %227)
  %229 = bitcast i8* %228 to %53*
  store %53* %229, %53** %6, align 8
  %230 = icmp eq %53* %229, null
  br i1 %230, label %231, label %238

231:                                              ; preds = %221
  br label %232

232:                                              ; preds = %231
  %233 = load %3*, %3** %4, align 8
  %234 = getelementptr inbounds %3, %3* %233, i32 0, i32 1
  %235 = bitcast %5* %234 to i32*
  store i32 2, i32* %235, align 8
  br label %236

236:                                              ; preds = %232
  br label %237

237:                                              ; preds = %236
  store i32 1, i32* %19, align 4
  br label %258

238:                                              ; preds = %221
  br label %239

239:                                              ; preds = %238
  br label %240

240:                                              ; preds = %239
  %241 = load %53*, %53** %6, align 8
  %242 = call i32 @_php_stream_seek(%53* %241, i64 0, i32 0)
  %243 = icmp eq i32 -1, %242
  br i1 %243, label %244, label %251

244:                                              ; preds = %240
  br label %245

245:                                              ; preds = %244
  %246 = load %3*, %3** %4, align 8
  %247 = getelementptr inbounds %3, %3* %246, i32 0, i32 1
  %248 = bitcast %5* %247 to i32*
  store i32 2, i32* %248, align 8
  br label %249

249:                                              ; preds = %245
  br label %250

250:                                              ; preds = %249
  store i32 1, i32* %19, align 4
  br label %258

251:                                              ; preds = %240
  br label %252

252:                                              ; preds = %251
  %253 = load %3*, %3** %4, align 8
  %254 = getelementptr inbounds %3, %3* %253, i32 0, i32 1
  %255 = bitcast %5* %254 to i32*
  store i32 3, i32* %255, align 8
  br label %256

256:                                              ; preds = %252
  br label %257

257:                                              ; preds = %256
  store i32 1, i32* %19, align 4
  br label %258

258:                                              ; preds = %257, %250, %237, %192
  %259 = bitcast %53** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #11
  %260 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #11
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @zif_ftell(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %53*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %3*, align 8
  %14 = alloca %3*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %22 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #11
  %23 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  %24 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  br label %25

25:                                               ; preds = %2
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  store i32 0, i32* %8, align 4
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #11
  store i32 1, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #11
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  %30 = load %28*, %28** %3, align 8
  %31 = getelementptr inbounds %28, %28* %30, i32 0, i32 4
  %32 = getelementptr inbounds %3, %3* %31, i32 0, i32 2
  %33 = bitcast %6* %32 to i32*
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %11, align 4
  %35 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  %36 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  %37 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  store %3* null, %3** %14, align 8
  %38 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  store i32 0, i32* %15, align 4
  %39 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #11
  store i8 0, i8* %18, align 1
  %40 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #11
  store i32 0, i32* %19, align 4
  %41 = load i32, i32* %12, align 4
  %42 = load %3*, %3** %13, align 8
  %43 = load %3*, %3** %14, align 8
  %44 = load i32, i32* %15, align 4
  %45 = load i8*, i8** %16, align 8
  %46 = load i8, i8* %17, align 1
  %47 = load i8, i8* %18, align 1
  br label %48

48:                                               ; preds = %25
  %49 = load i32, i32* %11, align 4
  %50 = load i32, i32* %9, align 4
  %51 = icmp slt i32 %49, %50
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 0)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %77, label %58

58:                                               ; preds = %48
  %59 = load i32, i32* %11, align 4
  %60 = load i32, i32* %10, align 4
  %61 = icmp sgt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %58
  %69 = load i32, i32* %10, align 4
  %70 = icmp sge i32 %69, 0
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 1)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %68, %48
  %78 = load i32, i32* %11, align 4
  %79 = load i32, i32* %9, align 4
  %80 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %78, i32 %79, i32 %80)
  store i32 1, i32* %19, align 4
  br label %156

81:                                               ; preds = %68, %58
  store i32 0, i32* %12, align 4
  %82 = load %28*, %28** %3, align 8
  %83 = bitcast %28* %82 to %3*
  %84 = getelementptr inbounds %3, %3* %83, i64 4
  store %3* %84, %3** %13, align 8
  %85 = load i32, i32* %12, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %12, align 4
  br label %87

87:                                               ; preds = %81
  %88 = load i32, i32* %12, align 4
  %89 = load i32, i32* %9, align 4
  %90 = icmp sle i32 %88, %89
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = load i8, i8* %18, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 1
  br label %95

95:                                               ; preds = %91, %87
  %96 = phi i1 [ true, %87 ], [ %94, %91 ]
  %97 = xor i1 %96, true
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = call i64 @llvm.expect.i64(i64 %99, i64 0)
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %95
  unreachable

103:                                              ; preds = %95
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  %107 = load i32, i32* %12, align 4
  %108 = load i32, i32* %9, align 4
  %109 = icmp sgt i32 %107, %108
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = load i8, i8* %18, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 0
  br label %114

114:                                              ; preds = %110, %106
  %115 = phi i1 [ true, %106 ], [ %113, %110 ]
  %116 = xor i1 %115, true
  %117 = zext i1 %116 to i32
  %118 = sext i32 %117 to i64
  %119 = call i64 @llvm.expect.i64(i64 %118, i64 0)
  %120 = icmp ne i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  unreachable

122:                                              ; preds = %114
  br label %123

123:                                              ; preds = %122
  br label %124

124:                                              ; preds = %123
  %125 = load i8, i8* %18, align 1
  %126 = icmp ne i8 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %124
  %128 = load i32, i32* %12, align 4
  %129 = load i32, i32* %11, align 4
  %130 = icmp sgt i32 %128, %129
  %131 = xor i1 %130, true
  %132 = xor i1 %131, true
  %133 = zext i1 %132 to i32
  %134 = sext i32 %133 to i64
  %135 = call i64 @llvm.expect.i64(i64 %134, i64 0)
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %127
  br label %156

138:                                              ; preds = %127
  br label %139

139:                                              ; preds = %138, %124
  %140 = load %3*, %3** %13, align 8
  %141 = getelementptr inbounds %3, %3* %140, i32 1
  store %3* %141, %3** %13, align 8
  %142 = load %3*, %3** %13, align 8
  store %3* %142, %3** %14, align 8
  %143 = load %3*, %3** %14, align 8
  %144 = call i32 @148(%3* %143, %3** %5, i32 0)
  %145 = icmp ne i32 %144, 0
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 0)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %139
  store i32 5, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %156

154:                                              ; preds = %139
  br label %155

155:                                              ; preds = %154
  br label %156

156:                                              ; preds = %155, %153, %137, %77
  %157 = load i32, i32* %19, align 4
  %158 = icmp ne i32 %157, 0
  %159 = xor i1 %158, true
  %160 = xor i1 %159, true
  %161 = zext i1 %160 to i32
  %162 = sext i32 %161 to i64
  %163 = call i64 @llvm.expect.i64(i64 %162, i64 0)
  %164 = icmp ne i64 %163, 0
  br i1 %164, label %165, label %194

165:                                              ; preds = %156
  %166 = load i32, i32* %19, align 4
  %167 = icmp eq i32 %166, 2
  br i1 %167, label %168, label %171

168:                                              ; preds = %165
  %169 = load i32, i32* %12, align 4
  %170 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %169, i8* %170)
  br label %187

171:                                              ; preds = %165
  %172 = load i32, i32* %19, align 4
  %173 = icmp eq i32 %172, 3
  br i1 %173, label %174, label %178

174:                                              ; preds = %171
  %175 = load i32, i32* %12, align 4
  %176 = load i8*, i8** %16, align 8
  %177 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %175, i8* %176, %3* %177)
  br label %186

178:                                              ; preds = %171
  %179 = load i32, i32* %19, align 4
  %180 = icmp eq i32 %179, 4
  br i1 %180, label %181, label %185

181:                                              ; preds = %178
  %182 = load i32, i32* %12, align 4
  %183 = load i32, i32* %15, align 4
  %184 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %182, i32 %183, %3* %184)
  br label %185

185:                                              ; preds = %181, %178
  br label %186

186:                                              ; preds = %185, %174
  br label %187

187:                                              ; preds = %186, %168
  br label %188

188:                                              ; preds = %187
  %189 = load %3*, %3** %4, align 8
  %190 = getelementptr inbounds %3, %3* %189, i32 0, i32 1
  %191 = bitcast %5* %190 to i32*
  store i32 2, i32* %191, align 8
  br label %192

192:                                              ; preds = %188
  br label %193

193:                                              ; preds = %192
  store i32 1, i32* %20, align 4
  br label %195

194:                                              ; preds = %156
  store i32 0, i32* %20, align 4
  br label %195

195:                                              ; preds = %194, %193
  %196 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  %197 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #11
  %198 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #11
  %199 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #11
  %200 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #11
  %201 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #11
  %202 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #11
  %203 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #11
  %204 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #11
  %205 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %205) #11
  %206 = load i32, i32* %20, align 4
  switch i32 %206, label %266 [
    i32 0, label %207
  ]

207:                                              ; preds = %195
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  br label %210

210:                                              ; preds = %209
  %211 = load %3*, %3** %5, align 8
  %212 = call zeroext i8 @150(%3* %211)
  %213 = zext i8 %212 to i32
  %214 = icmp eq i32 %213, 9
  %215 = xor i1 %214, true
  %216 = zext i1 %215 to i32
  %217 = sext i32 %216 to i64
  %218 = call i64 @llvm.expect.i64(i64 %217, i64 0)
  %219 = icmp ne i64 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %210
  unreachable

221:                                              ; preds = %210
  br label %222

222:                                              ; preds = %221
  br label %223

223:                                              ; preds = %222
  br label %224

224:                                              ; preds = %223
  %225 = load %3*, %3** %5, align 8
  %226 = getelementptr inbounds %3, %3* %225, i32 0, i32 0
  %227 = bitcast %4* %226 to %7**
  %228 = load %7*, %7** %227, align 8
  %229 = call i32 @php_file_le_stream()
  %230 = call i32 @php_file_le_pstream()
  %231 = call i8* @zend_fetch_resource2(%7* %228, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %229, i32 %230)
  %232 = bitcast i8* %231 to %53*
  store %53* %232, %53** %7, align 8
  %233 = icmp eq %53* %232, null
  br i1 %233, label %234, label %241

234:                                              ; preds = %224
  br label %235

235:                                              ; preds = %234
  %236 = load %3*, %3** %4, align 8
  %237 = getelementptr inbounds %3, %3* %236, i32 0, i32 1
  %238 = bitcast %5* %237 to i32*
  store i32 2, i32* %238, align 8
  br label %239

239:                                              ; preds = %235
  br label %240

240:                                              ; preds = %239
  store i32 1, i32* %20, align 4
  br label %266

241:                                              ; preds = %224
  br label %242

242:                                              ; preds = %241
  br label %243

243:                                              ; preds = %242
  %244 = load %53*, %53** %7, align 8
  %245 = call i64 @_php_stream_tell(%53* %244)
  store i64 %245, i64* %6, align 8
  %246 = load i64, i64* %6, align 8
  %247 = icmp eq i64 %246, -1
  br i1 %247, label %248, label %255

248:                                              ; preds = %243
  br label %249

249:                                              ; preds = %248
  %250 = load %3*, %3** %4, align 8
  %251 = getelementptr inbounds %3, %3* %250, i32 0, i32 1
  %252 = bitcast %5* %251 to i32*
  store i32 2, i32* %252, align 8
  br label %253

253:                                              ; preds = %249
  br label %254

254:                                              ; preds = %253
  store i32 1, i32* %20, align 4
  br label %266

255:                                              ; preds = %243
  %256 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %256) #11
  %257 = load %3*, %3** %4, align 8
  store %3* %257, %3** %21, align 8
  %258 = load i64, i64* %6, align 8
  %259 = load %3*, %3** %21, align 8
  %260 = getelementptr inbounds %3, %3* %259, i32 0, i32 0
  %261 = bitcast %4* %260 to i64*
  store i64 %258, i64* %261, align 8
  %262 = load %3*, %3** %21, align 8
  %263 = getelementptr inbounds %3, %3* %262, i32 0, i32 1
  %264 = bitcast %5* %263 to i32*
  store i32 4, i32* %264, align 8
  %265 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %265) #11
  store i32 1, i32* %20, align 4
  br label %266

266:                                              ; preds = %255, %254, %240, %195
  %267 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #11
  %268 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #11
  %269 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %269) #11
  ret void
}

declare dso_local i64 @_php_stream_tell(%53*) #1

; Function Attrs: nounwind uwtable
define dso_local void @zif_fseek(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %53*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %3*, align 8
  %15 = alloca %3*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %23 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  %24 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  %25 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  store i64 0, i64* %7, align 8
  %26 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #11
  br label %27

27:                                               ; preds = %2
  %28 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #11
  store i32 0, i32* %9, align 4
  %29 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  store i32 2, i32* %10, align 4
  %30 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #11
  store i32 3, i32* %11, align 4
  %31 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #11
  %32 = load %28*, %28** %3, align 8
  %33 = getelementptr inbounds %28, %28* %32, i32 0, i32 4
  %34 = getelementptr inbounds %3, %3* %33, i32 0, i32 2
  %35 = bitcast %6* %34 to i32*
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %12, align 4
  %37 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  %38 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  %39 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  store %3* null, %3** %15, align 8
  %40 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #11
  store i32 0, i32* %16, align 4
  %41 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #11
  store i8 0, i8* %19, align 1
  %42 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  store i32 0, i32* %20, align 4
  %43 = load i32, i32* %13, align 4
  %44 = load %3*, %3** %14, align 8
  %45 = load %3*, %3** %15, align 8
  %46 = load i32, i32* %16, align 4
  %47 = load i8*, i8** %17, align 8
  %48 = load i8, i8* %18, align 1
  %49 = load i8, i8* %19, align 1
  br label %50

50:                                               ; preds = %27
  %51 = load i32, i32* %12, align 4
  %52 = load i32, i32* %10, align 4
  %53 = icmp slt i32 %51, %52
  %54 = xor i1 %53, true
  %55 = xor i1 %54, true
  %56 = zext i1 %55 to i32
  %57 = sext i32 %56 to i64
  %58 = call i64 @llvm.expect.i64(i64 %57, i64 0)
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %50
  %61 = load i32, i32* %12, align 4
  %62 = load i32, i32* %11, align 4
  %63 = icmp sgt i32 %61, %62
  %64 = xor i1 %63, true
  %65 = xor i1 %64, true
  %66 = zext i1 %65 to i32
  %67 = sext i32 %66 to i64
  %68 = call i64 @llvm.expect.i64(i64 %67, i64 0)
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %70, label %83

70:                                               ; preds = %60
  %71 = load i32, i32* %11, align 4
  %72 = icmp sge i32 %71, 0
  %73 = xor i1 %72, true
  %74 = xor i1 %73, true
  %75 = zext i1 %74 to i32
  %76 = sext i32 %75 to i64
  %77 = call i64 @llvm.expect.i64(i64 %76, i64 1)
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %70, %50
  %80 = load i32, i32* %12, align 4
  %81 = load i32, i32* %10, align 4
  %82 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %80, i32 %81, i32 %82)
  store i32 1, i32* %20, align 4
  br label %298

83:                                               ; preds = %70, %60
  store i32 0, i32* %13, align 4
  %84 = load %28*, %28** %3, align 8
  %85 = bitcast %28* %84 to %3*
  %86 = getelementptr inbounds %3, %3* %85, i64 4
  store %3* %86, %3** %14, align 8
  %87 = load i32, i32* %13, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %13, align 4
  br label %89

89:                                               ; preds = %83
  %90 = load i32, i32* %13, align 4
  %91 = load i32, i32* %10, align 4
  %92 = icmp sle i32 %90, %91
  br i1 %92, label %97, label %93

93:                                               ; preds = %89
  %94 = load i8, i8* %19, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp eq i32 %95, 1
  br label %97

97:                                               ; preds = %93, %89
  %98 = phi i1 [ true, %89 ], [ %96, %93 ]
  %99 = xor i1 %98, true
  %100 = zext i1 %99 to i32
  %101 = sext i32 %100 to i64
  %102 = call i64 @llvm.expect.i64(i64 %101, i64 0)
  %103 = icmp ne i64 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %97
  unreachable

105:                                              ; preds = %97
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %13, align 4
  %110 = load i32, i32* %10, align 4
  %111 = icmp sgt i32 %109, %110
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  %113 = load i8, i8* %19, align 1
  %114 = zext i8 %113 to i32
  %115 = icmp eq i32 %114, 0
  br label %116

116:                                              ; preds = %112, %108
  %117 = phi i1 [ true, %108 ], [ %115, %112 ]
  %118 = xor i1 %117, true
  %119 = zext i1 %118 to i32
  %120 = sext i32 %119 to i64
  %121 = call i64 @llvm.expect.i64(i64 %120, i64 0)
  %122 = icmp ne i64 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %116
  unreachable

124:                                              ; preds = %116
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  %127 = load i8, i8* %19, align 1
  %128 = icmp ne i8 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %126
  %130 = load i32, i32* %13, align 4
  %131 = load i32, i32* %12, align 4
  %132 = icmp sgt i32 %130, %131
  %133 = xor i1 %132, true
  %134 = xor i1 %133, true
  %135 = zext i1 %134 to i32
  %136 = sext i32 %135 to i64
  %137 = call i64 @llvm.expect.i64(i64 %136, i64 0)
  %138 = icmp ne i64 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %129
  br label %298

140:                                              ; preds = %129
  br label %141

141:                                              ; preds = %140, %126
  %142 = load %3*, %3** %14, align 8
  %143 = getelementptr inbounds %3, %3* %142, i32 1
  store %3* %143, %3** %14, align 8
  %144 = load %3*, %3** %14, align 8
  store %3* %144, %3** %15, align 8
  %145 = load %3*, %3** %15, align 8
  %146 = call i32 @148(%3* %145, %3** %5, i32 0)
  %147 = icmp ne i32 %146, 0
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = zext i1 %150 to i32
  %152 = sext i32 %151 to i64
  %153 = call i64 @llvm.expect.i64(i64 %152, i64 0)
  %154 = icmp ne i64 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %141
  store i32 5, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %298

156:                                              ; preds = %141
  %157 = load i32, i32* %13, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %13, align 4
  br label %159

159:                                              ; preds = %156
  %160 = load i32, i32* %13, align 4
  %161 = load i32, i32* %10, align 4
  %162 = icmp sle i32 %160, %161
  br i1 %162, label %167, label %163

163:                                              ; preds = %159
  %164 = load i8, i8* %19, align 1
  %165 = zext i8 %164 to i32
  %166 = icmp eq i32 %165, 1
  br label %167

167:                                              ; preds = %163, %159
  %168 = phi i1 [ true, %159 ], [ %166, %163 ]
  %169 = xor i1 %168, true
  %170 = zext i1 %169 to i32
  %171 = sext i32 %170 to i64
  %172 = call i64 @llvm.expect.i64(i64 %171, i64 0)
  %173 = icmp ne i64 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %167
  unreachable

175:                                              ; preds = %167
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  br label %178

178:                                              ; preds = %177
  %179 = load i32, i32* %13, align 4
  %180 = load i32, i32* %10, align 4
  %181 = icmp sgt i32 %179, %180
  br i1 %181, label %186, label %182

182:                                              ; preds = %178
  %183 = load i8, i8* %19, align 1
  %184 = zext i8 %183 to i32
  %185 = icmp eq i32 %184, 0
  br label %186

186:                                              ; preds = %182, %178
  %187 = phi i1 [ true, %178 ], [ %185, %182 ]
  %188 = xor i1 %187, true
  %189 = zext i1 %188 to i32
  %190 = sext i32 %189 to i64
  %191 = call i64 @llvm.expect.i64(i64 %190, i64 0)
  %192 = icmp ne i64 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %186
  unreachable

194:                                              ; preds = %186
  br label %195

195:                                              ; preds = %194
  br label %196

196:                                              ; preds = %195
  %197 = load i8, i8* %19, align 1
  %198 = icmp ne i8 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %196
  %200 = load i32, i32* %13, align 4
  %201 = load i32, i32* %12, align 4
  %202 = icmp sgt i32 %200, %201
  %203 = xor i1 %202, true
  %204 = xor i1 %203, true
  %205 = zext i1 %204 to i32
  %206 = sext i32 %205 to i64
  %207 = call i64 @llvm.expect.i64(i64 %206, i64 0)
  %208 = icmp ne i64 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %199
  br label %298

210:                                              ; preds = %199
  br label %211

211:                                              ; preds = %210, %196
  %212 = load %3*, %3** %14, align 8
  %213 = getelementptr inbounds %3, %3* %212, i32 1
  store %3* %213, %3** %14, align 8
  %214 = load %3*, %3** %14, align 8
  store %3* %214, %3** %15, align 8
  %215 = load %3*, %3** %15, align 8
  %216 = call i32 @149(%3* %215, i64* %6, i8* %18, i32 0, i32 0)
  %217 = icmp ne i32 %216, 0
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = zext i1 %220 to i32
  %222 = sext i32 %221 to i64
  %223 = call i64 @llvm.expect.i64(i64 %222, i64 0)
  %224 = icmp ne i64 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %211
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %298

226:                                              ; preds = %211
  store i8 1, i8* %19, align 1
  %227 = load i32, i32* %13, align 4
  %228 = add nsw i32 %227, 1
  store i32 %228, i32* %13, align 4
  br label %229

229:                                              ; preds = %226
  %230 = load i32, i32* %13, align 4
  %231 = load i32, i32* %10, align 4
  %232 = icmp sle i32 %230, %231
  br i1 %232, label %237, label %233

233:                                              ; preds = %229
  %234 = load i8, i8* %19, align 1
  %235 = zext i8 %234 to i32
  %236 = icmp eq i32 %235, 1
  br label %237

237:                                              ; preds = %233, %229
  %238 = phi i1 [ true, %229 ], [ %236, %233 ]
  %239 = xor i1 %238, true
  %240 = zext i1 %239 to i32
  %241 = sext i32 %240 to i64
  %242 = call i64 @llvm.expect.i64(i64 %241, i64 0)
  %243 = icmp ne i64 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %237
  unreachable

245:                                              ; preds = %237
  br label %246

246:                                              ; preds = %245
  br label %247

247:                                              ; preds = %246
  br label %248

248:                                              ; preds = %247
  %249 = load i32, i32* %13, align 4
  %250 = load i32, i32* %10, align 4
  %251 = icmp sgt i32 %249, %250
  br i1 %251, label %256, label %252

252:                                              ; preds = %248
  %253 = load i8, i8* %19, align 1
  %254 = zext i8 %253 to i32
  %255 = icmp eq i32 %254, 0
  br label %256

256:                                              ; preds = %252, %248
  %257 = phi i1 [ true, %248 ], [ %255, %252 ]
  %258 = xor i1 %257, true
  %259 = zext i1 %258 to i32
  %260 = sext i32 %259 to i64
  %261 = call i64 @llvm.expect.i64(i64 %260, i64 0)
  %262 = icmp ne i64 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %256
  unreachable

264:                                              ; preds = %256
  br label %265

265:                                              ; preds = %264
  br label %266

266:                                              ; preds = %265
  %267 = load i8, i8* %19, align 1
  %268 = icmp ne i8 %267, 0
  br i1 %268, label %269, label %281

269:                                              ; preds = %266
  %270 = load i32, i32* %13, align 4
  %271 = load i32, i32* %12, align 4
  %272 = icmp sgt i32 %270, %271
  %273 = xor i1 %272, true
  %274 = xor i1 %273, true
  %275 = zext i1 %274 to i32
  %276 = sext i32 %275 to i64
  %277 = call i64 @llvm.expect.i64(i64 %276, i64 0)
  %278 = icmp ne i64 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %269
  br label %298

280:                                              ; preds = %269
  br label %281

281:                                              ; preds = %280, %266
  %282 = load %3*, %3** %14, align 8
  %283 = getelementptr inbounds %3, %3* %282, i32 1
  store %3* %283, %3** %14, align 8
  %284 = load %3*, %3** %14, align 8
  store %3* %284, %3** %15, align 8
  %285 = load %3*, %3** %15, align 8
  %286 = call i32 @149(%3* %285, i64* %7, i8* %18, i32 0, i32 0)
  %287 = icmp ne i32 %286, 0
  %288 = xor i1 %287, true
  %289 = xor i1 %288, true
  %290 = xor i1 %289, true
  %291 = zext i1 %290 to i32
  %292 = sext i32 %291 to i64
  %293 = call i64 @llvm.expect.i64(i64 %292, i64 0)
  %294 = icmp ne i64 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %281
  store i32 0, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %298

296:                                              ; preds = %281
  br label %297

297:                                              ; preds = %296
  br label %298

298:                                              ; preds = %297, %295, %279, %225, %209, %155, %139, %79
  %299 = load i32, i32* %20, align 4
  %300 = icmp ne i32 %299, 0
  %301 = xor i1 %300, true
  %302 = xor i1 %301, true
  %303 = zext i1 %302 to i32
  %304 = sext i32 %303 to i64
  %305 = call i64 @llvm.expect.i64(i64 %304, i64 0)
  %306 = icmp ne i64 %305, 0
  br i1 %306, label %307, label %336

307:                                              ; preds = %298
  %308 = load i32, i32* %20, align 4
  %309 = icmp eq i32 %308, 2
  br i1 %309, label %310, label %313

310:                                              ; preds = %307
  %311 = load i32, i32* %13, align 4
  %312 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %311, i8* %312)
  br label %329

313:                                              ; preds = %307
  %314 = load i32, i32* %20, align 4
  %315 = icmp eq i32 %314, 3
  br i1 %315, label %316, label %320

316:                                              ; preds = %313
  %317 = load i32, i32* %13, align 4
  %318 = load i8*, i8** %17, align 8
  %319 = load %3*, %3** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %317, i8* %318, %3* %319)
  br label %328

320:                                              ; preds = %313
  %321 = load i32, i32* %20, align 4
  %322 = icmp eq i32 %321, 4
  br i1 %322, label %323, label %327

323:                                              ; preds = %320
  %324 = load i32, i32* %13, align 4
  %325 = load i32, i32* %16, align 4
  %326 = load %3*, %3** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %324, i32 %325, %3* %326)
  br label %327

327:                                              ; preds = %323, %320
  br label %328

328:                                              ; preds = %327, %316
  br label %329

329:                                              ; preds = %328, %310
  br label %330

330:                                              ; preds = %329
  %331 = load %3*, %3** %4, align 8
  %332 = getelementptr inbounds %3, %3* %331, i32 0, i32 1
  %333 = bitcast %5* %332 to i32*
  store i32 2, i32* %333, align 8
  br label %334

334:                                              ; preds = %330
  br label %335

335:                                              ; preds = %334
  store i32 1, i32* %21, align 4
  br label %337

336:                                              ; preds = %298
  store i32 0, i32* %21, align 4
  br label %337

337:                                              ; preds = %336, %335
  %338 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %338) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #11
  %339 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %339) #11
  %340 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %340) #11
  %341 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %341) #11
  %342 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %342) #11
  %343 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %343) #11
  %344 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #11
  %345 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #11
  %346 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %346) #11
  %347 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %347) #11
  %348 = load i32, i32* %21, align 4
  switch i32 %348, label %401 [
    i32 0, label %349
  ]

349:                                              ; preds = %337
  br label %350

350:                                              ; preds = %349
  br label %351

351:                                              ; preds = %350
  br label %352

352:                                              ; preds = %351
  %353 = load %3*, %3** %5, align 8
  %354 = call zeroext i8 @150(%3* %353)
  %355 = zext i8 %354 to i32
  %356 = icmp eq i32 %355, 9
  %357 = xor i1 %356, true
  %358 = zext i1 %357 to i32
  %359 = sext i32 %358 to i64
  %360 = call i64 @llvm.expect.i64(i64 %359, i64 0)
  %361 = icmp ne i64 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %352
  unreachable

363:                                              ; preds = %352
  br label %364

364:                                              ; preds = %363
  br label %365

365:                                              ; preds = %364
  br label %366

366:                                              ; preds = %365
  %367 = load %3*, %3** %5, align 8
  %368 = getelementptr inbounds %3, %3* %367, i32 0, i32 0
  %369 = bitcast %4* %368 to %7**
  %370 = load %7*, %7** %369, align 8
  %371 = call i32 @php_file_le_stream()
  %372 = call i32 @php_file_le_pstream()
  %373 = call i8* @zend_fetch_resource2(%7* %370, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %371, i32 %372)
  %374 = bitcast i8* %373 to %53*
  store %53* %374, %53** %8, align 8
  %375 = icmp eq %53* %374, null
  br i1 %375, label %376, label %383

376:                                              ; preds = %366
  br label %377

377:                                              ; preds = %376
  %378 = load %3*, %3** %4, align 8
  %379 = getelementptr inbounds %3, %3* %378, i32 0, i32 1
  %380 = bitcast %5* %379 to i32*
  store i32 2, i32* %380, align 8
  br label %381

381:                                              ; preds = %377
  br label %382

382:                                              ; preds = %381
  store i32 1, i32* %21, align 4
  br label %401

383:                                              ; preds = %366
  br label %384

384:                                              ; preds = %383
  br label %385

385:                                              ; preds = %384
  %386 = bitcast %3** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %386) #11
  %387 = load %3*, %3** %4, align 8
  store %3* %387, %3** %22, align 8
  %388 = load %53*, %53** %8, align 8
  %389 = load i64, i64* %6, align 8
  %390 = load i64, i64* %7, align 8
  %391 = trunc i64 %390 to i32
  %392 = call i32 @_php_stream_seek(%53* %388, i64 %389, i32 %391)
  %393 = sext i32 %392 to i64
  %394 = load %3*, %3** %22, align 8
  %395 = getelementptr inbounds %3, %3* %394, i32 0, i32 0
  %396 = bitcast %4* %395 to i64*
  store i64 %393, i64* %396, align 8
  %397 = load %3*, %3** %22, align 8
  %398 = getelementptr inbounds %3, %3* %397, i32 0, i32 1
  %399 = bitcast %5* %398 to i32*
  store i32 4, i32* %399, align 8
  %400 = bitcast %3** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %400) #11
  store i32 1, i32* %21, align 4
  br label %401

401:                                              ; preds = %385, %382, %337
  %402 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %402) #11
  %403 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %403) #11
  %404 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %404) #11
  %405 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %405) #11
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @php_mkdir_ex(i8* %0, i64 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #11
  %11 = load i8*, i8** %5, align 8
  %12 = call i32 @php_check_open_basedir(i8* %11)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  store i32 -1, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %31

15:                                               ; preds = %3
  %16 = load i8*, i8** %5, align 8
  %17 = load i64, i64* %6, align 8
  %18 = trunc i64 %17 to i32
  %19 = call i32 @mkdir(i8* %16, i32 %18) #11
  store i32 %19, i32* %8, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %15
  %22 = load i32, i32* %7, align 4
  %23 = and i32 %22, 8
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = call i32* @__errno_location() #12
  %27 = load i32, i32* %26, align 4
  %28 = call i8* @strerror(i32 %27) #11
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @100, i32 0, i32 0), i8* %28)
  br label %29

29:                                               ; preds = %25, %21, %15
  %30 = load i32, i32* %8, align 4
  store i32 %30, i32* %4, align 4
  store i32 1, i32* %9, align 4
  br label %31

31:                                               ; preds = %29, %14
  %32 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32) #11
  %33 = load i32, i32* %4, align 4
  ret i32 %33
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #8

; Function Attrs: nounwind uwtable
define dso_local i32 @php_mkdir(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32 @php_mkdir_ex(i8* %5, i64 %6, i32 8)
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define hidden void @zif_mkdir(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %3*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca %1*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %3*, align 8
  %17 = alloca %3*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %24 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  %25 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  %26 = bitcast %3** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #11
  store %3* null, %3** %7, align 8
  %27 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  store i64 511, i64* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %9) #11
  store i8 0, i8* %9, align 1
  %28 = bitcast %1** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  br label %29

29:                                               ; preds = %2
  %30 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #11
  store i32 0, i32* %11, align 4
  %31 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #11
  store i32 1, i32* %12, align 4
  %32 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  store i32 4, i32* %13, align 4
  %33 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #11
  %34 = load %28*, %28** %3, align 8
  %35 = getelementptr inbounds %28, %28* %34, i32 0, i32 4
  %36 = getelementptr inbounds %3, %3* %35, i32 0, i32 2
  %37 = bitcast %6* %36 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %14, align 4
  %39 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #11
  %40 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  %41 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  store %3* null, %3** %17, align 8
  %42 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  store i32 0, i32* %18, align 4
  %43 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #11
  store i8* null, i8** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #11
  store i8 0, i8* %21, align 1
  %44 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  store i32 0, i32* %22, align 4
  %45 = load i32, i32* %15, align 4
  %46 = load %3*, %3** %16, align 8
  %47 = load %3*, %3** %17, align 8
  %48 = load i32, i32* %18, align 4
  %49 = load i8*, i8** %19, align 8
  %50 = load i8, i8* %20, align 1
  %51 = load i8, i8* %21, align 1
  br label %52

52:                                               ; preds = %29
  %53 = load i32, i32* %14, align 4
  %54 = load i32, i32* %12, align 4
  %55 = icmp slt i32 %53, %54
  %56 = xor i1 %55, true
  %57 = xor i1 %56, true
  %58 = zext i1 %57 to i32
  %59 = sext i32 %58 to i64
  %60 = call i64 @llvm.expect.i64(i64 %59, i64 0)
  %61 = icmp ne i64 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %52
  %63 = load i32, i32* %14, align 4
  %64 = load i32, i32* %13, align 4
  %65 = icmp sgt i32 %63, %64
  %66 = xor i1 %65, true
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0)
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %85

72:                                               ; preds = %62
  %73 = load i32, i32* %13, align 4
  %74 = icmp sge i32 %73, 0
  %75 = xor i1 %74, true
  %76 = xor i1 %75, true
  %77 = zext i1 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = call i64 @llvm.expect.i64(i64 %78, i64 1)
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %72, %52
  %82 = load i32, i32* %14, align 4
  %83 = load i32, i32* %12, align 4
  %84 = load i32, i32* %13, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %82, i32 %83, i32 %84)
  store i32 1, i32* %22, align 4
  br label %370

85:                                               ; preds = %72, %62
  store i32 0, i32* %15, align 4
  %86 = load %28*, %28** %3, align 8
  %87 = bitcast %28* %86 to %3*
  %88 = getelementptr inbounds %3, %3* %87, i64 4
  store %3* %88, %3** %16, align 8
  %89 = load i32, i32* %15, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %15, align 4
  br label %91

91:                                               ; preds = %85
  %92 = load i32, i32* %15, align 4
  %93 = load i32, i32* %12, align 4
  %94 = icmp sle i32 %92, %93
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = load i8, i8* %21, align 1
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %97, 1
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi i1 [ true, %91 ], [ %98, %95 ]
  %101 = xor i1 %100, true
  %102 = zext i1 %101 to i32
  %103 = sext i32 %102 to i64
  %104 = call i64 @llvm.expect.i64(i64 %103, i64 0)
  %105 = icmp ne i64 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %99
  unreachable

107:                                              ; preds = %99
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %15, align 4
  %112 = load i32, i32* %12, align 4
  %113 = icmp sgt i32 %111, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load i8, i8* %21, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp eq i32 %116, 0
  br label %118

118:                                              ; preds = %114, %110
  %119 = phi i1 [ true, %110 ], [ %117, %114 ]
  %120 = xor i1 %119, true
  %121 = zext i1 %120 to i32
  %122 = sext i32 %121 to i64
  %123 = call i64 @llvm.expect.i64(i64 %122, i64 0)
  %124 = icmp ne i64 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %118
  unreachable

126:                                              ; preds = %118
  br label %127

127:                                              ; preds = %126
  br label %128

128:                                              ; preds = %127
  %129 = load i8, i8* %21, align 1
  %130 = icmp ne i8 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %128
  %132 = load i32, i32* %15, align 4
  %133 = load i32, i32* %14, align 4
  %134 = icmp sgt i32 %132, %133
  %135 = xor i1 %134, true
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %131
  br label %370

142:                                              ; preds = %131
  br label %143

143:                                              ; preds = %142, %128
  %144 = load %3*, %3** %16, align 8
  %145 = getelementptr inbounds %3, %3* %144, i32 1
  store %3* %145, %3** %16, align 8
  %146 = load %3*, %3** %16, align 8
  store %3* %146, %3** %17, align 8
  %147 = load %3*, %3** %17, align 8
  %148 = call i32 @152(%3* %147, i8** %5, i64* %6, i32 0)
  %149 = icmp ne i32 %148, 0
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %143
  store i32 6, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %370

158:                                              ; preds = %143
  store i8 1, i8* %21, align 1
  %159 = load i32, i32* %15, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %15, align 4
  br label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %15, align 4
  %163 = load i32, i32* %12, align 4
  %164 = icmp sle i32 %162, %163
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = load i8, i8* %21, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp eq i32 %167, 1
  br label %169

169:                                              ; preds = %165, %161
  %170 = phi i1 [ true, %161 ], [ %168, %165 ]
  %171 = xor i1 %170, true
  %172 = zext i1 %171 to i32
  %173 = sext i32 %172 to i64
  %174 = call i64 @llvm.expect.i64(i64 %173, i64 0)
  %175 = icmp ne i64 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %169
  unreachable

177:                                              ; preds = %169
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  br label %180

180:                                              ; preds = %179
  %181 = load i32, i32* %15, align 4
  %182 = load i32, i32* %12, align 4
  %183 = icmp sgt i32 %181, %182
  br i1 %183, label %188, label %184

184:                                              ; preds = %180
  %185 = load i8, i8* %21, align 1
  %186 = zext i8 %185 to i32
  %187 = icmp eq i32 %186, 0
  br label %188

188:                                              ; preds = %184, %180
  %189 = phi i1 [ true, %180 ], [ %187, %184 ]
  %190 = xor i1 %189, true
  %191 = zext i1 %190 to i32
  %192 = sext i32 %191 to i64
  %193 = call i64 @llvm.expect.i64(i64 %192, i64 0)
  %194 = icmp ne i64 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %188
  unreachable

196:                                              ; preds = %188
  br label %197

197:                                              ; preds = %196
  br label %198

198:                                              ; preds = %197
  %199 = load i8, i8* %21, align 1
  %200 = icmp ne i8 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %198
  %202 = load i32, i32* %15, align 4
  %203 = load i32, i32* %14, align 4
  %204 = icmp sgt i32 %202, %203
  %205 = xor i1 %204, true
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %201
  br label %370

212:                                              ; preds = %201
  br label %213

213:                                              ; preds = %212, %198
  %214 = load %3*, %3** %16, align 8
  %215 = getelementptr inbounds %3, %3* %214, i32 1
  store %3* %215, %3** %16, align 8
  %216 = load %3*, %3** %16, align 8
  store %3* %216, %3** %17, align 8
  %217 = load %3*, %3** %17, align 8
  %218 = call i32 @149(%3* %217, i64* %8, i8* %20, i32 0, i32 0)
  %219 = icmp ne i32 %218, 0
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = xor i1 %221, true
  %223 = zext i1 %222 to i32
  %224 = sext i32 %223 to i64
  %225 = call i64 @llvm.expect.i64(i64 %224, i64 0)
  %226 = icmp ne i64 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %213
  store i32 0, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %370

228:                                              ; preds = %213
  %229 = load i32, i32* %15, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %15, align 4
  br label %231

231:                                              ; preds = %228
  %232 = load i32, i32* %15, align 4
  %233 = load i32, i32* %12, align 4
  %234 = icmp sle i32 %232, %233
  br i1 %234, label %239, label %235

235:                                              ; preds = %231
  %236 = load i8, i8* %21, align 1
  %237 = zext i8 %236 to i32
  %238 = icmp eq i32 %237, 1
  br label %239

239:                                              ; preds = %235, %231
  %240 = phi i1 [ true, %231 ], [ %238, %235 ]
  %241 = xor i1 %240, true
  %242 = zext i1 %241 to i32
  %243 = sext i32 %242 to i64
  %244 = call i64 @llvm.expect.i64(i64 %243, i64 0)
  %245 = icmp ne i64 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %239
  unreachable

247:                                              ; preds = %239
  br label %248

248:                                              ; preds = %247
  br label %249

249:                                              ; preds = %248
  br label %250

250:                                              ; preds = %249
  %251 = load i32, i32* %15, align 4
  %252 = load i32, i32* %12, align 4
  %253 = icmp sgt i32 %251, %252
  br i1 %253, label %258, label %254

254:                                              ; preds = %250
  %255 = load i8, i8* %21, align 1
  %256 = zext i8 %255 to i32
  %257 = icmp eq i32 %256, 0
  br label %258

258:                                              ; preds = %254, %250
  %259 = phi i1 [ true, %250 ], [ %257, %254 ]
  %260 = xor i1 %259, true
  %261 = zext i1 %260 to i32
  %262 = sext i32 %261 to i64
  %263 = call i64 @llvm.expect.i64(i64 %262, i64 0)
  %264 = icmp ne i64 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %258
  unreachable

266:                                              ; preds = %258
  br label %267

267:                                              ; preds = %266
  br label %268

268:                                              ; preds = %267
  %269 = load i8, i8* %21, align 1
  %270 = icmp ne i8 %269, 0
  br i1 %270, label %271, label %283

271:                                              ; preds = %268
  %272 = load i32, i32* %15, align 4
  %273 = load i32, i32* %14, align 4
  %274 = icmp sgt i32 %272, %273
  %275 = xor i1 %274, true
  %276 = xor i1 %275, true
  %277 = zext i1 %276 to i32
  %278 = sext i32 %277 to i64
  %279 = call i64 @llvm.expect.i64(i64 %278, i64 0)
  %280 = icmp ne i64 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %271
  br label %370

282:                                              ; preds = %271
  br label %283

283:                                              ; preds = %282, %268
  %284 = load %3*, %3** %16, align 8
  %285 = getelementptr inbounds %3, %3* %284, i32 1
  store %3* %285, %3** %16, align 8
  %286 = load %3*, %3** %16, align 8
  store %3* %286, %3** %17, align 8
  %287 = load %3*, %3** %17, align 8
  %288 = call i32 @153(%3* %287, i8* %9, i8* %20, i32 0)
  %289 = icmp ne i32 %288, 0
  %290 = xor i1 %289, true
  %291 = xor i1 %290, true
  %292 = xor i1 %291, true
  %293 = zext i1 %292 to i32
  %294 = sext i32 %293 to i64
  %295 = call i64 @llvm.expect.i64(i64 %294, i64 0)
  %296 = icmp ne i64 %295, 0
  br i1 %296, label %297, label %298

297:                                              ; preds = %283
  store i32 1, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %370

298:                                              ; preds = %283
  %299 = load i32, i32* %15, align 4
  %300 = add nsw i32 %299, 1
  store i32 %300, i32* %15, align 4
  br label %301

301:                                              ; preds = %298
  %302 = load i32, i32* %15, align 4
  %303 = load i32, i32* %12, align 4
  %304 = icmp sle i32 %302, %303
  br i1 %304, label %309, label %305

305:                                              ; preds = %301
  %306 = load i8, i8* %21, align 1
  %307 = zext i8 %306 to i32
  %308 = icmp eq i32 %307, 1
  br label %309

309:                                              ; preds = %305, %301
  %310 = phi i1 [ true, %301 ], [ %308, %305 ]
  %311 = xor i1 %310, true
  %312 = zext i1 %311 to i32
  %313 = sext i32 %312 to i64
  %314 = call i64 @llvm.expect.i64(i64 %313, i64 0)
  %315 = icmp ne i64 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %309
  unreachable

317:                                              ; preds = %309
  br label %318

318:                                              ; preds = %317
  br label %319

319:                                              ; preds = %318
  br label %320

320:                                              ; preds = %319
  %321 = load i32, i32* %15, align 4
  %322 = load i32, i32* %12, align 4
  %323 = icmp sgt i32 %321, %322
  br i1 %323, label %328, label %324

324:                                              ; preds = %320
  %325 = load i8, i8* %21, align 1
  %326 = zext i8 %325 to i32
  %327 = icmp eq i32 %326, 0
  br label %328

328:                                              ; preds = %324, %320
  %329 = phi i1 [ true, %320 ], [ %327, %324 ]
  %330 = xor i1 %329, true
  %331 = zext i1 %330 to i32
  %332 = sext i32 %331 to i64
  %333 = call i64 @llvm.expect.i64(i64 %332, i64 0)
  %334 = icmp ne i64 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %328
  unreachable

336:                                              ; preds = %328
  br label %337

337:                                              ; preds = %336
  br label %338

338:                                              ; preds = %337
  %339 = load i8, i8* %21, align 1
  %340 = icmp ne i8 %339, 0
  br i1 %340, label %341, label %353

341:                                              ; preds = %338
  %342 = load i32, i32* %15, align 4
  %343 = load i32, i32* %14, align 4
  %344 = icmp sgt i32 %342, %343
  %345 = xor i1 %344, true
  %346 = xor i1 %345, true
  %347 = zext i1 %346 to i32
  %348 = sext i32 %347 to i64
  %349 = call i64 @llvm.expect.i64(i64 %348, i64 0)
  %350 = icmp ne i64 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %341
  br label %370

352:                                              ; preds = %341
  br label %353

353:                                              ; preds = %352, %338
  %354 = load %3*, %3** %16, align 8
  %355 = getelementptr inbounds %3, %3* %354, i32 1
  store %3* %355, %3** %16, align 8
  %356 = load %3*, %3** %16, align 8
  store %3* %356, %3** %17, align 8
  %357 = load %3*, %3** %17, align 8
  %358 = call i32 @148(%3* %357, %3** %7, i32 0)
  %359 = icmp ne i32 %358, 0
  %360 = xor i1 %359, true
  %361 = xor i1 %360, true
  %362 = xor i1 %361, true
  %363 = zext i1 %362 to i32
  %364 = sext i32 %363 to i64
  %365 = call i64 @llvm.expect.i64(i64 %364, i64 0)
  %366 = icmp ne i64 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %353
  store i32 5, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %370

368:                                              ; preds = %353
  br label %369

369:                                              ; preds = %368
  br label %370

370:                                              ; preds = %369, %367, %351, %297, %281, %227, %211, %157, %141, %81
  %371 = load i32, i32* %22, align 4
  %372 = icmp ne i32 %371, 0
  %373 = xor i1 %372, true
  %374 = xor i1 %373, true
  %375 = zext i1 %374 to i32
  %376 = sext i32 %375 to i64
  %377 = call i64 @llvm.expect.i64(i64 %376, i64 0)
  %378 = icmp ne i64 %377, 0
  br i1 %378, label %379, label %408

379:                                              ; preds = %370
  %380 = load i32, i32* %22, align 4
  %381 = icmp eq i32 %380, 2
  br i1 %381, label %382, label %385

382:                                              ; preds = %379
  %383 = load i32, i32* %15, align 4
  %384 = load i8*, i8** %19, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %383, i8* %384)
  br label %401

385:                                              ; preds = %379
  %386 = load i32, i32* %22, align 4
  %387 = icmp eq i32 %386, 3
  br i1 %387, label %388, label %392

388:                                              ; preds = %385
  %389 = load i32, i32* %15, align 4
  %390 = load i8*, i8** %19, align 8
  %391 = load %3*, %3** %17, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %389, i8* %390, %3* %391)
  br label %400

392:                                              ; preds = %385
  %393 = load i32, i32* %22, align 4
  %394 = icmp eq i32 %393, 4
  br i1 %394, label %395, label %399

395:                                              ; preds = %392
  %396 = load i32, i32* %15, align 4
  %397 = load i32, i32* %18, align 4
  %398 = load %3*, %3** %17, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %396, i32 %397, %3* %398)
  br label %399

399:                                              ; preds = %395, %392
  br label %400

400:                                              ; preds = %399, %388
  br label %401

401:                                              ; preds = %400, %382
  br label %402

402:                                              ; preds = %401
  %403 = load %3*, %3** %4, align 8
  %404 = getelementptr inbounds %3, %3* %403, i32 0, i32 1
  %405 = bitcast %5* %404 to i32*
  store i32 2, i32* %405, align 8
  br label %406

406:                                              ; preds = %402
  br label %407

407:                                              ; preds = %406
  store i32 1, i32* %23, align 4
  br label %409

408:                                              ; preds = %370
  store i32 0, i32* %23, align 4
  br label %409

409:                                              ; preds = %408, %407
  %410 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %410) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #11
  %411 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %411) #11
  %412 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %412) #11
  %413 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %413) #11
  %414 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %414) #11
  %415 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %415) #11
  %416 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %416) #11
  %417 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %417) #11
  %418 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %418) #11
  %419 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %419) #11
  %420 = load i32, i32* %23, align 4
  switch i32 %420, label %463 [
    i32 0, label %421
  ]

421:                                              ; preds = %409
  br label %422

422:                                              ; preds = %421
  br label %423

423:                                              ; preds = %422
  %424 = load %3*, %3** %7, align 8
  %425 = icmp ne %3* %424, null
  br i1 %425, label %426, label %430

426:                                              ; preds = %423
  %427 = load %3*, %3** %7, align 8
  %428 = call i32 @php_le_stream_context()
  %429 = call i8* @zend_fetch_resource_ex(%3* %427, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %428)
  br label %440

430:                                              ; preds = %423
  %431 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %432 = icmp ne %1* %431, null
  br i1 %432, label %433, label %435

433:                                              ; preds = %430
  %434 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %437

435:                                              ; preds = %430
  %436 = call %1* @php_stream_context_alloc()
  store %1* %436, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %437

437:                                              ; preds = %435, %433
  %438 = phi %1* [ %434, %433 ], [ %436, %435 ]
  %439 = bitcast %1* %438 to i8*
  br label %440

440:                                              ; preds = %437, %426
  %441 = phi i8* [ %429, %426 ], [ %439, %437 ]
  %442 = bitcast i8* %441 to %1*
  store %1* %442, %1** %10, align 8
  br label %443

443:                                              ; preds = %440
  %444 = load i8*, i8** %5, align 8
  %445 = load i64, i64* %8, align 8
  %446 = trunc i64 %445 to i32
  %447 = load i8, i8* %9, align 1
  %448 = zext i8 %447 to i32
  %449 = icmp ne i32 %448, 0
  %450 = zext i1 %449 to i64
  %451 = select i1 %449, i32 1, i32 0
  %452 = or i32 %451, 8
  %453 = load %1*, %1** %10, align 8
  %454 = call i32 @_php_stream_mkdir(i8* %444, i32 %446, i32 %452, %1* %453)
  %455 = icmp ne i32 %454, 0
  %456 = zext i1 %455 to i64
  %457 = select i1 %455, i32 3, i32 2
  %458 = load %3*, %3** %4, align 8
  %459 = getelementptr inbounds %3, %3* %458, i32 0, i32 1
  %460 = bitcast %5* %459 to i32*
  store i32 %457, i32* %460, align 8
  br label %461

461:                                              ; preds = %443
  br label %462

462:                                              ; preds = %461
  store i32 1, i32* %23, align 4
  br label %463

463:                                              ; preds = %462, %409
  %464 = bitcast %1** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %464) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #11
  %465 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %465) #11
  %466 = bitcast %3** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %466) #11
  %467 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %467) #11
  %468 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %468) #11
  ret void
}

declare dso_local i32 @_php_stream_mkdir(i8*, i32, i32, %1*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_rmdir(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %3*, align 8
  %8 = alloca %1*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %3*, align 8
  %15 = alloca %3*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %22 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #11
  %23 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  %24 = bitcast %3** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  store %3* null, %3** %7, align 8
  %25 = bitcast %1** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #11
  store i32 0, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #11
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  store i32 2, i32* %11, align 4
  %30 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #11
  %31 = load %28*, %28** %3, align 8
  %32 = getelementptr inbounds %28, %28* %31, i32 0, i32 4
  %33 = getelementptr inbounds %3, %3* %32, i32 0, i32 2
  %34 = bitcast %6* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %12, align 4
  %36 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  %37 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  %38 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  store %3* null, %3** %15, align 8
  %39 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #11
  store i32 0, i32* %16, align 4
  %40 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  store i8* null, i8** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #11
  store i8 0, i8* %19, align 1
  %41 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #11
  store i32 0, i32* %20, align 4
  %42 = load i32, i32* %13, align 4
  %43 = load %3*, %3** %14, align 8
  %44 = load %3*, %3** %15, align 8
  %45 = load i32, i32* %16, align 4
  %46 = load i8*, i8** %17, align 8
  %47 = load i8, i8* %18, align 1
  %48 = load i8, i8* %19, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %10, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %12, align 4
  %61 = load i32, i32* %11, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %11, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %12, align 4
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %11, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %20, align 4
  br label %227

82:                                               ; preds = %69, %59
  store i32 0, i32* %13, align 4
  %83 = load %28*, %28** %3, align 8
  %84 = bitcast %28* %83 to %3*
  %85 = getelementptr inbounds %3, %3* %84, i64 4
  store %3* %85, %3** %14, align 8
  %86 = load i32, i32* %13, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %13, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %19, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %13, align 4
  %109 = load i32, i32* %10, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %19, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %19, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %13, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %227

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %3*, %3** %14, align 8
  %142 = getelementptr inbounds %3, %3* %141, i32 1
  store %3* %142, %3** %14, align 8
  %143 = load %3*, %3** %14, align 8
  store %3* %143, %3** %15, align 8
  %144 = load %3*, %3** %15, align 8
  %145 = call i32 @152(%3* %144, i8** %5, i64* %6, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 6, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

155:                                              ; preds = %140
  store i8 1, i8* %19, align 1
  %156 = load i32, i32* %13, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %13, align 4
  br label %158

158:                                              ; preds = %155
  %159 = load i32, i32* %13, align 4
  %160 = load i32, i32* %10, align 4
  %161 = icmp sle i32 %159, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i8, i8* %19, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 1
  br label %166

166:                                              ; preds = %162, %158
  %167 = phi i1 [ true, %158 ], [ %165, %162 ]
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  unreachable

174:                                              ; preds = %166
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %13, align 4
  %179 = load i32, i32* %10, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %19, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  %196 = load i8, i8* %19, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %195
  %199 = load i32, i32* %13, align 4
  %200 = load i32, i32* %12, align 4
  %201 = icmp sgt i32 %199, %200
  %202 = xor i1 %201, true
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %198
  br label %227

209:                                              ; preds = %198
  br label %210

210:                                              ; preds = %209, %195
  %211 = load %3*, %3** %14, align 8
  %212 = getelementptr inbounds %3, %3* %211, i32 1
  store %3* %212, %3** %14, align 8
  %213 = load %3*, %3** %14, align 8
  store %3* %213, %3** %15, align 8
  %214 = load %3*, %3** %15, align 8
  %215 = call i32 @148(%3* %214, %3** %7, i32 0)
  %216 = icmp ne i32 %215, 0
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %210
  store i32 5, i32* %16, align 4
  store i32 4, i32* %20, align 4
  br label %227

225:                                              ; preds = %210
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226, %224, %208, %154, %138, %78
  %228 = load i32, i32* %20, align 4
  %229 = icmp ne i32 %228, 0
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i32
  %233 = sext i32 %232 to i64
  %234 = call i64 @llvm.expect.i64(i64 %233, i64 0)
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %236, label %265

236:                                              ; preds = %227
  %237 = load i32, i32* %20, align 4
  %238 = icmp eq i32 %237, 2
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load i32, i32* %13, align 4
  %241 = load i8*, i8** %17, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %240, i8* %241)
  br label %258

242:                                              ; preds = %236
  %243 = load i32, i32* %20, align 4
  %244 = icmp eq i32 %243, 3
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = load i32, i32* %13, align 4
  %247 = load i8*, i8** %17, align 8
  %248 = load %3*, %3** %15, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %246, i8* %247, %3* %248)
  br label %257

249:                                              ; preds = %242
  %250 = load i32, i32* %20, align 4
  %251 = icmp eq i32 %250, 4
  br i1 %251, label %252, label %256

252:                                              ; preds = %249
  %253 = load i32, i32* %13, align 4
  %254 = load i32, i32* %16, align 4
  %255 = load %3*, %3** %15, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %253, i32 %254, %3* %255)
  br label %256

256:                                              ; preds = %252, %249
  br label %257

257:                                              ; preds = %256, %245
  br label %258

258:                                              ; preds = %257, %239
  br label %259

259:                                              ; preds = %258
  %260 = load %3*, %3** %4, align 8
  %261 = getelementptr inbounds %3, %3* %260, i32 0, i32 1
  %262 = bitcast %5* %261 to i32*
  store i32 2, i32* %262, align 8
  br label %263

263:                                              ; preds = %259
  br label %264

264:                                              ; preds = %263
  store i32 1, i32* %21, align 4
  br label %266

265:                                              ; preds = %227
  store i32 0, i32* %21, align 4
  br label %266

266:                                              ; preds = %265, %264
  %267 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #11
  %268 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #11
  %269 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #11
  %270 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #11
  %271 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271) #11
  %272 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #11
  %273 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #11
  %274 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #11
  %275 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #11
  %276 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #11
  %277 = load i32, i32* %21, align 4
  switch i32 %277, label %312 [
    i32 0, label %278
  ]

278:                                              ; preds = %266
  br label %279

279:                                              ; preds = %278
  br label %280

280:                                              ; preds = %279
  %281 = load %3*, %3** %7, align 8
  %282 = icmp ne %3* %281, null
  br i1 %282, label %283, label %287

283:                                              ; preds = %280
  %284 = load %3*, %3** %7, align 8
  %285 = call i32 @php_le_stream_context()
  %286 = call i8* @zend_fetch_resource_ex(%3* %284, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %285)
  br label %297

287:                                              ; preds = %280
  %288 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %289 = icmp ne %1* %288, null
  br i1 %289, label %290, label %292

290:                                              ; preds = %287
  %291 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %294

292:                                              ; preds = %287
  %293 = call %1* @php_stream_context_alloc()
  store %1* %293, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %294

294:                                              ; preds = %292, %290
  %295 = phi %1* [ %291, %290 ], [ %293, %292 ]
  %296 = bitcast %1* %295 to i8*
  br label %297

297:                                              ; preds = %294, %283
  %298 = phi i8* [ %286, %283 ], [ %296, %294 ]
  %299 = bitcast i8* %298 to %1*
  store %1* %299, %1** %8, align 8
  br label %300

300:                                              ; preds = %297
  %301 = load i8*, i8** %5, align 8
  %302 = load %1*, %1** %8, align 8
  %303 = call i32 @_php_stream_rmdir(i8* %301, i32 8, %1* %302)
  %304 = icmp ne i32 %303, 0
  %305 = zext i1 %304 to i64
  %306 = select i1 %304, i32 3, i32 2
  %307 = load %3*, %3** %4, align 8
  %308 = getelementptr inbounds %3, %3* %307, i32 0, i32 1
  %309 = bitcast %5* %308 to i32*
  store i32 %306, i32* %309, align 8
  br label %310

310:                                              ; preds = %300
  br label %311

311:                                              ; preds = %310
  store i32 1, i32* %21, align 4
  br label %312

312:                                              ; preds = %311, %266
  %313 = bitcast %1** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %313) #11
  %314 = bitcast %3** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %314) #11
  %315 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %315) #11
  %316 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %316) #11
  ret void
}

declare dso_local i32 @_php_stream_rmdir(i8*, i32, %1*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_readfile(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca %3*, align 8
  %10 = alloca %53*, align 8
  %11 = alloca %1*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %3*, align 8
  %18 = alloca %3*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %26 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #11
  %27 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  %28 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  store i64 0, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %8) #11
  store i8 0, i8* %8, align 1
  %29 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #11
  store %3* null, %3** %9, align 8
  %30 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #11
  %31 = bitcast %1** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  store %1* null, %1** %11, align 8
  br label %32

32:                                               ; preds = %2
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #11
  store i32 0, i32* %12, align 4
  %34 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #11
  store i32 1, i32* %13, align 4
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  store i32 3, i32* %14, align 4
  %36 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  %37 = load %28*, %28** %3, align 8
  %38 = getelementptr inbounds %28, %28* %37, i32 0, i32 4
  %39 = getelementptr inbounds %3, %3* %38, i32 0, i32 2
  %40 = bitcast %6* %39 to i32*
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %15, align 4
  %42 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  %43 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #11
  %44 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #11
  store %3* null, %3** %18, align 8
  %45 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #11
  store i32 0, i32* %19, align 4
  %46 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #11
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #11
  store i8 0, i8* %22, align 1
  %47 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  store i32 0, i32* %23, align 4
  %48 = load i32, i32* %16, align 4
  %49 = load %3*, %3** %17, align 8
  %50 = load %3*, %3** %18, align 8
  %51 = load i32, i32* %19, align 4
  %52 = load i8*, i8** %20, align 8
  %53 = load i8, i8* %21, align 1
  %54 = load i8, i8* %22, align 1
  br label %55

55:                                               ; preds = %32
  %56 = load i32, i32* %15, align 4
  %57 = load i32, i32* %13, align 4
  %58 = icmp slt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %84, label %65

65:                                               ; preds = %55
  %66 = load i32, i32* %15, align 4
  %67 = load i32, i32* %14, align 4
  %68 = icmp sgt i32 %66, %67
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 0)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %88

75:                                               ; preds = %65
  %76 = load i32, i32* %14, align 4
  %77 = icmp sge i32 %76, 0
  %78 = xor i1 %77, true
  %79 = xor i1 %78, true
  %80 = zext i1 %79 to i32
  %81 = sext i32 %80 to i64
  %82 = call i64 @llvm.expect.i64(i64 %81, i64 1)
  %83 = icmp ne i64 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %75, %55
  %85 = load i32, i32* %15, align 4
  %86 = load i32, i32* %13, align 4
  %87 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %85, i32 %86, i32 %87)
  store i32 1, i32* %23, align 4
  br label %303

88:                                               ; preds = %75, %65
  store i32 0, i32* %16, align 4
  %89 = load %28*, %28** %3, align 8
  %90 = bitcast %28* %89 to %3*
  %91 = getelementptr inbounds %3, %3* %90, i64 4
  store %3* %91, %3** %17, align 8
  %92 = load i32, i32* %16, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %16, align 4
  br label %94

94:                                               ; preds = %88
  %95 = load i32, i32* %16, align 4
  %96 = load i32, i32* %13, align 4
  %97 = icmp sle i32 %95, %96
  br i1 %97, label %102, label %98

98:                                               ; preds = %94
  %99 = load i8, i8* %22, align 1
  %100 = zext i8 %99 to i32
  %101 = icmp eq i32 %100, 1
  br label %102

102:                                              ; preds = %98, %94
  %103 = phi i1 [ true, %94 ], [ %101, %98 ]
  %104 = xor i1 %103, true
  %105 = zext i1 %104 to i32
  %106 = sext i32 %105 to i64
  %107 = call i64 @llvm.expect.i64(i64 %106, i64 0)
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %102
  unreachable

110:                                              ; preds = %102
  br label %111

111:                                              ; preds = %110
  br label %112

112:                                              ; preds = %111
  br label %113

113:                                              ; preds = %112
  %114 = load i32, i32* %16, align 4
  %115 = load i32, i32* %13, align 4
  %116 = icmp sgt i32 %114, %115
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = load i8, i8* %22, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, 0
  br label %121

121:                                              ; preds = %117, %113
  %122 = phi i1 [ true, %113 ], [ %120, %117 ]
  %123 = xor i1 %122, true
  %124 = zext i1 %123 to i32
  %125 = sext i32 %124 to i64
  %126 = call i64 @llvm.expect.i64(i64 %125, i64 0)
  %127 = icmp ne i64 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %121
  unreachable

129:                                              ; preds = %121
  br label %130

130:                                              ; preds = %129
  br label %131

131:                                              ; preds = %130
  %132 = load i8, i8* %22, align 1
  %133 = icmp ne i8 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %131
  %135 = load i32, i32* %16, align 4
  %136 = load i32, i32* %15, align 4
  %137 = icmp sgt i32 %135, %136
  %138 = xor i1 %137, true
  %139 = xor i1 %138, true
  %140 = zext i1 %139 to i32
  %141 = sext i32 %140 to i64
  %142 = call i64 @llvm.expect.i64(i64 %141, i64 0)
  %143 = icmp ne i64 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %134
  br label %303

145:                                              ; preds = %134
  br label %146

146:                                              ; preds = %145, %131
  %147 = load %3*, %3** %17, align 8
  %148 = getelementptr inbounds %3, %3* %147, i32 1
  store %3* %148, %3** %17, align 8
  %149 = load %3*, %3** %17, align 8
  store %3* %149, %3** %18, align 8
  %150 = load %3*, %3** %18, align 8
  %151 = call i32 @152(%3* %150, i8** %5, i64* %6, i32 0)
  %152 = icmp ne i32 %151, 0
  %153 = xor i1 %152, true
  %154 = xor i1 %153, true
  %155 = xor i1 %154, true
  %156 = zext i1 %155 to i32
  %157 = sext i32 %156 to i64
  %158 = call i64 @llvm.expect.i64(i64 %157, i64 0)
  %159 = icmp ne i64 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %146
  store i32 6, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %303

161:                                              ; preds = %146
  store i8 1, i8* %22, align 1
  %162 = load i32, i32* %16, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %16, align 4
  br label %164

164:                                              ; preds = %161
  %165 = load i32, i32* %16, align 4
  %166 = load i32, i32* %13, align 4
  %167 = icmp sle i32 %165, %166
  br i1 %167, label %172, label %168

168:                                              ; preds = %164
  %169 = load i8, i8* %22, align 1
  %170 = zext i8 %169 to i32
  %171 = icmp eq i32 %170, 1
  br label %172

172:                                              ; preds = %168, %164
  %173 = phi i1 [ true, %164 ], [ %171, %168 ]
  %174 = xor i1 %173, true
  %175 = zext i1 %174 to i32
  %176 = sext i32 %175 to i64
  %177 = call i64 @llvm.expect.i64(i64 %176, i64 0)
  %178 = icmp ne i64 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %172
  unreachable

180:                                              ; preds = %172
  br label %181

181:                                              ; preds = %180
  br label %182

182:                                              ; preds = %181
  br label %183

183:                                              ; preds = %182
  %184 = load i32, i32* %16, align 4
  %185 = load i32, i32* %13, align 4
  %186 = icmp sgt i32 %184, %185
  br i1 %186, label %191, label %187

187:                                              ; preds = %183
  %188 = load i8, i8* %22, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp eq i32 %189, 0
  br label %191

191:                                              ; preds = %187, %183
  %192 = phi i1 [ true, %183 ], [ %190, %187 ]
  %193 = xor i1 %192, true
  %194 = zext i1 %193 to i32
  %195 = sext i32 %194 to i64
  %196 = call i64 @llvm.expect.i64(i64 %195, i64 0)
  %197 = icmp ne i64 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %191
  unreachable

199:                                              ; preds = %191
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  %202 = load i8, i8* %22, align 1
  %203 = icmp ne i8 %202, 0
  br i1 %203, label %204, label %216

204:                                              ; preds = %201
  %205 = load i32, i32* %16, align 4
  %206 = load i32, i32* %15, align 4
  %207 = icmp sgt i32 %205, %206
  %208 = xor i1 %207, true
  %209 = xor i1 %208, true
  %210 = zext i1 %209 to i32
  %211 = sext i32 %210 to i64
  %212 = call i64 @llvm.expect.i64(i64 %211, i64 0)
  %213 = icmp ne i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %204
  br label %303

215:                                              ; preds = %204
  br label %216

216:                                              ; preds = %215, %201
  %217 = load %3*, %3** %17, align 8
  %218 = getelementptr inbounds %3, %3* %217, i32 1
  store %3* %218, %3** %17, align 8
  %219 = load %3*, %3** %17, align 8
  store %3* %219, %3** %18, align 8
  %220 = load %3*, %3** %18, align 8
  %221 = call i32 @153(%3* %220, i8* %8, i8* %21, i32 0)
  %222 = icmp ne i32 %221, 0
  %223 = xor i1 %222, true
  %224 = xor i1 %223, true
  %225 = xor i1 %224, true
  %226 = zext i1 %225 to i32
  %227 = sext i32 %226 to i64
  %228 = call i64 @llvm.expect.i64(i64 %227, i64 0)
  %229 = icmp ne i64 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %216
  store i32 1, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %303

231:                                              ; preds = %216
  %232 = load i32, i32* %16, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %16, align 4
  br label %234

234:                                              ; preds = %231
  %235 = load i32, i32* %16, align 4
  %236 = load i32, i32* %13, align 4
  %237 = icmp sle i32 %235, %236
  br i1 %237, label %242, label %238

238:                                              ; preds = %234
  %239 = load i8, i8* %22, align 1
  %240 = zext i8 %239 to i32
  %241 = icmp eq i32 %240, 1
  br label %242

242:                                              ; preds = %238, %234
  %243 = phi i1 [ true, %234 ], [ %241, %238 ]
  %244 = xor i1 %243, true
  %245 = zext i1 %244 to i32
  %246 = sext i32 %245 to i64
  %247 = call i64 @llvm.expect.i64(i64 %246, i64 0)
  %248 = icmp ne i64 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %242
  unreachable

250:                                              ; preds = %242
  br label %251

251:                                              ; preds = %250
  br label %252

252:                                              ; preds = %251
  br label %253

253:                                              ; preds = %252
  %254 = load i32, i32* %16, align 4
  %255 = load i32, i32* %13, align 4
  %256 = icmp sgt i32 %254, %255
  br i1 %256, label %261, label %257

257:                                              ; preds = %253
  %258 = load i8, i8* %22, align 1
  %259 = zext i8 %258 to i32
  %260 = icmp eq i32 %259, 0
  br label %261

261:                                              ; preds = %257, %253
  %262 = phi i1 [ true, %253 ], [ %260, %257 ]
  %263 = xor i1 %262, true
  %264 = zext i1 %263 to i32
  %265 = sext i32 %264 to i64
  %266 = call i64 @llvm.expect.i64(i64 %265, i64 0)
  %267 = icmp ne i64 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %261
  unreachable

269:                                              ; preds = %261
  br label %270

270:                                              ; preds = %269
  br label %271

271:                                              ; preds = %270
  %272 = load i8, i8* %22, align 1
  %273 = icmp ne i8 %272, 0
  br i1 %273, label %274, label %286

274:                                              ; preds = %271
  %275 = load i32, i32* %16, align 4
  %276 = load i32, i32* %15, align 4
  %277 = icmp sgt i32 %275, %276
  %278 = xor i1 %277, true
  %279 = xor i1 %278, true
  %280 = zext i1 %279 to i32
  %281 = sext i32 %280 to i64
  %282 = call i64 @llvm.expect.i64(i64 %281, i64 0)
  %283 = icmp ne i64 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %274
  br label %303

285:                                              ; preds = %274
  br label %286

286:                                              ; preds = %285, %271
  %287 = load %3*, %3** %17, align 8
  %288 = getelementptr inbounds %3, %3* %287, i32 1
  store %3* %288, %3** %17, align 8
  %289 = load %3*, %3** %17, align 8
  store %3* %289, %3** %18, align 8
  %290 = load %3*, %3** %18, align 8
  %291 = call i32 @148(%3* %290, %3** %9, i32 1)
  %292 = icmp ne i32 %291, 0
  %293 = xor i1 %292, true
  %294 = xor i1 %293, true
  %295 = xor i1 %294, true
  %296 = zext i1 %295 to i32
  %297 = sext i32 %296 to i64
  %298 = call i64 @llvm.expect.i64(i64 %297, i64 0)
  %299 = icmp ne i64 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %286
  store i32 5, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %303

301:                                              ; preds = %286
  br label %302

302:                                              ; preds = %301
  br label %303

303:                                              ; preds = %302, %300, %284, %230, %214, %160, %144, %84
  %304 = load i32, i32* %23, align 4
  %305 = icmp ne i32 %304, 0
  %306 = xor i1 %305, true
  %307 = xor i1 %306, true
  %308 = zext i1 %307 to i32
  %309 = sext i32 %308 to i64
  %310 = call i64 @llvm.expect.i64(i64 %309, i64 0)
  %311 = icmp ne i64 %310, 0
  br i1 %311, label %312, label %341

312:                                              ; preds = %303
  %313 = load i32, i32* %23, align 4
  %314 = icmp eq i32 %313, 2
  br i1 %314, label %315, label %318

315:                                              ; preds = %312
  %316 = load i32, i32* %16, align 4
  %317 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %316, i8* %317)
  br label %334

318:                                              ; preds = %312
  %319 = load i32, i32* %23, align 4
  %320 = icmp eq i32 %319, 3
  br i1 %320, label %321, label %325

321:                                              ; preds = %318
  %322 = load i32, i32* %16, align 4
  %323 = load i8*, i8** %20, align 8
  %324 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %322, i8* %323, %3* %324)
  br label %333

325:                                              ; preds = %318
  %326 = load i32, i32* %23, align 4
  %327 = icmp eq i32 %326, 4
  br i1 %327, label %328, label %332

328:                                              ; preds = %325
  %329 = load i32, i32* %16, align 4
  %330 = load i32, i32* %19, align 4
  %331 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %329, i32 %330, %3* %331)
  br label %332

332:                                              ; preds = %328, %325
  br label %333

333:                                              ; preds = %332, %321
  br label %334

334:                                              ; preds = %333, %315
  br label %335

335:                                              ; preds = %334
  %336 = load %3*, %3** %4, align 8
  %337 = getelementptr inbounds %3, %3* %336, i32 0, i32 1
  %338 = bitcast %5* %337 to i32*
  store i32 2, i32* %338, align 8
  br label %339

339:                                              ; preds = %335
  br label %340

340:                                              ; preds = %339
  store i32 1, i32* %24, align 4
  br label %342

341:                                              ; preds = %303
  store i32 0, i32* %24, align 4
  br label %342

342:                                              ; preds = %341, %340
  %343 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %343) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #11
  %344 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %344) #11
  %345 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #11
  %346 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %346) #11
  %347 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %347) #11
  %348 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %348) #11
  %349 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %349) #11
  %350 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %350) #11
  %351 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #11
  %352 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #11
  %353 = load i32, i32* %24, align 4
  switch i32 %353, label %409 [
    i32 0, label %354
  ]

354:                                              ; preds = %342
  br label %355

355:                                              ; preds = %354
  br label %356

356:                                              ; preds = %355
  %357 = load %3*, %3** %9, align 8
  %358 = icmp ne %3* %357, null
  br i1 %358, label %359, label %363

359:                                              ; preds = %356
  %360 = load %3*, %3** %9, align 8
  %361 = call i32 @php_le_stream_context()
  %362 = call i8* @zend_fetch_resource_ex(%3* %360, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %361)
  br label %373

363:                                              ; preds = %356
  %364 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %365 = icmp ne %1* %364, null
  br i1 %365, label %366, label %368

366:                                              ; preds = %363
  %367 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %370

368:                                              ; preds = %363
  %369 = call %1* @php_stream_context_alloc()
  store %1* %369, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %370

370:                                              ; preds = %368, %366
  %371 = phi %1* [ %367, %366 ], [ %369, %368 ]
  %372 = bitcast %1* %371 to i8*
  br label %373

373:                                              ; preds = %370, %359
  %374 = phi i8* [ %362, %359 ], [ %372, %370 ]
  %375 = bitcast i8* %374 to %1*
  store %1* %375, %1** %11, align 8
  %376 = load i8*, i8** %5, align 8
  %377 = load i8, i8* %8, align 1
  %378 = zext i8 %377 to i32
  %379 = icmp ne i32 %378, 0
  %380 = zext i1 %379 to i64
  %381 = select i1 %379, i32 1, i32 0
  %382 = or i32 %381, 8
  %383 = load %1*, %1** %11, align 8
  %384 = call %53* @_php_stream_open_wrapper_ex(i8* %376, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @79, i32 0, i32 0), i32 %382, %13** null, %1* %383)
  store %53* %384, %53** %10, align 8
  %385 = load %53*, %53** %10, align 8
  %386 = icmp ne %53* %385, null
  br i1 %386, label %387, label %402

387:                                              ; preds = %373
  %388 = load %53*, %53** %10, align 8
  %389 = call i64 @_php_stream_passthru(%53* %388)
  store i64 %389, i64* %7, align 8
  %390 = load %53*, %53** %10, align 8
  %391 = call i32 @_php_stream_free(%53* %390, i32 3)
  %392 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %392) #11
  %393 = load %3*, %3** %4, align 8
  store %3* %393, %3** %25, align 8
  %394 = load i64, i64* %7, align 8
  %395 = load %3*, %3** %25, align 8
  %396 = getelementptr inbounds %3, %3* %395, i32 0, i32 0
  %397 = bitcast %4* %396 to i64*
  store i64 %394, i64* %397, align 8
  %398 = load %3*, %3** %25, align 8
  %399 = getelementptr inbounds %3, %3* %398, i32 0, i32 1
  %400 = bitcast %5* %399 to i32*
  store i32 4, i32* %400, align 8
  %401 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %401) #11
  store i32 1, i32* %24, align 4
  br label %409

402:                                              ; preds = %373
  br label %403

403:                                              ; preds = %402
  %404 = load %3*, %3** %4, align 8
  %405 = getelementptr inbounds %3, %3* %404, i32 0, i32 1
  %406 = bitcast %5* %405 to i32*
  store i32 2, i32* %406, align 8
  br label %407

407:                                              ; preds = %403
  br label %408

408:                                              ; preds = %407
  store i32 1, i32* %24, align 4
  br label %409

409:                                              ; preds = %408, %387, %342
  %410 = bitcast %1** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %410) #11
  %411 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %411) #11
  %412 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %412) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %8) #11
  %413 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %413) #11
  %414 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %414) #11
  %415 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %415) #11
  ret void
}

declare dso_local i64 @_php_stream_passthru(%53*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_umask(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %3*, align 8
  %13 = alloca %3*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %21 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #11
  store i64 0, i64* %5, align 8
  %22 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #11
  %23 = call i32 @umask(i32 63) #11
  store i32 %23, i32* %6, align 4
  %24 = load i32, i32* getelementptr inbounds (%17, %17* @basic_globals, i32 0, i32 41), align 8
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %28

26:                                               ; preds = %2
  %27 = load i32, i32* %6, align 4
  store i32 %27, i32* getelementptr inbounds (%17, %17* @basic_globals, i32 0, i32 41), align 8
  br label %28

28:                                               ; preds = %26, %2
  br label %29

29:                                               ; preds = %28
  %30 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #11
  store i32 0, i32* %7, align 4
  %31 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #11
  store i32 0, i32* %8, align 4
  %32 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  store i32 1, i32* %9, align 4
  %33 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #11
  %34 = load %28*, %28** %3, align 8
  %35 = getelementptr inbounds %28, %28* %34, i32 0, i32 4
  %36 = getelementptr inbounds %3, %3* %35, i32 0, i32 2
  %37 = bitcast %6* %36 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %10, align 4
  %39 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #11
  %40 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  %41 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  store %3* null, %3** %13, align 8
  %42 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  store i32 0, i32* %14, align 4
  %43 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #11
  store i8* null, i8** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  store i8 0, i8* %17, align 1
  %44 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  store i32 0, i32* %18, align 4
  %45 = load i32, i32* %11, align 4
  %46 = load %3*, %3** %12, align 8
  %47 = load %3*, %3** %13, align 8
  %48 = load i32, i32* %14, align 4
  %49 = load i8*, i8** %15, align 8
  %50 = load i8, i8* %16, align 1
  %51 = load i8, i8* %17, align 1
  br label %52

52:                                               ; preds = %29
  %53 = load i32, i32* %10, align 4
  %54 = load i32, i32* %8, align 4
  %55 = icmp slt i32 %53, %54
  %56 = xor i1 %55, true
  %57 = xor i1 %56, true
  %58 = zext i1 %57 to i32
  %59 = sext i32 %58 to i64
  %60 = call i64 @llvm.expect.i64(i64 %59, i64 0)
  %61 = icmp ne i64 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %52
  %63 = load i32, i32* %10, align 4
  %64 = load i32, i32* %9, align 4
  %65 = icmp sgt i32 %63, %64
  %66 = xor i1 %65, true
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0)
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %85

72:                                               ; preds = %62
  %73 = load i32, i32* %9, align 4
  %74 = icmp sge i32 %73, 0
  %75 = xor i1 %74, true
  %76 = xor i1 %75, true
  %77 = zext i1 %76 to i32
  %78 = sext i32 %77 to i64
  %79 = call i64 @llvm.expect.i64(i64 %78, i64 1)
  %80 = icmp ne i64 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %72, %52
  %82 = load i32, i32* %10, align 4
  %83 = load i32, i32* %8, align 4
  %84 = load i32, i32* %9, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %82, i32 %83, i32 %84)
  store i32 1, i32* %18, align 4
  br label %160

85:                                               ; preds = %72, %62
  store i32 0, i32* %11, align 4
  %86 = load %28*, %28** %3, align 8
  %87 = bitcast %28* %86 to %3*
  %88 = getelementptr inbounds %3, %3* %87, i64 4
  store %3* %88, %3** %12, align 8
  store i8 1, i8* %17, align 1
  %89 = load i32, i32* %11, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %11, align 4
  br label %91

91:                                               ; preds = %85
  %92 = load i32, i32* %11, align 4
  %93 = load i32, i32* %8, align 4
  %94 = icmp sle i32 %92, %93
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = load i8, i8* %17, align 1
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %97, 1
  br label %99

99:                                               ; preds = %95, %91
  %100 = phi i1 [ true, %91 ], [ %98, %95 ]
  %101 = xor i1 %100, true
  %102 = zext i1 %101 to i32
  %103 = sext i32 %102 to i64
  %104 = call i64 @llvm.expect.i64(i64 %103, i64 0)
  %105 = icmp ne i64 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %99
  unreachable

107:                                              ; preds = %99
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %11, align 4
  %112 = load i32, i32* %8, align 4
  %113 = icmp sgt i32 %111, %112
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = load i8, i8* %17, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp eq i32 %116, 0
  br label %118

118:                                              ; preds = %114, %110
  %119 = phi i1 [ true, %110 ], [ %117, %114 ]
  %120 = xor i1 %119, true
  %121 = zext i1 %120 to i32
  %122 = sext i32 %121 to i64
  %123 = call i64 @llvm.expect.i64(i64 %122, i64 0)
  %124 = icmp ne i64 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %118
  unreachable

126:                                              ; preds = %118
  br label %127

127:                                              ; preds = %126
  br label %128

128:                                              ; preds = %127
  %129 = load i8, i8* %17, align 1
  %130 = icmp ne i8 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %128
  %132 = load i32, i32* %11, align 4
  %133 = load i32, i32* %10, align 4
  %134 = icmp sgt i32 %132, %133
  %135 = xor i1 %134, true
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %131
  br label %160

142:                                              ; preds = %131
  br label %143

143:                                              ; preds = %142, %128
  %144 = load %3*, %3** %12, align 8
  %145 = getelementptr inbounds %3, %3* %144, i32 1
  store %3* %145, %3** %12, align 8
  %146 = load %3*, %3** %12, align 8
  store %3* %146, %3** %13, align 8
  %147 = load %3*, %3** %13, align 8
  %148 = call i32 @149(%3* %147, i64* %5, i8* %16, i32 0, i32 0)
  %149 = icmp ne i32 %148, 0
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %143
  store i32 0, i32* %14, align 4
  store i32 4, i32* %18, align 4
  br label %160

158:                                              ; preds = %143
  br label %159

159:                                              ; preds = %158
  br label %160

160:                                              ; preds = %159, %157, %141, %81
  %161 = load i32, i32* %18, align 4
  %162 = icmp ne i32 %161, 0
  %163 = xor i1 %162, true
  %164 = xor i1 %163, true
  %165 = zext i1 %164 to i32
  %166 = sext i32 %165 to i64
  %167 = call i64 @llvm.expect.i64(i64 %166, i64 0)
  %168 = icmp ne i64 %167, 0
  br i1 %168, label %169, label %198

169:                                              ; preds = %160
  %170 = load i32, i32* %18, align 4
  %171 = icmp eq i32 %170, 2
  br i1 %171, label %172, label %175

172:                                              ; preds = %169
  %173 = load i32, i32* %11, align 4
  %174 = load i8*, i8** %15, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %173, i8* %174)
  br label %191

175:                                              ; preds = %169
  %176 = load i32, i32* %18, align 4
  %177 = icmp eq i32 %176, 3
  br i1 %177, label %178, label %182

178:                                              ; preds = %175
  %179 = load i32, i32* %11, align 4
  %180 = load i8*, i8** %15, align 8
  %181 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %179, i8* %180, %3* %181)
  br label %190

182:                                              ; preds = %175
  %183 = load i32, i32* %18, align 4
  %184 = icmp eq i32 %183, 4
  br i1 %184, label %185, label %189

185:                                              ; preds = %182
  %186 = load i32, i32* %11, align 4
  %187 = load i32, i32* %14, align 4
  %188 = load %3*, %3** %13, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %186, i32 %187, %3* %188)
  br label %189

189:                                              ; preds = %185, %182
  br label %190

190:                                              ; preds = %189, %178
  br label %191

191:                                              ; preds = %190, %172
  br label %192

192:                                              ; preds = %191
  %193 = load %3*, %3** %4, align 8
  %194 = getelementptr inbounds %3, %3* %193, i32 0, i32 1
  %195 = bitcast %5* %194 to i32*
  store i32 2, i32* %195, align 8
  br label %196

196:                                              ; preds = %192
  br label %197

197:                                              ; preds = %196
  store i32 1, i32* %19, align 4
  br label %199

198:                                              ; preds = %160
  store i32 0, i32* %19, align 4
  br label %199

199:                                              ; preds = %198, %197
  %200 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %16) #11
  %201 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %201) #11
  %202 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #11
  %203 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %203) #11
  %204 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %204) #11
  %205 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %205) #11
  %206 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %206) #11
  %207 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %207) #11
  %208 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %208) #11
  %209 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %209) #11
  %210 = load i32, i32* %19, align 4
  switch i32 %210, label %239 [
    i32 0, label %211
  ]

211:                                              ; preds = %199
  br label %212

212:                                              ; preds = %211
  br label %213

213:                                              ; preds = %212
  %214 = load %28*, %28** %3, align 8
  %215 = getelementptr inbounds %28, %28* %214, i32 0, i32 4
  %216 = getelementptr inbounds %3, %3* %215, i32 0, i32 2
  %217 = bitcast %6* %216 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %213
  %221 = load i32, i32* %6, align 4
  %222 = call i32 @umask(i32 %221) #11
  br label %227

223:                                              ; preds = %213
  %224 = load i64, i64* %5, align 8
  %225 = trunc i64 %224 to i32
  %226 = call i32 @umask(i32 %225) #11
  br label %227

227:                                              ; preds = %223, %220
  %228 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %228) #11
  %229 = load %3*, %3** %4, align 8
  store %3* %229, %3** %20, align 8
  %230 = load i32, i32* %6, align 4
  %231 = sext i32 %230 to i64
  %232 = load %3*, %3** %20, align 8
  %233 = getelementptr inbounds %3, %3* %232, i32 0, i32 0
  %234 = bitcast %4* %233 to i64*
  store i64 %231, i64* %234, align 8
  %235 = load %3*, %3** %20, align 8
  %236 = getelementptr inbounds %3, %3* %235, i32 0, i32 1
  %237 = bitcast %5* %236 to i32*
  store i32 4, i32* %237, align 8
  %238 = bitcast %3** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #11
  store i32 1, i32* %19, align 4
  br label %239

239:                                              ; preds = %227, %199
  %240 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %240) #11
  %241 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #11
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #8

; Function Attrs: nounwind uwtable
define dso_local void @zif_fpassthru(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %53*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %3*, align 8
  %14 = alloca %3*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %22 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #11
  %23 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  %24 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  br label %25

25:                                               ; preds = %2
  %26 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  store i32 0, i32* %8, align 4
  %27 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #11
  store i32 1, i32* %9, align 4
  %28 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #11
  store i32 1, i32* %10, align 4
  %29 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  %30 = load %28*, %28** %3, align 8
  %31 = getelementptr inbounds %28, %28* %30, i32 0, i32 4
  %32 = getelementptr inbounds %3, %3* %31, i32 0, i32 2
  %33 = bitcast %6* %32 to i32*
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %11, align 4
  %35 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  %36 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  %37 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  store %3* null, %3** %14, align 8
  %38 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  store i32 0, i32* %15, align 4
  %39 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #11
  store i8 0, i8* %18, align 1
  %40 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #11
  store i32 0, i32* %19, align 4
  %41 = load i32, i32* %12, align 4
  %42 = load %3*, %3** %13, align 8
  %43 = load %3*, %3** %14, align 8
  %44 = load i32, i32* %15, align 4
  %45 = load i8*, i8** %16, align 8
  %46 = load i8, i8* %17, align 1
  %47 = load i8, i8* %18, align 1
  br label %48

48:                                               ; preds = %25
  %49 = load i32, i32* %11, align 4
  %50 = load i32, i32* %9, align 4
  %51 = icmp slt i32 %49, %50
  %52 = xor i1 %51, true
  %53 = xor i1 %52, true
  %54 = zext i1 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i64 @llvm.expect.i64(i64 %55, i64 0)
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %77, label %58

58:                                               ; preds = %48
  %59 = load i32, i32* %11, align 4
  %60 = load i32, i32* %10, align 4
  %61 = icmp sgt i32 %59, %60
  %62 = xor i1 %61, true
  %63 = xor i1 %62, true
  %64 = zext i1 %63 to i32
  %65 = sext i32 %64 to i64
  %66 = call i64 @llvm.expect.i64(i64 %65, i64 0)
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %58
  %69 = load i32, i32* %10, align 4
  %70 = icmp sge i32 %69, 0
  %71 = xor i1 %70, true
  %72 = xor i1 %71, true
  %73 = zext i1 %72 to i32
  %74 = sext i32 %73 to i64
  %75 = call i64 @llvm.expect.i64(i64 %74, i64 1)
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %68, %48
  %78 = load i32, i32* %11, align 4
  %79 = load i32, i32* %9, align 4
  %80 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %78, i32 %79, i32 %80)
  store i32 1, i32* %19, align 4
  br label %156

81:                                               ; preds = %68, %58
  store i32 0, i32* %12, align 4
  %82 = load %28*, %28** %3, align 8
  %83 = bitcast %28* %82 to %3*
  %84 = getelementptr inbounds %3, %3* %83, i64 4
  store %3* %84, %3** %13, align 8
  %85 = load i32, i32* %12, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %12, align 4
  br label %87

87:                                               ; preds = %81
  %88 = load i32, i32* %12, align 4
  %89 = load i32, i32* %9, align 4
  %90 = icmp sle i32 %88, %89
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = load i8, i8* %18, align 1
  %93 = zext i8 %92 to i32
  %94 = icmp eq i32 %93, 1
  br label %95

95:                                               ; preds = %91, %87
  %96 = phi i1 [ true, %87 ], [ %94, %91 ]
  %97 = xor i1 %96, true
  %98 = zext i1 %97 to i32
  %99 = sext i32 %98 to i64
  %100 = call i64 @llvm.expect.i64(i64 %99, i64 0)
  %101 = icmp ne i64 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %95
  unreachable

103:                                              ; preds = %95
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  %107 = load i32, i32* %12, align 4
  %108 = load i32, i32* %9, align 4
  %109 = icmp sgt i32 %107, %108
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = load i8, i8* %18, align 1
  %112 = zext i8 %111 to i32
  %113 = icmp eq i32 %112, 0
  br label %114

114:                                              ; preds = %110, %106
  %115 = phi i1 [ true, %106 ], [ %113, %110 ]
  %116 = xor i1 %115, true
  %117 = zext i1 %116 to i32
  %118 = sext i32 %117 to i64
  %119 = call i64 @llvm.expect.i64(i64 %118, i64 0)
  %120 = icmp ne i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  unreachable

122:                                              ; preds = %114
  br label %123

123:                                              ; preds = %122
  br label %124

124:                                              ; preds = %123
  %125 = load i8, i8* %18, align 1
  %126 = icmp ne i8 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %124
  %128 = load i32, i32* %12, align 4
  %129 = load i32, i32* %11, align 4
  %130 = icmp sgt i32 %128, %129
  %131 = xor i1 %130, true
  %132 = xor i1 %131, true
  %133 = zext i1 %132 to i32
  %134 = sext i32 %133 to i64
  %135 = call i64 @llvm.expect.i64(i64 %134, i64 0)
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %127
  br label %156

138:                                              ; preds = %127
  br label %139

139:                                              ; preds = %138, %124
  %140 = load %3*, %3** %13, align 8
  %141 = getelementptr inbounds %3, %3* %140, i32 1
  store %3* %141, %3** %13, align 8
  %142 = load %3*, %3** %13, align 8
  store %3* %142, %3** %14, align 8
  %143 = load %3*, %3** %14, align 8
  %144 = call i32 @148(%3* %143, %3** %5, i32 0)
  %145 = icmp ne i32 %144, 0
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = zext i1 %148 to i32
  %150 = sext i32 %149 to i64
  %151 = call i64 @llvm.expect.i64(i64 %150, i64 0)
  %152 = icmp ne i64 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %139
  store i32 5, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %156

154:                                              ; preds = %139
  br label %155

155:                                              ; preds = %154
  br label %156

156:                                              ; preds = %155, %153, %137, %77
  %157 = load i32, i32* %19, align 4
  %158 = icmp ne i32 %157, 0
  %159 = xor i1 %158, true
  %160 = xor i1 %159, true
  %161 = zext i1 %160 to i32
  %162 = sext i32 %161 to i64
  %163 = call i64 @llvm.expect.i64(i64 %162, i64 0)
  %164 = icmp ne i64 %163, 0
  br i1 %164, label %165, label %194

165:                                              ; preds = %156
  %166 = load i32, i32* %19, align 4
  %167 = icmp eq i32 %166, 2
  br i1 %167, label %168, label %171

168:                                              ; preds = %165
  %169 = load i32, i32* %12, align 4
  %170 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %169, i8* %170)
  br label %187

171:                                              ; preds = %165
  %172 = load i32, i32* %19, align 4
  %173 = icmp eq i32 %172, 3
  br i1 %173, label %174, label %178

174:                                              ; preds = %171
  %175 = load i32, i32* %12, align 4
  %176 = load i8*, i8** %16, align 8
  %177 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %175, i8* %176, %3* %177)
  br label %186

178:                                              ; preds = %171
  %179 = load i32, i32* %19, align 4
  %180 = icmp eq i32 %179, 4
  br i1 %180, label %181, label %185

181:                                              ; preds = %178
  %182 = load i32, i32* %12, align 4
  %183 = load i32, i32* %15, align 4
  %184 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %182, i32 %183, %3* %184)
  br label %185

185:                                              ; preds = %181, %178
  br label %186

186:                                              ; preds = %185, %174
  br label %187

187:                                              ; preds = %186, %168
  br label %188

188:                                              ; preds = %187
  %189 = load %3*, %3** %4, align 8
  %190 = getelementptr inbounds %3, %3* %189, i32 0, i32 1
  %191 = bitcast %5* %190 to i32*
  store i32 2, i32* %191, align 8
  br label %192

192:                                              ; preds = %188
  br label %193

193:                                              ; preds = %192
  store i32 1, i32* %20, align 4
  br label %195

194:                                              ; preds = %156
  store i32 0, i32* %20, align 4
  br label %195

195:                                              ; preds = %194, %193
  %196 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %196) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  %197 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #11
  %198 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #11
  %199 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %199) #11
  %200 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %200) #11
  %201 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #11
  %202 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %202) #11
  %203 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %203) #11
  %204 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %204) #11
  %205 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %205) #11
  %206 = load i32, i32* %20, align 4
  switch i32 %206, label %256 [
    i32 0, label %207
  ]

207:                                              ; preds = %195
  br label %208

208:                                              ; preds = %207
  br label %209

209:                                              ; preds = %208
  br label %210

210:                                              ; preds = %209
  %211 = load %3*, %3** %5, align 8
  %212 = call zeroext i8 @150(%3* %211)
  %213 = zext i8 %212 to i32
  %214 = icmp eq i32 %213, 9
  %215 = xor i1 %214, true
  %216 = zext i1 %215 to i32
  %217 = sext i32 %216 to i64
  %218 = call i64 @llvm.expect.i64(i64 %217, i64 0)
  %219 = icmp ne i64 %218, 0
  br i1 %219, label %220, label %221

220:                                              ; preds = %210
  unreachable

221:                                              ; preds = %210
  br label %222

222:                                              ; preds = %221
  br label %223

223:                                              ; preds = %222
  br label %224

224:                                              ; preds = %223
  %225 = load %3*, %3** %5, align 8
  %226 = getelementptr inbounds %3, %3* %225, i32 0, i32 0
  %227 = bitcast %4* %226 to %7**
  %228 = load %7*, %7** %227, align 8
  %229 = call i32 @php_file_le_stream()
  %230 = call i32 @php_file_le_pstream()
  %231 = call i8* @zend_fetch_resource2(%7* %228, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %229, i32 %230)
  %232 = bitcast i8* %231 to %53*
  store %53* %232, %53** %7, align 8
  %233 = icmp eq %53* %232, null
  br i1 %233, label %234, label %241

234:                                              ; preds = %224
  br label %235

235:                                              ; preds = %234
  %236 = load %3*, %3** %4, align 8
  %237 = getelementptr inbounds %3, %3* %236, i32 0, i32 1
  %238 = bitcast %5* %237 to i32*
  store i32 2, i32* %238, align 8
  br label %239

239:                                              ; preds = %235
  br label %240

240:                                              ; preds = %239
  store i32 1, i32* %20, align 4
  br label %256

241:                                              ; preds = %224
  br label %242

242:                                              ; preds = %241
  br label %243

243:                                              ; preds = %242
  %244 = load %53*, %53** %7, align 8
  %245 = call i64 @_php_stream_passthru(%53* %244)
  store i64 %245, i64* %6, align 8
  %246 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %246) #11
  %247 = load %3*, %3** %4, align 8
  store %3* %247, %3** %21, align 8
  %248 = load i64, i64* %6, align 8
  %249 = load %3*, %3** %21, align 8
  %250 = getelementptr inbounds %3, %3* %249, i32 0, i32 0
  %251 = bitcast %4* %250 to i64*
  store i64 %248, i64* %251, align 8
  %252 = load %3*, %3** %21, align 8
  %253 = getelementptr inbounds %3, %3* %252, i32 0, i32 1
  %254 = bitcast %5* %253 to i32*
  store i32 4, i32* %254, align 8
  %255 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %255) #11
  store i32 1, i32* %20, align 4
  br label %256

256:                                              ; preds = %243, %240, %195
  %257 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %257) #11
  %258 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %258) #11
  %259 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #11
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_rename(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %3*, align 8
  %10 = alloca %60*, align 8
  %11 = alloca %1*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %3*, align 8
  %18 = alloca %3*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %25 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  %26 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #11
  %27 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  %28 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  %29 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #11
  store %3* null, %3** %9, align 8
  %30 = bitcast %60** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #11
  %31 = bitcast %1** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #11
  br label %32

32:                                               ; preds = %2
  %33 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #11
  store i32 0, i32* %12, align 4
  %34 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #11
  store i32 2, i32* %13, align 4
  %35 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #11
  store i32 3, i32* %14, align 4
  %36 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  %37 = load %28*, %28** %3, align 8
  %38 = getelementptr inbounds %28, %28* %37, i32 0, i32 4
  %39 = getelementptr inbounds %3, %3* %38, i32 0, i32 2
  %40 = bitcast %6* %39 to i32*
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %15, align 4
  %42 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  %43 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #11
  %44 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #11
  store %3* null, %3** %18, align 8
  %45 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #11
  store i32 0, i32* %19, align 4
  %46 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #11
  store i8* null, i8** %20, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #11
  store i8 0, i8* %22, align 1
  %47 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  store i32 0, i32* %23, align 4
  %48 = load i32, i32* %16, align 4
  %49 = load %3*, %3** %17, align 8
  %50 = load %3*, %3** %18, align 8
  %51 = load i32, i32* %19, align 4
  %52 = load i8*, i8** %20, align 8
  %53 = load i8, i8* %21, align 1
  %54 = load i8, i8* %22, align 1
  br label %55

55:                                               ; preds = %32
  %56 = load i32, i32* %15, align 4
  %57 = load i32, i32* %13, align 4
  %58 = icmp slt i32 %56, %57
  %59 = xor i1 %58, true
  %60 = xor i1 %59, true
  %61 = zext i1 %60 to i32
  %62 = sext i32 %61 to i64
  %63 = call i64 @llvm.expect.i64(i64 %62, i64 0)
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %84, label %65

65:                                               ; preds = %55
  %66 = load i32, i32* %15, align 4
  %67 = load i32, i32* %14, align 4
  %68 = icmp sgt i32 %66, %67
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 0)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %88

75:                                               ; preds = %65
  %76 = load i32, i32* %14, align 4
  %77 = icmp sge i32 %76, 0
  %78 = xor i1 %77, true
  %79 = xor i1 %78, true
  %80 = zext i1 %79 to i32
  %81 = sext i32 %80 to i64
  %82 = call i64 @llvm.expect.i64(i64 %81, i64 1)
  %83 = icmp ne i64 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %75, %55
  %85 = load i32, i32* %15, align 4
  %86 = load i32, i32* %13, align 4
  %87 = load i32, i32* %14, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %85, i32 %86, i32 %87)
  store i32 1, i32* %23, align 4
  br label %303

88:                                               ; preds = %75, %65
  store i32 0, i32* %16, align 4
  %89 = load %28*, %28** %3, align 8
  %90 = bitcast %28* %89 to %3*
  %91 = getelementptr inbounds %3, %3* %90, i64 4
  store %3* %91, %3** %17, align 8
  %92 = load i32, i32* %16, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %16, align 4
  br label %94

94:                                               ; preds = %88
  %95 = load i32, i32* %16, align 4
  %96 = load i32, i32* %13, align 4
  %97 = icmp sle i32 %95, %96
  br i1 %97, label %102, label %98

98:                                               ; preds = %94
  %99 = load i8, i8* %22, align 1
  %100 = zext i8 %99 to i32
  %101 = icmp eq i32 %100, 1
  br label %102

102:                                              ; preds = %98, %94
  %103 = phi i1 [ true, %94 ], [ %101, %98 ]
  %104 = xor i1 %103, true
  %105 = zext i1 %104 to i32
  %106 = sext i32 %105 to i64
  %107 = call i64 @llvm.expect.i64(i64 %106, i64 0)
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %102
  unreachable

110:                                              ; preds = %102
  br label %111

111:                                              ; preds = %110
  br label %112

112:                                              ; preds = %111
  br label %113

113:                                              ; preds = %112
  %114 = load i32, i32* %16, align 4
  %115 = load i32, i32* %13, align 4
  %116 = icmp sgt i32 %114, %115
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = load i8, i8* %22, align 1
  %119 = zext i8 %118 to i32
  %120 = icmp eq i32 %119, 0
  br label %121

121:                                              ; preds = %117, %113
  %122 = phi i1 [ true, %113 ], [ %120, %117 ]
  %123 = xor i1 %122, true
  %124 = zext i1 %123 to i32
  %125 = sext i32 %124 to i64
  %126 = call i64 @llvm.expect.i64(i64 %125, i64 0)
  %127 = icmp ne i64 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %121
  unreachable

129:                                              ; preds = %121
  br label %130

130:                                              ; preds = %129
  br label %131

131:                                              ; preds = %130
  %132 = load i8, i8* %22, align 1
  %133 = icmp ne i8 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %131
  %135 = load i32, i32* %16, align 4
  %136 = load i32, i32* %15, align 4
  %137 = icmp sgt i32 %135, %136
  %138 = xor i1 %137, true
  %139 = xor i1 %138, true
  %140 = zext i1 %139 to i32
  %141 = sext i32 %140 to i64
  %142 = call i64 @llvm.expect.i64(i64 %141, i64 0)
  %143 = icmp ne i64 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %134
  br label %303

145:                                              ; preds = %134
  br label %146

146:                                              ; preds = %145, %131
  %147 = load %3*, %3** %17, align 8
  %148 = getelementptr inbounds %3, %3* %147, i32 1
  store %3* %148, %3** %17, align 8
  %149 = load %3*, %3** %17, align 8
  store %3* %149, %3** %18, align 8
  %150 = load %3*, %3** %18, align 8
  %151 = call i32 @152(%3* %150, i8** %5, i64* %7, i32 0)
  %152 = icmp ne i32 %151, 0
  %153 = xor i1 %152, true
  %154 = xor i1 %153, true
  %155 = xor i1 %154, true
  %156 = zext i1 %155 to i32
  %157 = sext i32 %156 to i64
  %158 = call i64 @llvm.expect.i64(i64 %157, i64 0)
  %159 = icmp ne i64 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %146
  store i32 6, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %303

161:                                              ; preds = %146
  %162 = load i32, i32* %16, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %16, align 4
  br label %164

164:                                              ; preds = %161
  %165 = load i32, i32* %16, align 4
  %166 = load i32, i32* %13, align 4
  %167 = icmp sle i32 %165, %166
  br i1 %167, label %172, label %168

168:                                              ; preds = %164
  %169 = load i8, i8* %22, align 1
  %170 = zext i8 %169 to i32
  %171 = icmp eq i32 %170, 1
  br label %172

172:                                              ; preds = %168, %164
  %173 = phi i1 [ true, %164 ], [ %171, %168 ]
  %174 = xor i1 %173, true
  %175 = zext i1 %174 to i32
  %176 = sext i32 %175 to i64
  %177 = call i64 @llvm.expect.i64(i64 %176, i64 0)
  %178 = icmp ne i64 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %172
  unreachable

180:                                              ; preds = %172
  br label %181

181:                                              ; preds = %180
  br label %182

182:                                              ; preds = %181
  br label %183

183:                                              ; preds = %182
  %184 = load i32, i32* %16, align 4
  %185 = load i32, i32* %13, align 4
  %186 = icmp sgt i32 %184, %185
  br i1 %186, label %191, label %187

187:                                              ; preds = %183
  %188 = load i8, i8* %22, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp eq i32 %189, 0
  br label %191

191:                                              ; preds = %187, %183
  %192 = phi i1 [ true, %183 ], [ %190, %187 ]
  %193 = xor i1 %192, true
  %194 = zext i1 %193 to i32
  %195 = sext i32 %194 to i64
  %196 = call i64 @llvm.expect.i64(i64 %195, i64 0)
  %197 = icmp ne i64 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %191
  unreachable

199:                                              ; preds = %191
  br label %200

200:                                              ; preds = %199
  br label %201

201:                                              ; preds = %200
  %202 = load i8, i8* %22, align 1
  %203 = icmp ne i8 %202, 0
  br i1 %203, label %204, label %216

204:                                              ; preds = %201
  %205 = load i32, i32* %16, align 4
  %206 = load i32, i32* %15, align 4
  %207 = icmp sgt i32 %205, %206
  %208 = xor i1 %207, true
  %209 = xor i1 %208, true
  %210 = zext i1 %209 to i32
  %211 = sext i32 %210 to i64
  %212 = call i64 @llvm.expect.i64(i64 %211, i64 0)
  %213 = icmp ne i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %204
  br label %303

215:                                              ; preds = %204
  br label %216

216:                                              ; preds = %215, %201
  %217 = load %3*, %3** %17, align 8
  %218 = getelementptr inbounds %3, %3* %217, i32 1
  store %3* %218, %3** %17, align 8
  %219 = load %3*, %3** %17, align 8
  store %3* %219, %3** %18, align 8
  %220 = load %3*, %3** %18, align 8
  %221 = call i32 @152(%3* %220, i8** %6, i64* %8, i32 0)
  %222 = icmp ne i32 %221, 0
  %223 = xor i1 %222, true
  %224 = xor i1 %223, true
  %225 = xor i1 %224, true
  %226 = zext i1 %225 to i32
  %227 = sext i32 %226 to i64
  %228 = call i64 @llvm.expect.i64(i64 %227, i64 0)
  %229 = icmp ne i64 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %216
  store i32 6, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %303

231:                                              ; preds = %216
  store i8 1, i8* %22, align 1
  %232 = load i32, i32* %16, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %16, align 4
  br label %234

234:                                              ; preds = %231
  %235 = load i32, i32* %16, align 4
  %236 = load i32, i32* %13, align 4
  %237 = icmp sle i32 %235, %236
  br i1 %237, label %242, label %238

238:                                              ; preds = %234
  %239 = load i8, i8* %22, align 1
  %240 = zext i8 %239 to i32
  %241 = icmp eq i32 %240, 1
  br label %242

242:                                              ; preds = %238, %234
  %243 = phi i1 [ true, %234 ], [ %241, %238 ]
  %244 = xor i1 %243, true
  %245 = zext i1 %244 to i32
  %246 = sext i32 %245 to i64
  %247 = call i64 @llvm.expect.i64(i64 %246, i64 0)
  %248 = icmp ne i64 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %242
  unreachable

250:                                              ; preds = %242
  br label %251

251:                                              ; preds = %250
  br label %252

252:                                              ; preds = %251
  br label %253

253:                                              ; preds = %252
  %254 = load i32, i32* %16, align 4
  %255 = load i32, i32* %13, align 4
  %256 = icmp sgt i32 %254, %255
  br i1 %256, label %261, label %257

257:                                              ; preds = %253
  %258 = load i8, i8* %22, align 1
  %259 = zext i8 %258 to i32
  %260 = icmp eq i32 %259, 0
  br label %261

261:                                              ; preds = %257, %253
  %262 = phi i1 [ true, %253 ], [ %260, %257 ]
  %263 = xor i1 %262, true
  %264 = zext i1 %263 to i32
  %265 = sext i32 %264 to i64
  %266 = call i64 @llvm.expect.i64(i64 %265, i64 0)
  %267 = icmp ne i64 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %261
  unreachable

269:                                              ; preds = %261
  br label %270

270:                                              ; preds = %269
  br label %271

271:                                              ; preds = %270
  %272 = load i8, i8* %22, align 1
  %273 = icmp ne i8 %272, 0
  br i1 %273, label %274, label %286

274:                                              ; preds = %271
  %275 = load i32, i32* %16, align 4
  %276 = load i32, i32* %15, align 4
  %277 = icmp sgt i32 %275, %276
  %278 = xor i1 %277, true
  %279 = xor i1 %278, true
  %280 = zext i1 %279 to i32
  %281 = sext i32 %280 to i64
  %282 = call i64 @llvm.expect.i64(i64 %281, i64 0)
  %283 = icmp ne i64 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %274
  br label %303

285:                                              ; preds = %274
  br label %286

286:                                              ; preds = %285, %271
  %287 = load %3*, %3** %17, align 8
  %288 = getelementptr inbounds %3, %3* %287, i32 1
  store %3* %288, %3** %17, align 8
  %289 = load %3*, %3** %17, align 8
  store %3* %289, %3** %18, align 8
  %290 = load %3*, %3** %18, align 8
  %291 = call i32 @148(%3* %290, %3** %9, i32 0)
  %292 = icmp ne i32 %291, 0
  %293 = xor i1 %292, true
  %294 = xor i1 %293, true
  %295 = xor i1 %294, true
  %296 = zext i1 %295 to i32
  %297 = sext i32 %296 to i64
  %298 = call i64 @llvm.expect.i64(i64 %297, i64 0)
  %299 = icmp ne i64 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %286
  store i32 5, i32* %19, align 4
  store i32 4, i32* %23, align 4
  br label %303

301:                                              ; preds = %286
  br label %302

302:                                              ; preds = %301
  br label %303

303:                                              ; preds = %302, %300, %284, %230, %214, %160, %144, %84
  %304 = load i32, i32* %23, align 4
  %305 = icmp ne i32 %304, 0
  %306 = xor i1 %305, true
  %307 = xor i1 %306, true
  %308 = zext i1 %307 to i32
  %309 = sext i32 %308 to i64
  %310 = call i64 @llvm.expect.i64(i64 %309, i64 0)
  %311 = icmp ne i64 %310, 0
  br i1 %311, label %312, label %341

312:                                              ; preds = %303
  %313 = load i32, i32* %23, align 4
  %314 = icmp eq i32 %313, 2
  br i1 %314, label %315, label %318

315:                                              ; preds = %312
  %316 = load i32, i32* %16, align 4
  %317 = load i8*, i8** %20, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %316, i8* %317)
  br label %334

318:                                              ; preds = %312
  %319 = load i32, i32* %23, align 4
  %320 = icmp eq i32 %319, 3
  br i1 %320, label %321, label %325

321:                                              ; preds = %318
  %322 = load i32, i32* %16, align 4
  %323 = load i8*, i8** %20, align 8
  %324 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %322, i8* %323, %3* %324)
  br label %333

325:                                              ; preds = %318
  %326 = load i32, i32* %23, align 4
  %327 = icmp eq i32 %326, 4
  br i1 %327, label %328, label %332

328:                                              ; preds = %325
  %329 = load i32, i32* %16, align 4
  %330 = load i32, i32* %19, align 4
  %331 = load %3*, %3** %18, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %329, i32 %330, %3* %331)
  br label %332

332:                                              ; preds = %328, %325
  br label %333

333:                                              ; preds = %332, %321
  br label %334

334:                                              ; preds = %333, %315
  br label %335

335:                                              ; preds = %334
  %336 = load %3*, %3** %4, align 8
  %337 = getelementptr inbounds %3, %3* %336, i32 0, i32 1
  %338 = bitcast %5* %337 to i32*
  store i32 2, i32* %338, align 8
  br label %339

339:                                              ; preds = %335
  br label %340

340:                                              ; preds = %339
  store i32 1, i32* %24, align 4
  br label %342

341:                                              ; preds = %303
  store i32 0, i32* %24, align 4
  br label %342

342:                                              ; preds = %341, %340
  %343 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %343) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #11
  %344 = bitcast i8** %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %344) #11
  %345 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %345) #11
  %346 = bitcast %3** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %346) #11
  %347 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %347) #11
  %348 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %348) #11
  %349 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %349) #11
  %350 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %350) #11
  %351 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %351) #11
  %352 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %352) #11
  %353 = load i32, i32* %24, align 4
  switch i32 %353, label %453 [
    i32 0, label %354
  ]

354:                                              ; preds = %342
  br label %355

355:                                              ; preds = %354
  br label %356

356:                                              ; preds = %355
  %357 = load i8*, i8** %5, align 8
  %358 = call %60* @php_stream_locate_url_wrapper(i8* %357, i8** null, i32 0)
  store %60* %358, %60** %10, align 8
  %359 = load %60*, %60** %10, align 8
  %360 = icmp ne %60* %359, null
  br i1 %360, label %361, label %366

361:                                              ; preds = %356
  %362 = load %60*, %60** %10, align 8
  %363 = getelementptr inbounds %60, %60* %362, i32 0, i32 0
  %364 = load %61*, %61** %363, align 8
  %365 = icmp ne %61* %364, null
  br i1 %365, label %373, label %366

366:                                              ; preds = %361, %356
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @103, i32 0, i32 0))
  br label %367

367:                                              ; preds = %366
  %368 = load %3*, %3** %4, align 8
  %369 = getelementptr inbounds %3, %3* %368, i32 0, i32 1
  %370 = bitcast %5* %369 to i32*
  store i32 2, i32* %370, align 8
  br label %371

371:                                              ; preds = %367
  br label %372

372:                                              ; preds = %371
  store i32 1, i32* %24, align 4
  br label %453

373:                                              ; preds = %361
  %374 = load %60*, %60** %10, align 8
  %375 = getelementptr inbounds %60, %60* %374, i32 0, i32 0
  %376 = load %61*, %61** %375, align 8
  %377 = getelementptr inbounds %61, %61* %376, i32 0, i32 7
  %378 = load i32 (%60*, i8*, i8*, i32, %1*)*, i32 (%60*, i8*, i8*, i32, %1*)** %377, align 8
  %379 = icmp ne i32 (%60*, i8*, i8*, i32, %1*)* %378, null
  br i1 %379, label %402, label %380

380:                                              ; preds = %373
  %381 = load %60*, %60** %10, align 8
  %382 = getelementptr inbounds %60, %60* %381, i32 0, i32 0
  %383 = load %61*, %61** %382, align 8
  %384 = getelementptr inbounds %61, %61* %383, i32 0, i32 5
  %385 = load i8*, i8** %384, align 8
  %386 = icmp ne i8* %385, null
  br i1 %386, label %387, label %393

387:                                              ; preds = %380
  %388 = load %60*, %60** %10, align 8
  %389 = getelementptr inbounds %60, %60* %388, i32 0, i32 0
  %390 = load %61*, %61** %389, align 8
  %391 = getelementptr inbounds %61, %61* %390, i32 0, i32 5
  %392 = load i8*, i8** %391, align 8
  br label %394

393:                                              ; preds = %380
  br label %394

394:                                              ; preds = %393, %387
  %395 = phi i8* [ %392, %387 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @105, i32 0, i32 0), %393 ]
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @104, i32 0, i32 0), i8* %395)
  br label %396

396:                                              ; preds = %394
  %397 = load %3*, %3** %4, align 8
  %398 = getelementptr inbounds %3, %3* %397, i32 0, i32 1
  %399 = bitcast %5* %398 to i32*
  store i32 2, i32* %399, align 8
  br label %400

400:                                              ; preds = %396
  br label %401

401:                                              ; preds = %400
  store i32 1, i32* %24, align 4
  br label %453

402:                                              ; preds = %373
  %403 = load %60*, %60** %10, align 8
  %404 = load i8*, i8** %6, align 8
  %405 = call %60* @php_stream_locate_url_wrapper(i8* %404, i8** null, i32 0)
  %406 = icmp ne %60* %403, %405
  br i1 %406, label %407, label %414

407:                                              ; preds = %402
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @106, i32 0, i32 0))
  br label %408

408:                                              ; preds = %407
  %409 = load %3*, %3** %4, align 8
  %410 = getelementptr inbounds %3, %3* %409, i32 0, i32 1
  %411 = bitcast %5* %410 to i32*
  store i32 2, i32* %411, align 8
  br label %412

412:                                              ; preds = %408
  br label %413

413:                                              ; preds = %412
  store i32 1, i32* %24, align 4
  br label %453

414:                                              ; preds = %402
  %415 = load %3*, %3** %9, align 8
  %416 = icmp ne %3* %415, null
  br i1 %416, label %417, label %421

417:                                              ; preds = %414
  %418 = load %3*, %3** %9, align 8
  %419 = call i32 @php_le_stream_context()
  %420 = call i8* @zend_fetch_resource_ex(%3* %418, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %419)
  br label %431

421:                                              ; preds = %414
  %422 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %423 = icmp ne %1* %422, null
  br i1 %423, label %424, label %426

424:                                              ; preds = %421
  %425 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %428

426:                                              ; preds = %421
  %427 = call %1* @php_stream_context_alloc()
  store %1* %427, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %428

428:                                              ; preds = %426, %424
  %429 = phi %1* [ %425, %424 ], [ %427, %426 ]
  %430 = bitcast %1* %429 to i8*
  br label %431

431:                                              ; preds = %428, %417
  %432 = phi i8* [ %420, %417 ], [ %430, %428 ]
  %433 = bitcast i8* %432 to %1*
  store %1* %433, %1** %11, align 8
  br label %434

434:                                              ; preds = %431
  %435 = load %60*, %60** %10, align 8
  %436 = getelementptr inbounds %60, %60* %435, i32 0, i32 0
  %437 = load %61*, %61** %436, align 8
  %438 = getelementptr inbounds %61, %61* %437, i32 0, i32 7
  %439 = load i32 (%60*, i8*, i8*, i32, %1*)*, i32 (%60*, i8*, i8*, i32, %1*)** %438, align 8
  %440 = load %60*, %60** %10, align 8
  %441 = load i8*, i8** %5, align 8
  %442 = load i8*, i8** %6, align 8
  %443 = load %1*, %1** %11, align 8
  %444 = call i32 %439(%60* %440, i8* %441, i8* %442, i32 0, %1* %443)
  %445 = icmp ne i32 %444, 0
  %446 = zext i1 %445 to i64
  %447 = select i1 %445, i32 3, i32 2
  %448 = load %3*, %3** %4, align 8
  %449 = getelementptr inbounds %3, %3* %448, i32 0, i32 1
  %450 = bitcast %5* %449 to i32*
  store i32 %447, i32* %450, align 8
  br label %451

451:                                              ; preds = %434
  br label %452

452:                                              ; preds = %451
  store i32 1, i32* %24, align 4
  br label %453

453:                                              ; preds = %452, %413, %401, %372, %342
  %454 = bitcast %1** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %454) #11
  %455 = bitcast %60** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %455) #11
  %456 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %456) #11
  %457 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %457) #11
  %458 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %458) #11
  %459 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %459) #11
  %460 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %460) #11
  ret void
}

declare dso_local %60* @php_stream_locate_url_wrapper(i8*, i8**, i32) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_unlink(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %60*, align 8
  %8 = alloca %3*, align 8
  %9 = alloca %1*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %3*, align 8
  %16 = alloca %3*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %23 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  %24 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  %25 = bitcast %60** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  %26 = bitcast %3** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #11
  store %3* null, %3** %8, align 8
  %27 = bitcast %1** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  store %1* null, %1** %9, align 8
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  store i32 0, i32* %10, align 4
  %30 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #11
  store i32 1, i32* %11, align 4
  %31 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #11
  store i32 2, i32* %12, align 4
  %32 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  %33 = load %28*, %28** %3, align 8
  %34 = getelementptr inbounds %28, %28* %33, i32 0, i32 4
  %35 = getelementptr inbounds %3, %3* %34, i32 0, i32 2
  %36 = bitcast %6* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %13, align 4
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  %39 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  %40 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  store %3* null, %3** %16, align 8
  %41 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #11
  store i32 0, i32* %17, align 4
  %42 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #11
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #11
  store i8 0, i8* %20, align 1
  %43 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  store i32 0, i32* %21, align 4
  %44 = load i32, i32* %14, align 4
  %45 = load %3*, %3** %15, align 8
  %46 = load %3*, %3** %16, align 8
  %47 = load i32, i32* %17, align 4
  %48 = load i8*, i8** %18, align 8
  %49 = load i8, i8* %19, align 1
  %50 = load i8, i8* %20, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %13, align 4
  %53 = load i32, i32* %11, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %13, align 4
  %63 = load i32, i32* %12, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %12, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %13, align 4
  %82 = load i32, i32* %11, align 4
  %83 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %21, align 4
  br label %229

84:                                               ; preds = %71, %61
  store i32 0, i32* %14, align 4
  %85 = load %28*, %28** %3, align 8
  %86 = bitcast %28* %85 to %3*
  %87 = getelementptr inbounds %3, %3* %86, i64 4
  store %3* %87, %3** %15, align 8
  %88 = load i32, i32* %14, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %14, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %14, align 4
  %92 = load i32, i32* %11, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %20, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %14, align 4
  %111 = load i32, i32* %11, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %20, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %20, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %14, align 4
  %132 = load i32, i32* %13, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %229

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %3*, %3** %15, align 8
  %144 = getelementptr inbounds %3, %3* %143, i32 1
  store %3* %144, %3** %15, align 8
  %145 = load %3*, %3** %15, align 8
  store %3* %145, %3** %16, align 8
  %146 = load %3*, %3** %16, align 8
  %147 = call i32 @152(%3* %146, i8** %5, i64* %6, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 6, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %229

157:                                              ; preds = %142
  store i8 1, i8* %20, align 1
  %158 = load i32, i32* %14, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %14, align 4
  br label %160

160:                                              ; preds = %157
  %161 = load i32, i32* %14, align 4
  %162 = load i32, i32* %11, align 4
  %163 = icmp sle i32 %161, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = load i8, i8* %20, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %166, 1
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi i1 [ true, %160 ], [ %167, %164 ]
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %168
  unreachable

176:                                              ; preds = %168
  br label %177

177:                                              ; preds = %176
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %14, align 4
  %181 = load i32, i32* %11, align 4
  %182 = icmp sgt i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %20, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 0
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  %198 = load i8, i8* %20, align 1
  %199 = icmp ne i8 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %197
  %201 = load i32, i32* %14, align 4
  %202 = load i32, i32* %13, align 4
  %203 = icmp sgt i32 %201, %202
  %204 = xor i1 %203, true
  %205 = xor i1 %204, true
  %206 = zext i1 %205 to i32
  %207 = sext i32 %206 to i64
  %208 = call i64 @llvm.expect.i64(i64 %207, i64 0)
  %209 = icmp ne i64 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %200
  br label %229

211:                                              ; preds = %200
  br label %212

212:                                              ; preds = %211, %197
  %213 = load %3*, %3** %15, align 8
  %214 = getelementptr inbounds %3, %3* %213, i32 1
  store %3* %214, %3** %15, align 8
  %215 = load %3*, %3** %15, align 8
  store %3* %215, %3** %16, align 8
  %216 = load %3*, %3** %16, align 8
  %217 = call i32 @148(%3* %216, %3** %8, i32 0)
  %218 = icmp ne i32 %217, 0
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i32
  %223 = sext i32 %222 to i64
  %224 = call i64 @llvm.expect.i64(i64 %223, i64 0)
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %212
  store i32 5, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %229

227:                                              ; preds = %212
  br label %228

228:                                              ; preds = %227
  br label %229

229:                                              ; preds = %228, %226, %210, %156, %140, %80
  %230 = load i32, i32* %21, align 4
  %231 = icmp ne i32 %230, 0
  %232 = xor i1 %231, true
  %233 = xor i1 %232, true
  %234 = zext i1 %233 to i32
  %235 = sext i32 %234 to i64
  %236 = call i64 @llvm.expect.i64(i64 %235, i64 0)
  %237 = icmp ne i64 %236, 0
  br i1 %237, label %238, label %267

238:                                              ; preds = %229
  %239 = load i32, i32* %21, align 4
  %240 = icmp eq i32 %239, 2
  br i1 %240, label %241, label %244

241:                                              ; preds = %238
  %242 = load i32, i32* %14, align 4
  %243 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %242, i8* %243)
  br label %260

244:                                              ; preds = %238
  %245 = load i32, i32* %21, align 4
  %246 = icmp eq i32 %245, 3
  br i1 %246, label %247, label %251

247:                                              ; preds = %244
  %248 = load i32, i32* %14, align 4
  %249 = load i8*, i8** %18, align 8
  %250 = load %3*, %3** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %248, i8* %249, %3* %250)
  br label %259

251:                                              ; preds = %244
  %252 = load i32, i32* %21, align 4
  %253 = icmp eq i32 %252, 4
  br i1 %253, label %254, label %258

254:                                              ; preds = %251
  %255 = load i32, i32* %14, align 4
  %256 = load i32, i32* %17, align 4
  %257 = load %3*, %3** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %255, i32 %256, %3* %257)
  br label %258

258:                                              ; preds = %254, %251
  br label %259

259:                                              ; preds = %258, %247
  br label %260

260:                                              ; preds = %259, %241
  br label %261

261:                                              ; preds = %260
  %262 = load %3*, %3** %4, align 8
  %263 = getelementptr inbounds %3, %3* %262, i32 0, i32 1
  %264 = bitcast %5* %263 to i32*
  store i32 2, i32* %264, align 8
  br label %265

265:                                              ; preds = %261
  br label %266

266:                                              ; preds = %265
  store i32 1, i32* %22, align 4
  br label %268

267:                                              ; preds = %229
  store i32 0, i32* %22, align 4
  br label %268

268:                                              ; preds = %267, %266
  %269 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #11
  %270 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #11
  %271 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #11
  %272 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #11
  %273 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %273) #11
  %274 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #11
  %275 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #11
  %276 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #11
  %277 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %277) #11
  %278 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #11
  %279 = load i32, i32* %22, align 4
  switch i32 %279, label %366 [
    i32 0, label %280
  ]

280:                                              ; preds = %268
  br label %281

281:                                              ; preds = %280
  br label %282

282:                                              ; preds = %281
  %283 = load %3*, %3** %8, align 8
  %284 = icmp ne %3* %283, null
  br i1 %284, label %285, label %289

285:                                              ; preds = %282
  %286 = load %3*, %3** %8, align 8
  %287 = call i32 @php_le_stream_context()
  %288 = call i8* @zend_fetch_resource_ex(%3* %286, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %287)
  br label %299

289:                                              ; preds = %282
  %290 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %291 = icmp ne %1* %290, null
  br i1 %291, label %292, label %294

292:                                              ; preds = %289
  %293 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %296

294:                                              ; preds = %289
  %295 = call %1* @php_stream_context_alloc()
  store %1* %295, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %296

296:                                              ; preds = %294, %292
  %297 = phi %1* [ %293, %292 ], [ %295, %294 ]
  %298 = bitcast %1* %297 to i8*
  br label %299

299:                                              ; preds = %296, %285
  %300 = phi i8* [ %288, %285 ], [ %298, %296 ]
  %301 = bitcast i8* %300 to %1*
  store %1* %301, %1** %9, align 8
  %302 = load i8*, i8** %5, align 8
  %303 = call %60* @php_stream_locate_url_wrapper(i8* %302, i8** null, i32 0)
  store %60* %303, %60** %7, align 8
  %304 = load %60*, %60** %7, align 8
  %305 = icmp ne %60* %304, null
  br i1 %305, label %306, label %311

306:                                              ; preds = %299
  %307 = load %60*, %60** %7, align 8
  %308 = getelementptr inbounds %60, %60* %307, i32 0, i32 0
  %309 = load %61*, %61** %308, align 8
  %310 = icmp ne %61* %309, null
  br i1 %310, label %318, label %311

311:                                              ; preds = %306, %299
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @103, i32 0, i32 0))
  br label %312

312:                                              ; preds = %311
  %313 = load %3*, %3** %4, align 8
  %314 = getelementptr inbounds %3, %3* %313, i32 0, i32 1
  %315 = bitcast %5* %314 to i32*
  store i32 2, i32* %315, align 8
  br label %316

316:                                              ; preds = %312
  br label %317

317:                                              ; preds = %316
  store i32 1, i32* %22, align 4
  br label %366

318:                                              ; preds = %306
  %319 = load %60*, %60** %7, align 8
  %320 = getelementptr inbounds %60, %60* %319, i32 0, i32 0
  %321 = load %61*, %61** %320, align 8
  %322 = getelementptr inbounds %61, %61* %321, i32 0, i32 6
  %323 = load i32 (%60*, i8*, i32, %1*)*, i32 (%60*, i8*, i32, %1*)** %322, align 8
  %324 = icmp ne i32 (%60*, i8*, i32, %1*)* %323, null
  br i1 %324, label %347, label %325

325:                                              ; preds = %318
  %326 = load %60*, %60** %7, align 8
  %327 = getelementptr inbounds %60, %60* %326, i32 0, i32 0
  %328 = load %61*, %61** %327, align 8
  %329 = getelementptr inbounds %61, %61* %328, i32 0, i32 5
  %330 = load i8*, i8** %329, align 8
  %331 = icmp ne i8* %330, null
  br i1 %331, label %332, label %338

332:                                              ; preds = %325
  %333 = load %60*, %60** %7, align 8
  %334 = getelementptr inbounds %60, %60* %333, i32 0, i32 0
  %335 = load %61*, %61** %334, align 8
  %336 = getelementptr inbounds %61, %61* %335, i32 0, i32 5
  %337 = load i8*, i8** %336, align 8
  br label %339

338:                                              ; preds = %325
  br label %339

339:                                              ; preds = %338, %332
  %340 = phi i8* [ %337, %332 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @108, i32 0, i32 0), %338 ]
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @107, i32 0, i32 0), i8* %340)
  br label %341

341:                                              ; preds = %339
  %342 = load %3*, %3** %4, align 8
  %343 = getelementptr inbounds %3, %3* %342, i32 0, i32 1
  %344 = bitcast %5* %343 to i32*
  store i32 2, i32* %344, align 8
  br label %345

345:                                              ; preds = %341
  br label %346

346:                                              ; preds = %345
  store i32 1, i32* %22, align 4
  br label %366

347:                                              ; preds = %318
  br label %348

348:                                              ; preds = %347
  %349 = load %60*, %60** %7, align 8
  %350 = getelementptr inbounds %60, %60* %349, i32 0, i32 0
  %351 = load %61*, %61** %350, align 8
  %352 = getelementptr inbounds %61, %61* %351, i32 0, i32 6
  %353 = load i32 (%60*, i8*, i32, %1*)*, i32 (%60*, i8*, i32, %1*)** %352, align 8
  %354 = load %60*, %60** %7, align 8
  %355 = load i8*, i8** %5, align 8
  %356 = load %1*, %1** %9, align 8
  %357 = call i32 %353(%60* %354, i8* %355, i32 8, %1* %356)
  %358 = icmp ne i32 %357, 0
  %359 = zext i1 %358 to i64
  %360 = select i1 %358, i32 3, i32 2
  %361 = load %3*, %3** %4, align 8
  %362 = getelementptr inbounds %3, %3* %361, i32 0, i32 1
  %363 = bitcast %5* %362 to i32*
  store i32 %360, i32* %363, align 8
  br label %364

364:                                              ; preds = %348
  br label %365

365:                                              ; preds = %364
  store i32 1, i32* %22, align 4
  br label %366

366:                                              ; preds = %365, %346, %317, %268
  %367 = bitcast %1** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %367) #11
  %368 = bitcast %3** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %368) #11
  %369 = bitcast %60** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %369) #11
  %370 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %370) #11
  %371 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %371) #11
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @php_if_ftruncate(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %53*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %3*, align 8
  %14 = alloca %3*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %21 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #11
  %22 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #11
  %23 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  br label %24

24:                                               ; preds = %2
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #11
  store i32 0, i32* %8, align 4
  %26 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  store i32 2, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #11
  store i32 2, i32* %10, align 4
  %28 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #11
  %29 = load %28*, %28** %3, align 8
  %30 = getelementptr inbounds %28, %28* %29, i32 0, i32 4
  %31 = getelementptr inbounds %3, %3* %30, i32 0, i32 2
  %32 = bitcast %6* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %11, align 4
  %34 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #11
  %35 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  %36 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  store %3* null, %3** %14, align 8
  %37 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  store i32 0, i32* %15, align 4
  %38 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #11
  store i8 0, i8* %18, align 1
  %39 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #11
  store i32 0, i32* %19, align 4
  %40 = load i32, i32* %12, align 4
  %41 = load %3*, %3** %13, align 8
  %42 = load %3*, %3** %14, align 8
  %43 = load i32, i32* %15, align 4
  %44 = load i8*, i8** %16, align 8
  %45 = load i8, i8* %17, align 1
  %46 = load i8, i8* %18, align 1
  br label %47

47:                                               ; preds = %24
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %9, align 4
  %50 = icmp slt i32 %48, %49
  %51 = xor i1 %50, true
  %52 = xor i1 %51, true
  %53 = zext i1 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = call i64 @llvm.expect.i64(i64 %54, i64 0)
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %76, label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %11, align 4
  %59 = load i32, i32* %10, align 4
  %60 = icmp sgt i32 %58, %59
  %61 = xor i1 %60, true
  %62 = xor i1 %61, true
  %63 = zext i1 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = call i64 @llvm.expect.i64(i64 %64, i64 0)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %80

67:                                               ; preds = %57
  %68 = load i32, i32* %10, align 4
  %69 = icmp sge i32 %68, 0
  %70 = xor i1 %69, true
  %71 = xor i1 %70, true
  %72 = zext i1 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = call i64 @llvm.expect.i64(i64 %73, i64 1)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %67, %47
  %77 = load i32, i32* %11, align 4
  %78 = load i32, i32* %9, align 4
  %79 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %77, i32 %78, i32 %79)
  store i32 1, i32* %19, align 4
  br label %225

80:                                               ; preds = %67, %57
  store i32 0, i32* %12, align 4
  %81 = load %28*, %28** %3, align 8
  %82 = bitcast %28* %81 to %3*
  %83 = getelementptr inbounds %3, %3* %82, i64 4
  store %3* %83, %3** %13, align 8
  %84 = load i32, i32* %12, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %12, align 4
  br label %86

86:                                               ; preds = %80
  %87 = load i32, i32* %12, align 4
  %88 = load i32, i32* %9, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = load i8, i8* %18, align 1
  %92 = zext i8 %91 to i32
  %93 = icmp eq i32 %92, 1
  br label %94

94:                                               ; preds = %90, %86
  %95 = phi i1 [ true, %86 ], [ %93, %90 ]
  %96 = xor i1 %95, true
  %97 = zext i1 %96 to i32
  %98 = sext i32 %97 to i64
  %99 = call i64 @llvm.expect.i64(i64 %98, i64 0)
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %94
  unreachable

102:                                              ; preds = %94
  br label %103

103:                                              ; preds = %102
  br label %104

104:                                              ; preds = %103
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %9, align 4
  %108 = icmp sgt i32 %106, %107
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = load i8, i8* %18, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi i1 [ true, %105 ], [ %112, %109 ]
  %115 = xor i1 %114, true
  %116 = zext i1 %115 to i32
  %117 = sext i32 %116 to i64
  %118 = call i64 @llvm.expect.i64(i64 %117, i64 0)
  %119 = icmp ne i64 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %113
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i8, i8* %18, align 1
  %125 = icmp ne i8 %124, 0
  br i1 %125, label %126, label %138

126:                                              ; preds = %123
  %127 = load i32, i32* %12, align 4
  %128 = load i32, i32* %11, align 4
  %129 = icmp sgt i32 %127, %128
  %130 = xor i1 %129, true
  %131 = xor i1 %130, true
  %132 = zext i1 %131 to i32
  %133 = sext i32 %132 to i64
  %134 = call i64 @llvm.expect.i64(i64 %133, i64 0)
  %135 = icmp ne i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %126
  br label %225

137:                                              ; preds = %126
  br label %138

138:                                              ; preds = %137, %123
  %139 = load %3*, %3** %13, align 8
  %140 = getelementptr inbounds %3, %3* %139, i32 1
  store %3* %140, %3** %13, align 8
  %141 = load %3*, %3** %13, align 8
  store %3* %141, %3** %14, align 8
  %142 = load %3*, %3** %14, align 8
  %143 = call i32 @148(%3* %142, %3** %5, i32 0)
  %144 = icmp ne i32 %143, 0
  %145 = xor i1 %144, true
  %146 = xor i1 %145, true
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = sext i32 %148 to i64
  %150 = call i64 @llvm.expect.i64(i64 %149, i64 0)
  %151 = icmp ne i64 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %138
  store i32 5, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %225

153:                                              ; preds = %138
  %154 = load i32, i32* %12, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %12, align 4
  br label %156

156:                                              ; preds = %153
  %157 = load i32, i32* %12, align 4
  %158 = load i32, i32* %9, align 4
  %159 = icmp sle i32 %157, %158
  br i1 %159, label %164, label %160

160:                                              ; preds = %156
  %161 = load i8, i8* %18, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp eq i32 %162, 1
  br label %164

164:                                              ; preds = %160, %156
  %165 = phi i1 [ true, %156 ], [ %163, %160 ]
  %166 = xor i1 %165, true
  %167 = zext i1 %166 to i32
  %168 = sext i32 %167 to i64
  %169 = call i64 @llvm.expect.i64(i64 %168, i64 0)
  %170 = icmp ne i64 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %164
  unreachable

172:                                              ; preds = %164
  br label %173

173:                                              ; preds = %172
  br label %174

174:                                              ; preds = %173
  br label %175

175:                                              ; preds = %174
  %176 = load i32, i32* %12, align 4
  %177 = load i32, i32* %9, align 4
  %178 = icmp sgt i32 %176, %177
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = load i8, i8* %18, align 1
  %181 = zext i8 %180 to i32
  %182 = icmp eq i32 %181, 0
  br label %183

183:                                              ; preds = %179, %175
  %184 = phi i1 [ true, %175 ], [ %182, %179 ]
  %185 = xor i1 %184, true
  %186 = zext i1 %185 to i32
  %187 = sext i32 %186 to i64
  %188 = call i64 @llvm.expect.i64(i64 %187, i64 0)
  %189 = icmp ne i64 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %183
  unreachable

191:                                              ; preds = %183
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  %194 = load i8, i8* %18, align 1
  %195 = icmp ne i8 %194, 0
  br i1 %195, label %196, label %208

196:                                              ; preds = %193
  %197 = load i32, i32* %12, align 4
  %198 = load i32, i32* %11, align 4
  %199 = icmp sgt i32 %197, %198
  %200 = xor i1 %199, true
  %201 = xor i1 %200, true
  %202 = zext i1 %201 to i32
  %203 = sext i32 %202 to i64
  %204 = call i64 @llvm.expect.i64(i64 %203, i64 0)
  %205 = icmp ne i64 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %196
  br label %225

207:                                              ; preds = %196
  br label %208

208:                                              ; preds = %207, %193
  %209 = load %3*, %3** %13, align 8
  %210 = getelementptr inbounds %3, %3* %209, i32 1
  store %3* %210, %3** %13, align 8
  %211 = load %3*, %3** %13, align 8
  store %3* %211, %3** %14, align 8
  %212 = load %3*, %3** %14, align 8
  %213 = call i32 @149(%3* %212, i64* %6, i8* %17, i32 0, i32 0)
  %214 = icmp ne i32 %213, 0
  %215 = xor i1 %214, true
  %216 = xor i1 %215, true
  %217 = xor i1 %216, true
  %218 = zext i1 %217 to i32
  %219 = sext i32 %218 to i64
  %220 = call i64 @llvm.expect.i64(i64 %219, i64 0)
  %221 = icmp ne i64 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %208
  store i32 0, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %225

223:                                              ; preds = %208
  br label %224

224:                                              ; preds = %223
  br label %225

225:                                              ; preds = %224, %222, %206, %152, %136, %76
  %226 = load i32, i32* %19, align 4
  %227 = icmp ne i32 %226, 0
  %228 = xor i1 %227, true
  %229 = xor i1 %228, true
  %230 = zext i1 %229 to i32
  %231 = sext i32 %230 to i64
  %232 = call i64 @llvm.expect.i64(i64 %231, i64 0)
  %233 = icmp ne i64 %232, 0
  br i1 %233, label %234, label %263

234:                                              ; preds = %225
  %235 = load i32, i32* %19, align 4
  %236 = icmp eq i32 %235, 2
  br i1 %236, label %237, label %240

237:                                              ; preds = %234
  %238 = load i32, i32* %12, align 4
  %239 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %238, i8* %239)
  br label %256

240:                                              ; preds = %234
  %241 = load i32, i32* %19, align 4
  %242 = icmp eq i32 %241, 3
  br i1 %242, label %243, label %247

243:                                              ; preds = %240
  %244 = load i32, i32* %12, align 4
  %245 = load i8*, i8** %16, align 8
  %246 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %244, i8* %245, %3* %246)
  br label %255

247:                                              ; preds = %240
  %248 = load i32, i32* %19, align 4
  %249 = icmp eq i32 %248, 4
  br i1 %249, label %250, label %254

250:                                              ; preds = %247
  %251 = load i32, i32* %12, align 4
  %252 = load i32, i32* %15, align 4
  %253 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %251, i32 %252, %3* %253)
  br label %254

254:                                              ; preds = %250, %247
  br label %255

255:                                              ; preds = %254, %243
  br label %256

256:                                              ; preds = %255, %237
  br label %257

257:                                              ; preds = %256
  %258 = load %3*, %3** %4, align 8
  %259 = getelementptr inbounds %3, %3* %258, i32 0, i32 1
  %260 = bitcast %5* %259 to i32*
  store i32 2, i32* %260, align 8
  br label %261

261:                                              ; preds = %257
  br label %262

262:                                              ; preds = %261
  store i32 1, i32* %20, align 4
  br label %264

263:                                              ; preds = %225
  store i32 0, i32* %20, align 4
  br label %264

264:                                              ; preds = %263, %262
  %265 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %265) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  %266 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %266) #11
  %267 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #11
  %268 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #11
  %269 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %269) #11
  %270 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %270) #11
  %271 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %271) #11
  %272 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #11
  %273 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #11
  %274 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #11
  %275 = load i32, i32* %20, align 4
  switch i32 %275, label %348 [
    i32 0, label %276
  ]

276:                                              ; preds = %264
  br label %277

277:                                              ; preds = %276
  br label %278

278:                                              ; preds = %277
  %279 = load i64, i64* %6, align 8
  %280 = icmp slt i64 %279, 0
  br i1 %280, label %281, label %288

281:                                              ; preds = %278
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @109, i32 0, i32 0))
  br label %282

282:                                              ; preds = %281
  %283 = load %3*, %3** %4, align 8
  %284 = getelementptr inbounds %3, %3* %283, i32 0, i32 1
  %285 = bitcast %5* %284 to i32*
  store i32 2, i32* %285, align 8
  br label %286

286:                                              ; preds = %282
  br label %287

287:                                              ; preds = %286
  store i32 1, i32* %20, align 4
  br label %348

288:                                              ; preds = %278
  br label %289

289:                                              ; preds = %288
  %290 = load %3*, %3** %5, align 8
  %291 = call zeroext i8 @150(%3* %290)
  %292 = zext i8 %291 to i32
  %293 = icmp eq i32 %292, 9
  %294 = xor i1 %293, true
  %295 = zext i1 %294 to i32
  %296 = sext i32 %295 to i64
  %297 = call i64 @llvm.expect.i64(i64 %296, i64 0)
  %298 = icmp ne i64 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %289
  unreachable

300:                                              ; preds = %289
  br label %301

301:                                              ; preds = %300
  br label %302

302:                                              ; preds = %301
  br label %303

303:                                              ; preds = %302
  %304 = load %3*, %3** %5, align 8
  %305 = getelementptr inbounds %3, %3* %304, i32 0, i32 0
  %306 = bitcast %4* %305 to %7**
  %307 = load %7*, %7** %306, align 8
  %308 = call i32 @php_file_le_stream()
  %309 = call i32 @php_file_le_pstream()
  %310 = call i8* @zend_fetch_resource2(%7* %307, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %308, i32 %309)
  %311 = bitcast i8* %310 to %53*
  store %53* %311, %53** %7, align 8
  %312 = icmp eq %53* %311, null
  br i1 %312, label %313, label %320

313:                                              ; preds = %303
  br label %314

314:                                              ; preds = %313
  %315 = load %3*, %3** %4, align 8
  %316 = getelementptr inbounds %3, %3* %315, i32 0, i32 1
  %317 = bitcast %5* %316 to i32*
  store i32 2, i32* %317, align 8
  br label %318

318:                                              ; preds = %314
  br label %319

319:                                              ; preds = %318
  store i32 1, i32* %20, align 4
  br label %348

320:                                              ; preds = %303
  br label %321

321:                                              ; preds = %320
  br label %322

322:                                              ; preds = %321
  %323 = load %53*, %53** %7, align 8
  %324 = call i32 @_php_stream_set_option(%53* %323, i32 10, i32 0, i8* null)
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %322
  br i1 true, label %335, label %328

327:                                              ; preds = %322
  br i1 false, label %335, label %328

328:                                              ; preds = %327, %326
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @110, i32 0, i32 0))
  br label %329

329:                                              ; preds = %328
  %330 = load %3*, %3** %4, align 8
  %331 = getelementptr inbounds %3, %3* %330, i32 0, i32 1
  %332 = bitcast %5* %331 to i32*
  store i32 2, i32* %332, align 8
  br label %333

333:                                              ; preds = %329
  br label %334

334:                                              ; preds = %333
  store i32 1, i32* %20, align 4
  br label %348

335:                                              ; preds = %327, %326
  br label %336

336:                                              ; preds = %335
  %337 = load %53*, %53** %7, align 8
  %338 = load i64, i64* %6, align 8
  %339 = call i32 @_php_stream_truncate_set_size(%53* %337, i64 %338)
  %340 = icmp eq i32 0, %339
  %341 = zext i1 %340 to i64
  %342 = select i1 %340, i32 3, i32 2
  %343 = load %3*, %3** %4, align 8
  %344 = getelementptr inbounds %3, %3* %343, i32 0, i32 1
  %345 = bitcast %5* %344 to i32*
  store i32 %342, i32* %345, align 8
  br label %346

346:                                              ; preds = %336
  br label %347

347:                                              ; preds = %346
  store i32 1, i32* %20, align 4
  br label %348

348:                                              ; preds = %347, %334, %319, %287, %264
  %349 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %349) #11
  %350 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %350) #11
  %351 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %351) #11
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @php_if_fstat(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca %3, align 8
  %7 = alloca %3, align 8
  %8 = alloca %3, align 8
  %9 = alloca %3, align 8
  %10 = alloca %3, align 8
  %11 = alloca %3, align 8
  %12 = alloca %3, align 8
  %13 = alloca %3, align 8
  %14 = alloca %3, align 8
  %15 = alloca %3, align 8
  %16 = alloca %3, align 8
  %17 = alloca %3, align 8
  %18 = alloca %3, align 8
  %19 = alloca %53*, align 8
  %20 = alloca %32, align 8
  %21 = alloca [13 x i8*], align 16
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca %3*, align 8
  %28 = alloca %3*, align 8
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i8, align 1
  %32 = alloca i8, align 1
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca %3*, align 8
  %36 = alloca %3*, align 8
  %37 = alloca %3*, align 8
  %38 = alloca %3*, align 8
  %39 = alloca %3*, align 8
  %40 = alloca %3*, align 8
  %41 = alloca %3*, align 8
  %42 = alloca %3*, align 8
  %43 = alloca %3*, align 8
  %44 = alloca %3*, align 8
  %45 = alloca %3*, align 8
  %46 = alloca %3*, align 8
  %47 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %48 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #11
  %49 = bitcast %3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %49) #11
  %50 = bitcast %3* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %50) #11
  %51 = bitcast %3* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %51) #11
  %52 = bitcast %3* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %52) #11
  %53 = bitcast %3* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %53) #11
  %54 = bitcast %3* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %54) #11
  %55 = bitcast %3* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %55) #11
  %56 = bitcast %3* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %56) #11
  %57 = bitcast %3* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %57) #11
  %58 = bitcast %3* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %58) #11
  %59 = bitcast %3* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %59) #11
  %60 = bitcast %3* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %60) #11
  %61 = bitcast %3* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %61) #11
  %62 = bitcast %53** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %62) #11
  %63 = bitcast %32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %63) #11
  %64 = bitcast [13 x i8*]* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* %64) #11
  %65 = bitcast [13 x i8*]* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %65, i8* align 16 bitcast ([13 x i8*]* @124 to i8*), i64 104, i1 false)
  br label %66

66:                                               ; preds = %2
  %67 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %67) #11
  store i32 0, i32* %22, align 4
  %68 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %68) #11
  store i32 1, i32* %23, align 4
  %69 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %69) #11
  store i32 1, i32* %24, align 4
  %70 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #11
  %71 = load %28*, %28** %3, align 8
  %72 = getelementptr inbounds %28, %28* %71, i32 0, i32 4
  %73 = getelementptr inbounds %3, %3* %72, i32 0, i32 2
  %74 = bitcast %6* %73 to i32*
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %25, align 4
  %76 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %76) #11
  %77 = bitcast %3** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %77) #11
  %78 = bitcast %3** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %78) #11
  store %3* null, %3** %28, align 8
  %79 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %79) #11
  store i32 0, i32* %29, align 4
  %80 = bitcast i8** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #11
  store i8* null, i8** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %31) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %32) #11
  store i8 0, i8* %32, align 1
  %81 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %81) #11
  store i32 0, i32* %33, align 4
  %82 = load i32, i32* %26, align 4
  %83 = load %3*, %3** %27, align 8
  %84 = load %3*, %3** %28, align 8
  %85 = load i32, i32* %29, align 4
  %86 = load i8*, i8** %30, align 8
  %87 = load i8, i8* %31, align 1
  %88 = load i8, i8* %32, align 1
  br label %89

89:                                               ; preds = %66
  %90 = load i32, i32* %25, align 4
  %91 = load i32, i32* %23, align 4
  %92 = icmp slt i32 %90, %91
  %93 = xor i1 %92, true
  %94 = xor i1 %93, true
  %95 = zext i1 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = call i64 @llvm.expect.i64(i64 %96, i64 0)
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %118, label %99

99:                                               ; preds = %89
  %100 = load i32, i32* %25, align 4
  %101 = load i32, i32* %24, align 4
  %102 = icmp sgt i32 %100, %101
  %103 = xor i1 %102, true
  %104 = xor i1 %103, true
  %105 = zext i1 %104 to i32
  %106 = sext i32 %105 to i64
  %107 = call i64 @llvm.expect.i64(i64 %106, i64 0)
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %109, label %122

109:                                              ; preds = %99
  %110 = load i32, i32* %24, align 4
  %111 = icmp sge i32 %110, 0
  %112 = xor i1 %111, true
  %113 = xor i1 %112, true
  %114 = zext i1 %113 to i32
  %115 = sext i32 %114 to i64
  %116 = call i64 @llvm.expect.i64(i64 %115, i64 1)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %109, %89
  %119 = load i32, i32* %25, align 4
  %120 = load i32, i32* %23, align 4
  %121 = load i32, i32* %24, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %119, i32 %120, i32 %121)
  store i32 1, i32* %33, align 4
  br label %197

122:                                              ; preds = %109, %99
  store i32 0, i32* %26, align 4
  %123 = load %28*, %28** %3, align 8
  %124 = bitcast %28* %123 to %3*
  %125 = getelementptr inbounds %3, %3* %124, i64 4
  store %3* %125, %3** %27, align 8
  %126 = load i32, i32* %26, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %26, align 4
  br label %128

128:                                              ; preds = %122
  %129 = load i32, i32* %26, align 4
  %130 = load i32, i32* %23, align 4
  %131 = icmp sle i32 %129, %130
  br i1 %131, label %136, label %132

132:                                              ; preds = %128
  %133 = load i8, i8* %32, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp eq i32 %134, 1
  br label %136

136:                                              ; preds = %132, %128
  %137 = phi i1 [ true, %128 ], [ %135, %132 ]
  %138 = xor i1 %137, true
  %139 = zext i1 %138 to i32
  %140 = sext i32 %139 to i64
  %141 = call i64 @llvm.expect.i64(i64 %140, i64 0)
  %142 = icmp ne i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %136
  unreachable

144:                                              ; preds = %136
  br label %145

145:                                              ; preds = %144
  br label %146

146:                                              ; preds = %145
  br label %147

147:                                              ; preds = %146
  %148 = load i32, i32* %26, align 4
  %149 = load i32, i32* %23, align 4
  %150 = icmp sgt i32 %148, %149
  br i1 %150, label %155, label %151

151:                                              ; preds = %147
  %152 = load i8, i8* %32, align 1
  %153 = zext i8 %152 to i32
  %154 = icmp eq i32 %153, 0
  br label %155

155:                                              ; preds = %151, %147
  %156 = phi i1 [ true, %147 ], [ %154, %151 ]
  %157 = xor i1 %156, true
  %158 = zext i1 %157 to i32
  %159 = sext i32 %158 to i64
  %160 = call i64 @llvm.expect.i64(i64 %159, i64 0)
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %155
  unreachable

163:                                              ; preds = %155
  br label %164

164:                                              ; preds = %163
  br label %165

165:                                              ; preds = %164
  %166 = load i8, i8* %32, align 1
  %167 = icmp ne i8 %166, 0
  br i1 %167, label %168, label %180

168:                                              ; preds = %165
  %169 = load i32, i32* %26, align 4
  %170 = load i32, i32* %25, align 4
  %171 = icmp sgt i32 %169, %170
  %172 = xor i1 %171, true
  %173 = xor i1 %172, true
  %174 = zext i1 %173 to i32
  %175 = sext i32 %174 to i64
  %176 = call i64 @llvm.expect.i64(i64 %175, i64 0)
  %177 = icmp ne i64 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %168
  br label %197

179:                                              ; preds = %168
  br label %180

180:                                              ; preds = %179, %165
  %181 = load %3*, %3** %27, align 8
  %182 = getelementptr inbounds %3, %3* %181, i32 1
  store %3* %182, %3** %27, align 8
  %183 = load %3*, %3** %27, align 8
  store %3* %183, %3** %28, align 8
  %184 = load %3*, %3** %28, align 8
  %185 = call i32 @148(%3* %184, %3** %5, i32 0)
  %186 = icmp ne i32 %185, 0
  %187 = xor i1 %186, true
  %188 = xor i1 %187, true
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %180
  store i32 5, i32* %29, align 4
  store i32 4, i32* %33, align 4
  br label %197

195:                                              ; preds = %180
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196, %194, %178, %118
  %198 = load i32, i32* %33, align 4
  %199 = icmp ne i32 %198, 0
  %200 = xor i1 %199, true
  %201 = xor i1 %200, true
  %202 = zext i1 %201 to i32
  %203 = sext i32 %202 to i64
  %204 = call i64 @llvm.expect.i64(i64 %203, i64 0)
  %205 = icmp ne i64 %204, 0
  br i1 %205, label %206, label %235

206:                                              ; preds = %197
  %207 = load i32, i32* %33, align 4
  %208 = icmp eq i32 %207, 2
  br i1 %208, label %209, label %212

209:                                              ; preds = %206
  %210 = load i32, i32* %26, align 4
  %211 = load i8*, i8** %30, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %210, i8* %211)
  br label %228

212:                                              ; preds = %206
  %213 = load i32, i32* %33, align 4
  %214 = icmp eq i32 %213, 3
  br i1 %214, label %215, label %219

215:                                              ; preds = %212
  %216 = load i32, i32* %26, align 4
  %217 = load i8*, i8** %30, align 8
  %218 = load %3*, %3** %28, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %216, i8* %217, %3* %218)
  br label %227

219:                                              ; preds = %212
  %220 = load i32, i32* %33, align 4
  %221 = icmp eq i32 %220, 4
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = load i32, i32* %26, align 4
  %224 = load i32, i32* %29, align 4
  %225 = load %3*, %3** %28, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %223, i32 %224, %3* %225)
  br label %226

226:                                              ; preds = %222, %219
  br label %227

227:                                              ; preds = %226, %215
  br label %228

228:                                              ; preds = %227, %209
  br label %229

229:                                              ; preds = %228
  %230 = load %3*, %3** %4, align 8
  %231 = getelementptr inbounds %3, %3* %230, i32 0, i32 1
  %232 = bitcast %5* %231 to i32*
  store i32 2, i32* %232, align 8
  br label %233

233:                                              ; preds = %229
  br label %234

234:                                              ; preds = %233
  store i32 1, i32* %34, align 4
  br label %236

235:                                              ; preds = %197
  store i32 0, i32* %34, align 4
  br label %236

236:                                              ; preds = %235, %234
  %237 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %237) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %32) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %31) #11
  %238 = bitcast i8** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %238) #11
  %239 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %239) #11
  %240 = bitcast %3** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %240) #11
  %241 = bitcast %3** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #11
  %242 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %242) #11
  %243 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %243) #11
  %244 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %244) #11
  %245 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %245) #11
  %246 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %246) #11
  %247 = load i32, i32* %34, align 4
  switch i32 %247, label %642 [
    i32 0, label %248
  ]

248:                                              ; preds = %236
  br label %249

249:                                              ; preds = %248
  br label %250

250:                                              ; preds = %249
  br label %251

251:                                              ; preds = %250
  %252 = load %3*, %3** %5, align 8
  %253 = call zeroext i8 @150(%3* %252)
  %254 = zext i8 %253 to i32
  %255 = icmp eq i32 %254, 9
  %256 = xor i1 %255, true
  %257 = zext i1 %256 to i32
  %258 = sext i32 %257 to i64
  %259 = call i64 @llvm.expect.i64(i64 %258, i64 0)
  %260 = icmp ne i64 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %251
  unreachable

262:                                              ; preds = %251
  br label %263

263:                                              ; preds = %262
  br label %264

264:                                              ; preds = %263
  br label %265

265:                                              ; preds = %264
  %266 = load %3*, %3** %5, align 8
  %267 = getelementptr inbounds %3, %3* %266, i32 0, i32 0
  %268 = bitcast %4* %267 to %7**
  %269 = load %7*, %7** %268, align 8
  %270 = call i32 @php_file_le_stream()
  %271 = call i32 @php_file_le_pstream()
  %272 = call i8* @zend_fetch_resource2(%7* %269, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %270, i32 %271)
  %273 = bitcast i8* %272 to %53*
  store %53* %273, %53** %19, align 8
  %274 = icmp eq %53* %273, null
  br i1 %274, label %275, label %282

275:                                              ; preds = %265
  br label %276

276:                                              ; preds = %275
  %277 = load %3*, %3** %4, align 8
  %278 = getelementptr inbounds %3, %3* %277, i32 0, i32 1
  %279 = bitcast %5* %278 to i32*
  store i32 2, i32* %279, align 8
  br label %280

280:                                              ; preds = %276
  br label %281

281:                                              ; preds = %280
  store i32 1, i32* %34, align 4
  br label %642

282:                                              ; preds = %265
  br label %283

283:                                              ; preds = %282
  br label %284

284:                                              ; preds = %283
  %285 = load %53*, %53** %19, align 8
  %286 = call i32 @_php_stream_stat(%53* %285, %32* %20)
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %288, label %295

288:                                              ; preds = %284
  br label %289

289:                                              ; preds = %288
  %290 = load %3*, %3** %4, align 8
  %291 = getelementptr inbounds %3, %3* %290, i32 0, i32 1
  %292 = bitcast %5* %291 to i32*
  store i32 2, i32* %292, align 8
  br label %293

293:                                              ; preds = %289
  br label %294

294:                                              ; preds = %293
  store i32 1, i32* %34, align 4
  br label %642

295:                                              ; preds = %284
  %296 = load %3*, %3** %4, align 8
  %297 = call i32 @_array_init(%3* %296, i32 0)
  %298 = bitcast %3** %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %298) #11
  store %3* %6, %3** %35, align 8
  %299 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %300 = getelementptr inbounds %33, %33* %299, i32 0, i32 0
  %301 = load i64, i64* %300, align 8
  %302 = load %3*, %3** %35, align 8
  %303 = getelementptr inbounds %3, %3* %302, i32 0, i32 0
  %304 = bitcast %4* %303 to i64*
  store i64 %301, i64* %304, align 8
  %305 = load %3*, %3** %35, align 8
  %306 = getelementptr inbounds %3, %3* %305, i32 0, i32 1
  %307 = bitcast %5* %306 to i32*
  store i32 4, i32* %307, align 8
  %308 = bitcast %3** %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %308) #11
  %309 = bitcast %3** %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %309) #11
  store %3* %7, %3** %36, align 8
  %310 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %311 = getelementptr inbounds %33, %33* %310, i32 0, i32 1
  %312 = load i64, i64* %311, align 8
  %313 = load %3*, %3** %36, align 8
  %314 = getelementptr inbounds %3, %3* %313, i32 0, i32 0
  %315 = bitcast %4* %314 to i64*
  store i64 %312, i64* %315, align 8
  %316 = load %3*, %3** %36, align 8
  %317 = getelementptr inbounds %3, %3* %316, i32 0, i32 1
  %318 = bitcast %5* %317 to i32*
  store i32 4, i32* %318, align 8
  %319 = bitcast %3** %36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %319) #11
  %320 = bitcast %3** %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %320) #11
  store %3* %8, %3** %37, align 8
  %321 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %322 = getelementptr inbounds %33, %33* %321, i32 0, i32 3
  %323 = load i32, i32* %322, align 8
  %324 = zext i32 %323 to i64
  %325 = load %3*, %3** %37, align 8
  %326 = getelementptr inbounds %3, %3* %325, i32 0, i32 0
  %327 = bitcast %4* %326 to i64*
  store i64 %324, i64* %327, align 8
  %328 = load %3*, %3** %37, align 8
  %329 = getelementptr inbounds %3, %3* %328, i32 0, i32 1
  %330 = bitcast %5* %329 to i32*
  store i32 4, i32* %330, align 8
  %331 = bitcast %3** %37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %331) #11
  %332 = bitcast %3** %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %332) #11
  store %3* %9, %3** %38, align 8
  %333 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %334 = getelementptr inbounds %33, %33* %333, i32 0, i32 2
  %335 = load i64, i64* %334, align 8
  %336 = load %3*, %3** %38, align 8
  %337 = getelementptr inbounds %3, %3* %336, i32 0, i32 0
  %338 = bitcast %4* %337 to i64*
  store i64 %335, i64* %338, align 8
  %339 = load %3*, %3** %38, align 8
  %340 = getelementptr inbounds %3, %3* %339, i32 0, i32 1
  %341 = bitcast %5* %340 to i32*
  store i32 4, i32* %341, align 8
  %342 = bitcast %3** %38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %342) #11
  %343 = bitcast %3** %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %343) #11
  store %3* %10, %3** %39, align 8
  %344 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %345 = getelementptr inbounds %33, %33* %344, i32 0, i32 4
  %346 = load i32, i32* %345, align 4
  %347 = zext i32 %346 to i64
  %348 = load %3*, %3** %39, align 8
  %349 = getelementptr inbounds %3, %3* %348, i32 0, i32 0
  %350 = bitcast %4* %349 to i64*
  store i64 %347, i64* %350, align 8
  %351 = load %3*, %3** %39, align 8
  %352 = getelementptr inbounds %3, %3* %351, i32 0, i32 1
  %353 = bitcast %5* %352 to i32*
  store i32 4, i32* %353, align 8
  %354 = bitcast %3** %39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %354) #11
  %355 = bitcast %3** %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %355) #11
  store %3* %11, %3** %40, align 8
  %356 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %357 = getelementptr inbounds %33, %33* %356, i32 0, i32 5
  %358 = load i32, i32* %357, align 8
  %359 = zext i32 %358 to i64
  %360 = load %3*, %3** %40, align 8
  %361 = getelementptr inbounds %3, %3* %360, i32 0, i32 0
  %362 = bitcast %4* %361 to i64*
  store i64 %359, i64* %362, align 8
  %363 = load %3*, %3** %40, align 8
  %364 = getelementptr inbounds %3, %3* %363, i32 0, i32 1
  %365 = bitcast %5* %364 to i32*
  store i32 4, i32* %365, align 8
  %366 = bitcast %3** %40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %366) #11
  %367 = bitcast %3** %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %367) #11
  store %3* %12, %3** %41, align 8
  %368 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %369 = getelementptr inbounds %33, %33* %368, i32 0, i32 7
  %370 = load i64, i64* %369, align 8
  %371 = load %3*, %3** %41, align 8
  %372 = getelementptr inbounds %3, %3* %371, i32 0, i32 0
  %373 = bitcast %4* %372 to i64*
  store i64 %370, i64* %373, align 8
  %374 = load %3*, %3** %41, align 8
  %375 = getelementptr inbounds %3, %3* %374, i32 0, i32 1
  %376 = bitcast %5* %375 to i32*
  store i32 4, i32* %376, align 8
  %377 = bitcast %3** %41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %377) #11
  %378 = bitcast %3** %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %378) #11
  store %3* %13, %3** %42, align 8
  %379 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %380 = getelementptr inbounds %33, %33* %379, i32 0, i32 8
  %381 = load i64, i64* %380, align 8
  %382 = load %3*, %3** %42, align 8
  %383 = getelementptr inbounds %3, %3* %382, i32 0, i32 0
  %384 = bitcast %4* %383 to i64*
  store i64 %381, i64* %384, align 8
  %385 = load %3*, %3** %42, align 8
  %386 = getelementptr inbounds %3, %3* %385, i32 0, i32 1
  %387 = bitcast %5* %386 to i32*
  store i32 4, i32* %387, align 8
  %388 = bitcast %3** %42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %388) #11
  %389 = bitcast %3** %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %389) #11
  store %3* %14, %3** %43, align 8
  %390 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %391 = getelementptr inbounds %33, %33* %390, i32 0, i32 11
  %392 = getelementptr inbounds %34, %34* %391, i32 0, i32 0
  %393 = load i64, i64* %392, align 8
  %394 = load %3*, %3** %43, align 8
  %395 = getelementptr inbounds %3, %3* %394, i32 0, i32 0
  %396 = bitcast %4* %395 to i64*
  store i64 %393, i64* %396, align 8
  %397 = load %3*, %3** %43, align 8
  %398 = getelementptr inbounds %3, %3* %397, i32 0, i32 1
  %399 = bitcast %5* %398 to i32*
  store i32 4, i32* %399, align 8
  %400 = bitcast %3** %43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %400) #11
  %401 = bitcast %3** %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %401) #11
  store %3* %15, %3** %44, align 8
  %402 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %403 = getelementptr inbounds %33, %33* %402, i32 0, i32 12
  %404 = getelementptr inbounds %34, %34* %403, i32 0, i32 0
  %405 = load i64, i64* %404, align 8
  %406 = load %3*, %3** %44, align 8
  %407 = getelementptr inbounds %3, %3* %406, i32 0, i32 0
  %408 = bitcast %4* %407 to i64*
  store i64 %405, i64* %408, align 8
  %409 = load %3*, %3** %44, align 8
  %410 = getelementptr inbounds %3, %3* %409, i32 0, i32 1
  %411 = bitcast %5* %410 to i32*
  store i32 4, i32* %411, align 8
  %412 = bitcast %3** %44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %412) #11
  %413 = bitcast %3** %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %413) #11
  store %3* %16, %3** %45, align 8
  %414 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %415 = getelementptr inbounds %33, %33* %414, i32 0, i32 13
  %416 = getelementptr inbounds %34, %34* %415, i32 0, i32 0
  %417 = load i64, i64* %416, align 8
  %418 = load %3*, %3** %45, align 8
  %419 = getelementptr inbounds %3, %3* %418, i32 0, i32 0
  %420 = bitcast %4* %419 to i64*
  store i64 %417, i64* %420, align 8
  %421 = load %3*, %3** %45, align 8
  %422 = getelementptr inbounds %3, %3* %421, i32 0, i32 1
  %423 = bitcast %5* %422 to i32*
  store i32 4, i32* %423, align 8
  %424 = bitcast %3** %45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %424) #11
  %425 = bitcast %3** %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %425) #11
  store %3* %17, %3** %46, align 8
  %426 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %427 = getelementptr inbounds %33, %33* %426, i32 0, i32 9
  %428 = load i64, i64* %427, align 8
  %429 = load %3*, %3** %46, align 8
  %430 = getelementptr inbounds %3, %3* %429, i32 0, i32 0
  %431 = bitcast %4* %430 to i64*
  store i64 %428, i64* %431, align 8
  %432 = load %3*, %3** %46, align 8
  %433 = getelementptr inbounds %3, %3* %432, i32 0, i32 1
  %434 = bitcast %5* %433 to i32*
  store i32 4, i32* %434, align 8
  %435 = bitcast %3** %46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %435) #11
  %436 = bitcast %3** %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %436) #11
  store %3* %18, %3** %47, align 8
  %437 = getelementptr inbounds %32, %32* %20, i32 0, i32 0
  %438 = getelementptr inbounds %33, %33* %437, i32 0, i32 10
  %439 = load i64, i64* %438, align 8
  %440 = load %3*, %3** %47, align 8
  %441 = getelementptr inbounds %3, %3* %440, i32 0, i32 0
  %442 = bitcast %4* %441 to i64*
  store i64 %439, i64* %442, align 8
  %443 = load %3*, %3** %47, align 8
  %444 = getelementptr inbounds %3, %3* %443, i32 0, i32 1
  %445 = bitcast %5* %444 to i32*
  store i32 4, i32* %445, align 8
  %446 = bitcast %3** %47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %446) #11
  %447 = load %3*, %3** %4, align 8
  %448 = getelementptr inbounds %3, %3* %447, i32 0, i32 0
  %449 = bitcast %4* %448 to %10**
  %450 = load %10*, %10** %449, align 8
  %451 = call %3* @_zend_hash_next_index_insert(%10* %450, %3* %6)
  %452 = load %3*, %3** %4, align 8
  %453 = getelementptr inbounds %3, %3* %452, i32 0, i32 0
  %454 = bitcast %4* %453 to %10**
  %455 = load %10*, %10** %454, align 8
  %456 = call %3* @_zend_hash_next_index_insert(%10* %455, %3* %7)
  %457 = load %3*, %3** %4, align 8
  %458 = getelementptr inbounds %3, %3* %457, i32 0, i32 0
  %459 = bitcast %4* %458 to %10**
  %460 = load %10*, %10** %459, align 8
  %461 = call %3* @_zend_hash_next_index_insert(%10* %460, %3* %8)
  %462 = load %3*, %3** %4, align 8
  %463 = getelementptr inbounds %3, %3* %462, i32 0, i32 0
  %464 = bitcast %4* %463 to %10**
  %465 = load %10*, %10** %464, align 8
  %466 = call %3* @_zend_hash_next_index_insert(%10* %465, %3* %9)
  %467 = load %3*, %3** %4, align 8
  %468 = getelementptr inbounds %3, %3* %467, i32 0, i32 0
  %469 = bitcast %4* %468 to %10**
  %470 = load %10*, %10** %469, align 8
  %471 = call %3* @_zend_hash_next_index_insert(%10* %470, %3* %10)
  %472 = load %3*, %3** %4, align 8
  %473 = getelementptr inbounds %3, %3* %472, i32 0, i32 0
  %474 = bitcast %4* %473 to %10**
  %475 = load %10*, %10** %474, align 8
  %476 = call %3* @_zend_hash_next_index_insert(%10* %475, %3* %11)
  %477 = load %3*, %3** %4, align 8
  %478 = getelementptr inbounds %3, %3* %477, i32 0, i32 0
  %479 = bitcast %4* %478 to %10**
  %480 = load %10*, %10** %479, align 8
  %481 = call %3* @_zend_hash_next_index_insert(%10* %480, %3* %12)
  %482 = load %3*, %3** %4, align 8
  %483 = getelementptr inbounds %3, %3* %482, i32 0, i32 0
  %484 = bitcast %4* %483 to %10**
  %485 = load %10*, %10** %484, align 8
  %486 = call %3* @_zend_hash_next_index_insert(%10* %485, %3* %13)
  %487 = load %3*, %3** %4, align 8
  %488 = getelementptr inbounds %3, %3* %487, i32 0, i32 0
  %489 = bitcast %4* %488 to %10**
  %490 = load %10*, %10** %489, align 8
  %491 = call %3* @_zend_hash_next_index_insert(%10* %490, %3* %14)
  %492 = load %3*, %3** %4, align 8
  %493 = getelementptr inbounds %3, %3* %492, i32 0, i32 0
  %494 = bitcast %4* %493 to %10**
  %495 = load %10*, %10** %494, align 8
  %496 = call %3* @_zend_hash_next_index_insert(%10* %495, %3* %15)
  %497 = load %3*, %3** %4, align 8
  %498 = getelementptr inbounds %3, %3* %497, i32 0, i32 0
  %499 = bitcast %4* %498 to %10**
  %500 = load %10*, %10** %499, align 8
  %501 = call %3* @_zend_hash_next_index_insert(%10* %500, %3* %16)
  %502 = load %3*, %3** %4, align 8
  %503 = getelementptr inbounds %3, %3* %502, i32 0, i32 0
  %504 = bitcast %4* %503 to %10**
  %505 = load %10*, %10** %504, align 8
  %506 = call %3* @_zend_hash_next_index_insert(%10* %505, %3* %17)
  %507 = load %3*, %3** %4, align 8
  %508 = getelementptr inbounds %3, %3* %507, i32 0, i32 0
  %509 = bitcast %4* %508 to %10**
  %510 = load %10*, %10** %509, align 8
  %511 = call %3* @_zend_hash_next_index_insert(%10* %510, %3* %18)
  %512 = load %3*, %3** %4, align 8
  %513 = getelementptr inbounds %3, %3* %512, i32 0, i32 0
  %514 = bitcast %4* %513 to %10**
  %515 = load %10*, %10** %514, align 8
  %516 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 0
  %517 = load i8*, i8** %516, align 16
  %518 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 0
  %519 = load i8*, i8** %518, align 16
  %520 = call i64 @strlen(i8* %519) #13
  %521 = call %3* @_zend_hash_str_update(%10* %515, i8* %517, i64 %520, %3* %6)
  %522 = load %3*, %3** %4, align 8
  %523 = getelementptr inbounds %3, %3* %522, i32 0, i32 0
  %524 = bitcast %4* %523 to %10**
  %525 = load %10*, %10** %524, align 8
  %526 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 1
  %527 = load i8*, i8** %526, align 8
  %528 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 1
  %529 = load i8*, i8** %528, align 8
  %530 = call i64 @strlen(i8* %529) #13
  %531 = call %3* @_zend_hash_str_update(%10* %525, i8* %527, i64 %530, %3* %7)
  %532 = load %3*, %3** %4, align 8
  %533 = getelementptr inbounds %3, %3* %532, i32 0, i32 0
  %534 = bitcast %4* %533 to %10**
  %535 = load %10*, %10** %534, align 8
  %536 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 2
  %537 = load i8*, i8** %536, align 16
  %538 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 2
  %539 = load i8*, i8** %538, align 16
  %540 = call i64 @strlen(i8* %539) #13
  %541 = call %3* @_zend_hash_str_update(%10* %535, i8* %537, i64 %540, %3* %8)
  %542 = load %3*, %3** %4, align 8
  %543 = getelementptr inbounds %3, %3* %542, i32 0, i32 0
  %544 = bitcast %4* %543 to %10**
  %545 = load %10*, %10** %544, align 8
  %546 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 3
  %547 = load i8*, i8** %546, align 8
  %548 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 3
  %549 = load i8*, i8** %548, align 8
  %550 = call i64 @strlen(i8* %549) #13
  %551 = call %3* @_zend_hash_str_update(%10* %545, i8* %547, i64 %550, %3* %9)
  %552 = load %3*, %3** %4, align 8
  %553 = getelementptr inbounds %3, %3* %552, i32 0, i32 0
  %554 = bitcast %4* %553 to %10**
  %555 = load %10*, %10** %554, align 8
  %556 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 4
  %557 = load i8*, i8** %556, align 16
  %558 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 4
  %559 = load i8*, i8** %558, align 16
  %560 = call i64 @strlen(i8* %559) #13
  %561 = call %3* @_zend_hash_str_update(%10* %555, i8* %557, i64 %560, %3* %10)
  %562 = load %3*, %3** %4, align 8
  %563 = getelementptr inbounds %3, %3* %562, i32 0, i32 0
  %564 = bitcast %4* %563 to %10**
  %565 = load %10*, %10** %564, align 8
  %566 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 5
  %567 = load i8*, i8** %566, align 8
  %568 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 5
  %569 = load i8*, i8** %568, align 8
  %570 = call i64 @strlen(i8* %569) #13
  %571 = call %3* @_zend_hash_str_update(%10* %565, i8* %567, i64 %570, %3* %11)
  %572 = load %3*, %3** %4, align 8
  %573 = getelementptr inbounds %3, %3* %572, i32 0, i32 0
  %574 = bitcast %4* %573 to %10**
  %575 = load %10*, %10** %574, align 8
  %576 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 6
  %577 = load i8*, i8** %576, align 16
  %578 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 6
  %579 = load i8*, i8** %578, align 16
  %580 = call i64 @strlen(i8* %579) #13
  %581 = call %3* @_zend_hash_str_update(%10* %575, i8* %577, i64 %580, %3* %12)
  %582 = load %3*, %3** %4, align 8
  %583 = getelementptr inbounds %3, %3* %582, i32 0, i32 0
  %584 = bitcast %4* %583 to %10**
  %585 = load %10*, %10** %584, align 8
  %586 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 7
  %587 = load i8*, i8** %586, align 8
  %588 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 7
  %589 = load i8*, i8** %588, align 8
  %590 = call i64 @strlen(i8* %589) #13
  %591 = call %3* @_zend_hash_str_update(%10* %585, i8* %587, i64 %590, %3* %13)
  %592 = load %3*, %3** %4, align 8
  %593 = getelementptr inbounds %3, %3* %592, i32 0, i32 0
  %594 = bitcast %4* %593 to %10**
  %595 = load %10*, %10** %594, align 8
  %596 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 8
  %597 = load i8*, i8** %596, align 16
  %598 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 8
  %599 = load i8*, i8** %598, align 16
  %600 = call i64 @strlen(i8* %599) #13
  %601 = call %3* @_zend_hash_str_update(%10* %595, i8* %597, i64 %600, %3* %14)
  %602 = load %3*, %3** %4, align 8
  %603 = getelementptr inbounds %3, %3* %602, i32 0, i32 0
  %604 = bitcast %4* %603 to %10**
  %605 = load %10*, %10** %604, align 8
  %606 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 9
  %607 = load i8*, i8** %606, align 8
  %608 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 9
  %609 = load i8*, i8** %608, align 8
  %610 = call i64 @strlen(i8* %609) #13
  %611 = call %3* @_zend_hash_str_update(%10* %605, i8* %607, i64 %610, %3* %15)
  %612 = load %3*, %3** %4, align 8
  %613 = getelementptr inbounds %3, %3* %612, i32 0, i32 0
  %614 = bitcast %4* %613 to %10**
  %615 = load %10*, %10** %614, align 8
  %616 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 10
  %617 = load i8*, i8** %616, align 16
  %618 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 10
  %619 = load i8*, i8** %618, align 16
  %620 = call i64 @strlen(i8* %619) #13
  %621 = call %3* @_zend_hash_str_update(%10* %615, i8* %617, i64 %620, %3* %16)
  %622 = load %3*, %3** %4, align 8
  %623 = getelementptr inbounds %3, %3* %622, i32 0, i32 0
  %624 = bitcast %4* %623 to %10**
  %625 = load %10*, %10** %624, align 8
  %626 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 11
  %627 = load i8*, i8** %626, align 8
  %628 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 11
  %629 = load i8*, i8** %628, align 8
  %630 = call i64 @strlen(i8* %629) #13
  %631 = call %3* @_zend_hash_str_update(%10* %625, i8* %627, i64 %630, %3* %17)
  %632 = load %3*, %3** %4, align 8
  %633 = getelementptr inbounds %3, %3* %632, i32 0, i32 0
  %634 = bitcast %4* %633 to %10**
  %635 = load %10*, %10** %634, align 8
  %636 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 12
  %637 = load i8*, i8** %636, align 16
  %638 = getelementptr inbounds [13 x i8*], [13 x i8*]* %21, i64 0, i64 12
  %639 = load i8*, i8** %638, align 16
  %640 = call i64 @strlen(i8* %639) #13
  %641 = call %3* @_zend_hash_str_update(%10* %635, i8* %637, i64 %640, %3* %18)
  store i32 0, i32* %34, align 4
  br label %642

642:                                              ; preds = %295, %294, %281, %236
  %643 = bitcast [13 x i8*]* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 104, i8* %643) #11
  %644 = bitcast %32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %644) #11
  %645 = bitcast %53** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %645) #11
  %646 = bitcast %3* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %646) #11
  %647 = bitcast %3* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %647) #11
  %648 = bitcast %3* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %648) #11
  %649 = bitcast %3* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %649) #11
  %650 = bitcast %3* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %650) #11
  %651 = bitcast %3* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %651) #11
  %652 = bitcast %3* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %652) #11
  %653 = bitcast %3* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %653) #11
  %654 = bitcast %3* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %654) #11
  %655 = bitcast %3* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %655) #11
  %656 = bitcast %3* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %656) #11
  %657 = bitcast %3* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %657) #11
  %658 = bitcast %3* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %658) #11
  %659 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %659) #11
  %660 = load i32, i32* %34, align 4
  switch i32 %660, label %662 [
    i32 0, label %661
    i32 1, label %661
  ]

661:                                              ; preds = %642, %642
  ret void

662:                                              ; preds = %642
  unreachable
}

declare dso_local i32 @_php_stream_stat(%53*, %32*) #1

declare dso_local %3* @_zend_hash_next_index_insert(%10*, %3*) #1

declare dso_local %3* @_zend_hash_str_update(%10*, i8*, i64, %3*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_copy(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %3*, align 8
  %10 = alloca %1*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %3*, align 8
  %17 = alloca %3*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %24 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  %25 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  %26 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #11
  %27 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  %28 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  store %3* null, %3** %9, align 8
  %29 = bitcast %1** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #11
  br label %30

30:                                               ; preds = %2
  %31 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #11
  store i32 0, i32* %11, align 4
  %32 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  store i32 2, i32* %12, align 4
  %33 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #11
  store i32 3, i32* %13, align 4
  %34 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #11
  %35 = load %28*, %28** %3, align 8
  %36 = getelementptr inbounds %28, %28* %35, i32 0, i32 4
  %37 = getelementptr inbounds %3, %3* %36, i32 0, i32 2
  %38 = bitcast %6* %37 to i32*
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %14, align 4
  %40 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #11
  %41 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  %42 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #11
  store %3* null, %3** %17, align 8
  %43 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  store i32 0, i32* %18, align 4
  %44 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #11
  store i8* null, i8** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %21) #11
  store i8 0, i8* %21, align 1
  %45 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #11
  store i32 0, i32* %22, align 4
  %46 = load i32, i32* %15, align 4
  %47 = load %3*, %3** %16, align 8
  %48 = load %3*, %3** %17, align 8
  %49 = load i32, i32* %18, align 4
  %50 = load i8*, i8** %19, align 8
  %51 = load i8, i8* %20, align 1
  %52 = load i8, i8* %21, align 1
  br label %53

53:                                               ; preds = %30
  %54 = load i32, i32* %14, align 4
  %55 = load i32, i32* %12, align 4
  %56 = icmp slt i32 %54, %55
  %57 = xor i1 %56, true
  %58 = xor i1 %57, true
  %59 = zext i1 %58 to i32
  %60 = sext i32 %59 to i64
  %61 = call i64 @llvm.expect.i64(i64 %60, i64 0)
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %82, label %63

63:                                               ; preds = %53
  %64 = load i32, i32* %14, align 4
  %65 = load i32, i32* %13, align 4
  %66 = icmp sgt i32 %64, %65
  %67 = xor i1 %66, true
  %68 = xor i1 %67, true
  %69 = zext i1 %68 to i32
  %70 = sext i32 %69 to i64
  %71 = call i64 @llvm.expect.i64(i64 %70, i64 0)
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %86

73:                                               ; preds = %63
  %74 = load i32, i32* %13, align 4
  %75 = icmp sge i32 %74, 0
  %76 = xor i1 %75, true
  %77 = xor i1 %76, true
  %78 = zext i1 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = call i64 @llvm.expect.i64(i64 %79, i64 1)
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %73, %53
  %83 = load i32, i32* %14, align 4
  %84 = load i32, i32* %12, align 4
  %85 = load i32, i32* %13, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %83, i32 %84, i32 %85)
  store i32 1, i32* %22, align 4
  br label %301

86:                                               ; preds = %73, %63
  store i32 0, i32* %15, align 4
  %87 = load %28*, %28** %3, align 8
  %88 = bitcast %28* %87 to %3*
  %89 = getelementptr inbounds %3, %3* %88, i64 4
  store %3* %89, %3** %16, align 8
  %90 = load i32, i32* %15, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %15, align 4
  br label %92

92:                                               ; preds = %86
  %93 = load i32, i32* %15, align 4
  %94 = load i32, i32* %12, align 4
  %95 = icmp sle i32 %93, %94
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = load i8, i8* %21, align 1
  %98 = zext i8 %97 to i32
  %99 = icmp eq i32 %98, 1
  br label %100

100:                                              ; preds = %96, %92
  %101 = phi i1 [ true, %92 ], [ %99, %96 ]
  %102 = xor i1 %101, true
  %103 = zext i1 %102 to i32
  %104 = sext i32 %103 to i64
  %105 = call i64 @llvm.expect.i64(i64 %104, i64 0)
  %106 = icmp ne i64 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %100
  unreachable

108:                                              ; preds = %100
  br label %109

109:                                              ; preds = %108
  br label %110

110:                                              ; preds = %109
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %15, align 4
  %113 = load i32, i32* %12, align 4
  %114 = icmp sgt i32 %112, %113
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = load i8, i8* %21, align 1
  %117 = zext i8 %116 to i32
  %118 = icmp eq i32 %117, 0
  br label %119

119:                                              ; preds = %115, %111
  %120 = phi i1 [ true, %111 ], [ %118, %115 ]
  %121 = xor i1 %120, true
  %122 = zext i1 %121 to i32
  %123 = sext i32 %122 to i64
  %124 = call i64 @llvm.expect.i64(i64 %123, i64 0)
  %125 = icmp ne i64 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %119
  unreachable

127:                                              ; preds = %119
  br label %128

128:                                              ; preds = %127
  br label %129

129:                                              ; preds = %128
  %130 = load i8, i8* %21, align 1
  %131 = icmp ne i8 %130, 0
  br i1 %131, label %132, label %144

132:                                              ; preds = %129
  %133 = load i32, i32* %15, align 4
  %134 = load i32, i32* %14, align 4
  %135 = icmp sgt i32 %133, %134
  %136 = xor i1 %135, true
  %137 = xor i1 %136, true
  %138 = zext i1 %137 to i32
  %139 = sext i32 %138 to i64
  %140 = call i64 @llvm.expect.i64(i64 %139, i64 0)
  %141 = icmp ne i64 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %132
  br label %301

143:                                              ; preds = %132
  br label %144

144:                                              ; preds = %143, %129
  %145 = load %3*, %3** %16, align 8
  %146 = getelementptr inbounds %3, %3* %145, i32 1
  store %3* %146, %3** %16, align 8
  %147 = load %3*, %3** %16, align 8
  store %3* %147, %3** %17, align 8
  %148 = load %3*, %3** %17, align 8
  %149 = call i32 @152(%3* %148, i8** %5, i64* %7, i32 0)
  %150 = icmp ne i32 %149, 0
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = xor i1 %152, true
  %154 = zext i1 %153 to i32
  %155 = sext i32 %154 to i64
  %156 = call i64 @llvm.expect.i64(i64 %155, i64 0)
  %157 = icmp ne i64 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %144
  store i32 6, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %301

159:                                              ; preds = %144
  %160 = load i32, i32* %15, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %15, align 4
  br label %162

162:                                              ; preds = %159
  %163 = load i32, i32* %15, align 4
  %164 = load i32, i32* %12, align 4
  %165 = icmp sle i32 %163, %164
  br i1 %165, label %170, label %166

166:                                              ; preds = %162
  %167 = load i8, i8* %21, align 1
  %168 = zext i8 %167 to i32
  %169 = icmp eq i32 %168, 1
  br label %170

170:                                              ; preds = %166, %162
  %171 = phi i1 [ true, %162 ], [ %169, %166 ]
  %172 = xor i1 %171, true
  %173 = zext i1 %172 to i32
  %174 = sext i32 %173 to i64
  %175 = call i64 @llvm.expect.i64(i64 %174, i64 0)
  %176 = icmp ne i64 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %170
  unreachable

178:                                              ; preds = %170
  br label %179

179:                                              ; preds = %178
  br label %180

180:                                              ; preds = %179
  br label %181

181:                                              ; preds = %180
  %182 = load i32, i32* %15, align 4
  %183 = load i32, i32* %12, align 4
  %184 = icmp sgt i32 %182, %183
  br i1 %184, label %189, label %185

185:                                              ; preds = %181
  %186 = load i8, i8* %21, align 1
  %187 = zext i8 %186 to i32
  %188 = icmp eq i32 %187, 0
  br label %189

189:                                              ; preds = %185, %181
  %190 = phi i1 [ true, %181 ], [ %188, %185 ]
  %191 = xor i1 %190, true
  %192 = zext i1 %191 to i32
  %193 = sext i32 %192 to i64
  %194 = call i64 @llvm.expect.i64(i64 %193, i64 0)
  %195 = icmp ne i64 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %189
  unreachable

197:                                              ; preds = %189
  br label %198

198:                                              ; preds = %197
  br label %199

199:                                              ; preds = %198
  %200 = load i8, i8* %21, align 1
  %201 = icmp ne i8 %200, 0
  br i1 %201, label %202, label %214

202:                                              ; preds = %199
  %203 = load i32, i32* %15, align 4
  %204 = load i32, i32* %14, align 4
  %205 = icmp sgt i32 %203, %204
  %206 = xor i1 %205, true
  %207 = xor i1 %206, true
  %208 = zext i1 %207 to i32
  %209 = sext i32 %208 to i64
  %210 = call i64 @llvm.expect.i64(i64 %209, i64 0)
  %211 = icmp ne i64 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %202
  br label %301

213:                                              ; preds = %202
  br label %214

214:                                              ; preds = %213, %199
  %215 = load %3*, %3** %16, align 8
  %216 = getelementptr inbounds %3, %3* %215, i32 1
  store %3* %216, %3** %16, align 8
  %217 = load %3*, %3** %16, align 8
  store %3* %217, %3** %17, align 8
  %218 = load %3*, %3** %17, align 8
  %219 = call i32 @152(%3* %218, i8** %6, i64* %8, i32 0)
  %220 = icmp ne i32 %219, 0
  %221 = xor i1 %220, true
  %222 = xor i1 %221, true
  %223 = xor i1 %222, true
  %224 = zext i1 %223 to i32
  %225 = sext i32 %224 to i64
  %226 = call i64 @llvm.expect.i64(i64 %225, i64 0)
  %227 = icmp ne i64 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %214
  store i32 6, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %301

229:                                              ; preds = %214
  store i8 1, i8* %21, align 1
  %230 = load i32, i32* %15, align 4
  %231 = add nsw i32 %230, 1
  store i32 %231, i32* %15, align 4
  br label %232

232:                                              ; preds = %229
  %233 = load i32, i32* %15, align 4
  %234 = load i32, i32* %12, align 4
  %235 = icmp sle i32 %233, %234
  br i1 %235, label %240, label %236

236:                                              ; preds = %232
  %237 = load i8, i8* %21, align 1
  %238 = zext i8 %237 to i32
  %239 = icmp eq i32 %238, 1
  br label %240

240:                                              ; preds = %236, %232
  %241 = phi i1 [ true, %232 ], [ %239, %236 ]
  %242 = xor i1 %241, true
  %243 = zext i1 %242 to i32
  %244 = sext i32 %243 to i64
  %245 = call i64 @llvm.expect.i64(i64 %244, i64 0)
  %246 = icmp ne i64 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %240
  unreachable

248:                                              ; preds = %240
  br label %249

249:                                              ; preds = %248
  br label %250

250:                                              ; preds = %249
  br label %251

251:                                              ; preds = %250
  %252 = load i32, i32* %15, align 4
  %253 = load i32, i32* %12, align 4
  %254 = icmp sgt i32 %252, %253
  br i1 %254, label %259, label %255

255:                                              ; preds = %251
  %256 = load i8, i8* %21, align 1
  %257 = zext i8 %256 to i32
  %258 = icmp eq i32 %257, 0
  br label %259

259:                                              ; preds = %255, %251
  %260 = phi i1 [ true, %251 ], [ %258, %255 ]
  %261 = xor i1 %260, true
  %262 = zext i1 %261 to i32
  %263 = sext i32 %262 to i64
  %264 = call i64 @llvm.expect.i64(i64 %263, i64 0)
  %265 = icmp ne i64 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %259
  unreachable

267:                                              ; preds = %259
  br label %268

268:                                              ; preds = %267
  br label %269

269:                                              ; preds = %268
  %270 = load i8, i8* %21, align 1
  %271 = icmp ne i8 %270, 0
  br i1 %271, label %272, label %284

272:                                              ; preds = %269
  %273 = load i32, i32* %15, align 4
  %274 = load i32, i32* %14, align 4
  %275 = icmp sgt i32 %273, %274
  %276 = xor i1 %275, true
  %277 = xor i1 %276, true
  %278 = zext i1 %277 to i32
  %279 = sext i32 %278 to i64
  %280 = call i64 @llvm.expect.i64(i64 %279, i64 0)
  %281 = icmp ne i64 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %272
  br label %301

283:                                              ; preds = %272
  br label %284

284:                                              ; preds = %283, %269
  %285 = load %3*, %3** %16, align 8
  %286 = getelementptr inbounds %3, %3* %285, i32 1
  store %3* %286, %3** %16, align 8
  %287 = load %3*, %3** %16, align 8
  store %3* %287, %3** %17, align 8
  %288 = load %3*, %3** %17, align 8
  %289 = call i32 @148(%3* %288, %3** %9, i32 0)
  %290 = icmp ne i32 %289, 0
  %291 = xor i1 %290, true
  %292 = xor i1 %291, true
  %293 = xor i1 %292, true
  %294 = zext i1 %293 to i32
  %295 = sext i32 %294 to i64
  %296 = call i64 @llvm.expect.i64(i64 %295, i64 0)
  %297 = icmp ne i64 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %284
  store i32 5, i32* %18, align 4
  store i32 4, i32* %22, align 4
  br label %301

299:                                              ; preds = %284
  br label %300

300:                                              ; preds = %299
  br label %301

301:                                              ; preds = %300, %298, %282, %228, %212, %158, %142, %82
  %302 = load i32, i32* %22, align 4
  %303 = icmp ne i32 %302, 0
  %304 = xor i1 %303, true
  %305 = xor i1 %304, true
  %306 = zext i1 %305 to i32
  %307 = sext i32 %306 to i64
  %308 = call i64 @llvm.expect.i64(i64 %307, i64 0)
  %309 = icmp ne i64 %308, 0
  br i1 %309, label %310, label %333

310:                                              ; preds = %301
  %311 = load i32, i32* %22, align 4
  %312 = icmp eq i32 %311, 2
  br i1 %312, label %313, label %316

313:                                              ; preds = %310
  %314 = load i32, i32* %15, align 4
  %315 = load i8*, i8** %19, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %314, i8* %315)
  br label %332

316:                                              ; preds = %310
  %317 = load i32, i32* %22, align 4
  %318 = icmp eq i32 %317, 3
  br i1 %318, label %319, label %323

319:                                              ; preds = %316
  %320 = load i32, i32* %15, align 4
  %321 = load i8*, i8** %19, align 8
  %322 = load %3*, %3** %17, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %320, i8* %321, %3* %322)
  br label %331

323:                                              ; preds = %316
  %324 = load i32, i32* %22, align 4
  %325 = icmp eq i32 %324, 4
  br i1 %325, label %326, label %330

326:                                              ; preds = %323
  %327 = load i32, i32* %15, align 4
  %328 = load i32, i32* %18, align 4
  %329 = load %3*, %3** %17, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %327, i32 %328, %3* %329)
  br label %330

330:                                              ; preds = %326, %323
  br label %331

331:                                              ; preds = %330, %319
  br label %332

332:                                              ; preds = %331, %313
  store i32 1, i32* %23, align 4
  br label %334

333:                                              ; preds = %301
  store i32 0, i32* %23, align 4
  br label %334

334:                                              ; preds = %333, %332
  %335 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %335) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %21) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #11
  %336 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %336) #11
  %337 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %337) #11
  %338 = bitcast %3** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %338) #11
  %339 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %339) #11
  %340 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %340) #11
  %341 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %341) #11
  %342 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %342) #11
  %343 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %343) #11
  %344 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %344) #11
  %345 = load i32, i32* %23, align 4
  switch i32 %345, label %398 [
    i32 0, label %346
  ]

346:                                              ; preds = %334
  br label %347

347:                                              ; preds = %346
  br label %348

348:                                              ; preds = %347
  %349 = load i8*, i8** %5, align 8
  %350 = call i32 @php_check_open_basedir(i8* %349)
  %351 = icmp ne i32 %350, 0
  br i1 %351, label %352, label %359

352:                                              ; preds = %348
  br label %353

353:                                              ; preds = %352
  %354 = load %3*, %3** %4, align 8
  %355 = getelementptr inbounds %3, %3* %354, i32 0, i32 1
  %356 = bitcast %5* %355 to i32*
  store i32 2, i32* %356, align 8
  br label %357

357:                                              ; preds = %353
  br label %358

358:                                              ; preds = %357
  store i32 1, i32* %23, align 4
  br label %398

359:                                              ; preds = %348
  %360 = load %3*, %3** %9, align 8
  %361 = icmp ne %3* %360, null
  br i1 %361, label %362, label %366

362:                                              ; preds = %359
  %363 = load %3*, %3** %9, align 8
  %364 = call i32 @php_le_stream_context()
  %365 = call i8* @zend_fetch_resource_ex(%3* %363, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @87, i32 0, i32 0), i32 %364)
  br label %376

366:                                              ; preds = %359
  %367 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  %368 = icmp ne %1* %367, null
  br i1 %368, label %369, label %371

369:                                              ; preds = %366
  %370 = load %1*, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %373

371:                                              ; preds = %366
  %372 = call %1* @php_stream_context_alloc()
  store %1* %372, %1** getelementptr inbounds (%0, %0* @file_globals, i32 0, i32 7), align 8
  br label %373

373:                                              ; preds = %371, %369
  %374 = phi %1* [ %370, %369 ], [ %372, %371 ]
  %375 = bitcast %1* %374 to i8*
  br label %376

376:                                              ; preds = %373, %362
  %377 = phi i8* [ %365, %362 ], [ %375, %373 ]
  %378 = bitcast i8* %377 to %1*
  store %1* %378, %1** %10, align 8
  %379 = load i8*, i8** %5, align 8
  %380 = load i8*, i8** %6, align 8
  %381 = load %1*, %1** %10, align 8
  %382 = call i32 @php_copy_file_ctx(i8* %379, i8* %380, i32 0, %1* %381)
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %391

384:                                              ; preds = %376
  br label %385

385:                                              ; preds = %384
  %386 = load %3*, %3** %4, align 8
  %387 = getelementptr inbounds %3, %3* %386, i32 0, i32 1
  %388 = bitcast %5* %387 to i32*
  store i32 3, i32* %388, align 8
  br label %389

389:                                              ; preds = %385
  br label %390

390:                                              ; preds = %389
  store i32 1, i32* %23, align 4
  br label %398

391:                                              ; preds = %376
  br label %392

392:                                              ; preds = %391
  %393 = load %3*, %3** %4, align 8
  %394 = getelementptr inbounds %3, %3* %393, i32 0, i32 1
  %395 = bitcast %5* %394 to i32*
  store i32 2, i32* %395, align 8
  br label %396

396:                                              ; preds = %392
  br label %397

397:                                              ; preds = %396
  store i32 1, i32* %23, align 4
  br label %398

398:                                              ; preds = %397, %390, %358, %334
  %399 = bitcast %1** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %399) #11
  %400 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %400) #11
  %401 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %401) #11
  %402 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %402) #11
  %403 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %403) #11
  %404 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %404) #11
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local i32 @php_copy_file_ctx(i8* %0, i8* %1, i32 %2, %1* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %1*, align 8
  %10 = alloca %53*, align 8
  %11 = alloca %53*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %32, align 8
  %14 = alloca %32, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store %1* %3, %1** %9, align 8
  %19 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #11
  store %53* null, %53** %10, align 8
  %20 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #11
  store %53* null, %53** %11, align 8
  %21 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #11
  store i32 -1, i32* %12, align 4
  %22 = bitcast %32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %22) #11
  %23 = bitcast %32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %23) #11
  %24 = load i8*, i8** %6, align 8
  %25 = load %1*, %1** %9, align 8
  %26 = call i32 @_php_stream_stat_path(i8* %24, i32 0, %32* %13, %1* %25)
  switch i32 %26, label %28 [
    i32 -1, label %27
    i32 0, label %30
  ]

27:                                               ; preds = %4
  br label %116

28:                                               ; preds = %4
  %29 = load i32, i32* %12, align 4
  store i32 %29, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %153

30:                                               ; preds = %4
  %31 = getelementptr inbounds %32, %32* %13, i32 0, i32 0
  %32 = getelementptr inbounds %33, %33* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 61440
  %35 = icmp eq i32 %34, 16384
  br i1 %35, label %36, label %37

36:                                               ; preds = %30
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @125, i32 0, i32 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %153

37:                                               ; preds = %30
  %38 = load i8*, i8** %7, align 8
  %39 = load %1*, %1** %9, align 8
  %40 = call i32 @_php_stream_stat_path(i8* %38, i32 6, %32* %14, %1* %39)
  switch i32 %40, label %42 [
    i32 -1, label %41
    i32 0, label %44
  ]

41:                                               ; preds = %37
  br label %116

42:                                               ; preds = %37
  %43 = load i32, i32* %12, align 4
  store i32 %43, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %153

44:                                               ; preds = %37
  %45 = getelementptr inbounds %32, %32* %14, i32 0, i32 0
  %46 = getelementptr inbounds %33, %33* %45, i32 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 61440
  %49 = icmp eq i32 %48, 16384
  br i1 %49, label %50, label %51

50:                                               ; preds = %44
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @126, i32 0, i32 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %153

51:                                               ; preds = %44
  %52 = getelementptr inbounds %32, %32* %13, i32 0, i32 0
  %53 = getelementptr inbounds %33, %33* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = getelementptr inbounds %32, %32* %14, i32 0, i32 0
  %58 = getelementptr inbounds %33, %33* %57, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %56, %51
  br label %81

62:                                               ; preds = %56
  %63 = getelementptr inbounds %32, %32* %13, i32 0, i32 0
  %64 = getelementptr inbounds %33, %33* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %32, %32* %14, i32 0, i32 0
  %67 = getelementptr inbounds %33, %33* %66, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %65, %68
  br i1 %69, label %70, label %80

70:                                               ; preds = %62
  %71 = getelementptr inbounds %32, %32* %13, i32 0, i32 0
  %72 = getelementptr inbounds %33, %33* %71, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %32, %32* %14, i32 0, i32 0
  %75 = getelementptr inbounds %33, %33* %74, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %73, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %70
  %79 = load i32, i32* %12, align 4
  store i32 %79, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %153

80:                                               ; preds = %70, %62
  br label %116

81:                                               ; preds = %61
  %82 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82) #11
  %83 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %83) #11
  %84 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %84) #11
  %85 = load i8*, i8** %6, align 8
  %86 = call i8* @expand_filepath(i8* %85, i8* null)
  store i8* %86, i8** %16, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %81
  %89 = load i32, i32* %12, align 4
  store i32 %89, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %110

90:                                               ; preds = %81
  %91 = load i8*, i8** %7, align 8
  %92 = call i8* @expand_filepath(i8* %91, i8* null)
  store i8* %92, i8** %17, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = load i8*, i8** %16, align 8
  call void @_efree(i8* %95)
  store i32 3, i32* %15, align 4
  br label %110

96:                                               ; preds = %90
  %97 = load i8*, i8** %16, align 8
  %98 = load i8*, i8** %17, align 8
  %99 = call i32 @strcmp(i8* %97, i8* %98) #13
  %100 = icmp ne i32 %99, 0
  %101 = xor i1 %100, true
  %102 = zext i1 %101 to i32
  store i32 %102, i32* %18, align 4
  %103 = load i8*, i8** %16, align 8
  call void @_efree(i8* %103)
  %104 = load i8*, i8** %17, align 8
  call void @_efree(i8* %104)
  %105 = load i32, i32* %18, align 4
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %96
  %108 = load i32, i32* %12, align 4
  store i32 %108, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %110

109:                                              ; preds = %96
  store i32 0, i32* %15, align 4
  br label %110

110:                                              ; preds = %94, %109, %107, %88
  %111 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %111) #11
  %112 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %112) #11
  %113 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #11
  %114 = load i32, i32* %15, align 4
  switch i32 %114, label %153 [
    i32 0, label %115
    i32 3, label %116
  ]

115:                                              ; preds = %110
  br label %116

116:                                              ; preds = %115, %110, %80, %41, %27
  %117 = load i8*, i8** %6, align 8
  %118 = load i32, i32* %8, align 4
  %119 = or i32 %118, 8
  %120 = load %1*, %1** %9, align 8
  %121 = call %53* @_php_stream_open_wrapper_ex(i8* %117, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @79, i32 0, i32 0), i32 %119, %13** null, %1* %120)
  store %53* %121, %53** %10, align 8
  %122 = load %53*, %53** %10, align 8
  %123 = icmp ne %53* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %116
  %125 = load i32, i32* %12, align 4
  store i32 %125, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %153

126:                                              ; preds = %116
  %127 = load i8*, i8** %7, align 8
  %128 = load %1*, %1** %9, align 8
  %129 = call %53* @_php_stream_open_wrapper_ex(i8* %127, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @127, i32 0, i32 0), i32 8, %13** null, %1* %128)
  store %53* %129, %53** %11, align 8
  %130 = load %53*, %53** %10, align 8
  %131 = icmp ne %53* %130, null
  br i1 %131, label %132, label %139

132:                                              ; preds = %126
  %133 = load %53*, %53** %11, align 8
  %134 = icmp ne %53* %133, null
  br i1 %134, label %135, label %139

135:                                              ; preds = %132
  %136 = load %53*, %53** %10, align 8
  %137 = load %53*, %53** %11, align 8
  %138 = call i32 @_php_stream_copy_to_stream_ex(%53* %136, %53* %137, i64 -1, i64* null)
  store i32 %138, i32* %12, align 4
  br label %139

139:                                              ; preds = %135, %132, %126
  %140 = load %53*, %53** %10, align 8
  %141 = icmp ne %53* %140, null
  br i1 %141, label %142, label %145

142:                                              ; preds = %139
  %143 = load %53*, %53** %10, align 8
  %144 = call i32 @_php_stream_free(%53* %143, i32 3)
  br label %145

145:                                              ; preds = %142, %139
  %146 = load %53*, %53** %11, align 8
  %147 = icmp ne %53* %146, null
  br i1 %147, label %148, label %151

148:                                              ; preds = %145
  %149 = load %53*, %53** %11, align 8
  %150 = call i32 @_php_stream_free(%53* %149, i32 3)
  br label %151

151:                                              ; preds = %148, %145
  %152 = load i32, i32* %12, align 4
  store i32 %152, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %153

153:                                              ; preds = %151, %124, %110, %78, %50, %42, %36, %28
  %154 = bitcast %32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %154) #11
  %155 = bitcast %32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %155) #11
  %156 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %156) #11
  %157 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #11
  %158 = bitcast %53** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %158) #11
  %159 = load i32, i32* %5, align 4
  ret i32 %159
}

; Function Attrs: nounwind uwtable
define dso_local i32 @php_copy_file(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = call i32 @php_copy_file_ctx(i8* %5, i8* %6, i32 0, %1* null)
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define dso_local i32 @php_copy_file_ex(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load i8*, i8** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i32, i32* %6, align 4
  %10 = call i32 @php_copy_file_ctx(i8* %7, i8* %8, i32 %9, %1* null)
  ret i32 %10
}

declare dso_local i32 @_php_stream_stat_path(i8*, i32, %32*, %1*) #1

declare dso_local i8* @expand_filepath(i8*, i8*) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind uwtable
define dso_local void @zif_fread(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca %3*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %53*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %3*, align 8
  %14 = alloca %3*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %3*, align 8
  %22 = alloca %13*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %23 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  %24 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  %25 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  br label %26

26:                                               ; preds = %2
  %27 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %27) #11
  store i32 0, i32* %8, align 4
  %28 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #11
  store i32 2, i32* %9, align 4
  %29 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  store i32 2, i32* %10, align 4
  %30 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #11
  %31 = load %28*, %28** %3, align 8
  %32 = getelementptr inbounds %28, %28* %31, i32 0, i32 4
  %33 = getelementptr inbounds %3, %3* %32, i32 0, i32 2
  %34 = bitcast %6* %33 to i32*
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %11, align 4
  %36 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #11
  %37 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  %38 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  store %3* null, %3** %14, align 8
  %39 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #11
  store i32 0, i32* %15, align 4
  %40 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #11
  store i8 0, i8* %18, align 1
  %41 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #11
  store i32 0, i32* %19, align 4
  %42 = load i32, i32* %12, align 4
  %43 = load %3*, %3** %13, align 8
  %44 = load %3*, %3** %14, align 8
  %45 = load i32, i32* %15, align 4
  %46 = load i8*, i8** %16, align 8
  %47 = load i8, i8* %17, align 1
  %48 = load i8, i8* %18, align 1
  br label %49

49:                                               ; preds = %26
  %50 = load i32, i32* %11, align 4
  %51 = load i32, i32* %9, align 4
  %52 = icmp slt i32 %50, %51
  %53 = xor i1 %52, true
  %54 = xor i1 %53, true
  %55 = zext i1 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = call i64 @llvm.expect.i64(i64 %56, i64 0)
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = load i32, i32* %11, align 4
  %61 = load i32, i32* %10, align 4
  %62 = icmp sgt i32 %60, %61
  %63 = xor i1 %62, true
  %64 = xor i1 %63, true
  %65 = zext i1 %64 to i32
  %66 = sext i32 %65 to i64
  %67 = call i64 @llvm.expect.i64(i64 %66, i64 0)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %82

69:                                               ; preds = %59
  %70 = load i32, i32* %10, align 4
  %71 = icmp sge i32 %70, 0
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 1)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %69, %49
  %79 = load i32, i32* %11, align 4
  %80 = load i32, i32* %9, align 4
  %81 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %79, i32 %80, i32 %81)
  store i32 1, i32* %19, align 4
  br label %227

82:                                               ; preds = %69, %59
  store i32 0, i32* %12, align 4
  %83 = load %28*, %28** %3, align 8
  %84 = bitcast %28* %83 to %3*
  %85 = getelementptr inbounds %3, %3* %84, i64 4
  store %3* %85, %3** %13, align 8
  %86 = load i32, i32* %12, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %12, align 4
  br label %88

88:                                               ; preds = %82
  %89 = load i32, i32* %12, align 4
  %90 = load i32, i32* %9, align 4
  %91 = icmp sle i32 %89, %90
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = load i8, i8* %18, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp eq i32 %94, 1
  br label %96

96:                                               ; preds = %92, %88
  %97 = phi i1 [ true, %88 ], [ %95, %92 ]
  %98 = xor i1 %97, true
  %99 = zext i1 %98 to i32
  %100 = sext i32 %99 to i64
  %101 = call i64 @llvm.expect.i64(i64 %100, i64 0)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  unreachable

104:                                              ; preds = %96
  br label %105

105:                                              ; preds = %104
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %12, align 4
  %109 = load i32, i32* %9, align 4
  %110 = icmp sgt i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %18, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 0
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  %126 = load i8, i8* %18, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %140

128:                                              ; preds = %125
  %129 = load i32, i32* %12, align 4
  %130 = load i32, i32* %11, align 4
  %131 = icmp sgt i32 %129, %130
  %132 = xor i1 %131, true
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %128
  br label %227

139:                                              ; preds = %128
  br label %140

140:                                              ; preds = %139, %125
  %141 = load %3*, %3** %13, align 8
  %142 = getelementptr inbounds %3, %3* %141, i32 1
  store %3* %142, %3** %13, align 8
  %143 = load %3*, %3** %13, align 8
  store %3* %143, %3** %14, align 8
  %144 = load %3*, %3** %14, align 8
  %145 = call i32 @148(%3* %144, %3** %5, i32 0)
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %140
  store i32 5, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %227

155:                                              ; preds = %140
  %156 = load i32, i32* %12, align 4
  %157 = add nsw i32 %156, 1
  store i32 %157, i32* %12, align 4
  br label %158

158:                                              ; preds = %155
  %159 = load i32, i32* %12, align 4
  %160 = load i32, i32* %9, align 4
  %161 = icmp sle i32 %159, %160
  br i1 %161, label %166, label %162

162:                                              ; preds = %158
  %163 = load i8, i8* %18, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp eq i32 %164, 1
  br label %166

166:                                              ; preds = %162, %158
  %167 = phi i1 [ true, %158 ], [ %165, %162 ]
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %166
  unreachable

174:                                              ; preds = %166
  br label %175

175:                                              ; preds = %174
  br label %176

176:                                              ; preds = %175
  br label %177

177:                                              ; preds = %176
  %178 = load i32, i32* %12, align 4
  %179 = load i32, i32* %9, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %18, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 0
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  %196 = load i8, i8* %18, align 1
  %197 = icmp ne i8 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %195
  %199 = load i32, i32* %12, align 4
  %200 = load i32, i32* %11, align 4
  %201 = icmp sgt i32 %199, %200
  %202 = xor i1 %201, true
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %198
  br label %227

209:                                              ; preds = %198
  br label %210

210:                                              ; preds = %209, %195
  %211 = load %3*, %3** %13, align 8
  %212 = getelementptr inbounds %3, %3* %211, i32 1
  store %3* %212, %3** %13, align 8
  %213 = load %3*, %3** %13, align 8
  store %3* %213, %3** %14, align 8
  %214 = load %3*, %3** %14, align 8
  %215 = call i32 @149(%3* %214, i64* %6, i8* %17, i32 0, i32 0)
  %216 = icmp ne i32 %215, 0
  %217 = xor i1 %216, true
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %210
  store i32 0, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %227

225:                                              ; preds = %210
  br label %226

226:                                              ; preds = %225
  br label %227

227:                                              ; preds = %226, %224, %208, %154, %138, %78
  %228 = load i32, i32* %19, align 4
  %229 = icmp ne i32 %228, 0
  %230 = xor i1 %229, true
  %231 = xor i1 %230, true
  %232 = zext i1 %231 to i32
  %233 = sext i32 %232 to i64
  %234 = call i64 @llvm.expect.i64(i64 %233, i64 0)
  %235 = icmp ne i64 %234, 0
  br i1 %235, label %236, label %265

236:                                              ; preds = %227
  %237 = load i32, i32* %19, align 4
  %238 = icmp eq i32 %237, 2
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load i32, i32* %12, align 4
  %241 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %240, i8* %241)
  br label %258

242:                                              ; preds = %236
  %243 = load i32, i32* %19, align 4
  %244 = icmp eq i32 %243, 3
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = load i32, i32* %12, align 4
  %247 = load i8*, i8** %16, align 8
  %248 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %246, i8* %247, %3* %248)
  br label %257

249:                                              ; preds = %242
  %250 = load i32, i32* %19, align 4
  %251 = icmp eq i32 %250, 4
  br i1 %251, label %252, label %256

252:                                              ; preds = %249
  %253 = load i32, i32* %12, align 4
  %254 = load i32, i32* %15, align 4
  %255 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %253, i32 %254, %3* %255)
  br label %256

256:                                              ; preds = %252, %249
  br label %257

257:                                              ; preds = %256, %245
  br label %258

258:                                              ; preds = %257, %239
  br label %259

259:                                              ; preds = %258
  %260 = load %3*, %3** %4, align 8
  %261 = getelementptr inbounds %3, %3* %260, i32 0, i32 1
  %262 = bitcast %5* %261 to i32*
  store i32 2, i32* %262, align 8
  br label %263

263:                                              ; preds = %259
  br label %264

264:                                              ; preds = %263
  store i32 1, i32* %20, align 4
  br label %266

265:                                              ; preds = %227
  store i32 0, i32* %20, align 4
  br label %266

266:                                              ; preds = %265, %264
  %267 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %267) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  %268 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #11
  %269 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %269) #11
  %270 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #11
  %271 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271) #11
  %272 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %272) #11
  %273 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #11
  %274 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %274) #11
  %275 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %275) #11
  %276 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %276) #11
  %277 = load i32, i32* %20, align 4
  switch i32 %277, label %393 [
    i32 0, label %278
  ]

278:                                              ; preds = %266
  br label %279

279:                                              ; preds = %278
  br label %280

280:                                              ; preds = %279
  br label %281

281:                                              ; preds = %280
  %282 = load %3*, %3** %5, align 8
  %283 = call zeroext i8 @150(%3* %282)
  %284 = zext i8 %283 to i32
  %285 = icmp eq i32 %284, 9
  %286 = xor i1 %285, true
  %287 = zext i1 %286 to i32
  %288 = sext i32 %287 to i64
  %289 = call i64 @llvm.expect.i64(i64 %288, i64 0)
  %290 = icmp ne i64 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %281
  unreachable

292:                                              ; preds = %281
  br label %293

293:                                              ; preds = %292
  br label %294

294:                                              ; preds = %293
  br label %295

295:                                              ; preds = %294
  %296 = load %3*, %3** %5, align 8
  %297 = getelementptr inbounds %3, %3* %296, i32 0, i32 0
  %298 = bitcast %4* %297 to %7**
  %299 = load %7*, %7** %298, align 8
  %300 = call i32 @php_file_le_stream()
  %301 = call i32 @php_file_le_pstream()
  %302 = call i8* @zend_fetch_resource2(%7* %299, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %300, i32 %301)
  %303 = bitcast i8* %302 to %53*
  store %53* %303, %53** %7, align 8
  %304 = icmp eq %53* %303, null
  br i1 %304, label %305, label %312

305:                                              ; preds = %295
  br label %306

306:                                              ; preds = %305
  %307 = load %3*, %3** %4, align 8
  %308 = getelementptr inbounds %3, %3* %307, i32 0, i32 1
  %309 = bitcast %5* %308 to i32*
  store i32 2, i32* %309, align 8
  br label %310

310:                                              ; preds = %306
  br label %311

311:                                              ; preds = %310
  store i32 1, i32* %20, align 4
  br label %393

312:                                              ; preds = %295
  br label %313

313:                                              ; preds = %312
  br label %314

314:                                              ; preds = %313
  %315 = load i64, i64* %6, align 8
  %316 = icmp sle i64 %315, 0
  br i1 %316, label %317, label %324

317:                                              ; preds = %314
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @101, i32 0, i32 0))
  br label %318

318:                                              ; preds = %317
  %319 = load %3*, %3** %4, align 8
  %320 = getelementptr inbounds %3, %3* %319, i32 0, i32 1
  %321 = bitcast %5* %320 to i32*
  store i32 2, i32* %321, align 8
  br label %322

322:                                              ; preds = %318
  br label %323

323:                                              ; preds = %322
  store i32 1, i32* %20, align 4
  br label %393

324:                                              ; preds = %314
  br label %325

325:                                              ; preds = %324
  %326 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %326) #11
  %327 = load %3*, %3** %4, align 8
  store %3* %327, %3** %21, align 8
  %328 = bitcast %13** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %328) #11
  %329 = load i64, i64* %6, align 8
  %330 = call %13* @161(i64 %329, i32 0)
  store %13* %330, %13** %22, align 8
  %331 = load %13*, %13** %22, align 8
  %332 = load %3*, %3** %21, align 8
  %333 = getelementptr inbounds %3, %3* %332, i32 0, i32 0
  %334 = bitcast %4* %333 to %13**
  store %13* %331, %13** %334, align 8
  %335 = load %3*, %3** %21, align 8
  %336 = getelementptr inbounds %3, %3* %335, i32 0, i32 1
  %337 = bitcast %5* %336 to i32*
  store i32 5126, i32* %337, align 8
  %338 = bitcast %13** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %338) #11
  %339 = bitcast %3** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %339) #11
  br label %340

340:                                              ; preds = %325
  br label %341

341:                                              ; preds = %340
  %342 = load %53*, %53** %7, align 8
  %343 = load %3*, %3** %4, align 8
  %344 = getelementptr inbounds %3, %3* %343, i32 0, i32 0
  %345 = bitcast %4* %344 to %13**
  %346 = load %13*, %13** %345, align 8
  %347 = getelementptr inbounds %13, %13* %346, i32 0, i32 3
  %348 = getelementptr inbounds [1 x i8], [1 x i8]* %347, i32 0, i32 0
  %349 = load i64, i64* %6, align 8
  %350 = call i64 @_php_stream_read(%53* %342, i8* %348, i64 %349)
  %351 = load %3*, %3** %4, align 8
  %352 = getelementptr inbounds %3, %3* %351, i32 0, i32 0
  %353 = bitcast %4* %352 to %13**
  %354 = load %13*, %13** %353, align 8
  %355 = getelementptr inbounds %13, %13* %354, i32 0, i32 2
  store i64 %350, i64* %355, align 8
  %356 = load %3*, %3** %4, align 8
  %357 = getelementptr inbounds %3, %3* %356, i32 0, i32 0
  %358 = bitcast %4* %357 to %13**
  %359 = load %13*, %13** %358, align 8
  %360 = getelementptr inbounds %13, %13* %359, i32 0, i32 3
  %361 = load %3*, %3** %4, align 8
  %362 = getelementptr inbounds %3, %3* %361, i32 0, i32 0
  %363 = bitcast %4* %362 to %13**
  %364 = load %13*, %13** %363, align 8
  %365 = getelementptr inbounds %13, %13* %364, i32 0, i32 2
  %366 = load i64, i64* %365, align 8
  %367 = getelementptr inbounds [1 x i8], [1 x i8]* %360, i64 0, i64 %366
  store i8 0, i8* %367, align 1
  %368 = load %3*, %3** %4, align 8
  %369 = getelementptr inbounds %3, %3* %368, i32 0, i32 0
  %370 = bitcast %4* %369 to %13**
  %371 = load %13*, %13** %370, align 8
  %372 = getelementptr inbounds %13, %13* %371, i32 0, i32 2
  %373 = load i64, i64* %372, align 8
  %374 = load i64, i64* %6, align 8
  %375 = sdiv i64 %374, 2
  %376 = icmp ult i64 %373, %375
  br i1 %376, label %377, label %392

377:                                              ; preds = %341
  %378 = load %3*, %3** %4, align 8
  %379 = getelementptr inbounds %3, %3* %378, i32 0, i32 0
  %380 = bitcast %4* %379 to %13**
  %381 = load %13*, %13** %380, align 8
  %382 = load %3*, %3** %4, align 8
  %383 = getelementptr inbounds %3, %3* %382, i32 0, i32 0
  %384 = bitcast %4* %383 to %13**
  %385 = load %13*, %13** %384, align 8
  %386 = getelementptr inbounds %13, %13* %385, i32 0, i32 2
  %387 = load i64, i64* %386, align 8
  %388 = call %13* @162(%13* %381, i64 %387, i32 0)
  %389 = load %3*, %3** %4, align 8
  %390 = getelementptr inbounds %3, %3* %389, i32 0, i32 0
  %391 = bitcast %4* %390 to %13**
  store %13* %388, %13** %391, align 8
  br label %392

392:                                              ; preds = %377, %341
  store i32 0, i32* %20, align 4
  br label %393

393:                                              ; preds = %392, %323, %311, %266
  %394 = bitcast %53** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %394) #11
  %395 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %395) #11
  %396 = bitcast %3** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %396) #11
  %397 = load i32, i32* %20, align 4
  switch i32 %397, label %399 [
    i32 0, label %398
    i32 1, label %398
  ]

398:                                              ; preds = %393, %393
  ret void

399:                                              ; preds = %393
  unreachable
}

declare dso_local i64 @_php_stream_read(%53*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_fputcsv(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca %53*, align 8
  %9 = alloca %3*, align 8
  %10 = alloca %3*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %3*, align 8
  %24 = alloca %3*, align 8
  %25 = alloca i32, align 4
  %26 = alloca i8*, align 8
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %3*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %5) #11
  store i8 44, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %6) #11
  store i8 34, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #11
  store i8 92, i8* %7, align 1
  %32 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #11
  %33 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  store %3* null, %3** %9, align 8
  %34 = bitcast %3** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  store %3* null, %3** %10, align 8
  %35 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  %36 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  store i8* null, i8** %12, align 8
  %37 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  store i8* null, i8** %13, align 8
  %38 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  store i8* null, i8** %14, align 8
  %39 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  store i64 0, i64* %15, align 8
  %40 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  store i64 0, i64* %16, align 8
  %41 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  store i64 0, i64* %17, align 8
  br label %42

42:                                               ; preds = %2
  %43 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  store i32 0, i32* %18, align 4
  %44 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  store i32 2, i32* %19, align 4
  %45 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %45) #11
  store i32 5, i32* %20, align 4
  %46 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #11
  %47 = load %28*, %28** %3, align 8
  %48 = getelementptr inbounds %28, %28* %47, i32 0, i32 4
  %49 = getelementptr inbounds %3, %3* %48, i32 0, i32 2
  %50 = bitcast %6* %49 to i32*
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %21, align 4
  %52 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #11
  %53 = bitcast %3** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #11
  %54 = bitcast %3** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #11
  store %3* null, %3** %24, align 8
  %55 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #11
  store i32 0, i32* %25, align 4
  %56 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #11
  store i8* null, i8** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %27) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %28) #11
  store i8 0, i8* %28, align 1
  %57 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %57) #11
  store i32 0, i32* %29, align 4
  %58 = load i32, i32* %22, align 4
  %59 = load %3*, %3** %23, align 8
  %60 = load %3*, %3** %24, align 8
  %61 = load i32, i32* %25, align 4
  %62 = load i8*, i8** %26, align 8
  %63 = load i8, i8* %27, align 1
  %64 = load i8, i8* %28, align 1
  br label %65

65:                                               ; preds = %42
  %66 = load i32, i32* %21, align 4
  %67 = load i32, i32* %19, align 4
  %68 = icmp slt i32 %66, %67
  %69 = xor i1 %68, true
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = sext i32 %71 to i64
  %73 = call i64 @llvm.expect.i64(i64 %72, i64 0)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %94, label %75

75:                                               ; preds = %65
  %76 = load i32, i32* %21, align 4
  %77 = load i32, i32* %20, align 4
  %78 = icmp sgt i32 %76, %77
  %79 = xor i1 %78, true
  %80 = xor i1 %79, true
  %81 = zext i1 %80 to i32
  %82 = sext i32 %81 to i64
  %83 = call i64 @llvm.expect.i64(i64 %82, i64 0)
  %84 = icmp ne i64 %83, 0
  br i1 %84, label %85, label %98

85:                                               ; preds = %75
  %86 = load i32, i32* %20, align 4
  %87 = icmp sge i32 %86, 0
  %88 = xor i1 %87, true
  %89 = xor i1 %88, true
  %90 = zext i1 %89 to i32
  %91 = sext i32 %90 to i64
  %92 = call i64 @llvm.expect.i64(i64 %91, i64 1)
  %93 = icmp ne i64 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %85, %65
  %95 = load i32, i32* %21, align 4
  %96 = load i32, i32* %19, align 4
  %97 = load i32, i32* %20, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %95, i32 %96, i32 %97)
  store i32 1, i32* %29, align 4
  br label %453

98:                                               ; preds = %85, %75
  store i32 0, i32* %22, align 4
  %99 = load %28*, %28** %3, align 8
  %100 = bitcast %28* %99 to %3*
  %101 = getelementptr inbounds %3, %3* %100, i64 4
  store %3* %101, %3** %23, align 8
  %102 = load i32, i32* %22, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %22, align 4
  br label %104

104:                                              ; preds = %98
  %105 = load i32, i32* %22, align 4
  %106 = load i32, i32* %19, align 4
  %107 = icmp sle i32 %105, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %104
  %109 = load i8, i8* %28, align 1
  %110 = zext i8 %109 to i32
  %111 = icmp eq i32 %110, 1
  br label %112

112:                                              ; preds = %108, %104
  %113 = phi i1 [ true, %104 ], [ %111, %108 ]
  %114 = xor i1 %113, true
  %115 = zext i1 %114 to i32
  %116 = sext i32 %115 to i64
  %117 = call i64 @llvm.expect.i64(i64 %116, i64 0)
  %118 = icmp ne i64 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %112
  unreachable

120:                                              ; preds = %112
  br label %121

121:                                              ; preds = %120
  br label %122

122:                                              ; preds = %121
  br label %123

123:                                              ; preds = %122
  %124 = load i32, i32* %22, align 4
  %125 = load i32, i32* %19, align 4
  %126 = icmp sgt i32 %124, %125
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = load i8, i8* %28, align 1
  %129 = zext i8 %128 to i32
  %130 = icmp eq i32 %129, 0
  br label %131

131:                                              ; preds = %127, %123
  %132 = phi i1 [ true, %123 ], [ %130, %127 ]
  %133 = xor i1 %132, true
  %134 = zext i1 %133 to i32
  %135 = sext i32 %134 to i64
  %136 = call i64 @llvm.expect.i64(i64 %135, i64 0)
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %131
  unreachable

139:                                              ; preds = %131
  br label %140

140:                                              ; preds = %139
  br label %141

141:                                              ; preds = %140
  %142 = load i8, i8* %28, align 1
  %143 = icmp ne i8 %142, 0
  br i1 %143, label %144, label %156

144:                                              ; preds = %141
  %145 = load i32, i32* %22, align 4
  %146 = load i32, i32* %21, align 4
  %147 = icmp sgt i32 %145, %146
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = zext i1 %149 to i32
  %151 = sext i32 %150 to i64
  %152 = call i64 @llvm.expect.i64(i64 %151, i64 0)
  %153 = icmp ne i64 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %144
  br label %453

155:                                              ; preds = %144
  br label %156

156:                                              ; preds = %155, %141
  %157 = load %3*, %3** %23, align 8
  %158 = getelementptr inbounds %3, %3* %157, i32 1
  store %3* %158, %3** %23, align 8
  %159 = load %3*, %3** %23, align 8
  store %3* %159, %3** %24, align 8
  %160 = load %3*, %3** %24, align 8
  %161 = call i32 @148(%3* %160, %3** %9, i32 0)
  %162 = icmp ne i32 %161, 0
  %163 = xor i1 %162, true
  %164 = xor i1 %163, true
  %165 = xor i1 %164, true
  %166 = zext i1 %165 to i32
  %167 = sext i32 %166 to i64
  %168 = call i64 @llvm.expect.i64(i64 %167, i64 0)
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %156
  store i32 5, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %453

171:                                              ; preds = %156
  %172 = load i32, i32* %22, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %22, align 4
  br label %174

174:                                              ; preds = %171
  %175 = load i32, i32* %22, align 4
  %176 = load i32, i32* %19, align 4
  %177 = icmp sle i32 %175, %176
  br i1 %177, label %182, label %178

178:                                              ; preds = %174
  %179 = load i8, i8* %28, align 1
  %180 = zext i8 %179 to i32
  %181 = icmp eq i32 %180, 1
  br label %182

182:                                              ; preds = %178, %174
  %183 = phi i1 [ true, %174 ], [ %181, %178 ]
  %184 = xor i1 %183, true
  %185 = zext i1 %184 to i32
  %186 = sext i32 %185 to i64
  %187 = call i64 @llvm.expect.i64(i64 %186, i64 0)
  %188 = icmp ne i64 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %182
  unreachable

190:                                              ; preds = %182
  br label %191

191:                                              ; preds = %190
  br label %192

192:                                              ; preds = %191
  br label %193

193:                                              ; preds = %192
  %194 = load i32, i32* %22, align 4
  %195 = load i32, i32* %19, align 4
  %196 = icmp sgt i32 %194, %195
  br i1 %196, label %201, label %197

197:                                              ; preds = %193
  %198 = load i8, i8* %28, align 1
  %199 = zext i8 %198 to i32
  %200 = icmp eq i32 %199, 0
  br label %201

201:                                              ; preds = %197, %193
  %202 = phi i1 [ true, %193 ], [ %200, %197 ]
  %203 = xor i1 %202, true
  %204 = zext i1 %203 to i32
  %205 = sext i32 %204 to i64
  %206 = call i64 @llvm.expect.i64(i64 %205, i64 0)
  %207 = icmp ne i64 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %201
  unreachable

209:                                              ; preds = %201
  br label %210

210:                                              ; preds = %209
  br label %211

211:                                              ; preds = %210
  %212 = load i8, i8* %28, align 1
  %213 = icmp ne i8 %212, 0
  br i1 %213, label %214, label %226

214:                                              ; preds = %211
  %215 = load i32, i32* %22, align 4
  %216 = load i32, i32* %21, align 4
  %217 = icmp sgt i32 %215, %216
  %218 = xor i1 %217, true
  %219 = xor i1 %218, true
  %220 = zext i1 %219 to i32
  %221 = sext i32 %220 to i64
  %222 = call i64 @llvm.expect.i64(i64 %221, i64 0)
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %214
  br label %453

225:                                              ; preds = %214
  br label %226

226:                                              ; preds = %225, %211
  %227 = load %3*, %3** %23, align 8
  %228 = getelementptr inbounds %3, %3* %227, i32 1
  store %3* %228, %3** %23, align 8
  %229 = load %3*, %3** %23, align 8
  store %3* %229, %3** %24, align 8
  %230 = load %3*, %3** %24, align 8
  %231 = call i32 @163(%3* %230, %3** %10, i32 0, i32 0)
  %232 = icmp ne i32 %231, 0
  %233 = xor i1 %232, true
  %234 = xor i1 %233, true
  %235 = xor i1 %234, true
  %236 = zext i1 %235 to i32
  %237 = sext i32 %236 to i64
  %238 = call i64 @llvm.expect.i64(i64 %237, i64 0)
  %239 = icmp ne i64 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %226
  store i32 3, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %453

241:                                              ; preds = %226
  store i8 1, i8* %28, align 1
  %242 = load i32, i32* %22, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %22, align 4
  br label %244

244:                                              ; preds = %241
  %245 = load i32, i32* %22, align 4
  %246 = load i32, i32* %19, align 4
  %247 = icmp sle i32 %245, %246
  br i1 %247, label %252, label %248

248:                                              ; preds = %244
  %249 = load i8, i8* %28, align 1
  %250 = zext i8 %249 to i32
  %251 = icmp eq i32 %250, 1
  br label %252

252:                                              ; preds = %248, %244
  %253 = phi i1 [ true, %244 ], [ %251, %248 ]
  %254 = xor i1 %253, true
  %255 = zext i1 %254 to i32
  %256 = sext i32 %255 to i64
  %257 = call i64 @llvm.expect.i64(i64 %256, i64 0)
  %258 = icmp ne i64 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %252
  unreachable

260:                                              ; preds = %252
  br label %261

261:                                              ; preds = %260
  br label %262

262:                                              ; preds = %261
  br label %263

263:                                              ; preds = %262
  %264 = load i32, i32* %22, align 4
  %265 = load i32, i32* %19, align 4
  %266 = icmp sgt i32 %264, %265
  br i1 %266, label %271, label %267

267:                                              ; preds = %263
  %268 = load i8, i8* %28, align 1
  %269 = zext i8 %268 to i32
  %270 = icmp eq i32 %269, 0
  br label %271

271:                                              ; preds = %267, %263
  %272 = phi i1 [ true, %263 ], [ %270, %267 ]
  %273 = xor i1 %272, true
  %274 = zext i1 %273 to i32
  %275 = sext i32 %274 to i64
  %276 = call i64 @llvm.expect.i64(i64 %275, i64 0)
  %277 = icmp ne i64 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %271
  unreachable

279:                                              ; preds = %271
  br label %280

280:                                              ; preds = %279
  br label %281

281:                                              ; preds = %280
  %282 = load i8, i8* %28, align 1
  %283 = icmp ne i8 %282, 0
  br i1 %283, label %284, label %296

284:                                              ; preds = %281
  %285 = load i32, i32* %22, align 4
  %286 = load i32, i32* %21, align 4
  %287 = icmp sgt i32 %285, %286
  %288 = xor i1 %287, true
  %289 = xor i1 %288, true
  %290 = zext i1 %289 to i32
  %291 = sext i32 %290 to i64
  %292 = call i64 @llvm.expect.i64(i64 %291, i64 0)
  %293 = icmp ne i64 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %284
  br label %453

295:                                              ; preds = %284
  br label %296

296:                                              ; preds = %295, %281
  %297 = load %3*, %3** %23, align 8
  %298 = getelementptr inbounds %3, %3* %297, i32 1
  store %3* %298, %3** %23, align 8
  %299 = load %3*, %3** %23, align 8
  store %3* %299, %3** %24, align 8
  %300 = load %3*, %3** %24, align 8
  %301 = call i32 @159(%3* %300, i8** %12, i64* %15, i32 0)
  %302 = icmp ne i32 %301, 0
  %303 = xor i1 %302, true
  %304 = xor i1 %303, true
  %305 = xor i1 %304, true
  %306 = zext i1 %305 to i32
  %307 = sext i32 %306 to i64
  %308 = call i64 @llvm.expect.i64(i64 %307, i64 0)
  %309 = icmp ne i64 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %296
  store i32 2, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %453

311:                                              ; preds = %296
  %312 = load i32, i32* %22, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, i32* %22, align 4
  br label %314

314:                                              ; preds = %311
  %315 = load i32, i32* %22, align 4
  %316 = load i32, i32* %19, align 4
  %317 = icmp sle i32 %315, %316
  br i1 %317, label %322, label %318

318:                                              ; preds = %314
  %319 = load i8, i8* %28, align 1
  %320 = zext i8 %319 to i32
  %321 = icmp eq i32 %320, 1
  br label %322

322:                                              ; preds = %318, %314
  %323 = phi i1 [ true, %314 ], [ %321, %318 ]
  %324 = xor i1 %323, true
  %325 = zext i1 %324 to i32
  %326 = sext i32 %325 to i64
  %327 = call i64 @llvm.expect.i64(i64 %326, i64 0)
  %328 = icmp ne i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %322
  unreachable

330:                                              ; preds = %322
  br label %331

331:                                              ; preds = %330
  br label %332

332:                                              ; preds = %331
  br label %333

333:                                              ; preds = %332
  %334 = load i32, i32* %22, align 4
  %335 = load i32, i32* %19, align 4
  %336 = icmp sgt i32 %334, %335
  br i1 %336, label %341, label %337

337:                                              ; preds = %333
  %338 = load i8, i8* %28, align 1
  %339 = zext i8 %338 to i32
  %340 = icmp eq i32 %339, 0
  br label %341

341:                                              ; preds = %337, %333
  %342 = phi i1 [ true, %333 ], [ %340, %337 ]
  %343 = xor i1 %342, true
  %344 = zext i1 %343 to i32
  %345 = sext i32 %344 to i64
  %346 = call i64 @llvm.expect.i64(i64 %345, i64 0)
  %347 = icmp ne i64 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %341
  unreachable

349:                                              ; preds = %341
  br label %350

350:                                              ; preds = %349
  br label %351

351:                                              ; preds = %350
  %352 = load i8, i8* %28, align 1
  %353 = icmp ne i8 %352, 0
  br i1 %353, label %354, label %366

354:                                              ; preds = %351
  %355 = load i32, i32* %22, align 4
  %356 = load i32, i32* %21, align 4
  %357 = icmp sgt i32 %355, %356
  %358 = xor i1 %357, true
  %359 = xor i1 %358, true
  %360 = zext i1 %359 to i32
  %361 = sext i32 %360 to i64
  %362 = call i64 @llvm.expect.i64(i64 %361, i64 0)
  %363 = icmp ne i64 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %354
  br label %453

365:                                              ; preds = %354
  br label %366

366:                                              ; preds = %365, %351
  %367 = load %3*, %3** %23, align 8
  %368 = getelementptr inbounds %3, %3* %367, i32 1
  store %3* %368, %3** %23, align 8
  %369 = load %3*, %3** %23, align 8
  store %3* %369, %3** %24, align 8
  %370 = load %3*, %3** %24, align 8
  %371 = call i32 @159(%3* %370, i8** %13, i64* %16, i32 0)
  %372 = icmp ne i32 %371, 0
  %373 = xor i1 %372, true
  %374 = xor i1 %373, true
  %375 = xor i1 %374, true
  %376 = zext i1 %375 to i32
  %377 = sext i32 %376 to i64
  %378 = call i64 @llvm.expect.i64(i64 %377, i64 0)
  %379 = icmp ne i64 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %366
  store i32 2, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %453

381:                                              ; preds = %366
  %382 = load i32, i32* %22, align 4
  %383 = add nsw i32 %382, 1
  store i32 %383, i32* %22, align 4
  br label %384

384:                                              ; preds = %381
  %385 = load i32, i32* %22, align 4
  %386 = load i32, i32* %19, align 4
  %387 = icmp sle i32 %385, %386
  br i1 %387, label %392, label %388

388:                                              ; preds = %384
  %389 = load i8, i8* %28, align 1
  %390 = zext i8 %389 to i32
  %391 = icmp eq i32 %390, 1
  br label %392

392:                                              ; preds = %388, %384
  %393 = phi i1 [ true, %384 ], [ %391, %388 ]
  %394 = xor i1 %393, true
  %395 = zext i1 %394 to i32
  %396 = sext i32 %395 to i64
  %397 = call i64 @llvm.expect.i64(i64 %396, i64 0)
  %398 = icmp ne i64 %397, 0
  br i1 %398, label %399, label %400

399:                                              ; preds = %392
  unreachable

400:                                              ; preds = %392
  br label %401

401:                                              ; preds = %400
  br label %402

402:                                              ; preds = %401
  br label %403

403:                                              ; preds = %402
  %404 = load i32, i32* %22, align 4
  %405 = load i32, i32* %19, align 4
  %406 = icmp sgt i32 %404, %405
  br i1 %406, label %411, label %407

407:                                              ; preds = %403
  %408 = load i8, i8* %28, align 1
  %409 = zext i8 %408 to i32
  %410 = icmp eq i32 %409, 0
  br label %411

411:                                              ; preds = %407, %403
  %412 = phi i1 [ true, %403 ], [ %410, %407 ]
  %413 = xor i1 %412, true
  %414 = zext i1 %413 to i32
  %415 = sext i32 %414 to i64
  %416 = call i64 @llvm.expect.i64(i64 %415, i64 0)
  %417 = icmp ne i64 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %411
  unreachable

419:                                              ; preds = %411
  br label %420

420:                                              ; preds = %419
  br label %421

421:                                              ; preds = %420
  %422 = load i8, i8* %28, align 1
  %423 = icmp ne i8 %422, 0
  br i1 %423, label %424, label %436

424:                                              ; preds = %421
  %425 = load i32, i32* %22, align 4
  %426 = load i32, i32* %21, align 4
  %427 = icmp sgt i32 %425, %426
  %428 = xor i1 %427, true
  %429 = xor i1 %428, true
  %430 = zext i1 %429 to i32
  %431 = sext i32 %430 to i64
  %432 = call i64 @llvm.expect.i64(i64 %431, i64 0)
  %433 = icmp ne i64 %432, 0
  br i1 %433, label %434, label %435

434:                                              ; preds = %424
  br label %453

435:                                              ; preds = %424
  br label %436

436:                                              ; preds = %435, %421
  %437 = load %3*, %3** %23, align 8
  %438 = getelementptr inbounds %3, %3* %437, i32 1
  store %3* %438, %3** %23, align 8
  %439 = load %3*, %3** %23, align 8
  store %3* %439, %3** %24, align 8
  %440 = load %3*, %3** %24, align 8
  %441 = call i32 @159(%3* %440, i8** %14, i64* %17, i32 0)
  %442 = icmp ne i32 %441, 0
  %443 = xor i1 %442, true
  %444 = xor i1 %443, true
  %445 = xor i1 %444, true
  %446 = zext i1 %445 to i32
  %447 = sext i32 %446 to i64
  %448 = call i64 @llvm.expect.i64(i64 %447, i64 0)
  %449 = icmp ne i64 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %436
  store i32 2, i32* %25, align 4
  store i32 4, i32* %29, align 4
  br label %453

451:                                              ; preds = %436
  br label %452

452:                                              ; preds = %451
  br label %453

453:                                              ; preds = %452, %450, %434, %380, %364, %310, %294, %240, %224, %170, %154, %94
  %454 = load i32, i32* %29, align 4
  %455 = icmp ne i32 %454, 0
  %456 = xor i1 %455, true
  %457 = xor i1 %456, true
  %458 = zext i1 %457 to i32
  %459 = sext i32 %458 to i64
  %460 = call i64 @llvm.expect.i64(i64 %459, i64 0)
  %461 = icmp ne i64 %460, 0
  br i1 %461, label %462, label %485

462:                                              ; preds = %453
  %463 = load i32, i32* %29, align 4
  %464 = icmp eq i32 %463, 2
  br i1 %464, label %465, label %468

465:                                              ; preds = %462
  %466 = load i32, i32* %22, align 4
  %467 = load i8*, i8** %26, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %466, i8* %467)
  br label %484

468:                                              ; preds = %462
  %469 = load i32, i32* %29, align 4
  %470 = icmp eq i32 %469, 3
  br i1 %470, label %471, label %475

471:                                              ; preds = %468
  %472 = load i32, i32* %22, align 4
  %473 = load i8*, i8** %26, align 8
  %474 = load %3*, %3** %24, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %472, i8* %473, %3* %474)
  br label %483

475:                                              ; preds = %468
  %476 = load i32, i32* %29, align 4
  %477 = icmp eq i32 %476, 4
  br i1 %477, label %478, label %482

478:                                              ; preds = %475
  %479 = load i32, i32* %22, align 4
  %480 = load i32, i32* %25, align 4
  %481 = load %3*, %3** %24, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %479, i32 %480, %3* %481)
  br label %482

482:                                              ; preds = %478, %475
  br label %483

483:                                              ; preds = %482, %471
  br label %484

484:                                              ; preds = %483, %465
  store i32 1, i32* %30, align 4
  br label %486

485:                                              ; preds = %453
  store i32 0, i32* %30, align 4
  br label %486

486:                                              ; preds = %485, %484
  %487 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %487) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %28) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %27) #11
  %488 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %488) #11
  %489 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %489) #11
  %490 = bitcast %3** %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %490) #11
  %491 = bitcast %3** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %491) #11
  %492 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %492) #11
  %493 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %493) #11
  %494 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %494) #11
  %495 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %495) #11
  %496 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %496) #11
  %497 = load i32, i32* %30, align 4
  switch i32 %497, label %614 [
    i32 0, label %498
  ]

498:                                              ; preds = %486
  br label %499

499:                                              ; preds = %498
  br label %500

500:                                              ; preds = %499
  %501 = load i8*, i8** %12, align 8
  %502 = icmp ne i8* %501, null
  br i1 %502, label %503, label %521

503:                                              ; preds = %500
  %504 = load i64, i64* %15, align 8
  %505 = icmp ult i64 %504, 1
  br i1 %505, label %506, label %513

506:                                              ; preds = %503
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @128, i32 0, i32 0))
  br label %507

507:                                              ; preds = %506
  %508 = load %3*, %3** %4, align 8
  %509 = getelementptr inbounds %3, %3* %508, i32 0, i32 1
  %510 = bitcast %5* %509 to i32*
  store i32 2, i32* %510, align 8
  br label %511

511:                                              ; preds = %507
  br label %512

512:                                              ; preds = %511
  store i32 1, i32* %30, align 4
  br label %614

513:                                              ; preds = %503
  %514 = load i64, i64* %15, align 8
  %515 = icmp ugt i64 %514, 1
  br i1 %515, label %516, label %517

516:                                              ; preds = %513
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @129, i32 0, i32 0))
  br label %517

517:                                              ; preds = %516, %513
  br label %518

518:                                              ; preds = %517
  %519 = load i8*, i8** %12, align 8
  %520 = load i8, i8* %519, align 1
  store i8 %520, i8* %5, align 1
  br label %521

521:                                              ; preds = %518, %500
  %522 = load i8*, i8** %13, align 8
  %523 = icmp ne i8* %522, null
  br i1 %523, label %524, label %542

524:                                              ; preds = %521
  %525 = load i64, i64* %16, align 8
  %526 = icmp ult i64 %525, 1
  br i1 %526, label %527, label %534

527:                                              ; preds = %524
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @130, i32 0, i32 0))
  br label %528

528:                                              ; preds = %527
  %529 = load %3*, %3** %4, align 8
  %530 = getelementptr inbounds %3, %3* %529, i32 0, i32 1
  %531 = bitcast %5* %530 to i32*
  store i32 2, i32* %531, align 8
  br label %532

532:                                              ; preds = %528
  br label %533

533:                                              ; preds = %532
  store i32 1, i32* %30, align 4
  br label %614

534:                                              ; preds = %524
  %535 = load i64, i64* %16, align 8
  %536 = icmp ugt i64 %535, 1
  br i1 %536, label %537, label %538

537:                                              ; preds = %534
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @131, i32 0, i32 0))
  br label %538

538:                                              ; preds = %537, %534
  br label %539

539:                                              ; preds = %538
  %540 = load i8*, i8** %13, align 8
  %541 = load i8, i8* %540, align 1
  store i8 %541, i8* %6, align 1
  br label %542

542:                                              ; preds = %539, %521
  %543 = load i8*, i8** %14, align 8
  %544 = icmp ne i8* %543, null
  br i1 %544, label %545, label %563

545:                                              ; preds = %542
  %546 = load i64, i64* %17, align 8
  %547 = icmp ult i64 %546, 1
  br i1 %547, label %548, label %555

548:                                              ; preds = %545
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @132, i32 0, i32 0))
  br label %549

549:                                              ; preds = %548
  %550 = load %3*, %3** %4, align 8
  %551 = getelementptr inbounds %3, %3* %550, i32 0, i32 1
  %552 = bitcast %5* %551 to i32*
  store i32 2, i32* %552, align 8
  br label %553

553:                                              ; preds = %549
  br label %554

554:                                              ; preds = %553
  store i32 1, i32* %30, align 4
  br label %614

555:                                              ; preds = %545
  %556 = load i64, i64* %17, align 8
  %557 = icmp ugt i64 %556, 1
  br i1 %557, label %558, label %559

558:                                              ; preds = %555
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @133, i32 0, i32 0))
  br label %559

559:                                              ; preds = %558, %555
  br label %560

560:                                              ; preds = %559
  %561 = load i8*, i8** %14, align 8
  %562 = load i8, i8* %561, align 1
  store i8 %562, i8* %7, align 1
  br label %563

563:                                              ; preds = %560, %542
  br label %564

564:                                              ; preds = %563
  %565 = load %3*, %3** %9, align 8
  %566 = call zeroext i8 @150(%3* %565)
  %567 = zext i8 %566 to i32
  %568 = icmp eq i32 %567, 9
  %569 = xor i1 %568, true
  %570 = zext i1 %569 to i32
  %571 = sext i32 %570 to i64
  %572 = call i64 @llvm.expect.i64(i64 %571, i64 0)
  %573 = icmp ne i64 %572, 0
  br i1 %573, label %574, label %575

574:                                              ; preds = %564
  unreachable

575:                                              ; preds = %564
  br label %576

576:                                              ; preds = %575
  br label %577

577:                                              ; preds = %576
  br label %578

578:                                              ; preds = %577
  %579 = load %3*, %3** %9, align 8
  %580 = getelementptr inbounds %3, %3* %579, i32 0, i32 0
  %581 = bitcast %4* %580 to %7**
  %582 = load %7*, %7** %581, align 8
  %583 = call i32 @php_file_le_stream()
  %584 = call i32 @php_file_le_pstream()
  %585 = call i8* @zend_fetch_resource2(%7* %582, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %583, i32 %584)
  %586 = bitcast i8* %585 to %53*
  store %53* %586, %53** %8, align 8
  %587 = icmp eq %53* %586, null
  br i1 %587, label %588, label %595

588:                                              ; preds = %578
  br label %589

589:                                              ; preds = %588
  %590 = load %3*, %3** %4, align 8
  %591 = getelementptr inbounds %3, %3* %590, i32 0, i32 1
  %592 = bitcast %5* %591 to i32*
  store i32 2, i32* %592, align 8
  br label %593

593:                                              ; preds = %589
  br label %594

594:                                              ; preds = %593
  store i32 1, i32* %30, align 4
  br label %614

595:                                              ; preds = %578
  br label %596

596:                                              ; preds = %595
  br label %597

597:                                              ; preds = %596
  %598 = load %53*, %53** %8, align 8
  %599 = load %3*, %3** %10, align 8
  %600 = load i8, i8* %5, align 1
  %601 = load i8, i8* %6, align 1
  %602 = load i8, i8* %7, align 1
  %603 = call i64 @php_fputcsv(%53* %598, %3* %599, i8 signext %600, i8 signext %601, i8 signext %602)
  store i64 %603, i64* %11, align 8
  %604 = bitcast %3** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %604) #11
  %605 = load %3*, %3** %4, align 8
  store %3* %605, %3** %31, align 8
  %606 = load i64, i64* %11, align 8
  %607 = load %3*, %3** %31, align 8
  %608 = getelementptr inbounds %3, %3* %607, i32 0, i32 0
  %609 = bitcast %4* %608 to i64*
  store i64 %606, i64* %609, align 8
  %610 = load %3*, %3** %31, align 8
  %611 = getelementptr inbounds %3, %3* %610, i32 0, i32 1
  %612 = bitcast %5* %611 to i32*
  store i32 4, i32* %612, align 8
  %613 = bitcast %3** %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %613) #11
  store i32 1, i32* %30, align 4
  br label %614

614:                                              ; preds = %597, %594, %554, %533, %512, %486
  %615 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %615) #11
  %616 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %616) #11
  %617 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %617) #11
  %618 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %618) #11
  %619 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %619) #11
  %620 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %620) #11
  %621 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %621) #11
  %622 = bitcast %3** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %622) #11
  %623 = bitcast %3** %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %623) #11
  %624 = bitcast %53** %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %624) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %5) #11
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @163(%3* %0, %3** %1, i32 %2, i32 %3) #4 {
  %5 = alloca i32, align 4
  %6 = alloca %3*, align 8
  %7 = alloca %3**, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %3* %0, %3** %6, align 8
  store %3** %1, %3*** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %10 = load %3*, %3** %6, align 8
  %11 = call zeroext i8 @150(%3* %10)
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 7
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = call i64 @llvm.expect.i64(i64 %17, i64 1)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %4
  %21 = load i32, i32* %9, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %37

23:                                               ; preds = %20
  %24 = load %3*, %3** %6, align 8
  %25 = call zeroext i8 @150(%3* %24)
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %26, 8
  %28 = xor i1 %27, true
  %29 = xor i1 %28, true
  %30 = zext i1 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = call i64 @llvm.expect.i64(i64 %31, i64 1)
  %33 = icmp ne i64 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %23, %4
  %35 = load %3*, %3** %6, align 8
  %36 = load %3**, %3*** %7, align 8
  store %3* %35, %3** %36, align 8
  br label %55

37:                                               ; preds = %23, %20
  %38 = load i32, i32* %8, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %53

40:                                               ; preds = %37
  %41 = load %3*, %3** %6, align 8
  %42 = call zeroext i8 @150(%3* %41)
  %43 = zext i8 %42 to i32
  %44 = icmp eq i32 %43, 1
  %45 = xor i1 %44, true
  %46 = xor i1 %45, true
  %47 = zext i1 %46 to i32
  %48 = sext i32 %47 to i64
  %49 = call i64 @llvm.expect.i64(i64 %48, i64 1)
  %50 = icmp ne i64 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %40
  %52 = load %3**, %3*** %7, align 8
  store %3* null, %3** %52, align 8
  br label %54

53:                                               ; preds = %40, %37
  store i32 0, i32* %5, align 4
  br label %56

54:                                               ; preds = %51
  br label %55

55:                                               ; preds = %54, %34
  store i32 1, i32* %5, align 4
  br label %56

56:                                               ; preds = %55, %53
  %57 = load i32, i32* %5, align 4
  ret i32 %57
}

; Function Attrs: nounwind uwtable
define dso_local i64 @php_fputcsv(%53* %0, %3* %1, i8 signext %2, i8 signext %3, i8 signext %4) #0 {
  %6 = alloca %53*, align 8
  %7 = alloca %3*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca %3*, align 8
  %15 = alloca %52, align 8
  %16 = alloca %10*, align 8
  %17 = alloca %12*, align 8
  %18 = alloca %12*, align 8
  %19 = alloca %3*, align 8
  %20 = alloca i32, align 4
  %21 = alloca %13*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i32, align 4
  store %53* %0, %53** %6, align 8
  store %3* %1, %3** %7, align 8
  store i8 %2, i8* %8, align 1
  store i8 %3, i8* %9, align 1
  store i8 %4, i8* %10, align 1
  %25 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #11
  %26 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #11
  store i32 0, i32* %12, align 4
  %27 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  %28 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #11
  %29 = bitcast %52* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %29) #11
  %30 = bitcast %52* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false)
  %31 = load %3*, %3** %7, align 8
  %32 = getelementptr inbounds %3, %3* %31, i32 0, i32 0
  %33 = bitcast %4* %32 to %10**
  %34 = load %10*, %10** %33, align 8
  %35 = getelementptr inbounds %10, %10* %34, i32 0, i32 5
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %11, align 4
  br label %37

37:                                               ; preds = %5
  %38 = bitcast %10** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  %39 = load %3*, %3** %7, align 8
  %40 = getelementptr inbounds %3, %3* %39, i32 0, i32 0
  %41 = bitcast %4* %40 to %10**
  %42 = load %10*, %10** %41, align 8
  store %10* %42, %10** %16, align 8
  %43 = bitcast %12** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #11
  %44 = load %10*, %10** %16, align 8
  %45 = getelementptr inbounds %10, %10* %44, i32 0, i32 3
  %46 = load %12*, %12** %45, align 8
  store %12* %46, %12** %17, align 8
  %47 = bitcast %12** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #11
  %48 = load %12*, %12** %17, align 8
  %49 = load %10*, %10** %16, align 8
  %50 = getelementptr inbounds %10, %10* %49, i32 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %12, %12* %48, i64 %52
  store %12* %53, %12** %18, align 8
  br label %54

54:                                               ; preds = %210, %37
  %55 = load %12*, %12** %17, align 8
  %56 = load %12*, %12** %18, align 8
  %57 = icmp ne %12* %55, %56
  br i1 %57, label %58, label %213

58:                                               ; preds = %54
  %59 = bitcast %3** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #11
  %60 = load %12*, %12** %17, align 8
  %61 = getelementptr inbounds %12, %12* %60, i32 0, i32 0
  store %3* %61, %3** %19, align 8
  %62 = load %3*, %3** %19, align 8
  %63 = call zeroext i8 @150(%3* %62)
  %64 = zext i8 %63 to i32
  %65 = icmp eq i32 %64, 0
  %66 = xor i1 %65, true
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = call i64 @llvm.expect.i64(i64 %69, i64 0)
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %58
  store i32 6, i32* %20, align 4
  br label %206

73:                                               ; preds = %58
  %74 = load %3*, %3** %19, align 8
  store %3* %74, %3** %14, align 8
  %75 = bitcast %13** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #11
  %76 = load %3*, %3** %14, align 8
  %77 = call %13* @155(%3* %76)
  store %13* %77, %13** %21, align 8
  %78 = load %13*, %13** %21, align 8
  %79 = getelementptr inbounds %13, %13* %78, i32 0, i32 3
  %80 = getelementptr inbounds [1 x i8], [1 x i8]* %79, i32 0, i32 0
  %81 = load i8, i8* %8, align 1
  %82 = sext i8 %81 to i32
  %83 = load %13*, %13** %21, align 8
  %84 = getelementptr inbounds %13, %13* %83, i32 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = call i8* @memchr(i8* %80, i32 %82, i64 %85) #13
  %87 = icmp ne i8* %86, null
  br i1 %87, label %146, label %88

88:                                               ; preds = %73
  %89 = load %13*, %13** %21, align 8
  %90 = getelementptr inbounds %13, %13* %89, i32 0, i32 3
  %91 = getelementptr inbounds [1 x i8], [1 x i8]* %90, i32 0, i32 0
  %92 = load i8, i8* %9, align 1
  %93 = sext i8 %92 to i32
  %94 = load %13*, %13** %21, align 8
  %95 = getelementptr inbounds %13, %13* %94, i32 0, i32 2
  %96 = load i64, i64* %95, align 8
  %97 = call i8* @memchr(i8* %91, i32 %93, i64 %96) #13
  %98 = icmp ne i8* %97, null
  br i1 %98, label %146, label %99

99:                                               ; preds = %88
  %100 = load %13*, %13** %21, align 8
  %101 = getelementptr inbounds %13, %13* %100, i32 0, i32 3
  %102 = getelementptr inbounds [1 x i8], [1 x i8]* %101, i32 0, i32 0
  %103 = load i8, i8* %10, align 1
  %104 = sext i8 %103 to i32
  %105 = load %13*, %13** %21, align 8
  %106 = getelementptr inbounds %13, %13* %105, i32 0, i32 2
  %107 = load i64, i64* %106, align 8
  %108 = call i8* @memchr(i8* %102, i32 %104, i64 %107) #13
  %109 = icmp ne i8* %108, null
  br i1 %109, label %146, label %110

110:                                              ; preds = %99
  %111 = load %13*, %13** %21, align 8
  %112 = getelementptr inbounds %13, %13* %111, i32 0, i32 3
  %113 = getelementptr inbounds [1 x i8], [1 x i8]* %112, i32 0, i32 0
  %114 = load %13*, %13** %21, align 8
  %115 = getelementptr inbounds %13, %13* %114, i32 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = call i8* @memchr(i8* %113, i32 10, i64 %116) #13
  %118 = icmp ne i8* %117, null
  br i1 %118, label %146, label %119

119:                                              ; preds = %110
  %120 = load %13*, %13** %21, align 8
  %121 = getelementptr inbounds %13, %13* %120, i32 0, i32 3
  %122 = getelementptr inbounds [1 x i8], [1 x i8]* %121, i32 0, i32 0
  %123 = load %13*, %13** %21, align 8
  %124 = getelementptr inbounds %13, %13* %123, i32 0, i32 2
  %125 = load i64, i64* %124, align 8
  %126 = call i8* @memchr(i8* %122, i32 13, i64 %125) #13
  %127 = icmp ne i8* %126, null
  br i1 %127, label %146, label %128

128:                                              ; preds = %119
  %129 = load %13*, %13** %21, align 8
  %130 = getelementptr inbounds %13, %13* %129, i32 0, i32 3
  %131 = getelementptr inbounds [1 x i8], [1 x i8]* %130, i32 0, i32 0
  %132 = load %13*, %13** %21, align 8
  %133 = getelementptr inbounds %13, %13* %132, i32 0, i32 2
  %134 = load i64, i64* %133, align 8
  %135 = call i8* @memchr(i8* %131, i32 9, i64 %134) #13
  %136 = icmp ne i8* %135, null
  br i1 %136, label %146, label %137

137:                                              ; preds = %128
  %138 = load %13*, %13** %21, align 8
  %139 = getelementptr inbounds %13, %13* %138, i32 0, i32 3
  %140 = getelementptr inbounds [1 x i8], [1 x i8]* %139, i32 0, i32 0
  %141 = load %13*, %13** %21, align 8
  %142 = getelementptr inbounds %13, %13* %141, i32 0, i32 2
  %143 = load i64, i64* %142, align 8
  %144 = call i8* @memchr(i8* %140, i32 32, i64 %143) #13
  %145 = icmp ne i8* %144, null
  br i1 %145, label %146, label %195

146:                                              ; preds = %137, %128, %119, %110, %99, %88, %73
  %147 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %147) #11
  %148 = load %13*, %13** %21, align 8
  %149 = getelementptr inbounds %13, %13* %148, i32 0, i32 3
  %150 = getelementptr inbounds [1 x i8], [1 x i8]* %149, i32 0, i32 0
  store i8* %150, i8** %22, align 8
  %151 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %151) #11
  %152 = load i8*, i8** %22, align 8
  %153 = load %13*, %13** %21, align 8
  %154 = getelementptr inbounds %13, %13* %153, i32 0, i32 2
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds i8, i8* %152, i64 %155
  store i8* %156, i8** %23, align 8
  %157 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %157) #11
  store i32 0, i32* %24, align 4
  %158 = load i8, i8* %9, align 1
  call void @164(%52* %15, i8 signext %158, i8 zeroext 0)
  br label %159

159:                                              ; preds = %185, %146
  %160 = load i8*, i8** %22, align 8
  %161 = load i8*, i8** %23, align 8
  %162 = icmp ult i8* %160, %161
  br i1 %162, label %163, label %190

163:                                              ; preds = %159
  %164 = load i8*, i8** %22, align 8
  %165 = load i8, i8* %164, align 1
  %166 = sext i8 %165 to i32
  %167 = load i8, i8* %10, align 1
  %168 = sext i8 %167 to i32
  %169 = icmp eq i32 %166, %168
  br i1 %169, label %170, label %171

170:                                              ; preds = %163
  store i32 1, i32* %24, align 4
  br label %185

171:                                              ; preds = %163
  %172 = load i32, i32* %24, align 4
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %171
  %175 = load i8*, i8** %22, align 8
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = load i8, i8* %9, align 1
  %179 = sext i8 %178 to i32
  %180 = icmp eq i32 %177, %179
  br i1 %180, label %181, label %183

181:                                              ; preds = %174
  %182 = load i8, i8* %9, align 1
  call void @164(%52* %15, i8 signext %182, i8 zeroext 0)
  br label %184

183:                                              ; preds = %174, %171
  store i32 0, i32* %24, align 4
  br label %184

184:                                              ; preds = %183, %181
  br label %185

185:                                              ; preds = %184, %170
  %186 = load i8*, i8** %22, align 8
  %187 = load i8, i8* %186, align 1
  call void @164(%52* %15, i8 signext %187, i8 zeroext 0)
  %188 = load i8*, i8** %22, align 8
  %189 = getelementptr inbounds i8, i8* %188, i32 1
  store i8* %189, i8** %22, align 8
  br label %159

190:                                              ; preds = %159
  %191 = load i8, i8* %9, align 1
  call void @164(%52* %15, i8 signext %191, i8 zeroext 0)
  %192 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %192) #11
  %193 = bitcast i8** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #11
  %194 = bitcast i8** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %194) #11
  br label %197

195:                                              ; preds = %137
  %196 = load %13*, %13** %21, align 8
  call void @165(%52* %15, %13* %196, i8 zeroext 0)
  br label %197

197:                                              ; preds = %195, %190
  %198 = load i32, i32* %12, align 4
  %199 = add nsw i32 %198, 1
  store i32 %199, i32* %12, align 4
  %200 = load i32, i32* %11, align 4
  %201 = icmp ne i32 %199, %200
  br i1 %201, label %202, label %203

202:                                              ; preds = %197
  call void @166(%52* %15, i8* %8, i64 1, i8 zeroext 0)
  br label %203

203:                                              ; preds = %202, %197
  %204 = load %13*, %13** %21, align 8
  call void @156(%13* %204)
  %205 = bitcast %13** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %205) #11
  store i32 0, i32* %20, align 4
  br label %206

206:                                              ; preds = %203, %72
  %207 = bitcast %3** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %207) #11
  %208 = load i32, i32* %20, align 4
  switch i32 %208, label %235 [
    i32 0, label %209
    i32 6, label %210
  ]

209:                                              ; preds = %206
  br label %210

210:                                              ; preds = %209, %206
  %211 = load %12*, %12** %17, align 8
  %212 = getelementptr inbounds %12, %12* %211, i32 1
  store %12* %212, %12** %17, align 8
  br label %54

213:                                              ; preds = %54
  %214 = bitcast %12** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %214) #11
  %215 = bitcast %12** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %215) #11
  %216 = bitcast %10** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %216) #11
  br label %217

217:                                              ; preds = %213
  br label %218

218:                                              ; preds = %217
  call void @164(%52* %15, i8 signext 10, i8 zeroext 0)
  call void @167(%52* %15)
  %219 = load %53*, %53** %6, align 8
  %220 = getelementptr inbounds %52, %52* %15, i32 0, i32 0
  %221 = load %13*, %13** %220, align 8
  %222 = getelementptr inbounds %13, %13* %221, i32 0, i32 3
  %223 = getelementptr inbounds [1 x i8], [1 x i8]* %222, i32 0, i32 0
  %224 = getelementptr inbounds %52, %52* %15, i32 0, i32 0
  %225 = load %13*, %13** %224, align 8
  %226 = getelementptr inbounds %13, %13* %225, i32 0, i32 2
  %227 = load i64, i64* %226, align 8
  %228 = call i64 @_php_stream_write(%53* %219, i8* %223, i64 %227)
  store i64 %228, i64* %13, align 8
  call void @168(%52* %15)
  %229 = load i64, i64* %13, align 8
  store i32 1, i32* %20, align 4
  %230 = bitcast %52* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %230) #11
  %231 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %231) #11
  %232 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %232) #11
  %233 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %233) #11
  %234 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %234) #11
  ret i64 %229

235:                                              ; preds = %206
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @164(%52* %0, i8 signext %1, i8 zeroext %2) #4 {
  %4 = alloca %52*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  store %52* %0, %52** %4, align 8
  store i8 %1, i8* %5, align 1
  store i8 %2, i8* %6, align 1
  %8 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #11
  %9 = load %52*, %52** %4, align 8
  %10 = load i8, i8* %6, align 1
  %11 = call i64 @176(%52* %9, i64 1, i8 zeroext %10)
  store i64 %11, i64* %7, align 8
  %12 = load i8, i8* %5, align 1
  %13 = load %52*, %52** %4, align 8
  %14 = getelementptr inbounds %52, %52* %13, i32 0, i32 0
  %15 = load %13*, %13** %14, align 8
  %16 = getelementptr inbounds %13, %13* %15, i32 0, i32 3
  %17 = load i64, i64* %7, align 8
  %18 = sub i64 %17, 1
  %19 = getelementptr inbounds [1 x i8], [1 x i8]* %16, i64 0, i64 %18
  store i8 %12, i8* %19, align 1
  %20 = load i64, i64* %7, align 8
  %21 = load %52*, %52** %4, align 8
  %22 = getelementptr inbounds %52, %52* %21, i32 0, i32 0
  %23 = load %13*, %13** %22, align 8
  %24 = getelementptr inbounds %13, %13* %23, i32 0, i32 2
  store i64 %20, i64* %24, align 8
  %25 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #11
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @165(%52* %0, %13* %1, i8 zeroext %2) #4 {
  %4 = alloca %52*, align 8
  %5 = alloca %13*, align 8
  %6 = alloca i8, align 1
  store %52* %0, %52** %4, align 8
  store %13* %1, %13** %5, align 8
  store i8 %2, i8* %6, align 1
  %7 = load %52*, %52** %4, align 8
  %8 = load %13*, %13** %5, align 8
  %9 = getelementptr inbounds %13, %13* %8, i32 0, i32 3
  %10 = getelementptr inbounds [1 x i8], [1 x i8]* %9, i32 0, i32 0
  %11 = load %13*, %13** %5, align 8
  %12 = getelementptr inbounds %13, %13* %11, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = load i8, i8* %6, align 1
  call void @166(%52* %7, i8* %10, i64 %13, i8 zeroext %14)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @166(%52* %0, i8* %1, i64 %2, i8 zeroext %3) #4 {
  %5 = alloca %52*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  store %52* %0, %52** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i8 %3, i8* %8, align 1
  %10 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #11
  %11 = load %52*, %52** %5, align 8
  %12 = load i64, i64* %7, align 8
  %13 = load i8, i8* %8, align 1
  %14 = call i64 @176(%52* %11, i64 %12, i8 zeroext %13)
  store i64 %14, i64* %9, align 8
  %15 = load %52*, %52** %5, align 8
  %16 = getelementptr inbounds %52, %52* %15, i32 0, i32 0
  %17 = load %13*, %13** %16, align 8
  %18 = getelementptr inbounds %13, %13* %17, i32 0, i32 3
  %19 = getelementptr inbounds [1 x i8], [1 x i8]* %18, i32 0, i32 0
  %20 = load %52*, %52** %5, align 8
  %21 = getelementptr inbounds %52, %52* %20, i32 0, i32 0
  %22 = load %13*, %13** %21, align 8
  %23 = getelementptr inbounds %13, %13* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %19, i64 %24
  %26 = load i8*, i8** %6, align 8
  %27 = load i64, i64* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %26, i64 %27, i1 false)
  %28 = load i64, i64* %9, align 8
  %29 = load %52*, %52** %5, align 8
  %30 = getelementptr inbounds %52, %52* %29, i32 0, i32 0
  %31 = load %13*, %13** %30, align 8
  %32 = getelementptr inbounds %13, %13* %31, i32 0, i32 2
  store i64 %28, i64* %32, align 8
  %33 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #11
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @167(%52* %0) #4 {
  %2 = alloca %52*, align 8
  store %52* %0, %52** %2, align 8
  %3 = load %52*, %52** %2, align 8
  %4 = getelementptr inbounds %52, %52* %3, i32 0, i32 0
  %5 = load %13*, %13** %4, align 8
  %6 = icmp ne %13* %5, null
  br i1 %6, label %7, label %18

7:                                                ; preds = %1
  %8 = load %52*, %52** %2, align 8
  %9 = getelementptr inbounds %52, %52* %8, i32 0, i32 0
  %10 = load %13*, %13** %9, align 8
  %11 = getelementptr inbounds %13, %13* %10, i32 0, i32 3
  %12 = load %52*, %52** %2, align 8
  %13 = getelementptr inbounds %52, %52* %12, i32 0, i32 0
  %14 = load %13*, %13** %13, align 8
  %15 = getelementptr inbounds %13, %13* %14, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds [1 x i8], [1 x i8]* %11, i64 0, i64 %16
  store i8 0, i8* %17, align 1
  br label %18

18:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @168(%52* %0) #4 {
  %2 = alloca %52*, align 8
  store %52* %0, %52** %2, align 8
  %3 = load %52*, %52** %2, align 8
  %4 = getelementptr inbounds %52, %52* %3, i32 0, i32 0
  %5 = load %13*, %13** %4, align 8
  %6 = icmp ne %13* %5, null
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = load %52*, %52** %2, align 8
  %9 = getelementptr inbounds %52, %52* %8, i32 0, i32 0
  %10 = load %13*, %13** %9, align 8
  call void @156(%13* %10)
  %11 = load %52*, %52** %2, align 8
  %12 = getelementptr inbounds %52, %52* %11, i32 0, i32 0
  store %13* null, %13** %12, align 8
  br label %13

13:                                               ; preds = %7, %1
  %14 = load %52*, %52** %2, align 8
  %15 = getelementptr inbounds %52, %52* %14, i32 0, i32 1
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define hidden void @zif_fgetcsv(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %53*, align 8
  %12 = alloca %3*, align 8
  %13 = alloca %3*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca %3*, align 8
  %26 = alloca %3*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 8
  %29 = alloca i8, align 1
  %30 = alloca i8, align 1
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %5) #11
  store i8 44, i8* %5, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %6) #11
  store i8 34, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #11
  store i8 92, i8* %7, align 1
  %33 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #11
  store i64 0, i64* %8, align 8
  %34 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  %35 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %35) #11
  %36 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  %37 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  %38 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  store %3* null, %3** %13, align 8
  %39 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  store i8* null, i8** %14, align 8
  %40 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  store i64 0, i64* %15, align 8
  %41 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  store i8* null, i8** %16, align 8
  %42 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #11
  store i64 0, i64* %17, align 8
  %43 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %43) #11
  store i8* null, i8** %18, align 8
  %44 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #11
  store i64 0, i64* %19, align 8
  br label %45

45:                                               ; preds = %2
  %46 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %46) #11
  store i32 0, i32* %20, align 4
  %47 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %47) #11
  store i32 1, i32* %21, align 4
  %48 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #11
  store i32 5, i32* %22, align 4
  %49 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %49) #11
  %50 = load %28*, %28** %3, align 8
  %51 = getelementptr inbounds %28, %28* %50, i32 0, i32 4
  %52 = getelementptr inbounds %3, %3* %51, i32 0, i32 2
  %53 = bitcast %6* %52 to i32*
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %23, align 4
  %55 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #11
  %56 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %56) #11
  %57 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #11
  store %3* null, %3** %26, align 8
  %58 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #11
  store i32 0, i32* %27, align 4
  %59 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #11
  store i8* null, i8** %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %29) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %30) #11
  store i8 0, i8* %30, align 1
  %60 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %60) #11
  store i32 0, i32* %31, align 4
  %61 = load i32, i32* %24, align 4
  %62 = load %3*, %3** %25, align 8
  %63 = load %3*, %3** %26, align 8
  %64 = load i32, i32* %27, align 4
  %65 = load i8*, i8** %28, align 8
  %66 = load i8, i8* %29, align 1
  %67 = load i8, i8* %30, align 1
  br label %68

68:                                               ; preds = %45
  %69 = load i32, i32* %23, align 4
  %70 = load i32, i32* %21, align 4
  %71 = icmp slt i32 %69, %70
  %72 = xor i1 %71, true
  %73 = xor i1 %72, true
  %74 = zext i1 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = call i64 @llvm.expect.i64(i64 %75, i64 0)
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %97, label %78

78:                                               ; preds = %68
  %79 = load i32, i32* %23, align 4
  %80 = load i32, i32* %22, align 4
  %81 = icmp sgt i32 %79, %80
  %82 = xor i1 %81, true
  %83 = xor i1 %82, true
  %84 = zext i1 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = call i64 @llvm.expect.i64(i64 %85, i64 0)
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %101

88:                                               ; preds = %78
  %89 = load i32, i32* %22, align 4
  %90 = icmp sge i32 %89, 0
  %91 = xor i1 %90, true
  %92 = xor i1 %91, true
  %93 = zext i1 %92 to i32
  %94 = sext i32 %93 to i64
  %95 = call i64 @llvm.expect.i64(i64 %94, i64 1)
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %88, %68
  %98 = load i32, i32* %23, align 4
  %99 = load i32, i32* %21, align 4
  %100 = load i32, i32* %22, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %98, i32 %99, i32 %100)
  store i32 1, i32* %31, align 4
  br label %445

101:                                              ; preds = %88, %78
  store i32 0, i32* %24, align 4
  %102 = load %28*, %28** %3, align 8
  %103 = bitcast %28* %102 to %3*
  %104 = getelementptr inbounds %3, %3* %103, i64 4
  store %3* %104, %3** %25, align 8
  %105 = load i32, i32* %24, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %24, align 4
  br label %107

107:                                              ; preds = %101
  %108 = load i32, i32* %24, align 4
  %109 = load i32, i32* %21, align 4
  %110 = icmp sle i32 %108, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %107
  %112 = load i8, i8* %30, align 1
  %113 = zext i8 %112 to i32
  %114 = icmp eq i32 %113, 1
  br label %115

115:                                              ; preds = %111, %107
  %116 = phi i1 [ true, %107 ], [ %114, %111 ]
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = sext i32 %118 to i64
  %120 = call i64 @llvm.expect.i64(i64 %119, i64 0)
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %115
  unreachable

123:                                              ; preds = %115
  br label %124

124:                                              ; preds = %123
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  %127 = load i32, i32* %24, align 4
  %128 = load i32, i32* %21, align 4
  %129 = icmp sgt i32 %127, %128
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = load i8, i8* %30, align 1
  %132 = zext i8 %131 to i32
  %133 = icmp eq i32 %132, 0
  br label %134

134:                                              ; preds = %130, %126
  %135 = phi i1 [ true, %126 ], [ %133, %130 ]
  %136 = xor i1 %135, true
  %137 = zext i1 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = call i64 @llvm.expect.i64(i64 %138, i64 0)
  %140 = icmp ne i64 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %134
  unreachable

142:                                              ; preds = %134
  br label %143

143:                                              ; preds = %142
  br label %144

144:                                              ; preds = %143
  %145 = load i8, i8* %30, align 1
  %146 = icmp ne i8 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %144
  %148 = load i32, i32* %24, align 4
  %149 = load i32, i32* %23, align 4
  %150 = icmp sgt i32 %148, %149
  %151 = xor i1 %150, true
  %152 = xor i1 %151, true
  %153 = zext i1 %152 to i32
  %154 = sext i32 %153 to i64
  %155 = call i64 @llvm.expect.i64(i64 %154, i64 0)
  %156 = icmp ne i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %147
  br label %445

158:                                              ; preds = %147
  br label %159

159:                                              ; preds = %158, %144
  %160 = load %3*, %3** %25, align 8
  %161 = getelementptr inbounds %3, %3* %160, i32 1
  store %3* %161, %3** %25, align 8
  %162 = load %3*, %3** %25, align 8
  store %3* %162, %3** %26, align 8
  %163 = load %3*, %3** %26, align 8
  %164 = call i32 @148(%3* %163, %3** %12, i32 0)
  %165 = icmp ne i32 %164, 0
  %166 = xor i1 %165, true
  %167 = xor i1 %166, true
  %168 = xor i1 %167, true
  %169 = zext i1 %168 to i32
  %170 = sext i32 %169 to i64
  %171 = call i64 @llvm.expect.i64(i64 %170, i64 0)
  %172 = icmp ne i64 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %159
  store i32 5, i32* %27, align 4
  store i32 4, i32* %31, align 4
  br label %445

174:                                              ; preds = %159
  store i8 1, i8* %30, align 1
  %175 = load i32, i32* %24, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %24, align 4
  br label %177

177:                                              ; preds = %174
  %178 = load i32, i32* %24, align 4
  %179 = load i32, i32* %21, align 4
  %180 = icmp sle i32 %178, %179
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = load i8, i8* %30, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i32 %183, 1
  br label %185

185:                                              ; preds = %181, %177
  %186 = phi i1 [ true, %177 ], [ %184, %181 ]
  %187 = xor i1 %186, true
  %188 = zext i1 %187 to i32
  %189 = sext i32 %188 to i64
  %190 = call i64 @llvm.expect.i64(i64 %189, i64 0)
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %185
  unreachable

193:                                              ; preds = %185
  br label %194

194:                                              ; preds = %193
  br label %195

195:                                              ; preds = %194
  br label %196

196:                                              ; preds = %195
  %197 = load i32, i32* %24, align 4
  %198 = load i32, i32* %21, align 4
  %199 = icmp sgt i32 %197, %198
  br i1 %199, label %204, label %200

200:                                              ; preds = %196
  %201 = load i8, i8* %30, align 1
  %202 = zext i8 %201 to i32
  %203 = icmp eq i32 %202, 0
  br label %204

204:                                              ; preds = %200, %196
  %205 = phi i1 [ true, %196 ], [ %203, %200 ]
  %206 = xor i1 %205, true
  %207 = zext i1 %206 to i32
  %208 = sext i32 %207 to i64
  %209 = call i64 @llvm.expect.i64(i64 %208, i64 0)
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %204
  unreachable

212:                                              ; preds = %204
  br label %213

213:                                              ; preds = %212
  br label %214

214:                                              ; preds = %213
  %215 = load i8, i8* %30, align 1
  %216 = icmp ne i8 %215, 0
  br i1 %216, label %217, label %229

217:                                              ; preds = %214
  %218 = load i32, i32* %24, align 4
  %219 = load i32, i32* %23, align 4
  %220 = icmp sgt i32 %218, %219
  %221 = xor i1 %220, true
  %222 = xor i1 %221, true
  %223 = zext i1 %222 to i32
  %224 = sext i32 %223 to i64
  %225 = call i64 @llvm.expect.i64(i64 %224, i64 0)
  %226 = icmp ne i64 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %217
  br label %445

228:                                              ; preds = %217
  br label %229

229:                                              ; preds = %228, %214
  %230 = load %3*, %3** %25, align 8
  %231 = getelementptr inbounds %3, %3* %230, i32 1
  store %3* %231, %3** %25, align 8
  %232 = load %3*, %3** %25, align 8
  store %3* %232, %3** %26, align 8
  %233 = load %3*, %3** %26, align 8
  call void @151(%3* %233, %3** %13, i32 0)
  %234 = load i32, i32* %24, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %24, align 4
  br label %236

236:                                              ; preds = %229
  %237 = load i32, i32* %24, align 4
  %238 = load i32, i32* %21, align 4
  %239 = icmp sle i32 %237, %238
  br i1 %239, label %244, label %240

240:                                              ; preds = %236
  %241 = load i8, i8* %30, align 1
  %242 = zext i8 %241 to i32
  %243 = icmp eq i32 %242, 1
  br label %244

244:                                              ; preds = %240, %236
  %245 = phi i1 [ true, %236 ], [ %243, %240 ]
  %246 = xor i1 %245, true
  %247 = zext i1 %246 to i32
  %248 = sext i32 %247 to i64
  %249 = call i64 @llvm.expect.i64(i64 %248, i64 0)
  %250 = icmp ne i64 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %244
  unreachable

252:                                              ; preds = %244
  br label %253

253:                                              ; preds = %252
  br label %254

254:                                              ; preds = %253
  br label %255

255:                                              ; preds = %254
  %256 = load i32, i32* %24, align 4
  %257 = load i32, i32* %21, align 4
  %258 = icmp sgt i32 %256, %257
  br i1 %258, label %263, label %259

259:                                              ; preds = %255
  %260 = load i8, i8* %30, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i32 %261, 0
  br label %263

263:                                              ; preds = %259, %255
  %264 = phi i1 [ true, %255 ], [ %262, %259 ]
  %265 = xor i1 %264, true
  %266 = zext i1 %265 to i32
  %267 = sext i32 %266 to i64
  %268 = call i64 @llvm.expect.i64(i64 %267, i64 0)
  %269 = icmp ne i64 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %263
  unreachable

271:                                              ; preds = %263
  br label %272

272:                                              ; preds = %271
  br label %273

273:                                              ; preds = %272
  %274 = load i8, i8* %30, align 1
  %275 = icmp ne i8 %274, 0
  br i1 %275, label %276, label %288

276:                                              ; preds = %273
  %277 = load i32, i32* %24, align 4
  %278 = load i32, i32* %23, align 4
  %279 = icmp sgt i32 %277, %278
  %280 = xor i1 %279, true
  %281 = xor i1 %280, true
  %282 = zext i1 %281 to i32
  %283 = sext i32 %282 to i64
  %284 = call i64 @llvm.expect.i64(i64 %283, i64 0)
  %285 = icmp ne i64 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %276
  br label %445

287:                                              ; preds = %276
  br label %288

288:                                              ; preds = %287, %273
  %289 = load %3*, %3** %25, align 8
  %290 = getelementptr inbounds %3, %3* %289, i32 1
  store %3* %290, %3** %25, align 8
  %291 = load %3*, %3** %25, align 8
  store %3* %291, %3** %26, align 8
  %292 = load %3*, %3** %26, align 8
  %293 = call i32 @159(%3* %292, i8** %14, i64* %15, i32 0)
  %294 = icmp ne i32 %293, 0
  %295 = xor i1 %294, true
  %296 = xor i1 %295, true
  %297 = xor i1 %296, true
  %298 = zext i1 %297 to i32
  %299 = sext i32 %298 to i64
  %300 = call i64 @llvm.expect.i64(i64 %299, i64 0)
  %301 = icmp ne i64 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %288
  store i32 2, i32* %27, align 4
  store i32 4, i32* %31, align 4
  br label %445

303:                                              ; preds = %288
  %304 = load i32, i32* %24, align 4
  %305 = add nsw i32 %304, 1
  store i32 %305, i32* %24, align 4
  br label %306

306:                                              ; preds = %303
  %307 = load i32, i32* %24, align 4
  %308 = load i32, i32* %21, align 4
  %309 = icmp sle i32 %307, %308
  br i1 %309, label %314, label %310

310:                                              ; preds = %306
  %311 = load i8, i8* %30, align 1
  %312 = zext i8 %311 to i32
  %313 = icmp eq i32 %312, 1
  br label %314

314:                                              ; preds = %310, %306
  %315 = phi i1 [ true, %306 ], [ %313, %310 ]
  %316 = xor i1 %315, true
  %317 = zext i1 %316 to i32
  %318 = sext i32 %317 to i64
  %319 = call i64 @llvm.expect.i64(i64 %318, i64 0)
  %320 = icmp ne i64 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %314
  unreachable

322:                                              ; preds = %314
  br label %323

323:                                              ; preds = %322
  br label %324

324:                                              ; preds = %323
  br label %325

325:                                              ; preds = %324
  %326 = load i32, i32* %24, align 4
  %327 = load i32, i32* %21, align 4
  %328 = icmp sgt i32 %326, %327
  br i1 %328, label %333, label %329

329:                                              ; preds = %325
  %330 = load i8, i8* %30, align 1
  %331 = zext i8 %330 to i32
  %332 = icmp eq i32 %331, 0
  br label %333

333:                                              ; preds = %329, %325
  %334 = phi i1 [ true, %325 ], [ %332, %329 ]
  %335 = xor i1 %334, true
  %336 = zext i1 %335 to i32
  %337 = sext i32 %336 to i64
  %338 = call i64 @llvm.expect.i64(i64 %337, i64 0)
  %339 = icmp ne i64 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %333
  unreachable

341:                                              ; preds = %333
  br label %342

342:                                              ; preds = %341
  br label %343

343:                                              ; preds = %342
  %344 = load i8, i8* %30, align 1
  %345 = icmp ne i8 %344, 0
  br i1 %345, label %346, label %358

346:                                              ; preds = %343
  %347 = load i32, i32* %24, align 4
  %348 = load i32, i32* %23, align 4
  %349 = icmp sgt i32 %347, %348
  %350 = xor i1 %349, true
  %351 = xor i1 %350, true
  %352 = zext i1 %351 to i32
  %353 = sext i32 %352 to i64
  %354 = call i64 @llvm.expect.i64(i64 %353, i64 0)
  %355 = icmp ne i64 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %346
  br label %445

357:                                              ; preds = %346
  br label %358

358:                                              ; preds = %357, %343
  %359 = load %3*, %3** %25, align 8
  %360 = getelementptr inbounds %3, %3* %359, i32 1
  store %3* %360, %3** %25, align 8
  %361 = load %3*, %3** %25, align 8
  store %3* %361, %3** %26, align 8
  %362 = load %3*, %3** %26, align 8
  %363 = call i32 @159(%3* %362, i8** %16, i64* %17, i32 0)
  %364 = icmp ne i32 %363, 0
  %365 = xor i1 %364, true
  %366 = xor i1 %365, true
  %367 = xor i1 %366, true
  %368 = zext i1 %367 to i32
  %369 = sext i32 %368 to i64
  %370 = call i64 @llvm.expect.i64(i64 %369, i64 0)
  %371 = icmp ne i64 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %358
  store i32 2, i32* %27, align 4
  store i32 4, i32* %31, align 4
  br label %445

373:                                              ; preds = %358
  %374 = load i32, i32* %24, align 4
  %375 = add nsw i32 %374, 1
  store i32 %375, i32* %24, align 4
  br label %376

376:                                              ; preds = %373
  %377 = load i32, i32* %24, align 4
  %378 = load i32, i32* %21, align 4
  %379 = icmp sle i32 %377, %378
  br i1 %379, label %384, label %380

380:                                              ; preds = %376
  %381 = load i8, i8* %30, align 1
  %382 = zext i8 %381 to i32
  %383 = icmp eq i32 %382, 1
  br label %384

384:                                              ; preds = %380, %376
  %385 = phi i1 [ true, %376 ], [ %383, %380 ]
  %386 = xor i1 %385, true
  %387 = zext i1 %386 to i32
  %388 = sext i32 %387 to i64
  %389 = call i64 @llvm.expect.i64(i64 %388, i64 0)
  %390 = icmp ne i64 %389, 0
  br i1 %390, label %391, label %392

391:                                              ; preds = %384
  unreachable

392:                                              ; preds = %384
  br label %393

393:                                              ; preds = %392
  br label %394

394:                                              ; preds = %393
  br label %395

395:                                              ; preds = %394
  %396 = load i32, i32* %24, align 4
  %397 = load i32, i32* %21, align 4
  %398 = icmp sgt i32 %396, %397
  br i1 %398, label %403, label %399

399:                                              ; preds = %395
  %400 = load i8, i8* %30, align 1
  %401 = zext i8 %400 to i32
  %402 = icmp eq i32 %401, 0
  br label %403

403:                                              ; preds = %399, %395
  %404 = phi i1 [ true, %395 ], [ %402, %399 ]
  %405 = xor i1 %404, true
  %406 = zext i1 %405 to i32
  %407 = sext i32 %406 to i64
  %408 = call i64 @llvm.expect.i64(i64 %407, i64 0)
  %409 = icmp ne i64 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %403
  unreachable

411:                                              ; preds = %403
  br label %412

412:                                              ; preds = %411
  br label %413

413:                                              ; preds = %412
  %414 = load i8, i8* %30, align 1
  %415 = icmp ne i8 %414, 0
  br i1 %415, label %416, label %428

416:                                              ; preds = %413
  %417 = load i32, i32* %24, align 4
  %418 = load i32, i32* %23, align 4
  %419 = icmp sgt i32 %417, %418
  %420 = xor i1 %419, true
  %421 = xor i1 %420, true
  %422 = zext i1 %421 to i32
  %423 = sext i32 %422 to i64
  %424 = call i64 @llvm.expect.i64(i64 %423, i64 0)
  %425 = icmp ne i64 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %416
  br label %445

427:                                              ; preds = %416
  br label %428

428:                                              ; preds = %427, %413
  %429 = load %3*, %3** %25, align 8
  %430 = getelementptr inbounds %3, %3* %429, i32 1
  store %3* %430, %3** %25, align 8
  %431 = load %3*, %3** %25, align 8
  store %3* %431, %3** %26, align 8
  %432 = load %3*, %3** %26, align 8
  %433 = call i32 @159(%3* %432, i8** %18, i64* %19, i32 0)
  %434 = icmp ne i32 %433, 0
  %435 = xor i1 %434, true
  %436 = xor i1 %435, true
  %437 = xor i1 %436, true
  %438 = zext i1 %437 to i32
  %439 = sext i32 %438 to i64
  %440 = call i64 @llvm.expect.i64(i64 %439, i64 0)
  %441 = icmp ne i64 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %428
  store i32 2, i32* %27, align 4
  store i32 4, i32* %31, align 4
  br label %445

443:                                              ; preds = %428
  br label %444

444:                                              ; preds = %443
  br label %445

445:                                              ; preds = %444, %442, %426, %372, %356, %302, %286, %227, %173, %157, %97
  %446 = load i32, i32* %31, align 4
  %447 = icmp ne i32 %446, 0
  %448 = xor i1 %447, true
  %449 = xor i1 %448, true
  %450 = zext i1 %449 to i32
  %451 = sext i32 %450 to i64
  %452 = call i64 @llvm.expect.i64(i64 %451, i64 0)
  %453 = icmp ne i64 %452, 0
  br i1 %453, label %454, label %477

454:                                              ; preds = %445
  %455 = load i32, i32* %31, align 4
  %456 = icmp eq i32 %455, 2
  br i1 %456, label %457, label %460

457:                                              ; preds = %454
  %458 = load i32, i32* %24, align 4
  %459 = load i8*, i8** %28, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %458, i8* %459)
  br label %476

460:                                              ; preds = %454
  %461 = load i32, i32* %31, align 4
  %462 = icmp eq i32 %461, 3
  br i1 %462, label %463, label %467

463:                                              ; preds = %460
  %464 = load i32, i32* %24, align 4
  %465 = load i8*, i8** %28, align 8
  %466 = load %3*, %3** %26, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %464, i8* %465, %3* %466)
  br label %475

467:                                              ; preds = %460
  %468 = load i32, i32* %31, align 4
  %469 = icmp eq i32 %468, 4
  br i1 %469, label %470, label %474

470:                                              ; preds = %467
  %471 = load i32, i32* %24, align 4
  %472 = load i32, i32* %27, align 4
  %473 = load %3*, %3** %26, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %471, i32 %472, %3* %473)
  br label %474

474:                                              ; preds = %470, %467
  br label %475

475:                                              ; preds = %474, %463
  br label %476

476:                                              ; preds = %475, %457
  store i32 1, i32* %32, align 4
  br label %478

477:                                              ; preds = %445
  store i32 0, i32* %32, align 4
  br label %478

478:                                              ; preds = %477, %476
  %479 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %479) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %30) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %29) #11
  %480 = bitcast i8** %28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %480) #11
  %481 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %481) #11
  %482 = bitcast %3** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %482) #11
  %483 = bitcast %3** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %483) #11
  %484 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %484) #11
  %485 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %485) #11
  %486 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %486) #11
  %487 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %487) #11
  %488 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %488) #11
  %489 = load i32, i32* %32, align 4
  switch i32 %489, label %620 [
    i32 0, label %490
  ]

490:                                              ; preds = %478
  br label %491

491:                                              ; preds = %490
  br label %492

492:                                              ; preds = %491
  %493 = load i8*, i8** %14, align 8
  %494 = icmp ne i8* %493, null
  br i1 %494, label %495, label %514

495:                                              ; preds = %492
  %496 = load i64, i64* %15, align 8
  %497 = icmp ult i64 %496, 1
  br i1 %497, label %498, label %505

498:                                              ; preds = %495
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @128, i32 0, i32 0))
  br label %499

499:                                              ; preds = %498
  %500 = load %3*, %3** %4, align 8
  %501 = getelementptr inbounds %3, %3* %500, i32 0, i32 1
  %502 = bitcast %5* %501 to i32*
  store i32 2, i32* %502, align 8
  br label %503

503:                                              ; preds = %499
  br label %504

504:                                              ; preds = %503
  store i32 1, i32* %32, align 4
  br label %620

505:                                              ; preds = %495
  %506 = load i64, i64* %15, align 8
  %507 = icmp ugt i64 %506, 1
  br i1 %507, label %508, label %509

508:                                              ; preds = %505
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @129, i32 0, i32 0))
  br label %509

509:                                              ; preds = %508, %505
  br label %510

510:                                              ; preds = %509
  %511 = load i8*, i8** %14, align 8
  %512 = getelementptr inbounds i8, i8* %511, i64 0
  %513 = load i8, i8* %512, align 1
  store i8 %513, i8* %5, align 1
  br label %514

514:                                              ; preds = %510, %492
  %515 = load i8*, i8** %16, align 8
  %516 = icmp ne i8* %515, null
  br i1 %516, label %517, label %536

517:                                              ; preds = %514
  %518 = load i64, i64* %17, align 8
  %519 = icmp ult i64 %518, 1
  br i1 %519, label %520, label %527

520:                                              ; preds = %517
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @130, i32 0, i32 0))
  br label %521

521:                                              ; preds = %520
  %522 = load %3*, %3** %4, align 8
  %523 = getelementptr inbounds %3, %3* %522, i32 0, i32 1
  %524 = bitcast %5* %523 to i32*
  store i32 2, i32* %524, align 8
  br label %525

525:                                              ; preds = %521
  br label %526

526:                                              ; preds = %525
  store i32 1, i32* %32, align 4
  br label %620

527:                                              ; preds = %517
  %528 = load i64, i64* %17, align 8
  %529 = icmp ugt i64 %528, 1
  br i1 %529, label %530, label %531

530:                                              ; preds = %527
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @131, i32 0, i32 0))
  br label %531

531:                                              ; preds = %530, %527
  br label %532

532:                                              ; preds = %531
  %533 = load i8*, i8** %16, align 8
  %534 = getelementptr inbounds i8, i8* %533, i64 0
  %535 = load i8, i8* %534, align 1
  store i8 %535, i8* %6, align 1
  br label %536

536:                                              ; preds = %532, %514
  %537 = load i8*, i8** %18, align 8
  %538 = icmp ne i8* %537, null
  br i1 %538, label %539, label %558

539:                                              ; preds = %536
  %540 = load i64, i64* %19, align 8
  %541 = icmp ult i64 %540, 1
  br i1 %541, label %542, label %549

542:                                              ; preds = %539
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @134, i32 0, i32 0))
  br label %543

543:                                              ; preds = %542
  %544 = load %3*, %3** %4, align 8
  %545 = getelementptr inbounds %3, %3* %544, i32 0, i32 1
  %546 = bitcast %5* %545 to i32*
  store i32 2, i32* %546, align 8
  br label %547

547:                                              ; preds = %543
  br label %548

548:                                              ; preds = %547
  store i32 1, i32* %32, align 4
  br label %620

549:                                              ; preds = %539
  %550 = load i64, i64* %19, align 8
  %551 = icmp ugt i64 %550, 1
  br i1 %551, label %552, label %553

552:                                              ; preds = %549
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @133, i32 0, i32 0))
  br label %553

553:                                              ; preds = %552, %549
  br label %554

554:                                              ; preds = %553
  %555 = load i8*, i8** %18, align 8
  %556 = getelementptr inbounds i8, i8* %555, i64 0
  %557 = load i8, i8* %556, align 1
  store i8 %557, i8* %7, align 1
  br label %558

558:                                              ; preds = %554, %536
  %559 = load %3*, %3** %13, align 8
  %560 = icmp ne %3* %559, null
  br i1 %560, label %561, label %584

561:                                              ; preds = %558
  %562 = load %3*, %3** %13, align 8
  %563 = call zeroext i8 @150(%3* %562)
  %564 = zext i8 %563 to i32
  %565 = icmp ne i32 %564, 1
  br i1 %565, label %566, label %584

566:                                              ; preds = %561
  %567 = load %3*, %3** %13, align 8
  %568 = call i64 @169(%3* %567)
  store i64 %568, i64* %8, align 8
  %569 = load i64, i64* %8, align 8
  %570 = icmp slt i64 %569, 0
  br i1 %570, label %571, label %578

571:                                              ; preds = %566
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @135, i32 0, i32 0))
  br label %572

572:                                              ; preds = %571
  %573 = load %3*, %3** %4, align 8
  %574 = getelementptr inbounds %3, %3* %573, i32 0, i32 1
  %575 = bitcast %5* %574 to i32*
  store i32 2, i32* %575, align 8
  br label %576

576:                                              ; preds = %572
  br label %577

577:                                              ; preds = %576
  store i32 1, i32* %32, align 4
  br label %620

578:                                              ; preds = %566
  %579 = load i64, i64* %8, align 8
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %582

581:                                              ; preds = %578
  store i64 -1, i64* %8, align 8
  br label %582

582:                                              ; preds = %581, %578
  br label %583

583:                                              ; preds = %582
  br label %585

584:                                              ; preds = %561, %558
  store i64 -1, i64* %8, align 8
  br label %585

585:                                              ; preds = %584, %583
  br label %586

586:                                              ; preds = %585
  %587 = load %3*, %3** %12, align 8
  %588 = call zeroext i8 @150(%3* %587)
  %589 = zext i8 %588 to i32
  %590 = icmp eq i32 %589, 9
  %591 = xor i1 %590, true
  %592 = zext i1 %591 to i32
  %593 = sext i32 %592 to i64
  %594 = call i64 @llvm.expect.i64(i64 %593, i64 0)
  %595 = icmp ne i64 %594, 0
  br i1 %595, label %596, label %597

596:                                              ; preds = %586
  unreachable

597:                                              ; preds = %586
  br label %598

598:                                              ; preds = %597
  br label %599

599:                                              ; preds = %598
  br label %600

600:                                              ; preds = %599
  %601 = load %3*, %3** %12, align 8
  %602 = getelementptr inbounds %3, %3* %601, i32 0, i32 0
  %603 = bitcast %4* %602 to %7**
  %604 = load %7*, %7** %603, align 8
  %605 = call i32 @php_file_le_stream()
  %606 = call i32 @php_file_le_pstream()
  %607 = call i8* @zend_fetch_resource2(%7* %604, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @76, i32 0, i32 0), i32 %605, i32 %606)
  %608 = bitcast i8* %607 to %53*
  store %53* %608, %53** %11, align 8
  %609 = icmp eq %53* %608, null
  br i1 %609, label %610, label %617

610:                                              ; preds = %600
  br label %611

611:                                              ; preds = %610
  %612 = load %3*, %3** %4, align 8
  %613 = getelementptr inbounds %3, %3* %612, i32 0, i32 1
  %614 = bitcast %5* %613 to i32*
  store i32 2, i32* %614, align 8
  br label %615

615:                                              ; preds = %611
  br label %616

616:                                              ; preds = %615
  store i32 1, i32* %32, align 4
  br label %620

617:                                              ; preds = %600
  br label %618

618:                                              ; preds = %617
  br label %619

619:                                              ; preds = %618
  store i32 0, i32* %32, align 4
  br label %620

620:                                              ; preds = %619, %616, %577, %548, %526, %504, %478
  %621 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %621) #11
  %622 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %622) #11
  %623 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %623) #11
  %624 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %624) #11
  %625 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %625) #11
  %626 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %626) #11
  %627 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %627) #11
  %628 = bitcast %3** %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %628) #11
  %629 = load i32, i32* %32, align 4
  switch i32 %629, label %672 [
    i32 0, label %630
  ]

630:                                              ; preds = %620
  %631 = load i64, i64* %8, align 8
  %632 = icmp slt i64 %631, 0
  br i1 %632, label %633, label %645

633:                                              ; preds = %630
  %634 = load %53*, %53** %11, align 8
  %635 = call i8* @_php_stream_get_line(%53* %634, i8* null, i64 0, i64* %9)
  store i8* %635, i8** %10, align 8
  %636 = icmp eq i8* %635, null
  br i1 %636, label %637, label %644

637:                                              ; preds = %633
  br label %638

638:                                              ; preds = %637
  %639 = load %3*, %3** %4, align 8
  %640 = getelementptr inbounds %3, %3* %639, i32 0, i32 1
  %641 = bitcast %5* %640 to i32*
  store i32 2, i32* %641, align 8
  br label %642

642:                                              ; preds = %638
  br label %643

643:                                              ; preds = %642
  store i32 1, i32* %32, align 4
  br label %672

644:                                              ; preds = %633
  br label %664

645:                                              ; preds = %630
  %646 = load i64, i64* %8, align 8
  %647 = add nsw i64 %646, 1
  %648 = call noalias i8* @_emalloc(i64 %647) #14
  store i8* %648, i8** %10, align 8
  %649 = load %53*, %53** %11, align 8
  %650 = load i8*, i8** %10, align 8
  %651 = load i64, i64* %8, align 8
  %652 = add nsw i64 %651, 1
  %653 = call i8* @_php_stream_get_line(%53* %649, i8* %650, i64 %652, i64* %9)
  %654 = icmp eq i8* %653, null
  br i1 %654, label %655, label %663

655:                                              ; preds = %645
  %656 = load i8*, i8** %10, align 8
  call void @_efree(i8* %656)
  br label %657

657:                                              ; preds = %655
  %658 = load %3*, %3** %4, align 8
  %659 = getelementptr inbounds %3, %3* %658, i32 0, i32 1
  %660 = bitcast %5* %659 to i32*
  store i32 2, i32* %660, align 8
  br label %661

661:                                              ; preds = %657
  br label %662

662:                                              ; preds = %661
  store i32 1, i32* %32, align 4
  br label %672

663:                                              ; preds = %645
  br label %664

664:                                              ; preds = %663, %644
  %665 = load %53*, %53** %11, align 8
  %666 = load i8, i8* %5, align 1
  %667 = load i8, i8* %6, align 1
  %668 = load i8, i8* %7, align 1
  %669 = load i64, i64* %9, align 8
  %670 = load i8*, i8** %10, align 8
  %671 = load %3*, %3** %4, align 8
  call void @php_fgetcsv(%53* %665, i8 signext %666, i8 signext %667, i8 signext %668, i64 %669, i8* %670, %3* %671)
  store i32 0, i32* %32, align 4
  br label %672

672:                                              ; preds = %664, %662, %643, %620
  %673 = bitcast %53** %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %673) #11
  %674 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %674) #11
  %675 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %675) #11
  %676 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %676) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %5) #11
  %677 = load i32, i32* %32, align 4
  switch i32 %677, label %679 [
    i32 0, label %678
    i32 1, label %678
  ]

678:                                              ; preds = %672, %672
  ret void

679:                                              ; preds = %672
  unreachable
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @169(%3* %0) #4 {
  %2 = alloca %3*, align 8
  store %3* %0, %3** %2, align 8
  %3 = load %3*, %3** %2, align 8
  %4 = call zeroext i8 @150(%3* %3)
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = load %3*, %3** %2, align 8
  %9 = getelementptr inbounds %3, %3* %8, i32 0, i32 0
  %10 = bitcast %4* %9 to i64*
  %11 = load i64, i64* %10, align 8
  br label %15

12:                                               ; preds = %1
  %13 = load %3*, %3** %2, align 8
  %14 = call i64 @_zval_get_long_func(%3* %13)
  br label %15

15:                                               ; preds = %12, %7
  %16 = phi i64 [ %11, %7 ], [ %14, %12 ]
  ret i64 %16
}

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @_emalloc(i64) #9

; Function Attrs: nounwind uwtable
define dso_local void @php_fgetcsv(%53* %0, i8 signext %1, i8 signext %2, i8 signext %3, i64 %4, i8* %5, %3* %6) #0 {
  %8 = alloca %53*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca %3*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32, align 4
  %23 = alloca i8, align 1
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  store %53* %0, %53** %8, align 8
  store i8 %1, i8* %9, align 1
  store i8 %2, i8* %10, align 1
  store i8 %3, i8* %11, align 1
  store i64 %4, i64* %12, align 8
  store i8* %5, i8** %13, align 8
  store %3* %6, %3** %14, align 8
  %36 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #11
  %37 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #11
  %38 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  %39 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  %40 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  %41 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  %42 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #11
  %43 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %23) #11
  store i8 1, i8* %23, align 1
  %44 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #11
  %45 = call i32 @mblen(i8* null, i64 0) #11
  store i32 %45, i32* %24, align 4
  %46 = load i32, i32* %24, align 4
  %47 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %47) #11
  %48 = load i8*, i8** %13, align 8
  store i8* %48, i8** %17, align 8
  %49 = load i8*, i8** %13, align 8
  %50 = load i64, i64* %12, align 8
  %51 = load i8, i8* %9, align 1
  %52 = call i8* @170(i8* %49, i64 %50, i8 signext %51)
  store i8* %52, i8** %16, align 8
  %53 = load i64, i64* %12, align 8
  %54 = load i8*, i8** %16, align 8
  %55 = load i8*, i8** %13, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = ptrtoint i8* %55 to i64
  %58 = sub i64 %56, %57
  %59 = sub i64 %53, %58
  store i64 %59, i64* %21, align 8
  %60 = load i8*, i8** %16, align 8
  store i8* %60, i8** %19, align 8
  store i8* %60, i8** %18, align 8
  %61 = load i64, i64* %12, align 8
  store i64 %61, i64* %20, align 8
  %62 = load i64, i64* %20, align 8
  %63 = load i64, i64* %21, align 8
  %64 = add i64 %62, %63
  %65 = add i64 %64, 1
  %66 = call noalias i8* @_emalloc(i64 %65) #14
  store i8* %66, i8** %15, align 8
  %67 = load %3*, %3** %14, align 8
  %68 = call i32 @_array_init(%3* %67, i32 0)
  br label %69

69:                                               ; preds = %599, %7
  %70 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %70) #11
  %71 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #11
  %72 = load i8*, i8** %15, align 8
  store i8* %72, i8** %16, align 8
  %73 = load i8*, i8** %17, align 8
  %74 = load i8*, i8** %19, align 8
  %75 = icmp ult i8* %73, %74
  br i1 %75, label %76, label %92

76:                                               ; preds = %69
  %77 = load i8*, i8** %17, align 8
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %76
  br label %90

82:                                               ; preds = %76
  %83 = load i8*, i8** %17, align 8
  %84 = load i8*, i8** %19, align 8
  %85 = load i8*, i8** %17, align 8
  %86 = ptrtoint i8* %84 to i64
  %87 = ptrtoint i8* %85 to i64
  %88 = sub i64 %86, %87
  %89 = call i32 @mblen(i8* %83, i64 %88) #11
  br label %90

90:                                               ; preds = %82, %81
  %91 = phi i32 [ 1, %81 ], [ %89, %82 ]
  br label %93

92:                                               ; preds = %69
  br label %93

93:                                               ; preds = %92, %90
  %94 = phi i32 [ %91, %90 ], [ 0, %92 ]
  store i32 %94, i32* %22, align 4
  %95 = load i32, i32* %22, align 4
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %135

97:                                               ; preds = %93
  %98 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %98) #11
  %99 = load i8*, i8** %17, align 8
  store i8* %99, i8** %27, align 8
  br label %100

100:                                              ; preds = %121, %97
  %101 = load i8*, i8** %27, align 8
  %102 = load i8, i8* %101, align 1
  %103 = sext i8 %102 to i32
  %104 = load i8, i8* %9, align 1
  %105 = sext i8 %104 to i32
  %106 = icmp ne i32 %103, %105
  br i1 %106, label %107, label %119

107:                                              ; preds = %100
  %108 = call i16** @__ctype_b_loc() #12
  %109 = load i16*, i16** %108, align 8
  %110 = load i8*, i8** %27, align 8
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i16, i16* %109, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = and i32 %116, 8192
  %118 = icmp ne i32 %117, 0
  br label %119

119:                                              ; preds = %107, %100
  %120 = phi i1 [ false, %100 ], [ %118, %107 ]
  br i1 %120, label %121, label %124

121:                                              ; preds = %119
  %122 = load i8*, i8** %27, align 8
  %123 = getelementptr inbounds i8, i8* %122, i32 1
  store i8* %123, i8** %27, align 8
  br label %100

124:                                              ; preds = %119
  %125 = load i8*, i8** %27, align 8
  %126 = load i8, i8* %125, align 1
  %127 = sext i8 %126 to i32
  %128 = load i8, i8* %10, align 1
  %129 = sext i8 %128 to i32
  %130 = icmp eq i32 %127, %129
  br i1 %130, label %131, label %133

131:                                              ; preds = %124
  %132 = load i8*, i8** %27, align 8
  store i8* %132, i8** %17, align 8
  br label %133

133:                                              ; preds = %131, %124
  %134 = bitcast i8** %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %134) #11
  br label %135

135:                                              ; preds = %133, %93
  %136 = load i8, i8* %23, align 1
  %137 = zext i8 %136 to i32
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %146

139:                                              ; preds = %135
  %140 = load i8*, i8** %17, align 8
  %141 = load i8*, i8** %18, align 8
  %142 = icmp eq i8* %140, %141
  br i1 %142, label %143, label %146

143:                                              ; preds = %139
  %144 = load %3*, %3** %14, align 8
  %145 = call i32 @add_next_index_null(%3* %144)
  store i32 2, i32* %28, align 4
  br label %594

146:                                              ; preds = %139, %135
  store i8 0, i8* %23, align 1
  %147 = load i32, i32* %22, align 4
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %504

149:                                              ; preds = %146
  %150 = load i8*, i8** %17, align 8
  %151 = load i8, i8* %150, align 1
  %152 = sext i8 %151 to i32
  %153 = load i8, i8* %10, align 1
  %154 = sext i8 %153 to i32
  %155 = icmp eq i32 %152, %154
  br i1 %155, label %156, label %504

156:                                              ; preds = %149
  %157 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %157) #11
  store i32 0, i32* %29, align 4
  %158 = load i8*, i8** %17, align 8
  %159 = getelementptr inbounds i8, i8* %158, i32 1
  store i8* %159, i8** %17, align 8
  %160 = load i8*, i8** %17, align 8
  store i8* %160, i8** %26, align 8
  br label %161

161:                                              ; preds = %432, %156
  %162 = load i32, i32* %22, align 4
  switch i32 %162, label %365 [
    i32 0, label %163
    i32 -2, label %291
    i32 -1, label %291
    i32 1, label %296
  ]

163:                                              ; preds = %161
  %164 = load i32, i32* %29, align 4
  switch i32 %164, label %290 [
    i32 2, label %165
    i32 1, label %183
    i32 0, label %199
  ]

165:                                              ; preds = %163
  %166 = load i8*, i8** %16, align 8
  %167 = load i8*, i8** %26, align 8
  %168 = load i8*, i8** %17, align 8
  %169 = load i8*, i8** %26, align 8
  %170 = ptrtoint i8* %168 to i64
  %171 = ptrtoint i8* %169 to i64
  %172 = sub i64 %170, %171
  %173 = sub nsw i64 %172, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %166, i8* align 1 %167, i64 %173, i1 false)
  %174 = load i8*, i8** %17, align 8
  %175 = load i8*, i8** %26, align 8
  %176 = ptrtoint i8* %174 to i64
  %177 = ptrtoint i8* %175 to i64
  %178 = sub i64 %176, %177
  %179 = sub nsw i64 %178, 1
  %180 = load i8*, i8** %16, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 %179
  store i8* %181, i8** %16, align 8
  %182 = load i8*, i8** %17, align 8
  store i8* %182, i8** %26, align 8
  br label %434

183:                                              ; preds = %163
  %184 = load i8*, i8** %16, align 8
  %185 = load i8*, i8** %26, align 8
  %186 = load i8*, i8** %17, align 8
  %187 = load i8*, i8** %26, align 8
  %188 = ptrtoint i8* %186 to i64
  %189 = ptrtoint i8* %187 to i64
  %190 = sub i64 %188, %189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %184, i8* align 1 %185, i64 %190, i1 false)
  %191 = load i8*, i8** %17, align 8
  %192 = load i8*, i8** %26, align 8
  %193 = ptrtoint i8* %191 to i64
  %194 = ptrtoint i8* %192 to i64
  %195 = sub i64 %193, %194
  %196 = load i8*, i8** %16, align 8
  %197 = getelementptr inbounds i8, i8* %196, i64 %195
  store i8* %197, i8** %16, align 8
  %198 = load i8*, i8** %17, align 8
  store i8* %198, i8** %26, align 8
  br label %199

199:                                              ; preds = %163, %183
  %200 = bitcast i8** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %200) #11
  %201 = bitcast i64* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %201) #11
  %202 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #11
  %203 = load i8*, i8** %26, align 8
  %204 = load i8*, i8** %18, align 8
  %205 = icmp ne i8* %203, %204
  br i1 %205, label %206, label %222

206:                                              ; preds = %199
  %207 = load i8*, i8** %16, align 8
  %208 = load i8*, i8** %26, align 8
  %209 = load i8*, i8** %17, align 8
  %210 = load i8*, i8** %26, align 8
  %211 = ptrtoint i8* %209 to i64
  %212 = ptrtoint i8* %210 to i64
  %213 = sub i64 %211, %212
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %207, i8* align 1 %208, i64 %213, i1 false)
  %214 = load i8*, i8** %17, align 8
  %215 = load i8*, i8** %26, align 8
  %216 = ptrtoint i8* %214 to i64
  %217 = ptrtoint i8* %215 to i64
  %218 = sub i64 %216, %217
  %219 = load i8*, i8** %16, align 8
  %220 = getelementptr inbounds i8, i8* %219, i64 %218
  store i8* %220, i8** %16, align 8
  %221 = load i8*, i8** %17, align 8
  store i8* %221, i8** %26, align 8
  br label %222

222:                                              ; preds = %206, %199
  %223 = load i8*, i8** %16, align 8
  %224 = load i8*, i8** %18, align 8
  %225 = load i64, i64* %21, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %223, i8* align 1 %224, i64 %225, i1 false)
  %226 = load i64, i64* %21, align 8
  %227 = load i8*, i8** %16, align 8
  %228 = getelementptr inbounds i8, i8* %227, i64 %226
  store i8* %228, i8** %16, align 8
  %229 = load %53*, %53** %8, align 8
  %230 = icmp eq %53* %229, null
  br i1 %230, label %231, label %232

231:                                              ; preds = %222
  store i32 10, i32* %28, align 4
  br label %284

232:                                              ; preds = %222
  %233 = load %53*, %53** %8, align 8
  %234 = call i8* @_php_stream_get_line(%53* %233, i8* null, i64 0, i64* %31)
  store i8* %234, i8** %30, align 8
  %235 = icmp eq i8* %234, null
  br i1 %235, label %236, label %253

236:                                              ; preds = %232
  %237 = load i64, i64* %20, align 8
  %238 = load i8*, i8** %19, align 8
  %239 = load i8*, i8** %13, align 8
  %240 = ptrtoint i8* %238 to i64
  %241 = ptrtoint i8* %239 to i64
  %242 = sub i64 %240, %241
  %243 = icmp ugt i64 %237, %242
  br i1 %243, label %244, label %245

244:                                              ; preds = %236
  store i32 10, i32* %28, align 4
  br label %284

245:                                              ; preds = %236
  %246 = load %3*, %3** %14, align 8
  call void @157(%3* %246)
  br label %247

247:                                              ; preds = %245
  %248 = load %3*, %3** %14, align 8
  %249 = getelementptr inbounds %3, %3* %248, i32 0, i32 1
  %250 = bitcast %5* %249 to i32*
  store i32 2, i32* %250, align 8
  br label %251

251:                                              ; preds = %247
  br label %252

252:                                              ; preds = %251
  store i32 13, i32* %28, align 4
  br label %284

253:                                              ; preds = %232
  br label %254

254:                                              ; preds = %253
  %255 = load i64, i64* %31, align 8
  %256 = load i64, i64* %20, align 8
  %257 = add i64 %256, %255
  store i64 %257, i64* %20, align 8
  %258 = load i8*, i8** %15, align 8
  %259 = load i64, i64* %20, align 8
  %260 = call i8* @_erealloc(i8* %258, i64 %259) #15
  store i8* %260, i8** %32, align 8
  %261 = load i8*, i8** %32, align 8
  %262 = load i8*, i8** %16, align 8
  %263 = load i8*, i8** %15, align 8
  %264 = ptrtoint i8* %262 to i64
  %265 = ptrtoint i8* %263 to i64
  %266 = sub i64 %264, %265
  %267 = getelementptr inbounds i8, i8* %261, i64 %266
  store i8* %267, i8** %16, align 8
  %268 = load i8*, i8** %32, align 8
  store i8* %268, i8** %15, align 8
  %269 = load i8*, i8** %13, align 8
  call void @_efree(i8* %269)
  %270 = load i64, i64* %31, align 8
  store i64 %270, i64* %12, align 8
  %271 = load i8*, i8** %30, align 8
  store i8* %271, i8** %13, align 8
  store i8* %271, i8** %17, align 8
  %272 = load i8*, i8** %13, align 8
  store i8* %272, i8** %26, align 8
  %273 = load i8*, i8** %13, align 8
  %274 = load i64, i64* %12, align 8
  %275 = load i8, i8* %9, align 1
  %276 = call i8* @170(i8* %273, i64 %274, i8 signext %275)
  store i8* %276, i8** %19, align 8
  store i8* %276, i8** %18, align 8
  %277 = load i64, i64* %12, align 8
  %278 = load i8*, i8** %19, align 8
  %279 = load i8*, i8** %13, align 8
  %280 = ptrtoint i8* %278 to i64
  %281 = ptrtoint i8* %279 to i64
  %282 = sub i64 %280, %281
  %283 = sub i64 %277, %282
  store i64 %283, i64* %21, align 8
  store i32 0, i32* %29, align 4
  store i32 0, i32* %28, align 4
  br label %284

284:                                              ; preds = %252, %244, %231, %254
  %285 = bitcast i8** %32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %285) #11
  %286 = bitcast i64* %31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %286) #11
  %287 = bitcast i8** %30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %287) #11
  %288 = load i32, i32* %28, align 4
  switch i32 %288, label %500 [
    i32 0, label %289
    i32 10, label %434
  ]

289:                                              ; preds = %284
  br label %290

290:                                              ; preds = %163, %289
  br label %411

291:                                              ; preds = %161, %161
  %292 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %292) #11
  %293 = call i32 @mblen(i8* null, i64 0) #11
  store i32 %293, i32* %33, align 4
  %294 = load i32, i32* %33, align 4
  %295 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %295) #11
  br label %296

296:                                              ; preds = %161, %291
  %297 = load i32, i32* %29, align 4
  switch i32 %297, label %344 [
    i32 1, label %298
    i32 2, label %301
  ]

298:                                              ; preds = %296
  %299 = load i8*, i8** %17, align 8
  %300 = getelementptr inbounds i8, i8* %299, i32 1
  store i8* %300, i8** %17, align 8
  store i32 0, i32* %29, align 4
  br label %364

301:                                              ; preds = %296
  %302 = load i8*, i8** %17, align 8
  %303 = load i8, i8* %302, align 1
  %304 = sext i8 %303 to i32
  %305 = load i8, i8* %10, align 1
  %306 = sext i8 %305 to i32
  %307 = icmp ne i32 %304, %306
  br i1 %307, label %308, label %326

308:                                              ; preds = %301
  %309 = load i8*, i8** %16, align 8
  %310 = load i8*, i8** %26, align 8
  %311 = load i8*, i8** %17, align 8
  %312 = load i8*, i8** %26, align 8
  %313 = ptrtoint i8* %311 to i64
  %314 = ptrtoint i8* %312 to i64
  %315 = sub i64 %313, %314
  %316 = sub nsw i64 %315, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %309, i8* align 1 %310, i64 %316, i1 false)
  %317 = load i8*, i8** %17, align 8
  %318 = load i8*, i8** %26, align 8
  %319 = ptrtoint i8* %317 to i64
  %320 = ptrtoint i8* %318 to i64
  %321 = sub i64 %319, %320
  %322 = sub nsw i64 %321, 1
  %323 = load i8*, i8** %16, align 8
  %324 = getelementptr inbounds i8, i8* %323, i64 %322
  store i8* %324, i8** %16, align 8
  %325 = load i8*, i8** %17, align 8
  store i8* %325, i8** %26, align 8
  br label %434

326:                                              ; preds = %301
  %327 = load i8*, i8** %16, align 8
  %328 = load i8*, i8** %26, align 8
  %329 = load i8*, i8** %17, align 8
  %330 = load i8*, i8** %26, align 8
  %331 = ptrtoint i8* %329 to i64
  %332 = ptrtoint i8* %330 to i64
  %333 = sub i64 %331, %332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %327, i8* align 1 %328, i64 %333, i1 false)
  %334 = load i8*, i8** %17, align 8
  %335 = load i8*, i8** %26, align 8
  %336 = ptrtoint i8* %334 to i64
  %337 = ptrtoint i8* %335 to i64
  %338 = sub i64 %336, %337
  %339 = load i8*, i8** %16, align 8
  %340 = getelementptr inbounds i8, i8* %339, i64 %338
  store i8* %340, i8** %16, align 8
  %341 = load i8*, i8** %17, align 8
  %342 = getelementptr inbounds i8, i8* %341, i32 1
  store i8* %342, i8** %17, align 8
  %343 = load i8*, i8** %17, align 8
  store i8* %343, i8** %26, align 8
  store i32 0, i32* %29, align 4
  br label %364

344:                                              ; preds = %296
  %345 = load i8*, i8** %17, align 8
  %346 = load i8, i8* %345, align 1
  %347 = sext i8 %346 to i32
  %348 = load i8, i8* %10, align 1
  %349 = sext i8 %348 to i32
  %350 = icmp eq i32 %347, %349
  br i1 %350, label %351, label %352

351:                                              ; preds = %344
  store i32 2, i32* %29, align 4
  br label %361

352:                                              ; preds = %344
  %353 = load i8*, i8** %17, align 8
  %354 = load i8, i8* %353, align 1
  %355 = sext i8 %354 to i32
  %356 = load i8, i8* %11, align 1
  %357 = sext i8 %356 to i32
  %358 = icmp eq i32 %355, %357
  br i1 %358, label %359, label %360

359:                                              ; preds = %352
  store i32 1, i32* %29, align 4
  br label %360

360:                                              ; preds = %359, %352
  br label %361

361:                                              ; preds = %360, %351
  %362 = load i8*, i8** %17, align 8
  %363 = getelementptr inbounds i8, i8* %362, i32 1
  store i8* %363, i8** %17, align 8
  br label %364

364:                                              ; preds = %361, %326, %298
  br label %411

365:                                              ; preds = %161
  %366 = load i32, i32* %29, align 4
  switch i32 %366, label %405 [
    i32 2, label %367
    i32 1, label %385
  ]

367:                                              ; preds = %365
  %368 = load i8*, i8** %16, align 8
  %369 = load i8*, i8** %26, align 8
  %370 = load i8*, i8** %17, align 8
  %371 = load i8*, i8** %26, align 8
  %372 = ptrtoint i8* %370 to i64
  %373 = ptrtoint i8* %371 to i64
  %374 = sub i64 %372, %373
  %375 = sub nsw i64 %374, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %368, i8* align 1 %369, i64 %375, i1 false)
  %376 = load i8*, i8** %17, align 8
  %377 = load i8*, i8** %26, align 8
  %378 = ptrtoint i8* %376 to i64
  %379 = ptrtoint i8* %377 to i64
  %380 = sub i64 %378, %379
  %381 = sub nsw i64 %380, 1
  %382 = load i8*, i8** %16, align 8
  %383 = getelementptr inbounds i8, i8* %382, i64 %381
  store i8* %383, i8** %16, align 8
  %384 = load i8*, i8** %17, align 8
  store i8* %384, i8** %26, align 8
  br label %434

385:                                              ; preds = %365
  %386 = load i32, i32* %22, align 4
  %387 = load i8*, i8** %17, align 8
  %388 = sext i32 %386 to i64
  %389 = getelementptr inbounds i8, i8* %387, i64 %388
  store i8* %389, i8** %17, align 8
  %390 = load i8*, i8** %16, align 8
  %391 = load i8*, i8** %26, align 8
  %392 = load i8*, i8** %17, align 8
  %393 = load i8*, i8** %26, align 8
  %394 = ptrtoint i8* %392 to i64
  %395 = ptrtoint i8* %393 to i64
  %396 = sub i64 %394, %395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %390, i8* align 1 %391, i64 %396, i1 false)
  %397 = load i8*, i8** %17, align 8
  %398 = load i8*, i8** %26, align 8
  %399 = ptrtoint i8* %397 to i64
  %400 = ptrtoint i8* %398 to i64
  %401 = sub i64 %399, %400
  %402 = load i8*, i8** %16, align 8
  %403 = getelementptr inbounds i8, i8* %402, i64 %401
  store i8* %403, i8** %16, align 8
  %404 = load i8*, i8** %17, align 8
  store i8* %404, i8** %26, align 8
  store i32 0, i32* %29, align 4
  br label %410

405:                                              ; preds = %365
  %406 = load i32, i32* %22, align 4
  %407 = load i8*, i8** %17, align 8
  %408 = sext i32 %406 to i64
  %409 = getelementptr inbounds i8, i8* %407, i64 %408
  store i8* %409, i8** %17, align 8
  br label %410

410:                                              ; preds = %405, %385
  br label %411

411:                                              ; preds = %410, %364, %290
  %412 = load i8*, i8** %17, align 8
  %413 = load i8*, i8** %19, align 8
  %414 = icmp ult i8* %412, %413
  br i1 %414, label %415, label %431

415:                                              ; preds = %411
  %416 = load i8*, i8** %17, align 8
  %417 = load i8, i8* %416, align 1
  %418 = sext i8 %417 to i32
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %415
  br label %429

421:                                              ; preds = %415
  %422 = load i8*, i8** %17, align 8
  %423 = load i8*, i8** %19, align 8
  %424 = load i8*, i8** %17, align 8
  %425 = ptrtoint i8* %423 to i64
  %426 = ptrtoint i8* %424 to i64
  %427 = sub i64 %425, %426
  %428 = call i32 @mblen(i8* %422, i64 %427) #11
  br label %429

429:                                              ; preds = %421, %420
  %430 = phi i32 [ 1, %420 ], [ %428, %421 ]
  br label %432

431:                                              ; preds = %411
  br label %432

432:                                              ; preds = %431, %429
  %433 = phi i32 [ %430, %429 ], [ 0, %431 ]
  store i32 %433, i32* %22, align 4
  br label %161

434:                                              ; preds = %284, %367, %308, %165
  br label %435

435:                                              ; preds = %478, %434
  %436 = load i32, i32* %22, align 4
  switch i32 %436, label %452 [
    i32 0, label %437
    i32 -2, label %438
    i32 -1, label %438
    i32 1, label %443
  ]

437:                                              ; preds = %435
  br label %480

438:                                              ; preds = %435, %435
  store i32 1, i32* %22, align 4
  %439 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %439) #11
  %440 = call i32 @mblen(i8* null, i64 0) #11
  store i32 %440, i32* %34, align 4
  %441 = load i32, i32* %34, align 4
  %442 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %442) #11
  br label %443

443:                                              ; preds = %435, %438
  %444 = load i8*, i8** %17, align 8
  %445 = load i8, i8* %444, align 1
  %446 = sext i8 %445 to i32
  %447 = load i8, i8* %9, align 1
  %448 = sext i8 %447 to i32
  %449 = icmp eq i32 %446, %448
  br i1 %449, label %450, label %451

450:                                              ; preds = %443
  br label %480

451:                                              ; preds = %443
  br label %453

452:                                              ; preds = %435
  br label %453

453:                                              ; preds = %452, %451
  %454 = load i32, i32* %22, align 4
  %455 = load i8*, i8** %17, align 8
  %456 = sext i32 %454 to i64
  %457 = getelementptr inbounds i8, i8* %455, i64 %456
  store i8* %457, i8** %17, align 8
  %458 = load i8*, i8** %17, align 8
  %459 = load i8*, i8** %19, align 8
  %460 = icmp ult i8* %458, %459
  br i1 %460, label %461, label %477

461:                                              ; preds = %453
  %462 = load i8*, i8** %17, align 8
  %463 = load i8, i8* %462, align 1
  %464 = sext i8 %463 to i32
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %461
  br label %475

467:                                              ; preds = %461
  %468 = load i8*, i8** %17, align 8
  %469 = load i8*, i8** %19, align 8
  %470 = load i8*, i8** %17, align 8
  %471 = ptrtoint i8* %469 to i64
  %472 = ptrtoint i8* %470 to i64
  %473 = sub i64 %471, %472
  %474 = call i32 @mblen(i8* %468, i64 %473) #11
  br label %475

475:                                              ; preds = %467, %466
  %476 = phi i32 [ 1, %466 ], [ %474, %467 ]
  br label %478

477:                                              ; preds = %453
  br label %478

478:                                              ; preds = %477, %475
  %479 = phi i32 [ %476, %475 ], [ 0, %477 ]
  store i32 %479, i32* %22, align 4
  br label %435

480:                                              ; preds = %450, %437
  %481 = load i8*, i8** %16, align 8
  %482 = load i8*, i8** %26, align 8
  %483 = load i8*, i8** %17, align 8
  %484 = load i8*, i8** %26, align 8
  %485 = ptrtoint i8* %483 to i64
  %486 = ptrtoint i8* %484 to i64
  %487 = sub i64 %485, %486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %481, i8* align 1 %482, i64 %487, i1 false)
  %488 = load i8*, i8** %17, align 8
  %489 = load i8*, i8** %26, align 8
  %490 = ptrtoint i8* %488 to i64
  %491 = ptrtoint i8* %489 to i64
  %492 = sub i64 %490, %491
  %493 = load i8*, i8** %16, align 8
  %494 = getelementptr inbounds i8, i8* %493, i64 %492
  store i8* %494, i8** %16, align 8
  %495 = load i32, i32* %22, align 4
  %496 = load i8*, i8** %17, align 8
  %497 = sext i32 %495 to i64
  %498 = getelementptr inbounds i8, i8* %496, i64 %497
  store i8* %498, i8** %17, align 8
  %499 = load i8*, i8** %16, align 8
  store i8* %499, i8** %25, align 8
  store i32 0, i32* %28, align 4
  br label %500

500:                                              ; preds = %480, %284
  %501 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %501) #11
  %502 = load i32, i32* %28, align 4
  switch i32 %502, label %594 [
    i32 0, label %503
  ]

503:                                              ; preds = %500
  br label %584

504:                                              ; preds = %149, %146
  %505 = load i8*, i8** %17, align 8
  store i8* %505, i8** %26, align 8
  br label %506

506:                                              ; preds = %549, %504
  %507 = load i32, i32* %22, align 4
  switch i32 %507, label %523 [
    i32 0, label %508
    i32 -2, label %509
    i32 -1, label %509
    i32 1, label %514
  ]

508:                                              ; preds = %506
  br label %551

509:                                              ; preds = %506, %506
  store i32 1, i32* %22, align 4
  %510 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %510) #11
  %511 = call i32 @mblen(i8* null, i64 0) #11
  store i32 %511, i32* %35, align 4
  %512 = load i32, i32* %35, align 4
  %513 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %513) #11
  br label %514

514:                                              ; preds = %506, %509
  %515 = load i8*, i8** %17, align 8
  %516 = load i8, i8* %515, align 1
  %517 = sext i8 %516 to i32
  %518 = load i8, i8* %9, align 1
  %519 = sext i8 %518 to i32
  %520 = icmp eq i32 %517, %519
  br i1 %520, label %521, label %522

521:                                              ; preds = %514
  br label %551

522:                                              ; preds = %514
  br label %524

523:                                              ; preds = %506
  br label %524

524:                                              ; preds = %523, %522
  %525 = load i32, i32* %22, align 4
  %526 = load i8*, i8** %17, align 8
  %527 = sext i32 %525 to i64
  %528 = getelementptr inbounds i8, i8* %526, i64 %527
  store i8* %528, i8** %17, align 8
  %529 = load i8*, i8** %17, align 8
  %530 = load i8*, i8** %19, align 8
  %531 = icmp ult i8* %529, %530
  br i1 %531, label %532, label %548

532:                                              ; preds = %524
  %533 = load i8*, i8** %17, align 8
  %534 = load i8, i8* %533, align 1
  %535 = sext i8 %534 to i32
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %538

537:                                              ; preds = %532
  br label %546

538:                                              ; preds = %532
  %539 = load i8*, i8** %17, align 8
  %540 = load i8*, i8** %19, align 8
  %541 = load i8*, i8** %17, align 8
  %542 = ptrtoint i8* %540 to i64
  %543 = ptrtoint i8* %541 to i64
  %544 = sub i64 %542, %543
  %545 = call i32 @mblen(i8* %539, i64 %544) #11
  br label %546

546:                                              ; preds = %538, %537
  %547 = phi i32 [ 1, %537 ], [ %545, %538 ]
  br label %549

548:                                              ; preds = %524
  br label %549

549:                                              ; preds = %548, %546
  %550 = phi i32 [ %547, %546 ], [ 0, %548 ]
  store i32 %550, i32* %22, align 4
  br label %506

551:                                              ; preds = %521, %508
  %552 = load i8*, i8** %16, align 8
  %553 = load i8*, i8** %26, align 8
  %554 = load i8*, i8** %17, align 8
  %555 = load i8*, i8** %26, align 8
  %556 = ptrtoint i8* %554 to i64
  %557 = ptrtoint i8* %555 to i64
  %558 = sub i64 %556, %557
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %552, i8* align 1 %553, i64 %558, i1 false)
  %559 = load i8*, i8** %17, align 8
  %560 = load i8*, i8** %26, align 8
  %561 = ptrtoint i8* %559 to i64
  %562 = ptrtoint i8* %560 to i64
  %563 = sub i64 %561, %562
  %564 = load i8*, i8** %16, align 8
  %565 = getelementptr inbounds i8, i8* %564, i64 %563
  store i8* %565, i8** %16, align 8
  %566 = load i8*, i8** %15, align 8
  %567 = load i8*, i8** %16, align 8
  %568 = load i8*, i8** %15, align 8
  %569 = ptrtoint i8* %567 to i64
  %570 = ptrtoint i8* %568 to i64
  %571 = sub i64 %569, %570
  %572 = load i8, i8* %9, align 1
  %573 = call i8* @170(i8* %566, i64 %571, i8 signext %572)
  store i8* %573, i8** %25, align 8
  %574 = load i8*, i8** %17, align 8
  %575 = load i8, i8* %574, align 1
  %576 = sext i8 %575 to i32
  %577 = load i8, i8* %9, align 1
  %578 = sext i8 %577 to i32
  %579 = icmp eq i32 %576, %578
  br i1 %579, label %580, label %583

580:                                              ; preds = %551
  %581 = load i8*, i8** %17, align 8
  %582 = getelementptr inbounds i8, i8* %581, i32 1
  store i8* %582, i8** %17, align 8
  br label %583

583:                                              ; preds = %580, %551
  br label %584

584:                                              ; preds = %583, %503
  %585 = load i8*, i8** %25, align 8
  store i8 0, i8* %585, align 1
  %586 = load %3*, %3** %14, align 8
  %587 = load i8*, i8** %15, align 8
  %588 = load i8*, i8** %25, align 8
  %589 = load i8*, i8** %15, align 8
  %590 = ptrtoint i8* %588 to i64
  %591 = ptrtoint i8* %589 to i64
  %592 = sub i64 %590, %591
  %593 = call i32 @add_next_index_stringl(%3* %586, i8* %587, i64 %592)
  store i32 0, i32* %28, align 4
  br label %594

594:                                              ; preds = %584, %500, %143
  %595 = bitcast i8** %26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %595) #11
  %596 = bitcast i8** %25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %596) #11
  %597 = load i32, i32* %28, align 4
  switch i32 %597, label %618 [
    i32 0, label %598
    i32 2, label %602
    i32 13, label %603
  ]

598:                                              ; preds = %594
  br label %599

599:                                              ; preds = %598
  %600 = load i32, i32* %22, align 4
  %601 = icmp sgt i32 %600, 0
  br i1 %601, label %69, label %602

602:                                              ; preds = %599, %594
  br label %603

603:                                              ; preds = %602, %594
  %604 = load i8*, i8** %15, align 8
  call void @_efree(i8* %604)
  %605 = load %53*, %53** %8, align 8
  %606 = icmp ne %53* %605, null
  br i1 %606, label %607, label %609

607:                                              ; preds = %603
  %608 = load i8*, i8** %13, align 8
  call void @_efree(i8* %608)
  br label %609

609:                                              ; preds = %607, %603
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #11
  %610 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %610) #11
  %611 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %611) #11
  %612 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %612) #11
  %613 = bitcast i8** %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %613) #11
  %614 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %614) #11
  %615 = bitcast i8** %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %615) #11
  %616 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %616) #11
  %617 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %617) #11
  ret void

618:                                              ; preds = %594
  unreachable
}

; Function Attrs: nounwind
declare dso_local i32 @mblen(i8*, i64) #8

; Function Attrs: nounwind uwtable
define internal i8* @170(i8* %0, i64 %1, i8 signext %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca [2 x i8], align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8 %2, i8* %7, align 1
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #11
  %13 = bitcast [2 x i8]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %13) #11
  %14 = bitcast [2 x i8]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 2, i1 false)
  br label %15

15:                                               ; preds = %45, %3
  %16 = load i64, i64* %6, align 8
  %17 = icmp ugt i64 %16, 0
  br i1 %17, label %18, label %54

18:                                               ; preds = %15
  %19 = load i8*, i8** %5, align 8
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  br label %28

24:                                               ; preds = %18
  %25 = load i8*, i8** %5, align 8
  %26 = load i64, i64* %6, align 8
  %27 = call i32 @mblen(i8* %25, i64 %26) #11
  br label %28

28:                                               ; preds = %24, %23
  %29 = phi i32 [ 1, %23 ], [ %27, %24 ]
  store i32 %29, i32* %8, align 4
  %30 = load i32, i32* %8, align 4
  switch i32 %30, label %38 [
    i32 -2, label %31
    i32 -1, label %31
    i32 0, label %36
    i32 1, label %37
  ]

31:                                               ; preds = %28, %28
  store i32 1, i32* %8, align 4
  %32 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  %33 = call i32 @mblen(i8* null, i64 0) #11
  store i32 %33, i32* %10, align 4
  %34 = load i32, i32* %10, align 4
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %35) #11
  br label %45

36:                                               ; preds = %28
  br label %55

37:                                               ; preds = %28
  br label %38

38:                                               ; preds = %28, %37
  %39 = getelementptr inbounds [2 x i8], [2 x i8]* %9, i64 0, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds [2 x i8], [2 x i8]* %9, i64 0, i64 0
  store i8 %40, i8* %41, align 1
  %42 = load i8*, i8** %5, align 8
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds [2 x i8], [2 x i8]* %9, i64 0, i64 1
  store i8 %43, i8* %44, align 1
  br label %45

45:                                               ; preds = %38, %31
  %46 = load i32, i32* %8, align 4
  %47 = load i8*, i8** %5, align 8
  %48 = sext i32 %46 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  store i8* %49, i8** %5, align 8
  %50 = load i32, i32* %8, align 4
  %51 = sext i32 %50 to i64
  %52 = load i64, i64* %6, align 8
  %53 = sub i64 %52, %51
  store i64 %53, i64* %6, align 8
  br label %15

54:                                               ; preds = %15
  br label %55

55:                                               ; preds = %54, %36
  %56 = getelementptr inbounds [2 x i8], [2 x i8]* %9, i64 0, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  switch i32 %58, label %71 [
    i32 10, label %59
    i32 13, label %68
  ]

59:                                               ; preds = %55
  %60 = getelementptr inbounds [2 x i8], [2 x i8]* %9, i64 0, i64 0
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp eq i32 %62, 13
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = load i8*, i8** %5, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 -2
  store i8* %66, i8** %4, align 8
  store i32 1, i32* %11, align 4
  br label %73

67:                                               ; preds = %59
  br label %68

68:                                               ; preds = %55, %67
  %69 = load i8*, i8** %5, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 -1
  store i8* %70, i8** %4, align 8
  store i32 1, i32* %11, align 4
  br label %73

71:                                               ; preds = %55
  %72 = load i8*, i8** %5, align 8
  store i8* %72, i8** %4, align 8
  store i32 1, i32* %11, align 4
  br label %73

73:                                               ; preds = %71, %68, %64
  %74 = bitcast [2 x i8]* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %74) #11
  %75 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %75) #11
  %76 = load i8*, i8** %4, align 8
  ret i8* %76
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #5

declare dso_local i32 @add_next_index_null(%3*) #1

; Function Attrs: allocsize(1)
declare dso_local i8* @_erealloc(i8*, i64) #10

declare dso_local i32 @add_next_index_stringl(%3*, i8*, i64) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_realpath(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca [4096 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %3*, align 8
  %14 = alloca %3*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca %3*, align 8
  %23 = alloca %13*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %24 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  %25 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  %26 = bitcast [4096 x i8]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* %26) #11
  br label %27

27:                                               ; preds = %2
  %28 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #11
  store i32 0, i32* %8, align 4
  %29 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  store i32 1, i32* %9, align 4
  %30 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #11
  store i32 1, i32* %10, align 4
  %31 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #11
  %32 = load %28*, %28** %3, align 8
  %33 = getelementptr inbounds %28, %28* %32, i32 0, i32 4
  %34 = getelementptr inbounds %3, %3* %33, i32 0, i32 2
  %35 = bitcast %6* %34 to i32*
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %11, align 4
  %37 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #11
  %38 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  %39 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  store %3* null, %3** %14, align 8
  %40 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #11
  store i32 0, i32* %15, align 4
  %41 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #11
  store i8* null, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %17) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #11
  store i8 0, i8* %18, align 1
  %42 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #11
  store i32 0, i32* %19, align 4
  %43 = load i32, i32* %12, align 4
  %44 = load %3*, %3** %13, align 8
  %45 = load %3*, %3** %14, align 8
  %46 = load i32, i32* %15, align 4
  %47 = load i8*, i8** %16, align 8
  %48 = load i8, i8* %17, align 1
  %49 = load i8, i8* %18, align 1
  br label %50

50:                                               ; preds = %27
  %51 = load i32, i32* %11, align 4
  %52 = load i32, i32* %9, align 4
  %53 = icmp slt i32 %51, %52
  %54 = xor i1 %53, true
  %55 = xor i1 %54, true
  %56 = zext i1 %55 to i32
  %57 = sext i32 %56 to i64
  %58 = call i64 @llvm.expect.i64(i64 %57, i64 0)
  %59 = icmp ne i64 %58, 0
  br i1 %59, label %79, label %60

60:                                               ; preds = %50
  %61 = load i32, i32* %11, align 4
  %62 = load i32, i32* %10, align 4
  %63 = icmp sgt i32 %61, %62
  %64 = xor i1 %63, true
  %65 = xor i1 %64, true
  %66 = zext i1 %65 to i32
  %67 = sext i32 %66 to i64
  %68 = call i64 @llvm.expect.i64(i64 %67, i64 0)
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %70, label %83

70:                                               ; preds = %60
  %71 = load i32, i32* %10, align 4
  %72 = icmp sge i32 %71, 0
  %73 = xor i1 %72, true
  %74 = xor i1 %73, true
  %75 = zext i1 %74 to i32
  %76 = sext i32 %75 to i64
  %77 = call i64 @llvm.expect.i64(i64 %76, i64 1)
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %70, %50
  %80 = load i32, i32* %11, align 4
  %81 = load i32, i32* %9, align 4
  %82 = load i32, i32* %10, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %80, i32 %81, i32 %82)
  store i32 1, i32* %19, align 4
  br label %158

83:                                               ; preds = %70, %60
  store i32 0, i32* %12, align 4
  %84 = load %28*, %28** %3, align 8
  %85 = bitcast %28* %84 to %3*
  %86 = getelementptr inbounds %3, %3* %85, i64 4
  store %3* %86, %3** %13, align 8
  %87 = load i32, i32* %12, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %12, align 4
  br label %89

89:                                               ; preds = %83
  %90 = load i32, i32* %12, align 4
  %91 = load i32, i32* %9, align 4
  %92 = icmp sle i32 %90, %91
  br i1 %92, label %97, label %93

93:                                               ; preds = %89
  %94 = load i8, i8* %18, align 1
  %95 = zext i8 %94 to i32
  %96 = icmp eq i32 %95, 1
  br label %97

97:                                               ; preds = %93, %89
  %98 = phi i1 [ true, %89 ], [ %96, %93 ]
  %99 = xor i1 %98, true
  %100 = zext i1 %99 to i32
  %101 = sext i32 %100 to i64
  %102 = call i64 @llvm.expect.i64(i64 %101, i64 0)
  %103 = icmp ne i64 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %97
  unreachable

105:                                              ; preds = %97
  br label %106

106:                                              ; preds = %105
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %12, align 4
  %110 = load i32, i32* %9, align 4
  %111 = icmp sgt i32 %109, %110
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  %113 = load i8, i8* %18, align 1
  %114 = zext i8 %113 to i32
  %115 = icmp eq i32 %114, 0
  br label %116

116:                                              ; preds = %112, %108
  %117 = phi i1 [ true, %108 ], [ %115, %112 ]
  %118 = xor i1 %117, true
  %119 = zext i1 %118 to i32
  %120 = sext i32 %119 to i64
  %121 = call i64 @llvm.expect.i64(i64 %120, i64 0)
  %122 = icmp ne i64 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %116
  unreachable

124:                                              ; preds = %116
  br label %125

125:                                              ; preds = %124
  br label %126

126:                                              ; preds = %125
  %127 = load i8, i8* %18, align 1
  %128 = icmp ne i8 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %126
  %130 = load i32, i32* %12, align 4
  %131 = load i32, i32* %11, align 4
  %132 = icmp sgt i32 %130, %131
  %133 = xor i1 %132, true
  %134 = xor i1 %133, true
  %135 = zext i1 %134 to i32
  %136 = sext i32 %135 to i64
  %137 = call i64 @llvm.expect.i64(i64 %136, i64 0)
  %138 = icmp ne i64 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %129
  br label %158

140:                                              ; preds = %129
  br label %141

141:                                              ; preds = %140, %126
  %142 = load %3*, %3** %13, align 8
  %143 = getelementptr inbounds %3, %3* %142, i32 1
  store %3* %143, %3** %13, align 8
  %144 = load %3*, %3** %13, align 8
  store %3* %144, %3** %14, align 8
  %145 = load %3*, %3** %14, align 8
  %146 = call i32 @152(%3* %145, i8** %5, i64* %6, i32 0)
  %147 = icmp ne i32 %146, 0
  %148 = xor i1 %147, true
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = zext i1 %150 to i32
  %152 = sext i32 %151 to i64
  %153 = call i64 @llvm.expect.i64(i64 %152, i64 0)
  %154 = icmp ne i64 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %141
  store i32 6, i32* %15, align 4
  store i32 4, i32* %19, align 4
  br label %158

156:                                              ; preds = %141
  br label %157

157:                                              ; preds = %156
  br label %158

158:                                              ; preds = %157, %155, %139, %79
  %159 = load i32, i32* %19, align 4
  %160 = icmp ne i32 %159, 0
  %161 = xor i1 %160, true
  %162 = xor i1 %161, true
  %163 = zext i1 %162 to i32
  %164 = sext i32 %163 to i64
  %165 = call i64 @llvm.expect.i64(i64 %164, i64 0)
  %166 = icmp ne i64 %165, 0
  br i1 %166, label %167, label %190

167:                                              ; preds = %158
  %168 = load i32, i32* %19, align 4
  %169 = icmp eq i32 %168, 2
  br i1 %169, label %170, label %173

170:                                              ; preds = %167
  %171 = load i32, i32* %12, align 4
  %172 = load i8*, i8** %16, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %171, i8* %172)
  br label %189

173:                                              ; preds = %167
  %174 = load i32, i32* %19, align 4
  %175 = icmp eq i32 %174, 3
  br i1 %175, label %176, label %180

176:                                              ; preds = %173
  %177 = load i32, i32* %12, align 4
  %178 = load i8*, i8** %16, align 8
  %179 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %177, i8* %178, %3* %179)
  br label %188

180:                                              ; preds = %173
  %181 = load i32, i32* %19, align 4
  %182 = icmp eq i32 %181, 4
  br i1 %182, label %183, label %187

183:                                              ; preds = %180
  %184 = load i32, i32* %12, align 4
  %185 = load i32, i32* %15, align 4
  %186 = load %3*, %3** %14, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %184, i32 %185, %3* %186)
  br label %187

187:                                              ; preds = %183, %180
  br label %188

188:                                              ; preds = %187, %176
  br label %189

189:                                              ; preds = %188, %170
  store i32 1, i32* %20, align 4
  br label %191

190:                                              ; preds = %158
  store i32 0, i32* %20, align 4
  br label %191

191:                                              ; preds = %190, %189
  %192 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %192) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %18) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #11
  %193 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #11
  %194 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %194) #11
  %195 = bitcast %3** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %195) #11
  %196 = bitcast %3** %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %196) #11
  %197 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %197) #11
  %198 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #11
  %199 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %199) #11
  %200 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %200) #11
  %201 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %201) #11
  %202 = load i32, i32* %20, align 4
  switch i32 %202, label %257 [
    i32 0, label %203
  ]

203:                                              ; preds = %191
  br label %204

204:                                              ; preds = %203
  br label %205

205:                                              ; preds = %204
  %206 = load i8*, i8** %5, align 8
  %207 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %208 = call i8* @tsrm_realpath(i8* %206, i8* %207)
  %209 = icmp ne i8* %208, null
  br i1 %209, label %210, label %250

210:                                              ; preds = %205
  %211 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  %212 = call i32 @php_check_open_basedir(i8* %211)
  %213 = icmp ne i32 %212, 0
  br i1 %213, label %214, label %221

214:                                              ; preds = %210
  br label %215

215:                                              ; preds = %214
  %216 = load %3*, %3** %4, align 8
  %217 = getelementptr inbounds %3, %3* %216, i32 0, i32 1
  %218 = bitcast %5* %217 to i32*
  store i32 2, i32* %218, align 8
  br label %219

219:                                              ; preds = %215
  br label %220

220:                                              ; preds = %219
  store i32 1, i32* %20, align 4
  br label %257

221:                                              ; preds = %210
  br label %222

222:                                              ; preds = %221
  %223 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %223) #11
  %224 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i32 0, i32 0
  store i8* %224, i8** %21, align 8
  br label %225

225:                                              ; preds = %222
  br label %226

226:                                              ; preds = %225
  %227 = bitcast %3** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %227) #11
  %228 = load %3*, %3** %4, align 8
  store %3* %228, %3** %22, align 8
  %229 = bitcast %13** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %229) #11
  %230 = load i8*, i8** %21, align 8
  %231 = load i8*, i8** %21, align 8
  %232 = call i64 @strlen(i8* %231) #13
  %233 = call %13* @160(i8* %230, i64 %232, i32 0)
  store %13* %233, %13** %23, align 8
  %234 = load %13*, %13** %23, align 8
  %235 = load %3*, %3** %22, align 8
  %236 = getelementptr inbounds %3, %3* %235, i32 0, i32 0
  %237 = bitcast %4* %236 to %13**
  store %13* %234, %13** %237, align 8
  %238 = load %3*, %3** %22, align 8
  %239 = getelementptr inbounds %3, %3* %238, i32 0, i32 1
  %240 = bitcast %5* %239 to i32*
  store i32 5126, i32* %240, align 8
  %241 = bitcast %13** %23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %241) #11
  %242 = bitcast %3** %22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %242) #11
  br label %243

243:                                              ; preds = %226
  br label %244

244:                                              ; preds = %243
  br label %245

245:                                              ; preds = %244
  br label %246

246:                                              ; preds = %245
  %247 = bitcast i8** %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #11
  br label %248

248:                                              ; preds = %246
  br label %249

249:                                              ; preds = %248
  store i32 1, i32* %20, align 4
  br label %257

250:                                              ; preds = %205
  br label %251

251:                                              ; preds = %250
  %252 = load %3*, %3** %4, align 8
  %253 = getelementptr inbounds %3, %3* %252, i32 0, i32 1
  %254 = bitcast %5* %253 to i32*
  store i32 2, i32* %254, align 8
  br label %255

255:                                              ; preds = %251
  br label %256

256:                                              ; preds = %255
  store i32 1, i32* %20, align 4
  br label %257

257:                                              ; preds = %256, %249, %220, %191
  %258 = bitcast [4096 x i8]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* %258) #11
  %259 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %259) #11
  %260 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %260) #11
  ret void
}

declare dso_local i8* @tsrm_realpath(i8*, i8*) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_fnmatch(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %3*, align 8
  %16 = alloca %3*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8, align 1
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %23 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #11
  %24 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #11
  %25 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #11
  %26 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #11
  %27 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #11
  store i64 0, i64* %9, align 8
  br label %28

28:                                               ; preds = %2
  %29 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #11
  store i32 0, i32* %10, align 4
  %30 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #11
  store i32 2, i32* %11, align 4
  %31 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #11
  store i32 3, i32* %12, align 4
  %32 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #11
  %33 = load %28*, %28** %3, align 8
  %34 = getelementptr inbounds %28, %28* %33, i32 0, i32 4
  %35 = getelementptr inbounds %3, %3* %34, i32 0, i32 2
  %36 = bitcast %6* %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %13, align 4
  %38 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #11
  %39 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %39) #11
  %40 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  store %3* null, %3** %16, align 8
  %41 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #11
  store i32 0, i32* %17, align 4
  %42 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #11
  store i8* null, i8** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %19) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %20) #11
  store i8 0, i8* %20, align 1
  %43 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #11
  store i32 0, i32* %21, align 4
  %44 = load i32, i32* %14, align 4
  %45 = load %3*, %3** %15, align 8
  %46 = load %3*, %3** %16, align 8
  %47 = load i32, i32* %17, align 4
  %48 = load i8*, i8** %18, align 8
  %49 = load i8, i8* %19, align 1
  %50 = load i8, i8* %20, align 1
  br label %51

51:                                               ; preds = %28
  %52 = load i32, i32* %13, align 4
  %53 = load i32, i32* %11, align 4
  %54 = icmp slt i32 %52, %53
  %55 = xor i1 %54, true
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = sext i32 %57 to i64
  %59 = call i64 @llvm.expect.i64(i64 %58, i64 0)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %80, label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %13, align 4
  %63 = load i32, i32* %12, align 4
  %64 = icmp sgt i32 %62, %63
  %65 = xor i1 %64, true
  %66 = xor i1 %65, true
  %67 = zext i1 %66 to i32
  %68 = sext i32 %67 to i64
  %69 = call i64 @llvm.expect.i64(i64 %68, i64 0)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %84

71:                                               ; preds = %61
  %72 = load i32, i32* %12, align 4
  %73 = icmp sge i32 %72, 0
  %74 = xor i1 %73, true
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = sext i32 %76 to i64
  %78 = call i64 @llvm.expect.i64(i64 %77, i64 1)
  %79 = icmp ne i64 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %71, %51
  %81 = load i32, i32* %13, align 4
  %82 = load i32, i32* %11, align 4
  %83 = load i32, i32* %12, align 4
  call void @zend_wrong_parameters_count_error(i8 zeroext 0, i32 %81, i32 %82, i32 %83)
  store i32 1, i32* %21, align 4
  br label %299

84:                                               ; preds = %71, %61
  store i32 0, i32* %14, align 4
  %85 = load %28*, %28** %3, align 8
  %86 = bitcast %28* %85 to %3*
  %87 = getelementptr inbounds %3, %3* %86, i64 4
  store %3* %87, %3** %15, align 8
  %88 = load i32, i32* %14, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %14, align 4
  br label %90

90:                                               ; preds = %84
  %91 = load i32, i32* %14, align 4
  %92 = load i32, i32* %11, align 4
  %93 = icmp sle i32 %91, %92
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %20, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp eq i32 %96, 1
  br label %98

98:                                               ; preds = %94, %90
  %99 = phi i1 [ true, %90 ], [ %97, %94 ]
  %100 = xor i1 %99, true
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = call i64 @llvm.expect.i64(i64 %102, i64 0)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  unreachable

106:                                              ; preds = %98
  br label %107

107:                                              ; preds = %106
  br label %108

108:                                              ; preds = %107
  br label %109

109:                                              ; preds = %108
  %110 = load i32, i32* %14, align 4
  %111 = load i32, i32* %11, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %109
  %114 = load i8, i8* %20, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i32 %115, 0
  br label %117

117:                                              ; preds = %113, %109
  %118 = phi i1 [ true, %109 ], [ %116, %113 ]
  %119 = xor i1 %118, true
  %120 = zext i1 %119 to i32
  %121 = sext i32 %120 to i64
  %122 = call i64 @llvm.expect.i64(i64 %121, i64 0)
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %117
  unreachable

125:                                              ; preds = %117
  br label %126

126:                                              ; preds = %125
  br label %127

127:                                              ; preds = %126
  %128 = load i8, i8* %20, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = load i32, i32* %14, align 4
  %132 = load i32, i32* %13, align 4
  %133 = icmp sgt i32 %131, %132
  %134 = xor i1 %133, true
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = sext i32 %136 to i64
  %138 = call i64 @llvm.expect.i64(i64 %137, i64 0)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %130
  br label %299

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141, %127
  %143 = load %3*, %3** %15, align 8
  %144 = getelementptr inbounds %3, %3* %143, i32 1
  store %3* %144, %3** %15, align 8
  %145 = load %3*, %3** %15, align 8
  store %3* %145, %3** %16, align 8
  %146 = load %3*, %3** %16, align 8
  %147 = call i32 @152(%3* %146, i8** %5, i64* %7, i32 0)
  %148 = icmp ne i32 %147, 0
  %149 = xor i1 %148, true
  %150 = xor i1 %149, true
  %151 = xor i1 %150, true
  %152 = zext i1 %151 to i32
  %153 = sext i32 %152 to i64
  %154 = call i64 @llvm.expect.i64(i64 %153, i64 0)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %142
  store i32 6, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %299

157:                                              ; preds = %142
  %158 = load i32, i32* %14, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %14, align 4
  br label %160

160:                                              ; preds = %157
  %161 = load i32, i32* %14, align 4
  %162 = load i32, i32* %11, align 4
  %163 = icmp sle i32 %161, %162
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = load i8, i8* %20, align 1
  %166 = zext i8 %165 to i32
  %167 = icmp eq i32 %166, 1
  br label %168

168:                                              ; preds = %164, %160
  %169 = phi i1 [ true, %160 ], [ %167, %164 ]
  %170 = xor i1 %169, true
  %171 = zext i1 %170 to i32
  %172 = sext i32 %171 to i64
  %173 = call i64 @llvm.expect.i64(i64 %172, i64 0)
  %174 = icmp ne i64 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %168
  unreachable

176:                                              ; preds = %168
  br label %177

177:                                              ; preds = %176
  br label %178

178:                                              ; preds = %177
  br label %179

179:                                              ; preds = %178
  %180 = load i32, i32* %14, align 4
  %181 = load i32, i32* %11, align 4
  %182 = icmp sgt i32 %180, %181
  br i1 %182, label %187, label %183

183:                                              ; preds = %179
  %184 = load i8, i8* %20, align 1
  %185 = zext i8 %184 to i32
  %186 = icmp eq i32 %185, 0
  br label %187

187:                                              ; preds = %183, %179
  %188 = phi i1 [ true, %179 ], [ %186, %183 ]
  %189 = xor i1 %188, true
  %190 = zext i1 %189 to i32
  %191 = sext i32 %190 to i64
  %192 = call i64 @llvm.expect.i64(i64 %191, i64 0)
  %193 = icmp ne i64 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %187
  unreachable

195:                                              ; preds = %187
  br label %196

196:                                              ; preds = %195
  br label %197

197:                                              ; preds = %196
  %198 = load i8, i8* %20, align 1
  %199 = icmp ne i8 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %197
  %201 = load i32, i32* %14, align 4
  %202 = load i32, i32* %13, align 4
  %203 = icmp sgt i32 %201, %202
  %204 = xor i1 %203, true
  %205 = xor i1 %204, true
  %206 = zext i1 %205 to i32
  %207 = sext i32 %206 to i64
  %208 = call i64 @llvm.expect.i64(i64 %207, i64 0)
  %209 = icmp ne i64 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %200
  br label %299

211:                                              ; preds = %200
  br label %212

212:                                              ; preds = %211, %197
  %213 = load %3*, %3** %15, align 8
  %214 = getelementptr inbounds %3, %3* %213, i32 1
  store %3* %214, %3** %15, align 8
  %215 = load %3*, %3** %15, align 8
  store %3* %215, %3** %16, align 8
  %216 = load %3*, %3** %16, align 8
  %217 = call i32 @152(%3* %216, i8** %6, i64* %8, i32 0)
  %218 = icmp ne i32 %217, 0
  %219 = xor i1 %218, true
  %220 = xor i1 %219, true
  %221 = xor i1 %220, true
  %222 = zext i1 %221 to i32
  %223 = sext i32 %222 to i64
  %224 = call i64 @llvm.expect.i64(i64 %223, i64 0)
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %212
  store i32 6, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %299

227:                                              ; preds = %212
  store i8 1, i8* %20, align 1
  %228 = load i32, i32* %14, align 4
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %14, align 4
  br label %230

230:                                              ; preds = %227
  %231 = load i32, i32* %14, align 4
  %232 = load i32, i32* %11, align 4
  %233 = icmp sle i32 %231, %232
  br i1 %233, label %238, label %234

234:                                              ; preds = %230
  %235 = load i8, i8* %20, align 1
  %236 = zext i8 %235 to i32
  %237 = icmp eq i32 %236, 1
  br label %238

238:                                              ; preds = %234, %230
  %239 = phi i1 [ true, %230 ], [ %237, %234 ]
  %240 = xor i1 %239, true
  %241 = zext i1 %240 to i32
  %242 = sext i32 %241 to i64
  %243 = call i64 @llvm.expect.i64(i64 %242, i64 0)
  %244 = icmp ne i64 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %238
  unreachable

246:                                              ; preds = %238
  br label %247

247:                                              ; preds = %246
  br label %248

248:                                              ; preds = %247
  br label %249

249:                                              ; preds = %248
  %250 = load i32, i32* %14, align 4
  %251 = load i32, i32* %11, align 4
  %252 = icmp sgt i32 %250, %251
  br i1 %252, label %257, label %253

253:                                              ; preds = %249
  %254 = load i8, i8* %20, align 1
  %255 = zext i8 %254 to i32
  %256 = icmp eq i32 %255, 0
  br label %257

257:                                              ; preds = %253, %249
  %258 = phi i1 [ true, %249 ], [ %256, %253 ]
  %259 = xor i1 %258, true
  %260 = zext i1 %259 to i32
  %261 = sext i32 %260 to i64
  %262 = call i64 @llvm.expect.i64(i64 %261, i64 0)
  %263 = icmp ne i64 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %257
  unreachable

265:                                              ; preds = %257
  br label %266

266:                                              ; preds = %265
  br label %267

267:                                              ; preds = %266
  %268 = load i8, i8* %20, align 1
  %269 = icmp ne i8 %268, 0
  br i1 %269, label %270, label %282

270:                                              ; preds = %267
  %271 = load i32, i32* %14, align 4
  %272 = load i32, i32* %13, align 4
  %273 = icmp sgt i32 %271, %272
  %274 = xor i1 %273, true
  %275 = xor i1 %274, true
  %276 = zext i1 %275 to i32
  %277 = sext i32 %276 to i64
  %278 = call i64 @llvm.expect.i64(i64 %277, i64 0)
  %279 = icmp ne i64 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %270
  br label %299

281:                                              ; preds = %270
  br label %282

282:                                              ; preds = %281, %267
  %283 = load %3*, %3** %15, align 8
  %284 = getelementptr inbounds %3, %3* %283, i32 1
  store %3* %284, %3** %15, align 8
  %285 = load %3*, %3** %15, align 8
  store %3* %285, %3** %16, align 8
  %286 = load %3*, %3** %16, align 8
  %287 = call i32 @149(%3* %286, i64* %9, i8* %19, i32 0, i32 0)
  %288 = icmp ne i32 %287, 0
  %289 = xor i1 %288, true
  %290 = xor i1 %289, true
  %291 = xor i1 %290, true
  %292 = zext i1 %291 to i32
  %293 = sext i32 %292 to i64
  %294 = call i64 @llvm.expect.i64(i64 %293, i64 0)
  %295 = icmp ne i64 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %282
  store i32 0, i32* %17, align 4
  store i32 4, i32* %21, align 4
  br label %299

297:                                              ; preds = %282
  br label %298

298:                                              ; preds = %297
  br label %299

299:                                              ; preds = %298, %296, %280, %226, %210, %156, %140, %80
  %300 = load i32, i32* %21, align 4
  %301 = icmp ne i32 %300, 0
  %302 = xor i1 %301, true
  %303 = xor i1 %302, true
  %304 = zext i1 %303 to i32
  %305 = sext i32 %304 to i64
  %306 = call i64 @llvm.expect.i64(i64 %305, i64 0)
  %307 = icmp ne i64 %306, 0
  br i1 %307, label %308, label %331

308:                                              ; preds = %299
  %309 = load i32, i32* %21, align 4
  %310 = icmp eq i32 %309, 2
  br i1 %310, label %311, label %314

311:                                              ; preds = %308
  %312 = load i32, i32* %14, align 4
  %313 = load i8*, i8** %18, align 8
  call void @zend_wrong_callback_error(i8 zeroext 0, i32 2, i32 %312, i8* %313)
  br label %330

314:                                              ; preds = %308
  %315 = load i32, i32* %21, align 4
  %316 = icmp eq i32 %315, 3
  br i1 %316, label %317, label %321

317:                                              ; preds = %314
  %318 = load i32, i32* %14, align 4
  %319 = load i8*, i8** %18, align 8
  %320 = load %3*, %3** %16, align 8
  call void @zend_wrong_parameter_class_error(i8 zeroext 0, i32 %318, i8* %319, %3* %320)
  br label %329

321:                                              ; preds = %314
  %322 = load i32, i32* %21, align 4
  %323 = icmp eq i32 %322, 4
  br i1 %323, label %324, label %328

324:                                              ; preds = %321
  %325 = load i32, i32* %14, align 4
  %326 = load i32, i32* %17, align 4
  %327 = load %3*, %3** %16, align 8
  call void @zend_wrong_parameter_type_error(i8 zeroext 0, i32 %325, i32 %326, %3* %327)
  br label %328

328:                                              ; preds = %324, %321
  br label %329

329:                                              ; preds = %328, %317
  br label %330

330:                                              ; preds = %329, %311
  store i32 1, i32* %22, align 4
  br label %332

331:                                              ; preds = %299
  store i32 0, i32* %22, align 4
  br label %332

332:                                              ; preds = %331, %330
  %333 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %333) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %20) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #11
  %334 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %334) #11
  %335 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %335) #11
  %336 = bitcast %3** %16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %336) #11
  %337 = bitcast %3** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %337) #11
  %338 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %338) #11
  %339 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %339) #11
  %340 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %340) #11
  %341 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %341) #11
  %342 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %342) #11
  %343 = load i32, i32* %22, align 4
  switch i32 %343, label %382 [
    i32 0, label %344
  ]

344:                                              ; preds = %332
  br label %345

345:                                              ; preds = %344
  br label %346

346:                                              ; preds = %345
  %347 = load i64, i64* %8, align 8
  %348 = icmp uge i64 %347, 4096
  br i1 %348, label %349, label %356

349:                                              ; preds = %346
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @137, i32 0, i32 0), i32 4096)
  br label %350

350:                                              ; preds = %349
  %351 = load %3*, %3** %4, align 8
  %352 = getelementptr inbounds %3, %3* %351, i32 0, i32 1
  %353 = bitcast %5* %352 to i32*
  store i32 2, i32* %353, align 8
  br label %354

354:                                              ; preds = %350
  br label %355

355:                                              ; preds = %354
  store i32 1, i32* %22, align 4
  br label %382

356:                                              ; preds = %346
  %357 = load i64, i64* %7, align 8
  %358 = icmp uge i64 %357, 4096
  br i1 %358, label %359, label %366

359:                                              ; preds = %356
  call void (i8*, i32, i8*, ...) @php_error_docref0(i8* null, i32 2, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @138, i32 0, i32 0), i32 4096)
  br label %360

360:                                              ; preds = %359
  %361 = load %3*, %3** %4, align 8
  %362 = getelementptr inbounds %3, %3* %361, i32 0, i32 1
  %363 = bitcast %5* %362 to i32*
  store i32 2, i32* %363, align 8
  br label %364

364:                                              ; preds = %360
  br label %365

365:                                              ; preds = %364
  store i32 1, i32* %22, align 4
  br label %382

366:                                              ; preds = %356
  br label %367

367:                                              ; preds = %366
  %368 = load i8*, i8** %5, align 8
  %369 = load i8*, i8** %6, align 8
  %370 = load i64, i64* %9, align 8
  %371 = trunc i64 %370 to i32
  %372 = call i32 @fnmatch(i8* %368, i8* %369, i32 %371)
  %373 = icmp ne i32 %372, 0
  %374 = xor i1 %373, true
  %375 = zext i1 %374 to i64
  %376 = select i1 %374, i32 3, i32 2
  %377 = load %3*, %3** %4, align 8
  %378 = getelementptr inbounds %3, %3* %377, i32 0, i32 1
  %379 = bitcast %5* %378 to i32*
  store i32 %376, i32* %379, align 8
  br label %380

380:                                              ; preds = %367
  br label %381

381:                                              ; preds = %380
  store i32 1, i32* %22, align 4
  br label %382

382:                                              ; preds = %381, %365, %355, %332
  %383 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %383) #11
  %384 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %384) #11
  %385 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %385) #11
  %386 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %386) #11
  %387 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %387) #11
  ret void
}

declare dso_local i32 @fnmatch(i8*, i8*, i32) #1

; Function Attrs: nounwind uwtable
define hidden void @zif_sys_get_temp_dir(%28* %0, %3* %1) #0 {
  %3 = alloca %28*, align 8
  %4 = alloca %3*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %3*, align 8
  %7 = alloca %13*, align 8
  store %28* %0, %28** %3, align 8
  store %3* %1, %3** %4, align 8
  %8 = load %28*, %28** %3, align 8
  %9 = getelementptr inbounds %28, %28* %8, i32 0, i32 4
  %10 = getelementptr inbounds %3, %3* %9, i32 0, i32 2
  %11 = bitcast %6* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = call i64 @llvm.expect.i64(i64 %17, i64 1)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %2
  br label %28

21:                                               ; preds = %2
  %22 = load %28*, %28** %3, align 8
  %23 = getelementptr inbounds %28, %28* %22, i32 0, i32 4
  %24 = getelementptr inbounds %3, %3* %23, i32 0, i32 2
  %25 = bitcast %6* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = call i32 (i32, i8*, ...) @zend_parse_parameters(i32 %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @85, i32 0, i32 0))
  br label %28

28:                                               ; preds = %21, %20
  %29 = phi i32 [ 0, %20 ], [ %27, %21 ]
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  br label %60

32:                                               ; preds = %28
  br label %33

33:                                               ; preds = %32
  %34 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #11
  %35 = call i8* @php_get_temporary_directory()
  store i8* %35, i8** %5, align 8
  br label %36

36:                                               ; preds = %33
  br label %37

37:                                               ; preds = %36
  %38 = bitcast %3** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #11
  %39 = load %3*, %3** %4, align 8
  store %3* %39, %3** %6, align 8
  %40 = bitcast %13** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %40) #11
  %41 = load i8*, i8** %5, align 8
  %42 = load i8*, i8** %5, align 8
  %43 = call i64 @strlen(i8* %42) #13
  %44 = call %13* @160(i8* %41, i64 %43, i32 0)
  store %13* %44, %13** %7, align 8
  %45 = load %13*, %13** %7, align 8
  %46 = load %3*, %3** %6, align 8
  %47 = getelementptr inbounds %3, %3* %46, i32 0, i32 0
  %48 = bitcast %4* %47 to %13**
  store %13* %45, %13** %48, align 8
  %49 = load %3*, %3** %6, align 8
  %50 = getelementptr inbounds %3, %3* %49, i32 0, i32 1
  %51 = bitcast %5* %50 to i32*
  store i32 5126, i32* %51, align 8
  %52 = bitcast %13** %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #11
  %53 = bitcast %3** %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #11
  br label %54

54:                                               ; preds = %37
  br label %55

55:                                               ; preds = %54
  br label %56

56:                                               ; preds = %55
  br label %57

57:                                               ; preds = %56
  %58 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #11
  br label %59

59:                                               ; preds = %57
  br label %60

60:                                               ; preds = %59, %31
  ret void
}

declare dso_local i8* @php_get_temporary_directory() #1

declare dso_local void @php_stream_context_free(%1*) #1

declare dso_local i32 @OnUpdateString(%16*, %13*, i8*, i8*, i8*, i32) #1

declare dso_local i32 @OnUpdateLong(%16*, %13*, i8*, i8*, i8*, i32) #1

declare dso_local i32 @OnUpdateBool(%16*, %13*, i8*, i8*, i8*, i32) #1

; Function Attrs: nounwind
declare dso_local void @free(i8*) #8

declare dso_local i32 @zend_parse_arg_long_cap_slow(%3*, i64*) #1

declare dso_local i32 @zend_parse_arg_long_slow(%3*, i64*) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @171(%3* %0, %13** %1, i32 %2) #4 {
  %4 = alloca i32, align 4
  %5 = alloca %3*, align 8
  %6 = alloca %13**, align 8
  %7 = alloca i32, align 4
  store %3* %0, %3** %5, align 8
  store %13** %1, %13*** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %3*, %3** %5, align 8
  %9 = load %13**, %13*** %6, align 8
  %10 = load i32, i32* %7, align 4
  %11 = call i32 @172(%3* %8, %13** %9, i32 %10)
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = load %13**, %13*** %6, align 8
  %15 = load %13*, %13** %14, align 8
  %16 = icmp ne %13* %15, null
  br i1 %16, label %17, label %35

17:                                               ; preds = %13
  %18 = load %13**, %13*** %6, align 8
  %19 = load %13*, %13** %18, align 8
  %20 = getelementptr inbounds %13, %13* %19, i32 0, i32 3
  %21 = getelementptr inbounds [1 x i8], [1 x i8]* %20, i32 0, i32 0
  %22 = call i64 @strlen(i8* %21) #13
  %23 = load %13**, %13*** %6, align 8
  %24 = load %13*, %13** %23, align 8
  %25 = getelementptr inbounds %13, %13* %24, i32 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = icmp ne i64 %22, %26
  %28 = xor i1 %27, true
  %29 = xor i1 %28, true
  %30 = zext i1 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = call i64 @llvm.expect.i64(i64 %31, i64 0)
  %33 = icmp ne i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %17, %3
  store i32 0, i32* %4, align 4
  br label %36

35:                                               ; preds = %17, %13
  store i32 1, i32* %4, align 4
  br label %36

36:                                               ; preds = %35, %34
  %37 = load i32, i32* %4, align 4
  ret i32 %37
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @172(%3* %0, %13** %1, i32 %2) #4 {
  %4 = alloca i32, align 4
  %5 = alloca %3*, align 8
  %6 = alloca %13**, align 8
  %7 = alloca i32, align 4
  store %3* %0, %3** %5, align 8
  store %13** %1, %13*** %6, align 8
  store i32 %2, i32* %7, align 4
  %8 = load %3*, %3** %5, align 8
  %9 = call zeroext i8 @150(%3* %8)
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 6
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = call i64 @llvm.expect.i64(i64 %15, i64 1)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %3
  %19 = load %3*, %3** %5, align 8
  %20 = getelementptr inbounds %3, %3* %19, i32 0, i32 0
  %21 = bitcast %4* %20 to %13**
  %22 = load %13*, %13** %21, align 8
  %23 = load %13**, %13*** %6, align 8
  store %13* %22, %13** %23, align 8
  br label %39

24:                                               ; preds = %3
  %25 = load i32, i32* %7, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = load %3*, %3** %5, align 8
  %29 = call zeroext i8 @150(%3* %28)
  %30 = zext i8 %29 to i32
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = load %13**, %13*** %6, align 8
  store %13* null, %13** %33, align 8
  br label %38

34:                                               ; preds = %27, %24
  %35 = load %3*, %3** %5, align 8
  %36 = load %13**, %13*** %6, align 8
  %37 = call i32 @zend_parse_arg_str_slow(%3* %35, %13** %36)
  store i32 %37, i32* %4, align 4
  br label %40

38:                                               ; preds = %32
  br label %39

39:                                               ; preds = %38, %18
  store i32 1, i32* %4, align 4
  br label %40

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %4, align 4
  ret i32 %41
}

declare dso_local i32 @zend_parse_arg_str_slow(%3*, %13**) #1

declare dso_local i32 @zend_parse_arg_bool_slow(%3*, i8*) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

declare dso_local i8* @zend_memnstr_ex(i8*, i8*, i64, i8*) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal %13* @173(%13* %0) #4 {
  %2 = alloca %13*, align 8
  store %13* %0, %13** %2, align 8
  %3 = load %13*, %13** %2, align 8
  %4 = getelementptr inbounds %13, %13* %3, i32 0, i32 0
  %5 = getelementptr inbounds %8, %8* %4, i32 0, i32 1
  %6 = bitcast %9* %5 to %67*
  %7 = getelementptr inbounds %67, %67* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = load %13*, %13** %2, align 8
  %14 = getelementptr inbounds %13, %13* %13, i32 0, i32 0
  %15 = getelementptr inbounds %8, %8* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 8
  br label %18

18:                                               ; preds = %12, %1
  %19 = load %13*, %13** %2, align 8
  ret %13* %19
}

declare dso_local %13* @_zval_get_string_func(%3*) #1

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @174(%3* %0) #4 {
  %2 = alloca %3*, align 8
  store %3* %0, %3** %2, align 8
  br label %3

3:                                                ; preds = %1
  %4 = load %3*, %3** %2, align 8
  %5 = getelementptr inbounds %3, %3* %4, i32 0, i32 1
  %6 = bitcast %5* %5 to %65*
  %7 = getelementptr inbounds %65, %65* %6, i32 0, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 4
  %11 = icmp ne i32 %10, 0
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i32
  %14 = sext i32 %13 to i64
  %15 = call i64 @llvm.expect.i64(i64 %14, i64 0)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  unreachable

18:                                               ; preds = %3
  br label %19

19:                                               ; preds = %18
  %20 = load %3*, %3** %2, align 8
  %21 = getelementptr inbounds %3, %3* %20, i32 0, i32 0
  %22 = bitcast %4* %21 to %68**
  %23 = load %68*, %68** %22, align 8
  %24 = getelementptr inbounds %68, %68* %23, i32 0, i32 0
  %25 = getelementptr inbounds %8, %8* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %25, align 4
  ret i32 %27
}

declare dso_local void @_zval_dtor_func(%68*) #1

; Function Attrs: allocsize(0)
declare dso_local noalias i8* @__zend_malloc(i64) #9

; Function Attrs: alwaysinline nounwind uwtable
define internal void @175(%13* %0) #4 {
  %2 = alloca %13*, align 8
  store %13* %0, %13** %2, align 8
  %3 = load %13*, %13** %2, align 8
  %4 = getelementptr inbounds %13, %13* %3, i32 0, i32 1
  store i64 0, i64* %4, align 8
  ret void
}

; Function Attrs: allocsize(1)
declare dso_local i8* @__zend_realloc(i8*, i64) #10

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @176(%52* %0, i64 %1, i8 zeroext %2) #4 {
  %4 = alloca %52*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  store %52* %0, %52** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8 %2, i8* %6, align 1
  %7 = load %52*, %52** %4, align 8
  %8 = getelementptr inbounds %52, %52* %7, i32 0, i32 0
  %9 = load %13*, %13** %8, align 8
  %10 = icmp ne %13* %9, null
  %11 = xor i1 %10, true
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = call i64 @llvm.expect.i64(i64 %15, i64 0)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %3
  br label %39

19:                                               ; preds = %3
  %20 = load %52*, %52** %4, align 8
  %21 = getelementptr inbounds %52, %52* %20, i32 0, i32 0
  %22 = load %13*, %13** %21, align 8
  %23 = getelementptr inbounds %13, %13* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %5, align 8
  %26 = add i64 %25, %24
  store i64 %26, i64* %5, align 8
  %27 = load i64, i64* %5, align 8
  %28 = load %52*, %52** %4, align 8
  %29 = getelementptr inbounds %52, %52* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp uge i64 %27, %30
  %32 = xor i1 %31, true
  %33 = xor i1 %32, true
  %34 = zext i1 %33 to i32
  %35 = sext i32 %34 to i64
  %36 = call i64 @llvm.expect.i64(i64 %35, i64 0)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %19
  br label %39

39:                                               ; preds = %38, %18
  %40 = load i8, i8* %6, align 1
  %41 = icmp ne i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = load %52*, %52** %4, align 8
  %44 = load i64, i64* %5, align 8
  call void @smart_str_realloc(%52* %43, i64 %44)
  br label %48

45:                                               ; preds = %39
  %46 = load %52*, %52** %4, align 8
  %47 = load i64, i64* %5, align 8
  call void @smart_str_erealloc(%52* %46, i64 %47)
  br label %48

48:                                               ; preds = %45, %42
  br label %49

49:                                               ; preds = %48, %19
  br label %50

50:                                               ; preds = %49
  %51 = load i64, i64* %5, align 8
  ret i64 %51
}

declare dso_local void @smart_str_realloc(%52*, i64) #1

declare dso_local void @smart_str_erealloc(%52*, i64) #1

declare dso_local i64 @_zval_get_long_func(%3*) #1

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind readnone willreturn }
attributes #4 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn writeonly }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind readonly }
attributes #14 = { allocsize(0) }
attributes #15 = { allocsize(1) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
