; ModuleID = 'hash_gost-strip-renamed.bc'
source_filename = "/home/travis/build/orestisfl/compilation-database/build/php-src/ext/hash/hash_gost.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { void (i8*)*, void (i8*, i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i8*, i8*)*, i32, i32, i32, i8 }
%1 = type { [16 x i32], [2 x i32], i8, [32 x i8], [4 x [256 x i32]]* }

@0 = internal constant [4 x [256 x i32]] [[256 x i32] [i32 466944, i32 479232, i32 477184, i32 462848, i32 485376, i32 475136, i32 458752, i32 487424, i32 471040, i32 481280, i32 460800, i32 483328, i32 473088, i32 489472, i32 468992, i32 464896, i32 368640, i32 380928, i32 378880, i32 364544, i32 387072, i32 376832, i32 360448, i32 389120, i32 372736, i32 382976, i32 362496, i32 385024, i32 374784, i32 391168, i32 370688, i32 366592, i32 139264, i32 151552, i32 149504, i32 135168, i32 157696, i32 147456, i32 131072, i32 159744, i32 143360, i32 153600, i32 133120, i32 155648, i32 145408, i32 161792, i32 141312, i32 137216, i32 401408, i32 413696, i32 411648, i32 397312, i32 419840, i32 409600, i32 393216, i32 421888, i32 405504, i32 415744, i32 395264, i32 417792, i32 407552, i32 423936, i32 403456, i32 399360, i32 204800, i32 217088, i32 215040, i32 200704, i32 223232, i32 212992, i32 196608, i32 225280, i32 208896, i32 219136, i32 198656, i32 221184, i32 210944, i32 227328, i32 206848, i32 202752, i32 434176, i32 446464, i32 444416, i32 430080, i32 452608, i32 442368, i32 425984, i32 454656, i32 438272, i32 448512, i32 428032, i32 450560, i32 440320, i32 456704, i32 436224, i32 432128, i32 499712, i32 512000, i32 509952, i32 495616, i32 518144, i32 507904, i32 491520, i32 520192, i32 503808, i32 514048, i32 493568, i32 516096, i32 505856, i32 522240, i32 501760, i32 497664, i32 335872, i32 348160, i32 346112, i32 331776, i32 354304, i32 344064, i32 327680, i32 356352, i32 339968, i32 350208, i32 329728, i32 352256, i32 342016, i32 358400, i32 337920, i32 333824, i32 73728, i32 86016, i32 83968, i32 69632, i32 92160, i32 81920, i32 65536, i32 94208, i32 77824, i32 88064, i32 67584, i32 90112, i32 79872, i32 96256, i32 75776, i32 71680, i32 106496, i32 118784, i32 116736, i32 102400, i32 124928, i32 114688, i32 98304, i32 126976, i32 110592, i32 120832, i32 100352, i32 122880, i32 112640, i32 129024, i32 108544, i32 104448, i32 270336, i32 282624, i32 280576, i32 266240, i32 288768, i32 278528, i32 262144, i32 290816, i32 274432, i32 284672, i32 264192, i32 286720, i32 276480, i32 292864, i32 272384, i32 268288, i32 40960, i32 53248, i32 51200, i32 36864, i32 59392, i32 49152, i32 32768, i32 61440, i32 45056, i32 55296, i32 34816, i32 57344, i32 47104, i32 63488, i32 43008, i32 38912, i32 8192, i32 20480, i32 18432, i32 4096, i32 26624, i32 16384, i32 0, i32 28672, i32 12288, i32 22528, i32 2048, i32 24576, i32 14336, i32 30720, i32 10240, i32 6144, i32 237568, i32 249856, i32 247808, i32 233472, i32 256000, i32 245760, i32 229376, i32 258048, i32 241664, i32 251904, i32 231424, i32 253952, i32 243712, i32 260096, i32 239616, i32 235520, i32 172032, i32 184320, i32 182272, i32 167936, i32 190464, i32 180224, i32 163840, i32 192512, i32 176128, i32 186368, i32 165888, i32 188416, i32 178176, i32 194560, i32 174080, i32 169984, i32 303104, i32 315392, i32 313344, i32 299008, i32 321536, i32 311296, i32 294912, i32 323584, i32 307200, i32 317440, i32 296960, i32 319488, i32 309248, i32 325632, i32 305152, i32 301056], [256 x i32] [i32 61341696, i32 62914560, i32 59244544, i32 65536000, i32 63963136, i32 60293120, i32 60817408, i32 59768832, i32 66060288, i32 66584576, i32 65011712, i32 62390272, i32 61865984, i32 58720256, i32 63438848, i32 64487424, i32 111673344, i32 113246208, i32 109576192, i32 115867648, i32 114294784, i32 110624768, i32 111149056, i32 110100480, i32 116391936, i32 116916224, i32 115343360, i32 112721920, i32 112197632, i32 109051904, i32 113770496, i32 114819072, i32 86507520, i32 88080384, i32 84410368, i32 90701824, i32 89128960, i32 85458944, i32 85983232, i32 84934656, i32 91226112, i32 91750400, i32 90177536, i32 87556096, i32 87031808, i32 83886080, i32 88604672, i32 89653248, i32 11010048, i32 12582912, i32 8912896, i32 15204352, i32 13631488, i32 9961472, i32 10485760, i32 9437184, i32 15728640, i32 16252928, i32 14680064, i32 12058624, i32 11534336, i32 8388608, i32 13107200, i32 14155776, i32 2621440, i32 4194304, i32 524288, i32 6815744, i32 5242880, i32 1572864, i32 2097152, i32 1048576, i32 7340032, i32 7864320, i32 6291456, i32 3670016, i32 3145728, i32 0, i32 4718592, i32 5767168, i32 69730304, i32 71303168, i32 67633152, i32 73924608, i32 72351744, i32 68681728, i32 69206016, i32 68157440, i32 74448896, i32 74973184, i32 73400320, i32 70778880, i32 70254592, i32 67108864, i32 71827456, i32 72876032, i32 78118912, i32 79691776, i32 76021760, i32 82313216, i32 80740352, i32 77070336, i32 77594624, i32 76546048, i32 82837504, i32 83361792, i32 81788928, i32 79167488, i32 78643200, i32 75497472, i32 80216064, i32 81264640, i32 128450560, i32 130023424, i32 126353408, i32 132644864, i32 131072000, i32 127401984, i32 127926272, i32 126877696, i32 133169152, i32 133693440, i32 132120576, i32 129499136, i32 128974848, i32 125829120, i32 130547712, i32 131596288, i32 120061952, i32 121634816, i32 117964800, i32 124256256, i32 122683392, i32 119013376, i32 119537664, i32 118489088, i32 124780544, i32 125304832, i32 123731968, i32 121110528, i32 120586240, i32 117440512, i32 122159104, i32 123207680, i32 36175872, i32 37748736, i32 34078720, i32 40370176, i32 38797312, i32 35127296, i32 35651584, i32 34603008, i32 40894464, i32 41418752, i32 39845888, i32 37224448, i32 36700160, i32 33554432, i32 38273024, i32 39321600, i32 52953088, i32 54525952, i32 50855936, i32 57147392, i32 55574528, i32 51904512, i32 52428800, i32 51380224, i32 57671680, i32 58195968, i32 56623104, i32 54001664, i32 53477376, i32 50331648, i32 55050240, i32 56098816, i32 103284736, i32 104857600, i32 101187584, i32 107479040, i32 105906176, i32 102236160, i32 102760448, i32 101711872, i32 108003328, i32 108527616, i32 106954752, i32 104333312, i32 103809024, i32 100663296, i32 105381888, i32 106430464, i32 94896128, i32 96468992, i32 92798976, i32 99090432, i32 97517568, i32 93847552, i32 94371840, i32 93323264, i32 99614720, i32 100139008, i32 98566144, i32 95944704, i32 95420416, i32 92274688, i32 96993280, i32 98041856, i32 19398656, i32 20971520, i32 17301504, i32 23592960, i32 22020096, i32 18350080, i32 18874368, i32 17825792, i32 24117248, i32 24641536, i32 23068672, i32 20447232, i32 19922944, i32 16777216, i32 21495808, i32 22544384, i32 44564480, i32 46137344, i32 42467328, i32 48758784, i32 47185920, i32 43515904, i32 44040192, i32 42991616, i32 49283072, i32 49807360, i32 48234496, i32 45613056, i32 45088768, i32 41943040, i32 46661632, i32 47710208, i32 27787264, i32 29360128, i32 25690112, i32 31981568, i32 30408704, i32 26738688, i32 27262976, i32 26214400, i32 32505856, i32 33030144, i32 31457280, i32 28835840, i32 28311552, i32 25165824, i32 29884416, i32 30932992], [256 x i32] [i32 805306370, i32 1610612738, i32 939524098, i32 134217730, i32 671088642, i32 2013265922, i32 1744830466, i32 1073741826, i32 536870914, i32 1342177282, i32 1207959554, i32 1879048194, i32 2, i32 402653186, i32 1476395010, i32 268435458, i32 -1342177275, i32 -536870907, i32 -1207959547, i32 -2013265915, i32 -1476395003, i32 -134217723, i32 -402653179, i32 -1073741819, i32 -1610612731, i32 -805306363, i32 -939524091, i32 -268435451, i32 -2147483643, i32 -1744830459, i32 -671088635, i32 -1879048187, i32 805306373, i32 1610612741, i32 939524101, i32 134217733, i32 671088645, i32 2013265925, i32 1744830469, i32 1073741829, i32 536870917, i32 1342177285, i32 1207959557, i32 1879048197, i32 5, i32 402653189, i32 1476395013, i32 268435461, i32 805306368, i32 1610612736, i32 939524096, i32 134217728, i32 671088640, i32 2013265920, i32 1744830464, i32 1073741824, i32 536870912, i32 1342177280, i32 1207959552, i32 1879048192, i32 0, i32 402653184, i32 1476395008, i32 268435456, i32 -1342177277, i32 -536870909, i32 -1207959549, i32 -2013265917, i32 -1476395005, i32 -134217725, i32 -402653181, i32 -1073741821, i32 -1610612733, i32 -805306365, i32 -939524093, i32 -268435453, i32 -2147483645, i32 -1744830461, i32 -671088637, i32 -1879048189, i32 805306369, i32 1610612737, i32 939524097, i32 134217729, i32 671088641, i32 2013265921, i32 1744830465, i32 1073741825, i32 536870913, i32 1342177281, i32 1207959553, i32 1879048193, i32 1, i32 402653185, i32 1476395009, i32 268435457, i32 -1342177280, i32 -536870912, i32 -1207959552, i32 -2013265920, i32 -1476395008, i32 -134217728, i32 -402653184, i32 -1073741824, i32 -1610612736, i32 -805306368, i32 -939524096, i32 -268435456, i32 -2147483648, i32 -1744830464, i32 -671088640, i32 -1879048192, i32 -1342177274, i32 -536870906, i32 -1207959546, i32 -2013265914, i32 -1476395002, i32 -134217722, i32 -402653178, i32 -1073741818, i32 -1610612730, i32 -805306362, i32 -939524090, i32 -268435450, i32 -2147483642, i32 -1744830458, i32 -671088634, i32 -1879048186, i32 -1342177279, i32 -536870911, i32 -1207959551, i32 -2013265919, i32 -1476395007, i32 -134217727, i32 -402653183, i32 -1073741823, i32 -1610612735, i32 -805306367, i32 -939524095, i32 -268435455, i32 -2147483647, i32 -1744830463, i32 -671088639, i32 -1879048191, i32 805306371, i32 1610612739, i32 939524099, i32 134217731, i32 671088643, i32 2013265923, i32 1744830467, i32 1073741827, i32 536870915, i32 1342177283, i32 1207959555, i32 1879048195, i32 3, i32 402653187, i32 1476395011, i32 268435459, i32 805306372, i32 1610612740, i32 939524100, i32 134217732, i32 671088644, i32 2013265924, i32 1744830468, i32 1073741828, i32 536870916, i32 1342177284, i32 1207959556, i32 1879048196, i32 4, i32 402653188, i32 1476395012, i32 268435460, i32 -1342177278, i32 -536870910, i32 -1207959550, i32 -2013265918, i32 -1476395006, i32 -134217726, i32 -402653182, i32 -1073741822, i32 -1610612734, i32 -805306366, i32 -939524094, i32 -268435454, i32 -2147483646, i32 -1744830462, i32 -671088638, i32 -1879048190, i32 -1342177276, i32 -536870908, i32 -1207959548, i32 -2013265916, i32 -1476395004, i32 -134217724, i32 -402653180, i32 -1073741820, i32 -1610612732, i32 -805306364, i32 -939524092, i32 -268435452, i32 -2147483644, i32 -1744830460, i32 -671088636, i32 -1879048188, i32 805306374, i32 1610612742, i32 939524102, i32 134217734, i32 671088646, i32 2013265926, i32 1744830470, i32 1073741830, i32 536870918, i32 1342177286, i32 1207959558, i32 1879048198, i32 6, i32 402653190, i32 1476395014, i32 268435462, i32 -1342177273, i32 -536870905, i32 -1207959545, i32 -2013265913, i32 -1476395001, i32 -134217721, i32 -402653177, i32 -1073741817, i32 -1610612729, i32 -805306361, i32 -939524089, i32 -268435449, i32 -2147483641, i32 -1744830457, i32 -671088633, i32 -1879048185, i32 805306375, i32 1610612743, i32 939524103, i32 134217735, i32 671088647, i32 2013265927, i32 1744830471, i32 1073741831, i32 536870919, i32 1342177287, i32 1207959559, i32 1879048199, i32 7, i32 402653191, i32 1476395015, i32 268435463], [256 x i32] [i32 232, i32 216, i32 160, i32 136, i32 152, i32 248, i32 168, i32 200, i32 128, i32 208, i32 240, i32 184, i32 176, i32 192, i32 144, i32 224, i32 2024, i32 2008, i32 1952, i32 1928, i32 1944, i32 2040, i32 1960, i32 1992, i32 1920, i32 2000, i32 2032, i32 1976, i32 1968, i32 1984, i32 1936, i32 2016, i32 1768, i32 1752, i32 1696, i32 1672, i32 1688, i32 1784, i32 1704, i32 1736, i32 1664, i32 1744, i32 1776, i32 1720, i32 1712, i32 1728, i32 1680, i32 1760, i32 104, i32 88, i32 32, i32 8, i32 24, i32 120, i32 40, i32 72, i32 0, i32 80, i32 112, i32 56, i32 48, i32 64, i32 16, i32 96, i32 744, i32 728, i32 672, i32 648, i32 664, i32 760, i32 680, i32 712, i32 640, i32 720, i32 752, i32 696, i32 688, i32 704, i32 656, i32 736, i32 1000, i32 984, i32 928, i32 904, i32 920, i32 1016, i32 936, i32 968, i32 896, i32 976, i32 1008, i32 952, i32 944, i32 960, i32 912, i32 992, i32 1384, i32 1368, i32 1312, i32 1288, i32 1304, i32 1400, i32 1320, i32 1352, i32 1280, i32 1360, i32 1392, i32 1336, i32 1328, i32 1344, i32 1296, i32 1376, i32 616, i32 600, i32 544, i32 520, i32 536, i32 632, i32 552, i32 584, i32 512, i32 592, i32 624, i32 568, i32 560, i32 576, i32 528, i32 608, i32 1256, i32 1240, i32 1184, i32 1160, i32 1176, i32 1272, i32 1192, i32 1224, i32 1152, i32 1232, i32 1264, i32 1208, i32 1200, i32 1216, i32 1168, i32 1248, i32 360, i32 344, i32 288, i32 264, i32 280, i32 376, i32 296, i32 328, i32 256, i32 336, i32 368, i32 312, i32 304, i32 320, i32 272, i32 352, i32 488, i32 472, i32 416, i32 392, i32 408, i32 504, i32 424, i32 456, i32 384, i32 464, i32 496, i32 440, i32 432, i32 448, i32 400, i32 480, i32 1896, i32 1880, i32 1824, i32 1800, i32 1816, i32 1912, i32 1832, i32 1864, i32 1792, i32 1872, i32 1904, i32 1848, i32 1840, i32 1856, i32 1808, i32 1888, i32 872, i32 856, i32 800, i32 776, i32 792, i32 888, i32 808, i32 840, i32 768, i32 848, i32 880, i32 824, i32 816, i32 832, i32 784, i32 864, i32 1512, i32 1496, i32 1440, i32 1416, i32 1432, i32 1528, i32 1448, i32 1480, i32 1408, i32 1488, i32 1520, i32 1464, i32 1456, i32 1472, i32 1424, i32 1504, i32 1128, i32 1112, i32 1056, i32 1032, i32 1048, i32 1144, i32 1064, i32 1096, i32 1024, i32 1104, i32 1136, i32 1080, i32 1072, i32 1088, i32 1040, i32 1120, i32 1640, i32 1624, i32 1568, i32 1544, i32 1560, i32 1656, i32 1576, i32 1608, i32 1536, i32 1616, i32 1648, i32 1592, i32 1584, i32 1600, i32 1552, i32 1632]], align 16
@1 = internal constant [4 x [256 x i32]] [[256 x i32] [i32 184320, i32 172032, i32 174080, i32 176128, i32 180224, i32 165888, i32 169984, i32 178176, i32 190464, i32 188416, i32 192512, i32 163840, i32 182272, i32 167936, i32 186368, i32 194560, i32 512000, i32 499712, i32 501760, i32 503808, i32 507904, i32 493568, i32 497664, i32 505856, i32 518144, i32 516096, i32 520192, i32 491520, i32 509952, i32 495616, i32 514048, i32 522240, i32 151552, i32 139264, i32 141312, i32 143360, i32 147456, i32 133120, i32 137216, i32 145408, i32 157696, i32 155648, i32 159744, i32 131072, i32 149504, i32 135168, i32 153600, i32 161792, i32 20480, i32 8192, i32 10240, i32 12288, i32 16384, i32 2048, i32 6144, i32 14336, i32 26624, i32 24576, i32 28672, i32 0, i32 18432, i32 4096, i32 22528, i32 30720, i32 86016, i32 73728, i32 75776, i32 77824, i32 81920, i32 67584, i32 71680, i32 79872, i32 92160, i32 90112, i32 94208, i32 65536, i32 83968, i32 69632, i32 88064, i32 96256, i32 446464, i32 434176, i32 436224, i32 438272, i32 442368, i32 428032, i32 432128, i32 440320, i32 452608, i32 450560, i32 454656, i32 425984, i32 444416, i32 430080, i32 448512, i32 456704, i32 380928, i32 368640, i32 370688, i32 372736, i32 376832, i32 362496, i32 366592, i32 374784, i32 387072, i32 385024, i32 389120, i32 360448, i32 378880, i32 364544, i32 382976, i32 391168, i32 315392, i32 303104, i32 305152, i32 307200, i32 311296, i32 296960, i32 301056, i32 309248, i32 321536, i32 319488, i32 323584, i32 294912, i32 313344, i32 299008, i32 317440, i32 325632, i32 53248, i32 40960, i32 43008, i32 45056, i32 49152, i32 34816, i32 38912, i32 47104, i32 59392, i32 57344, i32 61440, i32 32768, i32 51200, i32 36864, i32 55296, i32 63488, i32 249856, i32 237568, i32 239616, i32 241664, i32 245760, i32 231424, i32 235520, i32 243712, i32 256000, i32 253952, i32 258048, i32 229376, i32 247808, i32 233472, i32 251904, i32 260096, i32 217088, i32 204800, i32 206848, i32 208896, i32 212992, i32 198656, i32 202752, i32 210944, i32 223232, i32 221184, i32 225280, i32 196608, i32 215040, i32 200704, i32 219136, i32 227328, i32 118784, i32 106496, i32 108544, i32 110592, i32 114688, i32 100352, i32 104448, i32 112640, i32 124928, i32 122880, i32 126976, i32 98304, i32 116736, i32 102400, i32 120832, i32 129024, i32 413696, i32 401408, i32 403456, i32 405504, i32 409600, i32 395264, i32 399360, i32 407552, i32 419840, i32 417792, i32 421888, i32 393216, i32 411648, i32 397312, i32 415744, i32 423936, i32 479232, i32 466944, i32 468992, i32 471040, i32 475136, i32 460800, i32 464896, i32 473088, i32 485376, i32 483328, i32 487424, i32 458752, i32 477184, i32 462848, i32 481280, i32 489472, i32 348160, i32 335872, i32 337920, i32 339968, i32 344064, i32 329728, i32 333824, i32 342016, i32 354304, i32 352256, i32 356352, i32 327680, i32 346112, i32 331776, i32 350208, i32 358400, i32 282624, i32 270336, i32 272384, i32 274432, i32 278528, i32 264192, i32 268288, i32 276480, i32 288768, i32 286720, i32 290816, i32 262144, i32 280576, i32 266240, i32 284672, i32 292864], [256 x i32] [i32 37224448, i32 41418752, i32 39845888, i32 40894464, i32 38273024, i32 35651584, i32 34078720, i32 33554432, i32 35127296, i32 39321600, i32 36175872, i32 34603008, i32 36700160, i32 38797312, i32 37748736, i32 40370176, i32 87556096, i32 91750400, i32 90177536, i32 91226112, i32 88604672, i32 85983232, i32 84410368, i32 83886080, i32 85458944, i32 89653248, i32 86507520, i32 84934656, i32 87031808, i32 89128960, i32 88080384, i32 90701824, i32 62390272, i32 66584576, i32 65011712, i32 66060288, i32 63438848, i32 60817408, i32 59244544, i32 58720256, i32 60293120, i32 64487424, i32 61341696, i32 59768832, i32 61865984, i32 63963136, i32 62914560, i32 65536000, i32 104333312, i32 108527616, i32 106954752, i32 108003328, i32 105381888, i32 102760448, i32 101187584, i32 100663296, i32 102236160, i32 106430464, i32 103284736, i32 101711872, i32 103809024, i32 105906176, i32 104857600, i32 107479040, i32 3670016, i32 7864320, i32 6291456, i32 7340032, i32 4718592, i32 2097152, i32 524288, i32 0, i32 1572864, i32 5767168, i32 2621440, i32 1048576, i32 3145728, i32 5242880, i32 4194304, i32 6815744, i32 129499136, i32 133693440, i32 132120576, i32 133169152, i32 130547712, i32 127926272, i32 126353408, i32 125829120, i32 127401984, i32 131596288, i32 128450560, i32 126877696, i32 128974848, i32 131072000, i32 130023424, i32 132644864, i32 20447232, i32 24641536, i32 23068672, i32 24117248, i32 21495808, i32 18874368, i32 17301504, i32 16777216, i32 18350080, i32 22544384, i32 19398656, i32 17825792, i32 19922944, i32 22020096, i32 20971520, i32 23592960, i32 70778880, i32 74973184, i32 73400320, i32 74448896, i32 71827456, i32 69206016, i32 67633152, i32 67108864, i32 68681728, i32 72876032, i32 69730304, i32 68157440, i32 70254592, i32 72351744, i32 71303168, i32 73924608, i32 121110528, i32 125304832, i32 123731968, i32 124780544, i32 122159104, i32 119537664, i32 117964800, i32 117440512, i32 119013376, i32 123207680, i32 120061952, i32 118489088, i32 120586240, i32 122683392, i32 121634816, i32 124256256, i32 12058624, i32 16252928, i32 14680064, i32 15728640, i32 13107200, i32 10485760, i32 8912896, i32 8388608, i32 9961472, i32 14155776, i32 11010048, i32 9437184, i32 11534336, i32 13631488, i32 12582912, i32 15204352, i32 54001664, i32 58195968, i32 56623104, i32 57671680, i32 55050240, i32 52428800, i32 50855936, i32 50331648, i32 51904512, i32 56098816, i32 52953088, i32 51380224, i32 53477376, i32 55574528, i32 54525952, i32 57147392, i32 45613056, i32 49807360, i32 48234496, i32 49283072, i32 46661632, i32 44040192, i32 42467328, i32 41943040, i32 43515904, i32 47710208, i32 44564480, i32 42991616, i32 45088768, i32 47185920, i32 46137344, i32 48758784, i32 112721920, i32 116916224, i32 115343360, i32 116391936, i32 113770496, i32 111149056, i32 109576192, i32 109051904, i32 110624768, i32 114819072, i32 111673344, i32 110100480, i32 112197632, i32 114294784, i32 113246208, i32 115867648, i32 95944704, i32 100139008, i32 98566144, i32 99614720, i32 96993280, i32 94371840, i32 92798976, i32 92274688, i32 93847552, i32 98041856, i32 94896128, i32 93323264, i32 95420416, i32 97517568, i32 96468992, i32 99090432, i32 79167488, i32 83361792, i32 81788928, i32 82837504, i32 80216064, i32 77594624, i32 76021760, i32 75497472, i32 77070336, i32 81264640, i32 78118912, i32 76546048, i32 78643200, i32 80740352, i32 79691776, i32 82313216, i32 28835840, i32 33030144, i32 31457280, i32 32505856, i32 29884416, i32 27262976, i32 25690112, i32 25165824, i32 26738688, i32 30932992, i32 27787264, i32 26214400, i32 28311552, i32 30408704, i32 29360128, i32 31981568], [256 x i32] [i32 -1207959549, i32 -1342177277, i32 -1610612733, i32 -671088637, i32 -939524093, i32 -536870909, i32 -1879048189, i32 -805306365, i32 -2013265917, i32 -1073741821, i32 -2147483645, i32 -268435453, i32 -134217725, i32 -402653181, i32 -1744830461, i32 -1476395005, i32 939524099, i32 805306371, i32 536870915, i32 1476395011, i32 1207959555, i32 1610612739, i32 268435459, i32 1342177283, i32 134217731, i32 1073741827, i32 3, i32 1879048195, i32 2013265923, i32 1744830467, i32 402653187, i32 671088643, i32 939524097, i32 805306369, i32 536870913, i32 1476395009, i32 1207959553, i32 1610612737, i32 268435457, i32 1342177281, i32 134217729, i32 1073741825, i32 1, i32 1879048193, i32 2013265921, i32 1744830465, i32 402653185, i32 671088641, i32 939524098, i32 805306370, i32 536870914, i32 1476395010, i32 1207959554, i32 1610612738, i32 268435458, i32 1342177282, i32 134217730, i32 1073741826, i32 2, i32 1879048194, i32 2013265922, i32 1744830466, i32 402653186, i32 671088642, i32 -1207959546, i32 -1342177274, i32 -1610612730, i32 -671088634, i32 -939524090, i32 -536870906, i32 -1879048186, i32 -805306362, i32 -2013265914, i32 -1073741818, i32 -2147483642, i32 -268435450, i32 -134217722, i32 -402653178, i32 -1744830458, i32 -1476395002, i32 -1207959548, i32 -1342177276, i32 -1610612732, i32 -671088636, i32 -939524092, i32 -536870908, i32 -1879048188, i32 -805306364, i32 -2013265916, i32 -1073741820, i32 -2147483644, i32 -268435452, i32 -134217724, i32 -402653180, i32 -1744830460, i32 -1476395004, i32 -1207959545, i32 -1342177273, i32 -1610612729, i32 -671088633, i32 -939524089, i32 -536870905, i32 -1879048185, i32 -805306361, i32 -2013265913, i32 -1073741817, i32 -2147483641, i32 -268435449, i32 -134217721, i32 -402653177, i32 -1744830457, i32 -1476395001, i32 939524096, i32 805306368, i32 536870912, i32 1476395008, i32 1207959552, i32 1610612736, i32 268435456, i32 1342177280, i32 134217728, i32 1073741824, i32 0, i32 1879048192, i32 2013265920, i32 1744830464, i32 402653184, i32 671088640, i32 939524101, i32 805306373, i32 536870917, i32 1476395013, i32 1207959557, i32 1610612741, i32 268435461, i32 1342177285, i32 134217733, i32 1073741829, i32 5, i32 1879048197, i32 2013265925, i32 1744830469, i32 402653189, i32 671088645, i32 -1207959552, i32 -1342177280, i32 -1610612736, i32 -671088640, i32 -939524096, i32 -536870912, i32 -1879048192, i32 -805306368, i32 -2013265920, i32 -1073741824, i32 -2147483648, i32 -268435456, i32 -134217728, i32 -402653184, i32 -1744830464, i32 -1476395008, i32 -1207959550, i32 -1342177278, i32 -1610612734, i32 -671088638, i32 -939524094, i32 -536870910, i32 -1879048190, i32 -805306366, i32 -2013265918, i32 -1073741822, i32 -2147483646, i32 -268435454, i32 -134217726, i32 -402653182, i32 -1744830462, i32 -1476395006, i32 -1207959547, i32 -1342177275, i32 -1610612731, i32 -671088635, i32 -939524091, i32 -536870907, i32 -1879048187, i32 -805306363, i32 -2013265915, i32 -1073741819, i32 -2147483643, i32 -268435451, i32 -134217723, i32 -402653179, i32 -1744830459, i32 -1476395003, i32 939524100, i32 805306372, i32 536870916, i32 1476395012, i32 1207959556, i32 1610612740, i32 268435460, i32 1342177284, i32 134217732, i32 1073741828, i32 4, i32 1879048196, i32 2013265924, i32 1744830468, i32 402653188, i32 671088644, i32 939524103, i32 805306375, i32 536870919, i32 1476395015, i32 1207959559, i32 1610612743, i32 268435463, i32 1342177287, i32 134217735, i32 1073741831, i32 7, i32 1879048199, i32 2013265927, i32 1744830471, i32 402653191, i32 671088647, i32 939524102, i32 805306374, i32 536870918, i32 1476395014, i32 1207959558, i32 1610612742, i32 268435462, i32 1342177286, i32 134217734, i32 1073741830, i32 6, i32 1879048198, i32 2013265926, i32 1744830470, i32 402653190, i32 671088646, i32 -1207959551, i32 -1342177279, i32 -1610612735, i32 -671088639, i32 -939524095, i32 -536870911, i32 -1879048191, i32 -805306367, i32 -2013265919, i32 -1073741823, i32 -2147483647, i32 -268435455, i32 -134217727, i32 -402653183, i32 -1744830463, i32 -1476395007], [256 x i32] [i32 232, i32 240, i32 160, i32 136, i32 184, i32 128, i32 168, i32 208, i32 152, i32 224, i32 192, i32 248, i32 176, i32 144, i32 200, i32 216, i32 488, i32 496, i32 416, i32 392, i32 440, i32 384, i32 424, i32 464, i32 408, i32 480, i32 448, i32 504, i32 432, i32 400, i32 456, i32 472, i32 1384, i32 1392, i32 1312, i32 1288, i32 1336, i32 1280, i32 1320, i32 1360, i32 1304, i32 1376, i32 1344, i32 1400, i32 1328, i32 1296, i32 1352, i32 1368, i32 1256, i32 1264, i32 1184, i32 1160, i32 1208, i32 1152, i32 1192, i32 1232, i32 1176, i32 1248, i32 1216, i32 1272, i32 1200, i32 1168, i32 1224, i32 1240, i32 744, i32 752, i32 672, i32 648, i32 696, i32 640, i32 680, i32 720, i32 664, i32 736, i32 704, i32 760, i32 688, i32 656, i32 712, i32 728, i32 1512, i32 1520, i32 1440, i32 1416, i32 1464, i32 1408, i32 1448, i32 1488, i32 1432, i32 1504, i32 1472, i32 1528, i32 1456, i32 1424, i32 1480, i32 1496, i32 616, i32 624, i32 544, i32 520, i32 568, i32 512, i32 552, i32 592, i32 536, i32 608, i32 576, i32 632, i32 560, i32 528, i32 584, i32 600, i32 2024, i32 2032, i32 1952, i32 1928, i32 1976, i32 1920, i32 1960, i32 2000, i32 1944, i32 2016, i32 1984, i32 2040, i32 1968, i32 1936, i32 1992, i32 2008, i32 1128, i32 1136, i32 1056, i32 1032, i32 1080, i32 1024, i32 1064, i32 1104, i32 1048, i32 1120, i32 1088, i32 1144, i32 1072, i32 1040, i32 1096, i32 1112, i32 872, i32 880, i32 800, i32 776, i32 824, i32 768, i32 808, i32 848, i32 792, i32 864, i32 832, i32 888, i32 816, i32 784, i32 840, i32 856, i32 1000, i32 1008, i32 928, i32 904, i32 952, i32 896, i32 936, i32 976, i32 920, i32 992, i32 960, i32 1016, i32 944, i32 912, i32 968, i32 984, i32 1896, i32 1904, i32 1824, i32 1800, i32 1848, i32 1792, i32 1832, i32 1872, i32 1816, i32 1888, i32 1856, i32 1912, i32 1840, i32 1808, i32 1864, i32 1880, i32 1768, i32 1776, i32 1696, i32 1672, i32 1720, i32 1664, i32 1704, i32 1744, i32 1688, i32 1760, i32 1728, i32 1784, i32 1712, i32 1680, i32 1736, i32 1752, i32 104, i32 112, i32 32, i32 8, i32 56, i32 0, i32 40, i32 80, i32 24, i32 96, i32 64, i32 120, i32 48, i32 16, i32 72, i32 88, i32 360, i32 368, i32 288, i32 264, i32 312, i32 256, i32 296, i32 336, i32 280, i32 352, i32 320, i32 376, i32 304, i32 272, i32 328, i32 344, i32 1640, i32 1648, i32 1568, i32 1544, i32 1592, i32 1536, i32 1576, i32 1616, i32 1560, i32 1632, i32 1600, i32 1656, i32 1584, i32 1552, i32 1608, i32 1624]], align 16
@php_hash_gost_ops = hidden constant %0 { void (i8*)* bitcast (void (%1*)* @PHP_GOSTInit to void (i8*)*), void (i8*, i8*, i32)* bitcast (void (%1*, i8*, i64)* @PHP_GOSTUpdate to void (i8*, i8*, i32)*), void (i8*, i8*)* bitcast (void (i8*, %1*)* @PHP_GOSTFinal to void (i8*, i8*)*), i32 (i8*, i8*, i8*)* @php_hash_copy, i32 32, i32 32, i32 120, i8 1 }, align 8
@php_hash_gost_crypto_ops = hidden constant %0 { void (i8*)* bitcast (void (%1*)* @PHP_GOSTInitCrypto to void (i8*)*), void (i8*, i8*, i32)* bitcast (void (%1*, i8*, i64)* @PHP_GOSTUpdate to void (i8*, i8*, i32)*), void (i8*, i8*)* bitcast (void (i8*, %1*)* @PHP_GOSTFinal to void (i8*, i8*)*), i32 (i8*, i8*, i8*)* @php_hash_copy, i32 32, i32 32, i32 120, i8 1 }, align 8

; Function Attrs: nounwind uwtable
define dso_local void @PHP_GOSTInit(%1* %0) #0 {
  %2 = alloca %1*, align 8
  store %1* %0, %1** %2, align 8
  %3 = load %1*, %1** %2, align 8
  %4 = bitcast %1* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 120, i1 false)
  %5 = load %1*, %1** %2, align 8
  %6 = getelementptr inbounds %1, %1* %5, i32 0, i32 4
  store [4 x [256 x i32]]* @0, [4 x [256 x i32]]** %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind uwtable
define dso_local void @PHP_GOSTInitCrypto(%1* %0) #0 {
  %2 = alloca %1*, align 8
  store %1* %0, %1** %2, align 8
  %3 = load %1*, %1** %2, align 8
  call void @PHP_GOSTInit(%1* %3)
  %4 = load %1*, %1** %2, align 8
  %5 = getelementptr inbounds %1, %1* %4, i32 0, i32 4
  store [4 x [256 x i32]]* @1, [4 x [256 x i32]]** %5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @PHP_GOSTUpdate(%1* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %1*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %1* %0, %1** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load %1*, %1** %4, align 8
  %10 = getelementptr inbounds %1, %1* %9, i32 0, i32 1
  %11 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 0
  %12 = load i32, i32* %11, align 8
  %13 = sub i32 -1, %12
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %6, align 8
  %16 = mul i64 %15, 8
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %18, label %44

18:                                               ; preds = %3
  %19 = load %1*, %1** %4, align 8
  %20 = getelementptr inbounds %1, %1* %19, i32 0, i32 1
  %21 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 0, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %21, align 4
  %24 = load %1*, %1** %4, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 1
  %26 = getelementptr inbounds [2 x i32], [2 x i32]* %25, i64 0, i64 0
  %27 = load i32, i32* %26, align 8
  %28 = sub i32 -1, %27
  %29 = load %1*, %1** %4, align 8
  %30 = getelementptr inbounds %1, %1* %29, i32 0, i32 1
  %31 = getelementptr inbounds [2 x i32], [2 x i32]* %30, i64 0, i64 0
  store i32 %28, i32* %31, align 8
  %32 = load i64, i64* %6, align 8
  %33 = mul i64 %32, 8
  %34 = load %1*, %1** %4, align 8
  %35 = getelementptr inbounds %1, %1* %34, i32 0, i32 1
  %36 = getelementptr inbounds [2 x i32], [2 x i32]* %35, i64 0, i64 0
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = sub i64 %33, %38
  %40 = trunc i64 %39 to i32
  %41 = load %1*, %1** %4, align 8
  %42 = getelementptr inbounds %1, %1* %41, i32 0, i32 1
  %43 = getelementptr inbounds [2 x i32], [2 x i32]* %42, i64 0, i64 0
  store i32 %40, i32* %43, align 8
  br label %54

44:                                               ; preds = %3
  %45 = load i64, i64* %6, align 8
  %46 = mul i64 %45, 8
  %47 = load %1*, %1** %4, align 8
  %48 = getelementptr inbounds %1, %1* %47, i32 0, i32 1
  %49 = getelementptr inbounds [2 x i32], [2 x i32]* %48, i64 0, i64 0
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = add i64 %51, %46
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %49, align 8
  br label %54

54:                                               ; preds = %44, %18
  %55 = load %1*, %1** %4, align 8
  %56 = getelementptr inbounds %1, %1* %55, i32 0, i32 2
  %57 = load i8, i8* %56, align 8
  %58 = zext i8 %57 to i64
  %59 = load i64, i64* %6, align 8
  %60 = add i64 %58, %59
  %61 = icmp ult i64 %60, 32
  br i1 %61, label %62, label %79

62:                                               ; preds = %54
  %63 = load %1*, %1** %4, align 8
  %64 = getelementptr inbounds %1, %1* %63, i32 0, i32 3
  %65 = load %1*, %1** %4, align 8
  %66 = getelementptr inbounds %1, %1* %65, i32 0, i32 2
  %67 = load i8, i8* %66, align 8
  %68 = zext i8 %67 to i64
  %69 = getelementptr inbounds [32 x i8], [32 x i8]* %64, i64 0, i64 %68
  %70 = load i8*, i8** %5, align 8
  %71 = load i64, i64* %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %70, i64 %71, i1 false)
  %72 = load i64, i64* %6, align 8
  %73 = load %1*, %1** %4, align 8
  %74 = getelementptr inbounds %1, %1* %73, i32 0, i32 2
  %75 = load i8, i8* %74, align 8
  %76 = zext i8 %75 to i64
  %77 = add i64 %76, %72
  %78 = trunc i64 %77 to i8
  store i8 %78, i8* %74, align 8
  br label %147

79:                                               ; preds = %54
  %80 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %80) #6
  store i64 0, i64* %7, align 8
  %81 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %81) #6
  %82 = load %1*, %1** %4, align 8
  %83 = getelementptr inbounds %1, %1* %82, i32 0, i32 2
  %84 = load i8, i8* %83, align 8
  %85 = zext i8 %84 to i64
  %86 = load i64, i64* %6, align 8
  %87 = add i64 %85, %86
  %88 = urem i64 %87, 32
  store i64 %88, i64* %8, align 8
  %89 = load %1*, %1** %4, align 8
  %90 = getelementptr inbounds %1, %1* %89, i32 0, i32 2
  %91 = load i8, i8* %90, align 8
  %92 = icmp ne i8 %91, 0
  br i1 %92, label %93, label %113

93:                                               ; preds = %79
  %94 = load %1*, %1** %4, align 8
  %95 = getelementptr inbounds %1, %1* %94, i32 0, i32 2
  %96 = load i8, i8* %95, align 8
  %97 = zext i8 %96 to i32
  %98 = sub nsw i32 32, %97
  %99 = sext i32 %98 to i64
  store i64 %99, i64* %7, align 8
  %100 = load %1*, %1** %4, align 8
  %101 = getelementptr inbounds %1, %1* %100, i32 0, i32 3
  %102 = load %1*, %1** %4, align 8
  %103 = getelementptr inbounds %1, %1* %102, i32 0, i32 2
  %104 = load i8, i8* %103, align 8
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [32 x i8], [32 x i8]* %101, i64 0, i64 %105
  %107 = load i8*, i8** %5, align 8
  %108 = load i64, i64* %7, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 1 %107, i64 %108, i1 false)
  %109 = load %1*, %1** %4, align 8
  %110 = load %1*, %1** %4, align 8
  %111 = getelementptr inbounds %1, %1* %110, i32 0, i32 3
  %112 = getelementptr inbounds [32 x i8], [32 x i8]* %111, i32 0, i32 0
  call void @2(%1* %109, i8* %112)
  br label %113

113:                                              ; preds = %93, %79
  br label %114

114:                                              ; preds = %124, %113
  %115 = load i64, i64* %7, align 8
  %116 = add i64 %115, 32
  %117 = load i64, i64* %6, align 8
  %118 = icmp ule i64 %116, %117
  br i1 %118, label %119, label %127

119:                                              ; preds = %114
  %120 = load %1*, %1** %4, align 8
  %121 = load i8*, i8** %5, align 8
  %122 = load i64, i64* %7, align 8
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  call void @2(%1* %120, i8* %123)
  br label %124

124:                                              ; preds = %119
  %125 = load i64, i64* %7, align 8
  %126 = add i64 %125, 32
  store i64 %126, i64* %7, align 8
  br label %114

127:                                              ; preds = %114
  %128 = load %1*, %1** %4, align 8
  %129 = getelementptr inbounds %1, %1* %128, i32 0, i32 3
  %130 = getelementptr inbounds [32 x i8], [32 x i8]* %129, i32 0, i32 0
  %131 = load i8*, i8** %5, align 8
  %132 = load i64, i64* %7, align 8
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  %134 = load i64, i64* %8, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %130, i8* align 1 %133, i64 %134, i1 false)
  %135 = load %1*, %1** %4, align 8
  %136 = getelementptr inbounds %1, %1* %135, i32 0, i32 3
  %137 = load i64, i64* %8, align 8
  %138 = getelementptr inbounds [32 x i8], [32 x i8]* %136, i64 0, i64 %137
  %139 = load i64, i64* %8, align 8
  %140 = sub i64 32, %139
  call void @explicit_bzero(i8* %138, i64 %140) #6
  %141 = load i64, i64* %8, align 8
  %142 = trunc i64 %141 to i8
  %143 = load %1*, %1** %4, align 8
  %144 = getelementptr inbounds %1, %1* %143, i32 0, i32 2
  store i8 %142, i8* %144, align 8
  %145 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %145) #6
  %146 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %146) #6
  br label %147

147:                                              ; preds = %127, %62
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @2(%1* %0, i8* %1) #3 {
  %3 = alloca %1*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [8 x i32], align 16
  %8 = alloca i32, align 4
  store %1* %0, %1** %3, align 8
  store i8* %1, i8** %4, align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #6
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #6
  %11 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %11) #6
  %12 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #6
  store i32 0, i32* %8, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %13

13:                                               ; preds = %100, %2
  %14 = load i32, i32* %5, align 4
  %15 = icmp slt i32 %14, 8
  br i1 %15, label %16, label %105

16:                                               ; preds = %13
  %17 = load i8*, i8** %4, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = load i8*, i8** %4, align 8
  %24 = load i32, i32* %6, align 4
  %25 = add nsw i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl i32 %29, 8
  %31 = or i32 %22, %30
  %32 = load i8*, i8** %4, align 8
  %33 = load i32, i32* %6, align 4
  %34 = add nsw i32 %33, 2
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = shl i32 %38, 16
  %40 = or i32 %31, %39
  %41 = load i8*, i8** %4, align 8
  %42 = load i32, i32* %6, align 4
  %43 = add nsw i32 %42, 3
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %41, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl i32 %47, 24
  %49 = or i32 %40, %48
  %50 = load i32, i32* %5, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 %51
  store i32 %49, i32* %52, align 4
  %53 = load i32, i32* %5, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %8, align 4
  %58 = add i32 %56, %57
  %59 = load %1*, %1** %3, align 8
  %60 = getelementptr inbounds %1, %1* %59, i32 0, i32 0
  %61 = load i32, i32* %5, align 4
  %62 = add nsw i32 %61, 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [16 x i32], [16 x i32]* %60, i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = add i32 %65, %58
  store i32 %66, i32* %64, align 4
  %67 = load %1*, %1** %3, align 8
  %68 = getelementptr inbounds %1, %1* %67, i32 0, i32 0
  %69 = load i32, i32* %5, align 4
  %70 = add nsw i32 %69, 8
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [16 x i32], [16 x i32]* %68, i64 0, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* %5, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = icmp ult i32 %73, %77
  br i1 %78, label %79, label %80

79:                                               ; preds = %16
  br label %98

80:                                               ; preds = %16
  %81 = load %1*, %1** %3, align 8
  %82 = getelementptr inbounds %1, %1* %81, i32 0, i32 0
  %83 = load i32, i32* %5, align 4
  %84 = add nsw i32 %83, 8
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [16 x i32], [16 x i32]* %82, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %5, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %87, %91
  br i1 %92, label %93, label %95

93:                                               ; preds = %80
  %94 = load i32, i32* %8, align 4
  br label %96

95:                                               ; preds = %80
  br label %96

96:                                               ; preds = %95, %93
  %97 = phi i32 [ %94, %93 ], [ 0, %95 ]
  br label %98

98:                                               ; preds = %96, %79
  %99 = phi i32 [ 1, %79 ], [ %97, %96 ]
  store i32 %99, i32* %8, align 4
  br label %100

100:                                              ; preds = %98
  %101 = load i32, i32* %5, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %5, align 4
  %103 = load i32, i32* %6, align 4
  %104 = add nsw i32 %103, 4
  store i32 %104, i32* %6, align 4
  br label %13

105:                                              ; preds = %13
  %106 = load %1*, %1** %3, align 8
  %107 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i32 0, i32 0
  call void @3(%1* %106, i32* %107)
  %108 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %108) #6
  %109 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %109) #6
  %110 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %110) #6
  %111 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %111) #6
  ret void
}

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define dso_local void @PHP_GOSTFinal(i8* %0, %1* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %1*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [8 x i32], align 16
  store i8* %0, i8** %3, align 8
  store %1* %1, %1** %4, align 8
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #6
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #6
  %10 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %10) #6
  %11 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %11, i8 0, i64 32, i1 false)
  %12 = load %1*, %1** %4, align 8
  %13 = getelementptr inbounds %1, %1* %12, i32 0, i32 2
  %14 = load i8, i8* %13, align 8
  %15 = icmp ne i8 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = load %1*, %1** %4, align 8
  %18 = load %1*, %1** %4, align 8
  %19 = getelementptr inbounds %1, %1* %18, i32 0, i32 3
  %20 = getelementptr inbounds [32 x i8], [32 x i8]* %19, i32 0, i32 0
  call void @2(%1* %17, i8* %20)
  br label %21

21:                                               ; preds = %16, %2
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i32 0, i32 0
  %23 = bitcast i32* %22 to i8*
  %24 = load %1*, %1** %4, align 8
  %25 = getelementptr inbounds %1, %1* %24, i32 0, i32 1
  %26 = getelementptr inbounds [2 x i32], [2 x i32]* %25, i32 0, i32 0
  %27 = bitcast i32* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %23, i8* align 8 %27, i64 8, i1 false)
  %28 = load %1*, %1** %4, align 8
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i32 0, i32 0
  call void @3(%1* %28, i32* %29)
  %30 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i32 0, i32 0
  %31 = bitcast i32* %30 to i8*
  %32 = load %1*, %1** %4, align 8
  %33 = getelementptr inbounds %1, %1* %32, i32 0, i32 0
  %34 = getelementptr inbounds [16 x i32], [16 x i32]* %33, i64 0, i64 8
  %35 = bitcast i32* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %31, i8* align 8 %35, i64 32, i1 false)
  %36 = load %1*, %1** %4, align 8
  %37 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i32 0, i32 0
  call void @3(%1* %36, i32* %37)
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %38

38:                                               ; preds = %96, %21
  %39 = load i32, i32* %6, align 4
  %40 = icmp ult i32 %39, 32
  br i1 %40, label %41, label %101

41:                                               ; preds = %38
  %42 = load %1*, %1** %4, align 8
  %43 = getelementptr inbounds %1, %1* %42, i32 0, i32 0
  %44 = load i32, i32* %5, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [16 x i32], [16 x i32]* %43, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 255
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** %3, align 8
  %51 = load i32, i32* %6, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %50, i64 %52
  store i8 %49, i8* %53, align 1
  %54 = load %1*, %1** %4, align 8
  %55 = getelementptr inbounds %1, %1* %54, i32 0, i32 0
  %56 = load i32, i32* %5, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds [16 x i32], [16 x i32]* %55, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = lshr i32 %59, 8
  %61 = and i32 %60, 255
  %62 = trunc i32 %61 to i8
  %63 = load i8*, i8** %3, align 8
  %64 = load i32, i32* %6, align 4
  %65 = add i32 %64, 1
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %63, i64 %66
  store i8 %62, i8* %67, align 1
  %68 = load %1*, %1** %4, align 8
  %69 = getelementptr inbounds %1, %1* %68, i32 0, i32 0
  %70 = load i32, i32* %5, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds [16 x i32], [16 x i32]* %69, i64 0, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = lshr i32 %73, 16
  %75 = and i32 %74, 255
  %76 = trunc i32 %75 to i8
  %77 = load i8*, i8** %3, align 8
  %78 = load i32, i32* %6, align 4
  %79 = add i32 %78, 2
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %77, i64 %80
  store i8 %76, i8* %81, align 1
  %82 = load %1*, %1** %4, align 8
  %83 = getelementptr inbounds %1, %1* %82, i32 0, i32 0
  %84 = load i32, i32* %5, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds [16 x i32], [16 x i32]* %83, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = lshr i32 %87, 24
  %89 = and i32 %88, 255
  %90 = trunc i32 %89 to i8
  %91 = load i8*, i8** %3, align 8
  %92 = load i32, i32* %6, align 4
  %93 = add i32 %92, 3
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %91, i64 %94
  store i8 %90, i8* %95, align 1
  br label %96

96:                                               ; preds = %41
  %97 = load i32, i32* %5, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %5, align 4
  %99 = load i32, i32* %6, align 4
  %100 = add i32 %99, 4
  store i32 %100, i32* %6, align 4
  br label %38

101:                                              ; preds = %38
  %102 = load %1*, %1** %4, align 8
  %103 = bitcast %1* %102 to i8*
  call void @explicit_bzero(i8* %103, i64 120) #6
  %104 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %104) #6
  %105 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %105) #6
  %106 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %106) #6
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @3(%1* %0, i32* %1) #3 {
  %3 = alloca %1*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [8 x i32], align 16
  %10 = alloca [8 x i32], align 16
  %11 = alloca [8 x i32], align 16
  %12 = alloca [8 x i32], align 16
  %13 = alloca [8 x i32], align 16
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  store %1* %0, %1** %3, align 8
  store i32* %1, i32** %4, align 8
  %16 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #6
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #6
  %18 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #6
  %19 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #6
  %20 = bitcast [8 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %20) #6
  %21 = bitcast [8 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %21) #6
  %22 = bitcast [8 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %22) #6
  %23 = bitcast [8 x i32]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %23) #6
  %24 = bitcast [8 x i32]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %24) #6
  %25 = bitcast i32** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #6
  %26 = load %1*, %1** %3, align 8
  %27 = getelementptr inbounds %1, %1* %26, i32 0, i32 0
  %28 = getelementptr inbounds [16 x i32], [16 x i32]* %27, i32 0, i32 0
  store i32* %28, i32** %14, align 8
  %29 = bitcast i32** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %29) #6
  %30 = load i32*, i32** %4, align 8
  store i32* %30, i32** %15, align 8
  %31 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i32 0, i32 0
  %32 = bitcast i32* %31 to i8*
  %33 = load %1*, %1** %3, align 8
  %34 = getelementptr inbounds %1, %1* %33, i32 0, i32 0
  %35 = getelementptr inbounds [16 x i32], [16 x i32]* %34, i32 0, i32 0
  %36 = bitcast i32* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %32, i8* align 8 %36, i64 32, i1 false)
  %37 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i32 0, i32 0
  %38 = bitcast i32* %37 to i8*
  %39 = load i32*, i32** %4, align 8
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %38, i8* align 4 %40, i64 32, i1 false)
  store i32 0, i32* %5, align 4
  br label %41

41:                                               ; preds = %1874, %2
  %42 = load i32, i32* %5, align 4
  %43 = icmp slt i32 %42, 8
  br i1 %43, label %44, label %1877

44:                                               ; preds = %41
  %45 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %46 = load i32, i32* %45, align 16
  %47 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %48 = load i32, i32* %47, align 16
  %49 = xor i32 %46, %48
  %50 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 0
  store i32 %49, i32* %50, align 16
  %51 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = xor i32 %52, %54
  %56 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 1
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 2
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %60 = load i32, i32* %59, align 8
  %61 = xor i32 %58, %60
  %62 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 2
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 3
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %66 = load i32, i32* %65, align 4
  %67 = xor i32 %64, %66
  %68 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 3
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 4
  %70 = load i32, i32* %69, align 16
  %71 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %72 = load i32, i32* %71, align 16
  %73 = xor i32 %70, %72
  %74 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 4
  store i32 %73, i32* %74, align 16
  %75 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 5
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %78 = load i32, i32* %77, align 4
  %79 = xor i32 %76, %78
  %80 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 5
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 6
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %84 = load i32, i32* %83, align 8
  %85 = xor i32 %82, %84
  %86 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 6
  store i32 %85, i32* %86, align 8
  %87 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 7
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %90 = load i32, i32* %89, align 4
  %91 = xor i32 %88, %90
  %92 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 7
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 0
  %94 = load i32, i32* %93, align 16
  %95 = and i32 %94, 255
  %96 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 2
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 255
  %99 = shl i32 %98, 8
  %100 = or i32 %95, %99
  %101 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 4
  %102 = load i32, i32* %101, align 16
  %103 = and i32 %102, 255
  %104 = shl i32 %103, 16
  %105 = or i32 %100, %104
  %106 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 6
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 255
  %109 = shl i32 %108, 24
  %110 = or i32 %105, %109
  %111 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 0
  store i32 %110, i32* %111, align 16
  %112 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 0
  %113 = load i32, i32* %112, align 16
  %114 = and i32 %113, 65280
  %115 = lshr i32 %114, 8
  %116 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 2
  %117 = load i32, i32* %116, align 8
  %118 = and i32 %117, 65280
  %119 = or i32 %115, %118
  %120 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 4
  %121 = load i32, i32* %120, align 16
  %122 = and i32 %121, 65280
  %123 = shl i32 %122, 8
  %124 = or i32 %119, %123
  %125 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 6
  %126 = load i32, i32* %125, align 8
  %127 = and i32 %126, 65280
  %128 = shl i32 %127, 16
  %129 = or i32 %124, %128
  %130 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 1
  store i32 %129, i32* %130, align 4
  %131 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 0
  %132 = load i32, i32* %131, align 16
  %133 = and i32 %132, 16711680
  %134 = lshr i32 %133, 16
  %135 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 2
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 16711680
  %138 = lshr i32 %137, 8
  %139 = or i32 %134, %138
  %140 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 4
  %141 = load i32, i32* %140, align 16
  %142 = and i32 %141, 16711680
  %143 = or i32 %139, %142
  %144 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 6
  %145 = load i32, i32* %144, align 8
  %146 = and i32 %145, 16711680
  %147 = shl i32 %146, 8
  %148 = or i32 %143, %147
  %149 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 2
  store i32 %148, i32* %149, align 8
  %150 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 0
  %151 = load i32, i32* %150, align 16
  %152 = and i32 %151, -16777216
  %153 = lshr i32 %152, 24
  %154 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 2
  %155 = load i32, i32* %154, align 8
  %156 = and i32 %155, -16777216
  %157 = lshr i32 %156, 16
  %158 = or i32 %153, %157
  %159 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 4
  %160 = load i32, i32* %159, align 16
  %161 = and i32 %160, -16777216
  %162 = lshr i32 %161, 8
  %163 = or i32 %158, %162
  %164 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 6
  %165 = load i32, i32* %164, align 8
  %166 = and i32 %165, -16777216
  %167 = or i32 %163, %166
  %168 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 3
  store i32 %167, i32* %168, align 4
  %169 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 1
  %170 = load i32, i32* %169, align 4
  %171 = and i32 %170, 255
  %172 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 3
  %173 = load i32, i32* %172, align 4
  %174 = and i32 %173, 255
  %175 = shl i32 %174, 8
  %176 = or i32 %171, %175
  %177 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 5
  %178 = load i32, i32* %177, align 4
  %179 = and i32 %178, 255
  %180 = shl i32 %179, 16
  %181 = or i32 %176, %180
  %182 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 7
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, 255
  %185 = shl i32 %184, 24
  %186 = or i32 %181, %185
  %187 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 4
  store i32 %186, i32* %187, align 16
  %188 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 1
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, 65280
  %191 = lshr i32 %190, 8
  %192 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 3
  %193 = load i32, i32* %192, align 4
  %194 = and i32 %193, 65280
  %195 = or i32 %191, %194
  %196 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 5
  %197 = load i32, i32* %196, align 4
  %198 = and i32 %197, 65280
  %199 = shl i32 %198, 8
  %200 = or i32 %195, %199
  %201 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 7
  %202 = load i32, i32* %201, align 4
  %203 = and i32 %202, 65280
  %204 = shl i32 %203, 16
  %205 = or i32 %200, %204
  %206 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 5
  store i32 %205, i32* %206, align 4
  %207 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 1
  %208 = load i32, i32* %207, align 4
  %209 = and i32 %208, 16711680
  %210 = lshr i32 %209, 16
  %211 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 3
  %212 = load i32, i32* %211, align 4
  %213 = and i32 %212, 16711680
  %214 = lshr i32 %213, 8
  %215 = or i32 %210, %214
  %216 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 5
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %217, 16711680
  %219 = or i32 %215, %218
  %220 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 7
  %221 = load i32, i32* %220, align 4
  %222 = and i32 %221, 16711680
  %223 = shl i32 %222, 8
  %224 = or i32 %219, %223
  %225 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 6
  store i32 %224, i32* %225, align 8
  %226 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 1
  %227 = load i32, i32* %226, align 4
  %228 = and i32 %227, -16777216
  %229 = lshr i32 %228, 24
  %230 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 3
  %231 = load i32, i32* %230, align 4
  %232 = and i32 %231, -16777216
  %233 = lshr i32 %232, 16
  %234 = or i32 %229, %233
  %235 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 5
  %236 = load i32, i32* %235, align 4
  %237 = and i32 %236, -16777216
  %238 = lshr i32 %237, 8
  %239 = or i32 %234, %238
  %240 = getelementptr inbounds [8 x i32], [8 x i32]* %12, i64 0, i64 7
  %241 = load i32, i32* %240, align 4
  %242 = and i32 %241, -16777216
  %243 = or i32 %239, %242
  %244 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 7
  store i32 %243, i32* %244, align 4
  %245 = load i32*, i32** %14, align 8
  %246 = load i32, i32* %5, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i32, i32* %245, i64 %247
  %249 = load i32, i32* %248, align 4
  store i32 %249, i32* %7, align 4
  %250 = load i32*, i32** %14, align 8
  %251 = load i32, i32* %5, align 4
  %252 = add nsw i32 %251, 1
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i32, i32* %250, i64 %253
  %255 = load i32, i32* %254, align 4
  store i32 %255, i32* %6, align 4
  %256 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 0
  %257 = load i32, i32* %256, align 16
  %258 = load i32, i32* %7, align 4
  %259 = add i32 %257, %258
  store i32 %259, i32* %8, align 4
  %260 = load %1*, %1** %3, align 8
  %261 = getelementptr inbounds %1, %1* %260, i32 0, i32 4
  %262 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %261, align 8
  %263 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %262, i64 0, i64 0
  %264 = load i32, i32* %8, align 4
  %265 = and i32 %264, 255
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds [256 x i32], [256 x i32]* %263, i64 0, i64 %266
  %268 = load i32, i32* %267, align 4
  %269 = load %1*, %1** %3, align 8
  %270 = getelementptr inbounds %1, %1* %269, i32 0, i32 4
  %271 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %270, align 8
  %272 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %271, i64 0, i64 1
  %273 = load i32, i32* %8, align 4
  %274 = lshr i32 %273, 8
  %275 = and i32 %274, 255
  %276 = zext i32 %275 to i64
  %277 = getelementptr inbounds [256 x i32], [256 x i32]* %272, i64 0, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = xor i32 %268, %278
  %280 = load %1*, %1** %3, align 8
  %281 = getelementptr inbounds %1, %1* %280, i32 0, i32 4
  %282 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %281, align 8
  %283 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %282, i64 0, i64 2
  %284 = load i32, i32* %8, align 4
  %285 = lshr i32 %284, 16
  %286 = and i32 %285, 255
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds [256 x i32], [256 x i32]* %283, i64 0, i64 %287
  %289 = load i32, i32* %288, align 4
  %290 = xor i32 %279, %289
  %291 = load %1*, %1** %3, align 8
  %292 = getelementptr inbounds %1, %1* %291, i32 0, i32 4
  %293 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %292, align 8
  %294 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %293, i64 0, i64 3
  %295 = load i32, i32* %8, align 4
  %296 = lshr i32 %295, 24
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds [256 x i32], [256 x i32]* %294, i64 0, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = xor i32 %290, %299
  %301 = load i32, i32* %6, align 4
  %302 = xor i32 %301, %300
  store i32 %302, i32* %6, align 4
  %303 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 1
  %304 = load i32, i32* %303, align 4
  %305 = load i32, i32* %6, align 4
  %306 = add i32 %304, %305
  store i32 %306, i32* %8, align 4
  %307 = load %1*, %1** %3, align 8
  %308 = getelementptr inbounds %1, %1* %307, i32 0, i32 4
  %309 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %308, align 8
  %310 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %309, i64 0, i64 0
  %311 = load i32, i32* %8, align 4
  %312 = and i32 %311, 255
  %313 = zext i32 %312 to i64
  %314 = getelementptr inbounds [256 x i32], [256 x i32]* %310, i64 0, i64 %313
  %315 = load i32, i32* %314, align 4
  %316 = load %1*, %1** %3, align 8
  %317 = getelementptr inbounds %1, %1* %316, i32 0, i32 4
  %318 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %317, align 8
  %319 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %318, i64 0, i64 1
  %320 = load i32, i32* %8, align 4
  %321 = lshr i32 %320, 8
  %322 = and i32 %321, 255
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds [256 x i32], [256 x i32]* %319, i64 0, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = xor i32 %315, %325
  %327 = load %1*, %1** %3, align 8
  %328 = getelementptr inbounds %1, %1* %327, i32 0, i32 4
  %329 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %328, align 8
  %330 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %329, i64 0, i64 2
  %331 = load i32, i32* %8, align 4
  %332 = lshr i32 %331, 16
  %333 = and i32 %332, 255
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds [256 x i32], [256 x i32]* %330, i64 0, i64 %334
  %336 = load i32, i32* %335, align 4
  %337 = xor i32 %326, %336
  %338 = load %1*, %1** %3, align 8
  %339 = getelementptr inbounds %1, %1* %338, i32 0, i32 4
  %340 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %339, align 8
  %341 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %340, i64 0, i64 3
  %342 = load i32, i32* %8, align 4
  %343 = lshr i32 %342, 24
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds [256 x i32], [256 x i32]* %341, i64 0, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = xor i32 %337, %346
  %348 = load i32, i32* %7, align 4
  %349 = xor i32 %348, %347
  store i32 %349, i32* %7, align 4
  %350 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 2
  %351 = load i32, i32* %350, align 8
  %352 = load i32, i32* %7, align 4
  %353 = add i32 %351, %352
  store i32 %353, i32* %8, align 4
  %354 = load %1*, %1** %3, align 8
  %355 = getelementptr inbounds %1, %1* %354, i32 0, i32 4
  %356 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %355, align 8
  %357 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %356, i64 0, i64 0
  %358 = load i32, i32* %8, align 4
  %359 = and i32 %358, 255
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds [256 x i32], [256 x i32]* %357, i64 0, i64 %360
  %362 = load i32, i32* %361, align 4
  %363 = load %1*, %1** %3, align 8
  %364 = getelementptr inbounds %1, %1* %363, i32 0, i32 4
  %365 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %364, align 8
  %366 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %365, i64 0, i64 1
  %367 = load i32, i32* %8, align 4
  %368 = lshr i32 %367, 8
  %369 = and i32 %368, 255
  %370 = zext i32 %369 to i64
  %371 = getelementptr inbounds [256 x i32], [256 x i32]* %366, i64 0, i64 %370
  %372 = load i32, i32* %371, align 4
  %373 = xor i32 %362, %372
  %374 = load %1*, %1** %3, align 8
  %375 = getelementptr inbounds %1, %1* %374, i32 0, i32 4
  %376 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %375, align 8
  %377 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %376, i64 0, i64 2
  %378 = load i32, i32* %8, align 4
  %379 = lshr i32 %378, 16
  %380 = and i32 %379, 255
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [256 x i32], [256 x i32]* %377, i64 0, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = xor i32 %373, %383
  %385 = load %1*, %1** %3, align 8
  %386 = getelementptr inbounds %1, %1* %385, i32 0, i32 4
  %387 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %386, align 8
  %388 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %387, i64 0, i64 3
  %389 = load i32, i32* %8, align 4
  %390 = lshr i32 %389, 24
  %391 = zext i32 %390 to i64
  %392 = getelementptr inbounds [256 x i32], [256 x i32]* %388, i64 0, i64 %391
  %393 = load i32, i32* %392, align 4
  %394 = xor i32 %384, %393
  %395 = load i32, i32* %6, align 4
  %396 = xor i32 %395, %394
  store i32 %396, i32* %6, align 4
  %397 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 3
  %398 = load i32, i32* %397, align 4
  %399 = load i32, i32* %6, align 4
  %400 = add i32 %398, %399
  store i32 %400, i32* %8, align 4
  %401 = load %1*, %1** %3, align 8
  %402 = getelementptr inbounds %1, %1* %401, i32 0, i32 4
  %403 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %402, align 8
  %404 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %403, i64 0, i64 0
  %405 = load i32, i32* %8, align 4
  %406 = and i32 %405, 255
  %407 = zext i32 %406 to i64
  %408 = getelementptr inbounds [256 x i32], [256 x i32]* %404, i64 0, i64 %407
  %409 = load i32, i32* %408, align 4
  %410 = load %1*, %1** %3, align 8
  %411 = getelementptr inbounds %1, %1* %410, i32 0, i32 4
  %412 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %411, align 8
  %413 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %412, i64 0, i64 1
  %414 = load i32, i32* %8, align 4
  %415 = lshr i32 %414, 8
  %416 = and i32 %415, 255
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds [256 x i32], [256 x i32]* %413, i64 0, i64 %417
  %419 = load i32, i32* %418, align 4
  %420 = xor i32 %409, %419
  %421 = load %1*, %1** %3, align 8
  %422 = getelementptr inbounds %1, %1* %421, i32 0, i32 4
  %423 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %422, align 8
  %424 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %423, i64 0, i64 2
  %425 = load i32, i32* %8, align 4
  %426 = lshr i32 %425, 16
  %427 = and i32 %426, 255
  %428 = zext i32 %427 to i64
  %429 = getelementptr inbounds [256 x i32], [256 x i32]* %424, i64 0, i64 %428
  %430 = load i32, i32* %429, align 4
  %431 = xor i32 %420, %430
  %432 = load %1*, %1** %3, align 8
  %433 = getelementptr inbounds %1, %1* %432, i32 0, i32 4
  %434 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %433, align 8
  %435 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %434, i64 0, i64 3
  %436 = load i32, i32* %8, align 4
  %437 = lshr i32 %436, 24
  %438 = zext i32 %437 to i64
  %439 = getelementptr inbounds [256 x i32], [256 x i32]* %435, i64 0, i64 %438
  %440 = load i32, i32* %439, align 4
  %441 = xor i32 %431, %440
  %442 = load i32, i32* %7, align 4
  %443 = xor i32 %442, %441
  store i32 %443, i32* %7, align 4
  %444 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 4
  %445 = load i32, i32* %444, align 16
  %446 = load i32, i32* %7, align 4
  %447 = add i32 %445, %446
  store i32 %447, i32* %8, align 4
  %448 = load %1*, %1** %3, align 8
  %449 = getelementptr inbounds %1, %1* %448, i32 0, i32 4
  %450 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %449, align 8
  %451 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %450, i64 0, i64 0
  %452 = load i32, i32* %8, align 4
  %453 = and i32 %452, 255
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds [256 x i32], [256 x i32]* %451, i64 0, i64 %454
  %456 = load i32, i32* %455, align 4
  %457 = load %1*, %1** %3, align 8
  %458 = getelementptr inbounds %1, %1* %457, i32 0, i32 4
  %459 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %458, align 8
  %460 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %459, i64 0, i64 1
  %461 = load i32, i32* %8, align 4
  %462 = lshr i32 %461, 8
  %463 = and i32 %462, 255
  %464 = zext i32 %463 to i64
  %465 = getelementptr inbounds [256 x i32], [256 x i32]* %460, i64 0, i64 %464
  %466 = load i32, i32* %465, align 4
  %467 = xor i32 %456, %466
  %468 = load %1*, %1** %3, align 8
  %469 = getelementptr inbounds %1, %1* %468, i32 0, i32 4
  %470 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %469, align 8
  %471 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %470, i64 0, i64 2
  %472 = load i32, i32* %8, align 4
  %473 = lshr i32 %472, 16
  %474 = and i32 %473, 255
  %475 = zext i32 %474 to i64
  %476 = getelementptr inbounds [256 x i32], [256 x i32]* %471, i64 0, i64 %475
  %477 = load i32, i32* %476, align 4
  %478 = xor i32 %467, %477
  %479 = load %1*, %1** %3, align 8
  %480 = getelementptr inbounds %1, %1* %479, i32 0, i32 4
  %481 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %480, align 8
  %482 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %481, i64 0, i64 3
  %483 = load i32, i32* %8, align 4
  %484 = lshr i32 %483, 24
  %485 = zext i32 %484 to i64
  %486 = getelementptr inbounds [256 x i32], [256 x i32]* %482, i64 0, i64 %485
  %487 = load i32, i32* %486, align 4
  %488 = xor i32 %478, %487
  %489 = load i32, i32* %6, align 4
  %490 = xor i32 %489, %488
  store i32 %490, i32* %6, align 4
  %491 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 5
  %492 = load i32, i32* %491, align 4
  %493 = load i32, i32* %6, align 4
  %494 = add i32 %492, %493
  store i32 %494, i32* %8, align 4
  %495 = load %1*, %1** %3, align 8
  %496 = getelementptr inbounds %1, %1* %495, i32 0, i32 4
  %497 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %496, align 8
  %498 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %497, i64 0, i64 0
  %499 = load i32, i32* %8, align 4
  %500 = and i32 %499, 255
  %501 = zext i32 %500 to i64
  %502 = getelementptr inbounds [256 x i32], [256 x i32]* %498, i64 0, i64 %501
  %503 = load i32, i32* %502, align 4
  %504 = load %1*, %1** %3, align 8
  %505 = getelementptr inbounds %1, %1* %504, i32 0, i32 4
  %506 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %505, align 8
  %507 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %506, i64 0, i64 1
  %508 = load i32, i32* %8, align 4
  %509 = lshr i32 %508, 8
  %510 = and i32 %509, 255
  %511 = zext i32 %510 to i64
  %512 = getelementptr inbounds [256 x i32], [256 x i32]* %507, i64 0, i64 %511
  %513 = load i32, i32* %512, align 4
  %514 = xor i32 %503, %513
  %515 = load %1*, %1** %3, align 8
  %516 = getelementptr inbounds %1, %1* %515, i32 0, i32 4
  %517 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %516, align 8
  %518 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %517, i64 0, i64 2
  %519 = load i32, i32* %8, align 4
  %520 = lshr i32 %519, 16
  %521 = and i32 %520, 255
  %522 = zext i32 %521 to i64
  %523 = getelementptr inbounds [256 x i32], [256 x i32]* %518, i64 0, i64 %522
  %524 = load i32, i32* %523, align 4
  %525 = xor i32 %514, %524
  %526 = load %1*, %1** %3, align 8
  %527 = getelementptr inbounds %1, %1* %526, i32 0, i32 4
  %528 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %527, align 8
  %529 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %528, i64 0, i64 3
  %530 = load i32, i32* %8, align 4
  %531 = lshr i32 %530, 24
  %532 = zext i32 %531 to i64
  %533 = getelementptr inbounds [256 x i32], [256 x i32]* %529, i64 0, i64 %532
  %534 = load i32, i32* %533, align 4
  %535 = xor i32 %525, %534
  %536 = load i32, i32* %7, align 4
  %537 = xor i32 %536, %535
  store i32 %537, i32* %7, align 4
  %538 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 6
  %539 = load i32, i32* %538, align 8
  %540 = load i32, i32* %7, align 4
  %541 = add i32 %539, %540
  store i32 %541, i32* %8, align 4
  %542 = load %1*, %1** %3, align 8
  %543 = getelementptr inbounds %1, %1* %542, i32 0, i32 4
  %544 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %543, align 8
  %545 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %544, i64 0, i64 0
  %546 = load i32, i32* %8, align 4
  %547 = and i32 %546, 255
  %548 = zext i32 %547 to i64
  %549 = getelementptr inbounds [256 x i32], [256 x i32]* %545, i64 0, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = load %1*, %1** %3, align 8
  %552 = getelementptr inbounds %1, %1* %551, i32 0, i32 4
  %553 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %552, align 8
  %554 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %553, i64 0, i64 1
  %555 = load i32, i32* %8, align 4
  %556 = lshr i32 %555, 8
  %557 = and i32 %556, 255
  %558 = zext i32 %557 to i64
  %559 = getelementptr inbounds [256 x i32], [256 x i32]* %554, i64 0, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = xor i32 %550, %560
  %562 = load %1*, %1** %3, align 8
  %563 = getelementptr inbounds %1, %1* %562, i32 0, i32 4
  %564 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %563, align 8
  %565 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %564, i64 0, i64 2
  %566 = load i32, i32* %8, align 4
  %567 = lshr i32 %566, 16
  %568 = and i32 %567, 255
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds [256 x i32], [256 x i32]* %565, i64 0, i64 %569
  %571 = load i32, i32* %570, align 4
  %572 = xor i32 %561, %571
  %573 = load %1*, %1** %3, align 8
  %574 = getelementptr inbounds %1, %1* %573, i32 0, i32 4
  %575 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %574, align 8
  %576 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %575, i64 0, i64 3
  %577 = load i32, i32* %8, align 4
  %578 = lshr i32 %577, 24
  %579 = zext i32 %578 to i64
  %580 = getelementptr inbounds [256 x i32], [256 x i32]* %576, i64 0, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = xor i32 %572, %581
  %583 = load i32, i32* %6, align 4
  %584 = xor i32 %583, %582
  store i32 %584, i32* %6, align 4
  %585 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 7
  %586 = load i32, i32* %585, align 4
  %587 = load i32, i32* %6, align 4
  %588 = add i32 %586, %587
  store i32 %588, i32* %8, align 4
  %589 = load %1*, %1** %3, align 8
  %590 = getelementptr inbounds %1, %1* %589, i32 0, i32 4
  %591 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %590, align 8
  %592 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %591, i64 0, i64 0
  %593 = load i32, i32* %8, align 4
  %594 = and i32 %593, 255
  %595 = zext i32 %594 to i64
  %596 = getelementptr inbounds [256 x i32], [256 x i32]* %592, i64 0, i64 %595
  %597 = load i32, i32* %596, align 4
  %598 = load %1*, %1** %3, align 8
  %599 = getelementptr inbounds %1, %1* %598, i32 0, i32 4
  %600 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %599, align 8
  %601 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %600, i64 0, i64 1
  %602 = load i32, i32* %8, align 4
  %603 = lshr i32 %602, 8
  %604 = and i32 %603, 255
  %605 = zext i32 %604 to i64
  %606 = getelementptr inbounds [256 x i32], [256 x i32]* %601, i64 0, i64 %605
  %607 = load i32, i32* %606, align 4
  %608 = xor i32 %597, %607
  %609 = load %1*, %1** %3, align 8
  %610 = getelementptr inbounds %1, %1* %609, i32 0, i32 4
  %611 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %610, align 8
  %612 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %611, i64 0, i64 2
  %613 = load i32, i32* %8, align 4
  %614 = lshr i32 %613, 16
  %615 = and i32 %614, 255
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds [256 x i32], [256 x i32]* %612, i64 0, i64 %616
  %618 = load i32, i32* %617, align 4
  %619 = xor i32 %608, %618
  %620 = load %1*, %1** %3, align 8
  %621 = getelementptr inbounds %1, %1* %620, i32 0, i32 4
  %622 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %621, align 8
  %623 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %622, i64 0, i64 3
  %624 = load i32, i32* %8, align 4
  %625 = lshr i32 %624, 24
  %626 = zext i32 %625 to i64
  %627 = getelementptr inbounds [256 x i32], [256 x i32]* %623, i64 0, i64 %626
  %628 = load i32, i32* %627, align 4
  %629 = xor i32 %619, %628
  %630 = load i32, i32* %7, align 4
  %631 = xor i32 %630, %629
  store i32 %631, i32* %7, align 4
  %632 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 0
  %633 = load i32, i32* %632, align 16
  %634 = load i32, i32* %7, align 4
  %635 = add i32 %633, %634
  store i32 %635, i32* %8, align 4
  %636 = load %1*, %1** %3, align 8
  %637 = getelementptr inbounds %1, %1* %636, i32 0, i32 4
  %638 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %637, align 8
  %639 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %638, i64 0, i64 0
  %640 = load i32, i32* %8, align 4
  %641 = and i32 %640, 255
  %642 = zext i32 %641 to i64
  %643 = getelementptr inbounds [256 x i32], [256 x i32]* %639, i64 0, i64 %642
  %644 = load i32, i32* %643, align 4
  %645 = load %1*, %1** %3, align 8
  %646 = getelementptr inbounds %1, %1* %645, i32 0, i32 4
  %647 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %646, align 8
  %648 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %647, i64 0, i64 1
  %649 = load i32, i32* %8, align 4
  %650 = lshr i32 %649, 8
  %651 = and i32 %650, 255
  %652 = zext i32 %651 to i64
  %653 = getelementptr inbounds [256 x i32], [256 x i32]* %648, i64 0, i64 %652
  %654 = load i32, i32* %653, align 4
  %655 = xor i32 %644, %654
  %656 = load %1*, %1** %3, align 8
  %657 = getelementptr inbounds %1, %1* %656, i32 0, i32 4
  %658 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %657, align 8
  %659 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %658, i64 0, i64 2
  %660 = load i32, i32* %8, align 4
  %661 = lshr i32 %660, 16
  %662 = and i32 %661, 255
  %663 = zext i32 %662 to i64
  %664 = getelementptr inbounds [256 x i32], [256 x i32]* %659, i64 0, i64 %663
  %665 = load i32, i32* %664, align 4
  %666 = xor i32 %655, %665
  %667 = load %1*, %1** %3, align 8
  %668 = getelementptr inbounds %1, %1* %667, i32 0, i32 4
  %669 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %668, align 8
  %670 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %669, i64 0, i64 3
  %671 = load i32, i32* %8, align 4
  %672 = lshr i32 %671, 24
  %673 = zext i32 %672 to i64
  %674 = getelementptr inbounds [256 x i32], [256 x i32]* %670, i64 0, i64 %673
  %675 = load i32, i32* %674, align 4
  %676 = xor i32 %666, %675
  %677 = load i32, i32* %6, align 4
  %678 = xor i32 %677, %676
  store i32 %678, i32* %6, align 4
  %679 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 1
  %680 = load i32, i32* %679, align 4
  %681 = load i32, i32* %6, align 4
  %682 = add i32 %680, %681
  store i32 %682, i32* %8, align 4
  %683 = load %1*, %1** %3, align 8
  %684 = getelementptr inbounds %1, %1* %683, i32 0, i32 4
  %685 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %684, align 8
  %686 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %685, i64 0, i64 0
  %687 = load i32, i32* %8, align 4
  %688 = and i32 %687, 255
  %689 = zext i32 %688 to i64
  %690 = getelementptr inbounds [256 x i32], [256 x i32]* %686, i64 0, i64 %689
  %691 = load i32, i32* %690, align 4
  %692 = load %1*, %1** %3, align 8
  %693 = getelementptr inbounds %1, %1* %692, i32 0, i32 4
  %694 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %693, align 8
  %695 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %694, i64 0, i64 1
  %696 = load i32, i32* %8, align 4
  %697 = lshr i32 %696, 8
  %698 = and i32 %697, 255
  %699 = zext i32 %698 to i64
  %700 = getelementptr inbounds [256 x i32], [256 x i32]* %695, i64 0, i64 %699
  %701 = load i32, i32* %700, align 4
  %702 = xor i32 %691, %701
  %703 = load %1*, %1** %3, align 8
  %704 = getelementptr inbounds %1, %1* %703, i32 0, i32 4
  %705 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %704, align 8
  %706 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %705, i64 0, i64 2
  %707 = load i32, i32* %8, align 4
  %708 = lshr i32 %707, 16
  %709 = and i32 %708, 255
  %710 = zext i32 %709 to i64
  %711 = getelementptr inbounds [256 x i32], [256 x i32]* %706, i64 0, i64 %710
  %712 = load i32, i32* %711, align 4
  %713 = xor i32 %702, %712
  %714 = load %1*, %1** %3, align 8
  %715 = getelementptr inbounds %1, %1* %714, i32 0, i32 4
  %716 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %715, align 8
  %717 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %716, i64 0, i64 3
  %718 = load i32, i32* %8, align 4
  %719 = lshr i32 %718, 24
  %720 = zext i32 %719 to i64
  %721 = getelementptr inbounds [256 x i32], [256 x i32]* %717, i64 0, i64 %720
  %722 = load i32, i32* %721, align 4
  %723 = xor i32 %713, %722
  %724 = load i32, i32* %7, align 4
  %725 = xor i32 %724, %723
  store i32 %725, i32* %7, align 4
  %726 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 2
  %727 = load i32, i32* %726, align 8
  %728 = load i32, i32* %7, align 4
  %729 = add i32 %727, %728
  store i32 %729, i32* %8, align 4
  %730 = load %1*, %1** %3, align 8
  %731 = getelementptr inbounds %1, %1* %730, i32 0, i32 4
  %732 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %731, align 8
  %733 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %732, i64 0, i64 0
  %734 = load i32, i32* %8, align 4
  %735 = and i32 %734, 255
  %736 = zext i32 %735 to i64
  %737 = getelementptr inbounds [256 x i32], [256 x i32]* %733, i64 0, i64 %736
  %738 = load i32, i32* %737, align 4
  %739 = load %1*, %1** %3, align 8
  %740 = getelementptr inbounds %1, %1* %739, i32 0, i32 4
  %741 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %740, align 8
  %742 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %741, i64 0, i64 1
  %743 = load i32, i32* %8, align 4
  %744 = lshr i32 %743, 8
  %745 = and i32 %744, 255
  %746 = zext i32 %745 to i64
  %747 = getelementptr inbounds [256 x i32], [256 x i32]* %742, i64 0, i64 %746
  %748 = load i32, i32* %747, align 4
  %749 = xor i32 %738, %748
  %750 = load %1*, %1** %3, align 8
  %751 = getelementptr inbounds %1, %1* %750, i32 0, i32 4
  %752 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %751, align 8
  %753 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %752, i64 0, i64 2
  %754 = load i32, i32* %8, align 4
  %755 = lshr i32 %754, 16
  %756 = and i32 %755, 255
  %757 = zext i32 %756 to i64
  %758 = getelementptr inbounds [256 x i32], [256 x i32]* %753, i64 0, i64 %757
  %759 = load i32, i32* %758, align 4
  %760 = xor i32 %749, %759
  %761 = load %1*, %1** %3, align 8
  %762 = getelementptr inbounds %1, %1* %761, i32 0, i32 4
  %763 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %762, align 8
  %764 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %763, i64 0, i64 3
  %765 = load i32, i32* %8, align 4
  %766 = lshr i32 %765, 24
  %767 = zext i32 %766 to i64
  %768 = getelementptr inbounds [256 x i32], [256 x i32]* %764, i64 0, i64 %767
  %769 = load i32, i32* %768, align 4
  %770 = xor i32 %760, %769
  %771 = load i32, i32* %6, align 4
  %772 = xor i32 %771, %770
  store i32 %772, i32* %6, align 4
  %773 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 3
  %774 = load i32, i32* %773, align 4
  %775 = load i32, i32* %6, align 4
  %776 = add i32 %774, %775
  store i32 %776, i32* %8, align 4
  %777 = load %1*, %1** %3, align 8
  %778 = getelementptr inbounds %1, %1* %777, i32 0, i32 4
  %779 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %778, align 8
  %780 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %779, i64 0, i64 0
  %781 = load i32, i32* %8, align 4
  %782 = and i32 %781, 255
  %783 = zext i32 %782 to i64
  %784 = getelementptr inbounds [256 x i32], [256 x i32]* %780, i64 0, i64 %783
  %785 = load i32, i32* %784, align 4
  %786 = load %1*, %1** %3, align 8
  %787 = getelementptr inbounds %1, %1* %786, i32 0, i32 4
  %788 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %787, align 8
  %789 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %788, i64 0, i64 1
  %790 = load i32, i32* %8, align 4
  %791 = lshr i32 %790, 8
  %792 = and i32 %791, 255
  %793 = zext i32 %792 to i64
  %794 = getelementptr inbounds [256 x i32], [256 x i32]* %789, i64 0, i64 %793
  %795 = load i32, i32* %794, align 4
  %796 = xor i32 %785, %795
  %797 = load %1*, %1** %3, align 8
  %798 = getelementptr inbounds %1, %1* %797, i32 0, i32 4
  %799 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %798, align 8
  %800 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %799, i64 0, i64 2
  %801 = load i32, i32* %8, align 4
  %802 = lshr i32 %801, 16
  %803 = and i32 %802, 255
  %804 = zext i32 %803 to i64
  %805 = getelementptr inbounds [256 x i32], [256 x i32]* %800, i64 0, i64 %804
  %806 = load i32, i32* %805, align 4
  %807 = xor i32 %796, %806
  %808 = load %1*, %1** %3, align 8
  %809 = getelementptr inbounds %1, %1* %808, i32 0, i32 4
  %810 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %809, align 8
  %811 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %810, i64 0, i64 3
  %812 = load i32, i32* %8, align 4
  %813 = lshr i32 %812, 24
  %814 = zext i32 %813 to i64
  %815 = getelementptr inbounds [256 x i32], [256 x i32]* %811, i64 0, i64 %814
  %816 = load i32, i32* %815, align 4
  %817 = xor i32 %807, %816
  %818 = load i32, i32* %7, align 4
  %819 = xor i32 %818, %817
  store i32 %819, i32* %7, align 4
  %820 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 4
  %821 = load i32, i32* %820, align 16
  %822 = load i32, i32* %7, align 4
  %823 = add i32 %821, %822
  store i32 %823, i32* %8, align 4
  %824 = load %1*, %1** %3, align 8
  %825 = getelementptr inbounds %1, %1* %824, i32 0, i32 4
  %826 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %825, align 8
  %827 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %826, i64 0, i64 0
  %828 = load i32, i32* %8, align 4
  %829 = and i32 %828, 255
  %830 = zext i32 %829 to i64
  %831 = getelementptr inbounds [256 x i32], [256 x i32]* %827, i64 0, i64 %830
  %832 = load i32, i32* %831, align 4
  %833 = load %1*, %1** %3, align 8
  %834 = getelementptr inbounds %1, %1* %833, i32 0, i32 4
  %835 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %834, align 8
  %836 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %835, i64 0, i64 1
  %837 = load i32, i32* %8, align 4
  %838 = lshr i32 %837, 8
  %839 = and i32 %838, 255
  %840 = zext i32 %839 to i64
  %841 = getelementptr inbounds [256 x i32], [256 x i32]* %836, i64 0, i64 %840
  %842 = load i32, i32* %841, align 4
  %843 = xor i32 %832, %842
  %844 = load %1*, %1** %3, align 8
  %845 = getelementptr inbounds %1, %1* %844, i32 0, i32 4
  %846 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %845, align 8
  %847 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %846, i64 0, i64 2
  %848 = load i32, i32* %8, align 4
  %849 = lshr i32 %848, 16
  %850 = and i32 %849, 255
  %851 = zext i32 %850 to i64
  %852 = getelementptr inbounds [256 x i32], [256 x i32]* %847, i64 0, i64 %851
  %853 = load i32, i32* %852, align 4
  %854 = xor i32 %843, %853
  %855 = load %1*, %1** %3, align 8
  %856 = getelementptr inbounds %1, %1* %855, i32 0, i32 4
  %857 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %856, align 8
  %858 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %857, i64 0, i64 3
  %859 = load i32, i32* %8, align 4
  %860 = lshr i32 %859, 24
  %861 = zext i32 %860 to i64
  %862 = getelementptr inbounds [256 x i32], [256 x i32]* %858, i64 0, i64 %861
  %863 = load i32, i32* %862, align 4
  %864 = xor i32 %854, %863
  %865 = load i32, i32* %6, align 4
  %866 = xor i32 %865, %864
  store i32 %866, i32* %6, align 4
  %867 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 5
  %868 = load i32, i32* %867, align 4
  %869 = load i32, i32* %6, align 4
  %870 = add i32 %868, %869
  store i32 %870, i32* %8, align 4
  %871 = load %1*, %1** %3, align 8
  %872 = getelementptr inbounds %1, %1* %871, i32 0, i32 4
  %873 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %872, align 8
  %874 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %873, i64 0, i64 0
  %875 = load i32, i32* %8, align 4
  %876 = and i32 %875, 255
  %877 = zext i32 %876 to i64
  %878 = getelementptr inbounds [256 x i32], [256 x i32]* %874, i64 0, i64 %877
  %879 = load i32, i32* %878, align 4
  %880 = load %1*, %1** %3, align 8
  %881 = getelementptr inbounds %1, %1* %880, i32 0, i32 4
  %882 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %881, align 8
  %883 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %882, i64 0, i64 1
  %884 = load i32, i32* %8, align 4
  %885 = lshr i32 %884, 8
  %886 = and i32 %885, 255
  %887 = zext i32 %886 to i64
  %888 = getelementptr inbounds [256 x i32], [256 x i32]* %883, i64 0, i64 %887
  %889 = load i32, i32* %888, align 4
  %890 = xor i32 %879, %889
  %891 = load %1*, %1** %3, align 8
  %892 = getelementptr inbounds %1, %1* %891, i32 0, i32 4
  %893 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %892, align 8
  %894 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %893, i64 0, i64 2
  %895 = load i32, i32* %8, align 4
  %896 = lshr i32 %895, 16
  %897 = and i32 %896, 255
  %898 = zext i32 %897 to i64
  %899 = getelementptr inbounds [256 x i32], [256 x i32]* %894, i64 0, i64 %898
  %900 = load i32, i32* %899, align 4
  %901 = xor i32 %890, %900
  %902 = load %1*, %1** %3, align 8
  %903 = getelementptr inbounds %1, %1* %902, i32 0, i32 4
  %904 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %903, align 8
  %905 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %904, i64 0, i64 3
  %906 = load i32, i32* %8, align 4
  %907 = lshr i32 %906, 24
  %908 = zext i32 %907 to i64
  %909 = getelementptr inbounds [256 x i32], [256 x i32]* %905, i64 0, i64 %908
  %910 = load i32, i32* %909, align 4
  %911 = xor i32 %901, %910
  %912 = load i32, i32* %7, align 4
  %913 = xor i32 %912, %911
  store i32 %913, i32* %7, align 4
  %914 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 6
  %915 = load i32, i32* %914, align 8
  %916 = load i32, i32* %7, align 4
  %917 = add i32 %915, %916
  store i32 %917, i32* %8, align 4
  %918 = load %1*, %1** %3, align 8
  %919 = getelementptr inbounds %1, %1* %918, i32 0, i32 4
  %920 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %919, align 8
  %921 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %920, i64 0, i64 0
  %922 = load i32, i32* %8, align 4
  %923 = and i32 %922, 255
  %924 = zext i32 %923 to i64
  %925 = getelementptr inbounds [256 x i32], [256 x i32]* %921, i64 0, i64 %924
  %926 = load i32, i32* %925, align 4
  %927 = load %1*, %1** %3, align 8
  %928 = getelementptr inbounds %1, %1* %927, i32 0, i32 4
  %929 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %928, align 8
  %930 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %929, i64 0, i64 1
  %931 = load i32, i32* %8, align 4
  %932 = lshr i32 %931, 8
  %933 = and i32 %932, 255
  %934 = zext i32 %933 to i64
  %935 = getelementptr inbounds [256 x i32], [256 x i32]* %930, i64 0, i64 %934
  %936 = load i32, i32* %935, align 4
  %937 = xor i32 %926, %936
  %938 = load %1*, %1** %3, align 8
  %939 = getelementptr inbounds %1, %1* %938, i32 0, i32 4
  %940 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %939, align 8
  %941 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %940, i64 0, i64 2
  %942 = load i32, i32* %8, align 4
  %943 = lshr i32 %942, 16
  %944 = and i32 %943, 255
  %945 = zext i32 %944 to i64
  %946 = getelementptr inbounds [256 x i32], [256 x i32]* %941, i64 0, i64 %945
  %947 = load i32, i32* %946, align 4
  %948 = xor i32 %937, %947
  %949 = load %1*, %1** %3, align 8
  %950 = getelementptr inbounds %1, %1* %949, i32 0, i32 4
  %951 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %950, align 8
  %952 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %951, i64 0, i64 3
  %953 = load i32, i32* %8, align 4
  %954 = lshr i32 %953, 24
  %955 = zext i32 %954 to i64
  %956 = getelementptr inbounds [256 x i32], [256 x i32]* %952, i64 0, i64 %955
  %957 = load i32, i32* %956, align 4
  %958 = xor i32 %948, %957
  %959 = load i32, i32* %6, align 4
  %960 = xor i32 %959, %958
  store i32 %960, i32* %6, align 4
  %961 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 7
  %962 = load i32, i32* %961, align 4
  %963 = load i32, i32* %6, align 4
  %964 = add i32 %962, %963
  store i32 %964, i32* %8, align 4
  %965 = load %1*, %1** %3, align 8
  %966 = getelementptr inbounds %1, %1* %965, i32 0, i32 4
  %967 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %966, align 8
  %968 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %967, i64 0, i64 0
  %969 = load i32, i32* %8, align 4
  %970 = and i32 %969, 255
  %971 = zext i32 %970 to i64
  %972 = getelementptr inbounds [256 x i32], [256 x i32]* %968, i64 0, i64 %971
  %973 = load i32, i32* %972, align 4
  %974 = load %1*, %1** %3, align 8
  %975 = getelementptr inbounds %1, %1* %974, i32 0, i32 4
  %976 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %975, align 8
  %977 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %976, i64 0, i64 1
  %978 = load i32, i32* %8, align 4
  %979 = lshr i32 %978, 8
  %980 = and i32 %979, 255
  %981 = zext i32 %980 to i64
  %982 = getelementptr inbounds [256 x i32], [256 x i32]* %977, i64 0, i64 %981
  %983 = load i32, i32* %982, align 4
  %984 = xor i32 %973, %983
  %985 = load %1*, %1** %3, align 8
  %986 = getelementptr inbounds %1, %1* %985, i32 0, i32 4
  %987 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %986, align 8
  %988 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %987, i64 0, i64 2
  %989 = load i32, i32* %8, align 4
  %990 = lshr i32 %989, 16
  %991 = and i32 %990, 255
  %992 = zext i32 %991 to i64
  %993 = getelementptr inbounds [256 x i32], [256 x i32]* %988, i64 0, i64 %992
  %994 = load i32, i32* %993, align 4
  %995 = xor i32 %984, %994
  %996 = load %1*, %1** %3, align 8
  %997 = getelementptr inbounds %1, %1* %996, i32 0, i32 4
  %998 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %997, align 8
  %999 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %998, i64 0, i64 3
  %1000 = load i32, i32* %8, align 4
  %1001 = lshr i32 %1000, 24
  %1002 = zext i32 %1001 to i64
  %1003 = getelementptr inbounds [256 x i32], [256 x i32]* %999, i64 0, i64 %1002
  %1004 = load i32, i32* %1003, align 4
  %1005 = xor i32 %995, %1004
  %1006 = load i32, i32* %7, align 4
  %1007 = xor i32 %1006, %1005
  store i32 %1007, i32* %7, align 4
  %1008 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 0
  %1009 = load i32, i32* %1008, align 16
  %1010 = load i32, i32* %7, align 4
  %1011 = add i32 %1009, %1010
  store i32 %1011, i32* %8, align 4
  %1012 = load %1*, %1** %3, align 8
  %1013 = getelementptr inbounds %1, %1* %1012, i32 0, i32 4
  %1014 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1013, align 8
  %1015 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1014, i64 0, i64 0
  %1016 = load i32, i32* %8, align 4
  %1017 = and i32 %1016, 255
  %1018 = zext i32 %1017 to i64
  %1019 = getelementptr inbounds [256 x i32], [256 x i32]* %1015, i64 0, i64 %1018
  %1020 = load i32, i32* %1019, align 4
  %1021 = load %1*, %1** %3, align 8
  %1022 = getelementptr inbounds %1, %1* %1021, i32 0, i32 4
  %1023 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1022, align 8
  %1024 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1023, i64 0, i64 1
  %1025 = load i32, i32* %8, align 4
  %1026 = lshr i32 %1025, 8
  %1027 = and i32 %1026, 255
  %1028 = zext i32 %1027 to i64
  %1029 = getelementptr inbounds [256 x i32], [256 x i32]* %1024, i64 0, i64 %1028
  %1030 = load i32, i32* %1029, align 4
  %1031 = xor i32 %1020, %1030
  %1032 = load %1*, %1** %3, align 8
  %1033 = getelementptr inbounds %1, %1* %1032, i32 0, i32 4
  %1034 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1033, align 8
  %1035 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1034, i64 0, i64 2
  %1036 = load i32, i32* %8, align 4
  %1037 = lshr i32 %1036, 16
  %1038 = and i32 %1037, 255
  %1039 = zext i32 %1038 to i64
  %1040 = getelementptr inbounds [256 x i32], [256 x i32]* %1035, i64 0, i64 %1039
  %1041 = load i32, i32* %1040, align 4
  %1042 = xor i32 %1031, %1041
  %1043 = load %1*, %1** %3, align 8
  %1044 = getelementptr inbounds %1, %1* %1043, i32 0, i32 4
  %1045 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1044, align 8
  %1046 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1045, i64 0, i64 3
  %1047 = load i32, i32* %8, align 4
  %1048 = lshr i32 %1047, 24
  %1049 = zext i32 %1048 to i64
  %1050 = getelementptr inbounds [256 x i32], [256 x i32]* %1046, i64 0, i64 %1049
  %1051 = load i32, i32* %1050, align 4
  %1052 = xor i32 %1042, %1051
  %1053 = load i32, i32* %6, align 4
  %1054 = xor i32 %1053, %1052
  store i32 %1054, i32* %6, align 4
  %1055 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 1
  %1056 = load i32, i32* %1055, align 4
  %1057 = load i32, i32* %6, align 4
  %1058 = add i32 %1056, %1057
  store i32 %1058, i32* %8, align 4
  %1059 = load %1*, %1** %3, align 8
  %1060 = getelementptr inbounds %1, %1* %1059, i32 0, i32 4
  %1061 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1060, align 8
  %1062 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1061, i64 0, i64 0
  %1063 = load i32, i32* %8, align 4
  %1064 = and i32 %1063, 255
  %1065 = zext i32 %1064 to i64
  %1066 = getelementptr inbounds [256 x i32], [256 x i32]* %1062, i64 0, i64 %1065
  %1067 = load i32, i32* %1066, align 4
  %1068 = load %1*, %1** %3, align 8
  %1069 = getelementptr inbounds %1, %1* %1068, i32 0, i32 4
  %1070 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1069, align 8
  %1071 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1070, i64 0, i64 1
  %1072 = load i32, i32* %8, align 4
  %1073 = lshr i32 %1072, 8
  %1074 = and i32 %1073, 255
  %1075 = zext i32 %1074 to i64
  %1076 = getelementptr inbounds [256 x i32], [256 x i32]* %1071, i64 0, i64 %1075
  %1077 = load i32, i32* %1076, align 4
  %1078 = xor i32 %1067, %1077
  %1079 = load %1*, %1** %3, align 8
  %1080 = getelementptr inbounds %1, %1* %1079, i32 0, i32 4
  %1081 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1080, align 8
  %1082 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1081, i64 0, i64 2
  %1083 = load i32, i32* %8, align 4
  %1084 = lshr i32 %1083, 16
  %1085 = and i32 %1084, 255
  %1086 = zext i32 %1085 to i64
  %1087 = getelementptr inbounds [256 x i32], [256 x i32]* %1082, i64 0, i64 %1086
  %1088 = load i32, i32* %1087, align 4
  %1089 = xor i32 %1078, %1088
  %1090 = load %1*, %1** %3, align 8
  %1091 = getelementptr inbounds %1, %1* %1090, i32 0, i32 4
  %1092 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1091, align 8
  %1093 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1092, i64 0, i64 3
  %1094 = load i32, i32* %8, align 4
  %1095 = lshr i32 %1094, 24
  %1096 = zext i32 %1095 to i64
  %1097 = getelementptr inbounds [256 x i32], [256 x i32]* %1093, i64 0, i64 %1096
  %1098 = load i32, i32* %1097, align 4
  %1099 = xor i32 %1089, %1098
  %1100 = load i32, i32* %7, align 4
  %1101 = xor i32 %1100, %1099
  store i32 %1101, i32* %7, align 4
  %1102 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 2
  %1103 = load i32, i32* %1102, align 8
  %1104 = load i32, i32* %7, align 4
  %1105 = add i32 %1103, %1104
  store i32 %1105, i32* %8, align 4
  %1106 = load %1*, %1** %3, align 8
  %1107 = getelementptr inbounds %1, %1* %1106, i32 0, i32 4
  %1108 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1107, align 8
  %1109 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1108, i64 0, i64 0
  %1110 = load i32, i32* %8, align 4
  %1111 = and i32 %1110, 255
  %1112 = zext i32 %1111 to i64
  %1113 = getelementptr inbounds [256 x i32], [256 x i32]* %1109, i64 0, i64 %1112
  %1114 = load i32, i32* %1113, align 4
  %1115 = load %1*, %1** %3, align 8
  %1116 = getelementptr inbounds %1, %1* %1115, i32 0, i32 4
  %1117 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1116, align 8
  %1118 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1117, i64 0, i64 1
  %1119 = load i32, i32* %8, align 4
  %1120 = lshr i32 %1119, 8
  %1121 = and i32 %1120, 255
  %1122 = zext i32 %1121 to i64
  %1123 = getelementptr inbounds [256 x i32], [256 x i32]* %1118, i64 0, i64 %1122
  %1124 = load i32, i32* %1123, align 4
  %1125 = xor i32 %1114, %1124
  %1126 = load %1*, %1** %3, align 8
  %1127 = getelementptr inbounds %1, %1* %1126, i32 0, i32 4
  %1128 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1127, align 8
  %1129 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1128, i64 0, i64 2
  %1130 = load i32, i32* %8, align 4
  %1131 = lshr i32 %1130, 16
  %1132 = and i32 %1131, 255
  %1133 = zext i32 %1132 to i64
  %1134 = getelementptr inbounds [256 x i32], [256 x i32]* %1129, i64 0, i64 %1133
  %1135 = load i32, i32* %1134, align 4
  %1136 = xor i32 %1125, %1135
  %1137 = load %1*, %1** %3, align 8
  %1138 = getelementptr inbounds %1, %1* %1137, i32 0, i32 4
  %1139 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1138, align 8
  %1140 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1139, i64 0, i64 3
  %1141 = load i32, i32* %8, align 4
  %1142 = lshr i32 %1141, 24
  %1143 = zext i32 %1142 to i64
  %1144 = getelementptr inbounds [256 x i32], [256 x i32]* %1140, i64 0, i64 %1143
  %1145 = load i32, i32* %1144, align 4
  %1146 = xor i32 %1136, %1145
  %1147 = load i32, i32* %6, align 4
  %1148 = xor i32 %1147, %1146
  store i32 %1148, i32* %6, align 4
  %1149 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 3
  %1150 = load i32, i32* %1149, align 4
  %1151 = load i32, i32* %6, align 4
  %1152 = add i32 %1150, %1151
  store i32 %1152, i32* %8, align 4
  %1153 = load %1*, %1** %3, align 8
  %1154 = getelementptr inbounds %1, %1* %1153, i32 0, i32 4
  %1155 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1154, align 8
  %1156 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1155, i64 0, i64 0
  %1157 = load i32, i32* %8, align 4
  %1158 = and i32 %1157, 255
  %1159 = zext i32 %1158 to i64
  %1160 = getelementptr inbounds [256 x i32], [256 x i32]* %1156, i64 0, i64 %1159
  %1161 = load i32, i32* %1160, align 4
  %1162 = load %1*, %1** %3, align 8
  %1163 = getelementptr inbounds %1, %1* %1162, i32 0, i32 4
  %1164 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1163, align 8
  %1165 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1164, i64 0, i64 1
  %1166 = load i32, i32* %8, align 4
  %1167 = lshr i32 %1166, 8
  %1168 = and i32 %1167, 255
  %1169 = zext i32 %1168 to i64
  %1170 = getelementptr inbounds [256 x i32], [256 x i32]* %1165, i64 0, i64 %1169
  %1171 = load i32, i32* %1170, align 4
  %1172 = xor i32 %1161, %1171
  %1173 = load %1*, %1** %3, align 8
  %1174 = getelementptr inbounds %1, %1* %1173, i32 0, i32 4
  %1175 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1174, align 8
  %1176 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1175, i64 0, i64 2
  %1177 = load i32, i32* %8, align 4
  %1178 = lshr i32 %1177, 16
  %1179 = and i32 %1178, 255
  %1180 = zext i32 %1179 to i64
  %1181 = getelementptr inbounds [256 x i32], [256 x i32]* %1176, i64 0, i64 %1180
  %1182 = load i32, i32* %1181, align 4
  %1183 = xor i32 %1172, %1182
  %1184 = load %1*, %1** %3, align 8
  %1185 = getelementptr inbounds %1, %1* %1184, i32 0, i32 4
  %1186 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1185, align 8
  %1187 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1186, i64 0, i64 3
  %1188 = load i32, i32* %8, align 4
  %1189 = lshr i32 %1188, 24
  %1190 = zext i32 %1189 to i64
  %1191 = getelementptr inbounds [256 x i32], [256 x i32]* %1187, i64 0, i64 %1190
  %1192 = load i32, i32* %1191, align 4
  %1193 = xor i32 %1183, %1192
  %1194 = load i32, i32* %7, align 4
  %1195 = xor i32 %1194, %1193
  store i32 %1195, i32* %7, align 4
  %1196 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 4
  %1197 = load i32, i32* %1196, align 16
  %1198 = load i32, i32* %7, align 4
  %1199 = add i32 %1197, %1198
  store i32 %1199, i32* %8, align 4
  %1200 = load %1*, %1** %3, align 8
  %1201 = getelementptr inbounds %1, %1* %1200, i32 0, i32 4
  %1202 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1201, align 8
  %1203 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1202, i64 0, i64 0
  %1204 = load i32, i32* %8, align 4
  %1205 = and i32 %1204, 255
  %1206 = zext i32 %1205 to i64
  %1207 = getelementptr inbounds [256 x i32], [256 x i32]* %1203, i64 0, i64 %1206
  %1208 = load i32, i32* %1207, align 4
  %1209 = load %1*, %1** %3, align 8
  %1210 = getelementptr inbounds %1, %1* %1209, i32 0, i32 4
  %1211 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1210, align 8
  %1212 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1211, i64 0, i64 1
  %1213 = load i32, i32* %8, align 4
  %1214 = lshr i32 %1213, 8
  %1215 = and i32 %1214, 255
  %1216 = zext i32 %1215 to i64
  %1217 = getelementptr inbounds [256 x i32], [256 x i32]* %1212, i64 0, i64 %1216
  %1218 = load i32, i32* %1217, align 4
  %1219 = xor i32 %1208, %1218
  %1220 = load %1*, %1** %3, align 8
  %1221 = getelementptr inbounds %1, %1* %1220, i32 0, i32 4
  %1222 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1221, align 8
  %1223 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1222, i64 0, i64 2
  %1224 = load i32, i32* %8, align 4
  %1225 = lshr i32 %1224, 16
  %1226 = and i32 %1225, 255
  %1227 = zext i32 %1226 to i64
  %1228 = getelementptr inbounds [256 x i32], [256 x i32]* %1223, i64 0, i64 %1227
  %1229 = load i32, i32* %1228, align 4
  %1230 = xor i32 %1219, %1229
  %1231 = load %1*, %1** %3, align 8
  %1232 = getelementptr inbounds %1, %1* %1231, i32 0, i32 4
  %1233 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1232, align 8
  %1234 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1233, i64 0, i64 3
  %1235 = load i32, i32* %8, align 4
  %1236 = lshr i32 %1235, 24
  %1237 = zext i32 %1236 to i64
  %1238 = getelementptr inbounds [256 x i32], [256 x i32]* %1234, i64 0, i64 %1237
  %1239 = load i32, i32* %1238, align 4
  %1240 = xor i32 %1230, %1239
  %1241 = load i32, i32* %6, align 4
  %1242 = xor i32 %1241, %1240
  store i32 %1242, i32* %6, align 4
  %1243 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 5
  %1244 = load i32, i32* %1243, align 4
  %1245 = load i32, i32* %6, align 4
  %1246 = add i32 %1244, %1245
  store i32 %1246, i32* %8, align 4
  %1247 = load %1*, %1** %3, align 8
  %1248 = getelementptr inbounds %1, %1* %1247, i32 0, i32 4
  %1249 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1248, align 8
  %1250 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1249, i64 0, i64 0
  %1251 = load i32, i32* %8, align 4
  %1252 = and i32 %1251, 255
  %1253 = zext i32 %1252 to i64
  %1254 = getelementptr inbounds [256 x i32], [256 x i32]* %1250, i64 0, i64 %1253
  %1255 = load i32, i32* %1254, align 4
  %1256 = load %1*, %1** %3, align 8
  %1257 = getelementptr inbounds %1, %1* %1256, i32 0, i32 4
  %1258 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1257, align 8
  %1259 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1258, i64 0, i64 1
  %1260 = load i32, i32* %8, align 4
  %1261 = lshr i32 %1260, 8
  %1262 = and i32 %1261, 255
  %1263 = zext i32 %1262 to i64
  %1264 = getelementptr inbounds [256 x i32], [256 x i32]* %1259, i64 0, i64 %1263
  %1265 = load i32, i32* %1264, align 4
  %1266 = xor i32 %1255, %1265
  %1267 = load %1*, %1** %3, align 8
  %1268 = getelementptr inbounds %1, %1* %1267, i32 0, i32 4
  %1269 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1268, align 8
  %1270 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1269, i64 0, i64 2
  %1271 = load i32, i32* %8, align 4
  %1272 = lshr i32 %1271, 16
  %1273 = and i32 %1272, 255
  %1274 = zext i32 %1273 to i64
  %1275 = getelementptr inbounds [256 x i32], [256 x i32]* %1270, i64 0, i64 %1274
  %1276 = load i32, i32* %1275, align 4
  %1277 = xor i32 %1266, %1276
  %1278 = load %1*, %1** %3, align 8
  %1279 = getelementptr inbounds %1, %1* %1278, i32 0, i32 4
  %1280 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1279, align 8
  %1281 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1280, i64 0, i64 3
  %1282 = load i32, i32* %8, align 4
  %1283 = lshr i32 %1282, 24
  %1284 = zext i32 %1283 to i64
  %1285 = getelementptr inbounds [256 x i32], [256 x i32]* %1281, i64 0, i64 %1284
  %1286 = load i32, i32* %1285, align 4
  %1287 = xor i32 %1277, %1286
  %1288 = load i32, i32* %7, align 4
  %1289 = xor i32 %1288, %1287
  store i32 %1289, i32* %7, align 4
  %1290 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 6
  %1291 = load i32, i32* %1290, align 8
  %1292 = load i32, i32* %7, align 4
  %1293 = add i32 %1291, %1292
  store i32 %1293, i32* %8, align 4
  %1294 = load %1*, %1** %3, align 8
  %1295 = getelementptr inbounds %1, %1* %1294, i32 0, i32 4
  %1296 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1295, align 8
  %1297 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1296, i64 0, i64 0
  %1298 = load i32, i32* %8, align 4
  %1299 = and i32 %1298, 255
  %1300 = zext i32 %1299 to i64
  %1301 = getelementptr inbounds [256 x i32], [256 x i32]* %1297, i64 0, i64 %1300
  %1302 = load i32, i32* %1301, align 4
  %1303 = load %1*, %1** %3, align 8
  %1304 = getelementptr inbounds %1, %1* %1303, i32 0, i32 4
  %1305 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1304, align 8
  %1306 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1305, i64 0, i64 1
  %1307 = load i32, i32* %8, align 4
  %1308 = lshr i32 %1307, 8
  %1309 = and i32 %1308, 255
  %1310 = zext i32 %1309 to i64
  %1311 = getelementptr inbounds [256 x i32], [256 x i32]* %1306, i64 0, i64 %1310
  %1312 = load i32, i32* %1311, align 4
  %1313 = xor i32 %1302, %1312
  %1314 = load %1*, %1** %3, align 8
  %1315 = getelementptr inbounds %1, %1* %1314, i32 0, i32 4
  %1316 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1315, align 8
  %1317 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1316, i64 0, i64 2
  %1318 = load i32, i32* %8, align 4
  %1319 = lshr i32 %1318, 16
  %1320 = and i32 %1319, 255
  %1321 = zext i32 %1320 to i64
  %1322 = getelementptr inbounds [256 x i32], [256 x i32]* %1317, i64 0, i64 %1321
  %1323 = load i32, i32* %1322, align 4
  %1324 = xor i32 %1313, %1323
  %1325 = load %1*, %1** %3, align 8
  %1326 = getelementptr inbounds %1, %1* %1325, i32 0, i32 4
  %1327 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1326, align 8
  %1328 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1327, i64 0, i64 3
  %1329 = load i32, i32* %8, align 4
  %1330 = lshr i32 %1329, 24
  %1331 = zext i32 %1330 to i64
  %1332 = getelementptr inbounds [256 x i32], [256 x i32]* %1328, i64 0, i64 %1331
  %1333 = load i32, i32* %1332, align 4
  %1334 = xor i32 %1324, %1333
  %1335 = load i32, i32* %6, align 4
  %1336 = xor i32 %1335, %1334
  store i32 %1336, i32* %6, align 4
  %1337 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 7
  %1338 = load i32, i32* %1337, align 4
  %1339 = load i32, i32* %6, align 4
  %1340 = add i32 %1338, %1339
  store i32 %1340, i32* %8, align 4
  %1341 = load %1*, %1** %3, align 8
  %1342 = getelementptr inbounds %1, %1* %1341, i32 0, i32 4
  %1343 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1342, align 8
  %1344 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1343, i64 0, i64 0
  %1345 = load i32, i32* %8, align 4
  %1346 = and i32 %1345, 255
  %1347 = zext i32 %1346 to i64
  %1348 = getelementptr inbounds [256 x i32], [256 x i32]* %1344, i64 0, i64 %1347
  %1349 = load i32, i32* %1348, align 4
  %1350 = load %1*, %1** %3, align 8
  %1351 = getelementptr inbounds %1, %1* %1350, i32 0, i32 4
  %1352 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1351, align 8
  %1353 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1352, i64 0, i64 1
  %1354 = load i32, i32* %8, align 4
  %1355 = lshr i32 %1354, 8
  %1356 = and i32 %1355, 255
  %1357 = zext i32 %1356 to i64
  %1358 = getelementptr inbounds [256 x i32], [256 x i32]* %1353, i64 0, i64 %1357
  %1359 = load i32, i32* %1358, align 4
  %1360 = xor i32 %1349, %1359
  %1361 = load %1*, %1** %3, align 8
  %1362 = getelementptr inbounds %1, %1* %1361, i32 0, i32 4
  %1363 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1362, align 8
  %1364 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1363, i64 0, i64 2
  %1365 = load i32, i32* %8, align 4
  %1366 = lshr i32 %1365, 16
  %1367 = and i32 %1366, 255
  %1368 = zext i32 %1367 to i64
  %1369 = getelementptr inbounds [256 x i32], [256 x i32]* %1364, i64 0, i64 %1368
  %1370 = load i32, i32* %1369, align 4
  %1371 = xor i32 %1360, %1370
  %1372 = load %1*, %1** %3, align 8
  %1373 = getelementptr inbounds %1, %1* %1372, i32 0, i32 4
  %1374 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1373, align 8
  %1375 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1374, i64 0, i64 3
  %1376 = load i32, i32* %8, align 4
  %1377 = lshr i32 %1376, 24
  %1378 = zext i32 %1377 to i64
  %1379 = getelementptr inbounds [256 x i32], [256 x i32]* %1375, i64 0, i64 %1378
  %1380 = load i32, i32* %1379, align 4
  %1381 = xor i32 %1371, %1380
  %1382 = load i32, i32* %7, align 4
  %1383 = xor i32 %1382, %1381
  store i32 %1383, i32* %7, align 4
  %1384 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 7
  %1385 = load i32, i32* %1384, align 4
  %1386 = load i32, i32* %7, align 4
  %1387 = add i32 %1385, %1386
  store i32 %1387, i32* %8, align 4
  %1388 = load %1*, %1** %3, align 8
  %1389 = getelementptr inbounds %1, %1* %1388, i32 0, i32 4
  %1390 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1389, align 8
  %1391 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1390, i64 0, i64 0
  %1392 = load i32, i32* %8, align 4
  %1393 = and i32 %1392, 255
  %1394 = zext i32 %1393 to i64
  %1395 = getelementptr inbounds [256 x i32], [256 x i32]* %1391, i64 0, i64 %1394
  %1396 = load i32, i32* %1395, align 4
  %1397 = load %1*, %1** %3, align 8
  %1398 = getelementptr inbounds %1, %1* %1397, i32 0, i32 4
  %1399 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1398, align 8
  %1400 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1399, i64 0, i64 1
  %1401 = load i32, i32* %8, align 4
  %1402 = lshr i32 %1401, 8
  %1403 = and i32 %1402, 255
  %1404 = zext i32 %1403 to i64
  %1405 = getelementptr inbounds [256 x i32], [256 x i32]* %1400, i64 0, i64 %1404
  %1406 = load i32, i32* %1405, align 4
  %1407 = xor i32 %1396, %1406
  %1408 = load %1*, %1** %3, align 8
  %1409 = getelementptr inbounds %1, %1* %1408, i32 0, i32 4
  %1410 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1409, align 8
  %1411 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1410, i64 0, i64 2
  %1412 = load i32, i32* %8, align 4
  %1413 = lshr i32 %1412, 16
  %1414 = and i32 %1413, 255
  %1415 = zext i32 %1414 to i64
  %1416 = getelementptr inbounds [256 x i32], [256 x i32]* %1411, i64 0, i64 %1415
  %1417 = load i32, i32* %1416, align 4
  %1418 = xor i32 %1407, %1417
  %1419 = load %1*, %1** %3, align 8
  %1420 = getelementptr inbounds %1, %1* %1419, i32 0, i32 4
  %1421 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1420, align 8
  %1422 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1421, i64 0, i64 3
  %1423 = load i32, i32* %8, align 4
  %1424 = lshr i32 %1423, 24
  %1425 = zext i32 %1424 to i64
  %1426 = getelementptr inbounds [256 x i32], [256 x i32]* %1422, i64 0, i64 %1425
  %1427 = load i32, i32* %1426, align 4
  %1428 = xor i32 %1418, %1427
  %1429 = load i32, i32* %6, align 4
  %1430 = xor i32 %1429, %1428
  store i32 %1430, i32* %6, align 4
  %1431 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 6
  %1432 = load i32, i32* %1431, align 8
  %1433 = load i32, i32* %6, align 4
  %1434 = add i32 %1432, %1433
  store i32 %1434, i32* %8, align 4
  %1435 = load %1*, %1** %3, align 8
  %1436 = getelementptr inbounds %1, %1* %1435, i32 0, i32 4
  %1437 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1436, align 8
  %1438 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1437, i64 0, i64 0
  %1439 = load i32, i32* %8, align 4
  %1440 = and i32 %1439, 255
  %1441 = zext i32 %1440 to i64
  %1442 = getelementptr inbounds [256 x i32], [256 x i32]* %1438, i64 0, i64 %1441
  %1443 = load i32, i32* %1442, align 4
  %1444 = load %1*, %1** %3, align 8
  %1445 = getelementptr inbounds %1, %1* %1444, i32 0, i32 4
  %1446 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1445, align 8
  %1447 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1446, i64 0, i64 1
  %1448 = load i32, i32* %8, align 4
  %1449 = lshr i32 %1448, 8
  %1450 = and i32 %1449, 255
  %1451 = zext i32 %1450 to i64
  %1452 = getelementptr inbounds [256 x i32], [256 x i32]* %1447, i64 0, i64 %1451
  %1453 = load i32, i32* %1452, align 4
  %1454 = xor i32 %1443, %1453
  %1455 = load %1*, %1** %3, align 8
  %1456 = getelementptr inbounds %1, %1* %1455, i32 0, i32 4
  %1457 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1456, align 8
  %1458 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1457, i64 0, i64 2
  %1459 = load i32, i32* %8, align 4
  %1460 = lshr i32 %1459, 16
  %1461 = and i32 %1460, 255
  %1462 = zext i32 %1461 to i64
  %1463 = getelementptr inbounds [256 x i32], [256 x i32]* %1458, i64 0, i64 %1462
  %1464 = load i32, i32* %1463, align 4
  %1465 = xor i32 %1454, %1464
  %1466 = load %1*, %1** %3, align 8
  %1467 = getelementptr inbounds %1, %1* %1466, i32 0, i32 4
  %1468 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1467, align 8
  %1469 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1468, i64 0, i64 3
  %1470 = load i32, i32* %8, align 4
  %1471 = lshr i32 %1470, 24
  %1472 = zext i32 %1471 to i64
  %1473 = getelementptr inbounds [256 x i32], [256 x i32]* %1469, i64 0, i64 %1472
  %1474 = load i32, i32* %1473, align 4
  %1475 = xor i32 %1465, %1474
  %1476 = load i32, i32* %7, align 4
  %1477 = xor i32 %1476, %1475
  store i32 %1477, i32* %7, align 4
  %1478 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 5
  %1479 = load i32, i32* %1478, align 4
  %1480 = load i32, i32* %7, align 4
  %1481 = add i32 %1479, %1480
  store i32 %1481, i32* %8, align 4
  %1482 = load %1*, %1** %3, align 8
  %1483 = getelementptr inbounds %1, %1* %1482, i32 0, i32 4
  %1484 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1483, align 8
  %1485 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1484, i64 0, i64 0
  %1486 = load i32, i32* %8, align 4
  %1487 = and i32 %1486, 255
  %1488 = zext i32 %1487 to i64
  %1489 = getelementptr inbounds [256 x i32], [256 x i32]* %1485, i64 0, i64 %1488
  %1490 = load i32, i32* %1489, align 4
  %1491 = load %1*, %1** %3, align 8
  %1492 = getelementptr inbounds %1, %1* %1491, i32 0, i32 4
  %1493 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1492, align 8
  %1494 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1493, i64 0, i64 1
  %1495 = load i32, i32* %8, align 4
  %1496 = lshr i32 %1495, 8
  %1497 = and i32 %1496, 255
  %1498 = zext i32 %1497 to i64
  %1499 = getelementptr inbounds [256 x i32], [256 x i32]* %1494, i64 0, i64 %1498
  %1500 = load i32, i32* %1499, align 4
  %1501 = xor i32 %1490, %1500
  %1502 = load %1*, %1** %3, align 8
  %1503 = getelementptr inbounds %1, %1* %1502, i32 0, i32 4
  %1504 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1503, align 8
  %1505 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1504, i64 0, i64 2
  %1506 = load i32, i32* %8, align 4
  %1507 = lshr i32 %1506, 16
  %1508 = and i32 %1507, 255
  %1509 = zext i32 %1508 to i64
  %1510 = getelementptr inbounds [256 x i32], [256 x i32]* %1505, i64 0, i64 %1509
  %1511 = load i32, i32* %1510, align 4
  %1512 = xor i32 %1501, %1511
  %1513 = load %1*, %1** %3, align 8
  %1514 = getelementptr inbounds %1, %1* %1513, i32 0, i32 4
  %1515 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1514, align 8
  %1516 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1515, i64 0, i64 3
  %1517 = load i32, i32* %8, align 4
  %1518 = lshr i32 %1517, 24
  %1519 = zext i32 %1518 to i64
  %1520 = getelementptr inbounds [256 x i32], [256 x i32]* %1516, i64 0, i64 %1519
  %1521 = load i32, i32* %1520, align 4
  %1522 = xor i32 %1512, %1521
  %1523 = load i32, i32* %6, align 4
  %1524 = xor i32 %1523, %1522
  store i32 %1524, i32* %6, align 4
  %1525 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 4
  %1526 = load i32, i32* %1525, align 16
  %1527 = load i32, i32* %6, align 4
  %1528 = add i32 %1526, %1527
  store i32 %1528, i32* %8, align 4
  %1529 = load %1*, %1** %3, align 8
  %1530 = getelementptr inbounds %1, %1* %1529, i32 0, i32 4
  %1531 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1530, align 8
  %1532 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1531, i64 0, i64 0
  %1533 = load i32, i32* %8, align 4
  %1534 = and i32 %1533, 255
  %1535 = zext i32 %1534 to i64
  %1536 = getelementptr inbounds [256 x i32], [256 x i32]* %1532, i64 0, i64 %1535
  %1537 = load i32, i32* %1536, align 4
  %1538 = load %1*, %1** %3, align 8
  %1539 = getelementptr inbounds %1, %1* %1538, i32 0, i32 4
  %1540 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1539, align 8
  %1541 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1540, i64 0, i64 1
  %1542 = load i32, i32* %8, align 4
  %1543 = lshr i32 %1542, 8
  %1544 = and i32 %1543, 255
  %1545 = zext i32 %1544 to i64
  %1546 = getelementptr inbounds [256 x i32], [256 x i32]* %1541, i64 0, i64 %1545
  %1547 = load i32, i32* %1546, align 4
  %1548 = xor i32 %1537, %1547
  %1549 = load %1*, %1** %3, align 8
  %1550 = getelementptr inbounds %1, %1* %1549, i32 0, i32 4
  %1551 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1550, align 8
  %1552 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1551, i64 0, i64 2
  %1553 = load i32, i32* %8, align 4
  %1554 = lshr i32 %1553, 16
  %1555 = and i32 %1554, 255
  %1556 = zext i32 %1555 to i64
  %1557 = getelementptr inbounds [256 x i32], [256 x i32]* %1552, i64 0, i64 %1556
  %1558 = load i32, i32* %1557, align 4
  %1559 = xor i32 %1548, %1558
  %1560 = load %1*, %1** %3, align 8
  %1561 = getelementptr inbounds %1, %1* %1560, i32 0, i32 4
  %1562 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1561, align 8
  %1563 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1562, i64 0, i64 3
  %1564 = load i32, i32* %8, align 4
  %1565 = lshr i32 %1564, 24
  %1566 = zext i32 %1565 to i64
  %1567 = getelementptr inbounds [256 x i32], [256 x i32]* %1563, i64 0, i64 %1566
  %1568 = load i32, i32* %1567, align 4
  %1569 = xor i32 %1559, %1568
  %1570 = load i32, i32* %7, align 4
  %1571 = xor i32 %1570, %1569
  store i32 %1571, i32* %7, align 4
  %1572 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 3
  %1573 = load i32, i32* %1572, align 4
  %1574 = load i32, i32* %7, align 4
  %1575 = add i32 %1573, %1574
  store i32 %1575, i32* %8, align 4
  %1576 = load %1*, %1** %3, align 8
  %1577 = getelementptr inbounds %1, %1* %1576, i32 0, i32 4
  %1578 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1577, align 8
  %1579 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1578, i64 0, i64 0
  %1580 = load i32, i32* %8, align 4
  %1581 = and i32 %1580, 255
  %1582 = zext i32 %1581 to i64
  %1583 = getelementptr inbounds [256 x i32], [256 x i32]* %1579, i64 0, i64 %1582
  %1584 = load i32, i32* %1583, align 4
  %1585 = load %1*, %1** %3, align 8
  %1586 = getelementptr inbounds %1, %1* %1585, i32 0, i32 4
  %1587 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1586, align 8
  %1588 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1587, i64 0, i64 1
  %1589 = load i32, i32* %8, align 4
  %1590 = lshr i32 %1589, 8
  %1591 = and i32 %1590, 255
  %1592 = zext i32 %1591 to i64
  %1593 = getelementptr inbounds [256 x i32], [256 x i32]* %1588, i64 0, i64 %1592
  %1594 = load i32, i32* %1593, align 4
  %1595 = xor i32 %1584, %1594
  %1596 = load %1*, %1** %3, align 8
  %1597 = getelementptr inbounds %1, %1* %1596, i32 0, i32 4
  %1598 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1597, align 8
  %1599 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1598, i64 0, i64 2
  %1600 = load i32, i32* %8, align 4
  %1601 = lshr i32 %1600, 16
  %1602 = and i32 %1601, 255
  %1603 = zext i32 %1602 to i64
  %1604 = getelementptr inbounds [256 x i32], [256 x i32]* %1599, i64 0, i64 %1603
  %1605 = load i32, i32* %1604, align 4
  %1606 = xor i32 %1595, %1605
  %1607 = load %1*, %1** %3, align 8
  %1608 = getelementptr inbounds %1, %1* %1607, i32 0, i32 4
  %1609 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1608, align 8
  %1610 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1609, i64 0, i64 3
  %1611 = load i32, i32* %8, align 4
  %1612 = lshr i32 %1611, 24
  %1613 = zext i32 %1612 to i64
  %1614 = getelementptr inbounds [256 x i32], [256 x i32]* %1610, i64 0, i64 %1613
  %1615 = load i32, i32* %1614, align 4
  %1616 = xor i32 %1606, %1615
  %1617 = load i32, i32* %6, align 4
  %1618 = xor i32 %1617, %1616
  store i32 %1618, i32* %6, align 4
  %1619 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 2
  %1620 = load i32, i32* %1619, align 8
  %1621 = load i32, i32* %6, align 4
  %1622 = add i32 %1620, %1621
  store i32 %1622, i32* %8, align 4
  %1623 = load %1*, %1** %3, align 8
  %1624 = getelementptr inbounds %1, %1* %1623, i32 0, i32 4
  %1625 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1624, align 8
  %1626 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1625, i64 0, i64 0
  %1627 = load i32, i32* %8, align 4
  %1628 = and i32 %1627, 255
  %1629 = zext i32 %1628 to i64
  %1630 = getelementptr inbounds [256 x i32], [256 x i32]* %1626, i64 0, i64 %1629
  %1631 = load i32, i32* %1630, align 4
  %1632 = load %1*, %1** %3, align 8
  %1633 = getelementptr inbounds %1, %1* %1632, i32 0, i32 4
  %1634 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1633, align 8
  %1635 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1634, i64 0, i64 1
  %1636 = load i32, i32* %8, align 4
  %1637 = lshr i32 %1636, 8
  %1638 = and i32 %1637, 255
  %1639 = zext i32 %1638 to i64
  %1640 = getelementptr inbounds [256 x i32], [256 x i32]* %1635, i64 0, i64 %1639
  %1641 = load i32, i32* %1640, align 4
  %1642 = xor i32 %1631, %1641
  %1643 = load %1*, %1** %3, align 8
  %1644 = getelementptr inbounds %1, %1* %1643, i32 0, i32 4
  %1645 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1644, align 8
  %1646 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1645, i64 0, i64 2
  %1647 = load i32, i32* %8, align 4
  %1648 = lshr i32 %1647, 16
  %1649 = and i32 %1648, 255
  %1650 = zext i32 %1649 to i64
  %1651 = getelementptr inbounds [256 x i32], [256 x i32]* %1646, i64 0, i64 %1650
  %1652 = load i32, i32* %1651, align 4
  %1653 = xor i32 %1642, %1652
  %1654 = load %1*, %1** %3, align 8
  %1655 = getelementptr inbounds %1, %1* %1654, i32 0, i32 4
  %1656 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1655, align 8
  %1657 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1656, i64 0, i64 3
  %1658 = load i32, i32* %8, align 4
  %1659 = lshr i32 %1658, 24
  %1660 = zext i32 %1659 to i64
  %1661 = getelementptr inbounds [256 x i32], [256 x i32]* %1657, i64 0, i64 %1660
  %1662 = load i32, i32* %1661, align 4
  %1663 = xor i32 %1653, %1662
  %1664 = load i32, i32* %7, align 4
  %1665 = xor i32 %1664, %1663
  store i32 %1665, i32* %7, align 4
  %1666 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 1
  %1667 = load i32, i32* %1666, align 4
  %1668 = load i32, i32* %7, align 4
  %1669 = add i32 %1667, %1668
  store i32 %1669, i32* %8, align 4
  %1670 = load %1*, %1** %3, align 8
  %1671 = getelementptr inbounds %1, %1* %1670, i32 0, i32 4
  %1672 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1671, align 8
  %1673 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1672, i64 0, i64 0
  %1674 = load i32, i32* %8, align 4
  %1675 = and i32 %1674, 255
  %1676 = zext i32 %1675 to i64
  %1677 = getelementptr inbounds [256 x i32], [256 x i32]* %1673, i64 0, i64 %1676
  %1678 = load i32, i32* %1677, align 4
  %1679 = load %1*, %1** %3, align 8
  %1680 = getelementptr inbounds %1, %1* %1679, i32 0, i32 4
  %1681 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1680, align 8
  %1682 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1681, i64 0, i64 1
  %1683 = load i32, i32* %8, align 4
  %1684 = lshr i32 %1683, 8
  %1685 = and i32 %1684, 255
  %1686 = zext i32 %1685 to i64
  %1687 = getelementptr inbounds [256 x i32], [256 x i32]* %1682, i64 0, i64 %1686
  %1688 = load i32, i32* %1687, align 4
  %1689 = xor i32 %1678, %1688
  %1690 = load %1*, %1** %3, align 8
  %1691 = getelementptr inbounds %1, %1* %1690, i32 0, i32 4
  %1692 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1691, align 8
  %1693 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1692, i64 0, i64 2
  %1694 = load i32, i32* %8, align 4
  %1695 = lshr i32 %1694, 16
  %1696 = and i32 %1695, 255
  %1697 = zext i32 %1696 to i64
  %1698 = getelementptr inbounds [256 x i32], [256 x i32]* %1693, i64 0, i64 %1697
  %1699 = load i32, i32* %1698, align 4
  %1700 = xor i32 %1689, %1699
  %1701 = load %1*, %1** %3, align 8
  %1702 = getelementptr inbounds %1, %1* %1701, i32 0, i32 4
  %1703 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1702, align 8
  %1704 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1703, i64 0, i64 3
  %1705 = load i32, i32* %8, align 4
  %1706 = lshr i32 %1705, 24
  %1707 = zext i32 %1706 to i64
  %1708 = getelementptr inbounds [256 x i32], [256 x i32]* %1704, i64 0, i64 %1707
  %1709 = load i32, i32* %1708, align 4
  %1710 = xor i32 %1700, %1709
  %1711 = load i32, i32* %6, align 4
  %1712 = xor i32 %1711, %1710
  store i32 %1712, i32* %6, align 4
  %1713 = getelementptr inbounds [8 x i32], [8 x i32]* %9, i64 0, i64 0
  %1714 = load i32, i32* %1713, align 16
  %1715 = load i32, i32* %6, align 4
  %1716 = add i32 %1714, %1715
  store i32 %1716, i32* %8, align 4
  %1717 = load %1*, %1** %3, align 8
  %1718 = getelementptr inbounds %1, %1* %1717, i32 0, i32 4
  %1719 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1718, align 8
  %1720 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1719, i64 0, i64 0
  %1721 = load i32, i32* %8, align 4
  %1722 = and i32 %1721, 255
  %1723 = zext i32 %1722 to i64
  %1724 = getelementptr inbounds [256 x i32], [256 x i32]* %1720, i64 0, i64 %1723
  %1725 = load i32, i32* %1724, align 4
  %1726 = load %1*, %1** %3, align 8
  %1727 = getelementptr inbounds %1, %1* %1726, i32 0, i32 4
  %1728 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1727, align 8
  %1729 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1728, i64 0, i64 1
  %1730 = load i32, i32* %8, align 4
  %1731 = lshr i32 %1730, 8
  %1732 = and i32 %1731, 255
  %1733 = zext i32 %1732 to i64
  %1734 = getelementptr inbounds [256 x i32], [256 x i32]* %1729, i64 0, i64 %1733
  %1735 = load i32, i32* %1734, align 4
  %1736 = xor i32 %1725, %1735
  %1737 = load %1*, %1** %3, align 8
  %1738 = getelementptr inbounds %1, %1* %1737, i32 0, i32 4
  %1739 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1738, align 8
  %1740 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1739, i64 0, i64 2
  %1741 = load i32, i32* %8, align 4
  %1742 = lshr i32 %1741, 16
  %1743 = and i32 %1742, 255
  %1744 = zext i32 %1743 to i64
  %1745 = getelementptr inbounds [256 x i32], [256 x i32]* %1740, i64 0, i64 %1744
  %1746 = load i32, i32* %1745, align 4
  %1747 = xor i32 %1736, %1746
  %1748 = load %1*, %1** %3, align 8
  %1749 = getelementptr inbounds %1, %1* %1748, i32 0, i32 4
  %1750 = load [4 x [256 x i32]]*, [4 x [256 x i32]]** %1749, align 8
  %1751 = getelementptr inbounds [4 x [256 x i32]], [4 x [256 x i32]]* %1750, i64 0, i64 3
  %1752 = load i32, i32* %8, align 4
  %1753 = lshr i32 %1752, 24
  %1754 = zext i32 %1753 to i64
  %1755 = getelementptr inbounds [256 x i32], [256 x i32]* %1751, i64 0, i64 %1754
  %1756 = load i32, i32* %1755, align 4
  %1757 = xor i32 %1747, %1756
  %1758 = load i32, i32* %7, align 4
  %1759 = xor i32 %1758, %1757
  store i32 %1759, i32* %7, align 4
  %1760 = load i32, i32* %7, align 4
  store i32 %1760, i32* %8, align 4
  %1761 = load i32, i32* %6, align 4
  store i32 %1761, i32* %7, align 4
  %1762 = load i32, i32* %8, align 4
  store i32 %1762, i32* %6, align 4
  %1763 = load i32, i32* %7, align 4
  %1764 = load i32, i32* %5, align 4
  %1765 = sext i32 %1764 to i64
  %1766 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 %1765
  store i32 %1763, i32* %1766, align 4
  %1767 = load i32, i32* %6, align 4
  %1768 = load i32, i32* %5, align 4
  %1769 = add nsw i32 %1768, 1
  %1770 = sext i32 %1769 to i64
  %1771 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 %1770
  store i32 %1767, i32* %1771, align 4
  %1772 = load i32, i32* %5, align 4
  %1773 = icmp ne i32 %1772, 6
  br i1 %1773, label %1774, label %1873

1774:                                             ; preds = %44
  %1775 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %1776 = load i32, i32* %1775, align 16
  %1777 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 2
  %1778 = load i32, i32* %1777, align 8
  %1779 = xor i32 %1776, %1778
  store i32 %1779, i32* %6, align 4
  %1780 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  %1781 = load i32, i32* %1780, align 4
  %1782 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 3
  %1783 = load i32, i32* %1782, align 4
  %1784 = xor i32 %1781, %1783
  store i32 %1784, i32* %7, align 4
  %1785 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 2
  %1786 = load i32, i32* %1785, align 8
  %1787 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  store i32 %1786, i32* %1787, align 16
  %1788 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 3
  %1789 = load i32, i32* %1788, align 4
  %1790 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  store i32 %1789, i32* %1790, align 4
  %1791 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 4
  %1792 = load i32, i32* %1791, align 16
  %1793 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 2
  store i32 %1792, i32* %1793, align 8
  %1794 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 5
  %1795 = load i32, i32* %1794, align 4
  %1796 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 3
  store i32 %1795, i32* %1796, align 4
  %1797 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 6
  %1798 = load i32, i32* %1797, align 8
  %1799 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 4
  store i32 %1798, i32* %1799, align 16
  %1800 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 7
  %1801 = load i32, i32* %1800, align 4
  %1802 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 5
  store i32 %1801, i32* %1802, align 4
  %1803 = load i32, i32* %6, align 4
  %1804 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 6
  store i32 %1803, i32* %1804, align 8
  %1805 = load i32, i32* %7, align 4
  %1806 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 7
  store i32 %1805, i32* %1806, align 4
  %1807 = load i32, i32* %5, align 4
  %1808 = icmp eq i32 %1807, 2
  br i1 %1808, label %1809, label %1834

1809:                                             ; preds = %1774
  %1810 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %1811 = load i32, i32* %1810, align 16
  %1812 = xor i32 %1811, -16711936
  store i32 %1812, i32* %1810, align 16
  %1813 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  %1814 = load i32, i32* %1813, align 4
  %1815 = xor i32 %1814, -16711936
  store i32 %1815, i32* %1813, align 4
  %1816 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 2
  %1817 = load i32, i32* %1816, align 8
  %1818 = xor i32 %1817, 16711935
  store i32 %1818, i32* %1816, align 8
  %1819 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 3
  %1820 = load i32, i32* %1819, align 4
  %1821 = xor i32 %1820, 16711935
  store i32 %1821, i32* %1819, align 4
  %1822 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 4
  %1823 = load i32, i32* %1822, align 16
  %1824 = xor i32 %1823, 16776960
  store i32 %1824, i32* %1822, align 16
  %1825 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 5
  %1826 = load i32, i32* %1825, align 4
  %1827 = xor i32 %1826, -16776961
  store i32 %1827, i32* %1825, align 4
  %1828 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 6
  %1829 = load i32, i32* %1828, align 8
  %1830 = xor i32 %1829, 255
  store i32 %1830, i32* %1828, align 8
  %1831 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 7
  %1832 = load i32, i32* %1831, align 4
  %1833 = xor i32 %1832, -16711681
  store i32 %1833, i32* %1831, align 4
  br label %1834

1834:                                             ; preds = %1809, %1774
  %1835 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %1836 = load i32, i32* %1835, align 16
  store i32 %1836, i32* %6, align 4
  %1837 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %1838 = load i32, i32* %1837, align 8
  store i32 %1838, i32* %7, align 4
  %1839 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %1840 = load i32, i32* %1839, align 16
  %1841 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  store i32 %1840, i32* %1841, align 16
  %1842 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %1843 = load i32, i32* %1842, align 8
  %1844 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  store i32 %1843, i32* %1844, align 8
  %1845 = load i32, i32* %6, align 4
  %1846 = load i32, i32* %7, align 4
  %1847 = xor i32 %1845, %1846
  %1848 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  store i32 %1847, i32* %1848, align 16
  %1849 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %1850 = load i32, i32* %1849, align 16
  %1851 = load i32, i32* %7, align 4
  %1852 = xor i32 %1850, %1851
  %1853 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  store i32 %1852, i32* %1853, align 8
  %1854 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %1855 = load i32, i32* %1854, align 4
  store i32 %1855, i32* %6, align 4
  %1856 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %1857 = load i32, i32* %1856, align 4
  store i32 %1857, i32* %7, align 4
  %1858 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %1859 = load i32, i32* %1858, align 4
  %1860 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  store i32 %1859, i32* %1860, align 4
  %1861 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %1862 = load i32, i32* %1861, align 4
  %1863 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  store i32 %1862, i32* %1863, align 4
  %1864 = load i32, i32* %6, align 4
  %1865 = load i32, i32* %7, align 4
  %1866 = xor i32 %1864, %1865
  %1867 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  store i32 %1866, i32* %1867, align 4
  %1868 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %1869 = load i32, i32* %1868, align 4
  %1870 = load i32, i32* %7, align 4
  %1871 = xor i32 %1869, %1870
  %1872 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  store i32 %1871, i32* %1872, align 4
  br label %1873

1873:                                             ; preds = %1834, %44
  br label %1874

1874:                                             ; preds = %1873
  %1875 = load i32, i32* %5, align 4
  %1876 = add nsw i32 %1875, 2
  store i32 %1876, i32* %5, align 4
  br label %41

1877:                                             ; preds = %41
  %1878 = load i32*, i32** %15, align 8
  %1879 = getelementptr inbounds i32, i32* %1878, i64 0
  %1880 = load i32, i32* %1879, align 4
  %1881 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %1882 = load i32, i32* %1881, align 8
  %1883 = xor i32 %1880, %1882
  %1884 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  store i32 %1883, i32* %1884, align 16
  %1885 = load i32*, i32** %15, align 8
  %1886 = getelementptr inbounds i32, i32* %1885, i64 1
  %1887 = load i32, i32* %1886, align 4
  %1888 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %1889 = load i32, i32* %1888, align 4
  %1890 = xor i32 %1887, %1889
  %1891 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  store i32 %1890, i32* %1891, align 4
  %1892 = load i32*, i32** %15, align 8
  %1893 = getelementptr inbounds i32, i32* %1892, i64 2
  %1894 = load i32, i32* %1893, align 4
  %1895 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %1896 = load i32, i32* %1895, align 16
  %1897 = shl i32 %1896, 16
  %1898 = xor i32 %1894, %1897
  %1899 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %1900 = load i32, i32* %1899, align 16
  %1901 = lshr i32 %1900, 16
  %1902 = xor i32 %1898, %1901
  %1903 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %1904 = load i32, i32* %1903, align 16
  %1905 = and i32 %1904, 65535
  %1906 = xor i32 %1902, %1905
  %1907 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %1908 = load i32, i32* %1907, align 4
  %1909 = and i32 %1908, 65535
  %1910 = xor i32 %1906, %1909
  %1911 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %1912 = load i32, i32* %1911, align 4
  %1913 = lshr i32 %1912, 16
  %1914 = xor i32 %1910, %1913
  %1915 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 2
  %1916 = load i32, i32* %1915, align 8
  %1917 = shl i32 %1916, 16
  %1918 = xor i32 %1914, %1917
  %1919 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %1920 = load i32, i32* %1919, align 8
  %1921 = xor i32 %1918, %1920
  %1922 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %1923 = load i32, i32* %1922, align 8
  %1924 = shl i32 %1923, 16
  %1925 = xor i32 %1921, %1924
  %1926 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %1927 = load i32, i32* %1926, align 4
  %1928 = and i32 %1927, -65536
  %1929 = xor i32 %1925, %1928
  %1930 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %1931 = load i32, i32* %1930, align 4
  %1932 = lshr i32 %1931, 16
  %1933 = xor i32 %1929, %1932
  %1934 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 2
  store i32 %1933, i32* %1934, align 8
  %1935 = load i32*, i32** %15, align 8
  %1936 = getelementptr inbounds i32, i32* %1935, i64 3
  %1937 = load i32, i32* %1936, align 4
  %1938 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %1939 = load i32, i32* %1938, align 16
  %1940 = and i32 %1939, 65535
  %1941 = xor i32 %1937, %1940
  %1942 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %1943 = load i32, i32* %1942, align 16
  %1944 = shl i32 %1943, 16
  %1945 = xor i32 %1941, %1944
  %1946 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %1947 = load i32, i32* %1946, align 4
  %1948 = and i32 %1947, 65535
  %1949 = xor i32 %1945, %1948
  %1950 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %1951 = load i32, i32* %1950, align 4
  %1952 = shl i32 %1951, 16
  %1953 = xor i32 %1949, %1952
  %1954 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %1955 = load i32, i32* %1954, align 4
  %1956 = lshr i32 %1955, 16
  %1957 = xor i32 %1953, %1956
  %1958 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 2
  %1959 = load i32, i32* %1958, align 8
  %1960 = shl i32 %1959, 16
  %1961 = xor i32 %1957, %1960
  %1962 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 2
  %1963 = load i32, i32* %1962, align 8
  %1964 = lshr i32 %1963, 16
  %1965 = xor i32 %1961, %1964
  %1966 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 3
  %1967 = load i32, i32* %1966, align 4
  %1968 = shl i32 %1967, 16
  %1969 = xor i32 %1965, %1968
  %1970 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %1971 = load i32, i32* %1970, align 8
  %1972 = xor i32 %1969, %1971
  %1973 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %1974 = load i32, i32* %1973, align 8
  %1975 = shl i32 %1974, 16
  %1976 = xor i32 %1972, %1975
  %1977 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %1978 = load i32, i32* %1977, align 8
  %1979 = lshr i32 %1978, 16
  %1980 = xor i32 %1976, %1979
  %1981 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %1982 = load i32, i32* %1981, align 4
  %1983 = and i32 %1982, 65535
  %1984 = xor i32 %1980, %1983
  %1985 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %1986 = load i32, i32* %1985, align 4
  %1987 = shl i32 %1986, 16
  %1988 = xor i32 %1984, %1987
  %1989 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %1990 = load i32, i32* %1989, align 4
  %1991 = lshr i32 %1990, 16
  %1992 = xor i32 %1988, %1991
  %1993 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 3
  store i32 %1992, i32* %1993, align 4
  %1994 = load i32*, i32** %15, align 8
  %1995 = getelementptr inbounds i32, i32* %1994, i64 4
  %1996 = load i32, i32* %1995, align 4
  %1997 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %1998 = load i32, i32* %1997, align 16
  %1999 = and i32 %1998, -65536
  %2000 = xor i32 %1996, %1999
  %2001 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %2002 = load i32, i32* %2001, align 16
  %2003 = shl i32 %2002, 16
  %2004 = xor i32 %2000, %2003
  %2005 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %2006 = load i32, i32* %2005, align 16
  %2007 = lshr i32 %2006, 16
  %2008 = xor i32 %2004, %2007
  %2009 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %2010 = load i32, i32* %2009, align 4
  %2011 = and i32 %2010, -65536
  %2012 = xor i32 %2008, %2011
  %2013 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %2014 = load i32, i32* %2013, align 4
  %2015 = lshr i32 %2014, 16
  %2016 = xor i32 %2012, %2015
  %2017 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 2
  %2018 = load i32, i32* %2017, align 8
  %2019 = shl i32 %2018, 16
  %2020 = xor i32 %2016, %2019
  %2021 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 2
  %2022 = load i32, i32* %2021, align 8
  %2023 = lshr i32 %2022, 16
  %2024 = xor i32 %2020, %2023
  %2025 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 3
  %2026 = load i32, i32* %2025, align 4
  %2027 = shl i32 %2026, 16
  %2028 = xor i32 %2024, %2027
  %2029 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 3
  %2030 = load i32, i32* %2029, align 4
  %2031 = lshr i32 %2030, 16
  %2032 = xor i32 %2028, %2031
  %2033 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 4
  %2034 = load i32, i32* %2033, align 16
  %2035 = shl i32 %2034, 16
  %2036 = xor i32 %2032, %2035
  %2037 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %2038 = load i32, i32* %2037, align 8
  %2039 = shl i32 %2038, 16
  %2040 = xor i32 %2036, %2039
  %2041 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %2042 = load i32, i32* %2041, align 8
  %2043 = lshr i32 %2042, 16
  %2044 = xor i32 %2040, %2043
  %2045 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2046 = load i32, i32* %2045, align 4
  %2047 = and i32 %2046, 65535
  %2048 = xor i32 %2044, %2047
  %2049 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2050 = load i32, i32* %2049, align 4
  %2051 = shl i32 %2050, 16
  %2052 = xor i32 %2048, %2051
  %2053 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2054 = load i32, i32* %2053, align 4
  %2055 = lshr i32 %2054, 16
  %2056 = xor i32 %2052, %2055
  %2057 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 4
  store i32 %2056, i32* %2057, align 16
  %2058 = load i32*, i32** %15, align 8
  %2059 = getelementptr inbounds i32, i32* %2058, i64 5
  %2060 = load i32, i32* %2059, align 4
  %2061 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %2062 = load i32, i32* %2061, align 16
  %2063 = shl i32 %2062, 16
  %2064 = xor i32 %2060, %2063
  %2065 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %2066 = load i32, i32* %2065, align 16
  %2067 = lshr i32 %2066, 16
  %2068 = xor i32 %2064, %2067
  %2069 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %2070 = load i32, i32* %2069, align 16
  %2071 = and i32 %2070, -65536
  %2072 = xor i32 %2068, %2071
  %2073 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %2074 = load i32, i32* %2073, align 4
  %2075 = and i32 %2074, 65535
  %2076 = xor i32 %2072, %2075
  %2077 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 2
  %2078 = load i32, i32* %2077, align 8
  %2079 = xor i32 %2076, %2078
  %2080 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 2
  %2081 = load i32, i32* %2080, align 8
  %2082 = lshr i32 %2081, 16
  %2083 = xor i32 %2079, %2082
  %2084 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 3
  %2085 = load i32, i32* %2084, align 4
  %2086 = shl i32 %2085, 16
  %2087 = xor i32 %2083, %2086
  %2088 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 3
  %2089 = load i32, i32* %2088, align 4
  %2090 = lshr i32 %2089, 16
  %2091 = xor i32 %2087, %2090
  %2092 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 4
  %2093 = load i32, i32* %2092, align 16
  %2094 = shl i32 %2093, 16
  %2095 = xor i32 %2091, %2094
  %2096 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 4
  %2097 = load i32, i32* %2096, align 16
  %2098 = lshr i32 %2097, 16
  %2099 = xor i32 %2095, %2098
  %2100 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 5
  %2101 = load i32, i32* %2100, align 4
  %2102 = shl i32 %2101, 16
  %2103 = xor i32 %2099, %2102
  %2104 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %2105 = load i32, i32* %2104, align 8
  %2106 = shl i32 %2105, 16
  %2107 = xor i32 %2103, %2106
  %2108 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %2109 = load i32, i32* %2108, align 8
  %2110 = lshr i32 %2109, 16
  %2111 = xor i32 %2107, %2110
  %2112 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2113 = load i32, i32* %2112, align 4
  %2114 = and i32 %2113, -65536
  %2115 = xor i32 %2111, %2114
  %2116 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2117 = load i32, i32* %2116, align 4
  %2118 = shl i32 %2117, 16
  %2119 = xor i32 %2115, %2118
  %2120 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2121 = load i32, i32* %2120, align 4
  %2122 = lshr i32 %2121, 16
  %2123 = xor i32 %2119, %2122
  %2124 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 5
  store i32 %2123, i32* %2124, align 4
  %2125 = load i32*, i32** %15, align 8
  %2126 = getelementptr inbounds i32, i32* %2125, i64 6
  %2127 = load i32, i32* %2126, align 4
  %2128 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %2129 = load i32, i32* %2128, align 16
  %2130 = xor i32 %2127, %2129
  %2131 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %2132 = load i32, i32* %2131, align 4
  %2133 = lshr i32 %2132, 16
  %2134 = xor i32 %2130, %2133
  %2135 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 2
  %2136 = load i32, i32* %2135, align 8
  %2137 = shl i32 %2136, 16
  %2138 = xor i32 %2134, %2137
  %2139 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 3
  %2140 = load i32, i32* %2139, align 4
  %2141 = xor i32 %2138, %2140
  %2142 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 3
  %2143 = load i32, i32* %2142, align 4
  %2144 = lshr i32 %2143, 16
  %2145 = xor i32 %2141, %2144
  %2146 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 4
  %2147 = load i32, i32* %2146, align 16
  %2148 = shl i32 %2147, 16
  %2149 = xor i32 %2145, %2148
  %2150 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 4
  %2151 = load i32, i32* %2150, align 16
  %2152 = lshr i32 %2151, 16
  %2153 = xor i32 %2149, %2152
  %2154 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 5
  %2155 = load i32, i32* %2154, align 4
  %2156 = shl i32 %2155, 16
  %2157 = xor i32 %2153, %2156
  %2158 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 5
  %2159 = load i32, i32* %2158, align 4
  %2160 = lshr i32 %2159, 16
  %2161 = xor i32 %2157, %2160
  %2162 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %2163 = load i32, i32* %2162, align 8
  %2164 = xor i32 %2161, %2163
  %2165 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %2166 = load i32, i32* %2165, align 8
  %2167 = shl i32 %2166, 16
  %2168 = xor i32 %2164, %2167
  %2169 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %2170 = load i32, i32* %2169, align 8
  %2171 = lshr i32 %2170, 16
  %2172 = xor i32 %2168, %2171
  %2173 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2174 = load i32, i32* %2173, align 4
  %2175 = shl i32 %2174, 16
  %2176 = xor i32 %2172, %2175
  %2177 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 6
  store i32 %2176, i32* %2177, align 8
  %2178 = load i32*, i32** %15, align 8
  %2179 = getelementptr inbounds i32, i32* %2178, i64 7
  %2180 = load i32, i32* %2179, align 4
  %2181 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %2182 = load i32, i32* %2181, align 16
  %2183 = and i32 %2182, -65536
  %2184 = xor i32 %2180, %2183
  %2185 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 0
  %2186 = load i32, i32* %2185, align 16
  %2187 = shl i32 %2186, 16
  %2188 = xor i32 %2184, %2187
  %2189 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %2190 = load i32, i32* %2189, align 4
  %2191 = and i32 %2190, 65535
  %2192 = xor i32 %2188, %2191
  %2193 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 1
  %2194 = load i32, i32* %2193, align 4
  %2195 = shl i32 %2194, 16
  %2196 = xor i32 %2192, %2195
  %2197 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 2
  %2198 = load i32, i32* %2197, align 8
  %2199 = lshr i32 %2198, 16
  %2200 = xor i32 %2196, %2199
  %2201 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 3
  %2202 = load i32, i32* %2201, align 4
  %2203 = shl i32 %2202, 16
  %2204 = xor i32 %2200, %2203
  %2205 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 4
  %2206 = load i32, i32* %2205, align 16
  %2207 = xor i32 %2204, %2206
  %2208 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 4
  %2209 = load i32, i32* %2208, align 16
  %2210 = lshr i32 %2209, 16
  %2211 = xor i32 %2207, %2210
  %2212 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 5
  %2213 = load i32, i32* %2212, align 4
  %2214 = shl i32 %2213, 16
  %2215 = xor i32 %2211, %2214
  %2216 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 5
  %2217 = load i32, i32* %2216, align 4
  %2218 = lshr i32 %2217, 16
  %2219 = xor i32 %2215, %2218
  %2220 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 6
  %2221 = load i32, i32* %2220, align 8
  %2222 = lshr i32 %2221, 16
  %2223 = xor i32 %2219, %2222
  %2224 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2225 = load i32, i32* %2224, align 4
  %2226 = and i32 %2225, 65535
  %2227 = xor i32 %2223, %2226
  %2228 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2229 = load i32, i32* %2228, align 4
  %2230 = shl i32 %2229, 16
  %2231 = xor i32 %2227, %2230
  %2232 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i64 0, i64 7
  %2233 = load i32, i32* %2232, align 4
  %2234 = lshr i32 %2233, 16
  %2235 = xor i32 %2231, %2234
  %2236 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 7
  store i32 %2235, i32* %2236, align 4
  %2237 = load i32*, i32** %14, align 8
  %2238 = getelementptr inbounds i32, i32* %2237, i64 0
  %2239 = load i32, i32* %2238, align 4
  %2240 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  %2241 = load i32, i32* %2240, align 4
  %2242 = shl i32 %2241, 16
  %2243 = xor i32 %2239, %2242
  %2244 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %2245 = load i32, i32* %2244, align 16
  %2246 = lshr i32 %2245, 16
  %2247 = xor i32 %2243, %2246
  %2248 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  store i32 %2247, i32* %2248, align 16
  %2249 = load i32*, i32** %14, align 8
  %2250 = getelementptr inbounds i32, i32* %2249, i64 1
  %2251 = load i32, i32* %2250, align 4
  %2252 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 2
  %2253 = load i32, i32* %2252, align 8
  %2254 = shl i32 %2253, 16
  %2255 = xor i32 %2251, %2254
  %2256 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  %2257 = load i32, i32* %2256, align 4
  %2258 = lshr i32 %2257, 16
  %2259 = xor i32 %2255, %2258
  %2260 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  store i32 %2259, i32* %2260, align 4
  %2261 = load i32*, i32** %14, align 8
  %2262 = getelementptr inbounds i32, i32* %2261, i64 2
  %2263 = load i32, i32* %2262, align 4
  %2264 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 3
  %2265 = load i32, i32* %2264, align 4
  %2266 = shl i32 %2265, 16
  %2267 = xor i32 %2263, %2266
  %2268 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 2
  %2269 = load i32, i32* %2268, align 8
  %2270 = lshr i32 %2269, 16
  %2271 = xor i32 %2267, %2270
  %2272 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  store i32 %2271, i32* %2272, align 8
  %2273 = load i32*, i32** %14, align 8
  %2274 = getelementptr inbounds i32, i32* %2273, i64 3
  %2275 = load i32, i32* %2274, align 4
  %2276 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 4
  %2277 = load i32, i32* %2276, align 16
  %2278 = shl i32 %2277, 16
  %2279 = xor i32 %2275, %2278
  %2280 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 3
  %2281 = load i32, i32* %2280, align 4
  %2282 = lshr i32 %2281, 16
  %2283 = xor i32 %2279, %2282
  %2284 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  store i32 %2283, i32* %2284, align 4
  %2285 = load i32*, i32** %14, align 8
  %2286 = getelementptr inbounds i32, i32* %2285, i64 4
  %2287 = load i32, i32* %2286, align 4
  %2288 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 5
  %2289 = load i32, i32* %2288, align 4
  %2290 = shl i32 %2289, 16
  %2291 = xor i32 %2287, %2290
  %2292 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 4
  %2293 = load i32, i32* %2292, align 16
  %2294 = lshr i32 %2293, 16
  %2295 = xor i32 %2291, %2294
  %2296 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  store i32 %2295, i32* %2296, align 16
  %2297 = load i32*, i32** %14, align 8
  %2298 = getelementptr inbounds i32, i32* %2297, i64 5
  %2299 = load i32, i32* %2298, align 4
  %2300 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 6
  %2301 = load i32, i32* %2300, align 8
  %2302 = shl i32 %2301, 16
  %2303 = xor i32 %2299, %2302
  %2304 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 5
  %2305 = load i32, i32* %2304, align 4
  %2306 = lshr i32 %2305, 16
  %2307 = xor i32 %2303, %2306
  %2308 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  store i32 %2307, i32* %2308, align 4
  %2309 = load i32*, i32** %14, align 8
  %2310 = getelementptr inbounds i32, i32* %2309, i64 6
  %2311 = load i32, i32* %2310, align 4
  %2312 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 7
  %2313 = load i32, i32* %2312, align 4
  %2314 = shl i32 %2313, 16
  %2315 = xor i32 %2311, %2314
  %2316 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 6
  %2317 = load i32, i32* %2316, align 8
  %2318 = lshr i32 %2317, 16
  %2319 = xor i32 %2315, %2318
  %2320 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  store i32 %2319, i32* %2320, align 8
  %2321 = load i32*, i32** %14, align 8
  %2322 = getelementptr inbounds i32, i32* %2321, i64 7
  %2323 = load i32, i32* %2322, align 4
  %2324 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %2325 = load i32, i32* %2324, align 16
  %2326 = and i32 %2325, -65536
  %2327 = xor i32 %2323, %2326
  %2328 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %2329 = load i32, i32* %2328, align 16
  %2330 = shl i32 %2329, 16
  %2331 = xor i32 %2327, %2330
  %2332 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 7
  %2333 = load i32, i32* %2332, align 4
  %2334 = lshr i32 %2333, 16
  %2335 = xor i32 %2331, %2334
  %2336 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  %2337 = load i32, i32* %2336, align 4
  %2338 = and i32 %2337, -65536
  %2339 = xor i32 %2335, %2338
  %2340 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 1
  %2341 = load i32, i32* %2340, align 4
  %2342 = shl i32 %2341, 16
  %2343 = xor i32 %2339, %2342
  %2344 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 6
  %2345 = load i32, i32* %2344, align 8
  %2346 = shl i32 %2345, 16
  %2347 = xor i32 %2343, %2346
  %2348 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 7
  %2349 = load i32, i32* %2348, align 4
  %2350 = and i32 %2349, -65536
  %2351 = xor i32 %2347, %2350
  %2352 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  store i32 %2351, i32* %2352, align 4
  %2353 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2354 = load i32, i32* %2353, align 16
  %2355 = and i32 %2354, -65536
  %2356 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2357 = load i32, i32* %2356, align 16
  %2358 = shl i32 %2357, 16
  %2359 = xor i32 %2355, %2358
  %2360 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2361 = load i32, i32* %2360, align 16
  %2362 = lshr i32 %2361, 16
  %2363 = xor i32 %2359, %2362
  %2364 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2365 = load i32, i32* %2364, align 4
  %2366 = lshr i32 %2365, 16
  %2367 = xor i32 %2363, %2366
  %2368 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2369 = load i32, i32* %2368, align 4
  %2370 = and i32 %2369, -65536
  %2371 = xor i32 %2367, %2370
  %2372 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2373 = load i32, i32* %2372, align 8
  %2374 = shl i32 %2373, 16
  %2375 = xor i32 %2371, %2374
  %2376 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2377 = load i32, i32* %2376, align 4
  %2378 = lshr i32 %2377, 16
  %2379 = xor i32 %2375, %2378
  %2380 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2381 = load i32, i32* %2380, align 16
  %2382 = shl i32 %2381, 16
  %2383 = xor i32 %2379, %2382
  %2384 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2385 = load i32, i32* %2384, align 4
  %2386 = lshr i32 %2385, 16
  %2387 = xor i32 %2383, %2386
  %2388 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2389 = load i32, i32* %2388, align 4
  %2390 = xor i32 %2387, %2389
  %2391 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2392 = load i32, i32* %2391, align 8
  %2393 = lshr i32 %2392, 16
  %2394 = xor i32 %2390, %2393
  %2395 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2396 = load i32, i32* %2395, align 4
  %2397 = shl i32 %2396, 16
  %2398 = xor i32 %2394, %2397
  %2399 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2400 = load i32, i32* %2399, align 4
  %2401 = lshr i32 %2400, 16
  %2402 = xor i32 %2398, %2401
  %2403 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2404 = load i32, i32* %2403, align 4
  %2405 = and i32 %2404, 65535
  %2406 = xor i32 %2402, %2405
  %2407 = load i32*, i32** %14, align 8
  %2408 = getelementptr inbounds i32, i32* %2407, i64 0
  store i32 %2406, i32* %2408, align 4
  %2409 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2410 = load i32, i32* %2409, align 16
  %2411 = shl i32 %2410, 16
  %2412 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2413 = load i32, i32* %2412, align 16
  %2414 = lshr i32 %2413, 16
  %2415 = xor i32 %2411, %2414
  %2416 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2417 = load i32, i32* %2416, align 16
  %2418 = and i32 %2417, -65536
  %2419 = xor i32 %2415, %2418
  %2420 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2421 = load i32, i32* %2420, align 4
  %2422 = and i32 %2421, 65535
  %2423 = xor i32 %2419, %2422
  %2424 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2425 = load i32, i32* %2424, align 8
  %2426 = xor i32 %2423, %2425
  %2427 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2428 = load i32, i32* %2427, align 8
  %2429 = lshr i32 %2428, 16
  %2430 = xor i32 %2426, %2429
  %2431 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2432 = load i32, i32* %2431, align 4
  %2433 = shl i32 %2432, 16
  %2434 = xor i32 %2430, %2433
  %2435 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2436 = load i32, i32* %2435, align 16
  %2437 = lshr i32 %2436, 16
  %2438 = xor i32 %2434, %2437
  %2439 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2440 = load i32, i32* %2439, align 4
  %2441 = shl i32 %2440, 16
  %2442 = xor i32 %2438, %2441
  %2443 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2444 = load i32, i32* %2443, align 8
  %2445 = shl i32 %2444, 16
  %2446 = xor i32 %2442, %2445
  %2447 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2448 = load i32, i32* %2447, align 8
  %2449 = xor i32 %2446, %2448
  %2450 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2451 = load i32, i32* %2450, align 4
  %2452 = and i32 %2451, -65536
  %2453 = xor i32 %2449, %2452
  %2454 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2455 = load i32, i32* %2454, align 4
  %2456 = lshr i32 %2455, 16
  %2457 = xor i32 %2453, %2456
  %2458 = load i32*, i32** %14, align 8
  %2459 = getelementptr inbounds i32, i32* %2458, i64 1
  store i32 %2457, i32* %2459, align 4
  %2460 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2461 = load i32, i32* %2460, align 16
  %2462 = and i32 %2461, 65535
  %2463 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2464 = load i32, i32* %2463, align 16
  %2465 = shl i32 %2464, 16
  %2466 = xor i32 %2462, %2465
  %2467 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2468 = load i32, i32* %2467, align 4
  %2469 = shl i32 %2468, 16
  %2470 = xor i32 %2466, %2469
  %2471 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2472 = load i32, i32* %2471, align 4
  %2473 = lshr i32 %2472, 16
  %2474 = xor i32 %2470, %2473
  %2475 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2476 = load i32, i32* %2475, align 4
  %2477 = and i32 %2476, -65536
  %2478 = xor i32 %2474, %2477
  %2479 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2480 = load i32, i32* %2479, align 8
  %2481 = shl i32 %2480, 16
  %2482 = xor i32 %2478, %2481
  %2483 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2484 = load i32, i32* %2483, align 4
  %2485 = lshr i32 %2484, 16
  %2486 = xor i32 %2482, %2485
  %2487 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2488 = load i32, i32* %2487, align 4
  %2489 = xor i32 %2486, %2488
  %2490 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2491 = load i32, i32* %2490, align 16
  %2492 = shl i32 %2491, 16
  %2493 = xor i32 %2489, %2492
  %2494 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2495 = load i32, i32* %2494, align 4
  %2496 = lshr i32 %2495, 16
  %2497 = xor i32 %2493, %2496
  %2498 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2499 = load i32, i32* %2498, align 8
  %2500 = xor i32 %2497, %2499
  %2501 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2502 = load i32, i32* %2501, align 8
  %2503 = lshr i32 %2502, 16
  %2504 = xor i32 %2500, %2503
  %2505 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2506 = load i32, i32* %2505, align 4
  %2507 = and i32 %2506, 65535
  %2508 = xor i32 %2504, %2507
  %2509 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2510 = load i32, i32* %2509, align 4
  %2511 = shl i32 %2510, 16
  %2512 = xor i32 %2508, %2511
  %2513 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2514 = load i32, i32* %2513, align 4
  %2515 = lshr i32 %2514, 16
  %2516 = xor i32 %2512, %2515
  %2517 = load i32*, i32** %14, align 8
  %2518 = getelementptr inbounds i32, i32* %2517, i64 2
  store i32 %2516, i32* %2518, align 4
  %2519 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2520 = load i32, i32* %2519, align 16
  %2521 = shl i32 %2520, 16
  %2522 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2523 = load i32, i32* %2522, align 16
  %2524 = lshr i32 %2523, 16
  %2525 = xor i32 %2521, %2524
  %2526 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2527 = load i32, i32* %2526, align 16
  %2528 = and i32 %2527, -65536
  %2529 = xor i32 %2525, %2528
  %2530 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2531 = load i32, i32* %2530, align 4
  %2532 = and i32 %2531, -65536
  %2533 = xor i32 %2529, %2532
  %2534 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2535 = load i32, i32* %2534, align 4
  %2536 = lshr i32 %2535, 16
  %2537 = xor i32 %2533, %2536
  %2538 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2539 = load i32, i32* %2538, align 8
  %2540 = shl i32 %2539, 16
  %2541 = xor i32 %2537, %2540
  %2542 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2543 = load i32, i32* %2542, align 8
  %2544 = lshr i32 %2543, 16
  %2545 = xor i32 %2541, %2544
  %2546 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2547 = load i32, i32* %2546, align 8
  %2548 = xor i32 %2545, %2547
  %2549 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2550 = load i32, i32* %2549, align 4
  %2551 = shl i32 %2550, 16
  %2552 = xor i32 %2548, %2551
  %2553 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2554 = load i32, i32* %2553, align 16
  %2555 = lshr i32 %2554, 16
  %2556 = xor i32 %2552, %2555
  %2557 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2558 = load i32, i32* %2557, align 16
  %2559 = xor i32 %2556, %2558
  %2560 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2561 = load i32, i32* %2560, align 4
  %2562 = shl i32 %2561, 16
  %2563 = xor i32 %2559, %2562
  %2564 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2565 = load i32, i32* %2564, align 8
  %2566 = shl i32 %2565, 16
  %2567 = xor i32 %2563, %2566
  %2568 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2569 = load i32, i32* %2568, align 4
  %2570 = and i32 %2569, 65535
  %2571 = xor i32 %2567, %2570
  %2572 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2573 = load i32, i32* %2572, align 4
  %2574 = lshr i32 %2573, 16
  %2575 = xor i32 %2571, %2574
  %2576 = load i32*, i32** %14, align 8
  %2577 = getelementptr inbounds i32, i32* %2576, i64 3
  store i32 %2575, i32* %2577, align 4
  %2578 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2579 = load i32, i32* %2578, align 16
  %2580 = lshr i32 %2579, 16
  %2581 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2582 = load i32, i32* %2581, align 4
  %2583 = shl i32 %2582, 16
  %2584 = xor i32 %2580, %2583
  %2585 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2586 = load i32, i32* %2585, align 4
  %2587 = xor i32 %2584, %2586
  %2588 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2589 = load i32, i32* %2588, align 8
  %2590 = lshr i32 %2589, 16
  %2591 = xor i32 %2587, %2590
  %2592 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2593 = load i32, i32* %2592, align 8
  %2594 = xor i32 %2591, %2593
  %2595 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2596 = load i32, i32* %2595, align 4
  %2597 = shl i32 %2596, 16
  %2598 = xor i32 %2594, %2597
  %2599 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2600 = load i32, i32* %2599, align 4
  %2601 = lshr i32 %2600, 16
  %2602 = xor i32 %2598, %2601
  %2603 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2604 = load i32, i32* %2603, align 4
  %2605 = xor i32 %2602, %2604
  %2606 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2607 = load i32, i32* %2606, align 16
  %2608 = shl i32 %2607, 16
  %2609 = xor i32 %2605, %2608
  %2610 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2611 = load i32, i32* %2610, align 4
  %2612 = lshr i32 %2611, 16
  %2613 = xor i32 %2609, %2612
  %2614 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2615 = load i32, i32* %2614, align 4
  %2616 = xor i32 %2613, %2615
  %2617 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2618 = load i32, i32* %2617, align 8
  %2619 = shl i32 %2618, 16
  %2620 = xor i32 %2616, %2619
  %2621 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2622 = load i32, i32* %2621, align 8
  %2623 = lshr i32 %2622, 16
  %2624 = xor i32 %2620, %2623
  %2625 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2626 = load i32, i32* %2625, align 4
  %2627 = shl i32 %2626, 16
  %2628 = xor i32 %2624, %2627
  %2629 = load i32*, i32** %14, align 8
  %2630 = getelementptr inbounds i32, i32* %2629, i64 4
  store i32 %2628, i32* %2630, align 4
  %2631 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2632 = load i32, i32* %2631, align 16
  %2633 = shl i32 %2632, 16
  %2634 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2635 = load i32, i32* %2634, align 16
  %2636 = and i32 %2635, -65536
  %2637 = xor i32 %2633, %2636
  %2638 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2639 = load i32, i32* %2638, align 4
  %2640 = shl i32 %2639, 16
  %2641 = xor i32 %2637, %2640
  %2642 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2643 = load i32, i32* %2642, align 4
  %2644 = lshr i32 %2643, 16
  %2645 = xor i32 %2641, %2644
  %2646 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2647 = load i32, i32* %2646, align 4
  %2648 = and i32 %2647, -65536
  %2649 = xor i32 %2645, %2648
  %2650 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2651 = load i32, i32* %2650, align 8
  %2652 = shl i32 %2651, 16
  %2653 = xor i32 %2649, %2652
  %2654 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2655 = load i32, i32* %2654, align 8
  %2656 = xor i32 %2653, %2655
  %2657 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2658 = load i32, i32* %2657, align 4
  %2659 = lshr i32 %2658, 16
  %2660 = xor i32 %2656, %2659
  %2661 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2662 = load i32, i32* %2661, align 4
  %2663 = xor i32 %2660, %2662
  %2664 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2665 = load i32, i32* %2664, align 16
  %2666 = shl i32 %2665, 16
  %2667 = xor i32 %2663, %2666
  %2668 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2669 = load i32, i32* %2668, align 16
  %2670 = lshr i32 %2669, 16
  %2671 = xor i32 %2667, %2670
  %2672 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2673 = load i32, i32* %2672, align 16
  %2674 = xor i32 %2671, %2673
  %2675 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2676 = load i32, i32* %2675, align 4
  %2677 = shl i32 %2676, 16
  %2678 = xor i32 %2674, %2677
  %2679 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2680 = load i32, i32* %2679, align 8
  %2681 = shl i32 %2680, 16
  %2682 = xor i32 %2678, %2681
  %2683 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2684 = load i32, i32* %2683, align 8
  %2685 = lshr i32 %2684, 16
  %2686 = xor i32 %2682, %2685
  %2687 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2688 = load i32, i32* %2687, align 8
  %2689 = xor i32 %2686, %2688
  %2690 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2691 = load i32, i32* %2690, align 4
  %2692 = shl i32 %2691, 16
  %2693 = xor i32 %2689, %2692
  %2694 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2695 = load i32, i32* %2694, align 4
  %2696 = lshr i32 %2695, 16
  %2697 = xor i32 %2693, %2696
  %2698 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2699 = load i32, i32* %2698, align 4
  %2700 = and i32 %2699, -65536
  %2701 = xor i32 %2697, %2700
  %2702 = load i32*, i32** %14, align 8
  %2703 = getelementptr inbounds i32, i32* %2702, i64 5
  store i32 %2701, i32* %2703, align 4
  %2704 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2705 = load i32, i32* %2704, align 16
  %2706 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2707 = load i32, i32* %2706, align 8
  %2708 = xor i32 %2705, %2707
  %2709 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2710 = load i32, i32* %2709, align 8
  %2711 = lshr i32 %2710, 16
  %2712 = xor i32 %2708, %2711
  %2713 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2714 = load i32, i32* %2713, align 4
  %2715 = xor i32 %2712, %2714
  %2716 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2717 = load i32, i32* %2716, align 4
  %2718 = shl i32 %2717, 16
  %2719 = xor i32 %2715, %2718
  %2720 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2721 = load i32, i32* %2720, align 16
  %2722 = xor i32 %2719, %2721
  %2723 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2724 = load i32, i32* %2723, align 16
  %2725 = lshr i32 %2724, 16
  %2726 = xor i32 %2722, %2725
  %2727 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2728 = load i32, i32* %2727, align 4
  %2729 = shl i32 %2728, 16
  %2730 = xor i32 %2726, %2729
  %2731 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2732 = load i32, i32* %2731, align 4
  %2733 = lshr i32 %2732, 16
  %2734 = xor i32 %2730, %2733
  %2735 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2736 = load i32, i32* %2735, align 4
  %2737 = xor i32 %2734, %2736
  %2738 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2739 = load i32, i32* %2738, align 8
  %2740 = shl i32 %2739, 16
  %2741 = xor i32 %2737, %2740
  %2742 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2743 = load i32, i32* %2742, align 8
  %2744 = lshr i32 %2743, 16
  %2745 = xor i32 %2741, %2744
  %2746 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2747 = load i32, i32* %2746, align 8
  %2748 = xor i32 %2745, %2747
  %2749 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2750 = load i32, i32* %2749, align 4
  %2751 = shl i32 %2750, 16
  %2752 = xor i32 %2748, %2751
  %2753 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2754 = load i32, i32* %2753, align 4
  %2755 = xor i32 %2752, %2754
  %2756 = load i32*, i32** %14, align 8
  %2757 = getelementptr inbounds i32, i32* %2756, i64 6
  store i32 %2755, i32* %2757, align 4
  %2758 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2759 = load i32, i32* %2758, align 16
  %2760 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 0
  %2761 = load i32, i32* %2760, align 16
  %2762 = lshr i32 %2761, 16
  %2763 = xor i32 %2759, %2762
  %2764 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2765 = load i32, i32* %2764, align 4
  %2766 = shl i32 %2765, 16
  %2767 = xor i32 %2763, %2766
  %2768 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 1
  %2769 = load i32, i32* %2768, align 4
  %2770 = lshr i32 %2769, 16
  %2771 = xor i32 %2767, %2770
  %2772 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 2
  %2773 = load i32, i32* %2772, align 8
  %2774 = shl i32 %2773, 16
  %2775 = xor i32 %2771, %2774
  %2776 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2777 = load i32, i32* %2776, align 4
  %2778 = lshr i32 %2777, 16
  %2779 = xor i32 %2775, %2778
  %2780 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 3
  %2781 = load i32, i32* %2780, align 4
  %2782 = xor i32 %2779, %2781
  %2783 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2784 = load i32, i32* %2783, align 16
  %2785 = shl i32 %2784, 16
  %2786 = xor i32 %2782, %2785
  %2787 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 4
  %2788 = load i32, i32* %2787, align 16
  %2789 = xor i32 %2786, %2788
  %2790 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2791 = load i32, i32* %2790, align 4
  %2792 = lshr i32 %2791, 16
  %2793 = xor i32 %2789, %2792
  %2794 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 5
  %2795 = load i32, i32* %2794, align 4
  %2796 = xor i32 %2793, %2795
  %2797 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2798 = load i32, i32* %2797, align 8
  %2799 = shl i32 %2798, 16
  %2800 = xor i32 %2796, %2799
  %2801 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 6
  %2802 = load i32, i32* %2801, align 8
  %2803 = lshr i32 %2802, 16
  %2804 = xor i32 %2800, %2803
  %2805 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2806 = load i32, i32* %2805, align 4
  %2807 = shl i32 %2806, 16
  %2808 = xor i32 %2804, %2807
  %2809 = getelementptr inbounds [8 x i32], [8 x i32]* %11, i64 0, i64 7
  %2810 = load i32, i32* %2809, align 4
  %2811 = xor i32 %2808, %2810
  %2812 = load i32*, i32** %14, align 8
  %2813 = getelementptr inbounds i32, i32* %2812, i64 7
  store i32 %2811, i32* %2813, align 4
  %2814 = bitcast i32** %15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2814) #6
  %2815 = bitcast i32** %14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2815) #6
  %2816 = bitcast [8 x i32]* %13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %2816) #6
  %2817 = bitcast [8 x i32]* %12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %2817) #6
  %2818 = bitcast [8 x i32]* %11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %2818) #6
  %2819 = bitcast [8 x i32]* %10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %2819) #6
  %2820 = bitcast [8 x i32]* %9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %2820) #6
  %2821 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2821) #6
  %2822 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2822) #6
  %2823 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2823) #6
  %2824 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2824) #6
  ret void
}

declare dso_local i32 @php_hash_copy(i8*, i8*, i8*) #5

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn writeonly }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
